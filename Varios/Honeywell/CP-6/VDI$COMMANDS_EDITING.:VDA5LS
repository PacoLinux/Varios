VERSION A05

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:1    
        1        1        /*M* VDI$COMMANDS_EDITING - Command processors for editing cmds */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P*  NAME: VDI$COMMANDS_EDITING
       12       12            PURPOSE:
       13       13                Command processors for the editing commands.
       14       14            DESCRIPTION:
       15       15                This module contains several external routines:
       16       16
       17       17                VDI$CAFTER / VDI$COVER
       18       18                Command processor for the AFTER and OVER commands.
       19       19                Opens the source operand.  If this is an OVER command, will
       20       20                will delete the destination range first.
       21       21                By repeated calls to VDE$IRANGE and VDI$BINSERT,
       22       22                copy/move source ranges to destination ranges.
       23       23
       24       24                VDI$CCOPY / VDI$CMOVE
       25       25                Command processors for the COPY and MOVE commands.
       26       26                Saves info about the source operand in VD_6E.SOURCE.
       27       27
       28       28                VDI$CDELETE
       29       29                Command processor for the DELETE command, except for DELETE
       30       30                FILE commands.  By repeated calls to VDE$IRANGE and VDI$BDELETE,
       31       31                deletes the range specified by the operand's InTree.
       32       32                VDI$CDELETE_FID
       33       33                Command processor for the DELETE FILE command.
       34       34                Deletes the specified fid from disk.
       35       35
       36       36                VDI$CDISPLAY
       37       37                Command processor for the DISPLAY command.
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:2    
       38       38                Evaluates the selected range that is to be displayed by
       39       39                the Presenter.
       40       40
       41       41                VDI$CEDIT
       42       42                Command processor for the EDIT command.
       43       43                Evaluates the range for the new EditBlock, and checks for
       44       44                errors.
       45       45
       46       46                VDI$CSET_COUNT
       47       47                Handy little routine to set the numeric value of a predefined name.
       48       48                Used by most of the editing commands to set $SITE.
       49       49        */
       50       50
       51       51        /*D*  NAME: VDI$CAFTER
       52       52            PARAMETERS:
       53       53                None.
       54       54            INPUT:
       55       55                VD_6E.SOURCE.OPERAND - the source operand.
       56       56                VD_CURRENT_WINDOW$ must point to the VD$FILE_NODE at level 1 of the
       57       57                    Windows internal file of the VD$WINDOW_SPEC whose .OPERAND is the
       58       58                    destination operand.
       59       59            OUTPUT:
       60       60                VD_$SITES will be set to the number of edit sites found.
       61       61        */
       62       62
       63       63        VDI$CAFTER: PROC ALTRET;
       64       64
       65       65
       66       66        %INCLUDE VD_MACROS_M;
       67     2281        %INCLUDE VD_PERR_C;
       68     2429
       69     2430
       70     2431    1   DCL VDA$FCLOSE          ENTRY (1) ALTRET;
       71     2432    1   DCL VDA$FOPEN           ENTRY (4) ALTRET;
       72     2433    1   DCL VDA$FREKEY          ENTRY (5) ALTRET;
       73     2434    1   DCL VDE$IRANGE          ENTRY (2) ALTRET;
       74     2435    1   DCL VDI$BINSERT         ENTRY (4) ALTRET;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:3    
       75     2436    1   DCL VDI$BDELETE         ENTRY (3) ALTRET;
       76     2437    1   DCL VDI$CSET_COUNT      ENTRY (2) ALTRET;
       77     2438    1   DCL VDG$COMPARE_LOCS    ENTRY (3) ALTRET;
       78     2439    1   DCL VDG$ERRMSG          ENTRY (4) ALTRET;
       79     2440    1   DCL VDG$INFOMSG         ENTRY (4) ALTRET;
       80     2441    1   DCL VDG$WARNMSG         ENTRY (4) ALTRET;
       81     2442    1   DCL VDG$TEST_1_RANGE    ENTRY (2) ALTRET;
       82     2443    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
       83     2444    1   DCL VDG$OCOPY_RANGE     ENTRY (2) ALTRET;
       84     2445    1   DCL VDG$OCLEAR_RANGE    ENTRY (1) ALTRET;
       85     2446    1   DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
       86     2447    1   DCL VDG$OCOPY_LOCATION  ENTRY (2) ALTRET;
       87     2448    1   DCL VDG$EREPORT_ERROR   ENTRY (1);
       88     2449
       89     2450
       90     2451        %VD_6E (STCLASS = SYMREF);
       91     2487    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
       92     2488    1   DCL VD_EOF_DELETED BIT(36) SYMREF;
       93     2489        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
       94     2517        %VD$LOCATION (NAME=VD_LOC_$RECORDS_DELETED, STCLASS=SYMREF);
       95     2545        %VD$LOCATION (NAME=VD_LOC_$RECORDS_INSERTED, STCLASS=SYMREF);
       96     2573        %VD$NUMBER (NAME=VD_$RECORDS_DELETED, STCLASS=SYMREF);
       97     2618        %VD$NUMBER (NAME=VD_$RECORDS_INSERTED, STCLASS=SYMREF);
       98     2663        %VD$NUMBER (NAME=VD_$BY, STCLASS=SYMREF);
       99     2708        %VD$KEY (NAME=VD_KEY_NUMERIC_BOF, STCLASS=SYMREF);
      100     2722
      101     2723
      102     2724    1   DCL AFTER_CMD BIT(1) ALIGNED;
      103     2725    1   DCL CURR_WINDOW$ PTR;
      104     2726    1   DCL SRC_STRM$ PTR;
      105     2727    1   DCL DEST_STRM$ PTR;
      106     2728    1   DCL SRC_EDBLK$ PTR;
      107     2729    1   DCL DEST_EDBLK$ PTR;
      108     2730    1   DCL DEST_EVAL$ PTR;
      109     2731    1   DCL NSRC_FOUND UBIN;        /* # distinct source ranges found */
      110     2732    1   DCL NDEST_FOUND UBIN;       /* # distinct destination ranges found */
      111     2733    1   DCL NDELRECS UBIN;          /* Total # records deleted by entire operation */
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:4    
      112     2734    1   DCL NINSRECS UBIN;          /* Total # records inserted by operation */
      113     2735    1   DCL NBLOCKS_COPIED UBIN;    /* # blocks we tried to copy */
      114     2736    1   DCL RCCL SBIN;
      115     2737    1   DCL THIS_WILD$ PTR;
      116     2738    1   DCL INCR UBIN;
      117     2739    1   DCL S_FOUND BIT(1) ALIGNED;
      118     2740    1   DCL D_FOUND BIT(1) ALIGNED;
      119     2741    1   DCL SRC_FID$ PTR;
      120     2742    1   DCL DEST_FID$ PTR;
      121     2743    1   DCL SRC_KEY$ PTR;
      122     2744    1   DCL DEST_KEY$ PTR;
      123     2745    1   DCL BOF_KEY$ PTR;
      124     2746        %VD$RANGE (NAME=SAVE_SRC_RANGE, STCLASS=AUTO);  /* Owns objects!! */
      125     2815        %VD$RANGE (NAME=SAVE_DEST_RANGE, STCLASS=AUTO); /* Owns objects!! */
      126     2884    1   DCL DEST_LOC$ PTR;
      127     2885        %VD$RANGE (NAME=ACTUALLY_COPIED_SRC_RANGE, STCLASS=AUTO);   /* Owns objects!! */
      128     2954        %VD$KEY_NUMBER (NAME=REKEY_INCR, STCLASS=AUTO);
      129     2969
      130     2970
      131     2971        %VD$WINDOW_SPEC (NAME=CURR$WINDOW, STCLASS="BASED(CURR_WINDOW$)");
      132     3037        %VD$STREAM (NAME=SRC$STRM, STCLASS="BASED(SRC_STRM$)");
      133     3143        %VD$STREAM (NAME=DEST$STRM, STCLASS="BASED(DEST_STRM$)");
      134     3249        %VD$BLOCK_DESC (NAME=SRC$EDBLK, STCLASS="BASED(SRC_EDBLK$)");
      135     3396        %VD$BLOCK_DESC (NAME=DEST$EDBLK, STCLASS="BASED(DEST_EDBLK$)");
      136     3543        %VD$EVAL (NAME=SRC$EVAL, STCLASS="BASED(VD_6E.SOURCE.OPERAND.EVAL$)");
      137     3788        %VD$EVAL (NAME=DEST$EVAL, STCLASS="BASED(DEST_EVAL$)");
      138     4033        %VD$LOCATION (NAME=DEST$LOC, STCLASS="BASED(DEST_LOC$)");
      139     4061        %VD$WILD_STRINGS (STCLASS="BASED(VD_6E.WILD_STRINGS$)");
      140     4176        %VD$WILD_STRINGS (NAME=WILD, STCLASS="BASED(THIS_WILD$)");
      141     4291        %VD$TEXTC;
      142     4314        %VD$TEXTC_REMOTE;
      143     4375        %VD$KEY_NUMBER;
      144     4390        %VD$FILE_NODE;
      145     4483        %VD$IT_BLOCK_EXPR;
      146     4633
      147     4634
      148     4635
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:5    
      149     4636    1           AFTER_CMD = %TRUE;
      150     4637    1           GOTO AFTER_OVER_CMDS_COMMON_CODE;
      151     4638
      152     4639    1   VDI$COVER: ENTRY   ALTRET;
      153     4640    1           AFTER_CMD = %FALSE;
      154     4641
      155     4642
      156     4643    1   AFTER_OVER_CMDS_COMMON_CODE:
      157     4644    1           NSRC_FOUND = 0;
      158     4645    1           NDEST_FOUND = 0;
      159     4646    1           NDELRECS = 0;
      160     4647    1           NINSRECS = 0;
      161     4648    1           NBLOCKS_COPIED = 0;
      162     4649    1           SAVE_SRC_RANGE = %CLEAR;
      163     4650    1           SAVE_DEST_RANGE = %CLEAR;
      164     4651    1           ACTUALLY_COPIED_SRC_RANGE = %CLEAR;
      165     4652
      166     4653                /*
      167     4654                *   Set up the source and destination for the main loop.
      168     4655                */
      169     4656    1           SRC_STRM$ = VD_6E.SOURCE.OPERAND.STREAM$;
      170     4657    1           SRC_EDBLK$ = VD_6E.SOURCE.OPERAND.EDIT_BLOCK$;
      171     4658
      172     4659    1           CURR_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;
      173     4660    1           DEST_EVAL$ = CURR$WINDOW.OPERAND.EVAL$;
      174     4661    1           DEST_STRM$ = CURR$WINDOW.OPERAND.STREAM$;
      175     4662    1           DEST_EDBLK$ = CURR$WINDOW.OPERAND.EDIT_BLOCK$;
      176     4663
      177     4664    2           IF SRC_EDBLK$ = ADDR(NIL) THEN DO;
      178     4665    2              CALL VDG$WARNMSG (%E$WARN_NO_SOURCE_OPERAND);
      179     4666    2              CALL VDG$EREPORT_ERROR;
      180     4667    2              RETURN;
      181     4668    2              END;
      182     4669
      183     4670    1           CALL VDA$FOPEN (SRC$STRM, SRC$EDBLK.FILE_KEY, 0, SRC$EDBLK.OPTIONS)
      184     4671    1             ALTRET (FOPEN_FAILED);
      185     4672
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:6    
      186     4673    1           IF SRC$EDBLK.OPTIONS.EXIST# = %EX_NEW THEN
      187     4674    1              SRC$EDBLK.OPTIONS.EXIST# = %EX_OLD;
      188     4675
      189     4676                /*
      190     4677                *   Main loop.
      191     4678                */
      192     4679
      193     4680    1           S_FOUND = %TRUE;
      194     4681    1           D_FOUND = %TRUE;
      195     4682
      196     4683    1   MAIN_LOOP:
      197     4684    2           DO WHILE (S_FOUND AND D_FOUND );
      198     4685    2              CALL VDG$OCLEAR_RANGE (SAVE_SRC_RANGE)
      199     4686    2                ALTRET (OCLEAR_FAILED);
      200     4687    2              CALL VDG$OCOPY_RANGE (SRC$EVAL.RANGE, SAVE_SRC_RANGE)
      201     4688    2                ALTRET (OCOPY_RANGE_FAILED);
      202     4689    2              CALL VDG$OCLEAR_RANGE (SAVE_DEST_RANGE)
      203     4690    2                ALTRET (OCLEAR_FAILED);
      204     4691    2              CALL VDG$OCOPY_RANGE (DEST$EVAL.RANGE, SAVE_DEST_RANGE)
      205     4692    2                ALTRET (OCOPY_RANGE_FAILED);
      206     4693
      207     4694    2              SRC$EVAL.STATE# = %EVST_INITIAL;
      208     4695    2              CALL VDE$IRANGE (VD_6E.SOURCE.OPERAND, S_FOUND)
      209     4696    2                ALTRET (IRANGE_FAILED);
      210     4697
      211     4698
      212     4699                   /*
      213     4700                   * If we're copying from the scratch string file, and there
      214     4701                   * are some wildcards to fill in with pattern ones, set a flag
      215     4702                   * so that VDE$IPATTERN knows to do that.
      216     4703                   */
      217     4704
      218     4705    2              IF SRC$EDBLK.OPTIONS.STRUCTURE$ = VD_6E.STRUCTURE_SCRATCH$
      219     4706    2                AND VD_6E.WILD_STRINGS$ ~= ADDR(NIL) THEN
      220     4707    3                 IF VD$WILD_STRINGS.N_WILDCARDS# > 0 THEN DO;
      221     4708    3                    VD_6E.SOURCE.WILD_STRINGS = %TRUE;
      222     4709
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:7    
      223     4710                         /*
      224     4711                         * Remove any existing substitutions first.
      225     4712                         */
      226     4713
      227     4714    3                    THIS_WILD$ = PINCRW (VD_6E.WILD_STRINGS$,
      228     4715    3                      SIZEW(WILD.W) * VD$WILD_STRINGS.N_WILDCARDS#);
      229     4716
      230     4717    4                    DO UNTIL THIS_WILD$ = VD_6E.WILD_STRINGS$;
      231     4718    4                       THIS_WILD$ = PINCRW(THIS_WILD$, -SIZEW(WILD.W));
      232     4719    4                       IF WILD.W.RANGE.ENDD > WILD.W.RANGE.START THEN
      233     4720    4                          CALL VDI$BDELETE (WILD.W.RANGE, SRC$STRM, SRC$EDBLK)
      234     4721    4                            ALTRET (BDELETE_FAILED);
      235     4722    4                       END;
      236     4723
      237     4724    3                    VD_6E.SOURCE.WILD_STRINGS = %TRUE;
      238     4725    3                    END;
      239     4726
      240     4727    2              DEST$EVAL.STATE# = %EVST_INITIAL;
      241     4728    2              CALL VDE$IRANGE (CURR$WINDOW.OPERAND, D_FOUND)
      242     4729    3              WHENALTRETURN DO;
      243     4730    3                 VD_6E.SOURCE.WILD_STRINGS = %FALSE;
      244     4731    3                 GOTO IRANGE_FAILED;
      245     4732    3                 END;
      246     4733                   /* Eval-stack may have changed:  fetch ptr to top-of-stack again */
      247     4734    2              DEST_EVAL$ = CURR$WINDOW.OPERAND.EVAL$;
      248     4735
      249     4736    2              NSRC_FOUND = NSRC_FOUND + BITBIN(S_FOUND);
      250     4737    2              NDEST_FOUND = NDEST_FOUND + BITBIN(D_FOUND);
      251     4738    2              IF NOT S_FOUND
      252     4739    2                AND NOT VD_6E.SOURCE.MOVE
      253     4740    2                AND D_FOUND
      254     4741    3                AND NSRC_FOUND = 1 THEN DO;
      255     4742                      /* Use same source block again */
      256     4743    3                 S_FOUND = %TRUE;
      257     4744    3                 IF VD_6E.SOURCE.WILD_STRINGS THEN EXIT;
      258     4745    3                 CALL VDG$OCLEAR_RANGE (SRC$EVAL.RANGE)
      259     4746    3                   ALTRET (OCLEAR_FAILED);
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:8    
      260     4747    3                 SRC$EVAL.RANGE = SAVE_SRC_RANGE;
      261     4748    3                 SAVE_SRC_RANGE = %CLEAR;
      262     4749    3                 END;
      263     4750
      264     4751    2              VD_6E.SOURCE.WILD_STRINGS = %FALSE;
      265     4752    2              IF NOT D_FOUND
      266     4753    2                AND S_FOUND
      267     4754    3                AND NDEST_FOUND = 1 THEN DO;
      268     4755                      /* Use same destination block again */
      269     4756    3                 CALL VDG$OCLEAR_RANGE (DEST$EVAL.RANGE) ALTRET (OCLEAR_FAILED);
      270     4757    3                 DEST$EVAL.RANGE = SAVE_DEST_RANGE;
      271     4758    3                 SAVE_DEST_RANGE = %CLEAR;
      272     4759    3                 D_FOUND = %TRUE;
      273     4760    3                 END;
      274     4761
      275     4762    2              IF S_FOUND AND D_FOUND THEN
      276     4763    3   DO_COPY_OPERATION: DO;
      277     4764                      %GETKEY (KEY=SRC$STRM.FILE_KEY, PTR=SRC_FID$);
      278     4774                      %GETKEY (KEY=DEST$STRM.FILE_KEY, PTR=DEST_FID$);
      279     4784                      %GETKEY (KEY=SRC$EVAL.RANGE.START.KEY, INDX="%(LVL_EXT_REC-1)",
      280     4785                      PTR=SRC_KEY$);
      281     4795
      282     4796    3                 IF SRC_FID$->VD$TEXTC.BYTES = DEST_FID$->VD$TEXTC.BYTES THEN
      283     4797    4   SAME_FILE:    DO;
      284     4798                         %GETKEY (KEY=DEST$EVAL.RANGE.START.KEY, INDX="%(LVL_EXT_REC-1)",
      285     4799                         PTR=DEST_KEY$);
      286     4809                         %GETKEY (KEY=VD_KEY_NUMERIC_BOF, PTR=BOF_KEY$);
      287     4819    4                    IF NOT AFTER_CMD
      288     4820    4                      AND (SRC_KEY$->VD$TEXTC.BYTES = BOF_KEY$->VD$TEXTC.BYTES)
      289     4821    4                      AND SRC$EVAL.RANGE.ENDD.EOF
      290     4822    4                      AND (DEST_KEY$->VD$TEXTC.BYTES = BOF_KEY$->VD$TEXTC.BYTES)
      291     4823    4                      AND DEST$EVAL.RANGE.ENDD.EOF THEN
      292     4824    5   REKEY_FILE:      DO;
      293     4825                            /*
      294     4826                            * User is copying file over itself:  rekey the file.
      295     4827                            * This isn't really an OVER command, but an insertion
      296     4828                            *     into a new file.  The Accessor has a special
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:9    
      297     4829                            *     routine to do this.
      298     4830                            */
      299     4831    5                       REKEY_INCR.TYPE# = %KT_EDITKEY;
      300     4832    5                       REKEY_INCR.REP# = %REP_LOCAL;
      301     4833    5                       REKEY_INCR.LENGTH# = %NB_NUMERIC_KEY;
      302     4834    5                       REKEY_INCR.BYTES# = ADDR(CURR$WINDOW.OPERAND.INTREE$->
      303     4835    5                         VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR)->VD$KEY_NUMBER.BYTES#;
      304     4836    6                       IF REKEY_INCR.BYTES# = 0 THEN DO;
      305     4837    6                          REKEY_INCR.BYTES# = VD_$BY.V#;
      306     4838    6                          IF REKEY_INCR.BYTES# = 0 THEN
      307     4839    6                             REKEY_INCR.BYTES# = %DFLT_$BY;
      308     4840    6                          END;
      309     4841    5                       CALL VDG$OCLEAR_RANGE (DEST$EVAL.RANGE) ALTRET (OCLEAR_FAILED);
      310     4842        /* Save the previous position, just to be nice. */
      311     4843    5                       DEST$EVAL.RANGE = SAVE_DEST_RANGE;
      312     4844    5                       SAVE_DEST_RANGE = %CLEAR;
      313     4845    5                       CALL VDA$FREKEY (SRC$STRM, DEST$STRM, REKEY_INCR)
      314     4846    5                         ALTRET (FREKEY_FAILED);
      315     4847    5                       NBLOCKS_COPIED = NBLOCKS_COPIED + 1;
      316     4848    5                       GOTO MAIN_LOOP;
      317     4849    5                       END REKEY_FILE;
      318     4850
      319     4851                         /* Check for overlapping source and destination */
      320     4852    4                    IF AFTER_CMD THEN
      321     4853    4                       DEST_LOC$ = ADDR(DEST$EVAL.RANGE.ENDD);
      322     4854    4                    ELSE
      323     4855    4                       DEST_LOC$ = ADDR(DEST$EVAL.RANGE.START);
      324     4856
      325     4857    4                    CALL VDG$COMPARE_LOCS (DEST$EVAL.RANGE.ENDD,
      326     4858    4                      SRC$EVAL.RANGE.START, RCCL)
      327     4859    4                      ALTRET (COMPARE_LOCS_FAILED);
      328     4860
      329     4861    5                    IF RCCL > %RCCL_EQUAL THEN DO;
      330     4862    5                       CALL VDG$COMPARE_LOCS (DEST$LOC, SRC$EVAL.RANGE.ENDD, RCCL)
      331     4863    5                         ALTRET (COMPARE_LOCS_FAILED);
      332     4864    5                       IF RCCL < %RCCL_EQUAL THEN
      333     4865    5                          GOTO OVERLAPPING_BLOCKS_FAILURE;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:10   
      334     4866    5                       END;
      335     4867    4                    END SAME_FILE;
      336     4868
      337     4869                      /* Whew!!  Finally, do the actual copy/move!! */
      338     4870    4                 IF NOT AFTER_CMD THEN DO;
      339     4871                         /* Delete destination block */
      340     4872    4                    VD_EOF_DELETED = %TRUE; /* Allow BDELETE to indicate */
      341     4873    4                    CALL VDI$BDELETE (DEST$EVAL.RANGE, DEST$STRM, DEST$EDBLK)
      342     4874    4                      ALTRET (BDELETE_FAILED);
      343     4875    4                    IF VD_$RECORDS_DELETED.V# >= 0 THEN
      344     4876    4                       NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;
      345     4877    4                    CALL VDG$TEST_1_RANGE (CURR$WINDOW.OPERAND.INTREE$ ->
      346     4878    4                      VD$IT_BLOCK_EXPR, AFTER_CMD);
      347     4879    4                    END;
      348     4880
      349     4881    3                 CALL VDI$BINSERT (SRC$EVAL.RANGE, SRC$STRM, DEST$EVAL.RANGE,
      350     4882    3                   DEST$STRM)
      351     4883    3                   ALTRET (BINSERT_FAILED);
      352     4884    3                 IF VD_$RECORDS_INSERTED.V# < 0 THEN EXIT DO_COPY_OPERATION;
      353     4885    3                 NINSRECS = NINSRECS + VD_$RECORDS_INSERTED.V#;
      354     4886    3                 NBLOCKS_COPIED = NBLOCKS_COPIED + 1;
      355     4887
      356     4888    3                 IF VD_6E.SOURCE.MOVE THEN
      357     4889    4   DELETE_SOURCE: DO;
      358     4890                         /*
      359     4891                         *   Delete source block.  At this point, SRC$EVAL.RANGE
      360     4892                         *        specifies the data actually copied.
      361     4893                         */
      362     4894    4                    CALL VDI$BDELETE (SRC$EVAL.RANGE, SRC$STRM, SRC$EDBLK)
      363     4895    4                      ALTRET (BDELETE_FAILED);
      364     4896    4                    IF VD_$RECORDS_DELETED.V# > 0 THEN
      365     4897    4                       NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;
      366     4898    4                    END DELETE_SOURCE;
      367     4899    3                 END DO_COPY_OPERATION;
      368     4900
      369     4901    2              ELSE
      370     4902                      /*
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:11   
      371     4903                      *     We ran out of source, destination, or both.
      372     4904                      */
      373     4905    3                 IF D_FOUND THEN DO;
      374     4906                         /* We ran out of source blocks */
      375     4907    3                    CALL CUTOFF_OR_RAN_DRY_CONDITION (%E$NO_SOURCE_FOR_DEST)
      376     4908    3                      ALTRET (CUTOFF_OR_RAN_DRY_FAILED);
      377     4909    3                    GOTO BINSERT_FAILED;
      378     4910    3                    END;
      379     4911    2                 ELSE
      380     4912    3                    IF S_FOUND THEN DO;
      381     4913                            /* We ran out of destination blocks */
      382     4914    3                       CALL CUTOFF_OR_RAN_DRY_CONDITION (%E$NO_DEST_FOR_SOURCE)
      383     4915    3                         ALTRET (CUTOFF_OR_RAN_DRY_FAILED);
      384     4916    3                       GOTO BINSERT_FAILED;
      385     4917    3                       END;
      386     4918
      387     4919    2              END MAIN_LOOP;
      388     4920
      389     4921
      390     4922    1           CALL SET_COUNTS_INFORM_AND_CLEANUP
      391     4923    1             ALTRET (SET_COUNTS_INFORM_CU_FAILED);
      392     4924
      393     4925    1           RETURN;
      394     4926
      395     4927
      396     4928                %BOX (TITLE="Error Handlers");

              4940    1   /***************************************************************************
              4942    1    *                                                                         *
              4946    1            *                               Error Handlers                            *
              4948    1            *                                                                         *
              4950    1           ***************************************************************************/

      397     4954
      398     4955    2           DO %NEVER;
      399     4956    2   OVERLAPPING_BLOCKS_FAILURE:
      400     4957    2              CALL VDG$ERRMSG (%E$OVERLAP_BLOCK);
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:12   
      401     4958    2              END;    /* Do Never */
      402     4959
      403     4960
      404     4961    2           DO %NEVER;
      405     4962    2   BINSERT_FAILED:
      406     4963        /*
      407     4964        **           *   At this point, ACTUALLY_COPIED_SRC_RANGE describes what
      408     4965        **           *   was actually copied; SRC$EVAL describes what
      409     4966        **           *   was intended to be copied.  Now set
      410     4967        **           *   SRC$EVAL.RANGE to describe the source not copied.
      411     4968        **           *\
      412     4969        **           CALL VDG$OCLEAR_LOCATION (SRC$EVAL.RANGE.START)
      413     4970        **             ALTRET (OCLEAR_FAILED);
      414     4971        **           CALL VDG$OCOPY_LOCATION (ACTUALLY_COPIED_SRC_RANGE.ENDD,
      415     4972        **             SRC$EVAL.RANGE.START)
      416     4973        **             ALTRET (OCOPY_LOCATION_FAILED);
      417     4974        */
      418     4975    3              IF VD_6E.SOURCE.MOVE THEN DO;
      419     4976                      /* Delete source block */
      420     4977    3                 CALL VDI$BDELETE (SRC$EVAL.RANGE, SRC$STRM, SRC$EDBLK)
      421     4978    3                   ALTRET (BDELETE_FAILED);
      422     4979    3                 IF VD_$RECORDS_DELETED.V# >= 0 THEN
      423     4980    3                    NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;
      424     4981    3                 END;
      425     4982                /* For star #30893, when we are reading user commands ala
      426     4983                   READ fid or M$SI, and we encounter a "No source found"
      427     4984                   or "No destination found" error, we want to continue with
      428     4985                   the user commands, intead of halting. */
      429     4986    2              CALL SET_COUNTS_INFORM_AND_CLEANUP; /* Ignore Altreturn */
      430     4987    2              RETURN;
      431     4988    2              END;     /* Do Never */
      432     4989
      433     4990
      434     4991    1   COMPARE_LOCS_FAILED: ;
      435     4992    1   IRANGE_FAILED: ;
      436     4993    1   CUTOFF_OR_RAN_DRY_FAILED: ;
      437     4994    1   BDELETE_FAILED: ;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:13   
      438     4995    1           CALL SET_COUNTS_INFORM_AND_CLEANUP; /* Ignore altreturn */
      439     4996
      440     4997    1   FOPEN_FAILED: ;
      441     4998    1   FREKEY_FAILED: ;
      442     4999    1   SET_COUNTS_INFORM_CU_FAILED: ;
      443     5000    1   OALLOC_FAILED: ;
      444     5001    1   OCLEAR_FAILED: ;
      445     5002    1   OCOPY_RANGE_FAILED: ;
      446     5003    1   OCOPY_LOCATION_FAILED: ;
      447     5004    1           ALTRETURN;
      448     5005
      449     5006                %BOX (TITLE=CUTOFF_OR_RAN_DRY_CONDITION, PAGE=YES);
              5014    1
              5018    1   /***************************************************************************
              5020    1    *                                                                         *
              5024    1            *                        CUTOFF_OR_RAN_DRY_CONDITION                      *
              5026    1            *                                                                         *
              5028    1           ***************************************************************************/

      450     5032    1   CUTOFF_OR_RAN_DRY_CONDITION: PROC (ERRCODE) ALTRET;
      451     5033    2   DCL ERRCODE UBIN;   /* Either %E$NO_DEST_FOR_SOURCE or %E$NO_SOURCE_FOR_DEST */
      452     5034
      453     5035
      454     5036    2           CALL VDG$INFOMSG (ERRCODE, NBLOCKS_COPIED);
      455     5037    2           CALL VDG$EREPORT_ERROR;
      456     5038
      457     5039                /* Shrink SRC$EVAL.RANGE to describe what was copied -- nothing! */
      458     5040    2           CALL VDG$OCLEAR_LOCATION (SRC$EVAL.RANGE.ENDD)
      459     5041    2             ALTRET (OCLEAR_LOCATION_FAILED);
      460     5042    2           CALL VDG$OCOPY_LOCATION (SRC$EVAL.RANGE.START, SRC$EVAL.RANGE.ENDD)
      461     5043    2             ALTRET (OCOPY_LOCATION_FAILED);
      462     5044
      463     5045    2           RETURN;
      464     5046
      465     5047
      466     5048    2   OALLOC_FAILED: ;
      467     5049    2   OCOPY_LOCATION_FAILED: ;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:14   
      468     5050    2   OCLEAR_LOCATION_FAILED: ;
      469     5051    2           ALTRETURN;
      470     5052
      471     5053    2   END CUTOFF_OR_RAN_DRY_CONDITION;
      472     5054
      473     5055                %BOX (TITLE=SET_COUNTS_INFORM_AND_CLEANUP, PAGE=YES);
              5063    2
              5067    2   /***************************************************************************
              5069    2    *                                                                         *
              5073    2            *                       SET_COUNTS_INFORM_AND_CLEANUP                     *
              5075    2            *                                                                         *
              5077    2           ***************************************************************************/

      474     5081
      475     5082        /*I* NAME: SET_COUNTS_INFORM_AND_CLEANUP
      476     5083            PARAMETERS:
      477     5084                None.
      478     5085            INPUT:
      479     5086                NBLOCKS_COPIED
      480     5087                SAVE_SRC_RANGE
      481     5088                SAVE_DEST_RANGE
      482     5089            OUTPUT:
      483     5090            DESCRIPTION:
      484     5091                Set new value of predefined name $SITES.
      485     5092                Report # blocks successfully copied to the user.
      486     5093                Free any dynamic objects owned by our auto storage.
      487     5094        */
      488     5095
      489     5096    1   SET_COUNTS_INFORM_AND_CLEANUP: PROC ALTRET;
      490     5097
      491     5098    2   DCL HAD_ERROR BIT(1) ALIGNED;
      492     5099
      493     5100
      494     5101
      495     5102    2           HAD_ERROR = %FALSE;
      496     5103
      497     5104    2           CALL VDI$CSET_COUNT (VD_LOC_$SITES, NBLOCKS_COPIED)
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:15   
      498     5105    3           WHENALTRETURN DO;
      499     5106    3              HAD_ERROR = %TRUE;
      500     5107    3              END;
      501     5108
      502     5109    2           RCCL = %E$INFO_N_BLOCKS_COPIED;
      503     5110    2           IF NBLOCKS_COPIED = 1 THEN
      504     5111    2              RCCL = %E$INFO_1_BLOCK_COPIED;
      505     5112    3           IF VD_6E.SOURCE.MOVE THEN DO;
      506     5113    3              RCCL = %E$INFO_N_BLOCKS_MOVED;
      507     5114    3              IF NBLOCKS_COPIED = 1 THEN
      508     5115    3                 RCCL = %E$INFO_1_BLOCK_MOVED;
      509     5116    3              END;
      510     5117    2           IF NBLOCKS_COPIED = 0 THEN
      511     5118    2              NBLOCKS_COPIED = BITBIN ('3116157000'O);
      512     5119    2           CALL VDG$INFOMSG (RCCL, NBLOCKS_COPIED);
      513     5120    2           CALL VDG$EREPORT_ERROR;
      514     5121
      515     5122    2           CALL VDI$CSET_COUNT (VD_LOC_$RECORDS_DELETED, NDELRECS)
      516     5123    3           WHENALTRETURN DO; HAD_ERROR = %TRUE; END;
      517     5124    2           CALL VDI$CSET_COUNT (VD_LOC_$RECORDS_INSERTED, NINSRECS)
      518     5125    3           WHENALTRETURN DO; HAD_ERROR = %TRUE; END;
      519     5126
      520     5127                /* Free objects we own */
      521     5128    2           CALL VDG$OCLEAR_RANGE (SAVE_SRC_RANGE)
      522     5129    2             ALTRET (OCLEAR_RANGE_FAILED);
      523     5130    2           CALL VDG$OCLEAR_RANGE (SAVE_DEST_RANGE)
      524     5131    2             ALTRET (OCLEAR_RANGE_FAILED);
      525     5132
      526     5133    2           CALL VDA$FCLOSE (SRC$STRM) ALTRET (FCLOSE_FAILED);
      527     5134    2           IF HAD_ERROR THEN
      528     5135    2              ALTRETURN;
      529     5136    2           RETURN;
      530     5137
      531     5138
      532     5139    2   FCLOSE_FAILED: ;
      533     5140    2   OALLOC_FAILED: ;
      534     5141    2   OCLEAR_RANGE_FAILED: ;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:16   
      535     5142    2           ALTRETURN;
      536     5143
      537     5144    2   END SET_COUNTS_INFORM_AND_CLEANUP;
      538     5145
      539     5146    1   END VDI$CAFTER;
      540     5147        %EOD;

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:17   
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CAFTER.

   Procedure VDI$CAFTER requires 652 words for executable code.
   Procedure VDI$CAFTER requires 88 words of local(AUTO) storage.

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:18   

 Object Unit name= VDI$CAFTER                                 File name= VDI$COMMANDS_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:29:54.52 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  VDI$CAFTER
    1   Proc  even  none   652   1214  VDI$CAFTER
    2  RoData even  none    15     17  VDI$CAFTER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        0  VDI$CAFTER
     1      5          yes     yes      Std        0  VDI$COVER
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:19   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 VDG$WARNMSG
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       5 VDA$FREKEY
 yes     yes           Std       2 VDG$TEST_1_RANGE
 yes     yes           Std       4 VDI$BINSERT
 yes     yes           Std       4 VDA$FOPEN
 yes     yes           Std       1 VDG$OCLEAR_RANGE
 yes     yes           Std       3 VDG$COMPARE_LOCS
 yes     yes           Std       4 VDG$ERRMSG
 yes     yes           Std       2 VDG$OCOPY_RANGE
 yes     yes           Std       2 VDE$IRANGE
 yes     yes           Std       3 VDI$BDELETE
 yes     yes           Std       4 VDG$INFOMSG
 yes     yes           Std       1 VDG$OCLEAR_LOCATION
 yes     yes           Std       2 VDG$OCOPY_LOCATION
 yes     yes           Std       2 VDI$CSET_COUNT
 yes     yes           Std       1 VDA$FCLOSE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_CURRENT_WINDOW$                    VD_EOF_DELETED
     VD_LOC_$SITES                         VD_LOC_$RECORDS_DELETED               VD_LOC_$RECORDS_INSERTED
     VD_$RECORDS_DELETED                   VD_$RECORDS_INSERTED                  VD_$BY
     VD_KEY_NUMERIC_BOF                    B_VECTNIL
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:20   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:21   


        1        1        /*M* VDI$COMMANDS_EDITING - Command processors for editing cmds */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* MCR=NO, DMC=YES */
        9        9        /*T*/
       10       10
       11       11        /*P*  NAME: VDI$COMMANDS_EDITING
       12       12            PURPOSE:
       13       13                Command processors for the editing commands.
       14       14            DESCRIPTION:
       15       15                This module contains several external routines:
       16       16
       17       17                VDI$CAFTER / VDI$COVER
       18       18                Command processor for the AFTER and OVER commands.
       19       19                Opens the source operand.  If this is an OVER command, will
       20       20                will delete the destination range first.
       21       21                By repeated calls to VDE$IRANGE and VDI$BINSERT,
       22       22                copy/move source ranges to destination ranges.
       23       23
       24       24                VDI$CCOPY / VDI$CMOVE
       25       25                Command processors for the COPY and MOVE commands.
       26       26                Saves info about the source operand in VD_6E.SOURCE.
       27       27
       28       28                VDI$CDELETE
       29       29                Command processor for the DELETE command, except for DELETE
       30       30                FILE commands.  By repeated calls to VDE$IRANGE and VDI$BDELETE,
       31       31                deletes the range specified by the operand's InTree.
       32       32                VDI$CDELETE_FID
       33       33                Command processor for the DELETE FILE command.
       34       34                Deletes the specified fid from disk.
       35       35
       36       36                VDI$CDISPLAY
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:22   
       37       37                Command processor for the DISPLAY command.
       38       38                Evaluates the selected range that is to be displayed by
       39       39                the Presenter.
       40       40
       41       41                VDI$CEDIT
       42       42                Command processor for the EDIT command.
       43       43                Evaluates the range for the new EditBlock, and checks for
       44       44                errors.
       45       45
       46       46                VDI$CSET_COUNT
       47       47                Handy little routine to set the numeric value of a predefined name.
       48       48                Used by most of the editing commands to set $SITE.
       49       49        */
       50       50
       51       51        /*D*  NAME: VDI$CAFTER
       52       52            PARAMETERS:
       53       53                None.
       54       54            INPUT:
       55       55                VD_6E.SOURCE.OPERAND - the source operand.
       56       56                VD_CURRENT_WINDOW$ must point to the VD$FILE_NODE at level 1 of the
       57       57                    Windows internal file of the VD$WINDOW_SPEC whose .OPERAND is the
       58       58                    destination operand.
       59       59            OUTPUT:
       60       60                VD_$SITES will be set to the number of edit sites found.
       61       61        */
       62       62
       63       63        VDI$CAFTER: PROC ALTRET;

     63  1 000000   000000 700200 xent  VDI$CAFTER   TSX0  ! X66_AUTO_0
         1 000001   000130 000000                    ZERO    88,0

       64       64
       65       65
       66       66        %INCLUDE VD_MACROS_M;
       67     2281        %INCLUDE VD_PERR_C;
       68     2429
       69     2430
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:23   
       70     2431    1   DCL VDA$FCLOSE          ENTRY (1) ALTRET;
       71     2432    1   DCL VDA$FOPEN           ENTRY (4) ALTRET;
       72     2433    1   DCL VDA$FREKEY          ENTRY (5) ALTRET;
       73     2434    1   DCL VDE$IRANGE          ENTRY (2) ALTRET;
       74     2435    1   DCL VDI$BINSERT         ENTRY (4) ALTRET;
       75     2436    1   DCL VDI$BDELETE         ENTRY (3) ALTRET;
       76     2437    1   DCL VDI$CSET_COUNT      ENTRY (2) ALTRET;
       77     2438    1   DCL VDG$COMPARE_LOCS    ENTRY (3) ALTRET;
       78     2439    1   DCL VDG$ERRMSG          ENTRY (4) ALTRET;
       79     2440    1   DCL VDG$INFOMSG         ENTRY (4) ALTRET;
       80     2441    1   DCL VDG$WARNMSG         ENTRY (4) ALTRET;
       81     2442    1   DCL VDG$TEST_1_RANGE    ENTRY (2) ALTRET;
       82     2443    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
       83     2444    1   DCL VDG$OCOPY_RANGE     ENTRY (2) ALTRET;
       84     2445    1   DCL VDG$OCLEAR_RANGE    ENTRY (1) ALTRET;
       85     2446    1   DCL VDG$OCLEAR_LOCATION ENTRY (1) ALTRET;
       86     2447    1   DCL VDG$OCOPY_LOCATION  ENTRY (2) ALTRET;
       87     2448    1   DCL VDG$EREPORT_ERROR   ENTRY (1);
       88     2449
       89     2450
       90     2451        %VD_6E (STCLASS = SYMREF);
       91     2487    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
       92     2488    1   DCL VD_EOF_DELETED BIT(36) SYMREF;
       93     2489        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
       94     2517        %VD$LOCATION (NAME=VD_LOC_$RECORDS_DELETED, STCLASS=SYMREF);
       95     2545        %VD$LOCATION (NAME=VD_LOC_$RECORDS_INSERTED, STCLASS=SYMREF);
       96     2573        %VD$NUMBER (NAME=VD_$RECORDS_DELETED, STCLASS=SYMREF);
       97     2618        %VD$NUMBER (NAME=VD_$RECORDS_INSERTED, STCLASS=SYMREF);
       98     2663        %VD$NUMBER (NAME=VD_$BY, STCLASS=SYMREF);
       99     2708        %VD$KEY (NAME=VD_KEY_NUMERIC_BOF, STCLASS=SYMREF);
      100     2722
      101     2723
      102     2724    1   DCL AFTER_CMD BIT(1) ALIGNED;
      103     2725    1   DCL CURR_WINDOW$ PTR;
      104     2726    1   DCL SRC_STRM$ PTR;
      105     2727    1   DCL DEST_STRM$ PTR;
      106     2728    1   DCL SRC_EDBLK$ PTR;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:24   
      107     2729    1   DCL DEST_EDBLK$ PTR;
      108     2730    1   DCL DEST_EVAL$ PTR;
      109     2731    1   DCL NSRC_FOUND UBIN;        /* # distinct source ranges found */
      110     2732    1   DCL NDEST_FOUND UBIN;       /* # distinct destination ranges found */
      111     2733    1   DCL NDELRECS UBIN;          /* Total # records deleted by entire operation */
      112     2734    1   DCL NINSRECS UBIN;          /* Total # records inserted by operation */
      113     2735    1   DCL NBLOCKS_COPIED UBIN;    /* # blocks we tried to copy */
      114     2736    1   DCL RCCL SBIN;
      115     2737    1   DCL THIS_WILD$ PTR;
      116     2738    1   DCL INCR UBIN;
      117     2739    1   DCL S_FOUND BIT(1) ALIGNED;
      118     2740    1   DCL D_FOUND BIT(1) ALIGNED;
      119     2741    1   DCL SRC_FID$ PTR;
      120     2742    1   DCL DEST_FID$ PTR;
      121     2743    1   DCL SRC_KEY$ PTR;
      122     2744    1   DCL DEST_KEY$ PTR;
      123     2745    1   DCL BOF_KEY$ PTR;
      124     2746        %VD$RANGE (NAME=SAVE_SRC_RANGE, STCLASS=AUTO);  /* Owns objects!! */
      125     2815        %VD$RANGE (NAME=SAVE_DEST_RANGE, STCLASS=AUTO); /* Owns objects!! */
      126     2884    1   DCL DEST_LOC$ PTR;
      127     2885        %VD$RANGE (NAME=ACTUALLY_COPIED_SRC_RANGE, STCLASS=AUTO);   /* Owns objects!! */
      128     2954        %VD$KEY_NUMBER (NAME=REKEY_INCR, STCLASS=AUTO);
      129     2969
      130     2970
      131     2971        %VD$WINDOW_SPEC (NAME=CURR$WINDOW, STCLASS="BASED(CURR_WINDOW$)");
      132     3037        %VD$STREAM (NAME=SRC$STRM, STCLASS="BASED(SRC_STRM$)");
      133     3143        %VD$STREAM (NAME=DEST$STRM, STCLASS="BASED(DEST_STRM$)");
      134     3249        %VD$BLOCK_DESC (NAME=SRC$EDBLK, STCLASS="BASED(SRC_EDBLK$)");
      135     3396        %VD$BLOCK_DESC (NAME=DEST$EDBLK, STCLASS="BASED(DEST_EDBLK$)");
      136     3543        %VD$EVAL (NAME=SRC$EVAL, STCLASS="BASED(VD_6E.SOURCE.OPERAND.EVAL$)");
      137     3788        %VD$EVAL (NAME=DEST$EVAL, STCLASS="BASED(DEST_EVAL$)");
      138     4033        %VD$LOCATION (NAME=DEST$LOC, STCLASS="BASED(DEST_LOC$)");
      139     4061        %VD$WILD_STRINGS (STCLASS="BASED(VD_6E.WILD_STRINGS$)");
      140     4176        %VD$WILD_STRINGS (NAME=WILD, STCLASS="BASED(THIS_WILD$)");
      141     4291        %VD$TEXTC;
      142     4314        %VD$TEXTC_REMOTE;
      143     4375        %VD$KEY_NUMBER;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:25   
      144     4390        %VD$FILE_NODE;
      145     4483        %VD$IT_BLOCK_EXPR;
      146     4633
      147     4634
      148     4635
      149     4636    1           AFTER_CMD = %TRUE;

   4636  1 000002   400000 236003                    LDQ     -131072,DU
         1 000003   200003 756100                    STQ     AFTER_CMD,,AUTO

      150     4637    1           GOTO AFTER_OVER_CMDS_COMMON_CODE;

   4637  1 000004   000010 710000 1                  TRA     AFTER_OVER_CMDS_COMMON_CODE

      151     4638
      152     4639    1   VDI$COVER: ENTRY   ALTRET;

   4639  1 000005   000000 700200 xent  VDI$COVER    TSX0  ! X66_AUTO_0
         1 000006   000130 000000                    ZERO    88,0

      153     4640    1           AFTER_CMD = %FALSE;

   4640  1 000007   200003 450100                    STZ     AFTER_CMD,,AUTO

      154     4641
      155     4642
      156     4643    1   AFTER_OVER_CMDS_COMMON_CODE:
      157     4644    1           NSRC_FOUND = 0;

   4644  1 000010   200012 450100       AFTER_OVER_* STZ     NSRC_FOUND,,AUTO

      158     4645    1           NDEST_FOUND = 0;

   4645  1 000011   200013 450100                    STZ     NDEST_FOUND,,AUTO

      159     4646    1           NDELRECS = 0;

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:26   
   4646  1 000012   200014 450100                    STZ     NDELRECS,,AUTO

      160     4647    1           NINSRECS = 0;

   4647  1 000013   200015 450100                    STZ     NINSRECS,,AUTO

      161     4648    1           NBLOCKS_COPIED = 0;

   4648  1 000014   200016 450100                    STZ     NBLOCKS_COPIED,,AUTO

      162     4649    1           SAVE_SRC_RANGE = %CLEAR;

   4649  1 000015   000100 100400                    MLR     fill='000'O
         1 000016   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000017   200031 000110                    ADSC9   SAVE_SRC_RANGE,,AUTO     cn=0,n=72

      163     4650    1           SAVE_DEST_RANGE = %CLEAR;

   4650  1 000020   000100 100400                    MLR     fill='000'O
         1 000021   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000022   200053 000110                    ADSC9   SAVE_DEST_RANGE,,AUTO    cn=0,n=72

      164     4651    1           ACTUALLY_COPIED_SRC_RANGE = %CLEAR;

   4651  1 000023   000100 100400                    MLR     fill='000'O
         1 000024   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000025   200076 000110                    ADSC9   ACTUALLY_COPIED_SRC_RANGE,,AUTO cn=0,n=72

      165     4652
      166     4653                /*
      167     4654                *   Set up the source and destination for the main loop.
      168     4655                */
      169     4656    1           SRC_STRM$ = VD_6E.SOURCE.OPERAND.STREAM$;

   4656  1 000026   000020 236000 xsym               LDQ     VD_6E+16
         1 000027   200005 756100                    STQ     SRC_STRM$,,AUTO

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:27   
      170     4657    1           SRC_EDBLK$ = VD_6E.SOURCE.OPERAND.EDIT_BLOCK$;

   4657  1 000030   000022 236000 xsym               LDQ     VD_6E+18
         1 000031   200007 756100                    STQ     SRC_EDBLK$,,AUTO

      171     4658
      172     4659    1           CURR_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;

   4659  1 000032   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         1 000033   000007 236100                    LDQ     7,,PR0
         1 000034   200004 756100                    STQ     CURR_WINDOW$,,AUTO

      173     4660    1           DEST_EVAL$ = CURR$WINDOW.OPERAND.EVAL$;

   4660  1 000035   200004 471500                    LDP1    CURR_WINDOW$,,AUTO
         1 000036   100013 236100                    LDQ     11,,PR1
         1 000037   200011 756100                    STQ     DEST_EVAL$,,AUTO

      174     4661    1           DEST_STRM$ = CURR$WINDOW.OPERAND.STREAM$;

   4661  1 000040   100010 236100                    LDQ     8,,PR1
         1 000041   200006 756100                    STQ     DEST_STRM$,,AUTO

      175     4662    1           DEST_EDBLK$ = CURR$WINDOW.OPERAND.EDIT_BLOCK$;

   4662  1 000042   100012 236100                    LDQ     10,,PR1
         1 000043   200010 756100                    STQ     DEST_EDBLK$,,AUTO

      176     4663
      177     4664    2           IF SRC_EDBLK$ = ADDR(NIL) THEN DO;

   4664  1 000044   200007 236100                    LDQ     SRC_EDBLK$,,AUTO
         1 000045   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000046   000057 601000 1                  TNZ     s:4670

      178     4665    2              CALL VDG$WARNMSG (%E$WARN_NO_SOURCE_OPERAND);

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:28   
   4665  1 000047   000001 630400 2                  EPPR0   1
         1 000050   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000051   000000 701000 xent               TSX1    VDG$WARNMSG
         1 000052   000000 011000                    NOP     0

      179     4666    2              CALL VDG$EREPORT_ERROR;

   4666  1 000053   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000054   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         1 000055   000000 011000                    NOP     0

      180     4667    2              RETURN;

   4667  1 000056   000000 702200 xent               TSX2  ! X66_ARET

      181     4668    2              END;
      182     4669
      183     4670    1           CALL VDA$FOPEN (SRC$STRM, SRC$EDBLK.FILE_KEY, 0, SRC$EDBLK.OPTIONS)

   4670  1 000057   000025 036003                    ADLQ    21,DU
         1 000060   000002 235000 2                  LDA     2
         1 000061   200126 757100                    STAQ    HAD_ERROR+3,,AUTO
         1 000062   200007 236100                    LDQ     SRC_EDBLK$,,AUTO
         1 000063   000001 036003                    ADLQ    1,DU
         1 000064   200005 235100                    LDA     SRC_STRM$,,AUTO
         1 000065   200124 757100                    STAQ    HAD_ERROR+1,,AUTO
         1 000066   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000067   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000070   000000 701000 xent               TSX1    VDA$FOPEN
         1 000071   001020 702000 1                  TSX2    FOPEN_FAILED

      184     4671    1             ALTRET (FOPEN_FAILED);
      185     4672
      186     4673    1           IF SRC$EDBLK.OPTIONS.EXIST# = %EX_NEW THEN

   4673  1 000072   200007 470500                    LDP0    SRC_EDBLK$,,AUTO
         1 000073   000027 720100                    LXL0    23,,PR0
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:29   
         1 000074   000001 100003                    CMPX0   1,DU
         1 000075   000100 601000 1                  TNZ     s:4680

      187     4674    1              SRC$EDBLK.OPTIONS.EXIST# = %EX_OLD;

   4674  1 000076   000002 221003                    LDX1    2,DU
         1 000077   000027 441100                    SXL1    23,,PR0

      188     4675
      189     4676                /*
      190     4677                *   Main loop.
      191     4678                */
      192     4679
      193     4680    1           S_FOUND = %TRUE;

   4680  1 000100   400000 236003                    LDQ     -131072,DU
         1 000101   200022 756100                    STQ     S_FOUND,,AUTO

      194     4681    1           D_FOUND = %TRUE;

   4681  1 000102   200023 756100                    STQ     D_FOUND,,AUTO

      195     4682
      196     4683    1   MAIN_LOOP:
      197     4684    2           DO WHILE (S_FOUND AND D_FOUND );

   4684  1 000103   000755 710000 1     MAIN_LOOP    TRA     s:4919

      198     4685    2              CALL VDG$OCLEAR_RANGE (SAVE_SRC_RANGE)

   4685  1 000104   200031 630500                    EPPR0   SAVE_SRC_RANGE,,AUTO
         1 000105   200124 450500                    STP0    HAD_ERROR+1,,AUTO
         1 000106   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000107   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000110   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         1 000111   001020 702000 1                  TSX2    FOPEN_FAILED

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:30   
      199     4686    2                ALTRET (OCLEAR_FAILED);
      200     4687    2              CALL VDG$OCOPY_RANGE (SRC$EVAL.RANGE, SAVE_SRC_RANGE)

   4687  1 000112   200031 630500                    EPPR0   SAVE_SRC_RANGE,,AUTO
         1 000113   200125 450500                    STP0    HAD_ERROR+2,,AUTO
         1 000114   000023 236000 xsym               LDQ     VD_6E+19
         1 000115   000024 036003                    ADLQ    20,DU
         1 000116   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000117   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000120   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000121   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         1 000122   001020 702000 1                  TSX2    FOPEN_FAILED

      201     4688    2                ALTRET (OCOPY_RANGE_FAILED);
      202     4689    2              CALL VDG$OCLEAR_RANGE (SAVE_DEST_RANGE)

   4689  1 000123   200053 630500                    EPPR0   SAVE_DEST_RANGE,,AUTO
         1 000124   200124 450500                    STP0    HAD_ERROR+1,,AUTO
         1 000125   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000126   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000127   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         1 000130   001020 702000 1                  TSX2    FOPEN_FAILED

      203     4690    2                ALTRET (OCLEAR_FAILED);
      204     4691    2              CALL VDG$OCOPY_RANGE (DEST$EVAL.RANGE, SAVE_DEST_RANGE)

   4691  1 000131   200053 630500                    EPPR0   SAVE_DEST_RANGE,,AUTO
         1 000132   200125 450500                    STP0    HAD_ERROR+2,,AUTO
         1 000133   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000134   000024 036003                    ADLQ    20,DU
         1 000135   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000136   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000137   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000140   000000 701000 xent               TSX1    VDG$OCOPY_RANGE
         1 000141   001020 702000 1                  TSX2    FOPEN_FAILED

      205     4692    2                ALTRET (OCOPY_RANGE_FAILED);
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:31   
      206     4693
      207     4694    2              SRC$EVAL.STATE# = %EVST_INITIAL;

   4694  1 000142   000001 220003                    LDX0    1,DU
         1 000143   000023 470400 xsym               LDP0    VD_6E+19
         1 000144   000070 740100                    STX0    56,,PR0

      208     4695    2              CALL VDE$IRANGE (VD_6E.SOURCE.OPERAND, S_FOUND)

   4695  1 000145   200022 631500                    EPPR1   S_FOUND,,AUTO
         1 000146   200125 451500                    STP1    HAD_ERROR+2,,AUTO
         1 000147   000003 236000 2                  LDQ     3
         1 000150   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000151   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000152   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000153   000000 701000 xent               TSX1    VDE$IRANGE
         1 000154   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      209     4696    2                ALTRET (IRANGE_FAILED);
      210     4697
      211     4698
      212     4699                   /*
      213     4700                   * If we're copying from the scratch string file, and there
      214     4701                   * are some wildcards to fill in with pattern ones, set a flag
      215     4702                   * so that VDE$IPATTERN knows to do that.
      216     4703                   */
      217     4704
      218     4705    2              IF SRC$EDBLK.OPTIONS.STRUCTURE$ = VD_6E.STRUCTURE_SCRATCH$

   4705  1 000155   200007 470500                    LDP0    SRC_EDBLK$,,AUTO
         1 000156   000025 236100                    LDQ     21,,PR0
         1 000157   000012 116000 xsym               CMPQ    VD_6E+10
         1 000160   000226 601000 1                  TNZ     s:4727
         1 000161   000025 236000 xsym               LDQ     VD_6E+21
         1 000162   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000163   000226 600000 1                  TZE     s:4727

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:32   
      219     4706    2                AND VD_6E.WILD_STRINGS$ ~= ADDR(NIL) THEN
      220     4707    3                 IF VD$WILD_STRINGS.N_WILDCARDS# > 0 THEN DO;

   4707  1 000164   000025 471400 xsym               LDP1    VD_6E+21
         1 000165   100002 720100                    LXL0    2,,PR1
         1 000166   000226 604400 1                  TMOZ    s:4727

      221     4708    3                    VD_6E.SOURCE.WILD_STRINGS = %TRUE;

   4708  1 000167   200000 236003                    LDQ     65536,DU
         1 000170   000024 256000 xsym               ORSQ    VD_6E+20

      222     4709
      223     4710                         /*
      224     4711                         * Remove any existing substitutions first.
      225     4712                         */
      226     4713
      227     4714    3                    THIS_WILD$ = PINCRW (VD_6E.WILD_STRINGS$,

   4714  1 000171   100002 720100                    LXL0    2,,PR1
         1 000172   000000 636010                    EAQ     0,X0
         1 000173   000023 402007                    MPY     19,DL
         1 000174   000025 036000 xsym               ADLQ    VD_6E+21
         1 000175   200020 756100                    STQ     THIS_WILD$,,AUTO

      228     4715    3                      SIZEW(WILD.W) * VD$WILD_STRINGS.N_WILDCARDS#);
      229     4716
      230     4717    4                    DO UNTIL THIS_WILD$ = VD_6E.WILD_STRINGS$;

      231     4718    4                       THIS_WILD$ = PINCRW(THIS_WILD$, -SIZEW(WILD.W));

   4718  1 000176   200020 236100                    LDQ     THIS_WILD$,,AUTO
         1 000177   777755 036003                    ADLQ    -19,DU
         1 000200   200020 756100                    STQ     THIS_WILD$,,AUTO

      232     4719    4                       IF WILD.W.RANGE.ENDD > WILD.W.RANGE.START THEN

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:33   
   4719  1 000201   200020 470500                    LDP0    THIS_WILD$,,AUTO
         1 000202   000100 106500                    CMPC    fill='000'O
         1 000203   000004 000044                    ADSC9   4,,PR0                   cn=0,n=36
         1 000204   000015 000044                    ADSC9   13,,PR0                  cn=0,n=36
         1 000205   000221 603000 1                  TRC     s:4722

      233     4720    4                          CALL VDI$BDELETE (WILD.W.RANGE, SRC$STRM, SRC$EDBLK)

   4720  1 000206   200007 236100                    LDQ     SRC_EDBLK$,,AUTO
         1 000207   200126 756100                    STQ     HAD_ERROR+3,,AUTO
         1 000210   200005 236100                    LDQ     SRC_STRM$,,AUTO
         1 000211   200125 756100                    STQ     HAD_ERROR+2,,AUTO
         1 000212   200020 236100                    LDQ     THIS_WILD$,,AUTO
         1 000213   000004 036003                    ADLQ    4,DU
         1 000214   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000215   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000216   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000217   000000 701000 xent               TSX1    VDI$BDELETE
         1 000220   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      234     4721    4                            ALTRET (BDELETE_FAILED);
      235     4722    4                       END;

   4722  1 000221   200020 236100                    LDQ     THIS_WILD$,,AUTO
         1 000222   000025 116000 xsym               CMPQ    VD_6E+21
         1 000223   000176 601000 1                  TNZ     s:4718

      236     4723
      237     4724    3                    VD_6E.SOURCE.WILD_STRINGS = %TRUE;

   4724  1 000224   200000 236003                    LDQ     65536,DU
         1 000225   000024 256000 xsym               ORSQ    VD_6E+20

      238     4725    3                    END;

      239     4726
      240     4727    2              DEST$EVAL.STATE# = %EVST_INITIAL;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:34   

   4727  1 000226   000001 220003                    LDX0    1,DU
         1 000227   200011 470500                    LDP0    DEST_EVAL$,,AUTO
         1 000230   000070 740100                    STX0    56,,PR0

      241     4728    2              CALL VDE$IRANGE (CURR$WINDOW.OPERAND, D_FOUND)

   4728  1 000231   200023 631500                    EPPR1   D_FOUND,,AUTO
         1 000232   200125 451500                    STP1    HAD_ERROR+2,,AUTO
         1 000233   200004 236100                    LDQ     CURR_WINDOW$,,AUTO
         1 000234   000010 036003                    ADLQ    8,DU
         1 000235   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000236   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000237   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000240   000000 701000 xent               TSX1    VDE$IRANGE
         1 000241   000243 702000 1                  TSX2    s:4730
         1 000242   000246 710000 1                  TRA     s:4734

      242     4729    3              WHENALTRETURN DO;

      243     4730    3                 VD_6E.SOURCE.WILD_STRINGS = %FALSE;

   4730  1 000243   000004 236000 2                  LDQ     4
         1 000244   000024 356000 xsym               ANSQ    VD_6E+20

      244     4731    3                 GOTO IRANGE_FAILED;

   4731  1 000245   001016 710000 1                  TRA     COMPARE_LOCS_FAILED

      245     4732    3                 END;
      246     4733                   /* Eval-stack may have changed:  fetch ptr to top-of-stack again */
      247     4734    2              DEST_EVAL$ = CURR$WINDOW.OPERAND.EVAL$;

   4734  1 000246   200004 470500                    LDP0    CURR_WINDOW$,,AUTO
         1 000247   000013 236100                    LDQ     11,,PR0
         1 000250   200011 756100                    STQ     DEST_EVAL$,,AUTO

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:35   
      248     4735
      249     4736    2              NSRC_FOUND = NSRC_FOUND + BITBIN(S_FOUND);

   4736  1 000251   200022 236100                    LDQ     S_FOUND,,AUTO
         1 000252   000043 772000                    QRL     35
         1 000253   200012 036100                    ADLQ    NSRC_FOUND,,AUTO
         1 000254   200012 756100                    STQ     NSRC_FOUND,,AUTO

      250     4737    2              NDEST_FOUND = NDEST_FOUND + BITBIN(D_FOUND);

   4737  1 000255   200023 236100                    LDQ     D_FOUND,,AUTO
         1 000256   000043 772000                    QRL     35
         1 000257   200013 036100                    ADLQ    NDEST_FOUND,,AUTO
         1 000260   200013 756100                    STQ     NDEST_FOUND,,AUTO

      251     4738    2              IF NOT S_FOUND

   4738  1 000261   200022 234100                    SZN     S_FOUND,,AUTO
         1 000262   000315 604000 1                  TMI     s:4751
         1 000263   000024 234000 xsym               SZN     VD_6E+20
         1 000264   000315 604000 1                  TMI     s:4751
         1 000265   200023 234100                    SZN     D_FOUND,,AUTO
         1 000266   000315 605000 1                  TPL     s:4751
         1 000267   200012 235100                    LDA     NSRC_FOUND,,AUTO
         1 000270   000001 115007                    CMPA    1,DL
         1 000271   000315 601000 1                  TNZ     s:4751

      252     4739    2                AND NOT VD_6E.SOURCE.MOVE
      253     4740    2                AND D_FOUND
      254     4741    3                AND NSRC_FOUND = 1 THEN DO;

      255     4742                      /* Use same source block again */
      256     4743    3                 S_FOUND = %TRUE;

   4743  1 000272   400000 236003                    LDQ     -131072,DU
         1 000273   200022 756100                    STQ     S_FOUND,,AUTO

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:36   
      257     4744    3                 IF VD_6E.SOURCE.WILD_STRINGS THEN EXIT;

   4744  1 000274   000024 236000 xsym               LDQ     VD_6E+20
         1 000275   200000 316003                    CANQ    65536,DU
         1 000276   000315 601000 1                  TNZ     s:4751

      258     4745    3                 CALL VDG$OCLEAR_RANGE (SRC$EVAL.RANGE)

   4745  1 000277   000023 236000 xsym               LDQ     VD_6E+19
         1 000300   000024 036003                    ADLQ    20,DU
         1 000301   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000302   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000303   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000304   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         1 000305   001020 702000 1                  TSX2    FOPEN_FAILED

      259     4746    3                   ALTRET (OCLEAR_FAILED);
      260     4747    3                 SRC$EVAL.RANGE = SAVE_SRC_RANGE;

   4747  1 000306   000023 470400 xsym               LDP0    VD_6E+19
         1 000307   000100 100500                    MLR     fill='000'O
         1 000310   200031 000110                    ADSC9   SAVE_SRC_RANGE,,AUTO     cn=0,n=72
         1 000311   000024 000110                    ADSC9   20,,PR0                  cn=0,n=72

      261     4748    3                 SAVE_SRC_RANGE = %CLEAR;

   4748  1 000312   000100 100400                    MLR     fill='000'O
         1 000313   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000314   200031 000110                    ADSC9   SAVE_SRC_RANGE,,AUTO     cn=0,n=72

      262     4749    3                 END;

      263     4750
      264     4751    2              VD_6E.SOURCE.WILD_STRINGS = %FALSE;

   4751  1 000315   000004 236000 2                  LDQ     4
         1 000316   000024 356000 xsym               ANSQ    VD_6E+20
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:37   

      265     4752    2              IF NOT D_FOUND

   4752  1 000317   200023 234100                    SZN     D_FOUND,,AUTO
         1 000320   000346 604000 1                  TMI     s:4762
         1 000321   200022 234100                    SZN     S_FOUND,,AUTO
         1 000322   000346 605000 1                  TPL     s:4762
         1 000323   200013 235100                    LDA     NDEST_FOUND,,AUTO
         1 000324   000001 115007                    CMPA    1,DL
         1 000325   000346 601000 1                  TNZ     s:4762

      266     4753    2                AND S_FOUND
      267     4754    3                AND NDEST_FOUND = 1 THEN DO;

      268     4755                      /* Use same destination block again */
      269     4756    3                 CALL VDG$OCLEAR_RANGE (DEST$EVAL.RANGE) ALTRET (OCLEAR_FAILED);

   4756  1 000326   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000327   000024 036003                    ADLQ    20,DU
         1 000330   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000331   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000332   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000333   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         1 000334   001020 702000 1                  TSX2    FOPEN_FAILED

      270     4757    3                 DEST$EVAL.RANGE = SAVE_DEST_RANGE;

   4757  1 000335   200011 470500                    LDP0    DEST_EVAL$,,AUTO
         1 000336   000100 100500                    MLR     fill='000'O
         1 000337   200053 000110                    ADSC9   SAVE_DEST_RANGE,,AUTO    cn=0,n=72
         1 000340   000024 000110                    ADSC9   20,,PR0                  cn=0,n=72

      271     4758    3                 SAVE_DEST_RANGE = %CLEAR;

   4758  1 000341   000100 100400                    MLR     fill='000'O
         1 000342   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000343   200053 000110                    ADSC9   SAVE_DEST_RANGE,,AUTO    cn=0,n=72
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:38   

      272     4759    3                 D_FOUND = %TRUE;

   4759  1 000344   400000 236003                    LDQ     -131072,DU
         1 000345   200023 756100                    STQ     D_FOUND,,AUTO

      273     4760    3                 END;

      274     4761
      275     4762    2              IF S_FOUND AND D_FOUND THEN

   4762  1 000346   200022 234100                    SZN     S_FOUND,,AUTO
         1 000347   000737 605000 1                  TPL     s:4905
         1 000350   200023 234100                    SZN     D_FOUND,,AUTO
         1 000351   000737 605000 1                  TPL     s:4905

      276     4763    3   DO_COPY_OPERATION: DO;

   4763  1 000352                       DO_COPY_OPE* null
      277     4764                      %GETKEY (KEY=SRC$STRM.FILE_KEY, PTR=SRC_FID$);

   4771  1 000352   200005 470500                    LDP0    SRC_STRM$,,AUTO
         1 000353   000004 720100                    LXL0    4,,PR0
         1 000354   000002 100003                    CMPX0   2,DU
         1 000355   000362 601000 1                  TNZ     s:4771+4

   4771  1 000356   000005 471500                    LDP1    5,,PR0
         1 000357   100002 633500                    EPPR3   2,,PR1
         1 000360   200024 453500                    STP3    SRC_FID$,,AUTO
         1 000361   000365 710000 1                  TRA     s:4781

   4771  1 000362   200005 236100                    LDQ     SRC_STRM$,,AUTO
         1 000363   000005 036003                    ADLQ    5,DU
         1 000364   200024 756100                    STQ     SRC_FID$,,AUTO

      278     4774                      %GETKEY (KEY=DEST$STRM.FILE_KEY, PTR=DEST_FID$);

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:39   
   4781  1 000365   200006 471500                    LDP1    DEST_STRM$,,AUTO
         1 000366   100004 721100                    LXL1    4,,PR1
         1 000367   000002 101003                    CMPX1   2,DU
         1 000370   000375 601000 1                  TNZ     s:4781+8

   4781  1 000371   100005 473500                    LDP3    5,,PR1
         1 000372   300002 634500                    EPPR4   2,,PR3
         1 000373   200025 454500                    STP4    DEST_FID$,,AUTO
         1 000374   000400 710000 1                  TRA     s:4792

   4781  1 000375   200006 236100                    LDQ     DEST_STRM$,,AUTO
         1 000376   000005 036003                    ADLQ    5,DU
         1 000377   200025 756100                    STQ     DEST_FID$,,AUTO

      279     4784                      %GETKEY (KEY=SRC$EVAL.RANGE.START.KEY, INDX="%(LVL_EXT_REC-1)",
      280     4785                      PTR=SRC_KEY$);

   4792  1 000400   000023 473400 xsym               LDP3    VD_6E+19
         1 000401   300024 722100                    LXL2    20,,PR3
         1 000402   000002 102003                    CMPX2   2,DU
         1 000403   000410 601000 1                  TNZ     s:4792+8

   4792  1 000404   300025 474500                    LDP4    21,,PR3
         1 000405   400002 635500                    EPPR5   2,,PR4
         1 000406   200026 455500                    STP5    SRC_KEY$,,AUTO
         1 000407   000413 710000 1                  TRA     s:4796

   4792  1 000410   000023 236000 xsym               LDQ     VD_6E+19
         1 000411   000025 036003                    ADLQ    21,DU
         1 000412   200026 756100                    STQ     SRC_KEY$,,AUTO

      281     4795
      282     4796    3                 IF SRC_FID$->VD$TEXTC.BYTES = DEST_FID$->VD$TEXTC.BYTES THEN

   4796  1 000413   200024 474500                    LDP4    SRC_FID$,,AUTO
         1 000414   400000 236100                    LDQ     0,,PR4
         1 000415   000033 772000                    QRL     27
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:40   
         1 000416   200025 475500                    LDP5    DEST_FID$,,AUTO
         1 000417   000000 623006                    EAX3    0,QL
         1 000420   500000 236100                    LDQ     0,,PR5
         1 000421   000033 772000                    QRL     27
         1 000422   000000 624006                    EAX4    0,QL
         1 000423   040140 106540                    CMPC    fill='040'O
         1 000424   400000 200013                    ADSC9   0,,PR4                   cn=1,n=*X3
         1 000425   500000 200014                    ADSC9   0,,PR5                   cn=1,n=*X4
         1 000426   000631 601000 1                  TNZ     s:4870

      283     4797    4   SAME_FILE:    DO;

   4797  1 000427                       SAME_FILE    null
      284     4798                         %GETKEY (KEY=DEST$EVAL.RANGE.START.KEY, INDX="%(LVL_EXT_REC-1)",
      285     4799                         PTR=DEST_KEY$);

   4806  1 000427   200011 476500                    LDP6    DEST_EVAL$,,AUTO
         1 000430   600024 725100                    LXL5    20,,PR6
         1 000431   000002 105003                    CMPX5   2,DU
         1 000432   000437 601000 1                  TNZ     s:4806+4

   4806  1 000433   600025 477500                    LDP7    21,,PR6
         1 000434   700002 630500                    EPPR0   2,,PR7
         1 000435   200027 450500                    STP0    DEST_KEY$,,AUTO
         1 000436   000442 710000 1                  TRA     s:4816

   4806  1 000437   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000440   000025 036003                    ADLQ    21,DU
         1 000441   200027 756100                    STQ     DEST_KEY$,,AUTO

      286     4809                         %GETKEY (KEY=VD_KEY_NUMERIC_BOF, PTR=BOF_KEY$);

   4816  1 000442   000000 720000 xsym               LXL0    VD_KEY_NUMERIC_BOF
         1 000443   000002 100003                    CMPX0   2,DU
         1 000444   000451 601000 1                  TNZ     s:4816+7

   4816  1 000445   000001 236000 xsym               LDQ     VD_KEY_NUMERIC_BOF+1
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:41   
         1 000446   000002 036003                    ADLQ    2,DU
         1 000447   200030 756100                    STQ     BOF_KEY$,,AUTO
         1 000450   000453 710000 1                  TRA     s:4819

   4816  1 000451   000005 236000 2                  LDQ     5
         1 000452   200030 756100                    STQ     BOF_KEY$,,AUTO

      287     4819    4                    IF NOT AFTER_CMD

   4819  1 000453   200003 234100                    SZN     AFTER_CMD,,AUTO
         1 000454   000566 604000 1                  TMI     s:4852
         1 000455   200026 470500                    LDP0    SRC_KEY$,,AUTO
         1 000456   000000 236100                    LDQ     0,,PR0
         1 000457   000033 772000                    QRL     27
         1 000460   200030 477500                    LDP7    BOF_KEY$,,AUTO
         1 000461   000000 626006                    EAX6    0,QL
         1 000462   700000 236100                    LDQ     0,,PR7
         1 000463   000033 772000                    QRL     27
         1 000464   000000 627006                    EAX7    0,QL
         1 000465   040140 106540                    CMPC    fill='040'O
         1 000466   000000 200016                    ADSC9   0,,PR0                   cn=1,n=*X6
         1 000467   700000 200017                    ADSC9   0,,PR7                   cn=1,n=*X7
         1 000470   000566 601000 1                  TNZ     s:4852
         1 000471   300045 236100                    LDQ     37,,PR3
         1 000472   400000 316007                    CANQ    -131072,DL
         1 000473   000566 600000 1                  TZE     s:4852
         1 000474   200027 470500                    LDP0    DEST_KEY$,,AUTO
         1 000475   000000 236100                    LDQ     0,,PR0
         1 000476   000033 772000                    QRL     27
         1 000477   000000 626006                    EAX6    0,QL
         1 000500   040140 106540                    CMPC    fill='040'O
         1 000501   000000 200016                    ADSC9   0,,PR0                   cn=1,n=*X6
         1 000502   700000 200017                    ADSC9   0,,PR7                   cn=1,n=*X7
         1 000503   000566 601000 1                  TNZ     s:4852
         1 000504   600045 236100                    LDQ     37,,PR6
         1 000505   400000 316007                    CANQ    -131072,DL
         1 000506   000566 600000 1                  TZE     s:4852
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:42   

      288     4820    4                      AND (SRC_KEY$->VD$TEXTC.BYTES = BOF_KEY$->VD$TEXTC.BYTES)
      289     4821    4                      AND SRC$EVAL.RANGE.ENDD.EOF
      290     4822    4                      AND (DEST_KEY$->VD$TEXTC.BYTES = BOF_KEY$->VD$TEXTC.BYTES)
      291     4823    4                      AND DEST$EVAL.RANGE.ENDD.EOF THEN
      292     4824    5   REKEY_FILE:      DO;

   4824  1 000507                       REKEY_FILE   null
      293     4825                            /*
      294     4826                            * User is copying file over itself:  rekey the file.
      295     4827                            * This isn't really an OVER command, but an insertion
      296     4828                            *     into a new file.  The Accessor has a special
      297     4829                            *     routine to do this.
      298     4830                            */
      299     4831    5                       REKEY_INCR.TYPE# = %KT_EDITKEY;

   4831  1 000507   000003 220003                    LDX0    3,DU
         1 000510   200120 740100                    STX0    REKEY_INCR,,AUTO

      300     4832    5                       REKEY_INCR.REP# = %REP_LOCAL;

   4832  1 000511   000001 221003                    LDX1    1,DU
         1 000512   200120 441100                    SXL1    REKEY_INCR,,AUTO

      301     4833    5                       REKEY_INCR.LENGTH# = %NB_NUMERIC_KEY;

   4833  1 000513   003000 236003                    LDQ     1536,DU
         1 000514   200121 552140                    STBQ    REKEY_INCR+1,'40'O,AUTO

      302     4834    5                       REKEY_INCR.BYTES# = ADDR(CURR$WINDOW.OPERAND.INTREE$->

   4834  1 000515   200004 470500                    LDP0    CURR_WINDOW$,,AUTO
         1 000516   000011 471500                    LDP1    9,,PR0
         1 000517   100034 236100                    LDQ     28,,PR1
         1 000520   200121 552134                    STBQ    REKEY_INCR+1,'34'O,AUTO

      303     4835    5                         VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR)->VD$KEY_NUMBER.BYTES#;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:43   
      304     4836    6                       IF REKEY_INCR.BYTES# = 0 THEN DO;

   4836  1 000521   200121 236100                    LDQ     REKEY_INCR+1,,AUTO
         1 000522   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 000523   000533 601000 1                  TNZ     s:4841

      305     4837    6                          REKEY_INCR.BYTES# = VD_$BY.V#;

   4837  1 000524   000003 236000 xsym               LDQ     VD_$BY+3
         1 000525   200121 552134                    STBQ    REKEY_INCR+1,'34'O,AUTO

      306     4838    6                          IF REKEY_INCR.BYTES# = 0 THEN

   4838  1 000526   200121 236100                    LDQ     REKEY_INCR+1,,AUTO
         1 000527   000032 316000 xsym               CANQ    B_VECTNIL+26
         1 000530   000533 601000 1                  TNZ     s:4841

      307     4839    6                             REKEY_INCR.BYTES# = %DFLT_$BY;

   4839  1 000531   023420 236007                    LDQ     10000,DL
         1 000532   200121 552134                    STBQ    REKEY_INCR+1,'34'O,AUTO

      308     4840    6                          END;

      309     4841    5                       CALL VDG$OCLEAR_RANGE (DEST$EVAL.RANGE) ALTRET (OCLEAR_FAILED);

   4841  1 000533   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000534   000024 036003                    ADLQ    20,DU
         1 000535   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000536   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000537   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000540   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         1 000541   001020 702000 1                  TSX2    FOPEN_FAILED

      310     4842        /* Save the previous position, just to be nice. */
      311     4843    5                       DEST$EVAL.RANGE = SAVE_DEST_RANGE;

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:44   
   4843  1 000542   200011 470500                    LDP0    DEST_EVAL$,,AUTO
         1 000543   000100 100500                    MLR     fill='000'O
         1 000544   200053 000110                    ADSC9   SAVE_DEST_RANGE,,AUTO    cn=0,n=72
         1 000545   000024 000110                    ADSC9   20,,PR0                  cn=0,n=72

      312     4844    5                       SAVE_DEST_RANGE = %CLEAR;

   4844  1 000546   000100 100400                    MLR     fill='000'O
         1 000547   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000550   200053 000110                    ADSC9   SAVE_DEST_RANGE,,AUTO    cn=0,n=72

      313     4845    5                       CALL VDA$FREKEY (SRC$STRM, DEST$STRM, REKEY_INCR)

   4845  1 000551   200120 631500                    EPPR1   REKEY_INCR,,AUTO
         1 000552   200126 451500                    STP1    HAD_ERROR+3,,AUTO
         1 000553   200006 236100                    LDQ     DEST_STRM$,,AUTO
         1 000554   200005 235100                    LDA     SRC_STRM$,,AUTO
         1 000555   200124 757100                    STAQ    HAD_ERROR+1,,AUTO
         1 000556   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000557   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000560   000000 701000 xent               TSX1    VDA$FREKEY
         1 000561   001020 702000 1                  TSX2    FOPEN_FAILED

      314     4846    5                         ALTRET (FREKEY_FAILED);
      315     4847    5                       NBLOCKS_COPIED = NBLOCKS_COPIED + 1;

   4847  1 000562   200016 235100                    LDA     NBLOCKS_COPIED,,AUTO
         1 000563   000001 035007                    ADLA    1,DL
         1 000564   200016 755100                    STA     NBLOCKS_COPIED,,AUTO

      316     4848    5                       GOTO MAIN_LOOP;

   4848  1 000565   000103 710000 1                  TRA     MAIN_LOOP

      317     4849    5                       END REKEY_FILE;
      318     4850
      319     4851                         /* Check for overlapping source and destination */
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:45   
      320     4852    4                    IF AFTER_CMD THEN

   4852  1 000566   200003 234100                    SZN     AFTER_CMD,,AUTO
         1 000567   000574 605000 1                  TPL     s:4855

      321     4853    4                       DEST_LOC$ = ADDR(DEST$EVAL.RANGE.ENDD);

   4853  1 000570   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000571   000035 036003                    ADLQ    29,DU
         1 000572   200075 756100                    STQ     DEST_LOC$,,AUTO
         1 000573   000577 710000 1                  TRA     s:4857

      322     4854    4                    ELSE
      323     4855    4                       DEST_LOC$ = ADDR(DEST$EVAL.RANGE.START);

   4855  1 000574   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000575   000024 036003                    ADLQ    20,DU
         1 000576   200075 756100                    STQ     DEST_LOC$,,AUTO

      324     4856
      325     4857    4                    CALL VDG$COMPARE_LOCS (DEST$EVAL.RANGE.ENDD,

   4857  1 000577   200017 630500                    EPPR0   RCCL,,AUTO
         1 000600   200126 450500                    STP0    HAD_ERROR+3,,AUTO
         1 000601   000023 236000 xsym               LDQ     VD_6E+19
         1 000602   000024 036003                    ADLQ    20,DU
         1 000603   200125 756100                    STQ     HAD_ERROR+2,,AUTO
         1 000604   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000605   000035 036003                    ADLQ    29,DU
         1 000606   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000607   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000610   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000611   000000 701000 xent               TSX1    VDG$COMPARE_LOCS
         1 000612   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      326     4858    4                      SRC$EVAL.RANGE.START, RCCL)
      327     4859    4                      ALTRET (COMPARE_LOCS_FAILED);
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:46   
      328     4860
      329     4861    5                    IF RCCL > %RCCL_EQUAL THEN DO;

   4861  1 000613   200017 235100                    LDA     RCCL,,AUTO
         1 000614   000631 604400 1                  TMOZ    s:4870

      330     4862    5                       CALL VDG$COMPARE_LOCS (DEST$LOC, SRC$EVAL.RANGE.ENDD, RCCL)

   4862  1 000615   200017 630500                    EPPR0   RCCL,,AUTO
         1 000616   200126 450500                    STP0    HAD_ERROR+3,,AUTO
         1 000617   000023 236000 xsym               LDQ     VD_6E+19
         1 000620   000035 036003                    ADLQ    29,DU
         1 000621   200075 235100                    LDA     DEST_LOC$,,AUTO
         1 000622   200124 757100                    STAQ    HAD_ERROR+1,,AUTO
         1 000623   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000624   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000625   000000 701000 xent               TSX1    VDG$COMPARE_LOCS
         1 000626   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      331     4863    5                         ALTRET (COMPARE_LOCS_FAILED);
      332     4864    5                       IF RCCL < %RCCL_EQUAL THEN

   4864  1 000627   200017 235100                    LDA     RCCL,,AUTO
         1 000630   000764 604000 1                  TMI     OVERLAPPING_BLOCKS_FAILURE

      333     4865    5                          GOTO OVERLAPPING_BLOCKS_FAILURE;
      334     4866    5                       END;

      335     4867    4                    END SAME_FILE;

      336     4868
      337     4869                      /* Whew!!  Finally, do the actual copy/move!! */
      338     4870    4                 IF NOT AFTER_CMD THEN DO;

   4870  1 000631   200003 234100                    SZN     AFTER_CMD,,AUTO
         1 000632   000666 604000 1                  TMI     s:4881

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:47   
      339     4871                         /* Delete destination block */
      340     4872    4                    VD_EOF_DELETED = %TRUE; /* Allow BDELETE to indicate */

   4872  1 000633   400000 236003                    LDQ     -131072,DU
         1 000634   000000 756000 xsym               STQ     VD_EOF_DELETED

      341     4873    4                    CALL VDI$BDELETE (DEST$EVAL.RANGE, DEST$STRM, DEST$EDBLK)

   4873  1 000635   200010 236100                    LDQ     DEST_EDBLK$,,AUTO
         1 000636   200126 756100                    STQ     HAD_ERROR+3,,AUTO
         1 000637   200006 236100                    LDQ     DEST_STRM$,,AUTO
         1 000640   200125 756100                    STQ     HAD_ERROR+2,,AUTO
         1 000641   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000642   000024 036003                    ADLQ    20,DU
         1 000643   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000644   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000645   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000646   000000 701000 xent               TSX1    VDI$BDELETE
         1 000647   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      342     4874    4                      ALTRET (BDELETE_FAILED);
      343     4875    4                    IF VD_$RECORDS_DELETED.V# >= 0 THEN

   4875  1 000650   000003 235000 xsym               LDA     VD_$RECORDS_DELETED+3
         1 000651   000655 604000 1                  TMI     s:4877

      344     4876    4                       NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;

   4876  1 000652   200014 236100                    LDQ     NDELRECS,,AUTO
         1 000653   000003 036000 xsym               ADLQ    VD_$RECORDS_DELETED+3
         1 000654   200014 756100                    STQ     NDELRECS,,AUTO

      345     4877    4                    CALL VDG$TEST_1_RANGE (CURR$WINDOW.OPERAND.INTREE$ ->

   4877  1 000655   200004 470500                    LDP0    CURR_WINDOW$,,AUTO
         1 000656   000011 471500                    LDP1    9,,PR0
         1 000657   200003 633500                    EPPR3   AFTER_CMD,,AUTO
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:48   
         1 000660   200125 453500                    STP3    HAD_ERROR+2,,AUTO
         1 000661   200124 451500                    STP1    HAD_ERROR+1,,AUTO
         1 000662   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000663   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000664   000000 701000 xent               TSX1    VDG$TEST_1_RANGE
         1 000665   000000 011000                    NOP     0

      346     4878    4                      VD$IT_BLOCK_EXPR, AFTER_CMD);
      347     4879    4                    END;

      348     4880
      349     4881    3                 CALL VDI$BINSERT (SRC$EVAL.RANGE, SRC$STRM, DEST$EVAL.RANGE,

   4881  1 000666   200006 236100                    LDQ     DEST_STRM$,,AUTO
         1 000667   200127 756100                    STQ     HAD_ERROR+4,,AUTO
         1 000670   200011 236100                    LDQ     DEST_EVAL$,,AUTO
         1 000671   000024 036003                    ADLQ    20,DU
         1 000672   200126 756100                    STQ     HAD_ERROR+3,,AUTO
         1 000673   200005 236100                    LDQ     SRC_STRM$,,AUTO
         1 000674   200125 756100                    STQ     HAD_ERROR+2,,AUTO
         1 000675   000023 236000 xsym               LDQ     VD_6E+19
         1 000676   000024 036003                    ADLQ    20,DU
         1 000677   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000700   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000701   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000702   000000 701000 xent               TSX1    VDI$BINSERT
         1 000703   000771 702000 1                  TSX2    BINSERT_FAILED

      350     4882    3                   DEST$STRM)
      351     4883    3                   ALTRET (BINSERT_FAILED);
      352     4884    3                 IF VD_$RECORDS_INSERTED.V# < 0 THEN EXIT DO_COPY_OPERATION;

   4884  1 000704   000003 235000 xsym               LDA     VD_$RECORDS_INSERTED+3
         1 000705   000736 604000 1                  TMI     s:4899

      353     4885    3                 NINSRECS = NINSRECS + VD_$RECORDS_INSERTED.V#;

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:49   
   4885  1 000706   200015 236100                    LDQ     NINSRECS,,AUTO
         1 000707   000003 036000 xsym               ADLQ    VD_$RECORDS_INSERTED+3
         1 000710   200015 756100                    STQ     NINSRECS,,AUTO

      354     4886    3                 NBLOCKS_COPIED = NBLOCKS_COPIED + 1;

   4886  1 000711   200016 235100                    LDA     NBLOCKS_COPIED,,AUTO
         1 000712   000001 035007                    ADLA    1,DL
         1 000713   200016 755100                    STA     NBLOCKS_COPIED,,AUTO

      355     4887
      356     4888    3                 IF VD_6E.SOURCE.MOVE THEN

   4888  1 000714   000024 234000 xsym               SZN     VD_6E+20
         1 000715   000755 605000 1                  TPL     s:4919

      357     4889    4   DELETE_SOURCE: DO;

   4889  1 000716                       DELETE_SOUR* null
      358     4890                         /*
      359     4891                         *   Delete source block.  At this point, SRC$EVAL.RANGE
      360     4892                         *        specifies the data actually copied.
      361     4893                         */
      362     4894    4                    CALL VDI$BDELETE (SRC$EVAL.RANGE, SRC$STRM, SRC$EDBLK)

   4894  1 000716   200007 236100                    LDQ     SRC_EDBLK$,,AUTO
         1 000717   200126 756100                    STQ     HAD_ERROR+3,,AUTO
         1 000720   200005 236100                    LDQ     SRC_STRM$,,AUTO
         1 000721   200125 756100                    STQ     HAD_ERROR+2,,AUTO
         1 000722   000023 236000 xsym               LDQ     VD_6E+19
         1 000723   000024 036003                    ADLQ    20,DU
         1 000724   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 000725   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 000726   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000727   000000 701000 xent               TSX1    VDI$BDELETE
         1 000730   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:50   
      363     4895    4                      ALTRET (BDELETE_FAILED);
      364     4896    4                    IF VD_$RECORDS_DELETED.V# > 0 THEN

   4896  1 000731   000003 235000 xsym               LDA     VD_$RECORDS_DELETED+3
         1 000732   000755 604400 1                  TMOZ    s:4919

      365     4897    4                       NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;

   4897  1 000733   200014 236100                    LDQ     NDELRECS,,AUTO
         1 000734   000003 036000 xsym               ADLQ    VD_$RECORDS_DELETED+3
         1 000735   200014 756100                    STQ     NDELRECS,,AUTO

      366     4898    4                    END DELETE_SOURCE;

      367     4899    3                 END DO_COPY_OPERATION;

   4899  1 000736   000755 710000 1                  TRA     s:4919

      368     4900
      369     4901    2              ELSE
      370     4902                      /*
      371     4903                      *     We ran out of source, destination, or both.
      372     4904                      */
      373     4905    3                 IF D_FOUND THEN DO;

   4905  1 000737   200023 234100                    SZN     D_FOUND,,AUTO
         1 000740   000746 605000 1                  TPL     s:4912

      374     4906                         /* We ran out of source blocks */
      375     4907    3                    CALL CUTOFF_OR_RAN_DRY_CONDITION (%E$NO_SOURCE_FOR_DEST)

   4907  1 000741   000007 236000 2                  LDQ     7
         1 000742   200123 756100                    STQ     REKEY_INCR+3,,AUTO
         1 000743   001021 701000 1                  TSX1    CUTOFF_OR_RAN_DRY_CONDITION
         1 000744   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      376     4908    3                      ALTRET (CUTOFF_OR_RAN_DRY_FAILED);
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:51   
      377     4909    3                    GOTO BINSERT_FAILED;

   4909  1 000745   000771 710000 1                  TRA     BINSERT_FAILED

      378     4910    3                    END;
      379     4911    2                 ELSE
      380     4912    3                    IF S_FOUND THEN DO;

   4912  1 000746   200022 234100                    SZN     S_FOUND,,AUTO
         1 000747   000755 605000 1                  TPL     s:4919

      381     4913                            /* We ran out of destination blocks */
      382     4914    3                       CALL CUTOFF_OR_RAN_DRY_CONDITION (%E$NO_DEST_FOR_SOURCE)

   4914  1 000750   000011 236000 2                  LDQ     9
         1 000751   200123 756100                    STQ     REKEY_INCR+3,,AUTO
         1 000752   001021 701000 1                  TSX1    CUTOFF_OR_RAN_DRY_CONDITION
         1 000753   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      383     4915    3                         ALTRET (CUTOFF_OR_RAN_DRY_FAILED);
      384     4916    3                       GOTO BINSERT_FAILED;

   4916  1 000754   000771 710000 1                  TRA     BINSERT_FAILED

      385     4917    3                       END;
      386     4918
      387     4919    2              END MAIN_LOOP;

   4919  1 000755   200022 234100                    SZN     S_FOUND,,AUTO
         1 000756   000761 605000 1                  TPL     s:4922
         1 000757   200023 234100                    SZN     D_FOUND,,AUTO
         1 000760   000104 604000 1                  TMI     s:4685

      388     4920
      389     4921
      390     4922    1           CALL SET_COUNTS_INFORM_AND_CLEANUP

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:52   
   4922  1 000761   001062 701000 1                  TSX1    SET_COUNTS_INFORM_AND_CLEANUP
         1 000762   001020 702000 1                  TSX2    FOPEN_FAILED

      391     4923    1             ALTRET (SET_COUNTS_INFORM_CU_FAILED);
      392     4924
      393     4925    1           RETURN;

   4925  1 000763   000000 702200 xent               TSX2  ! X66_ARET

      394     4926
      395     4927
      396     4928                %BOX (TITLE="Error Handlers");

              4940    1   /***************************************************************************
              4942    1    *                                                                         *
              4946    1            *                               Error Handlers                           *
              4948    1            *                                                                        *
              4950    1          ***************************************************************************/

      397     4954
      398     4955    2           DO %NEVER;

      399     4956    2   OVERLAPPING_BLOCKS_FAILURE:
      400     4957    2              CALL VDG$ERRMSG (%E$OVERLAP_BLOCK);

   4957  1 000764   000013 630400 2     OVERLAPPING* EPPR0   11
         1 000765   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000766   000000 701000 xent               TSX1    VDG$ERRMSG
         1 000767   000000 011000                    NOP     0

      401     4958    2              END;    /* Do Never */

      402     4959
      403     4960
      404     4961    2           DO %NEVER;

   4961  1 000770   001016 710000 1                  TRA     COMPARE_LOCS_FAILED
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:53   

      405     4962    2   BINSERT_FAILED:
      406     4963        /*
      407     4964        **           *   At this point, ACTUALLY_COPIED_SRC_RANGE describes what
      408     4965        **           *   was actually copied; SRC$EVAL describes what
      409     4966        **           *   was intended to be copied.  Now set
      410     4967        **           *   SRC$EVAL.RANGE to describe the source not copied.
      411     4968        **           *\
      412     4969        **           CALL VDG$OCLEAR_LOCATION (SRC$EVAL.RANGE.START)
      413     4970        **             ALTRET (OCLEAR_FAILED);
      414     4971        **           CALL VDG$OCOPY_LOCATION (ACTUALLY_COPIED_SRC_RANGE.ENDD,
      415     4972        **             SRC$EVAL.RANGE.START)
      416     4973        **             ALTRET (OCOPY_LOCATION_FAILED);
      417     4974        */
      418     4975    3              IF VD_6E.SOURCE.MOVE THEN DO;

   4975  1 000771   000024 234000 xsym  BINSERT_FAI* SZN     VD_6E+20
         1 000772   001013 605000 1                  TPL     s:4986

      419     4976                      /* Delete source block */
      420     4977    3                 CALL VDI$BDELETE (SRC$EVAL.RANGE, SRC$STRM, SRC$EDBLK)

   4977  1 000773   200007 236100                    LDQ     SRC_EDBLK$,,AUTO
         1 000774   200126 756100                    STQ     HAD_ERROR+3,,AUTO
         1 000775   200005 236100                    LDQ     SRC_STRM$,,AUTO
         1 000776   200125 756100                    STQ     HAD_ERROR+2,,AUTO
         1 000777   000023 236000 xsym               LDQ     VD_6E+19
         1 001000   000024 036003                    ADLQ    20,DU
         1 001001   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 001002   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001003   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001004   000000 701000 xent               TSX1    VDI$BDELETE
         1 001005   001016 702000 1                  TSX2    COMPARE_LOCS_FAILED

      421     4978    3                   ALTRET (BDELETE_FAILED);
      422     4979    3                 IF VD_$RECORDS_DELETED.V# >= 0 THEN

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:54   
   4979  1 001006   000003 235000 xsym               LDA     VD_$RECORDS_DELETED+3
         1 001007   001013 604000 1                  TMI     s:4986

      423     4980    3                    NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;

   4980  1 001010   200014 236100                    LDQ     NDELRECS,,AUTO
         1 001011   000003 036000 xsym               ADLQ    VD_$RECORDS_DELETED+3
         1 001012   200014 756100                    STQ     NDELRECS,,AUTO

      424     4981    3                 END;

      425     4982                /* For star #30893, when we are reading user commands ala
      426     4983                   READ fid or M$SI, and we encounter a "No source found"
      427     4984                   or "No destination found" error, we want to continue with
      428     4985                   the user commands, intead of halting. */
      429     4986    2              CALL SET_COUNTS_INFORM_AND_CLEANUP; /* Ignore Altreturn */

   4986  1 001013   001062 701000 1                  TSX1    SET_COUNTS_INFORM_AND_CLEANUP
         1 001014   000000 011000                    NOP     0

      430     4987    2              RETURN;

   4987  1 001015   000000 702200 xent               TSX2  ! X66_ARET

      431     4988    2              END;     /* Do Never */

      432     4989
      433     4990
      434     4991    1   COMPARE_LOCS_FAILED: ;

   4991  1 001016                       COMPARE_LOC* null
   4991  1 001016                       IRANGE_FAIL* null
   4991  1 001016                       CUTOFF_OR_R* null
   4991  1 001016                       BDELETE_FAI* null
      435     4992    1   IRANGE_FAILED: ;
      436     4993    1   CUTOFF_OR_RAN_DRY_FAILED: ;
      437     4994    1   BDELETE_FAILED: ;
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:55   
      438     4995    1           CALL SET_COUNTS_INFORM_AND_CLEANUP; /* Ignore altreturn */

   4995  1 001016   001062 701000 1                  TSX1    SET_COUNTS_INFORM_AND_CLEANUP
         1 001017   000000 011000                    NOP     0

   4991  1 001020                       FOPEN_FAILED null
   4991  1 001020                       FREKEY_FAIL* null
   4991  1 001020                       SET_COUNTS_* null
   4991  1 001020                       OALLOC_FAIL* null
   4991  1 001020                       OCLEAR_FAIL* null
   4991  1 001020                       OCOPY_RANGE* null
   4991  1 001020                       OCOPY_LOCAT* null
      439     4996
      440     4997    1   FOPEN_FAILED: ;
      441     4998    1   FREKEY_FAILED: ;
      442     4999    1   SET_COUNTS_INFORM_CU_FAILED: ;
      443     5000    1   OALLOC_FAILED: ;
      444     5001    1   OCLEAR_FAILED: ;
      445     5002    1   OCOPY_RANGE_FAILED: ;
      446     5003    1   OCOPY_LOCATION_FAILED: ;
      447     5004    1           ALTRETURN;

   5004  1 001020   000000 702200 xent               TSX2  ! X66_AALT

      448     5005
      449     5006                %BOX (TITLE=CUTOFF_OR_RAN_DRY_CONDITION, PAGE=YES);
              5014    1
              5018    1   /***************************************************************************
              5020    1    *                                                                         *
              5024    1            *                        CUTOFF_OR_RAN_DRY_CONDITION                     *
              5026    1            *                                                                        *
              5028    1          ***************************************************************************/

      450     5032    1   CUTOFF_OR_RAN_DRY_CONDITION: PROC (ERRCODE) ALTRET;

   5032  1 001021   200122 741300       CUTOFF_OR_R* STX1  ! REKEY_INCR+2,,AUTO

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:56   
      451     5033    2   DCL ERRCODE UBIN;   /* Either %E$NO_DEST_FOR_SOURCE or %E$NO_SOURCE_FOR_DEST */
      452     5034
      453     5035
      454     5036    2           CALL VDG$INFOMSG (ERRCODE, NBLOCKS_COPIED);

   5036  1 001022   200016 630500                    EPPR0   NBLOCKS_COPIED,,AUTO
         1 001023   200125 450500                    STP0    HAD_ERROR+2,,AUTO
         1 001024   200123 236100                    LDQ     @ERRCODE,,AUTO
         1 001025   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 001026   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001027   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001030   000000 701000 xent               TSX1    VDG$INFOMSG
         1 001031   000000 011000                    NOP     0

      455     5037    2           CALL VDG$EREPORT_ERROR;

   5037  1 001032   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001033   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         1 001034   000000 011000                    NOP     0

      456     5038
      457     5039                /* Shrink SRC$EVAL.RANGE to describe what was copied -- nothing! */
      458     5040    2           CALL VDG$OCLEAR_LOCATION (SRC$EVAL.RANGE.ENDD)

   5040  1 001035   000023 236000 xsym               LDQ     VD_6E+19
         1 001036   000035 036003                    ADLQ    29,DU
         1 001037   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 001040   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001041   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001042   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         1 001043   001060 702000 1                  TSX2    OALLOC_FAILED

      459     5041    2             ALTRET (OCLEAR_LOCATION_FAILED);
      460     5042    2           CALL VDG$OCOPY_LOCATION (SRC$EVAL.RANGE.START, SRC$EVAL.RANGE.ENDD)

   5042  1 001044   000023 236000 xsym               LDQ     VD_6E+19
         1 001045   000035 036003                    ADLQ    29,DU
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:57   
         1 001046   200125 756100                    STQ     HAD_ERROR+2,,AUTO
         1 001047   000023 236000 xsym               LDQ     VD_6E+19
         1 001050   000024 036003                    ADLQ    20,DU
         1 001051   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 001052   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001053   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001054   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         1 001055   001060 702000 1                  TSX2    OALLOC_FAILED

      461     5043    2             ALTRET (OCOPY_LOCATION_FAILED);
      462     5044
      463     5045    2           RETURN;

   5045  1 001056   200122 221300                    LDX1  ! REKEY_INCR+2,,AUTO
         1 001057   000001 702211                    TSX2  ! 1,X1

   5036  1 001060                       OALLOC_FAIL* null
   5036  1 001060                       OCOPY_LOCAT* null
   5036  1 001060                       OCLEAR_LOCA* null
      464     5046
      465     5047
      466     5048    2   OALLOC_FAILED: ;
      467     5049    2   OCOPY_LOCATION_FAILED: ;
      468     5050    2   OCLEAR_LOCATION_FAILED: ;
      469     5051    2           ALTRETURN;

   5051  1 001060   200122 221300                    LDX1  ! REKEY_INCR+2,,AUTO
         1 001061   000000 702211                    TSX2  ! 0,X1

      470     5052
      471     5053    2   END CUTOFF_OR_RAN_DRY_CONDITION;
      472     5054
      473     5055                %BOX (TITLE=SET_COUNTS_INFORM_AND_CLEANUP, PAGE=YES);
              5063    2
              5067    2   /***************************************************************************
              5069    2    *                                                                         *
              5073    2            *                       SET_COUNTS_INFORM_AND_CLEANUP                    *
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:58   
              5075    2            *                                                                        *
              5077    2          ***************************************************************************/

      474     5081
      475     5082        /*I* NAME: SET_COUNTS_INFORM_AND_CLEANUP
      476     5083            PARAMETERS:
      477     5084                None.
      478     5085            INPUT:
      479     5086                NBLOCKS_COPIED
      480     5087                SAVE_SRC_RANGE
      481     5088                SAVE_DEST_RANGE
      482     5089            OUTPUT:
      483     5090            DESCRIPTION:
      484     5091                Set new value of predefined name $SITES.
      485     5092                Report # blocks successfully copied to the user.
      486     5093                Free any dynamic objects owned by our auto storage.
      487     5094        */
      488     5095
      489     5096    1   SET_COUNTS_INFORM_AND_CLEANUP: PROC ALTRET;

   5096  1 001062   200122 741300       SET_COUNTS_* STX1  ! REKEY_INCR+2,,AUTO

      490     5097
      491     5098    2   DCL HAD_ERROR BIT(1) ALIGNED;
      492     5099
      493     5100
      494     5101
      495     5102    2           HAD_ERROR = %FALSE;

   5102  1 001063   200123 450100                    STZ     HAD_ERROR,,AUTO

      496     5103
      497     5104    2           CALL VDI$CSET_COUNT (VD_LOC_$SITES, NBLOCKS_COPIED)

   5104  1 001064   200016 630500                    EPPR0   NBLOCKS_COPIED,,AUTO
         1 001065   200125 450500                    STP0    HAD_ERROR+2,,AUTO
         1 001066   000014 236000 2                  LDQ     12
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:59   
         1 001067   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 001070   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001071   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001072   000000 701000 xent               TSX1    VDI$CSET_COUNT
         1 001073   001075 702000 1                  TSX2    s:5106
         1 001074   001077 710000 1                  TRA     s:5109

      498     5105    3           WHENALTRETURN DO;

      499     5106    3              HAD_ERROR = %TRUE;

   5106  1 001075   400000 236003                    LDQ     -131072,DU
         1 001076   200123 756100                    STQ     HAD_ERROR,,AUTO

      500     5107    3              END;

      501     5108
      502     5109    2           RCCL = %E$INFO_N_BLOCKS_COPIED;

   5109  1 001077   000206 235007                    LDA     134,DL
         1 001100   200017 755100                    STA     RCCL,,AUTO

      503     5110    2           IF NBLOCKS_COPIED = 1 THEN

   5110  1 001101   200016 236100                    LDQ     NBLOCKS_COPIED,,AUTO
         1 001102   000001 116007                    CMPQ    1,DL
         1 001103   001106 601000 1                  TNZ     s:5112

      504     5111    2              RCCL = %E$INFO_1_BLOCK_COPIED;

   5111  1 001104   000211 235007                    LDA     137,DL
         1 001105   200017 755100                    STA     RCCL,,AUTO

      505     5112    3           IF VD_6E.SOURCE.MOVE THEN DO;

   5112  1 001106   000024 234000 xsym               SZN     VD_6E+20
         1 001107   001116 605000 1                  TPL     s:5117
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:60   

      506     5113    3              RCCL = %E$INFO_N_BLOCKS_MOVED;

   5113  1 001110   000207 235007                    LDA     135,DL
         1 001111   200017 755100                    STA     RCCL,,AUTO

      507     5114    3              IF NBLOCKS_COPIED = 1 THEN

   5114  1 001112   000001 116007                    CMPQ    1,DL
         1 001113   001116 601000 1                  TNZ     s:5117

      508     5115    3                 RCCL = %E$INFO_1_BLOCK_MOVED;

   5115  1 001114   000212 235007                    LDA     138,DL
         1 001115   200017 755100                    STA     RCCL,,AUTO

      509     5116    3              END;

      510     5117    2           IF NBLOCKS_COPIED = 0 THEN

   5117  1 001116   000000 116003                    CMPQ    0,DU
         1 001117   001123 601000 1                  TNZ     s:5119

      511     5118    2              NBLOCKS_COPIED = BITBIN ('3116157000'O);

   5118  1 001120   000000 236000 0                  LDQ     0
         1 001121   000006 772000                    QRL     6
         1 001122   200016 756100                    STQ     NBLOCKS_COPIED,,AUTO

      512     5119    2           CALL VDG$INFOMSG (RCCL, NBLOCKS_COPIED);

   5119  1 001123   200016 630500                    EPPR0   NBLOCKS_COPIED,,AUTO
         1 001124   200125 450500                    STP0    HAD_ERROR+2,,AUTO
         1 001125   200017 631500                    EPPR1   RCCL,,AUTO
         1 001126   200124 451500                    STP1    HAD_ERROR+1,,AUTO
         1 001127   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001130   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:61   
         1 001131   000000 701000 xent               TSX1    VDG$INFOMSG
         1 001132   000000 011000                    NOP     0

      513     5120    2           CALL VDG$EREPORT_ERROR;

   5120  1 001133   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 001134   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         1 001135   000000 011000                    NOP     0

      514     5121
      515     5122    2           CALL VDI$CSET_COUNT (VD_LOC_$RECORDS_DELETED, NDELRECS)

   5122  1 001136   200014 630500                    EPPR0   NDELRECS,,AUTO
         1 001137   200125 450500                    STP0    HAD_ERROR+2,,AUTO
         1 001140   000015 236000 2                  LDQ     13
         1 001141   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 001142   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001143   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001144   000000 701000 xent               TSX1    VDI$CSET_COUNT
         1 001145   001147 702000 1                  TSX2    s:5123
         1 001146   001151 710000 1                  TRA     s:5124

      516     5123    3           WHENALTRETURN DO; HAD_ERROR = %TRUE; END;

   5123  1 001147   400000 236003                    LDQ     -131072,DU
         1 001150   200123 756100                    STQ     HAD_ERROR,,AUTO

      517     5124    2           CALL VDI$CSET_COUNT (VD_LOC_$RECORDS_INSERTED, NINSRECS)

   5124  1 001151   200015 630500                    EPPR0   NINSRECS,,AUTO
         1 001152   200125 450500                    STP0    HAD_ERROR+2,,AUTO
         1 001153   000016 236000 2                  LDQ     14
         1 001154   200124 756100                    STQ     HAD_ERROR+1,,AUTO
         1 001155   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001156   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001157   000000 701000 xent               TSX1    VDI$CSET_COUNT
         1 001160   001162 702000 1                  TSX2    s:5125
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:62   
         1 001161   001164 710000 1                  TRA     s:5128

      518     5125    3           WHENALTRETURN DO; HAD_ERROR = %TRUE; END;

   5125  1 001162   400000 236003                    LDQ     -131072,DU
         1 001163   200123 756100                    STQ     HAD_ERROR,,AUTO

      519     5126
      520     5127                /* Free objects we own */
      521     5128    2           CALL VDG$OCLEAR_RANGE (SAVE_SRC_RANGE)

   5128  1 001164   200031 630500                    EPPR0   SAVE_SRC_RANGE,,AUTO
         1 001165   200124 450500                    STP0    HAD_ERROR+1,,AUTO
         1 001166   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001167   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001170   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         1 001171   001212 702000 1                  TSX2    FCLOSE_FAILED

      522     5129    2             ALTRET (OCLEAR_RANGE_FAILED);
      523     5130    2           CALL VDG$OCLEAR_RANGE (SAVE_DEST_RANGE)

   5130  1 001172   200053 630500                    EPPR0   SAVE_DEST_RANGE,,AUTO
         1 001173   200124 450500                    STP0    HAD_ERROR+1,,AUTO
         1 001174   200124 630500                    EPPR0   HAD_ERROR+1,,AUTO
         1 001175   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001176   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         1 001177   001212 702000 1                  TSX2    FCLOSE_FAILED

      524     5131    2             ALTRET (OCLEAR_RANGE_FAILED);
      525     5132
      526     5133    2           CALL VDA$FCLOSE (SRC$STRM) ALTRET (FCLOSE_FAILED);

   5133  1 001200   200005 630500                    EPPR0   SRC_STRM$,,AUTO
         1 001201   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001202   000000 701000 xent               TSX1    VDA$FCLOSE
         1 001203   001212 702000 1                  TSX2    FCLOSE_FAILED

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:63   
      527     5134    2           IF HAD_ERROR THEN

   5134  1 001204   200123 234100                    SZN     HAD_ERROR,,AUTO
         1 001205   001210 605000 1                  TPL     s:5136

      528     5135    2              ALTRETURN;

   5135  1 001206   200122 221300                    LDX1  ! REKEY_INCR+2,,AUTO
         1 001207   000000 702211                    TSX2  ! 0,X1

      529     5136    2           RETURN;

   5136  1 001210   200122 221300                    LDX1  ! REKEY_INCR+2,,AUTO
         1 001211   000001 702211                    TSX2  ! 1,X1

   5134  1 001212                       FCLOSE_FAIL* null
   5134  1 001212                       OALLOC_FAIL* null
   5134  1 001212                       OCLEAR_RANG* null
      530     5137
      531     5138
      532     5139    2   FCLOSE_FAILED: ;
      533     5140    2   OALLOC_FAILED: ;
      534     5141    2   OCLEAR_RANGE_FAILED: ;
      535     5142    2           ALTRETURN;

   5142  1 001212   200122 221300                    LDX1  ! REKEY_INCR+2,,AUTO
         1 001213   000000 702211                    TSX2  ! 0,X1
      536     5143
      537     5144    2   END SET_COUNTS_INFORM_AND_CLEANUP;
      538     5145
      539     5146    1   END VDI$CAFTER;
      540     5147        %EOD;

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:64   
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CAFTER.
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:65   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   123-0-0/w PTR         r     1 @ERRCODE
    76-0-0/w STRC(648)   r     1 ACTUALLY_COPIED_SRC_RANGE
     3-0-0/w BIT         r     1 AFTER_CMD                 30-0-0/w PTR         r     1 BOF_KEY$
     4-0-0/w PTR         r     1 CURR_WINDOW$              10-0-0/w PTR         r     1 DEST_EDBLK$
    11-0-0/w PTR         r     1 DEST_EVAL$                25-0-0/w PTR         r     1 DEST_FID$
    27-0-0/w PTR         r     1 DEST_KEY$                 75-0-0/w PTR         r     1 DEST_LOC$
     6-0-0/w PTR         r     1 DEST_STRM$                23-0-0/w BIT         r     1 D_FOUND
    *0-0-0/w UBIN        r     1 ERRCODE                  123-0-0/w BIT         r     1 HAD_ERROR
    16-0-0/w UBIN        r     1 NBLOCKS_COPIED            14-0-0/w UBIN        r     1 NDELRECS
    13-0-0/w UBIN        r     1 NDEST_FOUND               15-0-0/w UBIN        r     1 NINSRECS
    12-0-0/w UBIN        r     1 NSRC_FOUND                17-0-0/w SBIN        r     1 RCCL
   120-0-0/w STRC(72)    r     1 REKEY_INCR                53-0-0/w STRC(648)   r     1 SAVE_DEST_RANGE
    31-0-0/w STRC(648)   r     1 SAVE_SRC_RANGE             7-0-0/w PTR         r     1 SRC_EDBLK$
    24-0-0/w PTR         r     1 SRC_FID$                  26-0-0/w PTR         r     1 SRC_KEY$
     5-0-0/w PTR         r     1 SRC_STRM$                 22-0-0/w BIT         r     1 S_FOUND
    20-0-0/w PTR         r     1 THIS_WILD$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$BY                     0-0-0/w STRC(144)   r     1 VD_$RECORDS_DELETED
     0-0-0/w STRC(144)   r     1 VD_$RECORDS_INSERTED       0-0-0/w STRC(22644) r     1 VD_6E
     0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$         0-0-0/b BIT         r     1 VD_EOF_DELETED
     0-0-0/w STRC(72)    r     1 VD_KEY_NUMERIC_BOF
     0-0-0/w STRC(324)   r     1 VD_LOC_$RECORDS_DELETED
     0-0-0/w STRC(324)   r     1 VD_LOC_$RECORDS_INSERTED
     0-0-0/w STRC(324)   r     1 VD_LOC_$SITES

PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:66   
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(900)   r     1 CURR$WINDOW                0-0-0/w STRC(936)   r     1 DEST$EDBLK
     0-0-0/w STRC(2124)  r     1 DEST$EVAL                  0-0-0/w STRC(324)   r     1 DEST$LOC
     0-0-0/w STRC(864)   r     1 DEST$STRM                  0-0-0/w STRC(936)   r     1 SRC$EDBLK
     0-0-0/w STRC(2124)  r     1 SRC$EVAL                   0-0-0/w STRC(864)   r     1 SRC$STRM
     0-0-0/w STRC(468)   r     1 VD$FILE_NODE               0-0-0/w STRC(1116)  r     1 VD$IT_BLOCK_EXPR
     0-0-0/w STRC(72)    r     1 VD$KEY_NUMBER              0-0-0/w ASTR(9)     r     1 VD$TEXTC
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE            0-0-0/w STRC(792)   r     1 VD$WILD_STRINGS
     0-0-0/w STRC(792)   r     1 WILD


   Procedure VDI$CAFTER requires 652 words for executable code.
   Procedure VDI$CAFTER requires 88 words of local(AUTO) storage.
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:67   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:68   
          MINI XREF LISTING

ACTUALLY_COPIED_SRC_RANGE
      2893**DCL      4651<<ASSIGN
AFTER_CMD
      2724**DCL      4636<<ASSIGN   4640<<ASSIGN   4819>>IF       4852>>IF       4870>>IF       4877<>CALL
AFTER_OVER_CMDS_COMMON_CODE
      4644**LABEL    4637--GOTO
BDELETE_FAILED
      4991**LABEL    4720--CALLALT  4873--CALLALT  4894--CALLALT  4977--CALLALT
BINSERT_FAILED
      4975**LABEL    4881--CALLALT  4909--GOTO     4916--GOTO
BOF_KEY$
      2745**DCL      4816<<ASSIGN   4816<<ASSIGN   4819>>IF       4819>>IF       4819>>IF       4819>>IF
COMPARE_LOCS_FAILED
      4991**LABEL    4857--CALLALT  4862--CALLALT
CURR$WINDOW.OPERAND
      3018**DCL      4728<>CALL
CURR$WINDOW.OPERAND.EDIT_BLOCK$
      3020**DCL      4662>>ASSIGN
CURR$WINDOW.OPERAND.EVAL$
      3020**DCL      4660>>ASSIGN   4734>>ASSIGN
CURR$WINDOW.OPERAND.INTREE$
      3020**DCL      4834>>ASSIGN   4877>>CALL
CURR$WINDOW.OPERAND.STREAM$
      3020**DCL      4661>>ASSIGN
CURR_WINDOW$
      2725**DCL      2979--IMP-PTR  4659<<ASSIGN   4660>>ASSIGN   4661>>ASSIGN   4662>>ASSIGN   4728>>CALL
      4734>>ASSIGN   4834>>ASSIGN   4877>>CALL
CUTOFF_OR_RAN_DRY_CONDITION
      5032**PROC     4907--CALL     4914--CALL
CUTOFF_OR_RAN_DRY_FAILED
      4991**LABEL    4907--CALLALT  4914--CALLALT
DEST$EDBLK
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:69   
      3404**DCL      4873<>CALL
DEST$EVAL.RANGE
      3902**DCL      4691<>CALL     4756<>CALL     4757<<ASSIGN   4841<>CALL     4843<<ASSIGN   4873<>CALL
      4881<>CALL
DEST$EVAL.RANGE.ENDD
      3942**DCL      4853--ASSIGN   4857<>CALL
DEST$EVAL.RANGE.ENDD.EOF
      3958**DCL      4819>>IF
DEST$EVAL.RANGE.START
      3914**DCL      4855--ASSIGN
DEST$EVAL.RANGE.START.KEY.REP#
      3928**DCL      4806>>IF
DEST$EVAL.RANGE.START.KEY.V$
      3928**DCL      4806>>ASSIGN   4806--ASSIGN
DEST$EVAL.STATE#
      4030**DCL      4727<<ASSIGN
DEST$LOC
      4041**DCL      4862<>CALL
DEST$STRM
      3151**DCL      4845<>CALL     4873<>CALL     4881<>CALL
DEST$STRM.FILE_KEY.REP#
      3190**DCL      4781>>IF
DEST$STRM.FILE_KEY.V$
      3190**DCL      4781>>ASSIGN   4781--ASSIGN
DEST_EDBLK$
      2729**DCL      3404--IMP-PTR  4662<<ASSIGN   4873>>CALL
DEST_EVAL$
      2730**DCL      3796--IMP-PTR  4660<<ASSIGN   4691>>CALL     4727>>ASSIGN   4734<<ASSIGN   4756>>CALL
      4757>>ASSIGN   4806>>IF       4806>>ASSIGN   4806>>ASSIGN   4819>>IF       4841>>CALL     4843>>ASSIGN
      4853>>ASSIGN   4855>>ASSIGN   4857>>CALL     4873>>CALL     4881>>CALL
DEST_FID$
      2742**DCL      4781<<ASSIGN   4781<<ASSIGN   4796>>IF       4796>>IF
DEST_KEY$
      2744**DCL      4806<<ASSIGN   4806<<ASSIGN   4819>>IF       4819>>IF
DEST_LOC$
      2884**DCL      4041--IMP-PTR  4853<<ASSIGN   4855<<ASSIGN   4862>>CALL
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:70   
DEST_STRM$
      2727**DCL      3151--IMP-PTR  4661<<ASSIGN   4781>>IF       4781>>ASSIGN   4781>>ASSIGN   4845>>CALL
      4873>>CALL     4881>>CALL
DO_COPY_OPERATION
      4763**LABEL    4884--EXIT
D_FOUND
      2740**DCL      4681<<ASSIGN   4684>>DOWHILE  4728<>CALL     4737>>ASSIGN   4738>>IF       4752>>IF
      4759<<ASSIGN   4762>>IF       4905>>IF
ERRCODE IN PROCEDURE CUTOFF_OR_RAN_DRY_CONDITION
      5033**DCL      5032--PROC     5036<>CALL
FCLOSE_FAILED IN PROCEDURE SET_COUNTS_INFORM_AND_CLEANUP
      5134**LABEL    5133--CALLALT
FOPEN_FAILED
      4991**LABEL    4670--CALLALT
FREKEY_FAILED
      4991**LABEL    4845--CALLALT
HAD_ERROR IN PROCEDURE SET_COUNTS_INFORM_AND_CLEANUP
      5098**DCL      5102<<ASSIGN   5106<<ASSIGN   5123<<ASSIGN   5125<<ASSIGN   5134>>IF
IRANGE_FAILED
      4991**LABEL    4695--CALLALT  4731--GOTO
MAIN_LOOP
      4684**LABEL    4848--GOTO
NBLOCKS_COPIED
      2735**DCL      4648<<ASSIGN   4847<<ASSIGN   4847>>ASSIGN   4886<<ASSIGN   4886>>ASSIGN   5036<>CALL
      5104<>CALL     5110>>IF       5114>>IF       5117>>IF       5118<<ASSIGN   5119<>CALL
NDELRECS
      2733**DCL      4646<<ASSIGN   4876<<ASSIGN   4876>>ASSIGN   4897<<ASSIGN   4897>>ASSIGN   4980<<ASSIGN
      4980>>ASSIGN   5122<>CALL
NDEST_FOUND
      2732**DCL      4645<<ASSIGN   4737<<ASSIGN   4737>>ASSIGN   4752>>IF
NINSRECS
      2734**DCL      4647<<ASSIGN   4885<<ASSIGN   4885>>ASSIGN   5124<>CALL
NSRC_FOUND
      2731**DCL      4644<<ASSIGN   4736<<ASSIGN   4736>>ASSIGN   4738>>IF
OCLEAR_FAILED
      4991**LABEL    4685--CALLALT  4689--CALLALT  4745--CALLALT  4756--CALLALT  4841--CALLALT
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:71   
OCLEAR_LOCATION_FAILED IN PROCEDURE CUTOFF_OR_RAN_DRY_CONDITION
      5036**LABEL    5040--CALLALT
OCLEAR_RANGE_FAILED IN PROCEDURE SET_COUNTS_INFORM_AND_CLEANUP
      5134**LABEL    5128--CALLALT  5130--CALLALT
OCOPY_LOCATION_FAILED IN PROCEDURE CUTOFF_OR_RAN_DRY_CONDITION
      5036**LABEL    5042--CALLALT
OCOPY_RANGE_FAILED
      4991**LABEL    4687--CALLALT  4691--CALLALT
OVERLAPPING_BLOCKS_FAILURE
      4957**LABEL    4865--GOTO
RCCL
      2736**DCL      4857<>CALL     4861>>IF       4862<>CALL     4864>>IF       5109<<ASSIGN   5111<<ASSIGN
      5113<<ASSIGN   5115<<ASSIGN   5119<>CALL
REKEY_INCR
      2962**DCL      4845<>CALL
REKEY_INCR.BYTES#
      2966**DCL      4834<<ASSIGN   4836>>IF       4837<<ASSIGN   4838>>IF       4839<<ASSIGN
REKEY_INCR.LENGTH#
      2966**DCL      4833<<ASSIGN
REKEY_INCR.REP#
      2966**DCL      4832<<ASSIGN
REKEY_INCR.TYPE#
      2966**DCL      4831<<ASSIGN
SAVE_DEST_RANGE
      2823**DCL      4650<<ASSIGN   4689<>CALL     4691<>CALL     4757>>ASSIGN   4758<<ASSIGN   4843>>ASSIGN
      4844<<ASSIGN   5130<>CALL
SAVE_SRC_RANGE
      2754**DCL      4649<<ASSIGN   4685<>CALL     4687<>CALL     4747>>ASSIGN   4748<<ASSIGN   5128<>CALL
SET_COUNTS_INFORM_AND_CLEANUP
      5096**PROC     4922--CALL     4986--CALL     4995--CALL
SET_COUNTS_INFORM_CU_FAILED
      4991**LABEL    4922--CALLALT
SRC$EDBLK
      3257**DCL      4720<>CALL     4894<>CALL     4977<>CALL
SRC$EDBLK.FILE_KEY
      3293**DCL      4670<>CALL
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:72   
SRC$EDBLK.OPTIONS
      3376**DCL      4670<>CALL
SRC$EDBLK.OPTIONS.EXIST#
      3379**DCL      4673>>IF       4674<<ASSIGN
SRC$EDBLK.OPTIONS.STRUCTURE$
      3378**DCL      4705>>IF
SRC$EVAL.RANGE
      3657**DCL      4687<>CALL     4745<>CALL     4747<<ASSIGN   4881<>CALL     4894<>CALL     4977<>CALL
SRC$EVAL.RANGE.ENDD
      3697**DCL      4862<>CALL     5040<>CALL     5042<>CALL
SRC$EVAL.RANGE.ENDD.EOF
      3713**DCL      4819>>IF
SRC$EVAL.RANGE.START
      3669**DCL      4857<>CALL     5042<>CALL
SRC$EVAL.RANGE.START.KEY.REP#
      3683**DCL      4792>>IF
SRC$EVAL.RANGE.START.KEY.V$
      3683**DCL      4792>>ASSIGN   4792--ASSIGN
SRC$EVAL.STATE#
      3785**DCL      4694<<ASSIGN
SRC$STRM
      3045**DCL      4670<>CALL     4720<>CALL     4845<>CALL     4881<>CALL     4894<>CALL     4977<>CALL
      5133<>CALL
SRC$STRM.FILE_KEY.REP#
      3084**DCL      4771>>IF
SRC$STRM.FILE_KEY.V$
      3084**DCL      4771>>ASSIGN   4771--ASSIGN
SRC_EDBLK$
      2728**DCL      3257--IMP-PTR  4657<<ASSIGN   4664>>IF       4670>>CALL     4670>>CALL     4673>>IF
      4674>>ASSIGN   4705>>IF       4720>>CALL     4894>>CALL     4977>>CALL
SRC_FID$
      2741**DCL      4771<<ASSIGN   4771<<ASSIGN   4796>>IF       4796>>IF
SRC_KEY$
      2743**DCL      4792<<ASSIGN   4792<<ASSIGN   4819>>IF       4819>>IF
SRC_STRM$
      2726**DCL      3045--IMP-PTR  4656<<ASSIGN   4670>>CALL     4720>>CALL     4771>>IF       4771>>ASSIGN
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:73   
      4771>>ASSIGN   4845>>CALL     4881>>CALL     4894>>CALL     4977>>CALL     5133>>CALL
S_FOUND
      2739**DCL      4680<<ASSIGN   4684>>DOWHILE  4695<>CALL     4736>>ASSIGN   4738>>IF       4743<<ASSIGN
      4752>>IF       4762>>IF       4912>>IF
THIS_WILD$
      2737**DCL      4191--IMP-PTR  4714<<ASSIGN   4717>>DOUNTIL  4718<<ASSIGN   4718>>ASSIGN   4719>>IF
      4719>>IF       4720>>CALL
VD$FILE_NODE.DESC.SPEC.V$
      4477**DCL      4659>>ASSIGN
VD$IT_BLOCK_EXPR
      4491**DCL      4877<>CALL
VD$IT_BLOCK_EXPR.OPTIONS.KEY_INCR
      4626**DCL      4834--ASSIGN
VD$KEY_NUMBER.BYTES#
      4387**DCL      4834>>ASSIGN
VD$TEXTC.BYTES
      4309**DCL      4796>>IF       4796>>IF       4819>>IF       4819>>IF       4819>>IF       4819>>IF
VD$TEXTC.LENGTH#
      4307**DCL      4309--IMP-SIZ  4796>>IF       4796>>IF       4819>>IF       4819>>IF       4819>>IF
      4819>>IF
VD$TEXTC_REMOTE.LENGTH#
      4368**DCL      4370--IMP-SIZ  4771--ASSIGN   4781--ASSIGN   4792--ASSIGN   4806--ASSIGN   4816--ASSIGN
VD$WILD_STRINGS.N_WILDCARDS#
      4104**DCL      4707>>IF       4714>>ASSIGN
VDA$FCLOSE
      2431**DCL-ENT  5133--CALL
VDA$FOPEN
      2432**DCL-ENT  4670--CALL
VDA$FREKEY
      2433**DCL-ENT  4845--CALL
VDE$IRANGE
      2434**DCL-ENT  4695--CALL     4728--CALL
VDG$COMPARE_LOCS
      2438**DCL-ENT  4857--CALL     4862--CALL
VDG$EREPORT_ERROR
      2448**DCL-ENT  4666--CALL     5037--CALL     5120--CALL
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:74   
VDG$ERRMSG
      2439**DCL-ENT  4957--CALL
VDG$INFOMSG
      2440**DCL-ENT  5036--CALL     5119--CALL
VDG$OCLEAR_LOCATION
      2446**DCL-ENT  5040--CALL
VDG$OCLEAR_RANGE
      2445**DCL-ENT  4685--CALL     4689--CALL     4745--CALL     4756--CALL     4841--CALL     5128--CALL
      5130--CALL
VDG$OCOPY_LOCATION
      2447**DCL-ENT  5042--CALL
VDG$OCOPY_RANGE
      2444**DCL-ENT  4687--CALL     4691--CALL
VDG$TEST_1_RANGE
      2442**DCL-ENT  4877--CALL
VDG$WARNMSG
      2441**DCL-ENT  4665--CALL
VDI$BDELETE
      2436**DCL-ENT  4720--CALL     4873--CALL     4894--CALL     4977--CALL
VDI$BINSERT
      2435**DCL-ENT  4881--CALL
VDI$CSET_COUNT
      2437**DCL-ENT  5104--CALL     5122--CALL     5124--CALL
VD_$BY.V#
      2705**DCL      4837>>ASSIGN
VD_$RECORDS_DELETED.V#
      2615**DCL      4875>>IF       4876>>ASSIGN   4896>>IF       4897>>ASSIGN   4979>>IF       4980>>ASSIGN
VD_$RECORDS_INSERTED.V#
      2660**DCL      4884>>IF       4885>>ASSIGN
VD_6E.SOURCE.MOVE
      2482**DCL      4738>>IF       4888>>IF       4975>>IF       5112>>IF
VD_6E.SOURCE.OPERAND
      2478**DCL      4695<>CALL
VD_6E.SOURCE.OPERAND.EDIT_BLOCK$
      2480**DCL      4657>>ASSIGN
VD_6E.SOURCE.OPERAND.EVAL$
PL6.E3A0      #001=VDI$CAFTER File=VDI$COMMANDS_EDITING.:VDA5TSI                 FRI 07/04/97 11:29 Page:75   
      2480**DCL      3551--IMP-PTR  4687>>CALL     4694>>ASSIGN   4745>>CALL     4747>>ASSIGN   4792>>IF
      4792>>ASSIGN   4792>>ASSIGN   4819>>IF       4857>>CALL     4862>>CALL     4881>>CALL     4894>>CALL
      4977>>CALL     5040>>CALL     5042>>CALL     5042>>CALL
VD_6E.SOURCE.OPERAND.STREAM$
      2480**DCL      4656>>ASSIGN
VD_6E.SOURCE.WILD_STRINGS
      2482**DCL      4708<<ASSIGN   4724<<ASSIGN   4730<<ASSIGN   4744>>IF       4751<<ASSIGN
VD_6E.STRUCTURE_SCRATCH$
      2466**DCL      4705>>IF
VD_6E.WILD_STRINGS$
      2482**DCL      4076--IMP-PTR  4705>>IF       4707>>IF       4714>>ASSIGN   4714>>ASSIGN   4717>>DOUNTIL
VD_CURRENT_WINDOW$
      2487**DCL      4659>>ASSIGN
VD_EOF_DELETED
      2488**DCL      4872<<ASSIGN
VD_KEY_NUMERIC_BOF.REP#
      2720**DCL      4816>>IF
VD_KEY_NUMERIC_BOF.V$
      2720**DCL      4816>>ASSIGN   4816--ASSIGN
VD_LOC_$RECORDS_DELETED
      2525**DCL      5122<>CALL
VD_LOC_$RECORDS_INSERTED
      2553**DCL      5124<>CALL
VD_LOC_$SITES
      2497**DCL      5104<>CALL
WILD.W
      4219**DCL      4714--ASSIGN   4718--ASSIGN
WILD.W.RANGE
      4231**DCL      4720<>CALL
WILD.W.RANGE.ENDD
      4271**DCL      4719>>IF
WILD.W.RANGE.START
      4243**DCL      4719>>IF

PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:76   
      541        1        /*T***********************************************************/
      542        2        /*T*                                                         */
      543        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      544        4        /*T*                                                         */
      545        5        /*T***********************************************************/
      546        6
      547        7        /*D*  NAME: VDI$CCOPY
      548        8            PARAMETERS:
      549        9                None.
      550       10            INPUT:
      551       11                VD_6E.SOURCE.OPERAND must specify the source operand:
      552       12                    .INTREE$ must point to the InTree for the source operand.
      553       13                        It's .DOMAINN must be %CLEAR, and it's .OPTIONS
      554       14                        must be completely filled in.
      555       15                    .EDIT_BLOCK$ must point to a VD$BLOCK_DESC specifying the
      556       16                        enclosing domain the source operand.
      557       17                    .EVAL$ must point to a VD$EVAL for the source operand.
      558       18                        It must be initialized, ready for VDE$IRANGE.
      559       19            OUTPUT:
      560       20                VD_6E.SOURCE.MOVE will be set or reset, depending on the
      561       21                    type of command this is:  COPY or MOVE.
      562       22            DESCRIPTION:
      563       23        */
      564       24
      565       25        VDI$CCOPY: PROC ALTRET ;
      566       26
      567       27        %INCLUDE VD_MACROS_M;
      568     2242
      569     2243
      570     2244        %VD_6E (STCLASS=SYMREF);
      571     2280    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      572     2281        %VD$FILE_NODE (NAME=WINDOW_NODE, STCLASS="BASED(VD_CURRENT_WINDOW$)");
      573     2374        %VD$IT_BLOCK_EXPR (NAME=IT$BLOCK_EXPR);
      574     2524        %VD$WINDOW_SPEC;
      575     2590
      576     2591
      577     2592    1   DCL VDE$IOPEN_SOURCE ENTRY ALTRET;
PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:77   
      578     2593
      579     2594
      580     2595
      581     2596    1           VD_6E.SOURCE.MOVE = %FALSE;
      582     2597    1           GOTO COPY_MOVE;
      583     2598
      584     2599    1   VDI$CMOVE: ENTRY ALTRET;
      585     2600
      586     2601    1           VD_6E.SOURCE.MOVE = %TRUE;
      587     2602
      588     2603    1   COPY_MOVE:
      589     2604
      590     2605    1           WINDOW_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC.OPERAND.INTREE$->
      591     2606    1             IT$BLOCK_EXPR.OPTIONS.PROTECT# = %DONT_PROTECT;
      592     2607    1           IF WINDOW_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC.OPERAND.INTREE$->
      593     2608    1             IT$BLOCK_EXPR.OPTIONS.STRUCTURE$ = VD_6E.STRUCTURE_SCRATCH$ THEN
      594     2609                   /*
      595     2610                   *  Don't try to MOVE a literal string, but wildcards need to write.
      596     2611                   */
      597     2612    1              VD_6E.SOURCE.MOVE = %FALSE;
      598     2613
      599     2614    1           ELSE IF NOT VD_6E.SOURCE.MOVE THEN
      600     2615    1                 WINDOW_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC.OPERAND.INTREE$->
      601     2616    1                   IT$BLOCK_EXPR.OPTIONS.PROTECT# = %PROTECT;
      602     2617
      603     2618    2           CALL VDE$IOPEN_SOURCE WHENALTRETURN DO;
      604     2619    2              ALTRETURN;
      605     2620    2              END;
      606     2621
      607     2622    1           RETURN;
      608     2623
      609     2624    1   END VDI$CCOPY;
      610     2625        %EOD;

PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:78   
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CCOPY.

   Procedure VDI$CCOPY requires 32 words for executable code.
   Procedure VDI$CCOPY requires 4 words of local(AUTO) storage.

PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:79   

 Object Unit name= VDI$CCOPY                                  File name= VDI$COMMANDS_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:30:27.40 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    32     40  VDI$CCOPY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  VDI$CCOPY
     0      5          yes     yes      Std        0  VDI$CMOVE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 VDE$IOPEN_SOURCE
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_CURRENT_WINDOW$                    B_VECTNIL
PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:80   


      541        1        /*T***********************************************************/
      542        2        /*T*                                                         */
      543        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      544        4        /*T*                                                         */
      545        5        /*T***********************************************************/
      546        6
      547        7        /*D*  NAME: VDI$CCOPY
      548        8            PARAMETERS:
      549        9                None.
      550       10            INPUT:
      551       11                VD_6E.SOURCE.OPERAND must specify the source operand:
      552       12                    .INTREE$ must point to the InTree for the source operand.
      553       13                        It's .DOMAINN must be %CLEAR, and it's .OPTIONS
      554       14                        must be completely filled in.
      555       15                    .EDIT_BLOCK$ must point to a VD$BLOCK_DESC specifying the
      556       16                        enclosing domain the source operand.
      557       17                    .EVAL$ must point to a VD$EVAL for the source operand.
      558       18                        It must be initialized, ready for VDE$IRANGE.
      559       19            OUTPUT:
      560       20                VD_6E.SOURCE.MOVE will be set or reset, depending on the
      561       21                    type of command this is:  COPY or MOVE.
      562       22            DESCRIPTION:
      563       23        */
      564       24
      565       25        VDI$CCOPY: PROC ALTRET ;

     25  0 000000   000000 700200 xent  VDI$CCOPY    TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

      566       26
      567       27        %INCLUDE VD_MACROS_M;
      568     2242
      569     2243
      570     2244        %VD_6E (STCLASS=SYMREF);
      571     2280    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      572     2281        %VD$FILE_NODE (NAME=WINDOW_NODE, STCLASS="BASED(VD_CURRENT_WINDOW$)");
PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:81   
      573     2374        %VD$IT_BLOCK_EXPR (NAME=IT$BLOCK_EXPR);
      574     2524        %VD$WINDOW_SPEC;
      575     2590
      576     2591
      577     2592    1   DCL VDE$IOPEN_SOURCE ENTRY ALTRET;
      578     2593
      579     2594
      580     2595
      581     2596    1           VD_6E.SOURCE.MOVE = %FALSE;

   2596  0 000002   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000003   000024 356000 xsym               ANSQ    VD_6E+20

      582     2597    1           GOTO COPY_MOVE;

   2597  0 000004   000011 710000 0                  TRA     COPY_MOVE

      583     2598
      584     2599    1   VDI$CMOVE: ENTRY ALTRET;

   2599  0 000005   000000 700200 xent  VDI$CMOVE    TSX0  ! X66_AUTO_0
         0 000006   000004 000000                    ZERO    4,0

      585     2600
      586     2601    1           VD_6E.SOURCE.MOVE = %TRUE;

   2601  0 000007   400000 236003                    LDQ     -131072,DU
         0 000010   000024 256000 xsym               ORSQ    VD_6E+20

      587     2602
      588     2603    1   COPY_MOVE:
      589     2604
      590     2605    1           WINDOW_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC.OPERAND.INTREE$->

   2605  0 000011   000000 470400 xsym  COPY_MOVE    LDP0    VD_CURRENT_WINDOW$
         0 000012   000007 471500                    LDP1    7,,PR0
         0 000013   100011 473500                    LDP3    9,,PR1
PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:82   
         0 000014   000002 220003                    LDX0    2,DU
         0 000015   300032 740100                    STX0    26,,PR3

      591     2606    1             IT$BLOCK_EXPR.OPTIONS.PROTECT# = %DONT_PROTECT;
      592     2607    1           IF WINDOW_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC.OPERAND.INTREE$->

   2607  0 000016   000007 471500                    LDP1    7,,PR0
         0 000017   100011 473500                    LDP3    9,,PR1
         0 000020   300030 236100                    LDQ     24,,PR3
         0 000021   000012 116000 xsym               CMPQ    VD_6E+10
         0 000022   000026 601000 0                  TNZ     s:2614

      593     2608    1             IT$BLOCK_EXPR.OPTIONS.STRUCTURE$ = VD_6E.STRUCTURE_SCRATCH$ THEN
      594     2609                   /*
      595     2610                   *  Don't try to MOVE a literal string, but wildcards need to write.
      596     2611                   */
      597     2612    1              VD_6E.SOURCE.MOVE = %FALSE;

   2612  0 000023   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000024   000024 356000 xsym               ANSQ    VD_6E+20
         0 000025   000032 710000 0                  TRA     s:2618

      598     2613
      599     2614    1           ELSE IF NOT VD_6E.SOURCE.MOVE THEN

   2614  0 000026   000024 234000 xsym               SZN     VD_6E+20
         0 000027   000032 604000 0                  TMI     s:2618

      600     2615    1                 WINDOW_NODE.DESC.SPEC.V$->VD$WINDOW_SPEC.OPERAND.INTREE$->

   2615  0 000030   000001 221003                    LDX1    1,DU
         0 000031   300032 741100                    STX1    26,,PR3

      601     2616    1                   IT$BLOCK_EXPR.OPTIONS.PROTECT# = %PROTECT;
      602     2617
      603     2618    2           CALL VDE$IOPEN_SOURCE WHENALTRETURN DO;

PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:83   
   2618  0 000032   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000033   000000 701000 xent               TSX1    VDE$IOPEN_SOURCE
         0 000034   000036 702000 0                  TSX2    s:2619
         0 000035   000037 710000 0                  TRA     s:2622

      604     2619    2              ALTRETURN;

   2619  0 000036   000000 702200 xent               TSX2  ! X66_AALT

      605     2620    2              END;
      606     2621
      607     2622    1           RETURN;

   2622  0 000037   000000 702200 xent               TSX2  ! X66_ARET
      608     2623
      609     2624    1   END VDI$CCOPY;
      610     2625        %EOD;

PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:84   
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CCOPY.
PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:85   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1116)  r     1 IT$BLOCK_EXPR              0-0-0/w STRC(900)   r     1 VD$WINDOW_SPEC
     0-0-0/w STRC(468)   r     1 WINDOW_NODE


   Procedure VDI$CCOPY requires 32 words for executable code.
   Procedure VDI$CCOPY requires 4 words of local(AUTO) storage.
PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:86   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VDI$CCOPY File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:87   
          MINI XREF LISTING

COPY_MOVE
      2605**LABEL    2597--GOTO
IT$BLOCK_EXPR.OPTIONS.PROTECT#
      2505**DCL      2605<<ASSIGN   2615<<ASSIGN
IT$BLOCK_EXPR.OPTIONS.STRUCTURE$
      2505**DCL      2607>>IF
VD$WINDOW_SPEC.OPERAND.INTREE$
      2573**DCL      2605>>ASSIGN   2607>>IF       2615>>ASSIGN
VDE$IOPEN_SOURCE
      2592**DCL-ENT  2618--CALL
VD_6E.SOURCE.MOVE
      2275**DCL      2596<<ASSIGN   2601<<ASSIGN   2612<<ASSIGN   2614>>IF
VD_6E.STRUCTURE_SCRATCH$
      2259**DCL      2607>>IF
VD_CURRENT_WINDOW$
      2280**DCL      2289--IMP-PTR  2605>>ASSIGN   2607>>IF       2615>>ASSIGN
WINDOW_NODE.DESC.SPEC.V$
      2368**DCL      2605>>ASSIGN   2607>>IF       2615>>ASSIGN

PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:88   
      611        1        /*T***********************************************************/
      612        2        /*T*                                                         */
      613        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      614        4        /*T*                                                         */
      615        5        /*T***********************************************************/
      616        6
      617        7        /*D*  NAME: VDI$CDELETE_FID
      618        8            INPUT:
      619        9            OUTPUT:
      620       10        */
      621       11        VDI$CDELETE_FID:PROC    ALTRET;
      622       12
      623       13        %INCLUDE VD_MACROS_M;
      624     2228        %INCLUDE VD_PERR_C;
      625     2376
      626     2377    1   DCL VDA$FDELETE ENTRY(1) ALTRET;
      627     2378    1   DCL VDI$PREMOVE_EDIT_BLOCK ENTRY ALTRET;
      628     2379    1   DCL VDG$INFOMSG ENTRY(4) ALTRET;
      629     2380    1   DCL VDG$OFREE ENTRY(1) ALTRET;
      630     2381
      631     2382    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      632     2383    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
      633     2384    1   DCL BLOCK$ PTR;
      634     2385    1   DCL WINDOW$ PTR;
      635     2386    1   DCL FILE_KEY$ PTR;
      636     2387    1   DCL EVAL$ PTR;
      637     2388    1   DCL TEST_KEY$ PTR;
      638     2389    1   DCL WBLOCK$ PTR;
      639     2390    1   DCL X SBIN;
      640     2391
      641     2392        %VD$BLOCK_DESC;
      642     2539        %VD$FILE_NODE (STCLASS="BASED(VD_CURRENT_WINDOW$)");
      643     2632        %VD$WINDOW_SPEC (NAME=DEL$WINDOW,STCLASS=BASED);
      644     2698        %VD$STREAM;
      645     2804        %VD$TEXTC_REMOTE;
      646     2865        %VD$EVAL (STCLASS="BASED(EVAL$)");
      647     3110        %VD$TEXTC (NAME=FILE$KEY, STCLASS="BASED(FILE_KEY$)");
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:89   
      648     3133        %VD$KEY_NUMBER;
      649     3148        %VD$WINDOW_BLOCK (NAME=WBLOCK, STCLASS="BASED(WBLOCK$)");
      650     3185
      651     3186                %GETKEY (PTR=FILE_KEY$,
      652     3187                  KEY=
              3187         "VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.OPERAND.EDIT_BLOCK$->VD$BLOCK_DESC.FILE_KEY"
              3187                      );
      653     3197
      654     3198    1           CALL VDA$FDELETE
      655     3199    1             (VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.OPERAND.STREAM$->VD$STREAM)
      656     3200    2           WHENRETURN DO;
      657     3201                   /* Delete any references to the file in the window blocks */
      658     3202
      659     3203    2              WINDOW$ = VD_CURRENT_WINDOW$;
      660     3204    2              VD_CURRENT_WINDOW$ = VD_COMMAND_WINDOW$ -> VD$FILE_NODE.FLINK$;
      661     3205    3              DO UNTIL VD_CURRENT_WINDOW$ = ADDR(NIL);
      662     3206    3                 BLOCK$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.TAIL$;
      663     3207    4                 DO WHILE BLOCK$ ~= ADDR(NIL);
      664     3208                         /* releasing any that refer to the deleted file */
      665     3209    4                    WBLOCK$ = BLOCK$ -> VD$FILE_NODE.DESC.SPEC.V$;
      666     3210    4                    IF WBLOCK$ ~= ADDR(NIL)
      667     3211    5                      AND WBLOCK.EDIT_BLOCK$ ~= ADDR(NIL) THEN DO;
      668     3212                            %GETKEY (KEY=WBLOCK.EDIT_BLOCK$->VD$BLOCK_DESC.FILE_KEY,
      669     3213                            PTR=TEST_KEY$);
      670     3223    5                       IF FILE$KEY.BYTES ~= TEST_KEY$->FILE$KEY.BYTES THEN EXIT;
      671     3224    5                       CALL VDG$OFREE (WBLOCK.EDIT_BLOCK$->VD$BLOCK_DESC);
      672     3225    5                       EVAL$ = WBLOCK.EVAL$;
      673     3226    6                       DO WHILE EVAL$ ~= ADDR(NIL);
      674     3227    6                          EVAL$ = VD$EVAL.BLINK$;
      675     3228    6                          CALL VDG$OFREE (VD$EVAL);
      676     3229    6                          WBLOCK.EVAL$ = EVAL$;
      677     3230    6                          END;
      678     3231    5                       WBLOCK.EDIT_BLOCK$ = EVAL$;
      679     3232    5                       X = VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX# -
      680     3233    5                         ADDR(BLOCK$->VD$FILE_NODE.DESC.KEY)->VD$KEY_NUMBER.BYTES#;
      681     3234    6                       IF VD_CURRENT_WINDOW$ ~= WINDOW$ THEN DO;
      682     3235    6                          IF X=0 THEN CALL VDI$PREMOVE_EDIT_BLOCK;
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:90   
      683     3236    6                          END;
      684     3237    5                       ELSE IF X=1 THEN
      685     3238    5                             VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX# =
      686     3239    5                               VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX# - 1;
      687     3240    5                       END;
      688     3241    4                    BLOCK$ = BLOCK$ -> VD$FILE_NODE.BLINK$;
      689     3242    4                    END;  /* BLOCK loop */
      690     3243    3                 VD_CURRENT_WINDOW$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.FLINK$;
      691     3244    3                 END; /* WINDOW loop */
      692     3245
      693     3246    2              VD_CURRENT_WINDOW$ = WINDOW$;
      694     3247    2              CALL VDI$PREMOVE_EDIT_BLOCK;
      695     3248    2              IF VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX#>0 THEN
      696     3249    2                 CALL VDG$INFOMSG (%E$INFO_PUSHED_OLD_EDIT_BLOCK);
      697     3250    2              END;
      698     3251    1   END VDI$CDELETE_FID;
      699     3252        %EOD;

PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:91   
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CDELETE_FID.

   Procedure VDI$CDELETE_FID requires 132 words for executable code.
   Procedure VDI$CDELETE_FID requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:92   

 Object Unit name= VDI$CDELETE_FID                            File name= VDI$COMMANDS_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:30:33.32 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   132    204  VDI$CDELETE_FID
    1  RoData even  none     2      2  VDI$CDELETE_FID

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  VDI$CDELETE_FID

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 VDA$FDELETE
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       0 VDI$PREMOVE_EDIT_BLOCK
 yes     yes           Std       4 VDG$INFOMSG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_CURRENT_WINDOW$                    VD_COMMAND_WINDOW$                    B_VECTNIL
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:93   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:94   


      611        1        /*T***********************************************************/
      612        2        /*T*                                                         */
      613        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      614        4        /*T*                                                         */
      615        5        /*T***********************************************************/
      616        6
      617        7        /*D*  NAME: VDI$CDELETE_FID
      618        8            INPUT:
      619        9            OUTPUT:
      620       10        */
      621       11        VDI$CDELETE_FID:PROC    ALTRET;

     11  0 000000   000000 700200 xent  VDI$CDELETE* TSX0  ! X66_AUTO_0
         0 000001   000014 000000                    ZERO    12,0

      622       12
      623       13        %INCLUDE VD_MACROS_M;
      624     2228        %INCLUDE VD_PERR_C;
      625     2376
      626     2377    1   DCL VDA$FDELETE ENTRY(1) ALTRET;
      627     2378    1   DCL VDI$PREMOVE_EDIT_BLOCK ENTRY ALTRET;
      628     2379    1   DCL VDG$INFOMSG ENTRY(4) ALTRET;
      629     2380    1   DCL VDG$OFREE ENTRY(1) ALTRET;
      630     2381
      631     2382    1   DCL VD_CURRENT_WINDOW$ PTR SYMREF;
      632     2383    1   DCL VD_COMMAND_WINDOW$ PTR SYMREF;
      633     2384    1   DCL BLOCK$ PTR;
      634     2385    1   DCL WINDOW$ PTR;
      635     2386    1   DCL FILE_KEY$ PTR;
      636     2387    1   DCL EVAL$ PTR;
      637     2388    1   DCL TEST_KEY$ PTR;
      638     2389    1   DCL WBLOCK$ PTR;
      639     2390    1   DCL X SBIN;
      640     2391
      641     2392        %VD$BLOCK_DESC;
      642     2539        %VD$FILE_NODE (STCLASS="BASED(VD_CURRENT_WINDOW$)");
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:95   
      643     2632        %VD$WINDOW_SPEC (NAME=DEL$WINDOW,STCLASS=BASED);
      644     2698        %VD$STREAM;
      645     2804        %VD$TEXTC_REMOTE;
      646     2865        %VD$EVAL (STCLASS="BASED(EVAL$)");
      647     3110        %VD$TEXTC (NAME=FILE$KEY, STCLASS="BASED(FILE_KEY$)");
      648     3133        %VD$KEY_NUMBER;
      649     3148        %VD$WINDOW_BLOCK (NAME=WBLOCK, STCLASS="BASED(WBLOCK$)");
      650     3185
      651     3186                %GETKEY (PTR=FILE_KEY$,
      652     3187                  KEY=
              3187        "VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.OPERAND.EDIT_BLOCK$->VD$BLOCK_DESC.FILE_KEY"
              3187                      );

   3194  0 000002   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         0 000003   000007 471500                    LDP1    7,,PR0
         0 000004   100012 473500                    LDP3    10,,PR1
         0 000005   300001 720100                    LXL0    1,,PR3
         0 000006   000002 100003                    CMPX0   2,DU
         0 000007   000014 601000 0                  TNZ     s:3194+10

   3194  0 000010   300002 474500                    LDP4    2,,PR3
         0 000011   400002 635500                    EPPR5   2,,PR4
         0 000012   200005 455500                    STP5    FILE_KEY$,,AUTO
         0 000013   000016 710000 0                  TRA     s:3198

   3194  0 000014   300002 634500                    EPPR4   2,,PR3
         0 000015   200005 454500                    STP4    FILE_KEY$,,AUTO

      653     3197
      654     3198    1           CALL VDA$FDELETE

   3198  0 000016   100010 474500                    LDP4    8,,PR1
         0 000017   200012 454500                    STP4    X+1,,AUTO
         0 000020   200012 630500                    EPPR0   X+1,,AUTO
         0 000021   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000022   000000 701000 xent               TSX1    VDA$FDELETE
         0 000023   000203 702000 0                  TSX2    s:3251
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:96   

      655     3199    1             (VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.OPERAND.STREAM$->VD$STREAM)
      656     3200    2           WHENRETURN DO;

      657     3201                   /* Delete any references to the file in the window blocks */
      658     3202
      659     3203    2              WINDOW$ = VD_CURRENT_WINDOW$;

   3203  0 000024   000000 236000 xsym               LDQ     VD_CURRENT_WINDOW$
         0 000025   200004 756100                    STQ     WINDOW$,,AUTO

      660     3204    2              VD_CURRENT_WINDOW$ = VD_COMMAND_WINDOW$ -> VD$FILE_NODE.FLINK$;

   3204  0 000026   000000 470400 xsym               LDP0    VD_COMMAND_WINDOW$
         0 000027   000002 236100                    LDQ     2,,PR0
         0 000030   000000 756000 xsym               STQ     VD_CURRENT_WINDOW$

      661     3205    3              DO UNTIL VD_CURRENT_WINDOW$ = ADDR(NIL);

      662     3206    3                 BLOCK$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.TAIL$;

   3206  0 000031   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         0 000032   000013 236100                    LDQ     11,,PR0
         0 000033   200003 756100                    STQ     BLOCK$,,AUTO

      663     3207    4                 DO WHILE BLOCK$ ~= ADDR(NIL);

   3207  0 000034   000157 710000 0                  TRA     s:3242

      664     3208                         /* releasing any that refer to the deleted file */
      665     3209    4                    WBLOCK$ = BLOCK$ -> VD$FILE_NODE.DESC.SPEC.V$;

   3209  0 000035   200003 470500                    LDP0    BLOCK$,,AUTO
         0 000036   000007 236100                    LDQ     7,,PR0
         0 000037   200010 756100                    STQ     WBLOCK$,,AUTO

      666     3210    4                    IF WBLOCK$ ~= ADDR(NIL)
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:97   

   3210  0 000040   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000041   000154 600000 0                  TZE     s:3241
         0 000042   200010 471500                    LDP1    WBLOCK$,,AUTO
         0 000043   100003 236100                    LDQ     3,,PR1
         0 000044   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000045   000154 600000 0                  TZE     s:3241

      667     3211    5                      AND WBLOCK.EDIT_BLOCK$ ~= ADDR(NIL) THEN DO;

      668     3212                            %GETKEY (KEY=WBLOCK.EDIT_BLOCK$->VD$BLOCK_DESC.FILE_KEY,
      669     3213                            PTR=TEST_KEY$);

   3220  0 000046   100003 473500                    LDP3    3,,PR1
         0 000047   300001 720100                    LXL0    1,,PR3
         0 000050   000002 100003                    CMPX0   2,DU
         0 000051   000056 601000 0                  TNZ     s:3220+8

   3220  0 000052   300002 474500                    LDP4    2,,PR3
         0 000053   400002 635500                    EPPR5   2,,PR4
         0 000054   200007 455500                    STP5    TEST_KEY$,,AUTO
         0 000055   000060 710000 0                  TRA     s:3223

   3220  0 000056   300002 634500                    EPPR4   2,,PR3
         0 000057   200007 454500                    STP4    TEST_KEY$,,AUTO

      670     3223    5                       IF FILE$KEY.BYTES ~= TEST_KEY$->FILE$KEY.BYTES THEN EXIT;

   3223  0 000060   200005 474500                    LDP4    FILE_KEY$,,AUTO
         0 000061   400000 236100                    LDQ     0,,PR4
         0 000062   000033 772000                    QRL     27
         0 000063   200007 475500                    LDP5    TEST_KEY$,,AUTO
         0 000064   000000 621006                    EAX1    0,QL
         0 000065   500000 236100                    LDQ     0,,PR5
         0 000066   000033 772000                    QRL     27
         0 000067   000000 622006                    EAX2    0,QL
         0 000070   040140 106540                    CMPC    fill='040'O
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:98   
         0 000071   400000 200011                    ADSC9   0,,PR4                   cn=1,n=*X1
         0 000072   500000 200012                    ADSC9   0,,PR5                   cn=1,n=*X2
         0 000073   000154 601000 0                  TNZ     s:3241

      671     3224    5                       CALL VDG$OFREE (WBLOCK.EDIT_BLOCK$->VD$BLOCK_DESC);

   3224  0 000074   200012 453500                    STP3    X+1,,AUTO
         0 000075   200012 630500                    EPPR0   X+1,,AUTO
         0 000076   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000077   000000 701000 xent               TSX1    VDG$OFREE
         0 000100   000000 011000                    NOP     0

      672     3225    5                       EVAL$ = WBLOCK.EVAL$;

   3225  0 000101   200010 470500                    LDP0    WBLOCK$,,AUTO
         0 000102   000004 236100                    LDQ     4,,PR0
         0 000103   200006 756100                    STQ     EVAL$,,AUTO

      673     3226    6                       DO WHILE EVAL$ ~= ADDR(NIL);

   3226  0 000104   000117 710000 0                  TRA     s:3230

      674     3227    6                          EVAL$ = VD$EVAL.BLINK$;

   3227  0 000105   200006 470500                    LDP0    EVAL$,,AUTO
         0 000106   000001 236100                    LDQ     1,,PR0
         0 000107   200006 756100                    STQ     EVAL$,,AUTO

      675     3228    6                          CALL VDG$OFREE (VD$EVAL);

   3228  0 000110   200006 630500                    EPPR0   EVAL$,,AUTO
         0 000111   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000112   000000 701000 xent               TSX1    VDG$OFREE
         0 000113   000000 011000                    NOP     0

      676     3229    6                          WBLOCK.EVAL$ = EVAL$;

PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:99   
   3229  0 000114   200006 236100                    LDQ     EVAL$,,AUTO
         0 000115   200010 470500                    LDP0    WBLOCK$,,AUTO
         0 000116   000004 756100                    STQ     4,,PR0

      677     3230    6                          END;

   3230  0 000117   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000120   000105 601000 0                  TNZ     s:3227

      678     3231    5                       WBLOCK.EDIT_BLOCK$ = EVAL$;

   3231  0 000121   000003 756100                    STQ     3,,PR0

      679     3232    5                       X = VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX# -

   3232  0 000122   000000 471400 xsym               LDP1    VD_CURRENT_WINDOW$
         0 000123   100007 473500                    LDP3    7,,PR1
         0 000124   200003 474500                    LDP4    BLOCK$,,AUTO
         0 000125   400005 236100                    LDQ     5,,PR4
         0 000126   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000127   200012 756100                    STQ     X+1,,AUTO
         0 000130   300014 236100                    LDQ     12,,PR3
         0 000131   000022 732000                    QRS     18
         0 000132   200012 136100                    SBLQ    X+1,,AUTO
         0 000133   200011 756100                    STQ     X,,AUTO

      680     3233    5                         ADDR(BLOCK$->VD$FILE_NODE.DESC.KEY)->VD$KEY_NUMBER.BYTES#;
      681     3234    6                       IF VD_CURRENT_WINDOW$ ~= WINDOW$ THEN DO;

   3234  0 000134   000000 236000 xsym               LDQ     VD_CURRENT_WINDOW$
         0 000135   200004 116100                    CMPQ    WINDOW$,,AUTO
         0 000136   000145 600000 0                  TZE     s:3237

      682     3235    6                          IF X=0 THEN CALL VDI$PREMOVE_EDIT_BLOCK;

   3235  0 000137   200011 235100                    LDA     X,,AUTO
         0 000140   000154 601000 0                  TNZ     s:3241
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:100  

   3235  0 000141   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000142   000000 701000 xent               TSX1    VDI$PREMOVE_EDIT_BLOCK
         0 000143   000000 011000                    NOP     0

      683     3236    6                          END;

   3236  0 000144   000154 710000 0                  TRA     s:3241

      684     3237    5                       ELSE IF X=1 THEN

   3237  0 000145   200011 235100                    LDA     X,,AUTO
         0 000146   000001 115007                    CMPA    1,DL
         0 000147   000154 601000 0                  TNZ     s:3241

      685     3238    5                             VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX# =

   3238  0 000150   100007 473500                    LDP3    7,,PR1
         0 000151   300014 220100                    LDX0    12,,PR3
         0 000152   777777 621010                    EAX1    -1,X0
         0 000153   300014 741100                    STX1    12,,PR3

      686     3239    5                               VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX# - 1;
      687     3240    5                       END;

      688     3241    4                    BLOCK$ = BLOCK$ -> VD$FILE_NODE.BLINK$;

   3241  0 000154   200003 470500                    LDP0    BLOCK$,,AUTO
         0 000155   000001 236100                    LDQ     1,,PR0
         0 000156   200003 756100                    STQ     BLOCK$,,AUTO

      689     3242    4                    END;  /* BLOCK loop */

   3242  0 000157   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000160   000035 601000 0                  TNZ     s:3209

      690     3243    3                 VD_CURRENT_WINDOW$ = VD_CURRENT_WINDOW$ -> VD$FILE_NODE.FLINK$;
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:101  

   3243  0 000161   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         0 000162   000002 236100                    LDQ     2,,PR0
         0 000163   000000 756000 xsym               STQ     VD_CURRENT_WINDOW$

      691     3244    3                 END; /* WINDOW loop */

   3244  0 000164   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000165   000031 601000 0                  TNZ     s:3206

      692     3245
      693     3246    2              VD_CURRENT_WINDOW$ = WINDOW$;

   3246  0 000166   200004 236100                    LDQ     WINDOW$,,AUTO
         0 000167   000000 756000 xsym               STQ     VD_CURRENT_WINDOW$

      694     3247    2              CALL VDI$PREMOVE_EDIT_BLOCK;

   3247  0 000170   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000171   000000 701000 xent               TSX1    VDI$PREMOVE_EDIT_BLOCK
         0 000172   000000 011000                    NOP     0

      695     3248    2              IF VD$FILE_NODE.DESC.SPEC.V$->DEL$WINDOW.CURR_INDEX#>0 THEN

   3248  0 000173   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         0 000174   000007 471500                    LDP1    7,,PR0
         0 000175   100014 220100                    LDX0    12,,PR1
         0 000176   000203 604400 0                  TMOZ    s:3251

      696     3249    2                 CALL VDG$INFOMSG (%E$INFO_PUSHED_OLD_EDIT_BLOCK);

   3249  0 000177   000001 630400 1                  EPPR0   1
         0 000200   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000201   000000 701000 xent               TSX1    VDG$INFOMSG
         0 000202   000000 011000                    NOP     0

      697     3250    2              END;
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:102  

      698     3251    1   END VDI$CDELETE_FID;

   3251  0 000203   000000 702200 xent               TSX2  ! X66_ARET
      699     3252        %EOD;

PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:103  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CDELETE_FID.
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:104  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 BLOCK$                     6-0-0/w PTR         r     1 EVAL$
     5-0-0/w PTR         r     1 FILE_KEY$                  7-0-0/w PTR         r     1 TEST_KEY$
    10-0-0/w PTR         r     1 WBLOCK$                    4-0-0/w PTR         r     1 WINDOW$
    11-0-0/w SBIN        r     1 X

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 VD_COMMAND_WINDOW$         0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(900)   r     1 DEL$WINDOW                 0-0-0/w ASTR(9)     r     1 FILE$KEY
     0-0-0/w STRC(936)   r     1 VD$BLOCK_DESC              0-0-0/w STRC(2124)  r     1 VD$EVAL
     0-0-0/w STRC(468)   r     1 VD$FILE_NODE               0-0-0/w STRC(72)    r     1 VD$KEY_NUMBER
     0-0-0/w STRC(864)   r     1 VD$STREAM                  0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE
     0-0-0/w STRC(180)   r     1 WBLOCK


   Procedure VDI$CDELETE_FID requires 132 words for executable code.
   Procedure VDI$CDELETE_FID requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:105  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:106  
          MINI XREF LISTING

BLOCK$
      2384**DCL      3206<<ASSIGN   3207>>DOWHILE  3209>>ASSIGN   3232>>ASSIGN   3241<<ASSIGN   3241>>ASSIGN
DEL$WINDOW.CURR_INDEX#
      2683**DCL      3232>>ASSIGN   3238<<ASSIGN   3238>>ASSIGN   3248>>IF
DEL$WINDOW.OPERAND.EDIT_BLOCK$
      2681**DCL      3194>>IF       3194>>ASSIGN   3194>>ASSIGN
DEL$WINDOW.OPERAND.STREAM$
      2681**DCL      3198>>CALL
EVAL$
      2387**DCL      2873--IMP-PTR  3225<<ASSIGN   3226>>DOWHILE  3227<<ASSIGN   3227>>ASSIGN   3228>>CALL
      3229>>ASSIGN   3231>>ASSIGN
FILE$KEY.BYTES
      3128**DCL      3223>>IF       3223>>IF
FILE$KEY.LENGTH#
      3126**DCL      3128--IMP-SIZ  3223>>IF       3223>>IF
FILE_KEY$
      2386**DCL      3118--IMP-PTR  3194<<ASSIGN   3194<<ASSIGN   3223>>IF       3223>>IF
TEST_KEY$
      2388**DCL      3220<<ASSIGN   3220<<ASSIGN   3223>>IF       3223>>IF
VD$BLOCK_DESC
      2400**DCL      3224<>CALL
VD$BLOCK_DESC.FILE_KEY.REP#
      2438**DCL      3194>>IF       3220>>IF
VD$BLOCK_DESC.FILE_KEY.V$
      2438**DCL      3194>>ASSIGN   3194--ASSIGN   3220>>ASSIGN   3220--ASSIGN
VD$EVAL
      2873**DCL      3228<>CALL
VD$EVAL.BLINK$
      2899**DCL      3227>>ASSIGN
VD$FILE_NODE.BLINK$
      2573**DCL      3241>>ASSIGN
VD$FILE_NODE.DESC.KEY
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:107  
      2610**DCL      3232--ASSIGN
VD$FILE_NODE.DESC.SPEC.V$
      2626**DCL      3194>>IF       3194>>ASSIGN   3194>>ASSIGN   3198>>CALL     3209>>ASSIGN   3232>>ASSIGN
      3238>>ASSIGN   3238>>ASSIGN   3248>>IF
VD$FILE_NODE.FLINK$
      2573**DCL      3204>>ASSIGN   3243>>ASSIGN
VD$FILE_NODE.TAIL$
      2630**DCL      3206>>ASSIGN
VD$KEY_NUMBER.BYTES#
      3145**DCL      3232>>ASSIGN
VD$STREAM
      2706**DCL      3198<>CALL
VD$TEXTC_REMOTE.LENGTH#
      2858**DCL      2860--IMP-SIZ  3194--ASSIGN   3220--ASSIGN
VDA$FDELETE
      2377**DCL-ENT  3198--CALL
VDG$INFOMSG
      2379**DCL-ENT  3249--CALL
VDG$OFREE
      2380**DCL-ENT  3224--CALL     3228--CALL
VDI$PREMOVE_EDIT_BLOCK
      2378**DCL-ENT  3235--CALL     3247--CALL
VD_COMMAND_WINDOW$
      2383**DCL      3204>>ASSIGN
VD_CURRENT_WINDOW$
      2382**DCL      2547--IMP-PTR  3194>>IF       3194>>ASSIGN   3194>>ASSIGN   3198>>CALL     3203>>ASSIGN
      3204<<ASSIGN   3205>>DOUNTIL  3206>>ASSIGN   3232>>ASSIGN   3234>>IF       3238>>ASSIGN   3238>>ASSIGN
      3243<<ASSIGN   3243>>ASSIGN   3246<<ASSIGN   3248>>IF
WBLOCK.EDIT_BLOCK$
      3182**DCL      3210>>IF       3220>>IF       3220>>ASSIGN   3220>>ASSIGN   3224>>CALL     3231<<ASSIGN
WBLOCK.EVAL$
      3182**DCL      3225>>ASSIGN   3229<<ASSIGN
WBLOCK$
      2389**DCL      3156--IMP-PTR  3209<<ASSIGN   3210>>IF       3210>>IF       3220>>IF       3220>>ASSIGN
      3220>>ASSIGN   3224>>CALL     3225>>ASSIGN   3229>>ASSIGN   3231>>ASSIGN
WINDOW$
PL6.E3A0      #003=VDI$CDELETE_FID File=VDI$COMMANDS_EDITING.:VDA5TSI            FRI 07/04/97 11:30 Page:108  
      2385**DCL      3203<<ASSIGN   3234>>IF       3246>>ASSIGN
X
      2390**DCL      3232<<ASSIGN   3235>>IF       3237>>IF

PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:109  
      700        1        /*T***********************************************************/
      701        2        /*T*                                                         */
      702        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      703        4        /*T*                                                         */
      704        5        /*T***********************************************************/
      705        6        VDI$CDELETE: PROC ALTRET;
      706        7
      707        8
      708        9        /*D*  NAME: VDI$CDELETE
      709       10            INPUT:
      710       11                VD$WINDOW_SPEC.OPERAND - the selected operand.
      711       12              OUTPUT:
      712       13        */
      713       14
      714       15        %INCLUDE VD_MACROS_M;
      715     2230        %INCLUDE VD_PERR_C;
      716     2378
      717     2379    1   DCL VDE$IOPEN               ENTRY (2) ALTRET;
      718     2380    1   DCL VDE$IRANGE              ENTRY (2) ALTRET;
      719     2381    1   DCL VDI$BDELETE             ENTRY (3) ALTRET;
      720     2382    1   DCL VDI$CSET_COUNT          ENTRY (2) ALTRET;
      721     2383    1   DCL VDG$INFOMSG             ENTRY (4) ALTRET;
      722     2384    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
      723     2385
      724     2386        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
      725     2414        %VD$LOCATION (NAME=VD_LOC_$RECORDS_DELETED, STCLASS=SYMREF);
      726     2442        %VD$NUMBER (NAME=VD_$RECORDS_DELETED, STCLASS=SYMREF);
      727     2487    1   DCL VD_CURRENT_WINDOW$      PTR SYMREF ALIGNED;
      728     2488    1   DCL DEL_WINDOW$             PTR ALIGNED;
      729     2489    1   DCL DEL_STRM$               PTR ALIGNED;
      730     2490    1   DCL DEL_EVAL$               PTR ALIGNED;
      731     2491    1   DCL DEL_BLOCK$              PTR ALIGNED;
      732     2492    1   DCL SITES                   UBIN WORD ALIGNED;  /* Number of blocks deleted */
      733     2493    1   DCL NDELRECS                UBIN WORD ALIGNED; /* Total records deleted */
      734     2494    1   DCL ERRCODE                 UBIN WORD ALIGNED;
      735     2495    1   DCL FOUND                   BIT(1) ALIGNED;
      736     2496    1   DCL ALTRET_FLAG             BIT(1) ALIGNED;
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:110  
      737     2497
      738     2498        %VD$WINDOW_SPEC (NAME=DEL$WINDOW, STCLASS="BASED(DEL_WINDOW$)");
      739     2564        %VD$STREAM (NAME=DEL$STRM, STCLASS="BASED(DEL_STRM$)");
      740     2670        %VD$BLOCK_DESC (NAME=DEL$BLOCK, STCLASS="BASED(DEL_BLOCK$)");
      741     2817        %VD$EVAL (NAME=DEL$EVAL, STCLASS="BASED(DEL_EVAL$)");
      742     3062        %VD$FILE_NODE (STCLASS=BASED);
      743     3155
      744     3156
      745     3157
      746     3158    1           ALTRET_FLAG = %FALSE;
      747     3159    1           FOUND = %TRUE;
      748     3160    1           SITES = 0;
      749     3161    1           NDELRECS = 0;
      750     3162    1           DEL_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;
      751     3163    1           DEL_STRM$ = DEL$WINDOW.OPERAND.STREAM$;
      752     3164    1           DEL_BLOCK$ = DEL$WINDOW.OPERAND.EDIT_BLOCK$;
      753     3165
      754     3166    2           DO WHILE (FOUND) ;
      755     3167    2              CALL VDE$IRANGE (DEL$WINDOW.OPERAND, FOUND)
      756     3168    2                ALTRET (IRANGE_FAILED);
      757     3169    3              IF FOUND THEN DO;
      758     3170    3                 DEL_EVAL$ = DEL$WINDOW.OPERAND.EVAL$;
      759     3171    3                 CALL VDI$BDELETE (DEL$EVAL.RANGE, DEL$STRM, DEL$BLOCK)
      760     3172    3                   ALTRET (BDELETE_FAILED);
      761     3173    3                 IF VD_$RECORDS_DELETED.V# < 0 THEN
      762     3174    3                    VD_$RECORDS_DELETED.V# = 0;
      763     3175    3                 SITES = SITES + 1;
      764     3176    3                 NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;
      765     3177    3                 DEL$EVAL.STATE# = %EVST_INITIAL;
      766     3178    3                 END;
      767     3179
      768     3180    2              END;  /* Do While */
      769     3181
      770     3182    2           DO %NEVER;
      771     3183    2   IRANGE_FAILED: ;
      772     3184    2   BDELETE_FAILED: ;
      773     3185    2              ALTRET_FLAG = %TRUE;
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:111  
      774     3186    2              END; /* Do never */
      775     3187
      776     3188    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, SITES)
      777     3189    2           WHENALTRETURN DO; ALTRETURN; END;
      778     3190
      779     3191    1           CALL VDI$CSET_COUNT (VD_LOC_$RECORDS_DELETED, NDELRECS);
      780     3192
      781     3193    1           IF SITES = 1 THEN
      782     3194    1              ERRCODE = %E$INFO_1_BLOCK_DELETED;
      783     3195    1           ELSE IF SITES < 1 THEN
      784     3196    1                 ERRCODE = %E$INFO_NONE;
      785     3197    1              ELSE
      786     3198    1                 ERRCODE = %E$INFO_N_BLOCKS_DELETED;
      787     3199    1           CALL VDG$INFOMSG (ERRCODE, SITES);
      788     3200    1           CALL VDG$EREPORT_ERROR;
      789     3201
      790     3202                /*??* Should we (also) report NDELRECS? *??*/
      791     3203
      792     3204    1           IF ALTRET_FLAG THEN
      793     3205    2           DO;
      794     3206    2              ALTRETURN;
      795     3207    2              END;
      796     3208
      797     3209    1           RETURN;
      798     3210
      799     3211    1   END VDI$CDELETE;
      800     3212        %EOD;

PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:112  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CDELETE.

   Procedure VDI$CDELETE requires 105 words for executable code.
   Procedure VDI$CDELETE requires 16 words of local(AUTO) storage.

PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:113  

 Object Unit name= VDI$CDELETE                                File name= VDI$COMMANDS_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:30:41.64 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   105    151  VDI$CDELETE
    1  RoData even  none     2      2  VDI$CDELETE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  VDI$CDELETE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VDE$IRANGE
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       3 VDI$BDELETE
 yes     yes           Std       2 VDI$CSET_COUNT
 yes     yes           Std       4 VDG$INFOMSG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:114  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_LOC_$SITES                         VD_LOC_$RECORDS_DELETED               VD_$RECORDS_DELETED
     VD_CURRENT_WINDOW$                    B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:115  


      700        1        /*T***********************************************************/
      701        2        /*T*                                                         */
      702        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      703        4        /*T*                                                         */
      704        5        /*T***********************************************************/
      705        6        VDI$CDELETE: PROC ALTRET;

      6  0 000000   000000 700200 xent  VDI$CDELETE  TSX0  ! X66_AUTO_0
         0 000001   000020 000000                    ZERO    16,0

      706        7
      707        8
      708        9        /*D*  NAME: VDI$CDELETE
      709       10            INPUT:
      710       11                VD$WINDOW_SPEC.OPERAND - the selected operand.
      711       12              OUTPUT:
      712       13        */
      713       14
      714       15        %INCLUDE VD_MACROS_M;
      715     2230        %INCLUDE VD_PERR_C;
      716     2378
      717     2379    1   DCL VDE$IOPEN               ENTRY (2) ALTRET;
      718     2380    1   DCL VDE$IRANGE              ENTRY (2) ALTRET;
      719     2381    1   DCL VDI$BDELETE             ENTRY (3) ALTRET;
      720     2382    1   DCL VDI$CSET_COUNT          ENTRY (2) ALTRET;
      721     2383    1   DCL VDG$INFOMSG             ENTRY (4) ALTRET;
      722     2384    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
      723     2385
      724     2386        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
      725     2414        %VD$LOCATION (NAME=VD_LOC_$RECORDS_DELETED, STCLASS=SYMREF);
      726     2442        %VD$NUMBER (NAME=VD_$RECORDS_DELETED, STCLASS=SYMREF);
      727     2487    1   DCL VD_CURRENT_WINDOW$      PTR SYMREF ALIGNED;
      728     2488    1   DCL DEL_WINDOW$             PTR ALIGNED;
      729     2489    1   DCL DEL_STRM$               PTR ALIGNED;
      730     2490    1   DCL DEL_EVAL$               PTR ALIGNED;
      731     2491    1   DCL DEL_BLOCK$              PTR ALIGNED;
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:116  
      732     2492    1   DCL SITES                   UBIN WORD ALIGNED;  /* Number of blocks deleted */
      733     2493    1   DCL NDELRECS                UBIN WORD ALIGNED; /* Total records deleted */
      734     2494    1   DCL ERRCODE                 UBIN WORD ALIGNED;
      735     2495    1   DCL FOUND                   BIT(1) ALIGNED;
      736     2496    1   DCL ALTRET_FLAG             BIT(1) ALIGNED;
      737     2497
      738     2498        %VD$WINDOW_SPEC (NAME=DEL$WINDOW, STCLASS="BASED(DEL_WINDOW$)");
      739     2564        %VD$STREAM (NAME=DEL$STRM, STCLASS="BASED(DEL_STRM$)");
      740     2670        %VD$BLOCK_DESC (NAME=DEL$BLOCK, STCLASS="BASED(DEL_BLOCK$)");
      741     2817        %VD$EVAL (NAME=DEL$EVAL, STCLASS="BASED(DEL_EVAL$)");
      742     3062        %VD$FILE_NODE (STCLASS=BASED);
      743     3155
      744     3156
      745     3157
      746     3158    1           ALTRET_FLAG = %FALSE;

   3158  0 000002   200013 450100                    STZ     ALTRET_FLAG,,AUTO

      747     3159    1           FOUND = %TRUE;

   3159  0 000003   400000 236003                    LDQ     -131072,DU
         0 000004   200012 756100                    STQ     FOUND,,AUTO

      748     3160    1           SITES = 0;

   3160  0 000005   200007 450100                    STZ     SITES,,AUTO

      749     3161    1           NDELRECS = 0;

   3161  0 000006   200010 450100                    STZ     NDELRECS,,AUTO

      750     3162    1           DEL_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;

   3162  0 000007   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         0 000010   000007 236100                    LDQ     7,,PR0
         0 000011   200003 756100                    STQ     DEL_WINDOW$,,AUTO

PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:117  
      751     3163    1           DEL_STRM$ = DEL$WINDOW.OPERAND.STREAM$;

   3163  0 000012   200003 471500                    LDP1    DEL_WINDOW$,,AUTO
         0 000013   100010 236100                    LDQ     8,,PR1
         0 000014   200004 756100                    STQ     DEL_STRM$,,AUTO

      752     3164    1           DEL_BLOCK$ = DEL$WINDOW.OPERAND.EDIT_BLOCK$;

   3164  0 000015   100012 236100                    LDQ     10,,PR1
         0 000016   200006 756100                    STQ     DEL_BLOCK$,,AUTO

      753     3165
      754     3166    2           DO WHILE (FOUND) ;

   3166  0 000017   200012 234100                    SZN     FOUND,,AUTO
         0 000020   000070 605000 0                  TPL     s:3182

      755     3167    2              CALL VDE$IRANGE (DEL$WINDOW.OPERAND, FOUND)

   3167  0 000021   200012 630500                    EPPR0   FOUND,,AUTO
         0 000022   200015 450500                    STP0    ALTRET_FLAG+2,,AUTO
         0 000023   200003 236100                    LDQ     DEL_WINDOW$,,AUTO
         0 000024   000010 036003                    ADLQ    8,DU
         0 000025   200014 756100                    STQ     ALTRET_FLAG+1,,AUTO
         0 000026   200014 630500                    EPPR0   ALTRET_FLAG+1,,AUTO
         0 000027   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000030   000000 701000 xent               TSX1    VDE$IRANGE
         0 000031   000071 702000 0                  TSX2    IRANGE_FAILED

      756     3168    2                ALTRET (IRANGE_FAILED);
      757     3169    3              IF FOUND THEN DO;

   3169  0 000032   200012 234100                    SZN     FOUND,,AUTO
         0 000033   000066 605000 0                  TPL     s:3180

      758     3170    3                 DEL_EVAL$ = DEL$WINDOW.OPERAND.EVAL$;

PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:118  
   3170  0 000034   200003 470500                    LDP0    DEL_WINDOW$,,AUTO
         0 000035   000013 236100                    LDQ     11,,PR0
         0 000036   200005 756100                    STQ     DEL_EVAL$,,AUTO

      759     3171    3                 CALL VDI$BDELETE (DEL$EVAL.RANGE, DEL$STRM, DEL$BLOCK)

   3171  0 000037   200006 236100                    LDQ     DEL_BLOCK$,,AUTO
         0 000040   200016 756100                    STQ     ALTRET_FLAG+3,,AUTO
         0 000041   200004 236100                    LDQ     DEL_STRM$,,AUTO
         0 000042   200015 756100                    STQ     ALTRET_FLAG+2,,AUTO
         0 000043   200005 236100                    LDQ     DEL_EVAL$,,AUTO
         0 000044   000024 036003                    ADLQ    20,DU
         0 000045   200014 756100                    STQ     ALTRET_FLAG+1,,AUTO
         0 000046   200014 630500                    EPPR0   ALTRET_FLAG+1,,AUTO
         0 000047   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000050   000000 701000 xent               TSX1    VDI$BDELETE
         0 000051   000071 702000 0                  TSX2    IRANGE_FAILED

      760     3172    3                   ALTRET (BDELETE_FAILED);
      761     3173    3                 IF VD_$RECORDS_DELETED.V# < 0 THEN

   3173  0 000052   000003 235000 xsym               LDA     VD_$RECORDS_DELETED+3
         0 000053   000055 605000 0                  TPL     s:3175

      762     3174    3                    VD_$RECORDS_DELETED.V# = 0;

   3174  0 000054   000003 450000 xsym               STZ     VD_$RECORDS_DELETED+3

      763     3175    3                 SITES = SITES + 1;

   3175  0 000055   200007 235100                    LDA     SITES,,AUTO
         0 000056   000001 035007                    ADLA    1,DL
         0 000057   200007 755100                    STA     SITES,,AUTO

      764     3176    3                 NDELRECS = NDELRECS + VD_$RECORDS_DELETED.V#;

   3176  0 000060   200010 236100                    LDQ     NDELRECS,,AUTO
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:119  
         0 000061   000003 036000 xsym               ADLQ    VD_$RECORDS_DELETED+3
         0 000062   200010 756100                    STQ     NDELRECS,,AUTO

      765     3177    3                 DEL$EVAL.STATE# = %EVST_INITIAL;

   3177  0 000063   000001 220003                    LDX0    1,DU
         0 000064   200005 470500                    LDP0    DEL_EVAL$,,AUTO
         0 000065   000070 740100                    STX0    56,,PR0

      766     3178    3                 END;

      767     3179
      768     3180    2              END;  /* Do While */

   3180  0 000066   200012 234100                    SZN     FOUND,,AUTO
         0 000067   000021 604000 0                  TMI     s:3167

      769     3181
      770     3182    2           DO %NEVER;

   3182  0 000070   000073 710000 0                  TRA     s:3188

   3180  0 000071                       IRANGE_FAIL* null
   3176  0 000071                       BDELETE_FAI* null
      771     3183    2   IRANGE_FAILED: ;
      772     3184    2   BDELETE_FAILED: ;
      773     3185    2              ALTRET_FLAG = %TRUE;

   3185  0 000071   400000 236003                    LDQ     -131072,DU
         0 000072   200013 756100                    STQ     ALTRET_FLAG,,AUTO

      774     3186    2              END; /* Do never */

      775     3187
      776     3188    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, SITES)

   3188  0 000073   200007 630500                    EPPR0   SITES,,AUTO
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:120  
         0 000074   200015 450500                    STP0    ALTRET_FLAG+2,,AUTO
         0 000075   000000 236000 1                  LDQ     0
         0 000076   200014 756100                    STQ     ALTRET_FLAG+1,,AUTO
         0 000077   200014 630500                    EPPR0   ALTRET_FLAG+1,,AUTO
         0 000100   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000101   000000 701000 xent               TSX1    VDI$CSET_COUNT
         0 000102   000104 702000 0                  TSX2    s:3189
         0 000103   000105 710000 0                  TRA     s:3191

      777     3189    2           WHENALTRETURN DO; ALTRETURN; END;

   3189  0 000104   000000 702200 xent               TSX2  ! X66_AALT

      778     3190
      779     3191    1           CALL VDI$CSET_COUNT (VD_LOC_$RECORDS_DELETED, NDELRECS);

   3191  0 000105   200010 630500                    EPPR0   NDELRECS,,AUTO
         0 000106   200015 450500                    STP0    ALTRET_FLAG+2,,AUTO
         0 000107   000001 236000 1                  LDQ     1
         0 000110   200014 756100                    STQ     ALTRET_FLAG+1,,AUTO
         0 000111   200014 630500                    EPPR0   ALTRET_FLAG+1,,AUTO
         0 000112   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000113   000000 701000 xent               TSX1    VDI$CSET_COUNT
         0 000114   000000 011000                    NOP     0

      780     3192
      781     3193    1           IF SITES = 1 THEN

   3193  0 000115   200007 235100                    LDA     SITES,,AUTO
         0 000116   000001 115007                    CMPA    1,DL
         0 000117   000123 601000 0                  TNZ     s:3195

      782     3194    1              ERRCODE = %E$INFO_1_BLOCK_DELETED;

   3194  0 000120   000213 236007                    LDQ     139,DL
         0 000121   200011 756100                    STQ     ERRCODE,,AUTO
         0 000122   000132 710000 0                  TRA     s:3199
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:121  

      783     3195    1           ELSE IF SITES < 1 THEN

   3195  0 000123   000000 115003                    CMPA    0,DU
         0 000124   000130 601000 0                  TNZ     s:3198

      784     3196    1                 ERRCODE = %E$INFO_NONE;

   3196  0 000125   000012 236007                    LDQ     10,DL
         0 000126   200011 756100                    STQ     ERRCODE,,AUTO
         0 000127   000132 710000 0                  TRA     s:3199

      785     3197    1              ELSE
      786     3198    1                 ERRCODE = %E$INFO_N_BLOCKS_DELETED;

   3198  0 000130   000210 236007                    LDQ     136,DL
         0 000131   200011 756100                    STQ     ERRCODE,,AUTO

      787     3199    1           CALL VDG$INFOMSG (ERRCODE, SITES);

   3199  0 000132   200007 630500                    EPPR0   SITES,,AUTO
         0 000133   200015 450500                    STP0    ALTRET_FLAG+2,,AUTO
         0 000134   200011 631500                    EPPR1   ERRCODE,,AUTO
         0 000135   200014 451500                    STP1    ALTRET_FLAG+1,,AUTO
         0 000136   200014 630500                    EPPR0   ALTRET_FLAG+1,,AUTO
         0 000137   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000140   000000 701000 xent               TSX1    VDG$INFOMSG
         0 000141   000000 011000                    NOP     0

      788     3200    1           CALL VDG$EREPORT_ERROR;

   3200  0 000142   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000143   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         0 000144   000000 011000                    NOP     0

      789     3201
      790     3202                /*??* Should we (also) report NDELRECS? *??*/
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:122  
      791     3203
      792     3204    1           IF ALTRET_FLAG THEN

   3204  0 000145   200013 234100                    SZN     ALTRET_FLAG,,AUTO
         0 000146   000150 605000 0                  TPL     s:3209

      793     3205    2           DO;

      794     3206    2              ALTRETURN;

   3206  0 000147   000000 702200 xent               TSX2  ! X66_AALT

      795     3207    2              END;
      796     3208
      797     3209    1           RETURN;

   3209  0 000150   000000 702200 xent               TSX2  ! X66_ARET
      798     3210
      799     3211    1   END VDI$CDELETE;
      800     3212        %EOD;

PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:123  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CDELETE.
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:124  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    13-0-0/w BIT         r     1 ALTRET_FLAG                6-0-0/w PTR         r     1 DEL_BLOCK$
     5-0-0/w PTR         r     1 DEL_EVAL$                  4-0-0/w PTR         r     1 DEL_STRM$
     3-0-0/w PTR         r     1 DEL_WINDOW$               11-0-0/w UBIN        r     1 ERRCODE
    12-0-0/w BIT         r     1 FOUND                     10-0-0/w UBIN        r     1 NDELRECS
     7-0-0/w UBIN        r     1 SITES

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 VD_$RECORDS_DELETED        0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$
     0-0-0/w STRC(324)   r     1 VD_LOC_$RECORDS_DELETED
     0-0-0/w STRC(324)   r     1 VD_LOC_$SITES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(936)   r     1 DEL$BLOCK                  0-0-0/w STRC(2124)  r     1 DEL$EVAL
     0-0-0/w STRC(864)   r     1 DEL$STRM                   0-0-0/w STRC(900)   r     1 DEL$WINDOW
     0-0-0/w STRC(468)   r     1 VD$FILE_NODE


   Procedure VDI$CDELETE requires 105 words for executable code.
   Procedure VDI$CDELETE requires 16 words of local(AUTO) storage.
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:125  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:126  
          MINI XREF LISTING

ALTRET_FLAG
      2496**DCL      3158<<ASSIGN   3185<<ASSIGN   3204>>IF
BDELETE_FAILED
      3176**LABEL    3171--CALLALT
DEL$BLOCK
      2678**DCL      3171<>CALL
DEL$EVAL.RANGE
      2931**DCL      3171<>CALL
DEL$EVAL.STATE#
      3059**DCL      3177<<ASSIGN
DEL$STRM
      2572**DCL      3171<>CALL
DEL$WINDOW.OPERAND
      2545**DCL      3167<>CALL
DEL$WINDOW.OPERAND.EDIT_BLOCK$
      2547**DCL      3164>>ASSIGN
DEL$WINDOW.OPERAND.EVAL$
      2547**DCL      3170>>ASSIGN
DEL$WINDOW.OPERAND.STREAM$
      2547**DCL      3163>>ASSIGN
DEL_BLOCK$
      2491**DCL      2678--IMP-PTR  3164<<ASSIGN   3171>>CALL
DEL_EVAL$
      2490**DCL      2825--IMP-PTR  3170<<ASSIGN   3171>>CALL     3177>>ASSIGN
DEL_STRM$
      2489**DCL      2572--IMP-PTR  3163<<ASSIGN   3171>>CALL
DEL_WINDOW$
      2488**DCL      2506--IMP-PTR  3162<<ASSIGN   3163>>ASSIGN   3164>>ASSIGN   3167>>CALL     3170>>ASSIGN
ERRCODE
      2494**DCL      3194<<ASSIGN   3196<<ASSIGN   3198<<ASSIGN   3199<>CALL
FOUND
      2495**DCL      3159<<ASSIGN   3166>>DOWHILE  3167<>CALL     3169>>IF
PL6.E3A0      #004=VDI$CDELETE File=VDI$COMMANDS_EDITING.:VDA5TSI                FRI 07/04/97 11:30 Page:127  
IRANGE_FAILED
      3180**LABEL    3167--CALLALT
NDELRECS
      2493**DCL      3161<<ASSIGN   3176<<ASSIGN   3176>>ASSIGN   3191<>CALL
SITES
      2492**DCL      3160<<ASSIGN   3175<<ASSIGN   3175>>ASSIGN   3188<>CALL     3193>>IF       3195>>IF
      3199<>CALL
VD$FILE_NODE.DESC.SPEC.V$
      3149**DCL      3162>>ASSIGN
VDE$IRANGE
      2380**DCL-ENT  3167--CALL
VDG$EREPORT_ERROR
      2384**DCL-ENT  3200--CALL
VDG$INFOMSG
      2383**DCL-ENT  3199--CALL
VDI$BDELETE
      2381**DCL-ENT  3171--CALL
VDI$CSET_COUNT
      2382**DCL-ENT  3188--CALL     3191--CALL
VD_$RECORDS_DELETED.V#
      2484**DCL      3173>>IF       3174<<ASSIGN   3176>>ASSIGN
VD_CURRENT_WINDOW$
      2487**DCL      3162>>ASSIGN
VD_LOC_$RECORDS_DELETED
      2422**DCL      3191<>CALL
VD_LOC_$SITES
      2394**DCL      3188<>CALL

PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:128  
      801        1        /*T***********************************************************/
      802        2        /*T*                                                         */
      803        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      804        4        /*T*                                                         */
      805        5        /*T***********************************************************/
      806        6
      807        7        /*D*  NAME: VDI$CDISPLAY
      808        8            PARAMETERS:
      809        9                None.
      810       10            OUTPUT:
      811       11            EXT. INPUT:
      812       12                VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$->OPERAND -
      813       13                       The selected operand.
      814       14        */
      815       15
      816       16        VDI$CDISPLAY: PROC ALTRET;
      817       17
      818       18
      819       19        %INCLUDE VD_MACROS_M;
      820     2234        %INCLUDE VD_PERR_C;
      821     2382
      822     2383    1   DCL VDE$IRANGE              ENTRY (2) ALTRET;
      823     2384    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
      824     2385    1   DCL VDG$INFOMSG             ENTRY (4) ALTRET;
      825     2386    1   DCL VDP$WWRITE              ENTRY (1) ALTRET;
      826     2387    1   DCL VDI$CSET_COUNT          ENTRY (2) ALTRET;
      827     2388
      828     2389        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
      829     2417    1   DCL SITES                   SBIN WORD ALIGNED;
      830     2418    1   DCL VD_CURRENT_WINDOW$      PTR ALIGNED SYMREF;
      831     2419    1   DCL CURR_WINDOW$            PTR ALIGNED;
      832     2420    1   DCL FOUND                   BIT(1) ALIGNED;
      833     2421
      834     2422        %VD$WINDOW_SPEC (NAME = CURR$WINDOW, STCLASS="BASED(CURR_WINDOW$)");
      835     2488        %VD$FILE_NODE (STCLASS=BASED);
      836     2581
      837     2582    1           FOUND = %TRUE;
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:129  
      838     2583    1           SITES = 0;
      839     2584    1           CURR_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;
      840     2585
      841     2586    2           DO WHILE ( FOUND );
      842     2587    2              CALL VDE$IRANGE(CURR$WINDOW.OPERAND, FOUND)
      843     2588    2                ALTRET (IRANGE_FAILED);
      844     2589    2              IF FOUND THEN
      845     2590    3              DO;
      846     2591    3                 SITES = SITES + 1;
      847     2592    3                 CALL VDP$WWRITE (CURR$WINDOW.OPERAND) ALTRET (WWRITE_FAILED);
      848     2593    3                 END;
      849     2594    2              END; /* Do While */
      850     2595
      851     2596    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, SITES)
      852     2597    2           WHENALTRETURN DO; ALTRETURN; END;
      853     2598
      854     2599    2           IF SITES = 0 THEN DO;
      855     2600    2              CALL VDG$INFOMSG (%E$INFO_NONE);
      856     2601    2              CALL VDG$EREPORT_ERROR;
      857     2602    2              END;
      858     2603    1           RETURN;
      859     2604
      860     2605    1   IRANGE_FAILED: ;
      861     2606    1   WWRITE_FAILED: ;
      862     2607    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, SITES);
      863     2608    1           ALTRETURN;
      864     2609
      865     2610    1   END VDI$CDISPLAY;
      866     2611        %EOD;

PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:130  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CDISPLAY.

   Procedure VDI$CDISPLAY requires 60 words for executable code.
   Procedure VDI$CDISPLAY requires 8 words of local(AUTO) storage.

PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:131  

 Object Unit name= VDI$CDISPLAY                               File name= VDI$COMMANDS_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:30:49.52 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    60     74  VDI$CDISPLAY
    1  RoData even  none     2      2  VDI$CDISPLAY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  VDI$CDISPLAY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VDE$IRANGE
 yes     yes           Std       1 VDP$WWRITE
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       2 VDI$CSET_COUNT
 yes     yes           Std       4 VDG$INFOMSG
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:132  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_LOC_$SITES                         VD_CURRENT_WINDOW$                    B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:133  


      801        1        /*T***********************************************************/
      802        2        /*T*                                                         */
      803        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      804        4        /*T*                                                         */
      805        5        /*T***********************************************************/
      806        6
      807        7        /*D*  NAME: VDI$CDISPLAY
      808        8            PARAMETERS:
      809        9                None.
      810       10            OUTPUT:
      811       11            EXT. INPUT:
      812       12                VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$->OPERAND -
      813       13                       The selected operand.
      814       14        */
      815       15
      816       16        VDI$CDISPLAY: PROC ALTRET;

     16  0 000000   000000 700200 xent  VDI$CDISPLAY TSX0  ! X66_AUTO_0
         0 000001   000010 000000                    ZERO    8,0

      817       17
      818       18
      819       19        %INCLUDE VD_MACROS_M;
      820     2234        %INCLUDE VD_PERR_C;
      821     2382
      822     2383    1   DCL VDE$IRANGE              ENTRY (2) ALTRET;
      823     2384    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
      824     2385    1   DCL VDG$INFOMSG             ENTRY (4) ALTRET;
      825     2386    1   DCL VDP$WWRITE              ENTRY (1) ALTRET;
      826     2387    1   DCL VDI$CSET_COUNT          ENTRY (2) ALTRET;
      827     2388
      828     2389        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
      829     2417    1   DCL SITES                   SBIN WORD ALIGNED;
      830     2418    1   DCL VD_CURRENT_WINDOW$      PTR ALIGNED SYMREF;
      831     2419    1   DCL CURR_WINDOW$            PTR ALIGNED;
      832     2420    1   DCL FOUND                   BIT(1) ALIGNED;
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:134  
      833     2421
      834     2422        %VD$WINDOW_SPEC (NAME = CURR$WINDOW, STCLASS="BASED(CURR_WINDOW$)");
      835     2488        %VD$FILE_NODE (STCLASS=BASED);
      836     2581
      837     2582    1           FOUND = %TRUE;

   2582  0 000002   400000 236003                    LDQ     -131072,DU
         0 000003   200005 756100                    STQ     FOUND,,AUTO

      838     2583    1           SITES = 0;

   2583  0 000004   200003 450100                    STZ     SITES,,AUTO

      839     2584    1           CURR_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;

   2584  0 000005   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         0 000006   000007 236100                    LDQ     7,,PR0
         0 000007   200004 756100                    STQ     CURR_WINDOW$,,AUTO

      840     2585
      841     2586    2           DO WHILE ( FOUND );

   2586  0 000010   200005 234100                    SZN     FOUND,,AUTO
         0 000011   000037 605000 0                  TPL     s:2596

      842     2587    2              CALL VDE$IRANGE(CURR$WINDOW.OPERAND, FOUND)

   2587  0 000012   200005 630500                    EPPR0   FOUND,,AUTO
         0 000013   200007 450500                    STP0    FOUND+2,,AUTO
         0 000014   200004 236100                    LDQ     CURR_WINDOW$,,AUTO
         0 000015   000010 036003                    ADLQ    8,DU
         0 000016   200006 756100                    STQ     FOUND+1,,AUTO
         0 000017   200006 630500                    EPPR0   FOUND+1,,AUTO
         0 000020   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000021   000000 701000 xent               TSX1    VDE$IRANGE
         0 000022   000063 702000 0                  TSX2    IRANGE_FAILED

PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:135  
      843     2588    2                ALTRET (IRANGE_FAILED);
      844     2589    2              IF FOUND THEN

   2589  0 000023   200005 234100                    SZN     FOUND,,AUTO
         0 000024   000035 605000 0                  TPL     s:2594

      845     2590    3              DO;

      846     2591    3                 SITES = SITES + 1;

   2591  0 000025   200003 054100                    AOS     SITES,,AUTO

      847     2592    3                 CALL VDP$WWRITE (CURR$WINDOW.OPERAND) ALTRET (WWRITE_FAILED);

   2592  0 000026   200004 236100                    LDQ     CURR_WINDOW$,,AUTO
         0 000027   000010 036003                    ADLQ    8,DU
         0 000030   200006 756100                    STQ     FOUND+1,,AUTO
         0 000031   200006 630500                    EPPR0   FOUND+1,,AUTO
         0 000032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000033   000000 701000 xent               TSX1    VDP$WWRITE
         0 000034   000063 702000 0                  TSX2    IRANGE_FAILED

      848     2593    3                 END;

      849     2594    2              END; /* Do While */

   2594  0 000035   200005 234100                    SZN     FOUND,,AUTO
         0 000036   000012 604000 0                  TMI     s:2587

      850     2595
      851     2596    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, SITES)

   2596  0 000037   200003 630500                    EPPR0   SITES,,AUTO
         0 000040   200007 450500                    STP0    FOUND+2,,AUTO
         0 000041   000000 236000 1                  LDQ     0
         0 000042   200006 756100                    STQ     FOUND+1,,AUTO
         0 000043   200006 630500                    EPPR0   FOUND+1,,AUTO
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:136  
         0 000044   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000045   000000 701000 xent               TSX1    VDI$CSET_COUNT
         0 000046   000050 702000 0                  TSX2    s:2597
         0 000047   000051 710000 0                  TRA     s:2599

      852     2597    2           WHENALTRETURN DO; ALTRETURN; END;

   2597  0 000050   000000 702200 xent               TSX2  ! X66_AALT

      853     2598
      854     2599    2           IF SITES = 0 THEN DO;

   2599  0 000051   200003 235100                    LDA     SITES,,AUTO
         0 000052   000062 601000 0                  TNZ     s:2603

      855     2600    2              CALL VDG$INFOMSG (%E$INFO_NONE);

   2600  0 000053   000001 630400 1                  EPPR0   1
         0 000054   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000055   000000 701000 xent               TSX1    VDG$INFOMSG
         0 000056   000000 011000                    NOP     0

      856     2601    2              CALL VDG$EREPORT_ERROR;

   2601  0 000057   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000060   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         0 000061   000000 011000                    NOP     0

      857     2602    2              END;

      858     2603    1           RETURN;

   2603  0 000062   000000 702200 xent               TSX2  ! X66_ARET

   2599  0 000063                       IRANGE_FAIL* null
   2599  0 000063                       WWRITE_FAIL* null
      859     2604
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:137  
      860     2605    1   IRANGE_FAILED: ;
      861     2606    1   WWRITE_FAILED: ;
      862     2607    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, SITES);

   2607  0 000063   200003 630500                    EPPR0   SITES,,AUTO
         0 000064   200007 450500                    STP0    FOUND+2,,AUTO
         0 000065   000000 236000 1                  LDQ     0
         0 000066   200006 756100                    STQ     FOUND+1,,AUTO
         0 000067   200006 630500                    EPPR0   FOUND+1,,AUTO
         0 000070   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000071   000000 701000 xent               TSX1    VDI$CSET_COUNT
         0 000072   000000 011000                    NOP     0

      863     2608    1           ALTRETURN;

   2608  0 000073   000000 702200 xent               TSX2  ! X66_AALT
      864     2609
      865     2610    1   END VDI$CDISPLAY;
      866     2611        %EOD;

PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:138  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CDISPLAY.
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:139  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 CURR_WINDOW$               5-0-0/w BIT         r     1 FOUND
     3-0-0/w SBIN        r     1 SITES

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$         0-0-0/w STRC(324)   r     1 VD_LOC_$SITES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(900)   r     1 CURR$WINDOW                0-0-0/w STRC(468)   r     1 VD$FILE_NODE


   Procedure VDI$CDISPLAY requires 60 words for executable code.
   Procedure VDI$CDISPLAY requires 8 words of local(AUTO) storage.
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:140  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=VDI$CDISPLAY File=VDI$COMMANDS_EDITING.:VDA5TSI               FRI 07/04/97 11:30 Page:141  
          MINI XREF LISTING

CURR$WINDOW.OPERAND
      2469**DCL      2587<>CALL     2592<>CALL
CURR_WINDOW$
      2419**DCL      2430--IMP-PTR  2584<<ASSIGN   2587>>CALL     2592>>CALL
FOUND
      2420**DCL      2582<<ASSIGN   2586>>DOWHILE  2587<>CALL     2589>>IF
IRANGE_FAILED
      2599**LABEL    2587--CALLALT
SITES
      2417**DCL      2583<<ASSIGN   2591<<ASSIGN   2591>>ASSIGN   2596<>CALL     2599>>IF       2607<>CALL
VD$FILE_NODE.DESC.SPEC.V$
      2575**DCL      2584>>ASSIGN
VDE$IRANGE
      2383**DCL-ENT  2587--CALL
VDG$EREPORT_ERROR
      2384**DCL-ENT  2601--CALL
VDG$INFOMSG
      2385**DCL-ENT  2600--CALL
VDI$CSET_COUNT
      2387**DCL-ENT  2596--CALL     2607--CALL
VDP$WWRITE
      2386**DCL-ENT  2592--CALL
VD_CURRENT_WINDOW$
      2418**DCL      2584>>ASSIGN
VD_LOC_$SITES
      2397**DCL      2596<>CALL     2607<>CALL
WWRITE_FAILED
      2599**LABEL    2592--CALLALT

PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:142  
      867        1        /*T***********************************************************/
      868        2        /*T*                                                         */
      869        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      870        4        /*T*                                                         */
      871        5        /*T***********************************************************/
      872        6
      873        7        /*D*  NAME: VDI$CEDIT
      874        8            PARAMETERS:
      875        9                None.
      876       10            INPUT:
      877       11                VD_CURRENT_WINDOW$ - Ptr to VD$FILE_NODE at level 1 of the
      878       12                    Windows file, for the current editing window.  This
      879       13                    ptr must not be NIL; it's node must have a VD$WINDOW_SPEC:
      880       14                    it's .OPERAND is generally as VDE$IOPEN left it:
      881       15                    .OPERAND.STREAM$ - Ptr to VD$STREAM which
      882       16                        is (usually) open to the file to edit.  Note that:
      883       17                        o If we're editing a different file than currently,
      884       18                            the stream will be open to that file.
      885       19                        o If we're editing a block in the same file as
      886       20                            currently, the stream will be open to that file.
      887       21                        o If the user told us to edit a file we can't edit
      888       22                            (i.e., a scratch file), the stream will remain
      889       23                            open to the file we were editing (if any) before
      890       24                            the command.
      891       25                    .OPERAND.INTREE$ - Ptr to InTree for the block to edit.
      892       26                    .OPERAND.EDIT_BLOCK$ - Ptr to a VD$BLOCK_DESCRIPTOR
      893       27                        specifying the new EditBlock's domain.  This may
      894       28                        be the entire file (when we may edit just some
      895       29                        subportion thereof), or it may be some subportion
      896       30                        of a file which completely encloses the block to
      897       31                        edit.
      898       32                    .OPERAND.EVAL$ - Ptr to a VD$EVAL specifying the exact
      899       33                        range of the new EditBlock within .EDIT_BLOCK$'s
      900       34                        domain.
      901       35                VD_CURRENT_WINDOW$'s file node's children and it's
      902       36                    VD$WINDOW_SPEC.CURR_INDEX# will have been mucked with
      903       37                    as they should be (edit new block, edit PREVIOUS, edit
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:143  
      904       38                    NEXT); except if the user told us to edit a file we
      905       39                    can't edit (i.e., a scratch file), in which case they'll
      906       40                    be left alone.
      907       41            OUTPUT:
      908       42                If no errors are found:
      909       43                    VD$WINDOW_SPEC's EDIT$BLOCK.RANGE will specify the
      910       44                        exact range to edit.
      911       45                    VD$WINDOW_SPEC's VD$EVAL.RANGE will specify an empty block
      912       46                        at the start of the range to edit.
      913       47                        EXCEPT, if PREVIOUS or NEXT is the only operand in the
      914       48                        entire block expression, then we retain the EVAL.RANGE
      915       49                        from the previous/next EditBlock.
      916       50            DESCRIPTION:
      917       51        */
      918       52
      919       53        VDI$CEDIT: PROC ALTRET ;
      920       54
      921       55        %INCLUDE VD_MACROS_M;
      922     2270        %INCLUDE VD_PERR_C;
      923     2418
      924     2419
      925     2420    1   DCL VDE$IRANGE              ENTRY (2) ALTRET;
      926     2421    1   DCL VDA$LREAD               ENTRY (4) ALTRET;
      927     2422    1   DCL VDG$TEST_1_RANGE        ENTRY (2) ALTRET;
      928     2423    1   DCL VDG$OCLEAR_RANGE        ENTRY (1) ALTRET;
      929     2424    1   DCL VDG$OCLEAR_LOCATION     ENTRY (1) ALTRET;
      930     2425    1   DCL VDG$OCOPY_LOCATION      ENTRY (2) ALTRET;
      931     2426    1   DCL VDG$OALLOC              ENTRY (3) ALTRET;
      932     2427    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
      933     2428    1   DCL VDG$COMPARE_LOCS        ENTRY (3) ALTRET;
      934     2429    1   DCL VDG$ERRMSG              ENTRY (4) ALTRET;
      935     2430    1   DCL VDG$INFOMSG             ENTRY (4) ALTRET;
      936     2431    1   DCL VDG$WARNMSG             ENTRY (4) ALTRET;
      937     2432    1   DCL VDI$PREMOVE_EDIT_BLOCK  ENTRY ALTRET;
      938     2433    1   DCL VDI$CSET_COUNT          ENTRY (2) ALTRET;
      939     2434
      940     2435
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:144  
      941     2436        %VD_6E (STCLASS=SYMREF);
      942     2472    1   DCL VD_CURRENT_WINDOW$  PTR SYMREF ALIGNED;
      943     2473        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
      944     2501
      945     2502
      946     2503    1   DCL EDIT_WINDOW$        PTR ALIGNED;
      947     2504    1   DCL EDIT_STRM$          PTR ALIGNED;
      948     2505    1   DCL EDIT_BLOCK$         PTR ALIGNED;
      949     2506    1   DCL EDIT_EVAL$          PTR ALIGNED;
      950     2507    1   DCL IT_BLOCK_EXPR$      PTR ALIGNED;
      951     2508    1   DCL ONLY_OPERAND$       PTR;
      952     2509    1   DCL BLOCK_FILE_KEY$     PTR ALIGNED;
      953     2510    1   DCL RCCL                    SBIN ALIGNED;
      954     2511    1   DCL FOUND               BIT(1) ALIGNED;
      955     2512    1   DCL FOUND_1_RANGE       BIT(1) ALIGNED;
      956     2513
      957     2514
      958     2515        %VD$WINDOW_SPEC (NAME=EDIT$WINDOW, STCLASS="BASED(EDIT_WINDOW$)");
      959     2581        %VD$STREAM (NAME=EDIT$STRM, STCLASS="BASED(EDIT_STRM$)");
      960     2687        %VD$BLOCK_DESC (NAME=EDIT$BLOCK, STCLASS="BASED(EDIT_BLOCK$)");
      961     2834        %VD$EVAL (NAME=EDIT$EVAL, STCLASS="BASED(EDIT_EVAL$)");
      962     3079        %VD$IT_BLOCK_EXPR (NAME=IT$BLOCK_EXPR, STCLASS="BASED(IT_BLOCK_EXPR$)");
      963     3229        %VD$IT_OPERAND (NAME=ONLY$OPERAND, STCLASS="BASED(ONLY_OPERAND$)");
      964     3295        %VD$FILE_KEY (NAME=BLOCK_FILE$KEY, STCLASS="BASED(BLOCK_FILE_KEY$)");
      965     3344        %VD$ERR (NAME=VD$ERR, STCLASS=BASED);
      966     3397        %VD$FILE_NODE (STCLASS=BASED);
      967     3490        %VD$TEXTC_REMOTE;
      968     3551        %VD$IT_SELECT;
      969     3588        %VD$IT_ADJUST;
      970     3625        %VD$IT_OPERAND;
      971     3691
      972     3692
      973     3693
      974     3694    1           FOUND = %FALSE;
      975     3695    1           FOUND_1_RANGE = %FALSE;
      976     3696    1           EDIT_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;
      977     3697    1           EDIT_STRM$ = EDIT$WINDOW.OPERAND.STREAM$;
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:145  
      978     3698    1           IT_BLOCK_EXPR$ = EDIT$WINDOW.OPERAND.INTREE$;
      979     3699    1           EDIT_BLOCK$ = EDIT$WINDOW.OPERAND.EDIT_BLOCK$;
      980     3700
      981     3701    1           CALL VDE$IRANGE (EDIT$WINDOW.OPERAND, FOUND)
      982     3702    1             ALTRET (IRANGE_FAILED);
      983     3703    1           ONLY_OPERAND$ = ADDR(NIL);
      984     3704    1           IF IT$BLOCK_EXPR.SELECTS$ = IT$BLOCK_EXPR.SELECTS_TAIL$
      985     3705    1             AND IT$BLOCK_EXPR.SELECTS$ ~= ADDR(NIL) THEN
      986     3706    1              IF IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ =
      987     3707    1                IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS_TAIL$
      988     3708    1                AND IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ ~= ADDR(NIL) THEN
      989     3709    1                 IF IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ ->
      990     3710    1                   VD$IT_ADJUST.MOVEMENTS$ =
      991     3711    1                   IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ ->
      992     3712    2                   VD$IT_ADJUST.MOVEMENTS_TAIL$ THEN DO;
      993     3713    2                    ONLY_OPERAND$ = IT$BLOCK_EXPR.SELECTS$ ->
      994     3714    2                      VD$IT_SELECT.ADJUSTS$ -> VD$IT_ADJUST.MOVEMENTS$;
      995     3715    2                    IF ONLY_OPERAND$ ~= ADDR(NIL) THEN
      996     3716    2                       IF ONLY$OPERAND.CODE# ~= %OPAND_PREVIOUS
      997     3717    2                         AND ONLY$OPERAND.CODE# ~= %OPAND_NEXT THEN
      998     3718    2                          ONLY_OPERAND$ = ADDR(NIL);
      999     3719    2                    END;
     1000     3720
     1001     3721    1           IF ONLY_OPERAND$ = ADDR(NIL) THEN
     1002     3722    2   LOAD_NEW_EDIT_BLOCK_RANGE: DO;
     1003     3723                   /* Block expression isn't just PREVIOUS or NEXT */
     1004     3724    2              EDIT_EVAL$ = EDIT$WINDOW.OPERAND.EVAL$;
     1005     3725    2              CALL VDG$COMPARE_LOCS
     1006     3726    2                (EDIT$EVAL.RANGE.START, EDIT$EVAL.RANGE.ENDD, RCCL)
     1007     3727    2                ALTRET (COMPARE_LOCS_FAILED);
     1008     3728    2              IF RCCL = %RCCL_EQUAL THEN
     1009     3729    2                 FOUND = %FALSE; /* Can't edit a point */
     1010     3730    2              IF NOT FOUND THEN
     1011     3731    3              DO;
     1012     3732    3                 CALL VDG$ERRMSG (%E$NO_RANGE_FOR_EDIT);
     1013     3733    3                 GOTO TELL_PUSHED_OLD_EDIT_BLOCK;
     1014     3734    3                 END;
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:146  
     1015     3735
     1016     3736    2              IF EDIT$EVAL.RANGE.START.POSITION# ~= 0   OR
     1017     3737    2                EDIT$EVAL.RANGE.ENDD.POSITION# ~= 0 THEN
     1018     3738    3              DO;
     1019     3739    3                 EDIT$EVAL.RANGE.START.POSITION# = 0;
     1020     3740    3                 IF EDIT$EVAL.RANGE.ENDD.POSITION# ~= 0 THEN
     1021     3741    4                 DO;
     1022     3742    4                    CALL VDA$LREAD (EDIT$STRM, EDIT$EVAL.RANGE.ENDD, 1, %FALSE)
     1023     3743    4                      ALTRET (LREAD_FAILED);
     1024     3744    4                    CALL VDG$OCLEAR_LOCATION (EDIT$EVAL.RANGE.ENDD)
     1025     3745    4                      ALTRET (OCLEAR_LOCATION_FAILED);
     1026     3746    4                    CALL VDG$OCOPY_LOCATION (EDIT$STRM.CURRENT,
     1027     3747    4                      EDIT$EVAL.RANGE.ENDD)
     1028     3748    4                      ALTRET (OCOPY_LOCATION_FAILED);
     1029     3749    4                    END;
     1030     3750    3                 CALL VDG$WARNMSG (%E$CANT_EDIT_PARTIAL_RECS);
     1031     3751    3                 CALL VDG$EREPORT_ERROR;
     1032     3752    3                 END;
     1033     3753
     1034     3754    2              CALL VDG$OCLEAR_RANGE (EDIT$BLOCK.RANGE)
     1035     3755    2                ALTRET (OCLEAR_RANGE_FAILED);
     1036     3756    2              EDIT$BLOCK.RANGE = EDIT$EVAL.RANGE;
     1037     3757    2              EDIT$EVAL.RANGE = %CLEAR;
     1038     3758    2              CALL VDG$OCOPY_LOCATION (EDIT$BLOCK.RANGE.START,
     1039     3759    2                EDIT$EVAL.RANGE.START)
     1040     3760    2                ALTRET (OCOPY_LOCATION_FAILED);
     1041     3761    2              CALL VDG$OCOPY_LOCATION (EDIT$BLOCK.RANGE.START,
     1042     3762    2                EDIT$EVAL.RANGE.ENDD)
     1043     3763    2                ALTRET (OCOPY_LOCATION_FAILED);
     1044     3764    2              END LOAD_NEW_EDIT_BLOCK_RANGE;
     1045     3765
     1046     3766
     1047     3767    1           CALL VDG$TEST_1_RANGE (IT$BLOCK_EXPR, FOUND_1_RANGE)
     1048     3768    1             ALTRET (TEST_1_RANGE_FAILED);
     1049     3769    1           IF NOT FOUND_1_RANGE THEN
     1050     3770    2           DO;
     1051     3771    2              CALL VDG$WARNMSG (%E$EDIT_RPT_CNT_NOT_1);
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:147  
     1052     3772    2              CALL VDG$EREPORT_ERROR;
     1053     3773    2              END;
     1054     3774
     1055     3775
     1056     3776    1   IRANGE_FAILED: ;
     1057     3777    1   LREAD_FAILED: ;
     1058     3778    1   TELL_PUSHED_OLD_EDIT_BLOCK: ;
     1059     3779    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, BITBIN(FOUND))
     1060     3780    2           WHENALTRETURN DO; ALTRETURN; END;
     1061     3781    1           IF FOUND THEN RETURN;
     1062     3782
     1063     3783    1           IF VD_6E.ERR_TAIL$->VD$ERR.FLAGLEV# ~= %FLV_FATAL THEN
     1064     3784    2           DO;
     1065     3785    2              CALL VDI$PREMOVE_EDIT_BLOCK;     /* Let altret fall thru */
     1066     3786    2              CALL VDG$INFOMSG (%E$INFO_PUSHED_OLD_EDIT_BLOCK);
     1067     3787    2              END;
     1068     3788
     1069     3789
     1070     3790    1   COMPARE_LOCS_FAILED: ;
     1071     3791    1   OCLEAR_RANGE_FAILED: ;
     1072     3792    1   OALLOC_FAILED: ;
     1073     3793    1   OCLEAR_LOCATION_FAILED: ;
     1074     3794    1   OCOPY_LOCATION_FAILED: ;
     1075     3795    1   TEST_1_RANGE_FAILED: ;
     1076     3796    1           ALTRETURN;
     1077     3797
     1078     3798    1   END VDI$CEDIT;
     1079     3799        %EOD;

PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:148  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CEDIT.

   Procedure VDI$CEDIT requires 202 words for executable code.
   Procedure VDI$CEDIT requires 18 words of local(AUTO) storage.

PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:149  

 Object Unit name= VDI$CEDIT                                  File name= VDI$COMMANDS_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:30:55.16 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   202    312  VDI$CEDIT
    1  RoData even  none    11     13  VDI$CEDIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  VDI$CEDIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VDE$IRANGE
 yes     yes           Std       3 VDG$COMPARE_LOCS
 yes     yes           Std       4 VDA$LREAD
         yes           Std       1 VDG$EREPORT_ERROR
 yes     yes           Std       2 VDG$TEST_1_RANGE
 yes     yes           Std       0 VDI$PREMOVE_EDIT_BLOCK
 yes     yes           Std       1 VDG$OCLEAR_RANGE
 yes     yes           Std       4 VDG$ERRMSG
 yes     yes           Std       1 VDG$OCLEAR_LOCATION
 yes     yes           Std       2 VDG$OCOPY_LOCATION
 yes     yes           Std       4 VDG$WARNMSG
 yes     yes           Std       2 VDI$CSET_COUNT
 yes     yes           Std       4 VDG$INFOMSG
                       nStd      0 X66_AUTO_0
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:150  
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_CURRENT_WINDOW$                    VD_LOC_$SITES
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:151  


      867        1        /*T***********************************************************/
      868        2        /*T*                                                         */
      869        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      870        4        /*T*                                                         */
      871        5        /*T***********************************************************/
      872        6
      873        7        /*D*  NAME: VDI$CEDIT
      874        8            PARAMETERS:
      875        9                None.
      876       10            INPUT:
      877       11                VD_CURRENT_WINDOW$ - Ptr to VD$FILE_NODE at level 1 of the
      878       12                    Windows file, for the current editing window.  This
      879       13                    ptr must not be NIL; it's node must have a VD$WINDOW_SPEC:
      880       14                    it's .OPERAND is generally as VDE$IOPEN left it:
      881       15                    .OPERAND.STREAM$ - Ptr to VD$STREAM which
      882       16                        is (usually) open to the file to edit.  Note that:
      883       17                        o If we're editing a different file than currently,
      884       18                            the stream will be open to that file.
      885       19                        o If we're editing a block in the same file as
      886       20                            currently, the stream will be open to that file.
      887       21                        o If the user told us to edit a file we can't edit
      888       22                            (i.e., a scratch file), the stream will remain
      889       23                            open to the file we were editing (if any) before
      890       24                            the command.
      891       25                    .OPERAND.INTREE$ - Ptr to InTree for the block to edit.
      892       26                    .OPERAND.EDIT_BLOCK$ - Ptr to a VD$BLOCK_DESCRIPTOR
      893       27                        specifying the new EditBlock's domain.  This may
      894       28                        be the entire file (when we may edit just some
      895       29                        subportion thereof), or it may be some subportion
      896       30                        of a file which completely encloses the block to
      897       31                        edit.
      898       32                    .OPERAND.EVAL$ - Ptr to a VD$EVAL specifying the exact
      899       33                        range of the new EditBlock within .EDIT_BLOCK$'s
      900       34                        domain.
      901       35                VD_CURRENT_WINDOW$'s file node's children and it's
      902       36                    VD$WINDOW_SPEC.CURR_INDEX# will have been mucked with
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:152  
      903       37                    as they should be (edit new block, edit PREVIOUS, edit
      904       38                    NEXT); except if the user told us to edit a file we
      905       39                    can't edit (i.e., a scratch file), in which case they'll
      906       40                    be left alone.
      907       41            OUTPUT:
      908       42                If no errors are found:
      909       43                    VD$WINDOW_SPEC's EDIT$BLOCK.RANGE will specify the
      910       44                        exact range to edit.
      911       45                    VD$WINDOW_SPEC's VD$EVAL.RANGE will specify an empty block
      912       46                        at the start of the range to edit.
      913       47                        EXCEPT, if PREVIOUS or NEXT is the only operand in the
      914       48                        entire block expression, then we retain the EVAL.RANGE
      915       49                        from the previous/next EditBlock.
      916       50            DESCRIPTION:
      917       51        */
      918       52
      919       53        VDI$CEDIT: PROC ALTRET ;

     53  0 000000   000000 700200 xent  VDI$CEDIT    TSX0  ! X66_AUTO_0
         0 000001   000022 000000                    ZERO    18,0

      920       54
      921       55        %INCLUDE VD_MACROS_M;
      922     2270        %INCLUDE VD_PERR_C;
      923     2418
      924     2419
      925     2420    1   DCL VDE$IRANGE              ENTRY (2) ALTRET;
      926     2421    1   DCL VDA$LREAD               ENTRY (4) ALTRET;
      927     2422    1   DCL VDG$TEST_1_RANGE        ENTRY (2) ALTRET;
      928     2423    1   DCL VDG$OCLEAR_RANGE        ENTRY (1) ALTRET;
      929     2424    1   DCL VDG$OCLEAR_LOCATION     ENTRY (1) ALTRET;
      930     2425    1   DCL VDG$OCOPY_LOCATION      ENTRY (2) ALTRET;
      931     2426    1   DCL VDG$OALLOC              ENTRY (3) ALTRET;
      932     2427    1   DCL VDG$EREPORT_ERROR       ENTRY (1);
      933     2428    1   DCL VDG$COMPARE_LOCS        ENTRY (3) ALTRET;
      934     2429    1   DCL VDG$ERRMSG              ENTRY (4) ALTRET;
      935     2430    1   DCL VDG$INFOMSG             ENTRY (4) ALTRET;
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:153  
      936     2431    1   DCL VDG$WARNMSG             ENTRY (4) ALTRET;
      937     2432    1   DCL VDI$PREMOVE_EDIT_BLOCK  ENTRY ALTRET;
      938     2433    1   DCL VDI$CSET_COUNT          ENTRY (2) ALTRET;
      939     2434
      940     2435
      941     2436        %VD_6E (STCLASS=SYMREF);
      942     2472    1   DCL VD_CURRENT_WINDOW$  PTR SYMREF ALIGNED;
      943     2473        %VD$LOCATION (NAME=VD_LOC_$SITES, STCLASS=SYMREF);
      944     2501
      945     2502
      946     2503    1   DCL EDIT_WINDOW$        PTR ALIGNED;
      947     2504    1   DCL EDIT_STRM$          PTR ALIGNED;
      948     2505    1   DCL EDIT_BLOCK$         PTR ALIGNED;
      949     2506    1   DCL EDIT_EVAL$          PTR ALIGNED;
      950     2507    1   DCL IT_BLOCK_EXPR$      PTR ALIGNED;
      951     2508    1   DCL ONLY_OPERAND$       PTR;
      952     2509    1   DCL BLOCK_FILE_KEY$     PTR ALIGNED;
      953     2510    1   DCL RCCL                    SBIN ALIGNED;
      954     2511    1   DCL FOUND               BIT(1) ALIGNED;
      955     2512    1   DCL FOUND_1_RANGE       BIT(1) ALIGNED;
      956     2513
      957     2514
      958     2515        %VD$WINDOW_SPEC (NAME=EDIT$WINDOW, STCLASS="BASED(EDIT_WINDOW$)");
      959     2581        %VD$STREAM (NAME=EDIT$STRM, STCLASS="BASED(EDIT_STRM$)");
      960     2687        %VD$BLOCK_DESC (NAME=EDIT$BLOCK, STCLASS="BASED(EDIT_BLOCK$)");
      961     2834        %VD$EVAL (NAME=EDIT$EVAL, STCLASS="BASED(EDIT_EVAL$)");
      962     3079        %VD$IT_BLOCK_EXPR (NAME=IT$BLOCK_EXPR, STCLASS="BASED(IT_BLOCK_EXPR$)");
      963     3229        %VD$IT_OPERAND (NAME=ONLY$OPERAND, STCLASS="BASED(ONLY_OPERAND$)");
      964     3295        %VD$FILE_KEY (NAME=BLOCK_FILE$KEY, STCLASS="BASED(BLOCK_FILE_KEY$)");
      965     3344        %VD$ERR (NAME=VD$ERR, STCLASS=BASED);
      966     3397        %VD$FILE_NODE (STCLASS=BASED);
      967     3490        %VD$TEXTC_REMOTE;
      968     3551        %VD$IT_SELECT;
      969     3588        %VD$IT_ADJUST;
      970     3625        %VD$IT_OPERAND;
      971     3691
      972     3692
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:154  
      973     3693
      974     3694    1           FOUND = %FALSE;

   3694  0 000002   200013 450100                    STZ     FOUND,,AUTO

      975     3695    1           FOUND_1_RANGE = %FALSE;

   3695  0 000003   200014 450100                    STZ     FOUND_1_RANGE,,AUTO

      976     3696    1           EDIT_WINDOW$ = VD_CURRENT_WINDOW$->VD$FILE_NODE.DESC.SPEC.V$;

   3696  0 000004   000000 470400 xsym               LDP0    VD_CURRENT_WINDOW$
         0 000005   000007 236100                    LDQ     7,,PR0
         0 000006   200003 756100                    STQ     EDIT_WINDOW$,,AUTO

      977     3697    1           EDIT_STRM$ = EDIT$WINDOW.OPERAND.STREAM$;

   3697  0 000007   200003 471500                    LDP1    EDIT_WINDOW$,,AUTO
         0 000010   100010 236100                    LDQ     8,,PR1
         0 000011   200004 756100                    STQ     EDIT_STRM$,,AUTO

      978     3698    1           IT_BLOCK_EXPR$ = EDIT$WINDOW.OPERAND.INTREE$;

   3698  0 000012   100011 236100                    LDQ     9,,PR1
         0 000013   200007 756100                    STQ     IT_BLOCK_EXPR$,,AUTO

      979     3699    1           EDIT_BLOCK$ = EDIT$WINDOW.OPERAND.EDIT_BLOCK$;

   3699  0 000014   100012 236100                    LDQ     10,,PR1
         0 000015   200005 756100                    STQ     EDIT_BLOCK$,,AUTO

      980     3700
      981     3701    1           CALL VDE$IRANGE (EDIT$WINDOW.OPERAND, FOUND)

   3701  0 000016   200013 633500                    EPPR3   FOUND,,AUTO
         0 000017   200017 453500                    STP3    FOUND_1_RANGE+3,,AUTO
         0 000020   200003 236100                    LDQ     EDIT_WINDOW$,,AUTO
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:155  
         0 000021   000010 036003                    ADLQ    8,DU
         0 000022   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000023   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000024   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000025   000000 701000 xent               TSX1    VDE$IRANGE
         0 000026   000256 702000 0                  TSX2    IRANGE_FAILED

      982     3702    1             ALTRET (IRANGE_FAILED);
      983     3703    1           ONLY_OPERAND$ = ADDR(NIL);

   3703  0 000027   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000030   200010 756100                    STQ     ONLY_OPERAND$,,AUTO

      984     3704    1           IF IT$BLOCK_EXPR.SELECTS$ = IT$BLOCK_EXPR.SELECTS_TAIL$

   3704  0 000031   200007 470500                    LDP0    IT_BLOCK_EXPR$,,AUTO
         0 000032   000035 236100                    LDQ     29,,PR0
         0 000033   000036 116100                    CMPQ    30,,PR0
         0 000034   000064 601000 0                  TNZ     s:3721
         0 000035   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000036   000064 600000 0                  TZE     s:3721

      985     3705    1             AND IT$BLOCK_EXPR.SELECTS$ ~= ADDR(NIL) THEN
      986     3706    1              IF IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ =

   3706  0 000037   000035 471500                    LDP1    29,,PR0
         0 000040   100004 236100                    LDQ     4,,PR1
         0 000041   100005 116100                    CMPQ    5,,PR1
         0 000042   000064 601000 0                  TNZ     s:3721
         0 000043   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000044   000064 600000 0                  TZE     s:3721

      987     3707    1                IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS_TAIL$
      988     3708    1                AND IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ ~= ADDR(NIL) THEN
      989     3709    1                 IF IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ ->

   3709  0 000045   100004 473500                    LDP3    4,,PR1
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:156  
         0 000046   300004 236100                    LDQ     4,,PR3
         0 000047   300005 116100                    CMPQ    5,,PR3
         0 000050   000064 601000 0                  TNZ     s:3721

      990     3710    1                   VD$IT_ADJUST.MOVEMENTS$ =
      991     3711    1                   IT$BLOCK_EXPR.SELECTS$->VD$IT_SELECT.ADJUSTS$ ->
      992     3712    2                   VD$IT_ADJUST.MOVEMENTS_TAIL$ THEN DO;

      993     3713    2                    ONLY_OPERAND$ = IT$BLOCK_EXPR.SELECTS$ ->

   3713  0 000051   200010 756100                    STQ     ONLY_OPERAND$,,AUTO

      994     3714    2                      VD$IT_SELECT.ADJUSTS$ -> VD$IT_ADJUST.MOVEMENTS$;
      995     3715    2                    IF ONLY_OPERAND$ ~= ADDR(NIL) THEN

   3715  0 000052   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000053   000064 600000 0                  TZE     s:3721

      996     3716    2                       IF ONLY$OPERAND.CODE# ~= %OPAND_PREVIOUS

   3716  0 000054   200010 474500                    LDP4    ONLY_OPERAND$,,AUTO
         0 000055   400003 220100                    LDX0    3,,PR4
         0 000056   000004 100003                    CMPX0   4,DU
         0 000057   000064 600000 0                  TZE     s:3721
         0 000060   000003 100003                    CMPX0   3,DU
         0 000061   000064 600000 0                  TZE     s:3721

      997     3717    2                         AND ONLY$OPERAND.CODE# ~= %OPAND_NEXT THEN
      998     3718    2                          ONLY_OPERAND$ = ADDR(NIL);

   3718  0 000062   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000063   200010 756100                    STQ     ONLY_OPERAND$,,AUTO

      999     3719    2                    END;

     1000     3720
     1001     3721    1           IF ONLY_OPERAND$ = ADDR(NIL) THEN
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:157  

   3721  0 000064   200010 236100                    LDQ     ONLY_OPERAND$,,AUTO
         0 000065   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000066   000235 601000 0                  TNZ     s:3767

     1002     3722    2   LOAD_NEW_EDIT_BLOCK_RANGE: DO;

   3722  0 000067                       LOAD_NEW_ED* null
     1003     3723                   /* Block expression isn't just PREVIOUS or NEXT */
     1004     3724    2              EDIT_EVAL$ = EDIT$WINDOW.OPERAND.EVAL$;

   3724  0 000067   200003 471500                    LDP1    EDIT_WINDOW$,,AUTO
         0 000070   100013 236100                    LDQ     11,,PR1
         0 000071   200006 756100                    STQ     EDIT_EVAL$,,AUTO

     1005     3725    2              CALL VDG$COMPARE_LOCS

   3725  0 000072   200012 633500                    EPPR3   RCCL,,AUTO
         0 000073   200020 453500                    STP3    FOUND_1_RANGE+4,,AUTO
         0 000074   000035 036003                    ADLQ    29,DU
         0 000075   200017 756100                    STQ     FOUND_1_RANGE+3,,AUTO
         0 000076   200006 236100                    LDQ     EDIT_EVAL$,,AUTO
         0 000077   000024 036003                    ADLQ    20,DU
         0 000100   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000101   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000102   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000103   000000 701000 xent               TSX1    VDG$COMPARE_LOCS
         0 000104   000311 702000 0                  TSX2    COMPARE_LOCS_FAILED

     1006     3726    2                (EDIT$EVAL.RANGE.START, EDIT$EVAL.RANGE.ENDD, RCCL)
     1007     3727    2                ALTRET (COMPARE_LOCS_FAILED);
     1008     3728    2              IF RCCL = %RCCL_EQUAL THEN

   3728  0 000105   200012 235100                    LDA     RCCL,,AUTO
         0 000106   000110 601000 0                  TNZ     s:3730

     1009     3729    2                 FOUND = %FALSE; /* Can't edit a point */
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:158  

   3729  0 000107   200013 450100                    STZ     FOUND,,AUTO

     1010     3730    2              IF NOT FOUND THEN

   3730  0 000110   200013 234100                    SZN     FOUND,,AUTO
         0 000111   000117 604000 0                  TMI     s:3736

     1011     3731    3              DO;

     1012     3732    3                 CALL VDG$ERRMSG (%E$NO_RANGE_FOR_EDIT);

   3732  0 000112   000001 630400 1                  EPPR0   1
         0 000113   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000114   000000 701000 xent               TSX1    VDG$ERRMSG
         0 000115   000000 011000                    NOP     0

     1013     3733    3                 GOTO TELL_PUSHED_OLD_EDIT_BLOCK;

   3733  0 000116   000256 710000 0                  TRA     IRANGE_FAILED

     1014     3734    3                 END;
     1015     3735
     1016     3736    2              IF EDIT$EVAL.RANGE.START.POSITION# ~= 0   OR

   3736  0 000117   200006 470500                    LDP0    EDIT_EVAL$,,AUTO
         0 000120   000034 220100                    LDX0    28,,PR0
         0 000121   000124 601000 0                  TNZ     s:3739
         0 000122   000045 221100                    LDX1    37,,PR0
         0 000123   000172 600000 0                  TZE     s:3754

     1017     3737    2                EDIT$EVAL.RANGE.ENDD.POSITION# ~= 0 THEN
     1018     3738    3              DO;

     1019     3739    3                 EDIT$EVAL.RANGE.START.POSITION# = 0;

   3739  0 000124   000000 221003                    LDX1    0,DU
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:159  
         0 000125   000034 741100                    STX1    28,,PR0

     1020     3740    3                 IF EDIT$EVAL.RANGE.ENDD.POSITION# ~= 0 THEN

   3740  0 000126   000045 220100                    LDX0    37,,PR0
         0 000127   000163 600000 0                  TZE     s:3750

     1021     3741    4                 DO;

     1022     3742    4                    CALL VDA$LREAD (EDIT$STRM, EDIT$EVAL.RANGE.ENDD, 1, %FALSE)

   3742  0 000130   000002 237000 1                  LDAQ    2
         0 000131   200020 757100                    STAQ    FOUND_1_RANGE+4,,AUTO
         0 000132   200006 236100                    LDQ     EDIT_EVAL$,,AUTO
         0 000133   000035 036003                    ADLQ    29,DU
         0 000134   200004 235100                    LDA     EDIT_STRM$,,AUTO
         0 000135   200016 757100                    STAQ    FOUND_1_RANGE+2,,AUTO
         0 000136   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000137   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000140   000000 701000 xent               TSX1    VDA$LREAD
         0 000141   000256 702000 0                  TSX2    IRANGE_FAILED

     1023     3743    4                      ALTRET (LREAD_FAILED);
     1024     3744    4                    CALL VDG$OCLEAR_LOCATION (EDIT$EVAL.RANGE.ENDD)

   3744  0 000142   200006 236100                    LDQ     EDIT_EVAL$,,AUTO
         0 000143   000035 036003                    ADLQ    29,DU
         0 000144   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000145   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000147   000000 701000 xent               TSX1    VDG$OCLEAR_LOCATION
         0 000150   000311 702000 0                  TSX2    COMPARE_LOCS_FAILED

     1025     3745    4                      ALTRET (OCLEAR_LOCATION_FAILED);
     1026     3746    4                    CALL VDG$OCOPY_LOCATION (EDIT$STRM.CURRENT,

   3746  0 000151   200006 236100                    LDQ     EDIT_EVAL$,,AUTO
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:160  
         0 000152   000035 036003                    ADLQ    29,DU
         0 000153   200017 756100                    STQ     FOUND_1_RANGE+3,,AUTO
         0 000154   200004 236100                    LDQ     EDIT_STRM$,,AUTO
         0 000155   000006 036003                    ADLQ    6,DU
         0 000156   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000157   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000160   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000161   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000162   000311 702000 0                  TSX2    COMPARE_LOCS_FAILED

     1027     3747    4                      EDIT$EVAL.RANGE.ENDD)
     1028     3748    4                      ALTRET (OCOPY_LOCATION_FAILED);
     1029     3749    4                    END;

     1030     3750    3                 CALL VDG$WARNMSG (%E$CANT_EDIT_PARTIAL_RECS);

   3750  0 000163   000005 630400 1                  EPPR0   5
         0 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000165   000000 701000 xent               TSX1    VDG$WARNMSG
         0 000166   000000 011000                    NOP     0

     1031     3751    3                 CALL VDG$EREPORT_ERROR;

   3751  0 000167   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000170   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         0 000171   000000 011000                    NOP     0

     1032     3752    3                 END;

     1033     3753
     1034     3754    2              CALL VDG$OCLEAR_RANGE (EDIT$BLOCK.RANGE)

   3754  0 000172   200005 236100                    LDQ     EDIT_BLOCK$,,AUTO
         0 000173   000003 036003                    ADLQ    3,DU
         0 000174   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000175   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:161  
         0 000177   000000 701000 xent               TSX1    VDG$OCLEAR_RANGE
         0 000200   000311 702000 0                  TSX2    COMPARE_LOCS_FAILED

     1035     3755    2                ALTRET (OCLEAR_RANGE_FAILED);
     1036     3756    2              EDIT$BLOCK.RANGE = EDIT$EVAL.RANGE;

   3756  0 000201   200006 470500                    LDP0    EDIT_EVAL$,,AUTO
         0 000202   200005 471500                    LDP1    EDIT_BLOCK$,,AUTO
         0 000203   000100 100500                    MLR     fill='000'O
         0 000204   000024 000110                    ADSC9   20,,PR0                  cn=0,n=72
         0 000205   100003 000110                    ADSC9   3,,PR1                   cn=0,n=72

     1037     3757    2              EDIT$EVAL.RANGE = %CLEAR;

   3757  0 000206   000100 100400                    MLR     fill='000'O
         0 000207   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000210   000024 000110                    ADSC9   20,,PR0                  cn=0,n=72

     1038     3758    2              CALL VDG$OCOPY_LOCATION (EDIT$BLOCK.RANGE.START,

   3758  0 000211   200006 236100                    LDQ     EDIT_EVAL$,,AUTO
         0 000212   000024 036003                    ADLQ    20,DU
         0 000213   200017 756100                    STQ     FOUND_1_RANGE+3,,AUTO
         0 000214   200005 236100                    LDQ     EDIT_BLOCK$,,AUTO
         0 000215   000003 036003                    ADLQ    3,DU
         0 000216   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000217   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000220   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000221   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000222   000311 702000 0                  TSX2    COMPARE_LOCS_FAILED

     1039     3759    2                EDIT$EVAL.RANGE.START)
     1040     3760    2                ALTRET (OCOPY_LOCATION_FAILED);
     1041     3761    2              CALL VDG$OCOPY_LOCATION (EDIT$BLOCK.RANGE.START,

   3761  0 000223   200006 236100                    LDQ     EDIT_EVAL$,,AUTO
         0 000224   000035 036003                    ADLQ    29,DU
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:162  
         0 000225   200017 756100                    STQ     FOUND_1_RANGE+3,,AUTO
         0 000226   200005 236100                    LDQ     EDIT_BLOCK$,,AUTO
         0 000227   000003 036003                    ADLQ    3,DU
         0 000230   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000231   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000232   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000233   000000 701000 xent               TSX1    VDG$OCOPY_LOCATION
         0 000234   000311 702000 0                  TSX2    COMPARE_LOCS_FAILED

     1042     3762    2                EDIT$EVAL.RANGE.ENDD)
     1043     3763    2                ALTRET (OCOPY_LOCATION_FAILED);
     1044     3764    2              END LOAD_NEW_EDIT_BLOCK_RANGE;

     1045     3765
     1046     3766
     1047     3767    1           CALL VDG$TEST_1_RANGE (IT$BLOCK_EXPR, FOUND_1_RANGE)

   3767  0 000235   200014 630500                    EPPR0   FOUND_1_RANGE,,AUTO
         0 000236   200017 450500                    STP0    FOUND_1_RANGE+3,,AUTO
         0 000237   200007 236100                    LDQ     IT_BLOCK_EXPR$,,AUTO
         0 000240   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000241   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000242   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000243   000000 701000 xent               TSX1    VDG$TEST_1_RANGE
         0 000244   000311 702000 0                  TSX2    COMPARE_LOCS_FAILED

     1048     3768    1             ALTRET (TEST_1_RANGE_FAILED);
     1049     3769    1           IF NOT FOUND_1_RANGE THEN

   3769  0 000245   200014 234100                    SZN     FOUND_1_RANGE,,AUTO
         0 000246   000256 604000 0                  TMI     IRANGE_FAILED

     1050     3770    2           DO;

     1051     3771    2              CALL VDG$WARNMSG (%E$EDIT_RPT_CNT_NOT_1);

   3771  0 000247   000007 630400 1                  EPPR0   7
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:163  
         0 000250   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000251   000000 701000 xent               TSX1    VDG$WARNMSG
         0 000252   000000 011000                    NOP     0

     1052     3772    2              CALL VDG$EREPORT_ERROR;

   3772  0 000253   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000254   000000 701000 xent               TSX1    VDG$EREPORT_ERROR
         0 000255   000000 011000                    NOP     0

     1053     3773    2              END;

   3769  0 000256                       IRANGE_FAIL* null
   3769  0 000256                       LREAD_FAILED null
   3769  0 000256                       TELL_PUSHED* null
     1054     3774
     1055     3775
     1056     3776    1   IRANGE_FAILED: ;
     1057     3777    1   LREAD_FAILED: ;
     1058     3778    1   TELL_PUSHED_OLD_EDIT_BLOCK: ;
     1059     3779    1           CALL VDI$CSET_COUNT (VD_LOC_$SITES, BITBIN(FOUND))

   3779  0 000256   200013 236100                    LDQ     FOUND,,AUTO
         0 000257   000043 772000                    QRL     35
         0 000260   200016 756100                    STQ     FOUND_1_RANGE+2,,AUTO
         0 000261   200016 630500                    EPPR0   FOUND_1_RANGE+2,,AUTO
         0 000262   200021 450500                    STP0    FOUND_1_RANGE+5,,AUTO
         0 000263   000010 236000 1                  LDQ     8
         0 000264   200020 756100                    STQ     FOUND_1_RANGE+4,,AUTO
         0 000265   200020 630500                    EPPR0   FOUND_1_RANGE+4,,AUTO
         0 000266   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000267   000000 701000 xent               TSX1    VDI$CSET_COUNT
         0 000270   000272 702000 0                  TSX2    s:3780
         0 000271   000273 710000 0                  TRA     s:3781

     1060     3780    2           WHENALTRETURN DO; ALTRETURN; END;

PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:164  
   3780  0 000272   000000 702200 xent               TSX2  ! X66_AALT

     1061     3781    1           IF FOUND THEN RETURN;

   3781  0 000273   200013 234100                    SZN     FOUND,,AUTO
         0 000274   000276 605000 0                  TPL     s:3783

   3781  0 000275   000000 702200 xent               TSX2  ! X66_ARET

     1062     3782
     1063     3783    1           IF VD_6E.ERR_TAIL$->VD$ERR.FLAGLEV# ~= %FLV_FATAL THEN

   3783  0 000276   000032 470400 xsym               LDP0    VD_6E+26
         0 000277   000003 220100                    LDX0    3,,PR0
         0 000300   000004 100003                    CMPX0   4,DU
         0 000301   000311 600000 0                  TZE     COMPARE_LOCS_FAILED

     1064     3784    2           DO;

     1065     3785    2              CALL VDI$PREMOVE_EDIT_BLOCK;     /* Let altret fall thru */

   3785  0 000302   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000303   000000 701000 xent               TSX1    VDI$PREMOVE_EDIT_BLOCK
         0 000304   000000 011000                    NOP     0

     1066     3786    2              CALL VDG$INFOMSG (%E$INFO_PUSHED_OLD_EDIT_BLOCK);

   3786  0 000305   000012 630400 1                  EPPR0   10
         0 000306   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000307   000000 701000 xent               TSX1    VDG$INFOMSG
         0 000310   000000 011000                    NOP     0

     1067     3787    2              END;

   3783  0 000311                       COMPARE_LOC* null
   3783  0 000311                       OCLEAR_RANG* null
   3783  0 000311                       OALLOC_FAIL* null
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:165  
   3783  0 000311                       OCLEAR_LOCA* null
   3783  0 000311                       OCOPY_LOCAT* null
   3783  0 000311                       TEST_1_RANG* null
     1068     3788
     1069     3789
     1070     3790    1   COMPARE_LOCS_FAILED: ;
     1071     3791    1   OCLEAR_RANGE_FAILED: ;
     1072     3792    1   OALLOC_FAILED: ;
     1073     3793    1   OCLEAR_LOCATION_FAILED: ;
     1074     3794    1   OCOPY_LOCATION_FAILED: ;
     1075     3795    1   TEST_1_RANGE_FAILED: ;
     1076     3796    1           ALTRETURN;

   3796  0 000311   000000 702200 xent               TSX2  ! X66_AALT
     1077     3797
     1078     3798    1   END VDI$CEDIT;
     1079     3799        %EOD;

PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:166  
--  Include file information  --

   VD_PERR_C.:VDA5TOU  is referenced.
   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CEDIT.
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:167  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/w PTR         r     1 BLOCK_FILE_KEY$            5-0-0/w PTR         r     1 EDIT_BLOCK$
     6-0-0/w PTR         r     1 EDIT_EVAL$                 4-0-0/w PTR         r     1 EDIT_STRM$
     3-0-0/w PTR         r     1 EDIT_WINDOW$              13-0-0/w BIT         r     1 FOUND
    14-0-0/w BIT         r     1 FOUND_1_RANGE              7-0-0/w PTR         r     1 IT_BLOCK_EXPR$
    10-0-0/w PTR         r     1 ONLY_OPERAND$             12-0-0/w SBIN        r     1 RCCL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w PTR         r     1 VD_CURRENT_WINDOW$
     0-0-0/w STRC(324)   r     1 VD_LOC_$SITES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(936)   r     1 EDIT$BLOCK                 0-0-0/w STRC(2124)  r     1 EDIT$EVAL
     0-0-0/w STRC(864)   r     1 EDIT$STRM                  0-0-0/w STRC(900)   r     1 EDIT$WINDOW
     0-0-0/w STRC(1116)  r     1 IT$BLOCK_EXPR              0-0-0/w STRC(324)   r     1 ONLY$OPERAND
     0-0-0/w STRC(180)   r     1 VD$ERR                     0-0-0/w STRC(468)   r     1 VD$FILE_NODE
     0-0-0/w STRC(216)   r     1 VD$IT_ADJUST               0-0-0/w STRC(216)   r     1 VD$IT_SELECT
     0-0-0/w ASTR(81)    r     1 VD$TEXTC_REMOTE


   Procedure VDI$CEDIT requires 202 words for executable code.
   Procedure VDI$CEDIT requires 18 words of local(AUTO) storage.
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:168  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:169  
          MINI XREF LISTING

BLOCK_FILE_KEY$
      2509**DCL      3311--IMP-PTR
COMPARE_LOCS_FAILED
      3783**LABEL    3725--CALLALT
EDIT$BLOCK.RANGE
      2745**DCL      3754<>CALL     3756<<ASSIGN
EDIT$BLOCK.RANGE.START
      2757**DCL      3758<>CALL     3761<>CALL
EDIT$EVAL.RANGE
      2948**DCL      3756>>ASSIGN   3757<<ASSIGN
EDIT$EVAL.RANGE.ENDD
      2988**DCL      3725<>CALL     3742<>CALL     3744<>CALL     3746<>CALL     3761<>CALL
EDIT$EVAL.RANGE.ENDD.POSITION#
      3004**DCL      3736>>IF       3740>>IF
EDIT$EVAL.RANGE.START
      2960**DCL      3725<>CALL     3758<>CALL
EDIT$EVAL.RANGE.START.POSITION#
      2976**DCL      3736>>IF       3739<<ASSIGN
EDIT$STRM
      2589**DCL      3742<>CALL
EDIT$STRM.CURRENT
      2640**DCL      3746<>CALL
EDIT$WINDOW.OPERAND
      2562**DCL      3701<>CALL
EDIT$WINDOW.OPERAND.EDIT_BLOCK$
      2564**DCL      3699>>ASSIGN
EDIT$WINDOW.OPERAND.EVAL$
      2564**DCL      3724>>ASSIGN
EDIT$WINDOW.OPERAND.INTREE$
      2564**DCL      3698>>ASSIGN
EDIT$WINDOW.OPERAND.STREAM$
      2564**DCL      3697>>ASSIGN
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:170  
EDIT_BLOCK$
      2505**DCL      2695--IMP-PTR  3699<<ASSIGN   3754>>CALL     3756>>ASSIGN   3758>>CALL     3761>>CALL
EDIT_EVAL$
      2506**DCL      2842--IMP-PTR  3724<<ASSIGN   3725>>CALL     3725>>CALL     3736>>IF       3736>>IF
      3739>>ASSIGN   3740>>IF       3742>>CALL     3744>>CALL     3746>>CALL     3756>>ASSIGN   3757>>ASSIGN
      3758>>CALL     3761>>CALL
EDIT_STRM$
      2504**DCL      2589--IMP-PTR  3697<<ASSIGN   3742>>CALL     3746>>CALL
EDIT_WINDOW$
      2503**DCL      2523--IMP-PTR  3696<<ASSIGN   3697>>ASSIGN   3698>>ASSIGN   3699>>ASSIGN   3701>>CALL
      3724>>ASSIGN
FOUND
      2511**DCL      3694<<ASSIGN   3701<>CALL     3729<<ASSIGN   3730>>IF       3779<>CALL     3781>>IF
FOUND_1_RANGE
      2512**DCL      3695<<ASSIGN   3767<>CALL     3769>>IF
IRANGE_FAILED
      3769**LABEL    3701--CALLALT
IT$BLOCK_EXPR
      3087**DCL      3767<>CALL
IT$BLOCK_EXPR.SELECTS$
      3227**DCL      3704>>IF       3704>>IF       3706>>IF       3706>>IF       3706>>IF       3709>>IF
      3709>>IF       3713>>ASSIGN
IT$BLOCK_EXPR.SELECTS_TAIL$
      3227**DCL      3704>>IF
IT_BLOCK_EXPR$
      2507**DCL      3087--IMP-PTR  3698<<ASSIGN   3704>>IF       3704>>IF       3704>>IF       3706>>IF
      3706>>IF       3706>>IF       3709>>IF       3709>>IF       3713>>ASSIGN   3767>>CALL
LREAD_FAILED
      3769**LABEL    3742--CALLALT
OCLEAR_LOCATION_FAILED
      3783**LABEL    3744--CALLALT
OCLEAR_RANGE_FAILED
      3783**LABEL    3754--CALLALT
OCOPY_LOCATION_FAILED
      3783**LABEL    3746--CALLALT  3758--CALLALT  3761--CALLALT
ONLY$OPERAND.CODE#
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:171  
      3263**DCL      3716>>IF       3716>>IF
ONLY_OPERAND$
      2508**DCL      3237--IMP-PTR  3703<<ASSIGN   3713<<ASSIGN   3715>>IF       3716>>IF       3716>>IF
      3718<<ASSIGN   3721>>IF
RCCL
      2510**DCL      3725<>CALL     3728>>IF
TELL_PUSHED_OLD_EDIT_BLOCK
      3769**LABEL    3733--GOTO
TEST_1_RANGE_FAILED
      3783**LABEL    3767--CALLALT
VD$ERR.FLAGLEV#
      3394**DCL      3783>>IF
VD$FILE_NODE.DESC.SPEC.V$
      3484**DCL      3696>>ASSIGN
VD$IT_ADJUST.MOVEMENTS$
      3622**DCL      3709>>IF       3713>>ASSIGN
VD$IT_ADJUST.MOVEMENTS_TAIL$
      3623**DCL      3709>>IF
VD$IT_SELECT.ADJUSTS$
      3586**DCL      3706>>IF       3706>>IF       3709>>IF       3709>>IF       3713>>ASSIGN
VD$IT_SELECT.ADJUSTS_TAIL$
      3586**DCL      3706>>IF
VD$TEXTC_REMOTE.LENGTH#
      3544**DCL      3546--IMP-SIZ
VDA$LREAD
      2421**DCL-ENT  3742--CALL
VDE$IRANGE
      2420**DCL-ENT  3701--CALL
VDG$COMPARE_LOCS
      2428**DCL-ENT  3725--CALL
VDG$EREPORT_ERROR
      2427**DCL-ENT  3751--CALL     3772--CALL
VDG$ERRMSG
      2429**DCL-ENT  3732--CALL
VDG$INFOMSG
      2430**DCL-ENT  3786--CALL
PL6.E3A0      #006=VDI$CEDIT File=VDI$COMMANDS_EDITING.:VDA5TSI                  FRI 07/04/97 11:30 Page:172  
VDG$OCLEAR_LOCATION
      2424**DCL-ENT  3744--CALL
VDG$OCLEAR_RANGE
      2423**DCL-ENT  3754--CALL
VDG$OCOPY_LOCATION
      2425**DCL-ENT  3746--CALL     3758--CALL     3761--CALL
VDG$TEST_1_RANGE
      2422**DCL-ENT  3767--CALL
VDG$WARNMSG
      2431**DCL-ENT  3750--CALL     3771--CALL
VDI$CSET_COUNT
      2433**DCL-ENT  3779--CALL
VDI$PREMOVE_EDIT_BLOCK
      2432**DCL-ENT  3785--CALL
VD_6E.ERR_TAIL$
      2468**DCL      3783>>IF
VD_CURRENT_WINDOW$
      2472**DCL      3696>>ASSIGN
VD_LOC_$SITES
      2481**DCL      3779<>CALL

PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:173  
     1080        1        /*T***********************************************************/
     1081        2        /*T*                                                         */
     1082        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1083        4        /*T*                                                         */
     1084        5        /*T***********************************************************/
     1085        6
     1086        7        /*D* NAME: VDI$CSET_COUNT
     1087        8            PARAMETERS:
     1088        9                LOCATION - VD$LOCATION of the predefined name in the Equals file
     1089       10                    whose value is to be set.
     1090       11                                    !! NOTE !!
     1091       12                        This routine should only be used to set the
     1092       13                        predefined names, and not at the direct
     1093       14                        request of the user but only as a side-effect
     1094       15                        of some other action.  This is because we
     1095       16                        enable all Accessor priviledges here, thus
     1096       17                        overriding any protections on the name.
     1097       18                        This shouldn't be done on behalf of the user.
     1098       19                VALUE - SBIN word containing the value to assign to the predefined
     1099       20                    name.
     1100       21            INPUT:
     1101       22                VD_6E.EQUALS$ must point to the VD$STREAM open to the Equals file.
     1102       23            OUTPUT:
     1103       24                The predefined name's value will be set.
     1104       25            DESCRIPTION:
     1105       26                Write a new value to a predefined name in the Equals file.
     1106       27        */
     1107       28
     1108       29        VDI$CSET_COUNT: PROC (LOCATION, VALUE) ALTRET;
     1109       30
     1110       31        %INCLUDE VD_MACROS_M;
     1111     2246
     1112     2247
     1113     2248        %VD$LOCATION (NAME=LOCATION, STCLASS=PARAM);
     1114     2276    1   DCL VALUE SBIN;
     1115     2277
     1116     2278
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:174  
     1117     2279    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
     1118     2280    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
     1119     2281    1   DCL VDA$LWRITE          ENTRY (4) ALTRET;
     1120     2282    1   DCL VDA$PFLUSH          ENTRY (2) ALTRET;
     1121     2283
     1122     2284
     1123     2285        %VD_6E (STCLASS=SYMREF);
     1124     2321    1   DCL 1 VD_ACCESSOR_PRIV ALIGNED SYMREF,
     1125     2322            %VD$NAC (NAME=ACCESS, LEV=2, LAST=YES, ALIGNMENT=UNAL, STCLASS=STATIC);
     1126     2336
     1127     2337
     1128     2338
     1129     2339    1   DCL 1 SAVE_ACCESSOR_PRIV ALIGNED,
     1130     2340            %VD$NAC (NAME=ACCESS, LEV=2, LAST=YES, ALIGNMENT=UNAL, STCLASS=AUTO);
     1131     2354    1   DCL VALUE_NUMBER$ PTR;
     1132     2355
     1133     2356
     1134     2357        %VD$NUMBER (NAME=VALUE$NUMBER, STCLASS="BASED(VALUE_NUMBER$)");
     1135     2402        %VD$STREAM (NAME=EQUALS$STREAM, STCLASS="BASED(VD_6E.EQUALS$)");
     1136     2508        %VD$PORT;
     1137     2606
     1138     2607
     1139     2608
     1140     2609    1           CALL VDG$OALLOC (%CLS_NUMBER, VALUE_NUMBER$)
     1141     2610    1             ALTRET (OALLOC_FAILED);
     1142     2611    1           VALUE$NUMBER.V# = VALUE;
     1143     2612
     1144     2613    1           SAVE_ACCESSOR_PRIV = VD_ACCESSOR_PRIV;
     1145     2614    1           VD_ACCESSOR_PRIV = %NAC_ALL_BITS;
     1146     2615    1           CALL VDA$LWRITE (EQUALS$STREAM, LOCATION, , VALUE$NUMBER)
     1147     2616    2           WHENALTRETURN DO;
     1148     2617    2              VD_ACCESSOR_PRIV = SAVE_ACCESSOR_PRIV;
     1149     2618    2              CALL VDG$OFREE (VALUE$NUMBER);
     1150     2619    2              ALTRETURN;
     1151     2620    2              END;
     1152     2621
     1153     2622    1           CALL VDA$PFLUSH (EQUALS$STREAM.PORT$->VD$PORT, %TO_PRESENTER)
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:175  
     1154     2623    2           WHENALTRETURN DO;
     1155     2624    2              VD_ACCESSOR_PRIV = SAVE_ACCESSOR_PRIV;
     1156     2625    2              ALTRETURN;
     1157     2626    2              END;
     1158     2627
     1159     2628    1           VD_ACCESSOR_PRIV = SAVE_ACCESSOR_PRIV;
     1160     2629    1           RETURN;
     1161     2630
     1162     2631
     1163     2632    1   OALLOC_FAILED: ;
     1164     2633    1           ALTRETURN;
     1165     2634
     1166     2635    1   END VDI$CSET_COUNT;

PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:176  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CSET_COUNT.

   Procedure VDI$CSET_COUNT requires 57 words for executable code.
   Procedure VDI$CSET_COUNT requires 12 words of local(AUTO) storage.

    No errors detected in file VDI$COMMANDS_EDITING.:VDA5TSI    .

PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:177  

 Object Unit name= VDI$CSET_COUNT                             File name= VDI$COMMANDS_EDITING.:VDA5TOU
 UTS= JUL 04 '97 11:31:06.60 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    57     71  VDI$CSET_COUNT
    1  RoData even  none     3      3  VDI$CSET_COUNT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  VDI$CSET_COUNT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 VDG$OALLOC
 yes     yes           Std       4 VDA$LWRITE
 yes     yes           Std       1 VDG$OFREE
 yes     yes           Std       2 VDA$PFLUSH
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:178  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     VD_6E                                 VD_ACCESSOR_PRIV                      B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:179  


     1080        1        /*T***********************************************************/
     1081        2        /*T*                                                         */
     1082        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1083        4        /*T*                                                         */
     1084        5        /*T***********************************************************/
     1085        6
     1086        7        /*D* NAME: VDI$CSET_COUNT
     1087        8            PARAMETERS:
     1088        9                LOCATION - VD$LOCATION of the predefined name in the Equals file
     1089       10                    whose value is to be set.
     1090       11                                    !! NOTE !!
     1091       12                        This routine should only be used to set the
     1092       13                        predefined names, and not at the direct
     1093       14                        request of the user but only as a side-effect
     1094       15                        of some other action.  This is because we
     1095       16                        enable all Accessor priviledges here, thus
     1096       17                        overriding any protections on the name.
     1097       18                        This shouldn't be done on behalf of the user.
     1098       19                VALUE - SBIN word containing the value to assign to the predefined
     1099       20                    name.
     1100       21            INPUT:
     1101       22                VD_6E.EQUALS$ must point to the VD$STREAM open to the Equals file.
     1102       23            OUTPUT:
     1103       24                The predefined name's value will be set.
     1104       25            DESCRIPTION:
     1105       26                Write a new value to a predefined name in the Equals file.
     1106       27        */
     1107       28
     1108       29        VDI$CSET_COUNT: PROC (LOCATION, VALUE) ALTRET;

     29  0 000000   000000 700200 xent  VDI$CSET_CO* TSX0  ! X66_AUTO_2
         0 000001   000014 000002                    ZERO    12,2

     1109       30
     1110       31        %INCLUDE VD_MACROS_M;
     1111     2246
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:180  
     1112     2247
     1113     2248        %VD$LOCATION (NAME=LOCATION, STCLASS=PARAM);
     1114     2276    1   DCL VALUE SBIN;
     1115     2277
     1116     2278
     1117     2279    1   DCL VDG$OALLOC          ENTRY (3) ALTRET;
     1118     2280    1   DCL VDG$OFREE           ENTRY (1) ALTRET;
     1119     2281    1   DCL VDA$LWRITE          ENTRY (4) ALTRET;
     1120     2282    1   DCL VDA$PFLUSH          ENTRY (2) ALTRET;
     1121     2283
     1122     2284
     1123     2285        %VD_6E (STCLASS=SYMREF);
     1124     2321    1   DCL 1 VD_ACCESSOR_PRIV ALIGNED SYMREF,
     1125     2322            %VD$NAC (NAME=ACCESS, LEV=2, LAST=YES, ALIGNMENT=UNAL, STCLASS=STATIC);
     1126     2336
     1127     2337
     1128     2338
     1129     2339    1   DCL 1 SAVE_ACCESSOR_PRIV ALIGNED,
     1130     2340            %VD$NAC (NAME=ACCESS, LEV=2, LAST=YES, ALIGNMENT=UNAL, STCLASS=AUTO);
     1131     2354    1   DCL VALUE_NUMBER$ PTR;
     1132     2355
     1133     2356
     1134     2357        %VD$NUMBER (NAME=VALUE$NUMBER, STCLASS="BASED(VALUE_NUMBER$)");
     1135     2402        %VD$STREAM (NAME=EQUALS$STREAM, STCLASS="BASED(VD_6E.EQUALS$)");
     1136     2508        %VD$PORT;
     1137     2606
     1138     2607
     1139     2608
     1140     2609    1           CALL VDG$OALLOC (%CLS_NUMBER, VALUE_NUMBER$)

   2609  0 000002   200006 630500                    EPPR0   VALUE_NUMBER$,,AUTO
         0 000003   200011 450500                    STP0    VALUE_NUMBER$+3,,AUTO
         0 000004   000001 236000 1                  LDQ     1
         0 000005   200010 756100                    STQ     VALUE_NUMBER$+2,,AUTO
         0 000006   200010 630500                    EPPR0   VALUE_NUMBER$+2,,AUTO
         0 000007   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000010   000000 701000 xent               TSX1    VDG$OALLOC
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:181  
         0 000011   000070 702000 0                  TSX2    OALLOC_FAILED

     1141     2610    1             ALTRET (OALLOC_FAILED);
     1142     2611    1           VALUE$NUMBER.V# = VALUE;

   2611  0 000012   200004 470500                    LDP0    @VALUE,,AUTO
         0 000013   200006 471500                    LDP1    VALUE_NUMBER$,,AUTO
         0 000014   000000 235100                    LDA     0,,PR0
         0 000015   100003 755100                    STA     3,,PR1

     1143     2612
     1144     2613    1           SAVE_ACCESSOR_PRIV = VD_ACCESSOR_PRIV;

   2613  0 000016   000000 236000 xsym               LDQ     VD_ACCESSOR_PRIV
         0 000017   777000 376003                    ANQ     -512,DU
         0 000020   200005 756100                    STQ     SAVE_ACCESSOR_PRIV,,AUTO

     1145     2614    1           VD_ACCESSOR_PRIV = %NAC_ALL_BITS;

   2614  0 000021   777000 236003                    LDQ     -512,DU
         0 000022   000000 756000 xsym               STQ     VD_ACCESSOR_PRIV

     1146     2615    1           CALL VDA$LWRITE (EQUALS$STREAM, LOCATION, , VALUE$NUMBER)

   2615  0 000023   200006 236100                    LDQ     VALUE_NUMBER$,,AUTO
         0 000024   000001 235000 xsym               LDA     B_VECTNIL+1
         0 000025   200012 757100                    STAQ    VALUE_NUMBER$+4,,AUTO
         0 000026   200003 236100                    LDQ     @LOCATION,,AUTO
         0 000027   000001 235000 xsym               LDA     VD_6E+1
         0 000030   200010 757100                    STAQ    VALUE_NUMBER$+2,,AUTO
         0 000031   200010 630500                    EPPR0   VALUE_NUMBER$+2,,AUTO
         0 000032   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000033   000000 701000 xent               TSX1    VDA$LWRITE
         0 000034   000036 702000 0                  TSX2    s:2617
         0 000035   000046 710000 0                  TRA     s:2622

     1147     2616    2           WHENALTRETURN DO;
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:182  

     1148     2617    2              VD_ACCESSOR_PRIV = SAVE_ACCESSOR_PRIV;

   2617  0 000036   200005 236100                    LDQ     SAVE_ACCESSOR_PRIV,,AUTO
         0 000037   777000 376003                    ANQ     -512,DU
         0 000040   000000 756000 xsym               STQ     VD_ACCESSOR_PRIV

     1149     2618    2              CALL VDG$OFREE (VALUE$NUMBER);

   2618  0 000041   200006 630500                    EPPR0   VALUE_NUMBER$,,AUTO
         0 000042   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000043   000000 701000 xent               TSX1    VDG$OFREE
         0 000044   000000 011000                    NOP     0

     1150     2619    2              ALTRETURN;

   2619  0 000045   000000 702200 xent               TSX2  ! X66_AALT

     1151     2620    2              END;
     1152     2621
     1153     2622    1           CALL VDA$PFLUSH (EQUALS$STREAM.PORT$->VD$PORT, %TO_PRESENTER)

   2622  0 000046   000001 470400 xsym               LDP0    VD_6E+1
         0 000047   000001 471500                    LDP1    1,,PR0
         0 000050   000002 236000 1                  LDQ     2
         0 000051   200011 756100                    STQ     VALUE_NUMBER$+3,,AUTO
         0 000052   200010 451500                    STP1    VALUE_NUMBER$+2,,AUTO
         0 000053   200010 630500                    EPPR0   VALUE_NUMBER$+2,,AUTO
         0 000054   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000055   000000 701000 xent               TSX1    VDA$PFLUSH
         0 000056   000060 702000 0                  TSX2    s:2624
         0 000057   000064 710000 0                  TRA     s:2628

     1154     2623    2           WHENALTRETURN DO;

     1155     2624    2              VD_ACCESSOR_PRIV = SAVE_ACCESSOR_PRIV;

PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:183  
   2624  0 000060   200005 236100                    LDQ     SAVE_ACCESSOR_PRIV,,AUTO
         0 000061   777000 376003                    ANQ     -512,DU
         0 000062   000000 756000 xsym               STQ     VD_ACCESSOR_PRIV

     1156     2625    2              ALTRETURN;

   2625  0 000063   000000 702200 xent               TSX2  ! X66_AALT

     1157     2626    2              END;
     1158     2627
     1159     2628    1           VD_ACCESSOR_PRIV = SAVE_ACCESSOR_PRIV;

   2628  0 000064   200005 236100                    LDQ     SAVE_ACCESSOR_PRIV,,AUTO
         0 000065   777000 376003                    ANQ     -512,DU
         0 000066   000000 756000 xsym               STQ     VD_ACCESSOR_PRIV

     1160     2629    1           RETURN;

   2629  0 000067   000000 702200 xent               TSX2  ! X66_ARET

   2628  0 000070                       OALLOC_FAIL* null
     1161     2630
     1162     2631
     1163     2632    1   OALLOC_FAILED: ;
     1164     2633    1           ALTRETURN;

   2633  0 000070   000000 702200 xent               TSX2  ! X66_AALT
     1165     2634
     1166     2635    1   END VDI$CSET_COUNT;

PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:184  
--  Include file information  --

   VD_MACROS_M.:VDA5TOU  is referenced.
   B$JIT_C.:E04TOU  was found in the system file and is never referenced.
   CP_6_C.:E04TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure VDI$CSET_COUNT.
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:185  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LOCATION                  4-0-0/w PTR         r     1 @VALUE
    *0-0-0/w STRC(324)   r     1 LOCATION                   5-0-0/w STRC(9)     r     1 SAVE_ACCESSOR_PRIV
    *0-0-0/w SBIN        r     1 VALUE                      6-0-0/w PTR         r     1 VALUE_NUMBER$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(22644) r     1 VD_6E                      0-0-0/w STRC(9)     r     1 VD_ACCESSOR_PRIV

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(864)   r     1 EQUALS$STREAM              0-0-0/w STRC(144)   r     1 VALUE$NUMBER
     0-0-0/w STRC(1944)  r     1 VD$PORT


   Procedure VDI$CSET_COUNT requires 57 words for executable code.
   Procedure VDI$CSET_COUNT requires 12 words of local(AUTO) storage.

    No errors detected in file VDI$COMMANDS_EDITING.:VDA5TSI    .
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:186  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=VDI$CSET_COUNT File=VDI$COMMANDS_EDITING.:VDA5TSI             FRI 07/04/97 11:31 Page:187  
          MINI XREF LISTING

EQUALS$STREAM
      2410**DCL      2615<>CALL
EQUALS$STREAM.PORT$
      2436**DCL      2622>>CALL
LOCATION
      2256**DCL        29--PROC     2615<>CALL
OALLOC_FAILED
      2628**LABEL    2609--CALLALT
SAVE_ACCESSOR_PRIV
      2339**DCL      2613<<ASSIGN   2617>>ASSIGN   2624>>ASSIGN   2628>>ASSIGN
VALUE
      2276**DCL        29--PROC     2611>>ASSIGN
VALUE$NUMBER
      2365**DCL      2615<>CALL     2618<>CALL
VALUE$NUMBER.V#
      2399**DCL      2611<<ASSIGN
VALUE_NUMBER$
      2354**DCL      2365--IMP-PTR  2609<>CALL     2611>>ASSIGN   2615>>CALL     2618>>CALL
VD$PORT
      2516**DCL      2622<>CALL
VDA$LWRITE
      2281**DCL-ENT  2615--CALL
VDA$PFLUSH
      2282**DCL-ENT  2622--CALL
VDG$OALLOC
      2279**DCL-ENT  2609--CALL
VDG$OFREE
      2280**DCL-ENT  2618--CALL
VD_6E.EQUALS$
      2298**DCL      2410--IMP-PTR  2615>>CALL     2622>>CALL
VD_ACCESSOR_PRIV
      2321**DCL      2613>>ASSIGN   2614<<ASSIGN   2617<<ASSIGN   2624<<ASSIGN   2628<<ASSIGN
