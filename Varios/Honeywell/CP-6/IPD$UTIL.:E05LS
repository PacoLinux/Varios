VERSION E05

PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:1    
        1        1        /*M* IPD$UTIL - Utility routines for SPIDER.                       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        /**/
        9        9        /*F*    NAME:   IPD$MON_VALUE                                      */
       10       10        /*F*    PURPOSE: To retrieve the contents of a given monitor location.*/
       11       11        IPD$MON_VALUE: PROC(LOC,VAL);
       12       12    1   DCL LOC UBIN;
       13       13    1   DCL VAL SBIN;
       14       14    1   DCL LOC$ PTR;
       15       15    1   DCL 1 P$LOC REDEF LOC$,
       16       16    1         2 * UBIN(24) UNAL,
       17       17    1         2 SEGID BIT(12) UNAL;
       18       18    1   DCL B$VAL SBIN BASED ALIGNED;
       19       19    1   DCL B$HVAL UBIN HALF BASED HALIGNED;
       20       20        /**/
       21       21        %INCLUDE B_SEGIDS_C;
       22      560        /**/
       23      561    1           LOC$ = ADDR(LOC);
       24      562    1           P$LOC.SEGID = %SPCL1SID;
       25      563    1           VAL = LOC$->B$VAL;
       26      564    1           RETURN;
       27      565        /**/
       28      566    1   IPD$MON_HVAL: ENTRY(LOC,VAL);
       29      567        /**/
       30      568    1           LOC$ = ADDR(LOC);
       31      569    1           P$LOC.SEGID = %SPCL1SID;
       32      570    1           VAL = LOC$->B$HVAL;
       33      571    1           RETURN;
       34      572        /**/
       35      573        /*F*    NAME:   IPD$MON_STORE                                      */
       36      574        /*F*    PUPROSE: To store a value in a given monitor location.     */
       37      575    1   IPD$MON_STORE: ENTRY(LOC,VAL);
PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:2    
       38      576        /**/
       39      577    1           LOC$ = ADDR(LOC);
       40      578    1           P$LOC.SEGID = %SPCL1SID;
       41      579    1           LOC$->B$VAL = VAL;
       42      580    1           RETURN;
       43      581        /**/
       44      582    1   IPD$MON_HSTORE: ENTRY(LOC,VAL);
       45      583        /**/
       46      584    1           LOC$ = ADDR(LOC);
       47      585    1           P$LOC.SEGID = %SPCL1SID;
       48      586    1           LOC$->B$HVAL = VAL;
       49      587    1           RETURN;
       50      588        /**/
       51      589    1   END IPD$MON_VALUE;
       52      590        /**/
       53      591        %EOD;

PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:3    
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$MON_VALUE.

   Procedure IPD$MON_VALUE requires 46 words for executable code.
   Procedure IPD$MON_VALUE requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:4    

 Object Unit name= IPD$MON_VALUE                              File name= IPD$UTIL.:E05TOU
 UTS= JUL 29 '97 22:40:56.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    46     56  IPD$MON_VALUE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  IPD$MON_VALUE
     0     13                  yes      Std        2  IPD$MON_HVAL
     0     27                  yes      Std        2  IPD$MON_STORE
     0     42                  yes      Std        2  IPD$MON_HSTORE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:5    


        1        1        /*M* IPD$UTIL - Utility routines for SPIDER.                       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        /**/
        9        9        /*F*    NAME:   IPD$MON_VALUE                                      */
       10       10        /*F*    PURPOSE: To retrieve the contents of a given monitor location.*/
       11       11        IPD$MON_VALUE: PROC(LOC,VAL);

     11  0 000000   000000 700200 xent  IPD$MON_VAL* TSX0  ! X66_AUTO_2
         0 000001   000006 000002                    ZERO    6,2

       12       12    1   DCL LOC UBIN;
       13       13    1   DCL VAL SBIN;
       14       14    1   DCL LOC$ PTR;
       15       15    1   DCL 1 P$LOC REDEF LOC$,
       16       16    1         2 * UBIN(24) UNAL,
       17       17    1         2 SEGID BIT(12) UNAL;
       18       18    1   DCL B$VAL SBIN BASED ALIGNED;
       19       19    1   DCL B$HVAL UBIN HALF BASED HALIGNED;
       20       20        /**/
       21       21        %INCLUDE B_SEGIDS_C;
       22      560        /**/
       23      561    1           LOC$ = ADDR(LOC);

    561  0 000002   200003 236100                    LDQ     @LOC,,AUTO
         0 000003   200005 756100                    STQ     LOC$,,AUTO

       24      562    1           P$LOC.SEGID = %SPCL1SID;

    562  0 000004   006021 236007                    LDQ     3089,DL
         0 000005   200005 752103                    STCQ    LOC$,'03'O,AUTO

PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:6    
       25      563    1           VAL = LOC$->B$VAL;

    563  0 000006   200005 470500                    LDP0    LOC$,,AUTO
         0 000007   200004 471500                    LDP1    @VAL,,AUTO
         0 000010   000000 235100                    LDA     0,,PR0
         0 000011   100000 755100                    STA     0,,PR1

       26      564    1           RETURN;

    564  0 000012   000000 702200 xent               TSX2  ! X66_ARET

       27      565        /**/
       28      566    1   IPD$MON_HVAL: ENTRY(LOC,VAL);

    566  0 000013   000000 700200 xent  IPD$MON_HVAL TSX0  ! X66_AUTO_2
         0 000014   000006 000002                    ZERO    6,2

       29      567        /**/
       30      568    1           LOC$ = ADDR(LOC);

    568  0 000015   200003 236100                    LDQ     @LOC,,AUTO
         0 000016   200005 756100                    STQ     LOC$,,AUTO

       31      569    1           P$LOC.SEGID = %SPCL1SID;

    569  0 000017   006021 236007                    LDQ     3089,DL
         0 000020   200005 752103                    STCQ    LOC$,'03'O,AUTO

       32      570    1           VAL = LOC$->B$HVAL;

    570  0 000021   200005 470500                    LDP0    LOC$,,AUTO
         0 000022   200004 471500                    LDP1    @VAL,,AUTO
         0 000023   000100 101500                    MRL     fill='000'O
         0 000024   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         0 000025   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4

       33      571    1           RETURN;
PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:7    

    571  0 000026   000000 702200 xent               TSX2  ! X66_ARET

       34      572        /**/
       35      573        /*F*    NAME:   IPD$MON_STORE                                      */
       36      574        /*F*    PUPROSE: To store a value in a given monitor location.     */
       37      575    1   IPD$MON_STORE: ENTRY(LOC,VAL);

    575  0 000027   000000 700200 xent  IPD$MON_STO* TSX0  ! X66_AUTO_2
         0 000030   000006 000002                    ZERO    6,2

       38      576        /**/
       39      577    1           LOC$ = ADDR(LOC);

    577  0 000031   200003 236100                    LDQ     @LOC,,AUTO
         0 000032   200005 756100                    STQ     LOC$,,AUTO

       40      578    1           P$LOC.SEGID = %SPCL1SID;

    578  0 000033   006021 236007                    LDQ     3089,DL
         0 000034   200005 752103                    STCQ    LOC$,'03'O,AUTO

       41      579    1           LOC$->B$VAL = VAL;

    579  0 000035   200004 470500                    LDP0    @VAL,,AUTO
         0 000036   200005 471500                    LDP1    LOC$,,AUTO
         0 000037   000000 235100                    LDA     0,,PR0
         0 000040   100000 755100                    STA     0,,PR1

       42      580    1           RETURN;

    580  0 000041   000000 702200 xent               TSX2  ! X66_ARET

       43      581        /**/
       44      582    1   IPD$MON_HSTORE: ENTRY(LOC,VAL);

    582  0 000042   000000 700200 xent  IPD$MON_HST* TSX0  ! X66_AUTO_2
PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:8    
         0 000043   000006 000002                    ZERO    6,2

       45      583        /**/
       46      584    1           LOC$ = ADDR(LOC);

    584  0 000044   200003 236100                    LDQ     @LOC,,AUTO
         0 000045   200005 756100                    STQ     LOC$,,AUTO

       47      585    1           P$LOC.SEGID = %SPCL1SID;

    585  0 000046   006021 236007                    LDQ     3089,DL
         0 000047   200005 752103                    STCQ    LOC$,'03'O,AUTO

       48      586    1           LOC$->B$HVAL = VAL;

    586  0 000050   200004 470500                    LDP0    @VAL,,AUTO
         0 000051   200005 471500                    LDP1    LOC$,,AUTO
         0 000052   000100 101500                    MRL     fill='000'O
         0 000053   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         0 000054   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2

       49      587    1           RETURN;

    587  0 000055   000000 702200 xent               TSX2  ! X66_ARET
       50      588        /**/
       51      589    1   END IPD$MON_VALUE;
       52      590        /**/
       53      591        %EOD;

PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:9    
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$MON_VALUE.
PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:10   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @LOC                       4-0-0/w PTR         r     1 @VAL
    *0-0-0/w UBIN        r     1 LOC                        5-0-0/w PTR         r     1 LOC$
     5-0-0/w STRC        r     1 P$LOC                     *0-0-0/w SBIN        r     1 VAL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h UBIN(18)    r     1 B$HVAL                     0-0-0/w SBIN        r     1 B$VAL


   Procedure IPD$MON_VALUE requires 46 words for executable code.
   Procedure IPD$MON_VALUE requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=IPD$MON_VALUE File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:40 Page:12   
          MINI XREF LISTING

B$HVAL
        19**DCL       570>>ASSIGN    586<<ASSIGN
B$VAL
        18**DCL       563>>ASSIGN    579<<ASSIGN
LOC
        12**DCL        11--PROC      561--ASSIGN    566--ENTRY     568--ASSIGN    575--ENTRY     577--ASSIGN
       582--ENTRY     584--ASSIGN
LOC$
        14**DCL        15--REDEF     561<<ASSIGN    563>>ASSIGN    568<<ASSIGN    570>>ASSIGN    577<<ASSIGN
       579>>ASSIGN    584<<ASSIGN    586>>ASSIGN
P$LOC.SEGID
        17**DCL       562<<ASSIGN    569<<ASSIGN    578<<ASSIGN    585<<ASSIGN
VAL
        13**DCL        11--PROC      563<<ASSIGN    566--ENTRY     570<<ASSIGN    575--ENTRY     579>>ASSIGN
       582--ENTRY     586>>ASSIGN

PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:13   
       54        1        /*T***********************************************************/
       55        2        /*T*                                                         */
       56        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       57        4        /*T*                                                         */
       58        5        /*T***********************************************************/
       59        6        %EJECT;
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:14   
       60        7        IPD$REAL_TO_PHYS: PROC(REAL,PHYS);
       61        8    1   DCL REAL UBIN;
       62        9    1   DCL PHYS UBIN;
       63       10
       64       11    1   DCL B$HWORD UBIN HALF BASED HALIGNED;
       65       12    1   DCL DESCR DSCR;
       66       13    1   DCL P$ PTR;
       67       14
       68       15        %INCLUDE CP_6;
       69       96        %INCLUDE B_SEGIDS_C;
       70      635        %INCLUDE B$JIT;
       71      925        %INCLUDE M_INFO_C;
       72     1065
       73     1066    1   DCL B$IS$ PTR SYMREF READONLY;
       74     1067    1   DCL B$SPCL8$ PTR SYMREF READONLY;
       75     1068    1   DCL B$JIT$ PTR SYMREF READONLY;
       76     1069
       77     1070        %FPT_SAD(FPTN=FPT_SAD_WSQ0PT,MONSID=%WSQ0PTSID,USERSID=%SPCL8SID);
       78     1085        %FPT_SAD(FPTN=FPT_SAD_IPHYMAP,MONSID=%IPHYMAPSID,USERSID=%SPCL8SID);
       79     1100        %FPT_CVM(PHYSICAL=NO);
       80     1116
       81     1117    1           CALL M$SAD(FPT_SAD_WSQ0PT);
       82     1118    1           DESCR=PTRDSCR(B$SPCL8$);
       83     1119    1           FPT_CVM.V.PPNO# = DBASE(DESCR)/4096+REAL/1024;
       84     1120    1           FPT_CVM.V.VPNO# = B$JIT.DDUL - %ISEGLO;
       85     1121    1           CALL M$CVM(FPT_CVM);
       86     1122    1           P$=PINCRW(B$IS$,(B$JIT.DDUL-%ISEGLO)*1024+MOD(REAL,1024));
       87     1123    1           PHYS=P$->B$HWORD;
       88     1124    1           FPT_CVM.V.PPNO# = -1;
       89     1125    1           CALL M$CVM(FPT_CVM);
       90     1126    1           RETURN;
       91     1127
       92     1128    1   IPD$PHYS_TO_REAL: ENTRY(REAL,PHYS);
       93     1129
       94     1130    1           CALL M$SAD(FPT_SAD_IPHYMAP);
       95     1131    1           DESCR=PTRDSCR(B$SPCL8$);
       96     1132    1           FPT_CVM.V.PPNO# = DBASE(DESCR)/4096+PHYS/2048;
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:15   
       97     1133    1           FPT_CVM.V.VPNO# = B$JIT.DDUL - %ISEGLO;
       98     1134    1           CALL M$CVM(FPT_CVM);
       99     1135    1           P$=PINCRC(B$IS$,(B$JIT.DDUL-%ISEGLO)*4096+MOD(PHYS,2048)*2);
      100     1136    1           REAL=P$->B$HWORD;
      101     1137    1           FPT_CVM.V.PPNO# = -1;
      102     1138    1           CALL M$CVM(FPT_CVM);
      103     1139    1   END IPD$REAL_TO_PHYS;
      104     1140        %EOD;

PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:16   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IPD$REAL_TO_PHYS.

   Procedure IPD$REAL_TO_PHYS requires 92 words for executable code.
   Procedure IPD$REAL_TO_PHYS requires 12 words of local(AUTO) storage.

PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:17   

 Object Unit name= IPD$REAL_TO_PHYS                           File name= IPD$UTIL.:E05TOU
 UTS= JUL 29 '97 22:40:59.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    14     16  IPD$REAL_TO_PHYS
    2   Proc  even  none    92    134  IPD$REAL_TO_PHYS
    3  RoData even  none     2      2  IPD$REAL_TO_PHYS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        2  IPD$REAL_TO_PHYS
     2     56                  yes      Std        2  IPD$PHYS_TO_REAL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$IS$                            r    B$SPCL8$
r    B$JIT$
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:18   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:19   


       54        1        /*T***********************************************************/
       55        2        /*T*                                                         */
       56        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       57        4        /*T*                                                         */
       58        5        /*T***********************************************************/
       59        6        %EJECT;
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:20   
       60        7        IPD$REAL_TO_PHYS: PROC(REAL,PHYS);

      7  2 000000   000000 700200 xent  IPD$REAL_TO* TSX0  ! X66_AUTO_2
         2 000001   000014 000002                    ZERO    12,2

       61        8    1   DCL REAL UBIN;
       62        9    1   DCL PHYS UBIN;
       63       10
       64       11    1   DCL B$HWORD UBIN HALF BASED HALIGNED;
       65       12    1   DCL DESCR DSCR;
       66       13    1   DCL P$ PTR;
       67       14
       68       15        %INCLUDE CP_6;
       69       96        %INCLUDE B_SEGIDS_C;
       70      635        %INCLUDE B$JIT;
       71      925        %INCLUDE M_INFO_C;
       72     1065
       73     1066    1   DCL B$IS$ PTR SYMREF READONLY;
       74     1067    1   DCL B$SPCL8$ PTR SYMREF READONLY;
       75     1068    1   DCL B$JIT$ PTR SYMREF READONLY;
       76     1069
       77     1070        %FPT_SAD(FPTN=FPT_SAD_WSQ0PT,MONSID=%WSQ0PTSID,USERSID=%SPCL8SID);
       78     1085        %FPT_SAD(FPTN=FPT_SAD_IPHYMAP,MONSID=%IPHYMAPSID,USERSID=%SPCL8SID);
       79     1100        %FPT_CVM(PHYSICAL=NO);
       80     1116
       81     1117    1           CALL M$SAD(FPT_SAD_WSQ0PT);

   1117  2 000002   000000 630400 1                  EPPR0   FPT_SAD_WSQ0PT
         2 000003   030015 713400                    CLIMB   12301
         2 000004   400000 401760                    pmme    nvectors=1

       82     1118    1           DESCR=PTRDSCR(B$SPCL8$);

   1118  2 000005   000000 470400 xsym               LDP0    B$SPCL8$
         2 000006   200006 050500                    STD0    DESCR,,AUTO

       83     1119    1           FPT_CVM.V.PPNO# = DBASE(DESCR)/4096+REAL/1024;
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:21   

   1119  2 000007   200007 236100                    LDQ     DESCR+1,,AUTO
         2 000010   000014 772000                    QRL     12
         2 000011   200003 470500                    LDP0    @REAL,,AUTO
         2 000012   200012 756100                    STQ     P$+2,,AUTO
         2 000013   000000 236100                    LDQ     0,,PR0
         2 000014   000012 772000                    QRL     10
         2 000015   200012 036100                    ADLQ    P$+2,,AUTO
         2 000016   000013 756000 1                  STQ     FPT_CVM+3

       84     1120    1           FPT_CVM.V.VPNO# = B$JIT.DDUL - %ISEGLO;

   1120  2 000017   000000 471400 xsym               LDP1    B$JIT$
         2 000020   100200 720100                    LXL0    128,,PR1
         2 000021   777700 621010                    EAX1    -64,X0
         2 000022   000014 441000 1                  SXL1    FPT_CVM+4

       85     1121    1           CALL M$CVM(FPT_CVM);

   1121  2 000023   000010 630400 1                  EPPR0   FPT_CVM
         2 000024   030011 713400                    CLIMB   12297
         2 000025   400000 401760                    pmme    nvectors=1

       86     1122    1           P$=PINCRW(B$IS$,(B$JIT.DDUL-%ISEGLO)*1024+MOD(REAL,1024));

   1122  2 000026   200003 470500                    LDP0    @REAL,,AUTO
         2 000027   000000 236100                    LDQ     0,,PR0
         2 000030   001777 376007                    ANQ     1023,DL
         2 000031   200012 756100                    STQ     P$+2,,AUTO
         2 000032   000000 471400 xsym               LDP1    B$JIT$
         2 000033   100200 236100                    LDQ     128,,PR1
         2 000034   000012 736000                    QLS     10
         2 000035   000000 376000 3                  ANQ     0
         2 000036   200012 036100                    ADLQ    P$+2,,AUTO
         2 000037   000022 736000                    QLS     18
         2 000040   200000 136003                    SBLQ    65536,DU
         2 000041   000000 036000 xsym               ADLQ    B$IS$
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:22   
         2 000042   200010 756100                    STQ     P$,,AUTO

       87     1123    1           PHYS=P$->B$HWORD;

   1123  2 000043   200010 473500                    LDP3    P$,,AUTO
         2 000044   200004 474500                    LDP4    @PHYS,,AUTO
         2 000045   000100 101500                    MRL     fill='000'O
         2 000046   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         2 000047   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4

       88     1124    1           FPT_CVM.V.PPNO# = -1;

   1124  2 000050   000001 335007                    LCA     1,DL
         2 000051   000013 755000 1                  STA     FPT_CVM+3

       89     1125    1           CALL M$CVM(FPT_CVM);

   1125  2 000052   000010 630400 1                  EPPR0   FPT_CVM
         2 000053   030011 713400                    CLIMB   12297
         2 000054   400000 401760                    pmme    nvectors=1

       90     1126    1           RETURN;

   1126  2 000055   000000 702200 xent               TSX2  ! X66_ARET

       91     1127
       92     1128    1   IPD$PHYS_TO_REAL: ENTRY(REAL,PHYS);

   1128  2 000056   000000 700200 xent  IPD$PHYS_TO* TSX0  ! X66_AUTO_2
         2 000057   000014 000002                    ZERO    12,2

       93     1129
       94     1130    1           CALL M$SAD(FPT_SAD_IPHYMAP);

   1130  2 000060   000004 630400 1                  EPPR0   FPT_SAD_IPHYMAP
         2 000061   030015 713400                    CLIMB   12301
         2 000062   400000 401760                    pmme    nvectors=1
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:23   

       95     1131    1           DESCR=PTRDSCR(B$SPCL8$);

   1131  2 000063   000000 470400 xsym               LDP0    B$SPCL8$
         2 000064   200006 050500                    STD0    DESCR,,AUTO

       96     1132    1           FPT_CVM.V.PPNO# = DBASE(DESCR)/4096+PHYS/2048;

   1132  2 000065   200007 236100                    LDQ     DESCR+1,,AUTO
         2 000066   000014 772000                    QRL     12
         2 000067   200004 470500                    LDP0    @PHYS,,AUTO
         2 000070   200012 756100                    STQ     P$+2,,AUTO
         2 000071   000000 236100                    LDQ     0,,PR0
         2 000072   000013 772000                    QRL     11
         2 000073   200012 036100                    ADLQ    P$+2,,AUTO
         2 000074   000013 756000 1                  STQ     FPT_CVM+3

       97     1133    1           FPT_CVM.V.VPNO# = B$JIT.DDUL - %ISEGLO;

   1133  2 000075   000000 471400 xsym               LDP1    B$JIT$
         2 000076   100200 720100                    LXL0    128,,PR1
         2 000077   777700 621010                    EAX1    -64,X0
         2 000100   000014 441000 1                  SXL1    FPT_CVM+4

       98     1134    1           CALL M$CVM(FPT_CVM);

   1134  2 000101   000010 630400 1                  EPPR0   FPT_CVM
         2 000102   030011 713400                    CLIMB   12297
         2 000103   400000 401760                    pmme    nvectors=1

       99     1135    1           P$=PINCRC(B$IS$,(B$JIT.DDUL-%ISEGLO)*4096+MOD(PHYS,2048)*2);

   1135  2 000104   200004 470500                    LDP0    @PHYS,,AUTO
         2 000105   000000 236100                    LDQ     0,,PR0
         2 000106   003777 376007                    ANQ     2047,DL
         2 000107   200012 756100                    STQ     P$+2,,AUTO
         2 000110   000000 471400 xsym               LDP1    B$JIT$
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:24   
         2 000111   100200 236100                    LDQ     128,,PR1
         2 000112   000013 736000                    QLS     11
         2 000113   000001 376000 3                  ANQ     1
         2 000114   200012 036100                    ADLQ    P$+2,,AUTO
         2 000115   000021 736000                    QLS     17
         2 000116   200000 136003                    SBLQ    65536,DU
         2 000117   000000 036000 xsym               ADLQ    B$IS$
         2 000120   200010 756100                    STQ     P$,,AUTO

      100     1136    1           REAL=P$->B$HWORD;

   1136  2 000121   200010 473500                    LDP3    P$,,AUTO
         2 000122   200003 474500                    LDP4    @REAL,,AUTO
         2 000123   000100 101500                    MRL     fill='000'O
         2 000124   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         2 000125   400000 000004                    ADSC9   0,,PR4                   cn=0,n=4

      101     1137    1           FPT_CVM.V.PPNO# = -1;

   1137  2 000126   000001 335007                    LCA     1,DL
         2 000127   000013 755000 1                  STA     FPT_CVM+3

      102     1138    1           CALL M$CVM(FPT_CVM);

   1138  2 000130   000010 630400 1                  EPPR0   FPT_CVM
         2 000131   030011 713400                    CLIMB   12297
         2 000132   400000 401760                    pmme    nvectors=1

      103     1139    1   END IPD$REAL_TO_PHYS;

   1139  2 000133   000000 702200 xent               TSX2  ! X66_ARET
      104     1140        %EOD;

PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:25   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IPD$REAL_TO_PHYS.
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:26   

 **** Variables and constants ****

  ****  Section 001  Data  IPD$REAL_TO_PHYS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/d STRC(216)   r     1 FPT_CVM                    4-0-0/d STRC(144)   r     1 FPT_SAD_IPHYMAP
     0-0-0/d STRC(144)   r     1 FPT_SAD_WSQ0PT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PHYS                      3-0-0/w PTR         r     1 @REAL
     6-0-0/d DSCR        r     1 DESCR                     10-0-0/w PTR         r     1 P$
    *0-0-0/w UBIN        r     1 PHYS                      *0-0-0/w UBIN        r     1 REAL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IS$                      0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$SPCL8$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h UBIN(18)    r     1 B$HWORD                    0-0-0/d STRC(8856)  r     1 B$JIT


   Procedure IPD$REAL_TO_PHYS requires 92 words for executable code.
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:27   
   Procedure IPD$REAL_TO_PHYS requires 12 words of local(AUTO) storage.
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:28   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:29   
          MINI XREF LISTING

B$HWORD
        11**DCL      1123>>ASSIGN   1136>>ASSIGN
B$IS$
      1066**DCL      1122>>ASSIGN   1135>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       743**DCL       743--REDEF
B$JIT.DDUL
       807**DCL      1120>>ASSIGN   1122>>ASSIGN   1133>>ASSIGN   1135>>ASSIGN
B$JIT.ERR.MID
       650**DCL       650--REDEF
B$JIT.JRESPEAK
       811**DCL       812--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       920**DCL       920--REDEF     921--REDEF
B$JIT.PNR
       824**DCL       824--REDEF
B$JIT.TSLINE
       918**DCL       919--REDEF
B$JIT$
      1068**DCL       644--IMP-PTR  1120>>ASSIGN   1122>>ASSIGN   1133>>ASSIGN   1135>>ASSIGN
B$SPCL8$
      1067**DCL      1118>>ASSIGN   1131>>ASSIGN
DESCR
        12**DCL      1118<<ASSIGN   1119>>ASSIGN   1131<<ASSIGN   1132>>ASSIGN
FPT_CVM
      1111**DCL      1121<>CALL     1125<>CALL     1134<>CALL     1138<>CALL
FPT_CVM.V
      1111**DCL      1111--DCLINIT
FPT_CVM.V.PPNO#
      1112**DCL      1119<<ASSIGN   1124<<ASSIGN   1132<<ASSIGN   1137<<ASSIGN
FPT_CVM.V.VPNO#
      1113**DCL      1120<<ASSIGN   1133<<ASSIGN
PL6.E3A0      #002=IPD$REAL_TO_PHYS File=IPD$UTIL.:E05TSI                        TUE 07/29/97 22:40 Page:30   
FPT_SAD_IPHYMAP
      1096**DCL      1130<>CALL
FPT_SAD_IPHYMAP.V
      1096**DCL      1096--DCLINIT
FPT_SAD_WSQ0PT
      1081**DCL      1117<>CALL
FPT_SAD_WSQ0PT.V
      1081**DCL      1081--DCLINIT
M$CVM
        62**DCL-ENT  1121--CALL     1125--CALL     1134--CALL     1138--CALL
M$SAD
        63**DCL-ENT  1117--CALL     1130--CALL
P$
        13**DCL      1122<<ASSIGN   1123>>ASSIGN   1135<<ASSIGN   1136>>ASSIGN
PHYS
         9**DCL         7--PROC     1123<<ASSIGN   1128--ENTRY    1132>>ASSIGN   1135>>ASSIGN
REAL
         8**DCL         7--PROC     1119>>ASSIGN   1122>>ASSIGN   1128--ENTRY    1136<<ASSIGN

PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:31   
      105        1        /*T***********************************************************/
      106        2        /*T*                                                         */
      107        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      108        4        /*T*                                                         */
      109        5        /*T***********************************************************/
      110        6        %EJECT;
PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:32   
      111        7        /**/
      112        8        /*F*    NAME:   IPD$SETSEG                                         */
      113        9        /*F*    PURPOSE: To change the SEGID part of a pointer.            */
      114       10        IPD$SETSEG:PROC(PTR$,SEGID);
      115       11    1   DCL 1 PTR$ ALIGNED,
      116       12    1         2 * UBIN(24) UNAL,
      117       13    1         2 SEGID BIT(12) UNAL;
      118       14    1   DCL SEGID BIT(12) ALIGNED;
      119       15    1           PTR$.SEGID = SEGID;
      120       16    1           RETURN;
      121       17    1   END IPD$SETSEG;
      122       18        /**/
      123       19        %EOD;

PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:33   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$SETSEG.

   Procedure IPD$SETSEG requires 8 words for executable code.
   Procedure IPD$SETSEG requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:34   

 Object Unit name= IPD$SETSEG                                 File name= IPD$UTIL.:E05TOU
 UTS= JUL 29 '97 22:41:05.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none     8     10  IPD$SETSEG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  IPD$SETSEG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:35   


      105        1        /*T***********************************************************/
      106        2        /*T*                                                         */
      107        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      108        4        /*T*                                                         */
      109        5        /*T***********************************************************/
      110        6        %EJECT;
PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:36   
      111        7        /**/
      112        8        /*F*    NAME:   IPD$SETSEG                                         */
      113        9        /*F*    PURPOSE: To change the SEGID part of a pointer.            */
      114       10        IPD$SETSEG:PROC(PTR$,SEGID);

     10  0 000000   000000 700200 xent  IPD$SETSEG   TSX0  ! X66_AUTO_2
         0 000001   000006 000002                    ZERO    6,2

      115       11    1   DCL 1 PTR$ ALIGNED,
      116       12    1         2 * UBIN(24) UNAL,
      117       13    1         2 SEGID BIT(12) UNAL;
      118       14    1   DCL SEGID BIT(12) ALIGNED;
      119       15    1           PTR$.SEGID = SEGID;

     15  0 000002   200003 470500                    LDP0    @PTR$,,AUTO
         0 000003   200004 471500                    LDP1    @SEGID,,AUTO
         0 000004   100000 236100                    LDQ     0,,PR1
         0 000005   000030 772000                    QRL     24
         0 000006   000000 752103                    STCQ    0,'03'O,PR0

      120       16    1           RETURN;

     16  0 000007   000000 702200 xent               TSX2  ! X66_ARET
      121       17    1   END IPD$SETSEG;
      122       18        /**/
      123       19        %EOD;

PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:37   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$SETSEG.
PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:38   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PTR$                      4-0-0/w PTR         r     1 @SEGID
    *0-0-0/w STRC        r     1 PTR$                      *0-0-0/w BIT (12)    r     1 SEGID


   Procedure IPD$SETSEG requires 8 words for executable code.
   Procedure IPD$SETSEG requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:39   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=IPD$SETSEG File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:40   
          MINI XREF LISTING

PTR$
        11**DCL        10--PROC
PTR$.SEGID
        13**DCL        15<<ASSIGN
SEGID
        14**DCL        10--PROC       15>>ASSIGN

PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:41   
      124        1        /*T***********************************************************/
      125        2        /*T*                                                         */
      126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        4        /*T*                                                         */
      128        5        /*T***********************************************************/
      129        6        %EJECT;
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:42   
      130        7        /**/
      131        8        /*F*  NAME: IPD$BINTXT
      132        9              PURPOSE: CONVERTS UBIN(36) TO DECIMAL OR OCTAL  DIGIT
      133       10                  STRING.  OCTAL STRING IS PRECEDED BY A PERIOD ('.').
      134       11                  LEADING ZEROS ARE SUPPRESSED. */
      135       12        /*D*  NAME: IPD$BINTXT
      136       13              CALL: IPD$BINTXT(STR$,BIN,OFLAG,MAXSIZE)
      137       14              INPUT: STR$ - POINTER TO OUTPUT BUFFER FOR DIGIT STRING
      138       15                     BIN - UBIN(36) VALUE TO BE CONVERTED
      139       16                     OFLAG - BIT(1) SET TO INDICATE OCTAL CONVERSION DESIRED.
      140       17                     MAXSIZE - MAXIMUM # OF CHARACTERS TO STORE THROUGH STR$.
      141       18              OUPUT: @ STR$ - CHARACTER STRING UP TO 11 CHARS (DEC) OR 13 CHARS (OCT)
      142       19                                                     */
      143       20        IPD$BINTXT: PROC(STR$,BIN,OFLAG,MAXSIZE) ALTRET;
      144       21                                                /* PARMS                              */
      145       22    1   DCL STR$ PTR;
      146       23    1   DCL BIN UBIN(36);
      147       24    1   DCL OFLAG BIT(1) ALIGNED;
      148       25    1   DCL MAXSIZE SBIN;
      149       26                                                /* LOCAL TEMPS                        */
      150       27    1   DCL STR CHAR(12);
      151       28    1   DCL ASTR(0:11) REDEF STR CHAR(1);
      152       29    1   DCL SIZE SBIN;
      153       30    1   DCL AFLG BIT(1);
      154       31    1   DCL I SBIN;
      155       32    1   DCL S$ PTR;
      156       33    1   DCL FFND BIT(1);
      157       34    1   DCL CHAR1 CHAR(1) BASED;
      158       35                                                /* EXT ROUTINES                       */
      159       36    1   DCL DDR$BINOCT ENTRY(2);
      160       37        /**/
      161       38    1           S$ = STR$;
      162       39    1           AFLG = '0'B;
      163       40    1           SIZE =0;
      164       41    1           IF OFLAG
      165       42    2             THEN DO;
      166       43    2                 CALL DDR$BINOCT(STR, BIN);
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:43   
      167       44    2                 SIZE = 1;
      168       45    2               END;
      169       46    1             ELSE CALL BINCHAR(STR, BIN);
      170       47    1           FFND = '0'B;
      171       48    2           DO I = 0 TO 10;
      172       49    2             IF ASTR(I) ~= '0' OR FFND
      173       50    3               THEN DO;
      174       51    3                   FFND = '1'B;
      175       52    3                   SIZE = SIZE + 1;
      176       53    3                 END;
      177       54    2           END;                            /* DO I = 0 TO 10                     */
      178       55    1           SIZE = SIZE + 1;
      179       56    1           IF SIZE > MAXSIZE THEN
      180       57    2               DO;
      181       58    2                 SIZE = MAXSIZE;
      182       59    2                 AFLG = '1'B;
      183       60    2               END;
      184       61    1           S$ = PINCRC(S$,MAXSIZE - SIZE);
      185       62    1           IF OFLAG THEN
      186       63    2               DO;
      187       64    2                 S$->CHAR1 = '.';
      188       65    2                 SIZE = SIZE - 1;
      189       66    2                 S$ = PINCRC(S$,1);
      190       67    2               END;
      191       68    2           DO I = 12-SIZE TO 11;
      192       69    2             S$->CHAR1 = ASTR(I);
      193       70    2             S$ = PINCRC(S$,1);
      194       71    2           END;
      195       72    1           IF AFLG
      196       73    1             THEN ALTRETURN;
      197       74    1             ELSE RETURN;
      198       75    1   END IPD$BINTXT;
      199       76        /**/
      200       77        %EOD;

PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:44   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$BINTXT.

   Procedure IPD$BINTXT requires 90 words for executable code.
   Procedure IPD$BINTXT requires 18 words of local(AUTO) storage.

PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:45   

 Object Unit name= IPD$BINTXT                                 File name= IPD$UTIL.:E05TOU
 UTS= JUL 29 '97 22:41:06.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    90    132  IPD$BINTXT
    1  RoData even  none     2      2  IPD$BINTXT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  IPD$BINTXT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 DDR$BINOCT
                       nStd      0 X66_AUTO_4
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:46   


      124        1        /*T***********************************************************/
      125        2        /*T*                                                         */
      126        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      127        4        /*T*                                                         */
      128        5        /*T***********************************************************/
      129        6        %EJECT;
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:47   
      130        7        /**/
      131        8        /*F*  NAME: IPD$BINTXT
      132        9              PURPOSE: CONVERTS UBIN(36) TO DECIMAL OR OCTAL  DIGIT
      133       10                  STRING.  OCTAL STRING IS PRECEDED BY A PERIOD ('.').
      134       11                  LEADING ZEROS ARE SUPPRESSED. */
      135       12        /*D*  NAME: IPD$BINTXT
      136       13              CALL: IPD$BINTXT(STR$,BIN,OFLAG,MAXSIZE)
      137       14              INPUT: STR$ - POINTER TO OUTPUT BUFFER FOR DIGIT STRING
      138       15                     BIN - UBIN(36) VALUE TO BE CONVERTED
      139       16                     OFLAG - BIT(1) SET TO INDICATE OCTAL CONVERSION DESIRED.
      140       17                     MAXSIZE - MAXIMUM # OF CHARACTERS TO STORE THROUGH STR$.
      141       18              OUPUT: @ STR$ - CHARACTER STRING UP TO 11 CHARS (DEC) OR 13 CHARS (OCT)
      142       19                                                     */
      143       20        IPD$BINTXT: PROC(STR$,BIN,OFLAG,MAXSIZE) ALTRET;

     20  0 000000   000000 700200 xent  IPD$BINTXT   TSX0  ! X66_AUTO_4
         0 000001   000022 000004                    ZERO    18,4

      144       21                                                /* PARMS                              */
      145       22    1   DCL STR$ PTR;
      146       23    1   DCL BIN UBIN(36);
      147       24    1   DCL OFLAG BIT(1) ALIGNED;
      148       25    1   DCL MAXSIZE SBIN;
      149       26                                                /* LOCAL TEMPS                        */
      150       27    1   DCL STR CHAR(12);
      151       28    1   DCL ASTR(0:11) REDEF STR CHAR(1);
      152       29    1   DCL SIZE SBIN;
      153       30    1   DCL AFLG BIT(1);
      154       31    1   DCL I SBIN;
      155       32    1   DCL S$ PTR;
      156       33    1   DCL FFND BIT(1);
      157       34    1   DCL CHAR1 CHAR(1) BASED;
      158       35                                                /* EXT ROUTINES                       */
      159       36    1   DCL DDR$BINOCT ENTRY(2);
      160       37        /**/
      161       38    1           S$ = STR$;

PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:48   
     38  0 000002   200003 470500                    LDP0    @STR$,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   200015 756100                    STQ     S$,,AUTO

      162       39    1           AFLG = '0'B;

     39  0 000005   200013 450100                    STZ     AFLG,,AUTO

      163       40    1           SIZE =0;

     40  0 000006   200012 450100                    STZ     SIZE,,AUTO

      164       41    1           IF OFLAG

     41  0 000007   200005 471500                    LDP1    @OFLAG,,AUTO
         0 000010   100000 234100                    SZN     0,,PR1
         0 000011   000025 605000 0                  TPL     s:46

      165       42    2             THEN DO;

      166       43    2                 CALL DDR$BINOCT(STR, BIN);

     43  0 000012   200004 236100                    LDQ     @BIN,,AUTO
         0 000013   200021 756100                    STQ     FFND+3,,AUTO
         0 000014   200007 633500                    EPPR3   STR,,AUTO
         0 000015   200020 453500                    STP3    FFND+2,,AUTO
         0 000016   200020 630500                    EPPR0   FFND+2,,AUTO
         0 000017   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000020   000000 701000 xent               TSX1    DDR$BINOCT
         0 000021   000000 011000                    NOP     0

      167       44    2                 SIZE = 1;

     44  0 000022   000001 235007                    LDA     1,DL
         0 000023   200012 755100                    STA     SIZE,,AUTO

      168       45    2               END;
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:49   

     45  0 000024   000034 710000 0                  TRA     s:47

      169       46    1             ELSE CALL BINCHAR(STR, BIN);

     46  0 000025   200004 473500                    LDP3    @BIN,,AUTO
         0 000026   300000 235100                    LDA     0,,PR3
         0 000027   000044 773000                    LRL     36
         0 000030   200020 757100                    STAQ    FFND+2,,AUTO
         0 000031   000100 301500                    BTD
         0 000032   200020 000010                    NDSC9   FFND+2,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         0 000033   200007 030014                    NDSC9   STR,,AUTO                cn=0,s=nosgn,sf=0,n=12

      170       47    1           FFND = '0'B;

     47  0 000034   200016 450100                    STZ     FFND,,AUTO

      171       48    2           DO I = 0 TO 10;

     48  0 000035   200014 450100                    STZ     I,,AUTO

      172       49    2             IF ASTR(I) ~= '0' OR FFND

     49  0 000036   200014 235100                    LDA     I,,AUTO
         0 000037   040000 106505                    CMPC    fill='040'O
         0 000040   200007 000001                    ADSC9   STR,A,AUTO               cn=0,n=1
         0 000041   000000 000001 1                  ADSC9   0                        cn=0,n=1
         0 000042   000045 601000 0                  TNZ     s:51
         0 000043   200016 234100                    SZN     FFND,,AUTO
         0 000044   000050 605000 0                  TPL     s:54

      173       50    3               THEN DO;

      174       51    3                   FFND = '1'B;

     51  0 000045   400000 236003                    LDQ     -131072,DU
         0 000046   200016 756100                    STQ     FFND,,AUTO
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:50   

      175       52    3                   SIZE = SIZE + 1;

     52  0 000047   200012 054100                    AOS     SIZE,,AUTO

      176       53    3                 END;

      177       54    2           END;                            /* DO I = 0 TO 10                     */

     54  0 000050   200014 054100                    AOS     I,,AUTO
         0 000051   200014 235100                    LDA     I,,AUTO
         0 000052   000012 115007                    CMPA    10,DL
         0 000053   000036 604400 0                  TMOZ    s:49

      178       55    1           SIZE = SIZE + 1;

     55  0 000054   200012 054100                    AOS     SIZE,,AUTO

      179       56    1           IF SIZE > MAXSIZE THEN

     56  0 000055   200006 470500                    LDP0    @MAXSIZE,,AUTO
         0 000056   200012 236100                    LDQ     SIZE,,AUTO
         0 000057   000000 116100                    CMPQ    0,,PR0
         0 000060   000065 604400 0                  TMOZ    s:61

      180       57    2               DO;

      181       58    2                 SIZE = MAXSIZE;

     58  0 000061   000000 235100                    LDA     0,,PR0
         0 000062   200012 755100                    STA     SIZE,,AUTO

      182       59    2                 AFLG = '1'B;

     59  0 000063   400000 236003                    LDQ     -131072,DU
         0 000064   200013 756100                    STQ     AFLG,,AUTO

PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:51   
      183       60    2               END;

      184       61    1           S$ = PINCRC(S$,MAXSIZE - SIZE);

     61  0 000065   000000 236100                    LDQ     0,,PR0
         0 000066   200012 136100                    SBLQ    SIZE,,AUTO
         0 000067   000020 736000                    QLS     16
         0 000070   200015 036100                    ADLQ    S$,,AUTO
         0 000071   200015 756100                    STQ     S$,,AUTO

      185       62    1           IF OFLAG THEN

     62  0 000072   200005 471500                    LDP1    @OFLAG,,AUTO
         0 000073   100000 234100                    SZN     0,,PR1
         0 000074   000106 605000 0                  TPL     s:68

      186       63    2               DO;

      187       64    2                 S$->CHAR1 = '.';

     64  0 000075   200015 473500                    LDP3    S$,,AUTO
         0 000076   040100 100400                    MLR     fill='040'O
         0 000077   000001 000001 1                  ADSC9   1                        cn=0,n=1
         0 000100   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      188       65    2                 SIZE = SIZE - 1;

     65  0 000101   000001 336007                    LCQ     1,DL
         0 000102   200012 056100                    ASQ     SIZE,,AUTO

      189       66    2                 S$ = PINCRC(S$,1);

     66  0 000103   200015 236100                    LDQ     S$,,AUTO
         0 000104   200000 036007                    ADLQ    65536,DL
         0 000105   200015 756100                    STQ     S$,,AUTO

      190       67    2               END;
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:52   

      191       68    2           DO I = 12-SIZE TO 11;

     68  0 000106   000014 235007                    LDA     12,DL
         0 000107   200012 135100                    SBLA    SIZE,,AUTO
         0 000110   200014 755100                    STA     I,,AUTO
         0 000111   000123 710000 0                  TRA     s:71+1

      192       69    2             S$->CHAR1 = ASTR(I);

     69  0 000112   200014 235100                    LDA     I,,AUTO
         0 000113   200015 470500                    LDP0    S$,,AUTO
         0 000114   040100 100505                    MLR     fill='040'O
         0 000115   200007 000001                    ADSC9   STR,A,AUTO               cn=0,n=1
         0 000116   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      193       70    2             S$ = PINCRC(S$,1);

     70  0 000117   200015 236100                    LDQ     S$,,AUTO
         0 000120   200000 036007                    ADLQ    65536,DL
         0 000121   200015 756100                    STQ     S$,,AUTO

      194       71    2           END;

     71  0 000122   200014 054100                    AOS     I,,AUTO
         0 000123   200014 235100                    LDA     I,,AUTO
         0 000124   000013 115007                    CMPA    11,DL
         0 000125   000112 604400 0                  TMOZ    s:69

      195       72    1           IF AFLG

     72  0 000126   200013 234100                    SZN     AFLG,,AUTO
         0 000127   000131 605000 0                  TPL     s:74

      196       73    1             THEN ALTRETURN;

     73  0 000130   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:53   

      197       74    1             ELSE RETURN;

     74  0 000131   000000 702200 xent               TSX2  ! X66_ARET
      198       75    1   END IPD$BINTXT;
      199       76        /**/
      200       77        %EOD;

PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:54   
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$BINTXT.
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:55   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @BIN                       6-0-0/w PTR         r     1 @MAXSIZE
     5-0-0/w PTR         r     1 @OFLAG                     3-0-0/w PTR         r     1 @STR$
    13-0-0/b BIT         r     1 AFLG                       7-0-0/c CHAR        r     1 ASTR(0:11)
    *0-0-0/w UBIN        r     1 BIN                       16-0-0/b BIT         r     1 FFND
    14-0-0/w SBIN        r     1 I                         *0-0-0/w SBIN        r     1 MAXSIZE
    *0-0-0/w BIT         r     1 OFLAG                     15-0-0/w PTR         r     1 S$
    12-0-0/w SBIN        r     1 SIZE                       7-0-0/c CHAR(12)    r     1 STR
    *0-0-0/w PTR         r     1 STR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 CHAR1


   Procedure IPD$BINTXT requires 90 words for executable code.
   Procedure IPD$BINTXT requires 18 words of local(AUTO) storage.
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:56   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=IPD$BINTXT File=IPD$UTIL.:E05TSI                              TUE 07/29/97 22:41 Page:57   
          MINI XREF LISTING

AFLG
        30**DCL        39<<ASSIGN     59<<ASSIGN     72>>IF
ASTR
        28**DCL        49>>IF         69>>ASSIGN
BIN
        23**DCL        20--PROC       43<>CALL       46>>CALLBLT
CHAR1
        34**DCL        64<<ASSIGN     69<<ASSIGN
DDR$BINOCT
        36**DCL-ENT    43--CALL
FFND
        33**DCL        47<<ASSIGN     49>>IF         51<<ASSIGN
I
        31**DCL        48<<DOINDEX    49>>IF         68<<DOINDEX    69>>ASSIGN
MAXSIZE
        25**DCL        20--PROC       56>>IF         58>>ASSIGN     61>>ASSIGN
OFLAG
        24**DCL        20--PROC       41>>IF         62>>IF
S$
        32**DCL        38<<ASSIGN     61<<ASSIGN     61>>ASSIGN     64>>ASSIGN     66<<ASSIGN     66>>ASSIGN
        69>>ASSIGN     70<<ASSIGN     70>>ASSIGN
SIZE
        29**DCL        40<<ASSIGN     44<<ASSIGN     52<<ASSIGN     52>>ASSIGN     55<<ASSIGN     55>>ASSIGN
        56>>IF         58<<ASSIGN     61>>ASSIGN     65<<ASSIGN     65>>ASSIGN     68>>DOINDEX
STR
        27**DCL        28--REDEF      43<>CALL       46<<CALLBLT
STR$
        22**DCL        20--PROC       38>>ASSIGN

PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:58   
      201        1        /*T***********************************************************/
      202        2        /*T*                                                         */
      203        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      204        4        /*T*                                                         */
      205        5        /*T***********************************************************/
      206        6        %EJECT;
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:59   
      207        7        /**/
      208        8        /*F*    NAME:   IPD$FREE_PROC
      209        9                PURPOSE: To free (delete) a shared processor.
      210       10                DESCRIPTION: All of the pages belonging to the processor and
      211       11                        any overlays are freed, B$P.PPC is set to zero, and
      212       12                        B$P.NAME is set to ':FREE' for the processor and all of
      213       13                        its overlays.                                      */
      214       14        IPD$FREE_PROC: PROC(PNUM,NOREL) ALTRET;
      215       15    1   DCL PNUM UBIN;                     /* Processor number of processor to free   */
      216       16    1   DCL NOREL UBIN;               /* If parameter is present, dont release slot   */
      217       17        /**/
      218       18    1   DCL N SBIN;
      219       19    1   DCL DS$ PTR;
      220       20    1   DCL PGNO UBIN;
      221       21    1   DCL 1 STLVEC STATIC DALIGNED,
      222       22    1         2 * UBIN WORD,
      223       23    1         2 PNO UBIN WORD;
      224       24    1   DCL 1 TC_FREE SYMREF,
      225       25    1         2 COUNT UBIN(9) UNAL,
      226       26    1         2 TEXT CHAR(5) UNAL;
      227       27    1   DCL B$SPCL3$ PTR SYMREF;
      228       28    1   DCL P$ PTR SYMREF;
      229       29    1   DCL PPUT$ PTR SYMREF;
      230       30    1   DCL AUTO_START UBIN SYMREF;
      231       31        /**/
      232       32        %INCLUDE B$P;
      233      116        %INCLUDE CP_6;
      234      197        %INCLUDE MM_DATA_R;
      235      717        /**/
      236      718        %FPT_STLPP(RESULTS=STLVEC);
      237      731        /**/
      238      732        %SUB B$P=P$->B$P;
      239      733        %SUB MM$PPUT=PPUT$->MM$PPUT;
      240      734        /**/
      241      735        /**/
      242      736        /* First free any initialized data segments... */
      243      737    1           DS$ = ADDR(B$P.DSDATA(PNUM));
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:60   
      244      738    2           DO N = 0 TO 5;
      245      739    2             PGNO = DS$->B$PROCDS.DSPH(N);
      246      740    3             DO WHILE (PGNO ~= 0);
      247      741    3               STLVEC.PNO = PGNO;
      248      742    3               PGNO = MM$PPUT.PPNO(PGNO);
      249      743    3               CALL M$RSPP(FPT_STLPP) ALTRET(OH_OH);
      250      744    3             END;
      251      745    2           END;
      252      746    1           DS$->B$PROCDS = '0'B;
      253      747    1           N = PNUM;
      254      748    2           DO WHILE (N ~= 0);
      255      749    2             PGNO = B$P.HPP(N);            /* Head of processor's page chain     */
      256      750    3             DO WHILE (PGNO ~= 0);
      257      751    3               STLVEC.PNO = PGNO;
      258      752    3               PGNO = MM$PPUT.PPNO(PGNO);
      259      753    3               CALL M$RSPP(FPT_STLPP) ALTRET(OH_OH);
      260      754    3             END;
      261      755    2             B$P.PPC(N) = 0;
      262      756    2             B$P.HPP(N) = 0;
      263      757    2             IF N < AUTO_START AND ADDR(NOREL) = ADDR(NIL)
      264      758    2               THEN
      265      759    3                 DO;
      266      760    3                   B$P.NAME.COUNT(N) = TC_FREE.COUNT;
      267      761    3                   B$P.NAME.TEXT(N) = TC_FREE.TEXT;
      268      762    3                 END;
      269      763    2             B$P.INSTDATE (N)= 0;
      270      764    2             N = B$P.LNK(N);
      271      765    2           END;
      272      766    1           RETURN;
      273      767    1   OH_OH:  ALTRETURN;
      274      768    1   END IPD$FREE_PROC;
      275      769        /**/
      276      770        %EOD;

PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:61   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IPD$FREE_PROC.

   Procedure IPD$FREE_PROC requires 98 words for executable code.
   Procedure IPD$FREE_PROC requires 8 words of local(AUTO) storage.

PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:62   

 Object Unit name= IPD$FREE_PROC                              File name= IPD$UTIL.:E05TOU
 UTS= JUL 29 '97 22:41:09.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     4      4  IPD$FREE_PROC
    1   DCB   even  none     0      0  M$UC
    2   Proc  even  none    98    142  IPD$FREE_PROC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  IPD$FREE_PROC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     TC_FREE                               P$                                    PPUT$
     AUTO_START                            M$UC                             r    MM_BYP$
     B_VECTNIL
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:63   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:64   


      201        1        /*T***********************************************************/
      202        2        /*T*                                                         */
      203        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      204        4        /*T*                                                         */
      205        5        /*T***********************************************************/
      206        6        %EJECT;
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:65   
      207        7        /**/
      208        8        /*F*    NAME:   IPD$FREE_PROC
      209        9                PURPOSE: To free (delete) a shared processor.
      210       10                DESCRIPTION: All of the pages belonging to the processor and
      211       11                        any overlays are freed, B$P.PPC is set to zero, and
      212       12                        B$P.NAME is set to ':FREE' for the processor and all of
      213       13                        its overlays.                                      */
      214       14        IPD$FREE_PROC: PROC(PNUM,NOREL) ALTRET;

     14  2 000000   000000 700200 xent  IPD$FREE_PR* TSX0  ! X66_AUTO_2
         2 000001   000010 000002                    ZERO    8,2

      215       15    1   DCL PNUM UBIN;                     /* Processor number of processor to free   */
      216       16    1   DCL NOREL UBIN;               /* If parameter is present, dont release slot   */
      217       17        /**/
      218       18    1   DCL N SBIN;
      219       19    1   DCL DS$ PTR;
      220       20    1   DCL PGNO UBIN;
      221       21    1   DCL 1 STLVEC STATIC DALIGNED,
      222       22    1         2 * UBIN WORD,
      223       23    1         2 PNO UBIN WORD;
      224       24    1   DCL 1 TC_FREE SYMREF,
      225       25    1         2 COUNT UBIN(9) UNAL,
      226       26    1         2 TEXT CHAR(5) UNAL;
      227       27    1   DCL B$SPCL3$ PTR SYMREF;
      228       28    1   DCL P$ PTR SYMREF;
      229       29    1   DCL PPUT$ PTR SYMREF;
      230       30    1   DCL AUTO_START UBIN SYMREF;
      231       31        /**/
      232       32        %INCLUDE B$P;
      233      116        %INCLUDE CP_6;
      234      197        %INCLUDE MM_DATA_R;
      235      717        /**/
      236      718        %FPT_STLPP(RESULTS=STLVEC);
      237      731        /**/
      238      732        %SUB B$P=P$->B$P;
      239      733        %SUB MM$PPUT=PPUT$->MM$PPUT;
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:66   
      240      734        /**/
      241      735        /**/
      242      736        /* First free any initialized data segments... */
      243      737    1           DS$ = ADDR(B$P.DSDATA(PNUM));

    737  2 000002   200003 470500                    LDP0    @PNUM,,AUTO
         2 000003   000000 236100                    LDQ     0,,PR0
         2 000004   000021 402007                    MPY     17,DL
         2 000005   000023 736000                    QLS     19
         2 000006   000011 036003                    ADLQ    9,DU
         2 000007   000000 036000 xsym               ADLQ    P$
         2 000010   200006 756100                    STQ     DS$,,AUTO

      244      738    2           DO N = 0 TO 5;

    738  2 000011   200005 450100                    STZ     N,,AUTO

      245      739    2             PGNO = DS$->B$PROCDS.DSPH(N);

    739  2 000012   200005 235100                    LDA     N,,AUTO
         2 000013   000001 735000                    ALS     1
         2 000014   200006 470500                    LDP0    DS$,,AUTO
         2 000015   000100 101505                    MRL     fill='000'O
         2 000016   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2
         2 000017   200007 000004                    ADSC9   PGNO,,AUTO               cn=0,n=4

      246      740    3             DO WHILE (PGNO ~= 0);

    740  2 000020   200007 236100                    LDQ     PGNO,,AUTO
         2 000021   000036 600000 2                  TZE     s:745

      247      741    3               STLVEC.PNO = PGNO;

    741  2 000022   200007 235100                    LDA     PGNO,,AUTO
         2 000023   000001 755000 0                  STA     STLVEC+1

      248      742    3               PGNO = MM$PPUT.PPNO(PGNO);
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:67   

    742  2 000024   000000 470400 xsym               LDP0    PPUT$
         2 000025   000000 236105                    LDQ     0,AL,PR0
         2 000026   777777 376007                    ANQ     -1,DL
         2 000027   200007 756100                    STQ     PGNO,,AUTO

      249      743    3               CALL M$RSPP(FPT_STLPP) ALTRET(OH_OH);

    743  2 000030   000002 630400 0                  EPPR0   FPT_STLPP
         2 000031   430010 713400                    CLIMB   alt,+12296
         2 000032   400000 401760                    pmme    nvectors=1
         2 000033   000141 702000 2                  TSX2    OH_OH

      250      744    3             END;

    744  2 000034   200007 235100                    LDA     PGNO,,AUTO
         2 000035   000022 601000 2                  TNZ     s:741

      251      745    2           END;

    745  2 000036   200005 054100                    AOS     N,,AUTO
         2 000037   200005 235100                    LDA     N,,AUTO
         2 000040   000005 115007                    CMPA    5,DL
         2 000041   000012 604400 2                  TMOZ    s:739

      252      746    1           DS$->B$PROCDS = '0'B;

    746  2 000042   200006 470500                    LDP0    DS$,,AUTO
         2 000043   000100 100400                    MLR     fill='000'O
         2 000044   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000045   000000 000036                    ADSC9   0,,PR0                   cn=0,n=30

      253      747    1           N = PNUM;

    747  2 000046   200003 471500                    LDP1    @PNUM,,AUTO
         2 000047   100000 235100                    LDA     0,,PR1
         2 000050   200005 755100                    STA     N,,AUTO
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:68   

      254      748    2           DO WHILE (N ~= 0);

    748  2 000051   000140 600000 2                  TZE     s:766

      255      749    2             PGNO = B$P.HPP(N);            /* Head of processor's page chain     */

    749  2 000052   200005 236100                    LDQ     N,,AUTO
         2 000053   000042 402007                    MPY     34,DL
         2 000054   000000 470400 xsym               LDP0    P$
         2 000055   000002 235106                    LDA     2,QL,PR0
         2 000056   200007 755100                    STA     PGNO,,AUTO

      256      750    3             DO WHILE (PGNO ~= 0);

    750  2 000057   000074 600000 2                  TZE     s:755

      257      751    3               STLVEC.PNO = PGNO;

    751  2 000060   200007 235100                    LDA     PGNO,,AUTO
         2 000061   000001 755000 0                  STA     STLVEC+1

      258      752    3               PGNO = MM$PPUT.PPNO(PGNO);

    752  2 000062   000000 470400 xsym               LDP0    PPUT$
         2 000063   000000 236105                    LDQ     0,AL,PR0
         2 000064   777777 376007                    ANQ     -1,DL
         2 000065   200007 756100                    STQ     PGNO,,AUTO

      259      753    3               CALL M$RSPP(FPT_STLPP) ALTRET(OH_OH);

    753  2 000066   000002 630400 0                  EPPR0   FPT_STLPP
         2 000067   430010 713400                    CLIMB   alt,+12296
         2 000070   400000 401760                    pmme    nvectors=1
         2 000071   000141 702000 2                  TSX2    OH_OH

      260      754    3             END;
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:69   

    754  2 000072   200007 235100                    LDA     PGNO,,AUTO
         2 000073   000060 601000 2                  TNZ     s:751

      261      755    2             B$P.PPC(N) = 0;

    755  2 000074   200005 236100                    LDQ     N,,AUTO
         2 000075   000042 402007                    MPY     34,DL
         2 000076   000000 470400 xsym               LDP0    P$
         2 000077   000003 450106                    STZ     3,QL,PR0

      262      756    2             B$P.HPP(N) = 0;

    756  2 000100   000000 470400 xsym               LDP0    P$
         2 000101   000002 450106                    STZ     2,QL,PR0

      263      757    2             IF N < AUTO_START AND ADDR(NOREL) = ADDR(NIL)

    757  2 000102   200005 236100                    LDQ     N,,AUTO
         2 000103   000106 604000 2                  TMI     s:757+4
         2 000104   000000 116000 xsym               CMPQ    AUTO_START
         2 000105   000127 603000 2                  TRC     s:763
         2 000106   200004 236100                    LDQ     @NOREL,,AUTO
         2 000107   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000110   000127 601000 2                  TNZ     s:763

      264      758    2               THEN
      265      759    3                 DO;

      266      760    3                   B$P.NAME.COUNT(N) = TC_FREE.COUNT;

    760  2 000111   200005 236100                    LDQ     N,,AUTO
         2 000112   000042 402007                    MPY     34,DL
         2 000113   000000 470400 xsym               LDP0    P$
         2 000114   000000 620006                    EAX0    0,QL
         2 000115   000000 236000 xsym               LDQ     TC_FREE
         2 000116   000032 676110                    ERQ     26,X0,PR0
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:70   
         2 000117   777000 376003                    ANQ     -512,DU
         2 000120   000032 656110                    ERSQ    26,X0,PR0

      267      761    3                   B$P.NAME.TEXT(N) = TC_FREE.TEXT;

    761  2 000121   200005 236100                    LDQ     N,,AUTO
         2 000122   000210 402007                    MPY     136,DL
         2 000123   000000 470400 xsym               LDP0    P$
         2 000124   040106 100400                    MLR     fill='040'O
         2 000125   000000 200005 xsym               ADSC9   TC_FREE                  cn=1,n=5
         2 000126   000032 200037                    ADSC9   26,Q,PR0                 cn=1,n=31

      268      762    3                 END;

      269      763    2             B$P.INSTDATE (N)= 0;

    763  2 000127   200005 236100                    LDQ     N,,AUTO
         2 000130   000042 402007                    MPY     34,DL
         2 000131   000000 470400 xsym               LDP0    P$
         2 000132   000005 450106                    STZ     5,QL,PR0

      270      764    2             N = B$P.LNK(N);

    764  2 000133   000000 470400 xsym               LDP0    P$
         2 000134   000022 236106                    LDQ     18,QL,PR0
         2 000135   777777 376007                    ANQ     -1,DL
         2 000136   200005 756100                    STQ     N,,AUTO

      271      765    2           END;

    765  2 000137   000052 601000 2                  TNZ     s:749

      272      766    1           RETURN;

    766  2 000140   000000 702200 xent               TSX2  ! X66_ARET

      273      767    1   OH_OH:  ALTRETURN;
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:71   

    767  2 000141   000000 702200 xent  OH_OH        TSX2  ! X66_AALT
      274      768    1   END IPD$FREE_PROC;
      275      769        /**/
      276      770        %EOD;

PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:72   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IPD$FREE_PROC.
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:73   

 **** Variables and constants ****

  ****  Section 000  Data  IPD$FREE_PROC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/d STRC(72)    r     1 FPT_STLPP                  0-0-0/d STRC(72)    r     1 STLVEC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @NOREL                     3-0-0/w PTR         r     1 @PNUM
     6-0-0/w PTR         r     1 DS$                        5-0-0/w SBIN        r     1 N
    *0-0-0/w UBIN        r     1 NOREL                      7-0-0/w UBIN        r     1 PGNO
    *0-0-0/w UBIN        r     1 PNUM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 AUTO_START                 0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 P$                         0-0-0/w PTR         r     1 PPUT$
     0-0-0/c STRC(54)    r     1 TC_FREE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/w STRC(270)   r     1 B$PROCDS
     0-0-0/w STRC        r     1 MM$PPUT(0:0)

PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:74   

   Procedure IPD$FREE_PROC requires 98 words for executable code.
   Procedure IPD$FREE_PROC requires 8 words of local(AUTO) storage.
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:75   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:76   
          MINI XREF LISTING

AUTO_START
        30**DCL       757>>IF
B$P.DSDATA
        50**DCL       737--ASSIGN
B$P.HPP
        43**DCL       749>>ASSIGN    756<<ASSIGN
B$P.INSTDATE
        46**DCL       763<<ASSIGN
B$P.LNK
        52**DCL       764>>ASSIGN
B$P.NAME.COUNT
        65**DCL       760<<ASSIGN
B$P.NAME.TEXT
        66**DCL       761<<ASSIGN
B$P.PPC
        44**DCL       755<<ASSIGN
B$PROCDS
        80**DCL       746<<ASSIGN
B$PROCDS.DSPH
        81**DCL       739>>ASSIGN
DS$
        19**DCL       737<<ASSIGN    739>>ASSIGN    746>>ASSIGN
FPT_STLPP
       729**DCL       743<>CALL      753<>CALL
M$RSPP
       163**DCL-ENT   743--CALL      753--CALL
MM$DESC.BOUND
       668**DCL       669--REDEF
MM$DESC.FLGS
       669**DCL       669--REDEF
MM$PPUT.PPNO
       657**DCL       742>>ASSIGN    752>>ASSIGN
PL6.E3A0      #005=IPD$FREE_PROC File=IPD$UTIL.:E05TSI                           TUE 07/29/97 22:41 Page:77   
MM$PPUT.USER#
       657**DCL       657--REDEF
MM_BYP$
       588**DCL       588--IMP-PTR
N
        18**DCL       738<<DOINDEX   739>>ASSIGN    747<<ASSIGN    748>>DOWHILE   749>>ASSIGN    755>>ASSIGN
       756>>ASSIGN    757>>IF        760>>ASSIGN    761>>ASSIGN    763>>ASSIGN    764<<ASSIGN    764>>ASSIGN
NOREL
        16**DCL        14--PROC      757--IF
OH_OH
       767**LABEL     743--CALLALT   753--CALLALT
P$
        28**DCL       737>>ASSIGN    749>>ASSIGN    755>>ASSIGN    756>>ASSIGN    760>>ASSIGN    761>>ASSIGN
       763>>ASSIGN    764>>ASSIGN
PGNO
        20**DCL       739<<ASSIGN    740>>DOWHILE   741>>ASSIGN    742<<ASSIGN    742>>ASSIGN    749<<ASSIGN
       750>>DOWHILE   751>>ASSIGN    752<<ASSIGN    752>>ASSIGN
PNUM
        15**DCL        14--PROC      737>>ASSIGN    747>>ASSIGN
PPUT$
        29**DCL       742>>ASSIGN    752>>ASSIGN
STLVEC
        21**DCL       729--DCLINIT
STLVEC.PNO
        23**DCL       741<<ASSIGN    751<<ASSIGN
TC_FREE.COUNT
        25**DCL       760>>ASSIGN
TC_FREE.TEXT
        26**DCL       761>>ASSIGN

PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:78   
      277        1        /*T***********************************************************/
      278        2        /*T*                                                         */
      279        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      280        4        /*T*                                                         */
      281        5        /*T***********************************************************/
      282        6        %EJECT;
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:79   
      283        7        /**/
      284        8        /*F*    NAME:   IPD$GET_SLOT
      285        9                PURPOSE: To find the number of the first available processor
      286       10                        table slot.
      287       11                DESCRIPTION: The processor table is searched for any ':FREE'
      288       12                        slots first. Next, any OLDPROC's whose use count
      289       13                        has gone to zero are freed and reused. Finally, if
      290       14                        all else fails, a new slot is allocated.           */
      291       15        IPD$GET_SLOT: PROC(SLOT) ALTRET;
      292       16    1   DCL SLOT UBIN;
      293       17    1   DCL I SBIN;
      294       18    1   DCL P$ PTR SYMREF;
      295       19    1   DCL NPROCS UBIN SYMREF;
      296       20    1   DCL MAXPROCS UBIN SYMREF;
      297       21    1   DCL 1 TC_FREE SYMREF,
      298       22    1         2 COUNT UBIN(9) UNAL,
      299       23    1         2 TEXT CHAR(5) UNAL;
      300       24        /**/
      301       25    1   DCL IPD$FREE_PROC ENTRY(2) ALTRET;
      302       26    1   DCL IPD$MON_STORE ENTRY(2);
      303       27    1   DCL IPD$MON_VALUE ENTRY(2);
      304       28        /**/
      305       29        %INCLUDE B$P;
      306      113        /**/
      307      114        %SUB B$P=P$->B$P;
      308      115        /**/
      309      116        /**/
      310      117    1           CALL IPD$MON_VALUE (P_NPROCS,NPROCS);
      311      118    2           DO I = 1 TO NPROCS;
      312      119    2             IF B$P.NAME.TEXT(I) = TC_FREE.TEXT THEN
      313      120    3                 DO;                       /* Found one                          */
      314      121    3                   SLOT = I;
      315      122    3                   RETURN;
      316      123    3                 END;
      317      124    2             IF ((B$P.FLGS(I) & %P_OLDPROC) ~= '0'B) AND (B$P.UC(I) = 0) THEN
      318      125        /* Free an old processor slot whose use count has gone to zero */
      319      126    3                 DO;
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:80   
      320      127    3                   CALL IPD$FREE_PROC(I) ALTRET(NO_SLOTS);
      321      128    3                   SLOT = I;
      322      129    3                   RETURN;
      323      130    3                 END;
      324      131    2           END;
      325      132        /* No 'old' slots are free.  Try allocating a new one at the end...*/
      326      133    1           IF NPROCS < MAXPROCS
      327      134    2             THEN DO;
      328      135    2                 NPROCS = NPROCS + 1;
      329      136    2                 SLOT = NPROCS;
      330      137    2                 CALL IPD$MON_STORE(P_NPROCS,NPROCS);
      331      138    2                 RETURN;
      332      139    2               END;
      333      140    2             ELSE DO;
      334      141    2                 SLOT = 0;
      335      142    2   NO_SLOTS:     ALTRETURN;
      336      143    2               END;
      337      144    1   END IPD$GET_SLOT;
      338      145        %EOD;

PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:81   
--  Include file information  --

   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$GET_SLOT.

   Procedure IPD$GET_SLOT requires 56 words for executable code.
   Procedure IPD$GET_SLOT requires 8 words of local(AUTO) storage.

PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:82   

 Object Unit name= IPD$GET_SLOT                               File name= IPD$UTIL.:E05TOU
 UTS= JUL 29 '97 22:41:14.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    56     70  IPD$GET_SLOT
    1  RoData even  none     2      2  IPD$GET_SLOT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  IPD$GET_SLOT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 IPD$MON_VALUE
 yes     yes           Std       2 IPD$FREE_PROC
         yes           Std       2 IPD$MON_STORE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:83   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     P$                                    NPROCS                                MAXPROCS
     TC_FREE                               P_NPROCS                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:84   


      277        1        /*T***********************************************************/
      278        2        /*T*                                                         */
      279        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      280        4        /*T*                                                         */
      281        5        /*T***********************************************************/
      282        6        %EJECT;
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:85   
      283        7        /**/
      284        8        /*F*    NAME:   IPD$GET_SLOT
      285        9                PURPOSE: To find the number of the first available processor
      286       10                        table slot.
      287       11                DESCRIPTION: The processor table is searched for any ':FREE'
      288       12                        slots first. Next, any OLDPROC's whose use count
      289       13                        has gone to zero are freed and reused. Finally, if
      290       14                        all else fails, a new slot is allocated.           */
      291       15        IPD$GET_SLOT: PROC(SLOT) ALTRET;

     15  0 000000   000000 700200 xent  IPD$GET_SLOT TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      292       16    1   DCL SLOT UBIN;
      293       17    1   DCL I SBIN;
      294       18    1   DCL P$ PTR SYMREF;
      295       19    1   DCL NPROCS UBIN SYMREF;
      296       20    1   DCL MAXPROCS UBIN SYMREF;
      297       21    1   DCL 1 TC_FREE SYMREF,
      298       22    1         2 COUNT UBIN(9) UNAL,
      299       23    1         2 TEXT CHAR(5) UNAL;
      300       24        /**/
      301       25    1   DCL IPD$FREE_PROC ENTRY(2) ALTRET;
      302       26    1   DCL IPD$MON_STORE ENTRY(2);
      303       27    1   DCL IPD$MON_VALUE ENTRY(2);
      304       28        /**/
      305       29        %INCLUDE B$P;
      306      113        /**/
      307      114        %SUB B$P=P$->B$P;
      308      115        /**/
      309      116        /**/
      310      117    1           CALL IPD$MON_VALUE (P_NPROCS,NPROCS);

    117  0 000002   000000 630400 1                  EPPR0   0
         0 000003   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000004   000000 701000 xent               TSX1    IPD$MON_VALUE
         0 000005   000000 011000                    NOP     0
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:86   

      311      118    2           DO I = 1 TO NPROCS;

    118  0 000006   000001 235007                    LDA     1,DL
         0 000007   200004 755100                    STA     I,,AUTO
         0 000010   000046 710000 0                  TRA     s:131+1

      312      119    2             IF B$P.NAME.TEXT(I) = TC_FREE.TEXT THEN

    119  0 000011   200004 236100                    LDQ     I,,AUTO
         0 000012   000210 402007                    MPY     136,DL
         0 000013   000000 470400 xsym               LDP0    P$
         0 000014   040000 106506                    CMPC    fill='040'O
         0 000015   000032 200037                    ADSC9   26,Q,PR0                 cn=1,n=31
         0 000016   000000 200005 xsym               ADSC9   TC_FREE                  cn=1,n=5
         0 000017   000024 601000 0                  TNZ     s:124

      313      120    3                 DO;                       /* Found one                          */

      314      121    3                   SLOT = I;

    121  0 000020   200004 235100                    LDA     I,,AUTO
         0 000021   200003 471500                    LDP1    @SLOT,,AUTO
         0 000022   100000 755100                    STA     0,,PR1

      315      122    3                   RETURN;

    122  0 000023   000000 702200 xent               TSX2  ! X66_ARET

      316      123    3                 END;
      317      124    2             IF ((B$P.FLGS(I) & %P_OLDPROC) ~= '0'B) AND (B$P.UC(I) = 0) THEN

    124  0 000024   200004 236100                    LDQ     I,,AUTO
         0 000025   000042 402007                    MPY     34,DL
         0 000026   000027 220106                    LDX0    23,QL,PR0
         0 000027   001000 360003                    ANX0    512,DU
         0 000030   000045 600000 0                  TZE     s:131
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:87   
         0 000031   000000 235106                    LDA     0,QL,PR0
         0 000032   000045 601000 0                  TNZ     s:131

      318      125        /* Free an old processor slot whose use count has gone to zero */
      319      126    3                 DO;

      320      127    3                   CALL IPD$FREE_PROC(I) ALTRET(NO_SLOTS);

    127  0 000033   200004 631500                    EPPR1   I,,AUTO
         0 000034   200006 451500                    STP1    I+2,,AUTO
         0 000035   200006 630500                    EPPR0   I+2,,AUTO
         0 000036   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000037   000000 701000 xent               TSX1    IPD$FREE_PROC
         0 000040   000067 702000 0                  TSX2    NO_SLOTS

      321      128    3                   SLOT = I;

    128  0 000041   200004 235100                    LDA     I,,AUTO
         0 000042   200003 470500                    LDP0    @SLOT,,AUTO
         0 000043   000000 755100                    STA     0,,PR0

      322      129    3                   RETURN;

    129  0 000044   000000 702200 xent               TSX2  ! X66_ARET

      323      130    3                 END;
      324      131    2           END;

    131  0 000045   200004 054100                    AOS     I,,AUTO
         0 000046   000000 236000 xsym               LDQ     NPROCS
         0 000047   000011 604000 0                  TMI     s:119
         0 000050   200004 116100                    CMPQ    I,,AUTO
         0 000051   000011 605000 0                  TPL     s:119

      325      132        /* No 'old' slots are free.  Try allocating a new one at the end...*/
      326      133    1           IF NPROCS < MAXPROCS

PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:88   
    133  0 000052   000000 116000 xsym               CMPQ    MAXPROCS
         0 000053   000065 603000 0                  TRC     s:141

      327      134    2             THEN DO;

      328      135    2                 NPROCS = NPROCS + 1;

    135  0 000054   000001 036007                    ADLQ    1,DL
         0 000055   000000 756000 xsym               STQ     NPROCS

      329      136    2                 SLOT = NPROCS;

    136  0 000056   200003 470500                    LDP0    @SLOT,,AUTO
         0 000057   000000 756100                    STQ     0,,PR0

      330      137    2                 CALL IPD$MON_STORE(P_NPROCS,NPROCS);

    137  0 000060   000000 630400 1                  EPPR0   0
         0 000061   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000062   000000 701000 xent               TSX1    IPD$MON_STORE
         0 000063   000000 011000                    NOP     0

      331      138    2                 RETURN;

    138  0 000064   000000 702200 xent               TSX2  ! X66_ARET

      332      139    2               END;
      333      140    2             ELSE DO;

      334      141    2                 SLOT = 0;

    141  0 000065   200003 470500                    LDP0    @SLOT,,AUTO
         0 000066   000000 450100                    STZ     0,,PR0

      335      142    2   NO_SLOTS:     ALTRETURN;

    142  0 000067   000000 702200 xent  NO_SLOTS     TSX2  ! X66_AALT
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:89   
      336      143    2               END;
      337      144    1   END IPD$GET_SLOT;
      338      145        %EOD;

PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:90   
--  Include file information  --

   B$P.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure IPD$GET_SLOT.
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:91   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SLOT                      4-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 SLOT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 MAXPROCS                   0-0-0/w UBIN        r     1 NPROCS
     0-0-0/w PTR         r     1 P$                         0-0-0/w UBIN        r     1 P_NPROCS
     0-0-0/c STRC(54)    r     1 TC_FREE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1224)  r     1 B$P(0:0)


   Procedure IPD$GET_SLOT requires 56 words for executable code.
   Procedure IPD$GET_SLOT requires 8 words of local(AUTO) storage.
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:92   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=IPD$GET_SLOT File=IPD$UTIL.:E05TSI                            TUE 07/29/97 22:41 Page:93   
          MINI XREF LISTING

B$P.FLGS
        58**DCL       124>>IF
B$P.NAME.TEXT
        63**DCL       119>>IF
B$P.UC
        38**DCL       124>>IF
I
        17**DCL       118<<DOINDEX   119>>IF        121>>ASSIGN    124>>IF        124>>IF        127<>CALL
       128>>ASSIGN
IPD$FREE_PROC
        25**DCL-ENT   127--CALL
IPD$MON_STORE
        26**DCL-ENT   137--CALL
IPD$MON_VALUE
        27**DCL-ENT   117--CALL
MAXPROCS
        20**DCL       133>>IF
NO_SLOTS
       142**LABEL     127--CALLALT
NPROCS
        19**DCL       117<>CALL      118>>DOINDEX   133>>IF        135<<ASSIGN    135>>ASSIGN    136>>ASSIGN
       137<>CALL
P$
        18**DCL       119>>IF        124>>IF        124>>IF
P_NPROCS
        84**DCL       117<>CALL      137<>CALL
SLOT
        16**DCL        15--PROC      121<<ASSIGN    128<<ASSIGN    136<<ASSIGN    141<<ASSIGN
TC_FREE.TEXT
        23**DCL       119>>IF

PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:94   
      339        1        /*T***********************************************************/
      340        2        /*T*                                                         */
      341        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      342        4        /*T*                                                         */
      343        5        /*T***********************************************************/
      344        6        %EJECT;
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:95   
      345        7        /*F*    NAME:   IPD$BREAK
      346        8                PURPOSE: To handle the terminal BREAK key, allowing the
      347        9                        user to quit or continue.
      348       10        */
      349       11        IPD$BREAK: PROC ASYNC;
      350       12        /**/
      351       13        %INCLUDE CP_6;
      352       94        %INCLUDE CP_6_SUBS;
      353      634        %INCLUDE U$JIT_C;
      354      820        /**/
      355      821    1   DCL CONT_MSG CHAR(22) STATIC INIT('Enter ''C'' to continue*');
      356      822    1   DCL NORMAL CHAR(1) STATIC INIT('>');
      357      823    1   DCL INCHAR CHAR(1) STATIC;
      358      824    1   DCL M$UC$ PTR;
      359      825    1   DCL IPA_RESTART REMEMBER SYMREF;
      360      826    1   DCL B$JIT$ PTR SYMREF;
      361      827        /**/
      362      828        %F$DCB;
      363      885        %FPT_PROMPT(FPTN=BREAK_PROMPT,
      364      886                    PROMPT=CONT_MSG);
      365      914        %FPT_PROMPT(FPTN=NORMAL_PROMPT,
      366      915                    PROMPT=NORMAL);
      367      943        %FPT_READ(FPTN=READ_UC,
      368      944                  DCB=M$UC,
      369      945                  BUF=INCHAR);
      370      984        /**/
      371      985        %SUB M$UC = M$UC$->F$DCB;
      372      986        /**/
      373      987        /**/
      374      988    1           M$UC$ = DCBADDR(%M$UC#);
      375      989    1           IF (B$JIT.MODE = %M_INT#) AND (M$UC.ASN# = %DEVICE#) THEN
      376      990    2               DO;
      377      991    2                 CALL M$PROMPT(BREAK_PROMPT);
      378      992    2                 INCHAR = ' ';
      379      993    2                 CALL M$READ(READ_UC);
      380      994    2                 CALL M$PROMPT(NORMAL_PROMPT);
      381      995    2                 IF INCHAR = 'C' THEN RETURN;
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:96   
      382      996    2               END;
      383      997    1           CALL M$CLRSTK;
      384      998    1           UNWIND TO IPA_RESTART;
      385      999    1   END IPD$BREAK;

PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:97   
--  Include file information  --

   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IPD$BREAK.

   Procedure IPD$BREAK requires 37 words for executable code.
   Procedure IPD$BREAK requires 4 words of local(AUTO) storage.

    No errors detected in file IPD$UTIL.:E05TSI    .

PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:98   

 Object Unit name= IPD$BREAK                                  File name= IPD$UTIL.:E05TOU
 UTS= JUL 29 '97 22:41:17.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    42     52  IPD$BREAK
    2   Proc  even  none    37     45  IPD$BREAK
    3  RoData even  none     1      1  IPD$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     Async       0  IPD$BREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
                       nStd      0 X66_AAUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  IPA_RESTART                           B$JIT$
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:99   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:100  


      339        1        /*T***********************************************************/
      340        2        /*T*                                                         */
      341        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      342        4        /*T*                                                         */
      343        5        /*T***********************************************************/
      344        6        %EJECT;
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:101  
      345        7        /*F*    NAME:   IPD$BREAK
      346        8                PURPOSE: To handle the terminal BREAK key, allowing the
      347        9                        user to quit or continue.
      348       10        */
      349       11        IPD$BREAK: PROC ASYNC;

     11  2 000000   000000 700200 xent  IPD$BREAK    TSX0  ! X66_AAUTO
         2 000001   000004 000000                    ZERO    4,0

      350       12        /**/
      351       13        %INCLUDE CP_6;
      352       94        %INCLUDE CP_6_SUBS;
      353      634        %INCLUDE U$JIT_C;
      354      820        /**/
      355      821    1   DCL CONT_MSG CHAR(22) STATIC INIT('Enter ''C'' to continue*');
      356      822    1   DCL NORMAL CHAR(1) STATIC INIT('>');
      357      823    1   DCL INCHAR CHAR(1) STATIC;
      358      824    1   DCL M$UC$ PTR;
      359      825    1   DCL IPA_RESTART REMEMBER SYMREF;
      360      826    1   DCL B$JIT$ PTR SYMREF;
      361      827        /**/
      362      828        %F$DCB;
      363      885        %FPT_PROMPT(FPTN=BREAK_PROMPT,
      364      886                    PROMPT=CONT_MSG);
      365      914        %FPT_PROMPT(FPTN=NORMAL_PROMPT,
      366      915                    PROMPT=NORMAL);
      367      943        %FPT_READ(FPTN=READ_UC,
      368      944                  DCB=M$UC,
      369      945                  BUF=INCHAR);
      370      984        /**/
      371      985        %SUB M$UC = M$UC$->F$DCB;
      372      986        /**/
      373      987        /**/
      374      988    1           M$UC$ = DCBADDR(%M$UC#);

    988  2 000002   000000 470400 3                  LDP0    0
         2 000003   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:102  
         2 000004   100003 236100                    LDQ     3,,PR1
         2 000005   200003 756100                    STQ     M$UC$,,AUTO

      375      989    1           IF (B$JIT.MODE = %M_INT#) AND (M$UC.ASN# = %DEVICE#) THEN

    989  2 000006   000000 473400 xsym               LDP3    B$JIT$
         2 000007   300000 236100                    LDQ     0,,PR3
         2 000010   740000 376003                    ANQ     -16384,DU
         2 000011   140000 116003                    CMPQ    49152,DU
         2 000012   000040 601000 2                  TNZ     s:997
         2 000013   200003 474500                    LDP4    M$UC$,,AUTO
         2 000014   400032 236100                    LDQ     26,,PR4
         2 000015   777000 376007                    ANQ     -512,DL
         2 000016   003000 116007                    CMPQ    1536,DL
         2 000017   000040 601000 2                  TNZ     s:997

      376      990    2               DO;

      377      991    2                 CALL M$PROMPT(BREAK_PROMPT);

    991  2 000020   000010 630400 1                  EPPR0   BREAK_PROMPT
         2 000021   160002 713400                    CLIMB   57346
         2 000022   401000 401760                    pmme    nvectors=3

      378      992    2                 INCHAR = ' ';

    992  2 000023   040000 236003                    LDQ     16384,DU
         2 000024   000007 756000 1                  STQ     INCHAR

      379      993    2                 CALL M$READ(READ_UC);

    993  2 000025   000034 630400 1                  EPPR0   READ_UC
         2 000026   040000 713400                    CLIMB   read
         2 000027   401400 401760                    pmme    nvectors=4

      380      994    2                 CALL M$PROMPT(NORMAL_PROMPT);

PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:103  
    994  2 000030   000022 630400 1                  EPPR0   NORMAL_PROMPT
         2 000031   160002 713400                    CLIMB   57346
         2 000032   401000 401760                    pmme    nvectors=3

      381      995    2                 IF INCHAR = 'C' THEN RETURN;

    995  2 000033   000007 236000 1                  LDQ     INCHAR
         2 000034   777000 376003                    ANQ     -512,DU
         2 000035   103000 116003                    CMPQ    34304,DU
         2 000036   000040 601000 2                  TNZ     s:997

    995  2 000037   000000 702200 xent               TSX2  ! X66_AARET

      382      996    2               END;
      383      997    1           CALL M$CLRSTK;

    997  2 000040   010013 713400                    CLIMB   4107
         2 000041   000000 401760                    pmme    nvectors=0

      384      998    1           UNWIND TO IPA_RESTART;

    998  2 000042   000000 237200 xsym               LDAQ  ! IPA_RESTART
         2 000043   000000 700200 xent               TSX0  ! X66_AAUNWIND
         2 000044   000000 000200                    ZERO    0,128
      385      999    1   END IPD$BREAK;

PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:104  
--  Include file information  --

   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IPD$BREAK.
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:105  

 **** Variables and constants ****

  ****  Section 001  Data  IPD$BREAK

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/d STRC(360)   r     1 BREAK_PROMPT               0-0-0/c CHAR(22)    r     1 CONT_MSG
     7-0-0/c CHAR        r     1 INCHAR                     6-0-0/c CHAR        r     1 NORMAL
    22-0-0/d STRC(360)   r     1 NORMAL_PROMPT             34-0-0/d STRC(504)   r     1 READ_UC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 M$UC$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/d REMB        r     1 IPA_RESTART

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$UC


   Procedure IPD$BREAK requires 37 words for executable code.
   Procedure IPD$BREAK requires 4 words of local(AUTO) storage.
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:106  

    No errors detected in file IPD$UTIL.:E05TSI    .
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:107  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:108  
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       742**DCL       742--REDEF
B$JIT.ERR.MID
       649**DCL       649--REDEF
B$JIT.MODE
       643**DCL       989>>IF
B$JIT$
       826**DCL       643--IMP-PTR   989>>IF
BREAK_PROMPT
       902**DCL       991<>CALL
BREAK_PROMPT.V
       910**DCL       904--DCLINIT
CONT_MSG
       821**DCL       908--DCLINIT
F$DCB.ACTPOS
       861**DCL       861--REDEF
F$DCB.ARS#
       835**DCL       835--REDEF
F$DCB.ASN#
       850**DCL       989>>IF
F$DCB.ATTR
       854**DCL       855--REDEF
F$DCB.BORROW
       869**DCL       869--REDEF     869--REDEF     869--REDEF
F$DCB.DCBNAME.L
       883**DCL       883--IMP-SIZ
F$DCB.EOMCHAR#
       839**DCL       839--REDEF
F$DCB.FLDID
       864**DCL       864--REDEF
F$DCB.FORM$
       858**DCL       858--REDEF
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:109  
F$DCB.FSECT
       874**DCL       874--REDEF
F$DCB.FSN#
       851**DCL       851--REDEF     851--REDEF     852--REDEF
F$DCB.HEADER$
       857**DCL       857--REDEF
F$DCB.IXTNSIZE#
       855**DCL       855--REDEF
F$DCB.LASTSTA$
       844**DCL       844--REDEF
F$DCB.LVL
       870**DCL       870--REDEF
F$DCB.NAME#.C
       845**DCL       845--REDEF
F$DCB.NOEOF
       867**DCL       867--REDEF
F$DCB.NRECS#
       856**DCL       856--REDEF
F$DCB.NRECX
       875**DCL       875--REDEF
F$DCB.OHDR
       867**DCL       867--REDEF
F$DCB.ORG#
       850**DCL       850--REDEF
F$DCB.PRECNO
       873**DCL       873--REDEF
F$DCB.RCSZ
       879**DCL       879--REDEF
F$DCB.RES#
       846**DCL       846--REDEF
F$DCB.SETX
       858**DCL       858--REDEF
F$DCB.TAB$
       858**DCL       858--REDEF
F$DCB.TDA
       872**DCL       873--REDEF
PL6.E3A0      #007=IPD$BREAK File=IPD$UTIL.:E05TSI                               TUE 07/29/97 22:41 Page:110  
F$DCB.WSN#
       846**DCL       846--REDEF
INCHAR
       823**DCL       964--DCLINIT   965--DCLINIT   992<<ASSIGN    995>>IF
IPA_RESTART
       825**DCL       998>>UNWIND
M$CLRSTK
        80**DCL-ENT   997--CALL
M$PROMPT
        46**DCL-ENT   991--CALL      994--CALL
M$READ
        23**DCL-ENT   993--CALL
M$UC$
       824**DCL       988<<ASSIGN    989>>IF
NORMAL
       822**DCL       937--DCLINIT
NORMAL_PROMPT
       931**DCL       994<>CALL
NORMAL_PROMPT.V
       939**DCL       933--DCLINIT
READ_UC
       962**DCL       993<>CALL
READ_UC.STATION_
       965**DCL       966--REDEF
READ_UC.V
       966**DCL       962--DCLINIT
READ_UC.V.DVBYTE.REREAD#
       977**DCL       977--REDEF
READ_UC.V.INDX#
       975**DCL       975--REDEF
