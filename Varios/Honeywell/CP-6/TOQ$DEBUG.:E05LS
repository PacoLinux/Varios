VERSION E05

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:1    
        1        1        /*M* TOQ$DEBUG   TOLTS Query On-Line Subexec/Test Page DEBUGger */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOQ$DEBUG
       12       12              AUTHORS:     Curtis D. Andes
       13       13                           Scott S. Sheppard
       14       14              PURPOSE:     DELTA / TOLTS Interface for DEBUG TEST requests
       15       15              DESCRIPTION: This program is the Total On-Line Testing System
       16       16                           debug routine. It is invoked when TOLTS receives
       17       17                           the ???DEBUG [TEST] <request>. This program sets
       18       18                           up initial and  handy breakpoints  for the  CP-6
       19       19                           Universal  Debugger,  DELTA  and displays useful
       20       20                           TOLTS related information.
       21       21              LAST UPDATE: 10/03/83
       22       22              REFERENCE:   CP-6 Release C0L0
       23       23        */
       24       24        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:2    
       25       25        /*F*  NAME:        TOQ$DEBUG
       26       26              DESCRIPTION: Procedure Nesting Hierarchy
       27       27
       28       28              TOQ$DEBUG: procedure
       29       29                 TOQ$ADD_SCHEMA_BYPASS_RULES: procedure
       30       30                 TOQ$ADD_CONTROL_RULES: procedure
       31       31                 TOQ$ADD_IO_BRKPNT: procedure
       32       32                 TOQ$TEST_PAGE_MSG: procedure
       33       33                 TOQ$SUBEXEC_MSG: procedure
       34       34                 TOQ$ADD_DELTA_DEF: procedure (SYMBOL, VALUE)
       35       35                 TOQ$ENTER_GELBAR_MSG: procedure
       36       36                 TOQ$ADD_1ST_BRKPNT: procedure
       37       37                 TOQ$ADD_1ST_BRKPNT: procedure (EDIT_NAME, ADDRESS)
       38       38                 TOQ$SET_GELBARRED_FLAG: procedure
       39       39                 TOQ$KILL_DELTA: procedure
       40       40                 TOQ$MME_MSG: procedure
       41       41                    TOQ$GET_GCOS_MME_NAME: procedure (MME_NUMBER, MME_NAME)
       42       42                    TOQ$GET_TND_MME_NAME: procedure (MME_NUMBER, MME_NAME)
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:3    
       45       45        TOQ$DEBUG: PROC ;
       46       46
       47       47        /* Include Files */
       48       48
       49       49           %INCLUDE CP_6 ;                /* M$ Service Routines */
       50     5608           %INCLUDE TOT_TOLTS_M ;         /* TOLTS Equations, Macros */
       51     6726           %INCLUDE TO_PERR_C ;           /* TOLTS E$ Error EQU's */
       52     7311
       53     7312        /* Variables */
       54     7313
       55     7314           %B$TCB ;
       56     7317           %B$EXCFR ;
       57     7335           %VLP_ERRCODE (FPTN = TOQ_ERROR_CODE,
       58     7336                         FCG  = 'TO',
       59     7337                         MID  = 'Q',
       60     7338                         SEV  = 0) ;
       61     7383
       62     7384        /* External Variables */
       63     7385
       64     7386    1      DCL B$TCB$      PTR SYMREF ;
       65     7387           %FPT_WRITE (FPTN    = CONSOLE_FPT,
       66     7388                       STCLASS = SYMREF) ;
       67     7419           %TOQ$DCP (STCLASS = "STATIC SYMDEF") ;
       68     7451
       69     7452        /* External Entry Points */
       70     7453
       71     7454    1      DCL TOT$CONSOLE_OUT            ENTRY ;
       72     7455    1      DCL TOT$OCTASC                 ENTRY (2) ;
       73     7456    1      DCL TOX$ERROR                  ENTRY (1) ;
       74     7457           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:4    
       75     7458    2      DO CASE (TOQ$DCP.PF.REASON) ;
       76     7459    2         CASE (%DSC_INIT) ;
       77     7460    2            CALL TOQ$ADD_SCHEMA_BYPASS_RULES ;
       78     7461    2            CALL TOQ$ADD_CONTROL_RULES ;
       79     7462    2            CALL TOQ$ADD_IO_BRKPNT ;
       80     7463    2            CALL TOQ$ADD_DELTA_DEF (TOQ$DCP.SE.EDIT_NAME, TOQ$DCP.SE.ADDRESS) ;
       81     7464    2            IF TOQ$DCP.PF.STOP_AT_SE
       82     7465    3            THEN DO ;
       83     7466    3                    CALL TOQ$SUBEXEC_MSG ;
       84     7467    3                    CALL TOQ$ADD_1ST_BRKPNT (TOQ$DCP.SE.EDIT_NAME, %SPA_LGTH) ;
       85     7468    3                 END /* THEN */ ;
       86     7469    2            ELSE /* User does not wish to stop at start of SUBEXEC */ ;
       87     7470    2         CASE (%GECALL) ;
       88     7471    2            CALL TOQ$TEST_PAGE_MSG ;
       89     7472    2            CALL TOQ$ADD_DELTA_DEF (TOQ$DCP.TP.EDIT_NAME, TOQ$DCP.TP.ADDRESS) ;
       90     7473    2            CALL TOQ$SET_GELBARRED_FLAG ;
       91     7474    2         CASE (%GELBAR) ;
       92     7475    2            IF TOQ$DCP.BR.ADDRESS = TOQ$DCP.TP.ADDRESS & ~TOQ$DCP.PF.GELBARRED
       93     7476    3            THEN DO ;
       94     7477    3                    CALL TOQ$ENTER_GELBAR_MSG ;
       95     7478    3                    CALL TOQ$ADD_1ST_BRKPNT (TOQ$DCP.TP.EDIT_NAME, TOQ$DCP.BR.IC);
       96     7479    3                    CALL TOQ$SET_GELBARRED_FLAG ;
       97     7480    3                 END /* THEN */ ;
       98     7481    2            ELSE /* Do not break on this GELBAR invocation */ ;
       99     7482    2         CASE (%TERMIN) ;
      100     7483    2            CALL TOQ$KILL_DELTA ;
      101     7484    2         CASE (%MME_FT) ;
      102     7485    2            CALL TOQ$MME_MSG ;
      103     7486    2         CASE (ELSE) ;
      104     7487    2            TOQ_ERROR_CODE.ERR# = %E$BADREASON ;
      105     7488    2            CALL TOX$ERROR (TOQ_ERROR_CODE) ;
      106     7489    2      END /* CASE */ ;
      107     7490    1      RETURN ;
      108     7491
      109     7492        /* END TOQ$DEBUG */
      110     7493        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:5    
      111     7494        /*I* NAME:         TOQ$ADD_SCHEMA_BYPASS_RULES
      112     7495             AUTHOR:       Scott S. Sheppard
      113     7496             PURPOSE:      DELTA instruction interpretation rules
      114     7497             INTERFACE:    M$UNSHARE Monitor Service
      115     7498                           M$ALIB Monitor Service
      116     7499                           TOX$ERROR
      117     7500             PARAMETERS:   None passed.
      118     7501             DATA:         TOQ$DCP.PF.DEBUG_TOLTS
      119     7502                           TOQ$DCP.PF.STOP_ON_IO
      120     7503                           Breakpoints 50-52 set in DELTA
      121     7504             DESCRIPTION:  This procedure is used to set up the rules for PL6
      122     7505                           schema and assembly  instruction bypass for DELTA.
      123     7506                           These  rules  are  enforced  by  DELTA  by setting
      124     7507                           silent  breakpoints used to  govern when the rules
      125     7508                           apply. When a fault  occurs, SCHEMA and BYPASS are
      126     7509                           turned on so these can be used to step through and
      127     7510                           debug TOLTS  code. After a fault  is handled, upon
      128     7511                           return to the  GMAP module (originally loaded from
      129     7512                           the  deckfile), SCHEMA and  BYPASS are turned off.
      130     7513                           There  are  two  ways  to  return  from  a  fault:
      131     7514                           directly form TOF$FAULTS after an SBAR instruction
      132     7515                           or  when  GELBAR  mode  is  invoked and the ISR is
      133     7516                           shrunken.
      134     7517        */
      135     7518        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:6    
      136     7519    1   TOQ$ADD_SCHEMA_BYPASS_RULES: PROC ;
      137     7520
      138     7521           %FPT_UNSHARE (FPTN = RESERVE_TOLTS,
      139     7522                         LIB  = YES,
      140     7523                         PROG = YES) ;
      141     7538           %FPT_ALIB (FPTN    = ADD_RULES,
      142     7539                      LIBNAME = DEBUG_RUN_UNIT) ;
      143     7556           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      144     7557                      STCLASS = CONSTANT,
      145     7558                      NAME    = %DEBUGGER_NAME) ;
      146     7585    2      DCL I     UBIN WORD ALIGNED ;
      147     7586    2      DCL RULES (0:4) CHAR (0) CONSTANT CALIGNED INIT
      148     7587    2             ('50 ATS TOF$FAULTS;BY;GO',
      149     7588    2              '51 ATS TOF$FAULTS:TOF$SBAR_INSTR:SBAR_TO_GELBAR;KBY;GO',
      150     7589    2              '52 ATS TOF$SHRINK_ISR;KBY;GO',
      151     7590    2              'ALIBRET,KEEP',
      152     7591    2              'KSC;KBY') ;
      153     7592           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:7    
      154     7593        /* Code */
      155     7594
      156     7595    2      CALL M$UNSHARE (RESERVE_TOLTS) ALTRET (ERROR) ;
      157     7596    2      IF TOQ$DCP.PF.DEBUG_TOLTS | TOQ$DCP.PF.STOP_ON_IO
      158     7597    3      THEN DO I = 0 TO 3 ;
      159     7598    3              ADD_RULES.CMD_ = VECTOR (RULES(I)) ;
      160     7599    3              CALL M$ALIB (ADD_RULES) ALTRET (ERROR) ;
      161     7600    3           END /* DO */ ;
      162     7601    3      ELSE DO I = 3 TO 4 ;
      163     7602    3              ADD_RULES.CMD_ = VECTOR (RULES(I)) ;
      164     7603    3              CALL M$ALIB (ADD_RULES) ALTRET (ERROR) ;
      165     7604    3           END /* DO */ ;
      166     7605    2      RETURN ;
      167     7606
      168     7607    2   ERROR:
      169     7608    2      CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;
      170     7609
      171     7610    2   END TOQ$ADD_SCHEMA_BYPASS_RULES ;
      172     7611        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:8    
      173     7612        /*I* NAME:         TOQ$ADD_CONTROL_RULES
      174     7613             AUTHOR:       Scott S. Sheppard
      175     7614             PURPOSE:      Handy Default Rules for TOLTS Debugging
      176     7615             INTERFACE:    M$ALIB Monitor Service
      177     7616                           TOX$ERROR
      178     7617             PARAMETERS:   None passed.
      179     7618             DATA:         No external data accessed.
      180     7619                           Commands issued to DELTA
      181     7620             DESCRIPTION:  This  procedure  is  used  to  invisibly  enter to
      182     7621                           DELTA (programatically)  default  commands  (usage
      183     7622                           rules or desired feature  capabilities) for debug.
      184     7623                           The  M$ALIB service  is called  to associate TOLTS
      185     7624                           with  DELTA and add  the commands, just  as if the
      186     7625                           user typed:
      187     7626                             !UNDER DELTA
      188     7627                             !TOLTS
      189     7628                             >TRAP ALL    "trap all faults to TOLTS
      190     7629                             >KEEP BREAK  "have breaks return to DELTA
      191     7630                             >FORMAT EVALUATION\O
      192     7631                             >FORMAT MODIFICATION\I
      193     7632        */
      194     7633        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:9    
      195     7634    1   TOQ$ADD_CONTROL_RULES: PROC ;
      196     7635
      197     7636           %FPT_ALIB (FPTN    = ADD_RULES,
      198     7637                      LIBNAME = DEBUG_RUN_UNIT,
      199     7638                      CMD     = RULES) ;
      200     7655           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      201     7656                      STCLASS = CONSTANT,
      202     7657                      NAME    = %DEBUGGER_NAME) ;
      203     7684    2      DCL RULES CHAR (0) CONSTANT CALIGNED INIT
      204     7685    2             ('TRAP ALL;KEEP BREAK;FOR EV\O;FOR MOD\I') ;
      205     7686
      206     7687        /* Code */
      207     7688
      208     7689    2      CALL M$ALIB (ADD_RULES) WHENRETURN
      209     7690    3           DO ;
      210     7691    3              RETURN ;
      211     7692    3           END /* WHENRETURN */ ;
      212     7693    2      WHENALTRETURN
      213     7694    3           DO ;
      214     7695    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;
      215     7696    3           END /* WHENALTRETURN */ ;
      216     7697    2      RETURN ;
      217     7698
      218     7699    2   END TOQ$ADD_CONTROL_RULES ;
      219     7700        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:10   
      220     7701        /*I* NAME:         TOQ$ADD_IO_BRKPNT
      221     7702             AUTHOR:       Scott S. Sheppard
      222     7703             PURPOSE:      Sets a DELTA breakpoint before I/O is issued
      223     7704             INTERFACE:    M$ALIB Monitor Service
      224     7705                           TOX$ERROR
      225     7706             PARAMETERS:   None passed.
      226     7707             DATA:         TOQ$DCP.PF.STOP_ON_IO
      227     7708                           Command issued to DELTA
      228     7709             DESCRIPTION:  This procedure adds a  breakpoint to stop in TOLTS
      229     7710                           before I/O is issued. Debugging test pages usually
      230     7711                           involves a problem  with  device I/O,  hence  this
      231     7712                           breakpoint could prove handy for developers.
      232     7713        */
      233     7714        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:11   
      234     7715    1   TOQ$ADD_IO_BRKPNT: PROC ;
      235     7716
      236     7717           %FPT_ALIB (FPTN    = ADD_BRKPNT,
      237     7718                      LIBNAME = DEBUG_RUN_UNIT,
      238     7719                      CMD     = BREAKPOINT) ;
      239     7736           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      240     7737                      STCLASS = CONSTANT,
      241     7738                      NAME    = %DEBUGGER_NAME) ;
      242     7765    2      DCL BREAKPOINT CHAR (0) CONSTANT CALIGNED INIT
      243     7766    2             ('54 AT TOP$POLTS:TOP$MME_TESTIO:ISSUE_IO;DU IO_ENTRY(TCX),11\O') ;
      244     7767
      245     7768        /* Code */
      246     7769
      247     7770    2      IF TOQ$DCP.PF.STOP_ON_IO
      248     7771    2      THEN CALL M$ALIB (ADD_BRKPNT) ALTRET (ERROR) ;
      249     7772    2      ELSE /* User did not request to stop on IO */ ;
      250     7773    2      RETURN ;
      251     7774
      252     7775    2   ERROR:
      253     7776    2      CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;
      254     7777
      255     7778    2   END TOQ$ADD_IO_BRKPNT ;
      256     7779        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:12   
      257     7780        /*I*  NAME:        TOQ$SUBEXEC_MSG
      258     7781              AUTHOR:      Scott S. Sheppard
      259     7782              PURPOSE:     Identifies Subexecutive
      260     7783              INTERFACE:   TOT$OCTASC
      261     7784                           TOT$CONSOLE_OUT
      262     7785              DATA:        TOQ$DCP.SE.EDIT_NAME - input
      263     7786                           TOQ$DCP.SE.ADDRESS - input
      264     7787                           TOQ$DCP.SE.CATALOG - input
      265     7788              DESCRIPTION: This procedure writes a message to the user's
      266     7789                           terminal identifying the subexecutive.
      267     7790        */
      268     7791
      269     7792    1   TOQ$SUBEXEC_MSG: PROC ;
      270     7793
      271     7794    2      DCL STRING              CHAR (12) CALIGNED ;
      272     7795    2      DCL 1 MESSAGE STATIC,
      273     7796    2            2 SUBX  CHAR (1) CALIGNED,
      274     7797    2            2 *     CHAR (0) CALIGNED INIT ('OLTS '),
      275     7798    2            2 *     CHAR (0) CALIGNED INIT ('Subexecutive '),
      276     7799    2            2 NAME  CHAR (4) CALIGNED,
      277     7800    2            2 *     CHAR (0) CALIGNED INIT (' ('),
      278     7801    2            2 ID    CHAR (1) CALIGNED,
      279     7802    2            2 *     CHAR (0) CALIGNED INIT ('OLTCM)'),
      280     7803    2            2 *     CHAR (0) CALIGNED INIT (' loaded at .'),
      281     7804    2            2 ADRS  CHAR (6) CALIGNED ;
      282     7805           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:13   
      283     7806        /* Code */
      284     7807
      285     7808    2      MESSAGE.SUBX = SUBSTR (TOQ$DCP.SE.CATALOG, 0, 1) ;
      286     7809    2      MESSAGE.NAME = TOQ$DCP.SE.EDIT_NAME ;
      287     7810    2      MESSAGE.ID = MESSAGE.SUBX ;
      288     7811    2      CALL TOT$OCTASC (STRING, TOQ$DCP.SE.ADDRESS) ;
      289     7812    2      MESSAGE.ADRS = SUBSTR (STRING, 6, 6) ;
      290     7813
      291     7814    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;
      292     7815    2      CALL TOT$CONSOLE_OUT ;
      293     7816
      294     7817    2   END TOQ$SUBEXEC_MSG ;
      295     7818        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:14   
      296     7819        /*I*  NAME:        TOQ$TEST_PAGE_MSG
      297     7820              AUTHOR:      Scott S. Sheppard
      298     7821              PURPOSE:     Identifies Test Page
      299     7822              INTERFACE:   TOT$OCTASC
      300     7823                           TOT$CONSOLE_OUT
      301     7824              DATA:        TOQ$DCP.TP.EDIT_NAME - input
      302     7825                           TOQ$DCP.TP.GECALL_NAME - input
      303     7826                           TOQ$DCP.TP.ADDRESS - input
      304     7827                           TOQ$DCP.SE.CATALOG - input
      305     7828              DESCRIPTION: This procedure writes a message to the user's
      306     7829                           terminal identifying the test page.
      307     7830        */
      308     7831
      309     7832    1   TOQ$TEST_PAGE_MSG: PROC ;
      310     7833
      311     7834    2      DCL STRING              CHAR (12) CALIGNED ;
      312     7835    2      DCL 1 MESSAGE STATIC,
      313     7836    2            2 SUBX  CHAR (1) CALIGNED,
      314     7837    2            2 *     CHAR (0) CALIGNED INIT ('OLTS '),
      315     7838    2            2 *     CHAR (0) CALIGNED INIT ('test page '),
      316     7839    2            2 NAME  CHAR (4) CALIGNED,
      317     7840    2            2 *     CHAR (0) CALIGNED INIT (' ('),
      318     7841    2            2 GCL   CHAR (6) CALIGNED,
      319     7842    2            2 *     CHAR (0) CALIGNED INIT (')'),
      320     7843    2            2 *     CHAR (0) CALIGNED INIT (' loaded at .'),
      321     7844    2            2 ADRS  CHAR (6) CALIGNED ;
      322     7845           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:15   
      323     7846        /* Code */
      324     7847
      325     7848    2      MESSAGE.SUBX = SUBSTR (TOQ$DCP.SE.CATALOG, 0, 1) ;
      326     7849    2      MESSAGE.NAME = TOQ$DCP.TP.EDIT_NAME ;
      327     7850    2      MESSAGE.GCL = TOQ$DCP.TP.GECALL_NAME ;
      328     7851    2      CALL TOT$OCTASC (STRING, TOQ$DCP.TP.ADDRESS) ;
      329     7852    2      MESSAGE.ADRS = SUBSTR (STRING, 6, 6) ;
      330     7853
      331     7854    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;
      332     7855    2      CALL TOT$CONSOLE_OUT ;
      333     7856    2      RETURN ;
      334     7857
      335     7858    2   END TOQ$TEST_PAGE_MSG ;
      336     7859        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:16   
      337     7860        /*I* NAME:         TOQ$ADD_DELTA_DEF
      338     7861             AUTHOR:       Scott S. Sheppard
      339     7862             PURPOSE:      forms symbolic definition
      340     7863             INTERFACE:    M$ALIB Monitor Service
      341     7864                           TOX$ERROR
      342     7865             PARAMETERS:   SYMBOL - input
      343     7866                           VALUE - input
      344     7867             DATA:         No external data accessed.
      345     7868                           Defined symbol added in DELTA
      346     7869             DESCRIPTION:  This  procedure adds a  symbolic definition to the
      347     7870                           DELTA symbolic list. This name is the EDIT NAME of
      348     7871                           the  Subexecutive  or  Test  Page  and  the  value
      349     7872                           associated  with  each  name  is the starting load
      350     7873                           address.  Once  added,  the  starting address of a
      351     7874                           program  may  be  referenced  by its symbolic name
      352     7875                           instead  of  its  more  complicated octal location
      353     7876                           value.
      354     7877        */
      355     7878
      356     7879    1   TOQ$ADD_DELTA_DEF: PROC (SYMBOL, VALUE) ;
      357     7880
      358     7881    2      DCL SYMBOL    CHAR (4) CALIGNED ;
      359     7882    2      DCL VALUE     UBIN WORD ALIGNED ;
      360     7883           %FPT_ALIB (FPTN    = ADD_DELTA_DEF,
      361     7884                      LIBNAME = DEBUG_RUN_UNIT,
      362     7885                      CMD     = DEFINITION) ;
      363     7902           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      364     7903                      STCLASS = CONSTANT,
      365     7904                      NAME    = %DEBUGGER_NAME) ;
      366     7931    2      DCL 1 DEFINITION STATIC,
      367     7932    2            2 *      CHAR (0) CALIGNED INIT ('DEF '),
      368     7933    2            2 SYMBOL CHAR (4) CALIGNED,
      369     7934    2            2 *      CHAR (0) CALIGNED INIT (' .'),
      370     7935    2            2 VALUE  CHAR (12) CALIGNED ;
      371     7936           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:17   
      372     7937        /* Code */
      373     7938
      374     7939    2      DEFINITION.SYMBOL = SYMBOL ;
      375     7940    2      CALL TOT$OCTASC (DEFINITION.VALUE, VALUE) ;
      376     7941    2      CALL M$ALIB (ADD_DELTA_DEF) WHENRETURN
      377     7942    3           DO ;
      378     7943    3              RETURN ;
      379     7944    3           END /* WHENRETURN */ ;
      380     7945    2      WHENALTRETURN
      381     7946    3           DO ;
      382     7947    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;
      383     7948    3           END /* WHENALTRETURN */ ;
      384     7949
      385     7950    2   END TOQ$ADD_DELTA_DEF ;
      386     7951        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:18   
      387     7952        /*I*  NAME:        TOQ$ENTER_GELBAR_MSG
      388     7953              AUTHOR:      Scott S. Sheppard
      389     7954              PURPOSE:     Signifies Test Page going into GELBAR
      390     7955              INTERFACE:   TOT$OCTASC
      391     7956                           TOT$CONSOLE_OUT
      392     7957              DATA:        TOQ$DCP.TP.EDIT_NAME - input
      393     7958                           TOQ$DCP.BR.IC - input
      394     7959             DESCRIPTION:  This  procedure  notifies  the  user that the test
      395     7960                           page  under  DEBUG  is  going  into  execution  by
      396     7961                           entering   into  GELBAR  mode.    Test  pages  are
      397     7962                           executed with GELBAR mode in effect, however, when
      398     7963                           a  fault  occurs,  GELBAR  mode  is broken and the
      399     7964                           fault  is handled.   To begin  re-execution of the
      400     7965                           test,  GELBAR  mode  must  be  re-invoked  by  the
      401     7966                           controlling Subexecutive.
      402     7967        */
      403     7968        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:19   
      404     7969    1   TOQ$ENTER_GELBAR_MSG: PROC ;
      405     7970
      406     7971    2      DCL STRING              CHAR (12) CALIGNED ;
      407     7972    2      DCL 1 MESSAGE STATIC,
      408     7973    2            2 NAME  CHAR (4) CALIGNED,
      409     7974    2            2 *     CHAR (0) CALIGNED INIT (' entering GELBAR mode at '),
      410     7975    2            2 *     CHAR (0) CALIGNED INIT ('GELBAR address .'),
      411     7976    2            2 IC    CHAR (6) CALIGNED ;
      412     7977
      413     7978        /* Code */
      414     7979
      415     7980    2      MESSAGE.NAME = TOQ$DCP.TP.EDIT_NAME ;
      416     7981    2      CALL TOT$OCTASC (STRING, TOQ$DCP.BR.IC) ;
      417     7982    2      MESSAGE.IC = SUBSTR (STRING, 6, 6) ;
      418     7983
      419     7984    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;
      420     7985    2      CALL TOT$CONSOLE_OUT ;
      421     7986    2      RETURN ;
      422     7987
      423     7988    2   END TOQ$ENTER_GELBAR_MSG ;
      424     7989        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:20   
      425     7990        /*I* NAME:         TOQ$ADD_1ST_BRKPNT
      426     7991             AUTHOR:       Scott S. Sheppard
      427     7992             PURPOSE:      provide a means to stop in GELBAR
      428     7993             INTERFACE:    M$ALIB Monitor Service
      429     7994                           TOX$ERROR
      430     7995             PARAMETERS:   EDIT_NAME - input
      431     7996                           ADDRESS - input
      432     7997             DATA:         No external data accessed.
      433     7998                           Temporary breakpoint output to DELTA
      434     7999             DESCRIPTION:  This  procedure sets a  breakpoint so control will
      435     8000                           stop  at the  first instruction  of the  test page
      436     8001                           after  GELBAR  mode   has  been  (re)invoked.  The
      437     8002                           breakpoint  uses the  named DEF  for the test page
      438     8003                           and the offset found in the Base Register IC. This
      439     8004                           breakpoint kills itself after it is encountered.
      440     8005        */
      441     8006        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:21   
      442     8007    1   TOQ$ADD_1ST_BRKPNT: PROC (EDIT_NAME, ADDRESS) ;
      443     8008
      444     8009    2      DCL EDIT_NAME   CHAR (4) CALIGNED ;
      445     8010    2      DCL ADDRESS     UBIN WORD ALIGNED ;
      446     8011           %FPT_ALIB (FPTN    = ADD_TEMP_BRKPNT,
      447     8012                      LIBNAME = DEBUG_RUN_UNIT,
      448     8013                      CMD     = BREAKPOINT) ;
      449     8030           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      450     8031                      STCLASS = CONSTANT,
      451     8032                      NAME    = %DEBUGGER_NAME) ;
      452     8059    2      DCL 1 BREAKPOINT STATIC,
      453     8060    2            2 *       CHAR (0) CALIGNED INIT ('99 AT '),
      454     8061    2            2 NAME    CHAR (4) CALIGNED,
      455     8062    2            2 *       CHAR (0) CALIGNED INIT ('+.'),
      456     8063    2            2 IC      CHAR (12) CALIGNED,
      457     8064    2            2 *       CHAR (0) CALIGNED INIT (';K99') ;
      458     8065
      459     8066        /* Code */
      460     8067
      461     8068    2      BREAKPOINT.NAME = EDIT_NAME ;
      462     8069    2      CALL TOT$OCTASC (BREAKPOINT.IC, ADDRESS) ;
      463     8070    2      CALL M$ALIB (ADD_TEMP_BRKPNT) WHENRETURN
      464     8071    3           DO ;
      465     8072    3              RETURN ;
      466     8073    3           END /* WHENRETURN */ ;
      467     8074    2      WHENALTRETURN
      468     8075    3           DO ;
      469     8076    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;
      470     8077    3           END /* WHENALTRETURN */ ;
      471     8078
      472     8079    2   END TOQ$ADD_1ST_BRKPNT ;
      473     8080        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:22   
      474     8081        /*I* NAME:         TOQ$SET_GELBARRED_FLAG
      475     8082             AUTHOR:       Scott S. Sheppard
      476     8083             PURPOSE:      controls setting/resetting of GELBARRED flag
      477     8084             INTERFACE:    None called.
      478     8085             PARAMETERS:   None passed.
      479     8086             DATA:         TOQ$DCP.PF.REASON - input
      480     8087                           TOQ$DCP.PF.STOP_ON_GELBARS - input
      481     8088                           TOQ$DCP.PF.GELBARRED - output
      482     8089             DESCRIPTION:  This procedure sets a flag, TOQ$DCP.PF.GELBARRED,
      483     8090                           which determines if a breakpoint should be set on
      484     8091                           the next invocation of  GELBAR  for the test page
      485     8092                           under DEBUG.  On a GECALL, the flag is always set
      486     8093                           to TRUE so  DELTA  will  stop  on  the very first
      487     8094                           GELBAR invocation for the page.    The setting of
      488     8095                           the flag on successive GELBARs depends on whether
      489     8096                           the user has requested to stop on all GELBARS.
      490     8097        */
      491     8098
      492     8099    1   TOQ$SET_GELBARRED_FLAG: PROC ;
      493     8100
      494     8101        /* Code */
      495     8102
      496     8103    3      DO CASE (TOQ$DCP.PF.REASON) ;
      497     8104    3         CASE (%GECALL) ;
      498     8105    3            TOQ$DCP.PF.GELBARRED = %FALSE ;
      499     8106    3         CASE (%GELBAR) ;
      500     8107    3            IF TOQ$DCP.PF.STOP_ON_GELBARS
      501     8108    3            THEN /* leave set to FALSE so DELTA stops next time. */ ;
      502     8109    3            ELSE TOQ$DCP.PF.GELBARRED = %TRUE ;
      503     8110    3      END /* CASE */ ;
      504     8111    2      RETURN ;
      505     8112
      506     8113    2   END TOQ$SET_GELBARRED_FLAG ;
      507     8114        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:23   
      508     8115        /*I* NAME:         TOQ$KILL_DELTA
      509     8116             AUTHOR:       Scott S. Sheppard
      510     8117             PURPOSE:      removes ALL DELTA directives
      511     8118             INTERFACE:    M$ALIB Monitor Service
      512     8119                           TOX$ERROR
      513     8120             PARAMETERS:   None passed.
      514     8121             DATA:         No external data accessed.
      515     8122                           All DELTA directives (rules, ats, defs) removed
      516     8123             DESCRIPTION:  This procedure KILLs ALL DELTA directives. This is
      517     8124                           necessary  so that  any breakpoints  set in a test
      518     8125                           page  are  removed  upon  termination  of the test
      519     8126                           page.   TOLTS  reuses   those  same   pages  (same
      520     8127                           addresses)  for  subsequent  tests.  Having  DELTA
      521     8128                           remember  an old  breakpoint for  a new test would
      522     8129                           cause the second  test to execute incorrectly when
      523     8130                           the  breakpoint   was  encountered.  The  replaced
      524     8131                           instruction  from  the  first  test  page would be
      525     8132                           executed instead.
      526     8133        */
      527     8134        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:24   
      528     8135    1   TOQ$KILL_DELTA: PROC ;
      529     8136
      530     8137           %FPT_ALIB (FPTN    = KILL_DELTA,
      531     8138                      LIBNAME = DEBUG_RUN_UNIT,
      532     8139                      CMD     = KILL) ;
      533     8156           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      534     8157                      STCLASS = CONSTANT,
      535     8158                      NAME    = %DEBUGGER_NAME) ;
      536     8185    2      DCL KILL  CHAR (0) CONSTANT CALIGNED INIT ('KILL DELTA') ;
      537     8186
      538     8187        /* Code */
      539     8188
      540     8189    2      CALL M$ALIB (KILL_DELTA) WHENRETURN
      541     8190    3           DO ;
      542     8191    3              RETURN ;
      543     8192    3           END /* WHENRETURN */ ;
      544     8193    2      WHENALTRETURN
      545     8194    3           DO ;
      546     8195    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;
      547     8196    3           END /* WHENALTRETURN */ ;
      548     8197
      549     8198    2   END TOQ$KILL_DELTA ;
      550     8199        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:25   
      551     8200        /*I* NAME:         TOQ$MME_MSG
      552     8201             AUTHOR:       Scott S. Sheppard
      553     8202             PURPOSE:      Displays MME to be processed
      554     8203             INTERFACE:    TOQ$GET_GCOS_MME_NAME
      555     8204                           TOQ$GET_TND_MME_NAME
      556     8205                           TOT$CONSOLE_OUT
      557     8206                           BINXCHAR
      558     8207             PARAMETERS:   None passed.
      559     8208             DATA:         TOQ$DCP.MME - input
      560     8209             DESCRIPTION:  When the  SCREAMING  MMES option is entered on
      561     8210                           a DEBUG test  request, this procedure prints a
      562     8211                           brief  message  to  identify  the  MME  to  be
      563     8212                           processed.
      564     8213        */
      565     8214        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:26   
      566     8215    1   TOQ$MME_MSG: PROC ;
      567     8216
      568     8217    2      DCL 1 MESSAGE STATIC,
      569     8218    2            2 *       CHAR (0) CALIGNED INIT ('   MME '),
      570     8219    2            2 NAME    CHAR (6) CALIGNED,
      571     8220    2            2 *       CHAR (0) CALIGNED INIT ('  number '),
      572     8221    2            2 VALUE   CHAR (4) CALIGNED ;
      573     8222
      574     8223        /* Code */
      575     8224
      576     8225    2      IF TOQ$DCP.MME > 0
      577     8226    2      THEN CALL TOQ$GET_GCOS_MME_NAME (TOQ$DCP.MME, MESSAGE.NAME) ;
      578     8227    2      ELSE CALL TOQ$GET_TND_MME_NAME (-TOQ$DCP.MME, MESSAGE.NAME) ;
      579     8228    2      CALL BINXCHAR (MESSAGE.VALUE, TOQ$DCP.MME) ;
      580     8229
      581     8230    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;
      582     8231    2      CALL TOT$CONSOLE_OUT ;
      583     8232    2      RETURN ;
      584     8233
      585     8234        /* END TOQ$MME_MSG */
      586     8235        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:27   
      587     8236        /*I* NAME:         TOQ$GET_GCOS_MME_NAME
      588     8237             AUTHOR:       Scott S. Sheppard
      589     8238             PURPOSE:      Determines MME name
      590     8239             INTERFACE:    None called.
      591     8240             PARAMETERS:   MME_NUMBER - input
      592     8241                           MME_NAME - output
      593     8242             DATA:         No external data accessed.
      594     8243             DESCRIPTION:  This procedure performs a simple case statement
      595     8244                           in order to return the name of the GCOS MME.
      596     8245        */
      597     8246
      598     8247    2   TOQ$GET_GCOS_MME_NAME: PROC (MME_NUMBER, MME_NAME) ;
      599     8248
      600     8249    3      DCL MME_NUMBER  UBIN WORD ALIGNED ;
      601     8250    3      DCL MME_NAME    CHAR (6) CALIGNED ;
      602     8251
      603     8252        /* Code */
      604     8253
      605     8254    4      DO CASE (MME_NUMBER) ;
      606     8255    4         CASE (%GECALL) ;
      607     8256    4            MME_NAME = 'GECALL' ;
      608     8257    4         CASE (%GEENDC) ;
      609     8258    4            MME_NAME = 'GEENDC' ;
      610     8259    4         CASE (%GEINOS) ;
      611     8260    4            MME_NAME = 'GEINOS' ;
      612     8261    4         CASE (%GELBAR) ;
      613     8262    4            MME_NAME = 'GELBAR' ;
      614     8263    4         CASE (%GEMORE) ;
      615     8264    4            MME_NAME = 'GEMORE' ;
      616     8265    4         CASE (%GEMREL) ;
      617     8266    4            MME_NAME = 'GEMREL' ;
      618     8267    4         CASE (%GERELC) ;
      619     8268    4            MME_NAME = 'GERELC' ;
      620     8269    4         CASE (%GEROAD) ;
      621     8270    4            MME_NAME = 'GEROAD' ;
      622     8271    4         CASE (%GEROUT) ;
      623     8272    4            MME_NAME = 'GEROUT' ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:28   
      624     8273    4         CASE (%GESNAP) ;
      625     8274    4            MME_NAME = 'GESNAP' ;
      626     8275    4         CASE (%GETIME) ;
      627     8276    4            MME_NAME = 'GETIME' ;
      628     8277    4         CASE (%GEWAKE) ;
      629     8278    4            MME_NAME = 'GEWAKE' ;
      630     8279    4         CASE (ELSE) ;
      631     8280    4            MME_NAME = 'badMME' ;
      632     8281    4      END /* CASE */ ;
      633     8282    3      RETURN ;
      634     8283
      635     8284    3   END TOQ$GET_GCOS_MME_NAME ;
      636     8285        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:29   
      637     8286        /*I* NAME:         TOQ$GET_TND_MME_NAME
      638     8287             AUTHOR:       Scott S. Sheppard
      639     8288             PURPOSE:      Determines MME name
      640     8289             INTERFACE:    None called.
      641     8290             PARAMETERS:   MME_NUMBER - input
      642     8291                           MME_NAME - output
      643     8292             DATA:         No external data accessed.
      644     8293             DESCRIPTION:  This procedure performs a simple case statement
      645     8294                           in order to return the name of the TND MME.
      646     8295        */
      647     8296
      648     8297    2   TOQ$GET_TND_MME_NAME: PROC (MME_NUMBER, MME_NAME) ;
      649     8298
      650     8299    3      DCL MME_NUMBER  UBIN WORD ALIGNED ;
      651     8300    3      DCL MME_NAME    CHAR (6) CALIGNED ;
      652     8301
      653     8302        /* Code */
      654     8303
      655     8304    4      DO CASE (MME_NUMBER) ;
      656     8305    4         CASE (%ABSTIM) ;
      657     8306    4            MME_NAME = 'ABSTIM' ;
      658     8307    4         CASE (%ACCWRT) ;
      659     8308    4            MME_NAME = 'ACCWRT' ;
      660     8309    4         CASE (%ALCMCA) ;
      661     8310    4            MME_NAME = 'ALCMCA' ;
      662     8311    4         CASE (%ALLOCR) ;
      663     8312    4            MME_NAME = 'ALLOCR' ;
      664     8313    4         CASE (%ASGPAT) ;
      665     8314    4            MME_NAME = 'ASGPAT' ;
      666     8315    4         CASE (%CATADT) ;
      667     8316    4            MME_NAME = 'CATADT' ;
      668     8317    4         CASE (%CHANTM) ;
      669     8318    4            MME_NAME = 'CHANTM' ;
      670     8319    4         CASE (%CLEARQ) ;
      671     8320    4            MME_NAME = 'CLEARQ' ;
      672     8321    4         CASE (%COINIT) ;
      673     8322    4            MME_NAME = 'COINIT' ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:30   
      674     8323    4         CASE (%COMWD) ;
      675     8324    4            MME_NAME = 'COMWD ' ;
      676     8325    4         CASE (%CONTML) ;
      677     8326    4            MME_NAME = 'CONTML' ;
      678     8327    4         CASE (%CPUASG) ;
      679     8328    4            MME_NAME = 'CPUASG' ;
      680     8329    4         CASE (%CPUREL) ;
      681     8330    4            MME_NAME = 'CPUREL' ;
      682     8331    4         CASE (%DATADT) ;
      683     8332    4            MME_NAME = 'DATADT' ;
      684     8333    4         CASE (%DEALCP) ;
      685     8334    4            MME_NAME = 'DEALCP' ;
      686     8335    4         CASE (%DISPRT) ;
      687     8336    4            MME_NAME = 'DISPRT' ;
      688     8337    4         CASE (%EXPDEV) ;
      689     8338    4            MME_NAME = 'EXPDEV' ;
      690     8339    4         CASE (%FEPTYP) ;
      691     8340    4            MME_NAME = 'FEPTYP' ;
      692     8341    4         CASE (%FREEZE) ;
      693     8342    4            MME_NAME = 'FREEZE' ;
      694     8343    4         CASE (%GEPROC) ;
      695     8344    4            MME_NAME = 'GEPROC' ;
      696     8345    4         CASE (%GETCSC) ;
      697     8346    4            MME_NAME = 'GETCSC' ;
      698     8347    4         CASE (%GETLIN) ;
      699     8348    4            MME_NAME = 'GETLIN' ;
      700     8349    4         CASE (%HISREG) ;
      701     8350    4            MME_NAME = 'HISREG' ;
      702     8351    4         CASE (%HUNGTM) ;
      703     8352    4            MME_NAME = 'HUNGTM' ;
      704     8353    4         CASE (%IOCONS) ;
      705     8354    4            MME_NAME = 'IOCONS' ;
      706     8355    4         CASE (%IPCWDT) ;
      707     8356    4            MME_NAME = 'IPCWDT' ;
      708     8357    4         CASE (%LODIMG) ;
      709     8358    4            MME_NAME = 'LODIMG' ;
      710     8359    4         CASE (%LODVFC) ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:31   
      711     8360    4            MME_NAME = 'LODVFC' ;
      712     8361    4         CASE (%LOGFEP) ;
      713     8362    4            MME_NAME = 'LOGFEP' ;
      714     8363    4         CASE (%LPWDT) ;
      715     8364    4            MME_NAME = 'LPWDT ' ;
      716     8365    4         CASE (%PACMAN) ;
      717     8366    4            MME_NAME = 'PACMAN' ;
      718     8367    4         CASE (%POINIT) ;
      719     8368    4            MME_NAME = 'POINIT' ;
      720     8369    4         CASE (%PROCTM) ;
      721     8370    4            MME_NAME = 'PROCTM' ;
      722     8371    4         CASE (%PRTRAN) ;
      723     8372    4            MME_NAME = 'PRTRAN' ;
      724     8373    4         CASE (%READIO) ;
      725     8374    4            MME_NAME = 'READIO' ;
      726     8375    4         CASE (%RELLNK) ;
      727     8376    4            MME_NAME = 'RELLNK' ;
      728     8377    4         CASE (%RELEAS) ;
      729     8378    4            MME_NAME = 'RELEAS' ;
      730     8379    4         CASE (%RESPEC) ;
      731     8380    4            MME_NAME = 'RESPEC' ;
      732     8381    4         CASE (%RLSMPC) ;
      733     8382    4            MME_NAME = 'RLSMPC' ;
      734     8383    4         CASE (%RETCPU) ;
      735     8384    4            MME_NAME = 'RETCPU' ;
      736     8385    4         CASE (%RETRY) ;
      737     8386    4            MME_NAME = 'RETRY ' ;
      738     8387    4         CASE (%RLSPAT) ;
      739     8388    4            MME_NAME = 'RLSPAT' ;
      740     8389    4         CASE (%SCTCMP) ;
      741     8390    4            MME_NAME = 'SCTCMP' ;
      742     8391    4         CASE (%SCUASG) ;
      743     8392    4            MME_NAME = 'SCUASG' ;
      744     8393    4         CASE (%SCUREL) ;
      745     8394    4            MME_NAME = 'SCUREL' ;
      746     8395    4         CASE (%SETPR2) ;
      747     8396    4            MME_NAME = 'SETPR2' ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:32   
      748     8397    4         CASE (%SETPRT) ;
      749     8398    4            MME_NAME = 'SETPRT' ;
      750     8399    4         CASE (%SETTYP) ;
      751     8400    4            MME_NAME = 'SETTYP' ;
      752     8401    4         CASE (%TADIOD) ;
      753     8402    4            MME_NAME = 'TADIOD' ;
      754     8403    4         CASE (%TAKCPU) ;
      755     8404    4            MME_NAME = 'TAKCPU' ;
      756     8405    4         CASE (%TERMIN) ;
      757     8406    4            MME_NAME = 'TERMIN' ;
      758     8407    4         CASE (%TESTIO) ;
      759     8408    4            MME_NAME = 'TESTIO' ;
      760     8409    4         CASE (%TOLDIS) ;
      761     8410    4            MME_NAME = 'TOLDIS' ;
      762     8411    4         CASE (%TOLGON) ;
      763     8412    4            MME_NAME = 'TOLGON' ;
      764     8413    4         CASE (%TOLTIN) ;
      765     8414    4            MME_NAME = 'TOLTIN' ;
      766     8415    4         CASE (%TRACIO) ;
      767     8416    4            MME_NAME = 'TRACIO' ;
      768     8417    4         CASE (%UNFREZ) ;
      769     8418    4            MME_NAME = 'UNFREZ' ;
      770     8419    4         CASE (%UNSPEC) ;
      771     8420    4            MME_NAME = 'UNSPEC' ;
      772     8421    4         CASE (%WRDUMP) ;
      773     8422    4            MME_NAME = 'WRDUMP' ;
      774     8423    4         CASE (ELSE) ;
      775     8424    4            MME_NAME = 'badMME' ;
      776     8425    4      END /* CASE */ ;
      777     8426    3      RETURN ;
      778     8427
      779     8428    3   END TOQ$GET_TND_MME_NAME ;
      780     8429    2   END TOQ$MME_MSG ;
      781     8430    1   END TOQ$DEBUG ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:33   
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOQ$DEBUG.

   Procedure TOQ$DEBUG requires 943 words for executable code.
   Procedure TOQ$DEBUG requires 14 words of local(AUTO) storage.

    No errors detected in file TOQ$DEBUG.:E05TSI    .

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:34   

 Object Unit name= TOQ$DEBUG                                  File name= TOQ$DEBUG.:E05TOU
 UTS= JUL 30 '97 06:29:54.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   137    211  TOQ$DEBUG
    2  RoData even  UTS    253    375  TOQ$DEBUG
    3   Proc  even  none   943   1657  TOQ$DEBUG
    4  RoData even  none    26     32  TOQ$DEBUG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  TOQ$DEBUG

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      1  TOQ$DCP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 TOX$ERROR
         yes           Std       2 TOT$OCTASC
         yes           Std       0 TOT$CONSOLE_OUT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:35   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B$TCB$                                CONSOLE_FPT
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:36   


        1        1        /*M* TOQ$DEBUG   TOLTS Query On-Line Subexec/Test Page DEBUGger */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10
       11       11        /*P*  NAME:        TOQ$DEBUG
       12       12              AUTHORS:     Curtis D. Andes
       13       13                           Scott S. Sheppard
       14       14              PURPOSE:     DELTA / TOLTS Interface for DEBUG TEST requests
       15       15              DESCRIPTION: This program is the Total On-Line Testing System
       16       16                           debug routine. It is invoked when TOLTS receives
       17       17                           the ???DEBUG [TEST] <request>. This program sets
       18       18                           up initial and  handy breakpoints  for the  CP-6
       19       19                           Universal  Debugger,  DELTA  and displays useful
       20       20                           TOLTS related information.
       21       21              LAST UPDATE: 10/03/83
       22       22              REFERENCE:   CP-6 Release C0L0
       23       23        */
       24       24        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:37   
       25       25        /*F*  NAME:        TOQ$DEBUG
       26       26              DESCRIPTION: Procedure Nesting Hierarchy
       27       27
       28       28              TOQ$DEBUG: procedure
       29       29                 TOQ$ADD_SCHEMA_BYPASS_RULES: procedure
       30       30                 TOQ$ADD_CONTROL_RULES: procedure
       31       31                 TOQ$ADD_IO_BRKPNT: procedure
       32       32                 TOQ$TEST_PAGE_MSG: procedure
       33       33                 TOQ$SUBEXEC_MSG: procedure
       34       34                 TOQ$ADD_DELTA_DEF: procedure (SYMBOL, VALUE)
       35       35                 TOQ$ENTER_GELBAR_MSG: procedure
       36       36                 TOQ$ADD_1ST_BRKPNT: procedure
       37       37                 TOQ$ADD_1ST_BRKPNT: procedure (EDIT_NAME, ADDRESS)
       38       38                 TOQ$SET_GELBARRED_FLAG: procedure
       39       39                 TOQ$KILL_DELTA: procedure
       40       40                 TOQ$MME_MSG: procedure
       41       41                    TOQ$GET_GCOS_MME_NAME: procedure (MME_NUMBER, MME_NAME)
       42       42                    TOQ$GET_TND_MME_NAME: procedure (MME_NUMBER, MME_NAME)
       43       43        */
       44       44        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:38   
       45       45        TOQ$DEBUG: PROC ;

     45  3 000000   000000 700200 xent  TOQ$DEBUG    TSX0  ! X66_AUTO_0
         3 000001   000016 000000                    ZERO    14,0

       46       46
       47       47        /* Include Files */
       48       48
       49       49           %INCLUDE CP_6 ;                /* M$ Service Routines */
       50     5608           %INCLUDE TOT_TOLTS_M ;         /* TOLTS Equations, Macros */
       51     6726           %INCLUDE TO_PERR_C ;           /* TOLTS E$ Error EQU's */
       52     7311
       53     7312        /* Variables */
       54     7313
       55     7314           %B$TCB ;
       56     7317           %B$EXCFR ;
       57     7335           %VLP_ERRCODE (FPTN = TOQ_ERROR_CODE,
       58     7336                         FCG  = 'TO',
       59     7337                         MID  = 'Q',
       60     7338                         SEV  = 0) ;
       61     7383
       62     7384        /* External Variables */
       63     7385
       64     7386    1      DCL B$TCB$      PTR SYMREF ;
       65     7387           %FPT_WRITE (FPTN    = CONSOLE_FPT,
       66     7388                       STCLASS = SYMREF) ;
       67     7419           %TOQ$DCP (STCLASS = "STATIC SYMDEF") ;
       68     7451
       69     7452        /* External Entry Points */
       70     7453
       71     7454    1      DCL TOT$CONSOLE_OUT            ENTRY ;
       72     7455    1      DCL TOT$OCTASC                 ENTRY (2) ;
       73     7456    1      DCL TOX$ERROR                  ENTRY (1) ;
       74     7457           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:39   
       75     7458    2      DO CASE (TOQ$DCP.PF.REASON) ;

   7458  3 000002   000001 220000 1                  LDX0    TOQ$DCP
         3 000003   000777 360003                    ANX0    511,DU
         3 000004   000044 100003                    CMPX0   36,DU
         3 000005   000007 602010 3                  TNC     s:7458+5,X0
         3 000006   000154 710000 3                  TRA     s:7487
         3 000007   000151 710000 3                  TRA     s:7485
         3 000010   000053 710000 3                  TRA     s:7460
         3 000011   000154 710000 3                  TRA     s:7487
         3 000012   000154 710000 3                  TRA     s:7487
         3 000013   000154 710000 3                  TRA     s:7487
         3 000014   000154 710000 3                  TRA     s:7487
         3 000015   000154 710000 3                  TRA     s:7487
         3 000016   000154 710000 3                  TRA     s:7487
         3 000017   000154 710000 3                  TRA     s:7487
         3 000020   000154 710000 3                  TRA     s:7487
         3 000021   000154 710000 3                  TRA     s:7487
         3 000022   000154 710000 3                  TRA     s:7487
         3 000023   000154 710000 3                  TRA     s:7487
         3 000024   000154 710000 3                  TRA     s:7487
         3 000025   000154 710000 3                  TRA     s:7487
         3 000026   000154 710000 3                  TRA     s:7487
         3 000027   000154 710000 3                  TRA     s:7487
         3 000030   000154 710000 3                  TRA     s:7487
         3 000031   000103 710000 3                  TRA     s:7471
         3 000032   000154 710000 3                  TRA     s:7487
         3 000033   000154 710000 3                  TRA     s:7487
         3 000034   000154 710000 3                  TRA     s:7487
         3 000035   000154 710000 3                  TRA     s:7487
         3 000036   000154 710000 3                  TRA     s:7487
         3 000037   000154 710000 3                  TRA     s:7487
         3 000040   000154 710000 3                  TRA     s:7487
         3 000041   000154 710000 3                  TRA     s:7487
         3 000042   000154 710000 3                  TRA     s:7487
         3 000043   000154 710000 3                  TRA     s:7487
         3 000044   000154 710000 3                  TRA     s:7487
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:40   
         3 000045   000154 710000 3                  TRA     s:7487
         3 000046   000116 710000 3                  TRA     s:7475
         3 000047   000154 710000 3                  TRA     s:7487
         3 000050   000154 710000 3                  TRA     s:7487
         3 000051   000154 710000 3                  TRA     s:7487
         3 000052   000146 710000 3                  TRA     s:7483

       76     7459    2         CASE (%DSC_INIT) ;

       77     7460    2            CALL TOQ$ADD_SCHEMA_BYPASS_RULES ;

   7460  3 000053   000165 701000 3                  TSX1    TOQ$ADD_SCHEMA_BYPASS_RULES
         3 000054   000000 011000                    NOP     0

       78     7461    2            CALL TOQ$ADD_CONTROL_RULES ;

   7461  3 000055   000263 701000 3                  TSX1    TOQ$ADD_CONTROL_RULES
         3 000056   000000 011000                    NOP     0

       79     7462    2            CALL TOQ$ADD_IO_BRKPNT ;

   7462  3 000057   000304 701000 3                  TSX1    TOQ$ADD_IO_BRKPNT
         3 000060   000000 011000                    NOP     0

       80     7463    2            CALL TOQ$ADD_DELTA_DEF (TOQ$DCP.SE.EDIT_NAME, TOQ$DCP.SE.ADDRESS) ;

   7463  3 000061   000000 236000 4                  LDQ     0
         3 000062   200006 756100                    STQ     @EDIT_NAME+1,,AUTO
         3 000063   000001 236000 4                  LDQ     1
         3 000064   200005 756100                    STQ     5,,AUTO
         3 000065   000420 701000 3                  TSX1    TOQ$ADD_DELTA_DEF
         3 000066   000000 011000                    NOP     0

       81     7464    2            IF TOQ$DCP.PF.STOP_AT_SE

   7464  3 000067   000001 236000 1                  LDQ     TOQ$DCP
         3 000070   010000 316003                    CANQ    4096,DU
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:41   
         3 000071   000164 600000 3                  TZE     s:7490

       82     7465    3            THEN DO ;

       83     7466    3                    CALL TOQ$SUBEXEC_MSG ;

   7466  3 000072   000330 701000 3                  TSX1    TOQ$SUBEXEC_MSG
         3 000073   000000 011000                    NOP     0

       84     7467    3                    CALL TOQ$ADD_1ST_BRKPNT (TOQ$DCP.SE.EDIT_NAME, %SPA_LGTH) ;

   7467  3 000074   000003 236000 4                  LDQ     3
         3 000075   200006 756100                    STQ     @EDIT_NAME+1,,AUTO
         3 000076   000001 236000 4                  LDQ     1
         3 000077   200005 756100                    STQ     5,,AUTO
         3 000100   000504 701000 3                  TSX1    TOQ$ADD_1ST_BRKPNT
         3 000101   000000 011000                    NOP     0

       85     7468    3                 END /* THEN */ ;

   7468  3 000102   000164 710000 3                  TRA     s:7490

       86     7469    2            ELSE /* User does not wish to stop at start of SUBEXEC */ ;
       87     7470    2         CASE (%GECALL) ;

       88     7471    2            CALL TOQ$TEST_PAGE_MSG ;

   7471  3 000103   000363 701000 3                  TSX1    TOQ$TEST_PAGE_MSG
         3 000104   000000 011000                    NOP     0

       89     7472    2            CALL TOQ$ADD_DELTA_DEF (TOQ$DCP.TP.EDIT_NAME, TOQ$DCP.TP.ADDRESS) ;

   7472  3 000105   000004 236000 4                  LDQ     4
         3 000106   200006 756100                    STQ     @EDIT_NAME+1,,AUTO
         3 000107   000005 236000 4                  LDQ     5
         3 000110   200005 756100                    STQ     5,,AUTO
         3 000111   000420 701000 3                  TSX1    TOQ$ADD_DELTA_DEF
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:42   
         3 000112   000000 011000                    NOP     0

       90     7473    2            CALL TOQ$SET_GELBARRED_FLAG ;

   7473  3 000113   000540 701000 3                  TSX1    TOQ$SET_GELBARRED_FLAG
         3 000114   000000 011000                    NOP     0
         3 000115   000164 710000 3                  TRA     s:7490

       91     7474    2         CASE (%GELBAR) ;

       92     7475    2            IF TOQ$DCP.BR.ADDRESS = TOQ$DCP.TP.ADDRESS & ~TOQ$DCP.PF.GELBARRED

   7475  3 000116   400000 221003                    LDX1    -131072,DU
         3 000117   000011 236000 1                  LDQ     TOQ$DCP+8
         3 000120   000010 116000 1                  CMPQ    TOQ$DCP+7
         3 000121   000123 600000 3                  TZE     s:7475+5
         3 000122   000000 221003                    LDX1    0,DU
         3 000123   000001 236000 1                  LDQ     TOQ$DCP
         3 000124   000001 736000                    QLS     1
         3 000125   400000 376003                    ANQ     -131072,DU
         3 000126   400000 676003                    ERQ     -131072,DU
         3 000127   200012 756100                    STQ     @MME_NAME+2,,AUTO
         3 000130   000000 636011                    EAQ     0,X1
         3 000131   200012 376100                    ANQ     @MME_NAME+2,,AUTO
         3 000132   000164 600000 3                  TZE     s:7490

       93     7476    3            THEN DO ;

       94     7477    3                    CALL TOQ$ENTER_GELBAR_MSG ;

   7477  3 000133   000454 701000 3                  TSX1    TOQ$ENTER_GELBAR_MSG
         3 000134   000000 011000                    NOP     0

       95     7478    3                    CALL TOQ$ADD_1ST_BRKPNT (TOQ$DCP.TP.EDIT_NAME, TOQ$DCP.BR.IC);

   7478  3 000135   000006 236000 4                  LDQ     6
         3 000136   200006 756100                    STQ     @EDIT_NAME+1,,AUTO
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:43   
         3 000137   000005 236000 4                  LDQ     5
         3 000140   200005 756100                    STQ     5,,AUTO
         3 000141   000504 701000 3                  TSX1    TOQ$ADD_1ST_BRKPNT
         3 000142   000000 011000                    NOP     0

       96     7479    3                    CALL TOQ$SET_GELBARRED_FLAG ;

   7479  3 000143   000540 701000 3                  TSX1    TOQ$SET_GELBARRED_FLAG
         3 000144   000000 011000                    NOP     0

       97     7480    3                 END /* THEN */ ;

   7480  3 000145   000164 710000 3                  TRA     s:7490

       98     7481    2            ELSE /* Do not break on this GELBAR invocation */ ;
       99     7482    2         CASE (%TERMIN) ;

      100     7483    2            CALL TOQ$KILL_DELTA ;

   7483  3 000146   000577 701000 3                  TSX1    TOQ$KILL_DELTA
         3 000147   000000 011000                    NOP     0
         3 000150   000164 710000 3                  TRA     s:7490

      101     7484    2         CASE (%MME_FT) ;

      102     7485    2            CALL TOQ$MME_MSG ;

   7485  3 000151   000620 701000 3                  TSX1    TOQ$MME_MSG
         3 000152   000000 011000                    NOP     0
         3 000153   000164 710000 3                  TRA     s:7490

      103     7486    2         CASE (ELSE) ;

      104     7487    2            TOQ_ERROR_CODE.ERR# = %E$BADREASON ;

   7487  3 000154   000000 236000 1                  LDQ     TOQ_ERROR_CODE
         3 000155   000007 376000 4                  ANQ     7
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:44   
         3 000156   003420 276007                    ORQ     1808,DL
         3 000157   000000 756000 1                  STQ     TOQ_ERROR_CODE

      105     7488    2            CALL TOX$ERROR (TOQ_ERROR_CODE) ;

   7488  3 000160   000010 630400 4                  EPPR0   8
         3 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000162   000000 701000 xent               TSX1    TOX$ERROR
         3 000163   000000 011000                    NOP     0

      106     7489    2      END /* CASE */ ;

      107     7490    1      RETURN ;

   7490  3 000164   000000 702200 xent               TSX2  ! X66_ARET

      108     7491
      109     7492        /* END TOQ$DEBUG */
      110     7493        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:45   
      111     7494        /*I* NAME:         TOQ$ADD_SCHEMA_BYPASS_RULES
      112     7495             AUTHOR:       Scott S. Sheppard
      113     7496             PURPOSE:      DELTA instruction interpretation rules
      114     7497             INTERFACE:    M$UNSHARE Monitor Service
      115     7498                           M$ALIB Monitor Service
      116     7499                           TOX$ERROR
      117     7500             PARAMETERS:   None passed.
      118     7501             DATA:         TOQ$DCP.PF.DEBUG_TOLTS
      119     7502                           TOQ$DCP.PF.STOP_ON_IO
      120     7503                           Breakpoints 50-52 set in DELTA
      121     7504             DESCRIPTION:  This procedure is used to set up the rules for PL6
      122     7505                           schema and assembly  instruction bypass for DELTA.
      123     7506                           These  rules  are  enforced  by  DELTA  by setting
      124     7507                           silent  breakpoints used to  govern when the rules
      125     7508                           apply. When a fault  occurs, SCHEMA and BYPASS are
      126     7509                           turned on so these can be used to step through and
      127     7510                           debug TOLTS  code. After a fault  is handled, upon
      128     7511                           return to the  GMAP module (originally loaded from
      129     7512                           the  deckfile), SCHEMA and  BYPASS are turned off.
      130     7513                           There  are  two  ways  to  return  from  a  fault:
      131     7514                           directly form TOF$FAULTS after an SBAR instruction
      132     7515                           or  when  GELBAR  mode  is  invoked and the ISR is
      133     7516                           shrunken.
      134     7517        */
      135     7518        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:46   
      136     7519    1   TOQ$ADD_SCHEMA_BYPASS_RULES: PROC ;

   7519  3 000165   200004 741300       TOQ$ADD_SCH* STX1  ! 4,,AUTO

      137     7520
      138     7521           %FPT_UNSHARE (FPTN = RESERVE_TOLTS,
      139     7522                         LIB  = YES,
      140     7523                         PROG = YES) ;
      141     7538           %FPT_ALIB (FPTN    = ADD_RULES,
      142     7539                      LIBNAME = DEBUG_RUN_UNIT) ;
      143     7556           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      144     7557                      STCLASS = CONSTANT,
      145     7558                      NAME    = %DEBUGGER_NAME) ;
      146     7585    2      DCL I     UBIN WORD ALIGNED ;
      147     7586    2      DCL RULES (0:4) CHAR (0) CONSTANT CALIGNED INIT
      148     7587    2             ('50 ATS TOF$FAULTS;BY;GO',
      149     7588    2              '51 ATS TOF$FAULTS:TOF$SBAR_INSTR:SBAR_TO_GELBAR;KBY;GO',
      150     7589    2              '52 ATS TOF$SHRINK_ISR;KBY;GO',
      151     7590    2              'ALIBRET,KEEP',
      152     7591    2              'KSC;KBY') ;
      153     7592           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:47   
      154     7593        /* Code */
      155     7594
      156     7595    2      CALL M$UNSHARE (RESERVE_TOLTS) ALTRET (ERROR) ;

   7595  3 000166   000014 630400 1                  EPPR0   RESERVE_TOLTS
         3 000167   400025 713400                    CLIMB   alt,+21
         3 000170   400000 401760                    pmme    nvectors=1
         3 000171   000251 702000 3                  TSX2    ERROR

      157     7596    2      IF TOQ$DCP.PF.DEBUG_TOLTS | TOQ$DCP.PF.STOP_ON_IO

   7596  3 000172   000001 236000 1                  LDQ     TOQ$DCP
         3 000173   000004 736000                    QLS     4
         3 000174   400000 376003                    ANQ     -131072,DU
         3 000175   200012 756100                    STQ     @MME_NAME+2,,AUTO
         3 000176   000001 236000 1                  LDQ     TOQ$DCP
         3 000177   000002 736000                    QLS     2
         3 000200   400000 376003                    ANQ     -131072,DU
         3 000201   200012 276100                    ORQ     @MME_NAME+2,,AUTO
         3 000202   000225 600000 3                  TZE     s:7601

      158     7597    3      THEN DO I = 0 TO 3 ;

   7597  3 000203   200005 450100                    STZ     I,,AUTO

      159     7598    3              ADD_RULES.CMD_ = VECTOR (RULES(I)) ;

   7598  3 000204   000011 235000 4                  LDA     9
         3 000205   200005 236100                    LDQ     I,,AUTO
         3 000206   200012 755100                    STA     @MME_NAME+2,,AUTO
         3 000207   000013 402000 4                  MPY     11
         3 000210   000012 036000 4                  ADLQ    10
         3 000211   200012 235100                    LDA     @MME_NAME+2,,AUTO
         3 000212   000022 757000 1                  STAQ    ADD_RULES+2

      160     7599    3              CALL M$ALIB (ADD_RULES) ALTRET (ERROR) ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:48   
   7599  3 000213   000020 630400 1                  EPPR0   ADD_RULES
         3 000214   400007 713400                    CLIMB   alt,+7
         3 000215   401400 401760                    pmme    nvectors=4
         3 000216   000251 702000 3                  TSX2    ERROR

      161     7600    3           END /* DO */ ;

   7600  3 000217   200005 235100                    LDA     I,,AUTO
         3 000220   000001 035007                    ADLA    1,DL
         3 000221   200005 755100                    STA     I,,AUTO
         3 000222   000004 115007                    CMPA    4,DL
         3 000223   000204 602000 3                  TNC     s:7598
         3 000224   000247 710000 3                  TRA     s:7605

      162     7601    3      ELSE DO I = 3 TO 4 ;

   7601  3 000225   000003 235007                    LDA     3,DL
         3 000226   200005 755100                    STA     I,,AUTO

      163     7602    3              ADD_RULES.CMD_ = VECTOR (RULES(I)) ;

   7602  3 000227   000011 235000 4                  LDA     9
         3 000230   200005 236100                    LDQ     I,,AUTO
         3 000231   200012 755100                    STA     @MME_NAME+2,,AUTO
         3 000232   000013 402000 4                  MPY     11
         3 000233   000012 036000 4                  ADLQ    10
         3 000234   200012 235100                    LDA     @MME_NAME+2,,AUTO
         3 000235   000022 757000 1                  STAQ    ADD_RULES+2

      164     7603    3              CALL M$ALIB (ADD_RULES) ALTRET (ERROR) ;

   7603  3 000236   000020 630400 1                  EPPR0   ADD_RULES
         3 000237   400007 713400                    CLIMB   alt,+7
         3 000240   401400 401760                    pmme    nvectors=4
         3 000241   000251 702000 3                  TSX2    ERROR

      165     7604    3           END /* DO */ ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:49   

   7604  3 000242   200005 235100                    LDA     I,,AUTO
         3 000243   000001 035007                    ADLA    1,DL
         3 000244   200005 755100                    STA     I,,AUTO
         3 000245   000005 115007                    CMPA    5,DL
         3 000246   000227 602000 3                  TNC     s:7602

      166     7605    2      RETURN ;

   7605  3 000247   200004 221300                    LDX1  ! 4,,AUTO
         3 000250   000001 702211                    TSX2  ! 1,X1

      167     7606
      168     7607    2   ERROR:
      169     7608    2      CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;

   7608  3 000251   000000 470400 xsym  ERROR        LDP0    B$TCB$
         3 000252   000000 471500                    LDP1    0,,PR0
         3 000253   100102 633500                    EPPR3   66,,PR1
         3 000254   200012 453500                    STP3    @MME_NAME+2,,AUTO
         3 000255   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000256   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000257   000000 701000 xent               TSX1    TOX$ERROR
         3 000260   000000 011000                    NOP     0

      170     7609
      171     7610    2   END TOQ$ADD_SCHEMA_BYPASS_RULES ;

   7610  3 000261   200004 221300                    LDX1  ! 4,,AUTO
         3 000262   000001 702211                    TSX2  ! 1,X1

      172     7611        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:50   
      173     7612        /*I* NAME:         TOQ$ADD_CONTROL_RULES
      174     7613             AUTHOR:       Scott S. Sheppard
      175     7614             PURPOSE:      Handy Default Rules for TOLTS Debugging
      176     7615             INTERFACE:    M$ALIB Monitor Service
      177     7616                           TOX$ERROR
      178     7617             PARAMETERS:   None passed.
      179     7618             DATA:         No external data accessed.
      180     7619                           Commands issued to DELTA
      181     7620             DESCRIPTION:  This  procedure  is  used  to  invisibly  enter to
      182     7621                           DELTA (programatically)  default  commands  (usage
      183     7622                           rules or desired feature  capabilities) for debug.
      184     7623                           The  M$ALIB service  is called  to associate TOLTS
      185     7624                           with  DELTA and add  the commands, just  as if the
      186     7625                           user typed:
      187     7626                             !UNDER DELTA
      188     7627                             !TOLTS
      189     7628                             >TRAP ALL    "trap all faults to TOLTS
      190     7629                             >KEEP BREAK  "have breaks return to DELTA
      191     7630                             >FORMAT EVALUATION\O
      192     7631                             >FORMAT MODIFICATION\I
      193     7632        */
      194     7633        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:51   
      195     7634    1   TOQ$ADD_CONTROL_RULES: PROC ;

   7634  3 000263   200004 741300       TOQ$ADD_CON* STX1  ! 4,,AUTO

      196     7635
      197     7636           %FPT_ALIB (FPTN    = ADD_RULES,
      198     7637                      LIBNAME = DEBUG_RUN_UNIT,
      199     7638                      CMD     = RULES) ;
      200     7655           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      201     7656                      STCLASS = CONSTANT,
      202     7657                      NAME    = %DEBUGGER_NAME) ;
      203     7684    2      DCL RULES CHAR (0) CONSTANT CALIGNED INIT
      204     7685    2             ('TRAP ALL;KEEP BREAK;FOR EV\O;FOR MOD\I') ;
      205     7686
      206     7687        /* Code */
      207     7688
      208     7689    2      CALL M$ALIB (ADD_RULES) WHENRETURN

   7689  3 000264   000032 630400 1                  EPPR0   ADD_RULES
         3 000265   400007 713400                    CLIMB   alt,+7
         3 000266   401400 401760                    pmme    nvectors=4
         3 000267   000272 702000 3                  TSX2    s:7695

      209     7690    3           DO ;

      210     7691    3              RETURN ;

   7691  3 000270   200004 221300                    LDX1  ! 4,,AUTO
         3 000271   000001 702211                    TSX2  ! 1,X1

      211     7692    3           END /* WHENRETURN */ ;
      212     7693    2      WHENALTRETURN
      213     7694    3           DO ;

      214     7695    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;

   7695  3 000272   000000 470400 xsym               LDP0    B$TCB$
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:52   
         3 000273   000000 471500                    LDP1    0,,PR0
         3 000274   100102 633500                    EPPR3   66,,PR1
         3 000275   200012 453500                    STP3    @MME_NAME+2,,AUTO
         3 000276   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000277   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000300   000000 701000 xent               TSX1    TOX$ERROR
         3 000301   000000 011000                    NOP     0

      215     7696    3           END /* WHENALTRETURN */ ;

      216     7697    2      RETURN ;

   7697  3 000302   200004 221300                    LDX1  ! 4,,AUTO
         3 000303   000001 702211                    TSX2  ! 1,X1

      217     7698
      218     7699    2   END TOQ$ADD_CONTROL_RULES ;
      219     7700        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:53   
      220     7701        /*I* NAME:         TOQ$ADD_IO_BRKPNT
      221     7702             AUTHOR:       Scott S. Sheppard
      222     7703             PURPOSE:      Sets a DELTA breakpoint before I/O is issued
      223     7704             INTERFACE:    M$ALIB Monitor Service
      224     7705                           TOX$ERROR
      225     7706             PARAMETERS:   None passed.
      226     7707             DATA:         TOQ$DCP.PF.STOP_ON_IO
      227     7708                           Command issued to DELTA
      228     7709             DESCRIPTION:  This procedure adds a  breakpoint to stop in TOLTS
      229     7710                           before I/O is issued. Debugging test pages usually
      230     7711                           involves a problem  with  device I/O,  hence  this
      231     7712                           breakpoint could prove handy for developers.
      232     7713        */
      233     7714        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:54   
      234     7715    1   TOQ$ADD_IO_BRKPNT: PROC ;

   7715  3 000304   200004 741300       TOQ$ADD_IO_* STX1  ! 4,,AUTO

      235     7716
      236     7717           %FPT_ALIB (FPTN    = ADD_BRKPNT,
      237     7718                      LIBNAME = DEBUG_RUN_UNIT,
      238     7719                      CMD     = BREAKPOINT) ;
      239     7736           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      240     7737                      STCLASS = CONSTANT,
      241     7738                      NAME    = %DEBUGGER_NAME) ;
      242     7765    2      DCL BREAKPOINT CHAR (0) CONSTANT CALIGNED INIT
      243     7766    2             ('54 AT TOP$POLTS:TOP$MME_TESTIO:ISSUE_IO;DU IO_ENTRY(TCX),11\O') ;
      244     7767
      245     7768        /* Code */
      246     7769
      247     7770    2      IF TOQ$DCP.PF.STOP_ON_IO

   7770  3 000305   000001 236000 1                  LDQ     TOQ$DCP
         3 000306   020000 316003                    CANQ    8192,DU
         3 000307   000314 600000 3                  TZE     s:7773

      248     7771    2      THEN CALL M$ALIB (ADD_BRKPNT) ALTRET (ERROR) ;

   7771  3 000310   000044 630400 1                  EPPR0   ADD_BRKPNT
         3 000311   400007 713400                    CLIMB   alt,+7
         3 000312   401400 401760                    pmme    nvectors=4
         3 000313   000316 702000 3                  TSX2    ERROR

      249     7772    2      ELSE /* User did not request to stop on IO */ ;
      250     7773    2      RETURN ;

   7773  3 000314   200004 221300                    LDX1  ! 4,,AUTO
         3 000315   000001 702211                    TSX2  ! 1,X1

      251     7774
      252     7775    2   ERROR:
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:55   
      253     7776    2      CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;

   7776  3 000316   000000 470400 xsym  ERROR        LDP0    B$TCB$
         3 000317   000000 471500                    LDP1    0,,PR0
         3 000320   100102 633500                    EPPR3   66,,PR1
         3 000321   200012 453500                    STP3    @MME_NAME+2,,AUTO
         3 000322   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000323   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000324   000000 701000 xent               TSX1    TOX$ERROR
         3 000325   000000 011000                    NOP     0

      254     7777
      255     7778    2   END TOQ$ADD_IO_BRKPNT ;

   7778  3 000326   200004 221300                    LDX1  ! 4,,AUTO
         3 000327   000001 702211                    TSX2  ! 1,X1

      256     7779        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:56   
      257     7780        /*I*  NAME:        TOQ$SUBEXEC_MSG
      258     7781              AUTHOR:      Scott S. Sheppard
      259     7782              PURPOSE:     Identifies Subexecutive
      260     7783              INTERFACE:   TOT$OCTASC
      261     7784                           TOT$CONSOLE_OUT
      262     7785              DATA:        TOQ$DCP.SE.EDIT_NAME - input
      263     7786                           TOQ$DCP.SE.ADDRESS - input
      264     7787                           TOQ$DCP.SE.CATALOG - input
      265     7788              DESCRIPTION: This procedure writes a message to the user's
      266     7789                           terminal identifying the subexecutive.
      267     7790        */
      268     7791
      269     7792    1   TOQ$SUBEXEC_MSG: PROC ;

   7792  3 000330   200004 741300       TOQ$SUBEXEC* STX1  ! 4,,AUTO

      270     7793
      271     7794    2      DCL STRING              CHAR (12) CALIGNED ;
      272     7795    2      DCL 1 MESSAGE STATIC,
      273     7796    2            2 SUBX  CHAR (1) CALIGNED,
      274     7797    2            2 *     CHAR (0) CALIGNED INIT ('OLTS '),
      275     7798    2            2 *     CHAR (0) CALIGNED INIT ('Subexecutive '),
      276     7799    2            2 NAME  CHAR (4) CALIGNED,
      277     7800    2            2 *     CHAR (0) CALIGNED INIT (' ('),
      278     7801    2            2 ID    CHAR (1) CALIGNED,
      279     7802    2            2 *     CHAR (0) CALIGNED INIT ('OLTCM)'),
      280     7803    2            2 *     CHAR (0) CALIGNED INIT (' loaded at .'),
      281     7804    2            2 ADRS  CHAR (6) CALIGNED ;
      282     7805           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:57   
      283     7806        /* Code */
      284     7807
      285     7808    2      MESSAGE.SUBX = SUBSTR (TOQ$DCP.SE.CATALOG, 0, 1) ;

   7808  3 000331   000003 236000 1                  LDQ     TOQ$DCP+2
         3 000332   000056 552040 1                  STBQ    MESSAGE,'40'O

      286     7809    2      MESSAGE.NAME = TOQ$DCP.SE.EDIT_NAME ;

   7809  3 000333   040000 100400                    MLR     fill='040'O
         3 000334   000002 000004 1                  ADSC9   TOQ$DCP+1                cn=0,n=4
         3 000335   000062 600004 1                  ADSC9   MESSAGE+4                cn=3,n=4

      287     7810    2      MESSAGE.ID = MESSAGE.SUBX ;

   7810  3 000336   000056 236000 1                  LDQ     MESSAGE
         3 000337   000011 772000                    QRL     9
         3 000340   000064 552020 1                  STBQ    MESSAGE+6,'20'O

      288     7811    2      CALL TOT$OCTASC (STRING, TOQ$DCP.SE.ADDRESS) ;

   7811  3 000341   000000 236000 4                  LDQ     0
         3 000342   200013 756100                    STQ     @MME_NAME+3,,AUTO
         3 000343   200005 630500                    EPPR0   STRING,,AUTO
         3 000344   200012 450500                    STP0    @MME_NAME+2,,AUTO
         3 000345   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000346   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000347   000000 701000 xent               TSX1    TOT$OCTASC
         3 000350   000000 011000                    NOP     0

      289     7812    2      MESSAGE.ADRS = SUBSTR (STRING, 6, 6) ;

   7812  3 000351   040000 100500                    MLR     fill='040'O
         3 000352   200006 400006                    ADSC9   @EDIT_NAME+1,,AUTO       cn=2,n=6
         3 000353   000071 000006 1                  ADSC9   MESSAGE+11               cn=0,n=6

      290     7813
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:58   
      291     7814    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;

   7814  3 000354   000014 237000 4                  LDAQ    12
         3 000355   000004 757000 xsym               STAQ    CONSOLE_FPT+4

      292     7815    2      CALL TOT$CONSOLE_OUT ;

   7815  3 000356   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000357   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         3 000360   000000 011000                    NOP     0

      293     7816
      294     7817    2   END TOQ$SUBEXEC_MSG ;

   7817  3 000361   200004 221300                    LDX1  ! 4,,AUTO
         3 000362   000001 702211                    TSX2  ! 1,X1

      295     7818        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:59   
      296     7819        /*I*  NAME:        TOQ$TEST_PAGE_MSG
      297     7820              AUTHOR:      Scott S. Sheppard
      298     7821              PURPOSE:     Identifies Test Page
      299     7822              INTERFACE:   TOT$OCTASC
      300     7823                           TOT$CONSOLE_OUT
      301     7824              DATA:        TOQ$DCP.TP.EDIT_NAME - input
      302     7825                           TOQ$DCP.TP.GECALL_NAME - input
      303     7826                           TOQ$DCP.TP.ADDRESS - input
      304     7827                           TOQ$DCP.SE.CATALOG - input
      305     7828              DESCRIPTION: This procedure writes a message to the user's
      306     7829                           terminal identifying the test page.
      307     7830        */
      308     7831
      309     7832    1   TOQ$TEST_PAGE_MSG: PROC ;

   7832  3 000363   200004 741300       TOQ$TEST_PA* STX1  ! 4,,AUTO

      310     7833
      311     7834    2      DCL STRING              CHAR (12) CALIGNED ;
      312     7835    2      DCL 1 MESSAGE STATIC,
      313     7836    2            2 SUBX  CHAR (1) CALIGNED,
      314     7837    2            2 *     CHAR (0) CALIGNED INIT ('OLTS '),
      315     7838    2            2 *     CHAR (0) CALIGNED INIT ('test page '),
      316     7839    2            2 NAME  CHAR (4) CALIGNED,
      317     7840    2            2 *     CHAR (0) CALIGNED INIT (' ('),
      318     7841    2            2 GCL   CHAR (6) CALIGNED,
      319     7842    2            2 *     CHAR (0) CALIGNED INIT (')'),
      320     7843    2            2 *     CHAR (0) CALIGNED INIT (' loaded at .'),
      321     7844    2            2 ADRS  CHAR (6) CALIGNED ;
      322     7845           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:60   
      323     7846        /* Code */
      324     7847
      325     7848    2      MESSAGE.SUBX = SUBSTR (TOQ$DCP.SE.CATALOG, 0, 1) ;

   7848  3 000364   000003 236000 1                  LDQ     TOQ$DCP+2
         3 000365   000073 552040 1                  STBQ    MESSAGE,'40'O

      326     7849    2      MESSAGE.NAME = TOQ$DCP.TP.EDIT_NAME ;

   7849  3 000366   000006 235000 1                  LDA     TOQ$DCP+5
         3 000367   000007 236000 1                  LDQ     TOQ$DCP+6
         3 000370   000022 773000                    LRL     18
         3 000371   000027 376000 xsym               ANQ     B_VECTNIL+23
         3 000372   000077 756000 1                  STQ     MESSAGE+4

      327     7850    2      MESSAGE.GCL = TOQ$DCP.TP.GECALL_NAME ;

   7850  3 000373   040000 100400                    MLR     fill='040'O
         3 000374   000005 000006 1                  ADSC9   TOQ$DCP+4                cn=0,n=6
         3 000375   000100 400006 1                  ADSC9   MESSAGE+5                cn=2,n=6

      328     7851    2      CALL TOT$OCTASC (STRING, TOQ$DCP.TP.ADDRESS) ;

   7851  3 000376   000004 236000 4                  LDQ     4
         3 000377   200013 756100                    STQ     @MME_NAME+3,,AUTO
         3 000400   200005 630500                    EPPR0   STRING,,AUTO
         3 000401   200012 450500                    STP0    @MME_NAME+2,,AUTO
         3 000402   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000403   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000404   000000 701000 xent               TSX1    TOT$OCTASC
         3 000405   000000 011000                    NOP     0

      329     7852    2      MESSAGE.ADRS = SUBSTR (STRING, 6, 6) ;

   7852  3 000406   040000 100500                    MLR     fill='040'O
         3 000407   200006 400006                    ADSC9   @EDIT_NAME+1,,AUTO       cn=2,n=6
         3 000410   000105 200006 1                  ADSC9   MESSAGE+10               cn=1,n=6
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:61   

      330     7853
      331     7854    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;

   7854  3 000411   000016 237000 4                  LDAQ    14
         3 000412   000004 757000 xsym               STAQ    CONSOLE_FPT+4

      332     7855    2      CALL TOT$CONSOLE_OUT ;

   7855  3 000413   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000414   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         3 000415   000000 011000                    NOP     0

      333     7856    2      RETURN ;

   7856  3 000416   200004 221300                    LDX1  ! 4,,AUTO
         3 000417   000001 702211                    TSX2  ! 1,X1

      334     7857
      335     7858    2   END TOQ$TEST_PAGE_MSG ;
      336     7859        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:62   
      337     7860        /*I* NAME:         TOQ$ADD_DELTA_DEF
      338     7861             AUTHOR:       Scott S. Sheppard
      339     7862             PURPOSE:      forms symbolic definition
      340     7863             INTERFACE:    M$ALIB Monitor Service
      341     7864                           TOX$ERROR
      342     7865             PARAMETERS:   SYMBOL - input
      343     7866                           VALUE - input
      344     7867             DATA:         No external data accessed.
      345     7868                           Defined symbol added in DELTA
      346     7869             DESCRIPTION:  This  procedure adds a  symbolic definition to the
      347     7870                           DELTA symbolic list. This name is the EDIT NAME of
      348     7871                           the  Subexecutive  or  Test  Page  and  the  value
      349     7872                           associated  with  each  name  is the starting load
      350     7873                           address.  Once  added,  the  starting address of a
      351     7874                           program  may  be  referenced  by its symbolic name
      352     7875                           instead  of  its  more  complicated octal location
      353     7876                           value.
      354     7877        */
      355     7878
      356     7879    1   TOQ$ADD_DELTA_DEF: PROC (SYMBOL, VALUE) ;

   7879  3 000420   200004 741300       TOQ$ADD_DEL* STX1  ! 4,,AUTO

      357     7880
      358     7881    2      DCL SYMBOL    CHAR (4) CALIGNED ;
      359     7882    2      DCL VALUE     UBIN WORD ALIGNED ;
      360     7883           %FPT_ALIB (FPTN    = ADD_DELTA_DEF,
      361     7884                      LIBNAME = DEBUG_RUN_UNIT,
      362     7885                      CMD     = DEFINITION) ;
      363     7902           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      364     7903                      STCLASS = CONSTANT,
      365     7904                      NAME    = %DEBUGGER_NAME) ;
      366     7931    2      DCL 1 DEFINITION STATIC,
      367     7932    2            2 *      CHAR (0) CALIGNED INIT ('DEF '),
      368     7933    2            2 SYMBOL CHAR (4) CALIGNED,
      369     7934    2            2 *      CHAR (0) CALIGNED INIT (' .'),
      370     7935    2            2 VALUE  CHAR (12) CALIGNED ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:63   
      371     7936           %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:64   
      372     7937        /* Code */
      373     7938
      374     7939    2      DEFINITION.SYMBOL = SYMBOL ;

   7939  3 000421   200005 470500                    LDP0    @SYMBOL,,AUTO
         3 000422   040000 100500                    MLR     fill='040'O
         3 000423   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         3 000424   000123 000004 1                  ADSC9   DEFINITION+1             cn=0,n=4

      375     7940    2      CALL TOT$OCTASC (DEFINITION.VALUE, VALUE) ;

   7940  3 000425   200006 236100                    LDQ     @VALUE,,AUTO
         3 000426   000020 235000 4                  LDA     16
         3 000427   200012 757100                    STAQ    @MME_NAME+2,,AUTO
         3 000430   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000431   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000432   000000 701000 xent               TSX1    TOT$OCTASC
         3 000433   000000 011000                    NOP     0

      376     7941    2      CALL M$ALIB (ADD_DELTA_DEF) WHENRETURN

   7941  3 000434   000110 630400 1                  EPPR0   ADD_DELTA_DEF
         3 000435   400007 713400                    CLIMB   alt,+7
         3 000436   401400 401760                    pmme    nvectors=4
         3 000437   000442 702000 3                  TSX2    s:7947

      377     7942    3           DO ;

      378     7943    3              RETURN ;

   7943  3 000440   200004 221300                    LDX1  ! 4,,AUTO
         3 000441   000001 702211                    TSX2  ! 1,X1

      379     7944    3           END /* WHENRETURN */ ;
      380     7945    2      WHENALTRETURN
      381     7946    3           DO ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:65   
      382     7947    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;

   7947  3 000442   000000 470400 xsym               LDP0    B$TCB$
         3 000443   000000 471500                    LDP1    0,,PR0
         3 000444   100102 633500                    EPPR3   66,,PR1
         3 000445   200012 453500                    STP3    @MME_NAME+2,,AUTO
         3 000446   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000447   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000450   000000 701000 xent               TSX1    TOX$ERROR
         3 000451   000000 011000                    NOP     0

      383     7948    3           END /* WHENALTRETURN */ ;

      384     7949
      385     7950    2   END TOQ$ADD_DELTA_DEF ;

   7950  3 000452   200004 221300                    LDX1  ! 4,,AUTO
         3 000453   000001 702211                    TSX2  ! 1,X1

      386     7951        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:66   
      387     7952        /*I*  NAME:        TOQ$ENTER_GELBAR_MSG
      388     7953              AUTHOR:      Scott S. Sheppard
      389     7954              PURPOSE:     Signifies Test Page going into GELBAR
      390     7955              INTERFACE:   TOT$OCTASC
      391     7956                           TOT$CONSOLE_OUT
      392     7957              DATA:        TOQ$DCP.TP.EDIT_NAME - input
      393     7958                           TOQ$DCP.BR.IC - input
      394     7959             DESCRIPTION:  This  procedure  notifies  the  user that the test
      395     7960                           page  under  DEBUG  is  going  into  execution  by
      396     7961                           entering   into  GELBAR  mode.    Test  pages  are
      397     7962                           executed with GELBAR mode in effect, however, when
      398     7963                           a  fault  occurs,  GELBAR  mode  is broken and the
      399     7964                           fault  is handled.   To begin  re-execution of the
      400     7965                           test,  GELBAR  mode  must  be  re-invoked  by  the
      401     7966                           controlling Subexecutive.
      402     7967        */
      403     7968        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:67   
      404     7969    1   TOQ$ENTER_GELBAR_MSG: PROC ;

   7969  3 000454   200004 741300       TOQ$ENTER_G* STX1  ! 4,,AUTO

      405     7970
      406     7971    2      DCL STRING              CHAR (12) CALIGNED ;
      407     7972    2      DCL 1 MESSAGE STATIC,
      408     7973    2            2 NAME  CHAR (4) CALIGNED,
      409     7974    2            2 *     CHAR (0) CALIGNED INIT (' entering GELBAR mode at '),
      410     7975    2            2 *     CHAR (0) CALIGNED INIT ('GELBAR address .'),
      411     7976    2            2 IC    CHAR (6) CALIGNED ;
      412     7977
      413     7978        /* Code */
      414     7979
      415     7980    2      MESSAGE.NAME = TOQ$DCP.TP.EDIT_NAME ;

   7980  3 000455   000006 235000 1                  LDA     TOQ$DCP+5
         3 000456   000007 236000 1                  LDQ     TOQ$DCP+6
         3 000457   000022 773000                    LRL     18
         3 000460   000027 376000 xsym               ANQ     B_VECTNIL+23
         3 000461   000130 756000 1                  STQ     MESSAGE

      416     7981    2      CALL TOT$OCTASC (STRING, TOQ$DCP.BR.IC) ;

   7981  3 000462   000006 236000 4                  LDQ     6
         3 000463   200013 756100                    STQ     @MME_NAME+3,,AUTO
         3 000464   200005 630500                    EPPR0   STRING,,AUTO
         3 000465   200012 450500                    STP0    @MME_NAME+2,,AUTO
         3 000466   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000467   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000470   000000 701000 xent               TSX1    TOT$OCTASC
         3 000471   000000 011000                    NOP     0

      417     7982    2      MESSAGE.IC = SUBSTR (STRING, 6, 6) ;

   7982  3 000472   040000 100500                    MLR     fill='040'O
         3 000473   200006 400006                    ADSC9   @VALUE,,AUTO             cn=2,n=6
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:68   
         3 000474   000143 200006 1                  ADSC9   MESSAGE+11               cn=1,n=6

      418     7983
      419     7984    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;

   7984  3 000475   000022 237000 4                  LDAQ    18
         3 000476   000004 757000 xsym               STAQ    CONSOLE_FPT+4

      420     7985    2      CALL TOT$CONSOLE_OUT ;

   7985  3 000477   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000500   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         3 000501   000000 011000                    NOP     0

      421     7986    2      RETURN ;

   7986  3 000502   200004 221300                    LDX1  ! 4,,AUTO
         3 000503   000001 702211                    TSX2  ! 1,X1

      422     7987
      423     7988    2   END TOQ$ENTER_GELBAR_MSG ;
      424     7989        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:69   
      425     7990        /*I* NAME:         TOQ$ADD_1ST_BRKPNT
      426     7991             AUTHOR:       Scott S. Sheppard
      427     7992             PURPOSE:      provide a means to stop in GELBAR
      428     7993             INTERFACE:    M$ALIB Monitor Service
      429     7994                           TOX$ERROR
      430     7995             PARAMETERS:   EDIT_NAME - input
      431     7996                           ADDRESS - input
      432     7997             DATA:         No external data accessed.
      433     7998                           Temporary breakpoint output to DELTA
      434     7999             DESCRIPTION:  This  procedure sets a  breakpoint so control will
      435     8000                           stop  at the  first instruction  of the  test page
      436     8001                           after  GELBAR  mode   has  been  (re)invoked.  The
      437     8002                           breakpoint  uses the  named DEF  for the test page
      438     8003                           and the offset found in the Base Register IC. This
      439     8004                           breakpoint kills itself after it is encountered.
      440     8005        */
      441     8006        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:70   
      442     8007    1   TOQ$ADD_1ST_BRKPNT: PROC (EDIT_NAME, ADDRESS) ;

   8007  3 000504   200004 741300       TOQ$ADD_1ST* STX1  ! 4,,AUTO

      443     8008
      444     8009    2      DCL EDIT_NAME   CHAR (4) CALIGNED ;
      445     8010    2      DCL ADDRESS     UBIN WORD ALIGNED ;
      446     8011           %FPT_ALIB (FPTN    = ADD_TEMP_BRKPNT,
      447     8012                      LIBNAME = DEBUG_RUN_UNIT,
      448     8013                      CMD     = BREAKPOINT) ;
      449     8030           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      450     8031                      STCLASS = CONSTANT,
      451     8032                      NAME    = %DEBUGGER_NAME) ;
      452     8059    2      DCL 1 BREAKPOINT STATIC,
      453     8060    2            2 *       CHAR (0) CALIGNED INIT ('99 AT '),
      454     8061    2            2 NAME    CHAR (4) CALIGNED,
      455     8062    2            2 *       CHAR (0) CALIGNED INIT ('+.'),
      456     8063    2            2 IC      CHAR (12) CALIGNED,
      457     8064    2            2 *       CHAR (0) CALIGNED INIT (';K99') ;
      458     8065
      459     8066        /* Code */
      460     8067
      461     8068    2      BREAKPOINT.NAME = EDIT_NAME ;

   8068  3 000505   200005 470500                    LDP0    @EDIT_NAME,,AUTO
         3 000506   040000 100500                    MLR     fill='040'O
         3 000507   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4
         3 000510   000161 400004 1                  ADSC9   BREAKPOINT+1             cn=2,n=4

      462     8069    2      CALL TOT$OCTASC (BREAKPOINT.IC, ADDRESS) ;

   8069  3 000511   200006 236100                    LDQ     @ADDRESS,,AUTO
         3 000512   000024 235000 4                  LDA     20
         3 000513   200012 757100                    STAQ    @MME_NAME+2,,AUTO
         3 000514   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000515   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000516   000000 701000 xent               TSX1    TOT$OCTASC
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:71   
         3 000517   000000 011000                    NOP     0

      463     8070    2      CALL M$ALIB (ADD_TEMP_BRKPNT) WHENRETURN

   8070  3 000520   000146 630400 1                  EPPR0   ADD_TEMP_BRKPNT
         3 000521   400007 713400                    CLIMB   alt,+7
         3 000522   401400 401760                    pmme    nvectors=4
         3 000523   000526 702000 3                  TSX2    s:8076

      464     8071    3           DO ;

      465     8072    3              RETURN ;

   8072  3 000524   200004 221300                    LDX1  ! 4,,AUTO
         3 000525   000001 702211                    TSX2  ! 1,X1

      466     8073    3           END /* WHENRETURN */ ;
      467     8074    2      WHENALTRETURN
      468     8075    3           DO ;

      469     8076    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;

   8076  3 000526   000000 470400 xsym               LDP0    B$TCB$
         3 000527   000000 471500                    LDP1    0,,PR0
         3 000530   100102 633500                    EPPR3   66,,PR1
         3 000531   200012 453500                    STP3    @MME_NAME+2,,AUTO
         3 000532   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000533   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000534   000000 701000 xent               TSX1    TOX$ERROR
         3 000535   000000 011000                    NOP     0

      470     8077    3           END /* WHENALTRETURN */ ;

      471     8078
      472     8079    2   END TOQ$ADD_1ST_BRKPNT ;

   8079  3 000536   200004 221300                    LDX1  ! 4,,AUTO
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:72   
         3 000537   000001 702211                    TSX2  ! 1,X1

      473     8080        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:73   
      474     8081        /*I* NAME:         TOQ$SET_GELBARRED_FLAG
      475     8082             AUTHOR:       Scott S. Sheppard
      476     8083             PURPOSE:      controls setting/resetting of GELBARRED flag
      477     8084             INTERFACE:    None called.
      478     8085             PARAMETERS:   None passed.
      479     8086             DATA:         TOQ$DCP.PF.REASON - input
      480     8087                           TOQ$DCP.PF.STOP_ON_GELBARS - input
      481     8088                           TOQ$DCP.PF.GELBARRED - output
      482     8089             DESCRIPTION:  This procedure sets a flag, TOQ$DCP.PF.GELBARRED,
      483     8090                           which determines if a breakpoint should be set on
      484     8091                           the next invocation of  GELBAR  for the test page
      485     8092                           under DEBUG.  On a GECALL, the flag is always set
      486     8093                           to TRUE so  DELTA  will  stop  on  the very first
      487     8094                           GELBAR invocation for the page.    The setting of
      488     8095                           the flag on successive GELBARs depends on whether
      489     8096                           the user has requested to stop on all GELBARS.
      490     8097        */
      491     8098
      492     8099    1   TOQ$SET_GELBARRED_FLAG: PROC ;

   8099  3 000540   200004 741300       TOQ$SET_GEL* STX1  ! 4,,AUTO

      493     8100
      494     8101        /* Code */
      495     8102
      496     8103    3      DO CASE (TOQ$DCP.PF.REASON) ;

   8103  3 000541   000001 236000 1                  LDQ     TOQ$DCP
         3 000542   000022 772000                    QRL     18
         3 000543   000777 376007                    ANQ     511,DL
         3 000544   000022 136007                    SBLQ    18,DL
         3 000545   000016 116007                    CMPQ    14,DL
         3 000546   000550 602006 3                  TNC     s:8103+7,QL
         3 000547   000576 710000 3                  TRA     s:8111
         3 000550   000566 710000 3                  TRA     s:8105
         3 000551   000576 710000 3                  TRA     s:8111
         3 000552   000576 710000 3                  TRA     s:8111
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:74   
         3 000553   000576 710000 3                  TRA     s:8111
         3 000554   000576 710000 3                  TRA     s:8111
         3 000555   000576 710000 3                  TRA     s:8111
         3 000556   000576 710000 3                  TRA     s:8111
         3 000557   000576 710000 3                  TRA     s:8111
         3 000560   000576 710000 3                  TRA     s:8111
         3 000561   000576 710000 3                  TRA     s:8111
         3 000562   000576 710000 3                  TRA     s:8111
         3 000563   000576 710000 3                  TRA     s:8111
         3 000564   000576 710000 3                  TRA     s:8111
         3 000565   000571 710000 3                  TRA     s:8107

      497     8104    3         CASE (%GECALL) ;

      498     8105    3            TOQ$DCP.PF.GELBARRED = %FALSE ;

   8105  3 000566   000025 236000 4                  LDQ     21
         3 000567   000001 356000 1                  ANSQ    TOQ$DCP
         3 000570   000576 710000 3                  TRA     s:8111

      499     8106    3         CASE (%GELBAR) ;

      500     8107    3            IF TOQ$DCP.PF.STOP_ON_GELBARS

   8107  3 000571   000001 236000 1                  LDQ     TOQ$DCP
         3 000572   040000 316003                    CANQ    16384,DU
         3 000573   000576 601000 3                  TNZ     s:8111

      501     8108    3            THEN /* leave set to FALSE so DELTA stops next time. */ ;
      502     8109    3            ELSE TOQ$DCP.PF.GELBARRED = %TRUE ;

   8109  3 000574   200000 236003                    LDQ     65536,DU
         3 000575   000001 256000 1                  ORSQ    TOQ$DCP

      503     8110    3      END /* CASE */ ;

      504     8111    2      RETURN ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:75   

   8111  3 000576   000001 702211                    TSX2  ! 1,X1

      505     8112
      506     8113    2   END TOQ$SET_GELBARRED_FLAG ;
      507     8114        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:76   
      508     8115        /*I* NAME:         TOQ$KILL_DELTA
      509     8116             AUTHOR:       Scott S. Sheppard
      510     8117             PURPOSE:      removes ALL DELTA directives
      511     8118             INTERFACE:    M$ALIB Monitor Service
      512     8119                           TOX$ERROR
      513     8120             PARAMETERS:   None passed.
      514     8121             DATA:         No external data accessed.
      515     8122                           All DELTA directives (rules, ats, defs) removed
      516     8123             DESCRIPTION:  This procedure KILLs ALL DELTA directives. This is
      517     8124                           necessary  so that  any breakpoints  set in a test
      518     8125                           page  are  removed  upon  termination  of the test
      519     8126                           page.   TOLTS  reuses   those  same   pages  (same
      520     8127                           addresses)  for  subsequent  tests.  Having  DELTA
      521     8128                           remember  an old  breakpoint for  a new test would
      522     8129                           cause the second  test to execute incorrectly when
      523     8130                           the  breakpoint   was  encountered.  The  replaced
      524     8131                           instruction  from  the  first  test  page would be
      525     8132                           executed instead.
      526     8133        */
      527     8134        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:77   
      528     8135    1   TOQ$KILL_DELTA: PROC ;

   8135  3 000577   200004 741300       TOQ$KILL_DE* STX1  ! 4,,AUTO

      529     8136
      530     8137           %FPT_ALIB (FPTN    = KILL_DELTA,
      531     8138                      LIBNAME = DEBUG_RUN_UNIT,
      532     8139                      CMD     = KILL) ;
      533     8156           %VLP_NAME (FPTN    = DEBUG_RUN_UNIT,
      534     8157                      STCLASS = CONSTANT,
      535     8158                      NAME    = %DEBUGGER_NAME) ;
      536     8185    2      DCL KILL  CHAR (0) CONSTANT CALIGNED INIT ('KILL DELTA') ;
      537     8186
      538     8187        /* Code */
      539     8188
      540     8189    2      CALL M$ALIB (KILL_DELTA) WHENRETURN

   8189  3 000600   000170 630400 1                  EPPR0   KILL_DELTA
         3 000601   400007 713400                    CLIMB   alt,+7
         3 000602   401400 401760                    pmme    nvectors=4
         3 000603   000606 702000 3                  TSX2    s:8195

      541     8190    3           DO ;

      542     8191    3              RETURN ;

   8191  3 000604   200004 221300                    LDX1  ! 4,,AUTO
         3 000605   000001 702211                    TSX2  ! 1,X1

      543     8192    3           END /* WHENRETURN */ ;
      544     8193    2      WHENALTRETURN
      545     8194    3           DO ;

      546     8195    3              CALL TOX$ERROR (B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR) ;

   8195  3 000606   000000 470400 xsym               LDP0    B$TCB$
         3 000607   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:78   
         3 000610   100102 633500                    EPPR3   66,,PR1
         3 000611   200012 453500                    STP3    @MME_NAME+2,,AUTO
         3 000612   200012 630500                    EPPR0   @MME_NAME+2,,AUTO
         3 000613   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000614   000000 701000 xent               TSX1    TOX$ERROR
         3 000615   000000 011000                    NOP     0

      547     8196    3           END /* WHENALTRETURN */ ;

      548     8197
      549     8198    2   END TOQ$KILL_DELTA ;

   8198  3 000616   200004 221300                    LDX1  ! 4,,AUTO
         3 000617   000001 702211                    TSX2  ! 1,X1

      550     8199        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:79   
      551     8200        /*I* NAME:         TOQ$MME_MSG
      552     8201             AUTHOR:       Scott S. Sheppard
      553     8202             PURPOSE:      Displays MME to be processed
      554     8203             INTERFACE:    TOQ$GET_GCOS_MME_NAME
      555     8204                           TOQ$GET_TND_MME_NAME
      556     8205                           TOT$CONSOLE_OUT
      557     8206                           BINXCHAR
      558     8207             PARAMETERS:   None passed.
      559     8208             DATA:         TOQ$DCP.MME - input
      560     8209             DESCRIPTION:  When the  SCREAMING  MMES option is entered on
      561     8210                           a DEBUG test  request, this procedure prints a
      562     8211                           brief  message  to  identify  the  MME  to  be
      563     8212                           processed.
      564     8213        */
      565     8214        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:80   
      566     8215    1   TOQ$MME_MSG: PROC ;

   8215  3 000620   200004 741300       TOQ$MME_MSG  STX1  ! 4,,AUTO

      567     8216
      568     8217    2      DCL 1 MESSAGE STATIC,
      569     8218    2            2 *       CHAR (0) CALIGNED INIT ('   MME '),
      570     8219    2            2 NAME    CHAR (6) CALIGNED,
      571     8220    2            2 *       CHAR (0) CALIGNED INIT ('  number '),
      572     8221    2            2 VALUE   CHAR (4) CALIGNED ;
      573     8222
      574     8223        /* Code */
      575     8224
      576     8225    2      IF TOQ$DCP.MME > 0

   8225  3 000621   000013 235000 1                  LDA     TOQ$DCP+10
         3 000622   000632 604400 3                  TMOZ    s:8227

      577     8226    2      THEN CALL TOQ$GET_GCOS_MME_NAME (TOQ$DCP.MME, MESSAGE.NAME) ;

   8226  3 000623   000026 236000 4                  LDQ     22
         3 000624   200010 756100                    STQ     @MME_NUMBER+1,,AUTO
         3 000625   000027 236000 4                  LDQ     23
         3 000626   200007 756100                    STQ     @ADDRESS+1,,AUTO
         3 000627   000654 701000 3                  TSX1    TOQ$GET_GCOS_MME_NAME
         3 000630   000000 011000                    NOP     0
         3 000631   000642 710000 3                  TRA     s:8228

      578     8227    2      ELSE CALL TOQ$GET_TND_MME_NAME (-TOQ$DCP.MME, MESSAGE.NAME) ;

   8227  3 000632   000000 531000                    NEG     0
         3 000633   200014 755100                    STA     @MME_NAME+4,,AUTO
         3 000634   000026 236000 4                  LDQ     22
         3 000635   200010 756100                    STQ     @MME_NUMBER+1,,AUTO
         3 000636   200014 630500                    EPPR0   @MME_NAME+4,,AUTO
         3 000637   200007 450500                    STP0    @ADDRESS+1,,AUTO
         3 000640   001024 701000 3                  TSX1    TOQ$GET_TND_MME_NAME
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:81   
         3 000641   000000 011000                    NOP     0

      579     8228    2      CALL BINXCHAR (MESSAGE.VALUE, TOQ$DCP.MME) ;

   8228  3 000642   000000 301400                    BTD
         3 000643   000013 000004 1                  NDSC9   TOQ$DCP+10               cn=0,s=lsgnf,sf=0,n=4
         3 000644   000207 410004 1                  NDSC9   MESSAGE+5                cn=2,s=lsgns,sf=0,n=4

      580     8229
      581     8230    2      CONSOLE_FPT.BUF_ = VECTOR (MESSAGE) ;

   8230  3 000645   000030 237000 4                  LDAQ    24
         3 000646   000004 757000 xsym               STAQ    CONSOLE_FPT+4

      582     8231    2      CALL TOT$CONSOLE_OUT ;

   8231  3 000647   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000650   000000 701000 xent               TSX1    TOT$CONSOLE_OUT
         3 000651   000000 011000                    NOP     0

      583     8232    2      RETURN ;

   8232  3 000652   200004 221300                    LDX1  ! 4,,AUTO
         3 000653   000001 702211                    TSX2  ! 1,X1

      584     8233
      585     8234        /* END TOQ$MME_MSG */
      586     8235        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:82   
      587     8236        /*I* NAME:         TOQ$GET_GCOS_MME_NAME
      588     8237             AUTHOR:       Scott S. Sheppard
      589     8238             PURPOSE:      Determines MME name
      590     8239             INTERFACE:    None called.
      591     8240             PARAMETERS:   MME_NUMBER - input
      592     8241                           MME_NAME - output
      593     8242             DATA:         No external data accessed.
      594     8243             DESCRIPTION:  This procedure performs a simple case statement
      595     8244                           in order to return the name of the GCOS MME.
      596     8245        */
      597     8246
      598     8247    2   TOQ$GET_GCOS_MME_NAME: PROC (MME_NUMBER, MME_NAME) ;

   8247  3 000654   200006 741300       TOQ$GET_GCO* STX1  ! @ADDRESS,,AUTO

      599     8248
      600     8249    3      DCL MME_NUMBER  UBIN WORD ALIGNED ;
      601     8250    3      DCL MME_NAME    CHAR (6) CALIGNED ;
      602     8251
      603     8252        /* Code */
      604     8253
      605     8254    4      DO CASE (MME_NUMBER) ;

   8254  3 000655   200007 470500                    LDP0    @MME_NUMBER,,AUTO
         3 000656   000000 235100                    LDA     0,,PR0
         3 000657   000040 115007                    CMPA    32,DL
         3 000660   000662 602005 3                  TNC     s:8254+5,AL
         3 000661   001016 710000 3                  TRA     s:8280
         3 000662   001016 710000 3                  TRA     s:8280
         3 000663   000734 710000 3                  TRA     s:8260
         3 000664   000765 710000 3                  TRA     s:8270
         3 000665   001016 710000 3                  TRA     s:8280
         3 000666   001016 710000 3                  TRA     s:8280
         3 000667   000777 710000 3                  TRA     s:8274
         3 000670   001016 710000 3                  TRA     s:8280
         3 000671   001016 710000 3                  TRA     s:8280
         3 000672   001016 710000 3                  TRA     s:8280
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:83   
         3 000673   000746 710000 3                  TRA     s:8264
         3 000674   001016 710000 3                  TRA     s:8280
         3 000675   001016 710000 3                  TRA     s:8280
         3 000676   001016 710000 3                  TRA     s:8280
         3 000677   001016 710000 3                  TRA     s:8280
         3 000700   000727 710000 3                  TRA     s:8258
         3 000701   000760 710000 3                  TRA     s:8268
         3 000702   001016 710000 3                  TRA     s:8280
         3 000703   001004 710000 3                  TRA     s:8276
         3 000704   000722 710000 3                  TRA     s:8256
         3 000705   001016 710000 3                  TRA     s:8280
         3 000706   001016 710000 3                  TRA     s:8280
         3 000707   000753 710000 3                  TRA     s:8266
         3 000710   001016 710000 3                  TRA     s:8280
         3 000711   001016 710000 3                  TRA     s:8280
         3 000712   000772 710000 3                  TRA     s:8272
         3 000713   001016 710000 3                  TRA     s:8280
         3 000714   001016 710000 3                  TRA     s:8280
         3 000715   001016 710000 3                  TRA     s:8280
         3 000716   001011 710000 3                  TRA     s:8278
         3 000717   001016 710000 3                  TRA     s:8280
         3 000720   001016 710000 3                  TRA     s:8280
         3 000721   000741 710000 3                  TRA     s:8262

      606     8255    4         CASE (%GECALL) ;

      607     8256    4            MME_NAME = 'GECALL' ;

   8256  3 000722   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000723   040100 100400                    MLR     fill='040'O
         3 000724   000155 000006 2                  ADSC9   KILL+3                   cn=0,n=6
         3 000725   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000726   001022 710000 3                  TRA     s:8282

      608     8257    4         CASE (%GEENDC) ;

      609     8258    4            MME_NAME = 'GEENDC' ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:84   

   8258  3 000727   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000730   040100 100400                    MLR     fill='040'O
         3 000731   000157 000006 2                  ADSC9   KILL+5                   cn=0,n=6
         3 000732   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000733   001022 710000 3                  TRA     s:8282

      610     8259    4         CASE (%GEINOS) ;

      611     8260    4            MME_NAME = 'GEINOS' ;

   8260  3 000734   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000735   040100 100400                    MLR     fill='040'O
         3 000736   000161 000006 2                  ADSC9   KILL+7                   cn=0,n=6
         3 000737   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000740   001022 710000 3                  TRA     s:8282

      612     8261    4         CASE (%GELBAR) ;

      613     8262    4            MME_NAME = 'GELBAR' ;

   8262  3 000741   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000742   040100 100400                    MLR     fill='040'O
         3 000743   000163 000006 2                  ADSC9   KILL+9                   cn=0,n=6
         3 000744   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000745   001022 710000 3                  TRA     s:8282

      614     8263    4         CASE (%GEMORE) ;

      615     8264    4            MME_NAME = 'GEMORE' ;

   8264  3 000746   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000747   040100 100400                    MLR     fill='040'O
         3 000750   000165 000006 2                  ADSC9   KILL+11                  cn=0,n=6
         3 000751   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000752   001022 710000 3                  TRA     s:8282

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:85   
      616     8265    4         CASE (%GEMREL) ;

      617     8266    4            MME_NAME = 'GEMREL' ;

   8266  3 000753   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000754   040100 100400                    MLR     fill='040'O
         3 000755   000167 000006 2                  ADSC9   KILL+13                  cn=0,n=6
         3 000756   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000757   001022 710000 3                  TRA     s:8282

      618     8267    4         CASE (%GERELC) ;

      619     8268    4            MME_NAME = 'GERELC' ;

   8268  3 000760   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000761   040100 100400                    MLR     fill='040'O
         3 000762   000171 000006 2                  ADSC9   KILL+15                  cn=0,n=6
         3 000763   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000764   001022 710000 3                  TRA     s:8282

      620     8269    4         CASE (%GEROAD) ;

      621     8270    4            MME_NAME = 'GEROAD' ;

   8270  3 000765   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000766   040100 100400                    MLR     fill='040'O
         3 000767   000173 000006 2                  ADSC9   KILL+17                  cn=0,n=6
         3 000770   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000771   001022 710000 3                  TRA     s:8282

      622     8271    4         CASE (%GEROUT) ;

      623     8272    4            MME_NAME = 'GEROUT' ;

   8272  3 000772   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 000773   040100 100400                    MLR     fill='040'O
         3 000774   000175 000006 2                  ADSC9   KILL+19                  cn=0,n=6
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:86   
         3 000775   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 000776   001022 710000 3                  TRA     s:8282

      624     8273    4         CASE (%GESNAP) ;

      625     8274    4            MME_NAME = 'GESNAP' ;

   8274  3 000777   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001000   040100 100400                    MLR     fill='040'O
         3 001001   000177 000006 2                  ADSC9   KILL+21                  cn=0,n=6
         3 001002   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001003   001022 710000 3                  TRA     s:8282

      626     8275    4         CASE (%GETIME) ;

      627     8276    4            MME_NAME = 'GETIME' ;

   8276  3 001004   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001005   040100 100400                    MLR     fill='040'O
         3 001006   000201 000006 2                  ADSC9   KILL+23                  cn=0,n=6
         3 001007   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001010   001022 710000 3                  TRA     s:8282

      628     8277    4         CASE (%GEWAKE) ;

      629     8278    4            MME_NAME = 'GEWAKE' ;

   8278  3 001011   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001012   040100 100400                    MLR     fill='040'O
         3 001013   000203 000006 2                  ADSC9   KILL+25                  cn=0,n=6
         3 001014   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001015   001022 710000 3                  TRA     s:8282

      630     8279    4         CASE (ELSE) ;

      631     8280    4            MME_NAME = 'badMME' ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:87   
   8280  3 001016   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001017   040100 100400                    MLR     fill='040'O
         3 001020   000205 000006 2                  ADSC9   KILL+27                  cn=0,n=6
         3 001021   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6

      632     8281    4      END /* CASE */ ;

      633     8282    3      RETURN ;

   8282  3 001022   200006 221300                    LDX1  ! @ADDRESS,,AUTO
         3 001023   000001 702211                    TSX2  ! 1,X1

      634     8283
      635     8284    3   END TOQ$GET_GCOS_MME_NAME ;
      636     8285        %EJECT ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:88   
      637     8286        /*I* NAME:         TOQ$GET_TND_MME_NAME
      638     8287             AUTHOR:       Scott S. Sheppard
      639     8288             PURPOSE:      Determines MME name
      640     8289             INTERFACE:    None called.
      641     8290             PARAMETERS:   MME_NUMBER - input
      642     8291                           MME_NAME - output
      643     8292             DATA:         No external data accessed.
      644     8293             DESCRIPTION:  This procedure performs a simple case statement
      645     8294                           in order to return the name of the TND MME.
      646     8295        */
      647     8296
      648     8297    2   TOQ$GET_TND_MME_NAME: PROC (MME_NUMBER, MME_NAME) ;

   8297  3 001024   200006 741300       TOQ$GET_TND* STX1  ! @ADDRESS,,AUTO

      649     8298
      650     8299    3      DCL MME_NUMBER  UBIN WORD ALIGNED ;
      651     8300    3      DCL MME_NAME    CHAR (6) CALIGNED ;
      652     8301
      653     8302        /* Code */
      654     8303
      655     8304    4      DO CASE (MME_NUMBER) ;

   8304  3 001025   200007 470500                    LDP0    @MME_NUMBER,,AUTO
         3 001026   000000 235100                    LDA     0,,PR0
         3 001027   000150 115007                    CMPA    104,DL
         3 001030   001032 602005 3                  TNC     s:8304+5,AL
         3 001031   001651 710000 3                  TRA     s:8424
         3 001032   001651 710000 3                  TRA     s:8424
         3 001033   001202 710000 3                  TRA     s:8306
         3 001034   001207 710000 3                  TRA     s:8308
         3 001035   001651 710000 3                  TRA     s:8424
         3 001036   001221 710000 3                  TRA     s:8312
         3 001037   001226 710000 3                  TRA     s:8314
         3 001040   001240 710000 3                  TRA     s:8318
         3 001041   001245 710000 3                  TRA     s:8320
         3 001042   001264 710000 3                  TRA     s:8326
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:89   
         3 001043   001310 710000 3                  TRA     s:8334
         3 001044   001651 710000 3                  TRA     s:8424
         3 001045   001315 710000 3                  TRA     s:8336
         3 001046   001322 710000 3                  TRA     s:8338
         3 001047   001341 710000 3                  TRA     s:8344
         3 001050   001346 710000 3                  TRA     s:8346
         3 001051   001353 710000 3                  TRA     s:8348
         3 001052   001365 710000 3                  TRA     s:8352
         3 001053   001372 710000 3                  TRA     s:8354
         3 001054   001404 710000 3                  TRA     s:8358
         3 001055   001411 710000 3                  TRA     s:8360
         3 001056   001435 710000 3                  TRA     s:8368
         3 001057   001442 710000 3                  TRA     s:8370
         3 001060   001447 710000 3                  TRA     s:8372
         3 001061   001651 710000 3                  TRA     s:8424
         3 001062   001454 710000 3                  TRA     s:8374
         3 001063   001461 710000 3                  TRA     s:8376
         3 001064   001500 710000 3                  TRA     s:8382
         3 001065   001473 710000 3                  TRA     s:8380
         3 001066   001517 710000 3                  TRA     s:8388
         3 001067   001524 710000 3                  TRA     s:8390
         3 001070   001543 710000 3                  TRA     s:8396
         3 001071   001550 710000 3                  TRA     s:8398
         3 001072   001651 710000 3                  TRA     s:8424
         3 001073   001555 710000 3                  TRA     s:8400
         3 001074   001562 710000 3                  TRA     s:8402
         3 001075   001574 710000 3                  TRA     s:8406
         3 001076   001601 710000 3                  TRA     s:8408
         3 001077   001606 710000 3                  TRA     s:8410
         3 001100   001613 710000 3                  TRA     s:8412
         3 001101   001620 710000 3                  TRA     s:8414
         3 001102   001625 710000 3                  TRA     s:8416
         3 001103   001637 710000 3                  TRA     s:8420
         3 001104   001644 710000 3                  TRA     s:8422
         3 001105   001257 710000 3                  TRA     s:8324
         3 001106   001360 710000 3                  TRA     s:8350
         3 001107   001505 710000 3                  TRA     s:8384
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:90   
         3 001110   001512 710000 3                  TRA     s:8386
         3 001111   001567 710000 3                  TRA     s:8404
         3 001112   001651 710000 3                  TRA     s:8424
         3 001113   001651 710000 3                  TRA     s:8424
         3 001114   001233 710000 3                  TRA     s:8316
         3 001115   001303 710000 3                  TRA     s:8332
         3 001116   001423 710000 3                  TRA     s:8364
         3 001117   001334 710000 3                  TRA     s:8342
         3 001120   001632 710000 3                  TRA     s:8418
         3 001121   001377 710000 3                  TRA     s:8356
         3 001122   001466 710000 3                  TRA     s:8378
         3 001123   001651 710000 3                  TRA     s:8424
         3 001124   001651 710000 3                  TRA     s:8424
         3 001125   001327 710000 3                  TRA     s:8340
         3 001126   001651 710000 3                  TRA     s:8424
         3 001127   001416 710000 3                  TRA     s:8362
         3 001130   001252 710000 3                  TRA     s:8322
         3 001131   001651 710000 3                  TRA     s:8424
         3 001132   001651 710000 3                  TRA     s:8424
         3 001133   001651 710000 3                  TRA     s:8424
         3 001134   001651 710000 3                  TRA     s:8424
         3 001135   001651 710000 3                  TRA     s:8424
         3 001136   001651 710000 3                  TRA     s:8424
         3 001137   001651 710000 3                  TRA     s:8424
         3 001140   001651 710000 3                  TRA     s:8424
         3 001141   001651 710000 3                  TRA     s:8424
         3 001142   001651 710000 3                  TRA     s:8424
         3 001143   001651 710000 3                  TRA     s:8424
         3 001144   001651 710000 3                  TRA     s:8424
         3 001145   001651 710000 3                  TRA     s:8424
         3 001146   001651 710000 3                  TRA     s:8424
         3 001147   001276 710000 3                  TRA     s:8330
         3 001150   001271 710000 3                  TRA     s:8328
         3 001151   001651 710000 3                  TRA     s:8424
         3 001152   001651 710000 3                  TRA     s:8424
         3 001153   001651 710000 3                  TRA     s:8424
         3 001154   001651 710000 3                  TRA     s:8424
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:91   
         3 001155   001651 710000 3                  TRA     s:8424
         3 001156   001651 710000 3                  TRA     s:8424
         3 001157   001651 710000 3                  TRA     s:8424
         3 001160   001651 710000 3                  TRA     s:8424
         3 001161   001430 710000 3                  TRA     s:8366
         3 001162   001651 710000 3                  TRA     s:8424
         3 001163   001651 710000 3                  TRA     s:8424
         3 001164   001651 710000 3                  TRA     s:8424
         3 001165   001651 710000 3                  TRA     s:8424
         3 001166   001651 710000 3                  TRA     s:8424
         3 001167   001651 710000 3                  TRA     s:8424
         3 001170   001651 710000 3                  TRA     s:8424
         3 001171   001651 710000 3                  TRA     s:8424
         3 001172   001651 710000 3                  TRA     s:8424
         3 001173   001531 710000 3                  TRA     s:8392
         3 001174   001536 710000 3                  TRA     s:8394
         3 001175   001651 710000 3                  TRA     s:8424
         3 001176   001651 710000 3                  TRA     s:8424
         3 001177   001651 710000 3                  TRA     s:8424
         3 001200   001651 710000 3                  TRA     s:8424
         3 001201   001214 710000 3                  TRA     s:8310

      656     8305    4         CASE (%ABSTIM) ;

      657     8306    4            MME_NAME = 'ABSTIM' ;

   8306  3 001202   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001203   040100 100400                    MLR     fill='040'O
         3 001204   000207 000006 2                  ADSC9   KILL+29                  cn=0,n=6
         3 001205   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001206   001655 710000 3                  TRA     s:8426

      658     8307    4         CASE (%ACCWRT) ;

      659     8308    4            MME_NAME = 'ACCWRT' ;

   8308  3 001207   200010 471500                    LDP1    @MME_NAME,,AUTO
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:92   
         3 001210   040100 100400                    MLR     fill='040'O
         3 001211   000211 000006 2                  ADSC9   KILL+31                  cn=0,n=6
         3 001212   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001213   001655 710000 3                  TRA     s:8426

      660     8309    4         CASE (%ALCMCA) ;

      661     8310    4            MME_NAME = 'ALCMCA' ;

   8310  3 001214   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001215   040100 100400                    MLR     fill='040'O
         3 001216   000213 000006 2                  ADSC9   KILL+33                  cn=0,n=6
         3 001217   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001220   001655 710000 3                  TRA     s:8426

      662     8311    4         CASE (%ALLOCR) ;

      663     8312    4            MME_NAME = 'ALLOCR' ;

   8312  3 001221   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001222   040100 100400                    MLR     fill='040'O
         3 001223   000215 000006 2                  ADSC9   KILL+35                  cn=0,n=6
         3 001224   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001225   001655 710000 3                  TRA     s:8426

      664     8313    4         CASE (%ASGPAT) ;

      665     8314    4            MME_NAME = 'ASGPAT' ;

   8314  3 001226   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001227   040100 100400                    MLR     fill='040'O
         3 001230   000217 000006 2                  ADSC9   KILL+37                  cn=0,n=6
         3 001231   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001232   001655 710000 3                  TRA     s:8426

      666     8315    4         CASE (%CATADT) ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:93   
      667     8316    4            MME_NAME = 'CATADT' ;

   8316  3 001233   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001234   040100 100400                    MLR     fill='040'O
         3 001235   000221 000006 2                  ADSC9   KILL+39                  cn=0,n=6
         3 001236   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001237   001655 710000 3                  TRA     s:8426

      668     8317    4         CASE (%CHANTM) ;

      669     8318    4            MME_NAME = 'CHANTM' ;

   8318  3 001240   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001241   040100 100400                    MLR     fill='040'O
         3 001242   000223 000006 2                  ADSC9   KILL+41                  cn=0,n=6
         3 001243   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001244   001655 710000 3                  TRA     s:8426

      670     8319    4         CASE (%CLEARQ) ;

      671     8320    4            MME_NAME = 'CLEARQ' ;

   8320  3 001245   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001246   040100 100400                    MLR     fill='040'O
         3 001247   000225 000006 2                  ADSC9   KILL+43                  cn=0,n=6
         3 001250   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001251   001655 710000 3                  TRA     s:8426

      672     8321    4         CASE (%COINIT) ;

      673     8322    4            MME_NAME = 'COINIT' ;

   8322  3 001252   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001253   040100 100400                    MLR     fill='040'O
         3 001254   000227 000006 2                  ADSC9   KILL+45                  cn=0,n=6
         3 001255   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001256   001655 710000 3                  TRA     s:8426
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:94   

      674     8323    4         CASE (%COMWD) ;

      675     8324    4            MME_NAME = 'COMWD ' ;

   8324  3 001257   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001260   040100 100400                    MLR     fill='040'O
         3 001261   000231 000006 2                  ADSC9   KILL+47                  cn=0,n=6
         3 001262   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001263   001655 710000 3                  TRA     s:8426

      676     8325    4         CASE (%CONTML) ;

      677     8326    4            MME_NAME = 'CONTML' ;

   8326  3 001264   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001265   040100 100400                    MLR     fill='040'O
         3 001266   000233 000006 2                  ADSC9   KILL+49                  cn=0,n=6
         3 001267   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001270   001655 710000 3                  TRA     s:8426

      678     8327    4         CASE (%CPUASG) ;

      679     8328    4            MME_NAME = 'CPUASG' ;

   8328  3 001271   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001272   040100 100400                    MLR     fill='040'O
         3 001273   000235 000006 2                  ADSC9   KILL+51                  cn=0,n=6
         3 001274   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001275   001655 710000 3                  TRA     s:8426

      680     8329    4         CASE (%CPUREL) ;

      681     8330    4            MME_NAME = 'CPUREL' ;

   8330  3 001276   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001277   040100 100400                    MLR     fill='040'O
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:95   
         3 001300   000237 000006 2                  ADSC9   KILL+53                  cn=0,n=6
         3 001301   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001302   001655 710000 3                  TRA     s:8426

      682     8331    4         CASE (%DATADT) ;

      683     8332    4            MME_NAME = 'DATADT' ;

   8332  3 001303   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001304   040100 100400                    MLR     fill='040'O
         3 001305   000241 000006 2                  ADSC9   KILL+55                  cn=0,n=6
         3 001306   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001307   001655 710000 3                  TRA     s:8426

      684     8333    4         CASE (%DEALCP) ;

      685     8334    4            MME_NAME = 'DEALCP' ;

   8334  3 001310   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001311   040100 100400                    MLR     fill='040'O
         3 001312   000243 000006 2                  ADSC9   KILL+57                  cn=0,n=6
         3 001313   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001314   001655 710000 3                  TRA     s:8426

      686     8335    4         CASE (%DISPRT) ;

      687     8336    4            MME_NAME = 'DISPRT' ;

   8336  3 001315   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001316   040100 100400                    MLR     fill='040'O
         3 001317   000245 000006 2                  ADSC9   KILL+59                  cn=0,n=6
         3 001320   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001321   001655 710000 3                  TRA     s:8426

      688     8337    4         CASE (%EXPDEV) ;

      689     8338    4            MME_NAME = 'EXPDEV' ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:96   

   8338  3 001322   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001323   040100 100400                    MLR     fill='040'O
         3 001324   000247 000006 2                  ADSC9   KILL+61                  cn=0,n=6
         3 001325   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001326   001655 710000 3                  TRA     s:8426

      690     8339    4         CASE (%FEPTYP) ;

      691     8340    4            MME_NAME = 'FEPTYP' ;

   8340  3 001327   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001330   040100 100400                    MLR     fill='040'O
         3 001331   000251 000006 2                  ADSC9   KILL+63                  cn=0,n=6
         3 001332   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001333   001655 710000 3                  TRA     s:8426

      692     8341    4         CASE (%FREEZE) ;

      693     8342    4            MME_NAME = 'FREEZE' ;

   8342  3 001334   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001335   040100 100400                    MLR     fill='040'O
         3 001336   000253 000006 2                  ADSC9   KILL+65                  cn=0,n=6
         3 001337   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001340   001655 710000 3                  TRA     s:8426

      694     8343    4         CASE (%GEPROC) ;

      695     8344    4            MME_NAME = 'GEPROC' ;

   8344  3 001341   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001342   040100 100400                    MLR     fill='040'O
         3 001343   000255 000006 2                  ADSC9   KILL+67                  cn=0,n=6
         3 001344   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001345   001655 710000 3                  TRA     s:8426

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:97   
      696     8345    4         CASE (%GETCSC) ;

      697     8346    4            MME_NAME = 'GETCSC' ;

   8346  3 001346   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001347   040100 100400                    MLR     fill='040'O
         3 001350   000257 000006 2                  ADSC9   KILL+69                  cn=0,n=6
         3 001351   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001352   001655 710000 3                  TRA     s:8426

      698     8347    4         CASE (%GETLIN) ;

      699     8348    4            MME_NAME = 'GETLIN' ;

   8348  3 001353   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001354   040100 100400                    MLR     fill='040'O
         3 001355   000261 000006 2                  ADSC9   KILL+71                  cn=0,n=6
         3 001356   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001357   001655 710000 3                  TRA     s:8426

      700     8349    4         CASE (%HISREG) ;

      701     8350    4            MME_NAME = 'HISREG' ;

   8350  3 001360   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001361   040100 100400                    MLR     fill='040'O
         3 001362   000263 000006 2                  ADSC9   KILL+73                  cn=0,n=6
         3 001363   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001364   001655 710000 3                  TRA     s:8426

      702     8351    4         CASE (%HUNGTM) ;

      703     8352    4            MME_NAME = 'HUNGTM' ;

   8352  3 001365   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001366   040100 100400                    MLR     fill='040'O
         3 001367   000265 000006 2                  ADSC9   KILL+75                  cn=0,n=6
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:98   
         3 001370   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001371   001655 710000 3                  TRA     s:8426

      704     8353    4         CASE (%IOCONS) ;

      705     8354    4            MME_NAME = 'IOCONS' ;

   8354  3 001372   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001373   040100 100400                    MLR     fill='040'O
         3 001374   000267 000006 2                  ADSC9   KILL+77                  cn=0,n=6
         3 001375   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001376   001655 710000 3                  TRA     s:8426

      706     8355    4         CASE (%IPCWDT) ;

      707     8356    4            MME_NAME = 'IPCWDT' ;

   8356  3 001377   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001400   040100 100400                    MLR     fill='040'O
         3 001401   000271 000006 2                  ADSC9   KILL+79                  cn=0,n=6
         3 001402   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001403   001655 710000 3                  TRA     s:8426

      708     8357    4         CASE (%LODIMG) ;

      709     8358    4            MME_NAME = 'LODIMG' ;

   8358  3 001404   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001405   040100 100400                    MLR     fill='040'O
         3 001406   000273 000006 2                  ADSC9   KILL+81                  cn=0,n=6
         3 001407   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001410   001655 710000 3                  TRA     s:8426

      710     8359    4         CASE (%LODVFC) ;

      711     8360    4            MME_NAME = 'LODVFC' ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:99   
   8360  3 001411   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001412   040100 100400                    MLR     fill='040'O
         3 001413   000275 000006 2                  ADSC9   KILL+83                  cn=0,n=6
         3 001414   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001415   001655 710000 3                  TRA     s:8426

      712     8361    4         CASE (%LOGFEP) ;

      713     8362    4            MME_NAME = 'LOGFEP' ;

   8362  3 001416   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001417   040100 100400                    MLR     fill='040'O
         3 001420   000277 000006 2                  ADSC9   KILL+85                  cn=0,n=6
         3 001421   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001422   001655 710000 3                  TRA     s:8426

      714     8363    4         CASE (%LPWDT) ;

      715     8364    4            MME_NAME = 'LPWDT ' ;

   8364  3 001423   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001424   040100 100400                    MLR     fill='040'O
         3 001425   000301 000006 2                  ADSC9   KILL+87                  cn=0,n=6
         3 001426   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001427   001655 710000 3                  TRA     s:8426

      716     8365    4         CASE (%PACMAN) ;

      717     8366    4            MME_NAME = 'PACMAN' ;

   8366  3 001430   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001431   040100 100400                    MLR     fill='040'O
         3 001432   000303 000006 2                  ADSC9   KILL+89                  cn=0,n=6
         3 001433   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001434   001655 710000 3                  TRA     s:8426

      718     8367    4         CASE (%POINIT) ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:100  

      719     8368    4            MME_NAME = 'POINIT' ;

   8368  3 001435   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001436   040100 100400                    MLR     fill='040'O
         3 001437   000305 000006 2                  ADSC9   KILL+91                  cn=0,n=6
         3 001440   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001441   001655 710000 3                  TRA     s:8426

      720     8369    4         CASE (%PROCTM) ;

      721     8370    4            MME_NAME = 'PROCTM' ;

   8370  3 001442   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001443   040100 100400                    MLR     fill='040'O
         3 001444   000307 000006 2                  ADSC9   KILL+93                  cn=0,n=6
         3 001445   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001446   001655 710000 3                  TRA     s:8426

      722     8371    4         CASE (%PRTRAN) ;

      723     8372    4            MME_NAME = 'PRTRAN' ;

   8372  3 001447   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001450   040100 100400                    MLR     fill='040'O
         3 001451   000311 000006 2                  ADSC9   KILL+95                  cn=0,n=6
         3 001452   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001453   001655 710000 3                  TRA     s:8426

      724     8373    4         CASE (%READIO) ;

      725     8374    4            MME_NAME = 'READIO' ;

   8374  3 001454   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001455   040100 100400                    MLR     fill='040'O
         3 001456   000313 000006 2                  ADSC9   KILL+97                  cn=0,n=6
         3 001457   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:101  
         3 001460   001655 710000 3                  TRA     s:8426

      726     8375    4         CASE (%RELLNK) ;

      727     8376    4            MME_NAME = 'RELLNK' ;

   8376  3 001461   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001462   040100 100400                    MLR     fill='040'O
         3 001463   000315 000006 2                  ADSC9   KILL+99                  cn=0,n=6
         3 001464   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001465   001655 710000 3                  TRA     s:8426

      728     8377    4         CASE (%RELEAS) ;

      729     8378    4            MME_NAME = 'RELEAS' ;

   8378  3 001466   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001467   040100 100400                    MLR     fill='040'O
         3 001470   000317 000006 2                  ADSC9   KILL+101                 cn=0,n=6
         3 001471   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001472   001655 710000 3                  TRA     s:8426

      730     8379    4         CASE (%RESPEC) ;

      731     8380    4            MME_NAME = 'RESPEC' ;

   8380  3 001473   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001474   040100 100400                    MLR     fill='040'O
         3 001475   000321 000006 2                  ADSC9   KILL+103                 cn=0,n=6
         3 001476   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001477   001655 710000 3                  TRA     s:8426

      732     8381    4         CASE (%RLSMPC) ;

      733     8382    4            MME_NAME = 'RLSMPC' ;

   8382  3 001500   200010 471500                    LDP1    @MME_NAME,,AUTO
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:102  
         3 001501   040100 100400                    MLR     fill='040'O
         3 001502   000323 000006 2                  ADSC9   KILL+105                 cn=0,n=6
         3 001503   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001504   001655 710000 3                  TRA     s:8426

      734     8383    4         CASE (%RETCPU) ;

      735     8384    4            MME_NAME = 'RETCPU' ;

   8384  3 001505   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001506   040100 100400                    MLR     fill='040'O
         3 001507   000325 000006 2                  ADSC9   KILL+107                 cn=0,n=6
         3 001510   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001511   001655 710000 3                  TRA     s:8426

      736     8385    4         CASE (%RETRY) ;

      737     8386    4            MME_NAME = 'RETRY ' ;

   8386  3 001512   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001513   040100 100400                    MLR     fill='040'O
         3 001514   000327 000006 2                  ADSC9   KILL+109                 cn=0,n=6
         3 001515   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001516   001655 710000 3                  TRA     s:8426

      738     8387    4         CASE (%RLSPAT) ;

      739     8388    4            MME_NAME = 'RLSPAT' ;

   8388  3 001517   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001520   040100 100400                    MLR     fill='040'O
         3 001521   000331 000006 2                  ADSC9   KILL+111                 cn=0,n=6
         3 001522   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001523   001655 710000 3                  TRA     s:8426

      740     8389    4         CASE (%SCTCMP) ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:103  
      741     8390    4            MME_NAME = 'SCTCMP' ;

   8390  3 001524   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001525   040100 100400                    MLR     fill='040'O
         3 001526   000333 000006 2                  ADSC9   KILL+113                 cn=0,n=6
         3 001527   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001530   001655 710000 3                  TRA     s:8426

      742     8391    4         CASE (%SCUASG) ;

      743     8392    4            MME_NAME = 'SCUASG' ;

   8392  3 001531   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001532   040100 100400                    MLR     fill='040'O
         3 001533   000335 000006 2                  ADSC9   KILL+115                 cn=0,n=6
         3 001534   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001535   001655 710000 3                  TRA     s:8426

      744     8393    4         CASE (%SCUREL) ;

      745     8394    4            MME_NAME = 'SCUREL' ;

   8394  3 001536   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001537   040100 100400                    MLR     fill='040'O
         3 001540   000337 000006 2                  ADSC9   KILL+117                 cn=0,n=6
         3 001541   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001542   001655 710000 3                  TRA     s:8426

      746     8395    4         CASE (%SETPR2) ;

      747     8396    4            MME_NAME = 'SETPR2' ;

   8396  3 001543   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001544   040100 100400                    MLR     fill='040'O
         3 001545   000341 000006 2                  ADSC9   KILL+119                 cn=0,n=6
         3 001546   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001547   001655 710000 3                  TRA     s:8426
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:104  

      748     8397    4         CASE (%SETPRT) ;

      749     8398    4            MME_NAME = 'SETPRT' ;

   8398  3 001550   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001551   040100 100400                    MLR     fill='040'O
         3 001552   000343 000006 2                  ADSC9   KILL+121                 cn=0,n=6
         3 001553   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001554   001655 710000 3                  TRA     s:8426

      750     8399    4         CASE (%SETTYP) ;

      751     8400    4            MME_NAME = 'SETTYP' ;

   8400  3 001555   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001556   040100 100400                    MLR     fill='040'O
         3 001557   000345 000006 2                  ADSC9   KILL+123                 cn=0,n=6
         3 001560   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001561   001655 710000 3                  TRA     s:8426

      752     8401    4         CASE (%TADIOD) ;

      753     8402    4            MME_NAME = 'TADIOD' ;

   8402  3 001562   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001563   040100 100400                    MLR     fill='040'O
         3 001564   000347 000006 2                  ADSC9   KILL+125                 cn=0,n=6
         3 001565   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001566   001655 710000 3                  TRA     s:8426

      754     8403    4         CASE (%TAKCPU) ;

      755     8404    4            MME_NAME = 'TAKCPU' ;

   8404  3 001567   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001570   040100 100400                    MLR     fill='040'O
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:105  
         3 001571   000351 000006 2                  ADSC9   KILL+127                 cn=0,n=6
         3 001572   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001573   001655 710000 3                  TRA     s:8426

      756     8405    4         CASE (%TERMIN) ;

      757     8406    4            MME_NAME = 'TERMIN' ;

   8406  3 001574   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001575   040100 100400                    MLR     fill='040'O
         3 001576   000353 000006 2                  ADSC9   KILL+129                 cn=0,n=6
         3 001577   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001600   001655 710000 3                  TRA     s:8426

      758     8407    4         CASE (%TESTIO) ;

      759     8408    4            MME_NAME = 'TESTIO' ;

   8408  3 001601   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001602   040100 100400                    MLR     fill='040'O
         3 001603   000355 000006 2                  ADSC9   KILL+131                 cn=0,n=6
         3 001604   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001605   001655 710000 3                  TRA     s:8426

      760     8409    4         CASE (%TOLDIS) ;

      761     8410    4            MME_NAME = 'TOLDIS' ;

   8410  3 001606   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001607   040100 100400                    MLR     fill='040'O
         3 001610   000357 000006 2                  ADSC9   KILL+133                 cn=0,n=6
         3 001611   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001612   001655 710000 3                  TRA     s:8426

      762     8411    4         CASE (%TOLGON) ;

      763     8412    4            MME_NAME = 'TOLGON' ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:106  

   8412  3 001613   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001614   040100 100400                    MLR     fill='040'O
         3 001615   000361 000006 2                  ADSC9   KILL+135                 cn=0,n=6
         3 001616   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001617   001655 710000 3                  TRA     s:8426

      764     8413    4         CASE (%TOLTIN) ;

      765     8414    4            MME_NAME = 'TOLTIN' ;

   8414  3 001620   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001621   040100 100400                    MLR     fill='040'O
         3 001622   000363 000006 2                  ADSC9   KILL+137                 cn=0,n=6
         3 001623   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001624   001655 710000 3                  TRA     s:8426

      766     8415    4         CASE (%TRACIO) ;

      767     8416    4            MME_NAME = 'TRACIO' ;

   8416  3 001625   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001626   040100 100400                    MLR     fill='040'O
         3 001627   000365 000006 2                  ADSC9   KILL+139                 cn=0,n=6
         3 001630   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001631   001655 710000 3                  TRA     s:8426

      768     8417    4         CASE (%UNFREZ) ;

      769     8418    4            MME_NAME = 'UNFREZ' ;

   8418  3 001632   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001633   040100 100400                    MLR     fill='040'O
         3 001634   000367 000006 2                  ADSC9   KILL+141                 cn=0,n=6
         3 001635   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001636   001655 710000 3                  TRA     s:8426

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:107  
      770     8419    4         CASE (%UNSPEC) ;

      771     8420    4            MME_NAME = 'UNSPEC' ;

   8420  3 001637   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001640   040100 100400                    MLR     fill='040'O
         3 001641   000371 000006 2                  ADSC9   KILL+143                 cn=0,n=6
         3 001642   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001643   001655 710000 3                  TRA     s:8426

      772     8421    4         CASE (%WRDUMP) ;

      773     8422    4            MME_NAME = 'WRDUMP' ;

   8422  3 001644   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001645   040100 100400                    MLR     fill='040'O
         3 001646   000373 000006 2                  ADSC9   KILL+145                 cn=0,n=6
         3 001647   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6
         3 001650   001655 710000 3                  TRA     s:8426

      774     8423    4         CASE (ELSE) ;

      775     8424    4            MME_NAME = 'badMME' ;

   8424  3 001651   200010 471500                    LDP1    @MME_NAME,,AUTO
         3 001652   040100 100400                    MLR     fill='040'O
         3 001653   000205 000006 2                  ADSC9   KILL+27                  cn=0,n=6
         3 001654   100000 000006                    ADSC9   0,,PR1                   cn=0,n=6

      776     8425    4      END /* CASE */ ;

      777     8426    3      RETURN ;

   8426  3 001655   200006 221300                    LDX1  ! @ADDRESS,,AUTO
         3 001656   000001 702211                    TSX2  ! 1,X1
      778     8427
      779     8428    3   END TOQ$GET_TND_MME_NAME ;
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:108  
      780     8429    2   END TOQ$MME_MSG ;
      781     8430    1   END TOQ$DEBUG ;

PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:109  
--  Include file information  --

   TO_PERR_C.:E05TOU  is referenced.
   TOT_TOLTS_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TOQ$DEBUG.
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:110  

 **** Variables and constants ****

  ****  Section 001  Data  TOQ$DEBUG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    44-0-0/d STRC(360)   r     1 ADD_BRKPNT               110-0-0/d STRC(360)   r     1 ADD_DELTA_DEF
    20-0-0/d STRC(360)   r     1 ADD_RULES                 32-0-0/d STRC(360)   r     1 ADD_RULES
   146-0-0/d STRC(360)   r     1 ADD_TEMP_BRKPNT          160-0-0/c STRC(252)   r     1 BREAKPOINT
   122-0-0/c STRC(198)   r     1 DEFINITION               170-0-0/d STRC(360)   r     1 KILL_DELTA
    56-0-0/c STRC(450)   r     1 MESSAGE                   73-0-0/c STRC(423)   r     1 MESSAGE
   130-0-0/c STRC(459)   r     1 MESSAGE                  202-0-0/c STRC(234)   r     1 MESSAGE
    14-0-0/d STRC(144)   r     1 RESERVE_TOLTS              1-0-0/w STRC(396)   r     1 TOQ$DCP
     0-0-0/w STRC        r     1 TOQ_ERROR_CODE

  ****  Section 002 RoData TOQ$DEBUG

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   124-0-0/c CHAR(61)    r     1 BREAKPOINT                 0-0-0/c STRC(54)    r     1 DEBUG_RUN_UNIT
   106-0-0/c STRC(54)    r     1 DEBUG_RUN_UNIT           122-0-0/c STRC(54)    r     1 DEBUG_RUN_UNIT
   144-0-0/c STRC(54)    r     1 DEBUG_RUN_UNIT           146-0-0/c STRC(54)    r     1 DEBUG_RUN_UNIT
   150-0-0/c STRC(54)    r     1 DEBUG_RUN_UNIT           152-0-0/c CHAR(10)    r     1 KILL
     2-0-0/c CHAR(54)    r     1 RULES(0:4)               110-0-0/c CHAR(38)    r     1 RULES

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @ADDRESS                   5-0-0/w PTR         r     1 @EDIT_NAME
    10-0-0/w PTR         r     1 @MME_NAME                 10-0-0/w PTR         r     1 @MME_NAME
     7-0-0/w PTR         r     1 @MME_NUMBER                7-0-0/w PTR         r     1 @MME_NUMBER
     5-0-0/w PTR         r     1 @SYMBOL                    6-0-0/w PTR         r     1 @VALUE
    *0-0-0/w UBIN        r     1 ADDRESS                   *0-0-0/c CHAR(4)     r     1 EDIT_NAME
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:111  
     5-0-0/w UBIN        r     1 I                         *0-0-0/c CHAR(6)     r     1 MME_NAME
    *0-0-0/c CHAR(6)     r     1 MME_NAME                  *0-0-0/w UBIN        r     1 MME_NUMBER
    *0-0-0/w UBIN        r     1 MME_NUMBER                 5-0-0/c CHAR(12)    r     1 STRING
     5-0-0/c CHAR(12)    r     1 STRING                     5-0-0/c CHAR(12)    r     1 STRING
    *0-0-0/c CHAR(4)     r     1 SYMBOL                    *0-0-0/w UBIN        r     1 VALUE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/d STRC(432)   r     1 CONSOLE_FPT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$EXCFR                    0-0-0/w STRC(144)   r     1 B$TCB


   Procedure TOQ$DEBUG requires 943 words for executable code.
   Procedure TOQ$DEBUG requires 14 words of local(AUTO) storage.

    No errors detected in file TOQ$DEBUG.:E05TSI    .
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:112  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:113  
          MINI XREF LISTING

ADDRESS IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8010**DCL      8007--PROC     8069<>CALL
ADD_BRKPNT IN PROCEDURE TOQ$ADD_IO_BRKPNT
      7730**DCL      7771<>CALL
ADD_BRKPNT.V IN PROCEDURE TOQ$ADD_IO_BRKPNT
      7731**DCL      7731--DCLINIT
ADD_DELTA_DEF IN PROCEDURE TOQ$ADD_DELTA_DEF
      7896**DCL      7941<>CALL
ADD_DELTA_DEF.V IN PROCEDURE TOQ$ADD_DELTA_DEF
      7897**DCL      7897--DCLINIT
ADD_RULES IN PROCEDURE TOQ$ADD_CONTROL_RULES
      7649**DCL      7689<>CALL
ADD_RULES.V IN PROCEDURE TOQ$ADD_CONTROL_RULES
      7650**DCL      7650--DCLINIT
ADD_RULES IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7550**DCL      7599<>CALL     7603<>CALL
ADD_RULES.CMD_ IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7550**DCL      7598<<ASSIGN   7602<<ASSIGN
ADD_RULES.V IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7551**DCL      7551--DCLINIT
ADD_TEMP_BRKPNT IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8024**DCL      8070<>CALL
ADD_TEMP_BRKPNT.V IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8025**DCL      8025--DCLINIT
B$EXCFR.ASL
      7318**DCL      7318--REDEF
B$EXCFR.ERR
      7332**DCL      7608<>CALL     7695<>CALL     7776<>CALL     7947<>CALL     8076<>CALL     8195<>CALL
B$EXCFR.ERR.ERR#
      7332**DCL      7332--REDEF
B$EXCFR.EVID
      7331**DCL      7331--REDEF    7332--REDEF
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:114  
B$EXCFR.IR
      7319**DCL      7319--REDEF
B$EXCFR.PREVSZ
      7318**DCL      7318--REDEF
B$EXCFR.SUBC
      7330**DCL      7330--REDEF    7331--REDEF    7331--REDEF
B$TCB.ALT$
      7315**DCL      7608>>CALL     7695>>CALL     7776>>CALL     7947>>CALL     8076>>CALL     8195>>CALL
B$TCB$
      7386**DCL      7608>>CALL     7695>>CALL     7776>>CALL     7947>>CALL     8076>>CALL     8195>>CALL
BREAKPOINT IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8059**DCL      8024--DCLINIT
BREAKPOINT.IC IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8063**DCL      8069<>CALL
BREAKPOINT.NAME IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8061**DCL      8068<<ASSIGN
BREAKPOINT IN PROCEDURE TOQ$ADD_IO_BRKPNT
      7765**DCL      7730--DCLINIT
CONSOLE_FPT.BUF_
      7405**DCL      7814<<ASSIGN   7854<<ASSIGN   7984<<ASSIGN   8230<<ASSIGN
CONSOLE_FPT.STATION_
      7407**DCL      7407--REDEF
CONSOLE_FPT.V.DVBYTE.VFC#
      7414**DCL      7414--REDEF
DEBUG_RUN_UNIT IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8057**DCL      8024--DCLINIT
DEBUG_RUN_UNIT IN PROCEDURE TOQ$ADD_CONTROL_RULES
      7682**DCL      7649--DCLINIT
DEBUG_RUN_UNIT IN PROCEDURE TOQ$ADD_DELTA_DEF
      7929**DCL      7896--DCLINIT
DEBUG_RUN_UNIT IN PROCEDURE TOQ$ADD_IO_BRKPNT
      7763**DCL      7730--DCLINIT
DEBUG_RUN_UNIT IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7583**DCL      7550--DCLINIT
DEBUG_RUN_UNIT IN PROCEDURE TOQ$KILL_DELTA
      8183**DCL      8150--DCLINIT
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:115  
DEFINITION IN PROCEDURE TOQ$ADD_DELTA_DEF
      7931**DCL      7896--DCLINIT
DEFINITION.SYMBOL IN PROCEDURE TOQ$ADD_DELTA_DEF
      7933**DCL      7939<<ASSIGN
DEFINITION.VALUE IN PROCEDURE TOQ$ADD_DELTA_DEF
      7935**DCL      7940<>CALL
EDIT_NAME IN PROCEDURE TOQ$ADD_1ST_BRKPNT
      8009**DCL      8007--PROC     8068>>ASSIGN
ERROR IN PROCEDURE TOQ$ADD_IO_BRKPNT
      7776**LABEL    7771--CALLALT
ERROR IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7608**LABEL    7595--CALLALT  7599--CALLALT  7603--CALLALT
I IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7585**DCL      7597<<DOINDEX  7598>>ASSIGN   7601<<DOINDEX  7602>>ASSIGN
KILL IN PROCEDURE TOQ$KILL_DELTA
      8185**DCL      8150--DCLINIT
KILL_DELTA IN PROCEDURE TOQ$KILL_DELTA
      8150**DCL      8189<>CALL
KILL_DELTA.V IN PROCEDURE TOQ$KILL_DELTA
      8151**DCL      8151--DCLINIT
M$ALIB
      5549**DCL-ENT  7599--CALL     7603--CALL     7689--CALL     7771--CALL     7941--CALL     8070--CALL
      8189--CALL
M$UNSHARE
      5553**DCL-ENT  7595--CALL
MESSAGE IN PROCEDURE TOQ$ENTER_GELBAR_MSG
      7972**DCL      7984--ASSIGN
MESSAGE.IC IN PROCEDURE TOQ$ENTER_GELBAR_MSG
      7976**DCL      7982<<ASSIGN
MESSAGE.NAME IN PROCEDURE TOQ$ENTER_GELBAR_MSG
      7973**DCL      7980<<ASSIGN
MESSAGE IN PROCEDURE TOQ$MME_MSG
      8217**DCL      8230--ASSIGN
MESSAGE.NAME IN PROCEDURE TOQ$MME_MSG
      8219**DCL      8226<>CALL     8227<>CALL
MESSAGE.VALUE IN PROCEDURE TOQ$MME_MSG
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:116  
      8221**DCL      8228<<CALLBLT
MESSAGE IN PROCEDURE TOQ$SUBEXEC_MSG
      7795**DCL      7814--ASSIGN
MESSAGE.ADRS IN PROCEDURE TOQ$SUBEXEC_MSG
      7804**DCL      7812<<ASSIGN
MESSAGE.ID IN PROCEDURE TOQ$SUBEXEC_MSG
      7801**DCL      7810<<ASSIGN
MESSAGE.NAME IN PROCEDURE TOQ$SUBEXEC_MSG
      7799**DCL      7809<<ASSIGN
MESSAGE.SUBX IN PROCEDURE TOQ$SUBEXEC_MSG
      7796**DCL      7808<<ASSIGN   7810>>ASSIGN
MESSAGE IN PROCEDURE TOQ$TEST_PAGE_MSG
      7835**DCL      7854--ASSIGN
MESSAGE.ADRS IN PROCEDURE TOQ$TEST_PAGE_MSG
      7844**DCL      7852<<ASSIGN
MESSAGE.GCL IN PROCEDURE TOQ$TEST_PAGE_MSG
      7841**DCL      7850<<ASSIGN
MESSAGE.NAME IN PROCEDURE TOQ$TEST_PAGE_MSG
      7839**DCL      7849<<ASSIGN
MESSAGE.SUBX IN PROCEDURE TOQ$TEST_PAGE_MSG
      7836**DCL      7848<<ASSIGN
MME_NAME IN PROCEDURE TOQ$GET_GCOS_MME_NAME
      8250**DCL      8247--PROC     8256<<ASSIGN   8258<<ASSIGN   8260<<ASSIGN   8262<<ASSIGN   8264<<ASSIGN
      8266<<ASSIGN   8268<<ASSIGN   8270<<ASSIGN   8272<<ASSIGN   8274<<ASSIGN   8276<<ASSIGN   8278<<ASSIGN
      8280<<ASSIGN
MME_NAME IN PROCEDURE TOQ$GET_TND_MME_NAME
      8300**DCL      8297--PROC     8306<<ASSIGN   8308<<ASSIGN   8310<<ASSIGN   8312<<ASSIGN   8314<<ASSIGN
      8316<<ASSIGN   8318<<ASSIGN   8320<<ASSIGN   8322<<ASSIGN   8324<<ASSIGN   8326<<ASSIGN   8328<<ASSIGN
      8330<<ASSIGN   8332<<ASSIGN   8334<<ASSIGN   8336<<ASSIGN   8338<<ASSIGN   8340<<ASSIGN   8342<<ASSIGN
      8344<<ASSIGN   8346<<ASSIGN   8348<<ASSIGN   8350<<ASSIGN   8352<<ASSIGN   8354<<ASSIGN   8356<<ASSIGN
      8358<<ASSIGN   8360<<ASSIGN   8362<<ASSIGN   8364<<ASSIGN   8366<<ASSIGN   8368<<ASSIGN   8370<<ASSIGN
      8372<<ASSIGN   8374<<ASSIGN   8376<<ASSIGN   8378<<ASSIGN   8380<<ASSIGN   8382<<ASSIGN   8384<<ASSIGN
      8386<<ASSIGN   8388<<ASSIGN   8390<<ASSIGN   8392<<ASSIGN   8394<<ASSIGN   8396<<ASSIGN   8398<<ASSIGN
      8400<<ASSIGN   8402<<ASSIGN   8404<<ASSIGN   8406<<ASSIGN   8408<<ASSIGN   8410<<ASSIGN   8412<<ASSIGN
      8414<<ASSIGN   8416<<ASSIGN   8418<<ASSIGN   8420<<ASSIGN   8422<<ASSIGN   8424<<ASSIGN
MME_NUMBER IN PROCEDURE TOQ$GET_GCOS_MME_NAME
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:117  
      8249**DCL      8247--PROC     8254>>DOCASE
MME_NUMBER IN PROCEDURE TOQ$GET_TND_MME_NAME
      8299**DCL      8297--PROC     8304>>DOCASE
RESERVE_TOLTS IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7534**DCL      7595<>CALL
RESERVE_TOLTS.V IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7534**DCL      7534--DCLINIT
RULES IN PROCEDURE TOQ$ADD_CONTROL_RULES
      7684**DCL      7649--DCLINIT
RULES IN PROCEDURE TOQ$ADD_SCHEMA_BYPASS_RULES
      7586**DCL      7598--ASSIGN   7602--ASSIGN
STRING IN PROCEDURE TOQ$ENTER_GELBAR_MSG
      7971**DCL      7981<>CALL     7982>>ASSIGN
STRING IN PROCEDURE TOQ$SUBEXEC_MSG
      7794**DCL      7811<>CALL     7812>>ASSIGN
STRING IN PROCEDURE TOQ$TEST_PAGE_MSG
      7834**DCL      7851<>CALL     7852>>ASSIGN
SYMBOL IN PROCEDURE TOQ$ADD_DELTA_DEF
      7881**DCL      7879--PROC     7939>>ASSIGN
TOQ$ADD_1ST_BRKPNT
      8007**PROC     7467--CALL     7478--CALL
TOQ$ADD_CONTROL_RULES
      7634**PROC     7461--CALL
TOQ$ADD_DELTA_DEF
      7879**PROC     7463--CALL     7472--CALL
TOQ$ADD_IO_BRKPNT
      7715**PROC     7462--CALL
TOQ$ADD_SCHEMA_BYPASS_RULES
      7519**PROC     7460--CALL
TOQ$DCP.BR.ADDRESS
      7447**DCL      7475>>IF
TOQ$DCP.BR.IC
      7448**DCL      7478<>CALL     7981<>CALL
TOQ$DCP.MME
      7449**DCL      8225>>IF       8226<>CALL     8227<>CALL     8228>>CALLBLT
TOQ$DCP.PF.DEBUG_TOLTS
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:118  
      7432**DCL      7596>>IF
TOQ$DCP.PF.GELBARRED
      7431**DCL      7475>>IF       8105<<ASSIGN   8109<<ASSIGN
TOQ$DCP.PF.REASON
      7437**DCL      7458>>DOCASE   8103>>DOCASE
TOQ$DCP.PF.STOP_AT_SE
      7435**DCL      7464>>IF
TOQ$DCP.PF.STOP_ON_GELBARS
      7433**DCL      8107>>IF
TOQ$DCP.PF.STOP_ON_IO
      7434**DCL      7596>>IF       7770>>IF
TOQ$DCP.SE.ADDRESS
      7441**DCL      7463<>CALL     7811<>CALL
TOQ$DCP.SE.CATALOG
      7440**DCL      7808>>ASSIGN   7848>>ASSIGN
TOQ$DCP.SE.EDIT_NAME
      7439**DCL      7463<>CALL     7467<>CALL     7809>>ASSIGN
TOQ$DCP.TP.ADDRESS
      7445**DCL      7472<>CALL     7475>>IF       7851<>CALL
TOQ$DCP.TP.EDIT_NAME
      7444**DCL      7472<>CALL     7478<>CALL     7849>>ASSIGN   7980>>ASSIGN
TOQ$DCP.TP.GECALL_NAME
      7443**DCL      7850>>ASSIGN
TOQ$ENTER_GELBAR_MSG
      7969**PROC     7477--CALL
TOQ$GET_GCOS_MME_NAME IN PROCEDURE TOQ$MME_MSG
      8247**PROC     8226--CALL
TOQ$GET_TND_MME_NAME IN PROCEDURE TOQ$MME_MSG
      8297**PROC     8227--CALL
TOQ$KILL_DELTA
      8135**PROC     7483--CALL
TOQ$MME_MSG
      8215**PROC     7485--CALL
TOQ$SET_GELBARRED_FLAG
      8099**PROC     7473--CALL     7479--CALL
TOQ$SUBEXEC_MSG
PL6.E3A0      #001=TOQ$DEBUG File=TOQ$DEBUG.:E05TSI                              WED 07/30/97 06:29 Page:119  
      7792**PROC     7466--CALL
TOQ$TEST_PAGE_MSG
      7832**PROC     7471--CALL
TOQ_ERROR_CODE
      7350**DCL      7488<>CALL
TOQ_ERROR_CODE.ERR#
      7380**DCL      7487<<ASSIGN
TOT$CONSOLE_OUT
      7454**DCL-ENT  7815--CALL     7855--CALL     7985--CALL     8231--CALL
TOT$OCTASC
      7455**DCL-ENT  7811--CALL     7851--CALL     7940--CALL     7981--CALL     8069--CALL
TOX$ERROR
      7456**DCL-ENT  7488--CALL     7608--CALL     7695--CALL     7776--CALL     7947--CALL     8076--CALL
      8195--CALL
VALUE IN PROCEDURE TOQ$ADD_DELTA_DEF
      7882**DCL      7879--PROC     7940<>CALL
