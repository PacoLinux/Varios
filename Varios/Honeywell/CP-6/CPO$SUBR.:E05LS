VERSION E05

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:1    
        1        1        /*M* CPO$SUBR - subroutines used by PRESCAN/IBEX RESOURCE MANAGEMENT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*    NAME: CPO$GET_RES
        8        8                PURPOSE: To return lists of PSEUDO and PHYSICAL resources.
        9        9                DESCRIPTION:
       10       10                      CPO$GET_RES is called with three parameters.
       11       11                      These three parameters are necessary for CPO$GET_RES
       12       12                      to be able to return lists of resources on this
       13       13                      system. The rest of resource management in PRESCAN
       14       14                      and IBEX must know which/how many resources exist.
       15       15         **
       16       16                      1) PSEUDO_LIST list of PSEUDO resources on system.
       17       17                      2) PHYS_LIST$ ptr to list of PHYSICAL resources on system.
       18       18                      3) SIZE(in words) of PHYS_LIST.
       19       19         **
       20       20                      If this routine altreturns, then the calling routine
       21       21                      must look at the returned error code. If the error
       22       22                      code is E$NORMRM then the area pointed to by PHYS_LIST$
       23       23                      must be enlarged, SIZE incrimented, and this routine
       24       24                      called again until (1) it no longer altrets, (2) there
       25       25                      is no more memory available, (3) another error code
       26       26                      is returned.
       27       27        */
       28       28        CPO$GET_RES: PROC (PSEUDO_LIST,PHYS_LIST$,SIZE) ALTRET;
       29       29          %INCLUDE CP_6;
       30      110          %INCLUDE CP_6_SUBS;
       31      650          %INCLUDE XU_MACRO_C;
       32     3756          %INCLUDE CP_SUBS_C;
       33     4673        /***** Parameters *****/
       34     4674          %VLP_PSEUDO(FPTN = PSEUDO_LIST,N = PSEUDO_SLOTS,STCLASS = " ");
       35     4690    1     DCL PHYS_LIST$ PTR;
       36     4691    1     DCL SIZE SBIN WORD;
       37     4692        /***** Fpts *****/
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:2    
       38     4693          %FPT_RESCTL (FPTN = FPT_RESCTL,STCLASS = AUTO);
       39     4710          %FPT_RESCTL (FPTN = CFPT_RESCTL,MBSDISP = YES,STCLASS = CONSTANT);
       40     4727          %VLP_PRES(FPTN = PHYS_LIST,STCLASS = "BASED(PHYS_LIST$)");
       41     4743          %VLP_PRES(FPTN = PRES,N = 0,STCLASS = AUTO);
       42     4759          %VLP_VECTOR (STCLASS=AUTO);
       43     4774        /***** Local variables *****/
       44     4775    1   DCL U$BIN UBIN BASED;
       45     4776    1   DCL I SBIN;
       46     4777    1   DCL J SBIN;
       47     4778    1   DCL K SBIN;
       48     4779        %EJECT;
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:3    
       49     4780        /*
       50     4781             ***** Init PHYS_LIST.NN# ...
       51     4782        */
       52     4783    1     PHYS_LIST.NN# = SIZE/(SIZEW(PHYS_LIST.PRLIST(0)));
       53     4784         /*
       54     4785             ***** Get a list of resources available on this system ...
       55     4786         */
       56     4787    1     VLP_VECTOR = VECTOR(PHYS_LIST);
       57     4788    1     VLP_VECTOR.W1.VSIZE# = (SIZE*4)-1;
       58     4789    1     FPT_RESCTL = CFPT_RESCTL;
       59     4790    1     FPT_RESCTL.V_ = VECTOR(FPT_RESCTL.V);
       60     4791    1     FPT_RESCTL.PRES_ = VLP_VECTOR;
       61     4792    1     FPT_RESCTL.PSEUDO_ = VECTOR(PSEUDO_LIST);
       62     4793    1     CALL M$MBS(FPT_RESCTL) ALTRET(E_MBS);
       63     4794    2     DO NEVER;
       64     4795    2   E_MBS:
       65     4796    2        ALTRETURN;
       66     4797    2     END;
       67     4798    1     PRES = %NO#;
       68     4799         /*
       69     4800             ***** Sort the table ...
       70     4801         */
       71     4802    2     DO I = 0 TO PHYS_LIST.NN#-1;
       72     4803    2        PRES.PRLIST.RNME.TYP(0) = PHYS_LIST.PRLIST.RNME.TYP(I);
       73     4804    2        PRES.PRLIST.ATTR#(0) = PHYS_LIST.PRLIST.ATTR#(I);
       74     4805    2        PHYS_LIST.PRLIST(I) = '777'O; /* This will stop the search */
       75     4806    2        J = 0;
       76     4807    3        DO WHILE(PRES.PRLIST(0)>PHYS_LIST.PRLIST(J));
       77     4808    3           J = J+1;
       78     4809    3        END;
       79     4810    3        DO K = 0 TO I-J-1;
       80     4811    3           PHYS_LIST.PRLIST(I-K) = PHYS_LIST.PRLIST(I-K-1);
       81     4812    3        END;
       82     4813    2        PHYS_LIST.PRLIST(J) = PRES.PRLIST(0);
       83     4814    2     END;
       84     4815         /*
       85     4816             ***** Compress the table ...
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:4    
       86     4817         */
       87     4818    1     J = 0;
       88     4819    1     K = 1;
       89     4820    2     DO I = 1 TO PHYS_LIST.NN#-1;
       90     4821    2        IF PHYS_LIST.PRLIST(I) = PHYS_LIST.PRLIST(J)
       91     4822    2           THEN
       92     4823    2              K = K+1; /* This one matches one from before */
       93     4824    2           ELSE
       94     4825    3              DO;
       95     4826    3                 ADDR(PHYS_LIST.PRLIST.RAT$(J))->U$BIN = K;
       96     4827    3                 K = 1;
       97     4828    3                 J = J+1;
       98     4829    3                 PHYS_LIST.PRLIST(J) = PHYS_LIST.PRLIST(I);
       99     4830    3              END;
      100     4831    2     END;
      101     4832    1     ADDR(PHYS_LIST.PRLIST.RAT$(J))->U$BIN = K;
      102     4833    1     PHYS_LIST.NN# = J+1;
      103     4834    1     RETURN;
      104     4835    1   END CPO$GET_RES;
      105     4836        %EOD;

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:5    
--  Include file information  --

   CP_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$GET_RES.

   Procedure CPO$GET_RES requires 153 words for executable code.
   Procedure CPO$GET_RES requires 38 words of local(AUTO) storage.

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:6    

 Object Unit name= CPO$GET_RES                                File name= CPO$SUBR.:E05TOU
 UTS= JUL 29 '97 12:00:29.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     18     22  CPO$GET_RES
    2   Proc  even  none   153    231  CPO$GET_RES
    3  RoData even  none     4      4  CPO$GET_RES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        3  CPO$GET_RES

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:8    


        1        1        /*M* CPO$SUBR - subroutines used by PRESCAN/IBEX RESOURCE MANAGEMENT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*F*    NAME: CPO$GET_RES
        8        8                PURPOSE: To return lists of PSEUDO and PHYSICAL resources.
        9        9                DESCRIPTION:
       10       10                      CPO$GET_RES is called with three parameters.
       11       11                      These three parameters are necessary for CPO$GET_RES
       12       12                      to be able to return lists of resources on this
       13       13                      system. The rest of resource management in PRESCAN
       14       14                      and IBEX must know which/how many resources exist.
       15       15         **
       16       16                      1) PSEUDO_LIST list of PSEUDO resources on system.
       17       17                      2) PHYS_LIST$ ptr to list of PHYSICAL resources on system.
       18       18                      3) SIZE(in words) of PHYS_LIST.
       19       19         **
       20       20                      If this routine altreturns, then the calling routine
       21       21                      must look at the returned error code. If the error
       22       22                      code is E$NORMRM then the area pointed to by PHYS_LIST$
       23       23                      must be enlarged, SIZE incrimented, and this routine
       24       24                      called again until (1) it no longer altrets, (2) there
       25       25                      is no more memory available, (3) another error code
       26       26                      is returned.
       27       27        */
       28       28        CPO$GET_RES: PROC (PSEUDO_LIST,PHYS_LIST$,SIZE) ALTRET;

     28  2 000000   000000 700200 xent  CPO$GET_RES  TSX0  ! X66_AUTO_3
         2 000001   000046 000003                    ZERO    38,3

       29       29          %INCLUDE CP_6;
       30      110          %INCLUDE CP_6_SUBS;
       31      650          %INCLUDE XU_MACRO_C;
       32     3756          %INCLUDE CP_SUBS_C;
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:9    
       33     4673        /***** Parameters *****/
       34     4674          %VLP_PSEUDO(FPTN = PSEUDO_LIST,N = PSEUDO_SLOTS,STCLASS = " ");
       35     4690    1     DCL PHYS_LIST$ PTR;
       36     4691    1     DCL SIZE SBIN WORD;
       37     4692        /***** Fpts *****/
       38     4693          %FPT_RESCTL (FPTN = FPT_RESCTL,STCLASS = AUTO);
       39     4710          %FPT_RESCTL (FPTN = CFPT_RESCTL,MBSDISP = YES,STCLASS = CONSTANT);
       40     4727          %VLP_PRES(FPTN = PHYS_LIST,STCLASS = "BASED(PHYS_LIST$)");
       41     4743          %VLP_PRES(FPTN = PRES,N = 0,STCLASS = AUTO);
       42     4759          %VLP_VECTOR (STCLASS=AUTO);
       43     4774        /***** Local variables *****/
       44     4775    1   DCL U$BIN UBIN BASED;
       45     4776    1   DCL I SBIN;
       46     4777    1   DCL J SBIN;
       47     4778    1   DCL K SBIN;
       48     4779        %EJECT;
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:10   
       49     4780        /*
       50     4781             ***** Init PHYS_LIST.NN# ...
       51     4782        */
       52     4783    1     PHYS_LIST.NN# = SIZE/(SIZEW(PHYS_LIST.PRLIST(0)));

   4783  2 000002   200004 470500                    LDP0    @PHYS_LIST$,,AUTO
         2 000003   000000 471500                    LDP1    0,,PR0
         2 000004   200005 473500                    LDP3    @SIZE,,AUTO
         2 000005   300000 236100                    LDQ     0,,PR3
         2 000006   000004 506007                    DIV     4,DL
         2 000007   100000 756100                    STQ     0,,PR1

       53     4784         /*
       54     4785             ***** Get a list of resources available on this system ...
       55     4786         */
       56     4787    1     VLP_VECTOR = VECTOR(PHYS_LIST);

   4787  2 000010   000000 471500                    LDP1    0,,PR0
         2 000011   000000 235000 3                  LDA     0
         2 000012   200044 451500                    STP1    K+2,,AUTO
         2 000013   200044 236100                    LDQ     K+2,,AUTO
         2 000014   200036 757100                    STAQ    VLP_VECTOR,,AUTO

       57     4788    1     VLP_VECTOR.W1.VSIZE# = (SIZE*4)-1;

   4788  2 000015   300000 236100                    LDQ     0,,PR3
         2 000016   000002 736000                    QLS     2
         2 000017   000001 136007                    SBLQ    1,DL
         2 000020   000020 736000                    QLS     16
         2 000021   200036 676100                    ERQ     VLP_VECTOR,,AUTO
         2 000022   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000023   200036 656100                    ERSQ    VLP_VECTOR,,AUTO

       58     4789    1     FPT_RESCTL = CFPT_RESCTL;

   4789  2 000024   000100 100400                    MLR     fill='000'O
         2 000025   000000 000110 1                  ADSC9   CFPT_RESCTL              cn=0,n=72
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:11   
         2 000026   200006 000110                    ADSC9   FPT_RESCTL,,AUTO         cn=0,n=72

       59     4790    1     FPT_RESCTL.V_ = VECTOR(FPT_RESCTL.V);

   4790  2 000027   000001 235000 3                  LDA     1
         2 000030   200044 452500                    STP2    K+2,,AUTO
         2 000031   200044 236100                    LDQ     K+2,,AUTO
         2 000032   000022 036003                    ADLQ    18,DU
         2 000033   200006 757100                    STAQ    FPT_RESCTL,,AUTO

       60     4791    1     FPT_RESCTL.PRES_ = VLP_VECTOR;

   4791  2 000034   200036 237100                    LDAQ    VLP_VECTOR,,AUTO
         2 000035   200012 757100                    STAQ    FPT_RESCTL+4,,AUTO

       61     4792    1     FPT_RESCTL.PSEUDO_ = VECTOR(PSEUDO_LIST);

   4792  2 000036   000002 235000 3                  LDA     2
         2 000037   200003 236100                    LDQ     @PSEUDO_LIST,,AUTO
         2 000040   200010 757100                    STAQ    FPT_RESCTL+2,,AUTO

       62     4793    1     CALL M$MBS(FPT_RESCTL) ALTRET(E_MBS);

   4793  2 000041   200006 630500                    EPPR0   FPT_RESCTL,,AUTO
         2 000042   550001 713400                    CLIMB   alt,+53249
         2 000043   402400 401760                    pmme    nvectors=6
         2 000044   000046 702000 2                  TSX2    E_MBS

       63     4794    2     DO NEVER;

   4794  2 000045   000047 710000 2                  TRA     s:4798

       64     4795    2   E_MBS:
       65     4796    2        ALTRETURN;

   4796  2 000046   000000 702200 xent  E_MBS        TSX2  ! X66_AALT

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:12   
       66     4797    2     END;

       67     4798    1     PRES = %NO#;

   4798  2 000047   000100 100400                    MLR     fill='000'O
         2 000050   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000051   200030 000030                    ADSC9   PRES,,AUTO               cn=0,n=24

       68     4799         /*
       69     4800             ***** Sort the table ...
       70     4801         */
       71     4802    2     DO I = 0 TO PHYS_LIST.NN#-1;

   4802  2 000052   200040 450100                    STZ     I,,AUTO
         2 000053   000146 710000 2                  TRA     s:4814+1

       72     4803    2        PRES.PRLIST.RNME.TYP(0) = PHYS_LIST.PRLIST.RNME.TYP(I);

   4803  2 000054   200004 470500                    LDP0    @PHYS_LIST$,,AUTO
         2 000055   000000 471500                    LDP1    0,,PR0
         2 000056   200040 235100                    LDA     I,,AUTO
         2 000057   000002 735000                    ALS     2
         2 000060   100002 220105                    LDX0    2,AL,PR1
         2 000061   200032 740100                    STX0    PRES+2,,AUTO

       73     4804    2        PRES.PRLIST.ATTR#(0) = PHYS_LIST.PRLIST.ATTR#(I);

   4804  2 000062   100003 721105                    LXL1    3,AL,PR1
         2 000063   200033 441100                    SXL1    PRES+3,,AUTO

       74     4805    2        PHYS_LIST.PRLIST(I) = '777'O; /* This will stop the search */

   4805  2 000064   200040 236100                    LDQ     I,,AUTO
         2 000065   000004 736000                    QLS     4
         2 000066   000106 100400                    MLR     fill='000'O
         2 000067   000003 000001 3                  ADSC9   3                        cn=0,n=1
         2 000070   100002 000020                    ADSC9   2,Q,PR1                  cn=0,n=16
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:13   

       75     4806    2        J = 0;

   4806  2 000071   200041 450100                    STZ     J,,AUTO

       76     4807    3        DO WHILE(PRES.PRLIST(0)>PHYS_LIST.PRLIST(J));

   4807  2 000072   000000 471500                    LDP1    0,,PR0
         2 000073   200041 235100                    LDA     J,,AUTO
         2 000074   000004 735000                    ALS     4
         2 000075   000100 106505                    CMPC    fill='000'O
         2 000076   100002 000020                    ADSC9   2,A,PR1                  cn=0,n=16
         2 000077   200032 000020                    ADSC9   PRES+2,,AUTO             cn=0,n=16
         2 000100   000112 603000 2                  TRC     s:4810

       77     4808    3           J = J+1;

   4808  2 000101   200041 054100                    AOS     J,,AUTO

       78     4809    3        END;

   4809  2 000102   200004 470500                    LDP0    @PHYS_LIST$,,AUTO
         2 000103   000000 471500                    LDP1    0,,PR0
         2 000104   200041 235100                    LDA     J,,AUTO
         2 000105   000004 735000                    ALS     4
         2 000106   000100 106505                    CMPC    fill='000'O
         2 000107   100002 000020                    ADSC9   2,A,PR1                  cn=0,n=16
         2 000110   200032 000020                    ADSC9   PRES+2,,AUTO             cn=0,n=16
         2 000111   000101 602000 2                  TNC     s:4808

       79     4810    3        DO K = 0 TO I-J-1;

   4810  2 000112   200042 450100                    STZ     K,,AUTO
         2 000113   000133 710000 2                  TRA     s:4812+1

       80     4811    3           PHYS_LIST.PRLIST(I-K) = PHYS_LIST.PRLIST(I-K-1);

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:14   
   4811  2 000114   200040 236100                    LDQ     I,,AUTO
         2 000115   200042 136100                    SBLQ    K,,AUTO
         2 000116   200004 470500                    LDP0    @PHYS_LIST$,,AUTO
         2 000117   000000 471500                    LDP1    0,,PR0
         2 000120   200044 756100                    STQ     K+2,,AUTO
         2 000121   200040 236100                    LDQ     I,,AUTO
         2 000122   200042 136100                    SBLQ    K,,AUTO
         2 000123   000000 473500                    LDP3    0,,PR0
         2 000124   000004 736000                    QLS     4
         2 000125   200044 235100                    LDA     K+2,,AUTO
         2 000126   000004 735000                    ALS     4
         2 000127   000105 100506                    MLR     fill='000'O
         2 000130   377776 000020                    ADSC9   -2,Q,PR3                 cn=0,n=16
         2 000131   100002 000020                    ADSC9   2,A,PR1                  cn=0,n=16

       81     4812    3        END;

   4812  2 000132   200042 054100                    AOS     K,,AUTO
         2 000133   200040 236100                    LDQ     I,,AUTO
         2 000134   200041 136100                    SBLQ    J,,AUTO
         2 000135   200042 116100                    CMPQ    K,,AUTO
         2 000136   000114 605400 2                  TPNZ    s:4811

       82     4813    2        PHYS_LIST.PRLIST(J) = PRES.PRLIST(0);

   4813  2 000137   000000 471500                    LDP1    0,,PR0
         2 000140   200041 235100                    LDA     J,,AUTO
         2 000141   000004 735000                    ALS     4
         2 000142   000105 100500                    MLR     fill='000'O
         2 000143   200032 000020                    ADSC9   PRES+2,,AUTO             cn=0,n=16
         2 000144   100002 000020                    ADSC9   2,A,PR1                  cn=0,n=16

       83     4814    2     END;

   4814  2 000145   200040 054100                    AOS     I,,AUTO
         2 000146   200004 470500                    LDP0    @PHYS_LIST$,,AUTO
         2 000147   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:15   
         2 000150   200040 236100                    LDQ     I,,AUTO
         2 000151   100000 116100                    CMPQ    0,,PR1
         2 000152   000054 604000 2                  TMI     s:4803

       84     4815         /*
       85     4816             ***** Compress the table ...
       86     4817         */
       87     4818    1     J = 0;

   4818  2 000153   200041 450100                    STZ     J,,AUTO

       88     4819    1     K = 1;

   4819  2 000154   000001 235007                    LDA     1,DL
         2 000155   200042 755100                    STA     K,,AUTO

       89     4820    2     DO I = 1 TO PHYS_LIST.NN#-1;

   4820  2 000156   200040 755100                    STA     I,,AUTO
         2 000157   000214 710000 2                  TRA     s:4831+1

       90     4821    2        IF PHYS_LIST.PRLIST(I) = PHYS_LIST.PRLIST(J)

   4821  2 000160   200004 470500                    LDP0    @PHYS_LIST$,,AUTO
         2 000161   000000 471500                    LDP1    0,,PR0
         2 000162   200040 235100                    LDA     I,,AUTO
         2 000163   000004 735000                    ALS     4
         2 000164   200041 236100                    LDQ     J,,AUTO
         2 000165   000004 736000                    QLS     4
         2 000166   000106 106505                    CMPC    fill='000'O
         2 000167   100002 000020                    ADSC9   2,A,PR1                  cn=0,n=16
         2 000170   100002 000020                    ADSC9   2,Q,PR1                  cn=0,n=16
         2 000171   000174 601000 2                  TNZ     s:4826

       91     4822    2           THEN
       92     4823    2              K = K+1; /* This one matches one from before */

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:16   
   4823  2 000172   200042 054100                    AOS     K,,AUTO
         2 000173   000213 710000 2                  TRA     s:4831

       93     4824    2           ELSE
       94     4825    3              DO;

       95     4826    3                 ADDR(PHYS_LIST.PRLIST.RAT$(J))->U$BIN = K;

   4826  2 000174   200041 235100                    LDA     J,,AUTO
         2 000175   000002 735000                    ALS     2
         2 000176   200042 236100                    LDQ     K,,AUTO
         2 000177   100004 756105                    STQ     4,AL,PR1

       96     4827    3                 K = 1;

   4827  2 000200   000001 235007                    LDA     1,DL
         2 000201   200042 755100                    STA     K,,AUTO

       97     4828    3                 J = J+1;

   4828  2 000202   200041 054100                    AOS     J,,AUTO

       98     4829    3                 PHYS_LIST.PRLIST(J) = PHYS_LIST.PRLIST(I);

   4829  2 000203   000000 471500                    LDP1    0,,PR0
         2 000204   200040 236100                    LDQ     I,,AUTO
         2 000205   000004 736000                    QLS     4
         2 000206   200041 235100                    LDA     J,,AUTO
         2 000207   000004 735000                    ALS     4
         2 000210   000105 100506                    MLR     fill='000'O
         2 000211   100002 000020                    ADSC9   2,Q,PR1                  cn=0,n=16
         2 000212   100002 000020                    ADSC9   2,A,PR1                  cn=0,n=16

       99     4830    3              END;

      100     4831    2     END;

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:17   
   4831  2 000213   200040 054100                    AOS     I,,AUTO
         2 000214   000000 471500                    LDP1    0,,PR0
         2 000215   200040 236100                    LDQ     I,,AUTO
         2 000216   100000 116100                    CMPQ    0,,PR1
         2 000217   000160 604000 2                  TMI     s:4821

      101     4832    1     ADDR(PHYS_LIST.PRLIST.RAT$(J))->U$BIN = K;

   4832  2 000220   200041 235100                    LDA     J,,AUTO
         2 000221   000002 735000                    ALS     2
         2 000222   200042 236100                    LDQ     K,,AUTO
         2 000223   100004 756105                    STQ     4,AL,PR1

      102     4833    1     PHYS_LIST.NN# = J+1;

   4833  2 000224   000000 471500                    LDP1    0,,PR0
         2 000225   200041 235100                    LDA     J,,AUTO
         2 000226   000001 035007                    ADLA    1,DL
         2 000227   100000 755100                    STA     0,,PR1

      103     4834    1     RETURN;

   4834  2 000230   000000 702200 xent               TSX2  ! X66_ARET
      104     4835    1   END CPO$GET_RES;
      105     4836        %EOD;

PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:18   
--  Include file information  --

   CP_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$GET_RES.
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:19   

 **** Variables and constants ****

  ****  Section 001 RoData CPO$GET_RES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(648)   r     1 CFPT_RESCTL

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PHYS_LIST$                3-0-0/w PTR         r     1 @PSEUDO_LIST
     5-0-0/w PTR         r     1 @SIZE                      6-0-0/d STRC(648)   r     1 FPT_RESCTL
    40-0-0/w SBIN        r     1 I                         41-0-0/w SBIN        r     1 J
    42-0-0/w SBIN        r     1 K                         *0-0-0/w PTR         r     1 PHYS_LIST$
    30-0-0/d STRC(216)   r     1 PRES                      *0-0-0/d STRC(1116)  r     1 PSEUDO_LIST
    *0-0-0/w SBIN        r     1 SIZE                      36-0-0/d STRC(72)    r     1 VLP_VECTOR

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(360)   r     1 PHYS_LIST                  0-0-0/w UBIN        r     1 U$BIN


   Procedure CPO$GET_RES requires 153 words for executable code.
   Procedure CPO$GET_RES requires 38 words of local(AUTO) storage.
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:21   
          MINI XREF LISTING

CFPT_RESCTL
      4721**DCL      4789>>ASSIGN
CFPT_RESCTL.V
      4723**DCL      4721--DCLINIT
E_MBS
      4796**LABEL    4793--CALLALT
FPT_RESCTL
      4704**DCL      4789<<ASSIGN   4793<>CALL
FPT_RESCTL.PRES_
      4704**DCL      4791<<ASSIGN
FPT_RESCTL.PSEUDO_
      4704**DCL      4792<<ASSIGN
FPT_RESCTL.V
      4706**DCL      4790--ASSIGN
FPT_RESCTL.V_
      4704**DCL      4790<<ASSIGN
I
      4776**DCL      4802<<DOINDEX  4803>>ASSIGN   4804>>ASSIGN   4805>>ASSIGN   4810>>DOINDEX  4811>>ASSIGN
      4811>>ASSIGN   4820<<DOINDEX  4821>>IF       4829>>ASSIGN
J
      4777**DCL      4806<<ASSIGN   4807>>DOWHILE  4808<<ASSIGN   4808>>ASSIGN   4810>>DOINDEX  4813>>ASSIGN
      4818<<ASSIGN   4821>>IF       4826>>ASSIGN   4828<<ASSIGN   4828>>ASSIGN   4829>>ASSIGN   4832>>ASSIGN
      4833>>ASSIGN
K
      4778**DCL      4810<<DOINDEX  4811>>ASSIGN   4811>>ASSIGN   4819<<ASSIGN   4823<<ASSIGN   4823>>ASSIGN
      4826>>ASSIGN   4827<<ASSIGN   4832>>ASSIGN
M$MBS
        45**DCL-ENT  4793--CALL
PHYS_LIST
      4738**DCL      4787--ASSIGN
PHYS_LIST.NN#
      4738**DCL      4783<<ASSIGN   4802>>DOINDEX  4820>>DOINDEX  4833<<ASSIGN
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:22   
PHYS_LIST.PRLIST
      4738**DCL      4783--ASSIGN   4805<<ASSIGN   4807>>DOWHILE  4811<<ASSIGN   4811>>ASSIGN   4813<<ASSIGN
      4821>>IF       4821>>IF       4829<<ASSIGN   4829>>ASSIGN
PHYS_LIST.PRLIST.ATTR#
      4740**DCL      4804>>ASSIGN
PHYS_LIST.PRLIST.RAT$
      4740**DCL      4826--ASSIGN   4832--ASSIGN
PHYS_LIST.PRLIST.RNAME#
      4738**DCL      4739--REDEF
PHYS_LIST.PRLIST.RNME.TYP
      4739**DCL      4803>>ASSIGN
PHYS_LIST$
      4690**DCL        28--PROC     4738--IMP-PTR  4783>>ASSIGN   4787>>ASSIGN   4802>>DOINDEX  4803>>ASSIGN
      4804>>ASSIGN   4805>>ASSIGN   4807>>DOWHILE  4811>>ASSIGN   4811>>ASSIGN   4813>>ASSIGN   4820>>DOINDEX
      4821>>IF       4821>>IF       4826>>ASSIGN   4829>>ASSIGN   4829>>ASSIGN   4832>>ASSIGN   4833>>ASSIGN
PRES
      4754**DCL      4798<<ASSIGN
PRES.PRLIST
      4754**DCL      4807>>DOWHILE  4813>>ASSIGN
PRES.PRLIST.ATTR#
      4756**DCL      4804<<ASSIGN
PRES.PRLIST.RNAME#
      4754**DCL      4755--REDEF
PRES.PRLIST.RNME.TYP
      4755**DCL      4803<<ASSIGN
PSEUDO_LIST
      4685**DCL        28--PROC     4792--ASSIGN
SIZE
      4691**DCL        28--PROC     4783>>ASSIGN   4788>>ASSIGN
U$BIN
      4775**DCL      4826<<ASSIGN   4832<<ASSIGN
VLP_VECTOR
      4770**DCL      4787<<ASSIGN   4791>>ASSIGN
VLP_VECTOR.W1.VSIZE#
      4770**DCL      4788<<ASSIGN
VLP_VECTOR.W2
PL6.E3A0      #001=CPO$GET_RES File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:00 Page:23   
      4771**DCL      4772--REDEF

PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:24   
      106        1        /*T***********************************************************/
      107        2        /*T*                                                         */
      108        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      109        4        /*T*                                                         */
      110        5        /*T***********************************************************/
      111        6        CPO$STORE_PSN: PROC (PSN_TBL,PSN,ERR_CODE) ALTRET;
      112        7        /***** Include files *****/
      113        8          %INCLUDE CP_6_SUBS;
      114      548          %INCLUDE CP_SUBS_C;
      115     1465          %INCLUDE CP_MACROS_C;
      116     2217          %INCLUDE CP_PERR_C;
      117     2555          %INCLUDE JM$STRUCT;
      118     3300        /***** Parameters *****/
      119     3301        %JM_SNLIST(FPTN = PSN_TBL,ARRAY = "(0:PSN_SLOTS)",FIT = YES,STCLASS=" ");
      120     3358        %JM_SN(FPTN = PSN,TYP = LIST,STCLASS = " ");
      121     3397        %ERR_CODE (STCLASS=" ");
      122     3417        /***** Local variables *****/
      123     3418    1   DCL J SBIN;
      124     3419        /***** Error codes *****/
      125     3420        %ERR_CODE(NAME=E_MANYPSN,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MANYPSN,STCLASS=
              3420            CONSTANT);
      126     3440        /*E* ERROR: CPO-E$CPO_MANYPSN
      127     3441             MESSAGE: Can't handle that many packsets
      128     3442        */
      129     3443        %ERR_CODE(NAME=E_CONSET,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_CONSET,STCLASS=
              3443            CONSTANT);
      130     3463        /*E* ERROR: CPO-E$CPO_CONSET
      131     3464             MESSAGE: Conflicting PACKSET attributes
      132     3465        */
      133     3466        %EJECT;
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:25   
      134     3467    2     DO J=0 TO PSN_TBL.COUNT-1;
      135     3468    2        IF PSN.TXT = PSN_TBL.SN.TXT(J)
      136     3469    2           THEN
      137     3470    2              IF PSN.FLGS=PSN_TBL.SN.FLGS(J)
      138     3471    2              OR PSN.FLGS=%NO#  /* Home packset request */
      139     3472    2                 THEN
      140     3473    2                    RETURN;                /* Just a duplicate                   */
      141     3474    2                 ELSE
      142     3475    3                    DO;
      143     3476    3                       ERR_CODE = E_CONSET;
      144     3477    3                       ALTRETURN;
      145     3478    3                    END;
      146     3479    2     END;
      147     3480    1     IF PSN_TBL.COUNT>=PSN_SLOTS
      148     3481    1        THEN
      149     3482    2           DO;
      150     3483    2              ERR_CODE = E_MANYPSN;
      151     3484    2              ALTRETURN;
      152     3485    2           END;
      153     3486    1        ELSE
      154     3487    2           DO;
      155     3488    2              IF PSN.FLGS=%NO#
      156     3489    2                 THEN
      157     3490    2                    PSN.FLGS.PUB = %YES#; /* Home pack set                     */
      158     3491    2              PSN_TBL.SN(PSN_TBL.COUNT) = PSN;
      159     3492    2              PSN_TBL.COUNT = PSN_TBL.COUNT + 1;
      160     3493    2           END;
      161     3494    1     RETURN;
      162     3495    1   END     CPO$STORE_PSN;
      163     3496        %EOD;

PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:26   
--  Include file information  --

   JM$STRUCT.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPO$STORE_PSN.

   Procedure CPO$STORE_PSN requires 56 words for executable code.
   Procedure CPO$STORE_PSN requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:27   

 Object Unit name= CPO$STORE_PSN                              File name= CPO$SUBR.:E05TOU
 UTS= JUL 29 '97 12:00:51.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  CPO$STORE_PSN
    1   Proc  even  none    56     70  CPO$STORE_PSN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  CPO$STORE_PSN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:28   


      106        1        /*T***********************************************************/
      107        2        /*T*                                                         */
      108        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      109        4        /*T*                                                         */
      110        5        /*T***********************************************************/
      111        6        CPO$STORE_PSN: PROC (PSN_TBL,PSN,ERR_CODE) ALTRET;

      6  1 000000   000000 700200 xent  CPO$STORE_P* TSX0  ! X66_AUTO_3
         1 000001   000010 000003                    ZERO    8,3

      112        7        /***** Include files *****/
      113        8          %INCLUDE CP_6_SUBS;
      114      548          %INCLUDE CP_SUBS_C;
      115     1465          %INCLUDE CP_MACROS_C;
      116     2217          %INCLUDE CP_PERR_C;
      117     2555          %INCLUDE JM$STRUCT;
      118     3300        /***** Parameters *****/
      119     3301        %JM_SNLIST(FPTN = PSN_TBL,ARRAY = "(0:PSN_SLOTS)",FIT = YES,STCLASS=" ");
      120     3358        %JM_SN(FPTN = PSN,TYP = LIST,STCLASS = " ");
      121     3397        %ERR_CODE (STCLASS=" ");
      122     3417        /***** Local variables *****/
      123     3418    1   DCL J SBIN;
      124     3419        /***** Error codes *****/
      125     3420        %ERR_CODE(NAME=E_MANYPSN,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MANYPSN,STCLASS=
              3420            CONSTANT);
      126     3440        /*E* ERROR: CPO-E$CPO_MANYPSN
      127     3441             MESSAGE: Can't handle that many packsets
      128     3442        */
      129     3443        %ERR_CODE(NAME=E_CONSET,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_CONSET,STCLASS=
              3443            CONSTANT);
      130     3463        /*E* ERROR: CPO-E$CPO_CONSET
      131     3464             MESSAGE: Conflicting PACKSET attributes
      132     3465        */
      133     3466        %EJECT;
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:29   
      134     3467    2     DO J=0 TO PSN_TBL.COUNT-1;

   3467  1 000002   200006 450100                    STZ     J,,AUTO
         1 000003   000034 710000 1                  TRA     s:3479+1

      135     3468    2        IF PSN.TXT = PSN_TBL.SN.TXT(J)

   3468  1 000004   200006 235100                    LDA     J,,AUTO
         1 000005   000003 735000                    ALS     3
         1 000006   200004 470500                    LDP0    @PSN,,AUTO
         1 000007   200003 471500                    LDP1    @PSN_TBL,,AUTO
         1 000010   040105 106500                    CMPC    fill='040'O
         1 000011   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
         1 000012   100001 000006                    ADSC9   1,A,PR1                  cn=0,n=6
         1 000013   000033 601000 1                  TNZ     s:3479

      136     3469    2           THEN
      137     3470    2              IF PSN.FLGS=PSN_TBL.SN.FLGS(J)

   3470  1 000014   200006 236100                    LDQ     J,,AUTO
         1 000015   000001 736000                    QLS     1
         1 000016   000000 620006                    EAX0    0,QL
         1 000017   000001 236100                    LDQ     1,,PR0
         1 000020   100002 676110                    ERQ     2,X0,PR1
         1 000021   600000 376007                    ANQ     -65536,DL
         1 000022   000026 600000 1                  TZE     s:3473
         1 000023   000001 236100                    LDQ     1,,PR0
         1 000024   600000 316007                    CANQ    -65536,DL
         1 000025   000027 601000 1                  TNZ     s:3476

      138     3471    2              OR PSN.FLGS=%NO#  /* Home packset request */
      139     3472    2                 THEN
      140     3473    2                    RETURN;                /* Just a duplicate                   */

   3473  1 000026   000000 702200 xent               TSX2  ! X66_ARET

      141     3474    2                 ELSE
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:30   
      142     3475    3                    DO;

      143     3476    3                       ERR_CODE = E_CONSET;

   3476  1 000027   000001 236000 0                  LDQ     E_CONSET
         1 000030   200005 473500                    LDP3    @ERR_CODE,,AUTO
         1 000031   300000 756100                    STQ     0,,PR3

      144     3477    3                       ALTRETURN;

   3477  1 000032   000000 702200 xent               TSX2  ! X66_AALT

      145     3478    3                    END;
      146     3479    2     END;

   3479  1 000033   200006 054100                    AOS     J,,AUTO
         1 000034   200003 470500                    LDP0    @PSN_TBL,,AUTO
         1 000035   200006 236100                    LDQ     J,,AUTO
         1 000036   000004 604000 1                  TMI     s:3468
         1 000037   000000 116100                    CMPQ    0,,PR0
         1 000040   000004 602000 1                  TNC     s:3468

      147     3480    1     IF PSN_TBL.COUNT>=PSN_SLOTS

   3480  1 000041   000000 235100                    LDA     0,,PR0
         1 000042   000050 115007                    CMPA    40,DL
         1 000043   000050 602000 1                  TNC     s:3488

      148     3481    1        THEN
      149     3482    2           DO;

      150     3483    2              ERR_CODE = E_MANYPSN;

   3483  1 000044   000000 236000 0                  LDQ     E_MANYPSN
         1 000045   200005 471500                    LDP1    @ERR_CODE,,AUTO
         1 000046   100000 756100                    STQ     0,,PR1

PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:31   
      151     3484    2              ALTRETURN;

   3484  1 000047   000000 702200 xent               TSX2  ! X66_AALT

      152     3485    2           END;
      153     3486    1        ELSE
      154     3487    2           DO;

      155     3488    2              IF PSN.FLGS=%NO#

   3488  1 000050   200004 471500                    LDP1    @PSN,,AUTO
         1 000051   100001 236100                    LDQ     1,,PR1
         1 000052   600000 316007                    CANQ    -65536,DL
         1 000053   000056 601000 1                  TNZ     s:3491

      156     3489    2                 THEN
      157     3490    2                    PSN.FLGS.PUB = %YES#; /* Home pack set                     */

   3490  1 000054   400000 236007                    LDQ     -131072,DL
         1 000055   100001 256100                    ORSQ    1,,PR1

      158     3491    2              PSN_TBL.SN(PSN_TBL.COUNT) = PSN;

   3491  1 000056   000000 235100                    LDA     0,,PR0
         1 000057   000001 735000                    ALS     1
         1 000060   000002 735000                    ALS     2
         1 000061   000105 100500                    MLR     fill='000'O
         1 000062   100000 000007                    ADSC9   0,,PR1                   cn=0,n=7
         1 000063   000001 000007                    ADSC9   1,A,PR0                  cn=0,n=7

      159     3492    2              PSN_TBL.COUNT = PSN_TBL.COUNT + 1;

   3492  1 000064   000000 235100                    LDA     0,,PR0
         1 000065   000001 035007                    ADLA    1,DL
         1 000066   000000 755100                    STA     0,,PR0

      160     3493    2           END;
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:32   

      161     3494    1     RETURN;

   3494  1 000067   000000 702200 xent               TSX2  ! X66_ARET
      162     3495    1   END     CPO$STORE_PSN;
      163     3496        %EOD;

PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:33   
--  Include file information  --

   JM$STRUCT.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPO$STORE_PSN.
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:34   

 **** Variables and constants ****

  ****  Section 000 RoData CPO$STORE_PSN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 E_CONSET                   0-0-0/w STRC        r     1 E_MANYPSN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ERR_CODE                  4-0-0/w PTR         r     1 @PSN
     3-0-0/w PTR         r     1 @PSN_TBL                  *0-0-0/w STRC        r     1 ERR_CODE
     6-0-0/w SBIN        r     1 J                         *0-0-0/w STRC(63)    r     1 PSN
    *0-0-0/w STRC(2988)  r     1 PSN_TBL


   Procedure CPO$STORE_PSN requires 56 words for executable code.
   Procedure CPO$STORE_PSN requires 8 words of local(AUTO) storage.
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPO$STORE_PSN File=CPO$SUBR.:E05TSI                           TUE 07/29/97 12:00 Page:36   
          MINI XREF LISTING

ERR_CODE
      3410**DCL         6--PROC     3476<<ASSIGN   3483<<ASSIGN
E_CONSET
      3456**DCL      3476>>ASSIGN
E_MANYPSN
      3433**DCL      3483>>ASSIGN
J
      3418**DCL      3467<<DOINDEX  3468>>IF       3470>>IF
PSN
      3373**DCL         6--PROC     3491>>ASSIGN
PSN.FLGS
      3380**DCL      3470>>IF       3470>>IF       3488>>IF
PSN.FLGS.PUB
      3382**DCL      3490<<ASSIGN
PSN.TXT
      3378**DCL      3468>>IF
PSN_TBL
      3314**DCL         6--PROC
PSN_TBL.COUNT
      3316**DCL      3467>>DOINDEX  3480>>IF       3491>>ASSIGN   3492<<ASSIGN   3492>>ASSIGN
PSN_TBL.SN
      3335**DCL      3491<<ASSIGN
PSN_TBL.SN.FLGS
      3340**DCL      3470>>IF
PSN_TBL.SN.TXT
      3338**DCL      3468>>IF

PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:37   
      164        1        /*T***********************************************************/
      165        2        /*T*                                                         */
      166        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      167        4        /*T*                                                         */
      168        5        /*T***********************************************************/
      169        6        CPO$VALATTR: PROC (RES_START,RES_FINISH,PHYS_START,PHYS_FINISH,VIRT_TBL,PHYS_LIST)
                 6            ALTRET;
      170        7        /***** Include files *****/
      171        8          %INCLUDE CP_6;
      172       89          %INCLUDE CP_SUBS_C;
      173     1006          %INCLUDE JM$STRUCT;
      174     1751        /***** Parameters *****/
      175     1752    1     DCL FOUND_IDX SBIN;
      176     1753    1     DCL RES_START SBIN;
      177     1754    1     DCL RES_FINISH SBIN;
      178     1755    1     DCL PHYS_START SBIN;
      179     1756    1     DCL PHYS_FINISH SBIN;
      180     1757          %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
      181     1812          %VLP_PRES(FPTN = PHYS_LIST,STCLASS = " ");
      182     1828    1   DCL U$BIN UBIN BASED;
      183     1829        %EJECT;
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:38   
      184     1830        /*
      185     1831             ***** I really have no idea what this routine does...
      186     1832                   CPO$GET_RES stuffs something into a UBIN form of ... RAT$
      187     1833                   and this routine looks at it.
      188     1834        */
      189     1835    1     IF RES_START>RES_FINISH
      190     1836    1        THEN
      191     1837    1           RETURN;
      192     1838    2     DO FOUND_IDX=PHYS_START TO PHYS_FINISH;
      193     1839    2        IF ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN>0
      194     1840    2             AND (PHYS_LIST.PRLIST.ATTR#(FOUND_IDX) & VIRT_TBL.RES.ATTRS(RES_START))
      195     1841    2             =VIRT_TBL.RES.ATTRS(RES_START)
      196     1842    2           THEN
      197     1843    3              DO;
      198     1844    3                 ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN
      199     1845    3                      = ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN - 1;
      200     1846    3                 RES_START = RES_START+1;
      201     1847    3                 CALL CPO$VALATTR(RES_START,RES_FINISH,PHYS_START,PHYS_FINISH,
      202     1848    3                       VIRT_TBL,PHYS_LIST) ALTRET(INVALID);
      203     1849    3                 ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN
      204     1850    3                      = ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN + 1;
      205     1851    3                 RETURN;                   /* Goin' home!!!                      */
      206     1852    3   INVALID:
      207     1853    3                 ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN
      208     1854    3                      = ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN + 1;
      209     1855    3                 RES_START = RES_START-1;
      210     1856    3              END;
      211     1857    2     END;
      212     1858    1     ALTRETURN;
      213     1859    1   END CPO$VALATTR;
      214     1860        %EOD;

PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:39   
--  Include file information  --

   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$VALATTR.

   Procedure CPO$VALATTR requires 61 words for executable code.
   Procedure CPO$VALATTR requires 10 words of local(AUTO) storage.

PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:40   

 Object Unit name= CPO$VALATTR                                File name= CPO$SUBR.:E05TOU
 UTS= JUL 29 '97 12:01:10.08 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    61     75  CPO$VALATTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        6  CPO$VALATTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_N
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:41   


      164        1        /*T***********************************************************/
      165        2        /*T*                                                         */
      166        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      167        4        /*T*                                                         */
      168        5        /*T***********************************************************/
      169        6        CPO$VALATTR: PROC (RES_START,RES_FINISH,PHYS_START,PHYS_FINISH,VIRT_TBL,PHYS_LIST)
                 6            ALTRET;

      6  1 000000   000000 700200 xent  CPO$VALATTR  TSX0  ! X66_AUTO_N
         1 000001   000012 000006                    ZERO    10,6

      170        7        /***** Include files *****/
      171        8          %INCLUDE CP_6;
      172       89          %INCLUDE CP_SUBS_C;
      173     1006          %INCLUDE JM$STRUCT;
      174     1751        /***** Parameters *****/
      175     1752    1     DCL FOUND_IDX SBIN;
      176     1753    1     DCL RES_START SBIN;
      177     1754    1     DCL RES_FINISH SBIN;
      178     1755    1     DCL PHYS_START SBIN;
      179     1756    1     DCL PHYS_FINISH SBIN;
      180     1757          %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
      181     1812          %VLP_PRES(FPTN = PHYS_LIST,STCLASS = " ");
      182     1828    1   DCL U$BIN UBIN BASED;
      183     1829        %EJECT;
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:42   
      184     1830        /*
      185     1831             ***** I really have no idea what this routine does...
      186     1832                   CPO$GET_RES stuffs something into a UBIN form of ... RAT$
      187     1833                   and this routine looks at it.
      188     1834        */
      189     1835    1     IF RES_START>RES_FINISH

   1835  1 000002   200003 470500                    LDP0    @RES_START,,AUTO
         1 000003   200004 471500                    LDP1    @RES_FINISH,,AUTO
         1 000004   000000 236100                    LDQ     0,,PR0
         1 000005   100000 116100                    CMPQ    0,,PR1
         1 000006   000010 604400 1                  TMOZ    s:1838

      190     1836    1        THEN
      191     1837    1           RETURN;

   1837  1 000007   000000 702200 xent               TSX2  ! X66_ARET

      192     1838    2     DO FOUND_IDX=PHYS_START TO PHYS_FINISH;

   1838  1 000010   200005 473500                    LDP3    @PHYS_START,,AUTO
         1 000011   300000 235100                    LDA     0,,PR3
         1 000012   200011 755100                    STA     FOUND_IDX,,AUTO
         1 000013   000070 710000 1                  TRA     s:1857+1

      193     1839    2        IF ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN>0

   1839  1 000014   200011 235100                    LDA     FOUND_IDX,,AUTO
         1 000015   000002 735000                    ALS     2
         1 000016   200010 470500                    LDP0    @PHYS_LIST,,AUTO
         1 000017   000004 235105                    LDA     4,AL,PR0
         1 000020   000067 600000 1                  TZE     s:1857
         1 000021   200003 471500                    LDP1    @RES_START,,AUTO
         1 000022   100000 235100                    LDA     0,,PR1
         1 000023   000001 735000                    ALS     1
         1 000024   200011 236100                    LDQ     FOUND_IDX,,AUTO
         1 000025   000002 736000                    QLS     2
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:43   
         1 000026   000003 720106                    LXL0    3,QL,PR0
         1 000027   200007 473500                    LDP3    @VIRT_TBL,,AUTO
         1 000030   300002 360105                    ANX0    2,AL,PR3
         1 000031   100000 235100                    LDA     0,,PR1
         1 000032   000001 735000                    ALS     1
         1 000033   300002 100105                    CMPX0   2,AL,PR3
         1 000034   000067 601000 1                  TNZ     s:1857

      194     1840    2             AND (PHYS_LIST.PRLIST.ATTR#(FOUND_IDX) & VIRT_TBL.RES.ATTRS(RES_START))
      195     1841    2             =VIRT_TBL.RES.ATTRS(RES_START)
      196     1842    2           THEN
      197     1843    3              DO;

      198     1844    3                 ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN

   1844  1 000035   000004 235106                    LDA     4,QL,PR0
         1 000036   000001 135007                    SBLA    1,DL
         1 000037   000004 755106                    STA     4,QL,PR0

      199     1845    3                      = ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN - 1;
      200     1846    3                 RES_START = RES_START+1;

   1846  1 000040   100000 054100                    AOS     0,,PR1

      201     1847    3                 CALL CPO$VALATTR(RES_START,RES_FINISH,PHYS_START,PHYS_FINISH,

   1847  1 000041   200003 630500                    EPPR0   @RES_START,,AUTO
         1 000042   000024 631400 xsym               EPPR1   B_VECTNIL+20
         1 000043   000000 701000 1                  TSX1    s:6
         1 000044   000055 702000 1                  TSX2    INVALID

      202     1848    3                       VIRT_TBL,PHYS_LIST) ALTRET(INVALID);
      203     1849    3                 ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN

   1849  1 000045   200011 235100                    LDA     FOUND_IDX,,AUTO
         1 000046   000002 735000                    ALS     2
         1 000047   200010 470500                    LDP0    @PHYS_LIST,,AUTO
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:44   
         1 000050   000000 620005                    EAX0    0,AL
         1 000051   000004 235105                    LDA     4,AL,PR0
         1 000052   000001 035007                    ADLA    1,DL
         1 000053   000004 755110                    STA     4,X0,PR0

      204     1850    3                      = ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN + 1;
      205     1851    3                 RETURN;                   /* Goin' home!!!                      */

   1851  1 000054   000000 702200 xent               TSX2  ! X66_ARET

      206     1852    3   INVALID:
      207     1853    3                 ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN

   1853  1 000055   200011 235100       INVALID      LDA     FOUND_IDX,,AUTO
         1 000056   000002 735000                    ALS     2
         1 000057   200010 470500                    LDP0    @PHYS_LIST,,AUTO
         1 000060   000000 620005                    EAX0    0,AL
         1 000061   000004 235105                    LDA     4,AL,PR0
         1 000062   000001 035007                    ADLA    1,DL
         1 000063   000004 755110                    STA     4,X0,PR0

      208     1854    3                      = ADDR(PHYS_LIST.PRLIST.RAT$(FOUND_IDX))->U$BIN + 1;
      209     1855    3                 RES_START = RES_START-1;

   1855  1 000064   200003 471500                    LDP1    @RES_START,,AUTO
         1 000065   000001 336007                    LCQ     1,DL
         1 000066   100000 056100                    ASQ     0,,PR1

      210     1856    3              END;

      211     1857    2     END;

   1857  1 000067   200011 054100                    AOS     FOUND_IDX,,AUTO
         1 000070   200006 470500                    LDP0    @PHYS_FINISH,,AUTO
         1 000071   200011 236100                    LDQ     FOUND_IDX,,AUTO
         1 000072   000000 116100                    CMPQ    0,,PR0
         1 000073   000014 604400 1                  TMOZ    s:1839
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:45   

      212     1858    1     ALTRETURN;

   1858  1 000074   000000 702200 xent               TSX2  ! X66_AALT
      213     1859    1   END CPO$VALATTR;
      214     1860        %EOD;

PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:46   
--  Include file information  --

   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$VALATTR.
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:47   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @PHYS_FINISH              10-0-0/w PTR         r     1 @PHYS_LIST
     5-0-0/w PTR         r     1 @PHYS_START                4-0-0/w PTR         r     1 @RES_FINISH
     3-0-0/w PTR         r     1 @RES_START                 7-0-0/w PTR         r     1 @VIRT_TBL
    11-0-0/w SBIN        r     1 FOUND_IDX                 *0-0-0/w SBIN        r     1 PHYS_FINISH
    *0-0-0/d STRC(360)   r     1 PHYS_LIST                 *0-0-0/w SBIN        r     1 PHYS_START
    *0-0-0/w SBIN        r     1 RES_FINISH                *0-0-0/w SBIN        r     1 RES_START
    *0-0-0/w STRC(2268)  r     1 VIRT_TBL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 U$BIN


   Procedure CPO$VALATTR requires 61 words for executable code.
   Procedure CPO$VALATTR requires 10 words of local(AUTO) storage.
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:48   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:49   
          MINI XREF LISTING

CPO$VALATTR
         6**PROC     1847--CALL
FOUND_IDX
      1752**DCL      1838<<DOINDEX  1839>>IF       1839>>IF       1844>>ASSIGN   1844>>ASSIGN   1849>>ASSIGN
      1849>>ASSIGN   1853>>ASSIGN   1853>>ASSIGN
INVALID
      1853**LABEL    1847--CALLALT
PHYS_FINISH
      1756**DCL         6--PROC     1838>>DOINDEX  1847<>CALL
PHYS_LIST
      1823**DCL         6--PROC     1847<>CALL
PHYS_LIST.PRLIST.ATTR#
      1825**DCL      1839>>IF
PHYS_LIST.PRLIST.RAT$
      1825**DCL      1839--IF       1844--ASSIGN   1844--ASSIGN   1849--ASSIGN   1849--ASSIGN   1853--ASSIGN
      1853--ASSIGN
PHYS_LIST.PRLIST.RNAME#
      1823**DCL      1824--REDEF
PHYS_START
      1755**DCL         6--PROC     1838>>DOINDEX  1847<>CALL
RES_FINISH
      1754**DCL         6--PROC     1835>>IF       1847<>CALL
RES_START
      1753**DCL         6--PROC     1835>>IF       1839>>IF       1839>>IF       1846<<ASSIGN   1846>>ASSIGN
      1847<>CALL     1855<<ASSIGN   1855>>ASSIGN
U$BIN
      1828**DCL      1839>>IF       1844<<ASSIGN   1844>>ASSIGN   1849<<ASSIGN   1849>>ASSIGN   1853<<ASSIGN
      1853>>ASSIGN
VIRT_TBL
      1770**DCL         6--PROC     1847<>CALL
VIRT_TBL.RES.ATTRS
      1800**DCL      1839>>IF       1839>>IF
PL6.E3A0      #003=CPO$VALATTR File=CPO$SUBR.:E05TSI                             TUE 07/29/97 12:01 Page:50   
VIRT_TBL.RES.VNUM
      1796**DCL      1798--REDEF

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:51   
      215        1        /*T***********************************************************/
      216        2        /*T*                                                         */
      217        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      218        4        /*T*                                                         */
      219        5        /*T***********************************************************/
      220        6        CPO$EXPAND: PROC (VIRT_TBL, ERR_CODE) ALTRET;
      221        7        /***** Include files *****/
      222        8          %INCLUDE CP_MACROS_C;
      223      760          %INCLUDE CP_PERR_C;
      224     1098          %INCLUDE CP_SUBS_C;
      225     2015          %INCLUDE JM$STRUCT;
      226     2760          %INCLUDE JM_SUBS_C;
      227     2866        /***** Parameters *****/
      228     2867          %JM_RESLIST (FPTN = VIRT_TBL, ARRAY = "(0:VIRT_SLOTS)", FIT = YES,STCLASS = " ");
      229     2922          %ERR_CODE (STCLASS = " ");
      230     2942        /***** Local variables *****/
      231     2943    1   DCL I SBIN;
      232     2944    1   DCL OBTAIN SBIN;
      233     2945    1   DCL ZERO SBIN;
      234     2946    1   DCL CUR_VNUM SBIN;
      235     2947    1   DCL END_VNUM SBIN;
      236     2948    1   DCL INSRT SBIN;
      237     2949        %JM_RES (FPTN = VRES,ARRAY = "(0:1)",TYP = LIST,STCLASS = AUTO);
      238     2986        %ERR_CODE (NAME = E_MANYVIRT,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MANYVIRT,
              2986            STCLASS=CONSTANT);
      239     3006        /**
      240     3007             ***** Find num of resources ...
      241     3008        */
      242     3009    1     OBTAIN = VIRT_TBL.COUNT-1;
      243     3010    1     VIRT_TBL.COUNT = 0;
      244     3011    2     DO I=0 TO OBTAIN;
      245     3012    2        IF VIRT_TBL.RES.NUM(I) ~= 99999
      246     3013    2           THEN   /* Not a RELEASE flag. Process */
      247     3014    2              VIRT_TBL.COUNT = VIRT_TBL.COUNT + VIRT_TBL.RES.NUM(I);
      248     3015    2           ELSE
      249     3016    2              VIRT_TBL.COUNT = VIRT_TBL.COUNT + 1;
      250     3017    2     END;
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:52   
      251     3018        /*
      252     3019             ***** If only RELEASE flags were found then
      253     3020                   VIRT_TBL is empty and this routine has
      254     3021                   nothing to do and should return ...
      255     3022        */
      256     3023    1     IF VIRT_TBL.COUNT = 0
      257     3024    1        THEN   /* Nothing to EXPAND */
      258     3025    1           RETURN;
      259     3026    1     INSRT = VIRT_TBL.COUNT-1;
      260     3027    1     IF VIRT_TBL.COUNT>VIRT_SLOTS
      261     3028    1        THEN
      262     3029    2           DO;
      263     3030    2              ERR_CODE = E_MANYVIRT;
      264     3031    2              ALTRETURN;
      265     3032    2           END;
      266     3033    2           DO WHILE(OBTAIN>=0);
      267     3034        /*
      268     3035             ***** Get CUR_VNUM, ZERO and VRES ...
      269     3036        */
      270     3037    2              ZERO = OBTAIN;
      271     3038    2              I = OBTAIN;
      272     3039    2              CUR_VNUM = VIRT_TBL.RES.NUM(I);
      273     3040    3              DO WHILE(I>0 AND VIRT_TBL.RES.TYPE(-1+I)=VIRT_TBL.RES.TYPE(OBTAIN));
      274     3041    3                 I = I-1;
      275     3042    3                 CUR_VNUM = CUR_VNUM + VIRT_TBL.RES.NUM(I);
      276     3043    3                 IF VIRT_TBL.RES.VNUMB(ZERO) ~= 0
      277     3044    3                    THEN                     /* First 'zero' vnum                  */
      278     3045    3                       ZERO = I;
      279     3046    3              END;   /* While I>0 ... VIRT_TBL.RES.TYPE(OBTAIN) */
      280     3047    2              VRES(0) = VIRT_TBL.RES(ZERO);
      281     3048    2              VRES(1) = VIRT_TBL.RES(OBTAIN);
      282     3049        /**
      283     3050             ***** Expand this resource type ...
      284     3051        */
      285     3052    2              IF VRES.TYPE(0)='LP'
      286     3053    2                 THEN
      287     3054    3                    DO;                    /* Don't generate an LP01             */
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:53   
      288     3055    3                       CUR_VNUM = CUR_VNUM+1;
      289     3056    3                       END_VNUM = 1;
      290     3057    3                    END;
      291     3058    2                 ELSE
      292     3059    2                    END_VNUM = 0;
      293     3060    3              DO WHILE(CUR_VNUM > END_VNUM);
      294     3061    3                 IF VRES.VNUMB(1)>=CUR_VNUM
      295     3062    3                    THEN
      296     3063    4                       DO;
      297     3064    4                          VIRT_TBL.RES(INSRT) = VRES(1);
      298     3065        /*
      299     3066             ***** Mark explicit VNUMBs by setting NUM to zero.
      300     3067        */
      301     3068    4                          VIRT_TBL.RES.NUM(INSRT) = 0;
      302     3069    4                          OBTAIN = OBTAIN-1;
      303     3070    4                          IF OBTAIN>=0
      304     3071    4                             THEN
      305     3072    4                                VRES(1) = VIRT_TBL.RES(OBTAIN);
      306     3073    4                       END;
      307     3074    3                    ELSE
      308     3075    4                       DO;
      309     3076    4                          IF VRES.NUM(0)=0
      310     3077    4                             THEN
      311     3078    5                                DO;
      312     3079    5                                   ZERO = ZERO-1;
      313     3080    5                                   VRES(0) = VIRT_TBL.RES(ZERO);
      314     3081    5                                END;
      315     3082    4                          VIRT_TBL.RES(INSRT) = VRES(0);
      316     3083    4                          IF VRES.NUM(0)=99999
      317     3084    4                             THEN
      318     3085    5                                DO;
      319     3086    5                                   VRES.NUM(0) = 1;
      320     3087    5                                   CUR_VNUM = CUR_VNUM-99998;
      321     3088    5                                END;
      322     3089    4                          VIRT_TBL.RES.VNUMB(INSRT) = CUR_VNUM;
      323     3090    4                          VRES.NUM(0) = VRES.NUM(0)-1;
      324     3091    4                       END;
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:54   
      325     3092    3                 CALL BINCHAR(VIRT_TBL.RES.VNUM(INSRT),VIRT_TBL.RES.VNUMB(INSRT));
      326     3093    3                 INSRT = INSRT-1;
      327     3094    3                 CUR_VNUM = CUR_VNUM-1;
      328     3095    3              END;   /* While CUR_VNUM >= END_VNUM */
      329     3096    2              OBTAIN = ZERO-1;
      330     3097    2           END;   /* While OBTAIN>=0 */
      331     3098    1     RETURN;
      332     3099    1   END CPO$EXPAND;
      333     3100        %EOD;

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:55   
--  Include file information  --

   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPO$EXPAND.

   Procedure CPO$EXPAND requires 173 words for executable code.
   Procedure CPO$EXPAND requires 20 words of local(AUTO) storage.

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:56   

 Object Unit name= CPO$EXPAND                                 File name= CPO$SUBR.:E05TOU
 UTS= JUL 29 '97 12:01:30.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  CPO$EXPAND
    1   Proc  even  none   173    255  CPO$EXPAND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  CPO$EXPAND

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:57   


      215        1        /*T***********************************************************/
      216        2        /*T*                                                         */
      217        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      218        4        /*T*                                                         */
      219        5        /*T***********************************************************/
      220        6        CPO$EXPAND: PROC (VIRT_TBL, ERR_CODE) ALTRET;

      6  1 000000   000000 700200 xent  CPO$EXPAND   TSX0  ! X66_AUTO_2
         1 000001   000024 000002                    ZERO    20,2

      221        7        /***** Include files *****/
      222        8          %INCLUDE CP_MACROS_C;
      223      760          %INCLUDE CP_PERR_C;
      224     1098          %INCLUDE CP_SUBS_C;
      225     2015          %INCLUDE JM$STRUCT;
      226     2760          %INCLUDE JM_SUBS_C;
      227     2866        /***** Parameters *****/
      228     2867          %JM_RESLIST (FPTN = VIRT_TBL, ARRAY = "(0:VIRT_SLOTS)", FIT = YES,STCLASS = " ");
      229     2922          %ERR_CODE (STCLASS = " ");
      230     2942        /***** Local variables *****/
      231     2943    1   DCL I SBIN;
      232     2944    1   DCL OBTAIN SBIN;
      233     2945    1   DCL ZERO SBIN;
      234     2946    1   DCL CUR_VNUM SBIN;
      235     2947    1   DCL END_VNUM SBIN;
      236     2948    1   DCL INSRT SBIN;
      237     2949        %JM_RES (FPTN = VRES,ARRAY = "(0:1)",TYP = LIST,STCLASS = AUTO);
      238     2986        %ERR_CODE (NAME = E_MANYVIRT,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MANYVIRT,
              2986            STCLASS=CONSTANT);
      239     3006        /**
      240     3007             ***** Find num of resources ...
      241     3008        */
      242     3009    1     OBTAIN = VIRT_TBL.COUNT-1;

   3009  1 000002   200003 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000003   000000 235100                    LDA     0,,PR0
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:58   
         1 000004   000001 135007                    SBLA    1,DL
         1 000005   200006 755100                    STA     OBTAIN,,AUTO

      243     3010    1     VIRT_TBL.COUNT = 0;

   3010  1 000006   000000 450100                    STZ     0,,PR0

      244     3011    2     DO I=0 TO OBTAIN;

   3011  1 000007   200005 450100                    STZ     I,,AUTO
         1 000010   000030 710000 1                  TRA     s:3017+1

      245     3012    2        IF VIRT_TBL.RES.NUM(I) ~= 99999

   3012  1 000011   200005 235100                    LDA     I,,AUTO
         1 000012   000001 735000                    ALS     1
         1 000013   200003 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000014   000002 720105                    LXL0    2,AL,PR0
         1 000015   303237 100003                    CMPX0   99999,DU
         1 000016   000024 600000 1                  TZE     s:3016

      246     3013    2           THEN   /* Not a RELEASE flag. Process */
      247     3014    2              VIRT_TBL.COUNT = VIRT_TBL.COUNT + VIRT_TBL.RES.NUM(I);

   3014  1 000017   000002 236105                    LDQ     2,AL,PR0
         1 000020   777777 376007                    ANQ     -1,DL
         1 000021   000000 036100                    ADLQ    0,,PR0
         1 000022   000000 756100                    STQ     0,,PR0
         1 000023   000027 710000 1                  TRA     s:3017

      248     3015    2           ELSE
      249     3016    2              VIRT_TBL.COUNT = VIRT_TBL.COUNT + 1;

   3016  1 000024   000000 235100                    LDA     0,,PR0
         1 000025   000001 035007                    ADLA    1,DL
         1 000026   000000 755100                    STA     0,,PR0

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:59   
      250     3017    2     END;

   3017  1 000027   200005 054100                    AOS     I,,AUTO
         1 000030   200005 236100                    LDQ     I,,AUTO
         1 000031   200006 116100                    CMPQ    OBTAIN,,AUTO
         1 000032   000011 604400 1                  TMOZ    s:3012

      251     3018        /*
      252     3019             ***** If only RELEASE flags were found then
      253     3020                   VIRT_TBL is empty and this routine has
      254     3021                   nothing to do and should return ...
      255     3022        */
      256     3023    1     IF VIRT_TBL.COUNT = 0

   3023  1 000033   000000 235100                    LDA     0,,PR0
         1 000034   000036 601000 1                  TNZ     s:3026

      257     3024    1        THEN   /* Nothing to EXPAND */
      258     3025    1           RETURN;

   3025  1 000035   000000 702200 xent               TSX2  ! X66_ARET

      259     3026    1     INSRT = VIRT_TBL.COUNT-1;

   3026  1 000036   000001 135007                    SBLA    1,DL
         1 000037   200012 755100                    STA     INSRT,,AUTO

      260     3027    1     IF VIRT_TBL.COUNT>VIRT_SLOTS

   3027  1 000040   000000 235100                    LDA     0,,PR0
         1 000041   000037 115007                    CMPA    31,DL
         1 000042   000047 602000 1                  TNC     s:3033

      261     3028    1        THEN
      262     3029    2           DO;

      263     3030    2              ERR_CODE = E_MANYVIRT;
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:60   

   3030  1 000043   000000 236000 0                  LDQ     E_MANYVIRT
         1 000044   200004 471500                    LDP1    @ERR_CODE,,AUTO
         1 000045   100000 756100                    STQ     0,,PR1

      264     3031    2              ALTRETURN;

   3031  1 000046   000000 702200 xent               TSX2  ! X66_AALT

      265     3032    2           END;
      266     3033    2           DO WHILE(OBTAIN>=0);

   3033  1 000047   200006 235100                    LDA     OBTAIN,,AUTO
         1 000050   000254 604000 1                  TMI     s:3098

      267     3034        /*
      268     3035             ***** Get CUR_VNUM, ZERO and VRES ...
      269     3036        */
      270     3037    2              ZERO = OBTAIN;

   3037  1 000051   200006 235100                    LDA     OBTAIN,,AUTO
         1 000052   200007 755100                    STA     ZERO,,AUTO

      271     3038    2              I = OBTAIN;

   3038  1 000053   200005 755100                    STA     I,,AUTO

      272     3039    2              CUR_VNUM = VIRT_TBL.RES.NUM(I);

   3039  1 000054   000001 735000                    ALS     1
         1 000055   200003 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000056   000002 236105                    LDQ     2,AL,PR0
         1 000057   777777 376007                    ANQ     -1,DL
         1 000060   200010 756100                    STQ     CUR_VNUM,,AUTO

      273     3040    3              DO WHILE(I>0 AND VIRT_TBL.RES.TYPE(-1+I)=VIRT_TBL.RES.TYPE(OBTAIN));

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:61   
   3040  1 000061   000101 710000 1                  TRA     s:3046

      274     3041    3                 I = I-1;

   3041  1 000062   000001 336007                    LCQ     1,DL
         1 000063   200005 056100                    ASQ     I,,AUTO

      275     3042    3                 CUR_VNUM = CUR_VNUM + VIRT_TBL.RES.NUM(I);

   3042  1 000064   200005 235100                    LDA     I,,AUTO
         1 000065   000001 735000                    ALS     1
         1 000066   200003 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000067   000002 236105                    LDQ     2,AL,PR0
         1 000070   777777 376007                    ANQ     -1,DL
         1 000071   200010 036100                    ADLQ    CUR_VNUM,,AUTO
         1 000072   200010 756100                    STQ     CUR_VNUM,,AUTO

      276     3043    3                 IF VIRT_TBL.RES.VNUMB(ZERO) ~= 0

   3043  1 000073   200007 235100                    LDA     ZERO,,AUTO
         1 000074   000001 735000                    ALS     1
         1 000075   000001 720105                    LXL0    1,AL,PR0
         1 000076   000101 600000 1                  TZE     s:3046

      277     3044    3                    THEN                     /* First 'zero' vnum                  */
      278     3045    3                       ZERO = I;

   3045  1 000077   200005 235100                    LDA     I,,AUTO
         1 000100   200007 755100                    STA     ZERO,,AUTO

      279     3046    3              END;   /* While I>0 ... VIRT_TBL.RES.TYPE(OBTAIN) */

   3046  1 000101   200005 235100                    LDA     I,,AUTO
         1 000102   000111 604400 1                  TMOZ    s:3047
         1 000103   000001 735000                    ALS     1
         1 000104   077777 220105                    LDX0    -1,AL,PR0
         1 000105   200006 235100                    LDA     OBTAIN,,AUTO
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:62   
         1 000106   000001 735000                    ALS     1
         1 000107   000001 100105                    CMPX0   1,AL,PR0
         1 000110   000062 600000 1                  TZE     s:3041

      280     3047    2              VRES(0) = VIRT_TBL.RES(ZERO);

   3047  1 000111   200007 235100                    LDA     ZERO,,AUTO
         1 000112   000003 735000                    ALS     3
         1 000113   000100 100505                    MLR     fill='000'O
         1 000114   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8
         1 000115   200013 000010                    ADSC9   VRES,,AUTO               cn=0,n=8

      281     3048    2              VRES(1) = VIRT_TBL.RES(OBTAIN);

   3048  1 000116   200006 235100                    LDA     OBTAIN,,AUTO
         1 000117   000003 735000                    ALS     3
         1 000120   000100 100505                    MLR     fill='000'O
         1 000121   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8
         1 000122   200015 000010                    ADSC9   VRES+2,,AUTO             cn=0,n=8

      282     3049        /**
      283     3050             ***** Expand this resource type ...
      284     3051        */
      285     3052    2              IF VRES.TYPE(0)='LP'

   3052  1 000123   200013 220100                    LDX0    VRES,,AUTO
         1 000124   000001 100000 0                  CMPX0   E_MANYVIRT+1
         1 000125   000132 601000 1                  TNZ     s:3059

      286     3053    2                 THEN
      287     3054    3                    DO;                    /* Don't generate an LP01             */

      288     3055    3                       CUR_VNUM = CUR_VNUM+1;

   3055  1 000126   200010 054100                    AOS     CUR_VNUM,,AUTO

      289     3056    3                       END_VNUM = 1;
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:63   

   3056  1 000127   000001 236007                    LDQ     1,DL
         1 000130   200011 756100                    STQ     END_VNUM,,AUTO

      290     3057    3                    END;

   3057  1 000131   000133 710000 1                  TRA     s:3060

      291     3058    2                 ELSE
      292     3059    2                    END_VNUM = 0;

   3059  1 000132   200011 450100                    STZ     END_VNUM,,AUTO

      293     3060    3              DO WHILE(CUR_VNUM > END_VNUM);

   3060  1 000133   200010 236100                    LDQ     CUR_VNUM,,AUTO
         1 000134   200011 116100                    CMPQ    END_VNUM,,AUTO
         1 000135   000250 604400 1                  TMOZ    s:3096

      294     3061    3                 IF VRES.VNUMB(1)>=CUR_VNUM

   3061  1 000136   200015 236100                    LDQ     VRES+2,,AUTO
         1 000137   777777 376007                    ANQ     -1,DL
         1 000140   200010 116100                    CMPQ    CUR_VNUM,,AUTO
         1 000141   000166 604000 1                  TMI     s:3076

      295     3062    3                    THEN
      296     3063    4                       DO;

      297     3064    4                          VIRT_TBL.RES(INSRT) = VRES(1);

   3064  1 000142   200012 235100                    LDA     INSRT,,AUTO
         1 000143   000001 735000                    ALS     1
         1 000144   000002 735000                    ALS     2
         1 000145   200003 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000146   000105 100500                    MLR     fill='000'O
         1 000147   200015 000010                    ADSC9   VRES+2,,AUTO             cn=0,n=8
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:64   
         1 000150   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8

      298     3065        /*
      299     3066             ***** Mark explicit VNUMBs by setting NUM to zero.
      300     3067        */
      301     3068    4                          VIRT_TBL.RES.NUM(INSRT) = 0;

   3068  1 000151   200012 235100                    LDA     INSRT,,AUTO
         1 000152   000001 735000                    ALS     1
         1 000153   000000 220003                    LDX0    0,DU
         1 000154   000002 440105                    SXL0    2,AL,PR0

      302     3069    4                          OBTAIN = OBTAIN-1;

   3069  1 000155   000001 336007                    LCQ     1,DL
         1 000156   200006 056100                    ASQ     OBTAIN,,AUTO

      303     3070    4                          IF OBTAIN>=0

   3070  1 000157   000225 604000 1                  TMI     s:3092

      304     3071    4                             THEN
      305     3072    4                                VRES(1) = VIRT_TBL.RES(OBTAIN);

   3072  1 000160   200006 235100                    LDA     OBTAIN,,AUTO
         1 000161   000003 735000                    ALS     3
         1 000162   000100 100505                    MLR     fill='000'O
         1 000163   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8
         1 000164   200015 000010                    ADSC9   VRES+2,,AUTO             cn=0,n=8

      306     3073    4                       END;

   3073  1 000165   000225 710000 1                  TRA     s:3092

      307     3074    3                    ELSE
      308     3075    4                       DO;

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:65   
      309     3076    4                          IF VRES.NUM(0)=0

   3076  1 000166   200014 720100                    LXL0    VRES+1,,AUTO
         1 000167   000200 601000 1                  TNZ     s:3082

      310     3077    4                             THEN
      311     3078    5                                DO;

      312     3079    5                                   ZERO = ZERO-1;

   3079  1 000170   000001 336007                    LCQ     1,DL
         1 000171   200007 056100                    ASQ     ZERO,,AUTO

      313     3080    5                                   VRES(0) = VIRT_TBL.RES(ZERO);

   3080  1 000172   200007 235100                    LDA     ZERO,,AUTO
         1 000173   000003 735000                    ALS     3
         1 000174   200003 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000175   000100 100505                    MLR     fill='000'O
         1 000176   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8
         1 000177   200013 000010                    ADSC9   VRES,,AUTO               cn=0,n=8

      314     3081    5                                END;

      315     3082    4                          VIRT_TBL.RES(INSRT) = VRES(0);

   3082  1 000200   200012 235100                    LDA     INSRT,,AUTO
         1 000201   000001 735000                    ALS     1
         1 000202   000002 735000                    ALS     2
         1 000203   200003 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000204   000105 100500                    MLR     fill='000'O
         1 000205   200013 000010                    ADSC9   VRES,,AUTO               cn=0,n=8
         1 000206   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8

      316     3083    4                          IF VRES.NUM(0)=99999

   3083  1 000207   200014 720100                    LXL0    VRES+1,,AUTO
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:66   
         1 000210   303237 100003                    CMPX0   99999,DU
         1 000211   000216 601000 1                  TNZ     s:3089

      317     3084    4                             THEN
      318     3085    5                                DO;

      319     3086    5                                   VRES.NUM(0) = 1;

   3086  1 000212   000001 221003                    LDX1    1,DU
         1 000213   200014 441100                    SXL1    VRES+1,,AUTO

      320     3087    5                                   CUR_VNUM = CUR_VNUM-99998;

   3087  1 000214   303236 336007                    LCQ     99998,DL
         1 000215   200010 056100                    ASQ     CUR_VNUM,,AUTO

      321     3088    5                                END;

      322     3089    4                          VIRT_TBL.RES.VNUMB(INSRT) = CUR_VNUM;

   3089  1 000216   200012 235100                    LDA     INSRT,,AUTO
         1 000217   000001 735000                    ALS     1
         1 000220   200010 720100                    LXL0    CUR_VNUM,,AUTO
         1 000221   000001 440105                    SXL0    1,AL,PR0

      323     3090    4                          VRES.NUM(0) = VRES.NUM(0)-1;

   3090  1 000222   200014 721100                    LXL1    VRES+1,,AUTO
         1 000223   777777 622011                    EAX2    -1,X1
         1 000224   200014 442100                    SXL2    VRES+1,,AUTO

      324     3091    4                       END;

      325     3092    3                 CALL BINCHAR(VIRT_TBL.RES.VNUM(INSRT),VIRT_TBL.RES.VNUMB(INSRT));

   3092  1 000225   200012 235100                    LDA     INSRT,,AUTO
         1 000226   000003 735000                    ALS     3
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:67   
         1 000227   200012 236100                    LDQ     INSRT,,AUTO
         1 000230   000001 736000                    QLS     1
         1 000231   000001 236106                    LDQ     1,QL,PR0
         1 000232   777777 376007                    ANQ     -1,DL
         1 000233   200020 755100                    STA     VRES+5,,AUTO
         1 000234   000000 235003                    LDA     0,DU
         1 000235   200022 757100                    STAQ    VRES+7,,AUTO
         1 000236   200020 235100                    LDA     VRES+5,,AUTO
         1 000237   000105 301500                    BTD
         1 000240   200022 000010                    NDSC9   VRES+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         1 000241   000001 430002                    NDSC9   1,A,PR0                  cn=2,s=nosgn,sf=0,n=2

      326     3093    3                 INSRT = INSRT-1;

   3093  1 000242   000001 336007                    LCQ     1,DL
         1 000243   200012 056100                    ASQ     INSRT,,AUTO

      327     3094    3                 CUR_VNUM = CUR_VNUM-1;

   3094  1 000244   200010 056100                    ASQ     CUR_VNUM,,AUTO

      328     3095    3              END;   /* While CUR_VNUM >= END_VNUM */

   3095  1 000245   200010 236100                    LDQ     CUR_VNUM,,AUTO
         1 000246   200011 116100                    CMPQ    END_VNUM,,AUTO
         1 000247   000136 605400 1                  TPNZ    s:3061

      329     3096    2              OBTAIN = ZERO-1;

   3096  1 000250   200007 235100                    LDA     ZERO,,AUTO
         1 000251   000001 135007                    SBLA    1,DL
         1 000252   200006 755100                    STA     OBTAIN,,AUTO

      330     3097    2           END;   /* While OBTAIN>=0 */

   3097  1 000253   000051 605000 1                  TPL     s:3037

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:68   
      331     3098    1     RETURN;

   3098  1 000254   000000 702200 xent               TSX2  ! X66_ARET
      332     3099    1   END CPO$EXPAND;
      333     3100        %EOD;

PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:69   
--  Include file information  --

   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPO$EXPAND.
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:70   

 **** Variables and constants ****

  ****  Section 000 RoData CPO$EXPAND

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_MANYVIRT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @ERR_CODE                  3-0-0/w PTR         r     1 @VIRT_TBL
    10-0-0/w SBIN        r     1 CUR_VNUM                  11-0-0/w SBIN        r     1 END_VNUM
    *0-0-0/w STRC        r     1 ERR_CODE                   5-0-0/w SBIN        r     1 I
    12-0-0/w SBIN        r     1 INSRT                      6-0-0/w SBIN        r     1 OBTAIN
    *0-0-0/w STRC(2268)  r     1 VIRT_TBL                  13-0-0/w STRC(72)    r     1 VRES(0:1)
     7-0-0/w SBIN        r     1 ZERO


   Procedure CPO$EXPAND requires 173 words for executable code.
   Procedure CPO$EXPAND requires 20 words of local(AUTO) storage.
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:71   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:72   
          MINI XREF LISTING

CUR_VNUM
      2946**DCL      3039<<ASSIGN   3042<<ASSIGN   3042>>ASSIGN   3055<<ASSIGN   3055>>ASSIGN   3060>>DOWHILE
      3061>>IF       3087<<ASSIGN   3087>>ASSIGN   3089>>ASSIGN   3094<<ASSIGN   3094>>ASSIGN
END_VNUM
      2947**DCL      3056<<ASSIGN   3059<<ASSIGN   3060>>DOWHILE
ERR_CODE
      2935**DCL         6--PROC     3030<<ASSIGN
E_MANYVIRT
      2999**DCL      3030>>ASSIGN
I
      2943**DCL      3011<<DOINDEX  3012>>IF       3014>>ASSIGN   3038<<ASSIGN   3039>>ASSIGN   3040>>DOWHILE
      3040>>DOWHILE  3041<<ASSIGN   3041>>ASSIGN   3042>>ASSIGN   3045>>ASSIGN
INSRT
      2948**DCL      3026<<ASSIGN   3064>>ASSIGN   3068>>ASSIGN   3082>>ASSIGN   3089>>ASSIGN   3092>>CALLBLT
      3092>>CALLBLT  3093<<ASSIGN   3093>>ASSIGN
OBTAIN
      2944**DCL      3009<<ASSIGN   3011>>DOINDEX  3033>>DOWHILE  3037>>ASSIGN   3038>>ASSIGN   3040>>DOWHILE
      3048>>ASSIGN   3069<<ASSIGN   3069>>ASSIGN   3070>>IF       3072>>ASSIGN   3096<<ASSIGN
VIRT_TBL
      2880**DCL         6--PROC
VIRT_TBL.COUNT
      2882**DCL      3009>>ASSIGN   3010<<ASSIGN   3014<<ASSIGN   3014>>ASSIGN   3016<<ASSIGN   3016>>ASSIGN
      3023>>IF       3026>>ASSIGN   3027>>IF
VIRT_TBL.RES
      2901**DCL      3047>>ASSIGN   3048>>ASSIGN   3064<<ASSIGN   3072>>ASSIGN   3080>>ASSIGN   3082<<ASSIGN
VIRT_TBL.RES.NUM
      2918**DCL      3012>>IF       3014>>ASSIGN   3039>>ASSIGN   3042>>ASSIGN   3068<<ASSIGN
VIRT_TBL.RES.TYPE
      2904**DCL      3040>>DOWHILE  3040>>DOWHILE
VIRT_TBL.RES.VNUM
      2906**DCL      2908--REDEF    3092<<CALLBLT
VIRT_TBL.RES.VNUMB
PL6.E3A0      #004=CPO$EXPAND File=CPO$SUBR.:E05TSI                              TUE 07/29/97 12:01 Page:73   
      2908**DCL      3043>>IF       3089<<ASSIGN   3092>>CALLBLT
VRES
      2964**DCL      3047<<ASSIGN   3048<<ASSIGN   3064>>ASSIGN   3072<<ASSIGN   3080<<ASSIGN   3082>>ASSIGN
VRES.NUM
      2983**DCL      3076>>IF       3083>>IF       3086<<ASSIGN   3090<<ASSIGN   3090>>ASSIGN
VRES.TYPE
      2969**DCL      3052>>IF
VRES.VNUM
      2971**DCL      2973--REDEF
VRES.VNUMB
      2973**DCL      3061>>IF
ZERO
      2945**DCL      3037<<ASSIGN   3043>>IF       3045<<ASSIGN   3047>>ASSIGN   3079<<ASSIGN   3079>>ASSIGN
      3080>>ASSIGN   3096>>ASSIGN

PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:74   
      334        1        /*T***********************************************************/
      335        2        /*T*                                                         */
      336        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      337        4        /*T*                                                         */
      338        5        /*T***********************************************************/
      339        6        /*P*       NAME: CPO$VALIDATE
      340        7                   PURPOSE: To validate a resource requests.
      341        8                   DESCRIPTION: When this routine is called RES_START
      342        9                                points to the first resource in VIRT_TBL
      343       10                                to be checked. RES_FINISH is found, and
      344       11                                with RES_START brackets all resources of
      345       12                                the same type as RES_START. This number
      346       13                                is compared to the number authorized in
      347       14                                the :USERS record for this MODE. This number
      348       15                                is then checked against the number of resources
      349       16                                that the system actually has available of
      350       17                                type. Any error in the checks causes an ALTRETURN.
      351       18        */
      352       19        CPO$VALIDATE: PROC (RES_START, MODE, VIRT_TBL, PHYS_LIST, AS_USERS, ERR_CODE,
                19            ERR_TEXT) ALTRET;
      353       20        /***** Include files *****/
      354       21          %INCLUDE AS_SUPER_C;
      355      456          %INCLUDE B$JIT;
      356      746          %INCLUDE CP_6;
      357      827          %INCLUDE CP_MACROS_C;
      358     1579          %INCLUDE CP_SUBS_C;
      359     2496          %INCLUDE CP_PERR_C;
      360     2834          %INCLUDE JM$STRUCT;
      361     3579        /***** Parameters *****/
      362     3580    1     DCL RES_START SBIN;
      363     3581    1     DCL MODE SBIN;
      364     3582          %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
      365     3637          %VLP_PRES (FPTN = PHYS_LIST,STCLASS = " ");
      366     3653          %AS_USERS (STR_NAME = AS_USERS,STCLASS = " ");
      367     3831          %ERR_CODE (STCLASS = " ");
      368     3851          %VLP_NAME (FPTN = ERR_TEXT,LEN = 2,STCLASS = " ");
      369     3878        /***** Symref data *****/
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:75   
      370     3879    1     DCL B$JIT$ PTR SYMREF READONLY;
      371     3880        /***** External routines *****/
      372     3881    1      DCL CPO$VALATTR ENTRY(6) ALTRET;
      373     3882        /***** Local variables *****/
      374     3883    1     DCL RES_FINISH SBIN AUTO;
      375     3884    1     DCL PHYS_START SBIN AUTO;
      376     3885    1     DCL PHYS_FINISH SBIN AUTO;
      377     3886    1     DCL I SBIN AUTO;
      378     3887    1     DCL TEMP SBIN AUTO;
      379     3888        /***** Error codes *****/
      380     3889        %ERR_CODE (NAME=E_MAXRES,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MAXRES,STCLASS=
              3889            CONSTANT);
      381     3909        /*E* ERROR: CPO-E$CPO_MAXRES-0
      382     3910             MESSAGE: User maximum exceeded for resource %U1
      383     3911        */
      384     3912        %ERR_CODE (NAME=E_INVALIDATTR,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_INVALIDATTR,
              3912            STCLASS=CONSTANT);
      385     3932        /*E* ERROR: CPO-E$CPO_INVALIDATTR-0
      386     3933         MESSAGE: System does not own any/enough resources with that combination of attribut
              3933        es.
      387     3934        */
      388     3935        %EJECT;
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:76   
      389     3936        /**
      390     3937             ***** Get RES_FINISH ...
      391     3938        */
      392     3939    1     RES_FINISH = RES_START-1;
      393     3940    2     DO WHILE(RES_FINISH<VIRT_TBL.COUNT-1
      394     3941    2             AND VIRT_TBL.RES.TYPE(1+RES_FINISH)=VIRT_TBL.RES.TYPE(RES_START));
      395     3942    2        RES_FINISH = RES_FINISH+1;
      396     3943    2     END;
      397     3944        /**
      398     3945             ***** Find the matching resource in AS_USERS table ...
      399     3946        */
      400     3947    1     I = 0;
      401     3948    2     DO WHILE(AS_USERS.RESL.RNAME(I)~=VIRT_TBL.RES.TYPE(RES_START));
      402     3949    2        I = I+1;
      403     3950    2     END;
      404     3951        /*
      405     3952             ***** Get the maximum resource count for this MODE ...
      406     3953        */
      407     3954    2     DO CASE (MODE);
      408     3955    2        CASE (%M_INT#);
      409     3956    2           TEMP = AS_USERS.RESL.OMAX(I);
      410     3957    2        CASE (%M_BATCH#);
      411     3958    2           TEMP = AS_USERS.RESL.BMAX(I);
      412     3959    2        CASE (%M_GHOST#);
      413     3960    2           TEMP = AS_USERS.RESL.GMAX(I);
      414     3961    2        CASE (%M_TP#);
      415     3962    2           TEMP = AS_USERS.RESL.TMAX(I);
      416     3963    2     END;   /* Do case(MODE) */
      417     3964    1     IF RES_FINISH-RES_START+1 > TEMP
      418     3965    1        THEN
      419     3966    2           DO;
      420     3967    2              ERR_TEXT.NAME# = VIRT_TBL.RES.TYPE(RES_START);
      421     3968    2                 ERR_TEXT.L# = SIZEC(VIRT_TBL.RES.TYPE(RES_START));
      422     3969    2              ERR_CODE = E_MAXRES;
      423     3970    2              RES_START = RES_FINISH+1;
      424     3971    2              ALTRETURN;
      425     3972    2           END;
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:77   
      426     3973    1        ELSE
      427     3974    2           DO;
      428     3975        /**
      429     3976             ***** Find PHYS_START ...
      430     3977        */
      431     3978    2              PHYS_START = 0;
      432     3979    3              DO WHILE(PHYS_LIST.PRLIST.RNME.TYP(PHYS_START)~=VIRT_TBL.RES.TYPE(
              3979                       RES_START));
      433     3980    3                 PHYS_START = PHYS_START+1;
      434     3981    3              END;
      435     3982        /**
      436     3983             ***** Find PHYS_FINISH ...
      437     3984        */
      438     3985    2              PHYS_FINISH = PHYS_START-1;
      439     3986    3              DO WHILE(PHYS_LIST.PRLIST.RNME.TYP(1+PHYS_FINISH)=PHYS_LIST.PRLIST.RNME.
              3986                       TYP(PHYS_START));
      440     3987    3                 PHYS_FINISH = PHYS_FINISH+1;
      441     3988    3              END;
      442     3989        /**
      443     3990             ***** Validate against system resource attributes ...
      444     3991        */
      445     3992    2              CALL CPO$VALATTR(RES_START,RES_FINISH,PHYS_START,PHYS_FINISH,
      446     3993    2                    VIRT_TBL,PHYS_LIST) ALTRET(INVALID);
      447     3994    3              DO NEVER;
      448     3995    3   INVALID:
      449     3996    3                 ERR_TEXT.NAME# = VIRT_TBL.RES.TYPE(RES_START);
      450     3997    3                 ERR_TEXT.L# = SIZEC(VIRT_TBL.RES.TYPE(RES_START));
      451     3998    3                 ERR_CODE = E_INVALIDATTR;
      452     3999    3                 RES_START = RES_FINISH+1;
      453     4000    3                 ALTRETURN;
      454     4001    3              END;
      455     4002    2           END;   /* Else DO ... END */
      456     4003    1     RES_START = RES_FINISH+1;
      457     4004    1     RETURN;
      458     4005    1   END CPO$VALIDATE;
      459     4006        %EOD;

PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:78   
--  Include file information  --

   JM$STRUCT.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$VALIDATE.

   Procedure CPO$VALIDATE requires 184 words for executable code.
   Procedure CPO$VALIDATE requires 22 words of local(AUTO) storage.

PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:79   

 Object Unit name= CPO$VALIDATE                               File name= CPO$SUBR.:E05TOU
 UTS= JUL 29 '97 12:01:55.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      2      2  CPO$VALIDATE
    2   Proc  even  none   184    270  CPO$VALIDATE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        7  CPO$VALIDATE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 CPO$VALATTR
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$JIT$                                B_VECTNIL
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:80   


      334        1        /*T***********************************************************/
      335        2        /*T*                                                         */
      336        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      337        4        /*T*                                                         */
      338        5        /*T***********************************************************/
      339        6        /*P*       NAME: CPO$VALIDATE
      340        7                   PURPOSE: To validate a resource requests.
      341        8                   DESCRIPTION: When this routine is called RES_START
      342        9                                points to the first resource in VIRT_TBL
      343       10                                to be checked. RES_FINISH is found, and
      344       11                                with RES_START brackets all resources of
      345       12                                the same type as RES_START. This number
      346       13                                is compared to the number authorized in
      347       14                                the :USERS record for this MODE. This number
      348       15                                is then checked against the number of resources
      349       16                                that the system actually has available of
      350       17                                type. Any error in the checks causes an ALTRETURN.
      351       18        */
      352       19        CPO$VALIDATE: PROC (RES_START, MODE, VIRT_TBL, PHYS_LIST, AS_USERS, ERR_CODE,
                19            ERR_TEXT) ALTRET;

     19  2 000000   000000 700200 xent  CPO$VALIDATE TSX0  ! X66_AUTO_N
         2 000001   000026 000007                    ZERO    22,7

      353       20        /***** Include files *****/
      354       21          %INCLUDE AS_SUPER_C;
      355      456          %INCLUDE B$JIT;
      356      746          %INCLUDE CP_6;
      357      827          %INCLUDE CP_MACROS_C;
      358     1579          %INCLUDE CP_SUBS_C;
      359     2496          %INCLUDE CP_PERR_C;
      360     2834          %INCLUDE JM$STRUCT;
      361     3579        /***** Parameters *****/
      362     3580    1     DCL RES_START SBIN;
      363     3581    1     DCL MODE SBIN;
      364     3582          %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:81   
      365     3637          %VLP_PRES (FPTN = PHYS_LIST,STCLASS = " ");
      366     3653          %AS_USERS (STR_NAME = AS_USERS,STCLASS = " ");
      367     3831          %ERR_CODE (STCLASS = " ");
      368     3851          %VLP_NAME (FPTN = ERR_TEXT,LEN = 2,STCLASS = " ");
      369     3878        /***** Symref data *****/
      370     3879    1     DCL B$JIT$ PTR SYMREF READONLY;
      371     3880        /***** External routines *****/
      372     3881    1      DCL CPO$VALATTR ENTRY(6) ALTRET;
      373     3882        /***** Local variables *****/
      374     3883    1     DCL RES_FINISH SBIN AUTO;
      375     3884    1     DCL PHYS_START SBIN AUTO;
      376     3885    1     DCL PHYS_FINISH SBIN AUTO;
      377     3886    1     DCL I SBIN AUTO;
      378     3887    1     DCL TEMP SBIN AUTO;
      379     3888        /***** Error codes *****/
      380     3889        %ERR_CODE (NAME=E_MAXRES,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MAXRES,STCLASS=
              3889            CONSTANT);
      381     3909        /*E* ERROR: CPO-E$CPO_MAXRES-0
      382     3910             MESSAGE: User maximum exceeded for resource %U1
      383     3911        */
      384     3912       %ERR_CODE (NAME=E_INVALIDATTR,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_INVALIDATTR,
              3912            STCLASS=CONSTANT);
      385     3932        /*E* ERROR: CPO-E$CPO_INVALIDATTR-0
      386     3933        MESSAGE: System does not own any/enough resources with that combination of attribut
              3933        es.
      387     3934        */
      388     3935        %EJECT;
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:82   
      389     3936        /**
      390     3937             ***** Get RES_FINISH ...
      391     3938        */
      392     3939    1     RES_FINISH = RES_START-1;

   3939  2 000002   200003 470500                    LDP0    @RES_START,,AUTO
         2 000003   000000 235100                    LDA     0,,PR0
         2 000004   000001 135007                    SBLA    1,DL
         2 000005   200012 755100                    STA     RES_FINISH,,AUTO

      393     3940    2     DO WHILE(RES_FINISH<VIRT_TBL.COUNT-1

   3940  2 000006   000010 710000 2                  TRA     s:3943

      394     3941    2             AND VIRT_TBL.RES.TYPE(1+RES_FINISH)=VIRT_TBL.RES.TYPE(RES_START));
      395     3942    2        RES_FINISH = RES_FINISH+1;

   3942  2 000007   200012 054100                    AOS     RES_FINISH,,AUTO

      396     3943    2     END;

   3943  2 000010   200005 470500                    LDP0    @VIRT_TBL,,AUTO
         2 000011   000000 236100                    LDQ     0,,PR0
         2 000012   000001 136007                    SBLQ    1,DL
         2 000013   200012 116100                    CMPQ    RES_FINISH,,AUTO
         2 000014   000025 604400 2                  TMOZ    s:3947
         2 000015   200003 471500                    LDP1    @RES_START,,AUTO
         2 000016   100000 235100                    LDA     0,,PR1
         2 000017   000001 735000                    ALS     1
         2 000020   200012 236100                    LDQ     RES_FINISH,,AUTO
         2 000021   000001 736000                    QLS     1
         2 000022   000003 220106                    LDX0    3,QL,PR0
         2 000023   000001 100105                    CMPX0   1,AL,PR0
         2 000024   000007 600000 2                  TZE     s:3942

      397     3944        /**
      398     3945             ***** Find the matching resource in AS_USERS table ...
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:83   
      399     3946        */
      400     3947    1     I = 0;

   3947  2 000025   200015 450100                    STZ     I,,AUTO

      401     3948    2     DO WHILE(AS_USERS.RESL.RNAME(I)~=VIRT_TBL.RES.TYPE(RES_START));

   3948  2 000026   200003 471500                    LDP1    @RES_START,,AUTO
         2 000027   100000 235100                    LDA     0,,PR1
         2 000030   000001 735000                    ALS     1
         2 000031   200015 236100                    LDQ     I,,AUTO
         2 000032   200020 755100                    STA     TEMP+2,,AUTO
         2 000033   000012 402007                    MPY     10,DL
         2 000034   200020 235100                    LDA     TEMP+2,,AUTO
         2 000035   000002 735000                    ALS     2
         2 000036   200007 473500                    LDP3    @AS_USERS,,AUTO
         2 000037   040105 106506                    CMPC    fill='040'O
         2 000040   300325 400002                    ADSC9   213,Q,PR3                cn=2,n=2
         2 000041   000001 000002                    ADSC9   1,A,PR0                  cn=0,n=2
         2 000042   000062 600000 2                  TZE     s:3954

      402     3949    2        I = I+1;

   3949  2 000043   200015 054100                    AOS     I,,AUTO

      403     3950    2     END;

   3950  2 000044   200003 470500                    LDP0    @RES_START,,AUTO
         2 000045   000000 235100                    LDA     0,,PR0
         2 000046   000001 735000                    ALS     1
         2 000047   200015 236100                    LDQ     I,,AUTO
         2 000050   200020 755100                    STA     TEMP+2,,AUTO
         2 000051   000012 402007                    MPY     10,DL
         2 000052   200020 235100                    LDA     TEMP+2,,AUTO
         2 000053   000002 735000                    ALS     2
         2 000054   200007 471500                    LDP1    @AS_USERS,,AUTO
         2 000055   200005 473500                    LDP3    @VIRT_TBL,,AUTO
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:84   
         2 000056   040105 106506                    CMPC    fill='040'O
         2 000057   100325 400002                    ADSC9   213,Q,PR1                cn=2,n=2
         2 000060   300001 000002                    ADSC9   1,A,PR3                  cn=0,n=2
         2 000061   000043 601000 2                  TNZ     s:3949

      404     3951        /*
      405     3952             ***** Get the maximum resource count for this MODE ...
      406     3953        */
      407     3954    2     DO CASE (MODE);

   3954  2 000062   200004 470500                    LDP0    @MODE,,AUTO
         2 000063   000000 235100                    LDA     0,,PR0
         2 000064   000005 115007                    CMPA    5,DL
         2 000065   000067 602005 2                  TNC     s:3954+5,AL
         2 000066   000117 710000 2                  TRA     s:3964
         2 000067   000117 710000 2                  TRA     s:3964
         2 000070   000101 710000 2                  TRA     s:3958
         2 000071   000106 710000 2                  TRA     s:3960
         2 000072   000074 710000 2                  TRA     s:3956
         2 000073   000113 710000 2                  TRA     s:3962

      408     3955    2        CASE (%M_INT#);

      409     3956    2           TEMP = AS_USERS.RESL.OMAX(I);

   3956  2 000074   200007 471500                    LDP1    @AS_USERS,,AUTO
         2 000075   000100 101506                    MRL     fill='000'O
         2 000076   100327 000002                    ADSC9   215,Q,PR1                cn=0,n=2
         2 000077   200016 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         2 000100   000117 710000 2                  TRA     s:3964

      410     3957    2        CASE (%M_BATCH#);

      411     3958    2           TEMP = AS_USERS.RESL.BMAX(I);

   3958  2 000101   200007 471500                    LDP1    @AS_USERS,,AUTO
         2 000102   000100 101506                    MRL     fill='000'O
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:85   
         2 000103   100326 000002                    ADSC9   214,Q,PR1                cn=0,n=2
         2 000104   200016 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         2 000105   000117 710000 2                  TRA     s:3964

      412     3959    2        CASE (%M_GHOST#);

      413     3960    2           TEMP = AS_USERS.RESL.GMAX(I);

   3960  2 000106   200007 471500                    LDP1    @AS_USERS,,AUTO
         2 000107   000100 101506                    MRL     fill='000'O
         2 000110   100326 400002                    ADSC9   214,Q,PR1                cn=2,n=2
         2 000111   200016 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4
         2 000112   000117 710000 2                  TRA     s:3964

      414     3961    2        CASE (%M_TP#);

      415     3962    2           TEMP = AS_USERS.RESL.TMAX(I);

   3962  2 000113   200007 471500                    LDP1    @AS_USERS,,AUTO
         2 000114   000100 101506                    MRL     fill='000'O
         2 000115   100327 400002                    ADSC9   215,Q,PR1                cn=2,n=2
         2 000116   200016 000004                    ADSC9   TEMP,,AUTO               cn=0,n=4

      416     3963    2     END;   /* Do case(MODE) */

      417     3964    1     IF RES_FINISH-RES_START+1 > TEMP

   3964  2 000117   200003 471500                    LDP1    @RES_START,,AUTO
         2 000120   200012 236100                    LDQ     RES_FINISH,,AUTO
         2 000121   100000 136100                    SBLQ    0,,PR1
         2 000122   200016 116100                    CMPQ    TEMP,,AUTO
         2 000123   000150 604000 2                  TMI     s:3978

      418     3965    1        THEN
      419     3966    2           DO;

      420     3967    2              ERR_TEXT.NAME# = VIRT_TBL.RES.TYPE(RES_START);
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:86   

   3967  2 000124   100000 235100                    LDA     0,,PR1
         2 000125   000001 735000                    ALS     1
         2 000126   000002 735000                    ALS     2
         2 000127   200005 473500                    LDP3    @VIRT_TBL,,AUTO
         2 000130   200011 474500                    LDP4    @ERR_TEXT,,AUTO
         2 000131   040100 100505                    MLR     fill='040'O
         2 000132   300001 000002                    ADSC9   1,A,PR3                  cn=0,n=2
         2 000133   400000 200002                    ADSC9   0,,PR4                   cn=1,n=2

      421     3968    2                 ERR_TEXT.L# = SIZEC(VIRT_TBL.RES.TYPE(RES_START));

   3968  2 000134   100000 235100                    LDA     0,,PR1
         2 000135   000001 735000                    ALS     1
         2 000136   000100 101400                    MRL     fill='000'O
         2 000137   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         2 000140   400000 000001                    ADSC9   0,,PR4                   cn=0,n=1

      422     3969    2              ERR_CODE = E_MAXRES;

   3969  2 000141   000000 236000 1                  LDQ     E_MAXRES
         2 000142   200010 475500                    LDP5    @ERR_CODE,,AUTO
         2 000143   500000 756100                    STQ     0,,PR5

      423     3970    2              RES_START = RES_FINISH+1;

   3970  2 000144   200012 235100                    LDA     RES_FINISH,,AUTO
         2 000145   000001 035007                    ADLA    1,DL
         2 000146   100000 755100                    STA     0,,PR1

      424     3971    2              ALTRETURN;

   3971  2 000147   000000 702200 xent               TSX2  ! X66_AALT

      425     3972    2           END;
      426     3973    1        ELSE
      427     3974    2           DO;
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:87   

      428     3975        /**
      429     3976             ***** Find PHYS_START ...
      430     3977        */
      431     3978    2              PHYS_START = 0;

   3978  2 000150   200013 450100                    STZ     PHYS_START,,AUTO

      432     3979    3              DO WHILE(PHYS_LIST.PRLIST.RNME.TYP(PHYS_START)~=VIRT_TBL.RES.TYPE(
              3979                       RES_START));

   3979  2 000151   100000 235100                    LDA     0,,PR1
         2 000152   000001 735000                    ALS     1
         2 000153   200013 236100                    LDQ     PHYS_START,,AUTO
         2 000154   000002 736000                    QLS     2
         2 000155   200006 473500                    LDP3    @PHYS_LIST,,AUTO
         2 000156   300002 220106                    LDX0    2,QL,PR3
         2 000157   200005 474500                    LDP4    @VIRT_TBL,,AUTO
         2 000160   400001 100105                    CMPX0   1,AL,PR4
         2 000161   000175 600000 2                  TZE     s:3985

      433     3980    3                 PHYS_START = PHYS_START+1;

   3980  2 000162   200013 054100                    AOS     PHYS_START,,AUTO

      434     3981    3              END;

   3981  2 000163   200003 470500                    LDP0    @RES_START,,AUTO
         2 000164   000000 235100                    LDA     0,,PR0
         2 000165   000001 735000                    ALS     1
         2 000166   200013 236100                    LDQ     PHYS_START,,AUTO
         2 000167   000002 736000                    QLS     2
         2 000170   200006 471500                    LDP1    @PHYS_LIST,,AUTO
         2 000171   100002 220106                    LDX0    2,QL,PR1
         2 000172   200005 473500                    LDP3    @VIRT_TBL,,AUTO
         2 000173   300001 100105                    CMPX0   1,AL,PR3
         2 000174   000162 601000 2                  TNZ     s:3980
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:88   

      435     3982        /**
      436     3983             ***** Find PHYS_FINISH ...
      437     3984        */
      438     3985    2              PHYS_FINISH = PHYS_START-1;

   3985  2 000175   200013 235100                    LDA     PHYS_START,,AUTO
         2 000176   000001 135007                    SBLA    1,DL
         2 000177   200014 755100                    STA     PHYS_FINISH,,AUTO

      439     3986    3              DO WHILE(PHYS_LIST.PRLIST.RNME.TYP(1+PHYS_FINISH)=PHYS_LIST.PRLIST.RNME.
              3986                       TYP(PHYS_START));

   3986  2 000200   000002 735000                    ALS     2
         2 000201   200006 470500                    LDP0    @PHYS_LIST,,AUTO
         2 000202   000006 220105                    LDX0    6,AL,PR0
         2 000203   000002 100106                    CMPX0   2,QL,PR0
         2 000204   000216 601000 2                  TNZ     s:3992

      440     3987    3                 PHYS_FINISH = PHYS_FINISH+1;

   3987  2 000205   200014 054100                    AOS     PHYS_FINISH,,AUTO

      441     3988    3              END;

   3988  2 000206   200014 235100                    LDA     PHYS_FINISH,,AUTO
         2 000207   000002 735000                    ALS     2
         2 000210   200006 470500                    LDP0    @PHYS_LIST,,AUTO
         2 000211   000006 220105                    LDX0    6,AL,PR0
         2 000212   200013 236100                    LDQ     PHYS_START,,AUTO
         2 000213   000002 736000                    QLS     2
         2 000214   000002 100106                    CMPX0   2,QL,PR0
         2 000215   000205 600000 2                  TZE     s:3987

      442     3989        /**
      443     3990             ***** Validate against system resource attributes ...
      444     3991        */
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:89   
      445     3992    2              CALL CPO$VALATTR(RES_START,RES_FINISH,PHYS_START,PHYS_FINISH,

   3992  2 000216   200006 236100                    LDQ     @PHYS_LIST,,AUTO
         2 000217   200005 235100                    LDA     @VIRT_TBL,,AUTO
         2 000220   200024 757100                    STAQ    TEMP+6,,AUTO
         2 000221   200014 631500                    EPPR1   PHYS_FINISH,,AUTO
         2 000222   200023 451500                    STP1    TEMP+5,,AUTO
         2 000223   200013 633500                    EPPR3   PHYS_START,,AUTO
         2 000224   200022 453500                    STP3    TEMP+4,,AUTO
         2 000225   200012 634500                    EPPR4   RES_FINISH,,AUTO
         2 000226   200021 454500                    STP4    TEMP+3,,AUTO
         2 000227   200003 236100                    LDQ     @RES_START,,AUTO
         2 000230   200020 756100                    STQ     TEMP+2,,AUTO
         2 000231   200020 630500                    EPPR0   TEMP+2,,AUTO
         2 000232   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000233   000000 701000 xent               TSX1    CPO$VALATTR
         2 000234   000236 702000 2                  TSX2    INVALID

      446     3993    2                    VIRT_TBL,PHYS_LIST) ALTRET(INVALID);
      447     3994    3              DO NEVER;

   3994  2 000235   000263 710000 2                  TRA     s:4003

      448     3995    3   INVALID:
      449     3996    3                 ERR_TEXT.NAME# = VIRT_TBL.RES.TYPE(RES_START);

   3996  2 000236   200003 470500       INVALID      LDP0    @RES_START,,AUTO
         2 000237   000000 235100                    LDA     0,,PR0
         2 000240   000001 735000                    ALS     1
         2 000241   000002 735000                    ALS     2
         2 000242   200005 471500                    LDP1    @VIRT_TBL,,AUTO
         2 000243   200011 473500                    LDP3    @ERR_TEXT,,AUTO
         2 000244   040100 100505                    MLR     fill='040'O
         2 000245   100001 000002                    ADSC9   1,A,PR1                  cn=0,n=2
         2 000246   300000 200002                    ADSC9   0,,PR3                   cn=1,n=2

      450     3997    3                 ERR_TEXT.L# = SIZEC(VIRT_TBL.RES.TYPE(RES_START));
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:90   

   3997  2 000247   000000 235100                    LDA     0,,PR0
         2 000250   000001 735000                    ALS     1
         2 000251   000100 101400                    MRL     fill='000'O
         2 000252   000004 000004 xsym               ADSC9   B_VECTNIL+4              cn=0,n=4
         2 000253   300000 000001                    ADSC9   0,,PR3                   cn=0,n=1

      451     3998    3                 ERR_CODE = E_INVALIDATTR;

   3998  2 000254   000001 236000 1                  LDQ     E_INVALIDATTR
         2 000255   200010 474500                    LDP4    @ERR_CODE,,AUTO
         2 000256   400000 756100                    STQ     0,,PR4

      452     3999    3                 RES_START = RES_FINISH+1;

   3999  2 000257   200012 235100                    LDA     RES_FINISH,,AUTO
         2 000260   000001 035007                    ADLA    1,DL
         2 000261   000000 755100                    STA     0,,PR0

      453     4000    3                 ALTRETURN;

   4000  2 000262   000000 702200 xent               TSX2  ! X66_AALT

      454     4001    3              END;

      455     4002    2           END;   /* Else DO ... END */
      456     4003    1     RES_START = RES_FINISH+1;

   4003  2 000263   200003 470500                    LDP0    @RES_START,,AUTO
         2 000264   200012 235100                    LDA     RES_FINISH,,AUTO
         2 000265   000001 035007                    ADLA    1,DL
         2 000266   000000 755100                    STA     0,,PR0

      457     4004    1     RETURN;

   4004  2 000267   000000 702200 xent               TSX2  ! X66_ARET
      458     4005    1   END CPO$VALIDATE;
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:91   
      459     4006        %EOD;

PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:92   
--  Include file information  --

   JM$STRUCT.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$VALIDATE.
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:93   

 **** Variables and constants ****

  ****  Section 001 RoData CPO$VALIDATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/w STRC        r     1 E_INVALIDATTR              0-0-0/w STRC        r     1 E_MAXRES

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @AS_USERS                 10-0-0/w PTR         r     1 @ERR_CODE
    11-0-0/w PTR         r     1 @ERR_TEXT                  4-0-0/w PTR         r     1 @MODE
     6-0-0/w PTR         r     1 @PHYS_LIST                 3-0-0/w PTR         r     1 @RES_START
     5-0-0/w PTR         r     1 @VIRT_TBL                 *0-0-0/w STRC(18576) r     1 AS_USERS
    *0-0-0/w STRC        r     1 ERR_CODE                  *0-0-0/c STRC(27)    r     1 ERR_TEXT
    15-0-0/w SBIN        r     1 I                         *0-0-0/w SBIN        r     1 MODE
    14-0-0/w SBIN        r     1 PHYS_FINISH               *0-0-0/d STRC(360)   r     1 PHYS_LIST
    13-0-0/w SBIN        r     1 PHYS_START                12-0-0/w SBIN        r     1 RES_FINISH
    *0-0-0/w SBIN        r     1 RES_START                 16-0-0/w SBIN        r     1 TEMP
    *0-0-0/w STRC(2268)  r     1 VIRT_TBL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$


   Procedure CPO$VALIDATE requires 184 words for executable code.
   Procedure CPO$VALIDATE requires 22 words of local(AUTO) storage.
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:94   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:95   
          MINI XREF LISTING

AS_USERS
      3666**DCL        19--PROC
AS_USERS.BANNER_PERM
      3781**DCL      3782--REDEF
AS_USERS.BUDGET.MACCT
      3686**DCL      3690--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
      3699**DCL      3702--REDEF
AS_USERS.BUDGET.PACCUM
      3682**DCL      3684--REDEF
AS_USERS.BUDGET.PMAXC
      3677**DCL      3679--REDEF
AS_USERS.RESL.BMAX
      3776**DCL      3958>>ASSIGN
AS_USERS.RESL.GMAX
      3777**DCL      3960>>ASSIGN
AS_USERS.RESL.OMAX
      3778**DCL      3956>>ASSIGN
AS_USERS.RESL.RNAME
      3775**DCL      3948>>DOWHILE
AS_USERS.RESL.TMAX
      3779**DCL      3962>>ASSIGN
AS_USERS.SETUP_CHRA.TXT
      3797**DCL      3798--REDEF    3799--REDEF
B$JIT.CPFLAGS1.SLEAZE
       564**DCL       564--REDEF
B$JIT.ERR.MID
       471**DCL       471--REDEF
B$JIT.JRESPEAK
       632**DCL       633--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       741**DCL       741--REDEF     742--REDEF
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:96   
B$JIT.PNR
       645**DCL       645--REDEF
B$JIT.TSLINE
       739**DCL       740--REDEF
B$JIT$
      3879**DCL       465--IMP-PTR
CPO$VALATTR
      3881**DCL-ENT  3992--CALL
ERR_CODE
      3844**DCL        19--PROC     3969<<ASSIGN   3998<<ASSIGN
ERR_TEXT
      3876**DCL        19--PROC
ERR_TEXT.L#
      3876**DCL      3968<<ASSIGN   3997<<ASSIGN
ERR_TEXT.NAME#
      3876**DCL      3967<<ASSIGN   3996<<ASSIGN
E_INVALIDATTR
      3925**DCL      3998>>ASSIGN
E_MAXRES
      3902**DCL      3969>>ASSIGN
I
      3886**DCL      3947<<ASSIGN   3948>>DOWHILE  3949<<ASSIGN   3949>>ASSIGN   3956>>ASSIGN   3958>>ASSIGN
      3960>>ASSIGN   3962>>ASSIGN
INVALID
      3996**LABEL    3992--CALLALT
MODE
      3581**DCL        19--PROC     3954>>DOCASE
PHYS_FINISH
      3885**DCL      3985<<ASSIGN   3986>>DOWHILE  3987<<ASSIGN   3987>>ASSIGN   3992<>CALL
PHYS_LIST
      3648**DCL        19--PROC     3992<>CALL
PHYS_LIST.PRLIST.RNAME#
      3648**DCL      3649--REDEF
PHYS_LIST.PRLIST.RNME.TYP
      3649**DCL      3979>>DOWHILE  3986>>DOWHILE  3986>>DOWHILE
PHYS_START
PL6.E3A0      #005=CPO$VALIDATE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:01 Page:97   
      3884**DCL      3978<<ASSIGN   3979>>DOWHILE  3980<<ASSIGN   3980>>ASSIGN   3985>>ASSIGN   3986>>DOWHILE
      3992<>CALL
RES_FINISH
      3883**DCL      3939<<ASSIGN   3940>>DOWHILE  3940>>DOWHILE  3942<<ASSIGN   3942>>ASSIGN   3964>>IF
      3970>>ASSIGN   3992<>CALL     3999>>ASSIGN   4003>>ASSIGN
RES_START
      3580**DCL        19--PROC     3939>>ASSIGN   3940>>DOWHILE  3948>>DOWHILE  3964>>IF       3967>>ASSIGN
      3968>>ASSIGN   3970<<ASSIGN   3979>>DOWHILE  3992<>CALL     3996>>ASSIGN   3997>>ASSIGN   3999<<ASSIGN
      4003<<ASSIGN
TEMP
      3887**DCL      3956<<ASSIGN   3958<<ASSIGN   3960<<ASSIGN   3962<<ASSIGN   3964>>IF
VIRT_TBL
      3595**DCL        19--PROC     3992<>CALL
VIRT_TBL.COUNT
      3597**DCL      3940>>DOWHILE
VIRT_TBL.RES.TYPE
      3619**DCL      3940>>DOWHILE  3940>>DOWHILE  3948>>DOWHILE  3967>>ASSIGN   3968--ASSIGN   3979>>DOWHILE
      3996>>ASSIGN   3997--ASSIGN
VIRT_TBL.RES.VNUM
      3621**DCL      3623--REDEF

PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:98   
      460        1        /*T***********************************************************/
      461        2        /*T*                                                         */
      462        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      463        4        /*T*                                                         */
      464        5        /*T***********************************************************/
      465        6        CPO$PROCESS_VIRT_RES: PROC (JOB_TBL, VIRT_TBL, P$, ERR_BLK);
      466        7        /***** Include files *****/
      467        8          %INCLUDE CP_6_SUBS;
      468      548          %INCLUDE CP_MACROS_C;
      469     1300          %INCLUDE CP_PERR_C;
      470     1638          %INCLUDE CP_SUBS_C;
      471     2555          %INCLUDE JM$STRUCT;
      472     3300          %INCLUDE JM_SUBS_C;
      473     3406          %INCLUDE XU_MACRO_C;
      474     6512        /***** Parameters *****/
      475     6513          %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = " ");
      476     6671          %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
      477     6726    1     DCL P$ PTR;
      478     6727          %ERR_BLK (STCLASS = " ");
      479     6752        /***** External routines *****/
      480     6753    1     DCL CXP$POSTERR ENTRY(5);
      481     6754        /***** Local variables *****/
      482     6755    1     DCL INDX1 SBIN WORD AUTO;
      483     6756    1     DCL INDX2 SBIN WORD AUTO;
      484     6757    1     DCL CPOS UBIN WORD AUTO;
      485     6758    1     DCL N$ PTR;
      486     6759          %JM_RES (FPTN = VRES,TYP = LIST,STCLASS = AUTO);
      487     6796        /***** Bsed structures *****/
      488     6797          %PARSE$OUT (NAME = P$B,STCLASS = BASED);
      489     6842          %PARSE$SYM (NAME = P$S,STCLASS = BASED);
      490     6880        /***** Error codes *****/
      491     6881        %ERR_CODE(NAME=E_DUPRES,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPRES,STCLASS=
              6881            CONSTANT);
      492     6901        /*E*    ERROR:   CPO-E$CPO_DUPRES-0
      493     6902                MESSAGE:  Two resources were specified with the same name.
      494     6903        */
      495     6904        %ERR_CODE(NAME=E_MANYVIRT,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MANYVIRT,STCLASS
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:99   
              6904            =CONSTANT);
      496     6924        /*E* ERROR: CPO-E$CPO_MANYVIRT-0
      497     6925             MESSAGE: Can't handle that many resources
      498     6926        */
      499     6927        %EJECT;
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:100  
      500     6928    1     VRES.VNUMB = 0;
      501     6929    1     VRES.ATTRS = %NO#;
      502     6930    1     VRES.NUM = P$->P$B.SCRITCH;
      503     6931    1     CPOS = P$ -> P$B.CPOS;
      504     6932        /*
      505     6933             ***** If NUM=0 then don't insert into VIRT_TBL ...
      506     6934        */
      507     6935    1     IF VRES.NUM = 0
      508     6936    1        THEN
      509     6937    1           RETURN;
      510     6938        /*
      511     6939             ***** Process all ATTRIBUTE options ...
      512     6940        */
      513     6941    2     DO INDX1=0 TO P$->P$B.NSUBLKS-1;
      514     6942    2        N$ = P$->P$B.SUBLK$(INDX1);
      515     6943    3        DO CASE(N$->P$B.CODE);
      516     6944    3         CASE(RES_MT);
      517     6945    3           VRES.TYPE = 'MT';
      518     6946    3           JOB_TBL.RRT(JM_RX$MT) = JOB_TBL.RRT(JM_RX$MT) + VRES.NUM;
      519     6947    3         CASE(RES_DP);
      520     6948    3           VRES.TYPE = 'DP';
      521     6949    3           JOB_TBL.RRT(JM_RX$DP) = JOB_TBL.RRT(JM_RX$DP) + VRES.NUM;
      522     6950    3         CASE(RES_OTHER_NM);
      523     6951    3           VRES.TYPE = N$->P$S.TEXT;
      524     6952    3           JOB_TBL.RRT(JM_RX$XX) = JOB_TBL.RRT(JM_RX$XX) + VRES.NUM;
      525     6953    3         CASE(RES_VNUM);
      526     6954    3           VRES.VNUMB = N$->P$S.SCRITCH;   /* SCRITCH setup by CPX$RESOURC */
      527     6955    3         CASE(RES_800B);
      528     6956    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D800#;
      529     6957    3         CASE(RES_1600B);
      530     6958    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D1600#;
      531     6959    3         CASE(RES_6250B);
      532     6960    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D6250#;
      533     6961    3         CASE(RES_38000B);
      534     6962    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D38000#;
      535     6963    3         CASE(RES_200M);
      536     6964    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD200#;
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:101  
      537     6965    3         CASE(RES_500M);
      538     6966    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD500#;
      539     6967    3         CASE(RES_600M);
      540     6968    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD600#;
      541     6969    3         CASE(RES_1000M);
      542     6970    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD1000#;
      543     6971    3         CASE(RES_1500M);
      544     6972    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD1500#;
      545     6973    3         CASE(RES_400M);
      546     6974    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD400#;
      547     6975    3         CASE(RES_1100M);
      548     6976    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD1100#;
      549     6977    3         CASE(RES_LC);
      550     6978    3           VRES.ATTRS = VRES.ATTRS | %ATTR_LOWERCASE#;
      551     6979    3         CASE(RES_BIN);
      552     6980    3           VRES.ATTRS = VRES.ATTRS | %ATTR_BIN#;
      553     6981    3         CASE(RES_APL);
      554     6982    3           VRES.ATTRS = VRES.ATTRS | %ATTR_APL#;
      555     6983    3         CASE(RES_OVERPRINT);
      556     6984    3           VRES.ATTRS = VRES.ATTRS | %ATTR_TRUOVRPRT#;
      557     6985    3         END;
      558     6986    2     END;
      559     6987        /*
      560     6988             ***** If no attributes were specified for MT or DP
      561     6989                   then supply default attributes ...
      562     6990        */
      563     6991    1     IF VRES.ATTRS='0'B AND VRES.NUM~=99999
      564     6992    1        THEN
      565     6993    2           DO;
      566     6994    2              IF VRES.TYPE='MT'
      567     6995    2                 THEN
      568     6996    2                    VRES.ATTRS = %ATTR_MTDFLT#;
      569     6997    2              IF VRES.TYPE='DP'
      570     6998    2                 THEN
      571     6999    2                    VRES.ATTRS = %ATTR_DPDFLT#;
      572     7000    2           END;
      573     7001        /*
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:102  
      574     7002             ***** Make sure that this is not a duplicate request
      575     7003                   before inserting it into VIRT_TBL ...
      576     7004        */
      577     7005    1     INDX1 = 0;
      578     7006    2   SORT: DO WHILE INDX1<VIRT_TBL.COUNT;
      579     7007    2        IF VRES.TYPE<VIRT_TBL.RES.TYPE(INDX1) THEN EXIT SORT;
      580     7008    2        IF VRES.TYPE=VIRT_TBL.RES.TYPE(INDX1)
      581     7009    2           THEN
      582     7010    3              DO;
      583     7011        /* Sort special values (99999) at the end so that CPO$EXPAND work right. */
      584     7012    3                 IF VRES.VNUMB=0
      585     7013    3                    THEN IF VIRT_TBL.RES.NUM(INDX1)=99999
      586     7014    3                         OR VIRT_TBL.RES.VNUMB(INDX1)>0
      587     7015    3                       THEN EXIT SORT;
      588     7016    3                       ELSE EXIT;
      589     7017    3                 IF VRES.VNUMB<VIRT_TBL.RES.VNUMB(INDX1) THEN EXIT SORT;
      590     7018    3                 IF VRES.VNUMB>VIRT_TBL.RES.VNUMB(INDX1) THEN EXIT;
      591     7019    3                 CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPRES);
      592     7020    3                 RETURN;
      593     7021    3              END;
      594     7022    2        INDX1 = INDX1+1;
      595     7023    2     END;
      596     7024        /*
      597     7025             ***** Insert this resource into VIRT_TBL
      598     7026                   if there is room ...
      599     7027        */
      600     7028    1     IF VIRT_TBL.COUNT>=VIRT_SLOTS
      601     7029    1        THEN
      602     7030    2           DO;
      603     7031    2              CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_MANYVIRT);
      604     7032    2              RETURN;
      605     7033    2           END;
      606     7034    1        ELSE
      607     7035    2           DO;   /* Insert this resource in the table */
      608     7036    3              DO INDX2=VIRT_TBL.COUNT DOWNTO INDX1+1;
      609     7037    3                 VIRT_TBL.RES(INDX2) = VIRT_TBL.RES(INDX2-1);
      610     7038    3              END;
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:103  
      611     7039    2              VIRT_TBL.RES(INDX1) = VRES;
      612     7040    2              VIRT_TBL.COUNT = VIRT_TBL.COUNT + 1;
      613     7041    2           END;
      614     7042    1     RETURN;
      615     7043    1   END CPO$PROCESS_VIRT_RES;
      616     7044        %EOD;

PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:104  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPO$PROCESS_VIRT_RES.

   Procedure CPO$PROCESS_VIRT_RES requires 281 words for executable code.
   Procedure CPO$PROCESS_VIRT_RES requires 18 words of local(AUTO) storage.

PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:105  

 Object Unit name= CPO$PROCESS_VIRT_RES                       File name= CPO$SUBR.:E05TOU
 UTS= JUL 29 '97 12:02:30.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      4      4  CPO$PROCESS_VIRT_RES
    1   Proc  even  none   281    431  CPO$PROCESS_VIRT_RES
    2  RoData even  none     2      2  CPO$PROCESS_VIRT_RES

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        4  CPO$PROCESS_VIRT_RES

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 CXP$POSTERR
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:106  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:107  


      460        1        /*T***********************************************************/
      461        2        /*T*                                                         */
      462        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      463        4        /*T*                                                         */
      464        5        /*T***********************************************************/
      465        6        CPO$PROCESS_VIRT_RES: PROC (JOB_TBL, VIRT_TBL, P$, ERR_BLK);

      6  1 000000   000000 700200 xent  CPO$PROCESS* TSX0  ! X66_AUTO_4
         1 000001   000022 000004                    ZERO    18,4

      466        7        /***** Include files *****/
      467        8          %INCLUDE CP_6_SUBS;
      468      548          %INCLUDE CP_MACROS_C;
      469     1300          %INCLUDE CP_PERR_C;
      470     1638          %INCLUDE CP_SUBS_C;
      471     2555          %INCLUDE JM$STRUCT;
      472     3300          %INCLUDE JM_SUBS_C;
      473     3406          %INCLUDE XU_MACRO_C;
      474     6512        /***** Parameters *****/
      475     6513          %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = " ");
      476     6671          %JM_RESLIST (FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
      477     6726    1     DCL P$ PTR;
      478     6727          %ERR_BLK (STCLASS = " ");
      479     6752        /***** External routines *****/
      480     6753    1     DCL CXP$POSTERR ENTRY(5);
      481     6754        /***** Local variables *****/
      482     6755    1     DCL INDX1 SBIN WORD AUTO;
      483     6756    1     DCL INDX2 SBIN WORD AUTO;
      484     6757    1     DCL CPOS UBIN WORD AUTO;
      485     6758    1     DCL N$ PTR;
      486     6759          %JM_RES (FPTN = VRES,TYP = LIST,STCLASS = AUTO);
      487     6796        /***** Bsed structures *****/
      488     6797          %PARSE$OUT (NAME = P$B,STCLASS = BASED);
      489     6842          %PARSE$SYM (NAME = P$S,STCLASS = BASED);
      490     6880        /***** Error codes *****/
      491     6881        %ERR_CODE(NAME=E_DUPRES,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPRES,STCLASS=
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:108  
              6881            CONSTANT);
      492     6901        /*E*    ERROR:   CPO-E$CPO_DUPRES-0
      493     6902                MESSAGE:  Two resources were specified with the same name.
      494     6903        */
      495     6904       %ERR_CODE(NAME=E_MANYVIRT,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_MANYVIRT,STCLASS
              6904            =CONSTANT);
      496     6924        /*E* ERROR: CPO-E$CPO_MANYVIRT-0
      497     6925             MESSAGE: Can't handle that many resources
      498     6926        */
      499     6927        %EJECT;
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:109  
      500     6928    1     VRES.VNUMB = 0;

   6928  1 000002   000000 220003                    LDX0    0,DU
         1 000003   200013 440100                    SXL0    VRES,,AUTO

      501     6929    1     VRES.ATTRS = %NO#;

   6929  1 000004   000000 221003                    LDX1    0,DU
         1 000005   200014 741100                    STX1    VRES+1,,AUTO

      502     6930    1     VRES.NUM = P$->P$B.SCRITCH;

   6930  1 000006   200005 470500                    LDP0    @P$,,AUTO
         1 000007   000000 471500                    LDP1    0,,PR0
         1 000010   100001 722100                    LXL2    1,,PR1
         1 000011   200014 442100                    SXL2    VRES+1,,AUTO

      503     6931    1     CPOS = P$ -> P$B.CPOS;

   6931  1 000012   100002 235100                    LDA     2,,PR1
         1 000013   200011 755100                    STA     CPOS,,AUTO

      504     6932        /*
      505     6933             ***** If NUM=0 then don't insert into VIRT_TBL ...
      506     6934        */
      507     6935    1     IF VRES.NUM = 0

   6935  1 000014   000000 102003                    CMPX2   0,DU
         1 000015   000017 601000 1                  TNZ     s:6941

      508     6936    1        THEN
      509     6937    1           RETURN;

   6937  1 000016   000000 702200 xent               TSX2  ! X66_ARET

      510     6938        /*
      511     6939             ***** Process all ATTRIBUTE options ...
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:110  
      512     6940        */
      513     6941    2     DO INDX1=0 TO P$->P$B.NSUBLKS-1;

   6941  1 000017   200007 450100                    STZ     INDX1,,AUTO
         1 000020   000250 710000 1                  TRA     s:6986+1

      514     6942    2        N$ = P$->P$B.SUBLK$(INDX1);

   6942  1 000021   200005 470500                    LDP0    @P$,,AUTO
         1 000022   000000 471500                    LDP1    0,,PR0
         1 000023   200007 720100                    LXL0    INDX1,,AUTO
         1 000024   100003 236110                    LDQ     3,X0,PR1
         1 000025   200012 756100                    STQ     N$,,AUTO

      515     6943    3        DO CASE(N$->P$B.CODE);

   6943  1 000026   200012 473500                    LDP3    N$,,AUTO
         1 000027   300000 721100                    LXL1    0,,PR3
         1 000030   000046 101003                    CMPX1   38,DU
         1 000031   000033 602011 1                  TNC     s:6943+5,X1
         1 000032   000247 710000 1                  TRA     s:6986
         1 000033   000247 710000 1                  TRA     s:6986
         1 000034   000160 710000 1                  TRA     s:6958
         1 000035   000174 710000 1                  TRA     s:6964
         1 000036   000200 710000 1                  TRA     s:6966
         1 000037   000210 710000 1                  TRA     s:6970
         1 000040   000214 710000 1                  TRA     s:6972
         1 000041   000204 710000 1                  TRA     s:6968
         1 000042   000164 710000 1                  TRA     s:6960
         1 000043   000154 710000 1                  TRA     s:6956
         1 000044   000247 710000 1                  TRA     s:6986
         1 000045   000247 710000 1                  TRA     s:6986
         1 000046   000240 710000 1                  TRA     s:6982
         1 000047   000234 710000 1                  TRA     s:6980
         1 000050   000247 710000 1                  TRA     s:6986
         1 000051   000247 710000 1                  TRA     s:6986
         1 000052   000247 710000 1                  TRA     s:6986
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:111  
         1 000053   000247 710000 1                  TRA     s:6986
         1 000054   000247 710000 1                  TRA     s:6986
         1 000055   000115 710000 1                  TRA     s:6948
         1 000056   000247 710000 1                  TRA     s:6986
         1 000057   000230 710000 1                  TRA     s:6978
         1 000060   000247 710000 1                  TRA     s:6986
         1 000061   000101 710000 1                  TRA     s:6945
         1 000062   000247 710000 1                  TRA     s:6986
         1 000063   000131 710000 1                  TRA     s:6951
         1 000064   000244 710000 1                  TRA     s:6984
         1 000065   000247 710000 1                  TRA     s:6986
         1 000066   000247 710000 1                  TRA     s:6986
         1 000067   000247 710000 1                  TRA     s:6986
         1 000070   000247 710000 1                  TRA     s:6986
         1 000071   000247 710000 1                  TRA     s:6986
         1 000072   000247 710000 1                  TRA     s:6986
         1 000073   000247 710000 1                  TRA     s:6986
         1 000074   000247 710000 1                  TRA     s:6986
         1 000075   000151 710000 1                  TRA     s:6954
         1 000076   000220 710000 1                  TRA     s:6974
         1 000077   000224 710000 1                  TRA     s:6976
         1 000100   000170 710000 1                  TRA     s:6962

      516     6944    3         CASE(RES_MT);

      517     6945    3           VRES.TYPE = 'MT';

   6945  1 000101   000002 222000 0                  LDX2    E_MANYVIRT+1
         1 000102   200013 742100                    STX2    VRES,,AUTO

      518     6946    3           JOB_TBL.RRT(JM_RX$MT) = JOB_TBL.RRT(JM_RX$MT) + VRES.NUM;

   6946  1 000103   200014 236100                    LDQ     VRES+1,,AUTO
         1 000104   777777 376007                    ANQ     -1,DL
         1 000105   200016 756100                    STQ     VRES+3,,AUTO
         1 000106   200003 471500                    LDP1    @JOB_TBL,,AUTO
         1 000107   100043 236100                    LDQ     35,,PR1
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:112  
         1 000110   000022 772000                    QRL     18
         1 000111   200016 036100                    ADLQ    VRES+3,,AUTO
         1 000112   000000 621006                    EAX1    0,QL
         1 000113   100043 741100                    STX1    35,,PR1
         1 000114   000247 710000 1                  TRA     s:6986

      519     6947    3         CASE(RES_DP);

      520     6948    3           VRES.TYPE = 'DP';

   6948  1 000115   000003 222000 0                  LDX2    E_MANYVIRT+2
         1 000116   200013 742100                    STX2    VRES,,AUTO

      521     6949    3           JOB_TBL.RRT(JM_RX$DP) = JOB_TBL.RRT(JM_RX$DP) + VRES.NUM;

   6949  1 000117   200014 236100                    LDQ     VRES+1,,AUTO
         1 000120   777777 376007                    ANQ     -1,DL
         1 000121   200016 756100                    STQ     VRES+3,,AUTO
         1 000122   200003 471500                    LDP1    @JOB_TBL,,AUTO
         1 000123   100042 236100                    LDQ     34,,PR1
         1 000124   777777 376007                    ANQ     -1,DL
         1 000125   200016 036100                    ADLQ    VRES+3,,AUTO
         1 000126   000000 621006                    EAX1    0,QL
         1 000127   100042 441100                    SXL1    34,,PR1
         1 000130   000247 710000 1                  TRA     s:6986

      522     6950    3         CASE(RES_OTHER_NM);

      523     6951    3           VRES.TYPE = N$->P$S.TEXT;

   6951  1 000131   300004 236100                    LDQ     4,,PR3
         1 000132   000033 772000                    QRL     27
         1 000133   000000 622006                    EAX2    0,QL
         1 000134   040100 100540                    MLR     fill='040'O
         1 000135   300004 200012                    ADSC9   4,,PR3                   cn=1,n=*X2
         1 000136   200013 000002                    ADSC9   VRES,,AUTO               cn=0,n=2

PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:113  
      524     6952    3           JOB_TBL.RRT(JM_RX$XX) = JOB_TBL.RRT(JM_RX$XX) + VRES.NUM;

   6952  1 000137   200014 236100                    LDQ     VRES+1,,AUTO
         1 000140   777777 376007                    ANQ     -1,DL
         1 000141   200016 756100                    STQ     VRES+3,,AUTO
         1 000142   200003 471500                    LDP1    @JOB_TBL,,AUTO
         1 000143   100043 236100                    LDQ     35,,PR1
         1 000144   777777 376007                    ANQ     -1,DL
         1 000145   200016 036100                    ADLQ    VRES+3,,AUTO
         1 000146   000000 621006                    EAX1    0,QL
         1 000147   100043 441100                    SXL1    35,,PR1
         1 000150   000247 710000 1                  TRA     s:6986

      525     6953    3         CASE(RES_VNUM);

      526     6954    3           VRES.VNUMB = N$->P$S.SCRITCH;   /* SCRITCH setup by CPX$RESOURC */

   6954  1 000151   300001 722100                    LXL2    1,,PR3
         1 000152   200013 442100                    SXL2    VRES,,AUTO
         1 000153   000247 710000 1                  TRA     s:6986

      527     6955    3         CASE(RES_800B);

      528     6956    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D800#;

   6956  1 000154   200014 222100                    LDX2    VRES+1,,AUTO
         1 000155   100000 262003                    ORX2    32768,DU
         1 000156   200014 742100                    STX2    VRES+1,,AUTO
         1 000157   000247 710000 1                  TRA     s:6986

      529     6957    3         CASE(RES_1600B);

      530     6958    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D1600#;

   6958  1 000160   200014 222100                    LDX2    VRES+1,,AUTO
         1 000161   200000 262003                    ORX2    65536,DU
         1 000162   200014 742100                    STX2    VRES+1,,AUTO
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:114  
         1 000163   000247 710000 1                  TRA     s:6986

      531     6959    3         CASE(RES_6250B);

      532     6960    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D6250#;

   6960  1 000164   200014 222100                    LDX2    VRES+1,,AUTO
         1 000165   400000 262003                    ORX2    -131072,DU
         1 000166   200014 742100                    STX2    VRES+1,,AUTO
         1 000167   000247 710000 1                  TRA     s:6986

      533     6961    3         CASE(RES_38000B);

      534     6962    3           VRES.ATTRS = VRES.ATTRS | %ATTR_D38000#;

   6962  1 000170   200014 222100                    LDX2    VRES+1,,AUTO
         1 000171   040000 262003                    ORX2    16384,DU
         1 000172   200014 742100                    STX2    VRES+1,,AUTO
         1 000173   000247 710000 1                  TRA     s:6986

      535     6963    3         CASE(RES_200M);

      536     6964    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD200#;

   6964  1 000174   200014 222100                    LDX2    VRES+1,,AUTO
         1 000175   010000 262003                    ORX2    4096,DU
         1 000176   200014 742100                    STX2    VRES+1,,AUTO
         1 000177   000247 710000 1                  TRA     s:6986

      537     6965    3         CASE(RES_500M);

      538     6966    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD500#;

   6966  1 000200   200014 222100                    LDX2    VRES+1,,AUTO
         1 000201   002000 262003                    ORX2    1024,DU
         1 000202   200014 742100                    STX2    VRES+1,,AUTO
         1 000203   000247 710000 1                  TRA     s:6986
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:115  

      539     6967    3         CASE(RES_600M);

      540     6968    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD600#;

   6968  1 000204   200014 222100                    LDX2    VRES+1,,AUTO
         1 000205   040000 262003                    ORX2    16384,DU
         1 000206   200014 742100                    STX2    VRES+1,,AUTO
         1 000207   000247 710000 1                  TRA     s:6986

      541     6969    3         CASE(RES_1000M);

      542     6970    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD1000#;

   6970  1 000210   200014 222100                    LDX2    VRES+1,,AUTO
         1 000211   001000 262003                    ORX2    512,DU
         1 000212   200014 742100                    STX2    VRES+1,,AUTO
         1 000213   000247 710000 1                  TRA     s:6986

      543     6971    3         CASE(RES_1500M);

      544     6972    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD1500#;

   6972  1 000214   200014 222100                    LDX2    VRES+1,,AUTO
         1 000215   020000 262003                    ORX2    8192,DU
         1 000216   200014 742100                    STX2    VRES+1,,AUTO
         1 000217   000247 710000 1                  TRA     s:6986

      545     6973    3         CASE(RES_400M);

      546     6974    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD400#;

   6974  1 000220   200014 222100                    LDX2    VRES+1,,AUTO
         1 000221   004000 262003                    ORX2    2048,DU
         1 000222   200014 742100                    STX2    VRES+1,,AUTO
         1 000223   000247 710000 1                  TRA     s:6986

PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:116  
      547     6975    3         CASE(RES_1100M);

      548     6976    3           VRES.ATTRS = VRES.ATTRS | %ATTR_DD1100#;

   6976  1 000224   200014 222100                    LDX2    VRES+1,,AUTO
         1 000225   100000 262003                    ORX2    32768,DU
         1 000226   200014 742100                    STX2    VRES+1,,AUTO
         1 000227   000247 710000 1                  TRA     s:6986

      549     6977    3         CASE(RES_LC);

      550     6978    3           VRES.ATTRS = VRES.ATTRS | %ATTR_LOWERCASE#;

   6978  1 000230   200014 222100                    LDX2    VRES+1,,AUTO
         1 000231   000001 262003                    ORX2    1,DU
         1 000232   200014 742100                    STX2    VRES+1,,AUTO
         1 000233   000247 710000 1                  TRA     s:6986

      551     6979    3         CASE(RES_BIN);

      552     6980    3           VRES.ATTRS = VRES.ATTRS | %ATTR_BIN#;

   6980  1 000234   200014 222100                    LDX2    VRES+1,,AUTO
         1 000235   000002 262003                    ORX2    2,DU
         1 000236   200014 742100                    STX2    VRES+1,,AUTO
         1 000237   000247 710000 1                  TRA     s:6986

      553     6981    3         CASE(RES_APL);

      554     6982    3           VRES.ATTRS = VRES.ATTRS | %ATTR_APL#;

   6982  1 000240   200014 222100                    LDX2    VRES+1,,AUTO
         1 000241   000004 262003                    ORX2    4,DU
         1 000242   200014 742100                    STX2    VRES+1,,AUTO
         1 000243   000247 710000 1                  TRA     s:6986

      555     6983    3         CASE(RES_OVERPRINT);
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:117  

      556     6984    3           VRES.ATTRS = VRES.ATTRS | %ATTR_TRUOVRPRT#;

   6984  1 000244   200014 222100                    LDX2    VRES+1,,AUTO
         1 000245   000010 262003                    ORX2    8,DU
         1 000246   200014 742100                    STX2    VRES+1,,AUTO

      557     6985    3         END;

      558     6986    2     END;

   6986  1 000247   200007 054100                    AOS     INDX1,,AUTO
         1 000250   000000 471500                    LDP1    0,,PR0
         1 000251   100001 236100                    LDQ     1,,PR1
         1 000252   000022 772000                    QRL     18
         1 000253   200007 116100                    CMPQ    INDX1,,AUTO
         1 000254   000021 605400 1                  TPNZ    s:6942

      559     6987        /*
      560     6988             ***** If no attributes were specified for MT or DP
      561     6989                   then supply default attributes ...
      562     6990        */
      563     6991    1     IF VRES.ATTRS='0'B AND VRES.NUM~=99999

   6991  1 000255   200014 220100                    LDX0    VRES+1,,AUTO
         1 000256   000273 601000 1                  TNZ     s:7005
         1 000257   200014 721100                    LXL1    VRES+1,,AUTO
         1 000260   303237 101003                    CMPX1   99999,DU
         1 000261   000273 600000 1                  TZE     s:7005

      564     6992    1        THEN
      565     6993    2           DO;

      566     6994    2              IF VRES.TYPE='MT'

   6994  1 000262   200013 222100                    LDX2    VRES,,AUTO
         1 000263   000002 102000 0                  CMPX2   E_MANYVIRT+1
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:118  
         1 000264   000267 601000 1                  TNZ     s:6997

      567     6995    2                 THEN
      568     6996    2                    VRES.ATTRS = %ATTR_MTDFLT#;

   6996  1 000265   000000 223003                    LDX3    0,DU
         1 000266   200014 743100                    STX3    VRES+1,,AUTO

      569     6997    2              IF VRES.TYPE='DP'

   6997  1 000267   000003 102000 0                  CMPX2   E_MANYVIRT+2
         1 000270   000273 601000 1                  TNZ     s:7005

      570     6998    2                 THEN
      571     6999    2                    VRES.ATTRS = %ATTR_DPDFLT#;

   6999  1 000271   000000 220003                    LDX0    0,DU
         1 000272   200014 740100                    STX0    VRES+1,,AUTO

      572     7000    2           END;

      573     7001        /*
      574     7002             ***** Make sure that this is not a duplicate request
      575     7003                   before inserting it into VIRT_TBL ...
      576     7004        */
      577     7005    1     INDX1 = 0;

   7005  1 000273   200007 450100                    STZ     INDX1,,AUTO

      578     7006    2   SORT: DO WHILE INDX1<VIRT_TBL.COUNT;

   7006  1 000274   200004 473500       SORT         LDP3    @VIRT_TBL,,AUTO
         1 000275   200007 236100                    LDQ     INDX1,,AUTO
         1 000276   000301 604000 1                  TMI     s:7007
         1 000277   300000 116100                    CMPQ    0,,PR3
         1 000300   000356 603000 1                  TRC     s:7028

PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:119  
      579     7007    2        IF VRES.TYPE<VIRT_TBL.RES.TYPE(INDX1) THEN EXIT SORT;

   7007  1 000301   200013 220100                    LDX0    VRES,,AUTO
         1 000302   200007 235100                    LDA     INDX1,,AUTO
         1 000303   000001 735000                    ALS     1
         1 000304   200004 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000305   000001 100105                    CMPX0   1,AL,PR0
         1 000306   000356 602000 1                  TNC     s:7028

      580     7008    2        IF VRES.TYPE=VIRT_TBL.RES.TYPE(INDX1)

   7008  1 000307   000351 601000 1                  TNZ     s:7022

      581     7009    2           THEN
      582     7010    3              DO;

      583     7011        /* Sort special values (99999) at the end so that CPO$EXPAND work right. */
      584     7012    3                 IF VRES.VNUMB=0

   7012  1 000310   200013 721100                    LXL1    VRES,,AUTO
         1 000311   000320 601000 1                  TNZ     s:7017

      585     7013    3                    THEN IF VIRT_TBL.RES.NUM(INDX1)=99999

   7013  1 000312   000002 722105                    LXL2    2,AL,PR0
         1 000313   303237 102003                    CMPX2   99999,DU
         1 000314   000356 600000 1                  TZE     s:7028
         1 000315   000001 723105                    LXL3    1,AL,PR0
         1 000316   000356 601000 1                  TNZ     s:7028

      586     7014    3                         OR VIRT_TBL.RES.VNUMB(INDX1)>0
      587     7015    3                       THEN EXIT SORT;
      588     7016    3                       ELSE EXIT;

   7016  1 000317   000351 710000 1                  TRA     s:7022

      589     7017    3                 IF VRES.VNUMB<VIRT_TBL.RES.VNUMB(INDX1) THEN EXIT SORT;
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:120  

   7017  1 000320   000001 236105                    LDQ     1,AL,PR0
         1 000321   777777 376007                    ANQ     -1,DL
         1 000322   200016 756100                    STQ     VRES+3,,AUTO
         1 000323   200013 236100                    LDQ     VRES,,AUTO
         1 000324   777777 376007                    ANQ     -1,DL
         1 000325   200016 116100                    CMPQ    VRES+3,,AUTO
         1 000326   000356 604000 1                  TMI     s:7028

      590     7018    3                 IF VRES.VNUMB>VIRT_TBL.RES.VNUMB(INDX1) THEN EXIT;

   7018  1 000327   200016 756100                    STQ     VRES+3,,AUTO
         1 000330   000001 236105                    LDQ     1,AL,PR0
         1 000331   777777 376007                    ANQ     -1,DL
         1 000332   200016 116100                    CMPQ    VRES+3,,AUTO
         1 000333   000351 604000 1                  TMI     s:7022

      591     7019    3                 CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPRES);

   7019  1 000334   200006 236100                    LDQ     @ERR_BLK,,AUTO
         1 000335   200016 756100                    STQ     VRES+3,,AUTO
         1 000336   000000 236000 2                  LDQ     0
         1 000337   200021 756100                    STQ     VRES+6,,AUTO
         1 000340   200011 631500                    EPPR1   CPOS,,AUTO
         1 000341   200020 451500                    STP1    VRES+5,,AUTO
         1 000342   200016 633500                    EPPR3   VRES+3,,AUTO
         1 000343   200017 453500                    STP3    VRES+4,,AUTO
         1 000344   200017 630500                    EPPR0   VRES+4,,AUTO
         1 000345   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000346   000000 701000 xent               TSX1    CXP$POSTERR
         1 000347   000000 011000                    NOP     0

      592     7020    3                 RETURN;

   7020  1 000350   000000 702200 xent               TSX2  ! X66_ARET

      593     7021    3              END;
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:121  
      594     7022    2        INDX1 = INDX1+1;

   7022  1 000351   200007 054100                    AOS     INDX1,,AUTO

      595     7023    2     END;

   7023  1 000352   200007 236100                    LDQ     INDX1,,AUTO
         1 000353   000301 604000 1                  TMI     s:7007
         1 000354   000000 116100                    CMPQ    0,,PR0
         1 000355   000301 602000 1                  TNC     s:7007

      596     7024        /*
      597     7025             ***** Insert this resource into VIRT_TBL
      598     7026                   if there is room ...
      599     7027        */
      600     7028    1     IF VIRT_TBL.COUNT>=VIRT_SLOTS

   7028  1 000356   200004 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000357   000000 235100                    LDA     0,,PR0
         1 000360   000036 115007                    CMPA    30,DL
         1 000361   000377 602000 1                  TNC     s:7036

      601     7029    1        THEN
      602     7030    2           DO;

      603     7031    2              CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_MANYVIRT);

   7031  1 000362   200006 236100                    LDQ     @ERR_BLK,,AUTO
         1 000363   200016 756100                    STQ     VRES+3,,AUTO
         1 000364   000001 236000 2                  LDQ     1
         1 000365   200021 756100                    STQ     VRES+6,,AUTO
         1 000366   200011 631500                    EPPR1   CPOS,,AUTO
         1 000367   200020 451500                    STP1    VRES+5,,AUTO
         1 000370   200016 633500                    EPPR3   VRES+3,,AUTO
         1 000371   200017 453500                    STP3    VRES+4,,AUTO
         1 000372   200017 630500                    EPPR0   VRES+4,,AUTO
         1 000373   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:122  
         1 000374   000000 701000 xent               TSX1    CXP$POSTERR
         1 000375   000000 011000                    NOP     0

      604     7032    2              RETURN;

   7032  1 000376   000000 702200 xent               TSX2  ! X66_ARET

      605     7033    2           END;
      606     7034    1        ELSE
      607     7035    2           DO;   /* Insert this resource in the table */

      608     7036    3              DO INDX2=VIRT_TBL.COUNT DOWNTO INDX1+1;

   7036  1 000377   200010 755100                    STA     INDX2,,AUTO
         1 000400   000414 710000 1                  TRA     s:7038+2

      609     7037    3                 VIRT_TBL.RES(INDX2) = VIRT_TBL.RES(INDX2-1);

   7037  1 000401   200010 235100                    LDA     INDX2,,AUTO
         1 000402   000001 735000                    ALS     1
         1 000403   200010 236100                    LDQ     INDX2,,AUTO
         1 000404   000003 736000                    QLS     3
         1 000405   000002 735000                    ALS     2
         1 000406   200004 470500                    LDP0    @VIRT_TBL,,AUTO
         1 000407   000105 100506                    MLR     fill='000'O
         1 000410   077777 000010                    ADSC9   -1,Q,PR0                 cn=0,n=8
         1 000411   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8

      610     7038    3              END;

   7038  1 000412   000001 336007                    LCQ     1,DL
         1 000413   200010 056100                    ASQ     INDX2,,AUTO
         1 000414   200010 236100                    LDQ     INDX2,,AUTO
         1 000415   200007 116100                    CMPQ    INDX1,,AUTO
         1 000416   000401 605400 1                  TPNZ    s:7037

      611     7039    2              VIRT_TBL.RES(INDX1) = VRES;
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:123  

   7039  1 000417   200007 235100                    LDA     INDX1,,AUTO
         1 000420   000001 735000                    ALS     1
         1 000421   000002 735000                    ALS     2
         1 000422   000105 100500                    MLR     fill='000'O
         1 000423   200013 000010                    ADSC9   VRES,,AUTO               cn=0,n=8
         1 000424   000001 000010                    ADSC9   1,A,PR0                  cn=0,n=8

      612     7040    2              VIRT_TBL.COUNT = VIRT_TBL.COUNT + 1;

   7040  1 000425   000000 235100                    LDA     0,,PR0
         1 000426   000001 035007                    ADLA    1,DL
         1 000427   000000 755100                    STA     0,,PR0

      613     7041    2           END;

      614     7042    1     RETURN;

   7042  1 000430   000000 702200 xent               TSX2  ! X66_ARET
      615     7043    1   END CPO$PROCESS_VIRT_RES;
      616     7044        %EOD;

PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:124  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure CPO$PROCESS_VIRT_RES.
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:125  

 **** Variables and constants ****

  ****  Section 000 RoData CPO$PROCESS_VIRT_RES

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_DUPRES                   1-0-0/w STRC        r     1 E_MANYVIRT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @ERR_BLK                   3-0-0/w PTR         r     1 @JOB_TBL
     5-0-0/w PTR         r     1 @P$                        4-0-0/w PTR         r     1 @VIRT_TBL
    11-0-0/w UBIN        r     1 CPOS                      *0-0-0/w STRC(828)   r     1 ERR_BLK
     7-0-0/w SBIN        r     1 INDX1                     10-0-0/w SBIN        r     1 INDX2
    *0-0-0/w STRC(1980)  r     1 JOB_TBL                   12-0-0/w PTR         r     1 N$
    *0-0-0/w PTR         r     1 P$                        *0-0-0/w STRC(2268)  r     1 VIRT_TBL
    13-0-0/w STRC(72)    r     1 VRES

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/w ASTR(153)   r     1 P$S


   Procedure CPO$PROCESS_VIRT_RES requires 281 words for executable code.
   Procedure CPO$PROCESS_VIRT_RES requires 18 words of local(AUTO) storage.
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:126  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:127  
          MINI XREF LISTING

CPOS
      6757**DCL      6931<<ASSIGN   7019<>CALL     7031<>CALL
CXP$POSTERR
      6753**DCL-ENT  7019--CALL     7031--CALL
ERR_BLK
      6741**DCL         6--PROC     7019--CALL     7031--CALL
E_DUPRES
      6894**DCL      7019<>CALL
E_MANYVIRT
      6917**DCL      7031<>CALL
INDX1
      6755**DCL      6941<<DOINDEX  6942>>ASSIGN   7005<<ASSIGN   7006>>DOWHILE  7007>>IF       7008>>IF
      7013>>IF       7013>>IF       7017>>IF       7018>>IF       7022<<ASSIGN   7022>>ASSIGN   7036>>DOINDEX
      7039>>ASSIGN
INDX2
      6756**DCL      7036<<DOINDEX  7037>>ASSIGN   7037>>ASSIGN
JOB_TBL
      6526**DCL         6--PROC
JOB_TBL.RRT
      6642**DCL      6946<<ASSIGN   6946>>ASSIGN   6949<<ASSIGN   6949>>ASSIGN   6952<<ASSIGN   6952>>ASSIGN
N$
      6758**DCL      6942<<ASSIGN   6943>>DOCASE   6951>>ASSIGN   6951>>ASSIGN   6954>>ASSIGN
P$
      6726**DCL         6--PROC     6930>>ASSIGN   6931>>ASSIGN   6941>>DOINDEX  6942>>ASSIGN
P$B.CODE
      6811**DCL      6943>>DOCASE
P$B.CPOS
      6829**DCL      6931>>ASSIGN
P$B.NSUBLKS
      6815**DCL      6941>>DOINDEX
P$B.SCRITCH
      6819**DCL      6930>>ASSIGN
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:128  
P$B.SUBLK$
      6836**DCL      6942>>ASSIGN
P$S.COUNT
      6872**DCL      6875--IMP-SIZ  6951>>ASSIGN
P$S.SCRITCH
      6861**DCL      6954>>ASSIGN
P$S.TEXT
      6875**DCL      6951>>ASSIGN
SORT
      7006**LABEL    7007--EXIT     7015--EXIT     7017--EXIT
VIRT_TBL
      6684**DCL         6--PROC
VIRT_TBL.COUNT
      6686**DCL      7006>>DOWHILE  7028>>IF       7036>>DOINDEX  7040<<ASSIGN   7040>>ASSIGN
VIRT_TBL.RES
      6705**DCL      7037<<ASSIGN   7037>>ASSIGN   7039<<ASSIGN
VIRT_TBL.RES.NUM
      6722**DCL      7013>>IF
VIRT_TBL.RES.TYPE
      6708**DCL      7007>>IF       7008>>IF
VIRT_TBL.RES.VNUM
      6710**DCL      6712--REDEF
VIRT_TBL.RES.VNUMB
      6712**DCL      7013>>IF       7017>>IF       7018>>IF
VRES
      6774**DCL      7039>>ASSIGN
VRES.ATTRS
      6785**DCL      6929<<ASSIGN   6956<<ASSIGN   6956>>ASSIGN   6958<<ASSIGN   6958>>ASSIGN   6960<<ASSIGN
      6960>>ASSIGN   6962<<ASSIGN   6962>>ASSIGN   6964<<ASSIGN   6964>>ASSIGN   6966<<ASSIGN   6966>>ASSIGN
      6968<<ASSIGN   6968>>ASSIGN   6970<<ASSIGN   6970>>ASSIGN   6972<<ASSIGN   6972>>ASSIGN   6974<<ASSIGN
      6974>>ASSIGN   6976<<ASSIGN   6976>>ASSIGN   6978<<ASSIGN   6978>>ASSIGN   6980<<ASSIGN   6980>>ASSIGN
      6982<<ASSIGN   6982>>ASSIGN   6984<<ASSIGN   6984>>ASSIGN   6991>>IF       6996<<ASSIGN   6999<<ASSIGN
VRES.NUM
      6793**DCL      6930<<ASSIGN   6935>>IF       6946>>ASSIGN   6949>>ASSIGN   6952>>ASSIGN   6991>>IF
VRES.TYPE
      6779**DCL      6945<<ASSIGN   6948<<ASSIGN   6951<<ASSIGN   6994>>IF       6997>>IF       7007>>IF
PL6.E3A0      #006=CPO$PROCESS_VIRT_RES File=CPO$SUBR.:E05TSI                    TUE 07/29/97 12:02 Page:129  
      7008>>IF
VRES.VNUM
      6781**DCL      6783--REDEF
VRES.VNUMB
      6783**DCL      6928<<ASSIGN   6954<<ASSIGN   7012>>IF       7017>>IF       7018>>IF

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:130  
      617        1        /*T***********************************************************/
      618        2        /*T*                                                         */
      619        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      620        4        /*T*                                                         */
      621        5        /*T***********************************************************/
      622        6        CPO$RESOURCE: PROC (PCB, JOB_TBL, PSN_TBL, VIRT_TBL, ERR_BLK, NHPSN#, RELEASE_ALL#)
                 6            ALTRET;
      623        7        /***** Include files *****/
      624        8          %INCLUDE CP_6;
      625       89          %INCLUDE CP_SUBS_C;
      626     1006          %INCLUDE CP_6_SUBS;
      627     1546          %INCLUDE JM$STRUCT;
      628     2291          %INCLUDE JM_SUBS_C;
      629     2397          %INCLUDE CP_MACROS_C;
      630     3149          %INCLUDE CP_PERR_C;
      631     3487          %INCLUDE AS_SUPER_C;
      632     3922          %INCLUDE KL_SUPER_C;
      633     6824          %INCLUDE XSJ_SUBS_C;
      634     6851          %INCLUDE XU_MACRO_C;
      635     9957        /***** External routines *****/
      636     9958    1   DCL CXP$POSTERR ENTRY(5);
      637     9959    1   DCL CPO$PROCESS_VIRT_RES ENTRY(4);
      638     9960    1   DCL CPO$STORE_PSN ENTRY(3) ALTRET;
      639     9961        /**** Auto data *****/
      640     9962    1   DCL MEM_HIT BIT(1) ALIGNED AUTO;
      641     9963    1   DCL TIME_HIT BIT(1) ALIGNED AUTO;
      642     9964    1   DCL CPOS UBIN WORD AUTO;
      643     9965    1   DCL INDX1 UBIN WORD AUTO;
      644     9966    1   DCL INDX2 UBIN WORD AUTO;
      645     9967    1   DCL VALUE SBIN WORD AUTO;
      646     9968    1   DCL P$ PTR AUTO;
      647     9969        %ERR_CODE (STCLASS = AUTO);
      648     9989        %JM_RES (FPTN = VRES,TYP = LIST,STCLASS = AUTO);
      649    10026        %JM_SN(FPTN = PSN,TYP = LIST,STCLASS = AUTO);
      650    10065        /***** Parameters *****/
      651    10066        %P$PCB (NAME = PCB,STCLASS = " ");
      652    10267        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = " ");
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:131  
      653    10425        %JM_SNLIST(FPTN = PSN_TBL,ARRAY = "(0:PSN_SLOTS)",FIT = YES,STCLASS = " ");
      654    10482        %JM_RESLIST(FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
      655    10537        %ERR_BLK (STCLASS = " ");
      656    10562    1   DCL NHPSN# BIT(1) ALIGNED;
      657    10563    1   DCL RELEASE_ALL# BIT(1) ALIGNED;
      658    10564        /***** Based data *****/
      659    10565        %PARSE$OUT(NAME = P$B,STCLASS = BASED);
      660    10610        %PARSE$SYM(NAME = P$S,STCLASS = BASED);
      661    10648        /***** Error codes *****/
      662    10649        %ERR_CODE(NAME=E_DUPPSEUDO,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPPSEUDO,
             10649            STCLASS=CONSTANT);
      663    10669        /*E* ERROR: CPO-E$CPO_DUPPSEUDO
      664    10670             MESSAGE: Duplicate PSEUDO spec */
      665    10671        %ERR_CODE(NAME=E_DUPTIME,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPTIME,STCLASS=
             10671            CONSTANT);
      666    10691        /*E* ERROR: CPO-E$CPO_DUPTIME
      667    10692             MESSAGE: Duplicate TIME spec */
      668    10693        %ERR_CODE(NAME=E_DUPMEM,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPMEM,STCLASS=
             10693            CONSTANT);
      669    10713        /*E* ERROR: CPO-E$CPO_DUPMEM
      670    10714             MESSAGE: Duplicate MEMORY spec */
      671    10715        %EJECT;
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:132  
      672    10716        /*
      673    10717             ***** Initialize flags, tables ...
      674    10718        */
      675    10719    1     NHPSN# = %NO#;
      676    10720    1     RELEASE_ALL# = %NO#;
      677    10721    1     MEM_HIT = %NO#;
      678    10722    1     TIME_HIT = %NO#;
      679    10723    2     DO INDX1=0 TO PCB.OUT$->P$B.NSUBLKS-1;
      680    10724    2        P$ = PCB.OUT$->P$B.SUBLK$(INDX1);
      681    10725    2        CPOS = P$ -> P$B.CPOS;
      682    10726    3        DO CASE(P$->P$B.CODE);
      683    10727    3         CASE(RES_NHPSN);
      684    10728    3           NHPSN# = %YES#;
      685    10729    3        CASE(RES_ALL);
      686    10730    3           RELEASE_ALL# = %YES#;
      687    10731    3         CASE(RES_MEMORY);
      688    10732    3           IF MEM_HIT
      689    10733    3              THEN
      690    10734    4                 DO;
      691    10735    4                    CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPMEM);
      692    10736    4                 END;
      693    10737    3              ELSE
      694    10738    4                 DO;
      695    10739    4                    JOB_TBL.RRT(JM_RX$MEM) = P$->P$B.SCRITCH;
      696    10740    4                    MEM_HIT = %YES#;
      697    10741    4                 END;
      698    10742    3         CASE(RES_TIME);
      699    10743    3           IF TIME_HIT
      700    10744    3              THEN
      701    10745    4                 DO;
      702    10746    4                    CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPTIME);
      703    10747    4                 END;
      704    10748    3              ELSE
      705    10749    4                 DO;
      706    10750    4                    TIME_HIT = %YES#;
      707    10751    4                    JOB_TBL.TIM = 0;
      708    10752    5                    DO INDX2 = 0 TO P$ -> P$B.NSUBLKS-1;
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:133  
      709    10753    5                       CALL CHARBIN (VALUE,P$ -> P$B.SUBLK$(INDX2) -> P$S.TEXT);
      710    10754    6                       DO CASE (P$ -> P$B.SUBLK$(INDX2) -> P$S.CODE);
      711    10755    6                          CASE (LIM_HOURS);
      712    10756    6                             JOB_TBL.TIM = VALUE * 3600;
      713    10757    6                          CASE (LIM_MINUTS);
      714    10758    6                             JOB_TBL.TIM = JOB_TBL.TIM + VALUE * 60;
      715    10759    6                          CASE (LIM_SECNDS);
      716    10760    6                             JOB_TBL.TIM = JOB_TBL.TIM + VALUE;
      717    10761    6                       END;   /* Do case ... end */
      718    10762    5                    END;   /* Convert time to seconds */
      719    10763    4                    JOB_TBL.TIM = JOB_TBL.TIM * 100;
      720    10764    4                 END;
      721    10765    3         CASE(RES_ACCT);
      722    10766    3           PSN.FLGS = %NO#;
      723    10767    3           PSN.FLGS.PUB = %YES#;
      724    10768    3           PSN.TXT = P$->P$S.TEXT;
      725    10769    3           CALL CPO$STORE_PSN (PSN_TBL,PSN,ERR_CODE) ALTRET(E_PSN);
      726    10770    3         CASE(RES_SET);
      727    10771    3           PSN.FLGS = %NO#;
      728    10772    3           PSN.TXT = P$->P$B.SUBLK$(0)->P$S.TEXT;
      729    10773        /*
      730    10774             ***** Define ACCESS attributes ...
      731    10775        */
      732    10776    4           DO CASE(P$->P$B.SUBLK$(1)->P$B.CODE);
      733    10777    4            CASE(RES_PUBLIC);
      734    10778    4              PSN.FLGS.PUB = %YES#;
      735    10779    4            CASE(RES_EXCL);
      736    10780    4              PSN.FLGS.EXCL = %YES#;
      737    10781    4            END;
      738    10782        /*
      739    10783             ***** If a DISP=xxx specified then stuff into PSN.DISP ...
      740    10784        */
      741    10785    3           IF P$ -> P$B.NSUBLKS > 2
      742    10786    3              THEN
      743    10787    4                 DO CASE (P$ -> P$B.SUBLK$(2) -> P$B.CODE);
      744    10788    4                    CASE (RES_DISPREL);
      745    10789    4                       PSN.DISP = %RELEASE#;
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:134  
      746    10790    4                    CASE (RES_DISPREM);
      747    10791    4                       PSN.DISP = %REM#;
      748    10792    4                    CASE (RES_DISPRELREM);
      749    10793    4                       PSN.DISP = %REL#;
      750    10794    4                    CASE (RES_DISPNOREL);
      751    10795    4                       PSN.DISP = %NOREL#;
      752    10796    4                 END;
      753    10797    3              ELSE
      754    10798    3                 PSN.DISP = %REM#;
      755    10799    3           CALL CPO$STORE_PSN (PSN_TBL,PSN,ERR_CODE) ALTRET(E_PSN);
      756    10800    3         CASE(RES_RSRCE);
      757    10801    4           DO CASE(P$->P$B.SUBLK$(0)->P$B.CODE);
      758    10802    4            CASE(RES_PSEUDO);
      759    10803    4              IF JOB_TBL.RRT(P$->P$B.SUBLK$(0)->P$S.SCRITCH+JM_RX$PR1)>0
      760    10804    4                 THEN
      761    10805    5                    DO;
      762    10806    5                       CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPPSEUDO);
      763    10807    5                    END;
      764    10808    4                 ELSE
      765    10809    4                    JOB_TBL.RRT(P$->P$B.SUBLK$(0)->P$S.SCRITCH+JM_RX$PR1) = P$->P$B.
             10809                             SCRITCH;
      766    10810    4            CASE(RES_MT,RES_DP,RES_OTHER_NM);
      767    10811    4              CALL CPO$PROCESS_VIRT_RES (JOB_TBL, VIRT_TBL, P$, ERR_BLK);
      768    10812    4            END;   /* Do case (RES_RESRCE) ... end */
      769    10813    3         END;   /* Do case (P$B.CODE) ... end */
      770    10814    3           DO NEVER;
      771    10815    3   E_PSN:
      772    10816    3              CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,ERR_CODE);
      773    10817    3           END;
      774    10818    2     END;   /* Do indx1 = 0 to ... end */
      775    10819    1     RETURN;
      776    10820    1   END CPO$RESOURCE;

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:135  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$RESOURCE.

   Procedure CPO$RESOURCE requires 329 words for executable code.
   Procedure CPO$RESOURCE requires 26 words of local(AUTO) storage.

    No errors detected in file CPO$SUBR.:E05TSI    .

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:136  

 Object Unit name= CPO$RESOURCE                               File name= CPO$SUBR.:E05TOU
 UTS= JUL 29 '97 12:03:22.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      3      3  CPO$RESOURCE
    2   Proc  even  none   329    511  CPO$RESOURCE
    3  RoData even  none     5      5  CPO$RESOURCE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        7  CPO$RESOURCE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 CXP$POSTERR
         yes           Std       4 CPO$PROCESS_VIRT_RES
 yes     yes           Std       3 CPO$STORE_PSN
                       nStd      0 X66_AUTO_N
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:137  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:138  


      617        1        /*T***********************************************************/
      618        2        /*T*                                                         */
      619        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      620        4        /*T*                                                         */
      621        5        /*T***********************************************************/
      622        6        CPO$RESOURCE: PROC (PCB, JOB_TBL, PSN_TBL, VIRT_TBL, ERR_BLK, NHPSN#, RELEASE_ALL#)
                 6            ALTRET;

      6  2 000000   000000 700200 xent  CPO$RESOURCE TSX0  ! X66_AUTO_N
         2 000001   000032 000007                    ZERO    26,7

      623        7        /***** Include files *****/
      624        8          %INCLUDE CP_6;
      625       89          %INCLUDE CP_SUBS_C;
      626     1006          %INCLUDE CP_6_SUBS;
      627     1546          %INCLUDE JM$STRUCT;
      628     2291          %INCLUDE JM_SUBS_C;
      629     2397          %INCLUDE CP_MACROS_C;
      630     3149          %INCLUDE CP_PERR_C;
      631     3487          %INCLUDE AS_SUPER_C;
      632     3922          %INCLUDE KL_SUPER_C;
      633     6824          %INCLUDE XSJ_SUBS_C;
      634     6851          %INCLUDE XU_MACRO_C;
      635     9957        /***** External routines *****/
      636     9958    1   DCL CXP$POSTERR ENTRY(5);
      637     9959    1   DCL CPO$PROCESS_VIRT_RES ENTRY(4);
      638     9960    1   DCL CPO$STORE_PSN ENTRY(3) ALTRET;
      639     9961        /**** Auto data *****/
      640     9962    1   DCL MEM_HIT BIT(1) ALIGNED AUTO;
      641     9963    1   DCL TIME_HIT BIT(1) ALIGNED AUTO;
      642     9964    1   DCL CPOS UBIN WORD AUTO;
      643     9965    1   DCL INDX1 UBIN WORD AUTO;
      644     9966    1   DCL INDX2 UBIN WORD AUTO;
      645     9967    1   DCL VALUE SBIN WORD AUTO;
      646     9968    1   DCL P$ PTR AUTO;
      647     9969        %ERR_CODE (STCLASS = AUTO);
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:139  
      648     9989        %JM_RES (FPTN = VRES,TYP = LIST,STCLASS = AUTO);
      649    10026        %JM_SN(FPTN = PSN,TYP = LIST,STCLASS = AUTO);
      650    10065        /***** Parameters *****/
      651    10066        %P$PCB (NAME = PCB,STCLASS = " ");
      652    10267        %JM_IF (FPTN = JOB_TBL,FIT = YES,STCLASS = " ");
      653    10425        %JM_SNLIST(FPTN = PSN_TBL,ARRAY = "(0:PSN_SLOTS)",FIT = YES,STCLASS = " ");
      654    10482        %JM_RESLIST(FPTN = VIRT_TBL,ARRAY = "(0:VIRT_SLOTS)",FIT = YES,STCLASS = " ");
      655    10537        %ERR_BLK (STCLASS = " ");
      656    10562    1   DCL NHPSN# BIT(1) ALIGNED;
      657    10563    1   DCL RELEASE_ALL# BIT(1) ALIGNED;
      658    10564        /***** Based data *****/
      659    10565        %PARSE$OUT(NAME = P$B,STCLASS = BASED);
      660    10610        %PARSE$SYM(NAME = P$S,STCLASS = BASED);
      661    10648        /***** Error codes *****/
      662    10649        %ERR_CODE(NAME=E_DUPPSEUDO,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPPSEUDO,
             10649            STCLASS=CONSTANT);
      663    10669        /*E* ERROR: CPO-E$CPO_DUPPSEUDO
      664    10670             MESSAGE: Duplicate PSEUDO spec */
      665    10671        %ERR_CODE(NAME=E_DUPTIME,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPTIME,STCLASS=
             10671            CONSTANT);
      666    10691        /*E* ERROR: CPO-E$CPO_DUPTIME
      667    10692             MESSAGE: Duplicate TIME spec */
      668    10693        %ERR_CODE(NAME=E_DUPMEM,FCG#=IBEXFCG,MID#=CPO$IBEXMID,CODE#=E$CPO_DUPMEM,STCLASS=
             10693            CONSTANT);
      669    10713        /*E* ERROR: CPO-E$CPO_DUPMEM
      670    10714             MESSAGE: Duplicate MEMORY spec */
      671    10715        %EJECT;
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:140  
      672    10716        /*
      673    10717             ***** Initialize flags, tables ...
      674    10718        */
      675    10719    1     NHPSN# = %NO#;

  10719  2 000002   200010 470500                    LDP0    @NHPSN#,,AUTO
         2 000003   000000 450100                    STZ     0,,PR0

      676    10720    1     RELEASE_ALL# = %NO#;

  10720  2 000004   200011 471500                    LDP1    @RELEASE_ALL#,,AUTO
         2 000005   100000 450100                    STZ     0,,PR1

      677    10721    1     MEM_HIT = %NO#;

  10721  2 000006   200012 450100                    STZ     MEM_HIT,,AUTO

      678    10722    1     TIME_HIT = %NO#;

  10722  2 000007   200013 450100                    STZ     TIME_HIT,,AUTO

      679    10723    2     DO INDX1=0 TO PCB.OUT$->P$B.NSUBLKS-1;

  10723  2 000010   200015 450100                    STZ     INDX1,,AUTO
         2 000011   000501 710000 2                  TRA     s:10818+3

      680    10724    2        P$ = PCB.OUT$->P$B.SUBLK$(INDX1);

  10724  2 000012   200003 470500                    LDP0    @PCB,,AUTO
         2 000013   000003 471500                    LDP1    3,,PR0
         2 000014   200015 720100                    LXL0    INDX1,,AUTO
         2 000015   100003 236110                    LDQ     3,X0,PR1
         2 000016   200020 756100                    STQ     P$,,AUTO

      681    10725    2        CPOS = P$ -> P$B.CPOS;

  10725  2 000017   200020 471500                    LDP1    P$,,AUTO
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:141  
         2 000020   100002 235100                    LDA     2,,PR1
         2 000021   200014 755100                    STA     CPOS,,AUTO

      682    10726    3        DO CASE(P$->P$B.CODE);

  10726  2 000022   100000 236100                    LDQ     0,,PR1
         2 000023   777777 376007                    ANQ     -1,DL
         2 000024   000011 136007                    SBLQ    9,DL
         2 000025   000030 116007                    CMPQ    24,DL
         2 000026   000030 602006 2                  TNC     s:10726+6,QL
         2 000027   000461 710000 2                  TRA     s:10814
         2 000030   000225 710000 2                  TRA     s:10766
         2 000031   000064 710000 2                  TRA     s:10730
         2 000032   000461 710000 2                  TRA     s:10814
         2 000033   000461 710000 2                  TRA     s:10814
         2 000034   000461 710000 2                  TRA     s:10814
         2 000035   000461 710000 2                  TRA     s:10814
         2 000036   000461 710000 2                  TRA     s:10814
         2 000037   000461 710000 2                  TRA     s:10814
         2 000040   000461 710000 2                  TRA     s:10814
         2 000041   000461 710000 2                  TRA     s:10814
         2 000042   000461 710000 2                  TRA     s:10814
         2 000043   000461 710000 2                  TRA     s:10814
         2 000044   000070 710000 2                  TRA     s:10732
         2 000045   000461 710000 2                  TRA     s:10814
         2 000046   000060 710000 2                  TRA     s:10728
         2 000047   000461 710000 2                  TRA     s:10814
         2 000050   000461 710000 2                  TRA     s:10814
         2 000051   000461 710000 2                  TRA     s:10814
         2 000052   000461 710000 2                  TRA     s:10814
         2 000053   000367 710000 2                  TRA     s:10801
         2 000054   000252 710000 2                  TRA     s:10771
         2 000055   000461 710000 2                  TRA     s:10814
         2 000056   000461 710000 2                  TRA     s:10814
         2 000057   000115 710000 2                  TRA     s:10743

      683    10727    3         CASE(RES_NHPSN);
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:142  

      684    10728    3           NHPSN# = %YES#;

  10728  2 000060   400000 236003                    LDQ     -131072,DU
         2 000061   200010 473500                    LDP3    @NHPSN#,,AUTO
         2 000062   300000 756100                    STQ     0,,PR3
         2 000063   000461 710000 2                  TRA     s:10814

      685    10729    3        CASE(RES_ALL);

      686    10730    3           RELEASE_ALL# = %YES#;

  10730  2 000064   400000 236003                    LDQ     -131072,DU
         2 000065   200011 473500                    LDP3    @RELEASE_ALL#,,AUTO
         2 000066   300000 756100                    STQ     0,,PR3
         2 000067   000461 710000 2                  TRA     s:10814

      687    10731    3         CASE(RES_MEMORY);

      688    10732    3           IF MEM_HIT

  10732  2 000070   200012 234100                    SZN     MEM_HIT,,AUTO
         2 000071   000107 605000 2                  TPL     s:10739

      689    10733    3              THEN
      690    10734    4                 DO;

      691    10735    4                    CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPMEM);

  10735  2 000072   200007 236100                    LDQ     @ERR_BLK,,AUTO
         2 000073   200026 756100                    STQ     PSN+2,,AUTO
         2 000074   000000 236000 3                  LDQ     0
         2 000075   200031 756100                    STQ     PSN+5,,AUTO
         2 000076   200014 633500                    EPPR3   CPOS,,AUTO
         2 000077   200030 453500                    STP3    PSN+4,,AUTO
         2 000100   200026 634500                    EPPR4   PSN+2,,AUTO
         2 000101   200027 454500                    STP4    PSN+3,,AUTO
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:143  
         2 000102   200027 630500                    EPPR0   PSN+3,,AUTO
         2 000103   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000104   000000 701000 xent               TSX1    CXP$POSTERR
         2 000105   000000 011000                    NOP     0

      692    10736    4                 END;

  10736  2 000106   000461 710000 2                  TRA     s:10814

      693    10737    3              ELSE
      694    10738    4                 DO;

      695    10739    4                    JOB_TBL.RRT(JM_RX$MEM) = P$->P$B.SCRITCH;

  10739  2 000107   100001 721100                    LXL1    1,,PR1
         2 000110   200004 473500                    LDP3    @JOB_TBL,,AUTO
         2 000111   300042 741100                    STX1    34,,PR3

      696    10740    4                    MEM_HIT = %YES#;

  10740  2 000112   400000 236003                    LDQ     -131072,DU
         2 000113   200012 756100                    STQ     MEM_HIT,,AUTO

      697    10741    4                 END;

  10741  2 000114   000461 710000 2                  TRA     s:10814

      698    10742    3         CASE(RES_TIME);

      699    10743    3           IF TIME_HIT

  10743  2 000115   200013 234100                    SZN     TIME_HIT,,AUTO
         2 000116   000134 605000 2                  TPL     s:10750

      700    10744    3              THEN
      701    10745    4                 DO;

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:144  
      702    10746    4                    CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPTIME);

  10746  2 000117   200007 236100                    LDQ     @ERR_BLK,,AUTO
         2 000120   200026 756100                    STQ     PSN+2,,AUTO
         2 000121   000001 236000 3                  LDQ     1
         2 000122   200031 756100                    STQ     PSN+5,,AUTO
         2 000123   200014 633500                    EPPR3   CPOS,,AUTO
         2 000124   200030 453500                    STP3    PSN+4,,AUTO
         2 000125   200026 634500                    EPPR4   PSN+2,,AUTO
         2 000126   200027 454500                    STP4    PSN+3,,AUTO
         2 000127   200027 630500                    EPPR0   PSN+3,,AUTO
         2 000130   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000131   000000 701000 xent               TSX1    CXP$POSTERR
         2 000132   000000 011000                    NOP     0

      703    10747    4                 END;

  10747  2 000133   000461 710000 2                  TRA     s:10814

      704    10748    3              ELSE
      705    10749    4                 DO;

      706    10750    4                    TIME_HIT = %YES#;

  10750  2 000134   400000 236003                    LDQ     -131072,DU
         2 000135   200013 756100                    STQ     TIME_HIT,,AUTO

      707    10751    4                    JOB_TBL.TIM = 0;

  10751  2 000136   200004 473500                    LDP3    @JOB_TBL,,AUTO
         2 000137   300013 450100                    STZ     11,,PR3

      708    10752    5                    DO INDX2 = 0 TO P$ -> P$B.NSUBLKS-1;

  10752  2 000140   200016 450100                    STZ     INDX2,,AUTO
         2 000141   000212 710000 2                  TRA     s:10762+3

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:145  
      709    10753    5                       CALL CHARBIN (VALUE,P$ -> P$B.SUBLK$(INDX2) -> P$S.TEXT);

  10753  2 000142   200020 470500                    LDP0    P$,,AUTO
         2 000143   200016 720100                    LXL0    INDX2,,AUTO
         2 000144   000003 471510                    LDP1    3,X0,PR0
         2 000145   100004 236100                    LDQ     4,,PR1
         2 000146   000033 772000                    QRL     27
         2 000147   000000 621006                    EAX1    0,QL
         2 000150   000100 305540                    DTB
         2 000151   100004 230011                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X1
         2 000152   200017 000004                    NDSC9   VALUE,,AUTO              cn=0,s=lsgnf,sf=0,n=4

      710    10754    6                       DO CASE (P$ -> P$B.SUBLK$(INDX2) -> P$S.CODE);

  10754  2 000153   100000 236100                    LDQ     0,,PR1
         2 000154   777777 376007                    ANQ     -1,DL
         2 000155   000004 136007                    SBLQ    4,DL
         2 000156   000007 116007                    CMPQ    7,DL
         2 000157   000161 602006 2                  TNC     s:10754+6,QL
         2 000160   000207 710000 2                  TRA     s:10762
         2 000161   000170 710000 2                  TRA     s:10756
         2 000162   000207 710000 2                  TRA     s:10762
         2 000163   000207 710000 2                  TRA     s:10762
         2 000164   000175 710000 2                  TRA     s:10758
         2 000165   000207 710000 2                  TRA     s:10762
         2 000166   000207 710000 2                  TRA     s:10762
         2 000167   000203 710000 2                  TRA     s:10760

      711    10755    6                          CASE (LIM_HOURS);

      712    10756    6                             JOB_TBL.TIM = VALUE * 3600;

  10756  2 000170   200017 236100                    LDQ     VALUE,,AUTO
         2 000171   007020 402007                    MPY     3600,DL
         2 000172   200004 473500                    LDP3    @JOB_TBL,,AUTO
         2 000173   300013 756100                    STQ     11,,PR3
         2 000174   000207 710000 2                  TRA     s:10762
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:146  

      713    10757    6                          CASE (LIM_MINUTS);

      714    10758    6                             JOB_TBL.TIM = JOB_TBL.TIM + VALUE * 60;

  10758  2 000175   200004 473500                    LDP3    @JOB_TBL,,AUTO
         2 000176   200017 236100                    LDQ     VALUE,,AUTO
         2 000177   000074 402007                    MPY     60,DL
         2 000200   300013 036100                    ADLQ    11,,PR3
         2 000201   300013 756100                    STQ     11,,PR3
         2 000202   000207 710000 2                  TRA     s:10762

      715    10759    6                          CASE (LIM_SECNDS);

      716    10760    6                             JOB_TBL.TIM = JOB_TBL.TIM + VALUE;

  10760  2 000203   200004 473500                    LDP3    @JOB_TBL,,AUTO
         2 000204   300013 236100                    LDQ     11,,PR3
         2 000205   200017 036100                    ADLQ    VALUE,,AUTO
         2 000206   300013 756100                    STQ     11,,PR3

      717    10761    6                       END;   /* Do case ... end */

      718    10762    5                    END;   /* Convert time to seconds */

  10762  2 000207   200016 235100                    LDA     INDX2,,AUTO
         2 000210   000001 035007                    ADLA    1,DL
         2 000211   200016 755100                    STA     INDX2,,AUTO
         2 000212   200020 470500                    LDP0    P$,,AUTO
         2 000213   000001 236100                    LDQ     1,,PR0
         2 000214   000022 772000                    QRL     18
         2 000215   200016 116100                    CMPQ    INDX2,,AUTO
         2 000216   000220 600000 2                  TZE     s:10763
         2 000217   000142 603000 2                  TRC     s:10753

      719    10763    4                    JOB_TBL.TIM = JOB_TBL.TIM * 100;

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:147  
  10763  2 000220   200004 471500                    LDP1    @JOB_TBL,,AUTO
         2 000221   100013 236100                    LDQ     11,,PR1
         2 000222   000144 402007                    MPY     100,DL
         2 000223   100013 756100                    STQ     11,,PR1

      720    10764    4                 END;

  10764  2 000224   000461 710000 2                  TRA     s:10814

      721    10765    3         CASE(RES_ACCT);

      722    10766    3           PSN.FLGS = %NO#;

  10766  2 000225   000002 236000 3                  LDQ     2
         2 000226   200025 356100                    ANSQ    PSN+1,,AUTO

      723    10767    3           PSN.FLGS.PUB = %YES#;

  10767  2 000227   400000 236007                    LDQ     -131072,DL
         2 000230   200025 256100                    ORSQ    PSN+1,,AUTO

      724    10768    3           PSN.TXT = P$->P$S.TEXT;

  10768  2 000231   100004 236100                    LDQ     4,,PR1
         2 000232   000033 772000                    QRL     27
         2 000233   000000 621006                    EAX1    0,QL
         2 000234   040100 100540                    MLR     fill='040'O
         2 000235   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         2 000236   200024 000006                    ADSC9   PSN,,AUTO                cn=0,n=6

      725    10769    3           CALL CPO$STORE_PSN (PSN_TBL,PSN,ERR_CODE) ALTRET(E_PSN);

  10769  2 000237   200021 633500                    EPPR3   ERR_CODE,,AUTO
         2 000240   200030 453500                    STP3    PSN+4,,AUTO
         2 000241   200024 634500                    EPPR4   PSN,,AUTO
         2 000242   200027 454500                    STP4    PSN+3,,AUTO
         2 000243   200005 236100                    LDQ     @PSN_TBL,,AUTO
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:148  
         2 000244   200026 756100                    STQ     PSN+2,,AUTO
         2 000245   200026 630500                    EPPR0   PSN+2,,AUTO
         2 000246   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000247   000000 701000 xent               TSX1    CPO$STORE_PSN
         2 000250   000462 702000 2                  TSX2    E_PSN
         2 000251   000461 710000 2                  TRA     s:10814

      726    10770    3         CASE(RES_SET);

      727    10771    3           PSN.FLGS = %NO#;

  10771  2 000252   000002 236000 3                  LDQ     2
         2 000253   200025 356100                    ANSQ    PSN+1,,AUTO

      728    10772    3           PSN.TXT = P$->P$B.SUBLK$(0)->P$S.TEXT;

  10772  2 000254   100003 473500                    LDP3    3,,PR1
         2 000255   300004 236100                    LDQ     4,,PR3
         2 000256   000033 772000                    QRL     27
         2 000257   000000 621006                    EAX1    0,QL
         2 000260   040100 100540                    MLR     fill='040'O
         2 000261   300004 200011                    ADSC9   4,,PR3                   cn=1,n=*X1
         2 000262   200024 000006                    ADSC9   PSN,,AUTO                cn=0,n=6

      729    10773        /*
      730    10774             ***** Define ACCESS attributes ...
      731    10775        */
      732    10776    4           DO CASE(P$->P$B.SUBLK$(1)->P$B.CODE);

  10776  2 000263   100004 473500                    LDP3    4,,PR1
         2 000264   300000 236100                    LDQ     0,,PR3
         2 000265   777777 376007                    ANQ     -1,DL
         2 000266   000023 136007                    SBLQ    19,DL
         2 000267   000011 116007                    CMPQ    9,DL
         2 000270   000272 602006 2                  TNC     s:10776+7,QL
         2 000271   000310 710000 2                  TRA     s:10785
         2 000272   000306 710000 2                  TRA     s:10780
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:149  
         2 000273   000310 710000 2                  TRA     s:10785
         2 000274   000310 710000 2                  TRA     s:10785
         2 000275   000310 710000 2                  TRA     s:10785
         2 000276   000310 710000 2                  TRA     s:10785
         2 000277   000310 710000 2                  TRA     s:10785
         2 000300   000310 710000 2                  TRA     s:10785
         2 000301   000310 710000 2                  TRA     s:10785
         2 000302   000303 710000 2                  TRA     s:10778

      733    10777    4            CASE(RES_PUBLIC);

      734    10778    4              PSN.FLGS.PUB = %YES#;

  10778  2 000303   400000 236007                    LDQ     -131072,DL
         2 000304   200025 256100                    ORSQ    PSN+1,,AUTO
         2 000305   000310 710000 2                  TRA     s:10785

      735    10779    4            CASE(RES_EXCL);

      736    10780    4              PSN.FLGS.EXCL = %YES#;

  10780  2 000306   200000 236007                    LDQ     65536,DL
         2 000307   200025 256100                    ORSQ    PSN+1,,AUTO

      737    10781    4            END;

      738    10782        /*
      739    10783             ***** If a DISP=xxx specified then stuff into PSN.DISP ...
      740    10784        */
      741    10785    3           IF P$ -> P$B.NSUBLKS > 2

  10785  2 000310   100001 221100                    LDX1    1,,PR1
         2 000311   000003 101003                    CMPX1   3,DU
         2 000312   000350 602000 2                  TNC     s:10798

      742    10786    3              THEN
      743    10787    4                 DO CASE (P$ -> P$B.SUBLK$(2) -> P$B.CODE);
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:150  

  10787  2 000313   100005 473500                    LDP3    5,,PR1
         2 000314   300000 236100                    LDQ     0,,PR3
         2 000315   777777 376007                    ANQ     -1,DL
         2 000316   000016 136007                    SBLQ    14,DL
         2 000317   000004 116007                    CMPQ    4,DL
         2 000320   000322 602006 2                  TNC     s:10787+7,QL
         2 000321   000354 710000 2                  TRA     s:10799
         2 000322   000345 710000 2                  TRA     s:10795
         2 000323   000326 710000 2                  TRA     s:10789
         2 000324   000340 710000 2                  TRA     s:10793
         2 000325   000333 710000 2                  TRA     s:10791

      744    10788    4                    CASE (RES_DISPREL);

      745    10789    4                       PSN.DISP = %RELEASE#;

  10789  2 000326   200025 236100                    LDQ     PSN+1,,AUTO
         2 000327   000003 376000 3                  ANQ     3
         2 000330   001000 276007                    ORQ     512,DL
         2 000331   200025 756100                    STQ     PSN+1,,AUTO
         2 000332   000354 710000 2                  TRA     s:10799

      746    10790    4                    CASE (RES_DISPREM);

      747    10791    4                       PSN.DISP = %REM#;

  10791  2 000333   200025 236100                    LDQ     PSN+1,,AUTO
         2 000334   000003 376000 3                  ANQ     3
         2 000335   002000 276007                    ORQ     1024,DL
         2 000336   200025 756100                    STQ     PSN+1,,AUTO
         2 000337   000354 710000 2                  TRA     s:10799

      748    10792    4                    CASE (RES_DISPRELREM);

      749    10793    4                       PSN.DISP = %REL#;

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:151  
  10793  2 000340   200025 236100                    LDQ     PSN+1,,AUTO
         2 000341   000003 376000 3                  ANQ     3
         2 000342   003000 276007                    ORQ     1536,DL
         2 000343   200025 756100                    STQ     PSN+1,,AUTO
         2 000344   000354 710000 2                  TRA     s:10799

      750    10794    4                    CASE (RES_DISPNOREL);

      751    10795    4                       PSN.DISP = %NOREL#;

  10795  2 000345   000003 236000 3                  LDQ     3
         2 000346   200025 356100                    ANSQ    PSN+1,,AUTO

      752    10796    4                 END;

  10796  2 000347   000354 710000 2                  TRA     s:10799

      753    10797    3              ELSE
      754    10798    3                 PSN.DISP = %REM#;

  10798  2 000350   200025 236100                    LDQ     PSN+1,,AUTO
         2 000351   000003 376000 3                  ANQ     3
         2 000352   002000 276007                    ORQ     1024,DL
         2 000353   200025 756100                    STQ     PSN+1,,AUTO

      755    10799    3           CALL CPO$STORE_PSN (PSN_TBL,PSN,ERR_CODE) ALTRET(E_PSN);

  10799  2 000354   200021 633500                    EPPR3   ERR_CODE,,AUTO
         2 000355   200030 453500                    STP3    PSN+4,,AUTO
         2 000356   200024 634500                    EPPR4   PSN,,AUTO
         2 000357   200027 454500                    STP4    PSN+3,,AUTO
         2 000360   200005 236100                    LDQ     @PSN_TBL,,AUTO
         2 000361   200026 756100                    STQ     PSN+2,,AUTO
         2 000362   200026 630500                    EPPR0   PSN+2,,AUTO
         2 000363   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000364   000000 701000 xent               TSX1    CPO$STORE_PSN
         2 000365   000462 702000 2                  TSX2    E_PSN
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:152  
         2 000366   000461 710000 2                  TRA     s:10814

      756    10800    3         CASE(RES_RSRCE);

      757    10801    4           DO CASE(P$->P$B.SUBLK$(0)->P$B.CODE);

  10801  2 000367   100003 473500                    LDP3    3,,PR1
         2 000370   300000 236100                    LDQ     0,,PR3
         2 000371   777777 376007                    ANQ     -1,DL
         2 000372   000022 136007                    SBLQ    18,DL
         2 000373   000011 116007                    CMPQ    9,DL
         2 000374   000376 602006 2                  TNC     s:10801+7,QL
         2 000375   000461 710000 2                  TRA     s:10814
         2 000376   000446 710000 2                  TRA     s:10811
         2 000377   000461 710000 2                  TRA     s:10814
         2 000400   000461 710000 2                  TRA     s:10814
         2 000401   000461 710000 2                  TRA     s:10814
         2 000402   000446 710000 2                  TRA     s:10811
         2 000403   000461 710000 2                  TRA     s:10814
         2 000404   000446 710000 2                  TRA     s:10811
         2 000405   000461 710000 2                  TRA     s:10814
         2 000406   000407 710000 2                  TRA     s:10803

      758    10802    4            CASE(RES_PSEUDO);

      759    10803    4              IF JOB_TBL.RRT(P$->P$B.SUBLK$(0)->P$S.SCRITCH+JM_RX$PR1)>0

  10803  2 000407   300001 236100                    LDQ     1,,PR3
         2 000410   777777 376007                    ANQ     -1,DL
         2 000411   000001 736000                    QLS     1
         2 000412   200004 474500                    LDP4    @JOB_TBL,,AUTO
         2 000413   000100 101506                    MRL     fill='000'O
         2 000414   400044 000002                    ADSC9   36,Q,PR4                 cn=0,n=2
         2 000415   200026 000004                    ADSC9   PSN+2,,AUTO              cn=0,n=4
         2 000416   200026 236100                    LDQ     PSN+2,,AUTO
         2 000417   000000 116003                    CMPQ    0,DU
         2 000420   000436 600000 2                  TZE     s:10809
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:153  

      760    10804    4                 THEN
      761    10805    5                    DO;

      762    10806    5                       CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,E_DUPPSEUDO);

  10806  2 000421   200007 236100                    LDQ     @ERR_BLK,,AUTO
         2 000422   200026 756100                    STQ     PSN+2,,AUTO
         2 000423   000004 236000 3                  LDQ     4
         2 000424   200031 756100                    STQ     PSN+5,,AUTO
         2 000425   200014 633500                    EPPR3   CPOS,,AUTO
         2 000426   200030 453500                    STP3    PSN+4,,AUTO
         2 000427   200026 635500                    EPPR5   PSN+2,,AUTO
         2 000430   200027 455500                    STP5    PSN+3,,AUTO
         2 000431   200027 630500                    EPPR0   PSN+3,,AUTO
         2 000432   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000433   000000 701000 xent               TSX1    CXP$POSTERR
         2 000434   000000 011000                    NOP     0

      763    10807    5                    END;

  10807  2 000435   000461 710000 2                  TRA     s:10814

      764    10808    4                 ELSE
      765    10809    4                    JOB_TBL.RRT(P$->P$B.SUBLK$(0)->P$S.SCRITCH+JM_RX$PR1) = P$->P$B.
             10809                             SCRITCH;

  10809  2 000436   100003 473500                    LDP3    3,,PR1
         2 000437   300001 236100                    LDQ     1,,PR3
         2 000440   777777 376007                    ANQ     -1,DL
         2 000441   000001 736000                    QLS     1
         2 000442   000106 100500                    MLR     fill='000'O
         2 000443   100001 400002                    ADSC9   1,,PR1                   cn=2,n=2
         2 000444   400044 000002                    ADSC9   36,Q,PR4                 cn=0,n=2
         2 000445   000461 710000 2                  TRA     s:10814

      766    10810    4            CASE(RES_MT,RES_DP,RES_OTHER_NM);
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:154  

      767    10811    4              CALL CPO$PROCESS_VIRT_RES (JOB_TBL, VIRT_TBL, P$, ERR_BLK);

  10811  2 000446   200007 236100                    LDQ     @ERR_BLK,,AUTO
         2 000447   200031 756100                    STQ     PSN+5,,AUTO
         2 000450   200020 633500                    EPPR3   P$,,AUTO
         2 000451   200030 453500                    STP3    PSN+4,,AUTO
         2 000452   200006 236100                    LDQ     @VIRT_TBL,,AUTO
         2 000453   200004 235100                    LDA     @JOB_TBL,,AUTO
         2 000454   200026 757100                    STAQ    PSN+2,,AUTO
         2 000455   200026 630500                    EPPR0   PSN+2,,AUTO
         2 000456   000022 631400 xsym               EPPR1   B_VECTNIL+18
         2 000457   000000 701000 xent               TSX1    CPO$PROCESS_VIRT_RES
         2 000460   000000 011000                    NOP     0

      768    10812    4            END;   /* Do case (RES_RESRCE) ... end */

      769    10813    3         END;   /* Do case (P$B.CODE) ... end */

      770    10814    3           DO NEVER;

  10814  2 000461   000476 710000 2                  TRA     s:10818

      771    10815    3   E_PSN:
      772    10816    3              CALL CXP$POSTERR (ADDR(ERR_BLK),CPOS,ERR_CODE);

  10816  2 000462   200007 236100       E_PSN        LDQ     @ERR_BLK,,AUTO
         2 000463   200026 756100                    STQ     PSN+2,,AUTO
         2 000464   200021 630500                    EPPR0   ERR_CODE,,AUTO
         2 000465   200031 450500                    STP0    PSN+5,,AUTO
         2 000466   200014 631500                    EPPR1   CPOS,,AUTO
         2 000467   200030 451500                    STP1    PSN+4,,AUTO
         2 000470   200026 633500                    EPPR3   PSN+2,,AUTO
         2 000471   200027 453500                    STP3    PSN+3,,AUTO
         2 000472   200027 630500                    EPPR0   PSN+3,,AUTO
         2 000473   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000474   000000 701000 xent               TSX1    CXP$POSTERR
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:155  
         2 000475   000000 011000                    NOP     0

      773    10817    3           END;

      774    10818    2     END;   /* Do indx1 = 0 to ... end */

  10818  2 000476   200015 235100                    LDA     INDX1,,AUTO
         2 000477   000001 035007                    ADLA    1,DL
         2 000500   200015 755100                    STA     INDX1,,AUTO
         2 000501   200003 470500                    LDP0    @PCB,,AUTO
         2 000502   000003 471500                    LDP1    3,,PR0
         2 000503   100001 236100                    LDQ     1,,PR1
         2 000504   000022 772000                    QRL     18
         2 000505   200015 116100                    CMPQ    INDX1,,AUTO
         2 000506   000510 600000 2                  TZE     s:10819
         2 000507   000012 603000 2                  TRC     s:10724

      775    10819    1     RETURN;

  10819  2 000510   000000 702200 xent               TSX2  ! X66_ARET
      776    10820    1   END CPO$RESOURCE;

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:156  
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPO$RESOURCE.
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:157  

 **** Variables and constants ****

  ****  Section 001 RoData CPO$RESOURCE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w STRC        r     1 E_DUPMEM                   0-0-0/w STRC        r     1 E_DUPPSEUDO
     1-0-0/w STRC        r     1 E_DUPTIME

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     7-0-0/w PTR         r     1 @ERR_BLK                   4-0-0/w PTR         r     1 @JOB_TBL
    10-0-0/w PTR         r     1 @NHPSN#                    3-0-0/w PTR         r     1 @PCB
     5-0-0/w PTR         r     1 @PSN_TBL                  11-0-0/w PTR         r     1 @RELEASE_ALL#
     6-0-0/w PTR         r     1 @VIRT_TBL                 14-0-0/w UBIN        r     1 CPOS
    *0-0-0/w STRC(828)   r     1 ERR_BLK                   21-0-0/w STRC        r     1 ERR_CODE
    15-0-0/w UBIN        r     1 INDX1                     16-0-0/w UBIN        r     1 INDX2
    *0-0-0/w STRC(1980)  r     1 JOB_TBL                   12-0-0/w BIT         r     1 MEM_HIT
    *0-0-0/w BIT         r     1 NHPSN#                    20-0-0/w PTR         r     1 P$
    *0-0-0/w STRC(504)   r     1 PCB                       24-0-0/w STRC(63)    r     1 PSN
    *0-0-0/w STRC(2988)  r     1 PSN_TBL                   *0-0-0/w BIT         r     1 RELEASE_ALL#
    13-0-0/w BIT         r     1 TIME_HIT                  17-0-0/w SBIN        r     1 VALUE
    *0-0-0/w STRC(2268)  r     1 VIRT_TBL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/w ASTR(153)   r     1 P$S

PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:158  

   Procedure CPO$RESOURCE requires 329 words for executable code.
   Procedure CPO$RESOURCE requires 26 words of local(AUTO) storage.

    No errors detected in file CPO$SUBR.:E05TSI    .
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:159  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:160  
          MINI XREF LISTING

CPO$PROCESS_VIRT_RES
      9959**DCL-ENT 10811--CALL
CPO$STORE_PSN
      9960**DCL-ENT 10769--CALL    10799--CALL
CPOS
      9964**DCL     10725<<ASSIGN  10735<>CALL    10746<>CALL    10806<>CALL    10816<>CALL
CXP$POSTERR
      9958**DCL-ENT 10735--CALL    10746--CALL    10806--CALL    10816--CALL
ERR_BLK
     10551**DCL         6--PROC    10735--CALL    10746--CALL    10806--CALL    10811<>CALL    10816--CALL
ERR_CODE
      9982**DCL     10769<>CALL    10799<>CALL    10816<>CALL
E_DUPMEM
     10706**DCL     10735<>CALL
E_DUPPSEUDO
     10662**DCL     10806<>CALL
E_DUPTIME
     10684**DCL     10746<>CALL
E_PSN
     10816**LABEL   10769--CALLALT 10799--CALLALT
INDX1
      9965**DCL     10723<<DOINDEX 10724>>ASSIGN
INDX2
      9966**DCL     10752<<DOINDEX 10753>>CALLBLT 10753>>CALLBLT 10754>>DOCASE
JOB_TBL
     10280**DCL         6--PROC    10811<>CALL
JOB_TBL.RRT
     10396**DCL     10739<<ASSIGN  10803>>IF      10809<<ASSIGN
JOB_TBL.TIM
     10318**DCL     10751<<ASSIGN  10756<<ASSIGN  10758<<ASSIGN  10758>>ASSIGN  10760<<ASSIGN  10760>>ASSIGN
     10763<<ASSIGN  10763>>ASSIGN
MEM_HIT
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:161  
      9962**DCL     10721<<ASSIGN  10732>>IF      10740<<ASSIGN
NHPSN#
     10562**DCL         6--PROC    10719<<ASSIGN  10728<<ASSIGN
P$
      9968**DCL     10724<<ASSIGN  10725>>ASSIGN  10726>>DOCASE  10739>>ASSIGN  10752>>DOINDEX 10753>>CALLBLT
     10753>>CALLBLT 10754>>DOCASE  10768>>ASSIGN  10768>>ASSIGN  10772>>ASSIGN  10772>>ASSIGN  10776>>DOCASE
     10785>>IF      10787>>DOCASE  10801>>DOCASE  10803>>IF      10809>>ASSIGN  10809>>ASSIGN  10811<>CALL
P$B.CODE
     10579**DCL     10726>>DOCASE  10776>>DOCASE  10787>>DOCASE  10801>>DOCASE
P$B.CPOS
     10597**DCL     10725>>ASSIGN
P$B.NSUBLKS
     10583**DCL     10723>>DOINDEX 10752>>DOINDEX 10785>>IF
P$B.SCRITCH
     10587**DCL     10739>>ASSIGN  10809>>ASSIGN
P$B.SUBLK$
     10604**DCL     10724>>ASSIGN  10753>>CALLBLT 10753>>CALLBLT 10754>>DOCASE  10772>>ASSIGN  10772>>ASSIGN
     10776>>DOCASE  10787>>DOCASE  10801>>DOCASE  10803>>IF      10809>>ASSIGN
P$S.CODE
     10623**DCL     10754>>DOCASE
P$S.COUNT
     10640**DCL     10643--IMP-SIZ 10753>>CALLBLT 10768>>ASSIGN  10772>>ASSIGN
P$S.SCRITCH
     10629**DCL     10803>>IF      10809>>ASSIGN
P$S.TEXT
     10643**DCL     10753>>CALLBLT 10768>>ASSIGN  10772>>ASSIGN
PCB
     10085**DCL         6--PROC
PCB.OUT$
     10098**DCL     10723>>DOINDEX 10724>>ASSIGN
PSN
     10041**DCL     10769<>CALL    10799<>CALL
PSN.DISP
     10061**DCL     10789<<ASSIGN  10791<<ASSIGN  10793<<ASSIGN  10795<<ASSIGN  10798<<ASSIGN
PSN.FLGS
     10048**DCL     10766<<ASSIGN  10771<<ASSIGN
PL6.E3A0      #007=CPO$RESOURCE File=CPO$SUBR.:E05TSI                            TUE 07/29/97 12:03 Page:162  
PSN.FLGS.EXCL
     10052**DCL     10780<<ASSIGN
PSN.FLGS.PUB
     10050**DCL     10767<<ASSIGN  10778<<ASSIGN
PSN.TXT
     10046**DCL     10768<<ASSIGN  10772<<ASSIGN
PSN_TBL
     10438**DCL         6--PROC    10769<>CALL    10799<>CALL
RELEASE_ALL#
     10563**DCL         6--PROC    10720<<ASSIGN  10730<<ASSIGN
TIME_HIT
      9963**DCL     10722<<ASSIGN  10743>>IF      10750<<ASSIGN
VALUE
      9967**DCL     10753<<CALLBLT 10756>>ASSIGN  10758>>ASSIGN  10760>>ASSIGN
VIRT_TBL
     10495**DCL         6--PROC    10811<>CALL
VIRT_TBL.RES.VNUM
     10521**DCL     10523--REDEF
VRES.VNUM
     10011**DCL     10013--REDEF
