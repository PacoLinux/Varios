VERSION E05

 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    1    BMAP - B00     
                                         1  *M*   UDN$NSA   BMAP Routines for the Service decoder   *
                                         2  *T***********************************************************
                                         3  *T*                                                         *
                                         4  *T* Copyright (c) Bull HN Information Systems Inc., 1997    *
                                         5  *T*                                                         *
                                         6  *T***********************************************************
                                         7         ENTDEF  UDN$NSA
                                         8         ENTDEF  UDA$SSPATCH
                                         9         ENTDEF  UDB$AUTO
                                        10         ENTDEF  UDN$MAGIC
                                        11         ENTDEF  UDN$MGSAVE
                                        12         ENTDEF  UDN$MGRES
                                        13         ENTDEF  UDN$MAGICSS
                                        14         ENTDEF  UDN$MAGICLS
                                        15         ENTDEF  UDN$MAGICRLS
                                        16         ENTDEF  UDN$MAGICSS1
                                        17         ENTDEF  UDN$LOADSS
                                        18         ENTDEF  UDN$BLDASR
                                        19         ENTDEF  UDN$BLDASRS
                                        20         ENTDEF  UDN$JAMSS
                                        21         ENTREF  JSN$FIXSS
                                        22         ENTREF  JSE$ABORTX
                                        23         ENTREF  UDA$PMMENT
                                        24         ENTREF  UDA$UPMMENT
                                        25         ENTREF  SSS$CHKSS
                                        26         ENTREF  SSS$PARK
                                        27         ENTREF  SSC$SLAVE
                                        28         ENTREF  SSQ$QEND
                                        29         ENTREF  HFC$BMAP_CLOCK
                                        30         ENTREF  X66_AUTO_2
                                        31         ENTREF  X66_AUTO_0
                                        32         ENTREF  X66_ARET
                                        33         SYMREF  B_MPT
                                        34         SYMREF  B$JIT$
                                        35         SYMREF  B$SCU$
                                        36         SYMREF  B$TSTACK$
                                        37         SYMREF  B$LS$
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    2    BMAP - B00     
                                        38         SYMREF  J_ASLMXSS_D
                                        39         SYMREF  H_RPM_FLG
                                        40         SYMREF  S_ITIME
                                        41         SYMREF  S_INCTIME
                                        42  *
                                        43         SEGREF  LSSID
                                        44         SEGREF  TSTACKSID
                                        45         SEGREF  SCUSID
                                        46  *
             000000001762               47  ISR    BOOL    1762
             000000001766               48  ASR    BOOL    1766
             000000001767               49  PSR    BOOL    1767
             000000001764               50  SSR    BOOL    1764            SEGID OF SSR
             000000001761               51  TYP    BOOL    1761            CHANGE DESCRIPTOR TYPE
             000000000002               52  AUTO   EQU     2
             000000000006               53  SS     EQU     6               DR,AR FOR SAFE-STORE REGISTER
                                        54  *              OFFSETS INTO SAFE-STORE
             000000000001               55  PMMELOC  EQU   1               BITS 0-17  FOR PMME CODE
             000000000001               56  AUTOLOC  EQU   1               BITS 18-35  FOR AUTO INDEX
             000000000007               57  CLNUPLOC EQU   7               EPTR FOR CLEANUP FOLLOWING TRAP
             000000000006               58  CPUTYP EQU     6               IF MULTIWORD INTERRUPT BIT SET,
                                        59  *                                BIT 18 IS SET
                                        60  *                                BIT 19-23 - CPU TYPE
             000000000014               61  LSR    EQU     12              DW CONTAINING LSR
             000000000076               62  TSTAMP BOOL    76              52-BIT REAL-TIME CLOCK FROM SCU
                                        63  *
             000000000012               64  JITERR EQU     10
             000000000321               65  JITJJ2 EQU     209
                                        66  *
                                        67         LODM    B_BMACROS_C
                                        68         PMC     ON
                                        69         MONLS
             000000000000                   LS.IS EQU 0             MONITOR INSTRUCTION SEGMENT
             000000000001                   LS.JITU EQU LS.IS+1       USER JIT
             000000000002                   LS.BUF EQU LS.JITU+1     USER FILE MANAGEMENT BUFFERS
             000000000003                   LS.ROSEG EQU LS.BUF+1      USER READ ONLY SEGMENT
             000000000004                   LS.DS1 EQU LS.ROSEG+1    MONITOR DATA SEGMENT 1
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    3    BMAP - B00     
             000000000004                   LS.CFU EQU LS.DS1        MON DS1 -- CFUS
             000000000005                   LS.DS2 EQU LS.DS1+1      MONITOR DATA SEGMENT 2
             000000000006                   LS.DS3 EQU LS.DS2+1      MONITOR DATA SEGMENT 3
             000000000007                   LS.DS4 EQU LS.DS3+1      MONITOR DATA SEGMENT 4
             000000000010                   LS.DS5 EQU LS.DS4+1      MONITOR DATA SEGMENT 5
             000000000011                   LS.DS6 EQU LS.DS5+1      MONITOR DATA SEGMENT 6
             000000000012                   LS.DS7 EQU LS.DS6+1      MONITOR DATA SEGMENT 7
             000000000013                   LS.DS8 EQU LS.DS7+1      MONITOR DATA SEGMENT 8
             000000000013                   LS.LDCT EQU LS.DS8        MON DS8 -- LDCTS
             000000000014                   LS.NULL EQU LS.DS8+1      NULL DESCRIPTOR
             000000000015                   LS.XLAT EQU LS.NULL+1     XLATE/SEARCH TABLES
             000000000016                   LS.ECCB EQU LS.XLAT+1     ECCB
             000000000017                   LS.TCB EQU LS.ECCB+1     TCB
             000000000020                   LS.TSTACK EQU LS.TCB+1      TSTACK
             000000000021                   LS.REAL EQU LS.TSTACK+1   REAL PG 0-3
             000000000022                   LS.USSS EQU LS.REAL+1     USER SS AREA
             000000000023                   LS.USDS0 EQU LS.USSS+1     USER SDS TYPE 0
             000000000024                   LS.USDS1 EQU LS.USDS0+1    USER SDS TYPE 1
             000000000025                   LS.SCR EQU LS.USDS1+1    SCREECH ENTRY
             000000000026                   LS.XD EQU LS.SCR+1      XDELTA ENTRY DESCRIPTOR
             000000000027                   LS.PMME EQU LS.XD+1       PMME ENTRY DESCRIPTOR
             000000000030                   LS.REG EQU LS.PMME+1     SCHED REG ENTRY DESCRIPTOR
             000000000031                   LS.ULS EQU LS.REG+1      USER LINKAGE SEGMENT
             000000000032                   LS.DBLS EQU LS.ULS+1      DEBUGGER LINKAGE SEGMENT
             000000000033                   LS.ASLLS EQU LS.DBLS+1     ASL LINKAGE SEGMENT
             000000000034                   LS.CPLS EQU LS.ASLLS+1    COMMAND PROCESSOR LINKAGE SEGMENT
             000000000035                   LS.MLS EQU LS.CPLS+1     MONITOR LINKAGE SEGMENT
             000000000036                   LS.UPT EQU LS.MLS+1      USER PAGE TABLE
             000000000037                   LS.MPT EQU LS.UPT+1      MONITOR PAGE TABLE
             000000000040                   LS.USRIS EQU LS.MPT+1      USER INSTRUCTION SEGMENT
             000000000041                   LS.MTSTACK EQU LS.USRIS+1    TSTACKU
             000000000042                   LS.MJIT EQU LS.MTSTACK+1  MONITOR JIT
             000000000043                   LS.MHJIT EQU LS.MJIT+1     MONITOR HJIT
             000000000044                   LS.MONSSS EQU LS.MHJIT+1    MONITOR SSS -- TYPE 0
             000000000045                   LS.HJITU EQU LS.MONSSS+1   USER HJIT
             000000000046                   LS.SBUF1 EQU LS.HJITU+1    SPECIAL BUFFER 1
             000000000047                   LS.SBUF2 EQU LS.SBUF1+1    SPECIAL BUFFER 2
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    4    BMAP - B00     
             000000000050                   LS.ISB EQU LS.SBUF2+1    MON ISR -- BYPASS CACHE
             000000000051                   LS.SCU EQU LS.ISB+1      SPECIAL PAGES FOR GETTING SCU ADDR
             000000000052                   LS.WINDOW EQU LS.SCU+1      WINDOW AREA
             000000000053                   LS.ASR EQU LS.WINDOW+1   MONITOR ARGUMENT STACK DESC
             000000000054                   LS.MISC EQU LS.ASR+1      MISCELLANEOUS (can be used @ int level)
             000000000055                   LS.CWSQ1 EQU LS.MISC+1     COMMUNICATIONS WSQ
             000000000075                   LS.CPGT1 EQU LS.CWSQ1+16   CWSQ PG TABLE
             000000000115                   LS.JITPG EQU LS.CPGT1+16
             000000000116                   LS.PPUT EQU LS.JITPG+1
             000000000117                   LS.VPT EQU LS.PPUT+1
             000000000120                   LS.MOUSE EQU LS.VPT+1
             000000000121                   LS.LOWMEM EQU LS.MOUSE+1
             000000000122                   LS.IOEND EQU LS.LOWMEM+1
             000000000123                   LS.TIGR EQU LS.IOEND+1    TIGR DATA
             000000000124                   LS.RONC EQU LS.TIGR+1     READ ONLY SEG -- BYPASS CACHE
             000000000125                   LS.ROSEG8 EQU LS.RONC+1     READ ONLY SEG -- AT IO END ACT (WSQ8)
             000000000126                   LS.XDRTN EQU LS.ROSEG8+1   XDELTA RETURN ENTRY DESCRIPTOR
             000000000127                   LS.RCVRTN EQU LS.XDRTN+1    SUA OR SNAP RETURN ENTRY DESCRIPTOR
             000000000130                   LS.MISC2 EQU LS.RCVRTN+1   MISCELLANEOUS (used on behalf of user only)
             000000000131                   LS.RCVENT EQU LS.MISC2+1    RECOVERY ENTRY DESCRIPTOR
             000000000132                   LS.MLS1 EQU LS.RCVENT+1   MON LS -- TYPE 1 FOR ANLZ
             000000000133                   LS.WS3MLS EQU LS.MLS1+1
             000000000134                   LS.LDCTNC EQU LS.WS3MLS+1
             000000000135                   LS.MSTRPT EQU LS.LDCTNC+1
             000000000136                   LS.SLV1PT EQU LS.MSTRPT+1
             000000000137                   LS.SLV2PT EQU LS.SLV1PT+1
             000000000140                   LS.SLV3PT EQU LS.SLV2PT+1
             000000000141                   LS.SLV4PT EQU LS.SLV3PT+1
             000000000142                   LS.SLV5PT EQU LS.SLV4PT+1
             000000000143                   LS.SLV6PT EQU LS.SLV5PT+1
             000000000144                   LS.SLV7PT EQU LS.SLV6PT+1
             000000000145                   LS.MSTRHJ EQU LS.SLV7PT+1
             000000000146                   LS.SLV1HJ EQU LS.MSTRHJ+1
             000000000147                   LS.SLV2HJ EQU LS.SLV1HJ+1
             000000000150                   LS.SLV3HJ EQU LS.SLV2HJ+1
             000000000151                   LS.SLV4HJ EQU LS.SLV3HJ+1
             000000000152                   LS.SLV5HJ EQU LS.SLV4HJ+1
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    5    BMAP - B00     
             000000000153                   LS.SLV6HJ EQU LS.SLV5HJ+1
             000000000154                   LS.SLV7HJ EQU LS.SLV6HJ+1
             000000000155                   LS.AARDV EQU LS.SLV7HJ+1
             000000000155                   LS.FLT EQU LS.AARDV      AARDVARK FAULT ENTRY DESCR
             000000000156                   LS.AARDV2 EQU LS.AARDV+1
             000000000156                   LS.MONRL EQU LS.AARDV2     REAL MON ISR FOR MINIQ
             000000000157                   LS.FIRM EQU LS.AARDV2+1
             000000000160                   LS.WS3MLSNW EQU LS.FIRM+1
             000000000161                   LS.BUFCACH EQU LS.WS3MLSNW+1
             000000000162                   LS.IMX EQU LS.BUFCACH+1  IMX DATA
             000000000163                   LS.CGPT EQU LS.IMX+1      CG PAGE TABLE
             000000000164                   LS.CGCTXT EQU LS.CGPT+1     CG CONTEXT & DESCRIPTOR SEG BLKS
             000000000165                   LS.MAGSS EQU LS.CGCTXT+1   MAGIC SS FRAME
             000000000166                   LS.MAGLS EQU LS.MAGSS+1    MAGIC LS
             000000000167                   LS.MAGAS EQU LS.MAGLS+1    MAGIC AS
             000000000170                   LS.MAGPS EQU LS.MAGAS+1    MAGIC PS
             000000000171                   LS.MAGTCB EQU LS.MAGPS+1    MAGIC TCB
             000000000172                   LS.MAGECCB EQU LS.MAGTCB+1   MAGIC ECCB
             000000000173                   LS.MLSREAD EQU LS.MAGECCB+1  MLS - READ ONLY
             000000000174                   LS.SEGTBL EQU LS.MLSREAD+1    MON OVERLAY SEGMENT TABLE
             000000000175                   LS.WSQ0PT EQU LS.SEGTBL+1     WSQ #0 Page Table.  DPS-90 only
             000000000176                   LS.IPHY_MAP EQU LS.WSQ0PT+1   Inverse physical map for DPS-90
             000000000177                   LS.MINIQ_ENT EQU LS.IPHY_MAP+1 Entry for MINIQ's climb to itself
             000000000200                   LS.XLNORM EQU LS.MINIQ_ENT+1 Normal XLATE tables (Note space reserved for X1000)
             000000000201                   LS.XLALT EQU LS.XLNORM+1   Alternate XLATE tables
             000000000202                   LS.DVT EQU LS.XLALT+1    DVT TABLE
                                        70         MAGIC
             000000000000                   MPT.SS EQU 0             SS$
             000000000001                   MPT.LS EQU MPT.SS+1      LS$
             000000000002                   MPT.AS EQU MPT.LS+1      AS$
             000000000003                   MPT.PS EQU MPT.AS+1      PS$
             000000000004                   MPT.TCB EQU MPT.PS+1      TCB$
             000000000005                   MPT.ECCB EQU MPT.TCB+1     ECCB$
             000000000006                   MPT.SSDESC EQU MPT.ECCB+1    SSDESC$
             000000000007                   MPT.LSDESC EQU MPT.SSDESC+1  LSDESC$
             000000000010                   MPT.ASDESC EQU MPT.LSDESC+1  ASDESC$
             000000000011                   MPT.PSDESC EQU MPT.ASDESC+1  PSDESC$
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    6    BMAP - B00     
             000000000012                   MPT.TCBDESC EQU MPT.PSDESC+1  TCBDESC$
             000000000013                   MPT.ECCBDESC EQU MPT.TCBDESC+1 ECCBDESC$
             000000000006                   MAGIC.ND EQU 6             NUMBER OF MAGIC DESCRIPTORS
                                        71         USRLS
             000000000000                   UL.IS EQU 0             IS
             000000000001                   UL.JIT EQU UL.IS+1       JIT
             000000000002                   UL.BUF EQU UL.JIT+1      FM BUFS
             000000000003                   UL.ROSEG EQU UL.BUF+1      ROSEG
             000000000004                   UL.DS1 EQU UL.ROSEG+1    DATA SEG 1
             000000000014                   UL.NULL EQU UL.DS1+8      ADDR(NIL) DESC
             000000000015                   UL.IS2 EQU UL.NULL+1
             000000000016                   UL.ECCB EQU UL.IS2+1      ECCB
             000000000017                   UL.TCB EQU UL.ECCB+1     TCB
                                        72  *

 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    7    BMAP - B00     
                                        73         EJECT
 0 000000                               74         USE     UDN$NSA,1
                                        75         EIGHT
   000000                               76  UDN$NSA NULL
                                        77  *
                                        78  *              THIS ROUTINE ENTERED PRIVILEGED
                                        79  *
   000000                               80  UDA$SSPATCH NULL
                                        81         INHIB   ON
   000000    004010 6342 07             82         LDI     =O4010,DL       RESET INDICATORS AND MASKS
   000001    001764 4766 07             83         LDP     SS,SSR,DL       SAFE STORE DESCRIPTOR TO 'SS'
   000002    001761 4766 07             84         LDP     SS,TYP,DL       CHANGE DESCRIPTOR TO TYPE ZERO
   000003    6 00001 7403 00            85         STX0    PMMELOC,,SS     SAVE X0 IN SAFE STORE FRAME
   000004  X 000000 4776 07             86         LDP7    LSSID,DL
   000005    7 00352 0567 00            87         STD     SS,LS.MAGSS*2,,7 STORE MAGIC SS DESCRIPTOR
   000006    7 00356 7507 00            88         STAS    LS.MAGAS*2,,7    STORE MAGIC AS DESCR FOR XSA$MON
   000007  X 000000 4726 07             89         LDP     AUTO,TSTACKSID,DL  LOAD TSTACK DESCRIPTOR
   000010    2 00000 7243 00            90         LXL4    0,,AUTO         LOAD INDEX FOR AUTO
   000011    6 00001 4443 00            91         SXL4    AUTOLOC,,SS     SAVE AUTO INDEX IN SAFE STORE
   000012    2 00001 5276 14            92         SWDX    1,4,AUTO
   000013    6 00007 4503 00            93         STZ     CLNUPLOC,,SS    INIT CLEANUP EPTR TO NIL
   000014    6 00010 7213 00            94         LXL1    8,,SS
   000015    000160 3612 03             95         ANX1    =O160,DU        ISOLATE SS.ISR.WSR
   000016 (0)000033 6002 00             96         TZE     TUDA$PMMENT     IF MON, GO; ELSE PREP ACCTG
   000017    6 00006 4503 00            97         STZ     CPUTYP,,SS      ZERO CPUTYP WORD FOR USER PMME
   000020  X 000000 4706 07             98         LDP0    SCUSID,DL
   000021  X 000000 7042 00             99         TSX4    HFC$BMAP_CLOCK  READ CLOCK
   000022    6 00076 7573 00           100         STAQ    TSTAMP,,SS      SAVE 52-BIT REAL-TIME CLOCK
   000023  X 000000 1772 00            101         SBAQ    S_ITIME
   000024  X 000000 7562 00            102         STQ     S_INCTIME       PREVIOUS INTERVAL
   000025  X 000000 0772 00            103         ADAQ    S_ITIME
   000026  X 000000 7572 00            104         STAQ    S_ITIME         NEW BEGIN
   000027    7 00353 2363 00           105         LDQ     LS.MAGSS*2+1,,7 GET USER SS DESC WORD 1
   000030  X 000000 1162 00            106         CMPQ    J_ASLMXSS_D     IS THE USER FILLING UP THE STACK
   000031 (0)000034 6056 00            107         TPNZ    STKFULL         YES
   000032                              108  TUDA$UPMMENT NULL
   000032  X 000000 7012 00            109         TSX1    UDA$UPMMENT     NO RETURN
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    8    BMAP - B00     
   000033                              110  TUDA$PMMENT NULL
   000033  X 000000 7012 00            111         TSX1    UDA$PMMENT      NO RETURN
   000034                              112  STKFULL NULL
   000034    000140 1012 03            113         CMPX1   =O140,DU        OK IF IDB OR ICP
   000035 (0)000032 6042 00            114         TMI     TUDA$UPMMENT
   000036                              115  UDABORT NULL
   000036  X 000000 7012 00            116         TSX1    JSN$FIXSS       FLUSH FRAMES-SET JITERR AND RNST
   000037    000000 0112 00            117         NOP
                                       118         INHIB   OFF
   000040  X 000000 4714 00            119         LDP1    B$JIT$
   000041 (0)000044 2350 00            120         LDA     ESSF
   000042    1 00012 7551 00           121         STA     JITERR,,1
   000043  X 000000 7010 00            122         TSX1    JSE$ABORTX
                                       123  *
   000044    25 04 16 1 01013 6        124  ESSF   VFD     A6/U,A6/D,A6/N,1/1,14/523,3/6
                                       125  *
                                       126  *E*    ERROR: UDN-E$SSF-A
                                       127  *E*    MESSAGE: The Safe-Store Stack is too full to allow Service Requests.
                                       128  *

 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    9    BMAP - B00     
                                       129         EJECT
   000045                              130  UDB$AUTO    NULL
                                       131         INHIB   ON
   000045    001764 4766 07            132         LDP     SS,SSR,DL       LOAD SAFE STORE DESCRIPTOR
   000046    001761 4766 07            133         LDP     SS,TYP,DL       CHANGE IT TO TYPE ZERO
   000047    6 00001 2353 00           134         LDA     AUTOLOC,,SS     GET AUTO INDEX AT ENTRY
   000050    2 00001 5276 05           135         SWDX    1,AL,AUTO
   000051    2 00001 7553 05           136         STA     1,AL,AUTO
   000052    6 00014 2353 00           137         LDA     LSR,,SS
   000053    000160 3752 07            138         ANA     =O160,DL        TEST LSR.WSR
   000054 (0)000116 6002 00            139         TZE     EXIT            WSR0 -> RETURN TO MONITOR
   000055 (0)000120 4726 00            140         LDP     AUTO,INITAUTO   NOT WSR0 -> CLEAN UP USER TSTACK
   000056    777773 2352 07            141         LDA     -5,DL                       JUST IN CASE
   000057    2 00001 7553 05           142         STA     1,AL,AUTO
   000060  X 000000 7022 00            143         TSX2    SSS$CHKSS       RETURN TO USER
                                       144  *
                                       145  *              ENTRY FOR NORMAL EXIT -- CHECK ALT FIRST
                                       146  *
                                       147         ENTDEF  UDB$AUTOQ
   000061    000007 7102 04            148         EIGHT
   000070
          (0)000000000070              149  UDB$AUTOQ EQU  *
   000070    001764 4766 07            150         LDP     SS,SSR,DL
   000071    001761 4766 07            151         LDP     SS,TYP,DL
   000072    6 00001 2353 00           152         LDA     PMMELOC,,SS     CHECK ALT, GET AUTO INDEX
   000073 (0)000076 6052 00            153         TPL     COMAUTO         NO
   000074    000001 2362 03            154         LDQ     1,DU
   000075    6 00004 0563 00           155         ASQ     4,,SS           INC IC PAST ALT ADDR
                                       156  *
          (0)000000000076              157  COMAUTO EQU    *
   000076    2 00001 5276 05           158         SWDX    1,AL,AUTO
   000077    2 00001 7553 05           159         STA     1,AL,AUTO       PUT BACK IN BASE OF AUTO FOR NEXT PMME
   000100    6 00014 2353 00           160         LDA     LSR,,SS
   000101    000160 3752 07            161         ANA     =O160,DL        TEST LSR.WSR
   000102 (0)000116 6002 00            162         TZE     EXIT            WSR0 -> RETURN TO MONITOR
   000103  X 000000 4706 00            163         LDP0    B$JIT$          LOAD POINTER TO JIT
   000104    0 00321 2203 00           164         LDX0    JITJJ2,,0       LOAD UP JUNK2
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    10   BMAP - B00     
   000105    000200 3002 03            165         CANX0   =O000200,DU      IS THE SKIP QEND BIT ON
   000106 (0)000112 6002 00            166         TZE     GOTO_QEND       BIT IS NOT ON
   000107    777577 3602 03            167         ANX0    =O777577,DU      TURN THE SKIPQEND BIT OFF
   000110    0 00321 7403 00           168         STX0    JITJJ2,,0       STORE JUNK 2
   000111 (0)000114 7102 00            169         TRA     SKIP_QEND
   000112                              170  GOTO_QEND NULL
   000112  X 000000 7012 00            171         TSX1    SSQ$QEND        NOT WSR0 -> CHECK FOR QUANTUM END
   000113  X 000000 7022 00            172         TSX2    SSS$PARK        PARK USER
   000114                              173  SKIP_QEND NULL
   000114  X 000000 7012 00            174         TSX1    SSC$SLAVE       RUN USER
   000115    000000 0112 00            175         NOP
                                       176  *
   000116                              177  EXIT   NULL
   000116    000000 7134 00            178         EXIT
   000117    0 000 000 01 0000
                                       179  *
   000120    000004 0 00 X 0000        180  INITAUTO PTR   TSTACKSID,4     INITIAL USER TSTACK
                                       181         INHIB   OFF
                                       182  *
                                       183  *
                                       184  *F* NAME:          UDN$MAGIC
                                       185  *   PURPOSE:       To build magic descriptors
                                       186  *   DESCRIPTION:   This routine builds descriptors providing writable
                                       187  *                  access to certain user structures.  The structures
                                       188  *                  are:
                                       189  *
                                       190  *                  - the top SS frame
                                       191  *                  - the Parameter Segment
                                       192  *                  - the Argument Segment
                                       193  *                  - the Linkage Segment
                                       194  *                  - the TCB
                                       195  *                  - the ECCB
                                       196  *
                                       197  *                  The descriptors are built as follows:
                                       198  *
                                       199  *                  - SS from current SSR
                                       200  *                  - PS from current PSR
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    11   BMAP - B00     
                                       201  *                  - AS from current ASR
                                       202  *                  - LS from SS frame
                                       203  *                  - TCB from LS (assumed to frame user LS)
                                       204  *                  - ECCB from LS (assumed to frame user LS)
                                       205  *
                                       206  *                  MACROs in B_MAGIC_C are provided for accessing
                                       207  *                  the segments and also the descriptors themselves.
                                       208  *
                                       209  *             Clobbers PR0,PR1, PR3.
                                       210  *
                                       211  *
                                       212  *
                                       213                INHIB     ON
   000121    777777777760              214  TYP0MASK      OCT       777777777760
                                       215  *
   000122                              216  UDN$MAGIC     NULL
   000122  X 000000 4716 00            217                LDP1      B$LS$            : Monitor LS pointer.
   000123    001766 4736 07            218                LDP3      ASR,DL           : Stash the
   000124    001761 4736 07            219                LDP3      TYP,DL           : current
   000125    1 00356 0537 00           220                STD3      LS.MAGAS*2,,1    : ASR as type 0.
   000126    001767 4736 07            221                LDP3      PSR,DL           : Stash the
   000127    001761 4736 07            222                LDP3      TYP,DL           : current
   000130    1 00360 0537 00           223                STD3      LS.MAGPS*2,,1    : PSR as type 0.
   000131    001764 4736 07            224                LDP3      SSR,DL           : Stash the
   000132    001761 4736 07            225                LDP3      TYP,DL           : current
   000133    1 00352 0537 00           226                STD3      LS.MAGSS*2,,1    : SSR as type 0.
   000134  X 000000 4736 00            227                LDP3      B_MPT+MPT.SS     : Point to the SS frame.
   000135    3 00014 2373 00           228  MAGSS         LDAQ      12,,3            : Pick up the LSR
   000136 (0)000121 3752 00            229                ANA       TYP0MASK         : from it, and stash it
   000137    040000 2752 07            230                ORA       =O40000,DL       : as type 0,
   000140    1 00354 7573 00           231                STAQ      LS.MAGLS*2,,1    : writable.
   000141  X 000001 4736 00            232                LDP3      B_MPT+MPT.LS     : Point to that LS.
   000142                              233  MAGLS         NULL                       :
   000142    3 00036 2373 00           234                LDAQ      UL.TCB*2,,3      : Stash that LS's TCB
   000143 (0)000121 3752 00            235                ANA       TYP0MASK         : descriptor as
   000144    040000 2752 07            236                ORA       =O40000,DL       : type 0,
   000145    1 00362 7573 00           237                STAQ      LS.MAGTCB*2,,1   : writeable.
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    12   BMAP - B00     
   000146    3 00034 2373 00           238                LDAQ      UL.ECCB*2,,3     : Stash that LS's ECCB
   000147 (0)000121 3752 00            239                ANA       TYP0MASK         : descriptor as
   000150    040000 2752 07            240                ORA       =O40000,DL       : type 0,
   000151    1 00364 7573 00           241                STAQ      LS.MAGECCB*2,,1  : writeable.
   000152    000001 7102 11            242                TRA       1,1              : Return
                                       243  *
                                       244  *F* NAME:          UDN$MAGICSS
                                       245  *   PURPOSE:       To build a magic segment using a given SSR
                                       246  *   DESCRIPTION:   Builds the LS, TCB, ECCB part of a magic segment,
                                       247  *                  assuming the magic segment already contains the
                                       248  *                  SS descriptor.  Does not disturb the AS, PS, or
                                       249  *                  SS parts.
   000153                              250  UDN$MAGICSS   NULL
   000153  X 000000 4716 00            251                LDP1      B$LS$            : Monitor LS pointer.
   000154  X 000000 4736 00            252                LDP3      B_MPT+MPT.SS     : Point to magic SS frame.
   000155 (0)000135 7102 00            253                TRA       MAGSS            : ---> go rebuild from it...
                                       254  *
                                       255  *F* NAME:          UDN$MAGICLS
                                       256  *   PURPOSE:       To build a magic segment using a given LSR
                                       257  *   DESCRIPTION:   Builds the TCB, and ECCB parts of the magic segment,
                                       258  *                  assuming the segment already contains SS, AS, PS,
                                       259  *                  and LS.  The LS descriptor is assumed to be type 1,
                                       260  *                  and is reset to type 0.
                                       261  *
   000156                              262  UDN$MAGICLS   NULL
   000156  X 000000 4716 00            263                LDP1      B$LS$            : Monitor LS pointer.
   000157 (0)000121 2362 00            264                LDQ       TYP0MASK         : Make the magic LS
   000160    1 00354 3563 00           265                ANSQ      LS.MAGLS*2,,1    : descriptor be type 0,
   000161    040000 2362 07            266                LDQ       =O40000,DL       : and
   000162    1 00354 2563 00           267                ORSQ      LS.MAGLS*2,,1    : writeable.
   000163  X 000001 4736 00            268                LDP3      B_MPT+MPT.LS     : Point to the new magic LS.
   000164 (0)000142 7102 00            269                TRA       MAGLS            : ---> go rebuild from it...
                                       270  *
                                       271  *F* NAME:          UDN$MAGICRLS
                                       272  *   PURPOSE:       To reset the LS part of a magic segment
                                       273  *   DESCRIPTION:   The segment is assumed to contain an SS descriptor.
                                       274  *                  An LSR is fetched from that SS frame, and stored
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    13   BMAP - B00     
                                       275  *                  in the LS part of the segment.  No other parts are
                                       276  *                  disturbed.
                                       277  *
   000165                              278  UDN$MAGICRLS  NULL
   000165  X 000000 4716 00            279                LDP1      B$LS$            : Monitor LS pointer.
   000166  X 000000 4736 00            280                LDP3      B_MPT+MPT.SS     : Point to magic SS frame.
   000167    3 00014 2373 00           281                LDAQ      12,,3            : Get LSR from it.
   000170 (0)000121 3752 00            282                ANA       TYP0MASK         : Stash that LSR as
   000171    040000 2752 07            283                ORA       =O40000,DL       : type 0,
   000172    1 00354 7573 00           284                STAQ      LS.MAGLS*2,,1    : writeable.
   000173    000001 7102 11            285                TRA       1,1              : Return
                                       286  *
                                       287  *F* NAME:          UDN$MAGICSS1
                                       288  *   PURPOSE:       To partially build a magic segment, & load SS,PS,AS.
                                       289  *   CALL:          CALL UDN$MAGICSS1 (PSDESC,ASDESC)
                                       290  *   DESCRIPTION:   The passed descriptors are loaded into the PSR, and
                                       291  *                  ASR respectively, and stored as type 1 in the magic
                                       292  *                  segment.  The current magic segment SS descriptor
                                       293  *                  is loaded into the SSR, and then UDN$MAGIC is
                                       294  *                  repeated, thus rebuilding the whole segment.
                                       295  *
   000174                              296  UDN$MAGICSS1  NULL
   000174  X 000000 4716 00            297                LDP1      B$LS$            : Monitor LS pointer.
   000175    0 00000 4737 00           298                LDP3      0,,0             : Stash
   000176    3 00000 2373 00           299                LDAQ      0,,3             : the passed
   000177    1 00360 7573 00           300                STAQ      LS.MAGPS*2,,1    : PSR.
   000200    0 00001 4737 00           301                LDP3      1,,0             : Stash
   000201    3 00000 2373 00           302                LDAQ      0,,3             : the passed
   000202    1 00356 7573 00           303                STAQ      LS.MAGAS*2,,1    : ASR.
   000203    000001 2362 07            304                LDQ       1,DL             : Make the magic SS descr
   000204    1 00352 2563 00           305                ORSQ      LS.MAGSS*2,,1    : be type 1.
   000205    1 00352 7737 00           306                LDSS      LS.MAGSS*2,,1    : Load it into the SSR.
   000206    1 00360 2563 00           307                ORSQ      LS.MAGPS*2,,1    : Make the magic PS desc type 1.
   000207    1 00360 7717 00           308                LDPS      LS.MAGPS*2,,1    : Load it into the live PSR.
   000210    1 00356 2563 00           309                ORSQ      LS.MAGAS*2,,1    : Do the same
   000211    1 00356 7707 00           310                LDAS      LS.MAGAS*2,,1    : with the ASR; now ready
   000212 (0)000122 7102 00            311                TRA       UDN$MAGIC        : to go to UDN$MAGIC,
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    14   BMAP - B00     
                                       312  *                                        : to finish up.
                                       313  *
                                       314  *F* NAME:          UDN$LOADSS
                                       315  *   PURPOSE:       To load the SSR from the magic segment
                                       316  *   DESCRIPTION:   The current magic segment is assumed to contain
                                       317  *                  a type 0 descriptor of the desired SS frame.
                                       318  *                  This is converted to type 1, loaded into the SSR,
                                       319  *                  and then it is converted back to type 0.
                                       320  *
   000213                              321  UDN$LOADSS    NULL
   000213  X 000000 4716 00            322                LDP1      B$LS$
   000214    000001 2362 07            323                LDQ       1,DL
   000215    1 00352 2563 00           324                ORSQ      LS.MAGSS*2,,1
   000216    1 00352 7737 00           325                LDSS      LS.MAGSS*2,,1
   000217    1 00352 6563 00           326                ERSQ      LS.MAGSS*2,,1
   000220    000001 7102 11            327                TRA       1,1
                                       328  *
                                       329  *F* NAME:          UDN$BLDASR
                                       330  *   PURPOSE:       To build & load the ASR using the current magic
                                       331  *                  segment.
                                       332  *
   000221                              333  UDN$BLDASR    NULL
   000221  X 000000 7002 00            334                TSX0      X66_AUTO_0       :
   000222    000006 000000             335                ZERO      6,0              :
                                       336  *                                        : If the PSR is nonempty,
                                       337  *                                        : then build an empty ASR
   000223    2 00004 7517 00           338                STPS      4,,AUTO          : starting at the
   000224    2 00004 2353 00           339                LDA       4,,AUTO          : end of the PSR.
   000225    000400 3152 07            340                CANA      =O400,DL         : Otherwise, build
   000226 (0)000232 6002 00            341                TZE       TESTASR          : an empty ASR starting
   000227  X 000000 2342 00            342                SZN       H_RPM_FLG
   000230 (0)000247 6012 00            343                TNZ       LDIT
   000231 (0)000242 7102 00            344                TRA       ADJDESC
   000232                              345  TESTASR       NULL
   000232    001764 4736 07            346                LDP3      SSR,DL           : at
   000233    001761 4736 07            347                LDP3      TYP,DL           : the
   000234    3 00012 2373 00           348                LDAQ      10,,3            : end of the
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    15   BMAP - B00     
   000235    2 00004 7573 00           349                STAQ      4,,AUTO          : ASR
   000236  X 000000 2342 00            350                SZN       H_RPM_FLG        : ASR
   000237 (0)000247 6012 00            351                TNZ       LDIT
   000240    000400 3152 07            352                CANA      =O400,DL         : in
   000241 (0)000247 6002 00            353                TZE       LDIT             : the
   000242    000020 7712 00            354  ADJDESC       ARL       16               : current
   000243    000001 0352 07            355                ADLA      1,DL             :
   000244    2 00005 0553 00           356                ASA       5,,AUTO          : SS
   000245    000400 2362 07            357                LDQ       =O400,DL         : frame.
   000246    2 00004 6563 00           358                ERSQ      4,,AUTO          :
   000247    2 00004 7707 00           359  LDIT          LDAS      4,,AUTO          :
   000250  X 000000 7102 00            360                TRA       X66_ARET         :
                                       361  *F* NAME:          UDN$BLDASRS
                                       362  *   PURPOSE:       To build & load the ASR using the current magic
                                       363  *                  segment for the DP8000 when executing an LTRAS
                                       364  *
   000251                              365  UDN$BLDASRS   NULL
   000251  X 000000 7002 00            366                TSX0      X66_AUTO_0       :
   000252    000006 000000             367                ZERO      6,0              :
                                       368  *                                        : If the PSR is nonempty,
                                       369  *                                        : then build an ASR with the
   000253    2 00004 7517 00           370                STPS      4,,AUTO          : current PSR.
   000254    2 00004 2353 00           371                LDA       4,,AUTO          :
   000255    000400 3152 07            372                CANA      =O400,DL         : Otherwise, build
   000256 (0)000242 6012 00            373                TNZ       ADJDESC          : the ASR from the ASR in
   000257    001764 4736 07            374                LDP3      SSR,DL           : the SSF.
   000260    001761 4736 07            375                LDP3      TYP,DL           :
   000261    3 00012 2373 00           376                LDAQ      10,,3            :
   000262    2 00004 7573 00           377                STAQ      4,,AUTO          :
   000263 (0)000247 7102 00            378                TRA       LDIT             :
                                       379  *
                                       380  *F* NAME:          UDN$MGSAVE
                                       381  *   PURPOSE:       To save the magic segment
                                       382  *   DESCRIPTION:   The current magic segment is stored in the argument.
                                       383  *                  Clobbers PR3.  Returns 1,X1
                                       384  *
   000264                              385  UDN$MGSAVE    NULL
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI                                                                    16   BMAP - B00     
   000264    0 00000 4717 00           386                LDP1      0,,0
   000265  X 000000 4736 00            387                LDP3      B$LS$
   000266    000 0 100 1007 00         388                MLR       (1),(1)
   000267    3 00352 0 0 0 0060        389                ADSC9     LS.MAGSS*2,,MAGIC.ND*8,3
   000270    1 00000 0 0 0 0060        390                ADSC9     0,,MAGIC.ND*8,1
   000271    000001 7102 11            391                TRA       1,1
                                       392  *
                                       393  *F* NAME:          UDN$MGRES
                                       394  *   PURPOSE:       To restore the magic segment
                                       395  *   DESCRIPTION:   The magic segment is restored from the argument.
                                       396  *
   000272                              397  UDN$MGRES     NULL
   000272    0 00000 4717 00           398                LDP1      0,,0
   000273  X 000000 4736 00            399                LDP3      B$LS$
   000274    000 0 100 1007 00         400                MLR       (1),(1)
   000275    1 00000 0 0 0 0060        401                ADSC9     0,,MAGIC.ND*8,1
   000276    3 00352 0 0 0 0060        402                ADSC9     LS.MAGSS*2,,MAGIC.ND*8,3
   000277    000001 7102 11            403                TRA       1,1
                                       404  *
                                       405  *F*    NAME:      UDN$JAMSS
                                       406  *F*    PURPOSE:   To restore the current SSR to the magic descriptors.
                                       407  *
   000300                              408  UDN$JAMSS NULL
   000300  X 000000 4716 00            409         LDP1    B$LS$           Monitor LSEG descriptor
   000301    001764 4736 07            410         LDP3    SSR,DL
   000302    001761 4736 07            411         LDP3    TYP,DL
   000303    1 00352 0537 00           412         STD3    LS.MAGSS*2,,1
   000304    000001 7102 11            413         TRA     1,1
                                       414                END

  CONTROL SECTION TABLE

   0 CODE   EIGHT 000305 UDN$NSA
   1 RODATA EVEN  000000 LITERALS

 06:56 07/30/97  FILE=UDN$NSA.:E05TSI         SYMBOL TABLE                                               17   BMAP - B00     
 01101000 000000000242 ADJDESC        344      *354       373
 41000000 000000001766 ASR            *48       218
 41000000 000000000002 AUTO           *52        89        90        92       135       136       140
                                      142       158       159       338       339       349       356
                                      358       359       370       371       377
 41000000 000000000001 AUTOLOC        *56        91       134
 03301001 000000000000 B$JIT$         *34       119       163
 03301004 000000000000 B$LS$          *37       217       251       263       279       297       322
                                      387       399       409
 02301002 000000000000 B$SCU$         *35
 02301003 000000000000 B$TSTACK$      *36
 03301000 000000000000 B_MPT          *33       227       232       252       268       280
 41000000 000000000007 CLNUPLOC       *57        93
 41101000 000000000076 COMAUTO        153      *157
 41000000 000000000006 CPUTYP         *58        97
 01101000 000000000044 ESSF           120      *124
 01101000 000000000116 EXIT           139       162      *177
 01101000 000000000112 GOTO_QEND      166      *170
 03201008 000000000000 HFC$BMAP_CLOCK           *29        99
 03301006 000000000000 H_RPM_FLG      *39       342       350
 01101000 000000000120 INITAUTO       140      *180
 40000000 000000001762 ISR            *47
 41000000 000000000012 JITERR         *64       121
 41000000 000000000321 JITJJ2         *65       164       168
 03201001 000000000000 JSE$ABORTX     *22       122
 03201000 000000000000 JSN$FIXSS      *21       116
 03301005 000000000000 J_ASLMXSS_D    *38       106
 01101000 000000000247 LDIT           343       351       353      *359       378
 41000000 000000000155 LS.AARDV       *69
 41000000 000000000156 LS.AARDV2      *69
 41000000 000000000033 LS.ASLLS       *69
 41000000 000000000053 LS.ASR         *69
 41000000 000000000002 LS.BUF         *69
 41000000 000000000161 LS.BUFCACH     *69
 40000000 000000000004 LS.CFU         *69
 41000000 000000000164 LS.CGCTXT      *69
 41000000 000000000163 LS.CGPT        *69
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI         SYMBOL TABLE                                               18   BMAP - B00     
 41000000 000000000075 LS.CPGT1       *69
 41000000 000000000034 LS.CPLS        *69
 41000000 000000000055 LS.CWSQ1       *69
 41000000 000000000032 LS.DBLS        *69
 41000000 000000000004 LS.DS1         *69
 41000000 000000000005 LS.DS2         *69
 41000000 000000000006 LS.DS3         *69
 41000000 000000000007 LS.DS4         *69
 41000000 000000000010 LS.DS5         *69
 41000000 000000000011 LS.DS6         *69
 41000000 000000000012 LS.DS7         *69
 41000000 000000000013 LS.DS8         *69
 40000000 000000000202 LS.DVT         *69
 41000000 000000000016 LS.ECCB        *69
 41000000 000000000157 LS.FIRM        *69
 40000000 000000000155 LS.FLT         *69
 41000000 000000000045 LS.HJITU       *69
 41000000 000000000162 LS.IMX         *69
 41000000 000000000122 LS.IOEND       *69
 41000000 000000000176 LS.IPHY_MAP    *69
 41000000 000000000000 LS.IS          *69
 41000000 000000000050 LS.ISB         *69
 41000000 000000000115 LS.JITPG       *69
 41000000 000000000001 LS.JITU        *69
 40000000 000000000013 LS.LDCT        *69
 41000000 000000000134 LS.LDCTNC      *69
 41000000 000000000121 LS.LOWMEM      *69
 41000000 000000000167 LS.MAGAS       *69        88       220       303       309       310
 41000000 000000000172 LS.MAGECCB     *69       241
 41000000 000000000166 LS.MAGLS       *69       231       265       267       284
 41000000 000000000170 LS.MAGPS       *69       223       300       307       308
 41000000 000000000165 LS.MAGSS       *69        87       105       226       305       306       324
                                      325       326       389       402       412
 41000000 000000000171 LS.MAGTCB      *69       237
 41000000 000000000043 LS.MHJIT       *69
 41000000 000000000177 LS.MINIQ_ENT   *69
 41000000 000000000054 LS.MISC        *69
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI         SYMBOL TABLE                                               19   BMAP - B00     
 41000000 000000000130 LS.MISC2       *69
 41000000 000000000042 LS.MJIT        *69
 41000000 000000000035 LS.MLS         *69
 41000000 000000000132 LS.MLS1        *69
 41000000 000000000173 LS.MLSREAD     *69
 40000000 000000000156 LS.MONRL       *69
 41000000 000000000044 LS.MONSSS      *69
 41000000 000000000120 LS.MOUSE       *69
 41000000 000000000037 LS.MPT         *69
 41000000 000000000145 LS.MSTRHJ      *69
 41000000 000000000135 LS.MSTRPT      *69
 41000000 000000000041 LS.MTSTACK     *69
 41000000 000000000014 LS.NULL        *69
 41000000 000000000027 LS.PMME        *69
 41000000 000000000116 LS.PPUT        *69
 41000000 000000000131 LS.RCVENT      *69
 41000000 000000000127 LS.RCVRTN      *69
 41000000 000000000021 LS.REAL        *69
 41000000 000000000030 LS.REG         *69
 41000000 000000000124 LS.RONC        *69
 41000000 000000000003 LS.ROSEG       *69
 41000000 000000000125 LS.ROSEG8      *69
 41000000 000000000046 LS.SBUF1       *69
 41000000 000000000047 LS.SBUF2       *69
 41000000 000000000025 LS.SCR         *69
 41000000 000000000051 LS.SCU         *69
 41000000 000000000174 LS.SEGTBL      *69
 41000000 000000000146 LS.SLV1HJ      *69
 41000000 000000000136 LS.SLV1PT      *69
 41000000 000000000147 LS.SLV2HJ      *69
 41000000 000000000137 LS.SLV2PT      *69
 41000000 000000000150 LS.SLV3HJ      *69
 41000000 000000000140 LS.SLV3PT      *69
 41000000 000000000151 LS.SLV4HJ      *69
 41000000 000000000141 LS.SLV4PT      *69
 41000000 000000000152 LS.SLV5HJ      *69
 41000000 000000000142 LS.SLV5PT      *69
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI         SYMBOL TABLE                                               20   BMAP - B00     
 41000000 000000000153 LS.SLV6HJ      *69
 41000000 000000000143 LS.SLV6PT      *69
 41000000 000000000154 LS.SLV7HJ      *69
 41000000 000000000144 LS.SLV7PT      *69
 41000000 000000000017 LS.TCB         *69
 41000000 000000000123 LS.TIGR        *69
 41000000 000000000020 LS.TSTACK      *69
 41000000 000000000031 LS.ULS         *69
 41000000 000000000036 LS.UPT         *69
 41000000 000000000023 LS.USDS0       *69
 41000000 000000000024 LS.USDS1       *69
 41000000 000000000040 LS.USRIS       *69
 41000000 000000000022 LS.USSS        *69
 41000000 000000000117 LS.VPT         *69
 41000000 000000000052 LS.WINDOW      *69
 41000000 000000000133 LS.WS3MLS      *69
 41000000 000000000160 LS.WS3MLSNW    *69
 41000000 000000000175 LS.WSQ0PT      *69
 41000000 000000000026 LS.XD          *69
 41000000 000000000126 LS.XDRTN       *69
 41000000 000000000201 LS.XLALT       *69
 41000000 000000000015 LS.XLAT        *69
 41000000 000000000200 LS.XLNORM      *69
 41000000 000000000014 LSR            *61       137       160
 03601000 000000000000 LSSID          *43        86
 41000000 000000000006 MAGIC.ND       *70       389       390       401       402
 01101000 000000000142 MAGLS         *233       269
 01101000 000000000135 MAGSS         *228       253
 41000000 000000000002 MPT.AS         *70
 41000000 000000000010 MPT.ASDESC     *70
 41000000 000000000005 MPT.ECCB       *70
 40000000 000000000013 MPT.ECCBDESC   *70
 41000000 000000000001 MPT.LS         *70       232       268
 41000000 000000000007 MPT.LSDESC     *70
 41000000 000000000003 MPT.PS         *70
 41000000 000000000011 MPT.PSDESC     *70
 41000000 000000000000 MPT.SS         *70       227       252       280
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI         SYMBOL TABLE                                               21   BMAP - B00     
 41000000 000000000006 MPT.SSDESC     *70
 41000000 000000000004 MPT.TCB        *70
 41000000 000000000012 MPT.TCBDESC    *70
 41000000 000000000001 PMMELOC        *55        85       152
 41000000 000000001767 PSR            *49       221
 03601002 000000000000 SCUSID         *45        98
 01101000 000000000114 SKIP_QEND      169      *173
 41000000 000000000006 SS             *53        83        84        85        87        91        93
                                       94        97       100       132       133       134       137
                                      150       151       152       155       160
 03201006 000000000000 SSC$SLAVE      *27       174
 03201007 000000000000 SSQ$QEND       *28       171
 41000000 000000001764 SSR            *50        83       132       150       224       346       374
                                      410
 03201004 000000000000 SSS$CHKSS      *25       143
 03201005 000000000000 SSS$PARK       *26       172
 01101000 000000000034 STKFULL        107      *112
 03301008 000000000000 S_INCTIME      *41       102
 03301007 000000000000 S_ITIME        *40       101       103       104
 01101000 000000000232 TESTASR        341      *345
 03601001 000000000000 TSTACKSID      *44        89       180
 41000000 000000000076 TSTAMP         *62       100
 01101000 000000000033 TUDA$PMMENT     96      *110
 01101000 000000000032 TUDA$UPMMENT  *108       114
 41000000 000000001761 TYP            *51        84       133       151       219       222       225
                                      347       375       411
 01101000 000000000121 TYP0MASK      *214       229       235       239       264       282
 03201002 000000000000 UDA$PMMENT     *23       111
 12101000 000000000000 UDA$SSPATCH      8       *80
 03201003 000000000000 UDA$UPMMENT    *24       109
 00101000 000000000036 UDABORT       *115
 12101000 000000000045 UDB$AUTO         9      *130
 52101000 000000000070 UDB$AUTOQ      147      *149
 12101000 000000000221 UDN$BLDASR      18      *333
 12101000 000000000251 UDN$BLDASRS     19      *365
 12101000 000000000300 UDN$JAMSS       20      *408
 12101000 000000000213 UDN$LOADSS      17      *321
 06:56 07/30/97  FILE=UDN$NSA.:E05TSI         SYMBOL TABLE                                               22   BMAP - B00     
 13101000 000000000122 UDN$MAGIC       10      *216       311
 12101000 000000000156 UDN$MAGICLS     14      *262
 12101000 000000000165 UDN$MAGICRLS    15      *278
 12101000 000000000153 UDN$MAGICSS     13      *250
 12101000 000000000174 UDN$MAGICSS1    16      *296
 12101000 000000000272 UDN$MGRES       12      *397
 12101000 000000000264 UDN$MGSAVE      11      *385
 12101000 000000000000 UDN$NSA          7       *76
 41000000 000000000002 UL.BUF         *71
 41000000 000000000004 UL.DS1         *71
 41000000 000000000016 UL.ECCB        *71       238
 41000000 000000000000 UL.IS          *71
 41000000 000000000015 UL.IS2         *71
 41000000 000000000001 UL.JIT         *71
 41000000 000000000014 UL.NULL        *71
 41000000 000000000003 UL.ROSEG       *71
 41000000 000000000017 UL.TCB         *71       234
 03201011 000000000000 X66_ARET       *32       360
 03201010 000000000000 X66_AUTO_0     *31       334       366
 02201009 000000000000 X66_AUTO_2     *30

     197 SYMBOLS

 06:56 07/30/97  FILE=UDN$NSA.:E05TSI         MACRO TABLE                                                23   BMAP - B00     
 MAGIC           70
 MONLS           69
 USRLS           71

      16 MACROS

    SYMBOL SPACE USED  2333 WORDS
     MACRO SPACE USED  3324 WORDS
   INPUT RECORDS READ  1283
 STATEMENTS PROCESSED   603
         ELAPSED TIME  0:09.24
             CPU TIME     4.85 SEC.
        ASSEMBLY RATE  7460 STATEMENTS/CPU MIN.

      NO ERRORS

