VERSION E05

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:1    
        1        1        /*M* KQM$MM Memory management routines for COMGROUP QUEUE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQM$MM
       10       10             PURPOSE:      To provide memory management for comgroups
       11       11              DESCRIPTION: This module contains two compile units.
       12       12
       13       13                           The first is concerned with memory management
       14       14                           that is in some sense global to all comgroups.
       15       15                           Specifically, allocation and deallocation of
       16       16                           comgroup context & descriptor segment blocks.
       17       17                           Comgroup context blocks for different comgroups
       18       18                           lie side by side in the same pages.  These
       19       19                           routines manage those pages, as well as the
       20       20                           chain of context blocks for active comgroups.
       21       21
       22       22                           The second is concerned with allocation and
       23       23                           release of memory on behalf of a particular
       24       24                           comgroup.  The data blocks for a given comgroup
       25       25                           lie in pages wholly owned by that comgroup,
       26       26                           and are chained together, with the chain heads
       27       27                           living in the comgroup context block.
       28       28        */
       29       29        /**/
       30       30        KQM$INIT: PROC (KQ$CG,MEM$) ALTRET;
       31       31        /**/
       32       32
       33       33
       34       34
       35       35        /**/
       36       36        /* INCLUDES */
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:2    
       37       37        /**/
       38       38        %INCLUDE KQ_SUBS_C;
       39      338        %INCLUDE KQ_MAC_C;
       40     2888        %INCLUDE HF_LOCK_C;
       41     2902        %INCLUDE KQM_MAC_C;
       42     3275        %INCLUDE KQ_ERRORS_C;
       43     3323        %INCLUDE KQ_DATA_R;
       44     4155        %INCLUDE B$JIT_C;
       45     4469        %INCLUDE UD_SEV_C;
       46     4483        %INCLUDE KC$CP6V_C;
       47     4603        %INCLUDE B_LSDATA_C;
       48     7809        %INCLUDE M_INFO_C;
       49     7949        %INCLUDE KC_CP6;
       50     8509        %INCLUDE B_STRINGS_C;
       51     8638        %INCLUDE F$DCB;
       52     8687        %INCLUDE FM$CFU;
       53     8732        %INCLUDE FM$FIT;
       54     8953        %INCLUDE FM$GRAN;
       55     9022        %INCLUDE SS_SCHED_C;
       56     9255
       57     9256
       58     9257
       59     9258        /**/
       60     9259        /* MACROS */
       61     9260        /**/
       62     9261        %MACRO $ERROR (NAME=GORGO,CODE=0,SEV=SEV_ERROR#);
       63     9262        DCL 1 NAME CONSTANT ALIGNED,
       64     9263              2 * BIT(18) UNAL INIT('132115'O),
       65     9264              2 * UBIN(15) UNAL INIT(CODE),
       66     9265              2 * UBIN(3) UNAL INIT(SEV);
       67     9266        %MEND;
       68     9267
       69     9268
       70     9269
       71     9270        /**/
       72     9271        /* PARAMETERS */
       73     9272        /**/
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:3    
       74     9273        %KQ_CG (FPTN=KQ$CG,STCLASS="");
       75    10012    1   DCL MEM$ PTR;
       76    10013    1   DCL NEWLIM REDEF MEM$ UBIN;
       77    10014
       78    10015
       79    10016
       80    10017        /**/
       81    10018        /* BASED STRUCTURES */
       82    10019        /**/
       83    10020    1   DCL 1 B$$ASR BASED DALIGNED,
       84    10021    1         2 BOUND UBIN(20) UNAL,
       85    10022    1         2 FLG BIT(9) UNAL,
       86    10023    1         2 W UBIN(3) UNAL,
       87    10024    1         2 T UBIN(4) UNAL,
       88    10025    1         2 BASE UBIN(36) UNAL;
       89    10026        %KQ_FB (FPTN=KQ$FB,STCLASS=BASED);
       90    10048        %KQ_DSB  (FPTN=KQ$DSB ,STCLASS=BASED);
       91    10091        %KQ_BAP  (FPTN=KQ$BAP ,STCLASS=BASED);
       92    10180        %KQ_ACB  (FPTN=KQ$ACB ,STCLASS=BASED);
       93    10210        %KQ_CG   (FPTN=K$CG   ,STCLASS=BASED);
       94    10949        %KQ_MMSD (FPTN=KQ$MMSD,STCLASS="BASED(KQ_MMSD$)");
       95    10986    1   DCL 1 B$$PAGE BASED ALIGNED,
       96    10987    1         2 * CHAR(4096) UNAL;
       97    10988    1   DCL B$$PTR PTR BASED ALIGNED;
       98    10989    1   DCL 1 B$$PTRR BASED ALIGNED,
       99    10990    1         2 COFF UBIN(20) UNAL,
      100    10991    1         2 * UBIN(16) UNAL;
      101    10992        %B$JIT0;
      102    11081        %U$JIT1X;
      103    11084        %M$JIT2X;
      104    11087        %F$JIT3;
      105    11092        %A$JIT6X;
      106    11095        %FM$CFU;
      107    11101        %FM$CFUA;
      108    11107        %FM$GRAN;
      109    11111        %CODE14;
      110    11121
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:4    
      111    11122
      112    11123
      113    11124        /**/
      114    11125        /* AUTO */
      115    11126        /**/
      116    11127    1   DCL PAGE$ PTR;
      117    11128    1   DCL I UBIN;
      118    11129    1   DCL J UBIN;
      119    11130    1   DCL HKP UBIN;
      120    11131    1   DCL CAP$ PTR;
      121    11132    1   DCL 1 CAP$R REDEF CAP$,
      122    11133    1         2 PG# UBIN(8) UNAL,
      123    11134    1         2 OTHER UBIN(16) UNAL,
      124    11135    1         2 SEGID UBIN(12) UNAL;
      125    11136    1   DCL P$ PTR;
      126    11137    1   DCL BLK$ PTR;
      127    11138    1   DCL ACB$ PTR;
      128    11139    1   DCL CG$ PTR;
      129    11140    1   DCL DSB$ PTR;
      130    11141    1   DCL ERRCODE UBIN;
      131    11142    1   DCL MMQERR REDEF ERRCODE UBIN;
      132    11143
      133    11144
      134    11145
      135    11146        /**/
      136    11147        /* CONSTANT */
      137    11148        /**/
      138    11149        %$ERROR (NAME=E_CGCXT,CODE=%E$CGCXT);
      139    11155        %KQ_ACB (FPTN=ACB_INIT,STCLASS=CONSTANT);
      140    11185
      141    11186
      142    11187
      143    11188        /**/
      144    11189        /* REFS */
      145    11190        /**/
      146    11191    1   DCL FMD$REDBUFBC  ENTRY(6) ALTRET;
      147    11192    1   DCL FMD$RELBUF    ENTRY(1);
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:5    
      148    11193    1   DCL FMO$LOCCODP   ENTRY(2) ALTRET;
      149    11194    1   DCL HFC$CACHECLR  ENTRY;
      150    11195    1   DCL KQM$GETB      ENTRY(3) ALTRET;
      151    11196    1   DCL KQM$GETDFR    ENTRY(3) ALTRET;
      152    11197    1   DCL KQM$GETMIN    ENTRY(3) ALTRET;
      153    11198    1   DCL KQM$RELB      ENTRY(3) ALTRET;
      154    11199    1   DCL KQX$LDASR     ENTRY(1) ALTRET;
      155    11200    1   DCL MMQ$GCCP      ENTRY(3) ALTRET;
      156    11201    1   DCL MMQ$GCAP      ENTRY(3) ALTRET;
      157    11202    1   DCL MMQ$TRUNCDSB  ENTRY(3) ALTRET;
      158    11203    1   DCL MMQ$TRUNCDSBL ENTRY(3) ALTRET;
      159    11204    1   DCL MMQ$ZAPCPUS   ENTRY    ALTRET;
      160    11205    1   DCL SSR$REG       ENTRY(3) ALTRET;
      161    11206    1   DCL SC_BCGMMQ     ENTRY    CONV(2,0);
      162    11207
      163    11208    1   DCL B$JIT$ PTR SYMREF;
      164    11209    1   DCL F$CFU$ PTR SYMREF READONLY;
      165    11210    1   DCL KQ_MMSD$ PTR SYMREF READONLY;
      166    11211        %KQ_DSB (FPTN=KQ_IDSB,STCLASS=SYMREF);
      167    11254        %KQ_BAP (FPTN=KQ_IBAP,STCLASS=SYMREF);
      168    11343        %KQ_CG (FPTN=KQ_ICG,STCLASS=SYMREF);
      169    12082        %EJECT;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:6    
      170    12083        /*F* NAME:         KQM$INIT
      171    12084             PURPOSE:      To initialize a COMGROUP's context
      172    12085             DESCRIPTION:  This routine allocates space for a CG context
      173    12086                           block and then moves the passed context block
      174    12087                           into it, returning MEM$ pointing to the allocated
      175    12088                           block.  Next, it allocates/finds the appropriate
      176    12089                           account block, and increments its use count,
      177    12090                           setting KQ$CG.ACB$ to point to the account
      178    12091                           block.  Next, it allocates a descriptor segment
      179    12092                           for the CG and initializes it to empty, planting
      180    12093                           the DSB pointer in the CG context block, and then
      181    12094                           loads the descriptor register to frame the (empty)
      182    12095                           data space descriptor segment.  Then it
      183    12096                           placed the context block on the linear list of
      184    12097                           all comgroup context blocks.  Finally, it
      185    12098                           returns.  If either of the above cannot be obtained,
      186    12099                           it ALTRETs with the appropriate error code in
      187    12100                           B$JIT.ERR, and nothing allocated.
      188    12101
      189    12102        KQM$INIT: ENTRY (KQ$CG,MEM$) ALTRET;    */
      190    12103
      191    12104    1         CALL GETCXT ALTRET(NOCXT);
      192    12105    1         CG$->K$CG=KQ$CG;
      193    12106    1         CALL FINDACB ALTRET(NOCXT1);
      194    12107    1         CALL GETDSB ALTRET(NOCXT0);
      195    12108    1         CG$->K$CG.MMD.DSB$=DSB$;
      196    12109                                /* INITIALIZE THE DSB & LOAD ASR */
      197    12110    1         DSB$->KQ$DSB=KQ_IDSB;
      198    12111    1         ADDR(DSB$->KQ$DSB.ASR)->B$$ASR.BOUND=SIZEC(KQ$DSB.DESC)-1;
      199    12112    1         P$=ADDR(DSB$->KQ$DSB.DESC);
      200    12113    1         ADDR(DSB$->KQ$DSB.ASR)->B$$ASR.BASE=ADDR(P$)->B$$PTRR.COFF;
      201    12114    1         CALL KQX$LDASR (CG$->K$CG);
      202    12115    1         CALL ADDCG;
      203    12116    1         MEM$=CG$;
      204    12117    1         RETURN;
      205    12118    1   NOCXT0:;
      206    12119    1         CALL DECRACB;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:7    
      207    12120    1   NOCXT1:;
      208    12121    1         CALL RELCXT;
      209    12122    1   NOCXT:;
      210    12123    1         B$JIT.ERR=E_CGCXT;
      211    12124    1         IF ERRCODE ~= %E$CGMPLC THEN
      212    12125    1          B$JIT.ERR.CODE=ERRCODE;
      213    12126        /*E* ERROR:        KQM-E$CGCXT-E
      214    12127             MESSAGE:      Unable to allocate context for your COMGROUP
      215    12128             MESSAGE1:     No memory was available for the initial context
      216    12129                           of your COMGROUP, therefore it cannot be opened. */
      217    12130    1   ALTRT:;
      218    12131    1         ALTRETURN;
      219    12132        /*F* NAME:         KQM$SHUTDOWN
      220    12133             PURPOSE:      To release a CG's context
      221    12134             DESCRIPTION:  The context and descriptor segment blocks are
      222    12135                           released.
      223    12136
      224    12137                           All the CG's pages must have been released before
      225    12138                           calling here.
      226    12139        */
      227    12140    1   KQM$SHUTDOWN: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */
      228    12141
      229    12142    1         IF KQ$CG.MMD.DSB$ ~= ADDR(NIL) THEN
      230    12143    2           DO;
      231    12144    2           DSB$=KQ$CG.MMD.DSB$;
      232    12145    2           KQ$CG.MMD.DSB$=ADDR(NIL);
      233    12146    2           CALL RELDSB;
      234    12147    2           END;
      235    12148        /**/
      236    12149    1         CG$=ADDR(KQ$CG);
      237    12150    1         CALL DECRACB;
      238    12151    1         CALL REMCG;
      239    12152    1         CALL RELCXT;
      240    12153    1         RETURN;
      241    12154        %EJECT;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:8    
      242    12155        /**/
      243    12156        /*F* NAME:         KQM$USECACHE
      244    12157             PURPOSE:      To turn on use-cache bits in all comgroup
      245    12158                           descriptors
      246    12159             DESCRIPTION:  Called when going from multi- to mono-processing.
      247    12160        */
      248    12161    1   KQM$USECACHE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
      249    12162        /**/
      250    12163    1         J=1;
      251    12164    1         GOTO CACHE;
      252    12165        /**/
      253    12166        /*F* NAME:         KQM$BYPASSCACHE
      254    12167             PURPOSE:      To turn off use-cache bits in all comgroup
      255    12168                           descriptors
      256    12169             DESCRIPTION:  Called when going from mono- to multi-processing.
      257    12170        */
      258    12171    1   KQM$BYPASSCACHE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
      259    12172        /**/
      260    12173    1         J=0;
      261    12174    1   CACHE:;
      262    12175    1         CG$=KQ$MMSD.CGHEAD$;
      263    12176    2           DO WHILE (CG$ ~= ADDR(NIL));
      264    12177    2           DSB$=CG$->K$CG.MMD.DSB$;
      265    12178    2           IF DSB$ ~= ADDR(NIL) THEN
      266    12179    3             DO;
      267    12180    4               DO I = 0 TO KQM_MDPC#;
      268    12181    4               IF J = 0 THEN
      269    12182    4                DSB$->KQ$DSB.DESC.FLG(I)=DSB$->KQ$DSB.DESC.FLG(I)&(~%DSCACHE);
      270    12183    4               ELSE DSB$->KQ$DSB.DESC.FLG(I)=DSB$->KQ$DSB.DESC.FLG(I)|%DSCACHE;
      271    12184    4               END;
      272    12185    3             END;
      273    12186    2           CG$=CG$->K$CG.LNK$;
      274    12187    2           END;
      275    12188    1         RETURN;
      276    12189        /**/
      277    12190        /*F* NAME:         KQM$UPDA
      278    12191             PURPOSE:      To update an account's memory limits
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:9    
      279    12192             CALL:         KQM$UPDA (,CURPGLIM)
      280    12193             INPUT:        B$JIT.DCB$->F$DCB with ACCT & SETX
      281    12194                           User is REGable
      282    12195             DESCRIPTION:  Finds the ACB.  If none, exit.  Else if it's
      283    12196                           being inited, REG & try again.  Then stuff the
      284    12197                           new value in.
      285    12198        */
      286    12199    1   KQM$UPDA: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
      287    12200        /**/
      288    12201    1         CALL LOCACB ALTRET(NOUPDA);
      289    12202    1         ACB$->KQ$ACB.CURPGLIM=NEWLIM;
      290    12203    1   NOUPDA:;
      291    12204              %UNLOCK (G=KQ_CGLGATE);
      292    12207    1         RETURN;
      293    12208        /**/
      294    12209        /*F* NAME:         KQM$TRUNCDSBS
      295    12210             PURPOSE:      To help trunc all open comgroups of their
      296    12211                           page table chunks
      297    12212             INPUT:        MM gate locked
      298    12213             DESCRIPTION:  Calls MMQ$TRUNCDSB for each open comgroup
      299    12214        */
      300    12215    1   KQM$TRUNCDSBS: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
      301    12216        /**/
      302    12217    1         CG$=KQ$MMSD.CGHEAD$;
      303    12218    2           DO WHILE (CG$ ~= ADDR(NIL));
      304    12219    2           IF CG$->K$CG.CLOCK THEN
      305    12220    2            CALL MMQ$TRUNCDSB (,CG$->K$CG.MMD.DSB$->KQ$DSB,MMQERR);
      306    12221    2           CG$=CG$->K$CG.LNK$;
      307    12222    2           END;
      308    12223    1         RETURN;
      309    12224        %EJECT;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:10   
      310    12225        /**/
      311    12226        /*********************************************************************************
      312    12227        *                                                                                *
      313    12228        *   SSS   U   U  BBBB   RRRR    OOO   U   U  TTTTT   III   N   N  EEEEE   SSS    *
      314    12229        *  S   S  U   U  B   B  R   R  O O O  U   U    T      I    N   N  E      S   S   *
      315    12230        *  S      U   U  B   B  R   R  O O O  U   U    T      I    NN  N  E      S       *
      316    12231        *   SSS   U   U  BBBB   RRRR   O  OO  U   U    T      I    N N N  EEEE    SSS    *
      317    12232        *      S  U   U  B   B  R R    O   O  U   U    T      I    N  NN  E          S   *
      318    12233        *  S   S  U   U  B   B  R  R   O   O  U   U    T      I    N   N  E      S   S   *
      319    12234        *   SSS    UUU   BBBB   R   R   OOO    UUU     T     III   N   N  EEEEE   SSS    *
      320    12235        *                                                                                *
      321    12236        *********************************************************************************/
      322    12237
      323    12238        /****************************************************************
      324    12239        *****************************************************************/
      325    12240        /*D* NAME:         ADDCG
      326    12241             PURPOSE:      To add a comgroup to the system list
      327    12242             DESCRIPTION:  The CG context block pointed to by CG$ is
      328    12243                           added to the list of active CGs. */
      329    12244    1   ADDCG: PROC ALTRET;
      330    12245              %LOCK (G=KQ_CGLGATE);
      331    12248    2         CG$->K$CG.LNK$=KQ$MMSD.CGHEAD$;
      332    12249    2         KQ$MMSD.CGHEAD$=CG$;
      333    12250    2   DUN:  ;
      334    12251              %UNLOCK (G=KQ_CGLGATE);
      335    12254    2         RETURN;
      336    12255        /****************************************************************
      337    12256        *****************************************************************/
      338    12257        /*D* NAME:         REMCG
      339    12258             PURPOSE:      To remove a comgroup from the system list
      340    12259             DESCRIPTION:  The comgroup context block pointed to by CG$
      341    12260                           is removed from the list of active CGs.
      342    12261                           ALTRET if not found in the list. */
      343    12262    2   REMCG: ENTRY ALTRET;
      344    12263              %LOCK (G=KQ_CGLGATE);
      345    12266    2         P$=KQ$MMSD.CGHEAD$;
      346    12267    2         IF P$ = CG$ THEN
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:11   
      347    12268    3           DO;
      348    12269    3           KQ$MMSD.CGHEAD$=CG$->K$CG.LNK$;
      349    12270    3           GOTO DUN;
      350    12271    3           END;
      351    12272    2         ELSE
      352    12273    3           DO WHILE (P$ ~= ADDR(NIL));
      353    12274    3           IF P$->K$CG.LNK$ = CG$ THEN
      354    12275    4             DO;
      355    12276    4             P$->K$CG.LNK$=CG$->K$CG.LNK$;
      356    12277    4             GOTO DUN;
      357    12278    4             END;
      358    12279    3           P$=P$->K$CG.LNK$;
      359    12280    3           END;
      360    12281              %UNLOCK (G=KQ_CGLGATE);
      361    12284    2         ALTRETURN;
      362    12285    2   END ADDCG;
      363    12286        /****************************************************************
      364    12287        *****************************************************************/
      365    12288        /*D* NAME:         GETCXT
      366    12289             PURPOSE:      To allocate a CG context block
      367    12290             DESCRIPTION:  CG context blocks live on pages mapped thru the
      368    12291                           first section of the CG page table.  The first
      369    12292                           such page to be allocated gets a context block
      370    12293                           stuck into it.  This context block is pointed
      371    12294                           to by KQ$MMSD.CCXT$, and its block allocation
      372    12295                           page (its initial one), is the page in which
      373    12296                           it lives.  This context block is used for block
      374    12297                           allocation from the context block area, nescessary
      375    12298                           for allocation of comgroup-related stuff which
      376    12299                           needs to be always visible.  The comgroup block-
      377    12300                           allocation routines (KQM$GET?, KQM$REL?) check
      378    12301                           for context block address = KQ$MMSD.CCXT$, and get
      379    12302                           or release the appropriate type of page if so.
      380    12303
      381    12304                           A similar scheme is used for DSB allocation, even
      382    12305                           though it is not strictly nescessary, for unlike
      383    12306                           the context block pages, DSB pages (which are
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:12   
      384    12307                           houskeeping) only have blocks of one size (the
      385    12308                           size of a DSB) allocated from them.
      386    12309
      387    12310                           If can't get space, ALTRETs with ERRCODE set.
      388    12311        */
      389    12312    1   GETCXT: PROC ALTRET;
      390    12313    2         HKP=0;
      391    12314    2         CALL GET ALTRET(ALTRT);
      392    12315    2         CG$=BLK$;
      393    12316    2         RETURN;
      394    12317        /*D* NAME:         GETDSB
      395    12318             PURPOSE:      To allocate a CG descriptor segment block
      396    12319             DESCRIPTION:  CG descriptor segment blocks live on housekeeping
      397    12320                           pages allocated for that purpose alone.  Allocation
      398    12321                           is handled like GETCXT. */
      399    12322    2   GETDSB: ENTRY ALTRET;
      400    12323    2         HKP=1;
      401    12324    2         CALL GET ALTRET(ALTRT);
      402    12325    2         DSB$=BLK$;
      403    12326    2         RETURN;
      404    12327    2   ALTRT:;
      405    12328    2         ALTRETURN;
      406    12329    2   GET:  PROC ALTRET;
      407    12330              %LOCK (G=KQ$MMSD.GATE);
      408    12333    3         IF HKP = 0 THEN
      409    12334    4           DO;
      410    12335    4           IF KQ$MMSD.CCXT$ = ADDR(NIL) THEN
      411    12336    5             DO;
      412    12337    5             CALL MMQ$GCCP (CAP$,,J) ALTRET(ALTRT);
      413    12338    5             CALL INITPG;
      414    12339    5             KQ$MMSD.CCXT$=P$;
      415    12340    5             END;
      416    12341    4           END;
      417    12342    3         ELSE IF KQ$MMSD.DCXT$ = ADDR(NIL) THEN
      418    12343    4            DO;
      419    12344    4            CALL MMQ$GCAP (CAP$,,J) ALTRET(ALTRT);
      420    12345    4            CALL INITPG;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:13   
      421    12346    4            KQ$MMSD.DCXT$=P$;
      422    12347    4            END;
      423    12348    3         IF HKP = 0 THEN
      424    12349    4           DO;
      425    12350    4           J=SIZEW(K$CG);
      426    12351    4           CALL KQM$GETB (KQ$MMSD.CCXT$->K$CG,BLK$,J) ALTRET(ALTRT);
      427    12352    4           END;
      428    12353    3         ELSE
      429    12354    4           DO;
      430    12355    4           J=SIZEW(KQ$DSB);
      431    12356    4           CALL KQM$GETB (KQ$MMSD.DCXT$->K$CG,BLK$,J) ALTRET(NOGOT);
      432    12357    4           GOTO GOTIT;
      433    12358    4   NOGOT:  ;
      434    12359    4           CALL DIGEMUP;
      435    12360    4           CALL KQM$GETB (KQ$MMSD.DCXT$->K$CG,BLK$,J) ALTRET(ALTRT);
      436    12361    4   GOTIT:  ;
      437    12362    4           END;
      438    12363              %UNLOCK (G=KQ$MMSD.GATE);
      439    12366    3         RETURN;
      440    12367    3   ALTRT:;
      441    12368    3         ERRCODE=J;
      442    12369              %UNLOCK (G=KQ$MMSD.GATE);
      443    12372    3         ALTRETURN;
      444    12373    3   INITPG: PROC;
      445    12374                      /*  Init the page obtained by sticking a context block
      446    12375                          in it, and making it look like a block-allocation
      447    12376                          page for that 'comgroup' */
      448    12377
      449    12378                      /*  Return P$ = ADDR(CONTEXT BLOCK) */
      450    12379
      451    12380    4         CAP$->B$$PAGE='0'B;
      452    12381    4         CAP$->KQ$BAP=KQ_IBAP;
      453    12382    4         CAP$->KQ$BAP.FREESIZE=1024-SIZEW(KQ$BAP)-SIZEW(K$CG);
      454    12383    4         P$=PINCRW(CAP$,SIZEW(KQ$BAP));
      455    12384    4         BLK$=PINCRW(P$,SIZEW(K$CG));
      456    12385    4         P$->K$CG=KQ_ICG;
      457    12386    4         P$->K$CG.MMD.CURPG=1;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:14   
      458    12387    4         P$->K$CG.AUCTL.MINPG=1;
      459    12388    4         P$->K$CG.AUCTL.MAXPG=1000;
      460    12389    4         P$->K$CG.MMD.MINBPG=1;
      461    12390    4         P$->K$CG.MMD.MAXBPG=1000;
      462    12391    4         P$->K$CG.MMD.HEAD$=CAP$;
      463    12392    4         BLK$->KQ$FB.FLNK$=ADDR(NIL);
      464    12393    4         BLK$->KQ$FB.BLNK$=ADDR(NIL);
      465    12394    4         BLK$->KQ$FB.SIZE=CAP$->KQ$BAP.FREESIZE;
      466    12395    4         CAP$->KQ$BAP.CG$=P$;
      467    12396    4         CAP$->KQ$BAP.JUHEAD$=BLK$;
      468    12397    4         CAP$->KQ$BAP.JUTAIL$=BLK$;
      469    12398    4         CAP$->KQ$BAP.HDR.SELF$=CAP$;
      470    12399    4         RETURN;
      471    12400    4   END INITPG;
      472    12401    3   END GET;
      473    12402    2   END GETCXT;
      474    12403        /****************************************************************
      475    12404        *****************************************************************/
      476    12405        /*D* NAME:         RELCXT
      477    12406             PURPOSE:      To release a CG context block
      478    12407             DESCRIPTION:  The block is released into the fake 'comgroup'
      479    12408                           pointed to by KQ$MMSD.CCXT$
      480    12409        */
      481    12410    1   RELCXT: PROC;
      482    12411    2         CALL KQM$RELB (KQ$MMSD.CCXT$->K$CG,CG$,SIZEW(K$CG));
      483    12412    2         RETURN;
      484    12413    2   END RELCXT;
      485    12414        /****************************************************************
      486    12415        *****************************************************************/
      487    12416        /*D* NAME:         RELDSB
      488    12417             PURPOSE:      To release a CG descriptor segment block
      489    12418             DESCRIPTION:  Since we cache the comgroup's descriptor
      490    12419                           segment even when running slave CPUs,
      491    12420                           we cannot simply release the DSB.  If
      492    12421                           we did, then it might be immediately
      493    12422                           acquired by some other new comgroup and
      494    12423                           used.  This would be terrible if some
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:15   
      495    12424                           other CPU was looking at the comgroup
      496    12425                           we're now shutting down, and then went
      497    12426                           on to look at the new one, because he
      498    12427                           would have the wrong descriptors in
      499    12428                           his cache (KCC$CLOCK is an example of
      500    12429                           a guy who might get drilled this way).
      501    12430
      502    12431                           The solution is to 'hide' the DSB instead
      503    12432                           of releasing it.  When the number of
      504    12433                           hidden ones gets too big to put up with
      505    12434                           (i.e. we're wasting a lot of memory on
      506    12435                           them), or when someone tries to get a
      507    12436                           DSB and cannot, we bring them out of
      508    12437                           hiding.  In order to do this, we must
      509    12438                           clear the cache of every running CPU.
      510    12439
      511    12440                           The buried DSBs are headed by KQ$MMSD.CRYPT$,
      512    12441                           and the count is KQ$MMSD.CRYPTCNT.
      513    12442        */
      514    12443    1   RELDSB: PROC;
      515    12444        /**/
      516    12445                          /*    First strip the DSB of
      517    12446                           *    all its comgroup page table
      518    12447                           *    chunks.
      519    12448                           */
      520    12449    2         CALL MMQ$TRUNCDSBL (,DSB$->KQ$DSB,MMQERR) ALTRET(BADREL);
      521    12450    2   REL0: ;
      522    12451              %LOCK (G=KQ$MMSD.GATE);
      523    12454    2         DSB$->KQ$DSB.CRYPT.LNK$=KQ$MMSD.CRYPT$;
      524    12455    2         KQ$MMSD.CRYPT$=DSB$;
      525    12456    2         KQ$MMSD.CRYPTCNT=KQ$MMSD.CRYPTCNT+1;
      526    12457    2         IF KQ$MMSD.CRYPTCNT >= %KQ_BDMAX# THEN
      527    12458    2          CALL DIGEMUP;
      528    12459              %UNLOCK (G=KQ$MMSD.GATE);
      529    12462    2         RETURN;
      530    12463    2   BADREL:;
      531    12464    2         CALL SC_BCGMMQ; /* See KQM$MM2 for extract */
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:16   
      532    12465    2         GOTO REL0;
      533    12466    2   END RELDSB;
      534    12467        /****************************************************************
      535    12468        *****************************************************************/
      536    12469        /*D* NAME:         DIGEMUP
      537    12470             PURPOSE:      To dig up all the buried DSBs
      538    12471             INPUT:        KQ$MMSD.GATE locked
      539    12472             DESCRIPTION:  Releases all the buried DSBs, and clears
      540    12473                           everyone's cache.
      541    12474
      542    12475                           Leaves gate locked.
      543    12476        */
      544    12477    1   DIGEMUP: PROC;
      545    12478        /**/
      546    12479    2         IF KQ$MMSD.CRYPTCNT = 0 THEN RETURN;
      547    12480    2         KQ_STATS.CRYPTOPN=KQ_STATS.CRYPTOPN+1;
      548    12481    2         CALL HFC$CACHECLR;
      549    12482    3           DO WHILE (KQ$MMSD.CRYPT$ ~= ADDR(NIL));
      550    12483    3           DSB$=KQ$MMSD.CRYPT$;
      551    12484    3           KQ$MMSD.CRYPT$=DSB$->KQ$DSB.CRYPT.LNK$;
      552    12485    3           KQ$MMSD.CRYPTCNT=KQ$MMSD.CRYPTCNT-1;
      553    12486    3           CALL KQM$RELB (KQ$MMSD.DCXT$->K$CG,DSB$,SIZEW(KQ$DSB));
      554    12487    3           END;
      555    12488    2         CALL MMQ$ZAPCPUS;
      556    12489    2         RETURN;
      557    12490    2   END DIGEMUP;
      558    12491        /****************************************************************
      559    12492        *****************************************************************/
      560    12493        /*D* NAME:         FINDACB
      561    12494             PURPOSE:      To find/setup the account block for a CG
      562    12495             DESCRIPTION:  B$JIT.DCB$ points to a DCB with the comgroup's
      563    12496                           account & SETX.  This is used to find the correct
      564    12497                           account block, or allocate a newie & merge in the
      565    12498                           correct info.  The use count in the ACB is incred
      566    12499                           and its address stored in the CG context block
      567    12500                           pointed to by CG$.
      568    12501
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:17   
      569    12502                           If a account block cannot be allocated, we ALTRET,
      570    12503                           with ERRCODE set.
      571    12504        */
      572    12505    1   FINDACB: PROC ALTRET;
      573    12506        /**/
      574    12507    2   DCL FIT$ PTR;
      575    12508        /**/
      576    12509    2         CALL LOCACB ALTRET(NEWACB);
      577    12510    2         ACB$->KQ$ACB.USECNT=ACB$->KQ$ACB.USECNT+1;
      578    12511    2   DONE: ;
      579    12512    2         CG$->K$CG.ACB$=ACB$;
      580    12513              %UNLOCK (G=KQ_CGLGATE);
      581    12516    2         RETURN;
      582    12517    2   NEWACB:;
      583    12518                                /* Allocate a new one */
      584    12519    2         J=SIZEW(KQ$ACB);
      585    12520    2         CALL KQM$GETB(KQ$MMSD.CCXT$->K$CG,ACB$,J) ALTRET(ALTRT);
      586    12521    2         ACB$->KQ$ACB=ACB_INIT;
      587    12522    2         ACB$->KQ$ACB.FLNK$=KQ$MMSD.ACBHEAD$;
      588    12523    2         IF KQ$MMSD.ACBHEAD$ ~= ADDR(NIL) THEN
      589    12524    2          KQ$MMSD.ACBHEAD$->KQ$ACB.BLNK$=ACB$;
      590    12525    2         KQ$MMSD.ACBHEAD$=ACB$;
      591    12526    2         ACB$->KQ$ACB.ACCT=B$JIT.DCB$->F$DCB.ACCT;
      592    12527    2         ACB$->KQ$ACB.SETX=B$JIT.DCB$->F$DCB.SETX;
      593    12528                           /* Get limits from FD FIT */
      594    12529              %UNLOCK (G=KQ_CGLGATE);
      595    12532    2         B$JIT.DCB$->F$DCB.GTYP=FMGTFD;
      596    12533    2         J=PINCRW(F$CFU$,B$JIT.DCB$->F$DCB.CFU$->FM$CFU.ACCTX)->FM$CFUA.FDFITSDA;
      597    12534    2         CALL FMD$REDBUFBC (FIT$,1,J,,0) ALTRET(NOREAD);
      598    12535    2         FIT$=PINCRW(FIT$,SIZEW(FM$GRAN));
      599    12536    2         J=0;
      600    12537    2         CALL FMO$LOCCODP (FIT$,14) ALTRET(NOCODE);
      601    12538    2         J=FIT$->CODE14.CGMEM*%CGMEMSIZ;
      602    12539    2   NOCODE:;
      603    12540    2         IF J = 0 THEN
      604    12541    2          IF ACB$->KQ$ACB.ACCT = ':SYS' THEN J=100000;
      605    12542    2         CALL FMD$RELBUF(1);
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:18   
      606    12543              %LOCK (G=KQ_CGLGATE);
      607    12546    2         ACB$->KQ$ACB.CURPGLIM=J;
      608    12547    2         GOTO DONE;
      609    12548    2   NOREAD:;
      610    12549    2         CALL FMD$RELBUF (1);
      611    12550    2         CG$->K$CG.ACB$=ACB$;
      612    12551    2         CALL DECRACB; /* Get rid of the ACB */
      613    12552    2         CG$->K$CG.ACB$=ADDR(NIL);
      614    12553    2         ERRCODE=B$JIT.ERR.CODE; /* From FMD$REDBUF */
      615    12554    2         ALTRETURN;
      616    12555    2   ALTRT: ;
      617    12556    2         ERRCODE=J;
      618    12557              %UNLOCK (G=KQ_CGLGATE);
      619    12560    2         ALTRETURN;
      620    12561    2   END FINDACB;
      621    12562        /****************************************************************
      622    12563        *****************************************************************/
      623    12564        /*D* NAME:         LOCACB
      624    12565             PURPOSE:      To find an ACB
      625    12566             INPUT:        B$JIT.DCB$->F$DCB with desired ACCT & SETX
      626    12567             DESCRIPTION:  ALTRETs if not found, else RETURNs ACB$.  In both
      627    12568                           cases KQ_CGLGATE is locked.
      628    12569        */
      629    12570    1   LOCACB: PROC ALTRET;
      630    12571        /**/
      631    12572    2   AGANE:;
      632    12573              %LOCK (G=KQ_CGLGATE);
      633    12576    2         ACB$=KQ$MMSD.ACBHEAD$;
      634    12577    3           DO WHILE (ACB$ ~= ADDR(NIL));
      635    12578    3           IF  ACB$->KQ$ACB.ACCT = B$JIT.DCB$->F$DCB.ACCT
      636    12579    3           AND ACB$->KQ$ACB.SETX = B$JIT.DCB$->F$DCB.SETX THEN
      637    12580    4             DO;
      638    12581    4             IF ACB$->KQ$ACB.CURPGLIM >= 0 THEN RETURN;
      639    12582                        /* Being initialized */
      640    12583                  %UNLOCK (G=KQ_CGLGATE);
      641    12586    4             CALL SSR$REG (%SS_SL,,1);
      642    12587    4             GOTO AGANE;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:19   
      643    12588    4             END;
      644    12589    3           ACB$=ACB$->KQ$ACB.FLNK$;
      645    12590    3           END;
      646    12591    2         ALTRETURN;
      647    12592    2   END LOCACB;
      648    12593        /****************************************************************
      649    12594        *****************************************************************/
      650    12595        /*D* NAME:         DECRACB
      651    12596             PURPOSE:      To release a CG's use of its ACB
      652    12597             DESCRIPTION:  The CG's CURPG count is subtracted from CURPG
      653    12598                           in the ACB.  The ACB's USECNT is decremented.
      654    12599                           If USECNT hits zero, the ACB is released.
      655    12600        */
      656    12601    1   DECRACB: PROC;
      657    12602        /**/
      658    12603    2         ACB$=CG$->K$CG.ACB$;
      659    12604    2         IF ACB$ ~= ADDR(NIL) THEN
      660    12605    3           DO;
      661    12606                %LOCK (G=KQ_CGLGATE);
      662    12609    3           ACB$->KQ$ACB.CURPG=ACB$->KQ$ACB.CURPG-CG$->K$CG.MMD.CURPG;
      663    12610    3           ACB$->KQ$ACB.USECNT=ACB$->KQ$ACB.USECNT-1;
      664    12611    3           IF ACB$->KQ$ACB.USECNT = 0 THEN
      665    12612    4             DO;
      666    12613    4             IF ACB$->KQ$ACB.BLNK$ = ADDR(NIL) THEN
      667    12614    4              KQ$MMSD.ACBHEAD$=ACB$->KQ$ACB.FLNK$;
      668    12615    4             ELSE ACB$->KQ$ACB.BLNK$->KQ$ACB.FLNK$=ACB$->KQ$ACB.FLNK$;
      669    12616    4             IF ACB$->KQ$ACB.FLNK$ ~= ADDR(NIL) THEN
      670    12617    4              ACB$->KQ$ACB.FLNK$->KQ$ACB.BLNK$=ACB$->KQ$ACB.BLNK$;
      671    12618    4             J=SIZEW(KQ$ACB);
      672    12619    4             CALL KQM$RELB (KQ$MMSD.CCXT$->K$CG,ACB$,J);
      673    12620    4             END;
      674    12621                %UNLOCK (G=KQ_CGLGATE);
      675    12624    3           END;
      676    12625    2         RETURN;
      677    12626    2   END DECRACB;
      678    12627    1   END KQM$INIT;
      679    12628        %EOD;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:20   

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:21   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KQ_ERRORS_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  is referenced.
   KQM_MAC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQM$INIT.

   Procedure KQM$INIT requires 755 words for executable code.
   Procedure KQM$INIT requires 28 words of local(AUTO) storage.

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:22   

 Object Unit name= KQM$INIT                                   File name= KQM$MM.:E05TOU
 UTS= JUL 30 '97 01:30:58.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     11     13  KQM$INIT
    1   Proc  even  none   755   1363  KQM$INIT
    2  RoData even  none    13     15  KQM$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  KQM$INIT
     1     72          yes     yes      Std        1  KQM$SHUTDOWN
     1    116          yes     yes      Std        0  KQM$USECACHE
     1    123          yes     yes      Std        0  KQM$BYPASSCACHE
     1    206          yes     yes      Std        2  KQM$UPDA
     1    223          yes     yes      Std        0  KQM$TRUNCDSBS
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:23   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KQX$LDASR
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       3 MMQ$TRUNCDSB
         yes           Std       1 HFC$LOCK
 yes     yes           Std       3 KQM$GETB
 yes     yes           Std       3 MMQ$GCAP
 yes     yes           Std       3 MMQ$GCCP
 yes     yes           Std       3 KQM$RELB
 yes     yes           Std       3 MMQ$TRUNCDSBL
         yes           Std       0 HFC$CACHECLR
 yes     yes           Std       0 MMQ$ZAPCPUS
 yes     yes           Std       2 FMO$LOCCODP
         yes           Std       1 FMD$RELBUF
 yes     yes           Std       6 FMD$REDBUFBC
 yes     yes           Std       3 SSR$REG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_BCGMMQ                             KQ_CGLGATE                            KQ_STATS
     B$JIT$                           r    F$CFU$                           r    KQ_MMSD$
     KQ_IDSB                               KQ_IBAP                               KQ_ICG
     B_VECTNIL
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:24   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ASLENTSID                             ISSID
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:25   


        1        1        /*M* KQM$MM Memory management routines for COMGROUP QUEUE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        /**/
        9        9        /*P* NAME:         KQM$MM
       10       10             PURPOSE:      To provide memory management for comgroups
       11       11              DESCRIPTION: This module contains two compile units.
       12       12
       13       13                           The first is concerned with memory management
       14       14                           that is in some sense global to all comgroups.
       15       15                           Specifically, allocation and deallocation of
       16       16                           comgroup context & descriptor segment blocks.
       17       17                           Comgroup context blocks for different comgroups
       18       18                           lie side by side in the same pages.  These
       19       19                           routines manage those pages, as well as the
       20       20                           chain of context blocks for active comgroups.
       21       21
       22       22                           The second is concerned with allocation and
       23       23                           release of memory on behalf of a particular
       24       24                           comgroup.  The data blocks for a given comgroup
       25       25                           lie in pages wholly owned by that comgroup,
       26       26                           and are chained together, with the chain heads
       27       27                           living in the comgroup context block.
       28       28        */
       29       29        /**/
       30       30        KQM$INIT: PROC (KQ$CG,MEM$) ALTRET;

     30  1 000000   000000 700200 xent  KQM$INIT     TSX0  ! X66_AUTO_2
         1 000001   000034 000002                    ZERO    28,2

       31       31        /**/
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:26   
       32       32
       33       33
       34       34
       35       35        /**/
       36       36        /* INCLUDES */
       37       37        /**/
       38       38        %INCLUDE KQ_SUBS_C;
       39      338        %INCLUDE KQ_MAC_C;
       40     2888        %INCLUDE HF_LOCK_C;
       41     2902        %INCLUDE KQM_MAC_C;
       42     3275        %INCLUDE KQ_ERRORS_C;
       43     3323        %INCLUDE KQ_DATA_R;
       44     4155        %INCLUDE B$JIT_C;
       45     4469        %INCLUDE UD_SEV_C;
       46     4483        %INCLUDE KC$CP6V_C;
       47     4603        %INCLUDE B_LSDATA_C;
       48     7809        %INCLUDE M_INFO_C;
       49     7949        %INCLUDE KC_CP6;
       50     8509        %INCLUDE B_STRINGS_C;
       51     8638        %INCLUDE F$DCB;
       52     8687        %INCLUDE FM$CFU;
       53     8732        %INCLUDE FM$FIT;
       54     8953        %INCLUDE FM$GRAN;
       55     9022        %INCLUDE SS_SCHED_C;
       56     9255
       57     9256
       58     9257
       59     9258        /**/
       60     9259        /* MACROS */
       61     9260        /**/
       62     9261        %MACRO $ERROR (NAME=GORGO,CODE=0,SEV=SEV_ERROR#);
       63     9262        DCL 1 NAME CONSTANT ALIGNED,
       64     9263              2 * BIT(18) UNAL INIT('132115'O),
       65     9264              2 * UBIN(15) UNAL INIT(CODE),
       66     9265              2 * UBIN(3) UNAL INIT(SEV);
       67     9266        %MEND;
       68     9267
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:27   
       69     9268
       70     9269
       71     9270        /**/
       72     9271        /* PARAMETERS */
       73     9272        /**/
       74     9273        %KQ_CG (FPTN=KQ$CG,STCLASS="");
       75    10012    1   DCL MEM$ PTR;
       76    10013    1   DCL NEWLIM REDEF MEM$ UBIN;
       77    10014
       78    10015
       79    10016
       80    10017        /**/
       81    10018        /* BASED STRUCTURES */
       82    10019        /**/
       83    10020    1   DCL 1 B$$ASR BASED DALIGNED,
       84    10021    1         2 BOUND UBIN(20) UNAL,
       85    10022    1         2 FLG BIT(9) UNAL,
       86    10023    1         2 W UBIN(3) UNAL,
       87    10024    1         2 T UBIN(4) UNAL,
       88    10025    1         2 BASE UBIN(36) UNAL;
       89    10026        %KQ_FB (FPTN=KQ$FB,STCLASS=BASED);
       90    10048        %KQ_DSB  (FPTN=KQ$DSB ,STCLASS=BASED);
       91    10091        %KQ_BAP  (FPTN=KQ$BAP ,STCLASS=BASED);
       92    10180        %KQ_ACB  (FPTN=KQ$ACB ,STCLASS=BASED);
       93    10210        %KQ_CG   (FPTN=K$CG   ,STCLASS=BASED);
       94    10949        %KQ_MMSD (FPTN=KQ$MMSD,STCLASS="BASED(KQ_MMSD$)");
       95    10986    1   DCL 1 B$$PAGE BASED ALIGNED,
       96    10987    1         2 * CHAR(4096) UNAL;
       97    10988    1   DCL B$$PTR PTR BASED ALIGNED;
       98    10989    1   DCL 1 B$$PTRR BASED ALIGNED,
       99    10990    1         2 COFF UBIN(20) UNAL,
      100    10991    1         2 * UBIN(16) UNAL;
      101    10992        %B$JIT0;
      102    11081        %U$JIT1X;
      103    11084        %M$JIT2X;
      104    11087        %F$JIT3;
      105    11092        %A$JIT6X;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:28   
      106    11095        %FM$CFU;
      107    11101        %FM$CFUA;
      108    11107        %FM$GRAN;
      109    11111        %CODE14;
      110    11121
      111    11122
      112    11123
      113    11124        /**/
      114    11125        /* AUTO */
      115    11126        /**/
      116    11127    1   DCL PAGE$ PTR;
      117    11128    1   DCL I UBIN;
      118    11129    1   DCL J UBIN;
      119    11130    1   DCL HKP UBIN;
      120    11131    1   DCL CAP$ PTR;
      121    11132    1   DCL 1 CAP$R REDEF CAP$,
      122    11133    1         2 PG# UBIN(8) UNAL,
      123    11134    1         2 OTHER UBIN(16) UNAL,
      124    11135    1         2 SEGID UBIN(12) UNAL;
      125    11136    1   DCL P$ PTR;
      126    11137    1   DCL BLK$ PTR;
      127    11138    1   DCL ACB$ PTR;
      128    11139    1   DCL CG$ PTR;
      129    11140    1   DCL DSB$ PTR;
      130    11141    1   DCL ERRCODE UBIN;
      131    11142    1   DCL MMQERR REDEF ERRCODE UBIN;
      132    11143
      133    11144
      134    11145
      135    11146        /**/
      136    11147        /* CONSTANT */
      137    11148        /**/
      138    11149        %$ERROR (NAME=E_CGCXT,CODE=%E$CGCXT);
      139    11155        %KQ_ACB (FPTN=ACB_INIT,STCLASS=CONSTANT);
      140    11185
      141    11186
      142    11187
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:29   
      143    11188        /**/
      144    11189        /* REFS */
      145    11190        /**/
      146    11191    1   DCL FMD$REDBUFBC  ENTRY(6) ALTRET;
      147    11192    1   DCL FMD$RELBUF    ENTRY(1);
      148    11193    1   DCL FMO$LOCCODP   ENTRY(2) ALTRET;
      149    11194    1   DCL HFC$CACHECLR  ENTRY;
      150    11195    1   DCL KQM$GETB      ENTRY(3) ALTRET;
      151    11196    1   DCL KQM$GETDFR    ENTRY(3) ALTRET;
      152    11197    1   DCL KQM$GETMIN    ENTRY(3) ALTRET;
      153    11198    1   DCL KQM$RELB      ENTRY(3) ALTRET;
      154    11199    1   DCL KQX$LDASR     ENTRY(1) ALTRET;
      155    11200    1   DCL MMQ$GCCP      ENTRY(3) ALTRET;
      156    11201    1   DCL MMQ$GCAP      ENTRY(3) ALTRET;
      157    11202    1   DCL MMQ$TRUNCDSB  ENTRY(3) ALTRET;
      158    11203    1   DCL MMQ$TRUNCDSBL ENTRY(3) ALTRET;
      159    11204    1   DCL MMQ$ZAPCPUS   ENTRY    ALTRET;
      160    11205    1   DCL SSR$REG       ENTRY(3) ALTRET;
      161    11206    1   DCL SC_BCGMMQ     ENTRY    CONV(2,0);
      162    11207
      163    11208    1   DCL B$JIT$ PTR SYMREF;
      164    11209    1   DCL F$CFU$ PTR SYMREF READONLY;
      165    11210    1   DCL KQ_MMSD$ PTR SYMREF READONLY;
      166    11211        %KQ_DSB (FPTN=KQ_IDSB,STCLASS=SYMREF);
      167    11254        %KQ_BAP (FPTN=KQ_IBAP,STCLASS=SYMREF);
      168    11343        %KQ_CG (FPTN=KQ_ICG,STCLASS=SYMREF);
      169    12082        %EJECT;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:30   
      170    12083        /*F* NAME:         KQM$INIT
      171    12084             PURPOSE:      To initialize a COMGROUP's context
      172    12085             DESCRIPTION:  This routine allocates space for a CG context
      173    12086                           block and then moves the passed context block
      174    12087                           into it, returning MEM$ pointing to the allocated
      175    12088                           block.  Next, it allocates/finds the appropriate
      176    12089                           account block, and increments its use count,
      177    12090                           setting KQ$CG.ACB$ to point to the account
      178    12091                           block.  Next, it allocates a descriptor segment
      179    12092                           for the CG and initializes it to empty, planting
      180    12093                           the DSB pointer in the CG context block, and then
      181    12094                           loads the descriptor register to frame the (empty)
      182    12095                           data space descriptor segment.  Then it
      183    12096                           placed the context block on the linear list of
      184    12097                           all comgroup context blocks.  Finally, it
      185    12098                           returns.  If either of the above cannot be obtained,
      186    12099                           it ALTRETs with the appropriate error code in
      187    12100                           B$JIT.ERR, and nothing allocated.
      188    12101
      189    12102        KQM$INIT: ENTRY (KQ$CG,MEM$) ALTRET;    */
      190    12103
      191    12104    1         CALL GETCXT ALTRET(NOCXT);

  12104  1 000002   000336 701000 1                  TSX1    GETCXT
         1 000003   000056 702000 1                  TSX2    NOCXT

      192    12105    1         CG$->K$CG=KQ$CG;

  12105  1 000004   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000005   200015 471500                    LDP1    CG$,,AUTO
         1 000006   000100 100500                    MLR     fill='000'O
         1 000007   000000 001324                    ADSC9   0,,PR0                   cn=0,n=724
         1 000010   100000 001324                    ADSC9   0,,PR1                   cn=0,n=724

      193    12106    1         CALL FINDACB ALTRET(NOCXT1);

  12106  1 000011   000767 701000 1                  TSX1    FINDACB
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:31   
         1 000012   000054 702000 1                  TSX2    NOCXT1

      194    12107    1         CALL GETDSB ALTRET(NOCXT0);

  12107  1 000013   000346 701000 1                  TSX1    GETDSB
         1 000014   000052 702000 1                  TSX2    NOCXT0

      195    12108    1         CG$->K$CG.MMD.DSB$=DSB$;

  12108  1 000015   200016 236100                    LDQ     DSB$,,AUTO
         1 000016   200015 470500                    LDP0    CG$,,AUTO
         1 000017   000000 756100                    STQ     0,,PR0

      196    12109                                /* INITIALIZE THE DSB & LOAD ASR */
      197    12110    1         DSB$->KQ$DSB=KQ_IDSB;

  12110  1 000020   200016 470500                    LDP0    DSB$,,AUTO
         1 000021   000100 100400                    MLR     fill='000'O
         1 000022   000000 000330 xsym               ADSC9   KQ_IDSB                  cn=0,n=216
         1 000023   000000 000330                    ADSC9   0,,PR0                   cn=0,n=216

      198    12111    1         ADDR(DSB$->KQ$DSB.ASR)->B$$ASR.BOUND=SIZEC(KQ$DSB.DESC)-1;

  12111  1 000024   200016 470500                    LDP0    DSB$,,AUTO
         1 000025   000000 236100                    LDQ     0,,PR0
         1 000026   177777 376007                    ANQ     65535,DL
         1 000027   000000 276000 2                  ORQ     0
         1 000030   000000 756100                    STQ     0,,PR0

      199    12112    1         P$=ADDR(DSB$->KQ$DSB.DESC);

  12112  1 000031   200016 236100                    LDQ     DSB$,,AUTO
         1 000032   000002 036003                    ADLQ    2,DU
         1 000033   200012 756100                    STQ     P$,,AUTO

      200    12113    1         ADDR(DSB$->KQ$DSB.ASR)->B$$ASR.BASE=ADDR(P$)->B$$PTRR.COFF;

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:32   
  12113  1 000034   200016 470500                    LDP0    DSB$,,AUTO
         1 000035   200012 236100                    LDQ     P$,,AUTO
         1 000036   000020 772000                    QRL     16
         1 000037   000001 756100                    STQ     1,,PR0

      201    12114    1         CALL KQX$LDASR (CG$->K$CG);

  12114  1 000040   200015 630500                    EPPR0   CG$,,AUTO
         1 000041   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000042   000000 701000 xent               TSX1    KQX$LDASR
         1 000043   000000 011000                    NOP     0

      202    12115    1         CALL ADDCG;

  12115  1 000044   000255 701000 1                  TSX1    ADDCG
         1 000045   000000 011000                    NOP     0

      203    12116    1         MEM$=CG$;

  12116  1 000046   200015 236100                    LDQ     CG$,,AUTO
         1 000047   200004 470500                    LDP0    @MEM$,,AUTO
         1 000050   000000 756100                    STQ     0,,PR0

      204    12117    1         RETURN;

  12117  1 000051   000000 702200 xent               TSX2  ! X66_ARET

  12116  1 000052                       NOCXT0       null
      205    12118    1   NOCXT0:;
      206    12119    1         CALL DECRACB;

  12119  1 000052   001271 701000 1                  TSX1    DECRACB
         1 000053   000000 011000                    NOP     0

  12116  1 000054                       NOCXT1       null
      207    12120    1   NOCXT1:;
      208    12121    1         CALL RELCXT;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:33   

  12121  1 000054   000631 701000 1                  TSX1    RELCXT
         1 000055   000000 011000                    NOP     0

  12116  1 000056                       NOCXT        null
      209    12122    1   NOCXT:;
      210    12123    1         B$JIT.ERR=E_CGCXT;

  12123  1 000056   000000 236000 0                  LDQ     E_CGCXT
         1 000057   000000 470400 xsym               LDP0    B$JIT$
         1 000060   000012 756100                    STQ     10,,PR0

      211    12124    1         IF ERRCODE ~= %E$CGMPLC THEN

  12124  1 000061   200017 235100                    LDA     ERRCODE,,AUTO
         1 000062   002206 115007                    CMPA    1158,DL
         1 000063   000071 600000 1                  TZE     ALTRT

      212    12125    1          B$JIT.ERR.CODE=ERRCODE;

  12125  1 000064   200017 236100                    LDQ     ERRCODE,,AUTO
         1 000065   000003 736000                    QLS     3
         1 000066   000012 676100                    ERQ     10,,PR0
         1 000067   377770 376007                    ANQ     131064,DL
         1 000070   000012 656100                    ERSQ    10,,PR0

  12124  1 000071                       ALTRT        null
      213    12126        /*E* ERROR:        KQM-E$CGCXT-E
      214    12127             MESSAGE:      Unable to allocate context for your COMGROUP
      215    12128             MESSAGE1:     No memory was available for the initial context
      216    12129                           of your COMGROUP, therefore it cannot be opened. */
      217    12130    1   ALTRT:;
      218    12131    1         ALTRETURN;

  12131  1 000071   000000 702200 xent               TSX2  ! X66_AALT

      219    12132        /*F* NAME:         KQM$SHUTDOWN
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:34   
      220    12133             PURPOSE:      To release a CG's context
      221    12134             DESCRIPTION:  The context and descriptor segment blocks are
      222    12135                           released.
      223    12136
      224    12137                           All the CG's pages must have been released before
      225    12138                           calling here.
      226    12139        */
      227    12140    1   KQM$SHUTDOWN: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */

  12140  1 000072   000000 700200 xent  KQM$SHUTDOWN TSX0  ! X66_AUTO_2
         1 000073   000034 000002                    ZERO    28,2

      228    12141
      229    12142    1         IF KQ$CG.MMD.DSB$ ~= ADDR(NIL) THEN

  12142  1 000074   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000075   000000 236100                    LDQ     0,,PR0
         1 000076   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000077   000105 600000 1                  TZE     s:12149

      230    12143    2           DO;

      231    12144    2           DSB$=KQ$CG.MMD.DSB$;

  12144  1 000100   200016 756100                    STQ     DSB$,,AUTO

      232    12145    2           KQ$CG.MMD.DSB$=ADDR(NIL);

  12145  1 000101   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000102   000000 756100                    STQ     0,,PR0

      233    12146    2           CALL RELDSB;

  12146  1 000103   000647 701000 1                  TSX1    RELDSB
         1 000104   000000 011000                    NOP     0

      234    12147    2           END;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:35   

      235    12148        /**/
      236    12149    1         CG$=ADDR(KQ$CG);

  12149  1 000105   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000106   200015 756100                    STQ     CG$,,AUTO

      237    12150    1         CALL DECRACB;

  12150  1 000107   001271 701000 1                  TSX1    DECRACB
         1 000110   000000 011000                    NOP     0

      238    12151    1         CALL REMCG;

  12151  1 000111   000276 701000 1                  TSX1    REMCG
         1 000112   000000 011000                    NOP     0

      239    12152    1         CALL RELCXT;

  12152  1 000113   000631 701000 1                  TSX1    RELCXT
         1 000114   000000 011000                    NOP     0

      240    12153    1         RETURN;

  12153  1 000115   000000 702200 xent               TSX2  ! X66_ARET

      241    12154        %EJECT;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:36   
      242    12155        /**/
      243    12156        /*F* NAME:         KQM$USECACHE
      244    12157             PURPOSE:      To turn on use-cache bits in all comgroup
      245    12158                           descriptors
      246    12159             DESCRIPTION:  Called when going from multi- to mono-processing.
      247    12160        */
      248    12161    1   KQM$USECACHE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

  12161  1 000116   000000 700200 xent  KQM$USECACHE TSX0  ! X66_AUTO_2
         1 000117   000034 000002                    ZERO    28,2

      249    12162        /**/
      250    12163    1         J=1;

  12163  1 000120   000001 235007                    LDA     1,DL
         1 000121   200007 755100                    STA     J,,AUTO

      251    12164    1         GOTO CACHE;

  12164  1 000122   000126 710000 1                  TRA     CACHE

      252    12165        /**/
      253    12166        /*F* NAME:         KQM$BYPASSCACHE
      254    12167             PURPOSE:      To turn off use-cache bits in all comgroup
      255    12168                           descriptors
      256    12169             DESCRIPTION:  Called when going from mono- to multi-processing.
      257    12170        */
      258    12171    1   KQM$BYPASSCACHE: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

  12171  1 000123   000000 700200 xent  KQM$BYPASSC* TSX0  ! X66_AUTO_2
         1 000124   000034 000002                    ZERO    28,2

      259    12172        /**/
      260    12173    1         J=0;

  12173  1 000125   200007 450100                    STZ     J,,AUTO

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:37   
  12173  1 000126                       CACHE        null
      261    12174    1   CACHE:;
      262    12175    1         CG$=KQ$MMSD.CGHEAD$;

  12175  1 000126   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000127   000001 236100                    LDQ     1,,PR0
         1 000130   200015 756100                    STQ     CG$,,AUTO

      263    12176    2           DO WHILE (CG$ ~= ADDR(NIL));

  12176  1 000131   000203 710000 1                  TRA     s:12187

      264    12177    2           DSB$=CG$->K$CG.MMD.DSB$;

  12177  1 000132   200015 470500                    LDP0    CG$,,AUTO
         1 000133   000000 236100                    LDQ     0,,PR0
         1 000134   200016 756100                    STQ     DSB$,,AUTO

      265    12178    2           IF DSB$ ~= ADDR(NIL) THEN

  12178  1 000135   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000136   000200 600000 1                  TZE     s:12186

      266    12179    3             DO;

      267    12180    4               DO I = 0 TO KQM_MDPC#;

  12180  1 000137   200006 450100                    STZ     I,,AUTO

      268    12181    4               IF J = 0 THEN

  12181  1 000140   200007 235100                    LDA     J,,AUTO
         1 000141   000157 601000 1                  TNZ     s:12183

      269    12182    4                DSB$->KQ$DSB.DESC.FLG(I)=DSB$->KQ$DSB.DESC.FLG(I)&(~%DSCACHE);

  12182  1 000142   200006 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:38   
         1 000143   000001 736000                    QLS     1
         1 000144   200016 470500                    LDP0    DSB$,,AUTO
         1 000145   000000 620006                    EAX0    0,QL
         1 000146   000002 236106                    LDQ     2,QL,PR0
         1 000147   000024 736000                    QLS     20
         1 000150   777000 376003                    ANQ     -512,DU
         1 000151   737000 376003                    ANQ     -16896,DU
         1 000152   000024 772000                    QRL     20
         1 000153   000002 676110                    ERQ     2,X0,PR0
         1 000154   177600 376007                    ANQ     65408,DL
         1 000155   000002 656110                    ERSQ    2,X0,PR0
         1 000156   000173 710000 1                  TRA     s:12184

      270    12183    4               ELSE DSB$->KQ$DSB.DESC.FLG(I)=DSB$->KQ$DSB.DESC.FLG(I)|%DSCACHE;

  12183  1 000157   200006 236100                    LDQ     I,,AUTO
         1 000160   000001 736000                    QLS     1
         1 000161   200016 470500                    LDP0    DSB$,,AUTO
         1 000162   000000 620006                    EAX0    0,QL
         1 000163   000002 236106                    LDQ     2,QL,PR0
         1 000164   000024 736000                    QLS     20
         1 000165   777000 376003                    ANQ     -512,DU
         1 000166   040000 276003                    ORQ     16384,DU
         1 000167   000024 772000                    QRL     20
         1 000170   000002 676110                    ERQ     2,X0,PR0
         1 000171   177600 376007                    ANQ     65408,DL
         1 000172   000002 656110                    ERSQ    2,X0,PR0

      271    12184    4               END;

  12184  1 000173   200006 235100                    LDA     I,,AUTO
         1 000174   000001 035007                    ADLA    1,DL
         1 000175   200006 755100                    STA     I,,AUTO
         1 000176   000032 115007                    CMPA    26,DL
         1 000177   000140 602000 1                  TNC     s:12181

      272    12185    3             END;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:39   

      273    12186    2           CG$=CG$->K$CG.LNK$;

  12186  1 000200   200015 470500                    LDP0    CG$,,AUTO
         1 000201   000104 236100                    LDQ     68,,PR0
         1 000202   200015 756100                    STQ     CG$,,AUTO

      274    12187    2           END;

  12187  1 000203   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000204   000132 601000 1                  TNZ     s:12177

      275    12188    1         RETURN;

  12188  1 000205   000000 702200 xent               TSX2  ! X66_ARET

      276    12189        /**/
      277    12190        /*F* NAME:         KQM$UPDA
      278    12191             PURPOSE:      To update an account's memory limits
      279    12192             CALL:         KQM$UPDA (,CURPGLIM)
      280    12193             INPUT:        B$JIT.DCB$->F$DCB with ACCT & SETX
      281    12194                           User is REGable
      282    12195             DESCRIPTION:  Finds the ACB.  If none, exit.  Else if it's
      283    12196                           being inited, REG & try again.  Then stuff the
      284    12197                           new value in.
      285    12198        */
      286    12199    1   KQM$UPDA: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  12199  1 000206   000000 700200 xent  KQM$UPDA     TSX0  ! X66_AUTO_2
         1 000207   000034 000002                    ZERO    28,2

      287    12200        /**/
      288    12201    1         CALL LOCACB ALTRET(NOUPDA);

  12201  1 000210   001215 701000 1                  TSX1    LOCACB
         1 000211   000216 702000 1                  TSX2    NOUPDA

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:40   
      289    12202    1         ACB$->KQ$ACB.CURPGLIM=NEWLIM;

  12202  1 000212   200004 470500                    LDP0    @MEM$,,AUTO
         1 000213   000000 235100                    LDA     0,,PR0
         1 000214   200014 471500                    LDP1    ACB$,,AUTO
         1 000215   100003 755100                    STA     3,,PR1

  12202  1 000216                       NOUPDA       null
      290    12203    1   NOUPDA:;
      291    12204              %UNLOCK (G=KQ_CGLGATE);

  12205  1 000216   000001 630400 2                  EPPR0   1
         1 000217   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000220   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000221   000000 011000                    NOP     0

      292    12207    1         RETURN;

  12207  1 000222   000000 702200 xent               TSX2  ! X66_ARET

      293    12208        /**/
      294    12209        /*F* NAME:         KQM$TRUNCDSBS
      295    12210             PURPOSE:      To help trunc all open comgroups of their
      296    12211                           page table chunks
      297    12212             INPUT:        MM gate locked
      298    12213             DESCRIPTION:  Calls MMQ$TRUNCDSB for each open comgroup
      299    12214        */
      300    12215    1   KQM$TRUNCDSBS: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

  12215  1 000223   000000 700200 xent  KQM$TRUNCDS* TSX0  ! X66_AUTO_2
         1 000224   000034 000002                    ZERO    28,2

      301    12216        /**/
      302    12217    1         CG$=KQ$MMSD.CGHEAD$;

  12217  1 000225   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000226   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:41   
         1 000227   200015 756100                    STQ     CG$,,AUTO

      303    12218    2           DO WHILE (CG$ ~= ADDR(NIL));

  12218  1 000230   000252 710000 1                  TRA     s:12222

      304    12219    2           IF CG$->K$CG.CLOCK THEN

  12219  1 000231   200015 470500                    LDP0    CG$,,AUTO
         1 000232   000105 236100                    LDQ     69,,PR0
         1 000233   000004 316007                    CANQ    4,DL
         1 000234   000247 600000 1                  TZE     s:12221

      305    12220    2            CALL MMQ$TRUNCDSB (,CG$->K$CG.MMD.DSB$->KQ$DSB,MMQERR);

  12220  1 000235   000000 471500                    LDP1    0,,PR0
         1 000236   200017 633500                    EPPR3   ERRCODE,,AUTO
         1 000237   200030 453500                    STP3    FIT$+7,,AUTO
         1 000240   200027 451500                    STP1    FIT$+6,,AUTO
         1 000241   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000242   200026 756100                    STQ     FIT$+5,,AUTO
         1 000243   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000244   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000245   000000 701000 xent               TSX1    MMQ$TRUNCDSB
         1 000246   000000 011000                    NOP     0

      306    12221    2           CG$=CG$->K$CG.LNK$;

  12221  1 000247   200015 470500                    LDP0    CG$,,AUTO
         1 000250   000104 236100                    LDQ     68,,PR0
         1 000251   200015 756100                    STQ     CG$,,AUTO

      307    12222    2           END;

  12222  1 000252   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000253   000231 601000 1                  TNZ     s:12219

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:42   
      308    12223    1         RETURN;

  12223  1 000254   000000 702200 xent               TSX2  ! X66_ARET

      309    12224        %EJECT;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:43   
      310    12225        /**/
      311    12226        /*********************************************************************************
      312    12227        *                                                                                *
      313    12228        *   SSS   U   U  BBBB   RRRR    OOO   U   U  TTTTT   III   N   N  EEEEE   SSS    *
      314    12229        *  S   S  U   U  B   B  R   R  O O O  U   U    T      I    N   N  E      S   S   *
      315    12230        *  S      U   U  B   B  R   R  O O O  U   U    T      I    NN  N  E      S       *
      316    12231        *   SSS   U   U  BBBB   RRRR   O  OO  U   U    T      I    N N N  EEEE    SSS    *
      317    12232        *      S  U   U  B   B  R R    O   O  U   U    T      I    N  NN  E          S   *
      318    12233        *  S   S  U   U  B   B  R  R   O   O  U   U    T      I    N   N  E      S   S   *
      319    12234        *   SSS    UUU   BBBB   R   R   OOO    UUU     T     III   N   N  EEEEE   SSS    *
      320    12235        *                                                                                *
      321    12236        *********************************************************************************/
      322    12237
      323    12238        /****************************************************************
      324    12239        *****************************************************************/
      325    12240        /*D* NAME:         ADDCG
      326    12241             PURPOSE:      To add a comgroup to the system list
      327    12242             DESCRIPTION:  The CG context block pointed to by CG$ is
      328    12243                           added to the list of active CGs. */
      329    12244    1   ADDCG: PROC ALTRET;

  12244  1 000255   200020 741300       ADDCG        STX1  ! ERRCODE+1,,AUTO

      330    12245              %LOCK (G=KQ_CGLGATE);

  12246  1 000256   000001 630400 2                  EPPR0   1
         1 000257   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000260   000000 701000 xent               TSX1    HFC$LOCK
         1 000261   000000 011000                    NOP     0

      331    12248    2         CG$->K$CG.LNK$=KQ$MMSD.CGHEAD$;

  12248  1 000262   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000263   000001 236100                    LDQ     1,,PR0
         1 000264   200015 471500                    LDP1    CG$,,AUTO
         1 000265   100104 756100                    STQ     68,,PR1

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:44   
      332    12249    2         KQ$MMSD.CGHEAD$=CG$;

  12249  1 000266   200015 236100                    LDQ     CG$,,AUTO
         1 000267   000001 756100                    STQ     1,,PR0

  12249  1 000270                       DUN          null
      333    12250    2   DUN:  ;
      334    12251              %UNLOCK (G=KQ_CGLGATE);

  12252  1 000270   000001 630400 2                  EPPR0   1
         1 000271   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000272   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000273   000000 011000                    NOP     0

      335    12254    2         RETURN;

  12254  1 000274   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 000275   000001 702211                    TSX2  ! 1,X1

      336    12255        /****************************************************************
      337    12256        *****************************************************************/
      338    12257        /*D* NAME:         REMCG
      339    12258             PURPOSE:      To remove a comgroup from the system list
      340    12259             DESCRIPTION:  The comgroup context block pointed to by CG$
      341    12260                           is removed from the list of active CGs.
      342    12261                           ALTRET if not found in the list. */
      343    12262    2   REMCG: ENTRY ALTRET;

  12262  1 000276   200020 741300       REMCG        STX1  ! ERRCODE+1,,AUTO

      344    12263              %LOCK (G=KQ_CGLGATE);

  12264  1 000277   000001 630400 2                  EPPR0   1
         1 000300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000301   000000 701000 xent               TSX1    HFC$LOCK
         1 000302   000000 011000                    NOP     0

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:45   
      345    12266    2         P$=KQ$MMSD.CGHEAD$;

  12266  1 000303   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000304   000001 236100                    LDQ     1,,PR0
         1 000305   200012 756100                    STQ     P$,,AUTO

      346    12267    2         IF P$ = CG$ THEN

  12267  1 000306   200015 116100                    CMPQ    CG$,,AUTO
         1 000307   000314 601000 1                  TNZ     s:12273

      347    12268    3           DO;

      348    12269    3           KQ$MMSD.CGHEAD$=CG$->K$CG.LNK$;

  12269  1 000310   200015 471500                    LDP1    CG$,,AUTO
         1 000311   100104 236100                    LDQ     68,,PR1
         1 000312   000001 756100                    STQ     1,,PR0

      349    12270    3           GOTO DUN;

  12270  1 000313   000270 710000 1                  TRA     DUN

      350    12271    3           END;
      351    12272    2         ELSE
      352    12273    3           DO WHILE (P$ ~= ADDR(NIL));

  12273  1 000314   000326 710000 1                  TRA     s:12280

      353    12274    3           IF P$->K$CG.LNK$ = CG$ THEN

  12274  1 000315   200012 470500                    LDP0    P$,,AUTO
         1 000316   000104 236100                    LDQ     68,,PR0
         1 000317   200015 116100                    CMPQ    CG$,,AUTO
         1 000320   000325 601000 1                  TNZ     s:12279

      354    12275    4             DO;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:46   

      355    12276    4             P$->K$CG.LNK$=CG$->K$CG.LNK$;

  12276  1 000321   200015 471500                    LDP1    CG$,,AUTO
         1 000322   100104 236100                    LDQ     68,,PR1
         1 000323   000104 756100                    STQ     68,,PR0

      356    12277    4             GOTO DUN;

  12277  1 000324   000270 710000 1                  TRA     DUN

      357    12278    4             END;
      358    12279    3           P$=P$->K$CG.LNK$;

  12279  1 000325   200012 756100                    STQ     P$,,AUTO

      359    12280    3           END;

  12280  1 000326   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000327   000315 601000 1                  TNZ     s:12274

      360    12281              %UNLOCK (G=KQ_CGLGATE);

  12282  1 000330   000001 630400 2                  EPPR0   1
         1 000331   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000332   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000333   000000 011000                    NOP     0

      361    12284    2         ALTRETURN;

  12284  1 000334   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 000335   000000 702211                    TSX2  ! 0,X1

      362    12285    2   END ADDCG;
      363    12286        /****************************************************************
      364    12287        *****************************************************************/
      365    12288        /*D* NAME:         GETCXT
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:47   
      366    12289             PURPOSE:      To allocate a CG context block
      367    12290             DESCRIPTION:  CG context blocks live on pages mapped thru the
      368    12291                           first section of the CG page table.  The first
      369    12292                           such page to be allocated gets a context block
      370    12293                           stuck into it.  This context block is pointed
      371    12294                           to by KQ$MMSD.CCXT$, and its block allocation
      372    12295                           page (its initial one), is the page in which
      373    12296                           it lives.  This context block is used for block
      374    12297                           allocation from the context block area, nescessary
      375    12298                           for allocation of comgroup-related stuff which
      376    12299                           needs to be always visible.  The comgroup block-
      377    12300                           allocation routines (KQM$GET?, KQM$REL?) check
      378    12301                           for context block address = KQ$MMSD.CCXT$, and get
      379    12302                           or release the appropriate type of page if so.
      380    12303
      381    12304                           A similar scheme is used for DSB allocation, even
      382    12305                           though it is not strictly nescessary, for unlike
      383    12306                           the context block pages, DSB pages (which are
      384    12307                           houskeeping) only have blocks of one size (the
      385    12308                           size of a DSB) allocated from them.
      386    12309
      387    12310                           If can't get space, ALTRETs with ERRCODE set.
      388    12311        */
      389    12312    1   GETCXT: PROC ALTRET;

  12312  1 000336   200020 741300       GETCXT       STX1  ! ERRCODE+1,,AUTO

      390    12313    2         HKP=0;

  12313  1 000337   200010 450100                    STZ     HKP,,AUTO

      391    12314    2         CALL GET ALTRET(ALTRT);

  12314  1 000340   000361 701000 1                  TSX1    GET
         1 000341   000357 702000 1                  TSX2    ALTRT

      392    12315    2         CG$=BLK$;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:48   

  12315  1 000342   200013 236100                    LDQ     BLK$,,AUTO
         1 000343   200015 756100                    STQ     CG$,,AUTO

      393    12316    2         RETURN;

  12316  1 000344   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 000345   000001 702211                    TSX2  ! 1,X1

      394    12317        /*D* NAME:         GETDSB
      395    12318             PURPOSE:      To allocate a CG descriptor segment block
      396    12319             DESCRIPTION:  CG descriptor segment blocks live on housekeeping
      397    12320                           pages allocated for that purpose alone.  Allocation
      398    12321                           is handled like GETCXT. */
      399    12322    2   GETDSB: ENTRY ALTRET;

  12322  1 000346   200020 741300       GETDSB       STX1  ! ERRCODE+1,,AUTO

      400    12323    2         HKP=1;

  12323  1 000347   000001 235007                    LDA     1,DL
         1 000350   200010 755100                    STA     HKP,,AUTO

      401    12324    2         CALL GET ALTRET(ALTRT);

  12324  1 000351   000361 701000 1                  TSX1    GET
         1 000352   000357 702000 1                  TSX2    ALTRT

      402    12325    2         DSB$=BLK$;

  12325  1 000353   200013 236100                    LDQ     BLK$,,AUTO
         1 000354   200016 756100                    STQ     DSB$,,AUTO

      403    12326    2         RETURN;

  12326  1 000355   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 000356   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:49   

  12325  1 000357                       ALTRT        null
      404    12327    2   ALTRT:;
      405    12328    2         ALTRETURN;

  12328  1 000357   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 000360   000000 702211                    TSX2  ! 0,X1

      406    12329    2   GET:  PROC ALTRET;

  12329  1 000361   200022 741300       GET          STX1  ! FIT$+1,,AUTO

      407    12330              %LOCK (G=KQ$MMSD.GATE);

  12331  1 000362   000000 236000 xsym               LDQ     KQ_MMSD$
         1 000363   000006 036003                    ADLQ    6,DU
         1 000364   200026 756100                    STQ     FIT$+5,,AUTO
         1 000365   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000366   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000367   000000 701000 xent               TSX1    HFC$LOCK
         1 000370   000000 011000                    NOP     0

      408    12333    3         IF HKP = 0 THEN

  12333  1 000371   200010 235100                    LDA     HKP,,AUTO
         1 000372   000417 601000 1                  TNZ     s:12342

      409    12334    4           DO;

      410    12335    4           IF KQ$MMSD.CCXT$ = ADDR(NIL) THEN

  12335  1 000373   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000374   000002 236100                    LDQ     2,,PR0
         1 000375   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000376   000442 601000 1                  TNZ     s:12348

      411    12336    5             DO;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:50   

      412    12337    5             CALL MMQ$GCCP (CAP$,,J) ALTRET(ALTRT);

  12337  1 000377   200007 631500                    EPPR1   J,,AUTO
         1 000400   200030 451500                    STP1    FIT$+7,,AUTO
         1 000401   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000402   200027 756100                    STQ     FIT$+6,,AUTO
         1 000403   200011 633500                    EPPR3   CAP$,,AUTO
         1 000404   200026 453500                    STP3    FIT$+5,,AUTO
         1 000405   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000406   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000407   000000 701000 xent               TSX1    MMQ$GCCP
         1 000410   000524 702000 1                  TSX2    ALTRT

      413    12338    5             CALL INITPG;

  12338  1 000411   000537 701000 1                  TSX1    INITPG
         1 000412   000000 011000                    NOP     0

      414    12339    5             KQ$MMSD.CCXT$=P$;

  12339  1 000413   200012 236100                    LDQ     P$,,AUTO
         1 000414   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000415   000002 756100                    STQ     2,,PR0

      415    12340    5             END;

      416    12341    4           END;

  12341  1 000416   000442 710000 1                  TRA     s:12348

      417    12342    3         ELSE IF KQ$MMSD.DCXT$ = ADDR(NIL) THEN

  12342  1 000417   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000420   000003 236100                    LDQ     3,,PR0
         1 000421   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000422   000442 601000 1                  TNZ     s:12348
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:51   

      418    12343    4            DO;

      419    12344    4            CALL MMQ$GCAP (CAP$,,J) ALTRET(ALTRT);

  12344  1 000423   200007 631500                    EPPR1   J,,AUTO
         1 000424   200030 451500                    STP1    FIT$+7,,AUTO
         1 000425   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000426   200027 756100                    STQ     FIT$+6,,AUTO
         1 000427   200011 633500                    EPPR3   CAP$,,AUTO
         1 000430   200026 453500                    STP3    FIT$+5,,AUTO
         1 000431   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000432   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000433   000000 701000 xent               TSX1    MMQ$GCAP
         1 000434   000524 702000 1                  TSX2    ALTRT

      420    12345    4            CALL INITPG;

  12345  1 000435   000537 701000 1                  TSX1    INITPG
         1 000436   000000 011000                    NOP     0

      421    12346    4            KQ$MMSD.DCXT$=P$;

  12346  1 000437   200012 236100                    LDQ     P$,,AUTO
         1 000440   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000441   000003 756100                    STQ     3,,PR0

      422    12347    4            END;

      423    12348    3         IF HKP = 0 THEN

  12348  1 000442   200010 235100                    LDA     HKP,,AUTO
         1 000443   000461 601000 1                  TNZ     s:12355

      424    12349    4           DO;

      425    12350    4           J=SIZEW(K$CG);
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:52   

  12350  1 000444   000266 236007                    LDQ     182,DL
         1 000445   200007 756100                    STQ     J,,AUTO

      426    12351    4           CALL KQM$GETB (KQ$MMSD.CCXT$->K$CG,BLK$,J) ALTRET(ALTRT);

  12351  1 000446   000002 471500                    LDP1    2,,PR0
         1 000447   200007 633500                    EPPR3   J,,AUTO
         1 000450   200030 453500                    STP3    FIT$+7,,AUTO
         1 000451   200013 634500                    EPPR4   BLK$,,AUTO
         1 000452   200027 454500                    STP4    FIT$+6,,AUTO
         1 000453   200026 451500                    STP1    FIT$+5,,AUTO
         1 000454   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000455   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000456   000000 701000 xent               TSX1    KQM$GETB
         1 000457   000524 702000 1                  TSX2    ALTRT

      427    12352    4           END;

  12352  1 000460   000513 710000 1                  TRA     GOTIT

      428    12353    3         ELSE
      429    12354    4           DO;

      430    12355    4           J=SIZEW(KQ$DSB);

  12355  1 000461   000066 236007                    LDQ     54,DL
         1 000462   200007 756100                    STQ     J,,AUTO

      431    12356    4           CALL KQM$GETB (KQ$MMSD.DCXT$->K$CG,BLK$,J) ALTRET(NOGOT);

  12356  1 000463   000003 471500                    LDP1    3,,PR0
         1 000464   200007 633500                    EPPR3   J,,AUTO
         1 000465   200030 453500                    STP3    FIT$+7,,AUTO
         1 000466   200013 634500                    EPPR4   BLK$,,AUTO
         1 000467   200027 454500                    STP4    FIT$+6,,AUTO
         1 000470   200026 451500                    STP1    FIT$+5,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:53   
         1 000471   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000472   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000473   000000 701000 xent               TSX1    KQM$GETB
         1 000474   000476 702000 1                  TSX2    NOGOT

      432    12357    4           GOTO GOTIT;

  12357  1 000475   000513 710000 1                  TRA     GOTIT

  12355  1 000476                       NOGOT        null
      433    12358    4   NOGOT:  ;
      434    12359    4           CALL DIGEMUP;

  12359  1 000476   000721 701000 1                  TSX1    DIGEMUP
         1 000477   000000 011000                    NOP     0

      435    12360    4           CALL KQM$GETB (KQ$MMSD.DCXT$->K$CG,BLK$,J) ALTRET(ALTRT);

  12360  1 000500   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000501   000003 471500                    LDP1    3,,PR0
         1 000502   200007 633500                    EPPR3   J,,AUTO
         1 000503   200030 453500                    STP3    FIT$+7,,AUTO
         1 000504   200013 634500                    EPPR4   BLK$,,AUTO
         1 000505   200027 454500                    STP4    FIT$+6,,AUTO
         1 000506   200026 451500                    STP1    FIT$+5,,AUTO
         1 000507   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000510   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000511   000000 701000 xent               TSX1    KQM$GETB
         1 000512   000524 702000 1                  TSX2    ALTRT

  12355  1 000513                       GOTIT        null
      436    12361    4   GOTIT:  ;
      437    12362    4           END;

      438    12363              %UNLOCK (G=KQ$MMSD.GATE);

  12364  1 000513   000000 236000 xsym               LDQ     KQ_MMSD$
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:54   
         1 000514   000006 036003                    ADLQ    6,DU
         1 000515   200026 756100                    STQ     FIT$+5,,AUTO
         1 000516   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000517   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000520   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000521   000000 011000                    NOP     0

      439    12366    3         RETURN;

  12366  1 000522   200022 221300                    LDX1  ! FIT$+1,,AUTO
         1 000523   000001 702211                    TSX2  ! 1,X1

  12366  1 000524                       ALTRT        null
      440    12367    3   ALTRT:;
      441    12368    3         ERRCODE=J;

  12368  1 000524   200007 235100                    LDA     J,,AUTO
         1 000525   200017 755100                    STA     ERRCODE,,AUTO

      442    12369              %UNLOCK (G=KQ$MMSD.GATE);

  12370  1 000526   000000 236000 xsym               LDQ     KQ_MMSD$
         1 000527   000006 036003                    ADLQ    6,DU
         1 000530   200026 756100                    STQ     FIT$+5,,AUTO
         1 000531   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000532   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000533   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000534   000000 011000                    NOP     0

      443    12372    3         ALTRETURN;

  12372  1 000535   200022 221300                    LDX1  ! FIT$+1,,AUTO
         1 000536   000000 702211                    TSX2  ! 0,X1

      444    12373    3   INITPG: PROC;

  12373  1 000537   200024 741300       INITPG       STX1  ! FIT$+3,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:55   

      445    12374                      /*  Init the page obtained by sticking a context block
      446    12375                          in it, and making it look like a block-allocation
      447    12376                          page for that 'comgroup' */
      448    12377
      449    12378                      /*  Return P$ = ADDR(CONTEXT BLOCK) */
      450    12379
      451    12380    4         CAP$->B$$PAGE='0'B;

  12380  1 000540   200011 470500                    LDP0    CAP$,,AUTO
         1 000541   010000 220003                    LDX0    4096,DU
         1 000542   000140 100400                    MLR     fill='000'O
         1 000543   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 000544   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      452    12381    4         CAP$->KQ$BAP=KQ_IBAP;

  12381  1 000545   200011 470500                    LDP0    CAP$,,AUTO
         1 000546   000100 100400                    MLR     fill='000'O
         1 000547   000000 000060 xsym               ADSC9   KQ_IBAP                  cn=0,n=48
         1 000550   000000 000060                    ADSC9   0,,PR0                   cn=0,n=48

      453    12382    4         CAP$->KQ$BAP.FREESIZE=1024-SIZEW(KQ$BAP)-SIZEW(K$CG);

  12382  1 000551   001476 235007                    LDA     830,DL
         1 000552   200011 470500                    LDP0    CAP$,,AUTO
         1 000553   000006 755100                    STA     6,,PR0

      454    12383    4         P$=PINCRW(CAP$,SIZEW(KQ$BAP));

  12383  1 000554   200011 236100                    LDQ     CAP$,,AUTO
         1 000555   000014 036003                    ADLQ    12,DU
         1 000556   200012 756100                    STQ     P$,,AUTO

      455    12384    4         BLK$=PINCRW(P$,SIZEW(K$CG));

  12384  1 000557   000266 036003                    ADLQ    182,DU
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:56   
         1 000560   200013 756100                    STQ     BLK$,,AUTO

      456    12385    4         P$->K$CG=KQ_ICG;

  12385  1 000561   200012 470500                    LDP0    P$,,AUTO
         1 000562   000100 100400                    MLR     fill='000'O
         1 000563   000000 001324 xsym               ADSC9   KQ_ICG                   cn=0,n=724
         1 000564   000000 001324                    ADSC9   0,,PR0                   cn=0,n=724

      457    12386    4         P$->K$CG.MMD.CURPG=1;

  12386  1 000565   000001 236007                    LDQ     1,DL
         1 000566   200012 470500                    LDP0    P$,,AUTO
         1 000567   000006 756100                    STQ     6,,PR0

      458    12387    4         P$->K$CG.AUCTL.MINPG=1;

  12387  1 000570   000001 221003                    LDX1    1,DU
         1 000571   200012 470500                    LDP0    P$,,AUTO
         1 000572   000131 741100                    STX1    89,,PR0

      459    12388    4         P$->K$CG.AUCTL.MAXPG=1000;

  12388  1 000573   001750 222003                    LDX2    1000,DU
         1 000574   000133 742100                    STX2    91,,PR0

      460    12389    4         P$->K$CG.MMD.MINBPG=1;

  12389  1 000575   000011 441100                    SXL1    9,,PR0

      461    12390    4         P$->K$CG.MMD.MAXBPG=1000;

  12390  1 000576   200012 470500                    LDP0    P$,,AUTO
         1 000577   000010 442100                    SXL2    8,,PR0

      462    12391    4         P$->K$CG.MMD.HEAD$=CAP$;

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:57   
  12391  1 000600   200011 236100                    LDQ     CAP$,,AUTO
         1 000601   200012 470500                    LDP0    P$,,AUTO
         1 000602   000003 756100                    STQ     3,,PR0

      463    12392    4         BLK$->KQ$FB.FLNK$=ADDR(NIL);

  12392  1 000603   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000604   200013 470500                    LDP0    BLK$,,AUTO
         1 000605   000000 756100                    STQ     0,,PR0

      464    12393    4         BLK$->KQ$FB.BLNK$=ADDR(NIL);

  12393  1 000606   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000607   200013 470500                    LDP0    BLK$,,AUTO
         1 000610   000001 756100                    STQ     1,,PR0

      465    12394    4         BLK$->KQ$FB.SIZE=CAP$->KQ$BAP.FREESIZE;

  12394  1 000611   200011 470500                    LDP0    CAP$,,AUTO
         1 000612   200013 471500                    LDP1    BLK$,,AUTO
         1 000613   000006 235100                    LDA     6,,PR0
         1 000614   100002 755100                    STA     2,,PR1

      466    12395    4         CAP$->KQ$BAP.CG$=P$;

  12395  1 000615   200012 236100                    LDQ     P$,,AUTO
         1 000616   200011 470500                    LDP0    CAP$,,AUTO
         1 000617   000013 756100                    STQ     11,,PR0

      467    12396    4         CAP$->KQ$BAP.JUHEAD$=BLK$;

  12396  1 000620   200013 236100                    LDQ     BLK$,,AUTO
         1 000621   000011 756100                    STQ     9,,PR0

      468    12397    4         CAP$->KQ$BAP.JUTAIL$=BLK$;

  12397  1 000622   200013 236100                    LDQ     BLK$,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:58   
         1 000623   200011 470500                    LDP0    CAP$,,AUTO
         1 000624   000012 756100                    STQ     10,,PR0

      469    12398    4         CAP$->KQ$BAP.HDR.SELF$=CAP$;

  12398  1 000625   200011 236100                    LDQ     CAP$,,AUTO
         1 000626   000002 756100                    STQ     2,,PR0

      470    12399    4         RETURN;

  12399  1 000627   200024 221300                    LDX1  ! FIT$+3,,AUTO
         1 000630   000001 702211                    TSX2  ! 1,X1

      471    12400    4   END INITPG;
      472    12401    3   END GET;
      473    12402    2   END GETCXT;
      474    12403        /****************************************************************
      475    12404        *****************************************************************/
      476    12405        /*D* NAME:         RELCXT
      477    12406             PURPOSE:      To release a CG context block
      478    12407             DESCRIPTION:  The block is released into the fake 'comgroup'
      479    12408                           pointed to by KQ$MMSD.CCXT$
      480    12409        */
      481    12410    1   RELCXT: PROC;

  12410  1 000631   200020 741300       RELCXT       STX1  ! ERRCODE+1,,AUTO

      482    12411    2         CALL KQM$RELB (KQ$MMSD.CCXT$->K$CG,CG$,SIZEW(K$CG));

  12411  1 000632   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000633   000002 471500                    LDP1    2,,PR0
         1 000634   000003 236000 2                  LDQ     3
         1 000635   200030 756100                    STQ     FIT$+7,,AUTO
         1 000636   200015 633500                    EPPR3   CG$,,AUTO
         1 000637   200027 453500                    STP3    FIT$+6,,AUTO
         1 000640   200026 451500                    STP1    FIT$+5,,AUTO
         1 000641   200026 630500                    EPPR0   FIT$+5,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:59   
         1 000642   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000643   000000 701000 xent               TSX1    KQM$RELB
         1 000644   000000 011000                    NOP     0

      483    12412    2         RETURN;

  12412  1 000645   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 000646   000001 702211                    TSX2  ! 1,X1

      484    12413    2   END RELCXT;
      485    12414        /****************************************************************
      486    12415        *****************************************************************/
      487    12416        /*D* NAME:         RELDSB
      488    12417             PURPOSE:      To release a CG descriptor segment block
      489    12418             DESCRIPTION:  Since we cache the comgroup's descriptor
      490    12419                           segment even when running slave CPUs,
      491    12420                           we cannot simply release the DSB.  If
      492    12421                           we did, then it might be immediately
      493    12422                           acquired by some other new comgroup and
      494    12423                           used.  This would be terrible if some
      495    12424                           other CPU was looking at the comgroup
      496    12425                           we're now shutting down, and then went
      497    12426                           on to look at the new one, because he
      498    12427                           would have the wrong descriptors in
      499    12428                           his cache (KCC$CLOCK is an example of
      500    12429                           a guy who might get drilled this way).
      501    12430
      502    12431                           The solution is to 'hide' the DSB instead
      503    12432                           of releasing it.  When the number of
      504    12433                           hidden ones gets too big to put up with
      505    12434                           (i.e. we're wasting a lot of memory on
      506    12435                           them), or when someone tries to get a
      507    12436                           DSB and cannot, we bring them out of
      508    12437                           hiding.  In order to do this, we must
      509    12438                           clear the cache of every running CPU.
      510    12439
      511    12440                           The buried DSBs are headed by KQ$MMSD.CRYPT$,
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:60   
      512    12441                           and the count is KQ$MMSD.CRYPTCNT.
      513    12442        */
      514    12443    1   RELDSB: PROC;

  12443  1 000647   200020 741300       RELDSB       STX1  ! ERRCODE+1,,AUTO

      515    12444        /**/
      516    12445                          /*    First strip the DSB of
      517    12446                           *    all its comgroup page table
      518    12447                           *    chunks.
      519    12448                           */
      520    12449    2         CALL MMQ$TRUNCDSBL (,DSB$->KQ$DSB,MMQERR) ALTRET(BADREL);

  12449  1 000650   200017 630500                    EPPR0   ERRCODE,,AUTO
         1 000651   200030 450500                    STP0    FIT$+7,,AUTO
         1 000652   200016 236100                    LDQ     DSB$,,AUTO
         1 000653   000001 235000 xsym               LDA     B_VECTNIL+1
         1 000654   200026 757100                    STAQ    FIT$+5,,AUTO
         1 000655   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000656   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000657   000000 701000 xent               TSX1    MMQ$TRUNCDSBL
         1 000660   000716 702000 1                  TSX2    BADREL

  12449  1 000661                       REL0         null
      521    12450    2   REL0: ;
      522    12451              %LOCK (G=KQ$MMSD.GATE);

  12452  1 000661   000000 236000 xsym               LDQ     KQ_MMSD$
         1 000662   000006 036003                    ADLQ    6,DU
         1 000663   200026 756100                    STQ     FIT$+5,,AUTO
         1 000664   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000665   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000666   000000 701000 xent               TSX1    HFC$LOCK
         1 000667   000000 011000                    NOP     0

      523    12454    2         DSB$->KQ$DSB.CRYPT.LNK$=KQ$MMSD.CRYPT$;

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:61   
  12454  1 000670   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000671   000004 236100                    LDQ     4,,PR0
         1 000672   200016 471500                    LDP1    DSB$,,AUTO
         1 000673   100000 756100                    STQ     0,,PR1

      524    12455    2         KQ$MMSD.CRYPT$=DSB$;

  12455  1 000674   200016 236100                    LDQ     DSB$,,AUTO
         1 000675   000004 756100                    STQ     4,,PR0

      525    12456    2         KQ$MMSD.CRYPTCNT=KQ$MMSD.CRYPTCNT+1;

  12456  1 000676   000005 235100                    LDA     5,,PR0
         1 000677   000001 035007                    ADLA    1,DL
         1 000700   000005 755100                    STA     5,,PR0

      526    12457    2         IF KQ$MMSD.CRYPTCNT >= %KQ_BDMAX# THEN

  12457  1 000701   000046 115007                    CMPA    38,DL
         1 000702   000705 602000 1                  TNC     s:12460

      527    12458    2          CALL DIGEMUP;

  12458  1 000703   000721 701000 1                  TSX1    DIGEMUP
         1 000704   000000 011000                    NOP     0

      528    12459              %UNLOCK (G=KQ$MMSD.GATE);

  12460  1 000705   000000 236000 xsym               LDQ     KQ_MMSD$
         1 000706   000006 036003                    ADLQ    6,DU
         1 000707   200026 756100                    STQ     FIT$+5,,AUTO
         1 000710   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000711   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000712   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000713   000000 011000                    NOP     0

      529    12462    2         RETURN;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:62   

  12462  1 000714   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 000715   000001 702211                    TSX2  ! 1,X1

  12457  1 000716                       BADREL       null
      530    12463    2   BADREL:;
      531    12464    2         CALL SC_BCGMMQ; /* See KQM$MM2 for extract */

  12464  1 000716   000000 713400 xsym               CLIMB   SC_BCGMMQ
         1 000717   000000 600000 xsid               climb   nvectors=         0

      532    12465    2         GOTO REL0;

  12465  1 000720   000661 710000 1                  TRA     REL0

      533    12466    2   END RELDSB;
      534    12467        /****************************************************************
      535    12468        *****************************************************************/
      536    12469        /*D* NAME:         DIGEMUP
      537    12470             PURPOSE:      To dig up all the buried DSBs
      538    12471             INPUT:        KQ$MMSD.GATE locked
      539    12472             DESCRIPTION:  Releases all the buried DSBs, and clears
      540    12473                           everyone's cache.
      541    12474
      542    12475                           Leaves gate locked.
      543    12476        */
      544    12477    1   DIGEMUP: PROC;

  12477  1 000721   200024 741300       DIGEMUP      STX1  ! FIT$+3,,AUTO

      545    12478        /**/
      546    12479    2         IF KQ$MMSD.CRYPTCNT = 0 THEN RETURN;

  12479  1 000722   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000723   000005 235100                    LDA     5,,PR0
         1 000724   000726 601000 1                  TNZ     s:12480

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:63   
  12479  1 000725   000001 702211                    TSX2  ! 1,X1

      547    12480    2         KQ_STATS.CRYPTOPN=KQ_STATS.CRYPTOPN+1;

  12480  1 000726   000007 054000 xsym               AOS     KQ_STATS+7

      548    12481    2         CALL HFC$CACHECLR;

  12481  1 000727   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000730   000000 701000 xent               TSX1    HFC$CACHECLR
         1 000731   000000 011000                    NOP     0

      549    12482    3           DO WHILE (KQ$MMSD.CRYPT$ ~= ADDR(NIL));

  12482  1 000732   000756 710000 1                  TRA     s:12487

      550    12483    3           DSB$=KQ$MMSD.CRYPT$;

  12483  1 000733   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000734   000004 236100                    LDQ     4,,PR0
         1 000735   200016 756100                    STQ     DSB$,,AUTO

      551    12484    3           KQ$MMSD.CRYPT$=DSB$->KQ$DSB.CRYPT.LNK$;

  12484  1 000736   200016 471500                    LDP1    DSB$,,AUTO
         1 000737   100000 236100                    LDQ     0,,PR1
         1 000740   000004 756100                    STQ     4,,PR0

      552    12485    3           KQ$MMSD.CRYPTCNT=KQ$MMSD.CRYPTCNT-1;

  12485  1 000741   000005 235100                    LDA     5,,PR0
         1 000742   000001 135007                    SBLA    1,DL
         1 000743   000005 755100                    STA     5,,PR0

      553    12486    3           CALL KQM$RELB (KQ$MMSD.DCXT$->K$CG,DSB$,SIZEW(KQ$DSB));

  12486  1 000744   000003 471500                    LDP1    3,,PR0
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:64   
         1 000745   000005 236000 2                  LDQ     5
         1 000746   200030 756100                    STQ     FIT$+7,,AUTO
         1 000747   200016 633500                    EPPR3   DSB$,,AUTO
         1 000750   200027 453500                    STP3    FIT$+6,,AUTO
         1 000751   200026 451500                    STP1    FIT$+5,,AUTO
         1 000752   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 000753   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000754   000000 701000 xent               TSX1    KQM$RELB
         1 000755   000000 011000                    NOP     0

      554    12487    3           END;

  12487  1 000756   000000 470400 xsym               LDP0    KQ_MMSD$
         1 000757   000004 236100                    LDQ     4,,PR0
         1 000760   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000761   000733 601000 1                  TNZ     s:12483

      555    12488    2         CALL MMQ$ZAPCPUS;

  12488  1 000762   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000763   000000 701000 xent               TSX1    MMQ$ZAPCPUS
         1 000764   000000 011000                    NOP     0

      556    12489    2         RETURN;

  12489  1 000765   200024 221300                    LDX1  ! FIT$+3,,AUTO
         1 000766   000001 702211                    TSX2  ! 1,X1

      557    12490    2   END DIGEMUP;
      558    12491        /****************************************************************
      559    12492        *****************************************************************/
      560    12493        /*D* NAME:         FINDACB
      561    12494             PURPOSE:      To find/setup the account block for a CG
      562    12495             DESCRIPTION:  B$JIT.DCB$ points to a DCB with the comgroup's
      563    12496                           account & SETX.  This is used to find the correct
      564    12497                           account block, or allocate a newie & merge in the
      565    12498                           correct info.  The use count in the ACB is incred
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:65   
      566    12499                           and its address stored in the CG context block
      567    12500                           pointed to by CG$.
      568    12501
      569    12502                           If a account block cannot be allocated, we ALTRET,
      570    12503                           with ERRCODE set.
      571    12504        */
      572    12505    1   FINDACB: PROC ALTRET;

  12505  1 000767   200020 741300       FINDACB      STX1  ! ERRCODE+1,,AUTO

      573    12506        /**/
      574    12507    2   DCL FIT$ PTR;
      575    12508        /**/
      576    12509    2         CALL LOCACB ALTRET(NEWACB);

  12509  1 000770   001215 701000 1                  TSX1    LOCACB
         1 000771   001007 702000 1                  TSX2    NEWACB

      577    12510    2         ACB$->KQ$ACB.USECNT=ACB$->KQ$ACB.USECNT+1;

  12510  1 000772   200014 470500                    LDP0    ACB$,,AUTO
         1 000773   000004 220100                    LDX0    4,,PR0
         1 000774   000001 621010                    EAX1    1,X0
         1 000775   000004 741100                    STX1    4,,PR0

  12510  1 000776                       DONE         null
      578    12511    2   DONE: ;
      579    12512    2         CG$->K$CG.ACB$=ACB$;

  12512  1 000776   200014 236100                    LDQ     ACB$,,AUTO
         1 000777   200015 470500                    LDP0    CG$,,AUTO
         1 001000   000221 756100                    STQ     145,,PR0

      580    12513              %UNLOCK (G=KQ_CGLGATE);

  12514  1 001001   000001 630400 2                  EPPR0   1
         1 001002   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:66   
         1 001003   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001004   000000 011000                    NOP     0

      581    12516    2         RETURN;

  12516  1 001005   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 001006   000001 702211                    TSX2  ! 1,X1

  12512  1 001007                       NEWACB       null
      582    12517    2   NEWACB:;
      583    12518                                /* Allocate a new one */
      584    12519    2         J=SIZEW(KQ$ACB);

  12519  1 001007   000010 235007                    LDA     8,DL
         1 001010   200007 755100                    STA     J,,AUTO

      585    12520    2         CALL KQM$GETB(KQ$MMSD.CCXT$->K$CG,ACB$,J) ALTRET(ALTRT);

  12520  1 001011   000000 470400 xsym               LDP0    KQ_MMSD$
         1 001012   000002 471500                    LDP1    2,,PR0
         1 001013   200007 633500                    EPPR3   J,,AUTO
         1 001014   200030 453500                    STP3    FIT$+7,,AUTO
         1 001015   200014 634500                    EPPR4   ACB$,,AUTO
         1 001016   200027 454500                    STP4    FIT$+6,,AUTO
         1 001017   200026 451500                    STP1    FIT$+5,,AUTO
         1 001020   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 001021   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001022   000000 701000 xent               TSX1    KQM$GETB
         1 001023   001205 702000 1                  TSX2    ALTRT

      586    12521    2         ACB$->KQ$ACB=ACB_INIT;

  12521  1 001024   200014 470500                    LDP0    ACB$,,AUTO
         1 001025   000100 100400                    MLR     fill='000'O
         1 001026   000002 000034 0                  ADSC9   ACB_INIT                 cn=0,n=28
         1 001027   000000 000034                    ADSC9   0,,PR0                   cn=0,n=28

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:67   
      587    12522    2         ACB$->KQ$ACB.FLNK$=KQ$MMSD.ACBHEAD$;

  12522  1 001030   000000 470400 xsym               LDP0    KQ_MMSD$
         1 001031   000000 236100                    LDQ     0,,PR0
         1 001032   200014 471500                    LDP1    ACB$,,AUTO
         1 001033   100000 756100                    STQ     0,,PR1

      588    12523    2         IF KQ$MMSD.ACBHEAD$ ~= ADDR(NIL) THEN

  12523  1 001034   000000 236100                    LDQ     0,,PR0
         1 001035   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001036   001042 600000 1                  TZE     s:12525

      589    12524    2          KQ$MMSD.ACBHEAD$->KQ$ACB.BLNK$=ACB$;

  12524  1 001037   000000 471500                    LDP1    0,,PR0
         1 001040   200014 236100                    LDQ     ACB$,,AUTO
         1 001041   100001 756100                    STQ     1,,PR1

      590    12525    2         KQ$MMSD.ACBHEAD$=ACB$;

  12525  1 001042   200014 236100                    LDQ     ACB$,,AUTO
         1 001043   000000 756100                    STQ     0,,PR0

      591    12526    2         ACB$->KQ$ACB.ACCT=B$JIT.DCB$->F$DCB.ACCT;

  12526  1 001044   000000 471400 xsym               LDP1    B$JIT$
         1 001045   100232 473500                    LDP3    154,,PR1
         1 001046   200014 474500                    LDP4    ACB$,,AUTO
         1 001047   300020 237100                    LDAQ    16,,PR3
         1 001050   400005 755100                    STA     5,,PR4
         1 001051   400006 756100                    STQ     6,,PR4

      592    12527    2         ACB$->KQ$ACB.SETX=B$JIT.DCB$->F$DCB.SETX;

  12527  1 001052   100232 473500                    LDP3    154,,PR1
         1 001053   300051 720100                    LXL0    41,,PR3
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:68   
         1 001054   200014 474500                    LDP4    ACB$,,AUTO
         1 001055   400004 440100                    SXL0    4,,PR4

      593    12528                           /* Get limits from FD FIT */
      594    12529              %UNLOCK (G=KQ_CGLGATE);

  12530  1 001056   000001 630400 2                  EPPR0   1
         1 001057   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001060   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001061   000000 011000                    NOP     0

      595    12532    2         B$JIT.DCB$->F$DCB.GTYP=FMGTFD;

  12532  1 001062   000000 470400 xsym               LDP0    B$JIT$
         1 001063   000232 471500                    LDP1    154,,PR0
         1 001064   100064 236100                    LDQ     52,,PR1
         1 001065   000006 376000 2                  ANQ     6
         1 001066   020000 276003                    ORQ     8192,DU
         1 001067   100064 756100                    STQ     52,,PR1

      596    12533    2         J=PINCRW(F$CFU$,B$JIT.DCB$->F$DCB.CFU$->FM$CFU.ACCTX)->FM$CFUA.FDFITSDA;

  12533  1 001070   000232 471500                    LDP1    154,,PR0
         1 001071   100066 473500                    LDP3    54,,PR1
         1 001072   300002 220100                    LDX0    2,,PR3
         1 001073   000000 474400 xsym               LDP4    F$CFU$
         1 001074   400004 235110                    LDA     4,X0,PR4
         1 001075   200007 755100                    STA     J,,AUTO

      597    12534    2         CALL FMD$REDBUFBC (FIT$,1,J,,0) ALTRET(NOREAD);

  12534  1 001076   000007 236000 2                  LDQ     7
         1 001077   200032 756100                    STQ     FIT$+9,,AUTO
         1 001100   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001101   200031 756100                    STQ     FIT$+8,,AUTO
         1 001102   200007 635500                    EPPR5   J,,AUTO
         1 001103   200030 455500                    STP5    FIT$+7,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:69   
         1 001104   000010 236000 2                  LDQ     8
         1 001105   200027 756100                    STQ     FIT$+6,,AUTO
         1 001106   200021 636500                    EPPR6   FIT$,,AUTO
         1 001107   200026 456500                    STP6    FIT$+5,,AUTO
         1 001110   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 001111   000023 631400 xsym               EPPR1   B_VECTNIL+19
         1 001112   000000 701000 xent               TSX1    FMD$REDBUFBC
         1 001113   001162 702000 1                  TSX2    NOREAD

      598    12535    2         FIT$=PINCRW(FIT$,SIZEW(FM$GRAN));

  12535  1 001114   200021 236100                    LDQ     FIT$,,AUTO
         1 001115   000005 036003                    ADLQ    5,DU
         1 001116   200021 756100                    STQ     FIT$,,AUTO

      599    12536    2         J=0;

  12536  1 001117   200007 450100                    STZ     J,,AUTO

      600    12537    2         CALL FMO$LOCCODP (FIT$,14) ALTRET(NOCODE);

  12537  1 001120   000012 236000 2                  LDQ     10
         1 001121   200027 756100                    STQ     FIT$+6,,AUTO
         1 001122   200021 630500                    EPPR0   FIT$,,AUTO
         1 001123   200026 450500                    STP0    FIT$+5,,AUTO
         1 001124   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 001125   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001126   000000 701000 xent               TSX1    FMO$LOCCODP
         1 001127   001135 702000 1                  TSX2    NOCODE

      601    12538    2         J=FIT$->CODE14.CGMEM*%CGMEMSIZ;

  12538  1 001130   200021 470500                    LDP0    FIT$,,AUTO
         1 001131   000001 236100                    LDQ     1,,PR0
         1 001132   000030 772000                    QRL     24
         1 001133   007770 376007                    ANQ     4088,DL
         1 001134   200007 756100                    STQ     J,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:70   

  12538  1 001135                       NOCODE       null
      602    12539    2   NOCODE:;
      603    12540    2         IF J = 0 THEN

  12540  1 001135   200007 235100                    LDA     J,,AUTO
         1 001136   001146 601000 1                  TNZ     s:12542

      604    12541    2          IF ACB$->KQ$ACB.ACCT = ':SYS' THEN J=100000;

  12541  1 001137   200014 470500                    LDP0    ACB$,,AUTO
         1 001140   040000 106500                    CMPC    fill='040'O
         1 001141   000005 000010                    ADSC9   5,,PR0                   cn=0,n=8
         1 001142   000012 000004 0                  ADSC9   ACB_INIT+8               cn=0,n=4
         1 001143   001146 601000 1                  TNZ     s:12542

  12541  1 001144   303240 236007                    LDQ     100000,DL
         1 001145   200007 756100                    STQ     J,,AUTO

      605    12542    2         CALL FMD$RELBUF(1);

  12542  1 001146   000010 630400 2                  EPPR0   8
         1 001147   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001150   000000 701000 xent               TSX1    FMD$RELBUF
         1 001151   000000 011000                    NOP     0

      606    12543              %LOCK (G=KQ_CGLGATE);

  12544  1 001152   000001 630400 2                  EPPR0   1
         1 001153   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001154   000000 701000 xent               TSX1    HFC$LOCK
         1 001155   000000 011000                    NOP     0

      607    12546    2         ACB$->KQ$ACB.CURPGLIM=J;

  12546  1 001156   200007 235100                    LDA     J,,AUTO
         1 001157   200014 470500                    LDP0    ACB$,,AUTO
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:71   
         1 001160   000003 755100                    STA     3,,PR0

      608    12547    2         GOTO DONE;

  12547  1 001161   000776 710000 1                  TRA     DONE

  12546  1 001162                       NOREAD       null
      609    12548    2   NOREAD:;
      610    12549    2         CALL FMD$RELBUF (1);

  12549  1 001162   000010 630400 2                  EPPR0   8
         1 001163   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001164   000000 701000 xent               TSX1    FMD$RELBUF
         1 001165   000000 011000                    NOP     0

      611    12550    2         CG$->K$CG.ACB$=ACB$;

  12550  1 001166   200014 236100                    LDQ     ACB$,,AUTO
         1 001167   200015 470500                    LDP0    CG$,,AUTO
         1 001170   000221 756100                    STQ     145,,PR0

      612    12551    2         CALL DECRACB; /* Get rid of the ACB */

  12551  1 001171   001271 701000 1                  TSX1    DECRACB
         1 001172   000000 011000                    NOP     0

      613    12552    2         CG$->K$CG.ACB$=ADDR(NIL);

  12552  1 001173   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001174   200015 470500                    LDP0    CG$,,AUTO
         1 001175   000221 756100                    STQ     145,,PR0

      614    12553    2         ERRCODE=B$JIT.ERR.CODE; /* From FMD$REDBUF */

  12553  1 001176   000000 471400 xsym               LDP1    B$JIT$
         1 001177   100012 236100                    LDQ     10,,PR1
         1 001200   000003 772000                    QRL     3
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:72   
         1 001201   037777 376007                    ANQ     16383,DL
         1 001202   200017 756100                    STQ     ERRCODE,,AUTO

      615    12554    2         ALTRETURN;

  12554  1 001203   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 001204   000000 702211                    TSX2  ! 0,X1

  12553  1 001205                       ALTRT        null
      616    12555    2   ALTRT: ;
      617    12556    2         ERRCODE=J;

  12556  1 001205   200007 235100                    LDA     J,,AUTO
         1 001206   200017 755100                    STA     ERRCODE,,AUTO

      618    12557              %UNLOCK (G=KQ_CGLGATE);

  12558  1 001207   000001 630400 2                  EPPR0   1
         1 001210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001211   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001212   000000 011000                    NOP     0

      619    12560    2         ALTRETURN;

  12560  1 001213   200020 221300                    LDX1  ! ERRCODE+1,,AUTO
         1 001214   000000 702211                    TSX2  ! 0,X1

      620    12561    2   END FINDACB;
      621    12562        /****************************************************************
      622    12563        *****************************************************************/
      623    12564        /*D* NAME:         LOCACB
      624    12565             PURPOSE:      To find an ACB
      625    12566             INPUT:        B$JIT.DCB$->F$DCB with desired ACCT & SETX
      626    12567             DESCRIPTION:  ALTRETs if not found, else RETURNs ACB$.  In both
      627    12568                           cases KQ_CGLGATE is locked.
      628    12569        */
      629    12570    1   LOCACB: PROC ALTRET;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:73   

  12570  1 001215   200022 741300       LOCACB       STX1  ! FIT$+1,,AUTO

  12570  1 001216                       AGANE        null
      630    12571        /**/
      631    12572    2   AGANE:;
      632    12573              %LOCK (G=KQ_CGLGATE);

  12574  1 001216   000001 630400 2                  EPPR0   1
         1 001217   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001220   000000 701000 xent               TSX1    HFC$LOCK
         1 001221   000000 011000                    NOP     0

      633    12576    2         ACB$=KQ$MMSD.ACBHEAD$;

  12576  1 001222   000000 470400 xsym               LDP0    KQ_MMSD$
         1 001223   000000 236100                    LDQ     0,,PR0
         1 001224   200014 756100                    STQ     ACB$,,AUTO

      634    12577    3           DO WHILE (ACB$ ~= ADDR(NIL));

  12577  1 001225   001265 710000 1                  TRA     s:12590

      635    12578    3           IF  ACB$->KQ$ACB.ACCT = B$JIT.DCB$->F$DCB.ACCT

  12578  1 001226   000000 470400 xsym               LDP0    B$JIT$
         1 001227   000232 471500                    LDP1    154,,PR0
         1 001230   200014 473500                    LDP3    ACB$,,AUTO
         1 001231   040100 106500                    CMPC    fill='040'O
         1 001232   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8
         1 001233   100020 000010                    ADSC9   16,,PR1                  cn=0,n=8
         1 001234   001263 601000 1                  TNZ     s:12589
         1 001235   300004 236100                    LDQ     4,,PR3
         1 001236   100051 676100                    ERQ     41,,PR1
         1 001237   777777 376007                    ANQ     -1,DL
         1 001240   001263 601000 1                  TNZ     s:12589

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:74   
      636    12579    3           AND ACB$->KQ$ACB.SETX = B$JIT.DCB$->F$DCB.SETX THEN
      637    12580    4             DO;

      638    12581    4             IF ACB$->KQ$ACB.CURPGLIM >= 0 THEN RETURN;

  12581  1 001241   300003 235100                    LDA     3,,PR3
         1 001242   001245 604000 1                  TMI     s:12584

  12581  1 001243   200022 221300                    LDX1  ! FIT$+1,,AUTO
         1 001244   000001 702211                    TSX2  ! 1,X1

      639    12582                        /* Being initialized */
      640    12583                  %UNLOCK (G=KQ_CGLGATE);

  12584  1 001245   000001 630400 2                  EPPR0   1
         1 001246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001247   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001250   000000 011000                    NOP     0

      641    12586    4             CALL SSR$REG (%SS_SL,,1);

  12586  1 001251   000010 236000 2                  LDQ     8
         1 001252   200030 756100                    STQ     FIT$+7,,AUTO
         1 001253   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 001254   000014 235000 2                  LDA     12
         1 001255   200026 757100                    STAQ    FIT$+5,,AUTO
         1 001256   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 001257   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001260   000000 701000 xent               TSX1    SSR$REG
         1 001261   000000 011000                    NOP     0

      642    12587    4             GOTO AGANE;

  12587  1 001262   001216 710000 1                  TRA     AGANE

      643    12588    4             END;
      644    12589    3           ACB$=ACB$->KQ$ACB.FLNK$;
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:75   

  12589  1 001263   300000 236100                    LDQ     0,,PR3
         1 001264   200014 756100                    STQ     ACB$,,AUTO

      645    12590    3           END;

  12590  1 001265   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001266   001226 601000 1                  TNZ     s:12578

      646    12591    2         ALTRETURN;

  12591  1 001267   200022 221300                    LDX1  ! FIT$+1,,AUTO
         1 001270   000000 702211                    TSX2  ! 0,X1

      647    12592    2   END LOCACB;
      648    12593        /****************************************************************
      649    12594        *****************************************************************/
      650    12595        /*D* NAME:         DECRACB
      651    12596             PURPOSE:      To release a CG's use of its ACB
      652    12597             DESCRIPTION:  The CG's CURPG count is subtracted from CURPG
      653    12598                           in the ACB.  The ACB's USECNT is decremented.
      654    12599                           If USECNT hits zero, the ACB is released.
      655    12600        */
      656    12601    1   DECRACB: PROC;

  12601  1 001271   200022 741300       DECRACB      STX1  ! FIT$+1,,AUTO

      657    12602        /**/
      658    12603    2         ACB$=CG$->K$CG.ACB$;

  12603  1 001272   200015 470500                    LDP0    CG$,,AUTO
         1 001273   000221 236100                    LDQ     145,,PR0
         1 001274   200014 756100                    STQ     ACB$,,AUTO

      659    12604    2         IF ACB$ ~= ADDR(NIL) THEN

  12604  1 001275   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:76   
         1 001276   001361 600000 1                  TZE     s:12625

      660    12605    3           DO;

      661    12606                %LOCK (G=KQ_CGLGATE);

  12607  1 001277   000001 630400 2                  EPPR0   1
         1 001300   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001301   000000 701000 xent               TSX1    HFC$LOCK
         1 001302   000000 011000                    NOP     0

      662    12609    3           ACB$->KQ$ACB.CURPG=ACB$->KQ$ACB.CURPG-CG$->K$CG.MMD.CURPG;

  12609  1 001303   200015 470500                    LDP0    CG$,,AUTO
         1 001304   200014 471500                    LDP1    ACB$,,AUTO
         1 001305   100002 236100                    LDQ     2,,PR1
         1 001306   000006 136100                    SBLQ    6,,PR0
         1 001307   100002 756100                    STQ     2,,PR1

      663    12610    3           ACB$->KQ$ACB.USECNT=ACB$->KQ$ACB.USECNT-1;

  12610  1 001310   200014 470500                    LDP0    ACB$,,AUTO
         1 001311   000004 220100                    LDX0    4,,PR0
         1 001312   777777 621010                    EAX1    -1,X0
         1 001313   000004 741100                    STX1    4,,PR0

      664    12611    3           IF ACB$->KQ$ACB.USECNT = 0 THEN

  12611  1 001314   200014 470500                    LDP0    ACB$,,AUTO
         1 001315   000004 220100                    LDX0    4,,PR0
         1 001316   001355 601000 1                  TNZ     s:12622

      665    12612    4             DO;

      666    12613    4             IF ACB$->KQ$ACB.BLNK$ = ADDR(NIL) THEN

  12613  1 001317   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:77   
         1 001320   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001321   001326 601000 1                  TNZ     s:12615

      667    12614    4              KQ$MMSD.ACBHEAD$=ACB$->KQ$ACB.FLNK$;

  12614  1 001322   000000 236100                    LDQ     0,,PR0
         1 001323   000000 471400 xsym               LDP1    KQ_MMSD$
         1 001324   100000 756100                    STQ     0,,PR1
         1 001325   001331 710000 1                  TRA     s:12616

      668    12615    4             ELSE ACB$->KQ$ACB.BLNK$->KQ$ACB.FLNK$=ACB$->KQ$ACB.FLNK$;

  12615  1 001326   000001 471500                    LDP1    1,,PR0
         1 001327   000000 236100                    LDQ     0,,PR0
         1 001330   100000 756100                    STQ     0,,PR1

      669    12616    4             IF ACB$->KQ$ACB.FLNK$ ~= ADDR(NIL) THEN

  12616  1 001331   200014 470500                    LDP0    ACB$,,AUTO
         1 001332   000000 236100                    LDQ     0,,PR0
         1 001333   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001334   001340 600000 1                  TZE     s:12618

      670    12617    4              ACB$->KQ$ACB.FLNK$->KQ$ACB.BLNK$=ACB$->KQ$ACB.BLNK$;

  12617  1 001335   000000 471500                    LDP1    0,,PR0
         1 001336   000001 236100                    LDQ     1,,PR0
         1 001337   100001 756100                    STQ     1,,PR1

      671    12618    4             J=SIZEW(KQ$ACB);

  12618  1 001340   000010 235007                    LDA     8,DL
         1 001341   200007 755100                    STA     J,,AUTO

      672    12619    4             CALL KQM$RELB (KQ$MMSD.CCXT$->K$CG,ACB$,J);

  12619  1 001342   000000 470400 xsym               LDP0    KQ_MMSD$
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:78   
         1 001343   000002 471500                    LDP1    2,,PR0
         1 001344   200007 633500                    EPPR3   J,,AUTO
         1 001345   200030 453500                    STP3    FIT$+7,,AUTO
         1 001346   200014 634500                    EPPR4   ACB$,,AUTO
         1 001347   200027 454500                    STP4    FIT$+6,,AUTO
         1 001350   200026 451500                    STP1    FIT$+5,,AUTO
         1 001351   200026 630500                    EPPR0   FIT$+5,,AUTO
         1 001352   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 001353   000000 701000 xent               TSX1    KQM$RELB
         1 001354   000000 011000                    NOP     0

      673    12620    4             END;

      674    12621                %UNLOCK (G=KQ_CGLGATE);

  12622  1 001355   000001 630400 2                  EPPR0   1
         1 001356   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001357   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001360   000000 011000                    NOP     0

      675    12624    3           END;

      676    12625    2         RETURN;

  12625  1 001361   200022 221300                    LDX1  ! FIT$+1,,AUTO
         1 001362   000001 702211                    TSX2  ! 1,X1

E_CGCXT
 Sect OctLoc
   0     000   132115 021604                                                    ZM..

ACB_INIT
 Sect OctLoc
   0     002   000000 006014   000000 006014   000000 000000   777777 777777    ................
   0     006   000001 000000   040040 040040   040040 040040                    ....

(unnamed)
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:79   
 Sect OctLoc
   0     011   ****** ******   072123 131123                                    ....:SYS

(unnamed)
 Sect OctLoc
   2     000   000063 600000   000000 006000   000000 000266   000002 006000    .3..............
   2     004   000000 000066   000004 006000   743777 777777   000002 006000    ...6............
   2     010   000003 006000   000000 000016   000011 006000   000000 000031    ................
   2     014   000013 006000                                                    ....
      677    12626    2   END DECRACB;
      678    12627    1   END KQM$INIT;
      679    12628        %EOD;

PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:80   
--  Include file information  --

   SS_SCHED_C.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KQ_ERRORS_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  is referenced.
   KQM_MAC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQM$INIT.
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:81   

 **** Variables and constants ****

  ****  Section 000 RoData KQM$INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/d STRC(252)   r     1 ACB_INIT                   0-0-0/w STRC        r     1 E_CGCXT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @KQ$CG                     4-0-0/w PTR         r     1 @MEM$
    14-0-0/w PTR         r     1 ACB$                      13-0-0/w PTR         r     1 BLK$
    11-0-0/w PTR         r     1 CAP$                      15-0-0/w PTR         r     1 CG$
    16-0-0/w PTR         r     1 DSB$                      17-0-0/w UBIN        r     1 ERRCODE
    21-0-0/w PTR         r     1 FIT$                      10-0-0/w UBIN        r     1 HKP
     6-0-0/w UBIN        r     1 I                          7-0-0/w UBIN        r     1 J
    *0-0-0/d STRC(6516)  r     1 KQ$CG                     *0-0-0/w PTR         r     1 MEM$
    17-0-0/w UBIN        r     1 MMQERR                    *0-0-0/w UBIN        r     1 NEWLIM
    12-0-0/w PTR         r     1 P$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 F$CFU$
     0-0-0/w BIT (72)    r     1 KQ_CGLGATE                 0-0-0/d STRC(432)   r     1 KQ_IBAP
     0-0-0/d STRC(6516)  r     1 KQ_ICG                     0-0-0/d STRC(1944)  r     1 KQ_IDSB
     0-0-0/w PTR         r     1 KQ_MMSD$                   0-0-0/w STRC(288)   r     1 KQ_STATS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:82   
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(72)    r     1 B$$ASR                     0-0-0/w STRC(36864) r     1 B$$PAGE
     0-0-0/w STRC        r     1 B$$PTRR                    0-0-0/d STRC(7560)  r     1 B$JIT
     0-0-0/w STRC(288)   r     1 CODE14                     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(288)   r     1 FM$CFUA
     0-0-0/w STRC(180)   r     1 FM$GRAN                    0-0-0/d STRC(6516)  r     1 K$CG
     0-0-0/d STRC(252)   r     1 KQ$ACB                     0-0-0/d STRC(432)   r     1 KQ$BAP
     0-0-0/d STRC(1944)  r     1 KQ$DSB                     0-0-0/d STRC(108)   r     1 KQ$FB
     0-0-0/d STRC(288)   r     1 KQ$MMSD


   Procedure KQM$INIT requires 755 words for executable code.
   Procedure KQM$INIT requires 28 words of local(AUTO) storage.
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:83   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:84   
          MINI XREF LISTING

ACB$
     11138**DCL     12202>>ASSIGN  12510>>ASSIGN  12510>>ASSIGN  12512>>ASSIGN  12520<>CALL    12521>>ASSIGN
     12522>>ASSIGN  12524>>ASSIGN  12525>>ASSIGN  12526>>ASSIGN  12527>>ASSIGN  12541>>IF      12546>>ASSIGN
     12550>>ASSIGN  12576<<ASSIGN  12577>>DOWHILE 12578>>IF      12578>>IF      12581>>IF      12589<<ASSIGN
     12589>>ASSIGN  12603<<ASSIGN  12604>>IF      12609>>ASSIGN  12609>>ASSIGN  12610>>ASSIGN  12610>>ASSIGN
     12611>>IF      12613>>IF      12614>>ASSIGN  12615>>ASSIGN  12615>>ASSIGN  12616>>IF      12617>>ASSIGN
     12617>>ASSIGN  12619<>CALL
ACB_INIT
     11168**DCL     12521>>ASSIGN
ADDCG
     12244**PROC    12115--CALL
AGANE IN PROCEDURE LOCACB
     12570**LABEL   12587--GOTO
ALTRT IN PROCEDURE FINDACB
     12553**LABEL   12520--CALLALT
ALTRT IN PROCEDURE GET
     12366**LABEL   12337--CALLALT 12344--CALLALT 12351--CALLALT 12360--CALLALT
ALTRT IN PROCEDURE GETCXT
     12325**LABEL   12314--CALLALT 12324--CALLALT
B$$ASR.BASE
     10025**DCL     12113<<ASSIGN
B$$ASR.BOUND
     10021**DCL     12111<<ASSIGN
B$$PAGE
     10986**DCL     12380<<ASSIGN
B$$PTRR.COFF
     10990**DCL     12113>>ASSIGN
B$JIT.DCB$
     11088**DCL     12526>>ASSIGN  12527>>ASSIGN  12532>>ASSIGN  12533>>ASSIGN  12578>>IF      12578>>IF
B$JIT.ERR
     10998**DCL     12123<<ASSIGN
B$JIT.ERR.CODE
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:85   
     10999**DCL     12125<<ASSIGN  12553>>ASSIGN
B$JIT.ERR.MID
     10999**DCL     10999--REDEF
B$JIT$
     11208**DCL     10993--IMP-PTR 12123>>ASSIGN  12125>>ASSIGN  12526>>ASSIGN  12527>>ASSIGN  12532>>ASSIGN
     12533>>ASSIGN  12553>>ASSIGN  12578>>IF      12578>>IF
BADREL IN PROCEDURE RELDSB
     12457**LABEL   12449--CALLALT
BLK$
     11137**DCL     12315>>ASSIGN  12325>>ASSIGN  12351<>CALL    12356<>CALL    12360<>CALL    12384<<ASSIGN
     12392>>ASSIGN  12393>>ASSIGN  12394>>ASSIGN  12396>>ASSIGN  12397>>ASSIGN
CACHE
     12173**LABEL   12164--GOTO
CAP$
     11131**DCL     11132--REDEF   12337<>CALL    12344<>CALL    12380>>ASSIGN  12381>>ASSIGN  12382>>ASSIGN
     12383>>ASSIGN  12391>>ASSIGN  12394>>ASSIGN  12395>>ASSIGN  12396>>ASSIGN  12397>>ASSIGN  12398>>ASSIGN
     12398>>ASSIGN
CG$
     11139**DCL     12105>>ASSIGN  12108>>ASSIGN  12114>>CALL    12116>>ASSIGN  12149<<ASSIGN  12175<<ASSIGN
     12176>>DOWHILE 12177>>ASSIGN  12186<<ASSIGN  12186>>ASSIGN  12217<<ASSIGN  12218>>DOWHILE 12219>>IF
     12220>>CALL    12221<<ASSIGN  12221>>ASSIGN  12248>>ASSIGN  12249>>ASSIGN  12267>>IF      12269>>ASSIGN
     12274>>IF      12276>>ASSIGN  12315<<ASSIGN  12411<>CALL    12512>>ASSIGN  12550>>ASSIGN  12552>>ASSIGN
     12603>>ASSIGN  12609>>ASSIGN
CODE14.CGMEM
     11117**DCL     12538>>ASSIGN
DECRACB
     12601**PROC    12119--CALL    12150--CALL    12551--CALL
DIGEMUP
     12477**PROC    12359--CALL    12458--CALL
DONE IN PROCEDURE FINDACB
     12510**LABEL   12547--GOTO
DSB$
     11140**DCL     12108>>ASSIGN  12110>>ASSIGN  12111>>ASSIGN  12112>>ASSIGN  12113>>ASSIGN  12144<<ASSIGN
     12177<<ASSIGN  12178>>IF      12182>>ASSIGN  12182>>ASSIGN  12183>>ASSIGN  12183>>ASSIGN  12325<<ASSIGN
     12449>>CALL    12454>>ASSIGN  12455>>ASSIGN  12483<<ASSIGN  12484>>ASSIGN  12486<>CALL
DUN IN PROCEDURE ADDCG
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:86   
     12249**LABEL   12270--GOTO    12277--GOTO
ERRCODE
     11141**DCL     11142--REDEF   12124>>IF      12125>>ASSIGN  12368<<ASSIGN  12553<<ASSIGN  12556<<ASSIGN
E_CGCXT
     11150**DCL     12123>>ASSIGN
F$CFU$
     11209**DCL     12533>>ASSIGN
F$DCB.ACCT
      8649**DCL     12526>>ASSIGN  12578>>IF
F$DCB.ACTPOS
      8664**DCL      8664--REDEF
F$DCB.ARS
      8639**DCL      8639--REDEF
F$DCB.ATTR
      8657**DCL      8658--REDEF
F$DCB.BORROW
      8672**DCL      8672--REDEF    8672--REDEF    8672--REDEF
F$DCB.CFU$
      8673**DCL     12533>>ASSIGN
F$DCB.DCBNAME.L
      8686**DCL      8686--IMP-SIZ
F$DCB.EOMCHAR
      8643**DCL      8643--REDEF
F$DCB.FLDID
      8667**DCL      8667--REDEF
F$DCB.FORM$
      8661**DCL      8661--REDEF
F$DCB.FSECT
      8677**DCL      8677--REDEF
F$DCB.FSN
      8654**DCL      8654--REDEF    8654--REDEF    8655--REDEF
F$DCB.GTYP
      8668**DCL     12532<<ASSIGN
F$DCB.HEADER$
      8660**DCL      8660--REDEF
F$DCB.IXTNSIZE
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:87   
      8658**DCL      8658--REDEF
F$DCB.LASTSTA$
      8648**DCL      8648--REDEF
F$DCB.LVL
      8673**DCL      8673--REDEF
F$DCB.NAME.C
      8648**DCL      8648--REDEF
F$DCB.NOEOF
      8669**DCL      8669--REDEF
F$DCB.NRECS
      8659**DCL      8659--REDEF
F$DCB.NRECX
      8678**DCL      8678--REDEF
F$DCB.OHDR
      8670**DCL      8670--REDEF
F$DCB.ORG
      8653**DCL      8653--REDEF
F$DCB.PRECNO
      8676**DCL      8676--REDEF
F$DCB.RCSZ
      8681**DCL      8681--REDEF
F$DCB.RES
      8649**DCL      8649--REDEF
F$DCB.SETX
      8661**DCL      8661--REDEF   12527>>ASSIGN  12578>>IF
F$DCB.TAB$
      8660**DCL      8661--REDEF
F$DCB.TDA
      8675**DCL      8675--REDEF
F$DCB.WSN
      8650**DCL      8650--REDEF
FINDACB
     12505**PROC    12106--CALL
FIT$ IN PROCEDURE FINDACB
     12507**DCL     12534<>CALL    12535<<ASSIGN  12535>>ASSIGN  12537<>CALL    12538>>ASSIGN
FM$CFU.ACCTX
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:88   
     11097**DCL     11097--REDEF   12533>>ASSIGN
FM$CFUA.FDFITSDA
     11102**DCL     12533>>ASSIGN
FM$GRAN
     11108**DCL     12535--ASSIGN
FMD$REDBUFBC
     11191**DCL-ENT 12534--CALL
FMD$RELBUF
     11192**DCL-ENT 12542--CALL    12549--CALL
FMO$LOCCODP
     11193**DCL-ENT 12537--CALL
GET IN PROCEDURE GETCXT
     12329**PROC    12314--CALL    12324--CALL
GETCXT
     12312**PROC    12104--CALL
GETDSB IN PROCEDURE GETCXT
     12322**ENTRY   12107--CALL
GOTIT IN PROCEDURE GET
     12355**LABEL   12357--GOTO
HFC$CACHECLR
     11194**DCL-ENT 12481--CALL
HFC$LOCK
      2901**DCL-ENT 12246--CALL    12264--CALL    12331--CALL    12452--CALL    12544--CALL    12574--CALL
     12607--CALL
HFC$UNLOCK
      2901**DCL-ENT 12205--CALL    12252--CALL    12282--CALL    12364--CALL    12370--CALL    12460--CALL
     12514--CALL    12530--CALL    12558--CALL    12584--CALL    12622--CALL
HKP
     11130**DCL     12313<<ASSIGN  12323<<ASSIGN  12333>>IF      12348>>IF
I
     11128**DCL     12180<<DOINDEX 12182>>ASSIGN  12182>>ASSIGN  12183>>ASSIGN  12183>>ASSIGN
INITPG IN PROCEDURE GET
     12373**PROC    12338--CALL    12345--CALL
J
     11129**DCL     12163<<ASSIGN  12173<<ASSIGN  12181>>IF      12337<>CALL    12344<>CALL    12350<<ASSIGN
     12351<>CALL    12355<<ASSIGN  12356<>CALL    12360<>CALL    12368>>ASSIGN  12519<<ASSIGN  12520<>CALL
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:89   
     12533<<ASSIGN  12534<>CALL    12536<<ASSIGN  12538<<ASSIGN  12540>>IF      12541<<ASSIGN  12546>>ASSIGN
     12556>>ASSIGN  12618<<ASSIGN  12619<>CALL
K$CG
     10225**DCL     12105<<ASSIGN  12114<>CALL    12350--ASSIGN  12351<>CALL    12356<>CALL    12360<>CALL
     12382--ASSIGN  12384--ASSIGN  12385<<ASSIGN  12411<>CALL    12411--CALL    12486<>CALL    12520<>CALL
     12619<>CALL
K$CG.ACB$
     10754**DCL     12512<<ASSIGN  12550<<ASSIGN  12552<<ASSIGN  12603>>ASSIGN
K$CG.AUCTL.DVBYTE.REREAD
     10668**DCL     10669--REDEF
K$CG.AUCTL.MAXPG
     10665**DCL     12388<<ASSIGN
K$CG.AUCTL.MINPG
     10664**DCL     12387<<ASSIGN
K$CG.CLOCK
     10601**DCL     12219>>IF
K$CG.LNK$
     10589**DCL     12186>>ASSIGN  12221>>ASSIGN  12248<<ASSIGN  12269>>ASSIGN  12274>>IF      12276<<ASSIGN
     12276>>ASSIGN  12279>>ASSIGN
K$CG.MMD.CURPG
     10247**DCL     12386<<ASSIGN  12609>>ASSIGN
K$CG.MMD.DSB$
     10234**DCL     12108<<ASSIGN  12177>>ASSIGN  12220>>CALL
K$CG.MMD.HEAD$
     10238**DCL     12391<<ASSIGN
K$CG.MMD.MAXBPG
     10253**DCL     12390<<ASSIGN
K$CG.MMD.MINBPG
     10265**DCL     12389<<ASSIGN
KQ$ACB
     10193**DCL     12519--ASSIGN  12521<<ASSIGN  12618--ASSIGN
KQ$ACB.ACCT
     10207**DCL     12526<<ASSIGN  12541>>IF      12578>>IF
KQ$ACB.BLNK$
     10196**DCL     12524<<ASSIGN  12613>>IF      12615>>ASSIGN  12617<<ASSIGN  12617>>ASSIGN
KQ$ACB.CURPG
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:90   
     10198**DCL     12609<<ASSIGN  12609>>ASSIGN
KQ$ACB.CURPGLIM
     10201**DCL     12202<<ASSIGN  12546<<ASSIGN  12581>>IF
KQ$ACB.FLNK$
     10194**DCL     12522<<ASSIGN  12589>>ASSIGN  12614>>ASSIGN  12615<<ASSIGN  12615>>ASSIGN  12616>>IF
     12617>>ASSIGN
KQ$ACB.SETX
     10205**DCL     12527<<ASSIGN  12578>>IF
KQ$ACB.USECNT
     10203**DCL     12510<<ASSIGN  12510>>ASSIGN  12610<<ASSIGN  12610>>ASSIGN  12611>>IF
KQ$BAP
     10104**DCL     12381<<ASSIGN  12382--ASSIGN  12383--ASSIGN
KQ$BAP.CG$
     10176**DCL     12395<<ASSIGN
KQ$BAP.FREESIZE
     10165**DCL     12382<<ASSIGN  12394>>ASSIGN
KQ$BAP.HDR.SELF$
     10155**DCL     12398<<ASSIGN
KQ$BAP.JUHEAD$
     10172**DCL     12396<<ASSIGN
KQ$BAP.JUTAIL$
     10174**DCL     12397<<ASSIGN
KQ$CG
      9288**DCL        30--PROC    12105>>ASSIGN  12140--ENTRY   12149--ASSIGN  12199--ENTRY
KQ$CG.AUCTL.DVBYTE.REREAD
      9731**DCL      9732--REDEF
KQ$CG.MMD.DSB$
      9297**DCL     12142>>IF      12144>>ASSIGN  12145<<ASSIGN
KQ$DSB
     10061**DCL     12110<<ASSIGN  12220<>CALL    12355--ASSIGN  12449<>CALL    12486--CALL
KQ$DSB.ASR
     10063**DCL     10072--REDEF   12111--ASSIGN  12113--ASSIGN
KQ$DSB.CRYPT.LNK$
     10075**DCL     12454<<ASSIGN  12484>>ASSIGN
KQ$DSB.DESC
     10079**DCL     12111--ASSIGN  12112--ASSIGN
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:91   
KQ$DSB.DESC.FLG
     10083**DCL     10084--REDEF   12182<<ASSIGN  12182>>ASSIGN  12183<<ASSIGN  12183>>ASSIGN
KQ$FB.BLNK$
     10042**DCL     12393<<ASSIGN
KQ$FB.FLNK$
     10040**DCL     12392<<ASSIGN
KQ$FB.SIZE
     10044**DCL     12394<<ASSIGN
KQ$MMSD.ACBHEAD$
     10963**DCL     12522>>ASSIGN  12523>>IF      12524>>ASSIGN  12525<<ASSIGN  12576>>ASSIGN  12614<<ASSIGN
KQ$MMSD.CCXT$
     10970**DCL     12335>>IF      12339<<ASSIGN  12351>>CALL    12411>>CALL    12520>>CALL    12619>>CALL
KQ$MMSD.CGHEAD$
     10967**DCL     12175>>ASSIGN  12217>>ASSIGN  12248>>ASSIGN  12249<<ASSIGN  12266>>ASSIGN  12269<<ASSIGN
KQ$MMSD.CRYPT$
     10979**DCL     12454>>ASSIGN  12455<<ASSIGN  12482>>DOWHILE 12483>>ASSIGN  12484<<ASSIGN
KQ$MMSD.CRYPTCNT
     10981**DCL     12456<<ASSIGN  12456>>ASSIGN  12457>>IF      12479>>IF      12485<<ASSIGN  12485>>ASSIGN
KQ$MMSD.DCXT$
     10975**DCL     12342>>IF      12346<<ASSIGN  12356>>CALL    12360>>CALL    12486>>CALL
KQ$MMSD.GATE
     10983**DCL     12331<>CALL    12364<>CALL    12370<>CALL    12452<>CALL    12460<>CALL
KQM$GETB
     11195**DCL-ENT 12351--CALL    12356--CALL    12360--CALL    12520--CALL
KQM$RELB
     11198**DCL-ENT 12411--CALL    12486--CALL    12619--CALL
KQX$LDASR
     11199**DCL-ENT 12114--CALL
KQ_CGLGATE
      3334**DCL     12205<>CALL    12246<>CALL    12252<>CALL    12264<>CALL    12282<>CALL    12514<>CALL
     12530<>CALL    12544<>CALL    12558<>CALL    12574<>CALL    12584<>CALL    12607<>CALL    12622<>CALL
KQ_IBAP
     11267**DCL     12381>>ASSIGN
KQ_ICG
     11358**DCL     12385>>ASSIGN
KQ_ICG.AUCTL.DVBYTE.REREAD
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:92   
     11801**DCL     11802--REDEF
KQ_IDSB
     11224**DCL     12110>>ASSIGN
KQ_IDSB.ASR
     11226**DCL     11235--REDEF
KQ_IDSB.DESC.FLG
     11246**DCL     11247--REDEF
KQ_IMBLK.DVE.EOMCHAR
      3997**DCL      3999--REDEF
KQ_IMBLK.KEY1
      3923**DCL      3925--REDEF
KQ_IMBLK.KEY2
      3932**DCL      3950--REDEF
KQ_IMBLK.LNK$
      3897**DCL      3899--REDEF    3905--REDEF    3909--REDEF
KQ_IMBLK.TYC
      4046**DCL      4048--REDEF
KQ_IMBLK.XSP.MREQ$
      3952**DCL      3956--REDEF
KQ_IRBLK.BUF$
      3501**DCL      3503--REDEF
KQ_IRBLK.CNACTD
      3415**DCL      3424--REDEF
KQ_IRBLK.DBLKX
      3521**DCL      3525--REDEF
KQ_IRBLK.EOFNONE
      3393**DCL      3396--REDEF
KQ_IRBLK.FROMQ
      3399**DCL      3402--REDEF
KQ_IRBLK.KEY1R
      3440**DCL      3441--REDEF
KQ_IRBLK.KEY2R
      3445**DCL      3446--REDEF
KQ_IRBLK.LATCH
      3388**DCL      3390--REDEF
KQ_IRBLK.LWRITES$
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:93   
      3532**DCL      3536--REDEF
KQ_IRBLKT.CNACTD
      3601**DCL      3610--REDEF
KQ_IRBLKT.DBLK$
      3664**DCL      3668--REDEF    3671--REDEF
KQ_IRBLKT.EOFNONE
      3579**DCL      3582--REDEF
KQ_IRBLKT.FROMQ
      3585**DCL      3588--REDEF
KQ_IRBLKT.KEY1R
      3626**DCL      3627--REDEF
KQ_IRBLKT.KEY2R
      3631**DCL      3632--REDEF
KQ_IRBLKT.LATCH
      3574**DCL      3576--REDEF
KQ_MMSD$
     11210**DCL     10962--IMP-PTR 12175>>ASSIGN  12217>>ASSIGN  12248>>ASSIGN  12249>>ASSIGN  12266>>ASSIGN
     12269>>ASSIGN  12331>>CALL    12335>>IF      12339>>ASSIGN  12342>>IF      12346>>ASSIGN  12351>>CALL
     12356>>CALL    12360>>CALL    12364>>CALL    12370>>CALL    12411>>CALL    12452>>CALL    12454>>ASSIGN
     12455>>ASSIGN  12456>>ASSIGN  12456>>ASSIGN  12457>>IF      12460>>CALL    12479>>IF      12482>>DOWHILE
     12483>>ASSIGN  12484>>ASSIGN  12485>>ASSIGN  12485>>ASSIGN  12486>>CALL    12520>>CALL    12522>>ASSIGN
     12523>>IF      12524>>ASSIGN  12525>>ASSIGN  12576>>ASSIGN  12614>>ASSIGN  12619>>CALL
KQ_STATS.CRYPTOPN
      3346**DCL     12480<<ASSIGN  12480>>ASSIGN
LOCACB
     12570**PROC    12201--CALL    12509--CALL
MEM$
     10012**DCL        30--PROC    10013--REDEF   12116<<ASSIGN  12199--ENTRY
MMQ$GCAP
     11201**DCL-ENT 12344--CALL
MMQ$GCCP
     11200**DCL-ENT 12337--CALL
MMQ$TRUNCDSB
     11202**DCL-ENT 12220--CALL
MMQ$TRUNCDSBL
     11203**DCL-ENT 12449--CALL
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:94   
MMQ$ZAPCPUS
     11204**DCL-ENT 12488--CALL
MMQERR
     11142**DCL     12220<>CALL    12449<>CALL
NEWACB IN PROCEDURE FINDACB
     12512**LABEL   12509--CALLALT
NEWLIM
     10013**DCL     12202>>ASSIGN
NOCODE IN PROCEDURE FINDACB
     12538**LABEL   12537--CALLALT
NOCXT
     12116**LABEL   12104--CALLALT
NOCXT0
     12116**LABEL   12107--CALLALT
NOCXT1
     12116**LABEL   12106--CALLALT
NOGOT IN PROCEDURE GET
     12355**LABEL   12356--CALLALT
NOREAD IN PROCEDURE FINDACB
     12546**LABEL   12534--CALLALT
NOUPDA
     12202**LABEL   12201--CALLALT
P$
     11136**DCL     12112<<ASSIGN  12113--ASSIGN  12266<<ASSIGN  12267>>IF      12273>>DOWHILE 12274>>IF
     12276>>ASSIGN  12279<<ASSIGN  12279>>ASSIGN  12339>>ASSIGN  12346>>ASSIGN  12383<<ASSIGN  12384>>ASSIGN
     12385>>ASSIGN  12386>>ASSIGN  12387>>ASSIGN  12388>>ASSIGN  12389>>ASSIGN  12390>>ASSIGN  12391>>ASSIGN
     12395>>ASSIGN
REL0 IN PROCEDURE RELDSB
     12449**LABEL   12465--GOTO
RELCXT
     12410**PROC    12121--CALL    12152--CALL
RELDSB
     12443**PROC    12146--CALL
REMCG IN PROCEDURE ADDCG
     12262**ENTRY   12151--CALL
SC_BCGMMQ
PL6.E3A0      #001=KQM$INIT File=KQM$MM.:E05TSI                                  WED 07/30/97 01:30 Page:95   
     11206**DCL-ENT 12464--CALL
SSR$REG
     11205**DCL-ENT 12586--CALL

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:96   
      680        1        /*T***********************************************************/
      681        2        /*T*                                                         */
      682        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      683        4        /*T*                                                         */
      684        5        /*T***********************************************************/
      685        6        KQM$GETP: PROC (KQ$CG,MEM$,ERRFLG) ALTRET;
      686        7        /**/
      687        8
      688        9
      689       10
      690       11        /**/
      691       12        /* INCLUDES */
      692       13        /**/
      693       14        %INCLUDE KQ_SUBS_C;
      694      314        %INCLUDE KQ_MAC_C;
      695     2864        %INCLUDE HF_LOCK_C;
      696     2878        %INCLUDE KQM_MAC_C;
      697     3251        %INCLUDE KC$CP6V_C;
      698     3371        %INCLUDE KQ_DATA_R;
      699     4203        %INCLUDE B$JIT_C;
      700     4517        %INCLUDE KQ_ERRORS_C;
      701     4565        %INCLUDE KC_CP6;
      702     5125        %INCLUDE UD_SEV_C;
      703     5139        %INCLUDE SS_SCHED_C;
      704     5372        %INCLUDE M_INFO_C;
      705     5512
      706     5513
      707     5514
      708     5515        /**/
      709     5516        /* MACROS */
      710     5517        /**/
      711     5518        %MACRO $ERROR (NAME=GORGO,CODE=0,SEV=SEV_ERROR#);
      712     5519        DCL 1 NAME CONSTANT ALIGNED,
      713     5520              2 * BIT(18) UNAL INIT('132115'O),
      714     5521              2 * UBIN(15) UNAL INIT(CODE),
      715     5522              2 * UBIN(3) UNAL INIT(SEV);
      716     5523        %MEND;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:97   
      717     5524
      718     5525
      719     5526
      720     5527        /**/
      721     5528        /* PARAMETERS */
      722     5529        /**/
      723     5530        %KQ_CG (FPTN=KQ$CG,STCLASS="");
      724     6269    1   DCL MEM$ PTR;
      725     6270    1   DCL ERRFLG UBIN WORD;
      726     6271
      727     6272
      728     6273
      729     6274        /**/
      730     6275        /* BASED STRUCTURES */
      731     6276        /**/
      732     6277        %KQ_FB   (FPTN=KQ$FB  ,STCLASS=BASED);
      733     6299    1   DCL 1 B$$PAGE BASED ALIGNED,
      734     6300    1         2 * CHAR(4096) UNAL;
      735     6301    1   DCL 1 F$CHAIN BASED ALIGNED,
      736     6302    1         2 HEAD$ PTR,
      737     6303    1         2 TAIL$ PTR;
      738     6304        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS=BASED,SUPR=1);
      739     6574        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS=BASED);
      740     6760        %KQ_MTYP (FPTN=KQ$MTYP,STCLASS=BASED);
      741     6834        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
      742     7173        %KQ_QTN  (FPTN=KQ$QTN ,STCLASS=BASED);
      743     7646        %KQ_BAP  (FPTN=KQ$BAP ,STCLASS="BASED(BAP$)");
      744     7735        %KQ_CG   (FPTN=K$CG   ,STCLASS=BASED);
      745     8474        %KQ_DSB  (FPTN=KQ$DSB ,STCLASS=BASED);
      746     8517        %KQ_ACB  (FPTN=KQ$ACB ,STCLASS=BASED);
      747     8547        %KQ_RBLK (FPTN=KQ$RBLKT,STCLASS=BASED,TERM=1);
      748     8733        %KQ_GRAN (FPTN=KQ$GRAN,STCLASS=BASED);
      749     8788        %KQ_DFRBLK (FPTN=KQ$DFRBLK,STCLASS=BASED);
      750     8838        %KQ_FP (FPTN=KQ$FP,STCLASS=BASED);
      751     8911        %KQ_MMSD (FPTN=KQ$MMSD,STCLASS="BASED(KQ_MMSD$)");
      752     8948        %B$JIT0;
      753     9037        %A$JIT6X;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:98   
      754     9040    1   DCL B$$PTR PTR BASED ALIGNED;
      755     9041
      756     9042
      757     9043
      758     9044        /**/
      759     9045        /* AUTO */
      760     9046        /**/
      761     9047    1   DCL JJ UBIN;
      762     9048    1   DCL J UBIN;
      763     9049    1   DCL PAGE$ PTR;
      764     9050    1   DCL I UBIN;
      765     9051    1   DCL BAP$ PTR;
      766     9052    1   DCL 1 BAP$R REDEF BAP$,
      767     9053    1         2 PG# UBIN(8) UNAL,
      768     9054    1         2 OTHER UBIN(16) UNAL,
      769     9055    1         2 SEGID UBIN(12) UNAL;
      770     9056    1   DCL BLK$ PTR;
      771     9057    1   DCL OFFSET SBIN WORD;
      772     9058    1   DCL OFFSETR REDEF OFFSET UBIN WORD;
      773     9059    1   DCL P$ PTR;
      774     9060    1   DCL CHAIN$ PTR;
      775     9061    1   DCL GSIZE UBIN WORD;
      776     9062    1   DCL MPRIO UBIN;
      777     9063    1   DCL REQTYP UBIN;
      778     9064    1   DCL ENTFLAG SBIN;
      779     9065    1   DCL MBLK$ PTR;
      780     9066    1   DCL STA$ PTR;
      781     9067
      782     9068
      783     9069
      784     9070        /**/
      785     9071        /* CONSTANT */
      786     9072        /**/
      787     9073        %KQ_STA  (FPTN=STA_INIT ,STCLASS=CONSTANT);
      788     9412        %KQ_QTN  (FPTN=QTN_INIT ,STCLASS=CONSTANT);
      789     9885        %$ERROR (NAME=E_CGCGMP,CODE=%E$CGCGMP);
      790     9891        %$ERROR (NAME=E_CGCGDB,CODE=%E$CGCGDB);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:99   
      791     9897
      792     9898
      793     9899
      794     9900        /**/
      795     9901        /* REFS */
      796     9902        /**/
      797     9903    1   DCL SC_BCGQRL ENTRY CONV(2,0);
      798     9904    1   DCL SC_BCGPRL ENTRY CONV(2,0);
      799     9905    1   DCL SC_BCGBAP ENTRY CONV(2,0);
      800     9906    1   DCL SC_CGBLTB ENTRY CONV(2,0);
      801     9907    1   DCL SC_DCGBRL ENTRY CONV(2,0);
      802     9908    1   DCL SC_BCGMMQ ENTRY CONV(2,0);
      803     9909    1   DCL SC_BCGMRQ ENTRY CONV(2,0);
      804     9910    1   DCL SC_BCGMRQS ENTRY CONV(2,0);
      805     9911    1   DCL FGH$UPDBUCKET ENTRY(4);
      806     9912    1   DCL KQL$SRQ      ENTRY(1) ALTRET;
      807     9913    1   DCL KQP$UNLOCK   ENTRY(1) ALTRET;
      808     9914    1   DCL KQS$GARB     ENTRY(1) ALTRET;
      809     9915    1   DCL KQS$GARBF    ENTRY(1) ALTRET;
      810     9916    1   DCL KQZ$LOG      ENTRY(8) ALTRET;
      811     9917    1   DCL MMQ$GCAP     ENTRY(3) ALTRET;
      812     9918    1   DCL MMQ$GCCP     ENTRY(3) ALTRET;
      813     9919    1   DCL MMQ$GCDP     ENTRY(3) ALTRET;
      814     9920    1   DCL MMQ$FCAP     ENTRY(3) ALTRET;
      815     9921    1   DCL MMQ$FCCP     ENTRY(3) ALTRET;
      816     9922    1   DCL MMQ$FCDP     ENTRY(3) ALTRET;
      817     9923    1   DCL MMQ$RECON    ENTRY(3) ALTRET;
      818     9924    1   DCL SSR$REG      ENTRY(3) ALTRET;
      819     9925    1   DCL SSR$RUE      ENTRY(4);
      820     9926    1   DCL SSS$SYSTIME  ENTRY(1);
      821     9927    1   DCL SSS$XSYSTIME ENTRY(2);
      822     9928    1   DCL B$JIT$ PTR SYMREF;
      823     9929    1   DCL KQ_MMSD$ PTR SYMREF READONLY;
      824     9930        %KQ_BAP (FPTN=KQ_IBAP,STCLASS=SYMREF);
      825    10019        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:100  
      826    10020        /*F* NAME:         KQM$GETP
      827    10021             PURPOSE:      To allocate a page for the comgroup contexted
      828    10022                           by KQ$CG
      829    10023             DESCRIPTION:  Used usually to allocate a disc cache page.
      830    10024                           Returns MEM$ pointing to the allocated page,
      831    10025                           else ALTRETs with ERRFLG set to
      832    10026                            E$CGMPLC          (KQ_ERRORS_C)
      833    10027                            E$CGCPLA          (KQ_ERRORS_C)
      834    10028                            E$CGADBLKMAX      (M_ERRORS_C)
      835    10029                            E$NOCGDBLK        (M_ERRORS_C)
      836    10030                            E$NOCGPP          (M_ERRORS_C)
      837    10031
      838    10032        KQM$GETP: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;   */
      839    10033        /**/
      840    10034    1         CALL GETPAGECG ALTRET(NOGET);
      841    10035    1   GETPEXIT:;
      842    10036              %UNLOCK (G=KQ$CG.MMD.GATE);
      843    10039    1         MEM$=PAGE$;
      844    10040    1         RETURN;
      845    10041    1   NOGET:;
      846    10042    1   ALTOUT:;
      847    10043              %UNLOCK (G=KQ$CG.MMD.GATE);
      848    10046    1         ALTRETURN;
      849    10047        /**/
      850    10048        /*F* NAME:         KQM$RECON
      851    10049             PURPOSE:      To call MMQ$RECON for KCO$INIT
      852    10050             INPUT:        KQ$CG     - context block
      853    10051                           MEM$      - old pointer to page
      854    10052             OUTPUT:       ERRFLG    - physical page number, unless ALTRET
      855    10053                                       in which case is error code
      856    10054             DESCRIPTION:  After performing comgroup-specific checks
      857    10055                           (e.g. account limit), we just call MMQ$RECON
      858    10056                           passing the appropriate parameters.  The purpose
      859    10057                           is to allocate a page and make MEM$ point to it
      860    10058                           thru the comgroup addressing logic.
      861    10059        */
      862    10060    1   KQM$RECON: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:101  
      863    10061        /**/
      864    10062    1         PAGE$=MEM$;
      865    10063    1         CALL GETPAGERECON ALTRET(NOGET);
      866    10064    1         GOTO GETPEXIT;
      867    10065        /**/
      868    10066        /*F* NAME:         KQM$RELP
      869    10067             PURPOSE:      To release a page for the comgroup contexted
      870    10068                           by KQ$CG.
      871    10069             DESCRIPTION:  MEM$ points to the page to release.  The appro-
      872    10070                           priate counters in the context block are adjusted
      873    10071                           and the page is released, unless this would drive
      874    10072                           CURPG < MINPG, in which case the page is retained
      875    10073                           on a special avail list.
      876    10074        */
      877    10075    1   KQM$RELP: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
      878    10076    1         PAGE$=MEM$;
      879    10077    1         CALL RELPAGECG;
      880    10078    1         RETURN;
      881    10079        /**/
      882    10080        /*F* NAME:         KQM$RELPF
      883    10081             PURPOSE:      To release a page for the comgroup contexted
      884    10082                           by KQ$CG.
      885    10083             DESCRIPTION:  Same as KQM$RELP except forces release by
      886    10084                           ignoring MINPG.
      887    10085        */
      888    10086    1   KQM$RELPF: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
      889    10087        /**/
      890    10088    1         PAGE$=MEM$;
      891    10089    1         CALL RELPAGECGF;
      892    10090    1         RETURN;
      893    10091        /**/
      894    10092        /*F* NAME:         KQM$GETDFR
      895    10093             PURPOSE:      To ajust NDFRBLKS when AUCTL.DFRBLKS changes
      896    10094             DESCRIPTION:  The number desired is in AUCTL.DFRBLKS; the
      897    10095                           number we have currently is in NDFRBLKS.
      898    10096                           This routine attempts to adjust the latter to
      899    10097                           the former.  This may fail because we need
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:102  
      900    10098                           more and cannot get them, which results in
      901    10099                           an ALTRET with B$JIT.ERR set, or because we
      902    10100                           want less but cannot release them because they
      903    10101                           are not free, which just causes us to quit.
      904    10102        */
      905    10103    1   KQM$GETDFR: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
      906    10104        /**/
      907    10105              %LOCK (G=KQ$CG.DTREE.GATE);
      908    10108    2           DO WHILE (KQ$CG.NDFRBLKS > KQ$CG.AUCTL.DEFERBLKS);
      909    10109    2           IF KQ$CG.DFRFREEHD$ = ADDR(NIL) THEN GOTO GETDFRX;
      910    10110    2           BLK$=KQ$CG.DFRFREEHD$;
      911    10111    2           KQ$CG.DFRFREEHD$=BLK$->KQ$DFRBLK.LNK$;
      912    10112    2           IF KQ$CG.DFRFREEHD$=ADDR(NIL)
      913    10113    2           THEN KQ$CG.DFRFREETL$=ADDR(NIL);
      914    10114    2           CALL KQM$RELB (KQ$CG,BLK$,SIZEW(KQ$DFRBLK));
      915    10115    2           KQ$CG.NDFRBLKS=KQ$CG.NDFRBLKS-1;
      916    10116    2           END;
      917    10117          /**/
      918    10118    2           DO WHILE (KQ$CG.NDFRBLKS < KQ$CG.AUCTL.DEFERBLKS);
      919    10119    2           GSIZE=SIZEW(KQ$DFRBLK);
      920    10120    2           CALL GETBLKP ALTRET(GETDFRFAIL);
      921    10121                %UNLOCK (G=KQ$CG.MMD.GATE);
      922    10124    2           BLK$->KQ$DFRBLK.LNK$=KQ$CG.DFRFREEHD$;
      923    10125    2           KQ$CG.DFRFREEHD$=BLK$;
      924    10126    2           IF KQ$CG.DFRFREETL$=ADDR(NIL)
      925    10127    2           THEN KQ$CG.DFRFREETL$=BLK$;
      926    10128    2           KQ$CG.NDFRBLKS=KQ$CG.NDFRBLKS+1;
      927    10129    2           END;
      928    10130    1   GETDFRX:;
      929    10131              %UNLOCK (G=KQ$CG.DTREE.GATE);
      930    10134    1         RETURN;
      931    10135    1   GETDFRFAIL:;
      932    10136              %UNLOCK (G=KQ$CG.MMD.GATE);
      933    10139              %UNLOCK (G=KQ$CG.DTREE.GATE);
      934    10142    1         B$JIT.ERR=E_CGCGDB;
      935    10143        /*E* ERROR:   KQM-E$CGCGDB-E
      936    10144             MESSAGE: Can't get defer blocks.
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:103  
      937    10145             MESSAGE1: The requested number of defer blocks cannot be
      938    10146                       obtained due to insufficient memory. */
      939    10147    1         ALTRETURN;
      940    10148        /**/
      941    10149        /*F* NAME:         KQM$GETMIN
      942    10150             PURPOSE:      To adjust CURPG when MINPG changes
      943    10151             DESCRIPTION:  Pages kept on the FREE list due to page releases
      944    10152                           below MINPG are released when MINPG gets decreased
      945    10153                           by the AU.
      946    10154
      947    10155                           Pages are aquired when MINPG increases; ALTRETs
      948    10156                           with JIT.ERR set if cannot get 'em.
      949    10157        */
      950    10158    1   KQM$GETMIN: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
      951    10159        /**/
      952    10160              %LOCK (G=KQ$CG.MMD.GATE);
      953    10163    1         IF KQ$CG.MMD.CURPG > KQ$CG.AUCTL.MINPG THEN
      954    10164    2           DO WHILE (KQ$CG.MMD.FREECNT > KQ$CG.AUCTL.MINPG);
      955    10165    3             DO INHIBIT;
      956    10166    3             CALL GETPAGECGNL;
      957    10167    3             CALL RELPAGECGNL;
      958    10168                  %LOCK (G=KQ$CG.MMD.GATE);
      959    10171    3             END;
      960    10172    2           END;
      961    10173    1         ELSE
      962    10174    2           DO WHILE (KQ$CG.MMD.CURPG < KQ$CG.AUCTL.MINPG);
      963    10175    2           CALL GETPAGECGM ALTRET(GETMINFAIL);
      964    10176    2           CALL RELPAGECGNL;
      965    10177                %LOCK (G=KQ$CG.MMD.GATE);
      966    10180    2           END;
      967    10181    1         GOTO GETOUT;
      968    10182    1   GETMINFAIL:;
      969    10183              %UNLOCK (G=KQ$CG.MMD.GATE);
      970    10186    1         B$JIT.ERR=E_CGCGMP;
      971    10187        /*E* ERROR:   KQM-E$CGCGMP-E
      972    10188             MESSAGE: Can't get MINPG pages for your COMGROUP
      973    10189             MESSAGE1: The requested minimum amount of memory for your
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:104  
      974    10190                       COMGROUP is not available. */
      975    10191    1         ALTRETURN;
      976    10192        /**/
      977    10193        /*F* NAME:         KQM$MOREPG
      978    10194             PURPOSE:      To make more pages available if reqd.
      979    10195             DESCRIPTION:  Called when the AU increases MAXBPG.  If anyone
      980    10196                           is blocked for memory, we release blocks of memory
      981    10197                           to them.
      982    10198        */
      983    10199    1   KQM$MOREPG: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */
      984    10200        /**/
      985    10201    1         CALL BASEREL;
      986    10202    2           DO WHILE (KQ$CG.MMD.STAHD$ ~= ADDR(NIL) OR KQ$CG.MMD.MBLKHD$ ~= ADDR(NIL));
      987    10203    2           I=1024-SIZEW(KQ$BAP);
      988    10204    2           CALL KQM$GETB (KQ$CG,P$,I) ALTRET(RTN);
      989    10205    2           I=1024-SIZEW(KQ$BAP);
      990    10206    2           CALL KQM$RELB (KQ$CG,P$,I);
      991    10207    2           CALL BASEREL;
      992    10208    2           END;
      993    10209    1   RTN:  RETURN;
      994    10210        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:105  
      995    10211        /**/
      996    10212        /*F* NAME:         KQM$GARBDONE
      997    10213             PURPOSE:      To signal the garbage collector's completion
      998    10214                           of a phase
      999    10215             DESCRIPTION:  If nobody is waiting for memory, resets the
     1000    10216                           GIP flag and ALTRETs, else if ERRFLG is 0
     1001    10217                           (he can try some more) RETURNs with GIP still
     1002    10218                           set, else gives errors to all waiting people
     1003    10219                           and RETURNs with GIP reset.
     1004    10220                           Called with no gates locked.
     1005    10221        */
     1006    10222    1   KQM$GARBDONE: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1007    10223        /**/
     1008    10224    1         CALL BASEREL;
     1009    10225              %LOCK (G=KQ$CG.MMD.GATE);
     1010    10228    1         IF  KQ$CG.MMD.STAHD$ = ADDR(NIL)
     1011    10229    1         AND KQ$CG.MMD.MBLKHD$ = ADDR(NIL) THEN
     1012    10230    2           DO;
     1013    10231    2           KQ$CG.MMD.GIP='0'B;
     1014    10232    2           KQ$CG.MMD.GFORCE='0'B;
     1015    10233    2           GOTO ALTOUT;
     1016    10234    2           END;
     1017    10235    1         IF ERRFLG = 0 THEN GOTO GETOUT;
     1018    10236        /**/
     1019    10237                      /* Give errors to everyone */
     1020    10238    2           DO WHILE (KQ$CG.MMD.STAHD$ ~= ADDR(NIL));
     1021    10239    2           STA$=KQ$CG.MMD.STAHD$;
     1022    10240    2           CALL UNBLOCKS (KQ$CG.MMD.STAHD$,ADDR(NIL));
     1023    10241                %LOCK (G=KQ$CG.MMD.GATE);
     1024    10244    2           END;
     1025    10245        /**/
     1026    10246    2           DO WHILE (KQ$CG.MMD.MBLKHD$ ~= ADDR(NIL));
     1027    10247    2           MBLK$=KQ$CG.MMD.MBLKHD$;
     1028    10248    2           CALL UNBLOCKM (KQ$CG.MMD.MBLKHD$,ADDR(NIL));
     1029    10249                %LOCK (G=KQ$CG.MMD.GATE);
     1030    10252    2           END;
     1031    10253    1         KQ$CG.MMD.GIP='0'B;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:106  
     1032    10254    1         GOTO GETOUT;
     1033    10255        /**/
     1034    10256        /*F* NAME:         KQM$SETBLK
     1035    10257             PURPOSE:      To initialize a just-obtained block of memory
     1036    10258             CALL:         KQM$SETBLK (KQ$CG,BLK$,REQTYP)
     1037    10259             DESCRIPTION:  BLK$ is the block, REQTYP is the type of block,
     1038    10260                           and the comgroup MMD gate is locked.  Sets up
     1039    10261                           the block and returns after unlocking the gate.
     1040    10262        */
     1041    10263    1   KQM$SETBLK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET; /* !!Doesn't ALTRET!! */
     1042    10264        /**/
     1043    10265    1         ENTFLAG=0;
     1044    10266    1         BLK$=MEM$;
     1045    10267    1         REQTYP=ERRFLG;
     1046    10268    2           DO CASE (REQTYP);
     1047    10269    2             CASE (KQMR_MBLK#);
     1048    10270    2               GOTO GOTMBLK;
     1049    10271    2             CASE (KQMR_RBLK#);
     1050    10272    2               GOTO GOTRBLK;
     1051    10273    2             CASE (KQMR_RBLKT#);
     1052    10274    2               GOTO GOTRBLKT;
     1053    10275    2             CASE (KQMR_STA#);
     1054    10276    2               GOTO GOTSTA;
     1055    10277    2             CASE (KQMR_TYP#);
     1056    10278    2               GOTO GOTTYP;
     1057    10279    2             CASE (ELSE);
     1058    10280    2               CALL SC_BCGMRQ;
     1059    10281    2           END;
     1060    10282        /****************************************************************
     1061    10283        *****************************************************************/
     1062    10284        /*D* NAME:         UNBLOCKS
     1063    10285             PURPOSE:      To 'unblock' a station waiting for memory
     1064    10286             INPUT:        Station gate unlocked
     1065    10287                           MM gate locked
     1066    10288                           MEM$ = buffer address to give him
     1067    10289             DESCRIPTION:  P$ is set to station's wait queue link.
     1068    10290                           Then the MM gate is unlocked.
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:107  
     1069    10291                           MEM$ is set into the station's MREQ$, and
     1070    10292                           MREQ is negated.
     1071    10293                           The station's lock count is decremented by
     1072    10294                           KQP$UNLOCK and the user (if any) is unblocked.
     1073    10295                           ALTRETs if station disappears.
     1074    10296        */
     1075    10297    1   UNBLOCKS: PROC (P$,MEM$) ALTRET;
     1076    10298        /**/
     1077    10299    2   DCL P$ PTR;
     1078    10300    2   DCL MEM$ PTR;
     1079    10301    2   DCL USR# UBIN BYTE UNAL;
     1080    10302    2   DCL I UBIN;
     1081    10303        /**/
     1082    10304    2         P$=STA$->KQ$STA.MREQ$;
     1083    10305    2         I=STA$->KQ$STA.MREQ;
     1084    10306    2         IF MEM$ ~= ADDR(NIL) THEN
     1085    10307    2          CALL KQM$SETBLK (KQ$CG,MEM$,I); /* Unlocks gate */
     1086    10308    2         ELSE
     1087    10309    3           DO;
     1088    10310                %UNLOCK (G=KQ$CG.MMD.GATE);
     1089    10313    3           END;
     1090    10314              %LOCK (G=STA$->KQ$STA.GATE);
     1091    10317    2         IF STA$->KQ$STA.MREQ <= 0 THEN CALL SC_BCGMRQ;
     1092    10318        /*S* SCREECH_CODE: KQM-S$BCGMRQ
     1093    10319             TYPE:         SCREECH
     1094    10320             MESSAGE:      COMGROUP memory request inconsistency
     1095    10321             REMARKS:      An inconsistency has been found in a delayed
     1096    10322                           memory request.  The system cannot continue.
     1097    10323        */
     1098    10324    2         STA$->KQ$STA.MREQ=-STA$->KQ$STA.MREQ;
     1099    10325    2         STA$->KQ$STA.MREQ$=MEM$;
     1100    10326    2         USR#=STA$->KQ$STA.USR#;
     1101    10327              %UNLOCK (G=STA$->KQ$STA.GATE);
     1102    10330    2         CALL KQP$UNLOCK (STA$->KQ$STA) ALTRET(ALTRT);
     1103    10331    2         IF USR# ~= 0 THEN CALL SSR$RUE (%SS_UQA,USR#);
     1104    10332    2         RETURN;
     1105    10333    2   ALTRT:ALTRETURN;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:108  
     1106    10334        /*D* NAME:         UNBLOCKM
     1107    10335             PURPOSE:      To 'unblock' a super MBLK waiting for memory
     1108    10336             DESCRIPTION:  P$ is set to its wait queue link.
     1109    10337                           MREQ is reset and MEM$ set into MREQ$.
     1110    10338        */
     1111    10339    2   UNBLOCKM: ENTRY (P$,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
     1112    10340        /**/
     1113    10341    2         P$=MBLK$->KQ$MBLK.XSP.MREQ$;
     1114    10342    2         IF MBLK$->KQ$MBLK.STATE ~= KQSS_NMEM#
     1115    10343    2         OR MBLK$->KQ$MBLK.MREQ <= 0 THEN CALL SC_BCGMRQ;
     1116    10344    2         MBLK$->KQ$MBLK.XSP.MREQ$=MEM$;
     1117    10345    2         MBLK$->KQ$MBLK.MREQ=-MBLK$->KQ$MBLK.MREQ;
     1118    10346              %UNLOCK (G=KQ$CG.MMD.GATE);
     1119    10349    2         CALL KQL$SRQ (MBLK$->KQ$MBLK);
     1120    10350    2         RETURN;
     1121    10351    2   END UNBLOCKS;
     1122    10352        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:109  
     1123    10353        /*F* NAME:         KQM$GETBR
     1124    10354             PURPOSE:      To reg for memory
     1125    10355             INPUT:        MEM$ station block pointer of caller
     1126    10356                           ERRFLAG memory request type (KQMR_XXXX#)
     1127    10357             OUTPUT:       If return, MEM$ = buffer
     1128    10358                           If ALTRET, MEM$ = ADDR(NIL) (comgroup is full)
     1129    10359             DESCRIPTION:  Must be called on behalf of a user.  The user
     1130    10360                           is REGd if necessary to let the garbage collector
     1131    10361                           run, and unblocked when memory is available or
     1132    10362                           when the garbage collector fails.
     1133    10363        */
     1134    10364    1   KQM$GETBR: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1135    10365        /**/
     1136    10366    1         ENTFLAG=1;
     1137    10367    1         GOTO GBS;
     1138    10368        /**/
     1139    10369        /*F* NAME:         KQM$GETBD
     1140    10370             PURPOSE:      To delay for memory
     1141    10371             DESCRIPTION:  Like KQM$GETBR but there is no user to REG.
     1142    10372                           Instead, the ALTRET indicates there is no
     1143    10373                           memory now available and that the station has
     1144    10374                           been placed on the wait list.  When the request
     1145    10375                           completes, KQ$STA.MREQ will be set to minus the
     1146    10376                           request type code passed in, and KQ$STA.MREQ$
     1147    10377                           will be set to ADDR(NIL) if none available, or
     1148    10378                           the buffer address else.  The station lock count
     1149    10379                           is incremented while the station is on the wait
     1150    10380                           list (which delays disconnect/close).
     1151    10381        */
     1152    10382    1   KQM$GETBD: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1153    10383        /**/
     1154    10384    1         ENTFLAG=2;
     1155    10385    1   GBS:  STA$=MEM$;
     1156    10386              %LOCK (G=STA$->KQ$STA.GATE);
     1157    10389    1         REQTYP=ERRFLG;
     1158    10390    1         GOTO GETB;
     1159    10391        /**/
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:110  
     1160    10392        /*F* NAME:         KQM$GETBM
     1161    10393             PURPOSE:      To set a super MBLK's request for memory
     1162    10394             DESCRIPTION:  Like KQM$GETBD except the requestor is a super
     1163    10395                           MBLK (i.e. KQL$XXFIND).  If the requested block
     1164    10396                           is available, then RETURN, else the MBLK is put
     1165    10397                           on the super MBLK wait list, and 'unblocked'
     1166    10398                           when the request completes.
     1167    10399                           KQ$SUPERMBLK.MREQ indicates request in progress,
     1168    10400                           and KQ$SUPERMBLK.MREQ$ is set when complete to
     1169    10401                           a buffer address, or ADDR(NIL) if none.
     1170    10402                           MEM$ is passed in as the super MBLK address.
     1171    10403        */
     1172    10404    1   KQM$GETBM: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1173    10405        /**/
     1174    10406    1         REQTYP=ERRFLG;
     1175    10407    1         ENTFLAG=-1;
     1176    10408    1         GOTO GETB;
     1177    10409        /**/
     1178    10410        /*F* NAME:         KQM$GETB
     1179    10411             PURPOSE:      To allocate a block of memory for the CG contexted
     1180    10412                           by KQ$CG
     1181    10413             DESCRPTION:   Returns with MEM$ pointing to an allocated block
     1182    10414                           of size ERRFLG words, else ALTRETs and sets
     1183    10415                           ERRFLG.  Does not kick the garbage collector.
     1184    10416        */
     1185    10417    1   KQM$GETB: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1186    10418    1         ENTFLAG=0;
     1187    10419    1         REQTYP=KQMR_ANY#;
     1188    10420    1         GSIZE=ERRFLG;
     1189    10421    1         GOTO GETB;
     1190    10422        /**/
     1191    10423        /*F* NAME:         KQM$GETBK
     1192    10424             PURPOSE:      To allocate a block of memory for the CG contexted
     1193    10425                           by KQ$CG
     1194    10426             DESCRIPTION:  Same as KQM$GETB but kicks the garbage collector
     1195    10427                           before ALTRETing.
     1196    10428        */
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:111  
     1197    10429    1   KQM$GETBK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1198    10430    1         ENTFLAG=0;
     1199    10431    1         REQTYP=KQMR_ANYK#;
     1200    10432    1         GSIZE=ERRFLG;
     1201    10433    1         GOTO GETB;
     1202    10434        /**/
     1203    10435        /*F* NAME:         KQM$GETMTYP
     1204    10436             PURPOSE:      To allocate an MTYP blk to the CG contexted by KQ$CG
     1205    10437             DESCRIPTION:  Returns with MEM$ pointing to the allocated MTYP blk,
     1206    10438                           else ALTRETs with standard ERRFLG.
     1207    10439                           The block is set to inited values, except:
     1208    10440                            MPRIO             set from KQ$CG.AUCTL.TYPPRIO
     1209    10441                           (if QISS = 0)
     1210    10442                            QTN.MPRIO         set from KQ$CG.AUCTL.TYPPRIO
     1211    10443                            QTN.MXACT         set from KQ$CG.AUCTL.MXACT
     1212    10444                            QTN.AUTORCVR      set from KQ$CG.AUCTL.AUTORCVR
     1213    10445        */
     1214    10446    1   KQM$GETMTYP: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1215    10447    1         ENTFLAG=0;
     1216    10448    1         REQTYP=KQMR_TYP#;
     1217    10449    1         GOTO GETB;
     1218    10450        /**/
     1219    10451        /*F* NAME:         KQM$GETRBLK
     1220    10452             PURPOSE:      To allocate a DCB RBLK for the CG contexted by KQ$CG
     1221    10453             DESCRIPTION:  Returns with MEM$ pointing to the allocated RBLK,
     1222    10454                           else ALTRETs with standard ERRFLG.
     1223    10455        */
     1224    10456    1   KQM$GETRBLK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1225    10457    1         ENTFLAG=0;
     1226    10458    1         REQTYP=KQMR_RBLK#;
     1227    10459    1         GOTO GETB;
     1228    10460        /**/
     1229    10461        /*F* NAME:         KQM$GETRBLKT
     1230    10462             PURPOSE:      To get an RBLK for a TERMINAL
     1231    10463             DESCRIPTION:  Same as KQM$GETRBLK, but gets a shorter one
     1232    10464        */
     1233    10465    1   KQM$GETRBLKT: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:112  
     1234    10466    1         ENTFLAG=0;
     1235    10467    1         REQTYP=KQMR_RBLKT#;
     1236    10468    1         GOTO GETB;
     1237    10469        /**/
     1238    10470        /*F* NAME:         KQM$GETSTA
     1239    10471             PURPOSE:      To allocate a STA blk to the CG contexted by KQ$CG
     1240    10472             DESCRIPTION:  Returns with MEM$ pointing to the allocated STA blk,
     1241    10473                           else ALTRETs with standard ERRFLG.
     1242    10474                           The block is set to inited values, except:
     1243    10475                            MPRIO             set from KQ$CG.AUCTL.STAPRIO
     1244    10476                            CG$               set to context blk address
     1245    10477                           (if QISS = 1)
     1246    10478                            QTN.MPRIO         set from KQ$CG.AUCTL.STAPRIO
     1247    10479                            QTN.MXACT         set from KQ$CG.AUCTL.MXACT
     1248    10480                            QTN.AUTORCVR      set from KQ$CG.AUCTL.AUTORCVR
     1249    10481        */
     1250    10482    1   KQM$GETSTA: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1251    10483    1         ENTFLAG=0;
     1252    10484    1         REQTYP=KQMR_STA#;
     1253    10485    1         GOTO GETB;
     1254    10486        /**/
     1255    10487        /*F* NAME:         KQM$GETMBLK
     1256    10488             PURPOSE:      To allocate an MBLK to the CG contexted by KQ$CG
     1257    10489             DESCRIPTION:  Returns with MEM$ pointing to the allocated MBLK,
     1258    10490                           else ALTRETs with standard ERRFLG.
     1259    10491        */
     1260    10492    1   KQM$GETMBLK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;
     1261    10493                           /* Fast path for MBLKs */
     1262    10494    1         GSIZE=SIZEW(KQ$MBLK);
     1263    10495    1         CALL GETBLK ALTRET(NOGET);
     1264    10496    1         ENTFLAG=0;
     1265    10497    1         GOTO GOTMBLK;
     1266    10498    1   GETB: ;
     1267    10499    2           DO CASE (REQTYP);
     1268    10500
     1269    10501    2             CASE (KQMR_MBLK#);
     1270    10502    2               GSIZE=SIZEW(KQ$MBLK);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:113  
     1271    10503    2               CALL GETBLK ALTRET(NOGOT);
     1272    10504    2   GOTMBLK:    BLK$->KQ$MBLK=KQ_IMBLK;
     1273    10505    2               CALL SSS$XSYSTIME (BLK$->KQ$MBLK.UTS,J);
     1274    10506    2               BLK$->KQ$MBLK.STAMP=J;
     1275    10507    2   GOTB:       MEM$=BLK$;
     1276    10508    2               IF ENTFLAG > 0 THEN
     1277    10509    3                 DO;
     1278    10510                      %UNLOCK (G=STA$->KQ$STA.GATE);
     1279    10513    3                 END;
     1280    10514                    %UNLOCK (G=KQ$CG.MMD.GATE);
     1281    10517    2               IF KQ_LOG.MM THEN
     1282    10518    2                CALL KQZ$LOG (KQ$CG,%KQLOG_MGET,0,REQTYP,0,MEM$,GSIZE);
     1283    10519    2               RETURN;
     1284    10520
     1285    10521    2             CASE (KQMR_RBLK#);
     1286    10522    2               GSIZE=SIZEW(KQ$RBLK);
     1287    10523    2               CALL GETBLK ALTRET(NOGOT);
     1288    10524    2   GOTRBLK:    BLK$->KQ$RBLK=KQ_IRBLK;
     1289    10525    2               GOTO GOTB;
     1290    10526
     1291    10527    2             CASE (KQMR_RBLKT#);
     1292    10528    2               GSIZE=SIZEW(KQ$RBLKT);
     1293    10529    2               CALL GETBLK ALTRET(NOGOT);
     1294    10530    2   GOTRBLKT:   BLK$->KQ$RBLKT=KQ_IRBLKT;
     1295    10531    2               GOTO GOTB;
     1296    10532
     1297    10533    2             CASE (KQMR_STA#);
     1298    10534    2               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$QTN);
     1299    10535    2               ELSE GSIZE=SIZEW(KQ$STA);
     1300    10536    2               CALL GETBLKP ALTRET(NOGOT);
     1301    10537    2   GOTSTA:     IF KQ$CG.QISS THEN
     1302    10538    2                BLK$->KQ$QTN=QTN_INIT;
     1303    10539    2               BLK$->KQ$STA=STA_INIT;
     1304    10540    2               BLK$->KQ$STA.CG$=ADDR(KQ$CG);
     1305    10541    2               BLK$->KQ$STA.MPRIO=KQ$CG.AUCTL.STAPRIO;
     1306    10542    2               IF KQ$CG.QISS THEN
     1307    10543    3                 DO;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:114  
     1308    10544    3                 MPRIO=BLK$->KQ$STA.MPRIO;
     1309    10545    3   GOTBQ:        BLK$->KQ$QTN.MPRIO=MPRIO;
     1310    10546    3                 BLK$->KQ$QTN.MXACT=KQ$CG.AUCTL.MXACT;
     1311    10547    3                 BLK$->KQ$QTN.AUTORCVR=KQ$CG.AUCTL.AUTORCVR;
     1312    10548    3                 END;
     1313    10549    2               GOTO GOTB;
     1314    10550
     1315    10551    2             CASE (KQMR_TYP#);
     1316    10552    2               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$MTYP);
     1317    10553    2               ELSE GSIZE=SIZEW(KQ$QTN);
     1318    10554    2               CALL GETBLKP ALTRET(NOGOT);
     1319    10555    2   GOTTYP:     IF NOT KQ$CG.QISS THEN BLK$->KQ$QTN=QTN_INIT;
     1320    10556    2               BLK$->KQ$MTYP=KQ_IMTYP;
     1321    10557    2               BLK$->KQ$MTYP.MPRIO=KQ$CG.AUCTL.TYPPRIO;
     1322    10558    2               IF KQ$CG.QISS THEN GOTO GOTB;
     1323    10559    2               MPRIO=BLK$->KQ$MTYP.MPRIO;
     1324    10560    2               GOTO GOTBQ;
     1325    10561
     1326    10562    2             CASE (KQMR_ANY#);
     1327    10563    2               CALL GETBLK ALTRET(NOGET);
     1328    10564    2               GOTO GOTB;
     1329    10565
     1330    10566    2             CASE (KQMR_ANYK#);
     1331    10567    2               CALL GETBLK ALTRET(GBKICK);
     1332    10568    2               GOTO GOTB;
     1333    10569    2   GBKICK:     CALL KQS$GARBF (KQ$CG); /* Unlocks MMD gate */
     1334    10570    2               ALTRETURN;
     1335    10571
     1336    10572    2             CASE (ELSE);
     1337    10573    2               CALL SC_BCGMRQ;
     1338    10574
     1339    10575    2           END;
     1340    10576
     1341    10577    1   NOGOT:;
     1342    10578    1         IF ENTFLAG = 0 THEN GOTO NOGET;
     1343    10579                           /* Delayable request */
     1344    10580    1         IF ENTFLAG > 0 THEN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:115  
     1345    10581    2           DO; /* Station request */
     1346    10582    2           IF STA$->KQ$STA.MREQ ~= 0 THEN CALL SC_BCGMRQ;
     1347    10583    2           STA$->KQ$STA.MREQ=REQTYP;
     1348    10584    2           IF ENTFLAG = 1 THEN
     1349    10585    2            IF STA$->KQ$STA.USR# = 0 THEN CALL SC_BCGMRQ; ELSE;
     1350    10586    2           ELSE IF STA$->KQ$STA.USR# ~= 0 THEN CALL SC_BCGMRQ;
     1351    10587    2           STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;
     1352    10588                %UNLOCK (G=STA$->KQ$STA.GATE);
     1353    10591    2           STA$->KQ$STA.MREQ$=KQ$CG.MMD.STAHD$;
     1354    10592    2           KQ$CG.MMD.STAHD$=STA$;
     1355    10593    2   NG0:    CALL KQS$GARB (KQ$CG); /* Unlocks gate */
     1356    10594    2           IF ENTFLAG = 2 /* KQM$GETBD */
     1357    10595    2           OR ENTFLAG < 0 /* KQM$GETBM */ THEN ALTRETURN;
     1358    10596    2           CALL SSR$REG (%SS_QA);
     1359    10597                %LOCK (G=STA$->KQ$STA.GATE);
     1360    10600    2           IF STA$->KQ$STA.MREQ >= 0 THEN CALL SC_BCGMRQ;
     1361    10601    2           STA$->KQ$STA.MREQ=0;
     1362    10602    2           MEM$=STA$->KQ$STA.MREQ$;
     1363    10603                %UNLOCK (G=STA$->KQ$STA.GATE);
     1364    10606    2           IF MEM$ = ADDR(NIL) THEN
     1365    10607    2            ALTRETURN;
     1366    10608    2           RETURN;
     1367    10609    2           END;
     1368    10610        /**/
     1369    10611                      /* MBLK request */
     1370    10612    1         MBLK$=MEM$;
     1371    10613    1         IF MBLK$->KQ$MBLK.MREQ ~= 0 THEN CALL SC_BCGMRQ;
     1372    10614    1         MBLK$->KQ$MBLK.MREQ=REQTYP;
     1373    10615    1         MBLK$->KQ$MBLK.XSP.MREQ$=KQ$CG.MMD.MBLKHD$;
     1374    10616    1         KQ$CG.MMD.MBLKHD$=MBLK$;
     1375    10617    1         GOTO NG0;
     1376    10618        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:116  
     1377    10619        /*
     1378    10620              GGG   EEEEE  TTTTT  BBBB   L      K   K
     1379    10621             G   G  E        T    B   B  L      K  K
     1380    10622             G      E        T    B   B  L      K K
     1381    10623             G      EEEE     T    BBBB   L      KK
     1382    10624             G  GG  E        T    B   B  L      K K
     1383    10625             G   G  E        T    B   B  L      K  K
     1384    10626              GGG   EEEEE    T    BBBB   LLLLL  K   K
     1385    10627        */
     1386    10628        /*D* NAME:         GETBLK
     1387    10629             PURPOSE:      To allocate a block of memory
     1388    10630             DESCRIPTION:  Returns BLK$ pointing to a block of size GSIZE,
     1389    10631                           else ALTRETs with standard ERRFLG.
     1390    10632
     1391    10633                           The block allocation pages are chained off the
     1392    10634                           CG context block, each containing two chains
     1393    10635                           of free blocks.  One is sorted by address, and
     1394    10636                           all buddied up; the other is jumbled (this is
     1395    10637                           where releases go).
     1396    10638
     1397    10639                           Thus, the allocation algorithm looks at each
     1398    10640                           page at both chains (jumbled first), looking
     1399    10641                           for a first-fit block.  If one is found, it
     1400    10642                           shrinks the block and exits.  If no page has
     1401    10643                           a first-fit block, then for each page,
     1402    10644                           the jumbled list is merged in sorted order into
     1403    10645                           the ordered list, in the hope that this will
     1404    10646                           produce a buddying large enuff to get what we
     1405    10647                           want.  We quit as soon as we find one such.
     1406    10648                           Lastly, if this does not produce the required
     1407    10649                           space, another page is obtained if possible.
     1408    10650        */
     1409    10651        /**/
     1410    10652        /*D* NAME:         GETBLKP
     1411    10653             PURPOSE:      To allocate a 'permanent' block of memory
     1412    10654             DESCRIPTION:  Same as GETBLK, but the block we are getting is
     1413    10655                           expected to stay around a long time.  If the CG
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:117  
     1414    10656                           has > 10 block pages, then such blocks are allocated in
     1415    10657                           their own pages.  This helps us to release pages
     1416    10658                           when we want to, as it reduces that probability
     1417    10659                           of having pages with nothing useful but a few
     1418    10660                           'permanent' blocks in them.
     1419    10661
     1420    10662                           This is implemented via a separate BAP page chain
     1421    10663                           for 'perm' blocks.
     1422    10664        */
     1423    10665    1   GETBLKP: PROC ALTRET;
     1424    10666        /**/
     1425    10667    2   DCL PERM SBIN;
     1426    10668        /**/
     1427    10669    2         IF KQ$CG.MMD.CURBPG > 10
     1428    10670    2         OR KQ$CG.MMD.PHEAD$ ~= ADDR(NIL) THEN
     1429    10671    3           DO;
     1430    10672    3           PERM=1;
     1431    10673                %LOCK (G=KQ$CG.MMD.GATE);
     1432    10676    3   GB0:    BAP$=KQ$CG.MMD.PHEAD$;
     1433    10677    3           GOTO GB4;
     1434    10678    3           END;
     1435    10679        /**/
     1436    10680    2   GETBLK: ENTRY ALTRET;
     1437    10681        /**/
     1438    10682              %LOCK (G=KQ$CG.MMD.GATE);
     1439    10685    2         PERM=0;
     1440    10686    2   GB1:  BAP$=KQ$CG.MMD.HEAD$;
     1441    10687    2   GB4:  ;
     1442    10688                                /* FIRST-FIT LOOP */
     1443    10689    3           DO WHILE (BAP$ ~= ADDR(NIL));
     1444    10690    3           IF BAP$->KQ$BAP.FREESIZE > GSIZE THEN
     1445    10691    4             DO;
     1446    10692    4             CHAIN$=ADDR(BAP$->KQ$BAP.JUHEAD$);
     1447    10693    4             CALL DOCHAIN ALTRET(RTN);
     1448    10694    4             CHAIN$=ADDR(BAP$->KQ$BAP.ORHEAD$);
     1449    10695    4             CALL DOCHAIN ALTRET(RTN);
     1450    10696    4             END;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:118  
     1451    10697    3           BAP$=BAP$->KQ$BAP.FLNK$;
     1452    10698    3           END;
     1453    10699
     1454    10700
     1455    10701                                /* DIDN'T FIND ANY */
     1456    10702                                /* BUDDY UP EACH PAGE */
     1457    10703    2         IF PERM <= 0 THEN
     1458    10704    2          BAP$=KQ$CG.MMD.HEAD$;
     1459    10705    2         ELSE BAP$=KQ$CG.MMD.PHEAD$;
     1460    10706    3           DO WHILE (BAP$ ~= ADDR(NIL));
     1461    10707    3           CALL BUDDY ALTRET(RTN);
     1462    10708    3           BAP$=BAP$->KQ$BAP.FLNK$;
     1463    10709    3           END;
     1464    10710
     1465    10711                                /* NO SPACE AVAIL. GET ANOTHER PAGE */
     1466    10712    2         IF KQ$CG.MMD.CURBPG >= KQ$CG.MMD.MAXBPG THEN
     1467    10713    3           DO;
     1468    10714    3           ERRFLG=%E$CGMPLC;
     1469    10715    3   GB5:    IF PERM = 0 THEN
     1470    10716    4             DO;
     1471    10717    4             PERM=2; /* Try the PERM pages */
     1472    10718    4             GOTO GB0;
     1473    10719    4             END;
     1474    10720    3           ELSE IF PERM = 1 THEN
     1475    10721    4              DO;
     1476    10722    4              PERM=-1; /* Try the non-PERM pages */
     1477    10723    4              GOTO GB1;
     1478    10724    4              END;
     1479    10725    3           ALTRETURN;
     1480    10726    3           END;
     1481    10727    2         CALL GETPAGECGNL ALTRET(GB5);
     1482    10728    2         IF PERM > 0 THEN
     1483    10729    3           DO;
     1484    10730    3           KQ$CG.MMD.CURPPG=KQ$CG.MMD.CURPPG+1;
     1485    10731    3           IF KQ$CG.AUCTL.MEMWARNP THEN
     1486    10732    3            IF KQ$CG.AUCTL.MAXPG-(KQ$CG.MMD.CURPPG-1) = KQ$CG.AUCTL.MEMWARN THEN
     1487    10733    3             GOTO WARN;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:119  
     1488    10734    3            ELSE GOTO NOWARN;
     1489    10735    3           END;
     1490    10736    2         IF KQ$CG.MMD.MAXBPG-KQ$CG.MMD.CURBPG = KQ$CG.AUCTL.MEMWARN THEN
     1491    10737    3   WARN:   DO;
     1492    10738                %LOCK (G=KQ$CG.GATE.CG);
     1493    10741    3           KQ$CG.DELAY.MEMWARN='1'B;
     1494    10742    3           KQ$CG.BASEDELAY=KQ$CG.BASEDELAY+1;
     1495    10743    3           KQ_BASEDELAY=KQ_BASEDELAY+1;
     1496    10744                %UNLOCK (G=KQ$CG.GATE.CG);
     1497    10747    3           END;
     1498    10748    2   NOWARN:;
     1499    10749    2         KQ$CG.MMD.CURBPG=KQ$CG.MMD.CURBPG+1;
     1500    10750    2         BAP$=PAGE$;
     1501    10751    2         BAP$->KQ$BAP=KQ_IBAP;
     1502    10752    2         BAP$->KQ$BAP.HDR=KQ$CG.GRAN;
     1503    10753    2         BAP$->KQ$BAP.CG$=ADDR(KQ$CG);
     1504    10754    2         BAP$->KQ$BAP.HDR.SELF$=BAP$;
     1505    10755    2         BAP$->KQ$BAP.HDR.PTYP=%KQ_PTYP_BAP;
     1506    10756    2         BAP$->KQ$BAP.FREESIZE=1024-SIZEW(KQ$BAP);
     1507    10757    3           DO INHIBIT;
     1508    10758    3           IF PERM <= 0 THEN
     1509    10759    4             DO;
     1510    10760    4             BAP$->KQ$BAP.FLNK$=KQ$CG.MMD.HEAD$;
     1511    10761    4             KQ$CG.MMD.HEAD$=BAP$;
     1512    10762    4             END;
     1513    10763    3           ELSE
     1514    10764    4             DO;
     1515    10765    4             BAP$->KQ$BAP.FLNK$=KQ$CG.MMD.PHEAD$;
     1516    10766    4             KQ$CG.MMD.PHEAD$=BAP$;
     1517    10767    4             END;
     1518    10768    3           IF BAP$->KQ$BAP.FLNK$ ~= ADDR(NIL) THEN
     1519    10769    3            BAP$->KQ$BAP.FLNK$->KQ$BAP.BLNK$=BAP$;
     1520    10770    3           BLK$=PINCRW(BAP$,SIZEW(KQ$BAP));
     1521    10771    3           BLK$->KQ$FB.SIZE=BAP$->KQ$BAP.FREESIZE;
     1522    10772    3           CALL INSBLK ALTRET(RTN);
     1523    10773    3           CALL SC_CGBLTB;
     1524    10774        /*S* SCREECH_CODE: KQM-S$CGBLTB
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:120  
     1525    10775             TYPE:         SCREECH
     1526    10776             MESSAGE:      Request for too-big comgroup memory block
     1527    10777             REMARKS:      This SCREECH occurs when comgroup memory management
     1528    10778                           receives a request for a block of memory bigger
     1529    10779                           than the max possible (a bit smaller than a page).
     1530    10780                           This should never happen since the various types
     1531    10781                           of blocks (and their sizes) are known. */
     1532    10782    3           END; /*INHIBIT*/
     1533    10783    2   RTN:  ;
     1534    10784    2         RETURN;
     1535    10785    2   END GETBLKP;
     1536    10786        /****************************************************************
     1537    10787        *****************************************************************/
     1538    10788        /*D* NAME:         BUDDY
     1539    10789             PURPOSE:      To buddy up the blocks in a page
     1540    10790             DESCRIPTION:  The page is BAP$.  Its jumbled free chain is
     1541    10791                           merged into its ordered free chain (via INSBLK)
     1542    10792                           until
     1543    10793                                o a block of size GSIZE is thus created,
     1544    10794                                  in which case we ALTRET with BLK$ pointing
     1545    10795                                  to the allocated block
     1546    10796                           or   o the jumbled free chain is empty, in which
     1547    10797                                  case we RETURN.
     1548    10798        */
     1549    10799    1   BUDDY: PROC ALTRET;
     1550    10800        /**/
     1551    10801    3           DO WHILE (BAP$->KQ$BAP.JUHEAD$ ~= ADDR(NIL));
     1552    10802    4             DO INHIBIT;
     1553    10803    4             BLK$=BAP$->KQ$BAP.JUHEAD$;
     1554    10804    4             BAP$->KQ$BAP.JUHEAD$=BLK$->KQ$FB.FLNK$;
     1555    10805    4             IF BLK$->KQ$FB.FLNK$ ~= ADDR(NIL) THEN
     1556    10806    4              BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=ADDR(NIL);
     1557    10807    4             ELSE BAP$->KQ$BAP.JUTAIL$=ADDR(NIL);
     1558    10808    4             CALL INSBLK ALTRET(ALTRT);
     1559    10809    4             END; /*INHIBIT*/
     1560    10810    3           END;
     1561    10811    2         RETURN;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:121  
     1562    10812    2   ALTRT:;
     1563    10813    2         ALTRETURN;
     1564    10814    2   END BUDDY;
     1565    10815        /****************************************************************
     1566    10816        *****************************************************************/
     1567    10817        /**/
     1568    10818        /*D* NAME:         DOCHAIN
     1569    10819             PURPOSE:      To search a chain for first-fit
     1570    10820             DESCRIPTION:  CHAIN$ points to the ordered or jumbled HEAD$
     1571    10821                           pointer in KQ$BAP.  Searches that chain and
     1572    10822                           ALTRETs with allocation complete, or returns
     1573    10823                           if no space avail on that chain. */
     1574    10824    1   DOCHAIN: PROC ALTRET;
     1575    10825        /**/
     1576    10826    2   DCL P$ PTR;
     1577    10827        /**/
     1578    10828    3           DO INHIBIT;
     1579    10829    3           BLK$=CHAIN$->F$CHAIN.HEAD$;
     1580    10830    4             DO WHILE (BLK$ ~= ADDR(NIL));
     1581    10831    4             IF BLK$->KQ$FB.SIZE = GSIZE THEN
     1582    10832    5               DO;
     1583    10833    5   GB4:        ;
     1584    10834    5               IF BLK$->KQ$FB.BLNK$ = ADDR(NIL) THEN
     1585    10835    5                CHAIN$->F$CHAIN.HEAD$=BLK$->KQ$FB.FLNK$;
     1586    10836    5               ELSE BLK$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$->KQ$FB.FLNK$;
     1587    10837    5               IF BLK$->KQ$FB.FLNK$ = ADDR(NIL) THEN
     1588    10838    5                CHAIN$->F$CHAIN.TAIL$=BLK$->KQ$FB.BLNK$;
     1589    10839    5               ELSE BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=BLK$->KQ$FB.BLNK$;
     1590    10840    5   GETDONE:    ;
     1591    10841    5               BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE-GSIZE;
     1592    10842    5               ALTRETURN;
     1593    10843    5               END;
     1594    10844    4             ELSE IF BLK$->KQ$FB.SIZE >= GSIZE+SIZEW(KQ$FB) THEN
     1595    10845    5                DO;
     1596    10846    5   GB5:         ;
     1597    10847    5                BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE-GSIZE;
     1598    10848    5                BLK$=PINCRW(BLK$,BLK$->KQ$FB.SIZE);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:122  
     1599    10849    5                GOTO GETDONE;
     1600    10850    5                END;
     1601    10851    4             BLK$=BLK$->KQ$FB.FLNK$;
     1602    10852    4             END;
     1603    10853    3           RETURN;
     1604    10854    3           END; /*INHIBIT*/
     1605    10855        /*D* NAME:         INSBLK
     1606    10856             PURPOSE:      To insert the free block pointed to by BLK$
     1607    10857                           into the ordered free chain of the page pointed
     1608    10858                           to by BAP$, and then allocate from the buddied
     1609    10859                           result if any, if possible.  ALTRETs with BLK$
     1610    10860                           pointing to the allocated blk, else returns. */
     1611    10861    2   INSBLK: ENTRY ALTRET;
     1612    10862        /**/
     1613    10863    3           DO INHIBIT;
     1614    10864    3           I=BLK$->KQ$FB.SIZE;
     1615    10865    3           P$=BAP$->KQ$BAP.ORHEAD$;
     1616    10866    4   P$LOOP:   DO WHILE (P$ ~= ADDR(NIL));
     1617    10867    4             OFFSET=POFFW(BLK$,P$);
     1618    10868    4             IF OFFSET = -I THEN
     1619    10869    5               DO;
     1620    10870                                /* BLK$ on lowcore side of P$ */
     1621    10871    5               BLK$->KQ$FB=P$->KQ$FB;
     1622    10872    5               IF BLK$->KQ$FB.FLNK$ ~= ADDR(NIL) THEN
     1623    10873    5                BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=BLK$;
     1624    10874    5               ELSE BAP$->KQ$BAP.ORTAIL$=BLK$;
     1625    10875    5               IF BLK$->KQ$FB.BLNK$ ~= ADDR(NIL) THEN
     1626    10876    5                BLK$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$;
     1627    10877    5               ELSE BAP$->KQ$BAP.ORHEAD$=BLK$;
     1628    10878    5               BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE+I;
     1629    10879    5   GB6:        ;
     1630    10880    5               CHAIN$=ADDR(BAP$->KQ$BAP.ORHEAD$);
     1631    10881    5               IF BLK$->KQ$FB.SIZE = GSIZE THEN GOTO GB4;
     1632    10882    5               IF BLK$->KQ$FB.SIZE >= GSIZE+SIZEW(KQ$FB) THEN GOTO GB5;
     1633    10883    5               RETURN;
     1634    10884    5               END;
     1635    10885    4             ELSE IF OFFSETR = P$->KQ$FB.SIZE THEN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:123  
     1636    10886    5                DO;
     1637    10887                                /* BLK$ on hicore side of P$ */
     1638    10888    5                BLK$=P$;
     1639    10889    5                BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE+I;
     1640    10890    5                P$=BLK$->KQ$FB.FLNK$;
     1641    10891    5                IF PINCRW(BLK$,BLK$->KQ$FB.SIZE) = P$ THEN
     1642    10892    6                  DO;
     1643    10893                                /* Addition of BLK$ to P$ has now made
     1644    10894                                   the new P$ buddy to its flink, so
     1645    10895                                   coalesce them. */
     1646    10896    6                  BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE+P$->KQ$FB.SIZE;
     1647    10897    6                  BLK$->KQ$FB.FLNK$=P$->KQ$FB.FLNK$;
     1648    10898    6                  IF BLK$->KQ$FB.FLNK$ ~= ADDR(NIL) THEN
     1649    10899    6                   BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=BLK$;
     1650    10900    6                  ELSE BAP$->KQ$BAP.ORTAIL$=BLK$;
     1651    10901    6                  END;
     1652    10902    5                GOTO GB6;
     1653    10903    5                END;
     1654    10904    4              ELSE /* Not buddy on either side */
     1655    10905    4               IF OFFSET > 0 THEN
     1656    10906    5                 DO;
     1657    10907    5                 IF OFFSETR < P$->KQ$FB.SIZE THEN CALL SC_BCGBAP;
     1658    10908        /*S* SCREECH_CODE: KQM-S$BCGBAP
     1659    10909             TYPE:         SCREECH
     1660    10910             MESSAGE:      A comgroup block-allocation page has a bad free chain
     1661    10911             REMARKS:      This SCREECH occurs during the merge of the unordered
     1662    10912                           free chain into the ordered free chain of a specific
     1663    10913                           comgroup block-allocation page, when two free blocks
     1664    10914                           are discovered to overlap.  This is most likely to
     1665    10915                           be due to a bad block release, however, the SCREECH
     1666    10916                           occurs during allocation, not release, so it may
     1667    10917                           be rather difficult to discover who released the
     1668    10918                           block (or even which block is the bad one). */
     1669    10919                                /* Have not found insert place yet */
     1670    10920    5                 P$=P$->KQ$FB.FLNK$;
     1671    10921    5                 END;
     1672    10922    4               ELSE
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:124  
     1673    10923    5                 DO;
     1674    10924    5                 IF OFFSET > -I THEN CALL SC_BCGBAP;
     1675    10925                                /* Goes between P$ and his blink */
     1676    10926    5                 IF P$->KQ$FB.BLNK$ ~= ADDR(NIL) THEN
     1677    10927    6                   DO;
     1678    10928    6                   BLK$->KQ$FB.BLNK$=P$->KQ$FB.BLNK$;
     1679    10929    6                   P$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$;
     1680    10930    6                   END;
     1681    10931    5                 ELSE
     1682    10932    6                   DO;
     1683    10933    6                   BLK$->KQ$FB.BLNK$=ADDR(NIL);
     1684    10934    6                   BAP$->KQ$BAP.ORHEAD$=BLK$;
     1685    10935    6                   END;
     1686    10936    5                 BLK$->KQ$FB.FLNK$=P$;
     1687    10937    5                 P$->KQ$FB.BLNK$=BLK$;
     1688    10938    5                 RETURN;
     1689    10939    5                 END;
     1690    10940    4             END P$LOOP;
     1691    10941                                /* Goes at end */
     1692    10942    3           BLK$->KQ$FB.FLNK$=ADDR(NIL);
     1693    10943    3           BLK$->KQ$FB.BLNK$=BAP$->KQ$BAP.ORTAIL$;
     1694    10944    3           IF BLK$->KQ$FB.BLNK$ ~= ADDR(NIL) THEN
     1695    10945    3            BLK$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$;
     1696    10946    3           ELSE BAP$->KQ$BAP.ORHEAD$=BLK$;
     1697    10947    3           BAP$->KQ$BAP.ORTAIL$=BLK$;
     1698    10948    3           GOTO GB6; /* Covers newpage case */
     1699    10949    3           END; /*INHIBIT*/
     1700    10950    2   END DOCHAIN;
     1701    10951        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:125  
     1702    10952        /**/
     1703    10953        /*F* NAME:         KQM$RELSTA
     1704    10954             PURPOSE:      To release a STA blk for the CG contexted by KQ$CG
     1705    10955             DESCRIPTION:  MEM$ points to the STA blk to release.
     1706    10956        */
     1707    10957    1   KQM$RELSTA: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
     1708    10958    2           DO INHIBIT;
     1709    10959    2           IF KQ$CG.QISS THEN
     1710    10960    2            GSIZE=SIZEW(KQ$QTN);
     1711    10961    2           ELSE GSIZE=SIZEW(KQ$STA);
     1712    10962    2           GOTO RELBLK;
     1713    10963    2           END; /*INHIBIT*/
     1714    10964        /**/
     1715    10965        /*F* NAME:         KQM$RELB
     1716    10966             PURPOSE:      To release the block of memory for the CG contexted
     1717    10967                           by KQ$CG.
     1718    10968             DESCRIPTION:  The block is pointed to by MEM$, and is of size
     1719    10969                           ERRFLG words.
     1720    10970        */
     1721    10971    1   KQM$RELB: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET; /* !!Doesn't ALTRET!! */
     1722    10972    2           DO INHIBIT;
     1723    10973    2           GSIZE=ERRFLG;
     1724    10974    2           GOTO RELBLK;
     1725    10975    2           END; /*INHIBIT*/
     1726    10976        /**/
     1727    10977        /*F* NAME:         KQM$RELMBLK
     1728    10978             PURPOSE:      To release an MBLK for the CG contexted by KQ$CG
     1729    10979             DESCRIPTION:  MEM$ points to the MBLK to release.
     1730    10980        */
     1731    10981    1   KQM$RELMBLK: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
     1732    10982    2           DO INHIBIT;
     1733    10983    2           GSIZE=SIZEW(KQ$MBLK);
     1734    10984    2           GOTO RELBLK;
     1735    10985    2           END; /*INHIBIT*/
     1736    10986        /**/
     1737    10987        /*F* NAME:         KQM$RELMTYP
     1738    10988             PURPOSE:      To release an MTYP blk for the CG contexted by KQ$CG
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:126  
     1739    10989             DESCRIPTION:  MEM$ points to the MTYP blk to release.
     1740    10990        */
     1741    10991    1   KQM$RELMTYP: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
     1742    10992    2           DO INHIBIT;
     1743    10993    2           IF NOT KQ$CG.QISS THEN
     1744    10994    2            GSIZE=SIZEW(KQ$QTN);
     1745    10995    2           ELSE GSIZE=SIZEW(KQ$MTYP);
     1746    10996    2           GOTO RELBLK;
     1747    10997    2           END; /*INHIBIT*/
     1748    10998        /**/
     1749    10999        /*F* NAME:         KQM$RELRBLK
     1750    11000             PURPOSE:      To release a DCB RBLK for the CG contexted by KQ$CG
     1751    11001             DESCRIPTION:  MEM$ points to the RBLK to release.
     1752    11002        */
     1753    11003    1   KQM$RELRBLK: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
     1754    11004    2           DO INHIBIT;
     1755    11005    2           GSIZE=SIZEW(KQ$RBLK);
     1756    11006    2           GOTO RELBLK;
     1757    11007    2           END; /*INHIBIT*/
     1758    11008        /**/
     1759    11009        /*F* NAME:         KQM$RELRBLKT
     1760    11010             PURPOSE:      To release an RBLK for a TERMINAL
     1761    11011             DESCRIPTION:  MEM$ points to the TERMINAL RBLK to release
     1762    11012        */
     1763    11013    1   KQM$RELRBLKT: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
     1764    11014    2           DO INHIBIT;
     1765    11015    2           GSIZE=SIZEW(KQ$RBLKT);
     1766    11016    2           GOTO RELBLK;
     1767    11017    2           END; /*INHIBIT*/
     1768    11018        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:127  
     1769    11019        /**/
     1770    11020        /*F* NAME:         KQM$RELBC
     1771    11021             PURPOSE:      To release a block from the BASEREL$ list
     1772    11022             DESCRIPTION:  MEM$ points to a block removed from the
     1773    11023                           BASEREL$ list.
     1774    11024                           It is released and/or given away to blocked
     1775    11025                           people.
     1776    11026        */
     1777    11027    1   KQM$RELBC: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */
     1778    11028        /**/
     1779    11029    2           DO INHIBIT;
     1780    11030    2           ENTFLAG=1;
     1781    11031    2           GSIZE=MEM$->KQ$FB.SIZE;
     1782    11032    2           GOTO RELBLK1;
     1783    11033    2           END;
     1784    11034        /**/
     1785    11035        /*F* NAME:         KQM$BASEREL
     1786    11036             PURPOSE:      To release blocks on the BASEREL$ list
     1787    11037             DESCRIPTION:  Release of a block when people are blocked
     1788    11038                           waiting for memory cannot normally unblock
     1789    11039                           them since the caller of KQM$RELMBLK etc
     1790    11040                           may have a gate locked.  Thus such releases
     1791    11041                           go onto the BASEREL$ list.  KCC$BASE calls
     1792    11042                           here if the list is nonempty, and we drive
     1793    11043                           thru the list releasing its elements in
     1794    11044                           such a way as to unblock people waiting for
     1795    11045                           memory.
     1796    11046        */
     1797    11047    1   KQM$BASEREL: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */
     1798    11048        /**/
     1799    11049    1         CALL BASEREL;
     1800    11050    1         RETURN;
     1801    11051        /**/
     1802    11052    1   BASEREL: PROC;
     1803    11053              %LOCK (G=KQ$CG.MMD.GATE);
     1804    11056    3           DO WHILE (KQ$CG.MMD.BASEREL$ ~= ADDR(NIL));
     1805    11057    4             DO INHIBIT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:128  
     1806    11058    4             BLK$=KQ$CG.MMD.BASEREL$;
     1807    11059    4             KQ$CG.MMD.BASEREL$=BLK$->KQ$FB.FLNK$;
     1808    11060    4             CALL KQM$RELBC (KQ$CG,BLK$);
     1809    11061    4             END;
     1810    11062                %LOCK (G=KQ$CG.MMD.GATE);
     1811    11065    3           END;
     1812    11066              %UNLOCK (G=KQ$CG.MMD.GATE);
     1813    11069    2         RETURN;
     1814    11070    2   END BASEREL;
     1815    11071        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:129  
     1816    11072        /*
     1817    11073              RRRR   EEEEE  L      BBBB   L      K   K
     1818    11074              R   R  E      L      B   B  L      K  K
     1819    11075              R   R  E      L      B   B  L      K K
     1820    11076              RRRR   EEEE   L      BBBB   L      KK
     1821    11077              R R    E      L      B   B  L      K K
     1822    11078              R  R   E      L      B   B  L      K  K
     1823    11079              R   R  EEEEE  LLLLL  BBBB   LLLLL  K   K
     1824    11080        */
     1825    11081        /*D* NAME:         RELBLK
     1826    11082             PURPOSE:      To release a block of memory
     1827    11083             DESCRIPTION:  MEM$ points to the block to release; GSIZE its size.
     1828    11084                           If anyone is waiting for memory, put the block
     1829    11085                           on the BASEREL$ list unless entered at KQM$RELBC (ENTFLG=1)
     1830    11086                           in which case we buddy up the released block and
     1831    11087                           try to give the result away to someone.  Otherwise,
     1832    11088                           It is released onto the chain of unsorted free blocks
     1833    11089                           in its page.  If the page thus becomes all
     1834    11090                           free, the page itself is released.
     1835    11091        */
     1836    11092    1   RELBLK:;
     1837    11093    2           DO INHIBIT;
     1838    11094    2           ENTFLAG=0;
     1839    11095                %LOCK (G=KQ$CG.MMD.GATE);
     1840    11098    2   RELBLK1:;
     1841    11099    2           BLK$=MEM$;
     1842    11100    2           IF KQ_LOG.MM THEN
     1843    11101    2            CALL KQZ$LOG (KQ$CG,%KQLOG_MREL,0,ENTFLAG,0,MEM$,GSIZE);
     1844    11102    2           BAP$=BLK$;
     1845    11103    2           BAP$R.OTHER=0; /* Get page address */
     1846    11104    2           IF BAP$->KQ$BAP.HDR.SELF$ ~= BAP$
     1847    11105    2           OR BAP$->KQ$BAP.CG$ ~= ADDR(KQ$CG) THEN CALL SC_BCGQRL;
     1848    11106        /*S* SCREECH_CODE: KQM-S$BCGQRL
     1849    11107             TYPE:         SCREECH
     1850    11108             MESSAGE:      Comgroup block release into bad page
     1851    11109             REMARKS:      This SCREECH occurs when a block of memory is
     1852    11110                           released on behalf of a comgroup, but the page
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:130  
     1853    11111                           on which the block lives does not belong to that
     1854    11112                           comgroup.  Any number of possible causes; one must
     1855    11113                           examine who is releasing the block and why. */
     1856    11114    2           IF KQ_DEBUG ~= 0 THEN
     1857    11115    3             DO;
     1858    11116    3             P$=BAP$->KQ$BAP.JUHEAD$;
     1859    11117    3             CALL CHAINCHK;
     1860    11118    3             P$=BAP$->KQ$BAP.ORHEAD$;
     1861    11119    3             CALL CHAINCHK;
     1862    11120    3             END;
     1863    11121        /**/
     1864    11122        /* OK to release it */
     1865    11123        /**/
     1866    11124    2           IF KQ$CG.MMD.STAHD$ ~= ADDR(NIL)
     1867    11125    2           OR KQ$CG.MMD.MBLKHD$ ~= ADDR(NIL) THEN
     1868    11126    3             DO;
     1869    11127                     /*    Try to
     1870    11128                      *    give it
     1871    11129                      *    away
     1872    11130                      */
     1873    11131    3             IF BAP$->KQ$BAP.JUHEAD$ ~= ADDR(NIL) THEN
     1874    11132    3              CALL SC_BCGMRQS;
     1875    11133        /*S* SCREECH_CODE: KQM-S$BCGMRQS
     1876    11134             TYPE:         SNAP
     1877    11135             MESSAGE:      Recoverable inconsistency in comgroup memory request
     1878    11136             REMARKS:      Same as S$BCGMRQ but the error is not irrecoverable
     1879    11137        */
     1880    11138    3             BLK$->KQ$FB.SIZE=GSIZE;
     1881    11139    3             IF ENTFLAG = 0 THEN
     1882    11140    4               DO;
     1883    11141    4               BLK$->KQ$FB.FLNK$=KQ$CG.MMD.BASEREL$;
     1884    11142    4               KQ$CG.MMD.BASEREL$=BLK$;
     1885    11143    4               KQ$CG.BASEDELAY=KQ$CG.BASEDELAY+1;
     1886    11144    4               KQ_BASEDELAY=KQ_BASEDELAY+1;
     1887    11145    4               GOTO RELX;
     1888    11146    4               END;
     1889    11147    3             BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE+GSIZE;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:131  
     1890    11148    3             CHAIN$=ADDR(BAP$->KQ$BAP.ORHEAD$);
     1891    11149    3   REL05:    ;
     1892    11150    3             P$=ADDR(KQ$CG.MMD.MBLKHD$);
     1893    11151    3             MBLK$=P$->B$$PTR;
     1894    11152    4               DO WHILE (MBLK$ ~= ADDR(NIL));
     1895    11153    4               CALL TRYGET (MBLK$->KQ$MBLK.MREQ) ALTRET(REL10);
     1896    11154    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK+1;
     1897    11155    4               CALL UNBLOCKM (P$->B$$PTR,BLK$);
     1898    11156                    %LOCK (G=KQ$CG.MMD.GATE);
     1899    11159    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK-1;
     1900    11160    4               IF BAP$->KQ$BAP.ORHEAD$ ~= ADDR(NIL) THEN GOTO REL05;
     1901    11161    4               GOTO GETOUT;
     1902    11162    4   REL10:      P$=ADDR(MBLK$->KQ$MBLK.XSP.MREQ$);
     1903    11163    4               MBLK$=P$->B$$PTR;
     1904    11164    4               END;
     1905    11165    3   REL15:    P$=ADDR(KQ$CG.MMD.STAHD$);
     1906    11166    3             STA$=P$->B$$PTR;
     1907    11167    4               DO WHILE (STA$ ~= ADDR(NIL));
     1908    11168    4               CALL TRYGET (STA$->KQ$STA.MREQ) ALTRET(REL20);
     1909    11169    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK+1;
     1910    11170    4               CALL UNBLOCKS (P$->B$$PTR,BLK$);
     1911    11171                    %LOCK (G=KQ$CG.MMD.GATE);
     1912    11174    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK-1;
     1913    11175    4               IF BAP$->KQ$BAP.ORHEAD$ ~= ADDR(NIL) THEN GOTO REL15;
     1914    11176    4               GOTO GETOUT;
     1915    11177    4   REL20:      P$=ADDR(STA$->KQ$STA.MREQ$);
     1916    11178    4               STA$=P$->B$$PTR;
     1917    11179    4               END;
     1918    11180    3   GETOUT:   ;
     1919    11181    3   RELX:     ;
     1920    11182                  %UNLOCK (G=KQ$CG.MMD.GATE);
     1921    11185    3             RETURN;
     1922    11186    3             END;
     1923    11187        /**/
     1924    11188        /* Just release it */
     1925    11189        /**/
     1926    11190    2           BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE+GSIZE;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:132  
     1927    11191    2           BLK$->KQ$FB.SIZE=GSIZE;
     1928    11192    2           BLK$->KQ$FB.FLNK$=ADDR(NIL);
     1929    11193    2           IF BAP$->KQ$BAP.JUTAIL$ = ADDR(NIL) THEN
     1930    11194    2            BAP$->KQ$BAP.JUHEAD$=BLK$;
     1931    11195    2           ELSE BAP$->KQ$BAP.JUTAIL$->KQ$FB.FLNK$=BLK$;
     1932    11196    2           BLK$->KQ$FB.BLNK$=BAP$->KQ$BAP.JUTAIL$;
     1933    11197    2           BAP$->KQ$BAP.JUTAIL$=BLK$;
     1934    11198    2           IF BAP$->KQ$BAP.FREESIZE < 1024-SIZEW(KQ$BAP) THEN
     1935    11199    2            GOTO RELX;
     1936    11200    2           ELSE IF BAP$->KQ$BAP.FREESIZE > 1024-SIZEW(KQ$BAP) THEN
     1937    11201    2             CALL SC_DCGBRL;
     1938    11202                                /* The page is all free */
     1939    11203    2           IF KQ_DEBUG ~= 0 THEN
     1940    11204    3             DO;
     1941    11205    3             GSIZE=9999;
     1942    11206    3             CALL BUDDY ALTRET(REL101);
     1943    11207    3             P$=BAP$->KQ$BAP.ORHEAD$;
     1944    11208    3             IF P$->KQ$FB.SIZE ~= 1024-SIZEW(KQ$BAP)
     1945    11209    3             OR P$ ~= PINCRW(BAP$,SIZEW(KQ$BAP)) THEN
     1946    11210    3              CALL SC_DCGBRL;
     1947    11211    3             END;
     1948    11212    2           IF KQ$CG.MMD.BAPLOCK ~= 0
     1949    11213    2           OR KQ$CG.MMD.CURBPG <= KQ$CG.MMD.MINBPG THEN
     1950    11214    2            GOTO RELX;
     1951    11215                                /* Free the page */
     1952    11216    2           IF BAP$->KQ$BAP.BLNK$ ~= ADDR(NIL) THEN
     1953    11217    2            BAP$->KQ$BAP.BLNK$->KQ$BAP.FLNK$=BAP$->KQ$BAP.FLNK$;
     1954    11218    2           ELSE
     1955    11219    3             DO;
     1956    11220    3             IF KQ$CG.MMD.HEAD$ = BAP$ THEN
     1957    11221    3              KQ$CG.MMD.HEAD$=BAP$->KQ$BAP.FLNK$;
     1958    11222    3             ELSE IF KQ$CG.MMD.PHEAD$ = BAP$ THEN
     1959    11223    3               KQ$CG.MMD.PHEAD$=BAP$->KQ$BAP.FLNK$;
     1960    11224    3              ELSE CALL SC_DCGBRL;
     1961    11225    3             END;
     1962    11226    2           IF BAP$->KQ$BAP.FLNK$ ~= ADDR(NIL) THEN
     1963    11227    2            BAP$->KQ$BAP.FLNK$->KQ$BAP.BLNK$=BAP$->KQ$BAP.BLNK$;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:133  
     1964    11228    2           BAP$->KQ$BAP.CG$=ADDR(NIL);
     1965    11229    2           PAGE$=BAP$;
     1966    11230    2           KQ$CG.MMD.CURBPG=KQ$CG.MMD.CURBPG-1;
     1967    11231    2           CALL RELPAGECGNL;
     1968    11232    2           RETURN;
     1969    11233    2   REL101: CALL SC_DCGBRL;
     1970    11234        /*S* SCREECH_CODE: KQM-S$DCGBRL
     1971    11235             TYPE:         SCREECH
     1972    11236             MESSAGE:      Double comgroup block release
     1973    11237             REMARKS:      A block of comgroup memory is or has been doubly
     1974    11238                           released.  This SCREECH occurs when a block allocation
     1975    11239                           page freecount exceeds the max possible, or when
     1976    11240                           comgroup debugging is turned on (KQ_DEBUG) and a
     1977    11241                           block is being released when the free chain in its
     1978    11242                           page says it is already free. */
     1979    11243    2           GOTO RELX;
     1980    11244    2           END; /*INHIBIT*/
     1981    11245        /**/
     1982    11246        /*D* NAME:         TRYGET
     1983    11247             PURPOSE:      To try to get memory for a request
     1984    11248             DESCRIPTION:  If successful, returns with BLK$ = buffer.
     1985    11249                           Else ALTRETs
     1986    11250        */
     1987    11251    1   TRYGET: PROC (RTYP) ALTRET;
     1988    11252        /**/
     1989    11253    2   DCL TEMP UBIN;
     1990    11254    2   DCL RTYP SBIN BYTE CALIGNED;
     1991    11255        /**/
     1992    11256    2         IF RTYP <= 0 THEN CALL SC_BCGMRQ;
     1993    11257    3           DO CASE (RTYP);
     1994    11258    3             CASE (KQMR_MBLK#);
     1995    11259    3               GSIZE=SIZEW(KQ$MBLK);
     1996    11260    3             CASE (KQMR_RBLK#);
     1997    11261    3               GSIZE=SIZEW(KQ$RBLK);
     1998    11262    3             CASE (KQMR_RBLKT#);
     1999    11263    3               GSIZE=SIZEW(KQ$RBLKT);
     2000    11264    3             CASE (KQMR_TYP#);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:134  
     2001    11265    3               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$MTYP);
     2002    11266    3               ELSE GSIZE=SIZEW(KQ$QTN);
     2003    11267    3             CASE (KQMR_STA#);
     2004    11268    3               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$QTN);
     2005    11269    3               ELSE GSIZE=SIZEW(KQ$STA);
     2006    11270    3             CASE (ELSE);
     2007    11271    3               CALL SC_BCGMRQ;
     2008    11272    3           END;
     2009    11273        /**/
     2010    11274    2         IF ENTFLAG > 0 THEN
     2011    11275    3           DO;
     2012    11276    3           ENTFLAG=-1;
     2013    11277    3           IF GSIZE = BLK$->KQ$FB.SIZE THEN
     2014    11278    4             DO;
     2015    11279    4             BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE-GSIZE;
     2016    11280    4             RETURN;
     2017    11281    4             END;
     2018    11282    3           TEMP=GSIZE;
     2019    11283    3           GSIZE=9999;
     2020    11284    3           CALL INSBLK ALTRET(SCR);
     2021    11285    3           GOTO TRY;
     2022    11286    3   SCR:    CALL SC_BCGMRQ;
     2023    11287    3   TRY:    GSIZE=TEMP;
     2024    11288    3           END;
     2025    11289        /**/
     2026    11290    2         CALL DOCHAIN ALTRET(RTN);
     2027    11291    2         ALTRETURN;
     2028    11292    2   RTN:  RETURN;
     2029    11293    2   END TRYGET;
     2030    11294        /**/
     2031    11295        /* Check the chain headed by P$ */
     2032    11296    1   CHAINCHK: PROC;
     2033    11297        /**/
     2034    11298    3           DO WHILE (P$ ~= ADDR(NIL));
     2035    11299    3           IF P$ = BLK$ THEN CALL SC_DCGBRL;
     2036    11300    3           ELSE IF POFFW (BLK$,P$) > 0 THEN
     2037    11301    4              DO;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:135  
     2038    11302    4              IF POFFW (BLK$,P$) < P$->KQ$FB.SIZE THEN CALL SC_DCGBRL;
     2039    11303    4              END;
     2040    11304    3            ELSE IF POFFW (BLK$,P$) > (-GSIZE) THEN CALL SC_DCGBRL;
     2041    11305    3           P$=P$->KQ$FB.FLNK$;
     2042    11306    3           END;
     2043    11307    2         RETURN;
     2044    11308    2   END CHAINCHK;
     2045    11309        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:136  
     2046    11310        /****************************************************************
     2047    11311        *****************************************************************/
     2048    11312        /*D* NAME:         GETPAGECG
     2049    11313             PURPOSE:      To get a page for the comgroup contexted by KQ$CG
     2050    11314             DESCRIPTION:  Returns PAGE$ pointing to the new page, or
     2051    11315                           ALTRETs if cannot allocate, with ERRFLG set as
     2052    11316                           for KQM$GETP, (or E$NOCGPG if this is the context
     2053    11317                           blk or address blk special CG).
     2054    11318
     2055    11319                           Doesn't unlock CG's MM gate.
     2056    11320        */
     2057    11321    1   GETPAGECG: PROC ALTRET;
     2058    11322        /**/
     2059    11323    2   DCL FORCE UBIN;
     2060    11324    2   DCL RECON REDEF FORCE UBIN;
     2061    11325    2   DCL FP$ PTR;
     2062    11326    2   DCL MMQERR UBIN;
     2063    11327        /**/
     2064    11328            %LOCK (G=KQ$CG.MMD.GATE);
     2065    11331        /**/
     2066    11332    2   GETPAGECGNL: ENTRY ALTRET;
     2067    11333        /**/
     2068    11334    2         IF KQ$CG.MMD.FREE$ ~= ADDR(NIL) THEN
     2069    11335    3           DO;
     2070    11336    3           PAGE$=KQ$CG.MMD.FREE$;
     2071    11337    3           KQ$CG.MMD.FREE$=PAGE$->KQ$FP.LNK$;
     2072    11338    3           KQ$CG.MMD.FREECNT=KQ$CG.MMD.FREECNT-1;
     2073    11339    3           GOTO GET0;
     2074    11340    3           END;
     2075    11341        /**/
     2076    11342    2   GETPAGECGM: ENTRY ALTRET; /* DON'T GET FROM FREE CHAIN */
     2077    11343        /**/
     2078    11344    2         RECON=0;
     2079    11345    2         IF KQ$CG.MMD.CURPG >= KQ$CG.AUCTL.MAXPG THEN
     2080    11346    3           DO;
     2081    11347    3           ERRFLG=%E$CGMPLC;
     2082    11348        /*E* ERROR:   KQM-E$CGMPLC-E
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:137  
     2083    11349             MESSAGE: Your comgroup is at its MAXPG limit
     2084    11350             MESSAGE1: No more physical memory can be allocated to your
     2085    11351                       comgroup since it already has the AU-established
     2086    11352                       maximum number of pages. */
     2087    11353    3           GOTO ALTRT;
     2088    11354    3           END;
     2089    11355        /**/
     2090    11356        /**/
     2091    11357    2         IF ADDR(KQ$CG) = KQ$MMSD.CCXT$ THEN
     2092    11358    2          CALL MMQ$GCCP (PAGE$,,ERRFLG) ALTRET(ALTRT);
     2093    11359    2         ELSE IF ADDR(KQ$CG) = KQ$MMSD.DCXT$ THEN
     2094    11360    3            DO;
     2095    11361    3            CALL MMQ$GCAP (PAGE$,,ERRFLG) ALTRET(ALTRT);
     2096    11362    3            END;
     2097    11363    2          ELSE
     2098    11364    3            DO;
     2099    11365    3   GETCOM:  ;
     2100    11366                 %LOCK (G=KQ_CGLGATE);
     2101    11369    3            IF KQ$CG.ACB$->KQ$ACB.CURPG >= KQ$CG.ACB$->KQ$ACB.CURPGLIM THEN
     2102    11370    4              DO;
     2103    11371    4              ERRFLG=%E$CGCPLA;
     2104    11372        /*E* ERROR:   KQM-E$CGCPLA-E
     2105    11373             MESSAGE: Your account's comgroup CURPG limit has been reached
     2106    11374             MESSAGE1: No more physical memory can be allocated to your
     2107    11375                       comgroup since the account in which it lies has
     2108    11376                       reached the account limit for currently in-use physical
     2109    11377                       pages.  */
     2110    11378    4              GOTO NOPG;
     2111    11379    4              END;
     2112    11380    3            IF RECON = 0 THEN
     2113    11381    3             CALL MMQ$GCDP (PAGE$,KQ$CG.MMD.DSB$->KQ$DSB,ERRFLG) ALTRET(NOPG);
     2114    11382    3            ELSE CALL MMQ$RECON (PAGE$,KQ$CG.MMD.DSB$->KQ$DSB,ERRFLG) ALTRET(NOPG);
     2115    11383    3            KQ$CG.ACB$->KQ$ACB.CURPG=KQ$CG.ACB$->KQ$ACB.CURPG+1;
     2116    11384                 %UNLOCK (G=KQ_CGLGATE);
     2117    11387    3            END;
     2118    11388    2         KQ$CG.MMD.CURPG=KQ$CG.MMD.CURPG+1;
     2119    11389    2         CALL DOPGSI;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:138  
     2120    11390    2   GET0: ;
     2121    11391    2         PAGE$->B$$PAGE='0'B;
     2122    11392    2         PAGE$->KQ$GRAN=KQ$CG.GRAN;
     2123    11393    2         PAGE$->KQ$GRAN.SELF$=PAGE$;
     2124    11394    2         RETURN;
     2125    11395    2   NOPG: ;
     2126    11396              %UNLOCK (G=KQ_CGLGATE);
     2127    11399    2   ALTRT:;
     2128    11400    2         ALTRETURN;
     2129    11401        /**/
     2130    11402    2   GETPAGERECON: ENTRY ALTRET;
     2131    11403        /**/
     2132    11404    2         RECON=1;
     2133    11405              %LOCK (G=KQ$CG.MMD.GATE);
     2134    11408    2         GOTO GETCOM;
     2135    11409        /****************************************************************
     2136    11410        *****************************************************************/
     2137    11411        /*D* NAME:         RELPAGECG
     2138    11412             PURPOSE:      To release a page for the CG contexted by KQ$CG
     2139    11413             DESCRIPTION:  PAGE$ points to the page to release. */
     2140    11414    2   RELPAGECG: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     2141    11415        /**/
     2142    11416    3           DO INHIBIT;
     2143    11417                %LOCK (G=KQ$CG.MMD.GATE);
     2144    11420    3           END; /* INHIBIT */
     2145    11421        /**/
     2146    11422    2   RELPAGECGNL: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     2147    11423        /**/
     2148    11424    3           DO INHIBIT;
     2149    11425    3           FORCE=0;
     2150    11426    3           GOTO COM;
     2151    11427    3           END;
     2152    11428        /**/
     2153    11429    2   RELPAGECGF: ENTRY ALTRET; /* !!Doesn't ALTRET!! */
     2154    11430        /**/
     2155    11431    3           DO INHIBIT;
     2156    11432    3           FORCE=1;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:139  
     2157    11433                %LOCK (G=KQ$CG.MMD.GATE);
     2158    11436    3   COM:    ;
     2159    11437    3           IF PAGE$->KQ$GRAN.SELF$ ~= PAGE$ THEN CALL SC_BCGPRL;
     2160    11438    3           IF KQ$CG.MMD.CURPG < 1 THEN
     2161    11439    4             DO;
     2162    11440    4             CALL SC_BCGPRL;
     2163    11441        /*S* SCREECH_CODE: KQM-S$BCGPRL
     2164    11442             TYPE:         SCREECH
     2165    11443             MESSAGE:      Bad release of comgroup page
     2166    11444             REMARKS:      A comgroup has released a page twice, or
     2167    11445                           SELF$ in the header of a page to release does
     2168    11446                           not match the page. */
     2169    11447    4             END;
     2170    11448    3           IF  KQ$CG.MMD.CURPG <= KQ$CG.AUCTL.MINPG
     2171    11449    3           AND FORCE = 0 THEN
     2172    11450    4             DO;
     2173    11451    4             IF KQ_DEBUG ~= 0 THEN
     2174    11452    5               DO;
     2175    11453    5               FP$=KQ$CG.MMD.FREE$;
     2176    11454    6                 DO WHILE (FP$ ~= ADDR(NIL));
     2177    11455    6                 IF FP$ = PAGE$ THEN CALL SC_BCGPRL;
     2178    11456    6                 FP$=FP$->KQ$FP.LNK$;
     2179    11457    6                 END;
     2180    11458    5               END;
     2181    11459    4             PAGE$->KQ$GRAN.PTYP=%KQ_PTYP_SPARE;
     2182    11460    4             PAGE$->KQ$FP.LNK$=KQ$CG.MMD.FREE$;
     2183    11461    4             KQ$CG.MMD.FREE$=PAGE$;
     2184    11462    4             KQ$CG.MMD.FREECNT=KQ$CG.MMD.FREECNT+1;
     2185    11463    4             END;
     2186    11464    3           ELSE
     2187    11465    4             DO;
     2188    11466    4             KQ$CG.MMD.CURPG=KQ$CG.MMD.CURPG-1;
     2189    11467    4             IF ADDR(KQ$CG) = KQ$MMSD.CCXT$ THEN
     2190    11468    4              CALL MMQ$FCCP (PAGE$,,MMQERR) ALTRET(SCMMQ);
     2191    11469    4             ELSE IF ADDR(KQ$CG) = KQ$MMSD.DCXT$ THEN
     2192    11470    5                DO;
     2193    11471    5                CALL MMQ$FCAP (PAGE$,,MMQERR) ALTRET(SCMMQ);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:140  
     2194    11472    5                END;
     2195    11473    4              ELSE
     2196    11474    5                DO;
     2197    11475                     %LOCK (G=KQ_CGLGATE);
     2198    11478    5                KQ$CG.ACB$->KQ$ACB.CURPG=KQ$CG.ACB$->KQ$ACB.CURPG-1;
     2199    11479                     %UNLOCK (G=KQ_CGLGATE);
     2200    11482    5                CALL MMQ$FCDP (PAGE$,KQ$CG.MMD.DSB$->KQ$DSB,MMQERR) ALTRET(SCMMQ);
     2201    11483    5                CALL DOPGSI;
     2202    11484    5                END;
     2203    11485    4             END;
     2204    11486                %UNLOCK (G=KQ$CG.MMD.GATE);
     2205    11489    3           RETURN;
     2206    11490    3           END; /*INHIBIT*/
     2207    11491    2   SCMMQ:;
     2208    11492    2         CALL SC_BCGMMQ;
     2209    11493        /*S* SCREECH_CODE: KQM-S$BCGMMQ
     2210    11494             TYPE:         SCREECH
     2211    11495             MESSAGE:      MMQ error in KQM$MM
     2212    11496             REMARKS:      MMQ$CGQ has returned an error to KQM$MM indicating
     2213    11497                           that the latter has done something wrong.  MMQERR
     2214    11498                           contains the error code generated by MMQ$CGQ,
     2215    11499                           which explains the exact nature of the error. */
     2216    11500        /**/
     2217    11501        /**/
     2218    11502    2   DOPGSI: PROC;  /* Update page ticks */
     2219    11503        /**/
     2220    11504    3   DCL I UBIN;
     2221    11505        /**/
     2222    11506    3         I=KQ$CG.PGTIME;
     2223    11507    3         CALL SSS$SYSTIME (KQ$CG.PGTIME);
     2224    11508    3         CALL FGH$UPDBUCKET (KQ$CG.STATS.PGSI,0,KQ$CG.PGTIME-I,KQ$CG.MMD.CURPG);
     2225    11509    3         RETURN;
     2226    11510    3   END DOPGSI;
     2227    11511    2   END GETPAGECG;
     2228    11512    1   END KQM$GETP;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:141  
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   KQ_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  is referenced.
   KQM_MAC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQM$GETP.

   Procedure KQM$GETP requires 2153 words for executable code.
   Procedure KQM$GETP requires 40 words of local(AUTO) storage.

    No errors detected in file KQM$MM.:E05TSI    .

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:142  

 Object Unit name= KQM$GETP                                   File name= KQM$MM.:E05TOU
 UTS= JUL 30 '97 01:33:15.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     92    134  KQM$GETP
    1   Proc  even  none  2153   4151  KQM$GETP
    2  RoData even  none    16     20  KQM$GETP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  KQM$GETP
     1     27          yes     yes      Std        3  KQM$RECON
     1     37          yes     yes      Std        2  KQM$RELP
     1     47          yes     yes      Std        2  KQM$RELPF
     1     57          yes     yes      Std        3  KQM$GETDFR
     1    243          yes     yes      Std        3  KQM$GETMIN
     1    341          yes     yes      Std        1  KQM$MOREPG
     1    410          yes     yes      Std        3  KQM$GARBDONE
     1    525          yes     yes      Std        3  KQM$SETBLK
     1    757          yes     yes      Std        3  KQM$GETBR
     1    764          yes     yes      Std        3  KQM$GETBD
     1   1005          yes     yes      Std        3  KQM$GETBM
     1   1015          yes     yes      Std        3  KQM$GETB
     1   1026          yes     yes      Std        3  KQM$GETBK
     1   1037          yes     yes      Std        3  KQM$GETMTYP
     1   1045          yes     yes      Std        3  KQM$GETRBLK
     1   1053          yes     yes      Std        3  KQM$GETRBLKT
     1   1061          yes     yes      Std        3  KQM$GETSTA
     1   1067          yes     yes      Std        3  KQM$GETMBLK
     1   2445          yes     yes      Std        2  KQM$RELSTA
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:143  
     1   2461          yes     yes      Std        3  KQM$RELB
     1   2470          yes     yes      Std        2  KQM$RELMBLK
     1   2476          yes     yes      Std        2  KQM$RELMTYP
     1   2512          yes     yes      Std        2  KQM$RELRBLK
     1   2520          yes     yes      Std        2  KQM$RELRBLKT
     1   2526          yes     yes      Std        2  KQM$RELBC
     1   2540          yes     yes      Std        1  KQM$BASEREL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       8 KQZ$LOG
         yes           Std       2 SSS$XSYSTIME
 yes     yes           Std       1 KQS$GARBF
 yes     yes           Std       1 KQS$GARB
         yes           Std       1 HFC$LOCK
 yes     yes           Std       1 KQP$UNLOCK
 yes     yes           Std       1 KQL$SRQ
         yes           Std       4 SSR$RUE
 yes     yes           Std       3 MMQ$GCAP
 yes     yes           Std       3 MMQ$GCDP
 yes     yes           Std       3 MMQ$FCAP
 yes     yes           Std       3 MMQ$RECON
 yes     yes           Std       3 MMQ$FCCP
 yes     yes           Std       3 MMQ$GCCP
 yes     yes           Std       3 MMQ$FCDP
         yes           Std       1 SSS$SYSTIME
         yes           Std       4 FGH$UPDBUCKET
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:144  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_BCGMRQS                            SC_BCGMRQ                             SC_BCGQRL
     SC_DCGBRL                             SC_CGBLTB                             SC_BCGBAP
     SC_BCGPRL                             SC_BCGMMQ                             KQ_BASEDELAY
     KQ_CGLGATE                            KQ_DEBUG                              KQ_LOG
     KQ_IRBLK                              KQ_IRBLKT                             KQ_IMTYP
     KQ_IMBLK                              B$JIT$                           r    KQ_MMSD$
     KQ_IBAP                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ASLENTSID                             ISSID
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:145  


      680        1        /*T***********************************************************/
      681        2        /*T*                                                         */
      682        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      683        4        /*T*                                                         */
      684        5        /*T***********************************************************/
      685        6        KQM$GETP: PROC (KQ$CG,MEM$,ERRFLG) ALTRET;

      6  1 000000   000000 700200 xent  KQM$GETP     TSX0  ! X66_AUTO_3
         1 000001   000050 000003                    ZERO    40,3

      686        7        /**/
      687        8
      688        9
      689       10
      690       11        /**/
      691       12        /* INCLUDES */
      692       13        /**/
      693       14        %INCLUDE KQ_SUBS_C;
      694      314        %INCLUDE KQ_MAC_C;
      695     2864        %INCLUDE HF_LOCK_C;
      696     2878        %INCLUDE KQM_MAC_C;
      697     3251        %INCLUDE KC$CP6V_C;
      698     3371        %INCLUDE KQ_DATA_R;
      699     4203        %INCLUDE B$JIT_C;
      700     4517        %INCLUDE KQ_ERRORS_C;
      701     4565        %INCLUDE KC_CP6;
      702     5125        %INCLUDE UD_SEV_C;
      703     5139        %INCLUDE SS_SCHED_C;
      704     5372        %INCLUDE M_INFO_C;
      705     5512
      706     5513
      707     5514
      708     5515        /**/
      709     5516        /* MACROS */
      710     5517        /**/
      711     5518        %MACRO $ERROR (NAME=GORGO,CODE=0,SEV=SEV_ERROR#);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:146  
      712     5519        DCL 1 NAME CONSTANT ALIGNED,
      713     5520              2 * BIT(18) UNAL INIT('132115'O),
      714     5521              2 * UBIN(15) UNAL INIT(CODE),
      715     5522              2 * UBIN(3) UNAL INIT(SEV);
      716     5523        %MEND;
      717     5524
      718     5525
      719     5526
      720     5527        /**/
      721     5528        /* PARAMETERS */
      722     5529        /**/
      723     5530        %KQ_CG (FPTN=KQ$CG,STCLASS="");
      724     6269    1   DCL MEM$ PTR;
      725     6270    1   DCL ERRFLG UBIN WORD;
      726     6271
      727     6272
      728     6273
      729     6274        /**/
      730     6275        /* BASED STRUCTURES */
      731     6276        /**/
      732     6277        %KQ_FB   (FPTN=KQ$FB  ,STCLASS=BASED);
      733     6299    1   DCL 1 B$$PAGE BASED ALIGNED,
      734     6300    1         2 * CHAR(4096) UNAL;
      735     6301    1   DCL 1 F$CHAIN BASED ALIGNED,
      736     6302    1         2 HEAD$ PTR,
      737     6303    1         2 TAIL$ PTR;
      738     6304        %KQ_MBLK (FPTN=KQ$MBLK,STCLASS=BASED,SUPR=1);
      739     6574        %KQ_RBLK (FPTN=KQ$RBLK,STCLASS=BASED);
      740     6760        %KQ_MTYP (FPTN=KQ$MTYP,STCLASS=BASED);
      741     6834        %KQ_STA  (FPTN=KQ$STA ,STCLASS="BASED(STA$)");
      742     7173        %KQ_QTN  (FPTN=KQ$QTN ,STCLASS=BASED);
      743     7646        %KQ_BAP  (FPTN=KQ$BAP ,STCLASS="BASED(BAP$)");
      744     7735        %KQ_CG   (FPTN=K$CG   ,STCLASS=BASED);
      745     8474        %KQ_DSB  (FPTN=KQ$DSB ,STCLASS=BASED);
      746     8517        %KQ_ACB  (FPTN=KQ$ACB ,STCLASS=BASED);
      747     8547        %KQ_RBLK (FPTN=KQ$RBLKT,STCLASS=BASED,TERM=1);
      748     8733        %KQ_GRAN (FPTN=KQ$GRAN,STCLASS=BASED);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:147  
      749     8788        %KQ_DFRBLK (FPTN=KQ$DFRBLK,STCLASS=BASED);
      750     8838        %KQ_FP (FPTN=KQ$FP,STCLASS=BASED);
      751     8911        %KQ_MMSD (FPTN=KQ$MMSD,STCLASS="BASED(KQ_MMSD$)");
      752     8948        %B$JIT0;
      753     9037        %A$JIT6X;
      754     9040    1   DCL B$$PTR PTR BASED ALIGNED;
      755     9041
      756     9042
      757     9043
      758     9044        /**/
      759     9045        /* AUTO */
      760     9046        /**/
      761     9047    1   DCL JJ UBIN;
      762     9048    1   DCL J UBIN;
      763     9049    1   DCL PAGE$ PTR;
      764     9050    1   DCL I UBIN;
      765     9051    1   DCL BAP$ PTR;
      766     9052    1   DCL 1 BAP$R REDEF BAP$,
      767     9053    1         2 PG# UBIN(8) UNAL,
      768     9054    1         2 OTHER UBIN(16) UNAL,
      769     9055    1         2 SEGID UBIN(12) UNAL;
      770     9056    1   DCL BLK$ PTR;
      771     9057    1   DCL OFFSET SBIN WORD;
      772     9058    1   DCL OFFSETR REDEF OFFSET UBIN WORD;
      773     9059    1   DCL P$ PTR;
      774     9060    1   DCL CHAIN$ PTR;
      775     9061    1   DCL GSIZE UBIN WORD;
      776     9062    1   DCL MPRIO UBIN;
      777     9063    1   DCL REQTYP UBIN;
      778     9064    1   DCL ENTFLAG SBIN;
      779     9065    1   DCL MBLK$ PTR;
      780     9066    1   DCL STA$ PTR;
      781     9067
      782     9068
      783     9069
      784     9070        /**/
      785     9071        /* CONSTANT */
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:148  
      786     9072        /**/
      787     9073        %KQ_STA  (FPTN=STA_INIT ,STCLASS=CONSTANT);
      788     9412        %KQ_QTN  (FPTN=QTN_INIT ,STCLASS=CONSTANT);
      789     9885        %$ERROR (NAME=E_CGCGMP,CODE=%E$CGCGMP);
      790     9891        %$ERROR (NAME=E_CGCGDB,CODE=%E$CGCGDB);
      791     9897
      792     9898
      793     9899
      794     9900        /**/
      795     9901        /* REFS */
      796     9902        /**/
      797     9903    1   DCL SC_BCGQRL ENTRY CONV(2,0);
      798     9904    1   DCL SC_BCGPRL ENTRY CONV(2,0);
      799     9905    1   DCL SC_BCGBAP ENTRY CONV(2,0);
      800     9906    1   DCL SC_CGBLTB ENTRY CONV(2,0);
      801     9907    1   DCL SC_DCGBRL ENTRY CONV(2,0);
      802     9908    1   DCL SC_BCGMMQ ENTRY CONV(2,0);
      803     9909    1   DCL SC_BCGMRQ ENTRY CONV(2,0);
      804     9910    1   DCL SC_BCGMRQS ENTRY CONV(2,0);
      805     9911    1   DCL FGH$UPDBUCKET ENTRY(4);
      806     9912    1   DCL KQL$SRQ      ENTRY(1) ALTRET;
      807     9913    1   DCL KQP$UNLOCK   ENTRY(1) ALTRET;
      808     9914    1   DCL KQS$GARB     ENTRY(1) ALTRET;
      809     9915    1   DCL KQS$GARBF    ENTRY(1) ALTRET;
      810     9916    1   DCL KQZ$LOG      ENTRY(8) ALTRET;
      811     9917    1   DCL MMQ$GCAP     ENTRY(3) ALTRET;
      812     9918    1   DCL MMQ$GCCP     ENTRY(3) ALTRET;
      813     9919    1   DCL MMQ$GCDP     ENTRY(3) ALTRET;
      814     9920    1   DCL MMQ$FCAP     ENTRY(3) ALTRET;
      815     9921    1   DCL MMQ$FCCP     ENTRY(3) ALTRET;
      816     9922    1   DCL MMQ$FCDP     ENTRY(3) ALTRET;
      817     9923    1   DCL MMQ$RECON    ENTRY(3) ALTRET;
      818     9924    1   DCL SSR$REG      ENTRY(3) ALTRET;
      819     9925    1   DCL SSR$RUE      ENTRY(4);
      820     9926    1   DCL SSS$SYSTIME  ENTRY(1);
      821     9927    1   DCL SSS$XSYSTIME ENTRY(2);
      822     9928    1   DCL B$JIT$ PTR SYMREF;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:149  
      823     9929    1   DCL KQ_MMSD$ PTR SYMREF READONLY;
      824     9930        %KQ_BAP (FPTN=KQ_IBAP,STCLASS=SYMREF);
      825    10019        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:150  
      826    10020        /*F* NAME:         KQM$GETP
      827    10021             PURPOSE:      To allocate a page for the comgroup contexted
      828    10022                           by KQ$CG
      829    10023             DESCRIPTION:  Used usually to allocate a disc cache page.
      830    10024                           Returns MEM$ pointing to the allocated page,
      831    10025                           else ALTRETs with ERRFLG set to
      832    10026                            E$CGMPLC          (KQ_ERRORS_C)
      833    10027                            E$CGCPLA          (KQ_ERRORS_C)
      834    10028                            E$CGADBLKMAX      (M_ERRORS_C)
      835    10029                            E$NOCGDBLK        (M_ERRORS_C)
      836    10030                            E$NOCGPP          (M_ERRORS_C)
      837    10031
      838    10032        KQM$GETP: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;   */
      839    10033        /**/
      840    10034    1         CALL GETPAGECG ALTRET(NOGET);

  10034  1 000002   003463 701000 1                  TSX1    GETPAGECG
         1 000003   000017 702000 1                  TSX2    NOGET

  10034  1 000004                       GETPEXIT     null
      841    10035    1   GETPEXIT:;
      842    10036              %UNLOCK (G=KQ$CG.MMD.GATE);

  10037  1 000004   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000005   000001 036003                    ADLQ    1,DU
         1 000006   200036 756100                    STQ     I+1,,AUTO
         1 000007   200036 630500                    EPPR0   I+1,,AUTO
         1 000010   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000011   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000012   000000 011000                    NOP     0

      843    10039    1         MEM$=PAGE$;

  10039  1 000013   200010 236100                    LDQ     PAGE$,,AUTO
         1 000014   200004 470500                    LDP0    @MEM$,,AUTO
         1 000015   000000 756100                    STQ     0,,PR0

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:151  
      844    10040    1         RETURN;

  10040  1 000016   000000 702200 xent               TSX2  ! X66_ARET

  10039  1 000017                       NOGET        null
  10039  1 000017                       ALTOUT       null
      845    10041    1   NOGET:;
      846    10042    1   ALTOUT:;
      847    10043              %UNLOCK (G=KQ$CG.MMD.GATE);

  10044  1 000017   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000020   000001 036003                    ADLQ    1,DU
         1 000021   200036 756100                    STQ     I+1,,AUTO
         1 000022   200036 630500                    EPPR0   I+1,,AUTO
         1 000023   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000024   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000025   000000 011000                    NOP     0

      848    10046    1         ALTRETURN;

  10046  1 000026   000000 702200 xent               TSX2  ! X66_AALT

      849    10047        /**/
      850    10048        /*F* NAME:         KQM$RECON
      851    10049             PURPOSE:      To call MMQ$RECON for KCO$INIT
      852    10050             INPUT:        KQ$CG     - context block
      853    10051                           MEM$      - old pointer to page
      854    10052             OUTPUT:       ERRFLG    - physical page number, unless ALTRET
      855    10053                                       in which case is error code
      856    10054             DESCRIPTION:  After performing comgroup-specific checks
      857    10055                           (e.g. account limit), we just call MMQ$RECON
      858    10056                           passing the appropriate parameters.  The purpose
      859    10057                           is to allocate a page and make MEM$ point to it
      860    10058                           thru the comgroup addressing logic.
      861    10059        */
      862    10060    1   KQM$RECON: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:152  
  10060  1 000027   000000 700200 xent  KQM$RECON    TSX0  ! X66_AUTO_3
         1 000030   000050 000003                    ZERO    40,3

      863    10061        /**/
      864    10062    1         PAGE$=MEM$;

  10062  1 000031   200004 470500                    LDP0    @MEM$,,AUTO
         1 000032   000000 236100                    LDQ     0,,PR0
         1 000033   200010 756100                    STQ     PAGE$,,AUTO

      865    10063    1         CALL GETPAGERECON ALTRET(NOGET);

  10063  1 000034   003664 701000 1                  TSX1    GETPAGERECON
         1 000035   000017 702000 1                  TSX2    NOGET

      866    10064    1         GOTO GETPEXIT;

  10064  1 000036   000004 710000 1                  TRA     GETPEXIT

      867    10065        /**/
      868    10066        /*F* NAME:         KQM$RELP
      869    10067             PURPOSE:      To release a page for the comgroup contexted
      870    10068                           by KQ$CG.
      871    10069             DESCRIPTION:  MEM$ points to the page to release.  The appro-
      872    10070                           priate counters in the context block are adjusted
      873    10071                           and the page is released, unless this would drive
      874    10072                           CURPG < MINPG, in which case the page is retained
      875    10073                           on a special avail list.
      876    10074        */
      877    10075    1   KQM$RELP: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  10075  1 000037   000000 700200 xent  KQM$RELP     TSX0  ! X66_AUTO_3
         1 000040   000050 000003                    ZERO    40,3

      878    10076    1         PAGE$=MEM$;

  10076  1 000041   200004 470500                    LDP0    @MEM$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:153  
         1 000042   000000 236100                    LDQ     0,,PR0
         1 000043   200010 756100                    STQ     PAGE$,,AUTO

      879    10077    1         CALL RELPAGECG;

  10077  1 000044   003677 701000 1                  TSX1    RELPAGECG
         1 000045   000000 011000                    NOP     0

      880    10078    1         RETURN;

  10078  1 000046   000000 702200 xent               TSX2  ! X66_ARET

      881    10079        /**/
      882    10080        /*F* NAME:         KQM$RELPF
      883    10081             PURPOSE:      To release a page for the comgroup contexted
      884    10082                           by KQ$CG.
      885    10083             DESCRIPTION:  Same as KQM$RELP except forces release by
      886    10084                           ignoring MINPG.
      887    10085        */
      888    10086    1   KQM$RELPF: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  10086  1 000047   000000 700200 xent  KQM$RELPF    TSX0  ! X66_AUTO_3
         1 000050   000050 000003                    ZERO    40,3

      889    10087        /**/
      890    10088    1         PAGE$=MEM$;

  10088  1 000051   200004 470500                    LDP0    @MEM$,,AUTO
         1 000052   000000 236100                    LDQ     0,,PR0
         1 000053   200010 756100                    STQ     PAGE$,,AUTO

      891    10089    1         CALL RELPAGECGF;

  10089  1 000054   003714 701000 1                  TSX1    RELPAGECGF
         1 000055   000000 011000                    NOP     0

      892    10090    1         RETURN;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:154  

  10090  1 000056   000000 702200 xent               TSX2  ! X66_ARET

      893    10091        /**/
      894    10092        /*F* NAME:         KQM$GETDFR
      895    10093             PURPOSE:      To ajust NDFRBLKS when AUCTL.DFRBLKS changes
      896    10094             DESCRIPTION:  The number desired is in AUCTL.DFRBLKS; the
      897    10095                           number we have currently is in NDFRBLKS.
      898    10096                           This routine attempts to adjust the latter to
      899    10097                           the former.  This may fail because we need
      900    10098                           more and cannot get them, which results in
      901    10099                           an ALTRET with B$JIT.ERR set, or because we
      902    10100                           want less but cannot release them because they
      903    10101                           are not free, which just causes us to quit.
      904    10102        */
      905    10103    1   KQM$GETDFR: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10103  1 000057   000000 700200 xent  KQM$GETDFR   TSX0  ! X66_AUTO_3
         1 000060   000050 000003                    ZERO    40,3

      906    10104        /**/
      907    10105              %LOCK (G=KQ$CG.DTREE.GATE);

  10106  1 000061   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000062   000231 036003                    ADLQ    153,DU
         1 000063   200036 756100                    STQ     I+1,,AUTO
         1 000064   200036 630500                    EPPR0   I+1,,AUTO
         1 000065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000066   000000 701000 xent               TSX1    HFC$LOCK
         1 000067   000000 011000                    NOP     0

      908    10108    2           DO WHILE (KQ$CG.NDFRBLKS > KQ$CG.AUCTL.DEFERBLKS);

  10108  1 000070   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000071   000225 236100                    LDQ     149,,PR0
         1 000072   000033 772000                    QRL     27
         1 000073   200036 756100                    STQ     I+1,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:155  
         1 000074   000135 236100                    LDQ     93,,PR0
         1 000075   000022 772000                    QRL     18
         1 000076   000777 376007                    ANQ     511,DL
         1 000077   200036 116100                    CMPQ    I+1,,AUTO
         1 000100   000143 605000 1                  TPL     s:10118

      909    10109    2           IF KQ$CG.DFRFREEHD$ = ADDR(NIL) THEN GOTO GETDFRX;

  10109  1 000101   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000102   000230 236100                    LDQ     152,,PR0
         1 000103   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000104   000211 600000 1                  TZE     GETDFRX

      910    10110    2           BLK$=KQ$CG.DFRFREEHD$;

  10110  1 000105   200013 756100                    STQ     BLK$,,AUTO

      911    10111    2           KQ$CG.DFRFREEHD$=BLK$->KQ$DFRBLK.LNK$;

  10111  1 000106   200013 471500                    LDP1    BLK$,,AUTO
         1 000107   100000 236100                    LDQ     0,,PR1
         1 000110   000230 756100                    STQ     152,,PR0

      912    10112    2           IF KQ$CG.DFRFREEHD$=ADDR(NIL)

  10112  1 000111   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000112   000115 601000 1                  TNZ     s:10114

      913    10113    2           THEN KQ$CG.DFRFREETL$=ADDR(NIL);

  10113  1 000113   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000114   000263 756100                    STQ     179,,PR0

      914    10114    2           CALL KQM$RELB (KQ$CG,BLK$,SIZEW(KQ$DFRBLK));

  10114  1 000115   000000 236000 2                  LDQ     0
         1 000116   200040 756100                    STQ     I+3,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:156  
         1 000117   200013 633500                    EPPR3   BLK$,,AUTO
         1 000120   200037 453500                    STP3    I+2,,AUTO
         1 000121   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000122   200036 756100                    STQ     I+1,,AUTO
         1 000123   200036 630500                    EPPR0   I+1,,AUTO
         1 000124   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000125   002461 701000 1                  TSX1    s:10971
         1 000126   000000 011000                    NOP     0

      915    10115    2           KQ$CG.NDFRBLKS=KQ$CG.NDFRBLKS-1;

  10115  1 000127   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000130   000225 236100                    LDQ     149,,PR0
         1 000131   777000 036003                    ADLQ    -512,DU
         1 000132   000225 552140                    STBQ    149,'40'O,PR0

      916    10116    2           END;

  10116  1 000133   000225 236100                    LDQ     149,,PR0
         1 000134   000033 772000                    QRL     27
         1 000135   200036 756100                    STQ     I+1,,AUTO
         1 000136   000135 236100                    LDQ     93,,PR0
         1 000137   000022 772000                    QRL     18
         1 000140   000777 376007                    ANQ     511,DL
         1 000141   200036 116100                    CMPQ    I+1,,AUTO
         1 000142   000101 604000 1                  TMI     s:10109

      917    10117          /**/
      918    10118    2           DO WHILE (KQ$CG.NDFRBLKS < KQ$CG.AUCTL.DEFERBLKS);

  10118  1 000143   200036 756100                    STQ     I+1,,AUTO
         1 000144   000225 236100                    LDQ     149,,PR0
         1 000145   000033 772000                    QRL     27
         1 000146   200036 116100                    CMPQ    I+1,,AUTO
         1 000147   000211 605000 1                  TPL     GETDFRX

      919    10119    2           GSIZE=SIZEW(KQ$DFRBLK);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:157  

  10119  1 000150   000010 235007                    LDA     8,DL
         1 000151   200017 755100                    STA     GSIZE,,AUTO

      920    10120    2           CALL GETBLKP ALTRET(GETDFRFAIL);

  10120  1 000152   001541 701000 1                  TSX1    GETBLKP
         1 000153   000221 702000 1                  TSX2    GETDFRFAIL

      921    10121                %UNLOCK (G=KQ$CG.MMD.GATE);

  10122  1 000154   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000155   000001 036003                    ADLQ    1,DU
         1 000156   200036 756100                    STQ     I+1,,AUTO
         1 000157   200036 630500                    EPPR0   I+1,,AUTO
         1 000160   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000161   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000162   000000 011000                    NOP     0

      922    10124    2           BLK$->KQ$DFRBLK.LNK$=KQ$CG.DFRFREEHD$;

  10124  1 000163   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000164   000230 236100                    LDQ     152,,PR0
         1 000165   200013 471500                    LDP1    BLK$,,AUTO
         1 000166   100000 756100                    STQ     0,,PR1

      923    10125    2           KQ$CG.DFRFREEHD$=BLK$;

  10125  1 000167   200013 236100                    LDQ     BLK$,,AUTO
         1 000170   000230 756100                    STQ     152,,PR0

      924    10126    2           IF KQ$CG.DFRFREETL$=ADDR(NIL)

  10126  1 000171   000263 236100                    LDQ     179,,PR0
         1 000172   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000173   000176 601000 1                  TNZ     s:10128

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:158  
      925    10127    2           THEN KQ$CG.DFRFREETL$=BLK$;

  10127  1 000174   200013 236100                    LDQ     BLK$,,AUTO
         1 000175   000263 756100                    STQ     179,,PR0

      926    10128    2           KQ$CG.NDFRBLKS=KQ$CG.NDFRBLKS+1;

  10128  1 000176   000225 236100                    LDQ     149,,PR0
         1 000177   001000 036003                    ADLQ    512,DU
         1 000200   000225 552140                    STBQ    149,'40'O,PR0

      927    10129    2           END;

  10129  1 000201   000135 236100                    LDQ     93,,PR0
         1 000202   000022 772000                    QRL     18
         1 000203   000777 376007                    ANQ     511,DL
         1 000204   200036 756100                    STQ     I+1,,AUTO
         1 000205   000225 236100                    LDQ     149,,PR0
         1 000206   000033 772000                    QRL     27
         1 000207   200036 116100                    CMPQ    I+1,,AUTO
         1 000210   000150 604000 1                  TMI     s:10119

  10127  1 000211                       GETDFRX      null
      928    10130    1   GETDFRX:;
      929    10131              %UNLOCK (G=KQ$CG.DTREE.GATE);

  10132  1 000211   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000212   000231 036003                    ADLQ    153,DU
         1 000213   200036 756100                    STQ     I+1,,AUTO
         1 000214   200036 630500                    EPPR0   I+1,,AUTO
         1 000215   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000216   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000217   000000 011000                    NOP     0

      930    10134    1         RETURN;

  10134  1 000220   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:159  

  10127  1 000221                       GETDFRFAIL   null
      931    10135    1   GETDFRFAIL:;
      932    10136              %UNLOCK (G=KQ$CG.MMD.GATE);

  10137  1 000221   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000222   000001 036003                    ADLQ    1,DU
         1 000223   200036 756100                    STQ     I+1,,AUTO
         1 000224   200036 630500                    EPPR0   I+1,,AUTO
         1 000225   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000226   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000227   000000 011000                    NOP     0

      933    10139              %UNLOCK (G=KQ$CG.DTREE.GATE);

  10140  1 000230   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000231   000231 036003                    ADLQ    153,DU
         1 000232   200036 756100                    STQ     I+1,,AUTO
         1 000233   200036 630500                    EPPR0   I+1,,AUTO
         1 000234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000235   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000236   000000 011000                    NOP     0

      934    10142    1         B$JIT.ERR=E_CGCGDB;

  10142  1 000237   000133 236000 0                  LDQ     E_CGCGDB
         1 000240   000000 470400 xsym               LDP0    B$JIT$
         1 000241   000012 756100                    STQ     10,,PR0

      935    10143        /*E* ERROR:   KQM-E$CGCGDB-E
      936    10144             MESSAGE: Can't get defer blocks.
      937    10145             MESSAGE1: The requested number of defer blocks cannot be
      938    10146                       obtained due to insufficient memory. */
      939    10147    1         ALTRETURN;

  10147  1 000242   000000 702200 xent               TSX2  ! X66_AALT

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:160  
      940    10148        /**/
      941    10149        /*F* NAME:         KQM$GETMIN
      942    10150             PURPOSE:      To adjust CURPG when MINPG changes
      943    10151             DESCRIPTION:  Pages kept on the FREE list due to page releases
      944    10152                           below MINPG are released when MINPG gets decreased
      945    10153                           by the AU.
      946    10154
      947    10155                           Pages are aquired when MINPG increases; ALTRETs
      948    10156                           with JIT.ERR set if cannot get 'em.
      949    10157        */
      950    10158    1   KQM$GETMIN: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10158  1 000243   000000 700200 xent  KQM$GETMIN   TSX0  ! X66_AUTO_3
         1 000244   000050 000003                    ZERO    40,3

      951    10159        /**/
      952    10160              %LOCK (G=KQ$CG.MMD.GATE);

  10161  1 000245   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000246   000001 036003                    ADLQ    1,DU
         1 000247   200036 756100                    STQ     I+1,,AUTO
         1 000250   200036 630500                    EPPR0   I+1,,AUTO
         1 000251   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000252   000000 701000 xent               TSX1    HFC$LOCK
         1 000253   000000 011000                    NOP     0

      953    10163    1         IF KQ$CG.MMD.CURPG > KQ$CG.AUCTL.MINPG THEN

  10163  1 000254   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000255   000131 236100                    LDQ     89,,PR0
         1 000256   000022 772000                    QRL     18
         1 000257   000006 116100                    CMPQ    6,,PR0
         1 000260   000304 605000 1                  TPL     s:10174

      954    10164    2           DO WHILE (KQ$CG.MMD.FREECNT > KQ$CG.AUCTL.MINPG);

  10164  1 000261   000007 116100                    CMPQ    7,,PR0
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:161  
         1 000262   000325 605000 1                  TPL     s:10181

      955    10165    3             DO INHIBIT;

      956    10166    3             CALL GETPAGECGNL;

  10166  1 000263   003474 701200 1                  TSX1  ! GETPAGECGNL
         1 000264   000000 011200                    NOP   ! 0

      957    10167    3             CALL RELPAGECGNL;

  10167  1 000265   003710 701200 1                  TSX1  ! RELPAGECGNL
         1 000266   000000 011200                    NOP   ! 0

      958    10168                  %LOCK (G=KQ$CG.MMD.GATE);

  10169  1 000267   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 000270   000001 036203                    ADLQ  ! 1,DU
         1 000271   200036 756300                    STQ   ! I+1,,AUTO
         1 000272   200036 630700                    EPPR0 ! I+1,,AUTO
         1 000273   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000274   000000 701200 xent               TSX1  ! HFC$LOCK
         1 000275   000000 011200                    NOP   ! 0

      959    10171    3             END;

      960    10172    2           END;

  10172  1 000276   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000277   000131 236100                    LDQ     89,,PR0
         1 000300   000022 772000                    QRL     18
         1 000301   000007 116100                    CMPQ    7,,PR0
         1 000302   000263 604000 1                  TMI     s:10166
         1 000303   000325 710000 1                  TRA     s:10181

      961    10173    1         ELSE
      962    10174    2           DO WHILE (KQ$CG.MMD.CURPG < KQ$CG.AUCTL.MINPG);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:162  

  10174  1 000304   000325 604400 1                  TMOZ    s:10181

      963    10175    2           CALL GETPAGECGM ALTRET(GETMINFAIL);

  10175  1 000305   003511 701000 1                  TSX1    GETPAGECGM
         1 000306   000326 702000 1                  TSX2    GETMINFAIL

      964    10176    2           CALL RELPAGECGNL;

  10176  1 000307   003710 701000 1                  TSX1    RELPAGECGNL
         1 000310   000000 011000                    NOP     0

      965    10177                %LOCK (G=KQ$CG.MMD.GATE);

  10178  1 000311   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000312   000001 036003                    ADLQ    1,DU
         1 000313   200036 756100                    STQ     I+1,,AUTO
         1 000314   200036 630500                    EPPR0   I+1,,AUTO
         1 000315   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000316   000000 701000 xent               TSX1    HFC$LOCK
         1 000317   000000 011000                    NOP     0

      966    10180    2           END;

  10180  1 000320   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000321   000131 236100                    LDQ     89,,PR0
         1 000322   000022 772000                    QRL     18
         1 000323   000006 116100                    CMPQ    6,,PR0
         1 000324   000305 605400 1                  TPNZ    s:10175

      967    10181    1         GOTO GETOUT;

  10181  1 000325   003104 710000 1                  TRA     GETOUT

  10173  1 000326                       GETMINFAIL   null
      968    10182    1   GETMINFAIL:;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:163  
      969    10183              %UNLOCK (G=KQ$CG.MMD.GATE);

  10184  1 000326   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000327   000001 036003                    ADLQ    1,DU
         1 000330   200036 756100                    STQ     I+1,,AUTO
         1 000331   200036 630500                    EPPR0   I+1,,AUTO
         1 000332   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000333   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000334   000000 011000                    NOP     0

      970    10186    1         B$JIT.ERR=E_CGCGMP;

  10186  1 000335   000132 236000 0                  LDQ     E_CGCGMP
         1 000336   000000 470400 xsym               LDP0    B$JIT$
         1 000337   000012 756100                    STQ     10,,PR0

      971    10187        /*E* ERROR:   KQM-E$CGCGMP-E
      972    10188             MESSAGE: Can't get MINPG pages for your COMGROUP
      973    10189             MESSAGE1: The requested minimum amount of memory for your
      974    10190                       COMGROUP is not available. */
      975    10191    1         ALTRETURN;

  10191  1 000340   000000 702200 xent               TSX2  ! X66_AALT

      976    10192        /**/
      977    10193        /*F* NAME:         KQM$MOREPG
      978    10194             PURPOSE:      To make more pages available if reqd.
      979    10195             DESCRIPTION:  Called when the AU increases MAXBPG.  If anyone
      980    10196                           is blocked for memory, we release blocks of memory
      981    10197                           to them.
      982    10198        */
      983    10199    1   KQM$MOREPG: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */

  10199  1 000341   000000 700200 xent  KQM$MOREPG   TSX0  ! X66_AUTO_3
         1 000342   000050 000003                    ZERO    40,3

      984    10200        /**/
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:164  
      985    10201    1         CALL BASEREL;

  10201  1 000343   002545 701000 1                  TSX1    BASEREL
         1 000344   000000 011000                    NOP     0

      986    10202    2           DO WHILE (KQ$CG.MMD.STAHD$ ~= ADDR(NIL) OR KQ$CG.MMD.MBLKHD$ ~= ADDR(NIL));

  10202  1 000345   000400 710000 1                  TRA     s:10208

      987    10203    2           I=1024-SIZEW(KQ$BAP);

  10203  1 000346   001764 235007                    LDA     1012,DL
         1 000347   200011 755100                    STA     I,,AUTO

      988    10204    2           CALL KQM$GETB (KQ$CG,P$,I) ALTRET(RTN);

  10204  1 000350   200011 630500                    EPPR0   I,,AUTO
         1 000351   200040 450500                    STP0    I+3,,AUTO
         1 000352   200015 631500                    EPPR1   P$,,AUTO
         1 000353   200037 451500                    STP1    I+2,,AUTO
         1 000354   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000355   200036 756100                    STQ     I+1,,AUTO
         1 000356   200036 630500                    EPPR0   I+1,,AUTO
         1 000357   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000360   001015 701000 1                  TSX1    s:10417
         1 000361   000407 702000 1                  TSX2    RTN

      989    10205    2           I=1024-SIZEW(KQ$BAP);

  10205  1 000362   001764 235007                    LDA     1012,DL
         1 000363   200011 755100                    STA     I,,AUTO

      990    10206    2           CALL KQM$RELB (KQ$CG,P$,I);

  10206  1 000364   200011 630500                    EPPR0   I,,AUTO
         1 000365   200040 450500                    STP0    I+3,,AUTO
         1 000366   200015 631500                    EPPR1   P$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:165  
         1 000367   200037 451500                    STP1    I+2,,AUTO
         1 000370   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000371   200036 756100                    STQ     I+1,,AUTO
         1 000372   200036 630500                    EPPR0   I+1,,AUTO
         1 000373   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000374   002461 701000 1                  TSX1    s:10971
         1 000375   000000 011000                    NOP     0

      991    10207    2           CALL BASEREL;

  10207  1 000376   002545 701000 1                  TSX1    BASEREL
         1 000377   000000 011000                    NOP     0

      992    10208    2           END;

  10208  1 000400   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000401   000013 236100                    LDQ     11,,PR0
         1 000402   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000403   000346 601000 1                  TNZ     s:10203
         1 000404   000014 236100                    LDQ     12,,PR0
         1 000405   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000406   000346 601000 1                  TNZ     s:10203

      993    10209    1   RTN:  RETURN;

  10209  1 000407   000000 702200 xent  RTN          TSX2  ! X66_ARET

      994    10210        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:166  
      995    10211        /**/
      996    10212        /*F* NAME:         KQM$GARBDONE
      997    10213             PURPOSE:      To signal the garbage collector's completion
      998    10214                           of a phase
      999    10215             DESCRIPTION:  If nobody is waiting for memory, resets the
     1000    10216                           GIP flag and ALTRETs, else if ERRFLG is 0
     1001    10217                           (he can try some more) RETURNs with GIP still
     1002    10218                           set, else gives errors to all waiting people
     1003    10219                           and RETURNs with GIP reset.
     1004    10220                           Called with no gates locked.
     1005    10221        */
     1006    10222    1   KQM$GARBDONE: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10222  1 000410   000000 700200 xent  KQM$GARBDONE TSX0  ! X66_AUTO_3
         1 000411   000050 000003                    ZERO    40,3

     1007    10223        /**/
     1008    10224    1         CALL BASEREL;

  10224  1 000412   002545 701000 1                  TSX1    BASEREL
         1 000413   000000 011000                    NOP     0

     1009    10225              %LOCK (G=KQ$CG.MMD.GATE);

  10226  1 000414   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000415   000001 036003                    ADLQ    1,DU
         1 000416   200036 756100                    STQ     I+1,,AUTO
         1 000417   200036 630500                    EPPR0   I+1,,AUTO
         1 000420   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000421   000000 701000 xent               TSX1    HFC$LOCK
         1 000422   000000 011000                    NOP     0

     1010    10228    1         IF  KQ$CG.MMD.STAHD$ = ADDR(NIL)

  10228  1 000423   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000424   000013 236100                    LDQ     11,,PR0
         1 000425   000001 116000 xsym               CMPQ    B_VECTNIL+1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:167  
         1 000426   000437 601000 1                  TNZ     s:10235
         1 000427   000014 236100                    LDQ     12,,PR0
         1 000430   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000431   000437 601000 1                  TNZ     s:10235

     1011    10229    1         AND KQ$CG.MMD.MBLKHD$ = ADDR(NIL) THEN
     1012    10230    2           DO;

     1013    10231    2           KQ$CG.MMD.GIP='0'B;

  10231  1 000432   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000433   000011 356100                    ANSQ    9,,PR0

     1014    10232    2           KQ$CG.MMD.GFORCE='0'B;

  10232  1 000434   000001 236000 2                  LDQ     1
         1 000435   000011 356100                    ANSQ    9,,PR0

     1015    10233    2           GOTO ALTOUT;

  10233  1 000436   000017 710000 1                  TRA     NOGET

     1016    10234    2           END;
     1017    10235    1         IF ERRFLG = 0 THEN GOTO GETOUT;

  10235  1 000437   200005 471500                    LDP1    @ERRFLG,,AUTO
         1 000440   100000 235100                    LDA     0,,PR1
         1 000441   003104 600000 1                  TZE     GETOUT

     1018    10236        /**/
     1019    10237                      /* Give errors to everyone */
     1020    10238    2           DO WHILE (KQ$CG.MMD.STAHD$ ~= ADDR(NIL));

  10238  1 000442   000466 710000 1                  TRA     s:10244

     1021    10239    2           STA$=KQ$CG.MMD.STAHD$;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:168  
  10239  1 000443   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000444   000013 236100                    LDQ     11,,PR0
         1 000445   200024 756100                    STQ     STA$,,AUTO

     1022    10240    2           CALL UNBLOCKS (KQ$CG.MMD.STAHD$,ADDR(NIL));

  10240  1 000446   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000447   200045 756100                    STQ     I+8,,AUTO
         1 000450   200045 631500                    EPPR1   I+8,,AUTO
         1 000451   200030 451500                    STP1    @RTYP+1,,AUTO
         1 000452   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000453   000013 036003                    ADLQ    11,DU
         1 000454   200027 756100                    STQ     STA$+3,,AUTO
         1 000455   000557 701000 1                  TSX1    UNBLOCKS
         1 000456   000000 011000                    NOP     0

     1023    10241                %LOCK (G=KQ$CG.MMD.GATE);

  10242  1 000457   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000460   000001 036003                    ADLQ    1,DU
         1 000461   200036 756100                    STQ     I+1,,AUTO
         1 000462   200036 630500                    EPPR0   I+1,,AUTO
         1 000463   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000464   000000 701000 xent               TSX1    HFC$LOCK
         1 000465   000000 011000                    NOP     0

     1024    10244    2           END;

  10244  1 000466   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000467   000013 236100                    LDQ     11,,PR0
         1 000470   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000471   000443 601000 1                  TNZ     s:10239

     1025    10245        /**/
     1026    10246    2           DO WHILE (KQ$CG.MMD.MBLKHD$ ~= ADDR(NIL));

  10246  1 000472   000516 710000 1                  TRA     s:10252
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:169  

     1027    10247    2           MBLK$=KQ$CG.MMD.MBLKHD$;

  10247  1 000473   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000474   000014 236100                    LDQ     12,,PR0
         1 000475   200023 756100                    STQ     MBLK$,,AUTO

     1028    10248    2           CALL UNBLOCKM (KQ$CG.MMD.MBLKHD$,ADDR(NIL));

  10248  1 000476   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 000477   200046 756100                    STQ     I+9,,AUTO
         1 000500   200046 631500                    EPPR1   I+9,,AUTO
         1 000501   200030 451500                    STP1    @RTYP+1,,AUTO
         1 000502   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000503   000014 036003                    ADLQ    12,DU
         1 000504   200027 756100                    STQ     STA$+3,,AUTO
         1 000505   000706 701000 1                  TSX1    UNBLOCKM
         1 000506   000000 011000                    NOP     0

     1029    10249                %LOCK (G=KQ$CG.MMD.GATE);

  10250  1 000507   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000510   000001 036003                    ADLQ    1,DU
         1 000511   200036 756100                    STQ     I+1,,AUTO
         1 000512   200036 630500                    EPPR0   I+1,,AUTO
         1 000513   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000514   000000 701000 xent               TSX1    HFC$LOCK
         1 000515   000000 011000                    NOP     0

     1030    10252    2           END;

  10252  1 000516   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 000517   000014 236100                    LDQ     12,,PR0
         1 000520   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000521   000473 601000 1                  TNZ     s:10247

     1031    10253    1         KQ$CG.MMD.GIP='0'B;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:170  

  10253  1 000522   000031 236000 xsym               LDQ     B_VECTNIL+25
         1 000523   000011 356100                    ANSQ    9,,PR0

     1032    10254    1         GOTO GETOUT;

  10254  1 000524   003104 710000 1                  TRA     GETOUT

     1033    10255        /**/
     1034    10256        /*F* NAME:         KQM$SETBLK
     1035    10257             PURPOSE:      To initialize a just-obtained block of memory
     1036    10258             CALL:         KQM$SETBLK (KQ$CG,BLK$,REQTYP)
     1037    10259             DESCRIPTION:  BLK$ is the block, REQTYP is the type of block,
     1038    10260                           and the comgroup MMD gate is locked.  Sets up
     1039    10261                           the block and returns after unlocking the gate.
     1040    10262        */
     1041    10263    1   KQM$SETBLK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET; /* !!Doesn't ALTRET!! */

  10263  1 000525   000000 700200 xent  KQM$SETBLK   TSX0  ! X66_AUTO_3
         1 000526   000050 000003                    ZERO    40,3

     1042    10264        /**/
     1043    10265    1         ENTFLAG=0;

  10265  1 000527   200022 450100                    STZ     ENTFLAG,,AUTO

     1044    10266    1         BLK$=MEM$;

  10266  1 000530   200004 470500                    LDP0    @MEM$,,AUTO
         1 000531   000000 236100                    LDQ     0,,PR0
         1 000532   200013 756100                    STQ     BLK$,,AUTO

     1045    10267    1         REQTYP=ERRFLG;

  10267  1 000533   200005 471500                    LDP1    @ERRFLG,,AUTO
         1 000534   100000 235100                    LDA     0,,PR1
         1 000535   200021 755100                    STA     REQTYP,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:171  

     1046    10268    2           DO CASE (REQTYP);

  10268  1 000536   000006 115007                    CMPA    6,DL
         1 000537   000541 602005 1                  TNC     s:10268+3,AL
         1 000540   000554 710000 1                  TRA     s:10280
         1 000541   000554 710000 1                  TRA     s:10280
         1 000542   000547 710000 1                  TRA     s:10270
         1 000543   000550 710000 1                  TRA     s:10272
         1 000544   000551 710000 1                  TRA     s:10274
         1 000545   000552 710000 1                  TRA     s:10276
         1 000546   000553 710000 1                  TRA     s:10278

     1047    10269    2             CASE (KQMR_MBLK#);

     1048    10270    2               GOTO GOTMBLK;

  10270  1 000547   001117 710000 1                  TRA     GOTMBLK

     1049    10271    2             CASE (KQMR_RBLK#);

     1050    10272    2               GOTO GOTRBLK;

  10272  1 000550   001211 710000 1                  TRA     GOTRBLK

     1051    10273    2             CASE (KQMR_RBLKT#);

     1052    10274    2               GOTO GOTRBLKT;

  10274  1 000551   001222 710000 1                  TRA     GOTRBLKT

     1053    10275    2             CASE (KQMR_STA#);

     1054    10276    2               GOTO GOTSTA;

  10276  1 000552   001241 710000 1                  TRA     GOTSTA

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:172  
     1055    10277    2             CASE (KQMR_TYP#);

     1056    10278    2               GOTO GOTTYP;

  10278  1 000553   001317 710000 1                  TRA     GOTTYP

     1057    10279    2             CASE (ELSE);

     1058    10280    2               CALL SC_BCGMRQ;

  10280  1 000554   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 000555   000000 600000 xsid               climb   nvectors=         0

     1059    10281    2           END;

  10281  1 000556   000756 710000 1                  TRA     s:10350+2

     1060    10282        /****************************************************************
     1061    10283        *****************************************************************/
     1062    10284        /*D* NAME:         UNBLOCKS
     1063    10285             PURPOSE:      To 'unblock' a station waiting for memory
     1064    10286             INPUT:        Station gate unlocked
     1065    10287                           MM gate locked
     1066    10288                           MEM$ = buffer address to give him
     1067    10289             DESCRIPTION:  P$ is set to station's wait queue link.
     1068    10290                           Then the MM gate is unlocked.
     1069    10291                           MEM$ is set into the station's MREQ$, and
     1070    10292                           MREQ is negated.
     1071    10293                           The station's lock count is decremented by
     1072    10294                           KQP$UNLOCK and the user (if any) is unblocked.
     1073    10295                           ALTRETs if station disappears.
     1074    10296        */
     1075    10297    1   UNBLOCKS: PROC (P$,MEM$) ALTRET;

  10297  1 000557   200026 741300       UNBLOCKS     STX1  ! STA$+2,,AUTO

     1076    10298        /**/
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:173  
     1077    10299    2   DCL P$ PTR;
     1078    10300    2   DCL MEM$ PTR;
     1079    10301    2   DCL USR# UBIN BYTE UNAL;
     1080    10302    2   DCL I UBIN;
     1081    10303        /**/
     1082    10304    2         P$=STA$->KQ$STA.MREQ$;

  10304  1 000560   200024 470500                    LDP0    STA$,,AUTO
         1 000561   000024 236100                    LDQ     20,,PR0
         1 000562   200027 471500                    LDP1    @P$,,AUTO
         1 000563   100000 756100                    STQ     0,,PR1

     1083    10305    2         I=STA$->KQ$STA.MREQ;

  10305  1 000564   000020 236100                    LDQ     16,,PR0
         1 000565   000011 736000                    QLS     9
         1 000566   000033 732000                    QRS     27
         1 000567   200032 756100                    STQ     I,,AUTO

     1084    10306    2         IF MEM$ ~= ADDR(NIL) THEN

  10306  1 000570   200030 473500                    LDP3    @MEM$,,AUTO
         1 000571   300000 236100                    LDQ     0,,PR3
         1 000572   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 000573   000606 600000 1                  TZE     s:10311

     1085    10307    2          CALL KQM$SETBLK (KQ$CG,MEM$,I); /* Unlocks gate */

  10307  1 000574   200032 634500                    EPPR4   I,,AUTO
         1 000575   200040 454500                    STP4    I+3,,AUTO
         1 000576   200030 236100                    LDQ     @MEM$,,AUTO
         1 000577   200003 235100                    LDA     @KQ$CG,,AUTO
         1 000600   200036 757100                    STAQ    I+1,,AUTO
         1 000601   200036 630500                    EPPR0   I+1,,AUTO
         1 000602   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000603   000525 701000 1                  TSX1    s:10263
         1 000604   000000 011000                    NOP     0
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:174  
         1 000605   000615 710000 1                  TRA     s:10315

     1086    10308    2         ELSE
     1087    10309    3           DO;

     1088    10310                %UNLOCK (G=KQ$CG.MMD.GATE);

  10311  1 000606   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000607   000001 036003                    ADLQ    1,DU
         1 000610   200036 756100                    STQ     I+1,,AUTO
         1 000611   200036 630500                    EPPR0   I+1,,AUTO
         1 000612   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000613   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000614   000000 011000                    NOP     0

     1089    10313    3           END;

     1090    10314              %LOCK (G=STA$->KQ$STA.GATE);

  10315  1 000615   200024 236100                    LDQ     STA$,,AUTO
         1 000616   000016 036003                    ADLQ    14,DU
         1 000617   200036 756100                    STQ     I+1,,AUTO
         1 000620   200036 630500                    EPPR0   I+1,,AUTO
         1 000621   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000622   000000 701000 xent               TSX1    HFC$LOCK
         1 000623   000000 011000                    NOP     0

     1091    10317    2         IF STA$->KQ$STA.MREQ <= 0 THEN CALL SC_BCGMRQ;

  10317  1 000624   200024 470500                    LDP0    STA$,,AUTO
         1 000625   000020 236100                    LDQ     16,,PR0
         1 000626   000011 736000                    QLS     9
         1 000627   000033 732000                    QRS     27
         1 000630   000000 116003                    CMPQ    0,DU
         1 000631   000634 605400 1                  TPNZ    s:10324

  10317  1 000632   000000 713400 xsym               CLIMB   SC_BCGMRQ
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:175  
         1 000633   000000 600000 xsid               climb   nvectors=         0

     1092    10318        /*S* SCREECH_CODE: KQM-S$BCGMRQ
     1093    10319             TYPE:         SCREECH
     1094    10320             MESSAGE:      COMGROUP memory request inconsistency
     1095    10321             REMARKS:      An inconsistency has been found in a delayed
     1096    10322                           memory request.  The system cannot continue.
     1097    10323        */
     1098    10324    2         STA$->KQ$STA.MREQ=-STA$->KQ$STA.MREQ;

  10324  1 000634   200024 470500                    LDP0    STA$,,AUTO
         1 000635   000020 236100                    LDQ     16,,PR0
         1 000636   000011 736000                    QLS     9
         1 000637   000033 732000                    QRS     27
         1 000640   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000641   000001 036007                    ADLQ    1,DL
         1 000642   000022 736000                    QLS     18
         1 000643   000020 552120                    STBQ    16,'20'O,PR0

     1099    10325    2         STA$->KQ$STA.MREQ$=MEM$;

  10325  1 000644   200030 471500                    LDP1    @MEM$,,AUTO
         1 000645   100000 236100                    LDQ     0,,PR1
         1 000646   000024 756100                    STQ     20,,PR0

     1100    10326    2         USR#=STA$->KQ$STA.USR#;

  10326  1 000647   000020 236100                    LDQ     16,,PR0
         1 000650   000011 772000                    QRL     9
         1 000651   000777 376007                    ANQ     511,DL
         1 000652   000033 736000                    QLS     27
         1 000653   200031 756100                    STQ     USR#,,AUTO

     1101    10327              %UNLOCK (G=STA$->KQ$STA.GATE);

  10328  1 000654   200024 236100                    LDQ     STA$,,AUTO
         1 000655   000016 036003                    ADLQ    14,DU
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:176  
         1 000656   200036 756100                    STQ     I+1,,AUTO
         1 000657   200036 630500                    EPPR0   I+1,,AUTO
         1 000660   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000661   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000662   000000 011000                    NOP     0

     1102    10330    2         CALL KQP$UNLOCK (STA$->KQ$STA) ALTRET(ALTRT);

  10330  1 000663   200024 630500                    EPPR0   STA$,,AUTO
         1 000664   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000665   000000 701000 xent               TSX1    KQP$UNLOCK
         1 000666   000704 702000 1                  TSX2    ALTRT

     1103    10331    2         IF USR# ~= 0 THEN CALL SSR$RUE (%SS_UQA,USR#);

  10331  1 000667   200031 236100                    LDQ     USR#,,AUTO
         1 000670   777000 316003                    CANQ    -512,DU
         1 000671   000702 600000 1                  TZE     s:10332

  10331  1 000672   200031 630500                    EPPR0   USR#,,AUTO
         1 000673   200037 450500                    STP0    I+2,,AUTO
         1 000674   000003 236000 2                  LDQ     3
         1 000675   200036 756100                    STQ     I+1,,AUTO
         1 000676   200036 630500                    EPPR0   I+1,,AUTO
         1 000677   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000700   000000 701000 xent               TSX1    SSR$RUE
         1 000701   000000 011000                    NOP     0

     1104    10332    2         RETURN;

  10332  1 000702   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 000703   000001 702211                    TSX2  ! 1,X1

     1105    10333    2   ALTRT:ALTRETURN;

  10333  1 000704   200026 221300       ALTRT        LDX1  ! STA$+2,,AUTO
         1 000705   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:177  

     1106    10334        /*D* NAME:         UNBLOCKM
     1107    10335             PURPOSE:      To 'unblock' a super MBLK waiting for memory
     1108    10336             DESCRIPTION:  P$ is set to its wait queue link.
     1109    10337                           MREQ is reset and MEM$ set into MREQ$.
     1110    10338        */
     1111    10339    2   UNBLOCKM: ENTRY (P$,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  10339  1 000706   200026 741300       UNBLOCKM     STX1  ! STA$+2,,AUTO

     1112    10340        /**/
     1113    10341    2         P$=MBLK$->KQ$MBLK.XSP.MREQ$;

  10341  1 000707   200023 470500                    LDP0    MBLK$,,AUTO
         1 000710   000004 236100                    LDQ     4,,PR0
         1 000711   200027 471500                    LDP1    @P$,,AUTO
         1 000712   100000 756100                    STQ     0,,PR1

     1114    10342    2         IF MBLK$->KQ$MBLK.STATE ~= KQSS_NMEM#

  10342  1 000713   000010 236100                    LDQ     8,,PR0
         1 000714   007000 376003                    ANQ     3584,DU
         1 000715   002000 116003                    CMPQ    1024,DU
         1 000716   000724 601000 1                  TNZ     s:10343
         1 000717   000010 236100                    LDQ     8,,PR0
         1 000720   000011 736000                    QLS     9
         1 000721   000033 732000                    QRS     27
         1 000722   000000 116003                    CMPQ    0,DU
         1 000723   000726 605400 1                  TPNZ    s:10344

     1115    10343    2         OR MBLK$->KQ$MBLK.MREQ <= 0 THEN CALL SC_BCGMRQ;

  10343  1 000724   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 000725   000000 600000 xsid               climb   nvectors=         0

     1116    10344    2         MBLK$->KQ$MBLK.XSP.MREQ$=MEM$;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:178  
  10344  1 000726   200030 470500                    LDP0    @MEM$,,AUTO
         1 000727   000000 236100                    LDQ     0,,PR0
         1 000730   200023 471500                    LDP1    MBLK$,,AUTO
         1 000731   100004 756100                    STQ     4,,PR1

     1117    10345    2         MBLK$->KQ$MBLK.MREQ=-MBLK$->KQ$MBLK.MREQ;

  10345  1 000732   100010 236100                    LDQ     8,,PR1
         1 000733   000011 736000                    QLS     9
         1 000734   000033 732000                    QRS     27
         1 000735   000027 676000 xsym               ERQ     B_VECTNIL+23
         1 000736   000001 036007                    ADLQ    1,DL
         1 000737   000022 736000                    QLS     18
         1 000740   100010 552120                    STBQ    8,'20'O,PR1

     1118    10346              %UNLOCK (G=KQ$CG.MMD.GATE);

  10347  1 000741   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 000742   000001 036003                    ADLQ    1,DU
         1 000743   200036 756100                    STQ     I+1,,AUTO
         1 000744   200036 630500                    EPPR0   I+1,,AUTO
         1 000745   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000746   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000747   000000 011000                    NOP     0

     1119    10349    2         CALL KQL$SRQ (MBLK$->KQ$MBLK);

  10349  1 000750   200023 630500                    EPPR0   MBLK$,,AUTO
         1 000751   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000752   000000 701000 xent               TSX1    KQL$SRQ
         1 000753   000000 011000                    NOP     0

     1120    10350    2         RETURN;

  10350  1 000754   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 000755   000001 702211                    TSX2  ! 1,X1
         1 000756   000761 710000 1                  TRA     s:10366
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:179  

     1121    10351    2   END UNBLOCKS;
     1122    10352        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:180  
     1123    10353        /*F* NAME:         KQM$GETBR
     1124    10354             PURPOSE:      To reg for memory
     1125    10355             INPUT:        MEM$ station block pointer of caller
     1126    10356                           ERRFLAG memory request type (KQMR_XXXX#)
     1127    10357             OUTPUT:       If return, MEM$ = buffer
     1128    10358                           If ALTRET, MEM$ = ADDR(NIL) (comgroup is full)
     1129    10359             DESCRIPTION:  Must be called on behalf of a user.  The user
     1130    10360                           is REGd if necessary to let the garbage collector
     1131    10361                           run, and unblocked when memory is available or
     1132    10362                           when the garbage collector fails.
     1133    10363        */
     1134    10364    1   KQM$GETBR: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10364  1 000757   000000 700200 xent  KQM$GETBR    TSX0  ! X66_AUTO_3
         1 000760   000050 000003                    ZERO    40,3

     1135    10365        /**/
     1136    10366    1         ENTFLAG=1;

  10366  1 000761   000001 235007                    LDA     1,DL
         1 000762   200022 755100                    STA     ENTFLAG,,AUTO

     1137    10367    1         GOTO GBS;

  10367  1 000763   000770 710000 1                  TRA     GBS

     1138    10368        /**/
     1139    10369        /*F* NAME:         KQM$GETBD
     1140    10370             PURPOSE:      To delay for memory
     1141    10371             DESCRIPTION:  Like KQM$GETBR but there is no user to REG.
     1142    10372                           Instead, the ALTRET indicates there is no
     1143    10373                           memory now available and that the station has
     1144    10374                           been placed on the wait list.  When the request
     1145    10375                           completes, KQ$STA.MREQ will be set to minus the
     1146    10376                           request type code passed in, and KQ$STA.MREQ$
     1147    10377                           will be set to ADDR(NIL) if none available, or
     1148    10378                           the buffer address else.  The station lock count
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:181  
     1149    10379                           is incremented while the station is on the wait
     1150    10380                           list (which delays disconnect/close).
     1151    10381        */
     1152    10382    1   KQM$GETBD: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10382  1 000764   000000 700200 xent  KQM$GETBD    TSX0  ! X66_AUTO_3
         1 000765   000050 000003                    ZERO    40,3

     1153    10383        /**/
     1154    10384    1         ENTFLAG=2;

  10384  1 000766   000002 235007                    LDA     2,DL
         1 000767   200022 755100                    STA     ENTFLAG,,AUTO

     1155    10385    1   GBS:  STA$=MEM$;

  10385  1 000770   200004 470500       GBS          LDP0    @MEM$,,AUTO
         1 000771   000000 236100                    LDQ     0,,PR0
         1 000772   200024 756100                    STQ     STA$,,AUTO

     1156    10386              %LOCK (G=STA$->KQ$STA.GATE);

  10387  1 000773   000016 036003                    ADLQ    14,DU
         1 000774   200036 756100                    STQ     I+1,,AUTO
         1 000775   200036 630500                    EPPR0   I+1,,AUTO
         1 000776   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000777   000000 701000 xent               TSX1    HFC$LOCK
         1 001000   000000 011000                    NOP     0

     1157    10389    1         REQTYP=ERRFLG;

  10389  1 001001   200005 470500                    LDP0    @ERRFLG,,AUTO
         1 001002   000000 235100                    LDA     0,,PR0
         1 001003   200021 755100                    STA     REQTYP,,AUTO

     1158    10390    1         GOTO GETB;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:182  
  10390  1 001004   001077 710000 1                  TRA     GETB

     1159    10391        /**/
     1160    10392        /*F* NAME:         KQM$GETBM
     1161    10393             PURPOSE:      To set a super MBLK's request for memory
     1162    10394             DESCRIPTION:  Like KQM$GETBD except the requestor is a super
     1163    10395                           MBLK (i.e. KQL$XXFIND).  If the requested block
     1164    10396                           is available, then RETURN, else the MBLK is put
     1165    10397                           on the super MBLK wait list, and 'unblocked'
     1166    10398                           when the request completes.
     1167    10399                           KQ$SUPERMBLK.MREQ indicates request in progress,
     1168    10400                           and KQ$SUPERMBLK.MREQ$ is set when complete to
     1169    10401                           a buffer address, or ADDR(NIL) if none.
     1170    10402                           MEM$ is passed in as the super MBLK address.
     1171    10403        */
     1172    10404    1   KQM$GETBM: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10404  1 001005   000000 700200 xent  KQM$GETBM    TSX0  ! X66_AUTO_3
         1 001006   000050 000003                    ZERO    40,3

     1173    10405        /**/
     1174    10406    1         REQTYP=ERRFLG;

  10406  1 001007   200005 470500                    LDP0    @ERRFLG,,AUTO
         1 001010   000000 235100                    LDA     0,,PR0
         1 001011   200021 755100                    STA     REQTYP,,AUTO

     1175    10407    1         ENTFLAG=-1;

  10407  1 001012   000001 336007                    LCQ     1,DL
         1 001013   200022 756100                    STQ     ENTFLAG,,AUTO

     1176    10408    1         GOTO GETB;

  10408  1 001014   001077 710000 1                  TRA     GETB

     1177    10409        /**/
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:183  
     1178    10410        /*F* NAME:         KQM$GETB
     1179    10411             PURPOSE:      To allocate a block of memory for the CG contexted
     1180    10412                           by KQ$CG
     1181    10413             DESCRPTION:   Returns with MEM$ pointing to an allocated block
     1182    10414                           of size ERRFLG words, else ALTRETs and sets
     1183    10415                           ERRFLG.  Does not kick the garbage collector.
     1184    10416        */
     1185    10417    1   KQM$GETB: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10417  1 001015   000000 700200 xent  KQM$GETB     TSX0  ! X66_AUTO_3
         1 001016   000050 000003                    ZERO    40,3

     1186    10418    1         ENTFLAG=0;

  10418  1 001017   200022 450100                    STZ     ENTFLAG,,AUTO

     1187    10419    1         REQTYP=KQMR_ANY#;

  10419  1 001020   000006 235007                    LDA     6,DL
         1 001021   200021 755100                    STA     REQTYP,,AUTO

     1188    10420    1         GSIZE=ERRFLG;

  10420  1 001022   200005 470500                    LDP0    @ERRFLG,,AUTO
         1 001023   000000 235100                    LDA     0,,PR0
         1 001024   200017 755100                    STA     GSIZE,,AUTO

     1189    10421    1         GOTO GETB;

  10421  1 001025   001077 710000 1                  TRA     GETB

     1190    10422        /**/
     1191    10423        /*F* NAME:         KQM$GETBK
     1192    10424             PURPOSE:      To allocate a block of memory for the CG contexted
     1193    10425                           by KQ$CG
     1194    10426             DESCRIPTION:  Same as KQM$GETB but kicks the garbage collector
     1195    10427                           before ALTRETing.
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:184  
     1196    10428        */
     1197    10429    1   KQM$GETBK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10429  1 001026   000000 700200 xent  KQM$GETBK    TSX0  ! X66_AUTO_3
         1 001027   000050 000003                    ZERO    40,3

     1198    10430    1         ENTFLAG=0;

  10430  1 001030   200022 450100                    STZ     ENTFLAG,,AUTO

     1199    10431    1         REQTYP=KQMR_ANYK#;

  10431  1 001031   000007 235007                    LDA     7,DL
         1 001032   200021 755100                    STA     REQTYP,,AUTO

     1200    10432    1         GSIZE=ERRFLG;

  10432  1 001033   200005 470500                    LDP0    @ERRFLG,,AUTO
         1 001034   000000 235100                    LDA     0,,PR0
         1 001035   200017 755100                    STA     GSIZE,,AUTO

     1201    10433    1         GOTO GETB;

  10433  1 001036   001077 710000 1                  TRA     GETB

     1202    10434        /**/
     1203    10435        /*F* NAME:         KQM$GETMTYP
     1204    10436             PURPOSE:      To allocate an MTYP blk to the CG contexted by KQ$CG
     1205    10437             DESCRIPTION:  Returns with MEM$ pointing to the allocated MTYP blk,
     1206    10438                           else ALTRETs with standard ERRFLG.
     1207    10439                           The block is set to inited values, except:
     1208    10440                            MPRIO             set from KQ$CG.AUCTL.TYPPRIO
     1209    10441                           (if QISS = 0)
     1210    10442                            QTN.MPRIO         set from KQ$CG.AUCTL.TYPPRIO
     1211    10443                            QTN.MXACT         set from KQ$CG.AUCTL.MXACT
     1212    10444                            QTN.AUTORCVR      set from KQ$CG.AUCTL.AUTORCVR
     1213    10445        */
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:185  
     1214    10446    1   KQM$GETMTYP: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10446  1 001037   000000 700200 xent  KQM$GETMTYP  TSX0  ! X66_AUTO_3
         1 001040   000050 000003                    ZERO    40,3

     1215    10447    1         ENTFLAG=0;

  10447  1 001041   200022 450100                    STZ     ENTFLAG,,AUTO

     1216    10448    1         REQTYP=KQMR_TYP#;

  10448  1 001042   000005 235007                    LDA     5,DL
         1 001043   200021 755100                    STA     REQTYP,,AUTO

     1217    10449    1         GOTO GETB;

  10449  1 001044   001077 710000 1                  TRA     GETB

     1218    10450        /**/
     1219    10451        /*F* NAME:         KQM$GETRBLK
     1220    10452             PURPOSE:      To allocate a DCB RBLK for the CG contexted by KQ$CG
     1221    10453             DESCRIPTION:  Returns with MEM$ pointing to the allocated RBLK,
     1222    10454                           else ALTRETs with standard ERRFLG.
     1223    10455        */
     1224    10456    1   KQM$GETRBLK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10456  1 001045   000000 700200 xent  KQM$GETRBLK  TSX0  ! X66_AUTO_3
         1 001046   000050 000003                    ZERO    40,3

     1225    10457    1         ENTFLAG=0;

  10457  1 001047   200022 450100                    STZ     ENTFLAG,,AUTO

     1226    10458    1         REQTYP=KQMR_RBLK#;

  10458  1 001050   000002 235007                    LDA     2,DL
         1 001051   200021 755100                    STA     REQTYP,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:186  

     1227    10459    1         GOTO GETB;

  10459  1 001052   001077 710000 1                  TRA     GETB

     1228    10460        /**/
     1229    10461        /*F* NAME:         KQM$GETRBLKT
     1230    10462             PURPOSE:      To get an RBLK for a TERMINAL
     1231    10463             DESCRIPTION:  Same as KQM$GETRBLK, but gets a shorter one
     1232    10464        */
     1233    10465    1   KQM$GETRBLKT: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10465  1 001053   000000 700200 xent  KQM$GETRBLKT TSX0  ! X66_AUTO_3
         1 001054   000050 000003                    ZERO    40,3

     1234    10466    1         ENTFLAG=0;

  10466  1 001055   200022 450100                    STZ     ENTFLAG,,AUTO

     1235    10467    1         REQTYP=KQMR_RBLKT#;

  10467  1 001056   000003 235007                    LDA     3,DL
         1 001057   200021 755100                    STA     REQTYP,,AUTO

     1236    10468    1         GOTO GETB;

  10468  1 001060   001077 710000 1                  TRA     GETB

     1237    10469        /**/
     1238    10470        /*F* NAME:         KQM$GETSTA
     1239    10471             PURPOSE:      To allocate a STA blk to the CG contexted by KQ$CG
     1240    10472             DESCRIPTION:  Returns with MEM$ pointing to the allocated STA blk,
     1241    10473                           else ALTRETs with standard ERRFLG.
     1242    10474                           The block is set to inited values, except:
     1243    10475                            MPRIO             set from KQ$CG.AUCTL.STAPRIO
     1244    10476                            CG$               set to context blk address
     1245    10477                           (if QISS = 1)
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:187  
     1246    10478                            QTN.MPRIO         set from KQ$CG.AUCTL.STAPRIO
     1247    10479                            QTN.MXACT         set from KQ$CG.AUCTL.MXACT
     1248    10480                            QTN.AUTORCVR      set from KQ$CG.AUCTL.AUTORCVR
     1249    10481        */
     1250    10482    1   KQM$GETSTA: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10482  1 001061   000000 700200 xent  KQM$GETSTA   TSX0  ! X66_AUTO_3
         1 001062   000050 000003                    ZERO    40,3

     1251    10483    1         ENTFLAG=0;

  10483  1 001063   200022 450100                    STZ     ENTFLAG,,AUTO

     1252    10484    1         REQTYP=KQMR_STA#;

  10484  1 001064   000004 235007                    LDA     4,DL
         1 001065   200021 755100                    STA     REQTYP,,AUTO

     1253    10485    1         GOTO GETB;

  10485  1 001066   001077 710000 1                  TRA     GETB

     1254    10486        /**/
     1255    10487        /*F* NAME:         KQM$GETMBLK
     1256    10488             PURPOSE:      To allocate an MBLK to the CG contexted by KQ$CG
     1257    10489             DESCRIPTION:  Returns with MEM$ pointing to the allocated MBLK,
     1258    10490                           else ALTRETs with standard ERRFLG.
     1259    10491        */
     1260    10492    1   KQM$GETMBLK: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET;

  10492  1 001067   000000 700200 xent  KQM$GETMBLK  TSX0  ! X66_AUTO_3
         1 001070   000050 000003                    ZERO    40,3

     1261    10493                           /* Fast path for MBLKs */
     1262    10494    1         GSIZE=SIZEW(KQ$MBLK);

  10494  1 001071   000020 235007                    LDA     16,DL
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:188  
         1 001072   200017 755100                    STA     GSIZE,,AUTO

     1263    10495    1         CALL GETBLK ALTRET(NOGET);

  10495  1 001073   001567 701000 1                  TSX1    GETBLK
         1 001074   000017 702000 1                  TSX2    NOGET

     1264    10496    1         ENTFLAG=0;

  10496  1 001075   200022 450100                    STZ     ENTFLAG,,AUTO

     1265    10497    1         GOTO GOTMBLK;

  10497  1 001076   001117 710000 1                  TRA     GOTMBLK

  10496  1 001077                       GETB         null
     1266    10498    1   GETB: ;
     1267    10499    2           DO CASE (REQTYP);

  10499  1 001077   200021 235100                    LDA     REQTYP,,AUTO
         1 001100   000010 115007                    CMPA    8,DL
         1 001101   001103 602005 1                  TNC     GETB+4,AL
         1 001102   001360 710000 1                  TRA     s:10573
         1 001103   001360 710000 1                  TRA     s:10573
         1 001104   001113 710000 1                  TRA     s:10502
         1 001105   001205 710000 1                  TRA     s:10522
         1 001106   001216 710000 1                  TRA     s:10528
         1 001107   001227 710000 1                  TRA     s:10534
         1 001110   001305 710000 1                  TRA     s:10552
         1 001111   001345 710000 1                  TRA     s:10563
         1 001112   001350 710000 1                  TRA     s:10567

     1268    10500
     1269    10501    2             CASE (KQMR_MBLK#);

     1270    10502    2               GSIZE=SIZEW(KQ$MBLK);

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:189  
  10502  1 001113   000020 236007                    LDQ     16,DL
         1 001114   200017 756100                    STQ     GSIZE,,AUTO

     1271    10503    2               CALL GETBLK ALTRET(NOGOT);

  10503  1 001115   001567 701000 1                  TSX1    GETBLK
         1 001116   001362 702000 1                  TSX2    NOGOT

     1272    10504    2   GOTMBLK:    BLK$->KQ$MBLK=KQ_IMBLK;

  10504  1 001117   200013 470500       GOTMBLK      LDP0    BLK$,,AUTO
         1 001120   000100 100400                    MLR     fill='000'O
         1 001121   000000 000100 xsym               ADSC9   KQ_IMBLK                 cn=0,n=64
         1 001122   000000 000100                    ADSC9   0,,PR0                   cn=0,n=64

     1273    10505    2               CALL SSS$XSYSTIME (BLK$->KQ$MBLK.UTS,J);

  10505  1 001123   200007 630500                    EPPR0   J,,AUTO
         1 001124   200037 450500                    STP0    I+2,,AUTO
         1 001125   200013 236100                    LDQ     BLK$,,AUTO
         1 001126   000007 036003                    ADLQ    7,DU
         1 001127   200036 756100                    STQ     I+1,,AUTO
         1 001130   200036 630500                    EPPR0   I+1,,AUTO
         1 001131   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 001132   000000 701000 xent               TSX1    SSS$XSYSTIME
         1 001133   000000 011000                    NOP     0

     1274    10506    2               BLK$->KQ$MBLK.STAMP=J;

  10506  1 001134   200007 720100                    LXL0    J,,AUTO
         1 001135   200013 470500                    LDP0    BLK$,,AUTO
         1 001136   000001 440100                    SXL0    1,,PR0

     1275    10507    2   GOTB:       MEM$=BLK$;

  10507  1 001137   200013 236100       GOTB         LDQ     BLK$,,AUTO
         1 001140   200004 470500                    LDP0    @MEM$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:190  
         1 001141   000000 756100                    STQ     0,,PR0

     1276    10508    2               IF ENTFLAG > 0 THEN

  10508  1 001142   200022 235100                    LDA     ENTFLAG,,AUTO
         1 001143   001153 604400 1                  TMOZ    s:10515

     1277    10509    3                 DO;

     1278    10510                      %UNLOCK (G=STA$->KQ$STA.GATE);

  10511  1 001144   200024 236100                    LDQ     STA$,,AUTO
         1 001145   000016 036003                    ADLQ    14,DU
         1 001146   200036 756100                    STQ     I+1,,AUTO
         1 001147   200036 630500                    EPPR0   I+1,,AUTO
         1 001150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001151   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001152   000000 011000                    NOP     0

     1279    10513    3                 END;

     1280    10514                    %UNLOCK (G=KQ$CG.MMD.GATE);

  10515  1 001153   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 001154   000001 036003                    ADLQ    1,DU
         1 001155   200036 756100                    STQ     I+1,,AUTO
         1 001156   200036 630500                    EPPR0   I+1,,AUTO
         1 001157   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001160   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001161   000000 011000                    NOP     0

     1281    10517    2               IF KQ_LOG.MM THEN

  10517  1 001162   000000 234000 xsym               SZN     KQ_LOG
         1 001163   001204 605000 1                  TPL     s:10519

     1282    10518    2                CALL KQZ$LOG (KQ$CG,%KQLOG_MGET,0,REQTYP,0,MEM$,GSIZE);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:191  

  10518  1 001164   200017 630500                    EPPR0   GSIZE,,AUTO
         1 001165   200044 450500                    STP0    I+7,,AUTO
         1 001166   200004 236100                    LDQ     @MEM$,,AUTO
         1 001167   000005 235000 2                  LDA     5
         1 001170   200042 757100                    STAQ    I+5,,AUTO
         1 001171   200021 631500                    EPPR1   REQTYP,,AUTO
         1 001172   200041 451500                    STP1    I+4,,AUTO
         1 001173   000005 236000 2                  LDQ     5
         1 001174   200040 756100                    STQ     I+3,,AUTO
         1 001175   000006 236000 2                  LDQ     6
         1 001176   200003 235100                    LDA     @KQ$CG,,AUTO
         1 001177   200036 757100                    STAQ    I+1,,AUTO
         1 001200   200036 630500                    EPPR0   I+1,,AUTO
         1 001201   000025 631400 xsym               EPPR1   B_VECTNIL+21
         1 001202   000000 701000 xent               TSX1    KQZ$LOG
         1 001203   000000 011000                    NOP     0

     1283    10519    2               RETURN;

  10519  1 001204   000000 702200 xent               TSX2  ! X66_ARET

     1284    10520
     1285    10521    2             CASE (KQMR_RBLK#);

     1286    10522    2               GSIZE=SIZEW(KQ$RBLK);

  10522  1 001205   000022 236007                    LDQ     18,DL
         1 001206   200017 756100                    STQ     GSIZE,,AUTO

     1287    10523    2               CALL GETBLK ALTRET(NOGOT);

  10523  1 001207   001567 701000 1                  TSX1    GETBLK
         1 001210   001362 702000 1                  TSX2    NOGOT

     1288    10524    2   GOTRBLK:    BLK$->KQ$RBLK=KQ_IRBLK;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:192  
  10524  1 001211   200013 470500       GOTRBLK      LDP0    BLK$,,AUTO
         1 001212   000100 100400                    MLR     fill='000'O
         1 001213   000000 000110 xsym               ADSC9   KQ_IRBLK                 cn=0,n=72
         1 001214   000000 000110                    ADSC9   0,,PR0                   cn=0,n=72

     1289    10525    2               GOTO GOTB;

  10525  1 001215   001137 710000 1                  TRA     GOTB

     1290    10526
     1291    10527    2             CASE (KQMR_RBLKT#);

     1292    10528    2               GSIZE=SIZEW(KQ$RBLKT);

  10528  1 001216   000016 236007                    LDQ     14,DL
         1 001217   200017 756100                    STQ     GSIZE,,AUTO

     1293    10529    2               CALL GETBLK ALTRET(NOGOT);

  10529  1 001220   001567 701000 1                  TSX1    GETBLK
         1 001221   001362 702000 1                  TSX2    NOGOT

     1294    10530    2   GOTRBLKT:   BLK$->KQ$RBLKT=KQ_IRBLKT;

  10530  1 001222   200013 470500       GOTRBLKT     LDP0    BLK$,,AUTO
         1 001223   000100 100400                    MLR     fill='000'O
         1 001224   000000 000070 xsym               ADSC9   KQ_IRBLKT                cn=0,n=56
         1 001225   000000 000070                    ADSC9   0,,PR0                   cn=0,n=56

     1295    10531    2               GOTO GOTB;

  10531  1 001226   001137 710000 1                  TRA     GOTB

     1296    10532
     1297    10533    2             CASE (KQMR_STA#);

     1298    10534    2               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$QTN);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:193  

  10534  1 001227   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001230   000106 235100                    LDA     70,,PR0
         1 001231   001235 600000 1                  TZE     s:10535

  10534  1 001232   000066 236007                    LDQ     54,DL
         1 001233   200017 756100                    STQ     GSIZE,,AUTO
         1 001234   001237 710000 1                  TRA     s:10536

     1299    10535    2               ELSE GSIZE=SIZEW(KQ$STA);

  10535  1 001235   000044 236007                    LDQ     36,DL
         1 001236   200017 756100                    STQ     GSIZE,,AUTO

     1300    10536    2               CALL GETBLKP ALTRET(NOGOT);

  10536  1 001237   001541 701000 1                  TSX1    GETBLKP
         1 001240   001362 702000 1                  TSX2    NOGOT

     1301    10537    2   GOTSTA:     IF KQ$CG.QISS THEN

  10537  1 001241   200003 470500       GOTSTA       LDP0    @KQ$CG,,AUTO
         1 001242   000106 235100                    LDA     70,,PR0
         1 001243   001250 600000 1                  TZE     s:10539

     1302    10538    2                BLK$->KQ$QTN=QTN_INIT;

  10538  1 001244   200013 471500                    LDP1    BLK$,,AUTO
         1 001245   000100 100400                    MLR     fill='000'O
         1 001246   000044 000324 0                  ADSC9   QTN_INIT                 cn=0,n=212
         1 001247   100000 000324                    ADSC9   0,,PR1                   cn=0,n=212

     1303    10539    2               BLK$->KQ$STA=STA_INIT;

  10539  1 001250   200013 471500                    LDP1    BLK$,,AUTO
         1 001251   000100 100400                    MLR     fill='000'O
         1 001252   000000 000220 0                  ADSC9   STA_INIT                 cn=0,n=144
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:194  
         1 001253   100000 000220                    ADSC9   0,,PR1                   cn=0,n=144

     1304    10540    2               BLK$->KQ$STA.CG$=ADDR(KQ$CG);

  10540  1 001254   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 001255   200013 471500                    LDP1    BLK$,,AUTO
         1 001256   100007 756100                    STQ     7,,PR1

     1305    10541    2               BLK$->KQ$STA.MPRIO=KQ$CG.AUCTL.STAPRIO;

  10541  1 001257   200013 471500                    LDP1    BLK$,,AUTO
         1 001260   000131 236100                    LDQ     89,,PR0
         1 001261   000011 736000                    QLS     9
         1 001262   100015 552120                    STBQ    13,'20'O,PR1

     1306    10542    2               IF KQ$CG.QISS THEN

  10542  1 001263   000106 235100                    LDA     70,,PR0
         1 001264   001304 600000 1                  TZE     s:10549

     1307    10543    3                 DO;

     1308    10544    3                 MPRIO=BLK$->KQ$STA.MPRIO;

  10544  1 001265   100015 236100                    LDQ     13,,PR1
         1 001266   000022 772000                    QRL     18
         1 001267   000777 376007                    ANQ     511,DL
         1 001270   200020 756100                    STQ     MPRIO,,AUTO

     1309    10545    3   GOTBQ:        BLK$->KQ$QTN.MPRIO=MPRIO;

  10545  1 001271   200013 470500       GOTBQ        LDP0    BLK$,,AUTO
         1 001272   200020 236100                    LDQ     MPRIO,,AUTO
         1 001273   000022 736000                    QLS     18
         1 001274   000050 552120                    STBQ    40,'20'O,PR0

     1310    10546    3                 BLK$->KQ$QTN.MXACT=KQ$CG.AUCTL.MXACT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:195  

  10546  1 001275   200003 471500                    LDP1    @KQ$CG,,AUTO
         1 001276   100132 235100                    LDA     90,,PR1
         1 001277   000045 755100                    STA     37,,PR0

     1311    10547    3                 BLK$->KQ$QTN.AUTORCVR=KQ$CG.AUCTL.AUTORCVR;

  10547  1 001300   100136 236100                    LDQ     94,,PR1
         1 001301   000050 676100                    ERQ     40,,PR0
         1 001302   400000 376003                    ANQ     -131072,DU
         1 001303   000050 656100                    ERSQ    40,,PR0

     1312    10548    3                 END;

     1313    10549    2               GOTO GOTB;

  10549  1 001304   001137 710000 1                  TRA     GOTB

     1314    10550
     1315    10551    2             CASE (KQMR_TYP#);

     1316    10552    2               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$MTYP);

  10552  1 001305   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001306   000106 235100                    LDA     70,,PR0
         1 001307   001313 600000 1                  TZE     s:10553

  10552  1 001310   000012 236007                    LDQ     10,DL
         1 001311   200017 756100                    STQ     GSIZE,,AUTO
         1 001312   001315 710000 1                  TRA     s:10554

     1317    10553    2               ELSE GSIZE=SIZEW(KQ$QTN);

  10553  1 001313   000066 236007                    LDQ     54,DL
         1 001314   200017 756100                    STQ     GSIZE,,AUTO

     1318    10554    2               CALL GETBLKP ALTRET(NOGOT);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:196  

  10554  1 001315   001541 701000 1                  TSX1    GETBLKP
         1 001316   001362 702000 1                  TSX2    NOGOT

     1319    10555    2   GOTTYP:     IF NOT KQ$CG.QISS THEN BLK$->KQ$QTN=QTN_INIT;

  10555  1 001317   200003 470500       GOTTYP       LDP0    @KQ$CG,,AUTO
         1 001320   000106 235100                    LDA     70,,PR0
         1 001321   001326 601000 1                  TNZ     s:10556

  10555  1 001322   200013 471500                    LDP1    BLK$,,AUTO
         1 001323   000100 100400                    MLR     fill='000'O
         1 001324   000044 000324 0                  ADSC9   QTN_INIT                 cn=0,n=212
         1 001325   100000 000324                    ADSC9   0,,PR1                   cn=0,n=212

     1320    10556    2               BLK$->KQ$MTYP=KQ_IMTYP;

  10556  1 001326   200013 471500                    LDP1    BLK$,,AUTO
         1 001327   000100 100400                    MLR     fill='000'O
         1 001330   000000 000050 xsym               ADSC9   KQ_IMTYP                 cn=0,n=40
         1 001331   100000 000050                    ADSC9   0,,PR1                   cn=0,n=40

     1321    10557    2               BLK$->KQ$MTYP.MPRIO=KQ$CG.AUCTL.TYPPRIO;

  10557  1 001332   200013 471500                    LDP1    BLK$,,AUTO
         1 001333   000131 236100                    LDQ     89,,PR0
         1 001334   000033 736000                    QLS     27
         1 001335   100007 552140                    STBQ    7,'40'O,PR1

     1322    10558    2               IF KQ$CG.QISS THEN GOTO GOTB;

  10558  1 001336   000106 235100                    LDA     70,,PR0
         1 001337   001137 601000 1                  TNZ     GOTB

     1323    10559    2               MPRIO=BLK$->KQ$MTYP.MPRIO;

  10559  1 001340   200013 471500                    LDP1    BLK$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:197  
         1 001341   100007 236100                    LDQ     7,,PR1
         1 001342   000033 772000                    QRL     27
         1 001343   200020 756100                    STQ     MPRIO,,AUTO

     1324    10560    2               GOTO GOTBQ;

  10560  1 001344   001271 710000 1                  TRA     GOTBQ

     1325    10561
     1326    10562    2             CASE (KQMR_ANY#);

     1327    10563    2               CALL GETBLK ALTRET(NOGET);

  10563  1 001345   001567 701000 1                  TSX1    GETBLK
         1 001346   000017 702000 1                  TSX2    NOGET

     1328    10564    2               GOTO GOTB;

  10564  1 001347   001137 710000 1                  TRA     GOTB

     1329    10565
     1330    10566    2             CASE (KQMR_ANYK#);

     1331    10567    2               CALL GETBLK ALTRET(GBKICK);

  10567  1 001350   001567 701000 1                  TSX1    GETBLK
         1 001351   001353 702000 1                  TSX2    GBKICK

     1332    10568    2               GOTO GOTB;

  10568  1 001352   001137 710000 1                  TRA     GOTB

     1333    10569    2   GBKICK:     CALL KQS$GARBF (KQ$CG); /* Unlocks MMD gate */

  10569  1 001353   200003 630500       GBKICK       EPPR0   @KQ$CG,,AUTO
         1 001354   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001355   000000 701000 xent               TSX1    KQS$GARBF
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:198  
         1 001356   000000 011000                    NOP     0

     1334    10570    2               ALTRETURN;

  10570  1 001357   000000 702200 xent               TSX2  ! X66_AALT

     1335    10571
     1336    10572    2             CASE (ELSE);

     1337    10573    2               CALL SC_BCGMRQ;

  10573  1 001360   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 001361   000000 600000 xsid               climb   nvectors=         0

     1338    10574
     1339    10575    2           END;

  10567  1 001362                       NOGOT        null
     1340    10576
     1341    10577    1   NOGOT:;
     1342    10578    1         IF ENTFLAG = 0 THEN GOTO NOGET;

  10578  1 001362   200022 235100                    LDA     ENTFLAG,,AUTO
         1 001363   000017 600000 1                  TZE     NOGET

     1343    10579                           /* Delayable request */
     1344    10580    1         IF ENTFLAG > 0 THEN

  10580  1 001364   001516 604400 1                  TMOZ    s:10612

     1345    10581    2           DO; /* Station request */

     1346    10582    2           IF STA$->KQ$STA.MREQ ~= 0 THEN CALL SC_BCGMRQ;

  10582  1 001365   200024 470500                    LDP0    STA$,,AUTO
         1 001366   000020 236100                    LDQ     16,,PR0
         1 001367   000777 316003                    CANQ    511,DU
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:199  
         1 001370   001373 600000 1                  TZE     s:10583

  10582  1 001371   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 001372   000000 600000 xsid               climb   nvectors=         0

     1347    10583    2           STA$->KQ$STA.MREQ=REQTYP;

  10583  1 001373   200024 470500                    LDP0    STA$,,AUTO
         1 001374   200021 236100                    LDQ     REQTYP,,AUTO
         1 001375   000022 736000                    QLS     18
         1 001376   000020 552120                    STBQ    16,'20'O,PR0

     1348    10584    2           IF ENTFLAG = 1 THEN

  10584  1 001377   200022 235100                    LDA     ENTFLAG,,AUTO
         1 001400   000001 115007                    CMPA    1,DL
         1 001401   001410 601000 1                  TNZ     s:10586

     1349    10585    2            IF STA$->KQ$STA.USR# = 0 THEN CALL SC_BCGMRQ; ELSE;

  10585  1 001402   000020 236100                    LDQ     16,,PR0
         1 001403   777000 316007                    CANQ    -512,DL
         1 001404   001415 601000 1                  TNZ     s:10587

  10585  1 001405   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 001406   000000 600000 xsid               climb   nvectors=         0
         1 001407   001415 710000 1                  TRA     s:10587

     1350    10586    2           ELSE IF STA$->KQ$STA.USR# ~= 0 THEN CALL SC_BCGMRQ;

  10586  1 001410   000020 236100                    LDQ     16,,PR0
         1 001411   777000 316007                    CANQ    -512,DL
         1 001412   001415 600000 1                  TZE     s:10587

  10586  1 001413   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 001414   000000 600000 xsid               climb   nvectors=         0

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:200  
     1351    10587    2           STA$->KQ$STA.LOCKCNT=STA$->KQ$STA.LOCKCNT+1;

  10587  1 001415   200024 470500                    LDP0    STA$,,AUTO
         1 001416   000020 236100                    LDQ     16,,PR0
         1 001417   000001 036007                    ADLQ    1,DL
         1 001420   000020 552104                    STBQ    16,'04'O,PR0

     1352    10588                %UNLOCK (G=STA$->KQ$STA.GATE);

  10589  1 001421   200024 236100                    LDQ     STA$,,AUTO
         1 001422   000016 036003                    ADLQ    14,DU
         1 001423   200036 756100                    STQ     I+1,,AUTO
         1 001424   200036 630500                    EPPR0   I+1,,AUTO
         1 001425   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001426   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001427   000000 011000                    NOP     0

     1353    10591    2           STA$->KQ$STA.MREQ$=KQ$CG.MMD.STAHD$;

  10591  1 001430   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001431   000013 236100                    LDQ     11,,PR0
         1 001432   200024 471500                    LDP1    STA$,,AUTO
         1 001433   100024 756100                    STQ     20,,PR1

     1354    10592    2           KQ$CG.MMD.STAHD$=STA$;

  10592  1 001434   200024 236100                    LDQ     STA$,,AUTO
         1 001435   000013 756100                    STQ     11,,PR0

     1355    10593    2   NG0:    CALL KQS$GARB (KQ$CG); /* Unlocks gate */

  10593  1 001436   200003 630500       NG0          EPPR0   @KQ$CG,,AUTO
         1 001437   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001440   000000 701000 xent               TSX1    KQS$GARB
         1 001441   000000 011000                    NOP     0

     1356    10594    2           IF ENTFLAG = 2 /* KQM$GETBD */
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:201  

  10594  1 001442   200022 235100                    LDA     ENTFLAG,,AUTO
         1 001443   000002 115007                    CMPA    2,DL
         1 001444   001447 600000 1                  TZE     s:10595
         1 001445   000000 115003                    CMPA    0,DU
         1 001446   001450 605000 1                  TPL     s:10596

     1357    10595    2           OR ENTFLAG < 0 /* KQM$GETBM */ THEN ALTRETURN;

  10595  1 001447   000000 702200 xent               TSX2  ! X66_AALT

     1358    10596    2           CALL SSR$REG (%SS_QA);

  10596  1 001450   000010 630400 2                  EPPR0   8
         1 001451   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001452   000000 701000 xent               TSX1    SSR$REG
         1 001453   000000 011000                    NOP     0

     1359    10597                %LOCK (G=STA$->KQ$STA.GATE);

  10598  1 001454   200024 236100                    LDQ     STA$,,AUTO
         1 001455   000016 036003                    ADLQ    14,DU
         1 001456   200036 756100                    STQ     I+1,,AUTO
         1 001457   200036 630500                    EPPR0   I+1,,AUTO
         1 001460   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001461   000000 701000 xent               TSX1    HFC$LOCK
         1 001462   000000 011000                    NOP     0

     1360    10600    2           IF STA$->KQ$STA.MREQ >= 0 THEN CALL SC_BCGMRQ;

  10600  1 001463   200024 470500                    LDP0    STA$,,AUTO
         1 001464   000020 236100                    LDQ     16,,PR0
         1 001465   000011 736000                    QLS     9
         1 001466   000033 732000                    QRS     27
         1 001467   000000 116003                    CMPQ    0,DU
         1 001470   001473 604000 1                  TMI     s:10601

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:202  
  10600  1 001471   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 001472   000000 600000 xsid               climb   nvectors=         0

     1361    10601    2           STA$->KQ$STA.MREQ=0;

  10601  1 001473   200024 470500                    LDP0    STA$,,AUTO
         1 001474   000000 236003                    LDQ     0,DU
         1 001475   000020 552120                    STBQ    16,'20'O,PR0

     1362    10602    2           MEM$=STA$->KQ$STA.MREQ$;

  10602  1 001476   000024 236100                    LDQ     20,,PR0
         1 001477   200004 471500                    LDP1    @MEM$,,AUTO
         1 001500   100000 756100                    STQ     0,,PR1

     1363    10603                %UNLOCK (G=STA$->KQ$STA.GATE);

  10604  1 001501   200024 236100                    LDQ     STA$,,AUTO
         1 001502   000016 036003                    ADLQ    14,DU
         1 001503   200036 756100                    STQ     I+1,,AUTO
         1 001504   200036 630500                    EPPR0   I+1,,AUTO
         1 001505   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001506   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001507   000000 011000                    NOP     0

     1364    10606    2           IF MEM$ = ADDR(NIL) THEN

  10606  1 001510   200004 470500                    LDP0    @MEM$,,AUTO
         1 001511   000000 236100                    LDQ     0,,PR0
         1 001512   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001513   001515 601000 1                  TNZ     s:10608

     1365    10607    2            ALTRETURN;

  10607  1 001514   000000 702200 xent               TSX2  ! X66_AALT

     1366    10608    2           RETURN;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:203  

  10608  1 001515   000000 702200 xent               TSX2  ! X66_ARET

     1367    10609    2           END;
     1368    10610        /**/
     1369    10611                      /* MBLK request */
     1370    10612    1         MBLK$=MEM$;

  10612  1 001516   200004 470500                    LDP0    @MEM$,,AUTO
         1 001517   000000 236100                    LDQ     0,,PR0
         1 001520   200023 756100                    STQ     MBLK$,,AUTO

     1371    10613    1         IF MBLK$->KQ$MBLK.MREQ ~= 0 THEN CALL SC_BCGMRQ;

  10613  1 001521   200023 471500                    LDP1    MBLK$,,AUTO
         1 001522   100010 236100                    LDQ     8,,PR1
         1 001523   000777 316003                    CANQ    511,DU
         1 001524   001527 600000 1                  TZE     s:10614

  10613  1 001525   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 001526   000000 600000 xsid               climb   nvectors=         0

     1372    10614    1         MBLK$->KQ$MBLK.MREQ=REQTYP;

  10614  1 001527   200023 470500                    LDP0    MBLK$,,AUTO
         1 001530   200021 236100                    LDQ     REQTYP,,AUTO
         1 001531   000022 736000                    QLS     18
         1 001532   000010 552120                    STBQ    8,'20'O,PR0

     1373    10615    1         MBLK$->KQ$MBLK.XSP.MREQ$=KQ$CG.MMD.MBLKHD$;

  10615  1 001533   200003 471500                    LDP1    @KQ$CG,,AUTO
         1 001534   100014 236100                    LDQ     12,,PR1
         1 001535   000004 756100                    STQ     4,,PR0

     1374    10616    1         KQ$CG.MMD.MBLKHD$=MBLK$;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:204  
  10616  1 001536   200023 236100                    LDQ     MBLK$,,AUTO
         1 001537   100014 756100                    STQ     12,,PR1

     1375    10617    1         GOTO NG0;

  10617  1 001540   001436 710000 1                  TRA     NG0

     1376    10618        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:205  
     1377    10619        /*
     1378    10620              GGG   EEEEE  TTTTT  BBBB   L      K   K
     1379    10621             G   G  E        T    B   B  L      K  K
     1380    10622             G      E        T    B   B  L      K K
     1381    10623             G      EEEE     T    BBBB   L      KK
     1382    10624             G  GG  E        T    B   B  L      K K
     1383    10625             G   G  E        T    B   B  L      K  K
     1384    10626              GGG   EEEEE    T    BBBB   LLLLL  K   K
     1385    10627        */
     1386    10628        /*D* NAME:         GETBLK
     1387    10629             PURPOSE:      To allocate a block of memory
     1388    10630             DESCRIPTION:  Returns BLK$ pointing to a block of size GSIZE,
     1389    10631                           else ALTRETs with standard ERRFLG.
     1390    10632
     1391    10633                           The block allocation pages are chained off the
     1392    10634                           CG context block, each containing two chains
     1393    10635                           of free blocks.  One is sorted by address, and
     1394    10636                           all buddied up; the other is jumbled (this is
     1395    10637                           where releases go).
     1396    10638
     1397    10639                           Thus, the allocation algorithm looks at each
     1398    10640                           page at both chains (jumbled first), looking
     1399    10641                           for a first-fit block.  If one is found, it
     1400    10642                           shrinks the block and exits.  If no page has
     1401    10643                           a first-fit block, then for each page,
     1402    10644                           the jumbled list is merged in sorted order into
     1403    10645                           the ordered list, in the hope that this will
     1404    10646                           produce a buddying large enuff to get what we
     1405    10647                           want.  We quit as soon as we find one such.
     1406    10648                           Lastly, if this does not produce the required
     1407    10649                           space, another page is obtained if possible.
     1408    10650        */
     1409    10651        /**/
     1410    10652        /*D* NAME:         GETBLKP
     1411    10653             PURPOSE:      To allocate a 'permanent' block of memory
     1412    10654             DESCRIPTION:  Same as GETBLK, but the block we are getting is
     1413    10655                           expected to stay around a long time.  If the CG
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:206  
     1414    10656                           has > 10 block pages, then such blocks are allocated in
     1415    10657                           their own pages.  This helps us to release pages
     1416    10658                           when we want to, as it reduces that probability
     1417    10659                           of having pages with nothing useful but a few
     1418    10660                           'permanent' blocks in them.
     1419    10661
     1420    10662                           This is implemented via a separate BAP page chain
     1421    10663                           for 'perm' blocks.
     1422    10664        */
     1423    10665    1   GETBLKP: PROC ALTRET;

  10665  1 001541   200026 741300       GETBLKP      STX1  ! STA$+2,,AUTO

     1424    10666        /**/
     1425    10667    2   DCL PERM SBIN;
     1426    10668        /**/
     1427    10669    2         IF KQ$CG.MMD.CURBPG > 10

  10669  1 001542   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001543   000010 220100                    LDX0    8,,PR0
         1 001544   000013 100003                    CMPX0   11,DU
         1 001545   001551 603000 1                  TRC     s:10672
         1 001546   000004 236100                    LDQ     4,,PR0
         1 001547   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001550   001566 600000 1                  TZE     s:10677+1

     1428    10670    2         OR KQ$CG.MMD.PHEAD$ ~= ADDR(NIL) THEN
     1429    10671    3           DO;

     1430    10672    3           PERM=1;

  10672  1 001551   000001 235007                    LDA     1,DL
         1 001552   200027 755100                    STA     PERM,,AUTO

     1431    10673                %LOCK (G=KQ$CG.MMD.GATE);

  10674  1 001553   200003 236100                    LDQ     @KQ$CG,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:207  
         1 001554   000001 036003                    ADLQ    1,DU
         1 001555   200036 756100                    STQ     I+1,,AUTO
         1 001556   200036 630500                    EPPR0   I+1,,AUTO
         1 001557   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001560   000000 701000 xent               TSX1    HFC$LOCK
         1 001561   000000 011000                    NOP     0

     1432    10676    3   GB0:    BAP$=KQ$CG.MMD.PHEAD$;

  10676  1 001562   200003 470500       GB0          LDP0    @KQ$CG,,AUTO
         1 001563   000004 236100                    LDQ     4,,PR0
         1 001564   200012 756100                    STQ     BAP$,,AUTO

     1433    10677    3           GOTO GB4;

  10677  1 001565   001603 710000 1                  TRA     GB4
         1 001566   001570 710000 1                  TRA     s:10683

     1434    10678    3           END;
     1435    10679        /**/
     1436    10680    2   GETBLK: ENTRY ALTRET;

  10680  1 001567   200026 741300       GETBLK       STX1  ! STA$+2,,AUTO

     1437    10681        /**/
     1438    10682              %LOCK (G=KQ$CG.MMD.GATE);

  10683  1 001570   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 001571   000001 036003                    ADLQ    1,DU
         1 001572   200036 756100                    STQ     I+1,,AUTO
         1 001573   200036 630500                    EPPR0   I+1,,AUTO
         1 001574   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001575   000000 701000 xent               TSX1    HFC$LOCK
         1 001576   000000 011000                    NOP     0

     1439    10685    2         PERM=0;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:208  
  10685  1 001577   200027 450100                    STZ     PERM,,AUTO

     1440    10686    2   GB1:  BAP$=KQ$CG.MMD.HEAD$;

  10686  1 001600   200003 470500       GB1          LDP0    @KQ$CG,,AUTO
         1 001601   000003 236100                    LDQ     3,,PR0
         1 001602   200012 756100                    STQ     BAP$,,AUTO

  10685  1 001603                       GB4          null
     1441    10687    2   GB4:  ;
     1442    10688                                /* FIRST-FIT LOOP */
     1443    10689    3           DO WHILE (BAP$ ~= ADDR(NIL));

  10689  1 001603   001625 710000 1                  TRA     s:10698

     1444    10690    3           IF BAP$->KQ$BAP.FREESIZE > GSIZE THEN

  10690  1 001604   200012 470500                    LDP0    BAP$,,AUTO
         1 001605   200017 236100                    LDQ     GSIZE,,AUTO
         1 001606   000006 116100                    CMPQ    6,,PR0
         1 001607   001622 603000 1                  TRC     s:10697

     1445    10691    4             DO;

     1446    10692    4             CHAIN$=ADDR(BAP$->KQ$BAP.JUHEAD$);

  10692  1 001610   200012 236100                    LDQ     BAP$,,AUTO
         1 001611   000011 036003                    ADLQ    9,DU
         1 001612   200016 756100                    STQ     CHAIN$,,AUTO

     1447    10693    4             CALL DOCHAIN ALTRET(RTN);

  10693  1 001613   002106 701000 1                  TSX1    DOCHAIN
         1 001614   002050 702000 1                  TSX2    RTN

     1448    10694    4             CHAIN$=ADDR(BAP$->KQ$BAP.ORHEAD$);

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:209  
  10694  1 001615   200012 236100                    LDQ     BAP$,,AUTO
         1 001616   000007 036003                    ADLQ    7,DU
         1 001617   200016 756100                    STQ     CHAIN$,,AUTO

     1449    10695    4             CALL DOCHAIN ALTRET(RTN);

  10695  1 001620   002106 701000 1                  TSX1    DOCHAIN
         1 001621   002050 702000 1                  TSX2    RTN

     1450    10696    4             END;

     1451    10697    3           BAP$=BAP$->KQ$BAP.FLNK$;

  10697  1 001622   200012 470500                    LDP0    BAP$,,AUTO
         1 001623   000004 236100                    LDQ     4,,PR0
         1 001624   200012 756100                    STQ     BAP$,,AUTO

     1452    10698    3           END;

  10698  1 001625   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001626   001604 601000 1                  TNZ     s:10690

     1453    10699
     1454    10700
     1455    10701                                /* DIDN'T FIND ANY */
     1456    10702                                /* BUDDY UP EACH PAGE */
     1457    10703    2         IF PERM <= 0 THEN

  10703  1 001627   200027 235100                    LDA     PERM,,AUTO
         1 001630   001635 605400 1                  TPNZ    s:10705

     1458    10704    2          BAP$=KQ$CG.MMD.HEAD$;

  10704  1 001631   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001632   000003 236100                    LDQ     3,,PR0
         1 001633   200012 756100                    STQ     BAP$,,AUTO
         1 001634   001640 710000 1                  TRA     s:10706
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:210  

     1459    10705    2         ELSE BAP$=KQ$CG.MMD.PHEAD$;

  10705  1 001635   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001636   000004 236100                    LDQ     4,,PR0
         1 001637   200012 756100                    STQ     BAP$,,AUTO

     1460    10706    3           DO WHILE (BAP$ ~= ADDR(NIL));

  10706  1 001640   001646 710000 1                  TRA     s:10709

     1461    10707    3           CALL BUDDY ALTRET(RTN);

  10707  1 001641   002052 701000 1                  TSX1    BUDDY
         1 001642   002050 702000 1                  TSX2    RTN

     1462    10708    3           BAP$=BAP$->KQ$BAP.FLNK$;

  10708  1 001643   200012 470500                    LDP0    BAP$,,AUTO
         1 001644   000004 236100                    LDQ     4,,PR0
         1 001645   200012 756100                    STQ     BAP$,,AUTO

     1463    10709    3           END;

  10709  1 001646   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 001647   001641 601000 1                  TNZ     s:10707

     1464    10710
     1465    10711                                /* NO SPACE AVAIL. GET ANOTHER PAGE */
     1466    10712    2         IF KQ$CG.MMD.CURBPG >= KQ$CG.MMD.MAXBPG THEN

  10712  1 001650   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001651   000010 720100                    LXL0    8,,PR0
         1 001652   000010 100100                    CMPX0   8,,PR0
         1 001653   001655 600000 1                  TZE     s:10714
         1 001654   001674 603000 1                  TRC     s:10727

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:211  
     1467    10713    3           DO;

     1468    10714    3           ERRFLG=%E$CGMPLC;

  10714  1 001655   002206 235007                    LDA     1158,DL
         1 001656   200005 471500                    LDP1    @ERRFLG,,AUTO
         1 001657   100000 755100                    STA     0,,PR1

     1469    10715    3   GB5:    IF PERM = 0 THEN

  10715  1 001660   200027 235100       GB5          LDA     PERM,,AUTO
         1 001661   001665 601000 1                  TNZ     s:10720

     1470    10716    4             DO;

     1471    10717    4             PERM=2; /* Try the PERM pages */

  10717  1 001662   000002 236007                    LDQ     2,DL
         1 001663   200027 756100                    STQ     PERM,,AUTO

     1472    10718    4             GOTO GB0;

  10718  1 001664   001562 710000 1                  TRA     GB0

     1473    10719    4             END;
     1474    10720    3           ELSE IF PERM = 1 THEN

  10720  1 001665   000001 115007                    CMPA    1,DL
         1 001666   001672 601000 1                  TNZ     s:10725

     1475    10721    4              DO;

     1476    10722    4              PERM=-1; /* Try the non-PERM pages */

  10722  1 001667   000001 336007                    LCQ     1,DL
         1 001670   200027 756100                    STQ     PERM,,AUTO

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:212  
     1477    10723    4              GOTO GB1;

  10723  1 001671   001600 710000 1                  TRA     GB1

     1478    10724    4              END;
     1479    10725    3           ALTRETURN;

  10725  1 001672   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 001673   000000 702211                    TSX2  ! 0,X1

     1480    10726    3           END;
     1481    10727    2         CALL GETPAGECGNL ALTRET(GB5);

  10727  1 001674   003474 701000 1                  TSX1    GETPAGECGNL
         1 001675   001660 702000 1                  TSX2    GB5

     1482    10728    2         IF PERM > 0 THEN

  10728  1 001676   200027 235100                    LDA     PERM,,AUTO
         1 001677   001725 604400 1                  TMOZ    s:10736

     1483    10729    3           DO;

     1484    10730    3           KQ$CG.MMD.CURPPG=KQ$CG.MMD.CURPPG+1;

  10730  1 001700   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001701   000015 220100                    LDX0    13,,PR0
         1 001702   000001 621010                    EAX1    1,X0
         1 001703   000015 741100                    STX1    13,,PR0

     1485    10731    3           IF KQ$CG.AUCTL.MEMWARNP THEN

  10731  1 001704   000136 430100                    FSZN    94,,PR0
         1 001705   001725 605000 1                  TPL     s:10736

     1486    10732    3            IF KQ$CG.AUCTL.MAXPG-(KQ$CG.MMD.CURPPG-1) = KQ$CG.AUCTL.MEMWARN THEN

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:213  
  10732  1 001706   000015 236100                    LDQ     13,,PR0
         1 001707   000022 772000                    QRL     18
         1 001710   200036 756100                    STQ     I+1,,AUTO
         1 001711   000133 236100                    LDQ     91,,PR0
         1 001712   000022 772000                    QRL     18
         1 001713   200036 136100                    SBLQ    I+1,,AUTO
         1 001714   200037 756100                    STQ     I+2,,AUTO
         1 001715   000137 236100                    LDQ     95,,PR0
         1 001716   777777 376007                    ANQ     -1,DL
         1 001717   200040 756100                    STQ     I+3,,AUTO
         1 001720   200037 236100                    LDQ     I+2,,AUTO
         1 001721   000001 036007                    ADLQ    1,DL
         1 001722   200040 116100                    CMPQ    I+3,,AUTO
         1 001723   001743 600000 1                  TZE     WARN

     1487    10733    3             GOTO WARN;
     1488    10734    3            ELSE GOTO NOWARN;

  10734  1 001724   001766 710000 1                  TRA     NOWARN

     1489    10735    3           END;
     1490    10736    2         IF KQ$CG.MMD.MAXBPG-KQ$CG.MMD.CURBPG = KQ$CG.AUCTL.MEMWARN THEN

  10736  1 001725   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001726   000010 236100                    LDQ     8,,PR0
         1 001727   000022 772000                    QRL     18
         1 001730   200036 756100                    STQ     I+1,,AUTO
         1 001731   000010 236100                    LDQ     8,,PR0
         1 001732   777777 376007                    ANQ     -1,DL
         1 001733   200036 136100                    SBLQ    I+1,,AUTO
         1 001734   200037 756100                    STQ     I+2,,AUTO
         1 001735   000137 236100                    LDQ     95,,PR0
         1 001736   777777 376007                    ANQ     -1,DL
         1 001737   200040 756100                    STQ     I+3,,AUTO
         1 001740   200037 236100                    LDQ     I+2,,AUTO
         1 001741   200040 116100                    CMPQ    I+3,,AUTO
         1 001742   001766 601000 1                  TNZ     NOWARN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:214  

     1491    10737    3   WARN:   DO;

  10737  1 001743                       WARN         null
     1492    10738                %LOCK (G=KQ$CG.GATE.CG);

  10739  1 001743   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 001744   000107 036003                    ADLQ    71,DU
         1 001745   200036 756100                    STQ     I+1,,AUTO
         1 001746   200036 630500                    EPPR0   I+1,,AUTO
         1 001747   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001750   000000 701000 xent               TSX1    HFC$LOCK
         1 001751   000000 011000                    NOP     0

     1493    10741    3           KQ$CG.DELAY.MEMWARN='1'B;

  10741  1 001752   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001753   002000 236003                    LDQ     1024,DU
         1 001754   000020 256100                    ORSQ    16,,PR0

     1494    10742    3           KQ$CG.BASEDELAY=KQ$CG.BASEDELAY+1;

  10742  1 001755   000025 054100                    AOS     21,,PR0

     1495    10743    3           KQ_BASEDELAY=KQ_BASEDELAY+1;

  10743  1 001756   000000 054000 xsym               AOS     KQ_BASEDELAY

     1496    10744                %UNLOCK (G=KQ$CG.GATE.CG);

  10745  1 001757   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 001760   000107 036003                    ADLQ    71,DU
         1 001761   200036 756100                    STQ     I+1,,AUTO
         1 001762   200036 630500                    EPPR0   I+1,,AUTO
         1 001763   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 001764   000000 701000 xent               TSX1    HFC$UNLOCK
         1 001765   000000 011000                    NOP     0
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:215  

     1497    10747    3           END;

  10743  1 001766                       NOWARN       null
     1498    10748    2   NOWARN:;
     1499    10749    2         KQ$CG.MMD.CURBPG=KQ$CG.MMD.CURBPG+1;

  10749  1 001766   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 001767   000010 220100                    LDX0    8,,PR0
         1 001770   000001 621010                    EAX1    1,X0
         1 001771   000010 741100                    STX1    8,,PR0

     1500    10750    2         BAP$=PAGE$;

  10750  1 001772   200010 236100                    LDQ     PAGE$,,AUTO
         1 001773   200012 756100                    STQ     BAP$,,AUTO

     1501    10751    2         BAP$->KQ$BAP=KQ_IBAP;

  10751  1 001774   200012 471500                    LDP1    BAP$,,AUTO
         1 001775   000100 100400                    MLR     fill='000'O
         1 001776   000000 000060 xsym               ADSC9   KQ_IBAP                  cn=0,n=48
         1 001777   100000 000060                    ADSC9   0,,PR1                   cn=0,n=48

     1502    10752    2         BAP$->KQ$BAP.HDR=KQ$CG.GRAN;

  10752  1 002000   000100 100500                    MLR     fill='000'O
         1 002001   000253 000020                    ADSC9   171,,PR0                 cn=0,n=16
         1 002002   100000 000020                    ADSC9   0,,PR1                   cn=0,n=16

     1503    10753    2         BAP$->KQ$BAP.CG$=ADDR(KQ$CG);

  10753  1 002003   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 002004   100013 756100                    STQ     11,,PR1

     1504    10754    2         BAP$->KQ$BAP.HDR.SELF$=BAP$;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:216  
  10754  1 002005   200012 236100                    LDQ     BAP$,,AUTO
         1 002006   100002 756100                    STQ     2,,PR1

     1505    10755    2         BAP$->KQ$BAP.HDR.PTYP=%KQ_PTYP_BAP;

  10755  1 002007   100001 236100                    LDQ     1,,PR1
         1 002010   000011 376000 2                  ANQ     9
         1 002011   000004 276003                    ORQ     4,DU
         1 002012   100001 756100                    STQ     1,,PR1

     1506    10756    2         BAP$->KQ$BAP.FREESIZE=1024-SIZEW(KQ$BAP);

  10756  1 002013   001764 235007                    LDA     1012,DL
         1 002014   100006 755100                    STA     6,,PR1

     1507    10757    3           DO INHIBIT;

     1508    10758    3           IF PERM <= 0 THEN

  10758  1 002015   200027 235300                    LDA   ! PERM,,AUTO
         1 002016   002024 605600 1                  TPNZ  ! s:10765

     1509    10759    4             DO;

     1510    10760    4             BAP$->KQ$BAP.FLNK$=KQ$CG.MMD.HEAD$;

  10760  1 002017   000003 236300                    LDQ   ! 3,,PR0
         1 002020   100004 756300                    STQ   ! 4,,PR1

     1511    10761    4             KQ$CG.MMD.HEAD$=BAP$;

  10761  1 002021   200012 236300                    LDQ   ! BAP$,,AUTO
         1 002022   000003 756300                    STQ   ! 3,,PR0

     1512    10762    4             END;

  10762  1 002023   002030 710200 1                  TRA   ! s:10768
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:217  

     1513    10763    3           ELSE
     1514    10764    4             DO;

     1515    10765    4             BAP$->KQ$BAP.FLNK$=KQ$CG.MMD.PHEAD$;

  10765  1 002024   000004 236300                    LDQ   ! 4,,PR0
         1 002025   100004 756300                    STQ   ! 4,,PR1

     1516    10766    4             KQ$CG.MMD.PHEAD$=BAP$;

  10766  1 002026   200012 236300                    LDQ   ! BAP$,,AUTO
         1 002027   000004 756300                    STQ   ! 4,,PR0

     1517    10767    4             END;

     1518    10768    3           IF BAP$->KQ$BAP.FLNK$ ~= ADDR(NIL) THEN

  10768  1 002030   100004 236300                    LDQ   ! 4,,PR1
         1 002031   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002032   002036 600200 1                  TZE   ! s:10770

     1519    10769    3            BAP$->KQ$BAP.FLNK$->KQ$BAP.BLNK$=BAP$;

  10769  1 002033   100004 473700                    LDP3  ! 4,,PR1
         1 002034   200012 236300                    LDQ   ! BAP$,,AUTO
         1 002035   300005 756300                    STQ   ! 5,,PR3

     1520    10770    3           BLK$=PINCRW(BAP$,SIZEW(KQ$BAP));

  10770  1 002036   200012 236300                    LDQ   ! BAP$,,AUTO
         1 002037   000014 036203                    ADLQ  ! 12,DU
         1 002040   200013 756300                    STQ   ! BLK$,,AUTO

     1521    10771    3           BLK$->KQ$FB.SIZE=BAP$->KQ$BAP.FREESIZE;

  10771  1 002041   200013 473700                    LDP3  ! BLK$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:218  
         1 002042   100006 235300                    LDA   ! 6,,PR1
         1 002043   300002 755300                    STA   ! 2,,PR3

     1522    10772    3           CALL INSBLK ALTRET(RTN);

  10772  1 002044   002201 701200 1                  TSX1  ! INSBLK
         1 002045   002050 702200 1                  TSX2  ! RTN

     1523    10773    3           CALL SC_CGBLTB;

  10773  1 002046   000000 713600 xsym               CLIMB ! SC_CGBLTB
         1 002047   000000 600000 xsid               climb   nvectors=         0

     1524    10774        /*S* SCREECH_CODE: KQM-S$CGBLTB
     1525    10775             TYPE:         SCREECH
     1526    10776             MESSAGE:      Request for too-big comgroup memory block
     1527    10777             REMARKS:      This SCREECH occurs when comgroup memory management
     1528    10778                           receives a request for a block of memory bigger
     1529    10779                           than the max possible (a bit smaller than a page).
     1530    10780                           This should never happen since the various types
     1531    10781                           of blocks (and their sizes) are known. */
     1532    10782    3           END; /*INHIBIT*/

  10771  1 002050                       RTN          null
     1533    10783    2   RTN:  ;
     1534    10784    2         RETURN;

  10784  1 002050   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 002051   000001 702211                    TSX2  ! 1,X1

     1535    10785    2   END GETBLKP;
     1536    10786        /****************************************************************
     1537    10787        *****************************************************************/
     1538    10788        /*D* NAME:         BUDDY
     1539    10789             PURPOSE:      To buddy up the blocks in a page
     1540    10790             DESCRIPTION:  The page is BAP$.  Its jumbled free chain is
     1541    10791                           merged into its ordered free chain (via INSBLK)
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:219  
     1542    10792                           until
     1543    10793                                o a block of size GSIZE is thus created,
     1544    10794                                  in which case we ALTRET with BLK$ pointing
     1545    10795                                  to the allocated block
     1546    10796                           or   o the jumbled free chain is empty, in which
     1547    10797                                  case we RETURN.
     1548    10798        */
     1549    10799    1   BUDDY: PROC ALTRET;

  10799  1 002052   200030 741300       BUDDY        STX1  ! @MEM$,,AUTO

     1550    10800        /**/
     1551    10801    3           DO WHILE (BAP$->KQ$BAP.JUHEAD$ ~= ADDR(NIL));

  10801  1 002053   002076 710000 1                  TRA     s:10810

     1552    10802    4             DO INHIBIT;

     1553    10803    4             BLK$=BAP$->KQ$BAP.JUHEAD$;

  10803  1 002054   200012 470700                    LDP0  ! BAP$,,AUTO
         1 002055   000011 236300                    LDQ   ! 9,,PR0
         1 002056   200013 756300                    STQ   ! BLK$,,AUTO

     1554    10804    4             BAP$->KQ$BAP.JUHEAD$=BLK$->KQ$FB.FLNK$;

  10804  1 002057   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002060   100000 236300                    LDQ   ! 0,,PR1
         1 002061   000011 756300                    STQ   ! 9,,PR0

     1555    10805    4             IF BLK$->KQ$FB.FLNK$ ~= ADDR(NIL) THEN

  10805  1 002062   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002063   100000 236300                    LDQ   ! 0,,PR1
         1 002064   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002065   002072 600200 1                  TZE   ! s:10807

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:220  
     1556    10806    4              BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=ADDR(NIL);

  10806  1 002066   100000 473700                    LDP3  ! 0,,PR1
         1 002067   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         1 002070   300001 756300                    STQ   ! 1,,PR3
         1 002071   002074 710200 1                  TRA   ! s:10808

     1557    10807    4             ELSE BAP$->KQ$BAP.JUTAIL$=ADDR(NIL);

  10807  1 002072   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         1 002073   000012 756300                    STQ   ! 10,,PR0

     1558    10808    4             CALL INSBLK ALTRET(ALTRT);

  10808  1 002074   002201 701200 1                  TSX1  ! INSBLK
         1 002075   002104 702200 1                  TSX2  ! ALTRT

     1559    10809    4             END; /*INHIBIT*/

     1560    10810    3           END;

  10810  1 002076   200012 470500                    LDP0    BAP$,,AUTO
         1 002077   000011 236100                    LDQ     9,,PR0
         1 002100   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002101   002054 601000 1                  TNZ     s:10803

     1561    10811    2         RETURN;

  10811  1 002102   200030 221300                    LDX1  ! @MEM$,,AUTO
         1 002103   000001 702211                    TSX2  ! 1,X1

  10807  1 002104                       ALTRT        null
     1562    10812    2   ALTRT:;
     1563    10813    2         ALTRETURN;

  10813  1 002104   200030 221300                    LDX1  ! @MEM$,,AUTO
         1 002105   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:221  

     1564    10814    2   END BUDDY;
     1565    10815        /****************************************************************
     1566    10816        *****************************************************************/
     1567    10817        /**/
     1568    10818        /*D* NAME:         DOCHAIN
     1569    10819             PURPOSE:      To search a chain for first-fit
     1570    10820             DESCRIPTION:  CHAIN$ points to the ordered or jumbled HEAD$
     1571    10821                           pointer in KQ$BAP.  Searches that chain and
     1572    10822                           ALTRETs with allocation complete, or returns
     1573    10823                           if no space avail on that chain. */
     1574    10824    1   DOCHAIN: PROC ALTRET;

  10824  1 002106   200032 741300       DOCHAIN      STX1  ! I,,AUTO

     1575    10825        /**/
     1576    10826    2   DCL P$ PTR;
     1577    10827        /**/
     1578    10828    3           DO INHIBIT;

     1579    10829    3           BLK$=CHAIN$->F$CHAIN.HEAD$;

  10829  1 002107   200016 470700                    LDP0  ! CHAIN$,,AUTO
         1 002110   000000 236300                    LDQ   ! 0,,PR0
         1 002111   200013 756300                    STQ   ! BLK$,,AUTO

     1580    10830    4             DO WHILE (BLK$ ~= ADDR(NIL));

  10830  1 002112   002174 710200 1                  TRA   ! s:10852

     1581    10831    4             IF BLK$->KQ$FB.SIZE = GSIZE THEN

  10831  1 002113   200013 470700                    LDP0  ! BLK$,,AUTO
         1 002114   000002 236300                    LDQ   ! 2,,PR0
         1 002115   200017 116300                    CMPQ  ! GSIZE,,AUTO
         1 002116   002153 601200 1                  TNZ   ! s:10844

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:222  
     1582    10832    5               DO;

  10830  1 002117                       GB4          null
     1583    10833    5   GB4:        ;
     1584    10834    5               IF BLK$->KQ$FB.BLNK$ = ADDR(NIL) THEN

  10834  1 002117   200013 470700                    LDP0  ! BLK$,,AUTO
         1 002120   000001 236300                    LDQ   ! 1,,PR0
         1 002121   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002122   002127 601200 1                  TNZ   ! s:10836

     1585    10835    5                CHAIN$->F$CHAIN.HEAD$=BLK$->KQ$FB.FLNK$;

  10835  1 002123   000000 236300                    LDQ   ! 0,,PR0
         1 002124   200016 471700                    LDP1  ! CHAIN$,,AUTO
         1 002125   100000 756300                    STQ   ! 0,,PR1
         1 002126   002132 710200 1                  TRA   ! s:10837

     1586    10836    5               ELSE BLK$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$->KQ$FB.FLNK$;

  10836  1 002127   000001 471700                    LDP1  ! 1,,PR0
         1 002130   000000 236300                    LDQ   ! 0,,PR0
         1 002131   100000 756300                    STQ   ! 0,,PR1

     1587    10837    5               IF BLK$->KQ$FB.FLNK$ = ADDR(NIL) THEN

  10837  1 002132   200013 470700                    LDP0  ! BLK$,,AUTO
         1 002133   000000 236300                    LDQ   ! 0,,PR0
         1 002134   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002135   002142 601200 1                  TNZ   ! s:10839

     1588    10838    5                CHAIN$->F$CHAIN.TAIL$=BLK$->KQ$FB.BLNK$;

  10838  1 002136   000001 236300                    LDQ   ! 1,,PR0
         1 002137   200016 471700                    LDP1  ! CHAIN$,,AUTO
         1 002140   100001 756300                    STQ   ! 1,,PR1
         1 002141   002145 710200 1                  TRA   ! GETDONE
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:223  

     1589    10839    5               ELSE BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=BLK$->KQ$FB.BLNK$;

  10839  1 002142   000000 471700                    LDP1  ! 0,,PR0
         1 002143   000001 236300                    LDQ   ! 1,,PR0
         1 002144   100001 756300                    STQ   ! 1,,PR1

  10837  1 002145                       GETDONE      null
     1590    10840    5   GETDONE:    ;
     1591    10841    5               BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE-GSIZE;

  10841  1 002145   200012 470700                    LDP0  ! BAP$,,AUTO
         1 002146   000006 236300                    LDQ   ! 6,,PR0
         1 002147   200017 136300                    SBLQ  ! GSIZE,,AUTO
         1 002150   000006 756300                    STQ   ! 6,,PR0

     1592    10842    5               ALTRETURN;

  10842  1 002151   200032 221300                    LDX1  ! I,,AUTO
         1 002152   000000 702211                    TSX2  ! 0,X1

     1593    10843    5               END;
     1594    10844    4             ELSE IF BLK$->KQ$FB.SIZE >= GSIZE+SIZEW(KQ$FB) THEN

  10844  1 002153   200017 236300                    LDQ   ! GSIZE,,AUTO
         1 002154   000004 036207                    ADLQ  ! 4,DL
         1 002155   000002 116300                    CMPQ  ! 2,,PR0
         1 002156   002160 600200 1                  TZE   ! GB5
         1 002157   002172 603200 1                  TRC   ! s:10851

     1595    10845    5                DO;

  10839  1 002160                       GB5          null
     1596    10846    5   GB5:         ;
     1597    10847    5                BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE-GSIZE;

  10847  1 002160   200013 470700                    LDP0  ! BLK$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:224  
         1 002161   000002 236300                    LDQ   ! 2,,PR0
         1 002162   200017 136300                    SBLQ  ! GSIZE,,AUTO
         1 002163   000002 756300                    STQ   ! 2,,PR0

     1598    10848    5                BLK$=PINCRW(BLK$,BLK$->KQ$FB.SIZE);

  10848  1 002164   200013 470700                    LDP0  ! BLK$,,AUTO
         1 002165   000002 720300                    LXL0  ! 2,,PR0
         1 002166   000000 636210                    EAQ   ! 0,X0
         1 002167   200013 036300                    ADLQ  ! BLK$,,AUTO
         1 002170   200013 756300                    STQ   ! BLK$,,AUTO

     1599    10849    5                GOTO GETDONE;

  10849  1 002171   002145 710200 1                  TRA   ! GETDONE

     1600    10850    5                END;
     1601    10851    4             BLK$=BLK$->KQ$FB.FLNK$;

  10851  1 002172   000000 236300                    LDQ   ! 0,,PR0
         1 002173   200013 756300                    STQ   ! BLK$,,AUTO

     1602    10852    4             END;

  10852  1 002174   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002175   002113 601200 1                  TNZ   ! s:10831

     1603    10853    3           RETURN;

  10853  1 002176   200032 221300                    LDX1  ! I,,AUTO
         1 002177   000001 702211                    TSX2  ! 1,X1

     1604    10854    3           END; /*INHIBIT*/

  10854  1 002200   002202 710000 1                  TRA     s:10864

     1605    10855        /*D* NAME:         INSBLK
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:225  
     1606    10856             PURPOSE:      To insert the free block pointed to by BLK$
     1607    10857                           into the ordered free chain of the page pointed
     1608    10858                           to by BAP$, and then allocate from the buddied
     1609    10859                           result if any, if possible.  ALTRETs with BLK$
     1610    10860                           pointing to the allocated blk, else returns. */
     1611    10861    2   INSBLK: ENTRY ALTRET;

  10861  1 002201   200032 741300       INSBLK       STX1  ! I,,AUTO

     1612    10862        /**/
     1613    10863    3           DO INHIBIT;

     1614    10864    3           I=BLK$->KQ$FB.SIZE;

  10864  1 002202   200013 470700                    LDP0  ! BLK$,,AUTO
         1 002203   000002 235300                    LDA   ! 2,,PR0
         1 002204   200011 755300                    STA   ! I,,AUTO

     1615    10865    3           P$=BAP$->KQ$BAP.ORHEAD$;

  10865  1 002205   200012 471700                    LDP1  ! BAP$,,AUTO
         1 002206   100007 236300                    LDQ   ! 7,,PR1
         1 002207   200033 756300                    STQ   ! P$,,AUTO

     1616    10866    4   P$LOOP:   DO WHILE (P$ ~= ADDR(NIL));

  10866  1 002210   002415 710200 1     P$LOOP       TRA   ! s:10940

     1617    10867    4             OFFSET=POFFW(BLK$,P$);

  10867  1 002211   200033 235300                    LDA   ! P$,,AUTO
         1 002212   000022 771200                    ARL   ! 18
         1 002213   200036 755300                    STA   ! I+1,,AUTO
         1 002214   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002215   000022 772200                    QRL   ! 18
         1 002216   200036 136300                    SBLQ  ! I+1,,AUTO
         1 002217   200014 756300                    STQ   ! OFFSET,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:226  

     1618    10868    4             IF OFFSET = -I THEN

  10868  1 002220   000000 236203                    LDQ   ! 0,DU
         1 002221   200011 136300                    SBLQ  ! I,,AUTO
         1 002222   200014 116300                    CMPQ  ! OFFSET,,AUTO
         1 002223   002301 601200 1                  TNZ   ! s:10885

     1619    10869    5               DO;

     1620    10870                                /* BLK$ on lowcore side of P$ */
     1621    10871    5               BLK$->KQ$FB=P$->KQ$FB;

  10871  1 002224   200033 470700                    LDP0  ! P$,,AUTO
         1 002225   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002226   000100 100700                    MLR   ! fill='000'O
         1 002227   000000 000014                    ADSC9   0,,PR0                   cn=0,n=12
         1 002230   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

     1622    10872    5               IF BLK$->KQ$FB.FLNK$ ~= ADDR(NIL) THEN

  10872  1 002231   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002232   100000 236300                    LDQ   ! 0,,PR1
         1 002233   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002234   002241 600200 1                  TZE   ! s:10874

     1623    10873    5                BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=BLK$;

  10873  1 002235   100000 473700                    LDP3  ! 0,,PR1
         1 002236   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002237   300001 756300                    STQ   ! 1,,PR3
         1 002240   002244 710200 1                  TRA   ! s:10875

     1624    10874    5               ELSE BAP$->KQ$BAP.ORTAIL$=BLK$;

  10874  1 002241   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002242   200012 473700                    LDP3  ! BAP$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:227  
         1 002243   300010 756300                    STQ   ! 8,,PR3

     1625    10875    5               IF BLK$->KQ$FB.BLNK$ ~= ADDR(NIL) THEN

  10875  1 002244   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002245   100001 236300                    LDQ   ! 1,,PR1
         1 002246   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002247   002254 600200 1                  TZE   ! s:10877

     1626    10876    5                BLK$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$;

  10876  1 002250   100001 473700                    LDP3  ! 1,,PR1
         1 002251   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002252   300000 756300                    STQ   ! 0,,PR3
         1 002253   002257 710200 1                  TRA   ! s:10878

     1627    10877    5               ELSE BAP$->KQ$BAP.ORHEAD$=BLK$;

  10877  1 002254   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002255   200012 473700                    LDP3  ! BAP$,,AUTO
         1 002256   300007 756300                    STQ   ! 7,,PR3

     1628    10878    5               BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE+I;

  10878  1 002257   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002260   100002 236300                    LDQ   ! 2,,PR1
         1 002261   200011 036300                    ADLQ  ! I,,AUTO
         1 002262   100002 756300                    STQ   ! 2,,PR1

  10878  1 002263                       GB6          null
     1629    10879    5   GB6:        ;
     1630    10880    5               CHAIN$=ADDR(BAP$->KQ$BAP.ORHEAD$);

  10880  1 002263   200012 236300                    LDQ   ! BAP$,,AUTO
         1 002264   000007 036203                    ADLQ  ! 7,DU
         1 002265   200016 756300                    STQ   ! CHAIN$,,AUTO

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:228  
     1631    10881    5               IF BLK$->KQ$FB.SIZE = GSIZE THEN GOTO GB4;

  10881  1 002266   200013 470700                    LDP0  ! BLK$,,AUTO
         1 002267   000002 236300                    LDQ   ! 2,,PR0
         1 002270   200017 116300                    CMPQ  ! GSIZE,,AUTO
         1 002271   002117 600200 1                  TZE   ! GB4

     1632    10882    5               IF BLK$->KQ$FB.SIZE >= GSIZE+SIZEW(KQ$FB) THEN GOTO GB5;

  10882  1 002272   200017 236300                    LDQ   ! GSIZE,,AUTO
         1 002273   000004 036207                    ADLQ  ! 4,DL
         1 002274   000002 116300                    CMPQ  ! 2,,PR0
         1 002275   002160 602200 1                  TNC   ! GB5
         1 002276   002160 600200 1                  TZE   ! GB5

     1633    10883    5               RETURN;

  10883  1 002277   200032 221300                    LDX1  ! I,,AUTO
         1 002300   000001 702211                    TSX2  ! 1,X1

     1634    10884    5               END;
     1635    10885    4             ELSE IF OFFSETR = P$->KQ$FB.SIZE THEN

  10885  1 002301   200033 470700                    LDP0  ! P$,,AUTO
         1 002302   200014 236300                    LDQ   ! OFFSET,,AUTO
         1 002303   000002 116300                    CMPQ  ! 2,,PR0
         1 002304   002346 601200 1                  TNZ   ! s:10905

     1636    10886    5                DO;

     1637    10887                                /* BLK$ on hicore side of P$ */
     1638    10888    5                BLK$=P$;

  10888  1 002305   200033 236300                    LDQ   ! P$,,AUTO
         1 002306   200013 756300                    STQ   ! BLK$,,AUTO

     1639    10889    5                BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE+I;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:229  

  10889  1 002307   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002310   100002 236300                    LDQ   ! 2,,PR1
         1 002311   200011 036300                    ADLQ  ! I,,AUTO
         1 002312   100002 756300                    STQ   ! 2,,PR1

     1640    10890    5                P$=BLK$->KQ$FB.FLNK$;

  10890  1 002313   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002314   100000 236300                    LDQ   ! 0,,PR1
         1 002315   200033 756300                    STQ   ! P$,,AUTO

     1641    10891    5                IF PINCRW(BLK$,BLK$->KQ$FB.SIZE) = P$ THEN

  10891  1 002316   100002 720300                    LXL0  ! 2,,PR1
         1 002317   000000 636210                    EAQ   ! 0,X0
         1 002320   200013 036300                    ADLQ  ! BLK$,,AUTO
         1 002321   200033 116300                    CMPQ  ! P$,,AUTO
         1 002322   002345 601200 1                  TNZ   ! s:10902

     1642    10892    6                  DO;

     1643    10893                                /* Addition of BLK$ to P$ has now made
     1644    10894                                   the new P$ buddy to its flink, so
     1645    10895                                   coalesce them. */
     1646    10896    6                  BLK$->KQ$FB.SIZE=BLK$->KQ$FB.SIZE+P$->KQ$FB.SIZE;

  10896  1 002323   200033 470700                    LDP0  ! P$,,AUTO
         1 002324   100002 236300                    LDQ   ! 2,,PR1
         1 002325   000002 036300                    ADLQ  ! 2,,PR0
         1 002326   100002 756300                    STQ   ! 2,,PR1

     1647    10897    6                  BLK$->KQ$FB.FLNK$=P$->KQ$FB.FLNK$;

  10897  1 002327   000000 236300                    LDQ   ! 0,,PR0
         1 002330   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002331   100000 756300                    STQ   ! 0,,PR1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:230  

     1648    10898    6                  IF BLK$->KQ$FB.FLNK$ ~= ADDR(NIL) THEN

  10898  1 002332   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002333   100000 236300                    LDQ   ! 0,,PR1
         1 002334   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002335   002342 600200 1                  TZE   ! s:10900

     1649    10899    6                   BLK$->KQ$FB.FLNK$->KQ$FB.BLNK$=BLK$;

  10899  1 002336   100000 473700                    LDP3  ! 0,,PR1
         1 002337   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002340   300001 756300                    STQ   ! 1,,PR3
         1 002341   002345 710200 1                  TRA   ! s:10902

     1650    10900    6                  ELSE BAP$->KQ$BAP.ORTAIL$=BLK$;

  10900  1 002342   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002343   200012 473700                    LDP3  ! BAP$,,AUTO
         1 002344   300010 756300                    STQ   ! 8,,PR3

     1651    10901    6                  END;

     1652    10902    5                GOTO GB6;

  10902  1 002345   002263 710200 1                  TRA   ! GB6

     1653    10903    5                END;
     1654    10904    4              ELSE /* Not buddy on either side */
     1655    10905    4               IF OFFSET > 0 THEN

  10905  1 002346   200014 235300                    LDA   ! OFFSET,,AUTO
         1 002347   002360 604600 1                  TMOZ  ! s:10924

     1656    10906    5                 DO;

     1657    10907    5                 IF OFFSETR < P$->KQ$FB.SIZE THEN CALL SC_BCGBAP;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:231  

  10907  1 002350   000002 116300                    CMPQ  ! 2,,PR0
         1 002351   002354 603200 1                  TRC   ! s:10920

  10907  1 002352   000000 713600 xsym               CLIMB ! SC_BCGBAP
         1 002353   000000 600000 xsid               climb   nvectors=         0

     1658    10908        /*S* SCREECH_CODE: KQM-S$BCGBAP
     1659    10909             TYPE:         SCREECH
     1660    10910             MESSAGE:      A comgroup block-allocation page has a bad free chain
     1661    10911             REMARKS:      This SCREECH occurs during the merge of the unordered
     1662    10912                           free chain into the ordered free chain of a specific
     1663    10913                           comgroup block-allocation page, when two free blocks
     1664    10914                           are discovered to overlap.  This is most likely to
     1665    10915                           be due to a bad block release, however, the SCREECH
     1666    10916                           occurs during allocation, not release, so it may
     1667    10917                           be rather difficult to discover who released the
     1668    10918                           block (or even which block is the bad one). */
     1669    10919                                /* Have not found insert place yet */
     1670    10920    5                 P$=P$->KQ$FB.FLNK$;

  10920  1 002354   200033 470700                    LDP0  ! P$,,AUTO
         1 002355   000000 236300                    LDQ   ! 0,,PR0
         1 002356   200033 756300                    STQ   ! P$,,AUTO

     1671    10921    5                 END;

  10921  1 002357   002415 710200 1                  TRA   ! s:10940

     1672    10922    4               ELSE
     1673    10923    5                 DO;

     1674    10924    5                 IF OFFSET > -I THEN CALL SC_BCGBAP;

  10924  1 002360   000000 236203                    LDQ   ! 0,DU
         1 002361   200011 136300                    SBLQ  ! I,,AUTO
         1 002362   200014 116300                    CMPQ  ! OFFSET,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:232  
         1 002363   002366 605200 1                  TPL   ! s:10926

  10924  1 002364   000000 713600 xsym               CLIMB ! SC_BCGBAP
         1 002365   000000 600000 xsid               climb   nvectors=         0

     1675    10925                                /* Goes between P$ and his blink */
     1676    10926    5                 IF P$->KQ$FB.BLNK$ ~= ADDR(NIL) THEN

  10926  1 002366   200033 470700                    LDP0  ! P$,,AUTO
         1 002367   000001 236300                    LDQ   ! 1,,PR0
         1 002370   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002371   002400 600200 1                  TZE   ! s:10933

     1677    10927    6                   DO;

     1678    10928    6                   BLK$->KQ$FB.BLNK$=P$->KQ$FB.BLNK$;

  10928  1 002372   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002373   100001 756300                    STQ   ! 1,,PR1

     1679    10929    6                   P$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$;

  10929  1 002374   000001 471700                    LDP1  ! 1,,PR0
         1 002375   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002376   100000 756300                    STQ   ! 0,,PR1

     1680    10930    6                   END;

  10930  1 002377   002406 710200 1                  TRA   ! s:10936

     1681    10931    5                 ELSE
     1682    10932    6                   DO;

     1683    10933    6                   BLK$->KQ$FB.BLNK$=ADDR(NIL);

  10933  1 002400   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         1 002401   200013 471700                    LDP1  ! BLK$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:233  
         1 002402   100001 756300                    STQ   ! 1,,PR1

     1684    10934    6                   BAP$->KQ$BAP.ORHEAD$=BLK$;

  10934  1 002403   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002404   200012 471700                    LDP1  ! BAP$,,AUTO
         1 002405   100007 756300                    STQ   ! 7,,PR1

     1685    10935    6                   END;

     1686    10936    5                 BLK$->KQ$FB.FLNK$=P$;

  10936  1 002406   200033 236300                    LDQ   ! P$,,AUTO
         1 002407   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002410   100000 756300                    STQ   ! 0,,PR1

     1687    10937    5                 P$->KQ$FB.BLNK$=BLK$;

  10937  1 002411   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002412   000001 756300                    STQ   ! 1,,PR0

     1688    10938    5                 RETURN;

  10938  1 002413   200032 221300                    LDX1  ! I,,AUTO
         1 002414   000001 702211                    TSX2  ! 1,X1

     1689    10939    5                 END;
     1690    10940    4             END P$LOOP;

  10940  1 002415   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002416   002211 601200 1                  TNZ   ! s:10867

     1691    10941                                /* Goes at end */
     1692    10942    3           BLK$->KQ$FB.FLNK$=ADDR(NIL);

  10942  1 002417   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         1 002420   200013 470700                    LDP0  ! BLK$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:234  
         1 002421   000000 756300                    STQ   ! 0,,PR0

     1693    10943    3           BLK$->KQ$FB.BLNK$=BAP$->KQ$BAP.ORTAIL$;

  10943  1 002422   200012 470700                    LDP0  ! BAP$,,AUTO
         1 002423   000010 236300                    LDQ   ! 8,,PR0
         1 002424   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002425   100001 756300                    STQ   ! 1,,PR1

     1694    10944    3           IF BLK$->KQ$FB.BLNK$ ~= ADDR(NIL) THEN

  10944  1 002426   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002427   100001 236300                    LDQ   ! 1,,PR1
         1 002430   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002431   002436 600200 1                  TZE   ! s:10946

     1695    10945    3            BLK$->KQ$FB.BLNK$->KQ$FB.FLNK$=BLK$;

  10945  1 002432   100001 473700                    LDP3  ! 1,,PR1
         1 002433   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002434   300000 756300                    STQ   ! 0,,PR3
         1 002435   002440 710200 1                  TRA   ! s:10947

     1696    10946    3           ELSE BAP$->KQ$BAP.ORHEAD$=BLK$;

  10946  1 002436   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002437   000007 756300                    STQ   ! 7,,PR0

     1697    10947    3           BAP$->KQ$BAP.ORTAIL$=BLK$;

  10947  1 002440   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002441   000010 756300                    STQ   ! 8,,PR0

     1698    10948    3           GOTO GB6; /* Covers newpage case */

  10948  1 002442   002263 710200 1                  TRA   ! GB6

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:235  
     1699    10949    3           END; /*INHIBIT*/

     1700    10950    2   END DOCHAIN;

  10950  1 002443   200032 221300                    LDX1  ! I,,AUTO
         1 002444   000001 702211                    TSX2  ! 1,X1

     1701    10951        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:236  
     1702    10952        /**/
     1703    10953        /*F* NAME:         KQM$RELSTA
     1704    10954             PURPOSE:      To release a STA blk for the CG contexted by KQ$CG
     1705    10955             DESCRIPTION:  MEM$ points to the STA blk to release.
     1706    10956        */
     1707    10957    1   KQM$RELSTA: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  10957  1 002445   000000 700200 xent  KQM$RELSTA   TSX0  ! X66_AUTO_3
         1 002446   000050 000003                    ZERO    40,3

     1708    10958    2           DO INHIBIT;

     1709    10959    2           IF KQ$CG.QISS THEN

  10959  1 002447   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 002450   000106 235300                    LDA   ! 70,,PR0
         1 002451   002455 600200 1                  TZE   ! s:10961

     1710    10960    2            GSIZE=SIZEW(KQ$QTN);

  10960  1 002452   000066 236207                    LDQ   ! 54,DL
         1 002453   200017 756300                    STQ   ! GSIZE,,AUTO
         1 002454   002457 710200 1                  TRA   ! s:10962

     1711    10961    2           ELSE GSIZE=SIZEW(KQ$STA);

  10961  1 002455   000044 236207                    LDQ   ! 36,DL
         1 002456   200017 756300                    STQ   ! GSIZE,,AUTO

     1712    10962    2           GOTO RELBLK;

  10962  1 002457   002620 710200 1                  TRA   ! RELBLK

     1713    10963    2           END; /*INHIBIT*/

  10963  1 002460   002463 710000 1                  TRA     s:10973

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:237  
     1714    10964        /**/
     1715    10965        /*F* NAME:         KQM$RELB
     1716    10966             PURPOSE:      To release the block of memory for the CG contexted
     1717    10967                           by KQ$CG.
     1718    10968             DESCRIPTION:  The block is pointed to by MEM$, and is of size
     1719    10969                           ERRFLG words.
     1720    10970        */
     1721    10971    1   KQM$RELB: ENTRY (KQ$CG,MEM$,ERRFLG) ALTRET; /* !!Doesn't ALTRET!! */

  10971  1 002461   000000 700200 xent  KQM$RELB     TSX0  ! X66_AUTO_3
         1 002462   000050 000003                    ZERO    40,3

     1722    10972    2           DO INHIBIT;

     1723    10973    2           GSIZE=ERRFLG;

  10973  1 002463   200005 470700                    LDP0  ! @ERRFLG,,AUTO
         1 002464   000000 235300                    LDA   ! 0,,PR0
         1 002465   200017 755300                    STA   ! GSIZE,,AUTO

     1724    10974    2           GOTO RELBLK;

  10974  1 002466   002620 710200 1                  TRA   ! RELBLK

     1725    10975    2           END; /*INHIBIT*/

  10975  1 002467   002472 710000 1                  TRA     s:10983

     1726    10976        /**/
     1727    10977        /*F* NAME:         KQM$RELMBLK
     1728    10978             PURPOSE:      To release an MBLK for the CG contexted by KQ$CG
     1729    10979             DESCRIPTION:  MEM$ points to the MBLK to release.
     1730    10980        */
     1731    10981    1   KQM$RELMBLK: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  10981  1 002470   000000 700200 xent  KQM$RELMBLK  TSX0  ! X66_AUTO_3
         1 002471   000050 000003                    ZERO    40,3
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:238  

     1732    10982    2           DO INHIBIT;

     1733    10983    2           GSIZE=SIZEW(KQ$MBLK);

  10983  1 002472   000020 235207                    LDA   ! 16,DL
         1 002473   200017 755300                    STA   ! GSIZE,,AUTO

     1734    10984    2           GOTO RELBLK;

  10984  1 002474   002620 710200 1                  TRA   ! RELBLK

     1735    10985    2           END; /*INHIBIT*/

  10985  1 002475   002500 710000 1                  TRA     s:10993

     1736    10986        /**/
     1737    10987        /*F* NAME:         KQM$RELMTYP
     1738    10988             PURPOSE:      To release an MTYP blk for the CG contexted by KQ$CG
     1739    10989             DESCRIPTION:  MEM$ points to the MTYP blk to release.
     1740    10990        */
     1741    10991    1   KQM$RELMTYP: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  10991  1 002476   000000 700200 xent  KQM$RELMTYP  TSX0  ! X66_AUTO_3
         1 002477   000050 000003                    ZERO    40,3

     1742    10992    2           DO INHIBIT;

     1743    10993    2           IF NOT KQ$CG.QISS THEN

  10993  1 002500   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 002501   000106 235300                    LDA   ! 70,,PR0
         1 002502   002506 601200 1                  TNZ   ! s:10995

     1744    10994    2            GSIZE=SIZEW(KQ$QTN);

  10994  1 002503   000066 236207                    LDQ   ! 54,DL
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:239  
         1 002504   200017 756300                    STQ   ! GSIZE,,AUTO
         1 002505   002510 710200 1                  TRA   ! s:10996

     1745    10995    2           ELSE GSIZE=SIZEW(KQ$MTYP);

  10995  1 002506   000012 236207                    LDQ   ! 10,DL
         1 002507   200017 756300                    STQ   ! GSIZE,,AUTO

     1746    10996    2           GOTO RELBLK;

  10996  1 002510   002620 710200 1                  TRA   ! RELBLK

     1747    10997    2           END; /*INHIBIT*/

  10997  1 002511   002514 710000 1                  TRA     s:11005

     1748    10998        /**/
     1749    10999        /*F* NAME:         KQM$RELRBLK
     1750    11000             PURPOSE:      To release a DCB RBLK for the CG contexted by KQ$CG
     1751    11001             DESCRIPTION:  MEM$ points to the RBLK to release.
     1752    11002        */
     1753    11003    1   KQM$RELRBLK: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  11003  1 002512   000000 700200 xent  KQM$RELRBLK  TSX0  ! X66_AUTO_3
         1 002513   000050 000003                    ZERO    40,3

     1754    11004    2           DO INHIBIT;

     1755    11005    2           GSIZE=SIZEW(KQ$RBLK);

  11005  1 002514   000022 235207                    LDA   ! 18,DL
         1 002515   200017 755300                    STA   ! GSIZE,,AUTO

     1756    11006    2           GOTO RELBLK;

  11006  1 002516   002620 710200 1                  TRA   ! RELBLK

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:240  
     1757    11007    2           END; /*INHIBIT*/

  11007  1 002517   002522 710000 1                  TRA     s:11015

     1758    11008        /**/
     1759    11009        /*F* NAME:         KQM$RELRBLKT
     1760    11010             PURPOSE:      To release an RBLK for a TERMINAL
     1761    11011             DESCRIPTION:  MEM$ points to the TERMINAL RBLK to release
     1762    11012        */
     1763    11013    1   KQM$RELRBLKT: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  11013  1 002520   000000 700200 xent  KQM$RELRBLKT TSX0  ! X66_AUTO_3
         1 002521   000050 000003                    ZERO    40,3

     1764    11014    2           DO INHIBIT;

     1765    11015    2           GSIZE=SIZEW(KQ$RBLKT);

  11015  1 002522   000016 235207                    LDA   ! 14,DL
         1 002523   200017 755300                    STA   ! GSIZE,,AUTO

     1766    11016    2           GOTO RELBLK;

  11016  1 002524   002620 710200 1                  TRA   ! RELBLK

     1767    11017    2           END; /*INHIBIT*/

  11017  1 002525   002530 710000 1                  TRA     s:11030

     1768    11018        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:241  
     1769    11019        /**/
     1770    11020        /*F* NAME:         KQM$RELBC
     1771    11021             PURPOSE:      To release a block from the BASEREL$ list
     1772    11022             DESCRIPTION:  MEM$ points to a block removed from the
     1773    11023                           BASEREL$ list.
     1774    11024                           It is released and/or given away to blocked
     1775    11025                           people.
     1776    11026        */
     1777    11027    1   KQM$RELBC: ENTRY (KQ$CG,MEM$) ALTRET; /* !!Doesn't ALTRET!! */

  11027  1 002526   000000 700200 xent  KQM$RELBC    TSX0  ! X66_AUTO_3
         1 002527   000050 000003                    ZERO    40,3

     1778    11028        /**/
     1779    11029    2           DO INHIBIT;

     1780    11030    2           ENTFLAG=1;

  11030  1 002530   000001 235207                    LDA   ! 1,DL
         1 002531   200022 755300                    STA   ! ENTFLAG,,AUTO

     1781    11031    2           GSIZE=MEM$->KQ$FB.SIZE;

  11031  1 002532   200004 470700                    LDP0  ! @MEM$,,AUTO
         1 002533   000000 471700                    LDP1  ! 0,,PR0
         1 002534   100002 235300                    LDA   ! 2,,PR1
         1 002535   200017 755300                    STA   ! GSIZE,,AUTO

     1782    11032    2           GOTO RELBLK1;

  11032  1 002536   002630 710200 1                  TRA   ! RELBLK1

     1783    11033    2           END;

  11033  1 002537   002542 710000 1                  TRA     s:11049

     1784    11034        /**/
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:242  
     1785    11035        /*F* NAME:         KQM$BASEREL
     1786    11036             PURPOSE:      To release blocks on the BASEREL$ list
     1787    11037             DESCRIPTION:  Release of a block when people are blocked
     1788    11038                           waiting for memory cannot normally unblock
     1789    11039                           them since the caller of KQM$RELMBLK etc
     1790    11040                           may have a gate locked.  Thus such releases
     1791    11041                           go onto the BASEREL$ list.  KCC$BASE calls
     1792    11042                           here if the list is nonempty, and we drive
     1793    11043                           thru the list releasing its elements in
     1794    11044                           such a way as to unblock people waiting for
     1795    11045                           memory.
     1796    11046        */
     1797    11047    1   KQM$BASEREL: ENTRY (KQ$CG) ALTRET; /* !!Doesn't ALTRET!! */

  11047  1 002540   000000 700200 xent  KQM$BASEREL  TSX0  ! X66_AUTO_3
         1 002541   000050 000003                    ZERO    40,3

     1798    11048        /**/
     1799    11049    1         CALL BASEREL;

  11049  1 002542   002545 701000 1                  TSX1    BASEREL
         1 002543   000000 011000                    NOP     0

     1800    11050    1         RETURN;

  11050  1 002544   000000 702200 xent               TSX2  ! X66_ARET

     1801    11051        /**/
     1802    11052    1   BASEREL: PROC;

  11052  1 002545   200026 741300       BASEREL      STX1  ! STA$+2,,AUTO

     1803    11053              %LOCK (G=KQ$CG.MMD.GATE);

  11054  1 002546   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 002547   000001 036003                    ADLQ    1,DU
         1 002550   200036 756100                    STQ     I+1,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:243  
         1 002551   200036 630500                    EPPR0   I+1,,AUTO
         1 002552   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002553   000000 701000 xent               TSX1    HFC$LOCK
         1 002554   000000 011000                    NOP     0

     1804    11056    3           DO WHILE (KQ$CG.MMD.BASEREL$ ~= ADDR(NIL));

  11056  1 002555   002603 710000 1                  TRA     s:11065

     1805    11057    4             DO INHIBIT;

     1806    11058    4             BLK$=KQ$CG.MMD.BASEREL$;

  11058  1 002556   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 002557   000012 236300                    LDQ   ! 10,,PR0
         1 002560   200013 756300                    STQ   ! BLK$,,AUTO

     1807    11059    4             KQ$CG.MMD.BASEREL$=BLK$->KQ$FB.FLNK$;

  11059  1 002561   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002562   100000 236300                    LDQ   ! 0,,PR1
         1 002563   000012 756300                    STQ   ! 10,,PR0

     1808    11060    4             CALL KQM$RELBC (KQ$CG,BLK$);

  11060  1 002564   200013 631700                    EPPR1 ! BLK$,,AUTO
         1 002565   200037 451700                    STP1  ! I+2,,AUTO
         1 002566   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 002567   200036 756300                    STQ   ! I+1,,AUTO
         1 002570   200036 630700                    EPPR0 ! I+1,,AUTO
         1 002571   000020 631600 xsym               EPPR1 ! B_VECTNIL+16
         1 002572   002526 701200 1                  TSX1  ! s:11027
         1 002573   000000 011200                    NOP   ! 0

     1809    11061    4             END;

     1810    11062                %LOCK (G=KQ$CG.MMD.GATE);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:244  

  11063  1 002574   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 002575   000001 036003                    ADLQ    1,DU
         1 002576   200036 756100                    STQ     I+1,,AUTO
         1 002577   200036 630500                    EPPR0   I+1,,AUTO
         1 002600   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002601   000000 701000 xent               TSX1    HFC$LOCK
         1 002602   000000 011000                    NOP     0

     1811    11065    3           END;

  11065  1 002603   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 002604   000012 236100                    LDQ     10,,PR0
         1 002605   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 002606   002556 601000 1                  TNZ     s:11058

     1812    11066              %UNLOCK (G=KQ$CG.MMD.GATE);

  11067  1 002607   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 002610   000001 036003                    ADLQ    1,DU
         1 002611   200036 756100                    STQ     I+1,,AUTO
         1 002612   200036 630500                    EPPR0   I+1,,AUTO
         1 002613   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 002614   000000 701000 xent               TSX1    HFC$UNLOCK
         1 002615   000000 011000                    NOP     0

     1813    11069    2         RETURN;

  11069  1 002616   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 002617   000001 702211                    TSX2  ! 1,X1

  11069  1 002620                       RELBLK       null
     1814    11070    2   END BASEREL;
     1815    11071        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:245  
     1816    11072        /*
     1817    11073              RRRR   EEEEE  L      BBBB   L      K   K
     1818    11074              R   R  E      L      B   B  L      K  K
     1819    11075              R   R  E      L      B   B  L      K K
     1820    11076              RRRR   EEEE   L      BBBB   L      KK
     1821    11077              R R    E      L      B   B  L      K K
     1822    11078              R  R   E      L      B   B  L      K  K
     1823    11079              R   R  EEEEE  LLLLL  BBBB   LLLLL  K   K
     1824    11080        */
     1825    11081        /*D* NAME:         RELBLK
     1826    11082             PURPOSE:      To release a block of memory
     1827    11083             DESCRIPTION:  MEM$ points to the block to release; GSIZE its size.
     1828    11084                           If anyone is waiting for memory, put the block
     1829    11085                           on the BASEREL$ list unless entered at KQM$RELBC (ENTFLG=1)
     1830    11086                           in which case we buddy up the released block and
     1831    11087                           try to give the result away to someone.  Otherwise,
     1832    11088                           It is released onto the chain of unsorted free blocks
     1833    11089                           in its page.  If the page thus becomes all
     1834    11090                           free, the page itself is released.
     1835    11091        */
     1836    11092    1   RELBLK:;
     1837    11093    2           DO INHIBIT;

     1838    11094    2           ENTFLAG=0;

  11094  1 002620   200022 450300                    STZ   ! ENTFLAG,,AUTO

     1839    11095                %LOCK (G=KQ$CG.MMD.GATE);

  11096  1 002621   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 002622   000001 036203                    ADLQ  ! 1,DU
         1 002623   200036 756300                    STQ   ! I+1,,AUTO
         1 002624   200036 630700                    EPPR0 ! I+1,,AUTO
         1 002625   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 002626   000000 701200 xent               TSX1  ! HFC$LOCK
         1 002627   000000 011200                    NOP   ! 0

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:246  
  11094  1 002630                       RELBLK1      null
     1840    11098    2   RELBLK1:;
     1841    11099    2           BLK$=MEM$;

  11099  1 002630   200004 470700                    LDP0  ! @MEM$,,AUTO
         1 002631   000000 236300                    LDQ   ! 0,,PR0
         1 002632   200013 756300                    STQ   ! BLK$,,AUTO

     1842    11100    2           IF KQ_LOG.MM THEN

  11100  1 002633   000000 234200 xsym               SZN   ! KQ_LOG
         1 002634   002655 605200 1                  TPL   ! s:11102

     1843    11101    2            CALL KQZ$LOG (KQ$CG,%KQLOG_MREL,0,ENTFLAG,0,MEM$,GSIZE);

  11101  1 002635   200017 631700                    EPPR1 ! GSIZE,,AUTO
         1 002636   200044 451700                    STP1  ! I+7,,AUTO
         1 002637   200004 236300                    LDQ   ! @MEM$,,AUTO
         1 002640   000005 235200 2                  LDA   ! 5
         1 002641   200042 757300                    STAQ  ! I+5,,AUTO
         1 002642   200022 633700                    EPPR3 ! ENTFLAG,,AUTO
         1 002643   200041 453700                    STP3  ! I+4,,AUTO
         1 002644   000005 236200 2                  LDQ   ! 5
         1 002645   200040 756300                    STQ   ! I+3,,AUTO
         1 002646   000013 236200 2                  LDQ   ! 11
         1 002647   200003 235300                    LDA   ! @KQ$CG,,AUTO
         1 002650   200036 757300                    STAQ  ! I+1,,AUTO
         1 002651   200036 630700                    EPPR0 ! I+1,,AUTO
         1 002652   000025 631600 xsym               EPPR1 ! B_VECTNIL+21
         1 002653   000000 701200 xent               TSX1  ! KQZ$LOG
         1 002654   000000 011200                    NOP   ! 0

     1844    11102    2           BAP$=BLK$;

  11102  1 002655   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002656   200012 756300                    STQ   ! BAP$,,AUTO

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:247  
     1845    11103    2           BAP$R.OTHER=0; /* Get page address */

  11103  1 002657   000014 236200 2                  LDQ   ! 12
         1 002660   200012 356300                    ANSQ  ! BAP$,,AUTO

     1846    11104    2           IF BAP$->KQ$BAP.HDR.SELF$ ~= BAP$

  11104  1 002661   200012 470700                    LDP0  ! BAP$,,AUTO
         1 002662   000002 236300                    LDQ   ! 2,,PR0
         1 002663   200012 116300                    CMPQ  ! BAP$,,AUTO
         1 002664   002670 601200 1                  TNZ   ! s:11105
         1 002665   000013 236300                    LDQ   ! 11,,PR0
         1 002666   200003 116300                    CMPQ  ! @KQ$CG,,AUTO
         1 002667   002672 600200 1                  TZE   ! s:11114

     1847    11105    2           OR BAP$->KQ$BAP.CG$ ~= ADDR(KQ$CG) THEN CALL SC_BCGQRL;

  11105  1 002670   000000 713600 xsym               CLIMB ! SC_BCGQRL
         1 002671   000000 600000 xsid               climb   nvectors=         0

     1848    11106        /*S* SCREECH_CODE: KQM-S$BCGQRL
     1849    11107             TYPE:         SCREECH
     1850    11108             MESSAGE:      Comgroup block release into bad page
     1851    11109             REMARKS:      This SCREECH occurs when a block of memory is
     1852    11110                           released on behalf of a comgroup, but the page
     1853    11111                           on which the block lives does not belong to that
     1854    11112                           comgroup.  Any number of possible causes; one must
     1855    11113                           examine who is releasing the block and why. */
     1856    11114    2           IF KQ_DEBUG ~= 0 THEN

  11114  1 002672   000000 235200 xsym               LDA   ! KQ_DEBUG
         1 002673   002706 600200 1                  TZE   ! s:11124

     1857    11115    3             DO;

     1858    11116    3             P$=BAP$->KQ$BAP.JUHEAD$;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:248  
  11116  1 002674   200012 470700                    LDP0  ! BAP$,,AUTO
         1 002675   000011 236300                    LDQ   ! 9,,PR0
         1 002676   200015 756300                    STQ   ! P$,,AUTO

     1859    11117    3             CALL CHAINCHK;

  11117  1 002677   003406 701200 1                  TSX1  ! CHAINCHK
         1 002700   000000 011200                    NOP   ! 0

     1860    11118    3             P$=BAP$->KQ$BAP.ORHEAD$;

  11118  1 002701   200012 470700                    LDP0  ! BAP$,,AUTO
         1 002702   000007 236300                    LDQ   ! 7,,PR0
         1 002703   200015 756300                    STQ   ! P$,,AUTO

     1861    11119    3             CALL CHAINCHK;

  11119  1 002704   003406 701200 1                  TSX1  ! CHAINCHK
         1 002705   000000 011200                    NOP   ! 0

     1862    11120    3             END;

     1863    11121        /**/
     1864    11122        /* OK to release it */
     1865    11123        /**/
     1866    11124    2           IF KQ$CG.MMD.STAHD$ ~= ADDR(NIL)

  11124  1 002706   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 002707   000013 236300                    LDQ   ! 11,,PR0
         1 002710   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002711   002715 601200 1                  TNZ   ! s:11131
         1 002712   000014 236300                    LDQ   ! 12,,PR0
         1 002713   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002714   003114 600200 1                  TZE   ! s:11190

     1867    11125    2           OR KQ$CG.MMD.MBLKHD$ ~= ADDR(NIL) THEN
     1868    11126    3             DO;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:249  

     1869    11127                     /*    Try to
     1870    11128                      *    give it
     1871    11129                      *    away
     1872    11130                      */
     1873    11131    3             IF BAP$->KQ$BAP.JUHEAD$ ~= ADDR(NIL) THEN

  11131  1 002715   200012 471700                    LDP1  ! BAP$,,AUTO
         1 002716   100011 236300                    LDQ   ! 9,,PR1
         1 002717   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 002720   002723 600200 1                  TZE   ! s:11138

     1874    11132    3              CALL SC_BCGMRQS;

  11132  1 002721   000000 713600 xsym               CLIMB ! SC_BCGMRQS
         1 002722   000000 600000 xsid               climb   nvectors=         0

     1875    11133        /*S* SCREECH_CODE: KQM-S$BCGMRQS
     1876    11134             TYPE:         SNAP
     1877    11135             MESSAGE:      Recoverable inconsistency in comgroup memory request
     1878    11136             REMARKS:      Same as S$BCGMRQ but the error is not irrecoverable
     1879    11137        */
     1880    11138    3             BLK$->KQ$FB.SIZE=GSIZE;

  11138  1 002723   200013 470700                    LDP0  ! BLK$,,AUTO
         1 002724   200017 235300                    LDA   ! GSIZE,,AUTO
         1 002725   000002 755300                    STA   ! 2,,PR0

     1881    11139    3             IF ENTFLAG = 0 THEN

  11139  1 002726   200022 235300                    LDA   ! ENTFLAG,,AUTO
         1 002727   002741 601200 1                  TNZ   ! s:11147

     1882    11140    4               DO;

     1883    11141    4               BLK$->KQ$FB.FLNK$=KQ$CG.MMD.BASEREL$;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:250  
  11141  1 002730   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 002731   000012 236300                    LDQ   ! 10,,PR0
         1 002732   200013 471700                    LDP1  ! BLK$,,AUTO
         1 002733   100000 756300                    STQ   ! 0,,PR1

     1884    11142    4               KQ$CG.MMD.BASEREL$=BLK$;

  11142  1 002734   200013 236300                    LDQ   ! BLK$,,AUTO
         1 002735   000012 756300                    STQ   ! 10,,PR0

     1885    11143    4               KQ$CG.BASEDELAY=KQ$CG.BASEDELAY+1;

  11143  1 002736   000025 054300                    AOS   ! 21,,PR0

     1886    11144    4               KQ_BASEDELAY=KQ_BASEDELAY+1;

  11144  1 002737   000000 054200 xsym               AOS   ! KQ_BASEDELAY

     1887    11145    4               GOTO RELX;

  11145  1 002740   003104 710200 1                  TRA   ! GETOUT

     1888    11146    4               END;
     1889    11147    3             BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE+GSIZE;

  11147  1 002741   200012 470700                    LDP0  ! BAP$,,AUTO
         1 002742   000006 236300                    LDQ   ! 6,,PR0
         1 002743   200017 036300                    ADLQ  ! GSIZE,,AUTO
         1 002744   000006 756300                    STQ   ! 6,,PR0

     1890    11148    3             CHAIN$=ADDR(BAP$->KQ$BAP.ORHEAD$);

  11148  1 002745   200012 236300                    LDQ   ! BAP$,,AUTO
         1 002746   000007 036203                    ADLQ  ! 7,DU
         1 002747   200016 756300                    STQ   ! CHAIN$,,AUTO

  11148  1 002750                       REL05        null
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:251  
     1891    11149    3   REL05:    ;
     1892    11150    3             P$=ADDR(KQ$CG.MMD.MBLKHD$);

  11150  1 002750   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 002751   000014 036203                    ADLQ  ! 12,DU
         1 002752   200015 756300                    STQ   ! P$,,AUTO

     1893    11151    3             MBLK$=P$->B$$PTR;

  11151  1 002753   200015 470700                    LDP0  ! P$,,AUTO
         1 002754   000000 236300                    LDQ   ! 0,,PR0
         1 002755   200023 756300                    STQ   ! MBLK$,,AUTO

     1894    11152    4               DO WHILE (MBLK$ ~= ADDR(NIL));

  11152  1 002756   003024 710200 1                  TRA   ! s:11164

     1895    11153    4               CALL TRYGET (MBLK$->KQ$MBLK.MREQ) ALTRET(REL10);

  11153  1 002757   200023 236300                    LDQ   ! MBLK$,,AUTO
         1 002760   000015 036200 2                  ADLQ  ! 13
         1 002761   200027 756300                    STQ   ! STA$+3,,AUTO
         1 002762   003261 701200 1                  TSX1  ! TRYGET
         1 002763   003016 702200 1                  TSX2  ! REL10

     1896    11154    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK+1;

  11154  1 002764   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 002765   000011 236300                    LDQ   ! 9,,PR0
         1 002766   000001 036203                    ADLQ  ! 1,DU
         1 002767   000011 552320                    STBQ  ! 9,'20'O,PR0

     1897    11155    4               CALL UNBLOCKM (P$->B$$PTR,BLK$);

  11155  1 002770   200013 631700                    EPPR1 ! BLK$,,AUTO
         1 002771   200030 451700                    STP1  ! @RTYP+1,,AUTO
         1 002772   200015 236300                    LDQ   ! P$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:252  
         1 002773   200027 756300                    STQ   ! STA$+3,,AUTO
         1 002774   000706 701200 1                  TSX1  ! UNBLOCKM
         1 002775   000000 011200                    NOP   ! 0

     1898    11156                    %LOCK (G=KQ$CG.MMD.GATE);

  11157  1 002776   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 002777   000001 036203                    ADLQ  ! 1,DU
         1 003000   200036 756300                    STQ   ! I+1,,AUTO
         1 003001   200036 630700                    EPPR0 ! I+1,,AUTO
         1 003002   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 003003   000000 701200 xent               TSX1  ! HFC$LOCK
         1 003004   000000 011200                    NOP   ! 0

     1899    11159    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK-1;

  11159  1 003005   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 003006   000011 236300                    LDQ   ! 9,,PR0
         1 003007   000777 036203                    ADLQ  ! 511,DU
         1 003010   000011 552320                    STBQ  ! 9,'20'O,PR0

     1900    11160    4               IF BAP$->KQ$BAP.ORHEAD$ ~= ADDR(NIL) THEN GOTO REL05;

  11160  1 003011   200012 471700                    LDP1  ! BAP$,,AUTO
         1 003012   100007 236300                    LDQ   ! 7,,PR1
         1 003013   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 003014   002750 601200 1                  TNZ   ! REL05

     1901    11161    4               GOTO GETOUT;

  11161  1 003015   003104 710200 1                  TRA   ! GETOUT

     1902    11162    4   REL10:      P$=ADDR(MBLK$->KQ$MBLK.XSP.MREQ$);

  11162  1 003016   200023 236300       REL10        LDQ   ! MBLK$,,AUTO
         1 003017   000004 036203                    ADLQ  ! 4,DU
         1 003020   200015 756300                    STQ   ! P$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:253  

     1903    11163    4               MBLK$=P$->B$$PTR;

  11163  1 003021   200015 470700                    LDP0  ! P$,,AUTO
         1 003022   000000 236300                    LDQ   ! 0,,PR0
         1 003023   200023 756300                    STQ   ! MBLK$,,AUTO

     1904    11164    4               END;

  11164  1 003024   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 003025   002757 601200 1                  TNZ   ! s:11153

     1905    11165    3   REL15:    P$=ADDR(KQ$CG.MMD.STAHD$);

  11165  1 003026   200003 236300       REL15        LDQ   ! @KQ$CG,,AUTO
         1 003027   000013 036203                    ADLQ  ! 11,DU
         1 003030   200015 756300                    STQ   ! P$,,AUTO

     1906    11166    3             STA$=P$->B$$PTR;

  11166  1 003031   200015 470700                    LDP0  ! P$,,AUTO
         1 003032   000000 236300                    LDQ   ! 0,,PR0
         1 003033   200024 756300                    STQ   ! STA$,,AUTO

     1907    11167    4               DO WHILE (STA$ ~= ADDR(NIL));

  11167  1 003034   003102 710200 1                  TRA   ! s:11179

     1908    11168    4               CALL TRYGET (STA$->KQ$STA.MREQ) ALTRET(REL20);

  11168  1 003035   200024 236300                    LDQ   ! STA$,,AUTO
         1 003036   000016 036200 2                  ADLQ  ! 14
         1 003037   200027 756300                    STQ   ! STA$+3,,AUTO
         1 003040   003261 701200 1                  TSX1  ! TRYGET
         1 003041   003074 702200 1                  TSX2  ! REL20

     1909    11169    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK+1;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:254  

  11169  1 003042   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 003043   000011 236300                    LDQ   ! 9,,PR0
         1 003044   000001 036203                    ADLQ  ! 1,DU
         1 003045   000011 552320                    STBQ  ! 9,'20'O,PR0

     1910    11170    4               CALL UNBLOCKS (P$->B$$PTR,BLK$);

  11170  1 003046   200013 631700                    EPPR1 ! BLK$,,AUTO
         1 003047   200030 451700                    STP1  ! @RTYP+1,,AUTO
         1 003050   200015 236300                    LDQ   ! P$,,AUTO
         1 003051   200027 756300                    STQ   ! STA$+3,,AUTO
         1 003052   000557 701200 1                  TSX1  ! UNBLOCKS
         1 003053   000000 011200                    NOP   ! 0

     1911    11171                    %LOCK (G=KQ$CG.MMD.GATE);

  11172  1 003054   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 003055   000001 036203                    ADLQ  ! 1,DU
         1 003056   200036 756300                    STQ   ! I+1,,AUTO
         1 003057   200036 630700                    EPPR0 ! I+1,,AUTO
         1 003060   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 003061   000000 701200 xent               TSX1  ! HFC$LOCK
         1 003062   000000 011200                    NOP   ! 0

     1912    11174    4               KQ$CG.MMD.BAPLOCK=KQ$CG.MMD.BAPLOCK-1;

  11174  1 003063   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 003064   000011 236300                    LDQ   ! 9,,PR0
         1 003065   000777 036203                    ADLQ  ! 511,DU
         1 003066   000011 552320                    STBQ  ! 9,'20'O,PR0

     1913    11175    4               IF BAP$->KQ$BAP.ORHEAD$ ~= ADDR(NIL) THEN GOTO REL15;

  11175  1 003067   200012 471700                    LDP1  ! BAP$,,AUTO
         1 003070   100007 236300                    LDQ   ! 7,,PR1
         1 003071   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:255  
         1 003072   003026 601200 1                  TNZ   ! REL15

     1914    11176    4               GOTO GETOUT;

  11176  1 003073   003104 710200 1                  TRA   ! GETOUT

     1915    11177    4   REL20:      P$=ADDR(STA$->KQ$STA.MREQ$);

  11177  1 003074   200024 236300       REL20        LDQ   ! STA$,,AUTO
         1 003075   000024 036203                    ADLQ  ! 20,DU
         1 003076   200015 756300                    STQ   ! P$,,AUTO

     1916    11178    4               STA$=P$->B$$PTR;

  11178  1 003077   200015 470700                    LDP0  ! P$,,AUTO
         1 003100   000000 236300                    LDQ   ! 0,,PR0
         1 003101   200024 756300                    STQ   ! STA$,,AUTO

     1917    11179    4               END;

  11179  1 003102   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 003103   003035 601200 1                  TNZ   ! s:11168

     1918    11180    3   GETOUT:   ;

  11180  1 003104                       GETOUT       null
  11180  1 003104                       RELX         null
     1919    11181    3   RELX:     ;
     1920    11182                  %UNLOCK (G=KQ$CG.MMD.GATE);

  11183  1 003104   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 003105   000001 036203                    ADLQ  ! 1,DU
         1 003106   200036 756300                    STQ   ! I+1,,AUTO
         1 003107   200036 630700                    EPPR0 ! I+1,,AUTO
         1 003110   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 003111   000000 701200 xent               TSX1  ! HFC$UNLOCK
         1 003112   000000 011200                    NOP   ! 0
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:256  

     1921    11185    3             RETURN;

  11185  1 003113   000000 702200 xent               TSX2  ! X66_ARET

     1922    11186    3             END;
     1923    11187        /**/
     1924    11188        /* Just release it */
     1925    11189        /**/
     1926    11190    2           BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE+GSIZE;

  11190  1 003114   200012 471700                    LDP1  ! BAP$,,AUTO
         1 003115   100006 236300                    LDQ   ! 6,,PR1
         1 003116   200017 036300                    ADLQ  ! GSIZE,,AUTO
         1 003117   100006 756300                    STQ   ! 6,,PR1

     1927    11191    2           BLK$->KQ$FB.SIZE=GSIZE;

  11191  1 003120   200013 473700                    LDP3  ! BLK$,,AUTO
         1 003121   200017 235300                    LDA   ! GSIZE,,AUTO
         1 003122   300002 755300                    STA   ! 2,,PR3

     1928    11192    2           BLK$->KQ$FB.FLNK$=ADDR(NIL);

  11192  1 003123   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         1 003124   200013 473700                    LDP3  ! BLK$,,AUTO
         1 003125   300000 756300                    STQ   ! 0,,PR3

     1929    11193    2           IF BAP$->KQ$BAP.JUTAIL$ = ADDR(NIL) THEN

  11193  1 003126   100012 236300                    LDQ   ! 10,,PR1
         1 003127   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 003130   003134 601200 1                  TNZ   ! s:11195

     1930    11194    2            BAP$->KQ$BAP.JUHEAD$=BLK$;

  11194  1 003131   200013 236300                    LDQ   ! BLK$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:257  
         1 003132   100011 756300                    STQ   ! 9,,PR1
         1 003133   003137 710200 1                  TRA   ! s:11196

     1931    11195    2           ELSE BAP$->KQ$BAP.JUTAIL$->KQ$FB.FLNK$=BLK$;

  11195  1 003134   100012 473700                    LDP3  ! 10,,PR1
         1 003135   200013 236300                    LDQ   ! BLK$,,AUTO
         1 003136   300000 756300                    STQ   ! 0,,PR3

     1932    11196    2           BLK$->KQ$FB.BLNK$=BAP$->KQ$BAP.JUTAIL$;

  11196  1 003137   100012 236300                    LDQ   ! 10,,PR1
         1 003140   200013 473700                    LDP3  ! BLK$,,AUTO
         1 003141   300001 756300                    STQ   ! 1,,PR3

     1933    11197    2           BAP$->KQ$BAP.JUTAIL$=BLK$;

  11197  1 003142   200013 236300                    LDQ   ! BLK$,,AUTO
         1 003143   100012 756300                    STQ   ! 10,,PR1

     1934    11198    2           IF BAP$->KQ$BAP.FREESIZE < 1024-SIZEW(KQ$BAP) THEN

  11198  1 003144   100006 235300                    LDA   ! 6,,PR1
         1 003145   001764 115207                    CMPA  ! 1012,DL
         1 003146   003104 602200 1                  TNC   ! GETOUT

     1935    11199    2            GOTO RELX;
     1936    11200    2           ELSE IF BAP$->KQ$BAP.FREESIZE > 1024-SIZEW(KQ$BAP) THEN

  11200  1 003147   001765 115207                    CMPA  ! 1013,DL
         1 003150   003153 602200 1                  TNC   ! s:11203

     1937    11201    2             CALL SC_DCGBRL;

  11201  1 003151   000000 713600 xsym               CLIMB ! SC_DCGBRL
         1 003152   000000 600000 xsid               climb   nvectors=         0

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:258  
     1938    11202                                /* The page is all free */
     1939    11203    2           IF KQ_DEBUG ~= 0 THEN

  11203  1 003153   000000 235200 xsym               LDA   ! KQ_DEBUG
         1 003154   003176 600200 1                  TZE   ! s:11212

     1940    11204    3             DO;

     1941    11205    3             GSIZE=9999;

  11205  1 003155   023417 236207                    LDQ   ! 9999,DL
         1 003156   200017 756300                    STQ   ! GSIZE,,AUTO

     1942    11206    3             CALL BUDDY ALTRET(REL101);

  11206  1 003157   002052 701200 1                  TSX1  ! BUDDY
         1 003160   003255 702200 1                  TSX2  ! REL101

     1943    11207    3             P$=BAP$->KQ$BAP.ORHEAD$;

  11207  1 003161   200012 470700                    LDP0  ! BAP$,,AUTO
         1 003162   000007 236300                    LDQ   ! 7,,PR0
         1 003163   200015 756300                    STQ   ! P$,,AUTO

     1944    11208    3             IF P$->KQ$FB.SIZE ~= 1024-SIZEW(KQ$BAP)

  11208  1 003164   200015 471700                    LDP1  ! P$,,AUTO
         1 003165   100002 235300                    LDA   ! 2,,PR1
         1 003166   001764 115207                    CMPA  ! 1012,DL
         1 003167   003174 601200 1                  TNZ   ! s:11210
         1 003170   200012 236300                    LDQ   ! BAP$,,AUTO
         1 003171   000014 036203                    ADLQ  ! 12,DU
         1 003172   200015 116300                    CMPQ  ! P$,,AUTO
         1 003173   003176 600200 1                  TZE   ! s:11212

     1945    11209    3             OR P$ ~= PINCRW(BAP$,SIZEW(KQ$BAP)) THEN
     1946    11210    3              CALL SC_DCGBRL;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:259  

  11210  1 003174   000000 713600 xsym               CLIMB ! SC_DCGBRL
         1 003175   000000 600000 xsid               climb   nvectors=         0

     1947    11211    3             END;

     1948    11212    2           IF KQ$CG.MMD.BAPLOCK ~= 0

  11212  1 003176   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 003177   000011 236300                    LDQ   ! 9,,PR0
         1 003200   000777 316203                    CANQ  ! 511,DU
         1 003201   003104 601200 1                  TNZ   ! GETOUT
         1 003202   000011 720300                    LXL0  ! 9,,PR0
         1 003203   000010 100300                    CMPX0 ! 8,,PR0
         1 003204   003104 603200 1                  TRC   ! GETOUT

     1949    11213    2           OR KQ$CG.MMD.CURBPG <= KQ$CG.MMD.MINBPG THEN
     1950    11214    2            GOTO RELX;
     1951    11215                                /* Free the page */
     1952    11216    2           IF BAP$->KQ$BAP.BLNK$ ~= ADDR(NIL) THEN

  11216  1 003205   200012 471700                    LDP1  ! BAP$,,AUTO
         1 003206   100005 236300                    LDQ   ! 5,,PR1
         1 003207   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 003210   003215 600200 1                  TZE   ! s:11220

     1953    11217    2            BAP$->KQ$BAP.BLNK$->KQ$BAP.FLNK$=BAP$->KQ$BAP.FLNK$;

  11217  1 003211   100005 473700                    LDP3  ! 5,,PR1
         1 003212   100004 236300                    LDQ   ! 4,,PR1
         1 003213   300004 756300                    STQ   ! 4,,PR3
         1 003214   003233 710200 1                  TRA   ! s:11226

     1954    11218    2           ELSE
     1955    11219    3             DO;

     1956    11220    3             IF KQ$CG.MMD.HEAD$ = BAP$ THEN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:260  

  11220  1 003215   000003 236300                    LDQ   ! 3,,PR0
         1 003216   200012 116300                    CMPQ  ! BAP$,,AUTO
         1 003217   003223 601200 1                  TNZ   ! s:11222

     1957    11221    3              KQ$CG.MMD.HEAD$=BAP$->KQ$BAP.FLNK$;

  11221  1 003220   100004 236300                    LDQ   ! 4,,PR1
         1 003221   000003 756300                    STQ   ! 3,,PR0
         1 003222   003233 710200 1                  TRA   ! s:11226

     1958    11222    3             ELSE IF KQ$CG.MMD.PHEAD$ = BAP$ THEN

  11222  1 003223   000004 236300                    LDQ   ! 4,,PR0
         1 003224   200012 116300                    CMPQ  ! BAP$,,AUTO
         1 003225   003231 601200 1                  TNZ   ! s:11224

     1959    11223    3               KQ$CG.MMD.PHEAD$=BAP$->KQ$BAP.FLNK$;

  11223  1 003226   100004 236300                    LDQ   ! 4,,PR1
         1 003227   000004 756300                    STQ   ! 4,,PR0
         1 003230   003233 710200 1                  TRA   ! s:11226

     1960    11224    3              ELSE CALL SC_DCGBRL;

  11224  1 003231   000000 713600 xsym               CLIMB ! SC_DCGBRL
         1 003232   000000 600000 xsid               climb   nvectors=         0

     1961    11225    3             END;

     1962    11226    2           IF BAP$->KQ$BAP.FLNK$ ~= ADDR(NIL) THEN

  11226  1 003233   200012 470700                    LDP0  ! BAP$,,AUTO
         1 003234   000004 236300                    LDQ   ! 4,,PR0
         1 003235   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 003236   003242 600200 1                  TZE   ! s:11228

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:261  
     1963    11227    2            BAP$->KQ$BAP.FLNK$->KQ$BAP.BLNK$=BAP$->KQ$BAP.BLNK$;

  11227  1 003237   000004 471700                    LDP1  ! 4,,PR0
         1 003240   000005 236300                    LDQ   ! 5,,PR0
         1 003241   100005 756300                    STQ   ! 5,,PR1

     1964    11228    2           BAP$->KQ$BAP.CG$=ADDR(NIL);

  11228  1 003242   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         1 003243   000013 756300                    STQ   ! 11,,PR0

     1965    11229    2           PAGE$=BAP$;

  11229  1 003244   200012 236300                    LDQ   ! BAP$,,AUTO
         1 003245   200010 756300                    STQ   ! PAGE$,,AUTO

     1966    11230    2           KQ$CG.MMD.CURBPG=KQ$CG.MMD.CURBPG-1;

  11230  1 003246   200003 471700                    LDP1  ! @KQ$CG,,AUTO
         1 003247   100010 220300                    LDX0  ! 8,,PR1
         1 003250   777777 621210                    EAX1  ! -1,X0
         1 003251   100010 741300                    STX1  ! 8,,PR1

     1967    11231    2           CALL RELPAGECGNL;

  11231  1 003252   003710 701200 1                  TSX1  ! RELPAGECGNL
         1 003253   000000 011200                    NOP   ! 0

     1968    11232    2           RETURN;

  11232  1 003254   000000 702200 xent               TSX2  ! X66_ARET

     1969    11233    2   REL101: CALL SC_DCGBRL;

  11233  1 003255   000000 713600 xsym  REL101       CLIMB ! SC_DCGBRL
         1 003256   000000 600000 xsid               climb   nvectors=         0

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:262  
     1970    11234        /*S* SCREECH_CODE: KQM-S$DCGBRL
     1971    11235             TYPE:         SCREECH
     1972    11236             MESSAGE:      Double comgroup block release
     1973    11237             REMARKS:      A block of comgroup memory is or has been doubly
     1974    11238                           released.  This SCREECH occurs when a block allocation
     1975    11239                           page freecount exceeds the max possible, or when
     1976    11240                           comgroup debugging is turned on (KQ_DEBUG) and a
     1977    11241                           block is being released when the free chain in its
     1978    11242                           page says it is already free. */
     1979    11243    2           GOTO RELX;

  11243  1 003257   003104 710200 1                  TRA   ! GETOUT

     1980    11244    2           END; /*INHIBIT*/

  11244  1 003260   004150 710000 1                  TRA     s:11512

     1981    11245        /**/
     1982    11246        /*D* NAME:         TRYGET
     1983    11247             PURPOSE:      To try to get memory for a request
     1984    11248             DESCRIPTION:  If successful, returns with BLK$ = buffer.
     1985    11249                           Else ALTRETs
     1986    11250        */
     1987    11251    1   TRYGET: PROC (RTYP) ALTRET;

  11251  1 003261   200026 741300       TRYGET       STX1  ! STA$+2,,AUTO

     1988    11252        /**/
     1989    11253    2   DCL TEMP UBIN;
     1990    11254    2   DCL RTYP SBIN BYTE CALIGNED;
     1991    11255        /**/
     1992    11256    2         IF RTYP <= 0 THEN CALL SC_BCGMRQ;

  11256  1 003262   200027 470500                    LDP0    @RTYP,,AUTO
         1 003263   000100 100500                    MLR     fill='000'O
         1 003264   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 003265   200036 000004                    ADSC9   I+1,,AUTO                cn=0,n=4
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:263  
         1 003266   200036 236100                    LDQ     I+1,,AUTO
         1 003267   000033 732000                    QRS     27
         1 003270   000000 116003                    CMPQ    0,DU
         1 003271   003274 605400 1                  TPNZ    s:11257

  11256  1 003272   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 003273   000000 600000 xsid               climb   nvectors=         0

     1993    11257    3           DO CASE (RTYP);

  11257  1 003274   200027 470500                    LDP0    @RTYP,,AUTO
         1 003275   000100 100500                    MLR     fill='000'O
         1 003276   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         1 003277   200036 000004                    ADSC9   I+1,,AUTO                cn=0,n=4
         1 003300   200036 236100                    LDQ     I+1,,AUTO
         1 003301   000033 732000                    QRS     27
         1 003302   000006 116007                    CMPQ    6,DL
         1 003303   003305 602006 1                  TNC     s:11257+9,QL
         1 003304   003346 710000 1                  TRA     s:11271
         1 003305   003346 710000 1                  TRA     s:11271
         1 003306   003313 710000 1                  TRA     s:11259
         1 003307   003316 710000 1                  TRA     s:11261
         1 003310   003321 710000 1                  TRA     s:11263
         1 003311   003335 710000 1                  TRA     s:11268
         1 003312   003324 710000 1                  TRA     s:11265

     1994    11258    3             CASE (KQMR_MBLK#);

     1995    11259    3               GSIZE=SIZEW(KQ$MBLK);

  11259  1 003313   000020 235007                    LDA     16,DL
         1 003314   200017 755100                    STA     GSIZE,,AUTO
         1 003315   003350 710000 1                  TRA     s:11274

     1996    11260    3             CASE (KQMR_RBLK#);

     1997    11261    3               GSIZE=SIZEW(KQ$RBLK);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:264  

  11261  1 003316   000022 235007                    LDA     18,DL
         1 003317   200017 755100                    STA     GSIZE,,AUTO
         1 003320   003350 710000 1                  TRA     s:11274

     1998    11262    3             CASE (KQMR_RBLKT#);

     1999    11263    3               GSIZE=SIZEW(KQ$RBLKT);

  11263  1 003321   000016 235007                    LDA     14,DL
         1 003322   200017 755100                    STA     GSIZE,,AUTO
         1 003323   003350 710000 1                  TRA     s:11274

     2000    11264    3             CASE (KQMR_TYP#);

     2001    11265    3               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$MTYP);

  11265  1 003324   200003 471500                    LDP1    @KQ$CG,,AUTO
         1 003325   100106 235100                    LDA     70,,PR1
         1 003326   003332 600000 1                  TZE     s:11266

  11265  1 003327   000012 236007                    LDQ     10,DL
         1 003330   200017 756100                    STQ     GSIZE,,AUTO
         1 003331   003350 710000 1                  TRA     s:11274

     2002    11266    3               ELSE GSIZE=SIZEW(KQ$QTN);

  11266  1 003332   000066 236007                    LDQ     54,DL
         1 003333   200017 756100                    STQ     GSIZE,,AUTO
         1 003334   003350 710000 1                  TRA     s:11274

     2003    11267    3             CASE (KQMR_STA#);

     2004    11268    3               IF KQ$CG.QISS THEN GSIZE=SIZEW(KQ$QTN);

  11268  1 003335   200003 471500                    LDP1    @KQ$CG,,AUTO
         1 003336   100106 235100                    LDA     70,,PR1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:265  
         1 003337   003343 600000 1                  TZE     s:11269

  11268  1 003340   000066 236007                    LDQ     54,DL
         1 003341   200017 756100                    STQ     GSIZE,,AUTO
         1 003342   003350 710000 1                  TRA     s:11274

     2005    11269    3               ELSE GSIZE=SIZEW(KQ$STA);

  11269  1 003343   000044 236007                    LDQ     36,DL
         1 003344   200017 756100                    STQ     GSIZE,,AUTO
         1 003345   003350 710000 1                  TRA     s:11274

     2006    11270    3             CASE (ELSE);

     2007    11271    3               CALL SC_BCGMRQ;

  11271  1 003346   000000 713400 xsym               CLIMB   SC_BCGMRQ
         1 003347   000000 600000 xsid               climb   nvectors=         0

     2008    11272    3           END;

     2009    11273        /**/
     2010    11274    2         IF ENTFLAG > 0 THEN

  11274  1 003350   200022 235100                    LDA     ENTFLAG,,AUTO
         1 003351   003400 604400 1                  TMOZ    s:11290

     2011    11275    3           DO;

     2012    11276    3           ENTFLAG=-1;

  11276  1 003352   000001 336007                    LCQ     1,DL
         1 003353   200022 756100                    STQ     ENTFLAG,,AUTO

     2013    11277    3           IF GSIZE = BLK$->KQ$FB.SIZE THEN

  11277  1 003354   200013 470500                    LDP0    BLK$,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:266  
         1 003355   200017 236100                    LDQ     GSIZE,,AUTO
         1 003356   000002 116100                    CMPQ    2,,PR0
         1 003357   003366 601000 1                  TNZ     s:11282

     2014    11278    4             DO;

     2015    11279    4             BAP$->KQ$BAP.FREESIZE=BAP$->KQ$BAP.FREESIZE-GSIZE;

  11279  1 003360   200012 471500                    LDP1    BAP$,,AUTO
         1 003361   100006 236100                    LDQ     6,,PR1
         1 003362   200017 136100                    SBLQ    GSIZE,,AUTO
         1 003363   100006 756100                    STQ     6,,PR1

     2016    11280    4             RETURN;

  11280  1 003364   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 003365   000001 702211                    TSX2  ! 1,X1

     2017    11281    4             END;
     2018    11282    3           TEMP=GSIZE;

  11282  1 003366   200030 756100                    STQ     TEMP,,AUTO

     2019    11283    3           GSIZE=9999;

  11283  1 003367   023417 235007                    LDA     9999,DL
         1 003370   200017 755100                    STA     GSIZE,,AUTO

     2020    11284    3           CALL INSBLK ALTRET(SCR);

  11284  1 003371   002201 701000 1                  TSX1    INSBLK
         1 003372   003374 702000 1                  TSX2    SCR

     2021    11285    3           GOTO TRY;

  11285  1 003373   003376 710000 1                  TRA     TRY

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:267  
     2022    11286    3   SCR:    CALL SC_BCGMRQ;

  11286  1 003374   000000 713400 xsym  SCR          CLIMB   SC_BCGMRQ
         1 003375   000000 600000 xsid               climb   nvectors=         0

     2023    11287    3   TRY:    GSIZE=TEMP;

  11287  1 003376   200030 235100       TRY          LDA     TEMP,,AUTO
         1 003377   200017 755100                    STA     GSIZE,,AUTO

     2024    11288    3           END;

     2025    11289        /**/
     2026    11290    2         CALL DOCHAIN ALTRET(RTN);

  11290  1 003400   002106 701000 1                  TSX1    DOCHAIN
         1 003401   003404 702000 1                  TSX2    RTN

     2027    11291    2         ALTRETURN;

  11291  1 003402   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 003403   000000 702211                    TSX2  ! 0,X1

     2028    11292    2   RTN:  RETURN;

  11292  1 003404   200026 221300       RTN          LDX1  ! STA$+2,,AUTO
         1 003405   000001 702211                    TSX2  ! 1,X1

     2029    11293    2   END TRYGET;
     2030    11294        /**/
     2031    11295        /* Check the chain headed by P$ */
     2032    11296    1   CHAINCHK: PROC;

  11296  1 003406   200026 741300       CHAINCHK     STX1  ! STA$+2,,AUTO

     2033    11297        /**/
     2034    11298    3           DO WHILE (P$ ~= ADDR(NIL));
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:268  

  11298  1 003407   003456 710000 1                  TRA     s:11306

     2035    11299    3           IF P$ = BLK$ THEN CALL SC_DCGBRL;

  11299  1 003410   200015 236100                    LDQ     P$,,AUTO
         1 003411   200013 116100                    CMPQ    BLK$,,AUTO
         1 003412   003416 601000 1                  TNZ     s:11300

  11299  1 003413   000000 713400 xsym               CLIMB   SC_DCGBRL
         1 003414   000000 600000 xsid               climb   nvectors=         0
         1 003415   003453 710000 1                  TRA     s:11305

     2036    11300    3           ELSE IF POFFW (BLK$,P$) > 0 THEN

  11300  1 003416   200015 235100                    LDA     P$,,AUTO
         1 003417   000022 771000                    ARL     18
         1 003420   200036 755100                    STA     I+1,,AUTO
         1 003421   200013 236100                    LDQ     BLK$,,AUTO
         1 003422   000022 772000                    QRL     18
         1 003423   200036 136100                    SBLQ    I+1,,AUTO
         1 003424   003440 604400 1                  TMOZ    s:11304

     2037    11301    4              DO;

     2038    11302    4              IF POFFW (BLK$,P$) < P$->KQ$FB.SIZE THEN CALL SC_DCGBRL;

  11302  1 003425   200036 755100                    STA     I+1,,AUTO
         1 003426   200013 236100                    LDQ     BLK$,,AUTO
         1 003427   000022 772000                    QRL     18
         1 003430   200036 136100                    SBLQ    I+1,,AUTO
         1 003431   200015 470500                    LDP0    P$,,AUTO
         1 003432   003435 604000 1                  TMI     s:11302+8
         1 003433   000002 116100                    CMPQ    2,,PR0
         1 003434   003453 603000 1                  TRC     s:11305

  11302  1 003435   000000 713400 xsym               CLIMB   SC_DCGBRL
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:269  
         1 003436   000000 600000 xsid               climb   nvectors=         0

     2039    11303    4              END;

  11303  1 003437   003453 710000 1                  TRA     s:11305

     2040    11304    3            ELSE IF POFFW (BLK$,P$) > (-GSIZE) THEN CALL SC_DCGBRL;

  11304  1 003440   200036 755100                    STA     I+1,,AUTO
         1 003441   200013 236100                    LDQ     BLK$,,AUTO
         1 003442   000022 772000                    QRL     18
         1 003443   200036 136100                    SBLQ    I+1,,AUTO
         1 003444   200037 756100                    STQ     I+2,,AUTO
         1 003445   000000 236003                    LDQ     0,DU
         1 003446   200017 136100                    SBLQ    GSIZE,,AUTO
         1 003447   200037 116100                    CMPQ    I+2,,AUTO
         1 003450   003453 605000 1                  TPL     s:11305

  11304  1 003451   000000 713400 xsym               CLIMB   SC_DCGBRL
         1 003452   000000 600000 xsid               climb   nvectors=         0

     2041    11305    3           P$=P$->KQ$FB.FLNK$;

  11305  1 003453   200015 470500                    LDP0    P$,,AUTO
         1 003454   000000 236100                    LDQ     0,,PR0
         1 003455   200015 756100                    STQ     P$,,AUTO

     2042    11306    3           END;

  11306  1 003456   200015 236100                    LDQ     P$,,AUTO
         1 003457   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 003460   003410 601000 1                  TNZ     s:11299

     2043    11307    2         RETURN;

  11307  1 003461   200026 221300                    LDX1  ! STA$+2,,AUTO
         1 003462   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:270  

     2044    11308    2   END CHAINCHK;
     2045    11309        %EJECT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:271  
     2046    11310        /****************************************************************
     2047    11311        *****************************************************************/
     2048    11312        /*D* NAME:         GETPAGECG
     2049    11313             PURPOSE:      To get a page for the comgroup contexted by KQ$CG
     2050    11314             DESCRIPTION:  Returns PAGE$ pointing to the new page, or
     2051    11315                           ALTRETs if cannot allocate, with ERRFLG set as
     2052    11316                           for KQM$GETP, (or E$NOCGPG if this is the context
     2053    11317                           blk or address blk special CG).
     2054    11318
     2055    11319                           Doesn't unlock CG's MM gate.
     2056    11320        */
     2057    11321    1   GETPAGECG: PROC ALTRET;

  11321  1 003463   200030 741300       GETPAGECG    STX1  ! TEMP,,AUTO

     2058    11322        /**/
     2059    11323    2   DCL FORCE UBIN;
     2060    11324    2   DCL RECON REDEF FORCE UBIN;
     2061    11325    2   DCL FP$ PTR;
     2062    11326    2   DCL MMQERR UBIN;
     2063    11327        /**/
     2064    11328            %LOCK (G=KQ$CG.MMD.GATE);

  11329  1 003464   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 003465   000001 036003                    ADLQ    1,DU
         1 003466   200036 756100                    STQ     I+1,,AUTO
         1 003467   200036 630500                    EPPR0   I+1,,AUTO
         1 003470   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003471   000000 701000 xent               TSX1    HFC$LOCK
         1 003472   000000 011000                    NOP     0
         1 003473   003475 710000 1                  TRA     s:11334

     2065    11331        /**/
     2066    11332    2   GETPAGECGNL: ENTRY ALTRET;

  11332  1 003474   200030 741300       GETPAGECGNL  STX1  ! TEMP,,AUTO

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:272  
     2067    11333        /**/
     2068    11334    2         IF KQ$CG.MMD.FREE$ ~= ADDR(NIL) THEN

  11334  1 003475   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 003476   000005 236100                    LDQ     5,,PR0
         1 003477   000001 116000 xsym               CMPQ    B_VECTNIL+1
         1 003500   003510 600000 1                  TZE     s:11339+1

     2069    11335    3           DO;

     2070    11336    3           PAGE$=KQ$CG.MMD.FREE$;

  11336  1 003501   200010 756100                    STQ     PAGE$,,AUTO

     2071    11337    3           KQ$CG.MMD.FREE$=PAGE$->KQ$FP.LNK$;

  11337  1 003502   200010 471500                    LDP1    PAGE$,,AUTO
         1 003503   100004 236100                    LDQ     4,,PR1
         1 003504   000005 756100                    STQ     5,,PR0

     2072    11338    3           KQ$CG.MMD.FREECNT=KQ$CG.MMD.FREECNT-1;

  11338  1 003505   000001 336007                    LCQ     1,DL
         1 003506   000007 056100                    ASQ     7,,PR0

     2073    11339    3           GOTO GET0;

  11339  1 003507   003637 710000 1                  TRA     GET0
         1 003510   003512 710000 1                  TRA     s:11344

     2074    11340    3           END;
     2075    11341        /**/
     2076    11342    2   GETPAGECGM: ENTRY ALTRET; /* DON'T GET FROM FREE CHAIN */

  11342  1 003511   200030 741300       GETPAGECGM   STX1  ! TEMP,,AUTO

     2077    11343        /**/
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:273  
     2078    11344    2         RECON=0;

  11344  1 003512   200031 450100                    STZ     FORCE,,AUTO

     2079    11345    2         IF KQ$CG.MMD.CURPG >= KQ$CG.AUCTL.MAXPG THEN

  11345  1 003513   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 003514   000133 236100                    LDQ     91,,PR0
         1 003515   000022 772000                    QRL     18
         1 003516   000006 116100                    CMPQ    6,,PR0
         1 003517   003524 605400 1                  TPNZ    s:11357

     2080    11346    3           DO;

     2081    11347    3           ERRFLG=%E$CGMPLC;

  11347  1 003520   002206 235007                    LDA     1158,DL
         1 003521   200005 471500                    LDP1    @ERRFLG,,AUTO
         1 003522   100000 755100                    STA     0,,PR1

     2082    11348        /*E* ERROR:   KQM-E$CGMPLC-E
     2083    11349             MESSAGE: Your comgroup is at its MAXPG limit
     2084    11350             MESSAGE1: No more physical memory can be allocated to your
     2085    11351                       comgroup since it already has the AU-established
     2086    11352                       maximum number of pages. */
     2087    11353    3           GOTO ALTRT;

  11353  1 003523   003662 710000 1                  TRA     ALTRT

     2088    11354    3           END;
     2089    11355        /**/
     2090    11356        /**/
     2091    11357    2         IF ADDR(KQ$CG) = KQ$MMSD.CCXT$ THEN

  11357  1 003524   000000 471400 xsym               LDP1    KQ_MMSD$
         1 003525   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 003526   100002 116100                    CMPQ    2,,PR1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:274  
         1 003527   003543 601000 1                  TNZ     s:11359

     2092    11358    2          CALL MMQ$GCCP (PAGE$,,ERRFLG) ALTRET(ALTRT);

  11358  1 003530   200005 236100                    LDQ     @ERRFLG,,AUTO
         1 003531   200040 756100                    STQ     I+3,,AUTO
         1 003532   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 003533   200037 756100                    STQ     I+2,,AUTO
         1 003534   200010 633500                    EPPR3   PAGE$,,AUTO
         1 003535   200036 453500                    STP3    I+1,,AUTO
         1 003536   200036 630500                    EPPR0   I+1,,AUTO
         1 003537   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 003540   000000 701000 xent               TSX1    MMQ$GCCP
         1 003541   003662 702000 1                  TSX2    ALTRT
         1 003542   003633 710000 1                  TRA     s:11388

     2093    11359    2         ELSE IF ADDR(KQ$CG) = KQ$MMSD.DCXT$ THEN

  11359  1 003543   100003 116100                    CMPQ    3,,PR1
         1 003544   003560 601000 1                  TNZ     GETCOM

     2094    11360    3            DO;

     2095    11361    3            CALL MMQ$GCAP (PAGE$,,ERRFLG) ALTRET(ALTRT);

  11361  1 003545   200005 236100                    LDQ     @ERRFLG,,AUTO
         1 003546   200040 756100                    STQ     I+3,,AUTO
         1 003547   000001 236000 xsym               LDQ     B_VECTNIL+1
         1 003550   200037 756100                    STQ     I+2,,AUTO
         1 003551   200010 633500                    EPPR3   PAGE$,,AUTO
         1 003552   200036 453500                    STP3    I+1,,AUTO
         1 003553   200036 630500                    EPPR0   I+1,,AUTO
         1 003554   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 003555   000000 701000 xent               TSX1    MMQ$GCAP
         1 003556   003662 702000 1                  TSX2    ALTRT

     2096    11362    3            END;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:275  

  11362  1 003557   003633 710000 1                  TRA     s:11388

     2097    11363    2          ELSE
     2098    11364    3            DO;

  11361  1 003560                       GETCOM       null
     2099    11365    3   GETCOM:  ;
     2100    11366                 %LOCK (G=KQ_CGLGATE);

  11367  1 003560   000017 630400 2                  EPPR0   15
         1 003561   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003562   000000 701000 xent               TSX1    HFC$LOCK
         1 003563   000000 011000                    NOP     0

     2101    11369    3            IF KQ$CG.ACB$->KQ$ACB.CURPG >= KQ$CG.ACB$->KQ$ACB.CURPGLIM THEN

  11369  1 003564   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 003565   000221 471500                    LDP1    145,,PR0
         1 003566   100002 236100                    LDQ     2,,PR1
         1 003567   100003 116100                    CMPQ    3,,PR1
         1 003570   003575 604000 1                  TMI     s:11380

     2102    11370    4              DO;

     2103    11371    4              ERRFLG=%E$CGCPLA;

  11371  1 003571   002207 235007                    LDA     1159,DL
         1 003572   200005 473500                    LDP3    @ERRFLG,,AUTO
         1 003573   300000 755100                    STA     0,,PR3

     2104    11372        /*E* ERROR:   KQM-E$CGCPLA-E
     2105    11373             MESSAGE: Your account's comgroup CURPG limit has been reached
     2106    11374             MESSAGE1: No more physical memory can be allocated to your
     2107    11375                       comgroup since the account in which it lies has
     2108    11376                       reached the account limit for currently in-use physical
     2109    11377                       pages.  */
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:276  
     2110    11378    4              GOTO NOPG;

  11378  1 003574   003656 710000 1                  TRA     NOPG

     2111    11379    4              END;
     2112    11380    3            IF RECON = 0 THEN

  11380  1 003575   200031 235100                    LDA     FORCE,,AUTO
         1 003576   003612 601000 1                  TNZ     s:11382

     2113    11381    3             CALL MMQ$GCDP (PAGE$,KQ$CG.MMD.DSB$->KQ$DSB,ERRFLG) ALTRET(NOPG);

  11381  1 003577   000000 473500                    LDP3    0,,PR0
         1 003600   200005 236100                    LDQ     @ERRFLG,,AUTO
         1 003601   200040 756100                    STQ     I+3,,AUTO
         1 003602   200037 453500                    STP3    I+2,,AUTO
         1 003603   200010 634500                    EPPR4   PAGE$,,AUTO
         1 003604   200036 454500                    STP4    I+1,,AUTO
         1 003605   200036 630500                    EPPR0   I+1,,AUTO
         1 003606   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 003607   000000 701000 xent               TSX1    MMQ$GCDP
         1 003610   003656 702000 1                  TSX2    NOPG
         1 003611   003624 710000 1                  TRA     s:11383

     2114    11382    3            ELSE CALL MMQ$RECON (PAGE$,KQ$CG.MMD.DSB$->KQ$DSB,ERRFLG) ALTRET(NOPG);

  11382  1 003612   000000 473500                    LDP3    0,,PR0
         1 003613   200005 236100                    LDQ     @ERRFLG,,AUTO
         1 003614   200040 756100                    STQ     I+3,,AUTO
         1 003615   200037 453500                    STP3    I+2,,AUTO
         1 003616   200010 634500                    EPPR4   PAGE$,,AUTO
         1 003617   200036 454500                    STP4    I+1,,AUTO
         1 003620   200036 630500                    EPPR0   I+1,,AUTO
         1 003621   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 003622   000000 701000 xent               TSX1    MMQ$RECON
         1 003623   003656 702000 1                  TSX2    NOPG

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:277  
     2115    11383    3            KQ$CG.ACB$->KQ$ACB.CURPG=KQ$CG.ACB$->KQ$ACB.CURPG+1;

  11383  1 003624   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 003625   000221 471500                    LDP1    145,,PR0
         1 003626   100002 054100                    AOS     2,,PR1

     2116    11384                 %UNLOCK (G=KQ_CGLGATE);

  11385  1 003627   000017 630400 2                  EPPR0   15
         1 003630   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003631   000000 701000 xent               TSX1    HFC$UNLOCK
         1 003632   000000 011000                    NOP     0

     2117    11387    3            END;

     2118    11388    2         KQ$CG.MMD.CURPG=KQ$CG.MMD.CURPG+1;

  11388  1 003633   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 003634   000006 054100                    AOS     6,,PR0

     2119    11389    2         CALL DOPGSI;

  11389  1 003635   004107 701000 1                  TSX1    DOPGSI
         1 003636   000000 011000                    NOP     0

  11388  1 003637                       GET0         null
     2120    11390    2   GET0: ;
     2121    11391    2         PAGE$->B$$PAGE='0'B;

  11391  1 003637   200010 470500                    LDP0    PAGE$,,AUTO
         1 003640   010000 220003                    LDX0    4096,DU
         1 003641   000140 100400                    MLR     fill='000'O
         1 003642   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         1 003643   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

     2122    11392    2         PAGE$->KQ$GRAN=KQ$CG.GRAN;

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:278  
  11392  1 003644   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 003645   200010 471500                    LDP1    PAGE$,,AUTO
         1 003646   000100 100500                    MLR     fill='000'O
         1 003647   000253 000020                    ADSC9   171,,PR0                 cn=0,n=16
         1 003650   100000 000020                    ADSC9   0,,PR1                   cn=0,n=16

     2123    11393    2         PAGE$->KQ$GRAN.SELF$=PAGE$;

  11393  1 003651   200010 236100                    LDQ     PAGE$,,AUTO
         1 003652   200010 471500                    LDP1    PAGE$,,AUTO
         1 003653   100002 756100                    STQ     2,,PR1

     2124    11394    2         RETURN;

  11394  1 003654   200030 221300                    LDX1  ! TEMP,,AUTO
         1 003655   000001 702211                    TSX2  ! 1,X1

  11393  1 003656                       NOPG         null
     2125    11395    2   NOPG: ;
     2126    11396              %UNLOCK (G=KQ_CGLGATE);

  11397  1 003656   000017 630400 2                  EPPR0   15
         1 003657   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003660   000000 701000 xent               TSX1    HFC$UNLOCK
         1 003661   000000 011000                    NOP     0

  11393  1 003662                       ALTRT        null
     2127    11399    2   ALTRT:;
     2128    11400    2         ALTRETURN;

  11400  1 003662   200030 221300                    LDX1  ! TEMP,,AUTO
         1 003663   000000 702211                    TSX2  ! 0,X1

     2129    11401        /**/
     2130    11402    2   GETPAGERECON: ENTRY ALTRET;

  11402  1 003664   200030 741300       GETPAGERECON STX1  ! TEMP,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:279  

     2131    11403        /**/
     2132    11404    2         RECON=1;

  11404  1 003665   000001 235007                    LDA     1,DL
         1 003666   200031 755100                    STA     FORCE,,AUTO

     2133    11405              %LOCK (G=KQ$CG.MMD.GATE);

  11406  1 003667   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 003670   000001 036003                    ADLQ    1,DU
         1 003671   200036 756100                    STQ     I+1,,AUTO
         1 003672   200036 630500                    EPPR0   I+1,,AUTO
         1 003673   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 003674   000000 701000 xent               TSX1    HFC$LOCK
         1 003675   000000 011000                    NOP     0

     2134    11408    2         GOTO GETCOM;

  11408  1 003676   003560 710000 1                  TRA     GETCOM

     2135    11409        /****************************************************************
     2136    11410        *****************************************************************/
     2137    11411        /*D* NAME:         RELPAGECG
     2138    11412             PURPOSE:      To release a page for the CG contexted by KQ$CG
     2139    11413             DESCRIPTION:  PAGE$ points to the page to release. */
     2140    11414    2   RELPAGECG: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

  11414  1 003677   200030 741300       RELPAGECG    STX1  ! TEMP,,AUTO

     2141    11415        /**/
     2142    11416    3           DO INHIBIT;

     2143    11417                %LOCK (G=KQ$CG.MMD.GATE);

  11418  1 003700   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 003701   000001 036203                    ADLQ  ! 1,DU
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:280  
         1 003702   200036 756300                    STQ   ! I+1,,AUTO
         1 003703   200036 630700                    EPPR0 ! I+1,,AUTO
         1 003704   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 003705   000000 701200 xent               TSX1  ! HFC$LOCK
         1 003706   000000 011200                    NOP   ! 0

     2144    11420    3           END; /* INHIBIT */

  11420  1 003707   003711 710000 1                  TRA     s:11425

     2145    11421        /**/
     2146    11422    2   RELPAGECGNL: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

  11422  1 003710   200030 741300       RELPAGECGNL  STX1  ! TEMP,,AUTO

     2147    11423        /**/
     2148    11424    3           DO INHIBIT;

     2149    11425    3           FORCE=0;

  11425  1 003711   200031 450300                    STZ   ! FORCE,,AUTO

     2150    11426    3           GOTO COM;

  11426  1 003712   003726 710200 1                  TRA   ! COM

     2151    11427    3           END;

  11427  1 003713   003715 710000 1                  TRA     s:11432

     2152    11428        /**/
     2153    11429    2   RELPAGECGF: ENTRY ALTRET; /* !!Doesn't ALTRET!! */

  11429  1 003714   200030 741300       RELPAGECGF   STX1  ! TEMP,,AUTO

     2154    11430        /**/
     2155    11431    3           DO INHIBIT;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:281  

     2156    11432    3           FORCE=1;

  11432  1 003715   000001 235207                    LDA   ! 1,DL
         1 003716   200031 755300                    STA   ! FORCE,,AUTO

     2157    11433                %LOCK (G=KQ$CG.MMD.GATE);

  11434  1 003717   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 003720   000001 036203                    ADLQ  ! 1,DU
         1 003721   200036 756300                    STQ   ! I+1,,AUTO
         1 003722   200036 630700                    EPPR0 ! I+1,,AUTO
         1 003723   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 003724   000000 701200 xent               TSX1  ! HFC$LOCK
         1 003725   000000 011200                    NOP   ! 0

  11432  1 003726                       COM          null
     2158    11436    3   COM:    ;
     2159    11437    3           IF PAGE$->KQ$GRAN.SELF$ ~= PAGE$ THEN CALL SC_BCGPRL;

  11437  1 003726   200010 470700                    LDP0  ! PAGE$,,AUTO
         1 003727   000002 236300                    LDQ   ! 2,,PR0
         1 003730   200010 116300                    CMPQ  ! PAGE$,,AUTO
         1 003731   003734 600200 1                  TZE   ! s:11438

  11437  1 003732   000000 713600 xsym               CLIMB ! SC_BCGPRL
         1 003733   000000 600000 xsid               climb   nvectors=         0

     2160    11438    3           IF KQ$CG.MMD.CURPG < 1 THEN

  11438  1 003734   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 003735   000006 235300                    LDA   ! 6,,PR0
         1 003736   003741 605600 1                  TPNZ  ! s:11448

     2161    11439    4             DO;

     2162    11440    4             CALL SC_BCGPRL;
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:282  

  11440  1 003737   000000 713600 xsym               CLIMB ! SC_BCGPRL
         1 003740   000000 600000 xsid               climb   nvectors=         0

     2163    11441        /*S* SCREECH_CODE: KQM-S$BCGPRL
     2164    11442             TYPE:         SCREECH
     2165    11443             MESSAGE:      Bad release of comgroup page
     2166    11444             REMARKS:      A comgroup has released a page twice, or
     2167    11445                           SELF$ in the header of a page to release does
     2168    11446                           not match the page. */
     2169    11447    4             END;

     2170    11448    3           IF  KQ$CG.MMD.CURPG <= KQ$CG.AUCTL.MINPG

  11448  1 003741   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 003742   000131 236300                    LDQ   ! 89,,PR0
         1 003743   000022 772200                    QRL   ! 18
         1 003744   000006 116300                    CMPQ  ! 6,,PR0
         1 003745   004004 604200 1                  TMI   ! s:11466
         1 003746   200031 235300                    LDA   ! FORCE,,AUTO
         1 003747   004004 601200 1                  TNZ   ! s:11466

     2171    11449    3           AND FORCE = 0 THEN
     2172    11450    4             DO;

     2173    11451    4             IF KQ_DEBUG ~= 0 THEN

  11451  1 003750   000000 235200 xsym               LDA   ! KQ_DEBUG
         1 003751   003767 600200 1                  TZE   ! s:11459

     2174    11452    5               DO;

     2175    11453    5               FP$=KQ$CG.MMD.FREE$;

  11453  1 003752   000005 236300                    LDQ   ! 5,,PR0
         1 003753   200032 756300                    STQ   ! FP$,,AUTO

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:283  
     2176    11454    6                 DO WHILE (FP$ ~= ADDR(NIL));

  11454  1 003754   003765 710200 1                  TRA   ! s:11457

     2177    11455    6                 IF FP$ = PAGE$ THEN CALL SC_BCGPRL;

  11455  1 003755   200032 236300                    LDQ   ! FP$,,AUTO
         1 003756   200010 116300                    CMPQ  ! PAGE$,,AUTO
         1 003757   003762 601200 1                  TNZ   ! s:11456

  11455  1 003760   000000 713600 xsym               CLIMB ! SC_BCGPRL
         1 003761   000000 600000 xsid               climb   nvectors=         0

     2178    11456    6                 FP$=FP$->KQ$FP.LNK$;

  11456  1 003762   200032 470700                    LDP0  ! FP$,,AUTO
         1 003763   000004 236300                    LDQ   ! 4,,PR0
         1 003764   200032 756300                    STQ   ! FP$,,AUTO

     2179    11457    6                 END;

  11457  1 003765   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 003766   003755 601200 1                  TNZ   ! s:11455

     2180    11458    5               END;

     2181    11459    4             PAGE$->KQ$GRAN.PTYP=%KQ_PTYP_SPARE;

  11459  1 003767   200010 470700                    LDP0  ! PAGE$,,AUTO
         1 003770   000001 236300                    LDQ   ! 1,,PR0
         1 003771   000011 376200 2                  ANQ   ! 9
         1 003772   000005 276203                    ORQ   ! 5,DU
         1 003773   000001 756300                    STQ   ! 1,,PR0

     2182    11460    4             PAGE$->KQ$FP.LNK$=KQ$CG.MMD.FREE$;

  11460  1 003774   200003 470700                    LDP0  ! @KQ$CG,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:284  
         1 003775   000005 236300                    LDQ   ! 5,,PR0
         1 003776   200010 471700                    LDP1  ! PAGE$,,AUTO
         1 003777   100004 756300                    STQ   ! 4,,PR1

     2183    11461    4             KQ$CG.MMD.FREE$=PAGE$;

  11461  1 004000   200010 236300                    LDQ   ! PAGE$,,AUTO
         1 004001   000005 756300                    STQ   ! 5,,PR0

     2184    11462    4             KQ$CG.MMD.FREECNT=KQ$CG.MMD.FREECNT+1;

  11462  1 004002   000007 054300                    AOS   ! 7,,PR0

     2185    11463    4             END;

  11463  1 004003   004073 710200 1                  TRA   ! s:11487

     2186    11464    3           ELSE
     2187    11465    4             DO;

     2188    11466    4             KQ$CG.MMD.CURPG=KQ$CG.MMD.CURPG-1;

  11466  1 004004   000001 336207                    LCQ   ! 1,DL
         1 004005   000006 056300                    ASQ   ! 6,,PR0

     2189    11467    4             IF ADDR(KQ$CG) = KQ$MMSD.CCXT$ THEN

  11467  1 004006   000000 471600 xsym               LDP1  ! KQ_MMSD$
         1 004007   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 004010   100002 116300                    CMPQ  ! 2,,PR1
         1 004011   004025 601200 1                  TNZ   ! s:11469

     2190    11468    4              CALL MMQ$FCCP (PAGE$,,MMQERR) ALTRET(SCMMQ);

  11468  1 004012   200033 633700                    EPPR3 ! MMQERR,,AUTO
         1 004013   200040 453700                    STP3  ! I+3,,AUTO
         1 004014   000001 236200 xsym               LDQ   ! B_VECTNIL+1
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:285  
         1 004015   200037 756300                    STQ   ! I+2,,AUTO
         1 004016   200010 634700                    EPPR4 ! PAGE$,,AUTO
         1 004017   200036 454700                    STP4  ! I+1,,AUTO
         1 004020   200036 630700                    EPPR0 ! I+1,,AUTO
         1 004021   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 004022   000000 701200 xent               TSX1  ! MMQ$FCCP
         1 004023   004104 702200 1                  TSX2  ! SCMMQ
         1 004024   004073 710200 1                  TRA   ! s:11487

     2191    11469    4             ELSE IF ADDR(KQ$CG) = KQ$MMSD.DCXT$ THEN

  11469  1 004025   100003 116300                    CMPQ  ! 3,,PR1
         1 004026   004042 601200 1                  TNZ   ! s:11476

     2192    11470    5                DO;

     2193    11471    5                CALL MMQ$FCAP (PAGE$,,MMQERR) ALTRET(SCMMQ);

  11471  1 004027   200033 633700                    EPPR3 ! MMQERR,,AUTO
         1 004030   200040 453700                    STP3  ! I+3,,AUTO
         1 004031   000001 236200 xsym               LDQ   ! B_VECTNIL+1
         1 004032   200037 756300                    STQ   ! I+2,,AUTO
         1 004033   200010 634700                    EPPR4 ! PAGE$,,AUTO
         1 004034   200036 454700                    STP4  ! I+1,,AUTO
         1 004035   200036 630700                    EPPR0 ! I+1,,AUTO
         1 004036   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 004037   000000 701200 xent               TSX1  ! MMQ$FCAP
         1 004040   004104 702200 1                  TSX2  ! SCMMQ

     2194    11472    5                END;

  11472  1 004041   004073 710200 1                  TRA   ! s:11487

     2195    11473    4              ELSE
     2196    11474    5                DO;

     2197    11475                     %LOCK (G=KQ_CGLGATE);
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:286  

  11476  1 004042   000017 630600 2                  EPPR0 ! 15
         1 004043   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 004044   000000 701200 xent               TSX1  ! HFC$LOCK
         1 004045   000000 011200                    NOP   ! 0

     2198    11478    5                KQ$CG.ACB$->KQ$ACB.CURPG=KQ$CG.ACB$->KQ$ACB.CURPG-1;

  11478  1 004046   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 004047   000221 471700                    LDP1  ! 145,,PR0
         1 004050   000001 336207                    LCQ   ! 1,DL
         1 004051   100002 056300                    ASQ   ! 2,,PR1

     2199    11479                     %UNLOCK (G=KQ_CGLGATE);

  11480  1 004052   000017 630600 2                  EPPR0 ! 15
         1 004053   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 004054   000000 701200 xent               TSX1  ! HFC$UNLOCK
         1 004055   000000 011200                    NOP   ! 0

     2200    11482    5                CALL MMQ$FCDP (PAGE$,KQ$CG.MMD.DSB$->KQ$DSB,MMQERR) ALTRET(SCMMQ);

  11482  1 004056   200003 470700                    LDP0  ! @KQ$CG,,AUTO
         1 004057   000000 471700                    LDP1  ! 0,,PR0
         1 004060   200033 633700                    EPPR3 ! MMQERR,,AUTO
         1 004061   200040 453700                    STP3  ! I+3,,AUTO
         1 004062   200037 451700                    STP1  ! I+2,,AUTO
         1 004063   200010 634700                    EPPR4 ! PAGE$,,AUTO
         1 004064   200036 454700                    STP4  ! I+1,,AUTO
         1 004065   200036 630700                    EPPR0 ! I+1,,AUTO
         1 004066   000021 631600 xsym               EPPR1 ! B_VECTNIL+17
         1 004067   000000 701200 xent               TSX1  ! MMQ$FCDP
         1 004070   004104 702200 1                  TSX2  ! SCMMQ

     2201    11483    5                CALL DOPGSI;

  11483  1 004071   004107 701200 1                  TSX1  ! DOPGSI
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:287  
         1 004072   000000 011200                    NOP   ! 0

     2202    11484    5                END;

     2203    11485    4             END;

     2204    11486                %UNLOCK (G=KQ$CG.MMD.GATE);

  11487  1 004073   200003 236300                    LDQ   ! @KQ$CG,,AUTO
         1 004074   000001 036203                    ADLQ  ! 1,DU
         1 004075   200036 756300                    STQ   ! I+1,,AUTO
         1 004076   200036 630700                    EPPR0 ! I+1,,AUTO
         1 004077   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 004100   000000 701200 xent               TSX1  ! HFC$UNLOCK
         1 004101   000000 011200                    NOP   ! 0

     2205    11489    3           RETURN;

  11489  1 004102   200030 221300                    LDX1  ! TEMP,,AUTO
         1 004103   000001 702211                    TSX2  ! 1,X1

     2206    11490    3           END; /*INHIBIT*/

  11482  1 004104                       SCMMQ        null
     2207    11491    2   SCMMQ:;
     2208    11492    2         CALL SC_BCGMMQ;

  11492  1 004104   000000 713400 xsym               CLIMB   SC_BCGMMQ
         1 004105   000000 600000 xsid               climb   nvectors=         0
         1 004106   004146 710000 1                  TRA     s:11511

     2209    11493        /*S* SCREECH_CODE: KQM-S$BCGMMQ
     2210    11494             TYPE:         SCREECH
     2211    11495             MESSAGE:      MMQ error in KQM$MM
     2212    11496             REMARKS:      MMQ$CGQ has returned an error to KQM$MM indicating
     2213    11497                           that the latter has done something wrong.  MMQERR
     2214    11498                           contains the error code generated by MMQ$CGQ,
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:288  
     2215    11499                           which explains the exact nature of the error. */
     2216    11500        /**/
     2217    11501        /**/
     2218    11502    2   DOPGSI: PROC;  /* Update page ticks */

  11502  1 004107   200034 741300       DOPGSI       STX1  ! MMQERR+1,,AUTO

     2219    11503        /**/
     2220    11504    3   DCL I UBIN;
     2221    11505        /**/
     2222    11506    3         I=KQ$CG.PGTIME;

  11506  1 004110   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 004111   000115 235100                    LDA     77,,PR0
         1 004112   200035 755100                    STA     I,,AUTO

     2223    11507    3         CALL SSS$SYSTIME (KQ$CG.PGTIME);

  11507  1 004113   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 004114   000115 036003                    ADLQ    77,DU
         1 004115   200036 756100                    STQ     I+1,,AUTO
         1 004116   200036 630500                    EPPR0   I+1,,AUTO
         1 004117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 004120   000000 701000 xent               TSX1    SSS$SYSTIME
         1 004121   000000 011000                    NOP     0

     2224    11508    3         CALL FGH$UPDBUCKET (KQ$CG.STATS.PGSI,0,KQ$CG.PGTIME-I,KQ$CG.MMD.CURPG);

  11508  1 004122   200003 470500                    LDP0    @KQ$CG,,AUTO
         1 004123   000115 236100                    LDQ     77,,PR0
         1 004124   200035 136100                    SBLQ    I,,AUTO
         1 004125   200036 756100                    STQ     I+1,,AUTO
         1 004126   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 004127   000006 036003                    ADLQ    6,DU
         1 004130   200043 756100                    STQ     I+6,,AUTO
         1 004131   200036 631500                    EPPR1   I+1,,AUTO
         1 004132   200042 451500                    STP1    I+5,,AUTO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:289  
         1 004133   000005 236000 2                  LDQ     5
         1 004134   200041 756100                    STQ     I+4,,AUTO
         1 004135   200003 236100                    LDQ     @KQ$CG,,AUTO
         1 004136   000177 036003                    ADLQ    127,DU
         1 004137   200040 756100                    STQ     I+3,,AUTO
         1 004140   200040 630500                    EPPR0   I+3,,AUTO
         1 004141   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 004142   000000 701000 xent               TSX1    FGH$UPDBUCKET
         1 004143   000000 011000                    NOP     0

     2225    11509    3         RETURN;

  11509  1 004144   200034 221300                    LDX1  ! MMQERR+1,,AUTO
         1 004145   000001 702211                    TSX2  ! 1,X1

     2226    11510    3   END DOPGSI;
     2227    11511    2   END GETPAGECG;

  11511  1 004146   200030 221300                    LDX1  ! TEMP,,AUTO
         1 004147   000001 702211                    TSX2  ! 1,X1

     2228    11512    1   END KQM$GETP;

  11512  1 004150   000000 702200 xent               TSX2  ! X66_ARET

STA_INIT
 Sect OctLoc
   0     000   000000 000000   000000 006014   000000 006014   000000 006014    ................
   0     004   000000 006014   040040 040040   040040 040040   000000 006014    ....        ....
   0     010   000000 006014   000000 006014   000000 006014   000000 000000    ................
   0     014   000000 006014   000000 000000   400000 000000   000000 000000    ................
   0     020   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     024   000000 006014   000000 006014   000000 000000   000000 000000    ................
   0     030   000000 000000   000000 006014   000000 000000   000000 000000    ................
   0     034   000000 006014   000000 006014   000000 006014   000004 000000    ................
   0     040   000000 000000   000000 000000   000000 006014   000000 000000    ................

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:290  
QTN_INIT
 Sect OctLoc
   0     044   000000 000000   000000 006014   000000 006014   000000 006014    ................
   0     050   000000 006014   040040 040040   040040 040040   000000 006014    ....        ....
   0     054   000000 006014   000000 006014   000000 006014   000000 000000    ................
   0     060   000000 006014   000000 000000   400000 000000   000000 000000    ................
   0     064   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     070   000000 006014   000000 006014   000000 000000   000000 000000    ................
   0     074   000000 000000   000000 006014   000000 000000   000000 000000    ................
   0     100   000000 006014   000000 006014   000000 006014   000004 000000    ................
   0     104   000000 000000   000000 000000   000000 006014   000000 000000    ................
   0     110   000000 000000   000003 641066   000000 006014   000000 006014    .......6........
   0     114   400000 000000   000000 000000   000000 000000   000000 000000    ................
   0     120   000000 006014   000000 006014   000000 006014   000000 006014    ................
   0     124   000104 000000   000000 000000   000000 000000   000000 006014    .D..............
   0     130   000000 000000                                                    ....

E_CGCGMP
 Sect OctLoc
   0     132   132115 021574                                                    ZM..

E_CGCGDB
 Sect OctLoc
   0     133   132115 022034                                                    ZM..

(unnamed)
 Sect OctLoc
   2     000   000012 006000   577777 777777   000000 000034   000002 006000    ................
   2     004   000000 000026   000002 006000   000004 006000   000000 000033    ................
   2     010   000007 006000   777770 777777   000000 000027   000012 006000    ................
   2     014   776000 007777   000010 200000   000020 200000   000000 006000    ................

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:291  
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   UD_SEV_C.:E05TOU  is referenced.
   KC_CP6.:E05TOU  is referenced.
   KQ_ERRORS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   KQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   KC$CP6V_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  is referenced.
   KQM_MAC_C.:E05TOU  is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   KQ_MAC_C.:E05TOU  is referenced.
   KQ_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KQM$GETP.
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:292  

 **** Variables and constants ****

  ****  Section 000 RoData KQM$GETP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   133-0-0/w STRC        r     1 E_CGCGDB                 132-0-0/w STRC        r     1 E_CGCGMP
    44-0-0/d STRC(1908)  r     1 QTN_INIT                   0-0-0/d STRC(1296)  r     1 STA_INIT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @ERRFLG                    3-0-0/w PTR         r     1 @KQ$CG
     4-0-0/w PTR         r     1 @MEM$                     30-0-0/w PTR         r     1 @MEM$
    27-0-0/w PTR         r     1 @P$                       27-0-0/w PTR         r     1 @RTYP
    12-0-0/w PTR         r     1 BAP$                      12-0-0/w STRC        r     1 BAP$R
    13-0-0/w PTR         r     1 BLK$                      16-0-0/w PTR         r     1 CHAIN$
    22-0-0/w SBIN        r     1 ENTFLAG                   *0-0-0/w UBIN        r     1 ERRFLG
    31-0-0/w UBIN        r     1 FORCE                     32-0-0/w PTR         r     1 FP$
    17-0-0/w UBIN        r     1 GSIZE                     11-0-0/w UBIN        r     1 I
    32-0-0/w UBIN        r     1 I                         35-0-0/w UBIN        r     1 I
     7-0-0/w UBIN        r     1 J                         *0-0-0/d STRC(6516)  r     1 KQ$CG
    23-0-0/w PTR         r     1 MBLK$                     *0-0-0/w PTR         r     1 MEM$
    *0-0-0/w PTR         r     1 MEM$                      33-0-0/w UBIN        r     1 MMQERR
    20-0-0/w UBIN        r     1 MPRIO                     14-0-0/w SBIN        r     1 OFFSET
    14-0-0/w UBIN        r     1 OFFSETR                   15-0-0/w PTR         r     1 P$
    *0-0-0/w PTR         r     1 P$                        33-0-0/w PTR         r     1 P$
    10-0-0/w PTR         r     1 PAGE$                     27-0-0/w SBIN        r     1 PERM
    31-0-0/w UBIN        r     1 RECON                     21-0-0/w UBIN        r     1 REQTYP
    *0-0-0/c SBIN(9)     r     1 RTYP                      24-0-0/w PTR         r     1 STA$
    30-0-0/w UBIN        r     1 TEMP                      31-0-0/b UBIN(9)     r     1 USR#

  ****  SYMREF variables  ****

PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:293  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w SBIN        r     1 KQ_BASEDELAY
     0-0-0/w BIT (72)    r     1 KQ_CGLGATE                 0-0-0/w UBIN        r     1 KQ_DEBUG
     0-0-0/d STRC(432)   r     1 KQ_IBAP                    0-0-0/d STRC(576)   r     1 KQ_IMBLK
     0-0-0/d STRC(360)   r     1 KQ_IMTYP                   0-0-0/d STRC(648)   r     1 KQ_IRBLK
     0-0-0/d STRC(504)   r     1 KQ_IRBLKT                  0-0-0/b STRC        r     1 KQ_LOG
     0-0-0/w PTR         r     1 KQ_MMSD$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(36864) r     1 B$$PAGE                    0-0-0/w PTR         r     1 B$$PTR
     0-0-0/d STRC(2088)  r     1 B$JIT                      0-0-0/w STRC(72)    r     1 F$CHAIN
     0-0-0/d STRC(252)   r     1 KQ$ACB                     0-0-0/d STRC(432)   r     1 KQ$BAP
     0-0-0/d STRC(288)   r     1 KQ$DFRBLK                  0-0-0/d STRC(1944)  r     1 KQ$DSB
     0-0-0/d STRC(108)   r     1 KQ$FB                      0-0-0/d STRC(180)   r     1 KQ$FP
     0-0-0/w STRC(144)   r     1 KQ$GRAN                    0-0-0/d STRC(576)   r     1 KQ$MBLK
     0-0-0/d STRC(288)   r     1 KQ$MMSD                    0-0-0/d STRC(360)   r     1 KQ$MTYP
     0-0-0/d STRC(1908)  r     1 KQ$QTN                     0-0-0/d STRC(648)   r     1 KQ$RBLK
     0-0-0/d STRC(504)   r     1 KQ$RBLKT                   0-0-0/d STRC(1296)  r     1 KQ$STA


   Procedure KQM$GETP requires 2153 words for executable code.
   Procedure KQM$GETP requires 40 words of local(AUTO) storage.

    No errors detected in file KQM$MM.:E05TSI    .
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:294  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:295  
          MINI XREF LISTING

ALTOUT
     10039**LABEL   10233--GOTO
ALTRT IN PROCEDURE BUDDY
     10807**LABEL   10808--CALLALT
ALTRT IN PROCEDURE GETPAGECG
     11393**LABEL   11353--GOTO    11358--CALLALT 11361--CALLALT
ALTRT IN PROCEDURE UNBLOCKS
     10333**LABEL   10330--CALLALT
B$$PAGE
      6299**DCL     11391<<ASSIGN
B$$PTR
      9040**DCL     11151>>ASSIGN  11155<>CALL    11163>>ASSIGN  11166>>ASSIGN  11170<>CALL    11178>>ASSIGN
B$JIT.ERR
      8954**DCL     10142<<ASSIGN  10186<<ASSIGN
B$JIT.ERR.MID
      8955**DCL      8955--REDEF
B$JIT$
      9928**DCL      8949--IMP-PTR 10142>>ASSIGN  10186>>ASSIGN
BAP$
      9051**DCL      7659--IMP-PTR  9052--REDEF   10676<<ASSIGN  10686<<ASSIGN  10689>>DOWHILE 10690>>IF
     10692>>ASSIGN  10694>>ASSIGN  10697<<ASSIGN  10697>>ASSIGN  10704<<ASSIGN  10705<<ASSIGN  10706>>DOWHILE
     10708<<ASSIGN  10708>>ASSIGN  10750<<ASSIGN  10751>>ASSIGN  10752>>ASSIGN  10753>>ASSIGN  10754>>ASSIGN
     10754>>ASSIGN  10755>>ASSIGN  10756>>ASSIGN  10760>>ASSIGN  10761>>ASSIGN  10765>>ASSIGN  10766>>ASSIGN
     10768>>IF      10769>>ASSIGN  10769>>ASSIGN  10770>>ASSIGN  10771>>ASSIGN  10801>>DOWHILE 10803>>ASSIGN
     10804>>ASSIGN  10807>>ASSIGN  10841>>ASSIGN  10841>>ASSIGN  10865>>ASSIGN  10874>>ASSIGN  10877>>ASSIGN
     10880>>ASSIGN  10900>>ASSIGN  10934>>ASSIGN  10943>>ASSIGN  10946>>ASSIGN  10947>>ASSIGN  11102<<ASSIGN
     11104>>IF      11104>>IF      11104>>IF      11116>>ASSIGN  11118>>ASSIGN  11131>>IF      11147>>ASSIGN
     11147>>ASSIGN  11148>>ASSIGN  11160>>IF      11175>>IF      11190>>ASSIGN  11190>>ASSIGN  11193>>IF
     11194>>ASSIGN  11195>>ASSIGN  11196>>ASSIGN  11197>>ASSIGN  11198>>IF      11200>>IF      11207>>ASSIGN
     11208>>IF      11216>>IF      11217>>ASSIGN  11217>>ASSIGN  11220>>IF      11221>>ASSIGN  11222>>IF
     11223>>ASSIGN  11226>>IF      11227>>ASSIGN  11227>>ASSIGN  11228>>ASSIGN  11229>>ASSIGN  11279>>ASSIGN
     11279>>ASSIGN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:296  
BAP$R.OTHER
      9054**DCL     11103<<ASSIGN
BASEREL
     11052**PROC    10201--CALL    10207--CALL    10224--CALL    11049--CALL
BLK$
      9056**DCL     10110<<ASSIGN  10111>>ASSIGN  10114<>CALL    10124>>ASSIGN  10125>>ASSIGN  10127>>ASSIGN
     10266<<ASSIGN  10504>>ASSIGN  10505>>CALL    10506>>ASSIGN  10507>>ASSIGN  10524>>ASSIGN  10530>>ASSIGN
     10538>>ASSIGN  10539>>ASSIGN  10540>>ASSIGN  10541>>ASSIGN  10544>>ASSIGN  10545>>ASSIGN  10546>>ASSIGN
     10547>>ASSIGN  10555>>ASSIGN  10556>>ASSIGN  10557>>ASSIGN  10559>>ASSIGN  10770<<ASSIGN  10771>>ASSIGN
     10803<<ASSIGN  10804>>ASSIGN  10805>>IF      10806>>ASSIGN  10829<<ASSIGN  10830>>DOWHILE 10831>>IF
     10834>>IF      10835>>ASSIGN  10836>>ASSIGN  10836>>ASSIGN  10837>>IF      10838>>ASSIGN  10839>>ASSIGN
     10839>>ASSIGN  10844>>IF      10847>>ASSIGN  10847>>ASSIGN  10848<<ASSIGN  10848>>ASSIGN  10848>>ASSIGN
     10851<<ASSIGN  10851>>ASSIGN  10864>>ASSIGN  10867>>ASSIGN  10871>>ASSIGN  10872>>IF      10873>>ASSIGN
     10873>>ASSIGN  10874>>ASSIGN  10875>>IF      10876>>ASSIGN  10876>>ASSIGN  10877>>ASSIGN  10878>>ASSIGN
     10878>>ASSIGN  10881>>IF      10882>>IF      10888<<ASSIGN  10889>>ASSIGN  10889>>ASSIGN  10890>>ASSIGN
     10891>>IF      10891>>IF      10896>>ASSIGN  10896>>ASSIGN  10897>>ASSIGN  10898>>IF      10899>>ASSIGN
     10899>>ASSIGN  10900>>ASSIGN  10928>>ASSIGN  10929>>ASSIGN  10933>>ASSIGN  10934>>ASSIGN  10936>>ASSIGN
     10937>>ASSIGN  10942>>ASSIGN  10943>>ASSIGN  10944>>IF      10945>>ASSIGN  10945>>ASSIGN  10946>>ASSIGN
     10947>>ASSIGN  11058<<ASSIGN  11059>>ASSIGN  11060<>CALL    11099<<ASSIGN  11102>>ASSIGN  11138>>ASSIGN
     11141>>ASSIGN  11142>>ASSIGN  11155<>CALL    11170<>CALL    11191>>ASSIGN  11192>>ASSIGN  11194>>ASSIGN
     11195>>ASSIGN  11196>>ASSIGN  11197>>ASSIGN  11277>>IF      11299>>IF      11300>>IF      11302>>IF
     11304>>IF
BUDDY
     10799**PROC    10707--CALL    11206--CALL
CHAIN$
      9060**DCL     10692<<ASSIGN  10694<<ASSIGN  10829>>ASSIGN  10835>>ASSIGN  10838>>ASSIGN  10880<<ASSIGN
     11148<<ASSIGN
CHAINCHK
     11296**PROC    11117--CALL    11119--CALL
COM IN PROCEDURE GETPAGECG
     11432**LABEL   11426--GOTO
DOCHAIN
     10824**PROC    10693--CALL    10695--CALL    11290--CALL
DOPGSI IN PROCEDURE GETPAGECG
     11502**PROC    11389--CALL    11483--CALL
ENTFLAG
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:297  
      9064**DCL     10265<<ASSIGN  10366<<ASSIGN  10384<<ASSIGN  10407<<ASSIGN  10418<<ASSIGN  10430<<ASSIGN
     10447<<ASSIGN  10457<<ASSIGN  10466<<ASSIGN  10483<<ASSIGN  10496<<ASSIGN  10508>>IF      10578>>IF
     10580>>IF      10584>>IF      10594>>IF      10594>>IF      11030<<ASSIGN  11094<<ASSIGN  11101<>CALL
     11139>>IF      11274>>IF      11276<<ASSIGN
ERRFLG
      6270**DCL         6--PROC    10060--ENTRY   10103--ENTRY   10158--ENTRY   10222--ENTRY   10235>>IF
     10263--ENTRY   10267>>ASSIGN  10364--ENTRY   10382--ENTRY   10389>>ASSIGN  10404--ENTRY   10406>>ASSIGN
     10417--ENTRY   10420>>ASSIGN  10429--ENTRY   10432>>ASSIGN  10446--ENTRY   10456--ENTRY   10465--ENTRY
     10482--ENTRY   10492--ENTRY   10714<<ASSIGN  10971--ENTRY   10973>>ASSIGN  11347<<ASSIGN  11358<>CALL
     11361<>CALL    11371<<ASSIGN  11381<>CALL    11382<>CALL
E_CGCGDB
      9892**DCL     10142>>ASSIGN
E_CGCGMP
      9886**DCL     10186>>ASSIGN
F$CHAIN.HEAD$
      6302**DCL     10829>>ASSIGN  10835<<ASSIGN
F$CHAIN.TAIL$
      6303**DCL     10838<<ASSIGN
FGH$UPDBUCKET
      9911**DCL-ENT 11508--CALL
FORCE IN PROCEDURE GETPAGECG
     11323**DCL     11324--REDEF   11425<<ASSIGN  11432<<ASSIGN  11448>>IF
FP$ IN PROCEDURE GETPAGECG
     11325**DCL     11453<<ASSIGN  11454>>DOWHILE 11455>>IF      11456<<ASSIGN  11456>>ASSIGN
GB0 IN PROCEDURE GETBLKP
     10676**LABEL   10718--GOTO
GB1 IN PROCEDURE GETBLKP
     10686**LABEL   10723--GOTO
GB4 IN PROCEDURE DOCHAIN
     10830**LABEL   10881--GOTO
GB4 IN PROCEDURE GETBLKP
     10685**LABEL   10677--GOTO
GB5 IN PROCEDURE DOCHAIN
     10839**LABEL   10882--GOTO
GB5 IN PROCEDURE GETBLKP
     10715**LABEL   10727--CALLALT
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:298  
GB6 IN PROCEDURE DOCHAIN
     10878**LABEL   10902--GOTO    10948--GOTO
GBKICK
     10569**LABEL   10567--CALLALT
GBS
     10385**LABEL   10367--GOTO
GET0 IN PROCEDURE GETPAGECG
     11388**LABEL   11339--GOTO
GETB
     10496**LABEL   10390--GOTO    10408--GOTO    10421--GOTO    10433--GOTO    10449--GOTO    10459--GOTO
     10468--GOTO    10485--GOTO
GETBLK IN PROCEDURE GETBLKP
     10680**ENTRY   10495--CALL    10503--CALL    10523--CALL    10529--CALL    10563--CALL    10567--CALL
GETBLKP
     10665**PROC    10120--CALL    10536--CALL    10554--CALL
GETCOM IN PROCEDURE GETPAGECG
     11361**LABEL   11408--GOTO
GETDFRFAIL
     10127**LABEL   10120--CALLALT
GETDFRX
     10127**LABEL   10109--GOTO
GETDONE IN PROCEDURE DOCHAIN
     10837**LABEL   10849--GOTO
GETMINFAIL
     10173**LABEL   10175--CALLALT
GETOUT
     11180**LABEL   10181--GOTO    10235--GOTO    10254--GOTO    11161--GOTO    11176--GOTO
GETPAGECG
     11321**PROC    10034--CALL
GETPAGECGM IN PROCEDURE GETPAGECG
     11342**ENTRY   10175--CALL
GETPAGECGNL IN PROCEDURE GETPAGECG
     11332**ENTRY   10166--CALL    10727--CALL
GETPAGERECON IN PROCEDURE GETPAGECG
     11402**ENTRY   10063--CALL
GETPEXIT
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:299  
     10034**LABEL   10064--GOTO
GOTB
     10507**LABEL   10525--GOTO    10531--GOTO    10549--GOTO    10558--GOTO    10564--GOTO    10568--GOTO
GOTBQ
     10545**LABEL   10560--GOTO
GOTMBLK
     10504**LABEL   10270--GOTO    10497--GOTO
GOTRBLK
     10524**LABEL   10272--GOTO
GOTRBLKT
     10530**LABEL   10274--GOTO
GOTSTA
     10537**LABEL   10276--GOTO
GOTTYP
     10555**LABEL   10278--GOTO
GSIZE
      9061**DCL     10119<<ASSIGN  10420<<ASSIGN  10432<<ASSIGN  10494<<ASSIGN  10502<<ASSIGN  10518<>CALL
     10522<<ASSIGN  10528<<ASSIGN  10534<<ASSIGN  10535<<ASSIGN  10552<<ASSIGN  10553<<ASSIGN  10690>>IF
     10831>>IF      10841>>ASSIGN  10844>>IF      10847>>ASSIGN  10881>>IF      10882>>IF      10960<<ASSIGN
     10961<<ASSIGN  10973<<ASSIGN  10983<<ASSIGN  10994<<ASSIGN  10995<<ASSIGN  11005<<ASSIGN  11015<<ASSIGN
     11031<<ASSIGN  11101<>CALL    11138>>ASSIGN  11147>>ASSIGN  11190>>ASSIGN  11191>>ASSIGN  11205<<ASSIGN
     11259<<ASSIGN  11261<<ASSIGN  11263<<ASSIGN  11265<<ASSIGN  11266<<ASSIGN  11268<<ASSIGN  11269<<ASSIGN
     11277>>IF      11279>>ASSIGN  11282>>ASSIGN  11283<<ASSIGN  11287<<ASSIGN  11304>>IF
HFC$LOCK
      2877**DCL-ENT 10106--CALL    10161--CALL    10169--CALL    10178--CALL    10226--CALL    10242--CALL
     10250--CALL    10315--CALL    10387--CALL    10598--CALL    10674--CALL    10683--CALL    10739--CALL
     11054--CALL    11063--CALL    11096--CALL    11157--CALL    11172--CALL    11329--CALL    11367--CALL
     11406--CALL    11418--CALL    11434--CALL    11476--CALL
HFC$UNLOCK
      2877**DCL-ENT 10037--CALL    10044--CALL    10122--CALL    10132--CALL    10137--CALL    10140--CALL
     10184--CALL    10311--CALL    10328--CALL    10347--CALL    10511--CALL    10515--CALL    10589--CALL
     10604--CALL    10745--CALL    11067--CALL    11183--CALL    11385--CALL    11397--CALL    11480--CALL
     11487--CALL
I
      9050**DCL     10203<<ASSIGN  10204<>CALL    10205<<ASSIGN  10206<>CALL    10864<<ASSIGN  10868>>IF
     10878>>ASSIGN  10889>>ASSIGN  10924>>IF
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:300  
I IN PROCEDURE DOPGSI
     11504**DCL     11506<<ASSIGN  11508>>CALL
I IN PROCEDURE UNBLOCKS
     10302**DCL     10305<<ASSIGN  10307<>CALL
INSBLK IN PROCEDURE DOCHAIN
     10861**ENTRY   10772--CALL    10808--CALL    11284--CALL
J
      9048**DCL     10505<>CALL    10506>>ASSIGN
K$CG.AUCTL.DVBYTE.REREAD
      8193**DCL      8194--REDEF
KQ$ACB.CURPG
      8535**DCL     11369>>IF      11383<<ASSIGN  11383>>ASSIGN  11478<<ASSIGN  11478>>ASSIGN
KQ$ACB.CURPGLIM
      8538**DCL     11369>>IF
KQ$BAP
      7659**DCL     10203--ASSIGN  10205--ASSIGN  10751<<ASSIGN  10756--ASSIGN  10770--ASSIGN  11198--IF
     11200--IF      11208--IF      11208--IF
KQ$BAP.BLNK$
      7718**DCL     10769<<ASSIGN  11216>>IF      11217>>ASSIGN  11227<<ASSIGN  11227>>ASSIGN
KQ$BAP.CG$
      7731**DCL     10753<<ASSIGN  11104>>IF      11228<<ASSIGN
KQ$BAP.FLNK$
      7716**DCL     10697>>ASSIGN  10708>>ASSIGN  10760<<ASSIGN  10765<<ASSIGN  10768>>IF      10769>>ASSIGN
     11217<<ASSIGN  11217>>ASSIGN  11221>>ASSIGN  11223>>ASSIGN  11226>>IF      11227>>ASSIGN
KQ$BAP.FREESIZE
      7720**DCL     10690>>IF      10756<<ASSIGN  10771>>ASSIGN  10841<<ASSIGN  10841>>ASSIGN  11147<<ASSIGN
     11147>>ASSIGN  11190<<ASSIGN  11190>>ASSIGN  11198>>IF      11200>>IF      11279<<ASSIGN  11279>>ASSIGN
KQ$BAP.HDR
      7676**DCL     10752<<ASSIGN
KQ$BAP.HDR.PTYP
      7698**DCL     10755<<ASSIGN
KQ$BAP.HDR.SELF$
      7710**DCL     10754<<ASSIGN  11104>>IF
KQ$BAP.JUHEAD$
      7727**DCL     10692--ASSIGN  10801>>DOWHILE 10803>>ASSIGN  10804<<ASSIGN  11116>>ASSIGN  11131>>IF
     11194<<ASSIGN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:301  
KQ$BAP.JUTAIL$
      7729**DCL     10807<<ASSIGN  11193>>IF      11195>>ASSIGN  11196>>ASSIGN  11197<<ASSIGN
KQ$BAP.ORHEAD$
      7722**DCL     10694--ASSIGN  10865>>ASSIGN  10877<<ASSIGN  10880--ASSIGN  10934<<ASSIGN  10946<<ASSIGN
     11118>>ASSIGN  11148--ASSIGN  11160>>IF      11175>>IF      11207>>ASSIGN
KQ$BAP.ORTAIL$
      7725**DCL     10874<<ASSIGN  10900<<ASSIGN  10943>>ASSIGN  10947<<ASSIGN
KQ$CG
      5545**DCL         6--PROC    10060--ENTRY   10075--ENTRY   10086--ENTRY   10103--ENTRY   10114<>CALL
     10158--ENTRY   10199--ENTRY   10204<>CALL    10206<>CALL    10222--ENTRY   10263--ENTRY   10307<>CALL
     10364--ENTRY   10382--ENTRY   10404--ENTRY   10417--ENTRY   10429--ENTRY   10446--ENTRY   10456--ENTRY
     10465--ENTRY   10482--ENTRY   10492--ENTRY   10518<>CALL    10540--ASSIGN  10569<>CALL    10593<>CALL
     10753--ASSIGN  10957--ENTRY   10971--ENTRY   10981--ENTRY   10991--ENTRY   11003--ENTRY   11013--ENTRY
     11027--ENTRY   11047--ENTRY   11060<>CALL    11101<>CALL    11104--IF      11357--IF      11359--IF
     11467--IF      11469--IF
KQ$CG.ACB$
      6074**DCL     11369>>IF      11369>>IF      11383>>ASSIGN  11383>>ASSIGN  11478>>ASSIGN  11478>>ASSIGN
KQ$CG.AUCTL.AUTORCVR
      5990**DCL     10547>>ASSIGN
KQ$CG.AUCTL.DEFERBLKS
      5989**DCL     10108>>DOWHILE 10118>>DOWHILE
KQ$CG.AUCTL.DVBYTE.REREAD
      5988**DCL      5989--REDEF
KQ$CG.AUCTL.MAXPG
      5985**DCL     10732>>IF      11345>>IF
KQ$CG.AUCTL.MEMWARN
      5994**DCL     10732>>IF      10736>>IF
KQ$CG.AUCTL.MEMWARNP
      5992**DCL     10731>>IF
KQ$CG.AUCTL.MINPG
      5984**DCL     10163>>IF      10164>>DOWHILE 10174>>DOWHILE 11448>>IF
KQ$CG.AUCTL.MXACT
      5985**DCL     10546>>ASSIGN
KQ$CG.AUCTL.STAPRIO
      5984**DCL     10541>>ASSIGN
KQ$CG.AUCTL.TYPPRIO
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:302  
      5984**DCL     10557>>ASSIGN
KQ$CG.BASEDELAY
      5655**DCL     10742<<ASSIGN  10742>>ASSIGN  11143<<ASSIGN  11143>>ASSIGN
KQ$CG.DELAY.MEMWARN
      5629**DCL     10741<<ASSIGN
KQ$CG.DFRFREEHD$
      6110**DCL     10109>>IF      10110>>ASSIGN  10111<<ASSIGN  10112>>IF      10124>>ASSIGN  10125<<ASSIGN
KQ$CG.DFRFREETL$
      6265**DCL     10113<<ASSIGN  10126>>IF      10127<<ASSIGN
KQ$CG.DTREE.GATE
      6130**DCL     10106<>CALL    10132<>CALL    10140<>CALL
KQ$CG.GATE.CG
      5935**DCL     10739<>CALL    10745<>CALL
KQ$CG.GRAN
      6215**DCL     10752>>ASSIGN  11392>>ASSIGN
KQ$CG.MMD.BAPLOCK
      5582**DCL     11154<<ASSIGN  11154>>ASSIGN  11159<<ASSIGN  11159>>ASSIGN  11169<<ASSIGN  11169>>ASSIGN
     11174<<ASSIGN  11174>>ASSIGN  11212>>IF
KQ$CG.MMD.BASEREL$
      5589**DCL     11056>>DOWHILE 11058>>ASSIGN  11059<<ASSIGN  11141>>ASSIGN  11142<<ASSIGN
KQ$CG.MMD.CURBPG
      5571**DCL     10669>>IF      10712>>IF      10736>>IF      10749<<ASSIGN  10749>>ASSIGN  11212>>IF
     11230<<ASSIGN  11230>>ASSIGN
KQ$CG.MMD.CURPG
      5567**DCL     10163>>IF      10174>>DOWHILE 11345>>IF      11388<<ASSIGN  11388>>ASSIGN  11438>>IF
     11448>>IF      11466<<ASSIGN  11466>>ASSIGN  11508<>CALL
KQ$CG.MMD.CURPPG
      5598**DCL     10730<<ASSIGN  10730>>ASSIGN  10732>>IF
KQ$CG.MMD.DSB$
      5554**DCL     11381>>CALL    11382>>CALL    11482>>CALL
KQ$CG.MMD.FREE$
      5563**DCL     11334>>IF      11336>>ASSIGN  11337<<ASSIGN  11453>>ASSIGN  11460>>ASSIGN  11461<<ASSIGN
KQ$CG.MMD.FREECNT
      5569**DCL     10164>>DOWHILE 11338<<ASSIGN  11338>>ASSIGN  11462<<ASSIGN  11462>>ASSIGN
KQ$CG.MMD.GATE
      5556**DCL     10037<>CALL    10044<>CALL    10122<>CALL    10137<>CALL    10161<>CALL    10169<>CALL
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:303  
     10178<>CALL    10184<>CALL    10226<>CALL    10242<>CALL    10250<>CALL    10311<>CALL    10347<>CALL
     10515<>CALL    10674<>CALL    10683<>CALL    11054<>CALL    11063<>CALL    11067<>CALL    11096<>CALL
     11157<>CALL    11172<>CALL    11183<>CALL    11329<>CALL    11406<>CALL    11418<>CALL    11434<>CALL
     11487<>CALL
KQ$CG.MMD.GFORCE
      5579**DCL     10232<<ASSIGN
KQ$CG.MMD.GIP
      5577**DCL     10231<<ASSIGN  10253<<ASSIGN
KQ$CG.MMD.HEAD$
      5558**DCL     10686>>ASSIGN  10704>>ASSIGN  10760>>ASSIGN  10761<<ASSIGN  11220>>IF      11221<<ASSIGN
KQ$CG.MMD.MAXBPG
      5573**DCL     10712>>IF      10736>>IF
KQ$CG.MMD.MBLKHD$
      5595**DCL     10202>>DOWHILE 10228>>IF      10246>>DOWHILE 10247>>ASSIGN  10248<>CALL    10615>>ASSIGN
     10616<<ASSIGN  11124>>IF      11150--ASSIGN
KQ$CG.MMD.MINBPG
      5585**DCL     11212>>IF
KQ$CG.MMD.PHEAD$
      5560**DCL     10669>>IF      10676>>ASSIGN  10705>>ASSIGN  10765>>ASSIGN  10766<<ASSIGN  11222>>IF
     11223<<ASSIGN
KQ$CG.MMD.STAHD$
      5592**DCL     10202>>DOWHILE 10228>>IF      10238>>DOWHILE 10239>>ASSIGN  10240<>CALL    10591>>ASSIGN
     10592<<ASSIGN  11124>>IF      11165--ASSIGN
KQ$CG.NDFRBLKS
      6094**DCL     10108>>DOWHILE 10115<<ASSIGN  10115>>ASSIGN  10118>>DOWHILE 10128<<ASSIGN  10128>>ASSIGN
KQ$CG.PGTIME
      5944**DCL     11506>>ASSIGN  11507<>CALL    11508>>CALL
KQ$CG.QISS
      5931**DCL     10534>>IF      10537>>IF      10542>>IF      10552>>IF      10555>>IF      10558>>IF
     10959>>IF      10993>>IF      11265>>IF      11268>>IF
KQ$CG.STATS.PGSI
      6038**DCL     11508<>CALL
KQ$DFRBLK
      8801**DCL     10114--CALL    10119--ASSIGN
KQ$DFRBLK.DBLK$
      8823**DCL      8825--REDEF
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:304  
KQ$DFRBLK.INFO
      8831**DCL      8833--REDEF
KQ$DFRBLK.LNK$
      8802**DCL     10111>>ASSIGN  10124<<ASSIGN
KQ$DSB
      8487**DCL     11381<>CALL    11382<>CALL    11482<>CALL
KQ$DSB.ASR
      8489**DCL      8498--REDEF
KQ$DSB.DESC.FLG
      8509**DCL      8510--REDEF
KQ$FB
      6290**DCL     10844--IF      10871<<ASSIGN  10871>>ASSIGN  10882--IF
KQ$FB.BLNK$
      6293**DCL     10806<<ASSIGN  10834>>IF      10836>>ASSIGN  10838>>ASSIGN  10839<<ASSIGN  10839>>ASSIGN
     10873<<ASSIGN  10875>>IF      10876>>ASSIGN  10899<<ASSIGN  10926>>IF      10928<<ASSIGN  10928>>ASSIGN
     10929>>ASSIGN  10933<<ASSIGN  10937<<ASSIGN  10943<<ASSIGN  10944>>IF      10945>>ASSIGN  11196<<ASSIGN
KQ$FB.FLNK$
      6291**DCL     10804>>ASSIGN  10805>>IF      10806>>ASSIGN  10835>>ASSIGN  10836<<ASSIGN  10836>>ASSIGN
     10837>>IF      10839>>ASSIGN  10851>>ASSIGN  10872>>IF      10873>>ASSIGN  10876<<ASSIGN  10890>>ASSIGN
     10897<<ASSIGN  10897>>ASSIGN  10898>>IF      10899>>ASSIGN  10920>>ASSIGN  10929<<ASSIGN  10936<<ASSIGN
     10942<<ASSIGN  10945<<ASSIGN  11059>>ASSIGN  11141<<ASSIGN  11192<<ASSIGN  11195<<ASSIGN  11305>>ASSIGN
KQ$FB.SIZE
      6295**DCL     10771<<ASSIGN  10831>>IF      10844>>IF      10847<<ASSIGN  10847>>ASSIGN  10848>>ASSIGN
     10864>>ASSIGN  10878<<ASSIGN  10878>>ASSIGN  10881>>IF      10882>>IF      10885>>IF      10889<<ASSIGN
     10889>>ASSIGN  10891>>IF      10896<<ASSIGN  10896>>ASSIGN  10896>>ASSIGN  10907>>IF      11031>>ASSIGN
     11138<<ASSIGN  11191<<ASSIGN  11208>>IF      11277>>IF      11302>>IF
KQ$FP.LNK$
      8908**DCL     11337>>ASSIGN  11456>>ASSIGN  11460<<ASSIGN
KQ$GRAN
      8747**DCL     11392<<ASSIGN
KQ$GRAN.PTYP
      8771**DCL     11459<<ASSIGN
KQ$GRAN.SELF$
      8783**DCL     11393<<ASSIGN  11437>>IF
KQ$MBLK
      6317**DCL     10349<>CALL    10494--ASSIGN  10502--ASSIGN  10504<<ASSIGN  10983--ASSIGN  11259--ASSIGN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:305  
KQ$MBLK.KEY1
      6345**DCL      6347--REDEF
KQ$MBLK.KEY2
      6354**DCL      6372--REDEF
KQ$MBLK.LNK$
      6319**DCL      6321--REDEF    6327--REDEF    6331--REDEF
KQ$MBLK.MREQ
      6529**DCL     10342>>IF      10345<<ASSIGN  10345>>ASSIGN  10613>>IF      10614<<ASSIGN  11153<>CALL
KQ$MBLK.STA$
      6539**DCL      6542--REDEF    6546--REDEF
KQ$MBLK.STAMP
      6339**DCL     10506<<ASSIGN
KQ$MBLK.STATE
      6527**DCL     10342>>IF
KQ$MBLK.USR
      6510**DCL      6515--REDEF
KQ$MBLK.UTS
      6389**DCL     10505<>CALL
KQ$MBLK.XSP.MREQ$
      6374**DCL      6378--REDEF   10341>>ASSIGN  10344<<ASSIGN  10615<<ASSIGN  11162--ASSIGN
KQ$MMSD.CCXT$
      8932**DCL     11357>>IF      11467>>IF
KQ$MMSD.DCXT$
      8937**DCL     11359>>IF      11469>>IF
KQ$MTYP
      6773**DCL     10552--ASSIGN  10556<<ASSIGN  10995--ASSIGN  11265--ASSIGN
KQ$MTYP.MPRIO
      6809**DCL     10557<<ASSIGN  10559>>ASSIGN
KQ$QTN
      7186**DCL     10534--ASSIGN  10538<<ASSIGN  10553--ASSIGN  10555<<ASSIGN  10960--ASSIGN  10994--ASSIGN
     11266--ASSIGN  11268--ASSIGN
KQ$QTN.AUTORCVR
      7543**DCL     10547<<ASSIGN
KQ$QTN.MPRIO
      7551**DCL     10545<<ASSIGN
KQ$QTN.MXACT
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:306  
      7532**DCL      7534--REDEF   10546<<ASSIGN
KQ$QTN.STA.ACTTYC
      7254**DCL      7258--REDEF
KQ$QTN.STA.DCBLNK$
      7261**DCL      7264--REDEF    7268--REDEF
KQ$QTN.STA.EVCNT
      7347**DCL      7350--REDEF
KQ$QTN.STA.EVNT
      7313**DCL      7317--REDEF    7320--REDEF
KQ$QTN.STA.OPNBLKED
      7374**DCL      7377--REDEF
KQ$QTN.STA.OPNREJ
      7380**DCL      7382--REDEF
KQ$QTN.STA.SUCCREAD
      7303**DCL      7307--REDEF
KQ$QTN.STA.TCOUNT
      7432**DCL      7438--REDEF
KQ$QTN.STA.VGOT$
      7417**DCL      7421--REDEF    7425--REDEF
KQ$RBLK
      6587**DCL     10522--ASSIGN  10524<<ASSIGN  11005--ASSIGN  11261--ASSIGN
KQ$RBLK.BUF$
      6709**DCL      6711--REDEF
KQ$RBLK.CNACTD
      6623**DCL      6632--REDEF
KQ$RBLK.DBLKX
      6729**DCL      6733--REDEF
KQ$RBLK.EOFNONE
      6601**DCL      6604--REDEF
KQ$RBLK.FROMQ
      6607**DCL      6610--REDEF
KQ$RBLK.KEY1R
      6648**DCL      6649--REDEF
KQ$RBLK.KEY2R
      6653**DCL      6654--REDEF
KQ$RBLK.LATCH
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:307  
      6596**DCL      6598--REDEF
KQ$RBLK.LWRITES$
      6740**DCL      6744--REDEF
KQ$RBLKT
      8560**DCL     10528--ASSIGN  10530<<ASSIGN  11015--ASSIGN  11263--ASSIGN
KQ$RBLKT.CNACTD
      8596**DCL      8605--REDEF
KQ$RBLKT.DBLK$
      8659**DCL      8663--REDEF    8666--REDEF
KQ$RBLKT.EOFNONE
      8574**DCL      8577--REDEF
KQ$RBLKT.FROMQ
      8580**DCL      8583--REDEF
KQ$RBLKT.KEY1R
      8621**DCL      8622--REDEF
KQ$RBLKT.KEY2R
      8626**DCL      8627--REDEF
KQ$RBLKT.LATCH
      8569**DCL      8571--REDEF
KQ$STA
      6848**DCL     10330<>CALL    10535--ASSIGN  10539<<ASSIGN  10961--ASSIGN  11269--ASSIGN
KQ$STA.ACTTYC
      6900**DCL      6904--REDEF
KQ$STA.CG$
      6887**DCL     10540<<ASSIGN
KQ$STA.DCBLNK$
      6907**DCL      6910--REDEF    6914--REDEF
KQ$STA.EVCNT
      6993**DCL      6996--REDEF
KQ$STA.EVNT
      6959**DCL      6963--REDEF    6966--REDEF
KQ$STA.GATE
      6926**DCL     10315<>CALL    10328<>CALL    10387<>CALL    10511<>CALL    10589<>CALL    10598<>CALL
     10604<>CALL
KQ$STA.LOCKCNT
      6982**DCL     10587<<ASSIGN  10587>>ASSIGN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:308  
KQ$STA.MPRIO
      6921**DCL     10541<<ASSIGN  10544>>ASSIGN
KQ$STA.MREQ
      6973**DCL     10305>>ASSIGN  10317>>IF      10324<<ASSIGN  10324>>ASSIGN  10582>>IF      10583<<ASSIGN
     10600>>IF      10601<<ASSIGN  11168<>CALL
KQ$STA.MREQ$
      7058**DCL     10304>>ASSIGN  10325<<ASSIGN  10591<<ASSIGN  10602>>ASSIGN  11177--ASSIGN
KQ$STA.OPNBLKED
      7020**DCL      7023--REDEF
KQ$STA.OPNREJ
      7026**DCL      7028--REDEF
KQ$STA.SUCCREAD
      6949**DCL      6953--REDEF
KQ$STA.TCOUNT
      7078**DCL      7084--REDEF
KQ$STA.USR#
      6979**DCL     10326>>ASSIGN  10585>>IF      10586>>IF
KQ$STA.VGOT$
      7063**DCL      7067--REDEF    7071--REDEF
KQL$SRQ
      9912**DCL-ENT 10349--CALL
KQM$GETB
     10417**ENTRY   10204--CALL
KQM$RELB
     10971**ENTRY   10114--CALL    10206--CALL
KQM$RELBC
     11027**ENTRY   11060--CALL
KQM$SETBLK
     10263**ENTRY   10307--CALL
KQP$UNLOCK
      9913**DCL-ENT 10330--CALL
KQS$GARB
      9914**DCL-ENT 10593--CALL
KQS$GARBF
      9915**DCL-ENT 10569--CALL
KQZ$LOG
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:309  
      9916**DCL-ENT 10518--CALL    11101--CALL
KQ_BASEDELAY
      3381**DCL     10743<<ASSIGN  10743>>ASSIGN  11144<<ASSIGN  11144>>ASSIGN
KQ_CGLGATE
      3382**DCL     11367<>CALL    11385<>CALL    11397<>CALL    11476<>CALL    11480<>CALL
KQ_DEBUG
      3383**DCL     11114>>IF      11203>>IF      11451>>IF
KQ_IBAP
      9943**DCL     10751>>ASSIGN
KQ_IMBLK
      3943**DCL     10504>>ASSIGN
KQ_IMBLK.DVE.EOMCHAR
      4045**DCL      4047--REDEF
KQ_IMBLK.KEY1
      3971**DCL      3973--REDEF
KQ_IMBLK.KEY2
      3980**DCL      3998--REDEF
KQ_IMBLK.LNK$
      3945**DCL      3947--REDEF    3953--REDEF    3957--REDEF
KQ_IMBLK.TYC
      4094**DCL      4096--REDEF
KQ_IMBLK.XSP.MREQ$
      4000**DCL      4004--REDEF
KQ_IMTYP
      3799**DCL     10556>>ASSIGN
KQ_IRBLK
      3427**DCL     10524>>ASSIGN
KQ_IRBLK.BUF$
      3549**DCL      3551--REDEF
KQ_IRBLK.CNACTD
      3463**DCL      3472--REDEF
KQ_IRBLK.DBLKX
      3569**DCL      3573--REDEF
KQ_IRBLK.EOFNONE
      3441**DCL      3444--REDEF
KQ_IRBLK.FROMQ
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:310  
      3447**DCL      3450--REDEF
KQ_IRBLK.KEY1R
      3488**DCL      3489--REDEF
KQ_IRBLK.KEY2R
      3493**DCL      3494--REDEF
KQ_IRBLK.LATCH
      3436**DCL      3438--REDEF
KQ_IRBLK.LWRITES$
      3580**DCL      3584--REDEF
KQ_IRBLKT
      3613**DCL     10530>>ASSIGN
KQ_IRBLKT.CNACTD
      3649**DCL      3658--REDEF
KQ_IRBLKT.DBLK$
      3712**DCL      3716--REDEF    3719--REDEF
KQ_IRBLKT.EOFNONE
      3627**DCL      3630--REDEF
KQ_IRBLKT.FROMQ
      3633**DCL      3636--REDEF
KQ_IRBLKT.KEY1R
      3674**DCL      3675--REDEF
KQ_IRBLKT.KEY2R
      3679**DCL      3680--REDEF
KQ_IRBLKT.LATCH
      3622**DCL      3624--REDEF
KQ_LOG.MM
      3397**DCL     10517>>IF      11100>>IF
KQ_MMSD$
      9929**DCL      8924--IMP-PTR 11357>>IF      11359>>IF      11467>>IF      11469>>IF
MBLK$
      9065**DCL     10247<<ASSIGN  10341>>ASSIGN  10342>>IF      10342>>IF      10344>>ASSIGN  10345>>ASSIGN
     10345>>ASSIGN  10349>>CALL    10612<<ASSIGN  10613>>IF      10614>>ASSIGN  10615>>ASSIGN  10616>>ASSIGN
     11151<<ASSIGN  11152>>DOWHILE 11153>>CALL    11162>>ASSIGN  11163<<ASSIGN
MEM$
      6269**DCL         6--PROC    10039<<ASSIGN  10060--ENTRY   10062>>ASSIGN  10075--ENTRY   10076>>ASSIGN
     10086--ENTRY   10088>>ASSIGN  10103--ENTRY   10158--ENTRY   10222--ENTRY   10263--ENTRY   10266>>ASSIGN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:311  
     10364--ENTRY   10382--ENTRY   10385>>ASSIGN  10404--ENTRY   10417--ENTRY   10429--ENTRY   10446--ENTRY
     10456--ENTRY   10465--ENTRY   10482--ENTRY   10492--ENTRY   10507<<ASSIGN  10518<>CALL    10602<<ASSIGN
     10606>>IF      10612>>ASSIGN  10957--ENTRY   10971--ENTRY   10981--ENTRY   10991--ENTRY   11003--ENTRY
     11013--ENTRY   11027--ENTRY   11031>>ASSIGN  11099>>ASSIGN  11101<>CALL
MEM$ IN PROCEDURE UNBLOCKS
     10300**DCL     10297--PROC    10306>>IF      10307<>CALL    10325>>ASSIGN  10339--ENTRY   10344>>ASSIGN
MMQ$FCAP
      9920**DCL-ENT 11471--CALL
MMQ$FCCP
      9921**DCL-ENT 11468--CALL
MMQ$FCDP
      9922**DCL-ENT 11482--CALL
MMQ$GCAP
      9917**DCL-ENT 11361--CALL
MMQ$GCCP
      9918**DCL-ENT 11358--CALL
MMQ$GCDP
      9919**DCL-ENT 11381--CALL
MMQ$RECON
      9923**DCL-ENT 11382--CALL
MMQERR IN PROCEDURE GETPAGECG
     11326**DCL     11468<>CALL    11471<>CALL    11482<>CALL
MPRIO
      9062**DCL     10544<<ASSIGN  10545>>ASSIGN  10559<<ASSIGN
NG0
     10593**LABEL   10617--GOTO
NOGET
     10039**LABEL   10034--CALLALT 10063--CALLALT 10495--CALLALT 10563--CALLALT 10578--GOTO
NOGOT
     10567**LABEL   10503--CALLALT 10523--CALLALT 10529--CALLALT 10536--CALLALT 10554--CALLALT
NOPG IN PROCEDURE GETPAGECG
     11393**LABEL   11378--GOTO    11381--CALLALT 11382--CALLALT
NOWARN IN PROCEDURE GETBLKP
     10743**LABEL   10734--GOTO
OFFSET
      9057**DCL      9058--REDEF   10867<<ASSIGN  10868>>IF      10905>>IF      10924>>IF
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:312  
OFFSETR
      9058**DCL     10885>>IF      10907>>IF
P$
      9059**DCL     10204<>CALL    10206<>CALL    11116<<ASSIGN  11118<<ASSIGN  11150<<ASSIGN  11151>>ASSIGN
     11155>>CALL    11162<<ASSIGN  11163>>ASSIGN  11165<<ASSIGN  11166>>ASSIGN  11170>>CALL    11177<<ASSIGN
     11178>>ASSIGN  11207<<ASSIGN  11208>>IF      11208>>IF      11298>>DOWHILE 11299>>IF      11300>>IF
     11302>>IF      11302>>IF      11304>>IF      11305<<ASSIGN  11305>>ASSIGN
P$ IN PROCEDURE DOCHAIN
     10826**DCL     10865<<ASSIGN  10866>>DOWHILE 10867>>ASSIGN  10871>>ASSIGN  10885>>IF      10888>>ASSIGN
     10890<<ASSIGN  10891>>IF      10896>>ASSIGN  10897>>ASSIGN  10907>>IF      10920<<ASSIGN  10920>>ASSIGN
     10926>>IF      10928>>ASSIGN  10929>>ASSIGN  10936>>ASSIGN  10937>>ASSIGN
P$ IN PROCEDURE UNBLOCKS
     10299**DCL     10297--PROC    10304<<ASSIGN  10339--ENTRY   10341<<ASSIGN
PAGE$
      9049**DCL     10039>>ASSIGN  10062<<ASSIGN  10076<<ASSIGN  10088<<ASSIGN  10750>>ASSIGN  11229<<ASSIGN
     11336<<ASSIGN  11337>>ASSIGN  11358<>CALL    11361<>CALL    11381<>CALL    11382<>CALL    11391>>ASSIGN
     11392>>ASSIGN  11393>>ASSIGN  11393>>ASSIGN  11437>>IF      11437>>IF      11455>>IF      11459>>ASSIGN
     11460>>ASSIGN  11461>>ASSIGN  11468<>CALL    11471<>CALL    11482<>CALL
PERM IN PROCEDURE GETBLKP
     10667**DCL     10672<<ASSIGN  10685<<ASSIGN  10703>>IF      10715>>IF      10717<<ASSIGN  10720>>IF
     10722<<ASSIGN  10728>>IF      10758>>IF
QTN_INIT
      9425**DCL     10538>>ASSIGN  10555>>ASSIGN
QTN_INIT.MXACT
      9771**DCL      9773--REDEF
QTN_INIT.STA.ACTTYC
      9493**DCL      9497--REDEF
QTN_INIT.STA.DCBLNK$
      9500**DCL      9503--REDEF    9507--REDEF
QTN_INIT.STA.EVCNT
      9586**DCL      9589--REDEF
QTN_INIT.STA.EVNT
      9552**DCL      9556--REDEF    9559--REDEF
QTN_INIT.STA.OPNBLKED
      9613**DCL      9616--REDEF
QTN_INIT.STA.OPNREJ
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:313  
      9619**DCL      9621--REDEF
QTN_INIT.STA.SUCCREAD
      9542**DCL      9546--REDEF
QTN_INIT.STA.TCOUNT
      9671**DCL      9677--REDEF
QTN_INIT.STA.VGOT$
      9656**DCL      9660--REDEF    9664--REDEF
RECON IN PROCEDURE GETPAGECG
     11324**DCL     11344<<ASSIGN  11380>>IF      11404<<ASSIGN
REL05
     11148**LABEL   11160--GOTO
REL10
     11162**LABEL   11153--CALLALT
REL101
     11233**LABEL   11206--CALLALT
REL15
     11165**LABEL   11175--GOTO
REL20
     11177**LABEL   11168--CALLALT
RELBLK
     11069**LABEL   10962--GOTO    10974--GOTO    10984--GOTO    10996--GOTO    11006--GOTO    11016--GOTO
RELBLK1
     11094**LABEL   11032--GOTO
RELPAGECG IN PROCEDURE GETPAGECG
     11414**ENTRY   10077--CALL
RELPAGECGF IN PROCEDURE GETPAGECG
     11429**ENTRY   10089--CALL
RELPAGECGNL IN PROCEDURE GETPAGECG
     11422**ENTRY   10167--CALL    10176--CALL    11231--CALL
RELX
     11180**LABEL   11145--GOTO    11199--GOTO    11214--GOTO    11243--GOTO
REQTYP
      9063**DCL     10267<<ASSIGN  10268>>DOCASE  10389<<ASSIGN  10406<<ASSIGN  10419<<ASSIGN  10431<<ASSIGN
     10448<<ASSIGN  10458<<ASSIGN  10467<<ASSIGN  10484<<ASSIGN  10499>>DOCASE  10518<>CALL    10583>>ASSIGN
     10614>>ASSIGN
RTN
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:314  
     10209**LABEL   10204--CALLALT
RTN IN PROCEDURE GETBLKP
     10771**LABEL   10693--CALLALT 10695--CALLALT 10707--CALLALT 10772--CALLALT
RTN IN PROCEDURE TRYGET
     11292**LABEL   11290--CALLALT
RTYP IN PROCEDURE TRYGET
     11254**DCL     11251--PROC    11256>>IF      11257>>DOCASE
SCMMQ IN PROCEDURE GETPAGECG
     11482**LABEL   11468--CALLALT 11471--CALLALT 11482--CALLALT
SCR IN PROCEDURE TRYGET
     11286**LABEL   11284--CALLALT
SC_BCGBAP
      9905**DCL-ENT 10907--CALL    10924--CALL
SC_BCGMMQ
      9908**DCL-ENT 11492--CALL
SC_BCGMRQ
      9909**DCL-ENT 10280--CALL    10317--CALL    10343--CALL    10573--CALL    10582--CALL    10585--CALL
     10586--CALL    10600--CALL    10613--CALL    11256--CALL    11271--CALL    11286--CALL
SC_BCGMRQS
      9910**DCL-ENT 11132--CALL
SC_BCGPRL
      9904**DCL-ENT 11437--CALL    11440--CALL    11455--CALL
SC_BCGQRL
      9903**DCL-ENT 11105--CALL
SC_CGBLTB
      9906**DCL-ENT 10773--CALL
SC_DCGBRL
      9907**DCL-ENT 11201--CALL    11210--CALL    11224--CALL    11233--CALL    11299--CALL    11302--CALL
     11304--CALL
SSR$REG
      9924**DCL-ENT 10596--CALL
SSR$RUE
      9925**DCL-ENT 10331--CALL
SSS$SYSTIME
      9926**DCL-ENT 11507--CALL
SSS$XSYSTIME
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:315  
      9927**DCL-ENT 10505--CALL
STA$
      9066**DCL      6848--IMP-PTR 10239<<ASSIGN  10304>>ASSIGN  10305>>ASSIGN  10315>>CALL    10317>>IF
     10324>>ASSIGN  10324>>ASSIGN  10325>>ASSIGN  10326>>ASSIGN  10328>>CALL    10330>>CALL    10385<<ASSIGN
     10387>>CALL    10511>>CALL    10582>>IF      10583>>ASSIGN  10585>>IF      10586>>IF      10587>>ASSIGN
     10587>>ASSIGN  10589>>CALL    10591>>ASSIGN  10592>>ASSIGN  10598>>CALL    10600>>IF      10601>>ASSIGN
     10602>>ASSIGN  10604>>CALL    11166<<ASSIGN  11167>>DOWHILE 11168>>CALL    11177>>ASSIGN  11178<<ASSIGN
STA_INIT
      9087**DCL     10539>>ASSIGN
STA_INIT.ACTTYC
      9139**DCL      9143--REDEF
STA_INIT.DCBLNK$
      9146**DCL      9149--REDEF    9153--REDEF
STA_INIT.EVCNT
      9232**DCL      9235--REDEF
STA_INIT.EVNT
      9198**DCL      9202--REDEF    9205--REDEF
STA_INIT.OPNBLKED
      9259**DCL      9262--REDEF
STA_INIT.OPNREJ
      9265**DCL      9267--REDEF
STA_INIT.SUCCREAD
      9188**DCL      9192--REDEF
STA_INIT.TCOUNT
      9317**DCL      9323--REDEF
STA_INIT.VGOT$
      9302**DCL      9306--REDEF    9310--REDEF
TEMP IN PROCEDURE TRYGET
     11253**DCL     11282<<ASSIGN  11287>>ASSIGN
TRY IN PROCEDURE TRYGET
     11287**LABEL   11285--GOTO
TRYGET
     11251**PROC    11153--CALL    11168--CALL
UNBLOCKM IN PROCEDURE UNBLOCKS
     10339**ENTRY   10248--CALL    11155--CALL
UNBLOCKS
PL6.E3A0      #002=KQM$GETP File=KQM$MM.:E05TSI                                  WED 07/30/97 01:33 Page:316  
     10297**PROC    10240--CALL    11170--CALL
USR# IN PROCEDURE UNBLOCKS
     10301**DCL     10326<<ASSIGN  10331>>IF      10331<>CALL
WARN IN PROCEDURE GETBLKP
     10737**LABEL   10733--GOTO
