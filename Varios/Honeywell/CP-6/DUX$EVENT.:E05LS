VERSION E05

PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:1    
        1        1        /*M* DUX$EVENT - M$EVENT handler for events reported to DELTA.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8
        9        9        /*P* NAME: DUX$EVENT.
       10       10             PURPOSE:  To process event conditions reported to DELTA.
       11       11        */
       12       12
       13       13        DUX$EVENT: PROC ASYNC;
       14       14
       15       15        %INCLUDE CP_6;
       16       96        %INCLUDE DU_SCODE_C;
       17      109        %INCLUDE DD$BASED;
       18     1412        %FPRG$CONTEXT(NAME=FPRG$CONTEXT,STCLASS="BASED(FPRG$)");
       19     1475        %INCLUDE XUH_MACRO_C;
       20     1559        %INCLUDE DD_SD_M;
       21     2895        %S_D;
       22     4213        %INCLUDE DD_DEBUG_C;
       23     4234
       24     4235                                                /* External Data */
       25     4236    1   DCL B$TCB$ PTR SYMREF READONLY;
       26     4237
       27     4238                                                /* Entry DCLs */
       28     4239    1   DCL DFR$EVENTRPT ENTRY(1);
       29     4240                                                /* Internal Data */
       30     4241        %FPT_SCREECH (FPTN=SNAP_EVENT,STCLASS=SYMREF READONLY);
       31     4255        %VLP_SCODE (FPTN=SC_EVENT, STCLASS=SYMREF READONLY);
       32     4316    1   DCL FPRG$ PTR;
       33     4317    1   DCL DCBNO UBIN;
       34     4318    1   DCL NOT_DELTA BIT(1) ALIGNED;
       35     4319
       36     4320                                                /* BASED Structures */
       37     4321        %B$TCB;
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:2    
       38     4324        %B$EVNT;
       39     4337        %B$FPRG;
       40     4370        %B$COMIO;
       41     4383
       42     4384                                                /* EQUs */
       43     4385        %SUB_EXC;
       44     4432        %F$DCB;
       45     4489
       46     4490        %EJECT;
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:3    
       47     4491        /*
       48     4492           First check to insure that this is a type of event that should
       49     4493           be reported to the event handler.
       50     4494        */
       51     4495    2        DO INHIBIT;
       52     4496    2             NOT_DELTA = '0'B;
       53     4497        /*        IF S_D.XCONING THEN RETURN;  */ /* COMMENTED OUT FOR STAR 35453 */
       54     4498    2             IF B$TCB$->B$TCB.STK$->B$EVNT.SUBC = %SUBC_FPRG# AND
       55     4499    2               B$TCB$->B$TCB.STK$->B$FPRG.SUBC2 = %SUBC2_AFD# AND
       56     4500    2               S_D.INT#
       57     4501    3             THEN DO;
       58     4502    3                  S_D.OPDCBNO = B$TCB$->B$TCB.STK$->B$FPRG.DCBNO;
       59     4503    3                  S_D.AFD# = '1'B;
       60     4504    3                  S_D.INT# = '0'B;
       61     4505    3                  RETURN;
       62     4506    3                END;
       63     4507    2             IF B$TCB$->B$TCB.STK$->B$EVNT.SUBC ~= %SUBC_COMIO# AND
       64     4508    2               B$TCB$->B$TCB.STK$->B$EVNT.SUBC ~= %SUBC_FPRG#
       65     4509    3             THEN DO;
       66     4510    3   TAKE_SNAP:     ;
       67     4511    3                  REMEMBER NEVER IN S_D.SCREECH_IC;
       68     4512    3                  CALL M$SCREECH(SNAP_EVENT) ALTRET(NEVER);
       69     4513    3   NEVER:         ;
       70     4514    3                  RETURN;
       71     4515    3                END;
       72     4516
       73     4517        /*S* SCREECH_CODE: DUX-S$DUEVENT
       74     4518             TYPE: SNAP
       75     4519             MESSAGE: Unexpected event reported to DELTA.
       76     4520             REMARKS: Currently, DELTA only expects a communications I/O event
       77     4521                      to indicate that there is a message to be read from
       78     4522                      DELTA_F on the FEP.
       79     4523        */
       80     4524
       81     4525
       82     4526        /*
       83     4527           Post a bit in the context for the specified FPRG so that we will
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:4    
       84     4528           read the message later.
       85     4529        */
       86     4530    2             IF S_D.DEBUGA(%DB@EVENT)
       87     4531    3             THEN DO;
       88     4532    3                  CALL DFR$EVENTRPT(%DB@EVENT);
       89     4533    3                END;
       90     4534    2             DCBNO = B$TCB$->B$TCB.STK$->B$COMIO.EVID;
       91     4535    2             FPRG$ = S_D.FPRG_CONTEXT$;
       92     4536    2             IF FPRG$ = ADDR(NIL)
       93     4537    2             THEN RETURN;
       94     4538    3             DO WHILE (FPRG$CONTEXT.DCBNO ~= DCBNO AND FPRG$ ~= ADDR(NIL));
       95     4539    3                  FPRG$ = FPRG$CONTEXT.NEXT$;
       96     4540    3                  IF FPRG$ = ADDR(NIL)
       97     4541    3                  THEN GOTO TAKE_SNAP;
       98     4542    3                  ELSE RETURN;
       99     4543    3                END;
      100     4544
      101     4545    2             IF B$TCB$ -> B$TCB.STK$ -> B$COMIO.SUBC2 ~= %SUBC2_DATA_RQS#
      102     4546    3             THEN DO;
      103     4547    3                  FPRG$CONTEXT.READ_FD = '1'B;
      104     4548    3                  FPRG$CONTEXT.STATE = %STOPPED;
      105     4549    3                END;
      106     4550
      107     4551        /*
      108     4552           Then simply return to where we we interrupted.
      109     4553        */
      110     4554    2             RETURN;
      111     4555
      112     4556    2           END;
      113     4557    1   END DUX$EVENT;

PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:5    
--  Include file information  --

   DD_DEBUG_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DU_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUX$EVENT.

   Procedure DUX$EVENT requires 78 words for executable code.
   Procedure DUX$EVENT requires 6 words of local(AUTO) storage.

    No errors detected in file DUX$EVENT.:E05TSI    .

PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:6    

 Object Unit name= DUX$EVENT                                  File name= DUX$EVENT.:E05TOU
 UTS= JUL 29 '97 15:03:55.04 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    78    116  DUX$EVENT
    2  RoData even  none     2      2  DUX$EVENT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes     Async       0  DUX$EVENT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 DFR$EVENTRPT
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    S_D$                             r    B$TCB$
r    SNAP_EVENT                            B_VECTNIL
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:7    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:8    


        1        1        /*M* DUX$EVENT - M$EVENT handler for events reported to DELTA.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8
        9        9        /*P* NAME: DUX$EVENT.
       10       10             PURPOSE:  To process event conditions reported to DELTA.
       11       11        */
       12       12
       13       13        DUX$EVENT: PROC ASYNC;

     13  1 000000   000000 700200 xent  DUX$EVENT    TSX0  ! X66_AAUTO
         1 000001   000006 000000                    ZERO    6,0

       14       14
       15       15        %INCLUDE CP_6;
       16       96        %INCLUDE DU_SCODE_C;
       17      109        %INCLUDE DD$BASED;
       18     1412        %FPRG$CONTEXT(NAME=FPRG$CONTEXT,STCLASS="BASED(FPRG$)");
       19     1475        %INCLUDE XUH_MACRO_C;
       20     1559        %INCLUDE DD_SD_M;
       21     2895        %S_D;
       22     4213        %INCLUDE DD_DEBUG_C;
       23     4234
       24     4235                                                /* External Data */
       25     4236    1   DCL B$TCB$ PTR SYMREF READONLY;
       26     4237
       27     4238                                                /* Entry DCLs */
       28     4239    1   DCL DFR$EVENTRPT ENTRY(1);
       29     4240                                                /* Internal Data */
       30     4241        %FPT_SCREECH (FPTN=SNAP_EVENT,STCLASS=SYMREF READONLY);
       31     4255        %VLP_SCODE (FPTN=SC_EVENT, STCLASS=SYMREF READONLY);
       32     4316    1   DCL FPRG$ PTR;
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:9    
       33     4317    1   DCL DCBNO UBIN;
       34     4318    1   DCL NOT_DELTA BIT(1) ALIGNED;
       35     4319
       36     4320                                                /* BASED Structures */
       37     4321        %B$TCB;
       38     4324        %B$EVNT;
       39     4337        %B$FPRG;
       40     4370        %B$COMIO;
       41     4383
       42     4384                                                /* EQUs */
       43     4385        %SUB_EXC;
       44     4432        %F$DCB;
       45     4489
       46     4490        %EJECT;
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:10   
       47     4491        /*
       48     4492           First check to insure that this is a type of event that should
       49     4493           be reported to the event handler.
       50     4494        */
       51     4495    2        DO INHIBIT;

       52     4496    2             NOT_DELTA = '0'B;

   4496  1 000002   200005 450300                    STZ   ! NOT_DELTA,,AUTO

       53     4497        /*        IF S_D.XCONING THEN RETURN;  */ /* COMMENTED OUT FOR STAR 35453 */
       54     4498    2             IF B$TCB$->B$TCB.STK$->B$EVNT.SUBC = %SUBC_FPRG# AND

   4498  1 000003   000000 470600 xsym               LDP0  ! B$TCB$
         1 000004   000001 471700                    LDP1  ! 1,,PR0
         1 000005   100100 720300                    LXL0  ! 64,,PR1
         1 000006   000005 100203                    CMPX0 ! 5,DU
         1 000007   000026 601200 1                  TNZ   ! s:4507
         1 000010   100104 236300                    LDQ   ! 68,,PR1
         1 000011   000777 376207                    ANQ   ! 511,DL
         1 000012   000003 116207                    CMPQ  ! 3,DL
         1 000013   000026 601200 1                  TNZ   ! s:4507
         1 000014   000000 473600 xsym               LDP3  ! S_D$
         1 000015   306716 234300                    SZN   ! 3534,,PR3
         1 000016   000026 605200 1                  TPL   ! s:4507

       55     4499    2               B$TCB$->B$TCB.STK$->B$FPRG.SUBC2 = %SUBC2_AFD# AND
       56     4500    2               S_D.INT#
       57     4501    3             THEN DO;

       58     4502    3                  S_D.OPDCBNO = B$TCB$->B$TCB.STK$->B$FPRG.DCBNO;

   4502  1 000017   100104 236300                    LDQ   ! 68,,PR1
         1 000020   000022 772200                    QRL   ! 18
         1 000021   306720 756300                    STQ   ! 3536,,PR3

       59     4503    3                  S_D.AFD# = '1'B;
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:11   

   4503  1 000022   400000 236203                    LDQ   ! -131072,DU
         1 000023   306717 756300                    STQ   ! 3535,,PR3

       60     4504    3                  S_D.INT# = '0'B;

   4504  1 000024   306716 450300                    STZ   ! 3534,,PR3

       61     4505    3                  RETURN;

   4505  1 000025   000000 702200 xent               TSX2  ! X66_AARET

       62     4506    3                END;
       63     4507    2             IF B$TCB$->B$TCB.STK$->B$EVNT.SUBC ~= %SUBC_COMIO# AND

   4507  1 000026   000006 100203                    CMPX0 ! 6,DU
         1 000027   000043 600200 1                  TZE   ! s:4530
         1 000030   000005 100203                    CMPX0 ! 5,DU
         1 000031   000043 600200 1                  TZE   ! s:4530

       64     4508    2               B$TCB$->B$TCB.STK$->B$EVNT.SUBC ~= %SUBC_FPRG#
       65     4509    3             THEN DO;

   4505  1 000032                       TAKE_SNAP    null
       66     4510    3   TAKE_SNAP:     ;
       67     4511    3                  REMEMBER NEVER IN S_D.SCREECH_IC;

   4511  1 000032   000042 635200 1                  EAA   ! NEVER
         1 000033   000000 470600 xsym               LDP0  ! S_D$
         1 000034   005250 452700                    STP2  ! 2728,,PR0
         1 000035   005251 755300                    STA   ! 2729,,PR0

       68     4512    3                  CALL M$SCREECH(SNAP_EVENT) ALTRET(NEVER);

   4512  1 000036   000000 630600 xsym               EPPR0 ! SNAP_EVENT
         1 000037   400013 713600                    CLIMB ! alt,+11
         1 000040   401000 401760                    pmme    nvectors=3
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:12   
         1 000041   000042 702200 1                  TSX2  ! NEVER

   4512  1 000042                       NEVER        null
       69     4513    3   NEVER:         ;
       70     4514    3                  RETURN;

   4514  1 000042   000000 702200 xent               TSX2  ! X66_AARET

       71     4515    3                END;
       72     4516
       73     4517        /*S* SCREECH_CODE: DUX-S$DUEVENT
       74     4518             TYPE: SNAP
       75     4519             MESSAGE: Unexpected event reported to DELTA.
       76     4520             REMARKS: Currently, DELTA only expects a communications I/O event
       77     4521                      to indicate that there is a message to be read from
       78     4522                      DELTA_F on the FEP.
       79     4523        */
       80     4524
       81     4525
       82     4526        /*
       83     4527           Post a bit in the context for the specified FPRG so that we will
       84     4528           read the message later.
       85     4529        */
       86     4530    2             IF S_D.DEBUGA(%DB@EVENT)

   4530  1 000043   000000 473600 xsym               LDP3  ! S_D$
         1 000044   300053 236300                    LDQ   ! 43,,PR3
         1 000045   002000 316207                    CANQ  ! 1024,DL
         1 000046   000053 600200 1                  TZE   ! s:4534

       87     4531    3             THEN DO;

       88     4532    3                  CALL DFR$EVENTRPT(%DB@EVENT);

   4532  1 000047   000001 630600 2                  EPPR0 ! 1
         1 000050   000017 631600 xsym               EPPR1 ! B_VECTNIL+15
         1 000051   000000 701200 xent               TSX1  ! DFR$EVENTRPT
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:13   
         1 000052   000000 011200                    NOP   ! 0

       89     4533    3                END;

       90     4534    2             DCBNO = B$TCB$->B$TCB.STK$->B$COMIO.EVID;

   4534  1 000053   000000 470600 xsym               LDP0  ! B$TCB$
         1 000054   000001 471700                    LDP1  ! 1,,PR0
         1 000055   100101 235300                    LDA   ! 65,,PR1
         1 000056   200004 755300                    STA   ! DCBNO,,AUTO

       91     4535    2             FPRG$ = S_D.FPRG_CONTEXT$;

   4535  1 000057   000000 473600 xsym               LDP3  ! S_D$
         1 000060   300076 236300                    LDQ   ! 62,,PR3
         1 000061   200003 756300                    STQ   ! FPRG$,,AUTO

       92     4536    2             IF FPRG$ = ADDR(NIL)

   4536  1 000062   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000063   000065 601200 1                  TNZ   ! s:4538

       93     4537    2             THEN RETURN;

   4537  1 000064   000000 702200 xent               TSX2  ! X66_AARET

       94     4538    3             DO WHILE (FPRG$CONTEXT.DCBNO ~= DCBNO AND FPRG$ ~= ADDR(NIL));

   4538  1 000065   000074 710200 1                  TRA   ! s:4543

       95     4539    3                  FPRG$ = FPRG$CONTEXT.NEXT$;

   4539  1 000066   200003 470700                    LDP0  ! FPRG$,,AUTO
         1 000067   000000 236300                    LDQ   ! 0,,PR0
         1 000070   200003 756300                    STQ   ! FPRG$,,AUTO

       96     4540    3                  IF FPRG$ = ADDR(NIL)
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:14   

   4540  1 000071   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000072   000032 600200 1                  TZE   ! TAKE_SNAP

       97     4541    3                  THEN GOTO TAKE_SNAP;
       98     4542    3                  ELSE RETURN;

   4542  1 000073   000000 702200 xent               TSX2  ! X66_AARET

       99     4543    3                END;

   4543  1 000074   200003 474700                    LDP4  ! FPRG$,,AUTO
         1 000075   400001 236300                    LDQ   ! 1,,PR4
         1 000076   777777 376207                    ANQ   ! -1,DL
         1 000077   200004 116300                    CMPQ  ! DCBNO,,AUTO
         1 000100   000104 600200 1                  TZE   ! s:4545
         1 000101   200003 236300                    LDQ   ! FPRG$,,AUTO
         1 000102   000001 116200 xsym               CMPQ  ! B_VECTNIL+1
         1 000103   000066 601200 1                  TNZ   ! s:4539

      100     4544
      101     4545    2             IF B$TCB$ -> B$TCB.STK$ -> B$COMIO.SUBC2 ~= %SUBC2_DATA_RQS#

   4545  1 000104   100104 236300                    LDQ   ! 68,,PR1
         1 000105   000777 376207                    ANQ   ! 511,DL
         1 000106   000001 116207                    CMPQ  ! 1,DL
         1 000107   000114 600200 1                  TZE   ! s:4554

      102     4546    3             THEN DO;

      103     4547    3                  FPRG$CONTEXT.READ_FD = '1'B;

   4547  1 000110   400000 236203                    LDQ   ! -131072,DU
         1 000111   400001 256300                    ORSQ  ! 1,,PR4

      104     4548    3                  FPRG$CONTEXT.STATE = %STOPPED;

PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:15   
   4548  1 000112   000002 236203                    LDQ   ! 2,DU
         1 000113   400001 552320                    STBQ  ! 1,'20'O,PR4

      105     4549    3                END;

      106     4550
      107     4551        /*
      108     4552           Then simply return to where we we interrupted.
      109     4553        */
      110     4554    2             RETURN;

   4554  1 000114   000000 702200 xent               TSX2  ! X66_AARET

      111     4555
      112     4556    2           END;

      113     4557    1   END DUX$EVENT;

   4557  1 000115   000000 702200 xent               TSX2  ! X66_AARET

(unnamed)
 Sect OctLoc
   2     000   000000 000031   000000 006000                                    ........

PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:16   
--  Include file information  --

   DD_DEBUG_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DU_SCODE_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DUX$EVENT.

   Procedure DUX$EVENT requires 78 words for executable code.
   Procedure DUX$EVENT requires 6 words of local(AUTO) storage.

    No errors detected in file DUX$EVENT.:E05TSI    .
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:18   
          MINI XREF LISTING

B$COMIO.ARS
      4380**DCL      4380--REDEF
B$COMIO.CODE
      4373**DCL      4373--REDEF    4374--REDEF    4374--REDEF
B$COMIO.ERR.ERR#
      4375**DCL      4375--REDEF
B$COMIO.EVID
      4374**DCL      4374--REDEF    4374--REDEF    4534>>ASSIGN
B$COMIO.SUBC2
      4380**DCL      4545>>IF
B$EVNT.CODE
      4326**DCL      4326--REDEF    4327--REDEF    4327--REDEF
B$EVNT.ERR.ERR#
      4328**DCL      4328--REDEF
B$EVNT.EVID
      4327**DCL      4327--REDEF    4327--REDEF
B$EVNT.SUBC
      4327**DCL      4498>>IF       4507>>IF       4507>>IF
B$FPRG.CODE
      4340**DCL      4340--REDEF    4341--REDEF    4341--REDEF
B$FPRG.DCBNO
      4347**DCL      4502>>ASSIGN
B$FPRG.ERR.ERR#
      4342**DCL      4342--REDEF
B$FPRG.EVID
      4341**DCL      4341--REDEF    4341--REDEF
B$FPRG.SUBC2
      4347**DCL      4498>>IF
B$TCB.STK$
      4322**DCL      4498>>IF       4498>>IF       4502>>ASSIGN   4507>>IF       4507>>IF       4534>>ASSIGN
      4545>>IF
B$TCB$
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:19   
      4236**DCL      4498>>IF       4498>>IF       4502>>ASSIGN   4507>>IF       4507>>IF       4534>>ASSIGN
      4545>>IF
DCBNO
      4317**DCL      4534<<ASSIGN   4538>>DOWHILE
DFR$EVENTRPT
      4239**DCL-ENT  4532--CALL
F$DCB.ACTPOS
      4465**DCL      4465--REDEF
F$DCB.ARS#
      4439**DCL      4439--REDEF
F$DCB.ATTR
      4458**DCL      4459--REDEF
F$DCB.BORROW
      4473**DCL      4473--REDEF    4473--REDEF    4473--REDEF
F$DCB.DCBNAME.L
      4487**DCL      4487--IMP-SIZ
F$DCB.EOMCHAR#
      4443**DCL      4443--REDEF
F$DCB.FLDID
      4468**DCL      4468--REDEF
F$DCB.FORM$
      4462**DCL      4462--REDEF
F$DCB.FSECT
      4478**DCL      4478--REDEF
F$DCB.FSN#
      4455**DCL      4455--REDEF    4455--REDEF    4456--REDEF
F$DCB.HEADER$
      4461**DCL      4461--REDEF
F$DCB.IXTNSIZE#
      4459**DCL      4459--REDEF
F$DCB.LASTSTA$
      4448**DCL      4448--REDEF
F$DCB.LVL
      4474**DCL      4474--REDEF
F$DCB.NAME#.C
      4449**DCL      4449--REDEF
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:20   
F$DCB.NOEOF
      4471**DCL      4471--REDEF
F$DCB.NRECS#
      4460**DCL      4460--REDEF
F$DCB.NRECX
      4479**DCL      4479--REDEF
F$DCB.OHDR
      4471**DCL      4471--REDEF
F$DCB.ORG#
      4454**DCL      4454--REDEF
F$DCB.PRECNO
      4477**DCL      4477--REDEF
F$DCB.RCSZ
      4483**DCL      4483--REDEF
F$DCB.RES#
      4450**DCL      4450--REDEF
F$DCB.SETX
      4462**DCL      4462--REDEF
F$DCB.TAB$
      4462**DCL      4462--REDEF
F$DCB.TDA
      4476**DCL      4477--REDEF
F$DCB.WSN#
      4450**DCL      4450--REDEF
FPRG$
      4316**DCL      1413--IMP-PTR  4535<<ASSIGN   4536>>IF       4538>>DOWHILE  4538>>DOWHILE  4539<<ASSIGN
      4539>>ASSIGN   4540>>IF       4547>>ASSIGN   4548>>ASSIGN
FPRG$CONTEXT.DCBNO
      1430**DCL      4538>>DOWHILE
FPRG$CONTEXT.NEXT$
      1414**DCL      4539>>ASSIGN
FPRG$CONTEXT.READ_FD
      1416**DCL      4547<<ASSIGN
FPRG$CONTEXT.STATE
      1428**DCL      4548<<ASSIGN
M$SCREECH
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:21   
        38**DCL-ENT  4512--CALL
NEVER
      4512**LABEL    4511--REMEMBR  4512--CALLALT
NOT_DELTA
      4318**DCL      4496<<ASSIGN
SNAP_EVENT
      4252**DCL      4512<>CALL
S_D.AFD#
      3928**DCL      4503<<ASSIGN
S_D.CURRENT_CHANNEL
      3847**DCL      3849--REDEF
S_D.DEBUGA
      2999**DCL      3001--REDEF    4530>>IF
S_D.EIS
      3957**DCL      3986--REDEF
S_D.FPRG_CONTEXT$
      3039**DCL      4535>>ASSIGN
S_D.HOST_MESSAGE_BUF_REMOTE
      3890**DCL      3891--REDEF    3905--REDEF
S_D.INT#
      3926**DCL      4498>>IF       4504<<ASSIGN
S_D.JDE
      3504**DCL      3505--REDEF
S_D.L$.VALUE
      3057**DCL      3063--REDEF    3071--REDEF    3074--REDEF    3077--REDEF    3080--REDEF
S_D.L$.VALUE.L
      3058**DCL      3059--REDEF    3060--REDEF
S_D.L6_MESSAGE_BUF
      3911**DCL      3913--REDEF
S_D.OPDCBNO
      3930**DCL      4502<<ASSIGN
S_D.OUTPUT
      3877**DCL      3879--REDEF
S_D.REMOTE_MSG.FNCC
      3896**DCL      3897--REDEF
S_D.REMOTE_MSG.STXC
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:22   
      3892**DCL      3893--REDEF
S_D.REMOTE_MSG.SUBFNCC
      3900**DCL      3901--REDEF
S_D.SCREECH_IC
      3748**DCL      4511<<REMEMBR
S_D.SV
      2956**DCL      2977--REDEF
S_D$
      4208**DCL      2904--IMP-PTR  4498>>IF       4502>>ASSIGN   4503>>ASSIGN   4504>>ASSIGN   4511>>REMEMBR
      4530>>IF       4535>>ASSIGN
TAKE_SNAP
      4505**LABEL    4541--GOTO
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:23   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:24   
              MINI UREF LISTING

DUX$EVENT      13**PROC
M$ACCT      41**DCL-ENT
M$ACTIVATE      44**DCL-ENT
M$ALIB      37**DCL-ENT
M$ASUSER      39**DCL-ENT
M$ATTACH      46**DCL-ENT
M$BADPP      64**DCL-ENT
M$CGCTL      45**DCL-ENT
M$CGINFO      45**DCL-ENT
M$CHECK      26**DCL-ENT
M$CHGUNIT      84**DCL-ENT
M$CLOSE      24**DCL-ENT
M$CLRSTK      82**DCL-ENT
M$CMDVAR      93**DCL-ENT
M$CONFIG      54**DCL-ENT
M$CORRES      29**DCL-ENT
M$CPEXIT      38**DCL-ENT
M$CVM      62**DCL-ENT
M$CVOL      27**DCL-ENT
M$DCLFLD      54**DCL-ENT
M$DEACTIVATE      44**DCL-ENT
M$DELREC      26**DCL-ENT
M$DEQ      91**DCL-ENT
M$DETACH      46**DCL-ENT
M$DEVICE      28**DCL-ENT
M$DISPLAY      91**DCL-ENT
M$DISPRES      31**DCL-ENT
M$DLIB      37**DCL-ENT
M$DRIBBLE      54**DCL-ENT
M$DRTN      82**DCL-ENT
M$DSUSER      39**DCL-ENT
M$ENQ      90**DCL-ENT
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:25   
M$EOM      49**DCL-ENT
M$ERASE      55**DCL-ENT
M$ERR      36**DCL-ENT
M$ERRMSG      87**DCL-ENT
M$EVENT      79**DCL-ENT
M$EXHUME      88**DCL-ENT
M$EXIT      36**DCL-ENT
M$EXTEND      28**DCL-ENT
M$FDP      60**DCL-ENT
M$FDS      59**DCL-ENT
M$FEBOOT      52**DCL-ENT
M$FECTL      53**DCL-ENT
M$FEDUMP      52**DCL-ENT
M$FID      87**DCL-ENT
M$FINDPROC      41**DCL-ENT
M$FSUSER      39**DCL-ENT
M$FVP      61**DCL-ENT
M$FWCG      45**DCL-ENT
M$GBPL      65**DCL-ENT
M$GDDL      61**DCL-ENT
M$GDP      60**DCL-ENT
M$GDS      59**DCL-ENT
M$GETDCB      30**DCL-ENT
M$GETMOUSE      70**DCL-ENT
M$GETPM      71**DCL-ENT
M$GJOB      89**DCL-ENT
M$GLINEATTR      49**DCL-ENT
M$GOODPP      64**DCL-ENT
M$GPLATEN      57**DCL-ENT
M$GPROMPT      56**DCL-ENT
M$GTRMATTR      50**DCL-ENT
M$GTRMCTL      48**DCL-ENT
M$GTRMTAB      51**DCL-ENT
M$GVP      60**DCL-ENT
M$HELP      87**DCL-ENT
M$INT      79**DCL-ENT
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:26   
M$INTRTN      40**DCL-ENT
M$IOQ      75**DCL-ENT
M$JOBSTATS      89**DCL-ENT
M$KEYIN      29**DCL-ENT
M$LDEV      24**DCL-ENT
M$LDTRC      37**DCL-ENT
M$LIMIT      30**DCL-ENT
M$LINES      29**DCL-ENT
M$LINK      36**DCL-ENT
M$MADMUCK      32**DCL-ENT
M$MAKUSER      63**DCL-ENT
M$MBS      31**DCL-ENT
M$MDFFLD      55**DCL-ENT
M$MERC      80**DCL-ENT
M$MERCS      81**DCL-ENT
M$MIRROR      75**DCL-ENT
M$MONINFO      92**DCL-ENT
M$MPL      65**DCL-ENT
M$NODEINFO      56**DCL-ENT
M$NXTUSR      90**DCL-ENT
M$OCMSG      88**DCL-ENT
M$OLAY      36**DCL-ENT
M$OPEN      24**DCL-ENT
M$PAS      65**DCL-ENT
M$PATHCON      88**DCL-ENT
M$PDS      59**DCL-ENT
M$PFIL      26**DCL-ENT
M$PLATEN      50**DCL-ENT
M$PRECORD      28**DCL-ENT
M$PROCNAME      41**DCL-ENT
M$PROFILE      52**DCL-ENT
M$PROMPT      48**DCL-ENT
M$RACST      32**DCL-ENT
M$RDSYSLOG      73**DCL-ENT
M$READ      25**DCL-ENT
M$RELDCB      30**DCL-ENT
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:27   
M$RELRES      31**DCL-ENT
M$RELSTARF      33**DCL-ENT
M$REM      33**DCL-ENT
M$RENV      80**DCL-ENT
M$REQUIRE      32**DCL-ENT
M$RETRY      81**DCL-ENT
M$RETRYS      81**DCL-ENT
M$REW      27**DCL-ENT
M$RLSFLD      55**DCL-ENT
M$RPRIV      83**DCL-ENT
M$RSPP      62**DCL-ENT
M$RSWITCH      84**DCL-ENT
M$RUE      90**DCL-ENT
M$SAD      63**DCL-ENT
M$SAVE      39**DCL-ENT
M$SCON      40**DCL-ENT
M$SENV      80**DCL-ENT
M$SETFMA      24**DCL-ENT
M$SETFP      53**DCL-ENT
M$SINPUT      51**DCL-ENT
M$SLCFLD      56**DCL-ENT
M$SMOUSE      70**DCL-ENT
M$SMPRT      62**DCL-ENT
M$SPRIV      83**DCL-ENT
M$SSC      63**DCL-ENT
M$SSWITCH      83**DCL-ENT
M$STATE      92**DCL-ENT
M$STD      64**DCL-ENT
M$STIMER      78**DCL-ENT
M$STLPP      61**DCL-ENT
M$STRAP      78**DCL-ENT
M$STRMATTR      50**DCL-ENT
M$STRMCTL      48**DCL-ENT
M$STRMTAB      51**DCL-ENT
M$SYMBIO      89**DCL-ENT
M$SYSCON      75**DCL-ENT
PL6.E3A0      #001=DUX$EVENT File=DUX$EVENT.:E05TSI                              TUE 07/29/97 15:03 Page:28   
M$SYSID      93**DCL-ENT
M$TDCLOSE      74**DCL-ENT
M$TDIO      74**DCL-ENT
M$TDOPEN      73**DCL-ENT
M$TDREQCPU      74**DCL-ENT
M$TEMPWROC      68**DCL-ENT
M$TIME      91**DCL-ENT
M$TRAP      78**DCL-ENT
M$TRMISC      53**DCL-ENT
M$TRMPRG      49**DCL-ENT
M$TRTN      82**DCL-ENT
M$TRUNC      25**DCL-ENT
M$TTIMER      78**DCL-ENT
M$UC      48**DCL
M$UMPL      65**DCL-ENT
M$UNFID      87**DCL-ENT
M$UNLATCH      44**DCL-ENT
M$UNSHARE      41**DCL-ENT
M$USRFIELD      84**DCL-ENT
M$VIRTUAL      59**DCL-ENT
M$WAIT      82**DCL-ENT
M$WEOF      27**DCL-ENT
M$WRITE      25**DCL-ENT
M$WRSYSLOG      73**DCL-ENT
M$XCON      79**DCL-ENT
M$XCONRTN      40**DCL-ENT
M$XEQTIME      92**DCL-ENT
M$XFLUSH      33**DCL-ENT
M$XMOUSE      70**DCL-ENT
M$XXX      36**DCL-ENT
M$YC      38**DCL-ENT
SC_EVENT    4270**DCL
