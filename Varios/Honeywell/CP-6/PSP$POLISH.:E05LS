VERSION E05

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:1    
        1        1        /*M*  PSP$POLISH  Process a STATS RPN list and return the resulting value     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSP$POLISH: PROC (RPN, VALUE);
        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386        %INCLUDE PS_PERR_C;
       12     5417        %REF_RPN;
       13     5428    1   DCL VALUE SBIN;
       14     5429    1   DCL I UBIN;
       15     5430    1   DCL J UBIN;
       16     5431    1   DCL MODE UBIN;
       17     5432    1   DCL OPCODE UBIN;
       18     5433    1   DCL ARG UBIN;
       19     5434    1   DCL LEFT SBIN;
       20     5435    1   DCL RIGHT SBIN;
       21     5436    1   DCL NEW_VALUE SBIN;
       22     5437    1   DCL OLD_VALUE SBIN;
       23     5438    1   DCL WASTE_CAN UBIN;
       24     5439    1   DCL P$ PTR;
       25     5440    1   DCL Q$ PTR;
       26     5441    1   DCL V_STACK (0:49) SBIN;
       27     5442    1   DCL V_INDEX UBIN;
       28     5443    1   DCL PSE$ERRMSG ENTRY (5);
       29     5444    1   DCL PSL$LOCATE ENTRY (3);
       30     5445    1   DCL PSL$EVAL ENTRY (3);
       31     5446    1   DCL PSL$CHOMP ENTRY (5);
       32     5447        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:2    
       33     5448    1   PUSH: PROC (VALUE);
       34     5449
       35     5450    2   DCL VALUE SBIN;
       36     5451
       37     5452    2      IF V_INDEX >= SIZEW(V_STACK)
       38     5453    2        THEN
       39     5454    2         CALL PSE$ERRMSG (E$PS_STACK_OVFLOW, SERIOUS#);
       40     5455
       41     5456    2      V_STACK(V_INDEX) = VALUE;
       42     5457
       43     5458    2      V_INDEX = V_INDEX + 1;
       44     5459
       45     5460    2      RETURN;
       46     5461
       47     5462    2   END PUSH;
       48     5463        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:3    
       49     5464    1      V_INDEX = 0;
       50     5465
       51     5466    2      DO I = 0 TO RPN.INFO.USED# - 1;
       52     5467
       53     5468    2         OPCODE = RPN.ITEM.OPCODE#(I);
       54     5469    2         ARG = RPN.ITEM.ARG#(I);
       55     5470
       56     5471    3         DO CASE (OPCODE);
       57     5472
       58     5473    3          CASE (PUSH_SYMBOL#);
       59     5474
       60     5475    3            IF V_TABLE.VAR$(ARG) = ADDR(NIL)
       61     5476    4              THEN DO;
       62     5477
       63     5478    4               J = V_TABLE.INDX(ARG);
       64     5479
       65     5480    4               CALL PSL$LOCATE (J, P$, Q$);
       66     5481
       67     5482    4               NEW_VALUE = P$ -> BLOCK.DATA(V_TABLE.OFFSET(ARG));
       68     5483    4               OLD_VALUE = Q$ -> BLOCK.DATA(V_TABLE.OFFSET(ARG));
       69     5484
       70     5485    4               END;
       71     5486
       72     5487    4              ELSE DO;
       73     5488
       74     5489    4               NEW_VALUE = V_TABLE.VAR$(ARG) -> SBIN_;
       75     5490    4               OLD_VALUE = PINCRW(ADDR(PS_OLD_COLLECT), POFFW(V_TABLE.VAR$(ARG),
       76     5491    4                ADDR(PS_COLLECT))) -> SBIN_;
       77     5492
       78     5493    4               END;
       79     5494
       80     5495    3            MODE = V_TABLE.MODE(ARG);
       81     5496
       82     5497    3            CALL PSL$CHOMP (OLD_VALUE, NEW_VALUE, MODE, WASTE_CAN, J);
       83     5498
       84     5499    3            CALL PUSH (J);
       85     5500
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:4    
       86     5501    3          CASE (PUSH_DECIMAL#);
       87     5502
       88     5503    3            CALL PUSH (ARG);
       89     5504        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:5    
       90     5505    3          CASE (UNARY_OPERATOR#);
       91     5506
       92     5507    3            LEFT = V_STACK (V_INDEX - 1);
       93     5508
       94     5509    4            DO CASE (ARG);
       95     5510
       96     5511    4             CASE (1 /* - */);
       97     5512
       98     5513    4               LEFT = -LEFT;
       99     5514
      100     5515    4             CASE (6 /* ~ */);
      101     5516
      102     5517    4               IF LEFT = 0
      103     5518    4                 THEN
      104     5519    4                  LEFT = 1;
      105     5520    4                 ELSE
      106     5521    4                  LEFT = 0;
      107     5522
      108     5523    4             END;
      109     5524
      110     5525    3            V_STACK (V_INDEX - 1) = LEFT;
      111     5526        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:6    
      112     5527    3          CASE (BINARY_OPERATOR#);
      113     5528
      114     5529    3            LEFT = V_STACK (V_INDEX - 2);
      115     5530    3            RIGHT = V_STACK (V_INDEX - 1);
      116     5531
      117     5532    4            DO CASE (ARG);
      118     5533
      119     5534    4             CASE (0 /* + */);
      120     5535
      121     5536    4               LEFT = LEFT + RIGHT;
      122     5537
      123     5538    4             CASE (1 /* - */);
      124     5539
      125     5540    4               LEFT = LEFT - RIGHT;
      126     5541
      127     5542    4             CASE (2 /* * */);
      128     5543
      129     5544    4               LEFT = LEFT * RIGHT;
      130     5545
      131     5546    4             CASE (3 /* / */);
      132     5547
      133     5548    4               IF RIGHT ~= 0
      134     5549    4                 THEN
      135     5550    4                  LEFT = LEFT / RIGHT;
      136     5551    4                 ELSE
      137     5552    4                  IF LEFT > 0
      138     5553    4                    THEN
      139     5554    4                     LEFT = 99999999;
      140     5555    4                    ELSE
      141     5556    4                     IF LEFT < 0
      142     5557    4                       THEN
      143     5558    4                        LEFT = -99999999;
      144     5559    4                       ELSE
      145     5560    4                        LEFT = 0;
      146     5561
      147     5562    4             CASE (4 /* & */);
      148     5563
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:7    
      149     5564    4               IF LEFT ~= 0 AND RIGHT ~= 0
      150     5565    4                 THEN
      151     5566    4                  LEFT = 1;
      152     5567    4                 ELSE
      153     5568    4                  LEFT = 0;
      154     5569
      155     5570    4             CASE (5 /* | */);
      156     5571
      157     5572    4               IF LEFT ~= 0 OR RIGHT ~= 0
      158     5573    4                 THEN
      159     5574    4                  LEFT = 1;
      160     5575    4                 ELSE
      161     5576    4                  LEFT = 0;
      162     5577
      163     5578    4             CASE (7 /* < */);
      164     5579
      165     5580    4               IF LEFT < RIGHT
      166     5581    4                 THEN
      167     5582    4                  LEFT = 1;
      168     5583    4                 ELSE
      169     5584    4                  LEFT = 0;
      170     5585
      171     5586    4             CASE (8 /* = */);
      172     5587
      173     5588    4               IF LEFT = RIGHT
      174     5589    4                 THEN
      175     5590    4                  LEFT = 1;
      176     5591    4                 ELSE
      177     5592    4                  LEFT = 0;
      178     5593
      179     5594    4             CASE (9 /* > */);
      180     5595
      181     5596    4               IF LEFT > RIGHT
      182     5597    4                 THEN
      183     5598    4                  LEFT = 1;
      184     5599    4                 ELSE
      185     5600    4                  LEFT = 0;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:8    
      186     5601
      187     5602    4             CASE (10 /* <= */);
      188     5603
      189     5604    4               IF LEFT <= RIGHT
      190     5605    4                 THEN
      191     5606    4                  LEFT = 1;
      192     5607    4                 ELSE
      193     5608    4                  LEFT = 0;
      194     5609
      195     5610    4             CASE (11 /* ~= */);
      196     5611
      197     5612    4               IF LEFT ~= RIGHT
      198     5613    4                 THEN
      199     5614    4                  LEFT = 1;
      200     5615    4                 ELSE
      201     5616    4                  LEFT = 0;
      202     5617
      203     5618    4             CASE (12 /* >= */);
      204     5619
      205     5620    4               IF LEFT >= RIGHT
      206     5621    4                 THEN
      207     5622    4                  LEFT = 1;
      208     5623    4                 ELSE
      209     5624    4                  LEFT = 0;
      210     5625
      211     5626    4             END;
      212     5627
      213     5628    3            V_STACK (V_INDEX - 2) = LEFT;
      214     5629
      215     5630    3            V_INDEX = V_INDEX - 1;
      216     5631
      217     5632    3          END;
      218     5633
      219     5634    2         END;
      220     5635
      221     5636    1      VALUE = V_STACK(0);
      222     5637
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:9    
      223     5638    1      RETURN;
      224     5639
      225     5640    1   END PSP$POLISH;

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:10   
--  Include file information  --

   PS_PERR_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSP$POLISH.

   Procedure PSP$POLISH requires 273 words for executable code.
   Procedure PSP$POLISH requires 78 words of local(AUTO) storage.

    No errors detected in file PSP$POLISH.:E05TSI    .

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:11   

 Object Unit name= PSP$POLISH                                 File name= PSP$POLISH.:E05TOU
 UTS= JUL 30 '97 04:36:48.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11   Proc  even  none   273    421  PSP$POLISH
   12  RoData even  none     6      6  PSP$POLISH

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    11      0   yes            yes      Std        2  PSP$POLISH
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:12   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 PSL$LOCATE
         yes           Std       5 PSL$CHOMP
         yes           Std       5 PSE$ERRMSG
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_BUFFER                             V_TABLE
     PS_COLLECT                            PS_OLD_COLLECT                        PS_STATS$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:13   


        1        1        /*M*  PSP$POLISH  Process a STATS RPN list and return the resulting value     */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* CLM=77,CRM=80,CRT=1,PLM=3,CTI=1,THI=2                                    */
        8        8        PSP$POLISH: PROC (RPN, VALUE);

      8 11 000000   000000 700200 xent  PSP$POLISH   TSX0  ! X66_AUTO_2
        11 000001   000116 000002                    ZERO    78,2
        11 000002   000024 710000 11                 TRA     s:5464

        9        9        %INCLUDE CP_6;
       10       90        %INCLUDE PS_DATA_R;
       11     5386        %INCLUDE PS_PERR_C;
       12     5417        %REF_RPN;
       13     5428    1   DCL VALUE SBIN;
       14     5429    1   DCL I UBIN;
       15     5430    1   DCL J UBIN;
       16     5431    1   DCL MODE UBIN;
       17     5432    1   DCL OPCODE UBIN;
       18     5433    1   DCL ARG UBIN;
       19     5434    1   DCL LEFT SBIN;
       20     5435    1   DCL RIGHT SBIN;
       21     5436    1   DCL NEW_VALUE SBIN;
       22     5437    1   DCL OLD_VALUE SBIN;
       23     5438    1   DCL WASTE_CAN UBIN;
       24     5439    1   DCL P$ PTR;
       25     5440    1   DCL Q$ PTR;
       26     5441    1   DCL V_STACK (0:49) SBIN;
       27     5442    1   DCL V_INDEX UBIN;
       28     5443    1   DCL PSE$ERRMSG ENTRY (5);
       29     5444    1   DCL PSL$LOCATE ENTRY (3);
       30     5445    1   DCL PSL$EVAL ENTRY (3);
       31     5446    1   DCL PSL$CHOMP ENTRY (5);
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:14   
       32     5447        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:15   
       33     5448    1   PUSH: PROC (VALUE);

   5448 11 000003   200106 741300       PUSH         STX1  ! V_INDEX+2,,AUTO

       34     5449
       35     5450    2   DCL VALUE SBIN;
       36     5451
       37     5452    2      IF V_INDEX >= SIZEW(V_STACK)

   5452 11 000004   200104 235100                    LDA     V_INDEX,,AUTO
        11 000005   000062 115007                    CMPA    50,DL
        11 000006   000013 602000 11                 TNC     s:5456

       38     5453    2        THEN
       39     5454    2         CALL PSE$ERRMSG (E$PS_STACK_OVFLOW, SERIOUS#);

   5454 11 000007   000001 630400 12                 EPPR0   1
        11 000010   000020 631400 xsym               EPPR1   B_VECTNIL+16
        11 000011   000000 701000 xent               TSX1    PSE$ERRMSG
        11 000012   000000 011000                    NOP     0

       40     5455
       41     5456    2      V_STACK(V_INDEX) = VALUE;

   5456 11 000013   200107 470500                    LDP0    @VALUE,,AUTO
        11 000014   200104 720100                    LXL0    V_INDEX,,AUTO
        11 000015   000000 235100                    LDA     0,,PR0
        11 000016   200022 755110                    STA     V_STACK,X0,AUTO

       42     5457
       43     5458    2      V_INDEX = V_INDEX + 1;

   5458 11 000017   200104 236100                    LDQ     V_INDEX,,AUTO
        11 000020   000001 036007                    ADLQ    1,DL
        11 000021   200104 756100                    STQ     V_INDEX,,AUTO

       44     5459
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:16   
       45     5460    2      RETURN;

   5460 11 000022   200106 221300                    LDX1  ! V_INDEX+2,,AUTO
        11 000023   000001 702211                    TSX2  ! 1,X1

       46     5461
       47     5462    2   END PUSH;
       48     5463        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:17   
       49     5464    1      V_INDEX = 0;

   5464 11 000024   200104 450100                    STZ     V_INDEX,,AUTO

       50     5465
       51     5466    2      DO I = 0 TO RPN.INFO.USED# - 1;

   5466 11 000025   200006 450100                    STZ     I,,AUTO
        11 000026   000406 710000 11                 TRA     s:5634+3

       52     5467
       53     5468    2         OPCODE = RPN.ITEM.OPCODE#(I);

   5468 11 000027   200003 470500                    LDP0    @RPN,,AUTO
        11 000030   200006 720100                    LXL0    I,,AUTO
        11 000031   000001 236110                    LDQ     1,X0,PR0
        11 000032   000033 772000                    QRL     27
        11 000033   200011 756100                    STQ     OPCODE,,AUTO

       54     5469    2         ARG = RPN.ITEM.ARG#(I);

   5469 11 000034   000001 236110                    LDQ     1,X0,PR0
        11 000035   000032 376000 xsym               ANQ     B_VECTNIL+26
        11 000036   200012 756100                    STQ     ARG,,AUTO

       55     5470
       56     5471    3         DO CASE (OPCODE);

   5471 11 000037   200011 235100                    LDA     OPCODE,,AUTO
        11 000040   000004 115007                    CMPA    4,DL
        11 000041   000043 602005 11                 TNC     s:5471+4,AL
        11 000042   000403 710000 11                 TRA     s:5634
        11 000043   000047 710000 11                 TRA     s:5475
        11 000044   000155 710000 11                 TRA     s:5503
        11 000045   000162 710000 11                 TRA     s:5507
        11 000046   000213 710000 11                 TRA     s:5529

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:18   
       57     5472
       58     5473    3          CASE (PUSH_SYMBOL#);

       59     5474
       60     5475    3            IF V_TABLE.VAR$(ARG) = ADDR(NIL)

   5475 11 000047   000005 402007                    MPY     5,DL
        11 000050   000000 236006 xsym               LDQ     V_TABLE,QL
        11 000051   000001 116000 xsym               CMPQ    B_VECTNIL+1
        11 000052   000105 601000 11                 TNZ     s:5489

       61     5476    4              THEN DO;

       62     5477
       63     5478    4               J = V_TABLE.INDX(ARG);

   5478 11 000053   200012 236100                    LDQ     ARG,,AUTO
        11 000054   000005 402007                    MPY     5,DL
        11 000055   000002 236006 xsym               LDQ     V_TABLE+2,QL
        11 000056   000033 772000                    QRL     27
        11 000057   200007 756100                    STQ     J,,AUTO

       64     5479
       65     5480    4               CALL PSL$LOCATE (J, P$, Q$);

   5480 11 000060   200021 631500                    EPPR1   Q$,,AUTO
        11 000061   200112 451500                    STP1    @VALUE+3,,AUTO
        11 000062   200020 633500                    EPPR3   P$,,AUTO
        11 000063   200111 453500                    STP3    @VALUE+2,,AUTO
        11 000064   200007 634500                    EPPR4   J,,AUTO
        11 000065   200110 454500                    STP4    @VALUE+1,,AUTO
        11 000066   200110 630500                    EPPR0   @VALUE+1,,AUTO
        11 000067   000021 631400 xsym               EPPR1   B_VECTNIL+17
        11 000070   000000 701000 xent               TSX1    PSL$LOCATE
        11 000071   000000 011000                    NOP     0

       66     5481
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:19   
       67     5482    4               NEW_VALUE = P$ -> BLOCK.DATA(V_TABLE.OFFSET(ARG));

   5482 11 000072   200012 236100                    LDQ     ARG,,AUTO
        11 000073   000005 402007                    MPY     5,DL
        11 000074   000002 220006 xsym               LDX0    V_TABLE+2,QL
        11 000075   000777 360003                    ANX0    511,DU
        11 000076   200020 470500                    LDP0    P$,,AUTO
        11 000077   000002 235110                    LDA     2,X0,PR0
        11 000100   200015 755100                    STA     NEW_VALUE,,AUTO

       68     5483    4               OLD_VALUE = Q$ -> BLOCK.DATA(V_TABLE.OFFSET(ARG));

   5483 11 000101   200021 471500                    LDP1    Q$,,AUTO
        11 000102   100002 235110                    LDA     2,X0,PR1
        11 000103   200016 755100                    STA     OLD_VALUE,,AUTO

       69     5484
       70     5485    4               END;

   5485 11 000104   000124 710000 11                 TRA     s:5495

       71     5486
       72     5487    4              ELSE DO;

       73     5488
       74     5489    4               NEW_VALUE = V_TABLE.VAR$(ARG) -> SBIN_;

   5489 11 000105   200012 236100                    LDQ     ARG,,AUTO
        11 000106   000005 402007                    MPY     5,DL
        11 000107   000000 471406 xsym               LDP1    V_TABLE,QL
        11 000110   100000 235100                    LDA     0,,PR1
        11 000111   200015 755100                    STA     NEW_VALUE,,AUTO

       75     5490    4               OLD_VALUE = PINCRW(ADDR(PS_OLD_COLLECT), POFFW(V_TABLE.VAR$(ARG),

   5490 11 000112   000003 236000 12                 LDQ     3
        11 000113   000022 772000                    QRL     18
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:20   
        11 000114   200110 756100                    STQ     @VALUE+1,,AUTO
        11 000115   200012 236100                    LDQ     ARG,,AUTO
        11 000116   000005 402007                    MPY     5,DL
        11 000117   000000 236006 xsym               LDQ     V_TABLE,QL
        11 000120   000022 772000                    QRL     18
        11 000121   200110 136100                    SBLQ    @VALUE+1,,AUTO
        11 000122   000000 235006 xsym               LDA     PS_OLD_COLLECT,QL
        11 000123   200016 755100                    STA     OLD_VALUE,,AUTO

       76     5491    4                ADDR(PS_COLLECT))) -> SBIN_;
       77     5492
       78     5493    4               END;

       79     5494
       80     5495    3            MODE = V_TABLE.MODE(ARG);

   5495 11 000124   200012 236100                    LDQ     ARG,,AUTO
        11 000125   000005 402007                    MPY     5,DL
        11 000126   000002 236006 xsym               LDQ     V_TABLE+2,QL
        11 000127   000011 772000                    QRL     9
        11 000130   000777 376007                    ANQ     511,DL
        11 000131   200010 756100                    STQ     MODE,,AUTO

       81     5496
       82     5497    3            CALL PSL$CHOMP (OLD_VALUE, NEW_VALUE, MODE, WASTE_CAN, J);

   5497 11 000132   200007 630500                    EPPR0   J,,AUTO
        11 000133   200114 450500                    STP0    @VALUE+5,,AUTO
        11 000134   200017 631500                    EPPR1   WASTE_CAN,,AUTO
        11 000135   200113 451500                    STP1    @VALUE+4,,AUTO
        11 000136   200010 633500                    EPPR3   MODE,,AUTO
        11 000137   200112 453500                    STP3    @VALUE+3,,AUTO
        11 000140   200015 634500                    EPPR4   NEW_VALUE,,AUTO
        11 000141   200111 454500                    STP4    @VALUE+2,,AUTO
        11 000142   200016 635500                    EPPR5   OLD_VALUE,,AUTO
        11 000143   200110 455500                    STP5    @VALUE+1,,AUTO
        11 000144   200110 630500                    EPPR0   @VALUE+1,,AUTO
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:21   
        11 000145   000023 631400 xsym               EPPR1   B_VECTNIL+19
        11 000146   000000 701000 xent               TSX1    PSL$CHOMP
        11 000147   000000 011000                    NOP     0

       83     5498
       84     5499    3            CALL PUSH (J);

   5499 11 000150   200007 630500                    EPPR0   J,,AUTO
        11 000151   200107 450500                    STP0    V_INDEX+3,,AUTO
        11 000152   000003 701000 11                 TSX1    PUSH
        11 000153   000000 011000                    NOP     0
        11 000154   000403 710000 11                 TRA     s:5634

       85     5500
       86     5501    3          CASE (PUSH_DECIMAL#);

       87     5502
       88     5503    3            CALL PUSH (ARG);

   5503 11 000155   200012 631500                    EPPR1   ARG,,AUTO
        11 000156   200107 451500                    STP1    V_INDEX+3,,AUTO
        11 000157   000003 701000 11                 TSX1    PUSH
        11 000160   000000 011000                    NOP     0
        11 000161   000403 710000 11                 TRA     s:5634

       89     5504        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:22   
       90     5505    3          CASE (UNARY_OPERATOR#);

       91     5506
       92     5507    3            LEFT = V_STACK (V_INDEX - 1);

   5507 11 000162   200104 721100                    LXL1    V_INDEX,,AUTO
        11 000163   200021 235111                    LDA     Q$,X1,AUTO
        11 000164   200013 755100                    STA     LEFT,,AUTO

       93     5508
       94     5509    4            DO CASE (ARG);

   5509 11 000165   000007 116007                    CMPQ    7,DL
        11 000166   000170 602006 11                 TNC     s:5509+3,QL
        11 000167   000210 710000 11                 TRA     s:5525
        11 000170   000210 710000 11                 TRA     s:5525
        11 000171   000177 710000 11                 TRA     s:5513
        11 000172   000210 710000 11                 TRA     s:5525
        11 000173   000210 710000 11                 TRA     s:5525
        11 000174   000210 710000 11                 TRA     s:5525
        11 000175   000210 710000 11                 TRA     s:5525
        11 000176   000202 710000 11                 TRA     s:5517

       95     5510
       96     5511    4             CASE (1 /* - */);

       97     5512
       98     5513    4               LEFT = -LEFT;

   5513 11 000177   000000 531000                    NEG     0
        11 000200   200013 755100                    STA     LEFT,,AUTO
        11 000201   000210 710000 11                 TRA     s:5525

       99     5514
      100     5515    4             CASE (6 /* ~ */);

      101     5516
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:23   
      102     5517    4               IF LEFT = 0

   5517 11 000202   000000 115003                    CMPA    0,DU
        11 000203   000207 601000 11                 TNZ     s:5521

      103     5518    4                 THEN
      104     5519    4                  LEFT = 1;

   5519 11 000204   000001 235007                    LDA     1,DL
        11 000205   200013 755100                    STA     LEFT,,AUTO
        11 000206   000210 710000 11                 TRA     s:5525

      105     5520    4                 ELSE
      106     5521    4                  LEFT = 0;

   5521 11 000207   200013 450100                    STZ     LEFT,,AUTO

      107     5522
      108     5523    4             END;

      109     5524
      110     5525    3            V_STACK (V_INDEX - 1) = LEFT;

   5525 11 000210   200013 235100                    LDA     LEFT,,AUTO
        11 000211   200021 755111                    STA     Q$,X1,AUTO
        11 000212   000403 710000 11                 TRA     s:5634

      111     5526        %EJECT;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:24   
      112     5527    3          CASE (BINARY_OPERATOR#);

      113     5528
      114     5529    3            LEFT = V_STACK (V_INDEX - 2);

   5529 11 000213   200104 721100                    LXL1    V_INDEX,,AUTO
        11 000214   200020 235111                    LDA     P$,X1,AUTO
        11 000215   200013 755100                    STA     LEFT,,AUTO

      115     5530    3            RIGHT = V_STACK (V_INDEX - 1);

   5530 11 000216   200021 235111                    LDA     Q$,X1,AUTO
        11 000217   200014 755100                    STA     RIGHT,,AUTO

      116     5531
      117     5532    4            DO CASE (ARG);

   5532 11 000220   000015 116007                    CMPQ    13,DL
        11 000221   000223 602006 11                 TNC     s:5532+3,QL
        11 000222   000376 710000 11                 TRA     s:5628
        11 000223   000240 710000 11                 TRA     s:5536
        11 000224   000244 710000 11                 TRA     s:5540
        11 000225   000250 710000 11                 TRA     s:5544
        11 000226   000254 710000 11                 TRA     s:5548
        11 000227   000275 710000 11                 TRA     s:5564
        11 000230   000306 710000 11                 TRA     s:5572
        11 000231   000376 710000 11                 TRA     s:5628
        11 000232   000317 710000 11                 TRA     s:5580
        11 000233   000327 710000 11                 TRA     s:5588
        11 000234   000337 710000 11                 TRA     s:5596
        11 000235   000347 710000 11                 TRA     s:5604
        11 000236   000357 710000 11                 TRA     s:5612
        11 000237   000367 710000 11                 TRA     s:5620

      118     5533
      119     5534    4             CASE (0 /* + */);

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:25   
      120     5535
      121     5536    4               LEFT = LEFT + RIGHT;

   5536 11 000240   200013 236100                    LDQ     LEFT,,AUTO
        11 000241   200014 036100                    ADLQ    RIGHT,,AUTO
        11 000242   200013 756100                    STQ     LEFT,,AUTO
        11 000243   000376 710000 11                 TRA     s:5628

      122     5537
      123     5538    4             CASE (1 /* - */);

      124     5539
      125     5540    4               LEFT = LEFT - RIGHT;

   5540 11 000244   200013 236100                    LDQ     LEFT,,AUTO
        11 000245   200014 136100                    SBLQ    RIGHT,,AUTO
        11 000246   200013 756100                    STQ     LEFT,,AUTO
        11 000247   000376 710000 11                 TRA     s:5628

      126     5541
      127     5542    4             CASE (2 /* * */);

      128     5543
      129     5544    4               LEFT = LEFT * RIGHT;

   5544 11 000250   200013 236100                    LDQ     LEFT,,AUTO
        11 000251   200014 402100                    MPY     RIGHT,,AUTO
        11 000252   200013 756100                    STQ     LEFT,,AUTO
        11 000253   000376 710000 11                 TRA     s:5628

      130     5545
      131     5546    4             CASE (3 /* / */);

      132     5547
      133     5548    4               IF RIGHT ~= 0

   5548 11 000254   000000 115003                    CMPA    0,DU
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:26   
        11 000255   000262 600000 11                 TZE     s:5552

      134     5549    4                 THEN
      135     5550    4                  LEFT = LEFT / RIGHT;

   5550 11 000256   200013 236100                    LDQ     LEFT,,AUTO
        11 000257   200014 506100                    DIV     RIGHT,,AUTO
        11 000260   200013 756100                    STQ     LEFT,,AUTO
        11 000261   000376 710000 11                 TRA     s:5628

      136     5551    4                 ELSE
      137     5552    4                  IF LEFT > 0

   5552 11 000262   200013 235100                    LDA     LEFT,,AUTO
        11 000263   000267 604400 11                 TMOZ    s:5556

      138     5553    4                    THEN
      139     5554    4                     LEFT = 99999999;

   5554 11 000264   000004 235000 12                 LDA     4
        11 000265   200013 755100                    STA     LEFT,,AUTO
        11 000266   000376 710000 11                 TRA     s:5628

      140     5555    4                    ELSE
      141     5556    4                     IF LEFT < 0

   5556 11 000267   000273 605000 11                 TPL     s:5560

      142     5557    4                       THEN
      143     5558    4                        LEFT = -99999999;

   5558 11 000270   000005 235000 12                 LDA     5
        11 000271   200013 755100                    STA     LEFT,,AUTO
        11 000272   000376 710000 11                 TRA     s:5628

      144     5559    4                       ELSE
      145     5560    4                        LEFT = 0;
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:27   

   5560 11 000273   200013 450100                    STZ     LEFT,,AUTO
        11 000274   000376 710000 11                 TRA     s:5628

      146     5561
      147     5562    4             CASE (4 /* & */);

      148     5563
      149     5564    4               IF LEFT ~= 0 AND RIGHT ~= 0

   5564 11 000275   200013 235100                    LDA     LEFT,,AUTO
        11 000276   000304 600000 11                 TZE     s:5568
        11 000277   200014 235100                    LDA     RIGHT,,AUTO
        11 000300   000304 600000 11                 TZE     s:5568

      150     5565    4                 THEN
      151     5566    4                  LEFT = 1;

   5566 11 000301   000001 235007                    LDA     1,DL
        11 000302   200013 755100                    STA     LEFT,,AUTO
        11 000303   000376 710000 11                 TRA     s:5628

      152     5567    4                 ELSE
      153     5568    4                  LEFT = 0;

   5568 11 000304   200013 450100                    STZ     LEFT,,AUTO
        11 000305   000376 710000 11                 TRA     s:5628

      154     5569
      155     5570    4             CASE (5 /* | */);

      156     5571
      157     5572    4               IF LEFT ~= 0 OR RIGHT ~= 0

   5572 11 000306   200013 235100                    LDA     LEFT,,AUTO
        11 000307   000312 601000 11                 TNZ     s:5574
        11 000310   200014 235100                    LDA     RIGHT,,AUTO
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:28   
        11 000311   000315 600000 11                 TZE     s:5576

      158     5573    4                 THEN
      159     5574    4                  LEFT = 1;

   5574 11 000312   000001 235007                    LDA     1,DL
        11 000313   200013 755100                    STA     LEFT,,AUTO
        11 000314   000376 710000 11                 TRA     s:5628

      160     5575    4                 ELSE
      161     5576    4                  LEFT = 0;

   5576 11 000315   200013 450100                    STZ     LEFT,,AUTO
        11 000316   000376 710000 11                 TRA     s:5628

      162     5577
      163     5578    4             CASE (7 /* < */);

      164     5579
      165     5580    4               IF LEFT < RIGHT

   5580 11 000317   200013 236100                    LDQ     LEFT,,AUTO
        11 000320   200014 116100                    CMPQ    RIGHT,,AUTO
        11 000321   000325 605000 11                 TPL     s:5584

      166     5581    4                 THEN
      167     5582    4                  LEFT = 1;

   5582 11 000322   000001 235007                    LDA     1,DL
        11 000323   200013 755100                    STA     LEFT,,AUTO
        11 000324   000376 710000 11                 TRA     s:5628

      168     5583    4                 ELSE
      169     5584    4                  LEFT = 0;

   5584 11 000325   200013 450100                    STZ     LEFT,,AUTO
        11 000326   000376 710000 11                 TRA     s:5628
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:29   

      170     5585
      171     5586    4             CASE (8 /* = */);

      172     5587
      173     5588    4               IF LEFT = RIGHT

   5588 11 000327   200013 236100                    LDQ     LEFT,,AUTO
        11 000330   200014 116100                    CMPQ    RIGHT,,AUTO
        11 000331   000335 601000 11                 TNZ     s:5592

      174     5589    4                 THEN
      175     5590    4                  LEFT = 1;

   5590 11 000332   000001 235007                    LDA     1,DL
        11 000333   200013 755100                    STA     LEFT,,AUTO
        11 000334   000376 710000 11                 TRA     s:5628

      176     5591    4                 ELSE
      177     5592    4                  LEFT = 0;

   5592 11 000335   200013 450100                    STZ     LEFT,,AUTO
        11 000336   000376 710000 11                 TRA     s:5628

      178     5593
      179     5594    4             CASE (9 /* > */);

      180     5595
      181     5596    4               IF LEFT > RIGHT

   5596 11 000337   200013 236100                    LDQ     LEFT,,AUTO
        11 000340   200014 116100                    CMPQ    RIGHT,,AUTO
        11 000341   000345 604400 11                 TMOZ    s:5600

      182     5597    4                 THEN
      183     5598    4                  LEFT = 1;

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:30   
   5598 11 000342   000001 235007                    LDA     1,DL
        11 000343   200013 755100                    STA     LEFT,,AUTO
        11 000344   000376 710000 11                 TRA     s:5628

      184     5599    4                 ELSE
      185     5600    4                  LEFT = 0;

   5600 11 000345   200013 450100                    STZ     LEFT,,AUTO
        11 000346   000376 710000 11                 TRA     s:5628

      186     5601
      187     5602    4             CASE (10 /* <= */);

      188     5603
      189     5604    4               IF LEFT <= RIGHT

   5604 11 000347   200013 236100                    LDQ     LEFT,,AUTO
        11 000350   200014 116100                    CMPQ    RIGHT,,AUTO
        11 000351   000355 605400 11                 TPNZ    s:5608

      190     5605    4                 THEN
      191     5606    4                  LEFT = 1;

   5606 11 000352   000001 235007                    LDA     1,DL
        11 000353   200013 755100                    STA     LEFT,,AUTO
        11 000354   000376 710000 11                 TRA     s:5628

      192     5607    4                 ELSE
      193     5608    4                  LEFT = 0;

   5608 11 000355   200013 450100                    STZ     LEFT,,AUTO
        11 000356   000376 710000 11                 TRA     s:5628

      194     5609
      195     5610    4             CASE (11 /* ~= */);

      196     5611
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:31   
      197     5612    4               IF LEFT ~= RIGHT

   5612 11 000357   200013 236100                    LDQ     LEFT,,AUTO
        11 000360   200014 116100                    CMPQ    RIGHT,,AUTO
        11 000361   000365 600000 11                 TZE     s:5616

      198     5613    4                 THEN
      199     5614    4                  LEFT = 1;

   5614 11 000362   000001 235007                    LDA     1,DL
        11 000363   200013 755100                    STA     LEFT,,AUTO
        11 000364   000376 710000 11                 TRA     s:5628

      200     5615    4                 ELSE
      201     5616    4                  LEFT = 0;

   5616 11 000365   200013 450100                    STZ     LEFT,,AUTO
        11 000366   000376 710000 11                 TRA     s:5628

      202     5617
      203     5618    4             CASE (12 /* >= */);

      204     5619
      205     5620    4               IF LEFT >= RIGHT

   5620 11 000367   200013 236100                    LDQ     LEFT,,AUTO
        11 000370   200014 116100                    CMPQ    RIGHT,,AUTO
        11 000371   000375 604000 11                 TMI     s:5624

      206     5621    4                 THEN
      207     5622    4                  LEFT = 1;

   5622 11 000372   000001 235007                    LDA     1,DL
        11 000373   200013 755100                    STA     LEFT,,AUTO
        11 000374   000376 710000 11                 TRA     s:5628

      208     5623    4                 ELSE
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:32   
      209     5624    4                  LEFT = 0;

   5624 11 000375   200013 450100                    STZ     LEFT,,AUTO

      210     5625
      211     5626    4             END;

      212     5627
      213     5628    3            V_STACK (V_INDEX - 2) = LEFT;

   5628 11 000376   200013 235100                    LDA     LEFT,,AUTO
        11 000377   200020 755111                    STA     P$,X1,AUTO

      214     5629
      215     5630    3            V_INDEX = V_INDEX - 1;

   5630 11 000400   200104 236100                    LDQ     V_INDEX,,AUTO
        11 000401   000001 136007                    SBLQ    1,DL
        11 000402   200104 756100                    STQ     V_INDEX,,AUTO

      216     5631
      217     5632    3          END;

      218     5633
      219     5634    2         END;

   5634 11 000403   200006 235100                    LDA     I,,AUTO
        11 000404   000001 035007                    ADLA    1,DL
        11 000405   200006 755100                    STA     I,,AUTO
        11 000406   200003 470500                    LDP0    @RPN,,AUTO
        11 000407   000000 236100                    LDQ     0,,PR0
        11 000410   000022 772000                    QRL     18
        11 000411   000777 376007                    ANQ     511,DL
        11 000412   200006 116100                    CMPQ    I,,AUTO
        11 000413   000415 600000 11                 TZE     s:5636
        11 000414   000027 603000 11                 TRC     s:5468

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:33   
      220     5635
      221     5636    1      VALUE = V_STACK(0);

   5636 11 000415   200004 471500                    LDP1    @VALUE,,AUTO
        11 000416   200022 235100                    LDA     V_STACK,,AUTO
        11 000417   100000 755100                    STA     0,,PR1

      222     5637
      223     5638    1      RETURN;

   5638 11 000420   000000 702200 xent               TSX2  ! X66_ARET
      224     5639
      225     5640    1   END PSP$POLISH;

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:34   
--  Include file information  --

   PS_PERR_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSP$POLISH.
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:35   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @RPN                       4-0-0/w PTR         r     1 @VALUE
   107-0-0/w PTR         r     1 @VALUE                    12-0-0/w UBIN        r     1 ARG
     6-0-0/w UBIN        r     1 I                          7-0-0/w UBIN        r     1 J
    13-0-0/w SBIN        r     1 LEFT                      10-0-0/w UBIN        r     1 MODE
    15-0-0/w SBIN        r     1 NEW_VALUE                 16-0-0/w SBIN        r     1 OLD_VALUE
    11-0-0/w UBIN        r     1 OPCODE                    20-0-0/w PTR         r     1 P$
    21-0-0/w PTR         r     1 Q$                        14-0-0/w SBIN        r     1 RIGHT
    *0-0-0/w STRC(72)    r     1 RPN                       *0-0-0/w SBIN        r     1 VALUE
    *0-0-0/w SBIN        r     1 VALUE                    104-0-0/w UBIN        r     1 V_INDEX
    22-0-0/w SBIN        r     1 V_STACK(0:49)             17-0-0/w UBIN        r     1 WASTE_CAN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(140)   r     1 PS_BUFFER                  0-0-0/w STRC(936)   r     1 PS_COLLECT
     0-0-0/w STRC(936)   r     1 PS_OLD_COLLECT             0-0-0/w PTR         r     1 PS_STATS$
     0-0-0/w STRC(180)   r     1 V_TABLE(0:0)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 BLOCK                      0-0-0N  NULL        r     1 M$LO
     0-0-0/w SBIN        r     1 SBIN_                      0-0-0/c ASTR(9)     r     1 TEXTC

PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:36   

   Procedure PSP$POLISH requires 273 words for executable code.
   Procedure PSP$POLISH requires 78 words of local(AUTO) storage.

    No errors detected in file PSP$POLISH.:E05TSI    .
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:37   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:38   
          MINI XREF LISTING

ARG
      5433**DCL      5469<<ASSIGN   5475>>IF       5478>>ASSIGN   5482>>ASSIGN   5483>>ASSIGN   5489>>ASSIGN
      5490>>ASSIGN   5495>>ASSIGN   5503<>CALL     5509>>DOCASE   5532>>DOCASE
BLOCK.DATA
      4918**DCL      5482>>ASSIGN   5483>>ASSIGN
I
      5429**DCL      5466<<DOINDEX  5468>>ASSIGN   5469>>ASSIGN
J
      5430**DCL      5478<<ASSIGN   5480<>CALL     5497<>CALL     5499<>CALL
LEFT
      5434**DCL      5507<<ASSIGN   5513<<ASSIGN   5513>>ASSIGN   5517>>IF       5519<<ASSIGN   5521<<ASSIGN
      5525>>ASSIGN   5529<<ASSIGN   5536<<ASSIGN   5536>>ASSIGN   5540<<ASSIGN   5540>>ASSIGN   5544<<ASSIGN
      5544>>ASSIGN   5550<<ASSIGN   5550>>ASSIGN   5552>>IF       5554<<ASSIGN   5556>>IF       5558<<ASSIGN
      5560<<ASSIGN   5564>>IF       5566<<ASSIGN   5568<<ASSIGN   5572>>IF       5574<<ASSIGN   5576<<ASSIGN
      5580>>IF       5582<<ASSIGN   5584<<ASSIGN   5588>>IF       5590<<ASSIGN   5592<<ASSIGN   5596>>IF
      5598<<ASSIGN   5600<<ASSIGN   5604>>IF       5606<<ASSIGN   5608<<ASSIGN   5612>>IF       5614<<ASSIGN
      5616<<ASSIGN   5620>>IF       5622<<ASSIGN   5624<<ASSIGN   5628>>ASSIGN
MODE
      5431**DCL      5495<<ASSIGN   5497<>CALL
NEW_VALUE
      5436**DCL      5482<<ASSIGN   5489<<ASSIGN   5497<>CALL
OLD_VALUE
      5437**DCL      5483<<ASSIGN   5490<<ASSIGN   5497<>CALL
OPCODE
      5432**DCL      5468<<ASSIGN   5471>>DOCASE
P$
      5439**DCL      5480<>CALL     5482>>ASSIGN
PSE$ERRMSG
      5443**DCL-ENT  5454--CALL
PSL$CHOMP
      5446**DCL-ENT  5497--CALL
PSL$LOCATE
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:39   
      5444**DCL-ENT  5480--CALL
PS_BUFFER
      4921**DCL      4956--DCLINIT  4958--DCLINIT
PS_COLLECT
      5073**DCL      5490--ASSIGN
PS_COLLECT.CALCNT
      5076**DCL      5076--REDEF
PS_COLLECT.USRSRV
      5073**DCL      5074--REDEF
PS_HLPCGBUF.DSPMSK
      5333**DCL      5339--REDEF
PS_HLPCGBUF.SLCMSK
      5374**DCL      5381--REDEF
PS_OLD_COLLECT
      5077**DCL      5490--ASSIGN
PS_OLD_COLLECT.CALCNT
      5080**DCL      5081--REDEF
PS_OLD_COLLECT.USRSRV
      5078**DCL      5078--REDEF
PS_STATS$
      5082**DCL      5084--IMP-PTR
PUSH
      5448**PROC     5499--CALL     5503--CALL
Q$
      5440**DCL      5480<>CALL     5483>>ASSIGN
RIGHT
      5435**DCL      5530<<ASSIGN   5536>>ASSIGN   5540>>ASSIGN   5544>>ASSIGN   5548>>IF       5550>>ASSIGN
      5564>>IF       5572>>IF       5580>>IF       5588>>IF       5596>>IF       5604>>IF       5612>>IF
      5620>>IF
RPN
      5418**DCL         8--PROC
RPN.INFO.USED#
      5421**DCL      5466>>DOINDEX
RPN.ITEM.ARG#
      5426**DCL      5469>>ASSIGN
RPN.ITEM.OPCODE#
PL6.E3A0      #001=PSP$POLISH File=PSP$POLISH.:E05TSI                            WED 07/30/97 04:36 Page:40   
      5425**DCL      5468>>ASSIGN
SBIN_
      5086**DCL      5489>>ASSIGN   5490>>ASSIGN
TEXTC.LEN
      5086**DCL      5086--IMP-SIZ
VALUE
      5428**DCL         8--PROC     5636<<ASSIGN
VALUE IN PROCEDURE PUSH
      5450**DCL      5448--PROC     5456>>ASSIGN
V_INDEX
      5442**DCL      5452>>IF       5456>>ASSIGN   5458<<ASSIGN   5458>>ASSIGN   5464<<ASSIGN   5507>>ASSIGN
      5525>>ASSIGN   5529>>ASSIGN   5530>>ASSIGN   5628>>ASSIGN   5630<<ASSIGN   5630>>ASSIGN
V_STACK
      5441**DCL      5452--IF       5456<<ASSIGN   5507>>ASSIGN   5525<<ASSIGN   5529>>ASSIGN   5530>>ASSIGN
      5628<<ASSIGN   5636>>ASSIGN
V_TABLE.INDX
      5059**DCL      5478>>ASSIGN
V_TABLE.MODE
      5060**DCL      5495>>ASSIGN
V_TABLE.OFFSET
      5059**DCL      5482>>ASSIGN   5483>>ASSIGN
V_TABLE.VAR$
      5059**DCL      5475>>IF       5489>>ASSIGN   5490>>ASSIGN
WASTE_CAN
      5438**DCL      5497<>CALL
