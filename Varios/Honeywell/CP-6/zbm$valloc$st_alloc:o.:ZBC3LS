

CC.C03    File=zbm$valloc$st_alloc:c.:ZBC3TSI                                       Fri Aug 22 1997  Page=1  
        1         1             /* $Header: st_alloc.c,v 1.3 87/03/10 09:06:10 ceriel Exp $ */
        2         2             /*
        3         3              * (c) copyright 1987 by the Vrije Universiteit, Amsterdam, The Netherlands.
        4         4              * See the copyright notice in the ACK home directory, in the file "Copyright"
                               .
        5         5              */
        6         6             /*  st_alloc - get a structure from a free list. If no structures left,
        7         7                 create new ones. The structures for which this works are
        8         8                 supposed to have as their first tag the string "next", which
        9         9                 should be a pointer type.
       10        10                 The counterpart, st_free, is a macro, defined in alloc.h
       11        11             */
       12        12
       13        13             #include <string.h>
       14        14             #include "alloc:h"
       15        15
       16        16             struct xxx   {
       17        17    1         char *next;
       18        18    1        };
       19        19
       20        20             char *
       21        21             st_alloc(phead, size, count)
       22        22              char **phead;
       23        23              register unsigned int size;
       24        24             {
       25        25    1         register char *p;
       26        26    1         char *retval;
       27        27    1
       28        28    1         if (*phead == 0)  {
       29        29    2
       30        30    2            p = Malloc(size * count);
       31        31    2            ((struct xxx *) p)->next = 0;
       32        32    2            while (--count) {
       33        33    3               p += size;
       34        34    3               ((struct xxx *) p)->next = p - size;
       35        35    3            }
       36        36    2            *phead = p;
CC.C03    File=zbm$valloc$st_alloc:c.:ZBC3TSI                                       Fri Aug 22 1997  Page=2  
       37        37    2         }
       38        38    1         else  p = *phead;
       39        39    1         *phead = ((struct xxx *)p)->next;
       40        40    1         retval = p;
       41        41    1          memset(p, 0, size);
       42        42    1         return retval;
       43        43    1        }
       44        44
---  Include file information  ---

   string:h.:LIB_E05. is referenced
   alloc:h.:ZBC3TOU. is referenced

No diagnostics were issued in the file zbm$valloc$st_alloc:c.:ZBC3TSI
