/*M* MM_MACRO_M Macros for memory management */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* DMC,DFC */
/**/
/********************************************************************
*********************************************************************/
/*D* NAME:         MM$CGQD
     PURPOSE:      To define that portion of MM's static data which
                   requires cache bypass and is for support of the
                   comgroup queue
*/
%MACRO MM$CGQD (FPTN=MM$CGQD,STCLASS=BASED);
 %LSET LISTDIR='0'B;
 %LSET LISTEXP='1'B;
 %LSET LISTCOM='0'B;
 %LSET LISTSUB='1'B;
 %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 %IF (SUBSTR(STR,0,6)='STATIC') OR
 (SUBSTR(STR,0,8)='CONSTANT') OR
 (SUBSTR(STR,0,3)='EXT');
 %LSET INIT=CHARTEXT('INIT');
 %ELSE;
 %LSET INIT=CHARTEXT('/*');
 %ENDIF;
DCL 1 FPTN STCLASS ALIGNED,
      2 FPPC SBIN %INIT(0)%CHARTEXT('/**/'),
                        /* FPPC     : count of the number of physical
                                      pages which have been released
                                      by a comgroup but which are still
                                      in the comgroup page table and
                                      thus not on the free page chain.
                                      These pages can be got back on
                                      the free page chain by calling
                                      MMQ$TRUNCPT. */
      2 UPPC SBIN %INIT(0)%CHARTEXT('/**/'),
                        /* UPPC     : count of physical pages actually
                                      in use - this includes ASR-mapped
                                      pages owned by individual CGs,
                                      plus comgroup context pages. */
      2 FCHUNK,
                        /* FCHUNK   : values concerning free page
                                      table chunks. */
        3 HEAD SBIN %INIT(0)%CHARTEXT('/**/'),
                        /* HEAD     : the head of the free chain.
                                      All page table chunk chain heads
                                      and tails are integers - the value
                                      is an offset into the page table
                                      expressed in units of the EQU
                                      %CGQ_CHUNK_SIZE. */
        3 TAIL SBIN %INIT(0)%CHARTEXT('/**/'),
                        /* TAIL     : the tail of the free chain. */
        3 COUNT SBIN %INIT(0)%CHARTEXT('/**/'),
                        /* COUNT    : number of free chunks. */
      2 BCHUNK,
                        /* BCHUNK   : values concerning page table
                                      chunks that have been 'buried',
                                      i.e. released but not available
                                      (due to
                                      multiprocessing PTWAM problems).
                                      These chunks can be obtained
                                      by clearing the PTWAM on all
                                      CPUs and then merging this
                                      chain onto the FCHUNK chain. */
        3 HEAD SBIN %INIT(0)%CHARTEXT('/**/'),
                        /* HEAD     : the head of the buried chain. */
        3 TAIL SBIN %INIT(0)%CHARTEXT('/**/'),
                        /* TAIL     : the tail of the buried chain. */
        3 COUNT SBIN %INIT(0)%CHARTEXT('/**/');
                        /* COUNT    : the count of the buried chain. */
%MEND;
