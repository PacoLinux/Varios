

15:05 JUL 28 '97 MM_MACRO_M.:E05SI                                         1    
    1      /*M* MM_MACRO_M Macros for memory management */
    2      /*T***********************************************************/
    3      /*T*                                                         */
    4      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    5      /*T*                                                         */
    6      /*T***********************************************************/
    7      /*X* DMC,DFC */
    8      /**/
    9      /********************************************************************
   10      *********************************************************************/
   11      /*D* NAME:         MM$CGQD
   12           PURPOSE:      To define that portion of MM's static data which
   13                         requires cache bypass and is for support of the
   14                         comgroup queue
   15      */
   16      %MACRO MM$CGQD (FPTN=MM$CGQD,STCLASS=BASED);
   17
   18       %LSET LISTDIR='0'B;
   19       %LSET LISTEXP='1'B;
   20       %LSET LISTCOM='0'B;
   21       %LSET LISTSUB='1'B;
   22       %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
   23       %IF (SUBSTR(STR,0,6)='STATIC') OR
   24       (SUBSTR(STR,0,8)='CONSTANT') OR
   25       (SUBSTR(STR,0,3)='EXT');
   26       %LSET INIT=CHARTEXT('INIT');
   27       %ELSE;
   28       %LSET INIT=CHARTEXT('/*');
   29       %ENDIF;
   30
   31      DCL 1 FPTN STCLASS ALIGNED,
   32            2 FPPC SBIN %INIT(0)%CHARTEXT('/**/'),
   33                              /* FPPC     : count of the number of physical
   34                                            pages which have been released
   35                                            by a comgroup but which are still
   36                                            in the comgroup page table and
   37                                            thus not on the free page chain.
15:05 JUL 28 '97 MM_MACRO_M.:E05SI                                         2    
   38                                            These pages can be got back on
   39                                            the free page chain by calling
   40                                            MMQ$TRUNCPT. */
   41
   42            2 UPPC SBIN %INIT(0)%CHARTEXT('/**/'),
   43                              /* UPPC     : count of physical pages actually
   44                                            in use - this includes ASR-mapped
   45                                            pages owned by individual CGs,
   46                                            plus comgroup context pages. */
   47
   48            2 FCHUNK,
   49                              /* FCHUNK   : values concerning free page
   50                                            table chunks. */
   51
   52              3 HEAD SBIN %INIT(0)%CHARTEXT('/**/'),
   53                              /* HEAD     : the head of the free chain.
   54                                            All page table chunk chain heads
   55                                            and tails are integers - the value
   56                                            is an offset into the page table
   57                                            expressed in units of the EQU
   58                                            %CGQ_CHUNK_SIZE. */
   59
   60              3 TAIL SBIN %INIT(0)%CHARTEXT('/**/'),
   61                              /* TAIL     : the tail of the free chain. */
   62
   63              3 COUNT SBIN %INIT(0)%CHARTEXT('/**/'),
   64                              /* COUNT    : number of free chunks. */
   65
   66            2 BCHUNK,
   67                              /* BCHUNK   : values concerning page table
   68                                            chunks that have been 'buried',
   69                                            i.e. released but not available
   70                                            (due to
   71                                            multiprocessing PTWAM problems).
   72                                            These chunks can be obtained
   73                                            by clearing the PTWAM on all
   74                                            CPUs and then merging this
15:05 JUL 28 '97 MM_MACRO_M.:E05SI                                         3    
   75                                            chain onto the FCHUNK chain. */
   76
   77              3 HEAD SBIN %INIT(0)%CHARTEXT('/**/'),
   78                              /* HEAD     : the head of the buried chain. */
   79
   80              3 TAIL SBIN %INIT(0)%CHARTEXT('/**/'),
   81                              /* TAIL     : the tail of the buried chain. */
   82
   83              3 COUNT SBIN %INIT(0)%CHARTEXT('/**/');
   84                              /* COUNT    : the count of the buried chain. */
   85      %MEND;

