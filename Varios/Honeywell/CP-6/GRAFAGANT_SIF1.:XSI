      PROGRAM GANTGRAF
C*T***********************************************************  
C*T*                                                         *  
C*T* Copyright (c) Bull HN Information Systems Inc., 1989    *  
C*T*                                                         *  
C*T***********************************************************  
      SAVE
C
C*X* JR,IND=3,FMT=1000,STMT=100
C
C     PROGRAM TO PLOT GANTT CHARTS ON A STANDARD
C     8.5" HIGH AND 11" WIDE SHEET
C
C     PROGRAM PROMPTS ON F$108 FOR ALL INPUT, READING FROM F$105
C
C
      INTEGER DATEBEG(100),DATEEND(100),DATEOVR(100),OPTS(30)
      INTEGER M1(100),M2(100),VIEWSURF/0/
          LOGICAL M1FLAG,M2FLAG
      CHARACTER M1TITLE(100)*32,M2TITLE(100)*32
      CHARACTER SUBTITLE(100)*80, DATEARR(6)*4, DATESAVE(6)*4
      CHARACTER TITLE1*80, TITLE2*80, SCRATCH*80, SCRITCH*60
      CHARACTER SCRATCH1*80,SCRATCH2*80,SCRATCH3*80,NOTEPAD*40
      CHARACTER MONDATA(12)*1/'J','F','M','A','M','J','J','A','S','O',
     -                        'N','D'/
      CALL CCBUF(OPTS)
      IF (OPTS(1).EQ.9999) THEN
         OUTPUT 'Bad command line option -- aborting'
         STOP 
      ENDIF 
C
C     CLEAR THE ARRAYS
C
      DO 100 J = 1, 100
         DATEBEG(J) = -1.
         DATEEND(J) = -1.
         DATEOVR(J) = 0
         SUBTITLE(J) = ' '
         M1TITLE(J) = ' '
         M2TITLE(J) = ' '
         M1(J) = 0
         M2(J) = 0
  100 CONTINUE 
      TITLE1 = ' '
      TITLE2 = ' '
      NOTEPAD = ' '
C
C     PROMPT HERE FOR TITLES
C
      WRITE (108,1180)
      READ (105,1160) TITLE1
C
      WRITE (108,1190)
      READ (105,1160) TITLE2
C
      WRITE (108,1040)
      READ (105,1050) NOTEPAD
C
C         obtain date range of chart
C
      WRITE (108,1150)
      READ (105,1170) SCRATCH1
C
C          verify and convert dates given at this point; dates are
C         converted to number of days relative to 0,0,0
C
      SCRATCH2 = ''' '','//SCRATCH1(1:76)
      CALL GANTPARS(SCRATCH2,DATESAVE,SCRATCH,SCRATCH3)
C
C         check for parse error (????) is returned
C
      IF (DATESAVE(1) .EQ. '????') THEN
         WRITE (108,1130) SCRATCH1
         CALL EXIT(1)
      ENDIF 
      CALL DATECONV (DATESAVE(1), ISTART)
C
C              bad date returns negative conversion value
C
      IF (ISTART .LT. 0) THEN
         WRITE (108,1130) SCRATCH1
         CALL EXIT(1)
      ENDIF 
      CALL DATECONV (DATESAVE(4), IEND  )
      IF (IEND .LT. 0) THEN
         WRITE (108,1130) SCRATCH1
         CALL EXIT(1)
      ENDIF 
      IF (ISTART .GT. IEND) THEN
         WRITE (108,1100)
         CALL EXIT(1)
      ENDIF 
      IF (ISTART .EQ. IEND) THEN
         WRITE (108,1110)
         CALL EXIT(1)
      ENDIF 
C
C         gather rest of data for chart
C
      WRITE (108,1120)
      NOITEMS = 0
      NOM1 = 0
      NOM2 = 0
      M1FLAG = .FALSE.
      M2FLAG = .FALSE.
  110 CONTINUE 
      READ (105,1160,END=140) SCRATCH1
      CALL GANTPARS (SCRATCH1, DATEARR, SCRATCH2, SCRATCH3)
C
C              did x$parse barf?
C
      IF (DATEARR(1) .EQ. '????') THEN
         WRITE (108,1140) SCRATCH1
         GOTO 110 
      ENDIF 
C
C              check, convert, and recheck input data
C
      CALL DATECONV (DATEARR(1), ITEMSTART)
      IF (ITEMSTART .LT. 0) THEN
         WRITE (108,1140) SCRATCH1
         GOTO 110 
      ENDIF 
C
      CALL DATECONV (DATEARR(4), ITEMEND)
      IF (ITEMEND .LT. 0) THEN
         WRITE (108,1140) SCRATCH1
         GOTO 110 
      ENDIF 
      IF (SCRATCH3 .EQ. ' ')GOTO 130 
C
C              user has input an 'option' field, what now?
C
      IF (SCRATCH3 .NE. 'M1'.AND.SCRATCH3 .NE. 'M2') THEN
         WRITE (108,1030) SCRATCH1
         GOTO 110 
      ENDIF 
C
C              must be a milestone...and dates must be equal
C
      IF (ITEMSTART .NE. ITEMEND) THEN
         WRITE (108,1010) SCRATCH1
         GOTO 110 
      ENDIF 
C
C              milestones are rejected if out of bounds
C
      IF (ITEMSTART .GT. IEND .OR. ITEMSTART .LT. ISTART) THEN
         WRITE (108,1000) SCRATCH1
         GOTO 110 
      ENDIF 
C
C              getting close now...size of milestone titles
C              can't exceed 32 characters
C
      IKOUNT = ISIZEIT(SCRATCH2,80)
  120 CONTINUE 
      IF (IKOUNT .GT. 32) THEN
         WRITE (108,1020) SCRATCH1
      ENDIF 
      IF (SCRATCH3 .EQ. 'M1') THEN
         NOM1 = NOM1 + 1
         M1FLAG = .TRUE.
         M1TITLE(NOM1) = SCRATCH2(1:32)
         M1(NOM1) = ITEMSTART - ISTART
      ENDIF 
      IF (SCRATCH3 .EQ. 'M2') THEN
         NOM2 = NOM2 + 1
         M2FLAG = .TRUE.
         M2TITLE(NOM2) = SCRATCH2(1:32)
         M2(NOM2) = ITEMSTART - ISTART
      ENDIF 
      GOTO 110 
  130 CONTINUE 
C
C              both dates converted, check for stupidity
C
      IF (ITEMSTART .GT. ITEMEND) THEN
         WRITE (108,1090) SCRATCH1
         GOTO 110 
      ENDIF 
      IF (ITEMSTART.LT. ISTART.OR.ITEMEND .LT. ISTART) THEN
         WRITE (108,1070) SCRATCH1
      ENDIF 
      IF (ITEMSTART .GT. IEND.OR.ITEMEND .GT. IEND) THEN
         WRITE (108,1080) SCRATCH1
      ENDIF 
C
C         auugh! it passed! put it in the array
C
      NOITEMS = NOITEMS + 1
      DATEBEG(NOITEMS) =ITEMSTART
      DATEEND(NOITEMS) =ITEMEND
      SUBTITLE(NOITEMS) = SCRATCH2
      GOTO 110 
  140 CONTINUE 
C
C          data gathered, begin figuring scaling, titling stuff
C
      IDIFF = IEND - ISTART
      PERDAY = 10./FLOAT(IDIFF)
C
C         scale all data to beginning date of chart; special values:
C         -1 (less than beginning), -2 (greater than end)
C
      DO 150 I=1,NOITEMS
         ITEMP = DATEBEG(I) - ISTART
         ITEMP2 = DATEEND(I) - ISTART
         DATEBEG(I) = ITEMP
         DATEEND(I) = ITEMP2
         IF (ITEMP .LT. 0) DATEBEG(I) = -1
         IF (ITEMP2 .LT. 0) DATEEND(I) = -1
         IF (ITEMP .GT. IDIFF) DATEBEG(I) = -2
         IF (ITEMP2 .GT. IDIFF) DATEEND(I) = -2
  150 CONTINUE 
C
C              why wait? initialize graphics system now
C
      CALL XG$INITIALIZE_CORE ('BUFFERED','NONE','3D','NONE')
      CALL XG$SET_COORD_SYSTEM_TYPE ('RIGHT')
      CALL XG$SET_NDC_SPACE_2 (1.0,.7)
      CALL XG$INITIALIZE_VIEW_SURFACE  (VIEWSURF,'INTENSITY')
      CALL XG$SELECT_VIEW_SURFACE  (VIEWSURF)
      CALL XG$SET_IMMEDIATE_VISIBILITY('OFF')
      CALL XG$SET_WINDOW_CLIPPING  ('ON')
      CALL XG$SET_WINDOW  (0.,10.,0.,7.)
      IF (OPTS(1).EQ.1) THEN
         CALL XG$SET_VIEWPORT_2 (.075,.925,.050,.650)
      ENDIF 
      CALL XG$CREATE_TEMPORARY_SEG
C
C                   handle frame option
C
      IF (OPTS(2).EQ.1) THEN
         CALL XG$MOVE_ABS_2 (.001,.001)
         CALL XG$LINE_ABS_2 (.001,6.999)
         CALL XG$LINE_ABS_2 (9.999,6.999)
         CALL XG$LINE_ABS_2 (9.999,.001)
         CALL XG$LINE_ABS_2 (.001,.001)
      ENDIF 
C
C                   establish conditions
C
      CALL XG$SET_CHARPRECISION ('stroke')
      CALL XG$SET_FONT(13)
      CALL XG$SET_LINEWIDTH (.20)
      YPOS = 5.4
C
C                   do line across top of page
C
      CALL XG$MOVE_ABS_2 (0.,YPOS)
      CALL XG$LINE_ABS_2 (10.,YPOS)
C
C                   if grid requested, do special lines
C
      IF (OPTS(3) .EQ. 0) THEN
         CALL XG$LINE_ABS_2 (10.,YPOS+.2)
         CALL XG$MOVE_ABS_2(0.,YPOS)
         CALL XG$LINE_ABS_2 (0.,YPOS+.2)
      ELSE 
         CALL XG$MOVE_ABS_2 (10.,YPOS+.2)
         CALL XG$LINE_ABS_2 (10.,YPOS)
         CALL XG$MOVE_ABS_2 (0.,YPOS+.2)
         CALL XG$LINE_ABS_2 (0.,YPOS)
         CALL XG$SET_LINEWIDTH (.01)
         CALL XG$LINE_ABS_2 (0.,0.)
         CALL XG$MOVE_ABS_2 (10.,YPOS)
         CALL XG$LINE_ABS_2 (10.,0.)
         CALL XG$SET_LINEWIDTH(0.20)
      ENDIF 
C
C                   only do "timeline" if >90 days involved
C                   or less than 5 years
C
      IF (IDIFF .GE. 90 .AND. IDIFF .LE. 1830) THEN
C
C              move starting "date-a" to temp array for
C              month/year tracking and estimation of monthsize
C
         DO 160 I=1,3
            DATEARR(I)=DATESAVE(I)
  160    CONTINUE 
         DATEARR(2)='01'
         DECODE (4,1060,DATEARR(1)),IMONTH
         MONTHSAVE2 = IMONTH
         IMONTH=IMONTH+1
         DECODE (4,1060,DATEARR(3)),IYEARSAVE
         IF (IMONTH .GT. 12) THEN
            IMONTH=1
            IYEARSAVE=IYEARSAVE+1
            ENCODE (4,1060,DATEARR(3)),IYEARSAVE
         ENDIF 
         MONTHSAVE = IMONTH
         ENCODE (4,1060,DATEARR(1)),IMONTH
         CALL DATECONV(DATEARR(1),IDATE1)
C
C              play same game with next month, this time for
C              computing estimate of monthsize only
C
         DO 170 I=1,3
            DATEARR(I+3)=DATEARR(I)
  170    CONTINUE 
         DECODE (4,1060,DATEARR(4)),IMONTH
         IMONTH=IMONTH+1
         IF (IMONTH .GT. 12) THEN
            IMONTH=1
            DECODE (4,1060,DATEARR(6)),IYEAR
            IYEAR=IYEAR+1
            ENCODE (4,1060,DATEARR(6)),IYEAR
         ENDIF 
         ENCODE (4,1060,DATEARR(4)),IMONTH
         CALL DATECONV(DATEARR(4),IDATE2)
C
C              do computations for locating tics, sizing dates
C
         XLOC1 = (IDATE1 - ISTART) * PERDAY
         XLOC2 = (IDATE2 - ISTART) * PERDAY
         AMONTH = XLOC2 - XLOC1
         TEXTSIZ = .8 * AMONTH
         IF (TEXTSIZ .GT. 0.20) TEXTSIZ = 0.20
         ICK = 260. * TEXTSIZ
         CALL XG$ESCAPE (2,1,ICK)
C -------------------------------------------------
C
C              special loop to figure out how many items go in
C              data area...note that milestones count as three
C              each.  this lets me guestimate text sizes, available
C              space on plot
C
         CALL XG$SET_CHARSIZE (TEXTSIZ,TEXTSIZ)
         CALL XG$SET_CHARJUST('CENTER','CENTER')
         XPOS = XLOC1
         IF (XLOC1 .GE. TEXTSIZ) THEN
            XTEMP = XLOC1/2.
            CALL XG$MOVE_ABS_2 (XTEMP,YPOS+TEXTSIZ)
            CALL XG$TEXT_COUNT (MONDATA(MONTHSAVE2),1)
         ENDIF 
C
C              special code for forcing "year dividers" larger
C
         TSIZ = TEXTSIZ
         IF (MONTHSAVE .EQ. 1) THEN
            TSIZ = TEXTSIZ * 2.
         ENDIF 
         YEARBEG = 0.
         IYEARSAVE = IYEARSAVE + 1900
C
C              this is loop that outputs tic marks/dates
C
  180    CONTINUE 
         IF ((10. - XPOS) .LE. TEXTSIZ)GOTO 190 
         CALL XG$MOVE_ABS_2 (XPOS,YPOS+TSIZ)
         CALL XG$LINE_ABS_2 (XPOS,YPOS)
         IF (OPTS(3) .EQ. 1) THEN
            CALL XG$SET_LINEWIDTH (.01)
            CALL XG$LINE_ABS_2 (XPOS,0.)
            CALL XG$SET_LINEWIDTH (.20)
         ENDIF 
         CALL XG$MOVE_ABS_2 (XPOS+(AMONTH/2.),YPOS+TEXTSIZ)
         CALL XG$TEXT_COUNT (MONDATA(MONTHSAVE),1)
         TSIZ = TEXTSIZ
         MONTHSAVE = MONTHSAVE + 1
C
C              crossing a year? output year i.d., then make sure
C              tic mark gets longer.
C
         IF (MONTHSAVE .GT. 12) THEN
            MONTHSAVE = 1
            TSIZ = TEXTSIZ * 2.
            YEARCEN = (((XPOS+AMONTH) - YEARBEG) / 2.) + YEARBEG
            YEARBEG = XPOS+AMONTH
            ENCODE (5,1060,SCRITCH),IYEARSAVE
            IYEARSAVE = IYEARSAVE + 1
            CALL XG$MOVE_ABS_2 (YEARCEN,YPOS+(2.5*TEXTSIZ))
            CALL XG$TEXT_COUNT (SCRITCH,4)
         ENDIF 
         ENCODE (4,1060,DATEARR(1)),MONTHSAVE
         ENCODE (4,1060,DATEARR(3)),IYEARSAVE-1900
         CALL DATECONV(DATEARR(1),IDATE1)
         XPOS = (IDATE1 - ISTART) * PERDAY
         GOTO 180 
C
C              that loop's done, now do some cleanup, boundary
C              checking....
C
  190    CONTINUE 
         IF (XPOS .LT. 10. .AND. TEXTSIZ .LE. (10. - XPOS)) THEN
            ATEMP =  XPOS + ((10. - XPOS)/2.)
            CALL XG$MOVE_ABS_2 (ATEMP,YPOS+TEXTSIZ)
            CALL XG$TEXT_COUNT(MONDATA(MONTHSAVE),1)
         ENDIF 
         IF ((10. - YEARBEG) .GE. (4.*TEXTSIZ)) THEN
            YEARCEN = ((10. - YEARBEG)/2.) + YEARBEG
            ENCODE (5,1060,SCRITCH),IYEARSAVE
            CALL XG$MOVE_ABS_2 (YEARCEN,YPOS+(2.5*TEXTSIZ))
            CALL XG$TEXT_COUNT (SCRITCH,4)
         ENDIF 
      ENDIF 
C
C
C
C                   complex titling done, do some data stuff
C
C
      CALL XG$SET_CHARPRECISION ('stroke')
      CALL XG$SET_CHARJUST('CENTER','CENTER')
      CALL XG$SET_FONT(13)
      CALL XG$SET_LINEWIDTH (.20)
      CALL XG$MOVE_ABS_2(5.,6.825)
      CALL XG$SET_CHARSIZE (.40,.40)
      ICK = 260. * .40
      CALL XG$ESCAPE (2,1,ICK)
      CALL XG$SET_CHARUP_2 (0.,1.)
      KOUNTT = ISIZEIT(TITLE1,80)
      CALL XG$TEXT_COUNT (TITLE1,KOUNTT)
      CALL XG$MOVE_ABS_2(5.,6.400)
      CALL XG$SET_CHARSIZE(.25,.25)
      ICK=260. * .25
      CALL XG$ESCAPE(2,1,ICK)
      KOUNTT = ISIZEIT(TITLE2,80)
      CALL XG$TEXT_COUNT (TITLE2,KOUNTT)
C
C              phoney setup for each data item plotting
C
      ITEMP = 0
      YSIZE = 5.0
      IF (M1FLAG) THEN
         YSIZE = 5.4
         ITEMP = ITEMP + 3
      ENDIF 
      IF (M2FLAG) THEN
         YSIZE = 5.4
         ITEMP = ITEMP + 3
      ENDIF 
      YPOS = YSIZE
      SIZEEACH = YSIZE / FLOAT(NOITEMS+ITEMP)
      IF (SIZEEACH.GT.0.30) SIZEEACH = 0.30
      TEXTSIZ = SIZEEACH*0.80
      CALL XG$SET_FONT(13)
      CALL XG$SET_CHARPRECISION ('STROKE')
      CALL XG$SET_CHARJUST ('LEFT','CENTER')
      CALL XG$SET_CHARSIZE (TEXTSIZ,TEXTSIZ)
C
C              do the item-by-item testing now
C
      DO 220 I=1,NOITEMS
C
C              would this point get plotted?
C
         IF (DATEBEG(I) .EQ. -2)GOTO 210 
         IF (DATEEND(I) .EQ. -1)GOTO 210 
C
C         see if item should start at left margin
C
         IF (DATEBEG(I) .LT. 0) THEN
            XLOC1 = 0.
         ELSE 
            XLOC1 = DATEBEG(I) * PERDAY
         ENDIF 
C
C         how about the end?
C
         IF (DATEEND(I) .LT. 0) THEN
            XLOC2 = 10.0
         ELSE 
            XLOC2 = DATEEND(I) * PERDAY
         ENDIF 
C
C              check the subtitle out now
C
         RANGE1 = XLOC1
         RANGE2 = 10. - XLOC2
         ISIZE = ISIZEIT(SUBTITLE(I),80)
         CALL XG$INQ_TEXT_EXTENT_3_COUNT (SUBTITLE(I)(1:1),ISIZE,X,Y,Z)
         IF (RANGE1 .GE. RANGE2 .AND. X .GT. (RANGE1-.20)) THEN
            DATEOVR(I)=1
         ENDIF 
         IF (RANGE1 .LT. RANGE2 .AND. X .GT. (RANGE2-.20)) THEN
            DATEOVR(I)=1
         ENDIF 
         IF (DATEOVR(I) .NE. 0) THEN
            SCRATCH2='^  '
            DO 200 L5=1,77
               SCRATCH2(L5+3:L5+3)=SUBTITLE(I)(L5:L5)
  200       CONTINUE 
            SUBTITLE(I)=SCRATCH2
         ENDIF 
  210    CONTINUE 
  220 CONTINUE 
C
C              count up number of overflows
C
      IKOUNT=0
      DO 230 I=1,NOITEMS
         IF (DATEOVR(I) .EQ. 1) IKOUNT=IKOUNT+1
  230 CONTINUE 
      SIZEEACH = YSIZE / FLOAT(NOITEMS+IKOUNT+ITEMP)
      IF (SIZEEACH.GT.0.30) SIZEEACH = 0.30
      TEXTSIZ = SIZEEACH*0.80
      IF (.NOT. M1FLAG .AND. .NOT. M2FLAG)GOTO 280 
C
C              if there are milestones, now's the time to muck with
C              them
C
      YPOS = YSIZE - (TEXTSIZ/2.)
      IF (M1FLAG) THEN
         TEMPSIZ = TEXTSIZ * 2.5
         ICK = 260. * TEMPSIZ
         CALL XG$ESCAPE (2,1,ICK)
         CALL XG$SET_CHARSIZE (TEMPSIZ,TEMPSIZ)
         CALL XG$SET_CHARJUST ('CENTER','CENTER')
         CALL XG$SET_FONT(26)
         DO 240 I=1,NOM1
            XPOS = M1(I) * PERDAY
            CALL XG$MOVE_ABS_2 (XPOS,YPOS)
            CALL XG$TEXT_COUNT('$',1)
  240    CONTINUE 
         YPOS = YPOS - SIZEEACH
         ICK = 260. * TEXTSIZ
         CALL XG$ESCAPE (2,1,ICK)
         CALL XG$SET_CHARSIZE(TEXTSIZ,TEXTSIZ)
         CALL XG$SET_FONT (13)
         DO 250 I=1,NOM1
            XPOS = M1(I)*PERDAY
            CALL XG$MOVE_ABS_2 (XPOS,YPOS)
            KOUNTT = ISIZEIT(M1TITLE(I),32)
            CALL XG$TEXT_COUNT (M1TITLE(I),KOUNTT)
  250    CONTINUE 
         YPOS = YPOS -  SIZEEACH
         IF (.NOT. M2FLAG) YPOS = YPOS - SIZEEACH
      ENDIF 
      IF (M2FLAG) THEN
         TEMPSIZ = TEXTSIZ * 2.5
         ICK = 260. * TEMPSIZ
         CALL XG$ESCAPE (2,1,ICK)
         CALL XG$SET_CHARSIZE (TEMPSIZ,TEMPSIZ)
         CALL XG$SET_CHARJUST ('CENTER','CENTER')
         CALL XG$SET_FONT(26)
         DO 260 I=1,NOM2
            XPOS = M2(I) * PERDAY
            CALL XG$MOVE_ABS_2 (XPOS,YPOS)
            CALL XG$TEXT_COUNT('$',1)
  260    CONTINUE 
         YPOS = YPOS - SIZEEACH
         ICK = 260. * TEXTSIZ
         CALL XG$ESCAPE (2,1,ICK)
         CALL XG$SET_CHARSIZE(TEXTSIZ,TEXTSIZ)
         CALL XG$SET_FONT (13)
         DO 270 I=1,NOM2
            XPOS = M2(I)*PERDAY
            CALL XG$MOVE_ABS_2 (XPOS,YPOS)
            KOUNTT = ISIZEIT(M2TITLE(I),32)
            CALL XG$TEXT_COUNT (M2TITLE(I),KOUNTT)
  270    CONTINUE 
         YPOS = YPOS - (2. *  SIZEEACH)
      ENDIF 
  280 CONTINUE 
C
C              come here if no milestones
C
      CALL XG$SET_FONT(13)
      CALL XG$SET_CHARPRECISION ('STROKE')
      CALL XG$SET_CHARJUST ('LEFT','CENTER')
      CALL XG$SET_CHARSIZE (TEXTSIZ,TEXTSIZ)
      ICK = 260. * TEXTSIZ
      CALL XG$ESCAPE(2,1,ICK)
C
C              this is the real plotting loop
C
      DO 310 I=1,NOITEMS
C
C              does this point get plotted?
C
         IF (DATEBEG(I) .EQ. -2)GOTO 300 
         IF (DATEEND(I) .EQ. -1)GOTO 300 
C
C         see if item should start at left margin
C
         IF (DATEBEG(I) .LT. 0) THEN
            XLOC1 = 0.
         ELSE 
            XLOC1 = DATEBEG(I) * PERDAY
         ENDIF 
C
C         move to beginning
C
         CALL XG$MOVE_ABS_2 (XLOC1,YPOS)
C
C         how about the end?
C
         IF (DATEEND(I) .LT. 0) THEN
            XLOC2 = 10.0
         ELSE 
            XLOC2 = DATEEND(I) * PERDAY
         ENDIF 
         CALL XG$LINE_ABS_2 (XLOC2,YPOS)
         ZINC = .4*SIZEEACH
         CALL XG$MOVE_ABS_2(XLOC1,YPOS+ZINC)
         CALL XG$LINE_ABS_2 (XLOC1,YPOS-ZINC)
         CALL XG$MOVE_ABS_2 (XLOC2,YPOS+ZINC)
         CALL XG$LINE_ABS_2 (XLOC2,YPOS-ZINC)
C
C              Put the subtitle out now
C
         RANGE1 = XLOC1
         RANGE2 = 10. - XLOC2
         ISIZE = ISIZEIT(SUBTITLE(I),80)
         CALL XG$INQ_TEXT_EXTENT_3_COUNT (SUBTITLE(I)(1:1),ISIZE,X,Y,Z)
         IF (DATEOVR(I) .NE. 0) THEN
            YPOS = YPOS - SIZEEACH
            CALL XG$MOVE_ABS_2 (XLOC1+.20,YPOS)
            GOTO 290 
         ENDIF 
         IF (RANGE1 .GE. RANGE2 ) THEN
            CALL XG$MOVE_ABS_2 (XLOC1-.20-X,YPOS)
         ENDIF 
         IF (RANGE1 .LT. RANGE2) THEN
            CALL XG$MOVE_ABS_2 (XLOC2+.20,YPOS)
         ENDIF 
  290    CONTINUE 
         CALL XG$TEXT_COUNT(SUBTITLE(I)(1:1),ISIZE)
  300    CONTINUE 
         YPOS = YPOS - SIZEEACH
  310 CONTINUE 
      CALL XG$SET_CHARJUST ('RIGHT','BOTTOM')
      CALL XG$MOVE_ABS_2(10.,0.)
      CALL XG$SET_CHARSIZE(.15,.15)
      ICK=260. * .15
      CALL XG$ESCAPE(2,1,ICK)
      KOUNTT = ISIZEIT(NOTEPAD,40)
      CALL XG$TEXT_COUNT (NOTEPAD,KOUNTT)
      CALL XG$CLOSE_TEMPORARY_SEG
      CALL XG$DESELECT_VIEW_SURFACE  (VIEWSURF)
      CALL XG$TERMINATE_VIEW_SURFACE  (VIEWSURF)
      CALL XG$TERMINATE_CORE
      STOP 
 1000 FORMAT (' *** milestone out of bounds:',/,1X,A,/,
     -        ' *** skipped')
 1010 FORMAT (' *** milestones must have equal dates!',/,1X,A,/,
     -        ' *** item skipped')
 1020 FORMAT (' *** warning: milestone title exceeds 32 chars',/,1X,A,
     -        ' *** will use only 32 characters of this title')
 1030 FORMAT (' *** bad "option"',/,1X,A,/,' *** item ignored')
 1040 FORMAT (' What is note for lower-right corner (40 chars.)')
 1050 FORMAT (A40)
 1060    FORMAT (I)
 1070 FORMAT (' *** one or both dates before start of chart: ',/,1X,A,
     1        /, ' *** item may not be visible')
 1080 FORMAT (' *** one or both dates after end of chart: ',/,1X,A,/,
     1         ' *** item may not be visible')
 1090 FORMAT (' *** Bad date (start>end): ',A,/,
     1         ' *** item skipped')
 1100 FORMAT (' *** starting date specified was AFTER ending date',/,
     1         ' *** Aborting')
 1110 FORMAT (' *** starting date equal to ending date!',/,
     1         ' *** I don''t know how to do a zero length chart!',/,
     2         ' *** Aborting!')
 1120 FORMAT (' Now accepting events, starting dates, and ending dates',
     1    ' in the format'/' ''event title'',mm/dd/yy,mm/dd/yy')
 1130 FORMAT (' *** Bad date data:',A,/,' *** Aborting')
 1140 FORMAT (' *** Bad date data:',A,/,' *** item skipped')
 1150 FORMAT (' Enter starting and ending days of chart ',
     1         '(mm/dd/yy,mm/dd/yy)')
 1160 FORMAT (A80)
 1170 FORMAT (A80)
 1180 FORMAT (' What is line 1 of chart title (80 chars.)')
 1190 FORMAT (' What is line 2 of chart title (80 chars.)')
      END 
      SUBROUTINE DATECONV (DATEARR, IDATE)
      CHARACTER DATEARR(3)*4
      INTEGER DATES(3)
C              Days from 1st of year to 1st of month
      INTEGER DAYS(12)/000,031,059,090,120,151,181,212,243,273,304,334/
      CALL DATEVERIFY(DATEARR,DATES)
      IF (DATES(1) .GT. 12) THEN
         IDATE = -1
         RETURN
      ENDIF 
C
C         date looks good, compute number of days from 0,0,0 to m,d,y
C
      IDATE = DAYS(DATES(1)) +DATES(3)*365        +DATES(2)+1+INT(FLOAT(
     1DATES(3))/4.)+INT(FLOAT(DATES(3))/400.)-INT(FLOAT(DATES(3))/100.)
C
C         was it a leap year?
C
      TEMP = FLOAT(DATES(3))/4.
      IF (FLOAT(DATES(3)/4) .NE. TEMP) THEN
C
C              couldn't be...bail out
C
         RETURN
      ENDIF 
C
C         its a leap year! if month march or better, add one.
C
      IF (DATES(1) .GT. 2) IDATE = IDATE+1
      TEMP2 = FLOAT(DATES(3))/400.
      IF (FLOAT(DATES(3)/400) .EQ. TEMP2) THEN
C
C              leap century okay, jump back
C
         RETURN
      ENDIF 
      TEMP2 = FLOAT(DATES(3))/100.
      IF (FLOAT(DATES(3)/100) .EQ. TEMP2) THEN
C
C              un-leap century? auugh, take that one away!
C
         IDATE = IDATE - 1
      ENDIF 
      RETURN
      END 
      SUBROUTINE DATEVERIFY (DATEARR,DATES)
C              Months:   J,F,M,A,M,J,J,A,S,O,N,D
      INTEGER MONTHS(12)/3,1,3,2,3,2,3,3,2,3,2,3/
      CHARACTER DATEARR(3)*4
      INTEGER DATES(3)
C
C         convert character input to integers
C
      DO 100 I=1,3
         DECODE (4,1000,DATEARR(I),N) DATES(I)
  100 CONTINUE 
C
C         allowable input allow date with yy or yyyy year;
C         if yy form, add 1900 just for yuks
C
      IF (DATES(3) .LT. 100) DATES(3) = DATES(3)+1900
C
C         now, get serious.  begin date checks here
C
C         is month reasonable?
C
      IF (DATES(1) .LT.1 .OR. DATES(1) .GT. 12)GOTO 120 
C
C         okey dokey, now is day of month reasonable?
C
      IF (DATES(2) .LT. 1 .OR. DATES(2) .GT. 31)GOTO 120 
C
C         reasonable, yes, but possible?  check actual days per month
C
      IF (MONTHS(DATES(1)) .EQ. 3) THEN
C
C              code 3 means 31 days, which we've already checked
C
         GOTO 110 
      ENDIF 
      IF (MONTHS(DATES(1)) .EQ. 2) THEN
C
C              code 2 means 30 days, make cursory check
C
         IF (DATES(2) .GT. 30) THEN
            GOTO 120 
         ENDIF 
         GOTO 110 
      ENDIF 
C
C              auugh! february! who was gregory, anyway?
C
      YEAR = FLOAT(DATES(3))
      TEMP1 = YEAR/100.
      ITEMP1 = DATES(3)/100
      IF (FLOAT(ITEMP1) .EQ. TEMP1) THEN
C
C              century, but not leap century
C
         IF (DATES(2).GT.28) THEN
            GOTO 120 
         ENDIF 
         GOTO 110 
      ENDIF 
      TEMP1 = YEAR/4.
      ITEMP1 = DATES(3)/4
      IF (FLOAT(ITEMP1) .EQ. TEMP1) THEN
C
C              leap year or century
C
         IF (DATES(2) .GT. 29) THEN
            GOTO 120 
         ENDIF 
         GOTO 110 
      ENDIF 
C
C         regular, plain old february (sigh)
C
      IF (DATES(2) .GT. 28) THEN
         GOTO 120 
      ENDIF 
  110 CONTINUE 
C
C              date is good
C
      RETURN
C
C              date is bad
C
  120 CONTINUE 
      DO 130 I=1,3
         DATES(I) = 9999
  130 CONTINUE 
      RETURN
 1000 FORMAT (I)
      END 
      FUNCTION ISIZEIT (CHARARG,INTARG)
          CHARACTER CHARARG*(*)
      DO 100 I=INTARG,1,-1
         KK = I
         IF (CHARARG(I:I) .NE. ' ')GOTO 110 
  100 CONTINUE 
  110 CONTINUE 
      ISIZEIT = KK
      RETURN
      END 
