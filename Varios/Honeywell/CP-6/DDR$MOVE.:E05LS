VERSION E05

PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:1    
        1        1        /*M* DDR$MOVE . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D* NAME: DDR$MOVE
        9        9             CALL:  CALL DDR$MOVE(STRING,LENGTH,BUFFER$,BUF_SIZE) ALTRET(TOO_BIG)
       10       10             INPUT: STRING..THE STRING TO BE MOVED INTO THE BUFFER
       11       11                    LENGTH..THE LENGTH OF THE STRING
       12       12                    BUFFER$.POINTER TO THE BUFFER
       13       13                    BUF_SIZE.. SIZE OF THE BUFFER
       14       14             OUTPUT:IF THE STRING WONT FIT, ALTRETURN WITH NO CHANGE
       15       15                    ELSE, THE STRING IS MOVED.
       16       16                    BUFFER$ POINTS TO NEXT AVAILABLE CHARACTER
       17       17                    BUF_SIZE IS DECREMENTED BY 'LENGTH'
       18       18                    */
       19       19        DDR$MOVE: PROC(STRING,LENGTH,BB$,BB_SIZE) ALTRET;
       20       20        /* PARAMETERS */
       21       21    1   DCL STRING CHAR(LENGTH);
       22       22    1   DCL LENGTH SBIN;
       23       23    1   DCL BB$ PTR;
       24       24    1   DCL BB_SIZE SBIN;
       25       25    1   DCL A$REA CHAR(LENGTH) BASED;
       26       26                       /* CHECK STRING LENGTH.  ALTRETURN IF IT WONT FIT IN BBUFFER */
       27       27    1        IF BB_SIZE < LENGTH THEN ALTRETURN;
       28       28                                                /* MOVE THE STRING INTO THE BUFFER */
       29       29    1        BB$->A$REA = STRING;
       30       30                                                /* UPDATE THE BUFFER POINTER */
       31       31    1        BB$ = PINCRC(BB$,LENGTH);
       32       32                  /* UPDATE THE BUFFER SIZE TO THE NUMBER OF CHARACTERS REMAINING */
       33       33    1        BB_SIZE = BB_SIZE-LENGTH;
       34       34    1        RETURN;
       35       35    1   END DDR$MOVE;

PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:2    
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDR$MOVE.

   Procedure DDR$MOVE requires 27 words for executable code.
   Procedure DDR$MOVE requires 8 words of local(AUTO) storage.

    No errors detected in file DDR$MOVE.:E05TSI    .

PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:3    

 Object Unit name= DDR$MOVE                                   File name= DDR$MOVE.:E05TOU
 UTS= JUL 29 '97 14:08:23.32 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    27     33  DDR$MOVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        4  DDR$MOVE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_4
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:4    


        1        1        /*M* DDR$MOVE . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D* NAME: DDR$MOVE
        9        9             CALL:  CALL DDR$MOVE(STRING,LENGTH,BUFFER$,BUF_SIZE) ALTRET(TOO_BIG)
       10       10             INPUT: STRING..THE STRING TO BE MOVED INTO THE BUFFER
       11       11                    LENGTH..THE LENGTH OF THE STRING
       12       12                    BUFFER$.POINTER TO THE BUFFER
       13       13                    BUF_SIZE.. SIZE OF THE BUFFER
       14       14             OUTPUT:IF THE STRING WONT FIT, ALTRETURN WITH NO CHANGE
       15       15                    ELSE, THE STRING IS MOVED.
       16       16                    BUFFER$ POINTS TO NEXT AVAILABLE CHARACTER
       17       17                    BUF_SIZE IS DECREMENTED BY 'LENGTH'
       18       18                    */
       19       19        DDR$MOVE: PROC(STRING,LENGTH,BB$,BB_SIZE) ALTRET;

     19  0 000000   000000 700200 xent  DDR$MOVE     TSX0  ! X66_AUTO_4
         0 000001   000010 000004                    ZERO    8,4

       20       20        /* PARAMETERS */
       21       21    1   DCL STRING CHAR(LENGTH);
       22       22    1   DCL LENGTH SBIN;
       23       23    1   DCL BB$ PTR;
       24       24    1   DCL BB_SIZE SBIN;
       25       25    1   DCL A$REA CHAR(LENGTH) BASED;
       26       26                       /* CHECK STRING LENGTH.  ALTRETURN IF IT WONT FIT IN BBUFFER */
       27       27    1        IF BB_SIZE < LENGTH THEN ALTRETURN;

     27  0 000002   200006 470500                    LDP0    @BB_SIZE,,AUTO
         0 000003   200004 471500                    LDP1    @LENGTH,,AUTO
         0 000004   000000 236100                    LDQ     0,,PR0
         0 000005   100000 116100                    CMPQ    0,,PR1
PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:5    
         0 000006   000010 605000 0                  TPL     s:29

     27  0 000007   000000 702200 xent               TSX2  ! X66_AALT

       28       28                                                /* MOVE THE STRING INTO THE BUFFER */
       29       29    1        BB$->A$REA = STRING;

     29  0 000010   200005 473500                    LDP3    @BB$,,AUTO
         0 000011   300000 474500                    LDP4    0,,PR3
         0 000012   100000 720100                    LXL0    0,,PR1
         0 000013   200003 475500                    LDP5    @STRING,,AUTO
         0 000014   040140 100540                    MLR     fill='040'O
         0 000015   500000 000010                    ADSC9   0,,PR5                   cn=0,n=*X0
         0 000016   400000 000010                    ADSC9   0,,PR4                   cn=0,n=*X0

       30       30                                                /* UPDATE THE BUFFER POINTER */
       31       31    1        BB$ = PINCRC(BB$,LENGTH);

     31  0 000017   100000 236100                    LDQ     0,,PR1
         0 000020   300000 474500                    LDP4    0,,PR3
         0 000021   000011 402007                    MPY     9,DL
         0 000022   000000 116003                    CMPQ    0,DU
         0 000023   000025 605000 0                  TPL     s:31+6
         0 000024   000044 036003                    ADLQ    36,DU
         0 000025   400000 503506                    ABD     0,QL,PR4
         0 000026   300000 454500                    STP4    0,,PR3

       32       32                  /* UPDATE THE BUFFER SIZE TO THE NUMBER OF CHARACTERS REMAINING */
       33       33    1        BB_SIZE = BB_SIZE-LENGTH;

     33  0 000027   000000 236100                    LDQ     0,,PR0
         0 000030   100000 136100                    SBLQ    0,,PR1
         0 000031   000000 756100                    STQ     0,,PR0

       34       34    1        RETURN;

     34  0 000032   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:6    
       35       35    1   END DDR$MOVE;

PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:7    
--  Include file information  --

   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDR$MOVE.

   Procedure DDR$MOVE requires 27 words for executable code.
   Procedure DDR$MOVE requires 8 words of local(AUTO) storage.

    No errors detected in file DDR$MOVE.:E05TSI    .
PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:8    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:9    
          MINI XREF LISTING

A$REA
        25**DCL        29<<ASSIGN
BB$
        23**DCL        19--PROC       29>>ASSIGN     31<<ASSIGN     31>>ASSIGN
BB_SIZE
        24**DCL        19--PROC       27>>IF         33<<ASSIGN     33>>ASSIGN
LENGTH
        22**DCL        19--PROC       21--IMP-SIZ    25--IMP-SIZ    27>>IF         29>>ASSIGN     29>>ASSIGN
        31>>ASSIGN     33>>ASSIGN
STRING
        21**DCL        19--PROC       29>>ASSIGN
PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:10   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDR$MOVE File=DDR$MOVE.:E05TSI                                TUE 07/29/97 14:08 Page:11   
              MINI UREF LISTING

DDR$MOVE      19**PROC
