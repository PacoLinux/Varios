VERSION E05

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:1    
        1        1        /*M* JMR$TRANS Routines handling transitions between scheduler queues.       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMR$TRANS: PROC(CITE$,XIF$);
        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE CP_6;                          /* SYSTEM FPT MACROS                  */
       16       96        %INCLUDE CP_6_SUBS;
       17      636        %INCLUDE JM_SCODE_C;
       18      663 S      %INCLUDE B$JIT_C;
       19      664        %INCLUDE JM$STRUCT;                     /* MBS TABLE STRUCTURES               */
       20     1409        %INCLUDE JMC_DATA_R;                    /* MBS-RESIDENT STATIC DATA           */
       21     1424        %INCLUDE JM_SUBS_C;                     /* MBS QUEUE & EVENT DEFINITIONS      */
       22     1530        %INCLUDE B_STRINGS_C;                   /* SYSTEM STRING SUBSTITUTIONS        */
       23     1659        %INCLUDE B_SEGIDS_C;
       24     2198        %INCLUDE OC_SUBS_C;
       25     2929        %INCLUDE OC_MESSHD_C;
       26     2982        %INCLUDE SS_SCHED_C;
       27     3215        %INCLUDE XSJ_MAC_C;
       28     3294        %INCLUDE XSJ_SUBS_C;
       29     3321        %INCLUDE FOO_MAC_C;
       30     4069        %INCLUDE JG_EVID_C;
       31     4294
       32     4295
       33     4296
       34     4297        /**/
       35     4298        /* PARAMETERS */
       36     4299        /**/
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:2    
       37     4300    1   DCL CITE$ PTR;                  /* Ptr to JM$CITE for events...    */
       38     4301    1   DCL KEYIN$ REDEF CITE$ PTR;     /* ...or to JM$KEYIN for keyins... */
       39     4302    1   DCL SYSID_TO_FIND REDEF CITE$ UBIN; /* ...or a SYSID for JMR$FIND. */
       40     4303    1   DCL XIF$ PTR;                   /* IF$ for JMR$FIND.               */
       41     4304
       42     4305
       43     4306
       44     4307        /**/
       45     4308        /* DCBS */
       46     4309        /**/
       47     4310    1   DCL M$MBSCOM DCB;
       48     4311    1   DCL M$STATUS DCB;
       49     4312
       50     4313
       51     4314
       52     4315        /**/
       53     4316        /* BASED */
       54     4317        /**/
       55     4318        %B$JIT0;
       56     4407        %U$JIT1;
       57     4481        %M$JIT2X;
       58     4484        %F$JIT3X;
       59     4487        %S$JIT4X;
       60     4490        %J$JIT5;
       61     4578        %A$JIT6X;
       62     4581        %JM_IF (FPTN=JM$IF,STCLASS=BASED);
       63     4739    1   DCL APTR$ PTR BASED ALIGNED;
       64     4740    1   DCL AWORD UBIN BASED ALIGNED;
       65     4741        %JM_KEYIN (FPTN=JM$KEYIN,STCLASS=BASED);
       66     4797        %JM_KEYIN (FPTN=JM$RRKEYIN,TYP=RERUN,STCLASS=BASED);
       67     4853        %JM_KEYIN (FPTN=JM$ALLKEYIN,TYP=ALL,STCLASS=BASED);
       68     4909        %JM_SN (FPTN=JM$QSN,STCLASS=BASED);
       69     4948        %JM_CITE (FPTN=JM$CITE,STCLASS=BASED);
       70     4998        %JM_PART (FPTN=JM$PART,STCLASS=BASED);
       71     5053
       72     5054
       73     5055
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:3    
       74     5056        /**/
       75     5057        /* AUTO */
       76     5058        /**/
       77     5059    1   DCL I SBIN;
       78     5060    1   DCL J SBIN;
       79     5061    1   DCL WC SBIN;
       80     5062    1   DCL COUNT SBIN;
       81     5063    1   DCL Q UBIN WORD;
       82     5064    1   DCL QNUM UBIN WORD;
       83     5065    1   DCL COND BIT(1) UNAL;
       84     5066    1   DCL DEL BIT(1) UNAL;
       85     5067    1   DCL HALFSYSID UBIN HALF HALIGNED;
       86     5068    1   DCL ACCT CHAR(8);
       87     5069    1   DCL SYSID UBIN;
       88     5070    1   DCL STEPCC UBIN;
       89     5071    1   DCL STATUS UBIN;
       90     5072    1   DCL FRS UBIN;
       91     5073    1   DCL TESTCC UBIN;
       92     5074    1   DCL PPTR$ PTR;
       93     5075    1   DCL IF$ PTR;
       94     5076    1   DCL IF_PTR REDEF IF$ UBIN WORD ALIGNED;
       95     5077    1   DCL TIF$ PTR;
       96     5078    1   DCL ENDIF$ PTR;
       97     5079
       98     5080
       99     5081
      100     5082        /**/
      101     5083        /* STATIC */
      102     5084        /**/
      103     5085    1   DCL WE_HAVENT_DONE_A_S$JM243_YET BIT(1) ALIGNED STATIC INIT('1'B);
      104     5086        %XSJ_JOBINFO(FPTN=OLDJOB_INFO);
      105     5101        %XSJ_PARAM(FPTN=READ_INFO,
      106     5102                   TYPE=%TYP_INFO#,
      107     5103                   DCB=M$STATUS,
      108     5104                   BUF=OLDJOB_INFO);
      109     5121        %XSJ_PARAM(FPTN=CLOSE_STATS,
      110     5122                   DCB=M$STATUS);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:4    
      111     5139        %OC_MESSHD_W(NPARMS=3);
      112     5152    1         2 LEN(0:2) UBIN BYTE UNAL INIT(2,1,1),
      113     5153    1         2 ID UBIN HALF UNAL INIT(0),
      114     5154    1         2 OK_TYPE UBIN BYTE UNAL INIT(0),
      115     5155    1         2 PRIO UBIN BYTE UNAL INIT(0);
      116     5156    1   DCL CUTS UBIN WORD STATIC DALIGNED;
      117     5157        %FPT_TIME(SOURCE=CLOCK,
      118     5158                  DEST=UTS,
      119     5159                  TSTAMP=CUTS);
      120     5178        %FPT_WRITE(FPTN=WRITE_CSCG,
      121     5179                   DCB=M$MBSCOM);
      122     5210        %FPT_RUE(EVENT=%SS_CAN);
      123     5224        %FPT_RESCTL(FPTN=GET_PKSETS,
      124     5225                    MBSDISP=YES,
      125     5226                    RPSN=PSNLIST);
      126     5243        %VLP_RPSN(FPTN=PSNLIST,N=64);
      127     5258        %VLP_RPSN(FPTN=OLD_PSNLIST,N=64);
      128     5273        %FPT_CLOSE(FPTN=CLOSE_CSCG,
      129     5274                   DCB=M$MBSCOM,
      130     5275                   DISP=SAVE);
      131     5317
      132     5318
      133     5319
      134     5320        /**/
      135     5321        /* SYMREFS */
      136     5322        /**/
      137     5323    1   DCL JC_MBSZAP UBIN SYMREF;
      138     5324    1   DCL B$JIT$ PTR SYMREF;
      139     5325        %FO_SCB (FPTN=JM_JOBSCB,STCLASS=SYMREF);
      140     5355
      141     5356
      142     5357
      143     5358        /**/
      144     5359        /* ENTREFS */
      145     5360        /**/
      146     5361    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      147     5362    1   DCL JMJ$DELJOB    ENTRY(1) ALTRET;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:5    
      148     5363    1   DCL JMJ$REWRITE_FIT ENTRY(1) ALTRET;
      149     5364    1   DCL JMS$SCHED     ENTRY;
      150     5365    1   DCL JMU$ADD2Q     ENTRY(3);
      151     5366    1   DCL JMU$MOVE_IF   ENTRY(3);
      152     5367    1   DCL JMU$REL_SLOT  ENTRY(1);
      153     5368    1   DCL JMU$SELECTQ   ENTRY(2);
      154     5369    1   DCL JMU$SETSEG    ENTRY(2);
      155     5370    1   DCL JMU$UNLINK_IF ENTRY(3);
      156     5371    1   DCL JMU$WRITE_STATS ENTRY(1);
      157     5372    1   DCL XSJ$CLOSE     ENTRY(1) ALTRET;
      158     5373    1   DCL XSJ$READ      ENTRY(1) ALTRET;
      159     5374
      160     5375
      161     5376
      162     5377        /**/
      163     5378        /* SUBS */
      164     5379        /**/
      165     5380        %SUB F_JM='1215'O;
      166     5381        %SUB M_R='22'O;
      167     5382        %EQU CANCEL_TYPE=0;
      168     5383        %EQU DEL_TYPE=1;
      169     5384        %EQU PRIO_TYPE=2;
      170     5385        %EQU AUTODEL_TYPE=3;
      171     5386        %EQU PRIOALL_TYPE = 4;
      172     5387        %EQU DELALL_TYPE = 5;
      173     5388        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:6    
      174     5389        /**/
      175     5390        /*                      INTERNAL PROCEDURES                        */
      176     5391        /* Find a particular SYSID somewhere on one of MBS's queues.       */
      177     5392    1   FIND_SYSID: PROC(ID,QUEUE,IF$) ALTRET;
      178     5393    2   DCL ID UBIN PARAM;
      179     5394    2   DCL QUEUE UBIN PARAM;
      180     5395    2   DCL IF$ PTR PARAM;
      181     5396        /**/
      182     5397    2   DCL I SBIN;
      183     5398        /**/
      184     5399    3           DO I = JM_Q$WP TO JM_Q$RUN;
      185     5400    3           IF$ = JMC_CHAINS.HEAD$(I);
      186     5401    4             DO WHILE (IF$ ~= ADDR(NIL));
      187     5402    4             IF IF$->JM$IF.SYSID = ID THEN
      188     5403    5               DO;
      189     5404    5               QUEUE = I;
      190     5405    5               RETURN;
      191     5406    5               END;
      192     5407    4             IF$ = IF$->JM$IF.LNK$;
      193     5408    4             END;
      194     5409    3           END;
      195     5410    2         ALTRETURN;
      196     5411    2   END FIND_SYSID;
      197     5412        /**/
      198     5413        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:7    
      199     5414        /**/
      200     5415        /* Send a successful reply message back to the appropriate con-    */
      201     5416        /* sole(s), based on whether WSN = WOO.                            */
      202     5417    1   REPLY_STATUS:PROC;
      203     5418    2         OC_MESSHD.SYSID = IF$->JM$IF.SYSID;
      204     5419    2         OC_MESSHD.ID    = IF$->JM$IF.SYSID;
      205     5420    2         OC_MESSHD.WSN = IF$->JM$IF.WSN;
      206     5421    2   REPLY_NONJOB: ENTRY;
      207     5422    2         OC_MESSHD.CADDR = M_ADMIN;
      208     5423    2         OC_MESSHD.MSG# = MBSREPLY_MSG#;
      209     5424    2         WRITE_CSCG.BUF_ = VECTOR(OC_MESSHD);
      210     5425    2         CALL M$WRITE(WRITE_CSCG);
      211     5426    2         IF IF$ ~= ADDR(NIL) THEN
      212     5427    2          IF IF$->JM$IF.WSN ~= IF$->JM$IF.WOO THEN
      213     5428    3            DO;
      214     5429    3            OC_MESSHD.CADDR = M_ADMIN | M_NONSYS;
      215     5430    3            OC_MESSHD.WSN = IF$->JM$IF.WOO;
      216     5431    3            CALL M$WRITE(WRITE_CSCG);
      217     5432    3            END;
      218     5433    2         RETURN;
      219     5434    2   END REPLY_STATUS;
      220     5435        /**/
      221     5436        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:8    
      222     5437        /**/
      223     5438        /* Internal routine to free virtual resource and packset name      */
      224     5439        /* linked list entries when a job terminates.                      */
      225     5440    1   REL_SLOTS: PROC(LISTPTR$);
      226     5441    2   DCL LISTPTR$ PTR;
      227     5442    2   DCL TMP_PTR$ PTR;
      228     5443    2   DCL NXT_PTR$ PTR;
      229     5444    2         TMP_PTR$ = LISTPTR$;
      230     5445    3           DO WHILE (TMP_PTR$ ~= ADDR(NIL));
      231     5446    3           NXT_PTR$ = TMP_PTR$->JM$QSN.NXT$;
      232     5447    3           CALL JMU$REL_SLOT(TMP_PTR$);
      233     5448    3           TMP_PTR$ = NXT_PTR$;
      234     5449        /* NOTE: This works because the NXT$ pointer is in the same place  */
      235     5450        /* in both serial no. and virtual resource list entries.           */
      236     5451    3           END;
      237     5452    2         RETURN;
      238     5453    2   END REL_SLOTS;
      239     5454        /**/
      240     5455        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:9    
      241     5456        /**/
      242     5457        /*D* NAME:         DELJOB
      243     5458             PURPOSE:      To delete a job
      244     5459             DESCRIPTION:  If the job is running, M$RUEs it and RETURNs.
      245     5460                           (This will causes the job to go off & we'll
      246     5461                           handle it when we get the TERM event).
      247     5462                           Else removes it from the queues, calls
      248     5463                           JMR$CHECK_JD blow away its dependants, deletes
      249     5464                           the job file & job frame, and ALTRETs. */
      250     5465    1   DELJOB: PROC(QUEUE,IF$) ALTRET;
      251     5466    2   DCL QUEUE UBIN WORD;
      252     5467    2   DCL IF$ PTR;
      253     5468    2   DCL SYSID UBIN WORD;
      254     5469        %JM_CITE (FPTN=JM@CITE,STCLASS=AUTO);
      255     5519        /**/
      256     5520    2   DCL FOI$RBLK      ENTRY(3) ALTRET;
      257     5521    2   DCL JMU$UNLINK_IF ENTRY(3);
      258     5522        /**/
      259     5523    2         IF QUEUE = JM_Q$RUN THEN
      260     5524    3           DO;
      261     5525    3           FPT_RUE.V.USER# = IF$->JM$IF.SYSID;
      262     5526    3           CALL M$RUE(FPT_RUE);
      263     5527    3           RETURN;
      264     5528    3           END;
      265     5529    2         CALL JMU$UNLINK_IF(QUEUE,,IF$);
      266     5530        /* Delete this job's info table and put it into the job status     */
      267     5531        /* file with status = deleted/canceled/"shafted", etc.  Delete     */
      268     5532        /* the input file too.                                             */
      269     5533    2         CALL JMU$WRITE_STATS(IF$);
      270     5534        /* Delete any FOLLOWing jobs by passing a fake JMEV_JOFF# event    */
      271     5535        /* to JMR$CHECK_JD, specifying a really awful STATUS#.             */
      272     5536    2         JM@CITE.ACCT = IF$->JM$IF.ACCT;
      273     5537    2         JM@CITE.SYSID = IF$->JM$IF.SYSID;
      274     5538    2         JM@CITE.JOFF_INFO.STATUS = IF$->JM$IF.STATUS;
      275     5539    2         CALL JMR$CHECK_JD (ADDR(JM@CITE));
      276     5540    2         SYSID = IF$->JM$IF.SYSID;
      277     5541    2         CALL JMJ$DELJOB (SYSID);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:10   
      278     5542    2         IF IF$->JM$IF.MAXVR > 0 THEN
      279     5543    2          CALL REL_SLOTS(IF$->JM$IF.VRLIST$);
      280     5544    3         IF IF$->JM$IF.MAXPSN > 0 THEN DO;
      281     5545    3           CALL REL_SLOTS(IF$->JM$IF.XLNK$);
      282     5546    3           CALL REL_SLOTS(IF$->JM$IF.SLNK$);
      283     5547    3           END;
      284     5548    2         CALL FOI$RBLK (JM_JOBSCB,IF$,SIZEW(IF$->JM$IF));
      285     5549    2         JMC_BFIS$->AWORD = JMC_BFIS$->AWORD-1;
      286     5550    2         ALTRETURN;
      287     5551    2   END DELJOB;
      288     5552        /**/
      289     5553        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:11   
      290     5554        /**/
      291     5555        /* This routine scans a jobs required shared packsets, and compares
      292     5556           them with those currently mounted. If all of the job's required
      293     5557           packsets are up, the routine ** ALTRETURNs **, if not (i.e. the
      294     5558           job can't be run now) then it RETURNs normally.                 */
      295     5559    1   CHK_PSNS: PROC ALTRET;
      296     5560        /**/
      297     5561    2   DCL PKSET$ PTR;
      298     5562    2   DCL K SBIN;
      299     5563        %SUB JM$QSN = PKSET$->JM$QSN;
      300     5564        /**/
      301     5565    2         PKSET$ = IF$->JM$IF.SLNK$;
      302     5566    3           DO WHILE (PKSET$ ~= ADDR(NIL));
      303     5567    4             DO K = 0 TO PSNLIST.NN# - 1;
      304     5568    4             IF  (JM$QSN.TXT = PSNLIST.RPLIST.PSN#(K))
      305     5569    4             AND (PSNLIST.RPLIST.USAGE#(K) = %SHARED#) THEN
      306     5570    4              GOTO NXT_PSN;
      307     5571    4             END;
      308     5572        /* If we got here, at least one required packset wasn't up, so... */
      309     5573    3           RETURN;                  /* NOTE: normal return if job is 'NORUN'   */
      310     5574    3   NXT_PSN: PKSET$ = JM$QSN.NXT$;
      311     5575    3           END;
      312     5576        /* If we got here, all required shared packsets are up, so... */
      313     5577    2         ALTRETURN;            /* NOTE: alternate return if job is ok to run   */
      314     5578    2   END CHK_PSNS;
      315     5579        /**/
      316     5580        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:12   
      317     5581        /**/
      318     5582        /* This routine will abort a job, marking it to be rerun if it
      319     5583           allows rerun.                                                   */
      320     5584    1   RERUN_JOB: PROC ALTRET;
      321     5585        /**/
      322     5586    2         IF IF$->JM$IF.FLG.RR THEN
      323     5587    3           DO;
      324     5588        /* Set flag to let monitor know we're rerunning this guy     */
      325     5589    4             DO INHIBIT;
      326     5590    4             IF IF$->JM$IF.OFFIP THEN ALTRETURN;
      327     5591    4             IF$->JM$IF.FLG.KRERUN='1'B;
      328     5592    4             END;
      329     5593        /* Give him a prio boost if he's < prio 14 */
      330     5594    3           IF IF$->JM$IF.PRIO < 14 THEN
      331     5595    3            IF$->JM$IF.PRIO = IF$->JM$IF.PRIO + 1;
      332     5596    3           END;
      333     5597    2         FPT_RUE.V.USER# = IF$->JM$IF.SYSID;
      334     5598    2         CALL M$RUE(FPT_RUE);
      335     5599    2         RETURN;
      336     5600    2   END RERUN_JOB;
      337     5601        /**/
      338     5602        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:13   
      339     5603        /**/
      340     5604        /* This routine performs the actual work for the !PRIO I ALL and
      341     5605           !DELETE I ALL keyins, scanning the entire list of all jobs
      342     5606           in order to find all of those indicated by the parameters to
      343     5607           the keyin - ACCOUNT, WSN, or all at a given priority.           */
      344     5608    1   SELECT_ALL: PROC(OPERATION);
      345     5609    2   DCL OPERATION UBIN;
      346     5610    2   DCL L SBIN;
      347     5611    2   DCL M SBIN;
      348     5612    2   DCL NEWQUEUE UBIN;
      349     5613        /**/
      350     5614    2         IF (OPERATION = %PRIOALL_TYPE) AND (KEYIN$->JM$ALLKEYIN.OLDPRIO ~= -1) THEN
      351     5615    3           DO;
      352     5616        /* This !PRIO ALL keyin is for only a specific priority */
      353     5617    3           L = KEYIN$->JM$ALLKEYIN.OLDPRIO + JM_Q$P0;
      354     5618    3           M = L;
      355     5619    3           END;
      356     5620    2         ELSE
      357     5621    3           DO;
      358     5622        /* Otherwise its for all jobs in any MBS scheduling state */
      359     5623    3           L = JM_Q$WP;
      360     5624    3           M = JM_Q$P15;
      361     5625    3           END;
      362     5626    3           DO I = L TO M;                  /* Go through all requested jobs      */
      363     5627    3   RECYCLE:;
      364     5628    3           IF$ = JMC_CHAINS.HEAD$(I);
      365     5629    4             DO WHILE (IF$ ~= ADDR(NIL));
      366     5630    4             TIF$ = IF$->JM$IF.LNK$;
      367     5631        /* If a WSN was specified, then we only want jobs which have that
      368     5632           WSN.                                                            */
      369     5633    4             CALL INDEX(WC,'?',KEYIN$->JM$KEYIN.WSN);
      370     5634    4             IF KEYIN$->JM$KEYIN.WSN ~= ' ' THEN
      371     5635    4              IF SUBSTR(KEYIN$->JM$KEYIN.WSN,0,WC) ~= SUBSTR(IF$->JM$IF.WSN,0,WC) THEN
      372     5636    4               GOTO NOT_WANTED;
      373     5637        /* Likewise for any specified account. */
      374     5638    4             IF KEYIN$->JM$ALLKEYIN.ACCT ~= ' ' THEN
      375     5639    4              IF IF$->JM$IF.ACCT ~= KEYIN$->JM$ALLKEYIN.ACCT THEN GOTO NOT_WANTED;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:14   
      376     5640        /* Finally, do whatever it is that was wanted - PRIO or DELETE.    */
      377     5641    4             IF OPERATION = %DELALL_TYPE THEN
      378     5642    5               DO;
      379     5643        /* Delete a selected job... */
      380     5644    5               IF$->JM$IF.STATUS = %MBS_DELETED#;
      381     5645    5               CALL DELJOB(I,IF$) ALTRET(RECYCLE);
      382     5646    5               END;
      383     5647    4             ELSE
      384     5648    5               DO;
      385     5649    5               IF IF$->JM$IF.PRIO ~= KEYIN$->JM$ALLKEYIN.NEWPRIO THEN
      386     5650    6                 DO;
      387     5651        /* Prio a selected job to the indicated 'NEWPRIO'. */
      388     5652    6                 IF$->JM$IF.PRIO = KEYIN$->JM$ALLKEYIN.NEWPRIO;
      389     5653        /* If its 'Ready to Rock', then put it in a new queue */
      390     5654    6                 IF I >= JM_Q$P0 THEN
      391     5655    7                   DO;
      392     5656    7                   NEWQUEUE = JM_Q$P0 + KEYIN$->JM$ALLKEYIN.NEWPRIO;
      393     5657    7                   CALL JMU$MOVE_IF(I,NEWQUEUE,IF$);
      394     5658    7                   END;
      395     5659        /* Rewrite the FIT so new prio will be remembered across any recovery. */
      396     5660    6                 CALL JMJ$REWRITE_FIT(IF$);
      397     5661    6                 END;
      398     5662    5               END;
      399     5663    4   NOT_WANTED: IF$ = TIF$;
      400     5664    4             END;
      401     5665    3           END;
      402     5666    2         RETURN;
      403     5667    2   END SELECT_ALL;
      404     5668        /**/
      405     5669        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:15   
      406     5670        /**/
      407     5671        /*F* NAME:         JMR$FIND
      408     5672             PURPOSE:      To find a SYSID in one of MBS's queues
      409     5673             CALL:         JMR$FIND (SYSID,IF$)
      410     5674             DESCRIPTION:  Returns IF$ = ADDR(NIL) if not found, else
      411     5675                           pointing to job frame.
      412     5676        */
      413     5677    1   JMR$FIND: ENTRY(CITE$,XIF$);
      414     5678        /**/
      415     5679        /* CITE$ is really SYSID_TO_FIND.                                  */
      416     5680    1         CALL FIND_SYSID (SYSID_TO_FIND,I,XIF$) ALTRET(NOTF);
      417     5681    1         RETURN;
      418     5682    1   NOTF: XIF$=ADDR(NIL);
      419     5683    1         RETURN;
      420     5684        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:16   
      421     5685        /**/
      422     5686        /*F*   NAME:   JMR$TIME                                            */
      423     5687        /*F*    PURPOSE: To remove any jobs possible from the waiting-
      424     5688                        for-packset queue or DEFER queue.                  */
      425     5689    1   JMR$TIME: ENTRY;
      426     5690        /* Remove all jobs from the 'RUNAFTER' queue which have runafter   */
      427     5691        /* times less than or equal to the current time and find the proper*/
      428     5692        /* queue to move them to by calling SELECTQ.                       */
      429     5693    1         IF JMC_CH.HWR$ ~= ADDR(NIL) THEN
      430     5694    2           DO;
      431     5695    2           CALL M$TIME(FPT_TIME);
      432     5696    2           IF$ = JMC_CH.HWR$;
      433     5697    3             DO WHILE(IF$ ~= ADDR(NIL));
      434     5698    3             IF IF$->JM$IF.RATIM > CUTS THEN GOTO TOO_SOON;
      435     5699    3             TIF$ = IF$->JM$IF.LNK$;
      436     5700    3             CALL JMU$UNLINK_IF(JM_Q$WR,,IF$);
      437     5701    3             CALL JMU$SELECTQ(IF$,QNUM);
      438     5702    3             IF$ = TIF$;
      439     5703    3             END;
      440     5704    2   TOO_SOON: END;
      441     5705        /* Look to see if anything has changed in the list of mounted
      442     5706           packsets before we go off trying to make NORUN jobs schedulable,
      443     5707           and vice-versa.                                                 */
      444     5708    1         PSNLIST = '0'B;
      445     5709    1         CALL M$MBS(GET_PKSETS) ALTRET(MMBS_ERR);
      446     5710        /* NOTE: On first call, we'll always do this mess. That's OK, 'cause
      447     5711           we're either coming up cold or coming around.                   */
      448     5712    1         IF PSNLIST ~= OLD_PSNLIST THEN
      449     5713    2           DO;
      450     5714        /* Now, try running each job waiting for a shared packset through
      451     5715           the testing-for-mounted-packsets logic again.                   */
      452     5716    2           IF JMC_CH.HDP$ ~= ADDR(NIL) THEN
      453     5717    3             DO;
      454     5718    3             IF$ = JMC_CH.HDP$;
      455     5719    3             ENDIF$ = JMC_CH.TDP$;
      456     5720    4               DO WHILE (1=1);
      457     5721    4               TIF$ = IF$->JM$IF.LNK$;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:17   
      458     5722    4               CALL JMU$UNLINK_IF(JM_Q$DP,,IF$);
      459     5723    4               CALL JMU$SELECTQ(IF$,QNUM);
      460     5724    4               IF IF$ = ENDIF$ THEN GOTO ALL_FOR_NOW;
      461     5725    4               IF$ = TIF$;
      462     5726    4               END;
      463     5727    3   ALL_FOR_NOW:
      464     5728    3             END;
      465     5729        /* Now look at everyone schedulable and see if some have become
      466     5730           'NORUN' due to packsets getting dismounted.                     */
      467     5731    3             DO I = JM_Q$P0 TO JM_Q$P15;
      468     5732    3             IF$ = JMC_CHAINS.HEAD$(I);
      469     5733    4               DO WHILE (IF$ ~= ADDR(NIL));
      470     5734    4               TIF$ = IF$->JM$IF.LNK$;
      471     5735        /* NOTE: CHK_PSNS returns normally if the job CAN'T be run now */
      472     5736    4               CALL CHK_PSNS ALTRET(JOB_IS_OK);
      473     5737    4               CALL JMU$UNLINK_IF(I,,IF$);
      474     5738    4               CALL JMU$ADD2Q(0,JM_Q$DP,IF$);
      475     5739    4   JOB_IS_OK:  IF$ = TIF$;
      476     5740    4               END;
      477     5741    3             END;
      478     5742    2           END;
      479     5743        /* Keep track of which packsets were up on this pass thru... */
      480     5744    1         OLD_PSNLIST = PSNLIST;
      481     5745    1   RE_SCHED: ;
      482     5746    1         CALL JMS$SCHED;
      483     5747    1         RETURN;
      484     5748        /**/
      485     5749    1   MMBS_ERR:
      486     5750        /*S*    SCREECH_CODE:   JMR-S$JM240
      487     5751                TYPE:   SNAP
      488     5752                MESSAGE: Error on M$MBS requesting current mounted packsets. */
      489     5753    1         CALL FOI$SNAP (%S$JM240,F_JM,M_R);
      490     5754    1         GOTO RE_SCHED;                  /* Forget about packsets for now      */
      491     5755        /**/
      492     5756        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:18   
      493     5757        /**/
      494     5758        /*F*   NAME:   JMR$PRIO                                            */
      495     5759        /*F*   PURPOSE: To process the 'PRIO' keyin.                       */
      496     5760    1   JMR$PRIO: ENTRY(CITE$);
      497     5761        /*   Make sure the passed priority is reasonable: */
      498     5762    1         IF KEYIN$->JM$KEYIN.PRIO > 15 THEN GOTO BAD_PRIO;
      499     5763    1         IF KEYIN$->JM$KEYIN.CPRIO < KEYIN$->JM$KEYIN.PRIO THEN GOTO BIG_PRIO;
      500     5764    1         I = KEYIN$->JM$KEYIN.PRIO + JM_Q$P0; /* PRIORITY QUEUE INDEX               */
      501     5765    1         SYSID = KEYIN$->JM$KEYIN.SYSID;
      502     5766    1         CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(NO_SYSID);
      503     5767    1         IF Q = JM_Q$RUN THEN GOTO JOB_RUNNING;
      504     5768    1         CALL INDEX(WC,'?',KEYIN$->JM$KEYIN.WSN);
      505     5769    1         IF (KEYIN$->JM$KEYIN.WSN = ' ')
      506     5770    1         OR (SUBSTR(KEYIN$->JM$KEYIN.WSN,0,WC) = SUBSTR(IF$->JM$IF.WSN,0,WC)) THEN
      507     5771    2           DO;
      508     5772    2           IF$->JM$IF.PRIO = KEYIN$->JM$KEYIN.PRIO;
      509     5773    2           IF Q >= JM_Q$P0 THEN
      510     5774    2            CALL JMU$MOVE_IF(Q,I,IF$);
      511     5775    2           CALL JMJ$REWRITE_FIT(IF$);   /* Remember prio in case of a crash.   */
      512     5776    2           OC_MESSHD.OK_TYPE = %PRIO_TYPE;
      513     5777    2           OC_MESSHD.PRIO = KEYIN$->JM$KEYIN.PRIO;
      514     5778    2           CALL REPLY_STATUS;
      515     5779    2           RETURN;
      516     5780    2           END;
      517     5781    1         GOTO NOT_YOURS;
      518     5782        /**/
      519     5783        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:19   
      520     5784        /**/
      521     5785        /*F*    NAME:   JMR$RERUN
      522     5786                PURPOSE: To abort and then rerun a job at the operator's
      523     5787                        request.                                           */
      524     5788    1   JMR$RERUN: ENTRY(CITE$);
      525     5789    1         IF KEYIN$->JM$RRKEYIN.SELECTION = 0 THEN
      526     5790    2           DO;
      527     5791    2           SYSID = KEYIN$->JM$RRKEYIN.SYSID;
      528     5792    2           CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(NO_SYSID);
      529     5793    2           CALL INDEX(WC,'?',KEYIN$->JM$RRKEYIN.WSN);
      530     5794    2           IF NOT ((KEYIN$->JM$RRKEYIN.WSN = ' ')
      531     5795    2           OR (SUBSTR(KEYIN$->JM$RRKEYIN.WSN,0,WC) = SUBSTR(IF$->JM$IF.WSN,0,WC))) THEN
      532     5796    2            GOTO NOT_YOURS;
      533     5797    2           IF Q ~= JM_Q$RUN THEN GOTO NOT_RUNNING;
      534     5798    2           IF NOT IF$->JM$IF.FLG.RR THEN GOTO CANT_RERUN0;
      535     5799    2           CALL RERUN_JOB ALTRET(CANT_RERUN1);
      536     5800    2           END;
      537     5801    1         ELSE                       /* !RERUN ALL or !ZAP keyin        */
      538     5802    2           DO;
      539     5803    3             DO I = 0 TO JMC_NPART$->AWORD - 1;
      540     5804    3             PPTR$ = PINCRW(JMC_PPTR$,I);
      541     5805    3             PPTR$ = PPTR$->APTR$;
      542     5806    3             CALL JMU$SETSEG(PPTR$,%SPCL1SID);
      543     5807    3             IF$ = PPTR$->JM$PART.JOB$;
      544     5808    4               DO WHILE ((IF$ ~= ADDR(NIL)) AND (IF_PTR ~= 0));
      545     5809    4               TIF$ = IF$->JM$IF.NXTJ$;
      546     5810    4               CALL RERUN_JOB;
      547     5811    4               IF$ = TIF$;
      548     5812    4               END;
      549     5813    3             END;
      550     5814    2           IF KEYIN$->JM$RRKEYIN.SELECTION > 0 THEN
      551     5815    3             DO; /* !ZAP */
      552     5816        /* Close up shop in preparation for system shutdown */
      553     5817    3             JC_MBSZAP=1;
      554     5818    3             CALL M$CLOSE(CLOSE_CSCG) ALTRET(RR1);
      555     5819    3   RR1:      CALL XSJ$CLOSE(CLOSE_STATS) ALTRET(RR2);
      556     5820    3   RR2:      ;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:20   
      557     5821    3             END;
      558     5822    2           END;
      559     5823    1         RETURN;
      560     5824        /**/
      561     5825        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:21   
      562     5826        /**/
      563     5827        /*F*   NAME:   JMR$DEL                                             */
      564     5828        /*F*   PURPOSE: To process the DELETE keyin.                       */
      565     5829    1   JMR$DEL: ENTRY(CITE$);
      566     5830    1         SYSID = KEYIN$->JM$KEYIN.SYSID;
      567     5831    1         CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(NO_SYSID);
      568     5832    1         CALL INDEX(WC,'?',KEYIN$->JM$KEYIN.WSN);
      569     5833    1         IF (KEYIN$->JM$KEYIN.WSN = ' ')
      570     5834    1         OR (SUBSTR(KEYIN$->JM$KEYIN.WSN,0,WC) = SUBSTR(IF$->JM$IF.WSN,0,WC)) THEN
      571     5835    2           DO;
      572     5836    2           IF$->JM$IF.STATUS = %MBS_DELETED#;
      573     5837    2           OC_MESSHD.OK_TYPE = %DEL_TYPE;
      574     5838    2           CALL REPLY_STATUS;
      575     5839    2           CALL DELJOB(Q,IF$);
      576     5840    2           RETURN;
      577     5841    2           END;
      578     5842    1         GOTO NOT_YOURS;
      579     5843        /**/
      580     5844        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:22   
      581     5845        /**/
      582     5846        /*F*    NAME:   JMR$PRIOALL
      583     5847                PURPOSE: To process the !PRIO I ALL keyins.                */
      584     5848    1   JMR$PRIOALL: ENTRY(CITE$);
      585     5849    1         IF (KEYIN$->JM$ALLKEYIN.NEWPRIO > 15) OR (KEYIN$->JM$ALLKEYIN.OLDPRIO > 15)
              5849                  THEN
      586     5850    1          GOTO BAD_PRIO;
      587     5851    1         IF KEYIN$->JM$ALLKEYIN.CPRIO < KEYIN$->JM$ALLKEYIN.NEWPRIO THEN GOTO BIG_PRIO;
      588     5852    1         CALL SELECT_ALL(%PRIOALL_TYPE);
      589     5853    1         OC_MESSHD.OK_TYPE = %PRIOALL_TYPE;
      590     5854    1         OC_MESSHD.PRIO = KEYIN$->JM$ALLKEYIN.NEWPRIO;
      591     5855    1         CALL REPLY_NONJOB;
      592     5856    1         RETURN;
      593     5857        /**/
      594     5858        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:23   
      595     5859        /**/
      596     5860        /*F*    NAME:   JMR$DELALL
      597     5861                PURPOSE: To process the !DELETE I ALL keyins.              */
      598     5862    1   JMR$DELALL: ENTRY(CITE$);
      599     5863    1         CALL SELECT_ALL(%DELALL_TYPE);
      600     5864    1         OC_MESSHD.OK_TYPE = %DELALL_TYPE;
      601     5865    1         CALL REPLY_NONJOB;
      602     5866    1         RETURN;
      603     5867        /**/
      604     5868        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:24   
      605     5869        /**/
      606     5870        /*F*   NAME:   JMR$CANCEL                                          */
      607     5871        /*F*   PURPOSE: To process both forms of the CANCEL command.       */
      608     5872    1   JMR$CANCEL: ENTRY(CITE$);
      609     5873    1         IF CITE$->JM$CITE.SUBCODE = JMEC_CID# THEN
      610     5874    2           DO;
      611     5875    2           SYSID = CITE$->JM$CITE.SYSID;
      612     5876    2           CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(RTN);
      613     5877    2           IF IF$->JM$IF.ACCT = CITE$->JM$CITE.ACCT THEN
      614     5878    3             DO;
      615     5879    3             IF$->JM$IF.STATUS = %MBS_CANCELED#;
      616     5880    3             OC_MESSHD.OK_TYPE = %CANCEL_TYPE;
      617     5881    3             CALL REPLY_STATUS;
      618     5882    3             CALL DELJOB(Q,IF$);
      619     5883    3             END;
      620     5884    2           END;
      621     5885    1         ELSE
      622     5886    1          CALL FOI$SNAP (S$JM244,F_JM,M_R);
      623     5887        /*S*    SCREECH_CODE:    JMR-S$JM244
      624     5888                TYPE:    SNAP
      625     5889                MESSAGE: MBS received an unknown CANCEL subcode.
      626     5890                REMARKS: There once was a time when a CANCEL subcode
      627     5891                         ~= JMEC_CID# was an indication to CANCEL a
      628     5892                         dependency-queue name.  No longer.                */
      629     5893
      630     5894    1   RTN:  RETURN;
      631     5895        /**/
      632     5896        /**/
      633     5897    1   NOT_YOURS:
      634     5898    1         OC_MESSHD.MSG# = NOTYOURS_MSG#; /* Not your job to play with          */
      635     5899    1         GOTO REPORT_ERR;
      636     5900        /**/
      637     5901    1   NO_SYSID:
      638     5902    1         OC_MESSHD.MSG# = NOSYSID_MSG#;  /* No such SYSID in MBS tables        */
      639     5903    1         GOTO REPORT_ERR;
      640     5904        /**/
      641     5905    1   JOB_RUNNING:
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:25   
      642     5906    1         OC_MESSHD.MSG# = RUNNING_MSG#;  /* Job already running                */
      643     5907    1         GOTO REPORT_ERR;
      644     5908        /**/
      645     5909    1   NOT_RUNNING:
      646     5910    1         OC_MESSHD.MSG# = NRUNNING_MSG#; /* Job not yet running                */
      647     5911    1         GOTO REPORT_ERR;
      648     5912        /**/
      649     5913    1   CANT_RERUN0:;
      650     5914    1         OC_MESSHD.OK_TYPE=0;
      651     5915    1         GOTO CANT_RERUN;
      652     5916    1   CANT_RERUN1:;
      653     5917    1         OC_MESSHD.OK_TYPE=1;
      654     5918    1   CANT_RERUN:
      655     5919    1         OC_MESSHD.MSG# = NORERUN_MSG#;  /* Job cant be rerun                  */
      656     5920    1         GOTO REPORT_ERR;
      657     5921        /**/
      658     5922    1   BIG_PRIO:
      659     5923    1         OC_MESSHD.MSG# = ILLPRIO_MSG#;
      660     5924    1         GOTO REPORT_ERR;
      661     5925        /**/
      662     5926    1   BAD_PRIO:
      663     5927    1         OC_MESSHD.MSG# = BADPRIO_MSG#;  /* Illegal prio passed by KEYIN       */
      664     5928        /**/
      665     5929    1   REPORT_ERR:
      666     5930    1         OC_MESSHD.SYSID = KEYIN$->JM$KEYIN.SYSID;
      667     5931    1         OC_MESSHD.ID = KEYIN$->JM$KEYIN.SYSID;
      668     5932    1         OC_MESSHD.WSN = KEYIN$->JM$KEYIN.WSN;
      669     5933    1         OC_MESSHD.CADDR = KEYIN$->JM$KEYIN.CADDR;
      670     5934    1         WRITE_CSCG.BUF_ = VECTOR(OC_MESSHD);
      671     5935    1         CALL M$WRITE(WRITE_CSCG) ALTRET(IGNORE_IT);
      672     5936    1   IGNORE_IT:;
      673     5937    1         RETURN;
      674     5938        /**/
      675     5939        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:26   
      676     5940        /**/
      677     5941        /*F*    NAME:   JMR$CHECK_JD                                       */
      678     5942        /*F*    PURPOSE: To detect satisfied inter-job dependencies based  */
      679     5943        /*,*            on the final STEPCC of the currently exiting job.  */
      680     5944        /*F*    DESCRIPTION: If any of the jobs waiting on job dependency  */
      681     5945        /*,*            conditions are waiting for the completion of the   */
      682     5946        /*,*            currently exiting job, then the relationship which */
      683     5947        /*,*            they specify for the exiting job's STEPCC is tested */
      684     5948        /*,*            If the relation is true, then the job which speci- */
      685     5949        /*,*            fied it is made schedulable, provided it isn't also*/
      686     5950        /*,*            waiting on other uncompleted jobs.  If the relation */
      687     5951        /*,*            is false, then the job is deleted since it can never */
      688     5952        /*,*            be run.                                            */
      689     5953    1   JMR$CHECK_JD: ENTRY(CITE$);
      690     5954        /**/
      691     5955    1         ACCT = CITE$->JM$CITE.ACCT;
      692     5956    1         SYSID = CITE$->JM$CITE.SYSID;
      693     5957    1         STATUS = CITE$->JM$CITE.JOFF_INFO.STATUS;
      694     5958    1         FRS = CITE$->JM$CITE.JOFF_INFO.FRS;
      695     5959    1         STEPCC = CITE$->JM$CITE.SUBCODE;
      696     5960
      697     5961        /* First, check the job dependency (FOLLOW) queue.                 */
      698     5962    1         Q = %JM_Q$JD;
      699     5963    1         CALL CHECK_JD;
      700     5964
      701     5965        /* Unfortunately, the waiting-for-runafter-time (DEFER) queue must */
      702     5966        /* be run, too.                                                    */
      703     5967    1         Q = %JM_Q$WR;
      704     5968    1         CALL CHECK_JD;
      705     5969
      706     5970    1         RETURN;
      707     5971
      708     5972    1   CHECK_JD: PROC;
      709     5973
      710     5974    2   FIRST_JOB:
      711     5975    2         IF$ = JMC_CHAINS.HEAD$(Q);
      712     5976
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:27   
      713     5977    3           DO WHILE (IF$ ~= ADDR(NIL));
      714     5978    3           TIF$ = IF$->JM$IF.LNK$;
      715     5979    4             DO I = 0 TO IF$->JM$IF.NJD - 1;
      716     5980    4             IF IF$->JM$IF.JDID.FOLLOW_TYPE(I) = %JM_FOLLOW_ACCOUNT THEN
      717     5981    4   FOLLOW_ACCOUNT:
      718     5982    5               DO;
      719     5983                    /*N*
      720     5984                          SOMEDAY:  change JM$CITE so ACCT doesn't
      721     5985                                    REDEF JOFF_INFO, and have JMR$DEL
      722     5986                                    fill in JM$CITE.ACCT with B$JIT.ACCN
      723     5987                                    so's this next IF statement can save
      724     5988                                    us some time....
      725     5989                    IF IF$->JM$IF.ACCT = ACCT THEN
      726     5990                    */
      727     5991    6                 DO;
      728     5992    6                 CALL CHECK_FOLLOW_ACCOUNT
      729     5993    6                 WHENRETURN
      730     5994    7                   DO;
      731     5995        /* No more jobs from this account around:  schedule the job.       */
      732     5996    7                   IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;
      733     5997    7                   IF$->JM$IF.UNSAT_COUNT = 0;
      734     5998        /*
      735     5999                        dont unlink jobs on the wait run q unless we are sure
      736     6000                         that it is time for them to run.
      737     6001        */
      738     6002    8                   IF IF$->JM$IF.FLG.RA THEN DO;
      739     6003    8                     CALL M$TIME(FPT_TIME);
      740     6004    8                     IF IF$->JM$IF.RATIM > CUTS THEN
      741     6005    8                      GOTO NEXT_JOB;
      742     6006    8                     END;
      743     6007    7                   CALL JMU$UNLINK_IF(Q,,IF$);
      744     6008    7                   CALL JMU$SELECTQ(IF$,QNUM);
      745     6009    7                   GOTO NEXT_JOB;
      746     6010    7                   END;
      747     6011    6                 WHENALTRETURN
      748     6012    7                   DO;
      749     6013        /* There's some jobs from this account around:  don't do anything. */
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:28   
      750     6014    7                   END;
      751     6015    6                 END;
      752     6016    5               END FOLLOW_ACCOUNT;
      753     6017    4             ELSE
      754     6018    4   FOLLOW_STEPCC_OKERRORABORT:
      755     6019    5               DO;
      756     6020    5               IF  (NOT IF$->JM$IF.JDID.SATISFIED(I))
      757     6021    5               AND (IF$->JM$IF.JDID.SYSID(I) = SYSID) THEN
      758     6022    6                 DO;
      759     6023    6                 CALL CHECK_FINAL_STATUS
      760     6024    6                 WHENRETURN
      761     6025    7                   DO;
      762     6026    7                   IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;
      763     6027    7                   IF$->JM$IF.UNSAT_COUNT = IF$->JM$IF.UNSAT_COUNT - 1;
      764     6028    7                   IF IF$->JM$IF.UNSAT_COUNT = 0 THEN
      765     6029    8                     DO;
      766     6030        /* All dependencies are satisfied:  schedule the job.              */
      767     6031    8                     CALL JMU$UNLINK_IF(Q,,IF$);
      768     6032    8                     CALL JMU$SELECTQ(IF$,QNUM);
      769     6033    8                     GOTO NEXT_JOB;
      770     6034    8                     END;
      771     6035    7                   END;
      772     6036    6                 WHENALTRETURN
      773     6037    7                   DO;
      774     6038        /* Any one dependency is not not satisfied:  delete the job.       */
      775     6039    7                   IF$->JM$IF.STATUS = %MBS_SHAFTED#;
      776     6040    7                   OC_MESSHD.SYSID = IF$->JM$IF.SYSID;
      777     6041    7                   OC_MESSHD.ID = IF$->JM$IF.SYSID;
      778     6042    7                   OC_MESSHD.OK_TYPE = %AUTODEL_TYPE;
      779     6043    7                   CALL REPLY_NONJOB;
      780     6044    7                   CALL DELJOB(Q,IF$);
      781     6045        /* Since JMR$CHECK_JD might have been entered recursively by the   */
      782     6046        /* above call to DELJOB, TIF$ may no longer be valid (it may point */
      783     6047        /* to a job which was deleted a few auto frames up).  We have to   */
      784     6048        /* start the search over at the head of the queue again.           */
      785     6049    7                   GOTO FIRST_JOB;
      786     6050    7                   END;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:29   
      787     6051    6                 END;
      788     6052    5               END FOLLOW_STEPCC_OKERRORABORT;
      789     6053    4             END;
      790     6054    3   NEXT_JOB:
      791     6055    3           IF$ = TIF$;
      792     6056    3           END;
      793     6057
      794     6058    2         RETURN;
      795     6059
      796     6060    2   END CHECK_JD;
      797     6061        /**/
      798     6062        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:30   
      799     6063        /**/
      800     6064        /*F*    NAME:   JMR$CHK_OLDJD                                      */
      801     6065        /*F*    PURPOSE: To see if a newly submitted job with job id       */
      802     6066        /*,*            dependency conditions has already had them satis-  */
      803     6067        /*,*            fied by previously completed jobs.                 */
      804     6068    1   JMR$CHK_OLDJD: ENTRY(CITE$);    /* CITE$ points to IF$->JM$IF           */
      805     6069    1         IF$ = CITE$;              /* So we can use our handy %SUBS   */
      806     6070
      807     6071        /* I'm not sure what this line does!  JJL, C00.                    */
      808     6072    1         IF IF$->JM$IF.UNSAT_COUNT ~= IF$->JM$IF.NJD THEN RETURN;
      809     6073
      810     6074    2           DO I = 0 TO IF$->JM$IF.NJD - 1;
      811     6075    2           IF IF$->JM$IF.JDID.FOLLOW_TYPE(I) = %JM_FOLLOW_ACCOUNT THEN
      812     6076    2   FOLLOW_ACCOUNT:
      813     6077    3             DO;
      814     6078    3             CALL CHECK_FOLLOW_ACCOUNT
      815     6079    3             WHENRETURN
      816     6080    4               DO;
      817     6081        /* No more jobs from this account around:  schedule the job.       */
      818     6082    4               IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;
      819     6083    4               IF$->JM$IF.UNSAT_COUNT = 0;
      820     6084    4               CALL JMU$UNLINK_IF(JM_Q$JD,,IF$);
      821     6085    4               CALL JMU$SELECTQ(IF$,QNUM);
      822     6086    4               END;
      823     6087    3             WHENALTRETURN
      824     6088    4               DO;
      825     6089        /* There's some jobs from this account around:  don't do anything. */
      826     6090    4               END;
      827     6091    3             END FOLLOW_ACCOUNT;
      828     6092    2           ELSE
      829     6093    2   FOLLOW_STEPCC_OKERRORABORT:
      830     6094    3             DO;
      831     6095    3             READ_INFO.SYSID# = IF$->JM$IF.JDID.SYSID(I);
      832     6096    3             CALL XSJ$READ(READ_INFO) ALTRET(NOT_RUN);
      833     6097
      834     6098    3             STATUS = OLDJOB_INFO.STATUS#;
      835     6099    3             FRS = BITBIN(OLDJOB_INFO.FRS#);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:31   
      836     6100    3             STEPCC = OLDJOB_INFO.STEPCC#;
      837     6101
      838     6102    3             CALL CHECK_FINAL_STATUS
      839     6103    3             WHENRETURN
      840     6104    4               DO;
      841     6105    4               IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;
      842     6106    4               IF$->JM$IF.UNSAT_COUNT = IF$->JM$IF.UNSAT_COUNT - 1;
      843     6107    4               IF IF$->JM$IF.UNSAT_COUNT = 0
      844     6108    4               THEN
      845     6109    5                 DO;
      846     6110        /* All dependencies are satisfied:  schedule the job.              */
      847     6111    5                 CALL JMU$UNLINK_IF(JM_Q$JD,,IF$);
      848     6112    5                 CALL JMU$SELECTQ(IF$,QNUM);
      849     6113    5                 END;
      850     6114    4               END;
      851     6115    3             WHENALTRETURN
      852     6116    4               DO;
      853     6117        /* Any one dependency is not not satisfied:  delete the job.       */
      854     6118    4               IF$->JM$IF.STATUS = %MBS_SHAFTED#;
      855     6119    4               CALL DELJOB(JM_Q$JD,IF$);
      856     6120    4               RETURN;
      857     6121    4               END;
      858     6122    3             END FOLLOW_STEPCC_OKERRORABORT;
      859     6123
      860     6124    2   NOT_RUN:
      861     6125    2           END;
      862     6126
      863     6127    1         RETURN;
      864     6128
      865     6129        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:32   
      866     6130    1   CHECK_FOLLOW_ACCOUNT: PROC ALTRET;
      867     6131    2   DCL JOB$ PTR;
      868     6132    2   DCL SW SBIN;
      869     6133
      870     6134        /* The FOLLOW account case (specified as just plain "FOLLOW"       */
      871     6135        /* on the !JOB card) looks a lot like ORDER:  check all the queues */
      872     6136        /* for jobs submitted from the same account before this job.       */
      873     6137        /* If none are found, the job can be run.                          */
      874     6138    3           DO SW = JM_Q$RUN DOWNTO JM_Q$WR;
      875     6139    3           JOB$ = JMC_CHAINS.HEAD$(SW);
      876     6140    4             DO WHILE (JOB$ ~= ADDR(NIL));
      877     6141    4             IF  IF$->JM$IF.SUBMIT_TIME > JOB$->JM$IF.SUBMIT_TIME
      878     6142    4             AND IF$->JM$IF.ACCT = JOB$->JM$IF.ACCT THEN
      879     6143    4              ALTRETURN;
      880     6144    4             JOB$ = JOB$->JM$IF.LNK$;
      881     6145    4             END;
      882     6146    3           END;
      883     6147
      884     6148    2         RETURN;
      885     6149
      886     6150    2   END CHECK_FOLLOW_ACCOUNT;
      887     6151        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:33   
      888     6152    1   CHECK_FINAL_STATUS: PROC ALTRET;
      889     6153
      890     6154    3           DO CASE (STATUS);
      891     6155
      892     6156    3             CASE(%MBS_DELETED#,
      893     6157    3         %MBS_CANCELED#,
      894     6158    3         %MBS_SHAFTED#,
      895     6159    3         %MBS_FILERR#,
      896     6160    3         %PRE_PASSED#,
      897     6161    3         %REJ_JOB#,
      898     6162    3         %REJ_RES#,
      899     6163    3         %REJ_SYNTAX#,
      900     6164    3         %REJ_IO#,
      901     6165    3         %REJ_JOBIMBED#,
      902     6166    3         %REJ_RESIMBED#,
      903     6167    3         %REJ_BADID#,
      904     6168    3         %REJ_NORES#,
      905     6169    3         %REJ_PRESCAN#,
      906     6170    3         %REJ_NOBATCH#,
      907     6171    3         %FIN_RECOVER#);
      908     6172        /* That sure was a really awful STATUS#.  Better delete this job.  */
      909     6173    3               ALTRETURN;
      910     6174
      911     6175    3             CASE(%FIN_ABNORMAL#,
      912     6176    3               %FIN_COMPLETED#);
      913     6177    4                 DO CASE (FRS);
      914     6178
      915     6179    4                   CASE(%BITBIN(RS_CAN#),
      916     6180    4               %BITBIN(RS_EKEY#),
      917     6181    4               %BITBIN(RS_XKEY#));
      918     6182        /* That sure was a really awful FRS#.  Better delete this job.     */
      919     6183    4                     ALTRETURN;
      920     6184
      921     6185    4                   CASE(%BITBIN(RS_XXX#),
      922     6186    4                     %BITBIN(RS_SSP#),
      923     6187    4                     %BITBIN(RS_ABRT#),
      924     6188    4                     %BITBIN(RS_OFF#),
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:34   
      925     6189    4                     %BITBIN(RS_LIMX#));
      926     6190        /* The last one ABORTed, so let this job through if:               */
      927     6191        /*   1) it specified FOLLOW(name(ABORT)) or                        */
      928     6192        /*   2) it specified FOLLOW(name(STEPCC=oldjob_info.stepcc#)).     */
      929     6193    5                       DO CASE ( IF$->JM$IF.JDID.FOLLOW_TYPE(I) );
      930     6194
      931     6195    5                         CASE (%JM_FOLLOW_ABORT);
      932     6196    5                           RETURN;
      933     6197
      934     6198    5                         CASE (%JM_FOLLOW_STEPCC);
      935     6199    5                           CALL CHECK_STEPCC;
      936     6200    5                           IF COND = %TRUE
      937     6201    5                           THEN
      938     6202    5                            RETURN;
      939     6203    5                           ELSE
      940     6204    5                            ALTRETURN;
      941     6205
      942     6206    5                         CASE (ELSE);
      943     6207    5                           ALTRETURN;
      944     6208
      945     6209    5                       END;
      946     6210
      947     6211    4                   CASE(%BITBIN(RS_ERR#));
      948     6212        /* The last one ERRORed, so let this job through if:               */
      949     6213        /*   1) it specified FOLLOW(name(ERROR)) or                        */
      950     6214        /*   2) it specified FOLLOW(name(STEPCC=oldjob_info.stepcc#)).     */
      951     6215    5                       DO CASE ( IF$->JM$IF.JDID.FOLLOW_TYPE(I) );
      952     6216
      953     6217    5                         CASE (%JM_FOLLOW_ERROR);
      954     6218    5                           RETURN;
      955     6219
      956     6220    5                         CASE (%JM_FOLLOW_STEPCC);
      957     6221    5                           CALL CHECK_STEPCC;
      958     6222    5                           IF COND = %TRUE
      959     6223    5                           THEN
      960     6224    5                            RETURN;
      961     6225    5                           ELSE
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:35   
      962     6226    5                            ALTRETURN;
      963     6227
      964     6228    5                         CASE (ELSE);
      965     6229    5                           ALTRETURN;
      966     6230
      967     6231    5                       END;
      968     6232
      969     6233    4                   CASE(%BITBIN(RS_EXIT#));
      970     6234        /* The last one OKed, so let this job through if:                  */
      971     6235        /*   1) it specified FOLLOW(name(OK)) or                           */
      972     6236        /*   2) it specified FOLLOW(name(STEPCC=oldjob_info.stepcc#)).     */
      973     6237    5                       DO CASE ( IF$->JM$IF.JDID.FOLLOW_TYPE(I) );
      974     6238
      975     6239    5                         CASE (%JM_FOLLOW_OK);
      976     6240    5                           RETURN;
      977     6241
      978     6242    5                         CASE (%JM_FOLLOW_STEPCC);
      979     6243    5                           CALL CHECK_STEPCC;
      980     6244    5                           IF COND = %TRUE
      981     6245    5                           THEN
      982     6246    5                            RETURN;
      983     6247    5                           ELSE
      984     6248    5                            ALTRETURN;
      985     6249
      986     6250    5                         CASE (ELSE);
      987     6251    5                           ALTRETURN;
      988     6252
      989     6253    5                       END;
      990     6254
      991     6255    4                   CASE(ELSE);
      992     6256    4   UNKNOWN_FINAL_STATUS:
      993     6257    4                     IF WE_HAVENT_DONE_A_S$JM243_YET
      994     6258    4                     THEN
      995     6259    5                       DO;
      996     6260    5                       CALL FOI$SNAP (S$JM243,F_JM,M_R);
      997     6261        /*S*    SCREECH_CODE:   JMR-S$JM243
      998     6262                TYPE:    SNAP
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:36   
      999     6263                MESSAGE: The :JOBSTATS file contains an unknown final status.
     1000     6264                REMARKS: If and when a processor adds a new final status
     1001     6265                         code to XSJ_SUBS_C, that status should be taken
     1002     6266                         account of by all processors which check for that
     1003     6267                         kind of stuff.  I guess this is as good a place as
     1004     6268                         any to make sure of that.  We'll assume it's a
     1005     6269                         really awful status (like a new PRESCAN error)
     1006     6270                         and delete this job.  Also, in case it's a real
     1007     6271                         popular status, we'll only SNAP once per boot.
     1008     6272                                                                           */
     1009     6273    5                       WE_HAVENT_DONE_A_S$JM243_YET = %FALSE;
     1010     6274    5                       END;
     1011     6275
     1012     6276    4                     ALTRETURN;
     1013     6277
     1014     6278    4                 END;
     1015     6279
     1016     6280    3             CASE(ELSE);
     1017     6281    3               GOTO UNKNOWN_FINAL_STATUS;
     1018     6282
     1019     6283    3           END;
     1020     6284
     1021     6285    2   CHECK_STEPCC: PROC;
     1022     6286
     1023     6287    3         COND = %FALSE;
     1024     6288    3         TESTCC = IF$->JM$IF.JDSTEPCC(I);
     1025     6289    4           DO CASE (IF$->JM$IF.JDID.RELATION(I));
     1026     6290    4             CASE(JM_LT);
     1027     6291    4               IF STEPCC < TESTCC THEN COND = %TRUE;
     1028     6292    4             CASE(JM_LE);
     1029     6293    4               IF STEPCC <= TESTCC THEN COND = %TRUE;
     1030     6294    4             CASE(JM_EQ);
     1031     6295    4               IF STEPCC = TESTCC THEN COND = %TRUE;
     1032     6296    4             CASE(JM_NE);
     1033     6297    4               IF STEPCC ~= TESTCC THEN COND = %TRUE;
     1034     6298    4             CASE(JM_GE);
     1035     6299    4               IF STEPCC >= TESTCC THEN COND = %TRUE;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:37   
     1036     6300    4             CASE(JM_GT);
     1037     6301    4               IF STEPCC > TESTCC THEN COND = %TRUE;
     1038     6302    4           END;
     1039     6303
     1040     6304    3         RETURN;
     1041     6305
     1042     6306    3   END CHECK_STEPCC;
     1043     6307
     1044     6308    2   END CHECK_FINAL_STATUS;
     1045     6309
     1046     6310        /**/
     1047     6311        /**/
     1048     6312    1   END JMR$TRANS;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:38   
--  Include file information  --

   JG_EVID_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMR$TRANS.

   Procedure JMR$TRANS requires 1587 words for executable code.
   Procedure JMR$TRANS requires 50 words of local(AUTO) storage.

    No errors detected in file JMR$TRANS.:E05TSI    .

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:39   

 Object Unit name= JMR$TRANS                                  File name= JMR$TRANS.:E05TOU
 UTS= JUL 29 '97 23:30:56.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$MBSCOM
    2   DCB   even  none     0      0  M$STATUS
    3   Data  even  none   632   1170  JMR$TRANS
    4   Proc  even  none  1587   3063  JMR$TRANS
    5  RoData even  none    27     33  JMR$TRANS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        2  JMR$TRANS
     4    556                  yes      Std        2  JMR$FIND
     4    575                  yes      Std        0  JMR$TIME
     4   1000                  yes      Std        1  JMR$PRIO
     4   1115                  yes      Std        1  JMR$RERUN
     4   1255                  yes      Std        1  JMR$DEL
     4   1333                  yes      Std        1  JMR$PRIOALL
     4   1367                  yes      Std        1  JMR$DELALL
     4   1402                  yes      Std        1  JMR$CANCEL
     4   1533                  yes      Std        1  JMR$CHECK_JD
     4   1767                  yes      Std        1  JMR$CHK_OLDJD
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:40   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 JMU$SELECTQ
         yes           Std       0 JMS$SCHED
         yes           Std       2 JMU$SETSEG
         yes           Std       3 JMU$ADD2Q
         yes           Std       3 JMU$UNLINK_IF
         yes           Std       3 JMU$MOVE_IF
 yes     yes           Std       1 JMJ$REWRITE_FIT
 yes     yes           Std       1 XSJ$CLOSE
 yes     yes           Std       1 XSJ$READ
 yes     yes           Std       4 FOI$SNAP
         yes           Std       1 JMU$REL_SLOT
         yes           Std       3 JMU$UNLINK_IF
         yes           Std       1 JMU$WRITE_STATS
 yes     yes           Std       1 JMJ$DELJOB
 yes     yes           Std       3 FOI$RBLK
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  JMC_CH                                JMC_BFIS$
     JMC_NPART$                            JMC_PPTR$                             M$MBSCOM
     M$STATUS                              JC_MBSZAP                             B$JIT$
     JM_JOBSCB                             B_VECTNIL
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:41   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:42   


        1        1        /*M* JMR$TRANS Routines handling transitions between scheduler queues.       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMR$TRANS: PROC(CITE$,XIF$);

      8  4 000000   000000 700200 xent  JMR$TRANS    TSX0  ! X66_AUTO_2
         4 000001   000062 000002                    ZERO    50,2
         4 000002   000555 710000 4                  TRA     s:5666+2

        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE CP_6;                          /* SYSTEM FPT MACROS                  */
       16       96        %INCLUDE CP_6_SUBS;
       17      636        %INCLUDE JM_SCODE_C;
       18      663 S      %INCLUDE B$JIT_C;
       19      664        %INCLUDE JM$STRUCT;                     /* MBS TABLE STRUCTURES               */
       20     1409        %INCLUDE JMC_DATA_R;                    /* MBS-RESIDENT STATIC DATA           */
       21     1424        %INCLUDE JM_SUBS_C;                     /* MBS QUEUE & EVENT DEFINITIONS      */
       22     1530        %INCLUDE B_STRINGS_C;                   /* SYSTEM STRING SUBSTITUTIONS        */
       23     1659        %INCLUDE B_SEGIDS_C;
       24     2198        %INCLUDE OC_SUBS_C;
       25     2929        %INCLUDE OC_MESSHD_C;
       26     2982        %INCLUDE SS_SCHED_C;
       27     3215        %INCLUDE XSJ_MAC_C;
       28     3294        %INCLUDE XSJ_SUBS_C;
       29     3321        %INCLUDE FOO_MAC_C;
       30     4069        %INCLUDE JG_EVID_C;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:43   
       31     4294
       32     4295
       33     4296
       34     4297        /**/
       35     4298        /* PARAMETERS */
       36     4299        /**/
       37     4300    1   DCL CITE$ PTR;                  /* Ptr to JM$CITE for events...    */
       38     4301    1   DCL KEYIN$ REDEF CITE$ PTR;     /* ...or to JM$KEYIN for keyins... */
       39     4302    1   DCL SYSID_TO_FIND REDEF CITE$ UBIN; /* ...or a SYSID for JMR$FIND. */
       40     4303    1   DCL XIF$ PTR;                   /* IF$ for JMR$FIND.               */
       41     4304
       42     4305
       43     4306
       44     4307        /**/
       45     4308        /* DCBS */
       46     4309        /**/
       47     4310    1   DCL M$MBSCOM DCB;
       48     4311    1   DCL M$STATUS DCB;
       49     4312
       50     4313
       51     4314
       52     4315        /**/
       53     4316        /* BASED */
       54     4317        /**/
       55     4318        %B$JIT0;
       56     4407        %U$JIT1;
       57     4481        %M$JIT2X;
       58     4484        %F$JIT3X;
       59     4487        %S$JIT4X;
       60     4490        %J$JIT5;
       61     4578        %A$JIT6X;
       62     4581        %JM_IF (FPTN=JM$IF,STCLASS=BASED);
       63     4739    1   DCL APTR$ PTR BASED ALIGNED;
       64     4740    1   DCL AWORD UBIN BASED ALIGNED;
       65     4741        %JM_KEYIN (FPTN=JM$KEYIN,STCLASS=BASED);
       66     4797        %JM_KEYIN (FPTN=JM$RRKEYIN,TYP=RERUN,STCLASS=BASED);
       67     4853        %JM_KEYIN (FPTN=JM$ALLKEYIN,TYP=ALL,STCLASS=BASED);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:44   
       68     4909        %JM_SN (FPTN=JM$QSN,STCLASS=BASED);
       69     4948        %JM_CITE (FPTN=JM$CITE,STCLASS=BASED);
       70     4998        %JM_PART (FPTN=JM$PART,STCLASS=BASED);
       71     5053
       72     5054
       73     5055
       74     5056        /**/
       75     5057        /* AUTO */
       76     5058        /**/
       77     5059    1   DCL I SBIN;
       78     5060    1   DCL J SBIN;
       79     5061    1   DCL WC SBIN;
       80     5062    1   DCL COUNT SBIN;
       81     5063    1   DCL Q UBIN WORD;
       82     5064    1   DCL QNUM UBIN WORD;
       83     5065    1   DCL COND BIT(1) UNAL;
       84     5066    1   DCL DEL BIT(1) UNAL;
       85     5067    1   DCL HALFSYSID UBIN HALF HALIGNED;
       86     5068    1   DCL ACCT CHAR(8);
       87     5069    1   DCL SYSID UBIN;
       88     5070    1   DCL STEPCC UBIN;
       89     5071    1   DCL STATUS UBIN;
       90     5072    1   DCL FRS UBIN;
       91     5073    1   DCL TESTCC UBIN;
       92     5074    1   DCL PPTR$ PTR;
       93     5075    1   DCL IF$ PTR;
       94     5076    1   DCL IF_PTR REDEF IF$ UBIN WORD ALIGNED;
       95     5077    1   DCL TIF$ PTR;
       96     5078    1   DCL ENDIF$ PTR;
       97     5079
       98     5080
       99     5081
      100     5082        /**/
      101     5083        /* STATIC */
      102     5084        /**/
      103     5085    1   DCL WE_HAVENT_DONE_A_S$JM243_YET BIT(1) ALIGNED STATIC INIT('1'B);
      104     5086        %XSJ_JOBINFO(FPTN=OLDJOB_INFO);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:45   
      105     5101        %XSJ_PARAM(FPTN=READ_INFO,
      106     5102                   TYPE=%TYP_INFO#,
      107     5103                   DCB=M$STATUS,
      108     5104                   BUF=OLDJOB_INFO);
      109     5121        %XSJ_PARAM(FPTN=CLOSE_STATS,
      110     5122                   DCB=M$STATUS);
      111     5139        %OC_MESSHD_W(NPARMS=3);
      112     5152    1         2 LEN(0:2) UBIN BYTE UNAL INIT(2,1,1),
      113     5153    1         2 ID UBIN HALF UNAL INIT(0),
      114     5154    1         2 OK_TYPE UBIN BYTE UNAL INIT(0),
      115     5155    1         2 PRIO UBIN BYTE UNAL INIT(0);
      116     5156    1   DCL CUTS UBIN WORD STATIC DALIGNED;
      117     5157        %FPT_TIME(SOURCE=CLOCK,
      118     5158                  DEST=UTS,
      119     5159                  TSTAMP=CUTS);
      120     5178        %FPT_WRITE(FPTN=WRITE_CSCG,
      121     5179                   DCB=M$MBSCOM);
      122     5210        %FPT_RUE(EVENT=%SS_CAN);
      123     5224        %FPT_RESCTL(FPTN=GET_PKSETS,
      124     5225                    MBSDISP=YES,
      125     5226                    RPSN=PSNLIST);
      126     5243        %VLP_RPSN(FPTN=PSNLIST,N=64);
      127     5258        %VLP_RPSN(FPTN=OLD_PSNLIST,N=64);
      128     5273        %FPT_CLOSE(FPTN=CLOSE_CSCG,
      129     5274                   DCB=M$MBSCOM,
      130     5275                   DISP=SAVE);
      131     5317
      132     5318
      133     5319
      134     5320        /**/
      135     5321        /* SYMREFS */
      136     5322        /**/
      137     5323    1   DCL JC_MBSZAP UBIN SYMREF;
      138     5324    1   DCL B$JIT$ PTR SYMREF;
      139     5325        %FO_SCB (FPTN=JM_JOBSCB,STCLASS=SYMREF);
      140     5355
      141     5356
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:46   
      142     5357
      143     5358        /**/
      144     5359        /* ENTREFS */
      145     5360        /**/
      146     5361    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      147     5362    1   DCL JMJ$DELJOB    ENTRY(1) ALTRET;
      148     5363    1   DCL JMJ$REWRITE_FIT ENTRY(1) ALTRET;
      149     5364    1   DCL JMS$SCHED     ENTRY;
      150     5365    1   DCL JMU$ADD2Q     ENTRY(3);
      151     5366    1   DCL JMU$MOVE_IF   ENTRY(3);
      152     5367    1   DCL JMU$REL_SLOT  ENTRY(1);
      153     5368    1   DCL JMU$SELECTQ   ENTRY(2);
      154     5369    1   DCL JMU$SETSEG    ENTRY(2);
      155     5370    1   DCL JMU$UNLINK_IF ENTRY(3);
      156     5371    1   DCL JMU$WRITE_STATS ENTRY(1);
      157     5372    1   DCL XSJ$CLOSE     ENTRY(1) ALTRET;
      158     5373    1   DCL XSJ$READ      ENTRY(1) ALTRET;
      159     5374
      160     5375
      161     5376
      162     5377        /**/
      163     5378        /* SUBS */
      164     5379        /**/
      165     5380        %SUB F_JM='1215'O;
      166     5381        %SUB M_R='22'O;
      167     5382        %EQU CANCEL_TYPE=0;
      168     5383        %EQU DEL_TYPE=1;
      169     5384        %EQU PRIO_TYPE=2;
      170     5385        %EQU AUTODEL_TYPE=3;
      171     5386        %EQU PRIOALL_TYPE = 4;
      172     5387        %EQU DELALL_TYPE = 5;
      173     5388        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:47   
      174     5389        /**/
      175     5390        /*                      INTERNAL PROCEDURES                        */
      176     5391        /* Find a particular SYSID somewhere on one of MBS's queues.       */
      177     5392    1   FIND_SYSID: PROC(ID,QUEUE,IF$) ALTRET;

   5392  4 000003   200032 741300       FIND_SYSID   STX1  ! ENDIF$+2,,AUTO

      178     5393    2   DCL ID UBIN PARAM;
      179     5394    2   DCL QUEUE UBIN PARAM;
      180     5395    2   DCL IF$ PTR PARAM;
      181     5396        /**/
      182     5397    2   DCL I SBIN;
      183     5398        /**/
      184     5399    3           DO I = JM_Q$WP TO JM_Q$RUN;

   5399  4 000004   000001 235007                    LDA     1,DL
         4 000005   200036 755100                    STA     I,,AUTO

      185     5400    3           IF$ = JMC_CHAINS.HEAD$(I);

   5400  4 000006   200036 235100                    LDA     I,,AUTO
         4 000007   000001 735000                    ALS     1
         4 000010   000000 236005 xsym               LDQ     JMC_CH,AL
         4 000011   200035 470500                    LDP0    @IF$,,AUTO
         4 000012   000000 756100                    STQ     0,,PR0

      186     5401    4             DO WHILE (IF$ ~= ADDR(NIL));

   5401  4 000013   000032 710000 4                  TRA     s:5408

      187     5402    4             IF IF$->JM$IF.SYSID = ID THEN

   5402  4 000014   200035 470500                    LDP0    @IF$,,AUTO
         4 000015   000000 471500                    LDP1    0,,PR0
         4 000016   200033 473500                    LDP3    @ID,,AUTO
         4 000017   100014 236100                    LDQ     12,,PR1
         4 000020   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:48   
         4 000021   300000 116100                    CMPQ    0,,PR3
         4 000022   000030 601000 4                  TNZ     s:5407

      188     5403    5               DO;

      189     5404    5               QUEUE = I;

   5404  4 000023   200036 235100                    LDA     I,,AUTO
         4 000024   200034 474500                    LDP4    @QUEUE,,AUTO
         4 000025   400000 755100                    STA     0,,PR4

      190     5405    5               RETURN;

   5405  4 000026   200032 221300                    LDX1  ! ENDIF$+2,,AUTO
         4 000027   000001 702211                    TSX2  ! 1,X1

      191     5406    5               END;
      192     5407    4             IF$ = IF$->JM$IF.LNK$;

   5407  4 000030   100000 236100                    LDQ     0,,PR1
         4 000031   000000 756100                    STQ     0,,PR0

      193     5408    4             END;

   5408  4 000032   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000033   000014 601000 4                  TNZ     s:5402

      194     5409    3           END;

   5409  4 000034   200036 054100                    AOS     I,,AUTO
         4 000035   200036 235100                    LDA     I,,AUTO
         4 000036   000026 115007                    CMPA    22,DL
         4 000037   000006 604400 4                  TMOZ    s:5400

      195     5410    2         ALTRETURN;

   5410  4 000040   200032 221300                    LDX1  ! ENDIF$+2,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:49   
         4 000041   000000 702211                    TSX2  ! 0,X1

      196     5411    2   END FIND_SYSID;
      197     5412        /**/
      198     5413        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:50   
      199     5414        /**/
      200     5415        /* Send a successful reply message back to the appropriate con-    */
      201     5416        /* sole(s), based on whether WSN = WOO.                            */
      202     5417    1   REPLY_STATUS:PROC;

   5417  4 000042   200034 741300       REPLY_STATUS STX1  ! @QUEUE,,AUTO

      203     5418    2         OC_MESSHD.SYSID = IF$->JM$IF.SYSID;

   5418  4 000043   200026 470500                    LDP0    IF$,,AUTO
         4 000044   000014 720100                    LXL0    12,,PR0
         4 000045   000027 740000 3                  STX0    OC_MESSHD+1

      204     5419    2         OC_MESSHD.ID    = IF$->JM$IF.SYSID;

   5419  4 000046   000000 100500                    MLR     fill='000'O
         4 000047   000014 400002                    ADSC9   12,,PR0                  cn=2,n=2
         4 000050   000033 600002 3                  ADSC9   OC_MESSHD+5              cn=3,n=2

      205     5420    2         OC_MESSHD.WSN = IF$->JM$IF.WSN;

   5420  4 000051   040000 100500                    MLR     fill='040'O
         4 000052   000024 000010                    ADSC9   20,,PR0                  cn=0,n=8
         4 000053   000031 000010 3                  ADSC9   OC_MESSHD+3              cn=0,n=8
         4 000054   000056 710000 4                  TRA     s:5422

      206     5421    2   REPLY_NONJOB: ENTRY;

   5421  4 000055   200034 741300       REPLY_NONJOB STX1  ! @QUEUE,,AUTO

      207     5422    2         OC_MESSHD.CADDR = M_ADMIN;

   5422  4 000056   040000 220003                    LDX0    16384,DU
         4 000057   000026 740000 3                  STX0    OC_MESSHD

      208     5423    2         OC_MESSHD.MSG# = MBSREPLY_MSG#;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:51   
   5423  4 000060   000514 222003                    LDX2    332,DU
         4 000061   000026 442000 3                  SXL2    OC_MESSHD

      209     5424    2         WRITE_CSCG.BUF_ = VECTOR(OC_MESSHD);

   5424  4 000062   000000 237000 5                  LDAQ    0
         4 000063   000060 757000 3                  STAQ    WRITE_CSCG+4

      210     5425    2         CALL M$WRITE(WRITE_CSCG);

   5425  4 000064   000054 630400 3                  EPPR0   WRITE_CSCG
         4 000065   040001 713400                    CLIMB   write
         4 000066   401400 401760                    pmme    nvectors=4

      211     5426    2         IF IF$ ~= ADDR(NIL) THEN

   5426  4 000067   200026 236100                    LDQ     IF$,,AUTO
         4 000070   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000071   000107 600000 4                  TZE     s:5433

      212     5427    2          IF IF$->JM$IF.WSN ~= IF$->JM$IF.WOO THEN

   5427  4 000072   200026 470500                    LDP0    IF$,,AUTO
         4 000073   040100 106500                    CMPC    fill='040'O
         4 000074   000024 000010                    ADSC9   20,,PR0                  cn=0,n=8
         4 000075   000022 000010                    ADSC9   18,,PR0                  cn=0,n=8
         4 000076   000107 600000 4                  TZE     s:5433

      213     5428    3            DO;

      214     5429    3            OC_MESSHD.CADDR = M_ADMIN | M_NONSYS;

   5429  4 000077   040040 220003                    LDX0    16416,DU
         4 000100   000026 740000 3                  STX0    OC_MESSHD

      215     5430    3            OC_MESSHD.WSN = IF$->JM$IF.WOO;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:52   
   5430  4 000101   040000 100500                    MLR     fill='040'O
         4 000102   000022 000010                    ADSC9   18,,PR0                  cn=0,n=8
         4 000103   000031 000010 3                  ADSC9   OC_MESSHD+3              cn=0,n=8

      216     5431    3            CALL M$WRITE(WRITE_CSCG);

   5431  4 000104   000054 630400 3                  EPPR0   WRITE_CSCG
         4 000105   040001 713400                    CLIMB   write
         4 000106   401400 401760                    pmme    nvectors=4

      217     5432    3            END;

      218     5433    2         RETURN;

   5433  4 000107   200034 221300                    LDX1  ! @QUEUE,,AUTO
         4 000110   000001 702211                    TSX2  ! 1,X1

      219     5434    2   END REPLY_STATUS;
      220     5435        /**/
      221     5436        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:53   
      222     5437        /**/
      223     5438        /* Internal routine to free virtual resource and packset name      */
      224     5439        /* linked list entries when a job terminates.                      */
      225     5440    1   REL_SLOTS: PROC(LISTPTR$);

   5440  4 000111   200052 741300       REL_SLOTS    STX1  ! JM@CITE+6,,AUTO

      226     5441    2   DCL LISTPTR$ PTR;
      227     5442    2   DCL TMP_PTR$ PTR;
      228     5443    2   DCL NXT_PTR$ PTR;
      229     5444    2         TMP_PTR$ = LISTPTR$;

   5444  4 000112   200053 470500                    LDP0    @LISTPTR$,,AUTO
         4 000113   000000 236100                    LDQ     0,,PR0
         4 000114   200054 756100                    STQ     TMP_PTR$,,AUTO

      230     5445    3           DO WHILE (TMP_PTR$ ~= ADDR(NIL));

   5445  4 000115   000131 710000 4                  TRA     s:5451

      231     5446    3           NXT_PTR$ = TMP_PTR$->JM$QSN.NXT$;

   5446  4 000116   200054 470500                    LDP0    TMP_PTR$,,AUTO
         4 000117   000002 236100                    LDQ     2,,PR0
         4 000120   200055 756100                    STQ     NXT_PTR$,,AUTO

      232     5447    3           CALL JMU$REL_SLOT(TMP_PTR$);

   5447  4 000121   200054 631500                    EPPR1   TMP_PTR$,,AUTO
         4 000122   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 000123   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000124   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000125   000000 701000 xent               TSX1    JMU$REL_SLOT
         4 000126   000000 011000                    NOP     0

      233     5448    3           TMP_PTR$ = NXT_PTR$;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:54   
   5448  4 000127   200055 236100                    LDQ     NXT_PTR$,,AUTO
         4 000130   200054 756100                    STQ     TMP_PTR$,,AUTO

      234     5449        /* NOTE: This works because the NXT$ pointer is in the same place  */
      235     5450        /* in both serial no. and virtual resource list entries.           */
      236     5451    3           END;

   5451  4 000131   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000132   000116 601000 4                  TNZ     s:5446

      237     5452    2         RETURN;

   5452  4 000133   200052 221300                    LDX1  ! JM@CITE+6,,AUTO
         4 000134   000001 702211                    TSX2  ! 1,X1

      238     5453    2   END REL_SLOTS;
      239     5454        /**/
      240     5455        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:55   
      241     5456        /**/
      242     5457        /*D* NAME:         DELJOB
      243     5458             PURPOSE:      To delete a job
      244     5459             DESCRIPTION:  If the job is running, M$RUEs it and RETURNs.
      245     5460                           (This will causes the job to go off & we'll
      246     5461                           handle it when we get the TERM event).
      247     5462                           Else removes it from the queues, calls
      248     5463                           JMR$CHECK_JD blow away its dependants, deletes
      249     5464                           the job file & job frame, and ALTRETs. */
      250     5465    1   DELJOB: PROC(QUEUE,IF$) ALTRET;

   5465  4 000135   200040 741300       DELJOB       STX1  ! SW+2,,AUTO

      251     5466    2   DCL QUEUE UBIN WORD;
      252     5467    2   DCL IF$ PTR;
      253     5468    2   DCL SYSID UBIN WORD;
      254     5469        %JM_CITE (FPTN=JM@CITE,STCLASS=AUTO);
      255     5519        /**/
      256     5520    2   DCL FOI$RBLK      ENTRY(3) ALTRET;
      257     5521    2   DCL JMU$UNLINK_IF ENTRY(3);
      258     5522        /**/
      259     5523    2         IF QUEUE = JM_Q$RUN THEN

   5523  4 000136   200041 470500                    LDP0    @QUEUE,,AUTO
         4 000137   000000 235100                    LDA     0,,PR0
         4 000140   000026 115007                    CMPA    22,DL
         4 000141   000153 601000 4                  TNZ     s:5529

      260     5524    3           DO;

      261     5525    3           FPT_RUE.V.USER# = IF$->JM$IF.SYSID;

   5525  4 000142   200042 471500                    LDP1    @IF$,,AUTO
         4 000143   100000 473500                    LDP3    0,,PR1
         4 000144   300014 720100                    LXL0    12,,PR3
         4 000145   000072 740000 3                  STX0    FPT_RUE+2

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:56   
      262     5526    3           CALL M$RUE(FPT_RUE);

   5526  4 000146   000070 630400 3                  EPPR0   FPT_RUE
         4 000147   020020 713400                    CLIMB   8208
         4 000150   400000 401760                    pmme    nvectors=1

      263     5527    3           RETURN;

   5527  4 000151   200040 221300                    LDX1  ! SW+2,,AUTO
         4 000152   000001 702211                    TSX2  ! 1,X1

      264     5528    3           END;
      265     5529    2         CALL JMU$UNLINK_IF(QUEUE,,IF$);

   5529  4 000153   200042 236100                    LDQ     @IF$,,AUTO
         4 000154   200060 756100                    STQ     NXT_PTR$+3,,AUTO
         4 000155   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000156   200041 235100                    LDA     @QUEUE,,AUTO
         4 000157   200056 757100                    STAQ    NXT_PTR$+1,,AUTO
         4 000160   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000161   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000162   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 000163   000000 011000                    NOP     0

      266     5530        /* Delete this job's info table and put it into the job status     */
      267     5531        /* file with status = deleted/canceled/"shafted", etc.  Delete     */
      268     5532        /* the input file too.                                             */
      269     5533    2         CALL JMU$WRITE_STATS(IF$);

   5533  4 000164   200042 630500                    EPPR0   @IF$,,AUTO
         4 000165   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000166   000000 701000 xent               TSX1    JMU$WRITE_STATS
         4 000167   000000 011000                    NOP     0

      270     5534        /* Delete any FOLLOWing jobs by passing a fake JMEV_JOFF# event    */
      271     5535        /* to JMR$CHECK_JD, specifying a really awful STATUS#.             */
      272     5536    2         JM@CITE.ACCT = IF$->JM$IF.ACCT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:57   

   5536  4 000170   200042 470500                    LDP0    @IF$,,AUTO
         4 000171   000000 471500                    LDP1    0,,PR0
         4 000172   040100 100500                    MLR     fill='040'O
         4 000173   100015 000010                    ADSC9   13,,PR1                  cn=0,n=8
         4 000174   200047 000010                    ADSC9   JM@CITE+3,,AUTO          cn=0,n=8

      273     5537    2         JM@CITE.SYSID = IF$->JM$IF.SYSID;

   5537  4 000175   000000 471500                    LDP1    0,,PR0
         4 000176   100014 720100                    LXL0    12,,PR1
         4 000177   200044 440100                    SXL0    JM@CITE,,AUTO

      274     5538    2         JM@CITE.JOFF_INFO.STATUS = IF$->JM$IF.STATUS;

   5538  4 000200   000000 471500                    LDP1    0,,PR0
         4 000201   100013 236100                    LDQ     11,,PR1
         4 000202   000777 376007                    ANQ     511,DL
         4 000203   200047 756100                    STQ     JM@CITE+3,,AUTO

      275     5539    2         CALL JMR$CHECK_JD (ADDR(JM@CITE));

   5539  4 000204   200044 631500                    EPPR1   JM@CITE,,AUTO
         4 000205   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 000206   200056 633500                    EPPR3   NXT_PTR$+1,,AUTO
         4 000207   200057 453500                    STP3    NXT_PTR$+2,,AUTO
         4 000210   200057 630500                    EPPR0   NXT_PTR$+2,,AUTO
         4 000211   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000212   001533 701000 4                  TSX1    s:5953
         4 000213   000000 011000                    NOP     0

      276     5540    2         SYSID = IF$->JM$IF.SYSID;

   5540  4 000214   200042 470500                    LDP0    @IF$,,AUTO
         4 000215   000000 471500                    LDP1    0,,PR0
         4 000216   100014 236100                    LDQ     12,,PR1
         4 000217   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:58   
         4 000220   200043 756100                    STQ     SYSID,,AUTO

      277     5541    2         CALL JMJ$DELJOB (SYSID);

   5541  4 000221   200043 631500                    EPPR1   SYSID,,AUTO
         4 000222   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 000223   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000224   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000225   000000 701000 xent               TSX1    JMJ$DELJOB
         4 000226   000000 011000                    NOP     0

      278     5542    2         IF IF$->JM$IF.MAXVR > 0 THEN

   5542  4 000227   200042 470500                    LDP0    @IF$,,AUTO
         4 000230   000000 471500                    LDP1    0,,PR0
         4 000231   100014 236100                    LDQ     12,,PR1
         4 000232   000777 316003                    CANQ    511,DU
         4 000233   000240 600000 4                  TZE     s:5544

      279     5543    2          CALL REL_SLOTS(IF$->JM$IF.VRLIST$);

   5543  4 000234   100002 633500                    EPPR3   2,,PR1
         4 000235   200053 453500                    STP3    @LISTPTR$,,AUTO
         4 000236   000111 701000 4                  TSX1    REL_SLOTS
         4 000237   000000 011000                    NOP     0

      280     5544    3         IF IF$->JM$IF.MAXPSN > 0 THEN DO;

   5544  4 000240   200042 470500                    LDP0    @IF$,,AUTO
         4 000241   000000 471500                    LDP1    0,,PR0
         4 000242   100014 236100                    LDQ     12,,PR1
         4 000243   777000 316003                    CANQ    -512,DU
         4 000244   000257 600000 4                  TZE     s:5548

      281     5545    3           CALL REL_SLOTS(IF$->JM$IF.XLNK$);

   5545  4 000245   100003 633500                    EPPR3   3,,PR1
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:59   
         4 000246   200053 453500                    STP3    @LISTPTR$,,AUTO
         4 000247   000111 701000 4                  TSX1    REL_SLOTS
         4 000250   000000 011000                    NOP     0

      282     5546    3           CALL REL_SLOTS(IF$->JM$IF.SLNK$);

   5546  4 000251   200042 470500                    LDP0    @IF$,,AUTO
         4 000252   000000 471500                    LDP1    0,,PR0
         4 000253   100004 633500                    EPPR3   4,,PR1
         4 000254   200053 453500                    STP3    @LISTPTR$,,AUTO
         4 000255   000111 701000 4                  TSX1    REL_SLOTS
         4 000256   000000 011000                    NOP     0

      283     5547    3           END;

      284     5548    2         CALL FOI$RBLK (JM_JOBSCB,IF$,SIZEW(IF$->JM$IF));

   5548  4 000257   200042 470500                    LDP0    @IF$,,AUTO
         4 000260   000000 471500                    LDP1    0,,PR0
         4 000261   100056 236100                    LDQ     46,,PR1
         4 000262   000033 772000                    QRL     27
         4 000263   000271 620006                    EAX0    185,QL
         4 000264   000000 636010                    EAQ     0,X0
         4 000265   000022 772000                    QRL     18
         4 000266   000011 402007                    MPY     9,DL
         4 000267   000043 036007                    ADLQ    35,DL
         4 000270   000044 506007                    DIV     36,DL
         4 000271   200056 756100                    STQ     NXT_PTR$+1,,AUTO
         4 000272   200056 631500                    EPPR1   NXT_PTR$+1,,AUTO
         4 000273   200061 451500                    STP1    NXT_PTR$+4,,AUTO
         4 000274   200042 236100                    LDQ     @IF$,,AUTO
         4 000275   200060 756100                    STQ     NXT_PTR$+3,,AUTO
         4 000276   000002 236000 5                  LDQ     2
         4 000277   200057 756100                    STQ     NXT_PTR$+2,,AUTO
         4 000300   200057 630500                    EPPR0   NXT_PTR$+2,,AUTO
         4 000301   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000302   000000 701000 xent               TSX1    FOI$RBLK
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:60   
         4 000303   000000 011000                    NOP     0

      285     5549    2         JMC_BFIS$->AWORD = JMC_BFIS$->AWORD-1;

   5549  4 000304   000000 470400 xsym               LDP0    JMC_BFIS$
         4 000305   000000 235100                    LDA     0,,PR0
         4 000306   000001 135007                    SBLA    1,DL
         4 000307   000000 755100                    STA     0,,PR0

      286     5550    2         ALTRETURN;

   5550  4 000310   200040 221300                    LDX1  ! SW+2,,AUTO
         4 000311   000000 702211                    TSX2  ! 0,X1

      287     5551    2   END DELJOB;
      288     5552        /**/
      289     5553        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:61   
      290     5554        /**/
      291     5555        /* This routine scans a jobs required shared packsets, and compares
      292     5556           them with those currently mounted. If all of the job's required
      293     5557           packsets are up, the routine ** ALTRETURNs **, if not (i.e. the
      294     5558           job can't be run now) then it RETURNs normally.                 */
      295     5559    1   CHK_PSNS: PROC ALTRET;

   5559  4 000312   200032 741300       CHK_PSNS     STX1  ! ENDIF$+2,,AUTO

      296     5560        /**/
      297     5561    2   DCL PKSET$ PTR;
      298     5562    2   DCL K SBIN;
      299     5563        %SUB JM$QSN = PKSET$->JM$QSN;
      300     5564        /**/
      301     5565    2         PKSET$ = IF$->JM$IF.SLNK$;

   5565  4 000313   200026 470500                    LDP0    IF$,,AUTO
         4 000314   000004 236100                    LDQ     4,,PR0
         4 000315   200033 756100                    STQ     PKSET$,,AUTO

      302     5566    3           DO WHILE (PKSET$ ~= ADDR(NIL));

   5566  4 000316   000346 710000 4                  TRA     s:5575

      303     5567    4             DO K = 0 TO PSNLIST.NN# - 1;

   5567  4 000317   200034 450100                    STZ     K,,AUTO
         4 000320   000337 710000 4                  TRA     s:5571+1

      304     5568    4             IF  (JM$QSN.TXT = PSNLIST.RPLIST.PSN#(K))

   5568  4 000321   200034 235100                    LDA     K,,AUTO
         4 000322   000004 735000                    ALS     4
         4 000323   200033 470500                    LDP0    PKSET$,,AUTO
         4 000324   040005 106500                    CMPC    fill='040'O
         4 000325   000000 000006                    ADSC9   0,,PR0                   cn=0,n=6
         4 000326   000120 000006 3                  ADSC9   PSNLIST+2,A              cn=0,n=6
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:62   
         4 000327   000336 601000 4                  TNZ     s:5571
         4 000330   200034 236100                    LDQ     K,,AUTO
         4 000331   000002 736000                    QLS     2
         4 000332   000121 236006 3                  LDQ     PSNLIST+3,QL
         4 000333   777000 376007                    ANQ     -512,DL
         4 000334   001000 116007                    CMPQ    512,DL
         4 000335   000344 600000 4                  TZE     NXT_PSN

      305     5569    4             AND (PSNLIST.RPLIST.USAGE#(K) = %SHARED#) THEN
      306     5570    4              GOTO NXT_PSN;
      307     5571    4             END;

   5571  4 000336   200034 054100                    AOS     K,,AUTO
         4 000337   200034 236100                    LDQ     K,,AUTO
         4 000340   000116 116000 3                  CMPQ    PSNLIST
         4 000341   000321 604000 4                  TMI     s:5568

      308     5572        /* If we got here, at least one required packset wasn't up, so... */
      309     5573    3           RETURN;                  /* NOTE: normal return if job is 'NORUN'   */

   5573  4 000342   200032 221300                    LDX1  ! ENDIF$+2,,AUTO
         4 000343   000001 702211                    TSX2  ! 1,X1

      310     5574    3   NXT_PSN: PKSET$ = JM$QSN.NXT$;

   5574  4 000344   000002 236100       NXT_PSN      LDQ     2,,PR0
         4 000345   200033 756100                    STQ     PKSET$,,AUTO

      311     5575    3           END;

   5575  4 000346   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000347   000317 601000 4                  TNZ     s:5567

      312     5576        /* If we got here, all required shared packsets are up, so... */
      313     5577    2         ALTRETURN;            /* NOTE: alternate return if job is ok to run   */

   5577  4 000350   200032 221300                    LDX1  ! ENDIF$+2,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:63   
         4 000351   000000 702211                    TSX2  ! 0,X1

      314     5578    2   END CHK_PSNS;
      315     5579        /**/
      316     5580        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:64   
      317     5581        /**/
      318     5582        /* This routine will abort a job, marking it to be rerun if it
      319     5583           allows rerun.                                                   */
      320     5584    1   RERUN_JOB: PROC ALTRET;

   5584  4 000352   200032 741300       RERUN_JOB    STX1  ! ENDIF$+2,,AUTO

      321     5585        /**/
      322     5586    2         IF IF$->JM$IF.FLG.RR THEN

   5586  4 000353   200026 470500                    LDP0    IF$,,AUTO
         4 000354   000013 236100                    LDQ     11,,PR0
         4 000355   020000 316007                    CANQ    8192,DL
         4 000356   000374 600000 4                  TZE     s:5597

      323     5587    3           DO;

      324     5588        /* Set flag to let monitor know we're rerunning this guy     */
      325     5589    4             DO INHIBIT;

      326     5590    4             IF IF$->JM$IF.OFFIP THEN ALTRETURN;

   5590  4 000357   000011 235300                    LDA   ! 9,,PR0
         4 000360   000362 600200 4                  TZE   ! s:5591

   5590  4 000361   000000 702211                    TSX2  ! 0,X1

      327     5591    4             IF$->JM$IF.FLG.KRERUN='1'B;

   5591  4 000362   001000 236207                    LDQ   ! 512,DL
         4 000363   000013 256300                    ORSQ  ! 11,,PR0

      328     5592    4             END;

      329     5593        /* Give him a prio boost if he's < prio 14 */
      330     5594    3           IF IF$->JM$IF.PRIO < 14 THEN

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:65   
   5594  4 000364   200026 470500                    LDP0    IF$,,AUTO
         4 000365   000013 236100                    LDQ     11,,PR0
         4 000366   000777 376003                    ANQ     511,DU
         4 000367   000016 116003                    CMPQ    14,DU
         4 000370   000374 603000 4                  TRC     s:5597

      331     5595    3            IF$->JM$IF.PRIO = IF$->JM$IF.PRIO + 1;

   5595  4 000371   000013 236100                    LDQ     11,,PR0
         4 000372   000001 036003                    ADLQ    1,DU
         4 000373   000013 552120                    STBQ    11,'20'O,PR0

      332     5596    3           END;

      333     5597    2         FPT_RUE.V.USER# = IF$->JM$IF.SYSID;

   5597  4 000374   200026 470500                    LDP0    IF$,,AUTO
         4 000375   000014 720100                    LXL0    12,,PR0
         4 000376   000072 740000 3                  STX0    FPT_RUE+2

      334     5598    2         CALL M$RUE(FPT_RUE);

   5598  4 000377   000070 630400 3                  EPPR0   FPT_RUE
         4 000400   020020 713400                    CLIMB   8208
         4 000401   400000 401760                    pmme    nvectors=1

      335     5599    2         RETURN;

   5599  4 000402   200032 221300                    LDX1  ! ENDIF$+2,,AUTO
         4 000403   000001 702211                    TSX2  ! 1,X1

      336     5600    2   END RERUN_JOB;
      337     5601        /**/
      338     5602        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:66   
      339     5603        /**/
      340     5604        /* This routine performs the actual work for the !PRIO I ALL and
      341     5605           !DELETE I ALL keyins, scanning the entire list of all jobs
      342     5606           in order to find all of those indicated by the parameters to
      343     5607           the keyin - ACCOUNT, WSN, or all at a given priority.           */
      344     5608    1   SELECT_ALL: PROC(OPERATION);

   5608  4 000404   200032 741300       SELECT_ALL   STX1  ! ENDIF$+2,,AUTO

      345     5609    2   DCL OPERATION UBIN;
      346     5610    2   DCL L SBIN;
      347     5611    2   DCL M SBIN;
      348     5612    2   DCL NEWQUEUE UBIN;
      349     5613        /**/
      350     5614    2         IF (OPERATION = %PRIOALL_TYPE) AND (KEYIN$->JM$ALLKEYIN.OLDPRIO ~= -1) THEN

   5614  4 000405   200033 470500                    LDP0    @OPERATION,,AUTO
         4 000406   000000 235100                    LDA     0,,PR0
         4 000407   000004 115007                    CMPA    4,DL
         4 000410   000422 601000 4                  TNZ     s:5623
         4 000411   200003 471500                    LDP1    @CITE$,,AUTO
         4 000412   100000 473500                    LDP3    0,,PR1
         4 000413   300007 235100                    LDA     7,,PR3
         4 000414   000027 115000 xsym               CMPA    B_VECTNIL+23
         4 000415   000422 600000 4                  TZE     s:5623

      351     5615    3           DO;

      352     5616        /* This !PRIO ALL keyin is for only a specific priority */
      353     5617    3           L = KEYIN$->JM$ALLKEYIN.OLDPRIO + JM_Q$P0;

   5617  4 000416   000006 035007                    ADLA    6,DL
         4 000417   200034 755100                    STA     L,,AUTO

      354     5618    3           M = L;

   5618  4 000420   200035 755100                    STA     M,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:67   

      355     5619    3           END;

   5619  4 000421   000426 710000 4                  TRA     s:5626

      356     5620    2         ELSE
      357     5621    3           DO;

      358     5622        /* Otherwise its for all jobs in any MBS scheduling state */
      359     5623    3           L = JM_Q$WP;

   5623  4 000422   000001 235007                    LDA     1,DL
         4 000423   200034 755100                    STA     L,,AUTO

      360     5624    3           M = JM_Q$P15;

   5624  4 000424   000025 236007                    LDQ     21,DL
         4 000425   200035 756100                    STQ     M,,AUTO

      361     5625    3           END;

      362     5626    3           DO I = L TO M;                  /* Go through all requested jobs      */

   5626  4 000426   200005 755100                    STA     I,,AUTO
         4 000427   000550 710000 4                  TRA     s:5665+1

   5626  4 000430                       RECYCLE      null
      363     5627    3   RECYCLE:;
      364     5628    3           IF$ = JMC_CHAINS.HEAD$(I);

   5628  4 000430   200005 235100                    LDA     I,,AUTO
         4 000431   000001 735000                    ALS     1
         4 000432   000000 236005 xsym               LDQ     JMC_CH,AL
         4 000433   200026 756100                    STQ     IF$,,AUTO

      365     5629    4             DO WHILE (IF$ ~= ADDR(NIL));

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:68   
   5629  4 000434   000545 710000 4                  TRA     s:5664

      366     5630    4             TIF$ = IF$->JM$IF.LNK$;

   5630  4 000435   200026 470500                    LDP0    IF$,,AUTO
         4 000436   000000 236100                    LDQ     0,,PR0
         4 000437   200027 756100                    STQ     TIF$,,AUTO

      367     5631        /* If a WSN was specified, then we only want jobs which have that
      368     5632           WSN.                                                            */
      369     5633    4             CALL INDEX(WC,'?',KEYIN$->JM$KEYIN.WSN);

   5633  4 000440   200003 471500                    LDP1    @CITE$,,AUTO
         4 000441   100000 473500                    LDP3    0,,PR1
         4 000442   000000 124500                    SCM     mask='000'O
         4 000443   300002 000010                    ADSC9   2,,PR3                   cn=0,n=8
         4 000444   000003 000001 5                  ADSC9   3                        cn=0,n=1
         4 000445   200007 000100                    ARG     WC,,AUTO

      370     5634    4             IF KEYIN$->JM$KEYIN.WSN ~= ' ' THEN

   5634  4 000446   040000 106500                    CMPC    fill='040'O
         4 000447   300002 000010                    ADSC9   2,,PR3                   cn=0,n=8
         4 000450   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000451   000457 600000 4                  TZE     s:5638

      371     5635    4              IF SUBSTR(KEYIN$->JM$KEYIN.WSN,0,WC) ~= SUBSTR(IF$->JM$IF.WSN,0,WC) THEN

   5635  4 000452   200007 720100                    LXL0    WC,,AUTO
         4 000453   040140 106540                    CMPC    fill='040'O
         4 000454   300002 000010                    ADSC9   2,,PR3                   cn=0,n=*X0
         4 000455   000024 000010                    ADSC9   20,,PR0                  cn=0,n=*X0
         4 000456   000543 601000 4                  TNZ     NOT_WANTED

      372     5636    4               GOTO NOT_WANTED;
      373     5637        /* Likewise for any specified account. */
      374     5638    4             IF KEYIN$->JM$ALLKEYIN.ACCT ~= ' ' THEN
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:69   

   5638  4 000457   040000 106500                    CMPC    fill='040'O
         4 000460   300004 000010                    ADSC9   4,,PR3                   cn=0,n=8
         4 000461   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000462   000467 600000 4                  TZE     s:5641

      375     5639    4              IF IF$->JM$IF.ACCT ~= KEYIN$->JM$ALLKEYIN.ACCT THEN GOTO NOT_WANTED;

   5639  4 000463   040100 106500                    CMPC    fill='040'O
         4 000464   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         4 000465   300004 000010                    ADSC9   4,,PR3                   cn=0,n=8
         4 000466   000543 601000 4                  TNZ     NOT_WANTED

      376     5640        /* Finally, do whatever it is that was wanted - PRIO or DELETE.    */
      377     5641    4             IF OPERATION = %DELALL_TYPE THEN

   5641  4 000467   200033 474500                    LDP4    @OPERATION,,AUTO
         4 000470   400000 235100                    LDA     0,,PR4
         4 000471   000005 115007                    CMPA    5,DL
         4 000472   000504 601000 4                  TNZ     s:5649

      378     5642    5               DO;

      379     5643        /* Delete a selected job... */
      380     5644    5               IF$->JM$IF.STATUS = %MBS_DELETED#;

   5644  4 000473   000036 236007                    LDQ     30,DL
         4 000474   000013 552104                    STBQ    11,'04'O,PR0

      381     5645    5               CALL DELJOB(I,IF$) ALTRET(RECYCLE);

   5645  4 000475   200026 630500                    EPPR0   IF$,,AUTO
         4 000476   200042 450500                    STP0    @IF$,,AUTO
         4 000477   200005 633500                    EPPR3   I,,AUTO
         4 000500   200041 453500                    STP3    @QUEUE,,AUTO
         4 000501   000135 701000 4                  TSX1    DELJOB
         4 000502   000430 702000 4                  TSX2    RECYCLE
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:70   

      382     5646    5               END;

   5646  4 000503   000543 710000 4                  TRA     NOT_WANTED

      383     5647    4             ELSE
      384     5648    5               DO;

      385     5649    5               IF IF$->JM$IF.PRIO ~= KEYIN$->JM$ALLKEYIN.NEWPRIO THEN

   5649  4 000504   000013 236100                    LDQ     11,,PR0
         4 000505   000022 772000                    QRL     18
         4 000506   000777 376007                    ANQ     511,DL
         4 000507   300006 116100                    CMPQ    6,,PR3
         4 000510   000543 600000 4                  TZE     NOT_WANTED

      386     5650    6                 DO;

      387     5651        /* Prio a selected job to the indicated 'NEWPRIO'. */
      388     5652    6                 IF$->JM$IF.PRIO = KEYIN$->JM$ALLKEYIN.NEWPRIO;

   5652  4 000511   300006 236100                    LDQ     6,,PR3
         4 000512   000022 736000                    QLS     18
         4 000513   000013 552120                    STBQ    11,'20'O,PR0

      389     5653        /* If its 'Ready to Rock', then put it in a new queue */
      390     5654    6                 IF I >= JM_Q$P0 THEN

   5654  4 000514   200005 235100                    LDA     I,,AUTO
         4 000515   000006 115007                    CMPA    6,DL
         4 000516   000535 604000 4                  TMI     s:5660

      391     5655    7                   DO;

      392     5656    7                   NEWQUEUE = JM_Q$P0 + KEYIN$->JM$ALLKEYIN.NEWPRIO;

   5656  4 000517   100000 470500                    LDP0    0,,PR1
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:71   
         4 000520   000006 235100                    LDA     6,,PR0
         4 000521   000006 035007                    ADLA    6,DL
         4 000522   200036 755100                    STA     NEWQUEUE,,AUTO

      393     5657    7                   CALL JMU$MOVE_IF(I,NEWQUEUE,IF$);

   5657  4 000523   200026 630500                    EPPR0   IF$,,AUTO
         4 000524   200060 450500                    STP0    NXT_PTR$+3,,AUTO
         4 000525   200036 633500                    EPPR3   NEWQUEUE,,AUTO
         4 000526   200057 453500                    STP3    NXT_PTR$+2,,AUTO
         4 000527   200005 635500                    EPPR5   I,,AUTO
         4 000530   200056 455500                    STP5    NXT_PTR$+1,,AUTO
         4 000531   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000532   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000533   000000 701000 xent               TSX1    JMU$MOVE_IF
         4 000534   000000 011000                    NOP     0

      394     5658    7                   END;

      395     5659        /* Rewrite the FIT so new prio will be remembered across any recovery. */
      396     5660    6                 CALL JMJ$REWRITE_FIT(IF$);

   5660  4 000535   200026 630500                    EPPR0   IF$,,AUTO
         4 000536   200056 450500                    STP0    NXT_PTR$+1,,AUTO
         4 000537   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000540   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000541   000000 701000 xent               TSX1    JMJ$REWRITE_FIT
         4 000542   000000 011000                    NOP     0

      397     5661    6                 END;

      398     5662    5               END;

      399     5663    4   NOT_WANTED: IF$ = TIF$;

   5663  4 000543   200027 236100       NOT_WANTED   LDQ     TIF$,,AUTO
         4 000544   200026 756100                    STQ     IF$,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:72   

      400     5664    4             END;

   5664  4 000545   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000546   000435 601000 4                  TNZ     s:5630

      401     5665    3           END;

   5665  4 000547   200005 054100                    AOS     I,,AUTO
         4 000550   200005 236100                    LDQ     I,,AUTO
         4 000551   200035 116100                    CMPQ    M,,AUTO
         4 000552   000430 604400 4                  TMOZ    RECYCLE

      402     5666    2         RETURN;

   5666  4 000553   200032 221300                    LDX1  ! ENDIF$+2,,AUTO
         4 000554   000001 702211                    TSX2  ! 1,X1
         4 000555   000560 710000 4                  TRA     s:5680

      403     5667    2   END SELECT_ALL;
      404     5668        /**/
      405     5669        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:73   
      406     5670        /**/
      407     5671        /*F* NAME:         JMR$FIND
      408     5672             PURPOSE:      To find a SYSID in one of MBS's queues
      409     5673             CALL:         JMR$FIND (SYSID,IF$)
      410     5674             DESCRIPTION:  Returns IF$ = ADDR(NIL) if not found, else
      411     5675                           pointing to job frame.
      412     5676        */
      413     5677    1   JMR$FIND: ENTRY(CITE$,XIF$);

   5677  4 000556   000000 700200 xent  JMR$FIND     TSX0  ! X66_AUTO_2
         4 000557   000062 000002                    ZERO    50,2

      414     5678        /**/
      415     5679        /* CITE$ is really SYSID_TO_FIND.                                  */
      416     5680    1         CALL FIND_SYSID (SYSID_TO_FIND,I,XIF$) ALTRET(NOTF);

   5680  4 000560   200004 236100                    LDQ     @XIF$,,AUTO
         4 000561   200035 756100                    STQ     L+1,,AUTO
         4 000562   200005 630500                    EPPR0   I,,AUTO
         4 000563   200034 450500                    STP0    @OPERATION+1,,AUTO
         4 000564   200003 236100                    LDQ     @CITE$,,AUTO
         4 000565   200033 756100                    STQ     ENDIF$+3,,AUTO
         4 000566   000003 701000 4                  TSX1    FIND_SYSID
         4 000567   000571 702000 4                  TSX2    NOTF

      417     5681    1         RETURN;

   5681  4 000570   000000 702200 xent               TSX2  ! X66_ARET

      418     5682    1   NOTF: XIF$=ADDR(NIL);

   5682  4 000571   000001 236000 xsym  NOTF         LDQ     B_VECTNIL+1
         4 000572   200004 470500                    LDP0    @XIF$,,AUTO
         4 000573   000000 756100                    STQ     0,,PR0

      419     5683    1         RETURN;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:74   
   5683  4 000574   000000 702200 xent               TSX2  ! X66_ARET

      420     5684        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:75   
      421     5685        /**/
      422     5686        /*F*   NAME:   JMR$TIME                                            */
      423     5687        /*F*    PURPOSE: To remove any jobs possible from the waiting-
      424     5688                        for-packset queue or DEFER queue.                  */
      425     5689    1   JMR$TIME: ENTRY;

   5689  4 000575   000000 700200 xent  JMR$TIME     TSX0  ! X66_AUTO_2
         4 000576   000062 000002                    ZERO    50,2

      426     5690        /* Remove all jobs from the 'RUNAFTER' queue which have runafter   */
      427     5691        /* times less than or equal to the current time and find the proper*/
      428     5692        /* queue to move them to by calling SELECTQ.                       */
      429     5693    1         IF JMC_CH.HWR$ ~= ADDR(NIL) THEN

   5693  4 000577   000004 236000 xsym               LDQ     JMC_CH+4
         4 000600   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000601   000643 600000 4                  TZE     TOO_SOON

      430     5694    2           DO;

      431     5695    2           CALL M$TIME(FPT_TIME);

   5695  4 000602   000040 630400 3                  EPPR0   FPT_TIME
         4 000603   020004 713400                    CLIMB   8196
         4 000604   402000 401760                    pmme    nvectors=5

      432     5696    2           IF$ = JMC_CH.HWR$;

   5696  4 000605   000004 236000 xsym               LDQ     JMC_CH+4
         4 000606   200026 756100                    STQ     IF$,,AUTO

      433     5697    3             DO WHILE(IF$ ~= ADDR(NIL));

   5697  4 000607   000641 710000 4                  TRA     s:5703

      434     5698    3             IF IF$->JM$IF.RATIM > CUTS THEN GOTO TOO_SOON;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:76   
   5698  4 000610   200026 470500                    LDP0    IF$,,AUTO
         4 000611   000036 236000 3                  LDQ     CUTS
         4 000612   000026 116100                    CMPQ    22,,PR0
         4 000613   000643 602000 4                  TNC     TOO_SOON

      435     5699    3             TIF$ = IF$->JM$IF.LNK$;

   5699  4 000614   000000 236100                    LDQ     0,,PR0
         4 000615   200027 756100                    STQ     TIF$,,AUTO

      436     5700    3             CALL JMU$UNLINK_IF(JM_Q$WR,,IF$);

   5700  4 000616   200026 631500                    EPPR1   IF$,,AUTO
         4 000617   200060 451500                    STP1    NXT_PTR$+3,,AUTO
         4 000620   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000621   000004 235000 5                  LDA     4
         4 000622   200056 757100                    STAQ    NXT_PTR$+1,,AUTO
         4 000623   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000624   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000625   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 000626   000000 011000                    NOP     0

      437     5701    3             CALL JMU$SELECTQ(IF$,QNUM);

   5701  4 000627   200012 630500                    EPPR0   QNUM,,AUTO
         4 000630   200057 450500                    STP0    NXT_PTR$+2,,AUTO
         4 000631   200026 631500                    EPPR1   IF$,,AUTO
         4 000632   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 000633   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000634   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000635   000000 701000 xent               TSX1    JMU$SELECTQ
         4 000636   000000 011000                    NOP     0

      438     5702    3             IF$ = TIF$;

   5702  4 000637   200027 236100                    LDQ     TIF$,,AUTO
         4 000640   200026 756100                    STQ     IF$,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:77   

      439     5703    3             END;

   5703  4 000641   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000642   000610 601000 4                  TNZ     s:5698

      440     5704    2   TOO_SOON: END;

   5704  4 000643                       TOO_SOON     null
      441     5705        /* Look to see if anything has changed in the list of mounted
      442     5706           packsets before we go off trying to make NORUN jobs schedulable,
      443     5707           and vice-versa.                                                 */
      444     5708    1         PSNLIST = '0'B;

   5708  4 000643   000000 100400                    MLR     fill='000'O
         4 000644   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 000645   000116 002030 3                  ADSC9   PSNLIST                  cn=0,n=1048

      445     5709    1         CALL M$MBS(GET_PKSETS) ALTRET(MMBS_ERR);

   5709  4 000646   000074 630400 3                  EPPR0   GET_PKSETS
         4 000647   550001 713400                    CLIMB   alt,+53249
         4 000650   402400 401760                    pmme    nvectors=6
         4 000651   000773 702000 4                  TSX2    MMBS_ERR

      446     5710        /* NOTE: On first call, we'll always do this mess. That's OK, 'cause
      447     5711           we're either coming up cold or coming around.                   */
      448     5712    1         IF PSNLIST ~= OLD_PSNLIST THEN

   5712  4 000652   000000 106400                    CMPC    fill='000'O
         4 000653   000116 002030 3                  ADSC9   PSNLIST                  cn=0,n=1048
         4 000654   000524 002030 3                  ADSC9   OLD_PSNLIST              cn=0,n=1048
         4 000655   000764 600000 4                  TZE     s:5744

      449     5713    2           DO;

      450     5714        /* Now, try running each job waiting for a shared packset through
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:78   
      451     5715           the testing-for-mounted-packsets logic again.                   */
      452     5716    2           IF JMC_CH.HDP$ ~= ADDR(NIL) THEN

   5716  4 000656   000012 236000 xsym               LDQ     JMC_CH+10
         4 000657   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000660   000716 600000 4                  TZE     s:5731

      453     5717    3             DO;

      454     5718    3             IF$ = JMC_CH.HDP$;

   5718  4 000661   200026 756100                    STQ     IF$,,AUTO

      455     5719    3             ENDIF$ = JMC_CH.TDP$;

   5719  4 000662   000013 236000 xsym               LDQ     JMC_CH+11
         4 000663   200030 756100                    STQ     ENDIF$,,AUTO

      456     5720    4               DO WHILE (1=1);

      457     5721    4               TIF$ = IF$->JM$IF.LNK$;

   5721  4 000664   200026 470500                    LDP0    IF$,,AUTO
         4 000665   000000 236100                    LDQ     0,,PR0
         4 000666   200027 756100                    STQ     TIF$,,AUTO

      458     5722    4               CALL JMU$UNLINK_IF(JM_Q$DP,,IF$);

   5722  4 000667   200026 631500                    EPPR1   IF$,,AUTO
         4 000670   200060 451500                    STP1    NXT_PTR$+3,,AUTO
         4 000671   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000672   000005 235000 5                  LDA     5
         4 000673   200056 757100                    STAQ    NXT_PTR$+1,,AUTO
         4 000674   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000675   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000676   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 000677   000000 011000                    NOP     0
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:79   

      459     5723    4               CALL JMU$SELECTQ(IF$,QNUM);

   5723  4 000700   200012 630500                    EPPR0   QNUM,,AUTO
         4 000701   200057 450500                    STP0    NXT_PTR$+2,,AUTO
         4 000702   200026 631500                    EPPR1   IF$,,AUTO
         4 000703   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 000704   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000705   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000706   000000 701000 xent               TSX1    JMU$SELECTQ
         4 000707   000000 011000                    NOP     0

      460     5724    4               IF IF$ = ENDIF$ THEN GOTO ALL_FOR_NOW;

   5724  4 000710   200026 236100                    LDQ     IF$,,AUTO
         4 000711   200030 116100                    CMPQ    ENDIF$,,AUTO
         4 000712   000716 600000 4                  TZE     s:5731

      461     5725    4               IF$ = TIF$;

   5725  4 000713   200027 236100                    LDQ     TIF$,,AUTO
         4 000714   200026 756100                    STQ     IF$,,AUTO

      462     5726    4               END;

   5726  4 000715   000664 710000 4                  TRA     s:5721

      463     5727    3   ALL_FOR_NOW:
      464     5728    3             END;
      465     5729        /* Now look at everyone schedulable and see if some have become
      466     5730           'NORUN' due to packsets getting dismounted.                     */
      467     5731    3             DO I = JM_Q$P0 TO JM_Q$P15;

   5731  4 000716   000006 235007                    LDA     6,DL
         4 000717   200005 755100                    STA     I,,AUTO

      468     5732    3             IF$ = JMC_CHAINS.HEAD$(I);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:80   

   5732  4 000720   200005 235100                    LDA     I,,AUTO
         4 000721   000001 735000                    ALS     1
         4 000722   000000 236005 xsym               LDQ     JMC_CH,AL
         4 000723   200026 756100                    STQ     IF$,,AUTO

      469     5733    4               DO WHILE (IF$ ~= ADDR(NIL));

   5733  4 000724   000756 710000 4                  TRA     s:5740

      470     5734    4               TIF$ = IF$->JM$IF.LNK$;

   5734  4 000725   200026 470500                    LDP0    IF$,,AUTO
         4 000726   000000 236100                    LDQ     0,,PR0
         4 000727   200027 756100                    STQ     TIF$,,AUTO

      471     5735        /* NOTE: CHK_PSNS returns normally if the job CAN'T be run now */
      472     5736    4               CALL CHK_PSNS ALTRET(JOB_IS_OK);

   5736  4 000730   000312 701000 4                  TSX1    CHK_PSNS
         4 000731   000754 702000 4                  TSX2    JOB_IS_OK

      473     5737    4               CALL JMU$UNLINK_IF(I,,IF$);

   5737  4 000732   200026 630500                    EPPR0   IF$,,AUTO
         4 000733   200060 450500                    STP0    NXT_PTR$+3,,AUTO
         4 000734   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 000735   200057 756100                    STQ     NXT_PTR$+2,,AUTO
         4 000736   200005 631500                    EPPR1   I,,AUTO
         4 000737   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 000740   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000741   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000742   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 000743   000000 011000                    NOP     0

      474     5738    4               CALL JMU$ADD2Q(0,JM_Q$DP,IF$);

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:81   
   5738  4 000744   200026 630500                    EPPR0   IF$,,AUTO
         4 000745   200060 450500                    STP0    NXT_PTR$+3,,AUTO
         4 000746   000006 237000 5                  LDAQ    6
         4 000747   200056 757100                    STAQ    NXT_PTR$+1,,AUTO
         4 000750   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 000751   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000752   000000 701000 xent               TSX1    JMU$ADD2Q
         4 000753   000000 011000                    NOP     0

      475     5739    4   JOB_IS_OK:  IF$ = TIF$;

   5739  4 000754   200027 236100       JOB_IS_OK    LDQ     TIF$,,AUTO
         4 000755   200026 756100                    STQ     IF$,,AUTO

      476     5740    4               END;

   5740  4 000756   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 000757   000725 601000 4                  TNZ     s:5734

      477     5741    3             END;

   5741  4 000760   200005 054100                    AOS     I,,AUTO
         4 000761   200005 235100                    LDA     I,,AUTO
         4 000762   000025 115007                    CMPA    21,DL
         4 000763   000720 604400 4                  TMOZ    s:5732

      478     5742    2           END;

      479     5743        /* Keep track of which packsets were up on this pass thru... */
      480     5744    1         OLD_PSNLIST = PSNLIST;

   5744  4 000764   000000 100400                    MLR     fill='000'O
         4 000765   000116 002030 3                  ADSC9   PSNLIST                  cn=0,n=1048
         4 000766   000524 002030 3                  ADSC9   OLD_PSNLIST              cn=0,n=1048

   5744  4 000767                       RE_SCHED     null
      481     5745    1   RE_SCHED: ;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:82   
      482     5746    1         CALL JMS$SCHED;

   5746  4 000767   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000770   000000 701000 xent               TSX1    JMS$SCHED
         4 000771   000000 011000                    NOP     0

      483     5747    1         RETURN;

   5747  4 000772   000000 702200 xent               TSX2  ! X66_ARET

      484     5748        /**/
      485     5749    1   MMBS_ERR:
      486     5750        /*S*    SCREECH_CODE:   JMR-S$JM240
      487     5751                TYPE:   SNAP
      488     5752                MESSAGE: Error on M$MBS requesting current mounted packsets. */
      489     5753    1         CALL FOI$SNAP (%S$JM240,F_JM,M_R);

   5753  4 000773   000013 630400 5     MMBS_ERR     EPPR0   11
         4 000774   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000775   000000 701000 xent               TSX1    FOI$SNAP
         4 000776   000000 011000                    NOP     0

      490     5754    1         GOTO RE_SCHED;                  /* Forget about packsets for now      */

   5754  4 000777   000767 710000 4                  TRA     RE_SCHED

      491     5755        /**/
      492     5756        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:83   
      493     5757        /**/
      494     5758        /*F*   NAME:   JMR$PRIO                                            */
      495     5759        /*F*   PURPOSE: To process the 'PRIO' keyin.                       */
      496     5760    1   JMR$PRIO: ENTRY(CITE$);

   5760  4 001000   000000 700200 xent  JMR$PRIO     TSX0  ! X66_AUTO_2
         4 001001   000062 000002                    ZERO    50,2

      497     5761        /*   Make sure the passed priority is reasonable: */
      498     5762    1         IF KEYIN$->JM$KEYIN.PRIO > 15 THEN GOTO BAD_PRIO;

   5762  4 001002   200003 470500                    LDP0    @CITE$,,AUTO
         4 001003   000000 471500                    LDP1    0,,PR0
         4 001004   100004 235100                    LDA     4,,PR1
         4 001005   000020 115007                    CMPA    16,DL
         4 001006   001503 603000 4                  TRC     BAD_PRIO

      499     5763    1         IF KEYIN$->JM$KEYIN.CPRIO < KEYIN$->JM$KEYIN.PRIO THEN GOTO BIG_PRIO;

   5763  4 001007   100001 236100                    LDQ     1,,PR1
         4 001010   000777 376007                    ANQ     511,DL
         4 001011   100004 116100                    CMPQ    4,,PR1
         4 001012   001500 602000 4                  TNC     BIG_PRIO

      500     5764    1         I = KEYIN$->JM$KEYIN.PRIO + JM_Q$P0; /* PRIORITY QUEUE INDEX               */

   5764  4 001013   000006 035007                    ADLA    6,DL
         4 001014   200005 755100                    STA     I,,AUTO

      501     5765    1         SYSID = KEYIN$->JM$KEYIN.SYSID;

   5765  4 001015   000000 471500                    LDP1    0,,PR0
         4 001016   100001 236100                    LDQ     1,,PR1
         4 001017   000022 772000                    QRL     18
         4 001020   200020 756100                    STQ     SYSID,,AUTO

      502     5766    1         CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(NO_SYSID);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:84   

   5766  4 001021   200026 631500                    EPPR1   IF$,,AUTO
         4 001022   200035 451500                    STP1    L+1,,AUTO
         4 001023   200011 633500                    EPPR3   Q,,AUTO
         4 001024   200034 453500                    STP3    @OPERATION+1,,AUTO
         4 001025   200020 634500                    EPPR4   SYSID,,AUTO
         4 001026   200033 454500                    STP4    ENDIF$+3,,AUTO
         4 001027   000003 701000 4                  TSX1    FIND_SYSID
         4 001030   001457 702000 4                  TSX2    NO_SYSID

      503     5767    1         IF Q = JM_Q$RUN THEN GOTO JOB_RUNNING;

   5767  4 001031   200011 235100                    LDA     Q,,AUTO
         4 001032   000026 115007                    CMPA    22,DL
         4 001033   001462 600000 4                  TZE     JOB_RUNNING

      504     5768    1         CALL INDEX(WC,'?',KEYIN$->JM$KEYIN.WSN);

   5768  4 001034   200003 470500                    LDP0    @CITE$,,AUTO
         4 001035   000000 471500                    LDP1    0,,PR0
         4 001036   000000 124500                    SCM     mask='000'O
         4 001037   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         4 001040   000003 000001 5                  ADSC9   3                        cn=0,n=1
         4 001041   200007 000100                    ARG     WC,,AUTO

      505     5769    1         IF (KEYIN$->JM$KEYIN.WSN = ' ')

   5769  4 001042   040000 106500                    CMPC    fill='040'O
         4 001043   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         4 001044   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 001045   001054 600000 4                  TZE     s:5772
         4 001046   200007 720100                    LXL0    WC,,AUTO
         4 001047   200026 473500                    LDP3    IF$,,AUTO
         4 001050   040140 106540                    CMPC    fill='040'O
         4 001051   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         4 001052   300024 000010                    ADSC9   20,,PR3                  cn=0,n=*X0
         4 001053   001114 601000 4                  TNZ     s:5781
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:85   

      506     5770    1         OR (SUBSTR(KEYIN$->JM$KEYIN.WSN,0,WC) = SUBSTR(IF$->JM$IF.WSN,0,WC)) THEN
      507     5771    2           DO;

      508     5772    2           IF$->JM$IF.PRIO = KEYIN$->JM$KEYIN.PRIO;

   5772  4 001054   200026 473500                    LDP3    IF$,,AUTO
         4 001055   100004 236100                    LDQ     4,,PR1
         4 001056   000022 736000                    QLS     18
         4 001057   300013 552120                    STBQ    11,'20'O,PR3

      509     5773    2           IF Q >= JM_Q$P0 THEN

   5773  4 001060   000006 115007                    CMPA    6,DL
         4 001061   001074 602000 4                  TNC     s:5775

      510     5774    2            CALL JMU$MOVE_IF(Q,I,IF$);

   5774  4 001062   200026 631500                    EPPR1   IF$,,AUTO
         4 001063   200060 451500                    STP1    NXT_PTR$+3,,AUTO
         4 001064   200005 633500                    EPPR3   I,,AUTO
         4 001065   200057 453500                    STP3    NXT_PTR$+2,,AUTO
         4 001066   200011 634500                    EPPR4   Q,,AUTO
         4 001067   200056 454500                    STP4    NXT_PTR$+1,,AUTO
         4 001070   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 001071   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001072   000000 701000 xent               TSX1    JMU$MOVE_IF
         4 001073   000000 011000                    NOP     0

      511     5775    2           CALL JMJ$REWRITE_FIT(IF$);   /* Remember prio in case of a crash.   */

   5775  4 001074   200026 630500                    EPPR0   IF$,,AUTO
         4 001075   200056 450500                    STP0    NXT_PTR$+1,,AUTO
         4 001076   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 001077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001100   000000 701000 xent               TSX1    JMJ$REWRITE_FIT
         4 001101   000000 011000                    NOP     0
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:86   

      512     5776    2           OC_MESSHD.OK_TYPE = %PRIO_TYPE;

   5776  4 001102   000002 236003                    LDQ     2,DU
         4 001103   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

      513     5777    2           OC_MESSHD.PRIO = KEYIN$->JM$KEYIN.PRIO;

   5777  4 001104   200003 470500                    LDP0    @CITE$,,AUTO
         4 001105   000000 471500                    LDP1    0,,PR0
         4 001106   100004 236100                    LDQ     4,,PR1
         4 001107   000011 736000                    QLS     9
         4 001110   000034 552010 3                  STBQ    OC_MESSHD+6,'10'O

      514     5778    2           CALL REPLY_STATUS;

   5778  4 001111   000042 701000 4                  TSX1    REPLY_STATUS
         4 001112   000000 011000                    NOP     0

      515     5779    2           RETURN;

   5779  4 001113   000000 702200 xent               TSX2  ! X66_ARET

      516     5780    2           END;
      517     5781    1         GOTO NOT_YOURS;

   5781  4 001114   001454 710000 4                  TRA     NOT_YOURS

      518     5782        /**/
      519     5783        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:87   
      520     5784        /**/
      521     5785        /*F*    NAME:   JMR$RERUN
      522     5786                PURPOSE: To abort and then rerun a job at the operator's
      523     5787                        request.                                           */
      524     5788    1   JMR$RERUN: ENTRY(CITE$);

   5788  4 001115   000000 700200 xent  JMR$RERUN    TSX0  ! X66_AUTO_2
         4 001116   000062 000002                    ZERO    50,2

      525     5789    1         IF KEYIN$->JM$RRKEYIN.SELECTION = 0 THEN

   5789  4 001117   200003 470500                    LDP0    @CITE$,,AUTO
         4 001120   000000 471500                    LDP1    0,,PR0
         4 001121   100004 235100                    LDA     4,,PR1
         4 001122   001170 601000 4                  TNZ     s:5803

      526     5790    2           DO;

      527     5791    2           SYSID = KEYIN$->JM$RRKEYIN.SYSID;

   5791  4 001123   100001 236100                    LDQ     1,,PR1
         4 001124   000022 772000                    QRL     18
         4 001125   200020 756100                    STQ     SYSID,,AUTO

      528     5792    2           CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(NO_SYSID);

   5792  4 001126   200026 631500                    EPPR1   IF$,,AUTO
         4 001127   200035 451500                    STP1    L+1,,AUTO
         4 001130   200011 633500                    EPPR3   Q,,AUTO
         4 001131   200034 453500                    STP3    @OPERATION+1,,AUTO
         4 001132   200020 634500                    EPPR4   SYSID,,AUTO
         4 001133   200033 454500                    STP4    ENDIF$+3,,AUTO
         4 001134   000003 701000 4                  TSX1    FIND_SYSID
         4 001135   001457 702000 4                  TSX2    NO_SYSID

      529     5793    2           CALL INDEX(WC,'?',KEYIN$->JM$RRKEYIN.WSN);

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:88   
   5793  4 001136   200003 470500                    LDP0    @CITE$,,AUTO
         4 001137   000000 471500                    LDP1    0,,PR0
         4 001140   000000 124500                    SCM     mask='000'O
         4 001141   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         4 001142   000003 000001 5                  ADSC9   3                        cn=0,n=1
         4 001143   200007 000100                    ARG     WC,,AUTO

      530     5794    2           IF NOT ((KEYIN$->JM$RRKEYIN.WSN = ' ')

   5794  4 001144   040000 106500                    CMPC    fill='040'O
         4 001145   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         4 001146   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 001147   001156 600000 4                  TZE     s:5797
         4 001150   200007 720100                    LXL0    WC,,AUTO
         4 001151   200026 473500                    LDP3    IF$,,AUTO
         4 001152   040140 106540                    CMPC    fill='040'O
         4 001153   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         4 001154   300024 000010                    ADSC9   20,,PR3                  cn=0,n=*X0
         4 001155   001454 601000 4                  TNZ     NOT_YOURS

      531     5795    2          OR (SUBSTR(KEYIN$->JM$RRKEYIN.WSN,0,WC) = SUBSTR(IF$->JM$IF.WSN,0,WC))) THEN
      532     5796    2            GOTO NOT_YOURS;
      533     5797    2           IF Q ~= JM_Q$RUN THEN GOTO NOT_RUNNING;

   5797  4 001156   200011 235100                    LDA     Q,,AUTO
         4 001157   000026 115007                    CMPA    22,DL
         4 001160   001465 601000 4                  TNZ     NOT_RUNNING

      534     5798    2           IF NOT IF$->JM$IF.FLG.RR THEN GOTO CANT_RERUN0;

   5798  4 001161   200026 473500                    LDP3    IF$,,AUTO
         4 001162   300013 236100                    LDQ     11,,PR3
         4 001163   020000 316007                    CANQ    8192,DL
         4 001164   001470 600000 4                  TZE     CANT_RERUN0

      535     5799    2           CALL RERUN_JOB ALTRET(CANT_RERUN1);

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:89   
   5799  4 001165   000352 701000 4                  TSX1    RERUN_JOB
         4 001166   001473 702000 4                  TSX2    CANT_RERUN1

      536     5800    2           END;

   5800  4 001167   001254 710000 4                  TRA     RR2

      537     5801    1         ELSE                       /* !RERUN ALL or !ZAP keyin        */
      538     5802    2           DO;

      539     5803    3             DO I = 0 TO JMC_NPART$->AWORD - 1;

   5803  4 001170   200005 450100                    STZ     I,,AUTO
         4 001171   001231 710000 4                  TRA     s:5813+1

      540     5804    3             PPTR$ = PINCRW(JMC_PPTR$,I);

   5804  4 001172   200005 236100                    LDQ     I,,AUTO
         4 001173   000022 736000                    QLS     18
         4 001174   000000 036000 xsym               ADLQ    JMC_PPTR$
         4 001175   200025 756100                    STQ     PPTR$,,AUTO

      541     5805    3             PPTR$ = PPTR$->APTR$;

   5805  4 001176   200025 470500                    LDP0    PPTR$,,AUTO
         4 001177   000000 236100                    LDQ     0,,PR0
         4 001200   200025 756100                    STQ     PPTR$,,AUTO

      542     5806    3             CALL JMU$SETSEG(PPTR$,%SPCL1SID);

   5806  4 001201   000017 236000 5                  LDQ     15
         4 001202   200057 756100                    STQ     NXT_PTR$+2,,AUTO
         4 001203   200025 630500                    EPPR0   PPTR$,,AUTO
         4 001204   200056 450500                    STP0    NXT_PTR$+1,,AUTO
         4 001205   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 001206   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001207   000000 701000 xent               TSX1    JMU$SETSEG
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:90   
         4 001210   000000 011000                    NOP     0

      543     5807    3             IF$ = PPTR$->JM$PART.JOB$;

   5807  4 001211   200025 470500                    LDP0    PPTR$,,AUTO
         4 001212   000006 236100                    LDQ     6,,PR0
         4 001213   200026 756100                    STQ     IF$,,AUTO

      544     5808    4               DO WHILE ((IF$ ~= ADDR(NIL)) AND (IF_PTR ~= 0));

   5808  4 001214   001224 710000 4                  TRA     s:5812

      545     5809    4               TIF$ = IF$->JM$IF.NXTJ$;

   5809  4 001215   200026 470500                    LDP0    IF$,,AUTO
         4 001216   000001 236100                    LDQ     1,,PR0
         4 001217   200027 756100                    STQ     TIF$,,AUTO

      546     5810    4               CALL RERUN_JOB;

   5810  4 001220   000352 701000 4                  TSX1    RERUN_JOB
         4 001221   000000 011000                    NOP     0

      547     5811    4               IF$ = TIF$;

   5811  4 001222   200027 236100                    LDQ     TIF$,,AUTO
         4 001223   200026 756100                    STQ     IF$,,AUTO

      548     5812    4               END;

   5812  4 001224   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 001225   001230 600000 4                  TZE     s:5813
         4 001226   200026 235100                    LDA     IF$,,AUTO
         4 001227   001215 601000 4                  TNZ     s:5809

      549     5813    3             END;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:91   
   5813  4 001230   200005 054100                    AOS     I,,AUTO
         4 001231   000000 470400 xsym               LDP0    JMC_NPART$
         4 001232   200005 236100                    LDQ     I,,AUTO
         4 001233   001172 604000 4                  TMI     s:5804
         4 001234   000000 116100                    CMPQ    0,,PR0
         4 001235   001172 602000 4                  TNC     s:5804

      550     5814    2           IF KEYIN$->JM$RRKEYIN.SELECTION > 0 THEN

   5814  4 001236   200003 471500                    LDP1    @CITE$,,AUTO
         4 001237   100000 473500                    LDP3    0,,PR1
         4 001240   300004 235100                    LDA     4,,PR3
         4 001241   001254 604400 4                  TMOZ    RR2

      551     5815    3             DO; /* !ZAP */

      552     5816        /* Close up shop in preparation for system shutdown */
      553     5817    3             JC_MBSZAP=1;

   5817  4 001242   000001 235007                    LDA     1,DL
         4 001243   000000 755000 xsym               STA     JC_MBSZAP

      554     5818    3             CALL M$CLOSE(CLOSE_CSCG) ALTRET(RR1);

   5818  4 001244   001132 630400 3                  EPPR0   CLOSE_CSCG
         4 001245   450001 713400                    CLIMB   alt,close
         4 001246   406000 401760                    pmme    nvectors=13
         4 001247   001250 702000 4                  TSX2    RR1

      555     5819    3   RR1:      CALL XSJ$CLOSE(CLOSE_STATS) ALTRET(RR2);

   5819  4 001250   000020 630400 5     RR1          EPPR0   16
         4 001251   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001252   000000 701000 xent               TSX1    XSJ$CLOSE
         4 001253   001254 702000 4                  TSX2    RR2

   5817  4 001254                       RR2          null
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:92   
      556     5820    3   RR2:      ;
      557     5821    3             END;

      558     5822    2           END;

      559     5823    1         RETURN;

   5823  4 001254   000000 702200 xent               TSX2  ! X66_ARET

      560     5824        /**/
      561     5825        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:93   
      562     5826        /**/
      563     5827        /*F*   NAME:   JMR$DEL                                             */
      564     5828        /*F*   PURPOSE: To process the DELETE keyin.                       */
      565     5829    1   JMR$DEL: ENTRY(CITE$);

   5829  4 001255   000000 700200 xent  JMR$DEL      TSX0  ! X66_AUTO_2
         4 001256   000062 000002                    ZERO    50,2

      566     5830    1         SYSID = KEYIN$->JM$KEYIN.SYSID;

   5830  4 001257   200003 470500                    LDP0    @CITE$,,AUTO
         4 001260   000000 471500                    LDP1    0,,PR0
         4 001261   100001 236100                    LDQ     1,,PR1
         4 001262   000022 772000                    QRL     18
         4 001263   200020 756100                    STQ     SYSID,,AUTO

      567     5831    1         CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(NO_SYSID);

   5831  4 001264   200026 631500                    EPPR1   IF$,,AUTO
         4 001265   200035 451500                    STP1    L+1,,AUTO
         4 001266   200011 633500                    EPPR3   Q,,AUTO
         4 001267   200034 453500                    STP3    @OPERATION+1,,AUTO
         4 001270   200020 634500                    EPPR4   SYSID,,AUTO
         4 001271   200033 454500                    STP4    ENDIF$+3,,AUTO
         4 001272   000003 701000 4                  TSX1    FIND_SYSID
         4 001273   001457 702000 4                  TSX2    NO_SYSID

      568     5832    1         CALL INDEX(WC,'?',KEYIN$->JM$KEYIN.WSN);

   5832  4 001274   200003 470500                    LDP0    @CITE$,,AUTO
         4 001275   000000 471500                    LDP1    0,,PR0
         4 001276   000000 124500                    SCM     mask='000'O
         4 001277   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         4 001300   000003 000001 5                  ADSC9   3                        cn=0,n=1
         4 001301   200007 000100                    ARG     WC,,AUTO

      569     5833    1         IF (KEYIN$->JM$KEYIN.WSN = ' ')
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:94   

   5833  4 001302   040000 106500                    CMPC    fill='040'O
         4 001303   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         4 001304   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 001305   001314 600000 4                  TZE     s:5836
         4 001306   200007 720100                    LXL0    WC,,AUTO
         4 001307   200026 473500                    LDP3    IF$,,AUTO
         4 001310   040140 106540                    CMPC    fill='040'O
         4 001311   100002 000010                    ADSC9   2,,PR1                   cn=0,n=*X0
         4 001312   300024 000010                    ADSC9   20,,PR3                  cn=0,n=*X0
         4 001313   001332 601000 4                  TNZ     s:5842

      570     5834    1         OR (SUBSTR(KEYIN$->JM$KEYIN.WSN,0,WC) = SUBSTR(IF$->JM$IF.WSN,0,WC)) THEN
      571     5835    2           DO;

      572     5836    2           IF$->JM$IF.STATUS = %MBS_DELETED#;

   5836  4 001314   200026 473500                    LDP3    IF$,,AUTO
         4 001315   000036 236007                    LDQ     30,DL
         4 001316   300013 552104                    STBQ    11,'04'O,PR3

      573     5837    2           OC_MESSHD.OK_TYPE = %DEL_TYPE;

   5837  4 001317   000001 236003                    LDQ     1,DU
         4 001320   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

      574     5838    2           CALL REPLY_STATUS;

   5838  4 001321   000042 701000 4                  TSX1    REPLY_STATUS
         4 001322   000000 011000                    NOP     0

      575     5839    2           CALL DELJOB(Q,IF$);

   5839  4 001323   200026 630500                    EPPR0   IF$,,AUTO
         4 001324   200042 450500                    STP0    @QUEUE+1,,AUTO
         4 001325   200011 631500                    EPPR1   Q,,AUTO
         4 001326   200041 451500                    STP1    SW+3,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:95   
         4 001327   000135 701000 4                  TSX1    DELJOB
         4 001330   000000 011000                    NOP     0

      576     5840    2           RETURN;

   5840  4 001331   000000 702200 xent               TSX2  ! X66_ARET

      577     5841    2           END;
      578     5842    1         GOTO NOT_YOURS;

   5842  4 001332   001454 710000 4                  TRA     NOT_YOURS

      579     5843        /**/
      580     5844        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:96   
      581     5845        /**/
      582     5846        /*F*    NAME:   JMR$PRIOALL
      583     5847                PURPOSE: To process the !PRIO I ALL keyins.                */
      584     5848    1   JMR$PRIOALL: ENTRY(CITE$);

   5848  4 001333   000000 700200 xent  JMR$PRIOALL  TSX0  ! X66_AUTO_2
         4 001334   000062 000002                    ZERO    50,2

      585     5849    1         IF (KEYIN$->JM$ALLKEYIN.NEWPRIO > 15) OR (KEYIN$->JM$ALLKEYIN.OLDPRIO > 15)
              5849                  THEN

   5849  4 001335   200003 470500                    LDP0    @CITE$,,AUTO
         4 001336   000000 471500                    LDP1    0,,PR0
         4 001337   100006 235100                    LDA     6,,PR1
         4 001340   000017 115007                    CMPA    15,DL
         4 001341   001503 605400 4                  TPNZ    BAD_PRIO
         4 001342   100007 235100                    LDA     7,,PR1
         4 001343   000017 115007                    CMPA    15,DL
         4 001344   001503 605400 4                  TPNZ    BAD_PRIO

      586     5850    1          GOTO BAD_PRIO;
      587     5851    1        IF KEYIN$->JM$ALLKEYIN.CPRIO < KEYIN$->JM$ALLKEYIN.NEWPRIO THEN GOTO BIG_PRIO;

   5851  4 001345   100001 236100                    LDQ     1,,PR1
         4 001346   000777 376007                    ANQ     511,DL
         4 001347   100006 116100                    CMPQ    6,,PR1
         4 001350   001500 604000 4                  TMI     BIG_PRIO

      588     5852    1         CALL SELECT_ALL(%PRIOALL_TYPE);

   5852  4 001351   000021 236000 5                  LDQ     17
         4 001352   200033 756100                    STQ     ENDIF$+3,,AUTO
         4 001353   000404 701000 4                  TSX1    SELECT_ALL
         4 001354   000000 011000                    NOP     0

      589     5853    1         OC_MESSHD.OK_TYPE = %PRIOALL_TYPE;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:97   
   5853  4 001355   000004 236003                    LDQ     4,DU
         4 001356   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

      590     5854    1         OC_MESSHD.PRIO = KEYIN$->JM$ALLKEYIN.NEWPRIO;

   5854  4 001357   200003 470500                    LDP0    @CITE$,,AUTO
         4 001360   000000 471500                    LDP1    0,,PR0
         4 001361   100006 236100                    LDQ     6,,PR1
         4 001362   000011 736000                    QLS     9
         4 001363   000034 552010 3                  STBQ    OC_MESSHD+6,'10'O

      591     5855    1         CALL REPLY_NONJOB;

   5855  4 001364   000055 701000 4                  TSX1    REPLY_NONJOB
         4 001365   000000 011000                    NOP     0

      592     5856    1         RETURN;

   5856  4 001366   000000 702200 xent               TSX2  ! X66_ARET

      593     5857        /**/
      594     5858        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:98   
      595     5859        /**/
      596     5860        /*F*    NAME:   JMR$DELALL
      597     5861                PURPOSE: To process the !DELETE I ALL keyins.              */
      598     5862    1   JMR$DELALL: ENTRY(CITE$);

   5862  4 001367   000000 700200 xent  JMR$DELALL   TSX0  ! X66_AUTO_2
         4 001370   000062 000002                    ZERO    50,2

      599     5863    1         CALL SELECT_ALL(%DELALL_TYPE);

   5863  4 001371   000005 236000 5                  LDQ     5
         4 001372   200033 756100                    STQ     ENDIF$+3,,AUTO
         4 001373   000404 701000 4                  TSX1    SELECT_ALL
         4 001374   000000 011000                    NOP     0

      600     5864    1         OC_MESSHD.OK_TYPE = %DELALL_TYPE;

   5864  4 001375   000005 236003                    LDQ     5,DU
         4 001376   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

      601     5865    1         CALL REPLY_NONJOB;

   5865  4 001377   000055 701000 4                  TSX1    REPLY_NONJOB
         4 001400   000000 011000                    NOP     0

      602     5866    1         RETURN;

   5866  4 001401   000000 702200 xent               TSX2  ! X66_ARET

      603     5867        /**/
      604     5868        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:99   
      605     5869        /**/
      606     5870        /*F*   NAME:   JMR$CANCEL                                          */
      607     5871        /*F*   PURPOSE: To process both forms of the CANCEL command.       */
      608     5872    1   JMR$CANCEL: ENTRY(CITE$);

   5872  4 001402   000000 700200 xent  JMR$CANCEL   TSX0  ! X66_AUTO_2
         4 001403   000062 000002                    ZERO    50,2

      609     5873    1         IF CITE$->JM$CITE.SUBCODE = JMEC_CID# THEN

   5873  4 001404   200003 470500                    LDP0    @CITE$,,AUTO
         4 001405   000000 471500                    LDP1    0,,PR0
         4 001406   100001 235100                    LDA     1,,PR1
         4 001407   001447 601000 4                  TNZ     s:5886

      610     5874    2           DO;

      611     5875    2           SYSID = CITE$->JM$CITE.SYSID;

   5875  4 001410   100000 236100                    LDQ     0,,PR1
         4 001411   777777 376007                    ANQ     -1,DL
         4 001412   200020 756100                    STQ     SYSID,,AUTO

      612     5876    2           CALL FIND_SYSID(SYSID,Q,IF$) ALTRET(RTN);

   5876  4 001413   200026 631500                    EPPR1   IF$,,AUTO
         4 001414   200035 451500                    STP1    L+1,,AUTO
         4 001415   200011 633500                    EPPR3   Q,,AUTO
         4 001416   200034 453500                    STP3    @OPERATION+1,,AUTO
         4 001417   200020 634500                    EPPR4   SYSID,,AUTO
         4 001420   200033 454500                    STP4    ENDIF$+3,,AUTO
         4 001421   000003 701000 4                  TSX1    FIND_SYSID
         4 001422   001453 702000 4                  TSX2    RTN

      613     5877    2           IF IF$->JM$IF.ACCT = CITE$->JM$CITE.ACCT THEN

   5877  4 001423   200003 470500                    LDP0    @CITE$,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:100  
         4 001424   000000 471500                    LDP1    0,,PR0
         4 001425   200026 473500                    LDP3    IF$,,AUTO
         4 001426   040100 106500                    CMPC    fill='040'O
         4 001427   300015 000010                    ADSC9   13,,PR3                  cn=0,n=8
         4 001430   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8
         4 001431   001453 601000 4                  TNZ     RTN

      614     5878    3             DO;

      615     5879    3             IF$->JM$IF.STATUS = %MBS_CANCELED#;

   5879  4 001432   000037 236007                    LDQ     31,DL
         4 001433   300013 552104                    STBQ    11,'04'O,PR3

      616     5880    3             OC_MESSHD.OK_TYPE = %CANCEL_TYPE;

   5880  4 001434   000000 236003                    LDQ     0,DU
         4 001435   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

      617     5881    3             CALL REPLY_STATUS;

   5881  4 001436   000042 701000 4                  TSX1    REPLY_STATUS
         4 001437   000000 011000                    NOP     0

      618     5882    3             CALL DELJOB(Q,IF$);

   5882  4 001440   200026 630500                    EPPR0   IF$,,AUTO
         4 001441   200042 450500                    STP0    @QUEUE+1,,AUTO
         4 001442   200011 631500                    EPPR1   Q,,AUTO
         4 001443   200041 451500                    STP1    SW+3,,AUTO
         4 001444   000135 701000 4                  TSX1    DELJOB
         4 001445   000000 011000                    NOP     0

      619     5883    3             END;

      620     5884    2           END;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:101  
   5884  4 001446   001453 710000 4                  TRA     RTN

      621     5885    1         ELSE
      622     5886    1          CALL FOI$SNAP (S$JM244,F_JM,M_R);

   5886  4 001447   000023 630400 5                  EPPR0   19
         4 001450   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001451   000000 701000 xent               TSX1    FOI$SNAP
         4 001452   000000 011000                    NOP     0

      623     5887        /*S*    SCREECH_CODE:    JMR-S$JM244
      624     5888                TYPE:    SNAP
      625     5889                MESSAGE: MBS received an unknown CANCEL subcode.
      626     5890                REMARKS: There once was a time when a CANCEL subcode
      627     5891                         ~= JMEC_CID# was an indication to CANCEL a
      628     5892                         dependency-queue name.  No longer.                */
      629     5893
      630     5894    1   RTN:  RETURN;

   5894  4 001453   000000 702200 xent  RTN          TSX2  ! X66_ARET

      631     5895        /**/
      632     5896        /**/
      633     5897    1   NOT_YOURS:
      634     5898    1         OC_MESSHD.MSG# = NOTYOURS_MSG#; /* Not your job to play with          */

   5898  4 001454   000043 221003       NOT_YOURS    LDX1    35,DU
         4 001455   000026 441000 3                  SXL1    OC_MESSHD

      635     5899    1         GOTO REPORT_ERR;

   5899  4 001456   001505 710000 4                  TRA     REPORT_ERR

      636     5900        /**/
      637     5901    1   NO_SYSID:
      638     5902    1         OC_MESSHD.MSG# = NOSYSID_MSG#;  /* No such SYSID in MBS tables        */

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:102  
   5902  4 001457   000512 220003       NO_SYSID     LDX0    330,DU
         4 001460   000026 440000 3                  SXL0    OC_MESSHD

      639     5903    1         GOTO REPORT_ERR;

   5903  4 001461   001505 710000 4                  TRA     REPORT_ERR

      640     5904        /**/
      641     5905    1   JOB_RUNNING:
      642     5906    1         OC_MESSHD.MSG# = RUNNING_MSG#;  /* Job already running                */

   5906  4 001462   000515 220003       JOB_RUNNING  LDX0    333,DU
         4 001463   000026 440000 3                  SXL0    OC_MESSHD

      643     5907    1         GOTO REPORT_ERR;

   5907  4 001464   001505 710000 4                  TRA     REPORT_ERR

      644     5908        /**/
      645     5909    1   NOT_RUNNING:
      646     5910    1         OC_MESSHD.MSG# = NRUNNING_MSG#; /* Job not yet running                */

   5910  4 001465   000516 220003       NOT_RUNNING  LDX0    334,DU
         4 001466   000026 440000 3                  SXL0    OC_MESSHD

      647     5911    1         GOTO REPORT_ERR;

   5911  4 001467   001505 710000 4                  TRA     REPORT_ERR

   5901  4 001470                       CANT_RERUN0  null
      648     5912        /**/
      649     5913    1   CANT_RERUN0:;
      650     5914    1         OC_MESSHD.OK_TYPE=0;

   5914  4 001470   000000 236003                    LDQ     0,DU
         4 001471   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:103  
      651     5915    1         GOTO CANT_RERUN;

   5915  4 001472   001475 710000 4                  TRA     CANT_RERUN

   5914  4 001473                       CANT_RERUN1  null
      652     5916    1   CANT_RERUN1:;
      653     5917    1         OC_MESSHD.OK_TYPE=1;

   5917  4 001473   000001 236003                    LDQ     1,DU
         4 001474   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

      654     5918    1   CANT_RERUN:
      655     5919    1         OC_MESSHD.MSG# = NORERUN_MSG#;  /* Job cant be rerun                  */

   5919  4 001475   000517 220003       CANT_RERUN   LDX0    335,DU
         4 001476   000026 440000 3                  SXL0    OC_MESSHD

      656     5920    1         GOTO REPORT_ERR;

   5920  4 001477   001505 710000 4                  TRA     REPORT_ERR

      657     5921        /**/
      658     5922    1   BIG_PRIO:
      659     5923    1         OC_MESSHD.MSG# = ILLPRIO_MSG#;

   5923  4 001500   000521 220003       BIG_PRIO     LDX0    337,DU
         4 001501   000026 440000 3                  SXL0    OC_MESSHD

      660     5924    1         GOTO REPORT_ERR;

   5924  4 001502   001505 710000 4                  TRA     REPORT_ERR

      661     5925        /**/
      662     5926    1   BAD_PRIO:
      663     5927    1         OC_MESSHD.MSG# = BADPRIO_MSG#;  /* Illegal prio passed by KEYIN       */

   5927  4 001503   000513 220003       BAD_PRIO     LDX0    331,DU
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:104  
         4 001504   000026 440000 3                  SXL0    OC_MESSHD

      664     5928        /**/
      665     5929    1   REPORT_ERR:
      666     5930    1         OC_MESSHD.SYSID = KEYIN$->JM$KEYIN.SYSID;

   5930  4 001505   200003 470500       REPORT_ERR   LDP0    @CITE$,,AUTO
         4 001506   000000 471500                    LDP1    0,,PR0
         4 001507   100001 220100                    LDX0    1,,PR1
         4 001510   000027 740000 3                  STX0    OC_MESSHD+1

      667     5931    1         OC_MESSHD.ID = KEYIN$->JM$KEYIN.SYSID;

   5931  4 001511   000000 471500                    LDP1    0,,PR0
         4 001512   000000 100500                    MLR     fill='000'O
         4 001513   100001 000002                    ADSC9   1,,PR1                   cn=0,n=2
         4 001514   000033 600002 3                  ADSC9   OC_MESSHD+5              cn=3,n=2

      668     5932    1         OC_MESSHD.WSN = KEYIN$->JM$KEYIN.WSN;

   5932  4 001515   000000 471500                    LDP1    0,,PR0
         4 001516   040000 100500                    MLR     fill='040'O
         4 001517   100002 000010                    ADSC9   2,,PR1                   cn=0,n=8
         4 001520   000031 000010 3                  ADSC9   OC_MESSHD+3              cn=0,n=8

      669     5933    1         OC_MESSHD.CADDR = KEYIN$->JM$KEYIN.CADDR;

   5933  4 001521   000000 471500                    LDP1    0,,PR0
         4 001522   100000 721100                    LXL1    0,,PR1
         4 001523   000026 741000 3                  STX1    OC_MESSHD

      670     5934    1         WRITE_CSCG.BUF_ = VECTOR(OC_MESSHD);

   5934  4 001524   000000 237000 5                  LDAQ    0
         4 001525   000060 757000 3                  STAQ    WRITE_CSCG+4

      671     5935    1         CALL M$WRITE(WRITE_CSCG) ALTRET(IGNORE_IT);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:105  

   5935  4 001526   000054 630400 3                  EPPR0   WRITE_CSCG
         4 001527   440001 713400                    CLIMB   alt,write
         4 001530   401400 401760                    pmme    nvectors=4
         4 001531   001532 702000 4                  TSX2    IGNORE_IT

   5934  4 001532                       IGNORE_IT    null
      672     5936    1   IGNORE_IT:;
      673     5937    1         RETURN;

   5937  4 001532   000000 702200 xent               TSX2  ! X66_ARET

      674     5938        /**/
      675     5939        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:106  
      676     5940        /**/
      677     5941        /*F*    NAME:   JMR$CHECK_JD                                       */
      678     5942        /*F*    PURPOSE: To detect satisfied inter-job dependencies based  */
      679     5943        /*,*            on the final STEPCC of the currently exiting job.  */
      680     5944        /*F*    DESCRIPTION: If any of the jobs waiting on job dependency  */
      681     5945        /*,*            conditions are waiting for the completion of the   */
      682     5946        /*,*            currently exiting job, then the relationship which */
      683     5947        /*,*            they specify for the exiting job's STEPCC is tested */
      684     5948        /*,*            If the relation is true, then the job which speci- */
      685     5949        /*,*            fied it is made schedulable, provided it isn't also*/
      686     5950        /*,*            waiting on other uncompleted jobs.  If the relation */
      687     5951        /*,*            is false, then the job is deleted since it can never */
      688     5952        /*,*            be run.                                            */
      689     5953    1   JMR$CHECK_JD: ENTRY(CITE$);

   5953  4 001533   000000 700200 xent  JMR$CHECK_JD TSX0  ! X66_AUTO_2
         4 001534   000062 000002                    ZERO    50,2

      690     5954        /**/
      691     5955    1         ACCT = CITE$->JM$CITE.ACCT;

   5955  4 001535   200003 470500                    LDP0    @CITE$,,AUTO
         4 001536   000000 471500                    LDP1    0,,PR0
         4 001537   040100 100500                    MLR     fill='040'O
         4 001540   100003 000010                    ADSC9   3,,PR1                   cn=0,n=8
         4 001541   200016 000010                    ADSC9   ACCT,,AUTO               cn=0,n=8

      692     5956    1         SYSID = CITE$->JM$CITE.SYSID;

   5956  4 001542   100000 236100                    LDQ     0,,PR1
         4 001543   777777 376007                    ANQ     -1,DL
         4 001544   200020 756100                    STQ     SYSID,,AUTO

      693     5957    1         STATUS = CITE$->JM$CITE.JOFF_INFO.STATUS;

   5957  4 001545   000000 471500                    LDP1    0,,PR0
         4 001546   100003 235100                    LDA     3,,PR1
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:107  
         4 001547   200022 755100                    STA     STATUS,,AUTO

      694     5958    1         FRS = CITE$->JM$CITE.JOFF_INFO.FRS;

   5958  4 001550   100004 235100                    LDA     4,,PR1
         4 001551   200023 755100                    STA     FRS,,AUTO

      695     5959    1         STEPCC = CITE$->JM$CITE.SUBCODE;

   5959  4 001552   100001 235100                    LDA     1,,PR1
         4 001553   200021 755100                    STA     STEPCC,,AUTO

      696     5960
      697     5961        /* First, check the job dependency (FOLLOW) queue.                 */
      698     5962    1         Q = %JM_Q$JD;

   5962  4 001554   000004 235007                    LDA     4,DL
         4 001555   200011 755100                    STA     Q,,AUTO

      699     5963    1         CALL CHECK_JD;

   5963  4 001556   001565 701000 4                  TSX1    CHECK_JD
         4 001557   000000 011000                    NOP     0

      700     5964
      701     5965        /* Unfortunately, the waiting-for-runafter-time (DEFER) queue must */
      702     5966        /* be run, too.                                                    */
      703     5967    1         Q = %JM_Q$WR;

   5967  4 001560   000002 235007                    LDA     2,DL
         4 001561   200011 755100                    STA     Q,,AUTO

      704     5968    1         CALL CHECK_JD;

   5968  4 001562   001565 701000 4                  TSX1    CHECK_JD
         4 001563   000000 011000                    NOP     0

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:108  
      705     5969
      706     5970    1         RETURN;

   5970  4 001564   000000 702200 xent               TSX2  ! X66_ARET

      707     5971
      708     5972    1   CHECK_JD: PROC;

   5972  4 001565   200032 741300       CHECK_JD     STX1  ! ENDIF$+2,,AUTO

      709     5973
      710     5974    2   FIRST_JOB:
      711     5975    2         IF$ = JMC_CHAINS.HEAD$(Q);

   5975  4 001566   200011 235100       FIRST_JOB    LDA     Q,,AUTO
         4 001567   000001 735000                    ALS     1
         4 001570   000000 236005 xsym               LDQ     JMC_CH,AL
         4 001571   200026 756100                    STQ     IF$,,AUTO

      712     5976
      713     5977    3           DO WHILE (IF$ ~= ADDR(NIL));

   5977  4 001572   001763 710000 4                  TRA     s:6056

      714     5978    3           TIF$ = IF$->JM$IF.LNK$;

   5978  4 001573   200026 470500                    LDP0    IF$,,AUTO
         4 001574   000000 236100                    LDQ     0,,PR0
         4 001575   200027 756100                    STQ     TIF$,,AUTO

      715     5979    4             DO I = 0 TO IF$->JM$IF.NJD - 1;

   5979  4 001576   200005 450100                    STZ     I,,AUTO
         4 001577   001754 710000 4                  TRA     s:6053+1

      716     5980    4             IF IF$->JM$IF.JDID.FOLLOW_TYPE(I) = %JM_FOLLOW_ACCOUNT THEN

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:109  
   5980  4 001600   200026 470500                    LDP0    IF$,,AUTO
         4 001601   200005 720100                    LXL0    I,,AUTO
         4 001602   000027 236110                    LDQ     23,X0,PR0
         4 001603   070000 376003                    ANQ     28672,DU
         4 001604   040000 116003                    CMPQ    16384,DU
         4 001605   001656 601000 4                  TNZ     FOLLOW_STEPCC_OKERRORABORT

      717     5981    4   FOLLOW_ACCOUNT:
      718     5982    5               DO;

   5982  4 001606                       FOLLOW_ACCO* null
      719     5983                    /*N*
      720     5984                          SOMEDAY:  change JM$CITE so ACCT doesn't
      721     5985                                    REDEF JOFF_INFO, and have JMR$DEL
      722     5986                                    fill in JM$CITE.ACCT with B$JIT.ACCN
      723     5987                                    so's this next IF statement can save
      724     5988                                    us some time....
      725     5989                    IF IF$->JM$IF.ACCT = ACCT THEN
      726     5990                    */
      727     5991    6                 DO;

      728     5992    6                 CALL CHECK_FOLLOW_ACCOUNT

   5992  4 001606   002153 701000 4                  TSX1    CHECK_FOLLOW_ACCOUNT
         4 001607   001655 702000 4                  TSX2    s:6016

      729     5993    6                 WHENRETURN
      730     5994    7                   DO;

      731     5995        /* No more jobs from this account around:  schedule the job.       */
      732     5996    7                   IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;

   5996  4 001610   200026 470500                    LDP0    IF$,,AUTO
         4 001611   200005 720100                    LXL0    I,,AUTO
         4 001612   000001 236003                    LDQ     1,DU
         4 001613   000027 256110                    ORSQ    23,X0,PR0

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:110  
      733     5997    7                   IF$->JM$IF.UNSAT_COUNT = 0;

   5997  4 001614   200026 470500                    LDP0    IF$,,AUTO
         4 001615   000000 236003                    LDQ     0,DU
         4 001616   000006 552120                    STBQ    6,'20'O,PR0

      734     5998        /*
      735     5999                        dont unlink jobs on the wait run q unless we are sure
      736     6000                         that it is time for them to run.
      737     6001        */
      738     6002    8                   IF IF$->JM$IF.FLG.RA THEN DO;

   6002  4 001617   200026 470500                    LDP0    IF$,,AUTO
         4 001620   000013 236100                    LDQ     11,,PR0
         4 001621   002000 316007                    CANQ    1024,DL
         4 001622   001632 600000 4                  TZE     s:6007

      739     6003    8                     CALL M$TIME(FPT_TIME);

   6003  4 001623   000040 630400 3                  EPPR0   FPT_TIME
         4 001624   020004 713400                    CLIMB   8196
         4 001625   402000 401760                    pmme    nvectors=5

      740     6004    8                     IF IF$->JM$IF.RATIM > CUTS THEN

   6004  4 001626   200026 470500                    LDP0    IF$,,AUTO
         4 001627   000036 236000 3                  LDQ     CUTS
         4 001630   000026 116100                    CMPQ    22,,PR0
         4 001631   001761 602000 4                  TNC     NEXT_JOB

      741     6005    8                      GOTO NEXT_JOB;
      742     6006    8                     END;

      743     6007    7                   CALL JMU$UNLINK_IF(Q,,IF$);

   6007  4 001632   200026 631500                    EPPR1   IF$,,AUTO
         4 001633   200060 451500                    STP1    NXT_PTR$+3,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:111  
         4 001634   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001635   200057 756100                    STQ     NXT_PTR$+2,,AUTO
         4 001636   200011 633500                    EPPR3   Q,,AUTO
         4 001637   200056 453500                    STP3    NXT_PTR$+1,,AUTO
         4 001640   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 001641   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001642   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 001643   000000 011000                    NOP     0

      744     6008    7                   CALL JMU$SELECTQ(IF$,QNUM);

   6008  4 001644   200012 630500                    EPPR0   QNUM,,AUTO
         4 001645   200057 450500                    STP0    NXT_PTR$+2,,AUTO
         4 001646   200026 631500                    EPPR1   IF$,,AUTO
         4 001647   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 001650   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 001651   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001652   000000 701000 xent               TSX1    JMU$SELECTQ
         4 001653   000000 011000                    NOP     0

      745     6009    7                   GOTO NEXT_JOB;

   6009  4 001654   001761 710000 4                  TRA     NEXT_JOB

      746     6010    7                   END;
      747     6011    6                 WHENALTRETURN
      748     6012    7                   DO;

      749     6013        /* There's some jobs from this account around:  don't do anything. */
      750     6014    7                   END;

      751     6015    6                 END;

      752     6016    5               END FOLLOW_ACCOUNT;

   6016  4 001655   001753 710000 4                  TRA     s:6053

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:112  
      753     6017    4             ELSE
      754     6018    4   FOLLOW_STEPCC_OKERRORABORT:
      755     6019    5               DO;

   6019  4 001656                       FOLLOW_STEP* null
      756     6020    5               IF  (NOT IF$->JM$IF.JDID.SATISFIED(I))

   6020  4 001656   000027 236110                    LDQ     23,X0,PR0
         4 001657   000001 316003                    CANQ    1,DU
         4 001660   001753 601000 4                  TNZ     s:6053
         4 001661   000027 236110                    LDQ     23,X0,PR0
         4 001662   777777 376007                    ANQ     -1,DL
         4 001663   200020 116100                    CMPQ    SYSID,,AUTO
         4 001664   001753 601000 4                  TNZ     s:6053

      757     6021    5               AND (IF$->JM$IF.JDID.SYSID(I) = SYSID) THEN
      758     6022    6                 DO;

      759     6023    6                 CALL CHECK_FINAL_STATUS

   6023  4 001665   002211 701000 4                  TSX1    CHECK_FINAL_STATUS
         4 001666   001727 702000 4                  TSX2    s:6039

      760     6024    6                 WHENRETURN
      761     6025    7                   DO;

      762     6026    7                   IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;

   6026  4 001667   200026 470500                    LDP0    IF$,,AUTO
         4 001670   200005 720100                    LXL0    I,,AUTO
         4 001671   000001 236003                    LDQ     1,DU
         4 001672   000027 256110                    ORSQ    23,X0,PR0

      763     6027    7                   IF$->JM$IF.UNSAT_COUNT = IF$->JM$IF.UNSAT_COUNT - 1;

   6027  4 001673   200026 470500                    LDP0    IF$,,AUTO
         4 001674   000006 236100                    LDQ     6,,PR0
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:113  
         4 001675   000777 036003                    ADLQ    511,DU
         4 001676   000006 552120                    STBQ    6,'20'O,PR0

      764     6028    7                   IF IF$->JM$IF.UNSAT_COUNT = 0 THEN

   6028  4 001677   200026 470500                    LDP0    IF$,,AUTO
         4 001700   000006 236100                    LDQ     6,,PR0
         4 001701   000777 316003                    CANQ    511,DU
         4 001702   001726 601000 4                  TNZ     s:6033+1

      765     6029    8                     DO;

      766     6030        /* All dependencies are satisfied:  schedule the job.              */
      767     6031    8                     CALL JMU$UNLINK_IF(Q,,IF$);

   6031  4 001703   200026 631500                    EPPR1   IF$,,AUTO
         4 001704   200060 451500                    STP1    NXT_PTR$+3,,AUTO
         4 001705   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001706   200057 756100                    STQ     NXT_PTR$+2,,AUTO
         4 001707   200011 633500                    EPPR3   Q,,AUTO
         4 001710   200056 453500                    STP3    NXT_PTR$+1,,AUTO
         4 001711   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 001712   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001713   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 001714   000000 011000                    NOP     0

      768     6032    8                     CALL JMU$SELECTQ(IF$,QNUM);

   6032  4 001715   200012 630500                    EPPR0   QNUM,,AUTO
         4 001716   200057 450500                    STP0    NXT_PTR$+2,,AUTO
         4 001717   200026 631500                    EPPR1   IF$,,AUTO
         4 001720   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 001721   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 001722   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001723   000000 701000 xent               TSX1    JMU$SELECTQ
         4 001724   000000 011000                    NOP     0

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:114  
      769     6033    8                     GOTO NEXT_JOB;

   6033  4 001725   001761 710000 4                  TRA     NEXT_JOB
         4 001726   001753 710000 4                  TRA     s:6053

      770     6034    8                     END;
      771     6035    7                   END;
      772     6036    6                 WHENALTRETURN
      773     6037    7                   DO;

      774     6038        /* Any one dependency is not not satisfied:  delete the job.       */
      775     6039    7                   IF$->JM$IF.STATUS = %MBS_SHAFTED#;

   6039  4 001727   200026 470500                    LDP0    IF$,,AUTO
         4 001730   000040 236007                    LDQ     32,DL
         4 001731   000013 552104                    STBQ    11,'04'O,PR0

      776     6040    7                   OC_MESSHD.SYSID = IF$->JM$IF.SYSID;

   6040  4 001732   200026 470500                    LDP0    IF$,,AUTO
         4 001733   000014 720100                    LXL0    12,,PR0
         4 001734   000027 740000 3                  STX0    OC_MESSHD+1

      777     6041    7                   OC_MESSHD.ID = IF$->JM$IF.SYSID;

   6041  4 001735   000000 100500                    MLR     fill='000'O
         4 001736   000014 400002                    ADSC9   12,,PR0                  cn=2,n=2
         4 001737   000033 600002 3                  ADSC9   OC_MESSHD+5              cn=3,n=2

      778     6042    7                   OC_MESSHD.OK_TYPE = %AUTODEL_TYPE;

   6042  4 001740   000003 236003                    LDQ     3,DU
         4 001741   000034 552020 3                  STBQ    OC_MESSHD+6,'20'O

      779     6043    7                   CALL REPLY_NONJOB;

   6043  4 001742   000055 701000 4                  TSX1    REPLY_NONJOB
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:115  
         4 001743   000000 011000                    NOP     0

      780     6044    7                   CALL DELJOB(Q,IF$);

   6044  4 001744   200026 630500                    EPPR0   IF$,,AUTO
         4 001745   200042 450500                    STP0    @IF$,,AUTO
         4 001746   200011 631500                    EPPR1   Q,,AUTO
         4 001747   200041 451500                    STP1    @QUEUE,,AUTO
         4 001750   000135 701000 4                  TSX1    DELJOB
         4 001751   000000 011000                    NOP     0

      781     6045        /* Since JMR$CHECK_JD might have been entered recursively by the   */
      782     6046        /* above call to DELJOB, TIF$ may no longer be valid (it may point */
      783     6047        /* to a job which was deleted a few auto frames up).  We have to   */
      784     6048        /* start the search over at the head of the queue again.           */
      785     6049    7                   GOTO FIRST_JOB;

   6049  4 001752   001566 710000 4                  TRA     FIRST_JOB

      786     6050    7                   END;
      787     6051    6                 END;

      788     6052    5               END FOLLOW_STEPCC_OKERRORABORT;

      789     6053    4             END;

   6053  4 001753   200005 054100                    AOS     I,,AUTO
         4 001754   200026 470500                    LDP0    IF$,,AUTO
         4 001755   000013 236100                    LDQ     11,,PR0
         4 001756   000033 772000                    QRL     27
         4 001757   200005 116100                    CMPQ    I,,AUTO
         4 001760   001600 605400 4                  TPNZ    s:5980

      790     6054    3   NEXT_JOB:
      791     6055    3           IF$ = TIF$;

   6055  4 001761   200027 236100       NEXT_JOB     LDQ     TIF$,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:116  
         4 001762   200026 756100                    STQ     IF$,,AUTO

      792     6056    3           END;

   6056  4 001763   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 001764   001573 601000 4                  TNZ     s:5978

      793     6057
      794     6058    2         RETURN;

   6058  4 001765   200032 221300                    LDX1  ! ENDIF$+2,,AUTO
         4 001766   000001 702211                    TSX2  ! 1,X1

      795     6059
      796     6060    2   END CHECK_JD;
      797     6061        /**/
      798     6062        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:117  
      799     6063        /**/
      800     6064        /*F*    NAME:   JMR$CHK_OLDJD                                      */
      801     6065        /*F*    PURPOSE: To see if a newly submitted job with job id       */
      802     6066        /*,*            dependency conditions has already had them satis-  */
      803     6067        /*,*            fied by previously completed jobs.                 */
      804     6068    1   JMR$CHK_OLDJD: ENTRY(CITE$);    /* CITE$ points to IF$->JM$IF           */

   6068  4 001767   000000 700200 xent  JMR$CHK_OLD* TSX0  ! X66_AUTO_2
         4 001770   000062 000002                    ZERO    50,2

      805     6069    1         IF$ = CITE$;              /* So we can use our handy %SUBS   */

   6069  4 001771   200003 470500                    LDP0    @CITE$,,AUTO
         4 001772   000000 236100                    LDQ     0,,PR0
         4 001773   200026 756100                    STQ     IF$,,AUTO

      806     6070
      807     6071        /* I'm not sure what this line does!  JJL, C00.                    */
      808     6072    1         IF IF$->JM$IF.UNSAT_COUNT ~= IF$->JM$IF.NJD THEN RETURN;

   6072  4 001774   200026 471500                    LDP1    IF$,,AUTO
         4 001775   100013 236100                    LDQ     11,,PR1
         4 001776   000033 772000                    QRL     27
         4 001777   200056 756100                    STQ     NXT_PTR$+1,,AUTO
         4 002000   100006 236100                    LDQ     6,,PR1
         4 002001   000022 772000                    QRL     18
         4 002002   000777 376007                    ANQ     511,DL
         4 002003   200056 116100                    CMPQ    NXT_PTR$+1,,AUTO
         4 002004   002006 600000 4                  TZE     s:6074

   6072  4 002005   000000 702200 xent               TSX2  ! X66_ARET

      809     6073
      810     6074    2           DO I = 0 TO IF$->JM$IF.NJD - 1;

   6074  4 002006   200005 450100                    STZ     I,,AUTO
         4 002007   002145 710000 4                  TRA     NOT_RUN+1
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:118  

      811     6075    2           IF IF$->JM$IF.JDID.FOLLOW_TYPE(I) = %JM_FOLLOW_ACCOUNT THEN

   6075  4 002010   200026 470500                    LDP0    IF$,,AUTO
         4 002011   200005 720100                    LXL0    I,,AUTO
         4 002012   000027 236110                    LDQ     23,X0,PR0
         4 002013   070000 376003                    ANQ     28672,DU
         4 002014   040000 116003                    CMPQ    16384,DU
         4 002015   002052 601000 4                  TNZ     FOLLOW_STEPCC_OKERRORABORT

      812     6076    2   FOLLOW_ACCOUNT:
      813     6077    3             DO;

   6077  4 002016                       FOLLOW_ACCO* null
      814     6078    3             CALL CHECK_FOLLOW_ACCOUNT

   6078  4 002016   002153 701000 4                  TSX1    CHECK_FOLLOW_ACCOUNT
         4 002017   002051 702000 4                  TSX2    s:6091

      815     6079    3             WHENRETURN
      816     6080    4               DO;

      817     6081        /* No more jobs from this account around:  schedule the job.       */
      818     6082    4               IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;

   6082  4 002020   200026 470500                    LDP0    IF$,,AUTO
         4 002021   200005 720100                    LXL0    I,,AUTO
         4 002022   000001 236003                    LDQ     1,DU
         4 002023   000027 256110                    ORSQ    23,X0,PR0

      819     6083    4               IF$->JM$IF.UNSAT_COUNT = 0;

   6083  4 002024   200026 470500                    LDP0    IF$,,AUTO
         4 002025   000000 236003                    LDQ     0,DU
         4 002026   000006 552120                    STBQ    6,'20'O,PR0

      820     6084    4               CALL JMU$UNLINK_IF(JM_Q$JD,,IF$);
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:119  

   6084  4 002027   200026 630500                    EPPR0   IF$,,AUTO
         4 002030   200060 450500                    STP0    NXT_PTR$+3,,AUTO
         4 002031   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 002032   000021 235000 5                  LDA     17
         4 002033   200056 757100                    STAQ    NXT_PTR$+1,,AUTO
         4 002034   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 002035   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002036   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 002037   000000 011000                    NOP     0

      821     6085    4               CALL JMU$SELECTQ(IF$,QNUM);

   6085  4 002040   200012 630500                    EPPR0   QNUM,,AUTO
         4 002041   200057 450500                    STP0    NXT_PTR$+2,,AUTO
         4 002042   200026 631500                    EPPR1   IF$,,AUTO
         4 002043   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 002044   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 002045   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 002046   000000 701000 xent               TSX1    JMU$SELECTQ
         4 002047   000000 011000                    NOP     0

      822     6086    4               END;

   6086  4 002050   002051 710000 4                  TRA     s:6091

      823     6087    3             WHENALTRETURN
      824     6088    4               DO;

      825     6089        /* There's some jobs from this account around:  don't do anything. */
      826     6090    4               END;

      827     6091    3             END FOLLOW_ACCOUNT;

   6091  4 002051   002144 710000 4                  TRA     NOT_RUN

      828     6092    2           ELSE
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:120  
      829     6093    2   FOLLOW_STEPCC_OKERRORABORT:
      830     6094    3             DO;

   6094  4 002052                       FOLLOW_STEP* null
      831     6095    3             READ_INFO.SYSID# = IF$->JM$IF.JDID.SYSID(I);

   6095  4 002052   000027 721110                    LXL1    23,X0,PR0
         4 002053   000012 441000 3                  SXL1    READ_INFO+4

      832     6096    3             CALL XSJ$READ(READ_INFO) ALTRET(NOT_RUN);

   6096  4 002054   000026 630400 5                  EPPR0   22
         4 002055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002056   000000 701000 xent               TSX1    XSJ$READ
         4 002057   002144 702000 4                  TSX2    NOT_RUN

      833     6097
      834     6098    3             STATUS = OLDJOB_INFO.STATUS#;

   6098  4 002060   000001 236000 3                  LDQ     OLDJOB_INFO
         4 002061   000777 376007                    ANQ     511,DL
         4 002062   200022 756100                    STQ     STATUS,,AUTO

      835     6099    3             FRS = BITBIN(OLDJOB_INFO.FRS#);

   6099  4 002063   000001 236000 3                  LDQ     OLDJOB_INFO
         4 002064   000033 772000                    QRL     27
         4 002065   200023 756100                    STQ     FRS,,AUTO

      836     6100    3             STEPCC = OLDJOB_INFO.STEPCC#;

   6100  4 002066   000001 236000 3                  LDQ     OLDJOB_INFO
         4 002067   000011 772000                    QRL     9
         4 002070   000777 376007                    ANQ     511,DL
         4 002071   200021 756100                    STQ     STEPCC,,AUTO

      837     6101
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:121  
      838     6102    3             CALL CHECK_FINAL_STATUS

   6102  4 002072   002211 701000 4                  TSX1    CHECK_FINAL_STATUS
         4 002073   002132 702000 4                  TSX2    s:6118

      839     6103    3             WHENRETURN
      840     6104    4               DO;

      841     6105    4               IF$->JM$IF.JDID.SATISFIED(I) = %TRUE;

   6105  4 002074   200026 470500                    LDP0    IF$,,AUTO
         4 002075   200005 720100                    LXL0    I,,AUTO
         4 002076   000001 236003                    LDQ     1,DU
         4 002077   000027 256110                    ORSQ    23,X0,PR0

      842     6106    4               IF$->JM$IF.UNSAT_COUNT = IF$->JM$IF.UNSAT_COUNT - 1;

   6106  4 002100   200026 470500                    LDP0    IF$,,AUTO
         4 002101   000006 236100                    LDQ     6,,PR0
         4 002102   000777 036003                    ADLQ    511,DU
         4 002103   000006 552120                    STBQ    6,'20'O,PR0

      843     6107    4               IF IF$->JM$IF.UNSAT_COUNT = 0

   6107  4 002104   200026 470500                    LDP0    IF$,,AUTO
         4 002105   000006 236100                    LDQ     6,,PR0
         4 002106   000777 316003                    CANQ    511,DU
         4 002107   002131 601000 4                  TNZ     s:6114

      844     6108    4               THEN
      845     6109    5                 DO;

      846     6110        /* All dependencies are satisfied:  schedule the job.              */
      847     6111    5                 CALL JMU$UNLINK_IF(JM_Q$JD,,IF$);

   6111  4 002110   200026 631500                    EPPR1   IF$,,AUTO
         4 002111   200060 451500                    STP1    NXT_PTR$+3,,AUTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:122  
         4 002112   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 002113   000021 235000 5                  LDA     17
         4 002114   200056 757100                    STAQ    NXT_PTR$+1,,AUTO
         4 002115   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 002116   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002117   000000 701000 xent               TSX1    JMU$UNLINK_IF
         4 002120   000000 011000                    NOP     0

      848     6112    5                 CALL JMU$SELECTQ(IF$,QNUM);

   6112  4 002121   200012 630500                    EPPR0   QNUM,,AUTO
         4 002122   200057 450500                    STP0    NXT_PTR$+2,,AUTO
         4 002123   200026 631500                    EPPR1   IF$,,AUTO
         4 002124   200056 451500                    STP1    NXT_PTR$+1,,AUTO
         4 002125   200056 630500                    EPPR0   NXT_PTR$+1,,AUTO
         4 002126   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 002127   000000 701000 xent               TSX1    JMU$SELECTQ
         4 002130   000000 011000                    NOP     0

      849     6113    5                 END;

      850     6114    4               END;

   6114  4 002131   002144 710000 4                  TRA     NOT_RUN

      851     6115    3             WHENALTRETURN
      852     6116    4               DO;

      853     6117        /* Any one dependency is not not satisfied:  delete the job.       */
      854     6118    4               IF$->JM$IF.STATUS = %MBS_SHAFTED#;

   6118  4 002132   200026 470500                    LDP0    IF$,,AUTO
         4 002133   000040 236007                    LDQ     32,DL
         4 002134   000013 552104                    STBQ    11,'04'O,PR0

      855     6119    4               CALL DELJOB(JM_Q$JD,IF$);

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:123  
   6119  4 002135   200026 630500                    EPPR0   IF$,,AUTO
         4 002136   200042 450500                    STP0    @QUEUE+1,,AUTO
         4 002137   000021 236000 5                  LDQ     17
         4 002140   200041 756100                    STQ     SW+3,,AUTO
         4 002141   000135 701000 4                  TSX1    DELJOB
         4 002142   000000 011000                    NOP     0

      856     6120    4               RETURN;

   6120  4 002143   000000 702200 xent               TSX2  ! X66_ARET

      857     6121    4               END;
      858     6122    3             END FOLLOW_STEPCC_OKERRORABORT;

      859     6123
      860     6124    2   NOT_RUN:
      861     6125    2           END;

   6125  4 002144   200005 054100       NOT_RUN      AOS     I,,AUTO
         4 002145   200026 470500                    LDP0    IF$,,AUTO
         4 002146   000013 236100                    LDQ     11,,PR0
         4 002147   000033 772000                    QRL     27
         4 002150   200005 116100                    CMPQ    I,,AUTO
         4 002151   002010 605400 4                  TPNZ    s:6075

      862     6126
      863     6127    1         RETURN;

   6127  4 002152   000000 702200 xent               TSX2  ! X66_ARET

      864     6128
      865     6129        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:124  
      866     6130    1   CHECK_FOLLOW_ACCOUNT: PROC ALTRET;

   6130  4 002153   200034 741300       CHECK_FOLLO* STX1  ! L,,AUTO

      867     6131    2   DCL JOB$ PTR;
      868     6132    2   DCL SW SBIN;
      869     6133
      870     6134        /* The FOLLOW account case (specified as just plain "FOLLOW"       */
      871     6135        /* on the !JOB card) looks a lot like ORDER:  check all the queues */
      872     6136        /* for jobs submitted from the same account before this job.       */
      873     6137        /* If none are found, the job can be run.                          */
      874     6138    3           DO SW = JM_Q$RUN DOWNTO JM_Q$WR;

   6138  4 002154   000026 235007                    LDA     22,DL
         4 002155   200036 755100                    STA     SW,,AUTO

      875     6139    3           JOB$ = JMC_CHAINS.HEAD$(SW);

   6139  4 002156   200036 235100                    LDA     SW,,AUTO
         4 002157   000001 735000                    ALS     1
         4 002160   000000 236005 xsym               LDQ     JMC_CH,AL
         4 002161   200035 756100                    STQ     JOB$,,AUTO

      876     6140    4             DO WHILE (JOB$ ~= ADDR(NIL));

   6140  4 002162   002200 710000 4                  TRA     s:6145

      877     6141    4             IF  IF$->JM$IF.SUBMIT_TIME > JOB$->JM$IF.SUBMIT_TIME

   6141  4 002163   200035 470500                    LDP0    JOB$,,AUTO
         4 002164   200026 471500                    LDP1    IF$,,AUTO
         4 002165   000007 236100                    LDQ     7,,PR0
         4 002166   100007 116100                    CMPQ    7,,PR1
         4 002167   002176 603000 4                  TRC     s:6144
         4 002170   040100 106500                    CMPC    fill='040'O
         4 002171   100015 000010                    ADSC9   13,,PR1                  cn=0,n=8
         4 002172   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:125  
         4 002173   002176 601000 4                  TNZ     s:6144

      878     6142    4             AND IF$->JM$IF.ACCT = JOB$->JM$IF.ACCT THEN
      879     6143    4              ALTRETURN;

   6143  4 002174   200034 221300                    LDX1  ! L,,AUTO
         4 002175   000000 702211                    TSX2  ! 0,X1

      880     6144    4             JOB$ = JOB$->JM$IF.LNK$;

   6144  4 002176   000000 236100                    LDQ     0,,PR0
         4 002177   200035 756100                    STQ     JOB$,,AUTO

      881     6145    4             END;

   6145  4 002200   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 002201   002163 601000 4                  TNZ     s:6141

      882     6146    3           END;

   6146  4 002202   000001 336007                    LCQ     1,DL
         4 002203   200036 056100                    ASQ     SW,,AUTO
         4 002204   200036 235100                    LDA     SW,,AUTO
         4 002205   000002 115007                    CMPA    2,DL
         4 002206   002156 605000 4                  TPL     s:6139

      883     6147
      884     6148    2         RETURN;

   6148  4 002207   200034 221300                    LDX1  ! L,,AUTO
         4 002210   000001 702211                    TSX2  ! 1,X1

      885     6149
      886     6150    2   END CHECK_FOLLOW_ACCOUNT;
      887     6151        %EJECT;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:126  
      888     6152    1   CHECK_FINAL_STATUS: PROC ALTRET;

   6152  4 002211   200034 741300       CHECK_FINAL* STX1  ! L,,AUTO

      889     6153
      890     6154    3           DO CASE (STATUS);

   6154  4 002212   200022 235100                    LDA     STATUS,,AUTO
         4 002213   000036 135007                    SBLA    30,DL
         4 002214   000036 115007                    CMPA    30,DL
         4 002215   002217 602005 4                  TNC     s:6154+5,AL
         4 002216   002774 710000 4                  TRA     s:6281
         4 002217   002255 710000 4                  TRA     s:6173
         4 002220   002255 710000 4                  TRA     s:6173
         4 002221   002255 710000 4                  TRA     s:6173
         4 002222   002255 710000 4                  TRA     s:6173
         4 002223   002774 710000 4                  TRA     s:6281
         4 002224   002774 710000 4                  TRA     s:6281
         4 002225   002774 710000 4                  TRA     s:6281
         4 002226   002774 710000 4                  TRA     s:6281
         4 002227   002774 710000 4                  TRA     s:6281
         4 002230   002774 710000 4                  TRA     s:6281
         4 002231   002255 710000 4                  TRA     s:6173
         4 002232   002255 710000 4                  TRA     s:6173
         4 002233   002255 710000 4                  TRA     s:6173
         4 002234   002255 710000 4                  TRA     s:6173
         4 002235   002255 710000 4                  TRA     s:6173
         4 002236   002255 710000 4                  TRA     s:6173
         4 002237   002255 710000 4                  TRA     s:6173
         4 002240   002255 710000 4                  TRA     s:6173
         4 002241   002255 710000 4                  TRA     s:6173
         4 002242   002255 710000 4                  TRA     s:6173
         4 002243   002255 710000 4                  TRA     s:6173
         4 002244   002774 710000 4                  TRA     s:6281
         4 002245   002774 710000 4                  TRA     s:6281
         4 002246   002774 710000 4                  TRA     s:6281
         4 002247   002774 710000 4                  TRA     s:6281
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:127  
         4 002250   002774 710000 4                  TRA     s:6281
         4 002251   002774 710000 4                  TRA     s:6281
         4 002252   002255 710000 4                  TRA     s:6173
         4 002253   002256 710000 4                  TRA     s:6177
         4 002254   002256 710000 4                  TRA     s:6177

      891     6155
      892     6156    3             CASE(%MBS_DELETED#,

      893     6157    3         %MBS_CANCELED#,
      894     6158    3         %MBS_SHAFTED#,
      895     6159    3         %MBS_FILERR#,
      896     6160    3         %PRE_PASSED#,
      897     6161    3         %REJ_JOB#,
      898     6162    3         %REJ_RES#,
      899     6163    3         %REJ_SYNTAX#,
      900     6164    3         %REJ_IO#,
      901     6165    3         %REJ_JOBIMBED#,
      902     6166    3         %REJ_RESIMBED#,
      903     6167    3         %REJ_BADID#,
      904     6168    3         %REJ_NORES#,
      905     6169    3         %REJ_PRESCAN#,
      906     6170    3         %REJ_NOBATCH#,
      907     6171    3         %FIN_RECOVER#);
      908     6172        /* That sure was a really awful STATUS#.  Better delete this job.  */
      909     6173    3               ALTRETURN;

   6173  4 002255   000000 702211                    TSX2  ! 0,X1

      910     6174
      911     6175    3             CASE(%FIN_ABNORMAL#,

      912     6176    3               %FIN_COMPLETED#);
      913     6177    4                 DO CASE (FRS);

   6177  4 002256   200023 236100                    LDQ     FRS,,AUTO
         4 002257   000401 116007                    CMPQ    257,DL
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:128  
         4 002260   002262 602006 4                  TNC     s:6177+4,QL
         4 002261   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002262   002737 710000 4                  TRA     s:6237
         4 002263   002712 710000 4                  TRA     s:6215
         4 002264   002664 710000 4                  TRA     s:6193
         4 002265   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002266   002664 710000 4                  TRA     s:6193
         4 002267   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002270   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002271   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002272   002664 710000 4                  TRA     s:6193
         4 002273   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002274   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002275   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002276   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002277   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002300   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002301   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002302   002663 710000 4                  TRA     s:6183
         4 002303   002663 710000 4                  TRA     s:6183
         4 002304   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002305   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002306   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002307   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002310   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002311   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002312   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002313   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002314   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002315   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002316   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002317   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002320   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002321   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002322   002664 710000 4                  TRA     s:6193
         4 002323   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002324   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:129  
         4 002325   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002326   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002327   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002330   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002331   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002332   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002333   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002334   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002335   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002336   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002337   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002340   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002341   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002342   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002343   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002344   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002345   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002346   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002347   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002350   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002351   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002352   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002353   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002354   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002355   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002356   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002357   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002360   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002361   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002362   002664 710000 4                  TRA     s:6193
         4 002363   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002364   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002365   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002366   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002367   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002370   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002371   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:130  
         4 002372   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002373   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002374   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002375   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002376   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002377   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002400   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002401   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002402   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002403   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002404   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002405   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002406   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002407   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002410   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002411   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002412   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002413   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002414   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002415   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002416   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002417   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002420   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002421   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002422   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002423   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002424   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002425   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002426   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002427   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002430   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002431   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002432   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002433   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002434   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002435   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002436   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:131  
         4 002437   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002440   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002441   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002442   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002443   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002444   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002445   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002446   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002447   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002450   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002451   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002452   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002453   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002454   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002455   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002456   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002457   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002460   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002461   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002462   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002463   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002464   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002465   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002466   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002467   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002470   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002471   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002472   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002473   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002474   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002475   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002476   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002477   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002500   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002501   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002502   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002503   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:132  
         4 002504   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002505   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002506   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002507   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002510   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002511   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002512   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002513   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002514   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002515   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002516   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002517   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002520   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002521   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002522   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002523   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002524   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002525   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002526   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002527   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002530   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002531   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002532   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002533   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002534   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002535   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002536   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002537   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002540   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002541   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002542   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002543   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002544   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002545   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002546   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002547   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002550   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:133  
         4 002551   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002552   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002553   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002554   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002555   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002556   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002557   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002560   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002561   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002562   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002563   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002564   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002565   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002566   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002567   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002570   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002571   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002572   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002573   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002574   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002575   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002576   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002577   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002600   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002601   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002602   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002603   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002604   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002605   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002606   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002607   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002610   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002611   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002612   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002613   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002614   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002615   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:134  
         4 002616   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002617   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002620   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002621   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002622   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002623   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002624   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002625   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002626   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002627   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002630   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002631   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002632   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002633   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002634   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002635   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002636   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002637   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002640   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002641   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002642   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002643   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002644   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002645   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002646   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002647   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002650   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002651   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002652   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002653   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002654   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002655   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002656   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002657   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002660   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002661   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS
         4 002662   002663 710000 4                  TRA     s:6183
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:135  

      914     6178
      915     6179    4                   CASE(%BITBIN(RS_CAN#),

      916     6180    4               %BITBIN(RS_EKEY#),
      917     6181    4               %BITBIN(RS_XKEY#));
      918     6182        /* That sure was a really awful FRS#.  Better delete this job.     */
      919     6183    4                     ALTRETURN;

   6183  4 002663   000000 702211                    TSX2  ! 0,X1

      920     6184
      921     6185    4                   CASE(%BITBIN(RS_XXX#),

      922     6186    4                     %BITBIN(RS_SSP#),
      923     6187    4                     %BITBIN(RS_ABRT#),
      924     6188    4                     %BITBIN(RS_OFF#),
      925     6189    4                     %BITBIN(RS_LIMX#));
      926     6190        /* The last one ABORTed, so let this job through if:               */
      927     6191        /*   1) it specified FOLLOW(name(ABORT)) or                        */
      928     6192        /*   2) it specified FOLLOW(name(STEPCC=oldjob_info.stepcc#)).     */
      929     6193    5                       DO CASE ( IF$->JM$IF.JDID.FOLLOW_TYPE(I) );

   6193  4 002664   200026 470500                    LDP0    IF$,,AUTO
         4 002665   200005 720100                    LXL0    I,,AUTO
         4 002666   000027 236110                    LDQ     23,X0,PR0
         4 002667   000036 772000                    QRL     30
         4 002670   000007 376007                    ANQ     7,DL
         4 002671   000004 116007                    CMPQ    4,DL
         4 002672   002674 602006 4                  TNC     s:6193+8,QL
         4 002673   002711 710000 4                  TRA     s:6207
         4 002674   002701 710000 4                  TRA     s:6199
         4 002675   002711 710000 4                  TRA     s:6207
         4 002676   002711 710000 4                  TRA     s:6207
         4 002677   002700 710000 4                  TRA     s:6196

      930     6194
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:136  
      931     6195    5                         CASE (%JM_FOLLOW_ABORT);

      932     6196    5                           RETURN;

   6196  4 002700   000001 702211                    TSX2  ! 1,X1

      933     6197
      934     6198    5                         CASE (%JM_FOLLOW_STEPCC);

      935     6199    5                           CALL CHECK_STEPCC;

   6199  4 002701   002775 701000 4                  TSX1    CHECK_STEPCC
         4 002702   000000 011000                    NOP     0

      936     6200    5                           IF COND = %TRUE

   6200  4 002703   200013 234100                    SZN     COND,,AUTO
         4 002704   002707 605000 4                  TPL     s:6204

      937     6201    5                           THEN
      938     6202    5                            RETURN;

   6202  4 002705   200034 221300                    LDX1  ! L,,AUTO
         4 002706   000001 702211                    TSX2  ! 1,X1

      939     6203    5                           ELSE
      940     6204    5                            ALTRETURN;

   6204  4 002707   200034 221300                    LDX1  ! L,,AUTO
         4 002710   000000 702211                    TSX2  ! 0,X1

      941     6205
      942     6206    5                         CASE (ELSE);

      943     6207    5                           ALTRETURN;

   6207  4 002711   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:137  

      944     6208
      945     6209    5                       END;

      946     6210
      947     6211    4                   CASE(%BITBIN(RS_ERR#));

      948     6212        /* The last one ERRORed, so let this job through if:               */
      949     6213        /*   1) it specified FOLLOW(name(ERROR)) or                        */
      950     6214        /*   2) it specified FOLLOW(name(STEPCC=oldjob_info.stepcc#)).     */
      951     6215    5                       DO CASE ( IF$->JM$IF.JDID.FOLLOW_TYPE(I) );

   6215  4 002712   200026 470500                    LDP0    IF$,,AUTO
         4 002713   200005 720100                    LXL0    I,,AUTO
         4 002714   000027 236110                    LDQ     23,X0,PR0
         4 002715   000036 772000                    QRL     30
         4 002716   000007 376007                    ANQ     7,DL
         4 002717   000003 116007                    CMPQ    3,DL
         4 002720   002722 602006 4                  TNC     s:6215+8,QL
         4 002721   002736 710000 4                  TRA     s:6229
         4 002722   002726 710000 4                  TRA     s:6221
         4 002723   002736 710000 4                  TRA     s:6229
         4 002724   002725 710000 4                  TRA     s:6218

      952     6216
      953     6217    5                         CASE (%JM_FOLLOW_ERROR);

      954     6218    5                           RETURN;

   6218  4 002725   000001 702211                    TSX2  ! 1,X1

      955     6219
      956     6220    5                         CASE (%JM_FOLLOW_STEPCC);

      957     6221    5                           CALL CHECK_STEPCC;

   6221  4 002726   002775 701000 4                  TSX1    CHECK_STEPCC
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:138  
         4 002727   000000 011000                    NOP     0

      958     6222    5                           IF COND = %TRUE

   6222  4 002730   200013 234100                    SZN     COND,,AUTO
         4 002731   002734 605000 4                  TPL     s:6226

      959     6223    5                           THEN
      960     6224    5                            RETURN;

   6224  4 002732   200034 221300                    LDX1  ! L,,AUTO
         4 002733   000001 702211                    TSX2  ! 1,X1

      961     6225    5                           ELSE
      962     6226    5                            ALTRETURN;

   6226  4 002734   200034 221300                    LDX1  ! L,,AUTO
         4 002735   000000 702211                    TSX2  ! 0,X1

      963     6227
      964     6228    5                         CASE (ELSE);

      965     6229    5                           ALTRETURN;

   6229  4 002736   000000 702211                    TSX2  ! 0,X1

      966     6230
      967     6231    5                       END;

      968     6232
      969     6233    4                   CASE(%BITBIN(RS_EXIT#));

      970     6234        /* The last one OKed, so let this job through if:                  */
      971     6235        /*   1) it specified FOLLOW(name(OK)) or                           */
      972     6236        /*   2) it specified FOLLOW(name(STEPCC=oldjob_info.stepcc#)).     */
      973     6237    5                       DO CASE ( IF$->JM$IF.JDID.FOLLOW_TYPE(I) );

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:139  
   6237  4 002737   200026 470500                    LDP0    IF$,,AUTO
         4 002740   200005 720100                    LXL0    I,,AUTO
         4 002741   000027 236110                    LDQ     23,X0,PR0
         4 002742   000036 772000                    QRL     30
         4 002743   000007 376007                    ANQ     7,DL
         4 002744   000002 116007                    CMPQ    2,DL
         4 002745   002747 602006 4                  TNC     s:6237+8,QL
         4 002746   002762 710000 4                  TRA     s:6251
         4 002747   002752 710000 4                  TRA     s:6243
         4 002750   002751 710000 4                  TRA     s:6240

      974     6238
      975     6239    5                         CASE (%JM_FOLLOW_OK);

      976     6240    5                           RETURN;

   6240  4 002751   000001 702211                    TSX2  ! 1,X1

      977     6241
      978     6242    5                         CASE (%JM_FOLLOW_STEPCC);

      979     6243    5                           CALL CHECK_STEPCC;

   6243  4 002752   002775 701000 4                  TSX1    CHECK_STEPCC
         4 002753   000000 011000                    NOP     0

      980     6244    5                           IF COND = %TRUE

   6244  4 002754   200013 234100                    SZN     COND,,AUTO
         4 002755   002760 605000 4                  TPL     s:6248

      981     6245    5                           THEN
      982     6246    5                            RETURN;

   6246  4 002756   200034 221300                    LDX1  ! L,,AUTO
         4 002757   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:140  
      983     6247    5                           ELSE
      984     6248    5                            ALTRETURN;

   6248  4 002760   200034 221300                    LDX1  ! L,,AUTO
         4 002761   000000 702211                    TSX2  ! 0,X1

      985     6249
      986     6250    5                         CASE (ELSE);

      987     6251    5                           ALTRETURN;

   6251  4 002762   000000 702211                    TSX2  ! 0,X1

      988     6252
      989     6253    5                       END;

      990     6254
      991     6255    4                   CASE(ELSE);

      992     6256    4   UNKNOWN_FINAL_STATUS:
      993     6257    4                     IF WE_HAVENT_DONE_A_S$JM243_YET

   6257  4 002763   000000 234000 3     UNKNOWN_FIN* SZN     WE_HAVENT_DONE_A_S$JM243_YET
         4 002764   002772 605000 4                  TPL     s:6276

      994     6258    4                     THEN
      995     6259    5                       DO;

      996     6260    5                       CALL FOI$SNAP (S$JM243,F_JM,M_R);

   6260  4 002765   000030 630400 5                  EPPR0   24
         4 002766   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 002767   000000 701000 xent               TSX1    FOI$SNAP
         4 002770   000000 011000                    NOP     0

      997     6261        /*S*    SCREECH_CODE:   JMR-S$JM243
      998     6262                TYPE:    SNAP
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:141  
      999     6263                MESSAGE: The :JOBSTATS file contains an unknown final status.
     1000     6264                REMARKS: If and when a processor adds a new final status
     1001     6265                         code to XSJ_SUBS_C, that status should be taken
     1002     6266                         account of by all processors which check for that
     1003     6267                         kind of stuff.  I guess this is as good a place as
     1004     6268                         any to make sure of that.  We'll assume it's a
     1005     6269                         really awful status (like a new PRESCAN error)
     1006     6270                         and delete this job.  Also, in case it's a real
     1007     6271                         popular status, we'll only SNAP once per boot.
     1008     6272                                                                           */
     1009     6273    5                       WE_HAVENT_DONE_A_S$JM243_YET = %FALSE;

   6273  4 002771   000000 450000 3                  STZ     WE_HAVENT_DONE_A_S$JM243_YET

     1010     6274    5                       END;

     1011     6275
     1012     6276    4                     ALTRETURN;

   6276  4 002772   200034 221300                    LDX1  ! L,,AUTO
         4 002773   000000 702211                    TSX2  ! 0,X1

     1013     6277
     1014     6278    4                 END;

     1015     6279
     1016     6280    3             CASE(ELSE);

     1017     6281    3               GOTO UNKNOWN_FINAL_STATUS;

   6281  4 002774   002763 710000 4                  TRA     UNKNOWN_FINAL_STATUS

     1018     6282
     1019     6283    3           END;

     1020     6284
     1021     6285    2   CHECK_STEPCC: PROC;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:142  

   6285  4 002775   200036 741300       CHECK_STEPCC STX1  ! SW,,AUTO

     1022     6286
     1023     6287    3         COND = %FALSE;

   6287  4 002776   200013 450100                    STZ     COND,,AUTO

     1024     6288    3         TESTCC = IF$->JM$IF.JDSTEPCC(I);

   6288  4 002777   200026 470500                    LDP0    IF$,,AUTO
         4 003000   200005 235100                    LDA     I,,AUTO
         4 003001   000100 101505                    MRL     fill='000'O
         4 003002   000037 000001                    ADSC9   31,A,PR0                 cn=0,n=1
         4 003003   200024 000004                    ADSC9   TESTCC,,AUTO             cn=0,n=4

     1025     6289    4           DO CASE (IF$->JM$IF.JDID.RELATION(I));

   6289  4 003004   000027 236105                    LDQ     23,AL,PR0
         4 003005   000041 772000                    QRL     33
         4 003006   000006 116007                    CMPQ    6,DL
         4 003007   003011 602006 4                  TNC     s:6289+5,QL
         4 003010   003062 710000 4                  TRA     s:6304
         4 003011   003017 710000 4                  TRA     s:6291
         4 003012   003025 710000 4                  TRA     s:6293
         4 003013   003033 710000 4                  TRA     s:6295
         4 003014   003041 710000 4                  TRA     s:6297
         4 003015   003047 710000 4                  TRA     s:6299
         4 003016   003055 710000 4                  TRA     s:6301

     1026     6290    4             CASE(JM_LT);

     1027     6291    4               IF STEPCC < TESTCC THEN COND = %TRUE;

   6291  4 003017   200021 236100                    LDQ     STEPCC,,AUTO
         4 003020   200024 116100                    CMPQ    TESTCC,,AUTO
         4 003021   003062 603000 4                  TRC     s:6304
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:143  

   6291  4 003022   400000 236003                    LDQ     -131072,DU
         4 003023   200013 756100                    STQ     COND,,AUTO
         4 003024   003062 710000 4                  TRA     s:6304

     1028     6292    4             CASE(JM_LE);

     1029     6293    4               IF STEPCC <= TESTCC THEN COND = %TRUE;

   6293  4 003025   200024 236100                    LDQ     TESTCC,,AUTO
         4 003026   200021 116100                    CMPQ    STEPCC,,AUTO
         4 003027   003062 602000 4                  TNC     s:6304

   6293  4 003030   400000 236003                    LDQ     -131072,DU
         4 003031   200013 756100                    STQ     COND,,AUTO
         4 003032   003062 710000 4                  TRA     s:6304

     1030     6294    4             CASE(JM_EQ);

     1031     6295    4               IF STEPCC = TESTCC THEN COND = %TRUE;

   6295  4 003033   200021 236100                    LDQ     STEPCC,,AUTO
         4 003034   200024 116100                    CMPQ    TESTCC,,AUTO
         4 003035   003062 601000 4                  TNZ     s:6304

   6295  4 003036   400000 236003                    LDQ     -131072,DU
         4 003037   200013 756100                    STQ     COND,,AUTO
         4 003040   003062 710000 4                  TRA     s:6304

     1032     6296    4             CASE(JM_NE);

     1033     6297    4               IF STEPCC ~= TESTCC THEN COND = %TRUE;

   6297  4 003041   200021 236100                    LDQ     STEPCC,,AUTO
         4 003042   200024 116100                    CMPQ    TESTCC,,AUTO
         4 003043   003062 600000 4                  TZE     s:6304

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:144  
   6297  4 003044   400000 236003                    LDQ     -131072,DU
         4 003045   200013 756100                    STQ     COND,,AUTO
         4 003046   003062 710000 4                  TRA     s:6304

     1034     6298    4             CASE(JM_GE);

     1035     6299    4               IF STEPCC >= TESTCC THEN COND = %TRUE;

   6299  4 003047   200021 236100                    LDQ     STEPCC,,AUTO
         4 003050   200024 116100                    CMPQ    TESTCC,,AUTO
         4 003051   003062 602000 4                  TNC     s:6304

   6299  4 003052   400000 236003                    LDQ     -131072,DU
         4 003053   200013 756100                    STQ     COND,,AUTO
         4 003054   003062 710000 4                  TRA     s:6304

     1036     6300    4             CASE(JM_GT);

     1037     6301    4               IF STEPCC > TESTCC THEN COND = %TRUE;

   6301  4 003055   200024 236100                    LDQ     TESTCC,,AUTO
         4 003056   200021 116100                    CMPQ    STEPCC,,AUTO
         4 003057   003062 603000 4                  TRC     s:6304

   6301  4 003060   400000 236003                    LDQ     -131072,DU
         4 003061   200013 756100                    STQ     COND,,AUTO

     1038     6302    4           END;

     1039     6303
     1040     6304    3         RETURN;

   6304  4 003062   000001 702211                    TSX2  ! 1,X1
     1041     6305
     1042     6306    3   END CHECK_STEPCC;
     1043     6307
     1044     6308    2   END CHECK_FINAL_STATUS;
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:145  
     1045     6309
     1046     6310        /**/
     1047     6311        /**/
     1048     6312    1   END JMR$TRANS;

PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:146  
--  Include file information  --

   JG_EVID_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMR$TRANS.
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:147  

 **** Variables and constants ****

  ****  Section 003  Data  JMR$TRANS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  1132-0-0/d STRC(1080)  r     1 CLOSE_CSCG                16-0-0/d STRC(288)   r     1 CLOSE_STATS
    36-0-0/d UBIN        r     1 CUTS                      70-0-0/d STRC(144)   r     1 FPT_RUE
    40-0-0/d STRC(432)   r     1 FPT_TIME                  74-0-0/d STRC(648)   r     1 GET_PKSETS
    26-0-0/c STRC(243)   r     1 OC_MESSHD                  1-0-0/w STRC(180)   r     1 OLDJOB_INFO
   524-0-0/d STRC(9432)  r     1 OLD_PSNLIST              116-0-0/d STRC(9432)  r     1 PSNLIST
     6-0-0/d STRC(288)   r     1 READ_INFO
     0-0-0/w BIT         r     1 WE_HAVENT_DONE_A_S$JM243_YET
    54-0-0/d STRC(432)   r     1 WRITE_CSCG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CITE$                    33-0-0/w PTR         r     1 @ID
    35-0-0/w PTR         r     1 @IF$                      42-0-0/w PTR         r     1 @IF$
    53-0-0/w PTR         r     1 @LISTPTR$                 33-0-0/w PTR         r     1 @OPERATION
    34-0-0/w PTR         r     1 @QUEUE                    41-0-0/w PTR         r     1 @QUEUE
     4-0-0/w PTR         r     1 @XIF$                     16-0-0/c CHAR(8)     r     1 ACCT
    *0-0-0/w PTR         r     1 CITE$                     13-0-0/b BIT         r     1 COND
    30-0-0/w PTR         r     1 ENDIF$                    23-0-0/w UBIN        r     1 FRS
     5-0-0/w SBIN        r     1 I                         36-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 ID                        26-0-0/w PTR         r     1 IF$
    *0-0-0/w PTR         r     1 IF$                       *0-0-0/w PTR         r     1 IF$
    26-0-0/w UBIN        r     1 IF_PTR                    44-0-0/w STRC(180)   r     1 JM@CITE
    35-0-0/w PTR         r     1 JOB$                      34-0-0/w SBIN        r     1 K
    *0-0-0/w PTR         r     1 KEYIN$                    34-0-0/w SBIN        r     1 L
    *0-0-0/w PTR         r     1 LISTPTR$                  35-0-0/w SBIN        r     1 M
    36-0-0/w UBIN        r     1 NEWQUEUE                  55-0-0/w PTR         r     1 NXT_PTR$
    *0-0-0/w UBIN        r     1 OPERATION                 33-0-0/w PTR         r     1 PKSET$
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:148  
    25-0-0/w PTR         r     1 PPTR$                     11-0-0/w UBIN        r     1 Q
    12-0-0/w UBIN        r     1 QNUM                      *0-0-0/w UBIN        r     1 QUEUE
    *0-0-0/w UBIN        r     1 QUEUE                     22-0-0/w UBIN        r     1 STATUS
    21-0-0/w UBIN        r     1 STEPCC                    36-0-0/w SBIN        r     1 SW
    20-0-0/w UBIN        r     1 SYSID                     43-0-0/w UBIN        r     1 SYSID
    *0-0-0/w UBIN        r     1 SYSID_TO_FIND             24-0-0/w UBIN        r     1 TESTCC
    27-0-0/w PTR         r     1 TIF$                      54-0-0/w PTR         r     1 TMP_PTR$
     7-0-0/w SBIN        r     1 WC                        *0-0-0/w PTR         r     1 XIF$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 JC_MBSZAP
     0-0-0/w PTR         r     1 JMC_BFIS$                  0-0-0/w STRC(1728)  r     1 JMC_CH
     0-0-0/w STRC(72)    r     1 JMC_CHAINS(0:23)
     0-0-0/w PTR         r     1 JMC_NPART$                 0-0-0/w PTR         r     1 JMC_PPTR$
     0-0-0/w STRC(288)   r     1 JM_JOBSCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 APTR$                      0-0-0/w UBIN        r     1 AWORD
     0-0-0/w STRC(288)   r     1 JM$ALLKEYIN                0-0-0/w STRC(180)   r     1 JM$CITE
     0-0-0/w ASTR(1665)  r     1 JM$IF                      0-0-0/w STRC(180)   r     1 JM$KEYIN
     0-0-0/w STRC(684)   r     1 JM$PART                    0-0-0/w STRC(108)   r     1 JM$QSN
     0-0-0/w STRC(180)   r     1 JM$RRKEYIN                 0-0-0N  NULL        r     1 M$MBSCOM
     0-0-0N  NULL        r     1 M$STATUS


   Procedure JMR$TRANS requires 1587 words for executable code.
   Procedure JMR$TRANS requires 50 words of local(AUTO) storage.
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:149  

    No errors detected in file JMR$TRANS.:E05TSI    .
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:150  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:151  
          MINI XREF LISTING

ACCT
      5068**DCL      5955<<ASSIGN
ALL_FOR_NOW
      5728**LABEL    5724--GOTO
APTR$
      4739**DCL      5805>>ASSIGN
AWORD
      4740**DCL      5549<<ASSIGN   5549>>ASSIGN   5803>>DOINDEX
B$JIT.CPFLAGS1.SLEAZE
      4418**DCL      4418--REDEF
B$JIT.ERR.MID
      4325**DCL      4325--REDEF
B$JIT$
      5324**DCL      4319--IMP-PTR
BAD_PRIO
      5927**LABEL    5762--GOTO     5850--GOTO
BIG_PRIO
      5923**LABEL    5763--GOTO     5851--GOTO
CANT_RERUN
      5919**LABEL    5915--GOTO
CANT_RERUN0
      5901**LABEL    5798--GOTO
CANT_RERUN1
      5914**LABEL    5799--CALLALT
CHECK_FINAL_STATUS
      6152**PROC     6023--CALL     6102--CALL
CHECK_FOLLOW_ACCOUNT
      6130**PROC     5992--CALL     6078--CALL
CHECK_JD
      5972**PROC     5963--CALL     5968--CALL
CHECK_STEPCC IN PROCEDURE CHECK_FINAL_STATUS
      6285**PROC     6199--CALL     6221--CALL     6243--CALL
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:152  
CHK_PSNS
      5559**PROC     5736--CALL
CITE$
      4300**DCL         8--PROC     4301--REDEF    4302--REDEF    5677--ENTRY    5760--ENTRY    5788--ENTRY
      5829--ENTRY    5848--ENTRY    5862--ENTRY    5872--ENTRY    5873>>IF       5875>>ASSIGN   5877>>IF
      5953--ENTRY    5955>>ASSIGN   5956>>ASSIGN   5957>>ASSIGN   5958>>ASSIGN   5959>>ASSIGN   6068--ENTRY
      6069>>ASSIGN
CLOSE_CSCG
      5298**DCL      5818<>CALL
CLOSE_CSCG.SN_
      5298**DCL      5298--REDEF
CLOSE_CSCG.UTL_
      5299**DCL      5299--REDEF
CLOSE_CSCG.V
      5303**DCL      5298--DCLINIT
CLOSE_CSCG.V.EXPIRE#
      5313**DCL      5313--REDEF
CLOSE_CSCG.V.TYPE#
      5311**DCL      5311--REDEF
CLOSE_CSCG.V.XTNSIZE#
      5308**DCL      5308--REDEF    5310--REDEF
CLOSE_STATS
      5133**DCL      5819<>CALL
COND
      5065**DCL      6200>>IF       6222>>IF       6244>>IF       6287<<ASSIGN   6291<<ASSIGN   6293<<ASSIGN
      6295<<ASSIGN   6297<<ASSIGN   6299<<ASSIGN   6301<<ASSIGN
CUTS
      5156**DCL      5174--DCLINIT  5698>>IF       6004>>IF
DELJOB
      5465**PROC     5645--CALL     5839--CALL     5882--CALL     6044--CALL     6119--CALL
ENDIF$
      5078**DCL      5719<<ASSIGN   5724>>IF
FIND_SYSID
      5392**PROC     5680--CALL     5766--CALL     5792--CALL     5831--CALL     5876--CALL
FIRST_JOB IN PROCEDURE CHECK_JD
      5975**LABEL    6049--GOTO
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:153  
FOI$RBLK IN PROCEDURE DELJOB
      5520**DCL-ENT  5548--CALL
FOI$SNAP
      5361**DCL-ENT  5753--CALL     5886--CALL     6260--CALL
FPT_RUE
      5221**DCL      5526<>CALL     5598<>CALL
FPT_RUE.V
      5221**DCL      5221--DCLINIT
FPT_RUE.V.USER#
      5221**DCL      5525<<ASSIGN   5597<<ASSIGN
FPT_TIME
      5170**DCL      5695<>CALL     6003<>CALL
FPT_TIME.V
      5174**DCL      5170--DCLINIT
FRS
      5072**DCL      5958<<ASSIGN   6099<<ASSIGN   6177>>DOCASE
GET_PKSETS
      5237**DCL      5709<>CALL
GET_PKSETS.V
      5239**DCL      5237--DCLINIT
I
      5059**DCL      5626<<DOINDEX  5628>>ASSIGN   5645<>CALL     5654>>IF       5657<>CALL     5680<>CALL
      5731<<DOINDEX  5732>>ASSIGN   5737<>CALL     5764<<ASSIGN   5774<>CALL     5803<<DOINDEX  5804>>ASSIGN
      5979<<DOINDEX  5980>>IF       5996>>ASSIGN   6020>>IF       6020>>IF       6026>>ASSIGN   6074<<DOINDEX
      6075>>IF       6082>>ASSIGN   6095>>ASSIGN   6105>>ASSIGN   6193>>DOCASE   6215>>DOCASE   6237>>DOCASE
      6288>>ASSIGN   6289>>DOCASE
I IN PROCEDURE FIND_SYSID
      5397**DCL      5399<<DOINDEX  5400>>ASSIGN   5404>>ASSIGN
ID IN PROCEDURE FIND_SYSID
      5393**DCL      5392--PROC     5402>>IF
IF$
      5075**DCL      5076--REDEF    5418>>ASSIGN   5419>>ASSIGN   5420>>ASSIGN   5426>>IF       5427>>IF
      5427>>IF       5430>>ASSIGN   5565>>ASSIGN   5586>>IF       5590>>IF       5591>>ASSIGN   5594>>IF
      5595>>ASSIGN   5595>>ASSIGN   5597>>ASSIGN   5628<<ASSIGN   5629>>DOWHILE  5630>>ASSIGN   5635>>IF
      5639>>IF       5644>>ASSIGN   5645<>CALL     5649>>IF       5652>>ASSIGN   5657<>CALL     5660<>CALL
      5663<<ASSIGN   5696<<ASSIGN   5697>>DOWHILE  5698>>IF       5699>>ASSIGN   5700<>CALL     5701<>CALL
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:154  
      5702<<ASSIGN   5718<<ASSIGN   5721>>ASSIGN   5722<>CALL     5723<>CALL     5724>>IF       5725<<ASSIGN
      5732<<ASSIGN   5733>>DOWHILE  5734>>ASSIGN   5737<>CALL     5738<>CALL     5739<<ASSIGN   5766<>CALL
      5769>>IF       5772>>ASSIGN   5774<>CALL     5775<>CALL     5792<>CALL     5794>>IF       5798>>IF
      5807<<ASSIGN   5808>>DOWHILE  5809>>ASSIGN   5811<<ASSIGN   5831<>CALL     5833>>IF       5836>>ASSIGN
      5839<>CALL     5876<>CALL     5877>>IF       5879>>ASSIGN   5882<>CALL     5975<<ASSIGN   5977>>DOWHILE
      5978>>ASSIGN   5979>>DOINDEX  5980>>IF       5996>>ASSIGN   5997>>ASSIGN   6002>>IF       6004>>IF
      6007<>CALL     6008<>CALL     6020>>IF       6020>>IF       6026>>ASSIGN   6027>>ASSIGN   6027>>ASSIGN
      6028>>IF       6031<>CALL     6032<>CALL     6039>>ASSIGN   6040>>ASSIGN   6041>>ASSIGN   6044<>CALL
      6055<<ASSIGN   6069<<ASSIGN   6072>>IF       6072>>IF       6074>>DOINDEX  6075>>IF       6082>>ASSIGN
      6083>>ASSIGN   6084<>CALL     6085<>CALL     6095>>ASSIGN   6105>>ASSIGN   6106>>ASSIGN   6106>>ASSIGN
      6107>>IF       6111<>CALL     6112<>CALL     6118>>ASSIGN   6119<>CALL     6141>>IF       6141>>IF
      6193>>DOCASE   6215>>DOCASE   6237>>DOCASE   6288>>ASSIGN   6289>>DOCASE
IF$ IN PROCEDURE DELJOB
      5467**DCL      5465--PROC     5525>>ASSIGN   5529<>CALL     5533<>CALL     5536>>ASSIGN   5537>>ASSIGN
      5538>>ASSIGN   5540>>ASSIGN   5542>>IF       5543>>CALL     5544>>IF       5545>>CALL     5546>>CALL
      5548<>CALL     5548>>CALL     5548>>CALL
IF$ IN PROCEDURE FIND_SYSID
      5395**DCL      5392--PROC     5400<<ASSIGN   5401>>DOWHILE  5402>>IF       5407<<ASSIGN   5407>>ASSIGN
IF_PTR
      5076**DCL      5808>>DOWHILE
IGNORE_IT
      5934**LABEL    5935--CALLALT
JC_MBSZAP
      5323**DCL      5817<<ASSIGN
JM$ALLKEYIN.ACCT
      4898**DCL      5638>>IF       5639>>IF
JM$ALLKEYIN.CPRIO
      4882**DCL      5851>>IF
JM$ALLKEYIN.NEWPRIO
      4901**DCL      5649>>IF       5652>>ASSIGN   5656>>ASSIGN   5849>>IF       5851>>IF       5854>>ASSIGN
JM$ALLKEYIN.OLDPRIO
      4903**DCL      5614>>IF       5617>>ASSIGN   5849>>IF
JM$CITE.ACCT
      4980**DCL      4983--REDEF    5877>>IF       5955>>ASSIGN
JM$CITE.JOFF_INFO.FRS
      4993**DCL      5958>>ASSIGN
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:155  
JM$CITE.JOFF_INFO.STATUS
      4986**DCL      5957>>ASSIGN
JM$CITE.SUBCODE
      4974**DCL      5873>>IF       5959>>ASSIGN
JM$CITE.SYSID
      4972**DCL      5875>>ASSIGN   5956>>ASSIGN
JM$IF
      4594**DCL      5548--CALL
JM$IF.ACCT
      4670**DCL      5536>>ASSIGN   5639>>IF       5877>>IF       6141>>IF       6141>>IF
JM$IF.FLG.KRERUN
      4658**DCL      5591<<ASSIGN
JM$IF.FLG.RA
      4656**DCL      6002>>IF
JM$IF.FLG.RR
      4650**DCL      5586>>IF       5798>>IF
JM$IF.JDID.FOLLOW_TYPE
      4686**DCL      5980>>IF       6075>>IF       6193>>DOCASE   6215>>DOCASE   6237>>DOCASE
JM$IF.JDID.RELATION
      4682**DCL      6289>>DOCASE
JM$IF.JDID.SATISFIED
      4698**DCL      5996<<ASSIGN   6020>>IF       6026<<ASSIGN   6082<<ASSIGN   6105<<ASSIGN
JM$IF.JDID.SYSID
      4701**DCL      6020>>IF       6095>>ASSIGN
JM$IF.JDSTEPCC
      4703**DCL      6288>>ASSIGN
JM$IF.JNL
      4724**DCL      4736--IMP-SIZ  5548>>CALL
JM$IF.LNK$
      4598**DCL      5407>>ASSIGN   5630>>ASSIGN   5699>>ASSIGN   5721>>ASSIGN   5734>>ASSIGN   5978>>ASSIGN
      6144>>ASSIGN
JM$IF.MAXPSN
      4662**DCL      5544>>IF
JM$IF.MAXVR
      4665**DCL      5542>>IF
JM$IF.NJD
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:156  
      4634**DCL      5979>>DOINDEX  6072>>IF       6074>>DOINDEX
JM$IF.NXTJ$
      4600**DCL      5809>>ASSIGN
JM$IF.OFFIP
      4626**DCL      5590>>IF
JM$IF.PRIO
      4638**DCL      5594>>IF       5595<<ASSIGN   5595>>ASSIGN   5649>>IF       5652<<ASSIGN   5772<<ASSIGN
JM$IF.RATIM
      4678**DCL      5698>>IF       6004>>IF
JM$IF.SLNK$
      4606**DCL      5546<>CALL     5565>>ASSIGN
JM$IF.STATUS
      4660**DCL      5538>>ASSIGN   5644<<ASSIGN   5836<<ASSIGN   5879<<ASSIGN   6039<<ASSIGN   6118<<ASSIGN
JM$IF.SUBMIT_TIME
      4622**DCL      6141>>IF       6141>>IF
JM$IF.SYSID
      4668**DCL      5402>>IF       5418>>ASSIGN   5419>>ASSIGN   5525>>ASSIGN   5537>>ASSIGN   5540>>ASSIGN
      5597>>ASSIGN   6040>>ASSIGN   6041>>ASSIGN
JM$IF.UNSAT_COUNT
      4615**DCL      5997<<ASSIGN   6027<<ASSIGN   6027>>ASSIGN   6028>>IF       6072>>IF       6083<<ASSIGN
      6106<<ASSIGN   6106>>ASSIGN   6107>>IF
JM$IF.VRLIST$
      4602**DCL      5543<>CALL
JM$IF.WOO
      4674**DCL      5427>>IF       5430>>ASSIGN
JM$IF.WSN
      4676**DCL      5420>>ASSIGN   5427>>IF       5635>>IF       5769>>IF       5794>>IF       5833>>IF
JM$IF.XLNK$
      4604**DCL      5545<>CALL
JM$KEYIN.CADDR
      4763**DCL      5933>>ASSIGN
JM$KEYIN.CPRIO
      4770**DCL      5763>>IF
JM$KEYIN.PRIO
      4778**DCL      5762>>IF       5763>>IF       5764>>ASSIGN   5772>>ASSIGN   5777>>ASSIGN
JM$KEYIN.SYSID
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:157  
      4766**DCL      5765>>ASSIGN   5830>>ASSIGN   5930>>ASSIGN   5931>>ASSIGN
JM$KEYIN.WSN
      4773**DCL      5633>>CALLBLT  5634>>IF       5635>>IF       5768>>CALLBLT  5769>>IF       5769>>IF
      5832>>CALLBLT  5833>>IF       5833>>IF       5932>>ASSIGN
JM$PART.JOB$
      5045**DCL      5807>>ASSIGN
JM$QSN.NXT$
      4940**DCL      5446>>ASSIGN   5574>>ASSIGN
JM$QSN.TXT
      4929**DCL      5568>>IF
JM$RRKEYIN.SELECTION
      4837**DCL      5789>>IF       5814>>IF
JM$RRKEYIN.SYSID
      4822**DCL      5791>>ASSIGN
JM$RRKEYIN.WSN
      4829**DCL      5793>>CALLBLT  5794>>IF       5794>>IF
JM@CITE IN PROCEDURE DELJOB
      5484**DCL      5539--CALL
JM@CITE.ACCT IN PROCEDURE DELJOB
      5501**DCL      5504--REDEF    5536<<ASSIGN
JM@CITE.JOFF_INFO.STATUS IN PROCEDURE DELJOB
      5507**DCL      5538<<ASSIGN
JM@CITE.SYSID IN PROCEDURE DELJOB
      5493**DCL      5537<<ASSIGN
JMC_BFIS$
      1421**DCL      5549>>ASSIGN   5549>>ASSIGN
JMC_CH
      1417**DCL      1418--REDEF
JMC_CH.HDP$
      1417**DCL      5716>>IF       5718>>ASSIGN
JMC_CH.HWR$
      1417**DCL      5693>>IF       5696>>ASSIGN
JMC_CH.TDP$
      1418**DCL      5719>>ASSIGN
JMC_CHAINS.HEAD$
      1419**DCL      5400>>ASSIGN   5628>>ASSIGN   5732>>ASSIGN   5975>>ASSIGN   6139>>ASSIGN
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:158  
JMC_NPART$
      1422**DCL      5803>>DOINDEX
JMC_PPTR$
      1422**DCL      5804>>ASSIGN
JMJ$DELJOB
      5362**DCL-ENT  5541--CALL
JMJ$REWRITE_FIT
      5363**DCL-ENT  5660--CALL     5775--CALL
JMR$CHECK_JD
      5953**ENTRY    5539--CALL
JMS$SCHED
      5364**DCL-ENT  5746--CALL
JMU$ADD2Q
      5365**DCL-ENT  5738--CALL
JMU$MOVE_IF
      5366**DCL-ENT  5657--CALL     5774--CALL
JMU$REL_SLOT
      5367**DCL-ENT  5447--CALL
JMU$SELECTQ
      5368**DCL-ENT  5701--CALL     5723--CALL     6008--CALL     6032--CALL     6085--CALL     6112--CALL
JMU$SETSEG
      5369**DCL-ENT  5806--CALL
JMU$UNLINK_IF
      5370**DCL-ENT  5700--CALL     5722--CALL     5737--CALL     6007--CALL     6031--CALL     6084--CALL
      6111--CALL
JMU$UNLINK_IF IN PROCEDURE DELJOB
      5521**DCL-ENT  5529--CALL
JMU$WRITE_STATS
      5371**DCL-ENT  5533--CALL
JM_JOBSCB
      5338**DCL      5548<>CALL
JOB$ IN PROCEDURE CHECK_FOLLOW_ACCOUNT
      6131**DCL      6139<<ASSIGN   6140>>DOWHILE  6141>>IF       6141>>IF       6144<<ASSIGN   6144>>ASSIGN
JOB_IS_OK
      5739**LABEL    5736--CALLALT
JOB_RUNNING
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:159  
      5906**LABEL    5767--GOTO
K IN PROCEDURE CHK_PSNS
      5562**DCL      5567<<DOINDEX  5568>>IF       5568>>IF
KEYIN$
      4301**DCL      5614>>IF       5617>>ASSIGN   5633>>CALLBLT  5634>>IF       5635>>IF       5638>>IF
      5639>>IF       5649>>IF       5652>>ASSIGN   5656>>ASSIGN   5762>>IF       5763>>IF       5763>>IF
      5764>>ASSIGN   5765>>ASSIGN   5768>>CALLBLT  5769>>IF       5769>>IF       5772>>ASSIGN   5777>>ASSIGN
      5789>>IF       5791>>ASSIGN   5793>>CALLBLT  5794>>IF       5794>>IF       5814>>IF       5830>>ASSIGN
      5832>>CALLBLT  5833>>IF       5833>>IF       5849>>IF       5849>>IF       5851>>IF       5851>>IF
      5854>>ASSIGN   5930>>ASSIGN   5931>>ASSIGN   5932>>ASSIGN   5933>>ASSIGN
L IN PROCEDURE SELECT_ALL
      5610**DCL      5617<<ASSIGN   5618>>ASSIGN   5623<<ASSIGN   5626>>DOINDEX
LISTPTR$ IN PROCEDURE REL_SLOTS
      5441**DCL      5440--PROC     5444>>ASSIGN
M IN PROCEDURE SELECT_ALL
      5611**DCL      5618<<ASSIGN   5624<<ASSIGN   5626>>DOINDEX
M$CLOSE
        24**DCL-ENT  5818--CALL
M$MBS
        31**DCL-ENT  5709--CALL
M$RUE
        90**DCL-ENT  5526--CALL     5598--CALL
M$TIME
        91**DCL-ENT  5695--CALL     6003--CALL
M$WRITE
        25**DCL-ENT  5425--CALL     5431--CALL     5935--CALL
MMBS_ERR
      5753**LABEL    5709--CALLALT
NEWQUEUE IN PROCEDURE SELECT_ALL
      5612**DCL      5656<<ASSIGN   5657<>CALL
NEXT_JOB IN PROCEDURE CHECK_JD
      6055**LABEL    6005--GOTO     6009--GOTO     6033--GOTO
NOTF
      5682**LABEL    5680--CALLALT
NOT_RUN
      6125**LABEL    6096--CALLALT
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:160  
NOT_RUNNING
      5910**LABEL    5797--GOTO
NOT_WANTED IN PROCEDURE SELECT_ALL
      5663**LABEL    5636--GOTO     5639--GOTO
NOT_YOURS
      5898**LABEL    5781--GOTO     5796--GOTO     5842--GOTO
NO_SYSID
      5902**LABEL    5766--CALLALT  5792--CALLALT  5831--CALLALT
NXT_PSN IN PROCEDURE CHK_PSNS
      5574**LABEL    5570--GOTO
NXT_PTR$ IN PROCEDURE REL_SLOTS
      5443**DCL      5446<<ASSIGN   5448>>ASSIGN
OC_MESSHD
      5140**DCL      5424--ASSIGN   5934--ASSIGN
OC_MESSHD.CADDR
      5141**DCL      5422<<ASSIGN   5429<<ASSIGN   5933<<ASSIGN
OC_MESSHD.FLAGS
      5147**DCL      5148--REDEF
OC_MESSHD.ID
      5153**DCL      5419<<ASSIGN   5931<<ASSIGN   6041<<ASSIGN
OC_MESSHD.MSG#
      5142**DCL      5423<<ASSIGN   5898<<ASSIGN   5902<<ASSIGN   5906<<ASSIGN   5910<<ASSIGN   5919<<ASSIGN
      5923<<ASSIGN   5927<<ASSIGN
OC_MESSHD.MSGID
      5143**DCL      5144--REDEF
OC_MESSHD.OK_TYPE
      5154**DCL      5776<<ASSIGN   5837<<ASSIGN   5853<<ASSIGN   5864<<ASSIGN   5880<<ASSIGN   5914<<ASSIGN
      5917<<ASSIGN   6042<<ASSIGN
OC_MESSHD.PRIO
      5155**DCL      5777<<ASSIGN   5854<<ASSIGN
OC_MESSHD.SYSID
      5144**DCL      5418<<ASSIGN   5930<<ASSIGN   6040<<ASSIGN
OC_MESSHD.WSN
      5150**DCL      5420<<ASSIGN   5430<<ASSIGN   5932<<ASSIGN
OLDJOB_INFO
      5097**DCL      5115--DCLINIT  5116--DCLINIT
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:161  
OLDJOB_INFO.FRS#
      5097**DCL      6099>>ASSIGN
OLDJOB_INFO.STATUS#
      5098**DCL      6098>>ASSIGN
OLDJOB_INFO.STEPCC#
      5097**DCL      6100>>ASSIGN
OLD_PSNLIST
      5269**DCL      5712>>IF       5744<<ASSIGN
OPERATION IN PROCEDURE SELECT_ALL
      5609**DCL      5608--PROC     5614>>IF       5641>>IF
PKSET$ IN PROCEDURE CHK_PSNS
      5561**DCL      5565<<ASSIGN   5566>>DOWHILE  5568>>IF       5574<<ASSIGN   5574>>ASSIGN
PPTR$
      5074**DCL      5804<<ASSIGN   5805<<ASSIGN   5805>>ASSIGN   5806<>CALL     5807>>ASSIGN
PSNLIST
      5254**DCL      5238--DCLINIT  5708<<ASSIGN   5712>>IF       5744>>ASSIGN
PSNLIST.NN#
      5254**DCL      5567>>DOINDEX
PSNLIST.RPLIST.PSN#
      5254**DCL      5568>>IF
PSNLIST.RPLIST.USAGE#
      5255**DCL      5568>>IF
Q
      5063**DCL      5766<>CALL     5767>>IF       5773>>IF       5774<>CALL     5792<>CALL     5797>>IF
      5831<>CALL     5839<>CALL     5876<>CALL     5882<>CALL     5962<<ASSIGN   5967<<ASSIGN   5975>>ASSIGN
      6007<>CALL     6031<>CALL     6044<>CALL
QNUM
      5064**DCL      5701<>CALL     5723<>CALL     6008<>CALL     6032<>CALL     6085<>CALL     6112<>CALL
QUEUE IN PROCEDURE DELJOB
      5466**DCL      5465--PROC     5523>>IF       5529<>CALL
QUEUE IN PROCEDURE FIND_SYSID
      5394**DCL      5392--PROC     5404<<ASSIGN
READ_INFO
      5115**DCL      6096<>CALL
READ_INFO.SYSID#
      5118**DCL      6095<<ASSIGN
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:162  
RECYCLE IN PROCEDURE SELECT_ALL
      5626**LABEL    5645--CALLALT
REL_SLOTS
      5440**PROC     5543--CALL     5545--CALL     5546--CALL
REPLY_NONJOB IN PROCEDURE REPLY_STATUS
      5421**ENTRY    5855--CALL     5865--CALL     6043--CALL
REPLY_STATUS
      5417**PROC     5778--CALL     5838--CALL     5881--CALL
REPORT_ERR
      5930**LABEL    5899--GOTO     5903--GOTO     5907--GOTO     5911--GOTO     5920--GOTO     5924--GOTO
RERUN_JOB
      5584**PROC     5799--CALL     5810--CALL
RE_SCHED
      5744**LABEL    5754--GOTO
RR1
      5819**LABEL    5818--CALLALT
RR2
      5817**LABEL    5819--CALLALT
RTN
      5894**LABEL    5876--CALLALT
SELECT_ALL
      5608**PROC     5852--CALL     5863--CALL
STATUS
      5071**DCL      5957<<ASSIGN   6098<<ASSIGN   6154>>DOCASE
STEPCC
      5070**DCL      5959<<ASSIGN   6100<<ASSIGN   6291>>IF       6293>>IF       6295>>IF       6297>>IF
      6299>>IF       6301>>IF
SW IN PROCEDURE CHECK_FOLLOW_ACCOUNT
      6132**DCL      6138<<DOINDEX  6139>>ASSIGN
SYSID
      5069**DCL      5765<<ASSIGN   5766<>CALL     5791<<ASSIGN   5792<>CALL     5830<<ASSIGN   5831<>CALL
      5875<<ASSIGN   5876<>CALL     5956<<ASSIGN   6020>>IF
SYSID IN PROCEDURE DELJOB
      5468**DCL      5540<<ASSIGN   5541<>CALL
SYSID_TO_FIND
      4302**DCL      5680<>CALL
PL6.E3A0      #001=JMR$TRANS File=JMR$TRANS.:E05TSI                              TUE 07/29/97 23:30 Page:163  
TESTCC
      5073**DCL      6288<<ASSIGN   6291>>IF       6293>>IF       6295>>IF       6297>>IF       6299>>IF
      6301>>IF
TIF$
      5077**DCL      5630<<ASSIGN   5663>>ASSIGN   5699<<ASSIGN   5702>>ASSIGN   5721<<ASSIGN   5725>>ASSIGN
      5734<<ASSIGN   5739>>ASSIGN   5809<<ASSIGN   5811>>ASSIGN   5978<<ASSIGN   6055>>ASSIGN
TMP_PTR$ IN PROCEDURE REL_SLOTS
      5442**DCL      5444<<ASSIGN   5445>>DOWHILE  5446>>ASSIGN   5447<>CALL     5448<<ASSIGN
TOO_SOON
      5704**LABEL    5698--GOTO
UNKNOWN_FINAL_STATUS IN PROCEDURE CHECK_FINAL_STATUS
      6257**LABEL    6281--GOTO
WC
      5061**DCL      5633<<CALLBLT  5635>>IF       5635>>IF       5768<<CALLBLT  5769>>IF       5769>>IF
      5793<<CALLBLT  5794>>IF       5794>>IF       5832<<CALLBLT  5833>>IF       5833>>IF
WE_HAVENT_DONE_A_S$JM243_YET
      5085**DCL      6257>>IF       6273<<ASSIGN
WRITE_CSCG
      5196**DCL      5425<>CALL     5431<>CALL     5935<>CALL
WRITE_CSCG.BUF_
      5196**DCL      5424<<ASSIGN   5934<<ASSIGN
WRITE_CSCG.STATION_
      5198**DCL      5198--REDEF
WRITE_CSCG.V
      5199**DCL      5196--DCLINIT
WRITE_CSCG.V.DVBYTE.VFC#
      5205**DCL      5205--REDEF
XIF$
      4303**DCL         8--PROC     5677--ENTRY    5680<>CALL     5682<<ASSIGN
XSJ$CLOSE
      5372**DCL-ENT  5819--CALL
XSJ$READ
      5373**DCL-ENT  6096--CALL
