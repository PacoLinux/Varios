VERSION E05

PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:1    
        1        1        /*M* FRL$AVR - AVR interrupt processing routines                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8
        9        9        FRL$AVR: PROC(PDCTX,INTSTAT,EAINFO) ALTRET;
       10       10
       11       11        /*F*    NAME: FRL$AVR
       12       12                PURPOSE: Handler for special tape interrupts.
       13       13                DESCRIPTION: For unload, rewind or not ready, does nothing.
       14       14                   Otherwise start is assumed and the AVR (label) processing begins
       15       15                   unless AVR processing is already in progress for the drive.
       16       16                   The ALTRET is taken if either a queue packet can not be obtained
       17       17                   or the queue packet can not be sent.  The I/O system will
       18       18                   re-post the special interrupt after a short time.
       19       19         ***/
       20       20
       21       21         /***
       22       22          ***   Include files:
       23       23          ***/
       24       24
       25       25        %INCLUDE NK$LDCT;
       26      127                %NK$LDCT;
       27      173        %INCLUDE NK_LDCT_R;
       28      182        %INCLUDE FT_SUBS;
       29      262        %MACRO FT$DDTBT(BASED=BASED);
       30      263        %INCLUDE FT$DDT;
       31      324        %MEND;
       32      325           %FT$DDTBT(BASED="BASED(TEMP$)");
       33      387        %INCLUDE N$REQ;
       34      461                %N$REQ (NAME=N$REQ);
       35      519        %INCLUDE N_FC_C;
       36      556        %INCLUDE CP_6_SUBS;
       37     1096
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:2    
       38     1097         /***
       39     1098          ***   External procedures:
       40     1099          ***/
       41     1100
       42     1101    1   DCL NIQ$GET ENTRY(1) ALTRET;            /* Get queue packet                   */
       43     1102    1   DCL NIQ$REL ENTRY(1) ALTRET;            /* Release queue packet               */
       44     1103    1   DCL NIO$QUE ENTRY(1) ALTRET;            /* Send queue packet                  */
       45     1104    1   DCL FRL$AVREA ENTRY(1) ALTRET;          /* AVR end action processing          */
       46     1105
       47     1106         /***
       48     1107          *** Parameters:
       49     1108          ***/
       50     1109
       51     1110    1   DCL PDCTX UBIN(15) UNAL;
       52     1111    1   DCL INTSTAT BIT(36) UNAL;
       53     1112    1   DCL 1 STATE REDEF INTSTAT,
       54     1113    1         2 * BIT(29) UNAL,
       55     1114    1         2 REWIND BIT(1) UNAL,
       56     1115    1         2 UNLOAD BIT(1) UNAL,
       57     1116    1         2 READY BIT(1) UNAL,
       58     1117    1         2 * BIT(4) UNAL;
       59     1118    1   DCL EAINFO UBIN(36);
       60     1119
       61     1120         /***
       62     1121          ***   Auto data:
       63     1122          ***/
       64     1123
       65     1124    1   DCL LDCTX UBIN WORD AUTO;
       66     1125    1   DCL TEMP$ PTR AUTO;           /* Used as DDT entry and queue packet pointer   */
       67     1126
       68     1127        /********************/
       69     1128
       70     1129    1      LDCTX=PDCTX;                         /* Convert parameter to word          */
       71     1130
       72     1131         /***
       73     1132          ***   Ignore any non-ready state, rewind and unload.
       74     1133          ***/
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:3    
       75     1134
       76     1135    1      IF STATE.UNLOAD OR STATE.REWIND OR NOT STATE.READY THEN RETURN;
       77     1136
       78     1137         /***
       79     1138          *** If an AVR is already in progress for this drive we probably
       80     1139          *** are getting an interrupt for the same "load complete" interrupt
       81     1140          *** on a different channel.  Ignore the interrupt.
       82     1141          ***/
       83     1142
       84     1143    1      TEMP$ = NK$LDCT$(LDCTX)->NK$LDCT.DDT$;
       85     1144    2      DO INHIBIT;           /* Ignore interrupt if AVR is already in progress    */
       86     1145    2         IF FT$DDT.SOLICIT = FT_AVRSOL# THEN RETURN;
       87     1146    2         FT$DDT.SOLICIT = FT_AVRSOL#;      /* AVR now in progress                */
       88     1147    2         END;
       89     1148
       90     1149         /***
       91     1150          *** Get queue packet and request drive status to begin AVR process.
       92     1151          ***/
       93     1152
       94     1153    1      CALL NIQ$GET(TEMP$) ALTRET(HOPELESS); /* Get queue packet for AVR I/O      */
       95     1154    1      TEMP$->N$REQ.DLA.DCTX = LDCTX;
       96     1155    1      TEMP$->N$REQ.FC = %N_RQSTAT;         /* Request status                     */
       97     1156    1      TEMP$->N$REQ.OPFLG.EA = %YES#;
       98     1157    1      TEMP$->N$REQ.EAENTRY = ENTADDR(FRL$AVREA); /* for AVR processing routine   */
       99     1158    1      TEMP$->N$REQ.EAINFO = 0;
      100     1159    1      TEMP$->N$REQ.OPFLG.HOLD = %YES#;
      101     1160    1      CALL NIO$QUE(TEMP$->N$REQ) ALTRET(FREEQPACK);
      102     1161    1      RETURN;
      103     1162
      104     1163    1   FREEQPACK: ;
      105     1164    1      CALL NIQ$REL(TEMP$);                 /* Free the queue packet              */
      106     1165
      107     1166    1   HOPELESS: ;
      108     1167    1      ALTRETURN;                      /* Let I/O system re-post the interrupt    */
      109     1168
      110     1169    1   END FRL$AVR;
      111     1170        /*********************************************************************/
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:4    
      112     1171        %EOD;

PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:5    
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   FT$DDT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
      No diagnostics issued in procedure FRL$AVR.

   Procedure FRL$AVR requires 71 words for executable code.
   Procedure FRL$AVR requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:6    

 Object Unit name= FRL$AVR                                    File name= FRL$AVR.:E05TOU
 UTS= JUL 29 '97 17:22:58.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    71    107  FRL$AVR
    1  RoData even  none     1      1  FRL$AVR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  FRL$AVR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 NIQ$GET
 yes     yes           Std       1 NIO$QUE
 yes     yes           Std       1 NIQ$REL
 yes     yes           Std       1 FRL$AVREA
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               B_VECTNIL
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:8    


        1        1        /*M* FRL$AVR - AVR interrupt processing routines                   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8
        9        9        FRL$AVR: PROC(PDCTX,INTSTAT,EAINFO) ALTRET;

      9  0 000000   000000 700200 xent  FRL$AVR      TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

       10       10
       11       11        /*F*    NAME: FRL$AVR
       12       12                PURPOSE: Handler for special tape interrupts.
       13       13                DESCRIPTION: For unload, rewind or not ready, does nothing.
       14       14                   Otherwise start is assumed and the AVR (label) processing begins
       15       15                   unless AVR processing is already in progress for the drive.
       16       16                   The ALTRET is taken if either a queue packet can not be obtained
       17       17                   or the queue packet can not be sent.  The I/O system will
       18       18                   re-post the special interrupt after a short time.
       19       19         ***/
       20       20
       21       21         /***
       22       22          ***   Include files:
       23       23          ***/
       24       24
       25       25        %INCLUDE NK$LDCT;
       26      127                %NK$LDCT;
       27      173        %INCLUDE NK_LDCT_R;
       28      182        %INCLUDE FT_SUBS;
       29      262        %MACRO FT$DDTBT(BASED=BASED);
       30      263        %INCLUDE FT$DDT;
       31      324        %MEND;
       32      325           %FT$DDTBT(BASED="BASED(TEMP$)");
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:9    
       33      387        %INCLUDE N$REQ;
       34      461                %N$REQ (NAME=N$REQ);
       35      519        %INCLUDE N_FC_C;
       36      556        %INCLUDE CP_6_SUBS;
       37     1096
       38     1097         /***
       39     1098          ***   External procedures:
       40     1099          ***/
       41     1100
       42     1101    1   DCL NIQ$GET ENTRY(1) ALTRET;            /* Get queue packet                   */
       43     1102    1   DCL NIQ$REL ENTRY(1) ALTRET;            /* Release queue packet               */
       44     1103    1   DCL NIO$QUE ENTRY(1) ALTRET;            /* Send queue packet                  */
       45     1104    1   DCL FRL$AVREA ENTRY(1) ALTRET;          /* AVR end action processing          */
       46     1105
       47     1106         /***
       48     1107          *** Parameters:
       49     1108          ***/
       50     1109
       51     1110    1   DCL PDCTX UBIN(15) UNAL;
       52     1111    1   DCL INTSTAT BIT(36) UNAL;
       53     1112    1   DCL 1 STATE REDEF INTSTAT,
       54     1113    1         2 * BIT(29) UNAL,
       55     1114    1         2 REWIND BIT(1) UNAL,
       56     1115    1         2 UNLOAD BIT(1) UNAL,
       57     1116    1         2 READY BIT(1) UNAL,
       58     1117    1         2 * BIT(4) UNAL;
       59     1118    1   DCL EAINFO UBIN(36);
       60     1119
       61     1120         /***
       62     1121          ***   Auto data:
       63     1122          ***/
       64     1123
       65     1124    1   DCL LDCTX UBIN WORD AUTO;
       66     1125    1   DCL TEMP$ PTR AUTO;           /* Used as DDT entry and queue packet pointer   */
       67     1126
       68     1127        /********************/
       69     1128
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:10   
       70     1129    1      LDCTX=PDCTX;                         /* Convert parameter to word          */

   1129  0 000002   200003 470500                    LDP0    @PDCTX,,AUTO
         0 000003   003100 061500                    CSR     bolr='003'O
         0 000004   000000 000017                    BDSC    0,,PR0                   by=0,bit=0,n=15
         0 000005   200006 000044                    BDSC    LDCTX,,AUTO              by=0,bit=0,n=36

       71     1130
       72     1131         /***
       73     1132          ***   Ignore any non-ready state, rewind and unload.
       74     1133          ***/
       75     1134
       76     1135    1      IF STATE.UNLOAD OR STATE.REWIND OR NOT STATE.READY THEN RETURN;

   1135  0 000006   200004 471500                    LDP1    @INTSTAT,,AUTO
         0 000007   000000 066500                    CMPB    filb='0'B
         0 000010   100000 630001                    BDSC    0,,PR1                   by=3,bit=3,n=1
         0 000011   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         0 000012   000023 601000 0                  TNZ     s:1135+13
         0 000013   000000 066500                    CMPB    filb='0'B
         0 000014   100000 620001                    BDSC    0,,PR1                   by=3,bit=2,n=1
         0 000015   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         0 000016   000023 601000 0                  TNZ     s:1135+13
         0 000017   000000 066500                    CMPB    filb='0'B
         0 000020   100000 640001                    BDSC    0,,PR1                   by=3,bit=4,n=1
         0 000021   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         0 000022   000024 601000 0                  TNZ     s:1143

   1135  0 000023   000000 702200 xent               TSX2  ! X66_ARET

       77     1136
       78     1137         /***
       79     1138          *** If an AVR is already in progress for this drive we probably
       80     1139          *** are getting an interrupt for the same "load complete" interrupt
       81     1140          *** on a different channel.  Ignore the interrupt.
       82     1141          ***/
       83     1142
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:11   
       84     1143    1      TEMP$ = NK$LDCT$(LDCTX)->NK$LDCT.DDT$;

   1143  0 000024   000000 473400 xsym               LDP3    N$DCT$$
         0 000025   200006 720100                    LXL0    LDCTX,,AUTO
         0 000026   300000 474510                    LDP4    0,X0,PR3
         0 000027   400004 236100                    LDQ     4,,PR4
         0 000030   200007 756100                    STQ     TEMP$,,AUTO

       85     1144    2      DO INHIBIT;           /* Ignore interrupt if AVR is already in progress    */

       86     1145    2         IF FT$DDT.SOLICIT = FT_AVRSOL# THEN RETURN;

   1145  0 000031   200007 474700                    LDP4  ! TEMP$,,AUTO
         0 000032   400006 236300                    LDQ   ! 6,,PR4
         0 000033   000007 376207                    ANQ   ! 7,DL
         0 000034   000004 116207                    CMPQ  ! 4,DL
         0 000035   000037 601200 0                  TNZ   ! s:1146

   1145  0 000036   000000 702200 xent               TSX2  ! X66_ARET

       87     1146    2         FT$DDT.SOLICIT = FT_AVRSOL#;      /* AVR now in progress                */

   1146  0 000037   400006 236300                    LDQ   ! 6,,PR4
         0 000040   000000 376200 1                  ANQ   ! 0
         0 000041   000004 276207                    ORQ   ! 4,DL
         0 000042   400006 756300                    STQ   ! 6,,PR4

       88     1147    2         END;

       89     1148
       90     1149         /***
       91     1150          *** Get queue packet and request drive status to begin AVR process.
       92     1151          ***/
       93     1152
       94     1153    1      CALL NIQ$GET(TEMP$) ALTRET(HOPELESS); /* Get queue packet for AVR I/O      */

   1153  0 000043   200007 634500                    EPPR4   TEMP$,,AUTO
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:12   
         0 000044   200010 454500                    STP4    TEMP$+1,,AUTO
         0 000045   200010 630500                    EPPR0   TEMP$+1,,AUTO
         0 000046   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000047   000000 701000 xent               TSX1    NIQ$GET
         0 000050   000106 702000 0                  TSX2    HOPELESS

       95     1154    1      TEMP$->N$REQ.DLA.DCTX = LDCTX;

   1154  0 000051   200007 470500                    LDP0    TEMP$,,AUTO
         0 000052   200006 236100                    LDQ     LDCTX,,AUTO
         0 000053   000025 736000                    QLS     21
         0 000054   000001 676100                    ERQ     1,,PR0
         0 000055   777770 376003                    ANQ     -8,DU
         0 000056   000001 656100                    ERSQ    1,,PR0

       96     1155    1      TEMP$->N$REQ.FC = %N_RQSTAT;         /* Request status                     */

   1155  0 000057   200007 470500                    LDP0    TEMP$,,AUTO
         0 000060   000001 236007                    LDQ     1,DL
         0 000061   000003 552104                    STBQ    3,'04'O,PR0

       97     1156    1      TEMP$->N$REQ.OPFLG.EA = %YES#;

   1156  0 000062   200007 470500                    LDP0    TEMP$,,AUTO
         0 000063   000040 236007                    LDQ     32,DL
         0 000064   000004 256100                    ORSQ    4,,PR0

       98     1157    1      TEMP$->N$REQ.EAENTRY = ENTADDR(FRL$AVREA); /* for AVR processing routine   */

   1157  0 000065   000000 636000 xent               EAQ     FRL$AVREA
         0 000066   200007 470500                    LDP0    TEMP$,,AUTO
         0 000067   000023 756100                    STQ     19,,PR0

       99     1158    1      TEMP$->N$REQ.EAINFO = 0;

   1158  0 000070   000024 450100                    STZ     20,,PR0

PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:13   
      100     1159    1      TEMP$->N$REQ.OPFLG.HOLD = %YES#;

   1159  0 000071   000004 236007                    LDQ     4,DL
         0 000072   000004 256100                    ORSQ    4,,PR0

      101     1160    1      CALL NIO$QUE(TEMP$->N$REQ) ALTRET(FREEQPACK);

   1160  0 000073   200007 630500                    EPPR0   TEMP$,,AUTO
         0 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000075   000000 701000 xent               TSX1    NIO$QUE
         0 000076   000100 702000 0                  TSX2    FREEQPACK

      102     1161    1      RETURN;

   1161  0 000077   000000 702200 xent               TSX2  ! X66_ARET

   1159  0 000100                       FREEQPACK    null
      103     1162
      104     1163    1   FREEQPACK: ;
      105     1164    1      CALL NIQ$REL(TEMP$);                 /* Free the queue packet              */

   1164  0 000100   200007 630500                    EPPR0   TEMP$,,AUTO
         0 000101   200010 450500                    STP0    TEMP$+1,,AUTO
         0 000102   200010 630500                    EPPR0   TEMP$+1,,AUTO
         0 000103   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000104   000000 701000 xent               TSX1    NIQ$REL
         0 000105   000000 011000                    NOP     0

   1159  0 000106                       HOPELESS     null
      106     1165
      107     1166    1   HOPELESS: ;
      108     1167    1      ALTRETURN;                      /* Let I/O system re-post the interrupt    */

   1167  0 000106   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:14   
   1     000   777777 777770                                                    ....
      109     1168
      110     1169    1   END FRL$AVR;
      111     1170        /*********************************************************************/
      112     1171        %EOD;

PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:15   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   FT$DDT.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
      No diagnostics issued in procedure FRL$AVR.
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:16   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @EAINFO                    4-0-0/w PTR         r     1 @INTSTAT
     3-0-0/w PTR         r     1 @PDCTX                    *0-0-0/w UBIN        r     1 EAINFO
    *0-0-0/b BIT         r     1 INTSTAT                    6-0-0/w UBIN        r     1 LDCTX
    *0-0-0/b UBIN(15)    r     1 PDCTX                     *0-0-0/b STRC        r     1 STATE
     7-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 N$DCT$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)   r     1 FT$DDT                     0-0-0/d STRC(1080)  r     1 N$REQ
     0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)


   Procedure FRL$AVR requires 71 words for executable code.
   Procedure FRL$AVR requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:17   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:18   
          MINI XREF LISTING

EAINFO
      1118**DCL         9--PROC
FREEQPACK
      1159**LABEL    1160--CALLALT
FRL$AVREA
      1104**DCL-ENT  1157--ASSIGN
FT$DDT.SOLICIT
       369**DCL      1145>>IF       1146<<ASSIGN
HOPELESS
      1159**LABEL    1153--CALLALT
INTSTAT
      1111**DCL         9--PROC     1112--REDEF
LDCTX
      1124**DCL      1129<<ASSIGN   1143>>ASSIGN   1154>>ASSIGN
N$DCT$$
       180**DCL       180--IMP-PTR  1143>>ASSIGN
N$REQ
       470**DCL      1160<>CALL
N$REQ.BUFADDR
       479**DCL       480--REDEF     480--REDEF
N$REQ.DLA.DCTX
       470**DCL      1154<<ASSIGN
N$REQ.DLA.DRELADDR
       471**DCL       471--REDEF
N$REQ.DVE.EOMCHAR
       508**DCL       509--REDEF
N$REQ.EAENTRY
       501**DCL      1157<<ASSIGN
N$REQ.EAINFO
       502**DCL       502--REDEF    1158<<ASSIGN
N$REQ.EAINFOX
       502**DCL       503--REDEF
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:19   
N$REQ.EVNTINFO
       503**DCL       503--REDEF
N$REQ.FC
       473**DCL      1155<<ASSIGN
N$REQ.OPFLG.EA
       477**DCL      1156<<ASSIGN
N$REQ.OPFLG.HOLD
       478**DCL      1159<<ASSIGN
N$REQ.STATUS
       484**DCL       490--REDEF
NIO$QUE
      1103**DCL-ENT  1160--CALL
NIQ$GET
      1101**DCL-ENT  1153--CALL
NIQ$REL
      1102**DCL-ENT  1164--CALL
NK$LDCT.DDT$
       142**DCL       142--REDEF    1143>>ASSIGN
NK$LDCT.IOQ$
       141**DCL       142--REDEF
NK$LDCT.LDCTX
       143**DCL       143--REDEF
NK$LDCT.LKFLG.ABORTED
       155**DCL       156--REDEF
NK$LDCT.RLCID.LDCTX
       165**DCL       165--REDEF
NK$LDCT.STA$
       161**DCL       162--REDEF
NK$LDCT.SYMB$
       140**DCL       140--REDEF     140--REDEF     141--REDEF
NK$LDCT$
       180**DCL      1143>>ASSIGN
PDCTX
      1110**DCL         9--PROC     1129>>ASSIGN
STATE.READY
      1116**DCL      1135>>IF
PL6.E3A0      #001=FRL$AVR File=FRL$AVR.:E05TSI                                  TUE 07/29/97 17:22 Page:20   
STATE.REWIND
      1114**DCL      1135>>IF
STATE.UNLOAD
      1115**DCL      1135>>IF
TEMP$
      1125**DCL       333--IMP-PTR  1143<<ASSIGN   1145>>IF       1146>>ASSIGN   1153<>CALL     1154>>ASSIGN
      1155>>ASSIGN   1156>>ASSIGN   1157>>ASSIGN   1158>>ASSIGN   1159>>ASSIGN   1160>>CALL     1164<>CALL

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:21   
      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        FRL$AVREA: PROC(N$REQ) ALTRET;
      119        7        /*F*    NAME: FRL$AVREA
      120        8                PURPOSE: Process tape labels to determine tape type and report
      121        9                   AVR to tape resource management.
      122       10                DESCRIPTION: Rewinds tape and determines density.  Determines tape
      123       11                   type (ANS, ANSscratch, unlabeled) and reports tape to tape
      124       12                   resource management.
      125       13         ***/
      126       14
      127       15
      128       16        /***
      129       17         ***   Include files:
      130       18         ***/
      131       19
      132       20        %INCLUDE N$REQ;
      133       94        %N$REQ (NAME=N$REQ,STCLASS="");
      134      152        %INCLUDE N_FC_C;
      135      189        %INCLUDE NI$TABLES;
      136      405                %NI$REQ;
      137      430        %INCLUDE NK$LDCT;
      138      532                %NK$LDCT;
      139      578        %INCLUDE NK_LDCT_R;
      140      587        %INCLUDE FR$RAT;
      141      640           %FR$RAT;
      142      680        %MACRO FT$DDTBD(BASED=BASED);
      143      681        %INCLUDE FT$DDT;
      144      742        %MEND;
      145      743           %FT$DDTBD(BASED="BASED(DDDT$)");
      146      805        %INCLUDE FT$LBLS;
      147     1073        %INCLUDE CP_6_SUBS;
      148     1613        %INCLUDE FR_SUBS;
      149     1681        %INCLUDE FT_SUBS;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:22   
      150     1761        %INCLUDE OC_SUBS_C;
      151     2492        %INCLUDE B$TABLES_C;
      152     2600           %B$SR_NON_DEC;
      153     2604           %B$XL_EBC_ASC;
      154     2608    1   DCL NON_DEC$ PTR;                       /* Will use LS128                     */
      155     2609    1   DCL 1 NON_DEC REDEF NON_DEC$,
      156     2610    1         2 * BIT(24) UNAL,
      157     2611    1         2 SD BIT(12) UNAL;
      158     2612    1   DCL EBC_ASC$ PTR;                       /* Will use LS128                     */
      159     2613    1   DCL 1 EBC_ASC REDEF EBC_ASC$,
      160     2614    1         2 * BIT(24) UNAL,
      161     2615    1         2 SD BIT(12) UNAL;
      162     2616        %INCLUDE B_SEGIDS_C;
      163     3155
      164     3156        /***
      165     3157         ***   External routines:
      166     3158         ***/
      167     3159
      168     3160    1   DCL FRC$AVR ENTRY (3) ALTRET;      /* Report tape load to resource management */
      169     3161    1   DCL OCI$MK_WR ENTRY(7);                 /* Tell operator                      */
      170     3162    1   DCL SSS$SYSTIME ENTRY(1);               /* Get time in UTS format             */
      171     3163    1   DCL UMT$JDATE ENTRY(2) ALTRET;          /* Convert UTS time to Julian date    */
      172     3164
      173     3165        /***
      174     3166         ***   SYMREF data:
      175     3167         ***/
      176     3168
      177     3169    1   DCL OCI_BOOT BIT(1) SYMREF;             /* Flag indicates if CP-6 up          */
      178     3170
      179     3171         /***
      180     3172          *** AVR STATIC and CONSTANT data:
      181     3173          ***/
      182     3174
      183     3175    1   DCL FR_AVRBUF CHAR(80) ALIGNED STATIC;  /* AVR buffer                         */
      184     3176    1   DCL 1 FR_AVRBUFBOOT REDEF FR_AVRBUF,
      185     3177    1         2 STRAP CHAR(16) CALIGNED,
      186     3178    1         2 * CHAR(64) CALIGNED;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:23   
      187     3179    1   DCL FR_AVRBUFUSED BIT(1) ALIGNED STATIC INIT('0'B);
      188     3180    1   DCL FR_AVRDCTX SBIN STATIC;             /* To remember drive being AVRd       */
      189     3181                                                /* Flag indicates if buffer in use    */
      190     3182    1   DCL FR_AVRBUF$ PTR ALIGNED CONSTANT INIT(ADDR(FR_AVRBUF));
      191     3183
      192     3184         /***
      193     3185          ***   AUTO data and structures:
      194     3186          ***/
      195     3187
      196     3188    1   DCL DDDT$ PTR AUTO;                     /* Pointer to device's DDT entry      */
      197     3189    1   DCL LDCTX UBIN WORD AUTO;               /* DCTX of drive being AVRd           */
      198     3190    1   DCL AVR_TYPE UBIN WORD AUTO;            /* Temporary uses                     */
      199     3191    1   DCL 1 MSGS ALIGNED AUTO,                /* For sending operator messages      */
      200     3192    1         2 MG1 UBIN BYTE UNAL,
      201     3193    1         2 MG2 UBIN BYTE UNAL,
      202     3194    1         2 MG3 UBIN BYTE UNAL,
      203     3195    1         2 MG4 UBIN BYTE UNAL,
      204     3196    1         2 MG5 CHAR(6) UNAL,
      205     3197    1         2 MG6 UBIN BYTE UNAL,
      206     3198    1         2 MG7 CHAR(8) UNAL,
      207     3199    1         2 MG8 UBIN BYTE UNAL;
      208     3200    1   DCL TEMP SBIN AUTO;
      209     3201
      210     3202    1   DCL DT1_R CHAR (6) AUTO UNAL;
      211     3203    1   DCL 1 DT1 REDEF DT1_R,             /* TEMP STORAGE FOR CURRENT JULIAN DATE    */
      212     3204    1         2 CEN CHAR (1),                   /* CENTURY INDICATOR                  */
      213     3205    1         2 JD_R CHAR (5),                  /* JULIAN DATE                        */
      214     3206    1         2 JD REDEF JD_R,                  /* JULIAN DATE (YYDDD)                */
      215     3207    1           3 YR CHAR (2),                  /* YEAR                               */
      216     3208    1           3 DY CHAR (3);                  /* DAY                                */
      217     3209    1   DCL DT2_R CHAR (6) AUTO UNAL;
      218     3210    1   DCL 1 DT2 REDEF DT2_R,                  /* TEMP STORAGE FOR JULIAN DATE       */
      219     3211    1         2 CEN CHAR (1),                   /* CENTURY INDICATOR                  */
      220     3212    1         2 JD_R CHAR (5),                  /* JULIAN DATE                        */
      221     3213    1         2 JD REDEF JD_R,                  /* JULIAN DATE (YYDDD)                */
      222     3214    1           3 YR CHAR (2),                  /* YEAR                               */
      223     3215    1           3 DY CHAR (3);                  /* DAY                                */
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:24   
      224     3216
      225     3217         /***
      226     3218          *** CONSTANT data:
      227     3219          ***/
      228     3220
      229     3221    1   DCL PO16B(0:3) BIT(36) CONSTANT INIT(
              3221            /* First 16 bytes of CP-6 PO tape read ASCII */
      230     3222    1      '000007000000'O, '260010000000'O, '150377377376'O, '170000000000'O );
      231     3223    1   DCL PO16 REDEF PO16B CHAR(16);
      232     3224
      233     3225         /***
      234     3226          *** Some CASE SUBs:
      235     3227          ***/
      236     3228
      237     3229        %SUB FRL_CKRING=0/*FRL_CKRING*/;        /* Determine ring status              */
      238     3230        %SUB FRL_REWIND=1/*FRL_REWIND*/;        /* Rewind the tape                    */
      239     3231        %SUB FRL_SD800=2/*FRL_SD800*/;          /* Set density to 800 BPI             */
      240     3232        %SUB FRL_SD1600=5/*FRL_SD1600*/;        /* Set density to 1600 BPI            */
      241     3233        %SUB FRL_SD6250=8/*FRL_SD6250*/;        /* Set density to 6250 BPI            */
      242     3234        %SUB FRL_RDV800=3/*FRL_RDV800*/;        /* Read VOL1 label at 800 BPI         */
      243     3235        %SUB FRL_RDV1600=6/*FRL_RDV1600*/;      /* Read VOL1 label at 1600 BPI        */
      244     3236        %SUB FRL_RDV6250=9/*FRL_RDV6250*/;      /* Read VOL1 label at 6250 BPI        */
      245     3237        %SUB FRL_CKV800=4/*FRL_CKV800*/;   /* Check VOL1 label after 800 BPI read     */
      246     3238        %SUB FRL_CKV1600=7/*FRL_CKV1600*/; /* Check VOL1 label after 1600 BPI read    */
      247     3239        %SUB FRL_CKV6250=10/*FRL_CKV6250*/; /* Check VOL1 label after 6250 BPI read   */
      248     3240        %SUB FRL_CKHDR1=14/*FRL_CKHDR1*/;       /* Check HDR1 label after read        */
      249     3241
      250     3242        /* Extra SUB */
      251     3243        %SUB FRL_CKLOAD=16/*FRL_CKLOAD*/;  /* Check to see if tape could be loaded    */
      252     3244
      253     3245         /***
      254     3246          *** Some tape type SUBs:
      255     3247          ***/
      256     3248
      257     3249        %SUB FRL_UNKNOWN=0/*FRL_UNKNOWN*/;      /* Unknown                            */
      258     3250        %SUB FRL_BLANK=1/*FRL_BLANK*/;          /* Blank tape                         */
      259     3251        %SUB FRL_GARBLED=2/*FRL_GARBLED*/;      /* Can't determine                    */
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:25   
      260     3252        %SUB FRL_ANSTAP=3/*FRL_ANSTAP*/;        /* ANSscratch tape                    */
      261     3253        %SUB FRL_EXPANS=4/*FRL_EXPANS*/;        /* Expired ANS tape                   */
      262     3254        %SUB FRL_UXPANS=5/*FRL_UXPANS*/;        /* Unexpired ANS tape                 */
      263     3255        %SUB FRL_CP6PO=6/*FRL_CP6PO#*/;         /* CP-6 PO tape                       */
      264     3256
      265     3257        /********************/
      266     3258        /* Set up xlate stuff to go thru mon wsq (this runs at interuput) */
      267     3259    1      EBC_ASC$ = B$XL_EBC_ASC$;
      268     3260    1      EBC_ASC.SD = %XLATNORMALSID;
      269     3261    1      NON_DEC$ = B$SR_NON_DEC$;
      270     3262    1      NON_DEC.SD = %XLATNORMALSID;
      271     3263
      272     3264         /***
      273     3265          *** Check for unexpected errors.
      274     3266          ***/
      275     3267
      276     3268    1      N$REQ.OPFLG.REQ = %YES#;             /* Assume requeue                     */
      277     3269    1      LDCTX = N$REQ.DLA.DCTX;
      278     3270    1      DDDT$ = NK$LDCT$(LDCTX)->NK$LDCT.DDT$; /* Get DDT entry pointer            */
      279     3271    1      IF N$REQ.TYC.OPER THEN GOTO TAPE_ERR;
      280     3272    1      IF N$REQ.TYC.IOERR
      281     3273    2       THEN DO;
      282     3274    3         DO CASE( N$REQ.EAINFO );
      283     3275    3          CASE( FRL_CKV800, FRL_CKV1600, FRL_CKV6250 );
      284     3276    4            DO;                  /* Expected error reading VOL1 at wrong density */
      285     3277    4               END;
      286     3278    3          CASE( FRL_RDV800, FRL_RDV1600, FRL_RDV6250 );
      287     3279    4            DO;   /* Expected error trying to set density drive doesn't have     */
      288     3280    4               N$REQ.EAINFO = N$REQ.EAINFO + 1; /* Make like VOL1 read error     */
      289     3281    4               END;
      290     3282    3          CASE( FRL_CKLOAD );
      291     3283    4            DO;             /* Expected error - FIPS drives don't support LDTAPE */
      292     3284    4               CALL OCI$MK_WR(M_TAPE,CANTLOAD_MSG#,0,0,0,LDCTX);
      293     3285    4               END;
      294     3286    3          CASE( ELSE );
      295     3287    3            GOTO TAPE_ERR;
      296     3288    3          END;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:26   
      297     3289    2         END;
      298     3290
      299     3291         /***
      300     3292          *** EAINFO indicates which operation to perform next.  Note that the
      301     3293          *** EAINFO values, though SUBstituted, have exact relationships to
      302     3294          *** one another.
      303     3295          ***
      304     3296          *** FRL_LOADTAPE - special EAINFO from operator LOAD keyin initiated
      305     3297          ***    request status
      306     3298          *** FRL_CKLOAD - end action from LOADTAPE command to report error to
      307     3299          ***    operator if tape drive does not support load command
      308     3300          *** FRL_CKRING - ring existence to be determined from status; if
      309     3301          ***    ring in, drive is to be protected and tape rewound next; if
      310     3302          ***    no ring in, tape is to be rewound and density set for first
      311     3303          ***    label read
      312     3304          *** FRL_REWIND - rewind tape; first label read next
      313     3305          *** FRL_SDxxx - density is to be set to xxx BPI; read first label
      314     3306          ***    next
      315     3307          *** FRL_RDVxxx - read first label at xxx BPI; check if VOL1 next
      316     3308          *** FRL_CKVxxx - check first label read at xxx BPI; if VOL1 next
      317     3309          ***    read next label and check if HDR1; if I/O error rewind tape
      318     3310          ***    and next set next density; if not VOL1 assume unlabelled tape
      319     3311          *** FRL_CKHDR1 - check next label; if HDR1 determine expiration; if
      320     3312          ***    file mark or blank tape assume ANSSCRATCH volume
      321     3313          ***/
      322     3314
      323     3315    2      DO CASE (N$REQ.EAINFO);
      324     3316    2       CASE(FRL_LOADTAPE#);           /* Special entry from LOAD keyin RQSTAT    */
      325     3317    2         IF N$REQ.STATUS.MAJOR = 2 AND N$REQ.STATUS.MINOR = '04'O
      326     3318    3          THEN DO;               /* Standby...issue load if not already AVRing   */
      327     3319    3            N$REQ.FC = %N_LDTAPE;          /* End action from LOAD keyin RQSTAT  */
      328     3320    3            N$REQ.EAINFO = FRL_CKLOAD;     /* Ensure that drive can perform LOAD */
      329     3321    3            RETURN;
      330     3322    3            END;
      331     3323    2         IF FT$DDT.SOLICIT = FT_AVRSOL#
      332     3324    3          THEN DO;                    /* Since already AVRing...forget this one  */
      333     3325    3            N$REQ.OPFLG.REQ = %NO#;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:27   
      334     3326    3            N$REQ.OPFLG.HOLD = %NO#;
      335     3327    3            RETURN;
      336     3328    3            END;
      337     3329    2         N$REQ.EAINFO = FRL_CKRING;        /* In case of re-post                 */
      338     3330    2         GOTO HAVTAPNSTATS;
      339     3331
      340     3332    2       CASE(FRL_CKLOAD);                   /* End action from LOADTAPE           */
      341     3333    2         N$REQ.OPFLG.REQ = %NO#;           /* Don't queue this request for IO    */
      342     3334    2         N$REQ.OPFLG.HOLD = %NO#;          /* Get rid of this packet             */
      343     3335    2         RETURN;
      344     3336
      345     3337
      346     3338    2       CASE(FRL_CKRING); /*************/   /* Protect tape if ring in            */
      347     3339    2   HAVTAPNSTATS: ;
      348     3340    3         DO INHIBIT;
      349     3341    3            IF NOT FR_AVRBUFUSED
      350     3342    4             THEN DO;                      /* The AVR buffer is free             */
      351     3343    4               FR_AVRBUFUSED = %YES#;      /* We've got it now                   */
      352     3344    4               FR_AVRDCTX = LDCTX;         /* Remember drive                     */
      353     3345    4               AVR_TYPE = 0;               /* No need to wait to AVR             */
      354     3346    4               END;
      355     3347    3             ELSE AVR_TYPE = 1;            /* Need to wait                       */
      356     3348    3            END;
      357     3349    2         IF AVR_TYPE ~= 0
      358     3350    3          THEN DO;                         /* Wait by reposting interrupt        */
      359     3351    3            N$REQ.OPFLG.REQ = %NO#;
      360     3352    3            ALTRETURN;
      361     3353    3            END;
      362     3354    2         IF (N$REQ.STATUS.MAJOR ~= 0) OR NOT (N$REQ.STATUS.MINOR & '02'O)
      363     3355    3          THEN DO;
      364     3356    3            GOTO BADSTAT;
      365     3357    3            END;
      366     3358    2         IF (N$REQ.STATUS.MINOR & '01'O)
      367     3359    3          THEN DO;               /* Ring not in--tape is protected--rewind tape  */
      368     3360    3            FT$DDT.RINGIN = %NO#;
      369     3361    3            N$REQ.EAINFO = FRL_SD800;
      370     3362    3            N$REQ.FC = %N_REWIND;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:28   
      371     3363    3            END;
      372     3364    3          ELSE DO;                         /* Ring in--protect tape              */
      373     3365    3            FT$DDT.RINGIN = %YES#;
      374     3366    3            N$REQ.EAINFO = FRL_REWIND;
      375     3367    3            N$REQ.FC = %N_PROTECT;
      376     3368    3            END;
      377     3369
      378     3370         /***
      379     3371          *** Reset the DDT entry.  It must be reset item-by-item to avoid
      380     3372          *** changing FT$DDT.SOLICIT during this critical period.  Also,
      381     3373          *** FT$DDT.RINGIN is already initialized.
      382     3374          ***/
      383     3375
      384     3376    2         FT$DDT.ACCT = ' ';
      385     3377    2         FT$DDT.SN = ' ';
      386     3378    2         FT$DDT.EXPIRE = ' ';
      387     3379    2         FT$DDT.POSLOST = %YES#;           /* Previous positioning (if any) lost */
      388     3380    2         FT$DDT.FUNNYPOS = %NO#;
      389     3381    2         FT$DDT.FSN = 0;
      390     3382    2         FT$DDT.FRSTFSECT = 0;
      391     3383    2         FT$DDT.FRSTFSN = 0;
      392     3384    2         FT$DDT.DENSITY = %D_UNKNOWN#;
      393     3385    2         FT$DDT.FMCNT = 0;
      394     3386    2         FT$DDT.POS = 0;
      395     3387    2         FT$DDT.ANST = '0'B;
      396     3388    2         FT$DDT.SCRTCH = '0'B;
      397     3389    2         FT$DDT.EBCDIC = '0'B;
      398     3390    2         FT$DDT.WRITE = '0'B;
      399     3391    2         FT$DDT.NOWANS = '0'B;
      400     3392    2         FT$DDT.EXPIRED = '0'B;
      401     3393    2         FT$DDT.FMNEEDED = '0'B;
      402     3394    2         FT$DDT.VOLACCESS = 0;
      403     3395    2         FT$DDT.NOTEOF = '0'B;
      404     3396
      405     3397    2         N$REQ.OPFLG.BPF = %YES#;
      406     3398    2         N$REQ.BUF$ = FR_AVRBUF$;          /* Set AVR buffer                     */
      407     3399    2         N$REQ.BUFSIZE = 80;               /* Will be reading 80 byte labels     */
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:29   
      408     3400    2         RETURN;
      409     3401
      410     3402    2       CASE(FRL_REWIND); /*************/   /* Rewind tape to ensure at BOT       */
      411     3403    2         N$REQ.EAINFO = FRL_SD800;         /* Then set density                   */
      412     3404    2         N$REQ.FC = %N_REWIND;
      413     3405    2         RETURN;
      414     3406
      415     3407    2       CASE(FRL_SD800,FRL_SD1600,FRL_SD6250); /**********/
      416     3408                                                /* Set density for read attempt       */
      417     3409    3         DO CASE(N$REQ.EAINFO);
      418     3410    3          CASE(FRL_SD800);
      419     3411    3            N$REQ.FC = %N_SD800;
      420     3412    3            FT$DDT.DENSITY = %D800#;
      421     3413    3          CASE(FRL_SD1600);
      422     3414    3            N$REQ.FC = %N_SD1600;
      423     3415    3            FT$DDT.DENSITY = %D1600#;
      424     3416    3          CASE(FRL_SD6250);
      425     3417    3            N$REQ.FC = %N_SD6250;
      426     3418    3            FT$DDT.DENSITY = %D6250#;
      427     3419    3          END;
      428     3420    2         N$REQ.EAINFO = N$REQ.EAINFO + 1;  /* Next try to read VOL1              */
      429     3421    2         RETURN;
      430     3422
      431     3423    2       CASE(FRL_RDV800,FRL_RDV1600,FRL_RDV6250); /**********/
      432     3424                                      /* Read first tape record expecting VOL1 label  */
      433     3425    2         IF NOT N$REQ.TYC.IOERR
      434     3426    3          THEN DO;
      435     3427    3            N$REQ.EAINFO = N$REQ.EAINFO + 1; /* Next check read results          */
      436     3428    3            N$REQ.FC = %N_RDASC;
      437     3429    3            N$REQ.BUFSIZE = 80;
      438     3430    3            RETURN;
      439     3431    3            END;
      440     3432    2         IF N$REQ.EAINFO ~= FRL_SD6250
      441     3433    3          THEN DO;
      442     3434    4            DO CASE(N$REQ.EAINFO);
      443     3435    4             CASE(FRL_SD800);
      444     3436    4               N$REQ.EAINFO = FRL_SD1600;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:30   
      445     3437    4             CASE(FRL_SD1600);
      446     3438    4               N$REQ.EAINFO = FRL_SD6250;
      447     3439    4             END;
      448     3440    3            RETURN;
      449     3441    3            END;
      450     3442    2          ELSE GOTO TAPE_ERR;              /* Tape not readable                  */
      451     3443
      452     3444    2       CASE(FRL_CKV800,FRL_CKV1600,FRL_CKV6250); /**********/
      453     3445                                                /* Check if VOL1 label                */
      454     3446    2         IF N$REQ.TYC.BLNKTP
      455     3447    3          THEN DO;                         /* Unlabeled blank tape               */
      456     3448    3            FT$DDT.POS = FRL_BLANK;        /* Tell operator that tape is blank   */
      457     3449    4            DO WHILE('0'B);
      458     3450    4   TAPE_ERR:   ;
      459     3451    4               FT$DDT.DENSITY = %D_UNKNOWN#;
      460     3452    4               FT$DDT.POS = FRL_GARBLED;   /* Tell operator that tape is garbled */
      461     3453    4               FT$DDT.ANST = %NO#;         /* May have seen VOL1 already         */
      462     3454    4               FT$DDT.NOWANS = %NO#;
      463     3455    4               FT$DDT.SN = ' ';
      464     3456    4               FT$DDT.EBCDIC = %NO#;
      465     3457    4               END;
      466     3458    3            FT$DDT.DENSITY = 0;            /* Unknown density                    */
      467     3459    3            FT$DDT.SCRTCH = %YES#;
      468     3460    3            END;
      469     3461    3          ELSE DO;                         /* Something read from tape           */
      470     3462    3            IF N$REQ.TYC.IOERR
      471     3463    4             THEN DO;
      472     3464    4               IF N$REQ.EAINFO >= FRL_CKV6250
      473     3465    4                THEN GOTO TAPE_ERR;
      474     3466    5                ELSE DO;         /* Wrong density...rewind tape and try next     */
      475     3467    5                  N$REQ.EAINFO = N$REQ.EAINFO + 1;
      476     3468    5                  N$REQ.FC = %N_REWIND;
      477     3469    5                  RETURN;
      478     3470    5                  END;
      479     3471    4               END;
      480     3472    3            IF N$REQ.ARSIZE >= 80
      481     3473    4             THEN DO;                      /* Got a label-sized record           */
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:31   
      482     3474    4               IF FR_AVRBUF$->FT$ANYLBL.LABEL_TYPE = 'VOL1'
      483     3475    4                THEN FT$DDT.ANST = %YES#;
      484     3476    5                ELSE DO;                   /* Not an ordinary ANS tape           */
      485     3477    5                  IF FR_AVRBUFBOOT.STRAP = PO16
      486     3478    6                   THEN DO;                /* CP-6 PO tape                       */
      487     3479    6                     FT$DDT.POS = FRL_CP6PO;
      488     3480    6                     FT$DDT.ANST = %NO#;
      489     3481    6                     FT$DDT.NOWANS = %YES#;
      490     3482    6                     FT$DDT.SN = 'CP6PO1';
      491     3483    6                     FT$DDT.VOLACCESS = %ALL#; /* Can't determine                */
      492     3484    6                     END;
      493     3485    6                   ELSE DO;                /* Not ASCII VOL1...try EBCDIC        */
      494     3486    6                     CALL XLATE(FR_AVRBUF$->FT$BLBL,B$XL_EBC_ASC,FR_AVRBUF$->FT$BLBL);
      495     3487    6                     IF FR_AVRBUF$->FT$ANYLBL.LABEL_TYPE = 'VOL1'
      496     3488    7                      THEN DO;             /* EBCDIC VOL1                        */
      497     3489    7                        FT$DDT.ANST = %YES#;
      498     3490    7                        FT$DDT.EBCDIC = %YES#;
      499     3491    7                        END;
      500     3492    6                      ELSE FT$DDT.ANST = %NO#; /* Undeterminable                 */
      501     3493    6                     END;
      502     3494    5                  END;
      503     3495    4               IF FT$DDT.ANST
      504     3496    5                THEN DO;
      505     3497    5                  FT$DDT.SN = FR_AVRBUF$->FT$VOL1.SN;
      506     3498    5                  IF FT$DDT.SN ~= ' '
      507     3499    6                   THEN DO;                /* ASCII or EBCDIC ANS tape           */
      508     3500    6                     FT$DDT.ACCT = FR_AVRBUF$->FT$VOL1.ACCOUNT;
      509     3501    6                     N$REQ.EAINFO = FRL_CKHDR1;
      510     3502    6                     FT$DDT.POS = FRL_ANSTAP;
      511     3503    6                     IF FT$DDT.ACCT ~= ' ' AND FR_AVRBUF$->FT$VOL1.SYSTEM = 'CP-6'
      512     3504    7                      THEN DO;
      513     3505    7                        IF FR_AVRBUF$->FT$VOL1.ACCESS = 'I'
      514     3506    7                         THEN FT$DDT.VOLACCESS = %IN#;
              3506                                  /* Determine volume protection */
      515     3507    7                         ELSE IF FR_AVRBUF$->FT$VOL1.ACCESS = 'N'
      516     3508    7                            THEN FT$DDT.VOLACCESS = %NONE#;
      517     3509    7                            ELSE FT$DDT.VOLACCESS = %ALL#;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:32   
      518     3510    7                        END;
      519     3511    6                     RETURN;
      520     3512    6                     END;
      521     3513    5                  END;
      522     3514    4               END;
      523     3515    3            END;
      524     3516    2         FT$DDT.ANST = %NO#;
      525     3517
      526     3518    2       CASE(FRL_CKHDR1); /*************/   /* Second label read done             */
      527     3519    2         IF N$REQ.TYC.EOF OR N$REQ.TYC.BLNKTP OR N$REQ.ARSIZE < 80
      528     3520    2          THEN FT$DDT.SCRTCH = %YES#;
      529     3521    3          ELSE DO;                         /* Next label read from tape          */
      530     3522    3            IF FT$DDT.EBCDIC
      531     3523    3             THEN CALL XLATE(FR_AVRBUF$->FT$BLBL,B$XL_EBC_ASC,FR_AVRBUF$->FT$BLBL);
      532     3524    3            IF FR_AVRBUF$->FT$ANYLBL.LABEL_TYPE ~= 'HDR1'
      533     3525    3             THEN RETURN;                  /* Ignore if not HDR1                 */
      534     3526    4             ELSE DO;
      535     3527    4               FT$DDT.SCRTCH = %NO#;
      536     3528    4               AVR_TYPE = 1;               /* Assume invalid FSEQU_NUM           */
      537     3529    4               CALL SEARCH( TEMP, TEMP, B$SR_NON_DEC, FR_AVRBUF$->FT$LBL1.FSEQU_NUM )
              3529                        ALTRET( ALLDECIMALFSEQU_NUM );
      538     3530    5               DO WHILE( '0'B );
      539     3531    5   ALLDECIMALFSEQU_NUM: ;
      540     3532    5                  CALL CHARBIN( AVR_TYPE, FR_AVRBUF$->FT$LBL1.FSEQU_NUM );
      541     3533    5                  END;
      542     3534    4               FT$DDT.FSN = AVR_TYPE - 1;  /* Before next file                   */
      543     3535    4               FT$DDT.FRSTFSN = FT$DDT.FSN; /* First on volume                   */
      544     3536    4               AVR_TYPE = 1;               /* Assume invalid FSECT               */
      545     3537    4               CALL SEARCH( TEMP, TEMP, B$SR_NON_DEC, FR_AVRBUF$->FT$LBL1.FSECT )
              3537                        ALTRET( ALLDECIMALFSECT );
      546     3538    5               DO WHILE( '0'B );
      547     3539    5   ALLDECIMALFSECT: ;
      548     3540    5                  CALL CHARBIN( AVR_TYPE, FR_AVRBUF$->FT$LBL1.FSECT );
      549     3541    5                  END;
      550     3542    4               FT$DDT.FRSTFSECT = AVR_TYPE; /* First section on volume           */
      551     3543    4               CALL SSS$SYSTIME( AVR_TYPE ); /* Get UTS                          */
      552     3544    4               CALL UMT$JDATE( FT$DDT.EXPIRE, AVR_TYPE ); /* Convert to text     */
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:33   
      553     3545    4               DT1.JD_R = FT$DDT.EXPIRE;   /* Julian Date                        */
      554     3546    4               IF DT1.JD.YR >= '00' AND DT1.JD.YR <= '20'
      555     3547    4                THEN DT1.CEN = '0';        /* ZERO  -> 20XX                      */
      556     3548    4                ELSE DT1.CEN = ' ';        /* SPACE -> 19XX                      */
      557     3549    4               DT2.JD_R = FR_AVRBUF$->FT$LBL1.EXPIRE_DATE; /* Label Expiry date  */
      558     3550    4               DT2.CEN = FR_AVRBUF$->FT$LBL1.CENTURY2; /* Century Field          */
      559     3551    4               IF DT2.JD_R > '99364'       /* No expiry date                     */
      560     3552    4                THEN FT$DDT.POS = FRL_UXPANS; /* Unexpired ANS Tape              */
      561     3553    4                ELSE IF DT1_R >= DT2_R
      562     3554    5                   THEN DO;                /* Expired                            */
      563     3555    5                     FT$DDT.EXPIRED = %YES#;
      564     3556    5                     FT$DDT.POS = FRL_EXPANS;
      565     3557    5                     END;
      566     3558    4                   ELSE FT$DDT.POS = FRL_UXPANS;
      567     3559    4               FT$DDT.EXPIRE = FR_AVRBUF$->FT$LBL1.EXPIRE_DATE;
      568     3560    4               END;
      569     3561    3            END;
      570     3562    2       END;
      571     3563
      572     3564         /***
      573     3565          *** AVR is done.  Report tape to operator.
      574     3566          ***/
      575     3567
      576     3568    1      IF FT$DDT.POS = FRL_EXPANS AND OCI_BOOT
      577     3569    2       THEN DO;                       /* Can't mount expired if CP-6 isn't up    */
      578     3570    2         FT$DDT.POS = FRL_UXPANS;
      579     3571    2         FT$DDT.EXPIRED = %NO#;
      580     3572    2         END;
      581     3573    1      MSGS.MG1 = FT$DDT.POS;               /* Pass tape type                     */
      582     3574    1      IF MSGS.MG1 <= FRL_GARBLED
      583     3575    1       THEN MSGS.MG3 = 1;                  /* Assumed SCRATCH                    */
      584     3576    1       ELSE IF MSGS.MG1 = FRL_CP6PO
      585     3577    1          THEN MSGS.MG3 = 2;
      586     3578    1          ELSE MSGS.MG3 = 0;
      587     3579    1      IF FT$DDT.RINGIN
      588     3580    1       THEN MSGS.MG2 = 1;
      589     3581    1       ELSE MSGS.MG2 = 0;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:34   
      590     3582    1      MSGS.MG4 = FT$DDT.DENSITY;
      591     3583    1      MSGS.MG5 = FT$DDT.SN;
      592     3584    1      MSGS.MG7 = FT$DDT.ACCT;
      593     3585    1      IF FT$DDT.EBCDIC
      594     3586    1       THEN MSGS.MG6 = 1;
      595     3587    1       ELSE MSGS.MG6 = 0;
      596     3588    1      MSGS.MG8 = FT$DDT.VOLACCESS;
      597     3589    1      CALL OCI$MK_WR(M_TAPE,AVRERR_MSG#,8,'001001001001006001010001'O,MSGS,LDCTX);
      598     3590                                                /* Tell operator about tape           */
      599     3591
      600     3592         /***
      601     3593          *** Report tape to tape resource management.
      602     3594          ***/
      603     3595
      604     3596    1      IF FT$DDT.SCRTCH THEN FT$DDT.EXPIRED = %YES#;
      605     3597    1      IF FT$DDT.SN = ' '
      606     3598    1       THEN AVR_TYPE = FRC_SCR#;           /* Unlabeled tape                     */
      607     3599    1       ELSE IF FT$DDT.SCRTCH OR FT$DDT.EXPIRED
      608     3600    1           OR FT$DDT.POS = FRL_CP6PO
      609     3601    1          THEN AVR_TYPE = FRC_LSCR#;       /* Labeled scratch tape               */
      610     3602    1          ELSE AVR_TYPE = FRC_LBL#;        /* Labeled tape                       */
      611     3603    1      CALL FRC$AVR(LDCTX,AVR_TYPE,FT$DDT.SN) ALTRET(ILGLMNT);
      612     3604
      613     3605         /***
      614     3606          *** Rewind tape.
      615     3607          ***/
      616     3608
      617     3609    1      N$REQ.FC = %N_REWIND;                /* Rewind tape                        */
      618     3610    1      FT$DDT.POS = FTP_BOV#;
      619     3611    1      FT$DDT.POSLOST = %NO#;
      620     3612    2      DO WHILE('0'B);
      621     3613    2   ILGLMNT: ;                              /* Illegal AVR...ignore tape          */
      622     3614    2         FT$DDT.POSLOST = %YES#;
      623     3615    2   BADSTAT: ;
      624     3616    2         N$REQ.OPFLG.REQ = %NO#;
      625     3617    2         END;
      626     3618    1      N$REQ.OPFLG.HOLD = %NO#;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:35   
      627     3619    1      N$REQ.OPFLG.EA = %NO#;
      628     3620    1      FT$DDT.SOLICIT = 0;                  /* AVR is done                        */
      629     3621    1      FR_AVRBUFUSED = %NO#;
      630     3622    1      RETURN;
      631     3623
      632     3624    1   END FRL$AVREA;
      633     3625        /*********************************************************************/

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:36   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FT$LBLS.:E05TOU  cannot be made into a system file and is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FRL$AVREA.

   Procedure FRL$AVREA requires 708 words for executable code.
   Procedure FRL$AVREA requires 26 words of local(AUTO) storage.

    No errors detected in file FRL$AVR.:E05TSI    .

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:37   

 Object Unit name= FRL$AVREA                                  File name= FRL$AVR.:E05TOU
 UTS= JUL 29 '97 17:23:04.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    22     26  FRL$AVREA
    1  RoData even  UTS     17     21  FRL$AVREA
    2   Proc  even  none   708   1304  FRL$AVREA
    3  RoData even  none    32     40  FRL$AVREA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  FRL$AVREA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       1 SSS$SYSTIME
         yes           Std       7 OCI$MK_WR
 yes     yes           Std       2 UMT$JDATE
 yes     yes           Std       3 FRC$AVR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                          r    B$SR_NON_DEC$                    r    B$XL_EBC_ASC$
     OCI_BOOT                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:39   


      113        1        /*T***********************************************************/
      114        2        /*T*                                                         */
      115        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      116        4        /*T*                                                         */
      117        5        /*T***********************************************************/
      118        6        FRL$AVREA: PROC(N$REQ) ALTRET;

      6  2 000000   000000 700200 xent  FRL$AVREA    TSX0  ! X66_AUTO_1
         2 000001   000032 000001                    ZERO    26,1

      119        7        /*F*    NAME: FRL$AVREA
      120        8                PURPOSE: Process tape labels to determine tape type and report
      121        9                   AVR to tape resource management.
      122       10                DESCRIPTION: Rewinds tape and determines density.  Determines tape
      123       11                   type (ANS, ANSscratch, unlabeled) and reports tape to tape
      124       12                   resource management.
      125       13         ***/
      126       14
      127       15
      128       16        /***
      129       17         ***   Include files:
      130       18         ***/
      131       19
      132       20        %INCLUDE N$REQ;
      133       94        %N$REQ (NAME=N$REQ,STCLASS="");
      134      152        %INCLUDE N_FC_C;
      135      189        %INCLUDE NI$TABLES;
      136      405                %NI$REQ;
      137      430        %INCLUDE NK$LDCT;
      138      532                %NK$LDCT;
      139      578        %INCLUDE NK_LDCT_R;
      140      587        %INCLUDE FR$RAT;
      141      640           %FR$RAT;
      142      680        %MACRO FT$DDTBD(BASED=BASED);
      143      681        %INCLUDE FT$DDT;
      144      742        %MEND;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:40   
      145      743           %FT$DDTBD(BASED="BASED(DDDT$)");
      146      805        %INCLUDE FT$LBLS;
      147     1073        %INCLUDE CP_6_SUBS;
      148     1613        %INCLUDE FR_SUBS;
      149     1681        %INCLUDE FT_SUBS;
      150     1761        %INCLUDE OC_SUBS_C;
      151     2492        %INCLUDE B$TABLES_C;
      152     2600           %B$SR_NON_DEC;
      153     2604           %B$XL_EBC_ASC;
      154     2608    1   DCL NON_DEC$ PTR;                       /* Will use LS128                     */
      155     2609    1   DCL 1 NON_DEC REDEF NON_DEC$,
      156     2610    1         2 * BIT(24) UNAL,
      157     2611    1         2 SD BIT(12) UNAL;
      158     2612    1   DCL EBC_ASC$ PTR;                       /* Will use LS128                     */
      159     2613    1   DCL 1 EBC_ASC REDEF EBC_ASC$,
      160     2614    1         2 * BIT(24) UNAL,
      161     2615    1         2 SD BIT(12) UNAL;
      162     2616        %INCLUDE B_SEGIDS_C;
      163     3155
      164     3156        /***
      165     3157         ***   External routines:
      166     3158         ***/
      167     3159
      168     3160    1   DCL FRC$AVR ENTRY (3) ALTRET;      /* Report tape load to resource management */
      169     3161    1   DCL OCI$MK_WR ENTRY(7);                 /* Tell operator                      */
      170     3162    1   DCL SSS$SYSTIME ENTRY(1);               /* Get time in UTS format             */
      171     3163    1   DCL UMT$JDATE ENTRY(2) ALTRET;          /* Convert UTS time to Julian date    */
      172     3164
      173     3165        /***
      174     3166         ***   SYMREF data:
      175     3167         ***/
      176     3168
      177     3169    1   DCL OCI_BOOT BIT(1) SYMREF;             /* Flag indicates if CP-6 up          */
      178     3170
      179     3171         /***
      180     3172          *** AVR STATIC and CONSTANT data:
      181     3173          ***/
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:41   
      182     3174
      183     3175    1   DCL FR_AVRBUF CHAR(80) ALIGNED STATIC;  /* AVR buffer                         */
      184     3176    1   DCL 1 FR_AVRBUFBOOT REDEF FR_AVRBUF,
      185     3177    1         2 STRAP CHAR(16) CALIGNED,
      186     3178    1         2 * CHAR(64) CALIGNED;
      187     3179    1   DCL FR_AVRBUFUSED BIT(1) ALIGNED STATIC INIT('0'B);
      188     3180    1   DCL FR_AVRDCTX SBIN STATIC;             /* To remember drive being AVRd       */
      189     3181                                                /* Flag indicates if buffer in use    */
      190     3182    1   DCL FR_AVRBUF$ PTR ALIGNED CONSTANT INIT(ADDR(FR_AVRBUF));
      191     3183
      192     3184         /***
      193     3185          ***   AUTO data and structures:
      194     3186          ***/
      195     3187
      196     3188    1   DCL DDDT$ PTR AUTO;                     /* Pointer to device's DDT entry      */
      197     3189    1   DCL LDCTX UBIN WORD AUTO;               /* DCTX of drive being AVRd           */
      198     3190    1   DCL AVR_TYPE UBIN WORD AUTO;            /* Temporary uses                     */
      199     3191    1   DCL 1 MSGS ALIGNED AUTO,                /* For sending operator messages      */
      200     3192    1         2 MG1 UBIN BYTE UNAL,
      201     3193    1         2 MG2 UBIN BYTE UNAL,
      202     3194    1         2 MG3 UBIN BYTE UNAL,
      203     3195    1         2 MG4 UBIN BYTE UNAL,
      204     3196    1         2 MG5 CHAR(6) UNAL,
      205     3197    1         2 MG6 UBIN BYTE UNAL,
      206     3198    1         2 MG7 CHAR(8) UNAL,
      207     3199    1         2 MG8 UBIN BYTE UNAL;
      208     3200    1   DCL TEMP SBIN AUTO;
      209     3201
      210     3202    1   DCL DT1_R CHAR (6) AUTO UNAL;
      211     3203    1   DCL 1 DT1 REDEF DT1_R,             /* TEMP STORAGE FOR CURRENT JULIAN DATE    */
      212     3204    1         2 CEN CHAR (1),                   /* CENTURY INDICATOR                  */
      213     3205    1         2 JD_R CHAR (5),                  /* JULIAN DATE                        */
      214     3206    1         2 JD REDEF JD_R,                  /* JULIAN DATE (YYDDD)                */
      215     3207    1           3 YR CHAR (2),                  /* YEAR                               */
      216     3208    1           3 DY CHAR (3);                  /* DAY                                */
      217     3209    1   DCL DT2_R CHAR (6) AUTO UNAL;
      218     3210    1   DCL 1 DT2 REDEF DT2_R,                  /* TEMP STORAGE FOR JULIAN DATE       */
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:42   
      219     3211    1         2 CEN CHAR (1),                   /* CENTURY INDICATOR                  */
      220     3212    1         2 JD_R CHAR (5),                  /* JULIAN DATE                        */
      221     3213    1         2 JD REDEF JD_R,                  /* JULIAN DATE (YYDDD)                */
      222     3214    1           3 YR CHAR (2),                  /* YEAR                               */
      223     3215    1           3 DY CHAR (3);                  /* DAY                                */
      224     3216
      225     3217         /***
      226     3218          *** CONSTANT data:
      227     3219          ***/
      228     3220
      229     3221    1   DCL PO16B(0:3) BIT(36) CONSTANT INIT(
              3221            /* First 16 bytes of CP-6 PO tape read ASCII */
      230     3222    1      '000007000000'O, '260010000000'O, '150377377376'O, '170000000000'O );
      231     3223    1   DCL PO16 REDEF PO16B CHAR(16);
      232     3224
      233     3225         /***
      234     3226          *** Some CASE SUBs:
      235     3227          ***/
      236     3228
      237     3229        %SUB FRL_CKRING=0/*FRL_CKRING*/;        /* Determine ring status              */
      238     3230        %SUB FRL_REWIND=1/*FRL_REWIND*/;        /* Rewind the tape                    */
      239     3231        %SUB FRL_SD800=2/*FRL_SD800*/;          /* Set density to 800 BPI             */
      240     3232        %SUB FRL_SD1600=5/*FRL_SD1600*/;        /* Set density to 1600 BPI            */
      241     3233        %SUB FRL_SD6250=8/*FRL_SD6250*/;        /* Set density to 6250 BPI            */
      242     3234        %SUB FRL_RDV800=3/*FRL_RDV800*/;        /* Read VOL1 label at 800 BPI         */
      243     3235        %SUB FRL_RDV1600=6/*FRL_RDV1600*/;      /* Read VOL1 label at 1600 BPI        */
      244     3236        %SUB FRL_RDV6250=9/*FRL_RDV6250*/;      /* Read VOL1 label at 6250 BPI        */
      245     3237        %SUB FRL_CKV800=4/*FRL_CKV800*/;   /* Check VOL1 label after 800 BPI read     */
      246     3238        %SUB FRL_CKV1600=7/*FRL_CKV1600*/; /* Check VOL1 label after 1600 BPI read    */
      247     3239        %SUB FRL_CKV6250=10/*FRL_CKV6250*/; /* Check VOL1 label after 6250 BPI read   */
      248     3240        %SUB FRL_CKHDR1=14/*FRL_CKHDR1*/;       /* Check HDR1 label after read        */
      249     3241
      250     3242        /* Extra SUB */
      251     3243        %SUB FRL_CKLOAD=16/*FRL_CKLOAD*/;  /* Check to see if tape could be loaded    */
      252     3244
      253     3245         /***
      254     3246          *** Some tape type SUBs:
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:43   
      255     3247          ***/
      256     3248
      257     3249        %SUB FRL_UNKNOWN=0/*FRL_UNKNOWN*/;      /* Unknown                            */
      258     3250        %SUB FRL_BLANK=1/*FRL_BLANK*/;          /* Blank tape                         */
      259     3251        %SUB FRL_GARBLED=2/*FRL_GARBLED*/;      /* Can't determine                    */
      260     3252        %SUB FRL_ANSTAP=3/*FRL_ANSTAP*/;        /* ANSscratch tape                    */
      261     3253        %SUB FRL_EXPANS=4/*FRL_EXPANS*/;        /* Expired ANS tape                   */
      262     3254        %SUB FRL_UXPANS=5/*FRL_UXPANS*/;        /* Unexpired ANS tape                 */
      263     3255        %SUB FRL_CP6PO=6/*FRL_CP6PO#*/;         /* CP-6 PO tape                       */
      264     3256
      265     3257        /********************/
      266     3258        /* Set up xlate stuff to go thru mon wsq (this runs at interuput) */
      267     3259    1      EBC_ASC$ = B$XL_EBC_ASC$;

   3259  2 000002   000000 236000 xsym               LDQ     B$XL_EBC_ASC$
         2 000003   200005 756100                    STQ     EBC_ASC$,,AUTO

      268     3260    1      EBC_ASC.SD = %XLATNORMALSID;

   3260  2 000004   006200 236007                    LDQ     3200,DL
         2 000005   200005 752103                    STCQ    EBC_ASC$,'03'O,AUTO

      269     3261    1      NON_DEC$ = B$SR_NON_DEC$;

   3261  2 000006   000000 236000 xsym               LDQ     B$SR_NON_DEC$
         2 000007   200004 756100                    STQ     NON_DEC$,,AUTO

      270     3262    1      NON_DEC.SD = %XLATNORMALSID;

   3262  2 000010   006200 236007                    LDQ     3200,DL
         2 000011   200004 752103                    STCQ    NON_DEC$,'03'O,AUTO

      271     3263
      272     3264         /***
      273     3265          *** Check for unexpected errors.
      274     3266          ***/
      275     3267
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:44   
      276     3268    1      N$REQ.OPFLG.REQ = %YES#;             /* Assume requeue                     */

   3268  2 000012   200003 470500                    LDP0    @N$REQ,,AUTO
         2 000013   000002 236007                    LDQ     2,DL
         2 000014   000004 256100                    ORSQ    4,,PR0

      277     3269    1      LDCTX = N$REQ.DLA.DCTX;

   3269  2 000015   000001 236100                    LDQ     1,,PR0
         2 000016   000025 772000                    QRL     21
         2 000017   200007 756100                    STQ     LDCTX,,AUTO

      278     3270    1      DDDT$ = NK$LDCT$(LDCTX)->NK$LDCT.DDT$; /* Get DDT entry pointer            */

   3270  2 000020   000000 471400 xsym               LDP1    N$DCT$$
         2 000021   100000 473506                    LDP3    0,QL,PR1
         2 000022   300004 236100                    LDQ     4,,PR3
         2 000023   200006 756100                    STQ     DDDT$,,AUTO

      279     3271    1      IF N$REQ.TYC.OPER THEN GOTO TAPE_ERR;

   3271  2 000024   000021 236100                    LDQ     17,,PR0
         2 000025   200000 316003                    CANQ    65536,DU
         2 000026   000443 601000 2                  TNZ     TAPE_ERR

      280     3272    1      IF N$REQ.TYC.IOERR

   3272  2 000027   000021 430100                    FSZN    17,,PR0
         2 000030   000100 605000 2                  TPL     s:3315

      281     3273    2       THEN DO;

      282     3274    3         DO CASE( N$REQ.EAINFO );

   3274  2 000031   000024 235100                    LDA     20,,PR0
         2 000032   000021 115007                    CMPA    17,DL
         2 000033   000035 602005 2                  TNC     s:3274+4,AL
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:45   
         2 000034   000077 710000 2                  TRA     s:3287
         2 000035   000077 710000 2                  TRA     s:3287
         2 000036   000077 710000 2                  TRA     s:3287
         2 000037   000077 710000 2                  TRA     s:3287
         2 000040   000057 710000 2                  TRA     s:3280
         2 000041   000056 710000 2                  TRA     s:3277
         2 000042   000077 710000 2                  TRA     s:3287
         2 000043   000057 710000 2                  TRA     s:3280
         2 000044   000056 710000 2                  TRA     s:3277
         2 000045   000077 710000 2                  TRA     s:3287
         2 000046   000057 710000 2                  TRA     s:3280
         2 000047   000056 710000 2                  TRA     s:3277
         2 000050   000077 710000 2                  TRA     s:3287
         2 000051   000077 710000 2                  TRA     s:3287
         2 000052   000077 710000 2                  TRA     s:3287
         2 000053   000077 710000 2                  TRA     s:3287
         2 000054   000077 710000 2                  TRA     s:3287
         2 000055   000062 710000 2                  TRA     s:3284

      283     3275    3          CASE( FRL_CKV800, FRL_CKV1600, FRL_CKV6250 );

      284     3276    4            DO;                  /* Expected error reading VOL1 at wrong density */

      285     3277    4               END;

   3277  2 000056   000100 710000 2                  TRA     s:3315

      286     3278    3          CASE( FRL_RDV800, FRL_RDV1600, FRL_RDV6250 );

      287     3279    4            DO;   /* Expected error trying to set density drive doesn't have     */

      288     3280    4               N$REQ.EAINFO = N$REQ.EAINFO + 1; /* Make like VOL1 read error     */

   3280  2 000057   000001 035007                    ADLA    1,DL
         2 000060   000024 755100                    STA     20,,PR0

      289     3281    4               END;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:46   

   3281  2 000061   000100 710000 2                  TRA     s:3315

      290     3282    3          CASE( FRL_CKLOAD );

      291     3283    4            DO;             /* Expected error - FIPS drives don't support LDTAPE */

      292     3284    4               CALL OCI$MK_WR(M_TAPE,CANTLOAD_MSG#,0,0,0,LDCTX);

   3284  2 000062   200007 633500                    EPPR3   LDCTX,,AUTO
         2 000063   200031 453500                    STP3    DT2_R+8,,AUTO
         2 000064   000002 236000 3                  LDQ     2
         2 000065   200030 756100                    STQ     DT2_R+7,,AUTO
         2 000066   000004 237000 3                  LDAQ    4
         2 000067   200026 757100                    STAQ    DT2_R+5,,AUTO
         2 000070   000006 237000 3                  LDAQ    6
         2 000071   200024 757100                    STAQ    DT2_R+3,,AUTO
         2 000072   200024 630500                    EPPR0   DT2_R+3,,AUTO
         2 000073   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000074   000000 701000 xent               TSX1    OCI$MK_WR
         2 000075   000000 011000                    NOP     0

      293     3285    4               END;

   3285  2 000076   000100 710000 2                  TRA     s:3315

      294     3286    3          CASE( ELSE );

      295     3287    3            GOTO TAPE_ERR;

   3287  2 000077   000443 710000 2                  TRA     TAPE_ERR

      296     3288    3          END;

      297     3289    2         END;
      298     3290
      299     3291         /***
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:47   
      300     3292          *** EAINFO indicates which operation to perform next.  Note that the
      301     3293          *** EAINFO values, though SUBstituted, have exact relationships to
      302     3294          *** one another.
      303     3295          ***
      304     3296          *** FRL_LOADTAPE - special EAINFO from operator LOAD keyin initiated
      305     3297          ***    request status
      306     3298          *** FRL_CKLOAD - end action from LOADTAPE command to report error to
      307     3299          ***    operator if tape drive does not support load command
      308     3300          *** FRL_CKRING - ring existence to be determined from status; if
      309     3301          ***    ring in, drive is to be protected and tape rewound next; if
      310     3302          ***    no ring in, tape is to be rewound and density set for first
      311     3303          ***    label read
      312     3304          *** FRL_REWIND - rewind tape; first label read next
      313     3305          *** FRL_SDxxx - density is to be set to xxx BPI; read first label
      314     3306          ***    next
      315     3307          *** FRL_RDVxxx - read first label at xxx BPI; check if VOL1 next
      316     3308          *** FRL_CKVxxx - check first label read at xxx BPI; if VOL1 next
      317     3309          ***    read next label and check if HDR1; if I/O error rewind tape
      318     3310          ***    and next set next density; if not VOL1 assume unlabelled tape
      319     3311          *** FRL_CKHDR1 - check next label; if HDR1 determine expiration; if
      320     3312          ***    file mark or blank tape assume ANSSCRATCH volume
      321     3313          ***/
      322     3314
      323     3315    2      DO CASE (N$REQ.EAINFO);

   3315  2 000100   200003 470500                    LDP0    @N$REQ,,AUTO
         2 000101   000024 235100                    LDA     20,,PR0
         2 000102   000021 115007                    CMPA    17,DL
         2 000103   000105 602005 2                  TNC     s:3315+5,AL
         2 000104   001074 710000 2                  TRA     s:3568
         2 000105   000164 710000 2                  TRA     HAVTAPNSTATS
         2 000106   000322 710000 2                  TRA     s:3403
         2 000107   000327 710000 2                  TRA     s:3409
         2 000110   000376 710000 2                  TRA     s:3425
         2 000111   000432 710000 2                  TRA     s:3446
         2 000112   000327 710000 2                  TRA     s:3409
         2 000113   000376 710000 2                  TRA     s:3425
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:48   
         2 000114   000432 710000 2                  TRA     s:3446
         2 000115   000327 710000 2                  TRA     s:3409
         2 000116   000376 710000 2                  TRA     s:3425
         2 000117   000432 710000 2                  TRA     s:3446
         2 000120   001074 710000 2                  TRA     s:3568
         2 000121   001074 710000 2                  TRA     s:3568
         2 000122   001074 710000 2                  TRA     s:3568
         2 000123   000653 710000 2                  TRA     s:3519
         2 000124   000126 710000 2                  TRA     s:3317
         2 000125   000157 710000 2                  TRA     s:3333

      324     3316    2       CASE(FRL_LOADTAPE#);           /* Special entry from LOAD keyin RQSTAT    */

      325     3317    2         IF N$REQ.STATUS.MAJOR = 2 AND N$REQ.STATUS.MINOR = '04'O

   3317  2 000126   000014 236100                    LDQ     12,,PR0
         2 000127   170000 376003                    ANQ     61440,DU
         2 000130   020000 116003                    CMPQ    8192,DU
         2 000131   000143 601000 2                  TNZ     s:3323
         2 000132   000014 236100                    LDQ     12,,PR0
         2 000133   007700 376003                    ANQ     4032,DU
         2 000134   000400 116003                    CMPQ    256,DU
         2 000135   000143 601000 2                  TNZ     s:3323

      326     3318    3          THEN DO;               /* Standby...issue load if not already AVRing   */

      327     3319    3            N$REQ.FC = %N_LDTAPE;          /* End action from LOAD keyin RQSTAT  */

   3319  2 000136   000027 236007                    LDQ     23,DL
         2 000137   000003 552104                    STBQ    3,'04'O,PR0

      328     3320    3            N$REQ.EAINFO = FRL_CKLOAD;     /* Ensure that drive can perform LOAD */

   3320  2 000140   000020 235007                    LDA     16,DL
         2 000141   000024 755100                    STA     20,,PR0

      329     3321    3            RETURN;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:49   

   3321  2 000142   000000 702200 xent               TSX2  ! X66_ARET

      330     3322    3            END;
      331     3323    2         IF FT$DDT.SOLICIT = FT_AVRSOL#

   3323  2 000143   200006 471500                    LDP1    DDDT$,,AUTO
         2 000144   100006 236100                    LDQ     6,,PR1
         2 000145   000007 376007                    ANQ     7,DL
         2 000146   000004 116007                    CMPQ    4,DL
         2 000147   000155 601000 2                  TNZ     s:3329

      332     3324    3          THEN DO;                    /* Since already AVRing...forget this one  */

      333     3325    3            N$REQ.OPFLG.REQ = %NO#;

   3325  2 000150   000010 236000 3                  LDQ     8
         2 000151   000004 356100                    ANSQ    4,,PR0

      334     3326    3            N$REQ.OPFLG.HOLD = %NO#;

   3326  2 000152   000011 236000 3                  LDQ     9
         2 000153   000004 356100                    ANSQ    4,,PR0

      335     3327    3            RETURN;

   3327  2 000154   000000 702200 xent               TSX2  ! X66_ARET

      336     3328    3            END;
      337     3329    2         N$REQ.EAINFO = FRL_CKRING;        /* In case of re-post                 */

   3329  2 000155   000024 450100                    STZ     20,,PR0

      338     3330    2         GOTO HAVTAPNSTATS;

   3330  2 000156   000164 710000 2                  TRA     HAVTAPNSTATS

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:50   
      339     3331
      340     3332    2       CASE(FRL_CKLOAD);                   /* End action from LOADTAPE           */

      341     3333    2         N$REQ.OPFLG.REQ = %NO#;           /* Don't queue this request for IO    */

   3333  2 000157   000010 236000 3                  LDQ     8
         2 000160   000004 356100                    ANSQ    4,,PR0

      342     3334    2         N$REQ.OPFLG.HOLD = %NO#;          /* Get rid of this packet             */

   3334  2 000161   000011 236000 3                  LDQ     9
         2 000162   000004 356100                    ANSQ    4,,PR0

      343     3335    2         RETURN;

   3335  2 000163   000000 702200 xent               TSX2  ! X66_ARET

      344     3336
      345     3337
      346     3338    2       CASE(FRL_CKRING); /*************/   /* Protect tape if ring in            */

   3335  2 000164                       HAVTAPNSTATS null
      347     3339    2   HAVTAPNSTATS: ;
      348     3340    3         DO INHIBIT;

      349     3341    3            IF NOT FR_AVRBUFUSED

   3341  2 000164   000024 234200 0                  SZN   ! FR_AVRBUFUSED
         2 000165   000174 604200 2                  TMI   ! s:3347

      350     3342    4             THEN DO;                      /* The AVR buffer is free             */

      351     3343    4               FR_AVRBUFUSED = %YES#;      /* We've got it now                   */

   3343  2 000166   400000 236203                    LDQ   ! -131072,DU
         2 000167   000024 756200 0                  STQ   ! FR_AVRBUFUSED

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:51   
      352     3344    4               FR_AVRDCTX = LDCTX;         /* Remember drive                     */

   3344  2 000170   200007 235300                    LDA   ! LDCTX,,AUTO
         2 000171   000025 755200 0                  STA   ! FR_AVRDCTX

      353     3345    4               AVR_TYPE = 0;               /* No need to wait to AVR             */

   3345  2 000172   200010 450300                    STZ   ! AVR_TYPE,,AUTO

      354     3346    4               END;

   3346  2 000173   000176 710200 2                  TRA   ! s:3349

      355     3347    3             ELSE AVR_TYPE = 1;            /* Need to wait                       */

   3347  2 000174   000001 235207                    LDA   ! 1,DL
         2 000175   200010 755300                    STA   ! AVR_TYPE,,AUTO

      356     3348    3            END;

      357     3349    2         IF AVR_TYPE ~= 0

   3349  2 000176   200010 235100                    LDA     AVR_TYPE,,AUTO
         2 000177   000203 600000 2                  TZE     s:3354

      358     3350    3          THEN DO;                         /* Wait by reposting interrupt        */

      359     3351    3            N$REQ.OPFLG.REQ = %NO#;

   3351  2 000200   000010 236000 3                  LDQ     8
         2 000201   000004 356100                    ANSQ    4,,PR0

      360     3352    3            ALTRETURN;

   3352  2 000202   000000 702200 xent               TSX2  ! X66_AALT

      361     3353    3            END;
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:52   
      362     3354    2         IF (N$REQ.STATUS.MAJOR ~= 0) OR NOT (N$REQ.STATUS.MINOR & '02'O)

   3354  2 000203   000014 236100                    LDQ     12,,PR0
         2 000204   170000 316003                    CANQ    61440,DU
         2 000205   000213 601000 2                  TNZ     s:3356
         2 000206   000014 236100                    LDQ     12,,PR0
         2 000207   000006 736000                    QLS     6
         2 000210   770000 376003                    ANQ     -4096,DU
         2 000211   020000 376003                    ANQ     8192,DU
         2 000212   000214 601000 2                  TNZ     s:3358

      363     3355    3          THEN DO;

      364     3356    3            GOTO BADSTAT;

   3356  2 000213   001270 710000 2                  TRA     BADSTAT

      365     3357    3            END;
      366     3358    2         IF (N$REQ.STATUS.MINOR & '01'O)

   3358  2 000214   000014 236100                    LDQ     12,,PR0
         2 000215   000006 736000                    QLS     6
         2 000216   770000 376003                    ANQ     -4096,DU
         2 000217   010000 376003                    ANQ     4096,DU
         2 000220   000231 600000 2                  TZE     s:3365

      367     3359    3          THEN DO;               /* Ring not in--tape is protected--rewind tape  */

      368     3360    3            FT$DDT.RINGIN = %NO#;

   3360  2 000221   200006 471500                    LDP1    DDDT$,,AUTO
         2 000222   000012 236000 3                  LDQ     10
         2 000223   100006 356100                    ANSQ    6,,PR1

      369     3361    3            N$REQ.EAINFO = FRL_SD800;

   3361  2 000224   000002 235007                    LDA     2,DL
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:53   
         2 000225   000024 755100                    STA     20,,PR0

      370     3362    3            N$REQ.FC = %N_REWIND;

   3362  2 000226   000006 236007                    LDQ     6,DL
         2 000227   000003 552104                    STBQ    3,'04'O,PR0

      371     3363    3            END;

   3363  2 000230   000240 710000 2                  TRA     s:3376

      372     3364    3          ELSE DO;                         /* Ring in--protect tape              */

      373     3365    3            FT$DDT.RINGIN = %YES#;

   3365  2 000231   200006 471500                    LDP1    DDDT$,,AUTO
         2 000232   040000 236007                    LDQ     16384,DL
         2 000233   100006 256100                    ORSQ    6,,PR1

      374     3366    3            N$REQ.EAINFO = FRL_REWIND;

   3366  2 000234   000001 235007                    LDA     1,DL
         2 000235   000024 755100                    STA     20,,PR0

      375     3367    3            N$REQ.FC = %N_PROTECT;

   3367  2 000236   000021 236007                    LDQ     17,DL
         2 000237   000003 552104                    STBQ    3,'04'O,PR0

      376     3368    3            END;

      377     3369
      378     3370         /***
      379     3371          *** Reset the DDT entry.  It must be reset item-by-item to avoid
      380     3372          *** changing FT$DDT.SOLICIT during this critical period.  Also,
      381     3373          *** FT$DDT.RINGIN is already initialized.
      382     3374          ***/
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:54   
      383     3375
      384     3376    2         FT$DDT.ACCT = ' ';

   3376  2 000240   000035 235000 xsym               LDA     B_VECTNIL+29
         2 000241   000035 236000 xsym               LDQ     B_VECTNIL+29
         2 000242   100000 755100                    STA     0,,PR1
         2 000243   100001 756100                    STQ     1,,PR1

      385     3377    2         FT$DDT.SN = ' ';

   3377  2 000244   040100 100400                    MLR     fill='040'O
         2 000245   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000246   100002 000006                    ADSC9   2,,PR1                   cn=0,n=6

      386     3378    2         FT$DDT.EXPIRE = ' ';

   3378  2 000247   040100 100400                    MLR     fill='040'O
         2 000250   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000251   100003 400006                    ADSC9   3,,PR1                   cn=2,n=6

      387     3379    2         FT$DDT.POSLOST = %YES#;           /* Previous positioning (if any) lost */

   3379  2 000252   004000 236007                    LDQ     2048,DL
         2 000253   100006 256100                    ORSQ    6,,PR1

      388     3380    2         FT$DDT.FUNNYPOS = %NO#;

   3380  2 000254   000013 236000 3                  LDQ     11
         2 000255   100007 356100                    ANSQ    7,,PR1

      389     3381    2         FT$DDT.FSN = 0;

   3381  2 000256   000000 220003                    LDX0    0,DU
         2 000257   100005 740100                    STX0    5,,PR1

      390     3382    2         FT$DDT.FRSTFSECT = 0;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:55   
   3382  2 000260   100007 740100                    STX0    7,,PR1

      391     3383    2         FT$DDT.FRSTFSN = 0;

   3383  2 000261   100005 440100                    SXL0    5,,PR1

      392     3384    2         FT$DDT.DENSITY = %D_UNKNOWN#;

   3384  2 000262   000014 236000 3                  LDQ     12
         2 000263   100006 356100                    ANSQ    6,,PR1

      393     3385    2         FT$DDT.FMCNT = 0;

   3385  2 000264   100006 740100                    STX0    6,,PR1

      394     3386    2         FT$DDT.POS = 0;

   3386  2 000265   000015 236000 3                  LDQ     13
         2 000266   100006 356100                    ANSQ    6,,PR1

      395     3387    2         FT$DDT.ANST = '0'B;

   3387  2 000267   000013 236000 3                  LDQ     11
         2 000270   100006 356100                    ANSQ    6,,PR1

      396     3388    2         FT$DDT.SCRTCH = '0'B;

   3388  2 000271   000016 236000 3                  LDQ     14
         2 000272   100006 356100                    ANSQ    6,,PR1

      397     3389    2         FT$DDT.EBCDIC = '0'B;

   3389  2 000273   000017 236000 3                  LDQ     15
         2 000274   100006 356100                    ANSQ    6,,PR1

      398     3390    2         FT$DDT.WRITE = '0'B;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:56   
   3390  2 000275   000020 236000 3                  LDQ     16
         2 000276   100006 356100                    ANSQ    6,,PR1

      399     3391    2         FT$DDT.NOWANS = '0'B;

   3391  2 000277   000021 236000 3                  LDQ     17
         2 000300   100006 356100                    ANSQ    6,,PR1

      400     3392    2         FT$DDT.EXPIRED = '0'B;

   3392  2 000301   000022 236000 3                  LDQ     18
         2 000302   100006 356100                    ANSQ    6,,PR1

      401     3393    2         FT$DDT.FMNEEDED = '0'B;

   3393  2 000303   000023 236000 3                  LDQ     19
         2 000304   100006 356100                    ANSQ    6,,PR1

      402     3394    2         FT$DDT.VOLACCESS = 0;

   3394  2 000305   000024 236000 3                  LDQ     20
         2 000306   100007 356100                    ANSQ    7,,PR1

      403     3395    2         FT$DDT.NOTEOF = '0'B;

   3395  2 000307   000016 236000 3                  LDQ     14
         2 000310   100007 356100                    ANSQ    7,,PR1

      404     3396
      405     3397    2         N$REQ.OPFLG.BPF = %YES#;

   3397  2 000311   000010 236007                    LDQ     8,DL
         2 000312   000004 256100                    ORSQ    4,,PR0

      406     3398    2         N$REQ.BUF$ = FR_AVRBUF$;          /* Set AVR buffer                     */

   3398  2 000313   000000 236000 1                  LDQ     FR_AVRBUF$
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:57   
         2 000314   000005 756100                    STQ     5,,PR0

      407     3399    2         N$REQ.BUFSIZE = 80;               /* Will be reading 80 byte labels     */

   3399  2 000315   000004 236100                    LDQ     4,,PR0
         2 000316   177777 376007                    ANQ     65535,DL
         2 000317   000024 276003                    ORQ     20,DU
         2 000320   000004 756100                    STQ     4,,PR0

      408     3400    2         RETURN;

   3400  2 000321   000000 702200 xent               TSX2  ! X66_ARET

      409     3401
      410     3402    2       CASE(FRL_REWIND); /*************/   /* Rewind tape to ensure at BOT       */

      411     3403    2         N$REQ.EAINFO = FRL_SD800;         /* Then set density                   */

   3403  2 000322   000002 236007                    LDQ     2,DL
         2 000323   000024 756100                    STQ     20,,PR0

      412     3404    2         N$REQ.FC = %N_REWIND;

   3404  2 000324   000006 236007                    LDQ     6,DL
         2 000325   000003 552104                    STBQ    3,'04'O,PR0

      413     3405    2         RETURN;

   3405  2 000326   000000 702200 xent               TSX2  ! X66_ARET

      414     3406
      415     3407    2       CASE(FRL_SD800,FRL_SD1600,FRL_SD6250); /**********/

      416     3408                                                /* Set density for read attempt       */
      417     3409    3         DO CASE(N$REQ.EAINFO);

   3409  2 000327   000011 115007                    CMPA    9,DL
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:58   
         2 000330   000332 602005 2                  TNC     s:3409+3,AL
         2 000331   000372 710000 2                  TRA     s:3420
         2 000332   000372 710000 2                  TRA     s:3420
         2 000333   000372 710000 2                  TRA     s:3420
         2 000334   000343 710000 2                  TRA     s:3411
         2 000335   000372 710000 2                  TRA     s:3420
         2 000336   000372 710000 2                  TRA     s:3420
         2 000337   000353 710000 2                  TRA     s:3414
         2 000340   000372 710000 2                  TRA     s:3420
         2 000341   000372 710000 2                  TRA     s:3420
         2 000342   000363 710000 2                  TRA     s:3417

      418     3410    3          CASE(FRL_SD800);

      419     3411    3            N$REQ.FC = %N_SD800;

   3411  2 000343   000023 236007                    LDQ     19,DL
         2 000344   000003 552104                    STBQ    3,'04'O,PR0

      420     3412    3            FT$DDT.DENSITY = %D800#;

   3412  2 000345   200006 471500                    LDP1    DDDT$,,AUTO
         2 000346   100006 236100                    LDQ     6,,PR1
         2 000347   000014 376000 3                  ANQ     12
         2 000350   001000 276007                    ORQ     512,DL
         2 000351   100006 756100                    STQ     6,,PR1
         2 000352   000372 710000 2                  TRA     s:3420

      421     3413    3          CASE(FRL_SD1600);

      422     3414    3            N$REQ.FC = %N_SD1600;

   3414  2 000353   000024 236007                    LDQ     20,DL
         2 000354   000003 552104                    STBQ    3,'04'O,PR0

      423     3415    3            FT$DDT.DENSITY = %D1600#;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:59   
   3415  2 000355   200006 471500                    LDP1    DDDT$,,AUTO
         2 000356   100006 236100                    LDQ     6,,PR1
         2 000357   000014 376000 3                  ANQ     12
         2 000360   001400 276007                    ORQ     768,DL
         2 000361   100006 756100                    STQ     6,,PR1
         2 000362   000372 710000 2                  TRA     s:3420

      424     3416    3          CASE(FRL_SD6250);

      425     3417    3            N$REQ.FC = %N_SD6250;

   3417  2 000363   000025 236007                    LDQ     21,DL
         2 000364   000003 552104                    STBQ    3,'04'O,PR0

      426     3418    3            FT$DDT.DENSITY = %D6250#;

   3418  2 000365   200006 471500                    LDP1    DDDT$,,AUTO
         2 000366   100006 236100                    LDQ     6,,PR1
         2 000367   000014 376000 3                  ANQ     12
         2 000370   002000 276007                    ORQ     1024,DL
         2 000371   100006 756100                    STQ     6,,PR1

      427     3419    3          END;

      428     3420    2         N$REQ.EAINFO = N$REQ.EAINFO + 1;  /* Next try to read VOL1              */

   3420  2 000372   000024 235100                    LDA     20,,PR0
         2 000373   000001 035007                    ADLA    1,DL
         2 000374   000024 755100                    STA     20,,PR0

      429     3421    2         RETURN;

   3421  2 000375   000000 702200 xent               TSX2  ! X66_ARET

      430     3422
      431     3423    2       CASE(FRL_RDV800,FRL_RDV1600,FRL_RDV6250); /**********/

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:60   
      432     3424                                      /* Read first tape record expecting VOL1 label  */
      433     3425    2         IF NOT N$REQ.TYC.IOERR

   3425  2 000376   000021 430100                    FSZN    17,,PR0
         2 000377   000411 604000 2                  TMI     s:3432

      434     3426    3          THEN DO;

      435     3427    3            N$REQ.EAINFO = N$REQ.EAINFO + 1; /* Next check read results          */

   3427  2 000400   000001 035007                    ADLA    1,DL
         2 000401   000024 755100                    STA     20,,PR0

      436     3428    3            N$REQ.FC = %N_RDASC;

   3428  2 000402   000004 236007                    LDQ     4,DL
         2 000403   000003 552104                    STBQ    3,'04'O,PR0

      437     3429    3            N$REQ.BUFSIZE = 80;

   3429  2 000404   000004 236100                    LDQ     4,,PR0
         2 000405   177777 376007                    ANQ     65535,DL
         2 000406   000024 276003                    ORQ     20,DU
         2 000407   000004 756100                    STQ     4,,PR0

      438     3430    3            RETURN;

   3430  2 000410   000000 702200 xent               TSX2  ! X66_ARET

      439     3431    3            END;
      440     3432    2         IF N$REQ.EAINFO ~= FRL_SD6250

   3432  2 000411   000010 115007                    CMPA    8,DL
         2 000412   000443 600000 2                  TZE     TAPE_ERR

      441     3433    3          THEN DO;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:61   
      442     3434    4            DO CASE(N$REQ.EAINFO);

   3434  2 000413   000006 115007                    CMPA    6,DL
         2 000414   000416 602005 2                  TNC     s:3434+3,AL
         2 000415   000431 710000 2                  TRA     s:3440
         2 000416   000431 710000 2                  TRA     s:3440
         2 000417   000431 710000 2                  TRA     s:3440
         2 000420   000424 710000 2                  TRA     s:3436
         2 000421   000431 710000 2                  TRA     s:3440
         2 000422   000431 710000 2                  TRA     s:3440
         2 000423   000427 710000 2                  TRA     s:3438

      443     3435    4             CASE(FRL_SD800);

      444     3436    4               N$REQ.EAINFO = FRL_SD1600;

   3436  2 000424   000005 236007                    LDQ     5,DL
         2 000425   000024 756100                    STQ     20,,PR0
         2 000426   000431 710000 2                  TRA     s:3440

      445     3437    4             CASE(FRL_SD1600);

      446     3438    4               N$REQ.EAINFO = FRL_SD6250;

   3438  2 000427   000010 236007                    LDQ     8,DL
         2 000430   000024 756100                    STQ     20,,PR0

      447     3439    4             END;

      448     3440    3            RETURN;

   3440  2 000431   000000 702200 xent               TSX2  ! X66_ARET

      449     3441    3            END;
      450     3442    2          ELSE GOTO TAPE_ERR;              /* Tape not readable                  */
      451     3443
      452     3444    2       CASE(FRL_CKV800,FRL_CKV1600,FRL_CKV6250); /**********/
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:62   

      453     3445                                                /* Check if VOL1 label                */
      454     3446    2         IF N$REQ.TYC.BLNKTP

   3446  2 000432   000021 236100                    LDQ     17,,PR0
         2 000433   010000 316003                    CANQ    4096,DU
         2 000434   000471 600000 2                  TZE     s:3462

      455     3447    3          THEN DO;                         /* Unlabeled blank tape               */

      456     3448    3            FT$DDT.POS = FRL_BLANK;        /* Tell operator that tape is blank   */

   3448  2 000435   200006 471500                    LDP1    DDDT$,,AUTO
         2 000436   100006 236100                    LDQ     6,,PR1
         2 000437   000015 376000 3                  ANQ     13
         2 000440   000020 276007                    ORQ     16,DL
         2 000441   100006 756100                    STQ     6,,PR1

      457     3449    4            DO WHILE('0'B);

   3449  2 000442   000463 710000 2                  TRA     s:3458

   3448  2 000443                       TAPE_ERR     null
      458     3450    4   TAPE_ERR:   ;
      459     3451    4               FT$DDT.DENSITY = %D_UNKNOWN#;

   3451  2 000443   200006 470500                    LDP0    DDDT$,,AUTO
         2 000444   000014 236000 3                  LDQ     12
         2 000445   000006 356100                    ANSQ    6,,PR0

      460     3452    4               FT$DDT.POS = FRL_GARBLED;   /* Tell operator that tape is garbled */

   3452  2 000446   000006 236100                    LDQ     6,,PR0
         2 000447   000015 376000 3                  ANQ     13
         2 000450   000040 276007                    ORQ     32,DL
         2 000451   000006 756100                    STQ     6,,PR0

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:63   
      461     3453    4               FT$DDT.ANST = %NO#;         /* May have seen VOL1 already         */

   3453  2 000452   000013 236000 3                  LDQ     11
         2 000453   000006 356100                    ANSQ    6,,PR0

      462     3454    4               FT$DDT.NOWANS = %NO#;

   3454  2 000454   000021 236000 3                  LDQ     17
         2 000455   000006 356100                    ANSQ    6,,PR0

      463     3455    4               FT$DDT.SN = ' ';

   3455  2 000456   040100 100400                    MLR     fill='040'O
         2 000457   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000460   000002 000006                    ADSC9   2,,PR0                   cn=0,n=6

      464     3456    4               FT$DDT.EBCDIC = %NO#;

   3456  2 000461   000017 236000 3                  LDQ     15
         2 000462   000006 356100                    ANSQ    6,,PR0

      465     3457    4               END;

      466     3458    3            FT$DDT.DENSITY = 0;            /* Unknown density                    */

   3458  2 000463   200006 470500                    LDP0    DDDT$,,AUTO
         2 000464   000014 236000 3                  LDQ     12
         2 000465   000006 356100                    ANSQ    6,,PR0

      467     3459    3            FT$DDT.SCRTCH = %YES#;

   3459  2 000466   200000 236007                    LDQ     65536,DL
         2 000467   000006 256100                    ORSQ    6,,PR0

      468     3460    3            END;

   3460  2 000470   000647 710000 2                  TRA     s:3516
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:64   

      469     3461    3          ELSE DO;                         /* Something read from tape           */

      470     3462    3            IF N$REQ.TYC.IOERR

   3462  2 000471   000021 430100                    FSZN    17,,PR0
         2 000472   000502 605000 2                  TPL     s:3472

      471     3463    4             THEN DO;

      472     3464    4               IF N$REQ.EAINFO >= FRL_CKV6250

   3464  2 000473   000012 115007                    CMPA    10,DL
         2 000474   000443 603000 2                  TRC     TAPE_ERR

      473     3465    4                THEN GOTO TAPE_ERR;
      474     3466    5                ELSE DO;         /* Wrong density...rewind tape and try next     */

      475     3467    5                  N$REQ.EAINFO = N$REQ.EAINFO + 1;

   3467  2 000475   000001 035007                    ADLA    1,DL
         2 000476   000024 755100                    STA     20,,PR0

      476     3468    5                  N$REQ.FC = %N_REWIND;

   3468  2 000477   000006 236007                    LDQ     6,DL
         2 000500   000003 552104                    STBQ    3,'04'O,PR0

      477     3469    5                  RETURN;

   3469  2 000501   000000 702200 xent               TSX2  ! X66_ARET

      478     3470    5                  END;
      479     3471    4               END;
      480     3472    3            IF N$REQ.ARSIZE >= 80

   3472  2 000502   000027 236100                    LDQ     23,,PR0
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:65   
         2 000503   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000504   000024 116003                    CMPQ    20,DU
         2 000505   000647 602000 2                  TNC     s:3516

      481     3473    4             THEN DO;                      /* Got a label-sized record           */

      482     3474    4               IF FR_AVRBUF$->FT$ANYLBL.LABEL_TYPE = 'VOL1'

   3474  2 000506   000000 471400 1                  LDP1    FR_AVRBUF$
         2 000507   040000 106500                    CMPC    fill='040'O
         2 000510   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         2 000511   000005 000004 1                  ADSC9   PO16B+4                  cn=0,n=4
         2 000512   000517 601000 2                  TNZ     s:3477

      483     3475    4                THEN FT$DDT.ANST = %YES#;

   3475  2 000513   200006 473500                    LDP3    DDDT$,,AUTO
         2 000514   400000 236007                    LDQ     -131072,DL
         2 000515   300006 256100                    ORSQ    6,,PR3
         2 000516   000566 710000 2                  TRA     s:3495

      484     3476    5                ELSE DO;                   /* Not an ordinary ANS tape           */

      485     3477    5                  IF FR_AVRBUFBOOT.STRAP = PO16

   3477  2 000517   040000 106400                    CMPC    fill='040'O
         2 000520   000000 000020 0                  ADSC9   FR_AVRBUF                cn=0,n=16
         2 000521   000001 000020 1                  ADSC9   PO16B                    cn=0,n=16
         2 000522   000544 601000 2                  TNZ     s:3486

      486     3478    6                   THEN DO;                /* CP-6 PO tape                       */

      487     3479    6                     FT$DDT.POS = FRL_CP6PO;

   3479  2 000523   200006 473500                    LDP3    DDDT$,,AUTO
         2 000524   300006 236100                    LDQ     6,,PR3
         2 000525   000015 376000 3                  ANQ     13
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:66   
         2 000526   000140 276007                    ORQ     96,DL
         2 000527   300006 756100                    STQ     6,,PR3

      488     3480    6                     FT$DDT.ANST = %NO#;

   3480  2 000530   000013 236000 3                  LDQ     11
         2 000531   300006 356100                    ANSQ    6,,PR3

      489     3481    6                     FT$DDT.NOWANS = %YES#;

   3481  2 000532   010000 236007                    LDQ     4096,DL
         2 000533   300006 256100                    ORSQ    6,,PR3

      490     3482    6                     FT$DDT.SN = 'CP6PO1';

   3482  2 000534   040100 100400                    MLR     fill='040'O
         2 000535   000006 000006 1                  ADSC9   PO16B+5                  cn=0,n=6
         2 000536   300002 000006                    ADSC9   2,,PR3                   cn=0,n=6

      491     3483    6                     FT$DDT.VOLACCESS = %ALL#; /* Can't determine                */

   3483  2 000537   300007 236100                    LDQ     7,,PR3
         2 000540   000024 376000 3                  ANQ     20
         2 000541   000001 276007                    ORQ     1,DL
         2 000542   300007 756100                    STQ     7,,PR3

      492     3484    6                     END;

   3484  2 000543   000566 710000 2                  TRA     s:3495

      493     3485    6                   ELSE DO;                /* Not ASCII VOL1...try EBCDIC        */

      494     3486    6                     CALL XLATE(FR_AVRBUF$->FT$BLBL,B$XL_EBC_ASC,FR_AVRBUF$->FT$BLBL);

   3486  2 000544   000000 473400 xsym               LDP3    B$XL_EBC_ASC$
         2 000545   040100 160500                    MVT     fill='040'O
         2 000546   100000 000120                    ADSC9   0,,PR1                   cn=0,n=80
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:67   
         2 000547   100000 000120                    ADSC9   0,,PR1                   cn=0,n=80
         2 000550   300000 000100                    ARG     0,,PR3

      495     3487    6                     IF FR_AVRBUF$->FT$ANYLBL.LABEL_TYPE = 'VOL1'

   3487  2 000551   040000 106500                    CMPC    fill='040'O
         2 000552   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         2 000553   000005 000004 1                  ADSC9   PO16B+4                  cn=0,n=4
         2 000554   000563 601000 2                  TNZ     s:3492

      496     3488    7                      THEN DO;             /* EBCDIC VOL1                        */

      497     3489    7                        FT$DDT.ANST = %YES#;

   3489  2 000555   200006 474500                    LDP4    DDDT$,,AUTO
         2 000556   400000 236007                    LDQ     -131072,DL
         2 000557   400006 256100                    ORSQ    6,,PR4

      498     3490    7                        FT$DDT.EBCDIC = %YES#;

   3490  2 000560   100000 236007                    LDQ     32768,DL
         2 000561   400006 256100                    ORSQ    6,,PR4

      499     3491    7                        END;

   3491  2 000562   000566 710000 2                  TRA     s:3495

      500     3492    6                      ELSE FT$DDT.ANST = %NO#; /* Undeterminable                 */

   3492  2 000563   200006 474500                    LDP4    DDDT$,,AUTO
         2 000564   000013 236000 3                  LDQ     11
         2 000565   400006 356100                    ANSQ    6,,PR4

      501     3493    6                     END;

      502     3494    5                  END;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:68   
      503     3495    4               IF FT$DDT.ANST

   3495  2 000566   200006 473500                    LDP3    DDDT$,,AUTO
         2 000567   300006 236100                    LDQ     6,,PR3
         2 000570   400000 316007                    CANQ    -131072,DL
         2 000571   000647 600000 2                  TZE     s:3516

      504     3496    5                THEN DO;

      505     3497    5                  FT$DDT.SN = FR_AVRBUF$->FT$VOL1.SN;

   3497  2 000572   040100 100500                    MLR     fill='040'O
         2 000573   100001 000006                    ADSC9   1,,PR1                   cn=0,n=6
         2 000574   300002 000006                    ADSC9   2,,PR3                   cn=0,n=6

      506     3498    5                  IF FT$DDT.SN ~= ' '

   3498  2 000575   040000 106500                    CMPC    fill='040'O
         2 000576   300002 000006                    ADSC9   2,,PR3                   cn=0,n=6
         2 000577   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000600   000647 600000 2                  TZE     s:3516

      507     3499    6                   THEN DO;                /* ASCII or EBCDIC ANS tape           */

      508     3500    6                     FT$DDT.ACCT = FR_AVRBUF$->FT$VOL1.ACCOUNT;

   3500  2 000601   040100 100500                    MLR     fill='040'O
         2 000602   100011 200010                    ADSC9   9,,PR1                   cn=1,n=8
         2 000603   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8

      509     3501    6                     N$REQ.EAINFO = FRL_CKHDR1;

   3501  2 000604   000016 235007                    LDA     14,DL
         2 000605   000024 755100                    STA     20,,PR0

      510     3502    6                     FT$DDT.POS = FRL_ANSTAP;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:69   
   3502  2 000606   300006 236100                    LDQ     6,,PR3
         2 000607   000015 376000 3                  ANQ     13
         2 000610   000060 276007                    ORQ     48,DL
         2 000611   300006 756100                    STQ     6,,PR3

      511     3503    6                     IF FT$DDT.ACCT ~= ' ' AND FR_AVRBUF$->FT$VOL1.SYSTEM = 'CP-6'

   3503  2 000612   040000 106500                    CMPC    fill='040'O
         2 000613   300000 000010                    ADSC9   0,,PR3                   cn=0,n=8
         2 000614   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000615   000646 600000 2                  TZE     s:3511
         2 000616   040000 106500                    CMPC    fill='040'O
         2 000617   100013 200006                    ADSC9   11,,PR1                  cn=1,n=6
         2 000620   000010 000004 1                  ADSC9   PO16B+7                  cn=0,n=4
         2 000621   000646 601000 2                  TNZ     s:3511

      512     3504    7                      THEN DO;

      513     3505    7                        IF FR_AVRBUF$->FT$VOL1.ACCESS = 'I'

   3505  2 000622   040000 106500                    CMPC    fill='040'O
         2 000623   100002 400001                    ADSC9   2,,PR1                   cn=2,n=1
         2 000624   000025 000001 3                  ADSC9   21                       cn=0,n=1
         2 000625   000633 601000 2                  TNZ     s:3507

      514     3506    7                         THEN FT$DDT.VOLACCESS = %IN#;
              3506                                  /* Determine volume protection */

   3506  2 000626   300007 236100                    LDQ     7,,PR3
         2 000627   000024 376000 3                  ANQ     20
         2 000630   000002 276007                    ORQ     2,DL
         2 000631   300007 756100                    STQ     7,,PR3
         2 000632   000646 710000 2                  TRA     s:3511

      515     3507    7                         ELSE IF FR_AVRBUF$->FT$VOL1.ACCESS = 'N'

   3507  2 000633   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:70   
         2 000634   100002 400001                    ADSC9   2,,PR1                   cn=2,n=1
         2 000635   000026 000001 3                  ADSC9   22                       cn=0,n=1
         2 000636   000642 601000 2                  TNZ     s:3509

      516     3508    7                            THEN FT$DDT.VOLACCESS = %NONE#;

   3508  2 000637   000003 236007                    LDQ     3,DL
         2 000640   300007 256100                    ORSQ    7,,PR3
         2 000641   000646 710000 2                  TRA     s:3511

      517     3509    7                            ELSE FT$DDT.VOLACCESS = %ALL#;

   3509  2 000642   300007 236100                    LDQ     7,,PR3
         2 000643   000024 376000 3                  ANQ     20
         2 000644   000001 276007                    ORQ     1,DL
         2 000645   300007 756100                    STQ     7,,PR3

      518     3510    7                        END;

      519     3511    6                     RETURN;

   3511  2 000646   000000 702200 xent               TSX2  ! X66_ARET

      520     3512    6                     END;
      521     3513    5                  END;
      522     3514    4               END;
      523     3515    3            END;
      524     3516    2         FT$DDT.ANST = %NO#;

   3516  2 000647   200006 470500                    LDP0    DDDT$,,AUTO
         2 000650   000013 236000 3                  LDQ     11
         2 000651   000006 356100                    ANSQ    6,,PR0
         2 000652   001074 710000 2                  TRA     s:3568

      525     3517
      526     3518    2       CASE(FRL_CKHDR1); /*************/   /* Second label read done             */

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:71   
      527     3519    2         IF N$REQ.TYC.EOF OR N$REQ.TYC.BLNKTP OR N$REQ.ARSIZE < 80

   3519  2 000653   000021 236100                    LDQ     17,,PR0
         2 000654   004000 316003                    CANQ    2048,DU
         2 000655   000664 601000 2                  TNZ     s:3520
         2 000656   010000 316003                    CANQ    4096,DU
         2 000657   000664 601000 2                  TNZ     s:3520
         2 000660   000027 236100                    LDQ     23,,PR0
         2 000661   000034 376000 xsym               ANQ     B_VECTNIL+28
         2 000662   000024 116003                    CMPQ    20,DU
         2 000663   000670 603000 2                  TRC     s:3522

      528     3520    2          THEN FT$DDT.SCRTCH = %YES#;

   3520  2 000664   200006 471500                    LDP1    DDDT$,,AUTO
         2 000665   200000 236007                    LDQ     65536,DL
         2 000666   100006 256100                    ORSQ    6,,PR1
         2 000667   001074 710000 2                  TRA     s:3568

      529     3521    3          ELSE DO;                         /* Next label read from tape          */

      530     3522    3            IF FT$DDT.EBCDIC

   3522  2 000670   200006 471500                    LDP1    DDDT$,,AUTO
         2 000671   100006 236100                    LDQ     6,,PR1
         2 000672   100000 316007                    CANQ    32768,DL
         2 000673   000702 600000 2                  TZE     s:3524

      531     3523    3             THEN CALL XLATE(FR_AVRBUF$->FT$BLBL,B$XL_EBC_ASC,FR_AVRBUF$->FT$BLBL);

   3523  2 000674   000000 473400 1                  LDP3    FR_AVRBUF$
         2 000675   000000 474400 xsym               LDP4    B$XL_EBC_ASC$
         2 000676   040100 160500                    MVT     fill='040'O
         2 000677   300000 000120                    ADSC9   0,,PR3                   cn=0,n=80
         2 000700   300000 000120                    ADSC9   0,,PR3                   cn=0,n=80
         2 000701   400000 000100                    ARG     0,,PR4

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:72   
      532     3524    3            IF FR_AVRBUF$->FT$ANYLBL.LABEL_TYPE ~= 'HDR1'

   3524  2 000702   000000 473400 1                  LDP3    FR_AVRBUF$
         2 000703   040000 106500                    CMPC    fill='040'O
         2 000704   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4
         2 000705   000011 000004 1                  ADSC9   PO16B+8                  cn=0,n=4
         2 000706   000710 600000 2                  TZE     s:3527

      533     3525    3             THEN RETURN;                  /* Ignore if not HDR1                 */

   3525  2 000707   000000 702200 xent               TSX2  ! X66_ARET

      534     3526    4             ELSE DO;

      535     3527    4               FT$DDT.SCRTCH = %NO#;

   3527  2 000710   000016 236000 3                  LDQ     14
         2 000711   100006 356100                    ANSQ    6,,PR1

      536     3528    4               AVR_TYPE = 1;               /* Assume invalid FSEQU_NUM           */

   3528  2 000712   000001 235007                    LDA     1,DL
         2 000713   200010 755100                    STA     AVR_TYPE,,AUTO

      537     3529    4               CALL SEARCH( TEMP, TEMP, B$SR_NON_DEC, FR_AVRBUF$->FT$LBL1.FSEQU_NUM )
              3529                        ALTRET( ALLDECIMALFSEQU_NUM );

   3529  2 000714   000000 474400 xsym               LDP4    B$SR_NON_DEC$
         2 000715   000000 164500                    TCT
         2 000716   300007 600004                    ADSC9   7,,PR3                   cn=3,n=4
         2 000717   400000 000100                    ARG     0,,PR4
         2 000720   200016 000100                    ARG     TEMP,,AUTO
         2 000721   200016 235100                    LDA     TEMP,,AUTO
         2 000722   000033 771000                    ARL     27
         2 000723   200016 755100                    STA     TEMP,,AUTO
         2 000724   200016 551140                    STBA    TEMP,'40'O,AUTO
         2 000725   000727 606400 2                  TTN     ALLDECIMALFSEQU_NUM
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:73   

      538     3530    5               DO WHILE( '0'B );

   3530  2 000726   000735 710000 2                  TRA     s:3534

   3529  2 000727                       ALLDECIMALF* null
      539     3531    5   ALLDECIMALFSEQU_NUM: ;
      540     3532    5                  CALL CHARBIN( AVR_TYPE, FR_AVRBUF$->FT$LBL1.FSEQU_NUM );

   3532  2 000727   000000 470400 1                  LDP0    FR_AVRBUF$
         2 000730   000100 305500                    DTB
         2 000731   000007 630004                    NDSC9   7,,PR0                   cn=3,s=nosgn,sf=0,n=4
         2 000732   200024 000010                    NDSC9   DT2_R+3,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         2 000733   200025 235100                    LDA     DT2_R+4,,AUTO
         2 000734   200010 755100                    STA     AVR_TYPE,,AUTO

      541     3533    5                  END;

      542     3534    4               FT$DDT.FSN = AVR_TYPE - 1;  /* Before next file                   */

   3534  2 000735   200010 720100                    LXL0    AVR_TYPE,,AUTO
         2 000736   777777 621010                    EAX1    -1,X0
         2 000737   200006 470500                    LDP0    DDDT$,,AUTO
         2 000740   000005 741100                    STX1    5,,PR0

      543     3535    4               FT$DDT.FRSTFSN = FT$DDT.FSN; /* First on volume                   */

   3535  2 000741   000005 441100                    SXL1    5,,PR0

      544     3536    4               AVR_TYPE = 1;               /* Assume invalid FSECT               */

   3536  2 000742   000001 235007                    LDA     1,DL
         2 000743   200010 755100                    STA     AVR_TYPE,,AUTO

      545     3537    4               CALL SEARCH( TEMP, TEMP, B$SR_NON_DEC, FR_AVRBUF$->FT$LBL1.FSECT )
              3537                        ALTRET( ALLDECIMALFSECT );

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:74   
   3537  2 000744   000000 471400 xsym               LDP1    B$SR_NON_DEC$
         2 000745   000000 473400 1                  LDP3    FR_AVRBUF$
         2 000746   000000 164500                    TCT
         2 000747   300006 600004                    ADSC9   6,,PR3                   cn=3,n=4
         2 000750   100000 000100                    ARG     0,,PR1
         2 000751   200016 000100                    ARG     TEMP,,AUTO
         2 000752   200016 236100                    LDQ     TEMP,,AUTO
         2 000753   000044 737000                    LLS     36
         2 000754   000033 771000                    ARL     27
         2 000755   200016 755100                    STA     TEMP,,AUTO
         2 000756   200016 551140                    STBA    TEMP,'40'O,AUTO
         2 000757   000761 606400 2                  TTN     ALLDECIMALFSECT

      546     3538    5               DO WHILE( '0'B );

   3538  2 000760   000767 710000 2                  TRA     s:3542

   3537  2 000761                       ALLDECIMALF* null
      547     3539    5   ALLDECIMALFSECT: ;
      548     3540    5                  CALL CHARBIN( AVR_TYPE, FR_AVRBUF$->FT$LBL1.FSECT );

   3540  2 000761   000000 470400 1                  LDP0    FR_AVRBUF$
         2 000762   000100 305500                    DTB
         2 000763   000006 630004                    NDSC9   6,,PR0                   cn=3,s=nosgn,sf=0,n=4
         2 000764   200024 000010                    NDSC9   DT2_R+3,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         2 000765   200025 235100                    LDA     DT2_R+4,,AUTO
         2 000766   200010 755100                    STA     AVR_TYPE,,AUTO

      549     3541    5                  END;

      550     3542    4               FT$DDT.FRSTFSECT = AVR_TYPE; /* First section on volume           */

   3542  2 000767   200010 720100                    LXL0    AVR_TYPE,,AUTO
         2 000770   200006 470500                    LDP0    DDDT$,,AUTO
         2 000771   000007 740100                    STX0    7,,PR0

      551     3543    4               CALL SSS$SYSTIME( AVR_TYPE ); /* Get UTS                          */
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:75   

   3543  2 000772   200010 631500                    EPPR1   AVR_TYPE,,AUTO
         2 000773   200024 451500                    STP1    DT2_R+3,,AUTO
         2 000774   200024 630500                    EPPR0   DT2_R+3,,AUTO
         2 000775   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000776   000000 701000 xent               TSX1    SSS$SYSTIME
         2 000777   000000 011000                    NOP     0

      552     3544    4               CALL UMT$JDATE( FT$DDT.EXPIRE, AVR_TYPE ); /* Convert to text     */

   3544  2 001000   200010 630500                    EPPR0   AVR_TYPE,,AUTO
         2 001001   200025 450500                    STP0    DT2_R+4,,AUTO
         2 001002   200006 236100                    LDQ     DDDT$,,AUTO
         2 001003   000027 036000 3                  ADLQ    23
         2 001004   200024 756100                    STQ     DT2_R+3,,AUTO
         2 001005   200024 630500                    EPPR0   DT2_R+3,,AUTO
         2 001006   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 001007   000000 701000 xent               TSX1    UMT$JDATE
         2 001010   000000 011000                    NOP     0

      553     3545    4               DT1.JD_R = FT$DDT.EXPIRE;   /* Julian Date                        */

   3545  2 001011   200006 470500                    LDP0    DDDT$,,AUTO
         2 001012   040100 100500                    MLR     fill='040'O
         2 001013   000003 400005                    ADSC9   3,,PR0                   cn=2,n=5
         2 001014   200017 200005                    ADSC9   DT1_R,,AUTO              cn=1,n=5

      554     3546    4               IF DT1.JD.YR >= '00' AND DT1.JD.YR <= '20'

   3546  2 001015   040000 106500                    CMPC    fill='040'O
         2 001016   200017 200002                    ADSC9   DT1_R,,AUTO              cn=1,n=2
         2 001017   000012 000002 1                  ADSC9   PO16B+9                  cn=0,n=2
         2 001020   001030 602000 2                  TNC     s:3548
         2 001021   040100 106400                    CMPC    fill='040'O
         2 001022   000013 000002 1                  ADSC9   PO16B+10                 cn=0,n=2
         2 001023   200017 200002                    ADSC9   DT1_R,,AUTO              cn=1,n=2
         2 001024   001030 602000 2                  TNC     s:3548
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:76   

      555     3547    4                THEN DT1.CEN = '0';        /* ZERO  -> 20XX                      */

   3547  2 001025   060000 236003                    LDQ     24576,DU
         2 001026   200017 552140                    STBQ    DT1_R,'40'O,AUTO
         2 001027   001032 710000 2                  TRA     s:3549

      556     3548    4                ELSE DT1.CEN = ' ';        /* SPACE -> 19XX                      */

   3548  2 001030   040000 236003                    LDQ     16384,DU
         2 001031   200017 552140                    STBQ    DT1_R,'40'O,AUTO

      557     3549    4               DT2.JD_R = FR_AVRBUF$->FT$LBL1.EXPIRE_DATE; /* Label Expiry date  */

   3549  2 001032   000000 471400 1                  LDP1    FR_AVRBUF$
         2 001033   040100 100500                    MLR     fill='040'O
         2 001034   100014 000005                    ADSC9   12,,PR1                  cn=0,n=5
         2 001035   200021 200005                    ADSC9   DT2_R,,AUTO              cn=1,n=5

      558     3550    4               DT2.CEN = FR_AVRBUF$->FT$LBL1.CENTURY2; /* Century Field          */

   3550  2 001036   040100 100500                    MLR     fill='040'O
         2 001037   100013 600001                    ADSC9   11,,PR1                  cn=3,n=1
         2 001040   200021 000001                    ADSC9   DT2_R,,AUTO              cn=0,n=1

      559     3551    4               IF DT2.JD_R > '99364'       /* No expiry date                     */

   3551  2 001041   040100 106400                    CMPC    fill='040'O
         2 001042   000014 000005 1                  ADSC9   PO16B+11                 cn=0,n=5
         2 001043   200021 200005                    ADSC9   DT2_R,,AUTO              cn=1,n=5
         2 001044   001052 603000 2                  TRC     s:3553

      560     3552    4                THEN FT$DDT.POS = FRL_UXPANS; /* Unexpired ANS Tape              */

   3552  2 001045   000006 236100                    LDQ     6,,PR0
         2 001046   000015 376000 3                  ANQ     13
         2 001047   000120 276007                    ORQ     80,DL
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:77   
         2 001050   000006 756100                    STQ     6,,PR0
         2 001051   001071 710000 2                  TRA     s:3559

      561     3553    4                ELSE IF DT1_R >= DT2_R

   3553  2 001052   040100 106500                    CMPC    fill='040'O
         2 001053   200017 000006                    ADSC9   DT1_R,,AUTO              cn=0,n=6
         2 001054   200021 000006                    ADSC9   DT2_R,,AUTO              cn=0,n=6
         2 001055   001065 602000 2                  TNC     s:3558

      562     3554    5                   THEN DO;                /* Expired                            */

      563     3555    5                     FT$DDT.EXPIRED = %YES#;

   3555  2 001056   000010 236007                    LDQ     8,DL
         2 001057   000006 256100                    ORSQ    6,,PR0

      564     3556    5                     FT$DDT.POS = FRL_EXPANS;

   3556  2 001060   000006 236100                    LDQ     6,,PR0
         2 001061   000015 376000 3                  ANQ     13
         2 001062   000100 276007                    ORQ     64,DL
         2 001063   000006 756100                    STQ     6,,PR0

      565     3557    5                     END;

   3557  2 001064   001071 710000 2                  TRA     s:3559

      566     3558    4                   ELSE FT$DDT.POS = FRL_UXPANS;

   3558  2 001065   000006 236100                    LDQ     6,,PR0
         2 001066   000015 376000 3                  ANQ     13
         2 001067   000120 276007                    ORQ     80,DL
         2 001070   000006 756100                    STQ     6,,PR0

      567     3559    4               FT$DDT.EXPIRE = FR_AVRBUF$->FT$LBL1.EXPIRE_DATE;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:78   
   3559  2 001071   040100 100500                    MLR     fill='040'O
         2 001072   100014 000005                    ADSC9   12,,PR1                  cn=0,n=5
         2 001073   000003 400006                    ADSC9   3,,PR0                   cn=2,n=6

      568     3560    4               END;

      569     3561    3            END;

      570     3562    2       END;

      571     3563
      572     3564         /***
      573     3565          *** AVR is done.  Report tape to operator.
      574     3566          ***/
      575     3567
      576     3568    1      IF FT$DDT.POS = FRL_EXPANS AND OCI_BOOT

   3568  2 001074   200006 470500                    LDP0    DDDT$,,AUTO
         2 001075   000006 236100                    LDQ     6,,PR0
         2 001076   000160 376007                    ANQ     112,DL
         2 001077   000100 116007                    CMPQ    64,DL
         2 001100   001111 601000 2                  TNZ     s:3573
         2 001101   000000 234000 xsym               SZN     OCI_BOOT
         2 001102   001111 605000 2                  TPL     s:3573

      577     3569    2       THEN DO;                       /* Can't mount expired if CP-6 isn't up    */

      578     3570    2         FT$DDT.POS = FRL_UXPANS;

   3570  2 001103   000006 236100                    LDQ     6,,PR0
         2 001104   000015 376000 3                  ANQ     13
         2 001105   000120 276007                    ORQ     80,DL
         2 001106   000006 756100                    STQ     6,,PR0

      579     3571    2         FT$DDT.EXPIRED = %NO#;

   3571  2 001107   000022 236000 3                  LDQ     18
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:79   
         2 001110   000006 356100                    ANSQ    6,,PR0

      580     3572    2         END;

      581     3573    1      MSGS.MG1 = FT$DDT.POS;               /* Pass tape type                     */

   3573  2 001111   000006 236100                    LDQ     6,,PR0
         2 001112   000160 376007                    ANQ     112,DL
         2 001113   000027 736000                    QLS     23
         2 001114   200011 552140                    STBQ    MSGS,'40'O,AUTO

      582     3574    1      IF MSGS.MG1 <= FRL_GARBLED

   3574  2 001115   200011 236100                    LDQ     MSGS,,AUTO
         2 001116   777000 376003                    ANQ     -512,DU
         2 001117   003000 116003                    CMPQ    1536,DU
         2 001120   001124 603000 2                  TRC     s:3576

      583     3575    1       THEN MSGS.MG3 = 1;                  /* Assumed SCRATCH                    */

   3575  2 001121   001000 236007                    LDQ     512,DL
         2 001122   200011 552110                    STBQ    MSGS,'10'O,AUTO
         2 001123   001133 710000 2                  TRA     s:3579

      584     3576    1       ELSE IF MSGS.MG1 = FRL_CP6PO

   3576  2 001124   006000 116003                    CMPQ    3072,DU
         2 001125   001131 601000 2                  TNZ     s:3578

      585     3577    1          THEN MSGS.MG3 = 2;

   3577  2 001126   002000 236007                    LDQ     1024,DL
         2 001127   200011 552110                    STBQ    MSGS,'10'O,AUTO
         2 001130   001133 710000 2                  TRA     s:3579

      586     3578    1          ELSE MSGS.MG3 = 0;

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:80   
   3578  2 001131   000000 236003                    LDQ     0,DU
         2 001132   200011 552110                    STBQ    MSGS,'10'O,AUTO

      587     3579    1      IF FT$DDT.RINGIN

   3579  2 001133   000006 236100                    LDQ     6,,PR0
         2 001134   040000 316007                    CANQ    16384,DL
         2 001135   001141 600000 2                  TZE     s:3581

      588     3580    1       THEN MSGS.MG2 = 1;

   3580  2 001136   000001 236003                    LDQ     1,DU
         2 001137   200011 552120                    STBQ    MSGS,'20'O,AUTO
         2 001140   001143 710000 2                  TRA     s:3582

      589     3581    1       ELSE MSGS.MG2 = 0;

   3581  2 001141   000000 236003                    LDQ     0,DU
         2 001142   200011 552120                    STBQ    MSGS,'20'O,AUTO

      590     3582    1      MSGS.MG4 = FT$DDT.DENSITY;

   3582  2 001143   000006 236100                    LDQ     6,,PR0
         2 001144   003400 376007                    ANQ     1792,DL
         2 001145   000010 772000                    QRL     8
         2 001146   200011 552104                    STBQ    MSGS,'04'O,AUTO

      591     3583    1      MSGS.MG5 = FT$DDT.SN;

   3583  2 001147   040100 100500                    MLR     fill='040'O
         2 001150   000002 000006                    ADSC9   2,,PR0                   cn=0,n=6
         2 001151   200012 000006                    ADSC9   MSGS+1,,AUTO             cn=0,n=6

      592     3584    1      MSGS.MG7 = FT$DDT.ACCT;

   3584  2 001152   040100 100500                    MLR     fill='040'O
         2 001153   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:81   
         2 001154   200013 600010                    ADSC9   MSGS+2,,AUTO             cn=3,n=8

      593     3585    1      IF FT$DDT.EBCDIC

   3585  2 001155   000006 236100                    LDQ     6,,PR0
         2 001156   100000 316007                    CANQ    32768,DL
         2 001157   001163 600000 2                  TZE     s:3587

      594     3586    1       THEN MSGS.MG6 = 1;

   3586  2 001160   001000 236007                    LDQ     512,DL
         2 001161   200013 552110                    STBQ    MSGS+2,'10'O,AUTO
         2 001162   001165 710000 2                  TRA     s:3588

      595     3587    1       ELSE MSGS.MG6 = 0;

   3587  2 001163   000000 236003                    LDQ     0,DU
         2 001164   200013 552110                    STBQ    MSGS+2,'10'O,AUTO

      596     3588    1      MSGS.MG8 = FT$DDT.VOLACCESS;

   3588  2 001165   000007 236100                    LDQ     7,,PR0
         2 001166   000003 376007                    ANQ     3,DL
         2 001167   200015 552104                    STBQ    MSGS+4,'04'O,AUTO

      597     3589    1      CALL OCI$MK_WR(M_TAPE,AVRERR_MSG#,8,'001001001001006001010001'O,MSGS,LDCTX);

   3589  2 001170   200007 631500                    EPPR1   LDCTX,,AUTO
         2 001171   200031 451500                    STP1    DT2_R+8,,AUTO
         2 001172   200011 633500                    EPPR3   MSGS,,AUTO
         2 001173   200030 453500                    STP3    DT2_R+7,,AUTO
         2 001174   000032 237000 3                  LDAQ    26
         2 001175   200026 757100                    STAQ    DT2_R+5,,AUTO
         2 001176   000034 237000 3                  LDAQ    28
         2 001177   200024 757100                    STAQ    DT2_R+3,,AUTO
         2 001200   200024 630500                    EPPR0   DT2_R+3,,AUTO
         2 001201   000024 631400 xsym               EPPR1   B_VECTNIL+20
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:82   
         2 001202   000000 701000 xent               TSX1    OCI$MK_WR
         2 001203   000000 011000                    NOP     0

      598     3590                                                /* Tell operator about tape           */
      599     3591
      600     3592         /***
      601     3593          *** Report tape to tape resource management.
      602     3594          ***/
      603     3595
      604     3596    1      IF FT$DDT.SCRTCH THEN FT$DDT.EXPIRED = %YES#;

   3596  2 001204   200006 470500                    LDP0    DDDT$,,AUTO
         2 001205   000006 236100                    LDQ     6,,PR0
         2 001206   200000 316007                    CANQ    65536,DL
         2 001207   001212 600000 2                  TZE     s:3597

   3596  2 001210   000010 236007                    LDQ     8,DL
         2 001211   000006 256100                    ORSQ    6,,PR0

      605     3597    1      IF FT$DDT.SN = ' '

   3597  2 001212   040000 106500                    CMPC    fill='040'O
         2 001213   000002 000006                    ADSC9   2,,PR0                   cn=0,n=6
         2 001214   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 001215   001221 601000 2                  TNZ     s:3599

      606     3598    1       THEN AVR_TYPE = FRC_SCR#;           /* Unlabeled tape                     */

   3598  2 001216   000002 235007                    LDA     2,DL
         2 001217   200010 755100                    STA     AVR_TYPE,,AUTO
         2 001220   001237 710000 2                  TRA     s:3603

      607     3599    1       ELSE IF FT$DDT.SCRTCH OR FT$DDT.EXPIRED

   3599  2 001221   000006 236100                    LDQ     6,,PR0
         2 001222   200000 316007                    CANQ    65536,DL
         2 001223   001232 601000 2                  TNZ     s:3601
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:83   
         2 001224   000010 316007                    CANQ    8,DL
         2 001225   001232 601000 2                  TNZ     s:3601
         2 001226   000006 236100                    LDQ     6,,PR0
         2 001227   000160 376007                    ANQ     112,DL
         2 001230   000140 116007                    CMPQ    96,DL
         2 001231   001235 601000 2                  TNZ     s:3602

      608     3600    1           OR FT$DDT.POS = FRL_CP6PO
      609     3601    1          THEN AVR_TYPE = FRC_LSCR#;       /* Labeled scratch tape               */

   3601  2 001232   000003 235007                    LDA     3,DL
         2 001233   200010 755100                    STA     AVR_TYPE,,AUTO
         2 001234   001237 710000 2                  TRA     s:3603

      610     3602    1          ELSE AVR_TYPE = FRC_LBL#;        /* Labeled tape                       */

   3602  2 001235   000001 235007                    LDA     1,DL
         2 001236   200010 755100                    STA     AVR_TYPE,,AUTO

      611     3603    1      CALL FRC$AVR(LDCTX,AVR_TYPE,FT$DDT.SN) ALTRET(ILGLMNT);

   3603  2 001237   200006 236100                    LDQ     DDDT$,,AUTO
         2 001240   000002 036003                    ADLQ    2,DU
         2 001241   200026 756100                    STQ     DT2_R+5,,AUTO
         2 001242   200010 631500                    EPPR1   AVR_TYPE,,AUTO
         2 001243   200025 451500                    STP1    DT2_R+4,,AUTO
         2 001244   200007 633500                    EPPR3   LDCTX,,AUTO
         2 001245   200024 453500                    STP3    DT2_R+3,,AUTO
         2 001246   200024 630500                    EPPR0   DT2_R+3,,AUTO
         2 001247   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 001250   000000 701000 xent               TSX1    FRC$AVR
         2 001251   001265 702000 2                  TSX2    ILGLMNT

      612     3604
      613     3605         /***
      614     3606          *** Rewind tape.
      615     3607          ***/
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:84   
      616     3608
      617     3609    1      N$REQ.FC = %N_REWIND;                /* Rewind tape                        */

   3609  2 001252   200003 470500                    LDP0    @N$REQ,,AUTO
         2 001253   000006 236007                    LDQ     6,DL
         2 001254   000003 552104                    STBQ    3,'04'O,PR0

      618     3610    1      FT$DDT.POS = FTP_BOV#;

   3610  2 001255   200006 471500                    LDP1    DDDT$,,AUTO
         2 001256   100006 236100                    LDQ     6,,PR1
         2 001257   000015 376000 3                  ANQ     13
         2 001260   000020 276007                    ORQ     16,DL
         2 001261   100006 756100                    STQ     6,,PR1

      619     3611    1      FT$DDT.POSLOST = %NO#;

   3611  2 001262   000031 236000 3                  LDQ     25
         2 001263   100006 356100                    ANSQ    6,,PR1

      620     3612    2      DO WHILE('0'B);

   3612  2 001264   001273 710000 2                  TRA     s:3618

   3603  2 001265                       ILGLMNT      null
      621     3613    2   ILGLMNT: ;                              /* Illegal AVR...ignore tape          */
      622     3614    2         FT$DDT.POSLOST = %YES#;

   3614  2 001265   200006 470500                    LDP0    DDDT$,,AUTO
         2 001266   004000 236007                    LDQ     2048,DL
         2 001267   000006 256100                    ORSQ    6,,PR0

   3614  2 001270                       BADSTAT      null
      623     3615    2   BADSTAT: ;
      624     3616    2         N$REQ.OPFLG.REQ = %NO#;

   3616  2 001270   200003 470500                    LDP0    @N$REQ,,AUTO
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:85   
         2 001271   000010 236000 3                  LDQ     8
         2 001272   000004 356100                    ANSQ    4,,PR0

      625     3617    2         END;

      626     3618    1      N$REQ.OPFLG.HOLD = %NO#;

   3618  2 001273   000011 236000 3                  LDQ     9
         2 001274   000004 356100                    ANSQ    4,,PR0

      627     3619    1      N$REQ.OPFLG.EA = %NO#;

   3619  2 001275   000036 236000 3                  LDQ     30
         2 001276   000004 356100                    ANSQ    4,,PR0

      628     3620    1      FT$DDT.SOLICIT = 0;                  /* AVR is done                        */

   3620  2 001277   200006 471500                    LDP1    DDDT$,,AUTO
         2 001300   000037 236000 3                  LDQ     31
         2 001301   100006 356100                    ANSQ    6,,PR1

      629     3621    1      FR_AVRBUFUSED = %NO#;

   3621  2 001302   000024 450000 0                  STZ     FR_AVRBUFUSED

      630     3622    1      RETURN;

   3622  2 001303   000000 702200 xent               TSX2  ! X66_ARET

FR_AVRBUF
 Sect OctLoc
   0     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

FR_AVRBUFUSED
 Sect OctLoc
   0     024   0***** ******                                                    ....

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:86   
FR_AVRBUF$
 Sect OctLoc
   1     000   000000 006000                                                    ....

PO16B
 Sect OctLoc
   1     001   000007 000000   260010 000000   150377 377376   170000 000000    ........h...x...

(unnamed)
 Sect OctLoc
   1     005   126117 114061   103120 066120   117061 040040   103120 055066    VOL1CP6PO1  CP-6
   1     011   110104 122061   060060 040040   062060 040040   071071 063066    HDR100  20  9936
   1     015   064040 040040   000000 000000   001001 001001   006001 010001    4   ............

(unnamed)
 Sect OctLoc
   3     000   100000 000000   000000 000020   000002 006000   000000 000000    @...............
   3     004   000002 006000   000002 006000   000000 006000   000001 006000    ................
   3     010   777777 777775   777777 777773   777777 737777   777777 377777    ................
   3     014   777777 774377   777777 777617   777777 577777   777777 677777    ................
   3     020   777777 757777   777777 767777   777777 777767   777777 777577    ................
   3     024   777777 777774   111040 040040   116040 040040   000003 400000    ....I   N   ....
   3     030   000000 000023   777777 773777   000012 006000   000017 006000    ................
   3     034   000000 006000   000030 006000   777777 777737   777777 777770    ................
      631     3623
      632     3624    1   END FRL$AVREA;
      633     3625        /*********************************************************************/

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:87   
--  Include file information  --

   B_SEGIDS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   FT_SUBS.:E05TOU  is referenced.
   FR_SUBS.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   FT$LBLS.:E05TOU  cannot be made into a system file and is referenced.
   FT$DDT.:E05TOU  is referenced.
   FR$RAT.:E05TOU  is referenced.
   NK_LDCT_R.:E05TOU  cannot be made into a system file and is referenced.
   NK$LDCT.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure FRL$AVREA.
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:88   

 **** Variables and constants ****

  ****  Section 000  Data  FRL$AVREA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(80)    r     1 FR_AVRBUF                  0-0-0/w STRC(720)   r     1 FR_AVRBUFBOOT
    24-0-0/w BIT         r     1 FR_AVRBUFUSED             25-0-0/w SBIN        r     1 FR_AVRDCTX

  ****  Section 001 RoData FRL$AVREA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 FR_AVRBUF$                 1-0-0/c CHAR(16)    r     1 PO16
     1-0-0/b BIT         r     1 PO16B(0:3)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @N$REQ                    10-0-0/w UBIN        r     1 AVR_TYPE
     6-0-0/w PTR         r     1 DDDT$                     17-0-0/c STRC(54)    r     1 DT1
    17-0-0/c CHAR(6)     r     1 DT1_R                     21-0-0/c STRC(54)    r     1 DT2
    21-0-0/c CHAR(6)     r     1 DT2_R                      5-0-0/w STRC        r     1 EBC_ASC
     5-0-0/w PTR         r     1 EBC_ASC$                   7-0-0/w UBIN        r     1 LDCTX
    11-0-0/w STRC(180)   r     1 MSGS                      *0-0-0/d STRC(1080)  r     1 N$REQ
     4-0-0/w STRC        r     1 NON_DEC                    4-0-0/w PTR         r     1 NON_DEC$
    16-0-0/w SBIN        r     1 TEMP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:89   
     0-0-0/w PTR         r     1 B$SR_NON_DEC$              0-0-0/w PTR         r     1 B$XL_EBC_ASC$
     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/b BIT         r     1 OCI_BOOT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 B$SR_NON_DEC               0-0-0/d STRC(4608)  r     1 B$XL_EBC_ASC
     0-0-0/c STRC(720)   r     1 FT$ANYLBL                  0-0-0/c CHAR(80)    r     1 FT$BLBL
     0-0-0/w STRC(288)   r     1 FT$DDT                     0-0-0/c STRC(720)   r     1 FT$LBL1
     0-0-0/c STRC(720)   r     1 FT$VOL1                    0-0-0/d STRC(864)   r     1 NK$LDCT
     0-0-0/w PTR         r     1 NK$LDCT$(0:0)


   Procedure FRL$AVREA requires 708 words for executable code.
   Procedure FRL$AVREA requires 26 words of local(AUTO) storage.

    No errors detected in file FRL$AVR.:E05TSI    .
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:90   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:91   
          MINI XREF LISTING

ALLDECIMALFSECT
      3537**LABEL    3537--CALLALT
ALLDECIMALFSEQU_NUM
      3529**LABEL    3529--CALLALT
AVR_TYPE
      3190**DCL      3345<<ASSIGN   3347<<ASSIGN   3349>>IF       3528<<ASSIGN   3532<<CALLBLT  3534>>ASSIGN
      3536<<ASSIGN   3540<<CALLBLT  3542>>ASSIGN   3543<>CALL     3544<>CALL     3598<<ASSIGN   3601<<ASSIGN
      3602<<ASSIGN   3603<>CALL
B$SR_NON_DEC
      2602**DCL      3529>>CALLBLT  3537>>CALLBLT
B$SR_NON_DEC$
      2601**DCL      2602--IMP-PTR  3261>>ASSIGN   3529>>CALLBLT  3537>>CALLBLT
B$XL_EBC_ASC
      2606**DCL      3486>>CALLBLT  3523>>CALLBLT
B$XL_EBC_ASC$
      2605**DCL      2606--IMP-PTR  3259>>ASSIGN   3486>>CALLBLT  3523>>CALLBLT
BADSTAT
      3614**LABEL    3356--GOTO
DDDT$
      3188**DCL       751--IMP-PTR  3270<<ASSIGN   3323>>IF       3360>>ASSIGN   3365>>ASSIGN   3376>>ASSIGN
      3377>>ASSIGN   3378>>ASSIGN   3379>>ASSIGN   3380>>ASSIGN   3381>>ASSIGN   3382>>ASSIGN   3383>>ASSIGN
      3384>>ASSIGN   3385>>ASSIGN   3386>>ASSIGN   3387>>ASSIGN   3388>>ASSIGN   3389>>ASSIGN   3390>>ASSIGN
      3391>>ASSIGN   3392>>ASSIGN   3393>>ASSIGN   3394>>ASSIGN   3395>>ASSIGN   3412>>ASSIGN   3415>>ASSIGN
      3418>>ASSIGN   3448>>ASSIGN   3451>>ASSIGN   3452>>ASSIGN   3453>>ASSIGN   3454>>ASSIGN   3455>>ASSIGN
      3456>>ASSIGN   3458>>ASSIGN   3459>>ASSIGN   3475>>ASSIGN   3479>>ASSIGN   3480>>ASSIGN   3481>>ASSIGN
      3482>>ASSIGN   3483>>ASSIGN   3489>>ASSIGN   3490>>ASSIGN   3492>>ASSIGN   3495>>IF       3497>>ASSIGN
      3498>>IF       3500>>ASSIGN   3502>>ASSIGN   3503>>IF       3506>>ASSIGN   3508>>ASSIGN   3509>>ASSIGN
      3516>>ASSIGN   3520>>ASSIGN   3522>>IF       3527>>ASSIGN   3534>>ASSIGN   3535>>ASSIGN   3535>>ASSIGN
      3542>>ASSIGN   3544>>CALL     3545>>ASSIGN   3552>>ASSIGN   3555>>ASSIGN   3556>>ASSIGN   3558>>ASSIGN
      3559>>ASSIGN   3568>>IF       3570>>ASSIGN   3571>>ASSIGN   3573>>ASSIGN   3579>>IF       3582>>ASSIGN
      3583>>ASSIGN   3584>>ASSIGN   3585>>IF       3588>>ASSIGN   3596>>IF       3596>>ASSIGN   3597>>IF
      3599>>IF       3599>>IF       3599>>IF       3603>>CALL     3610>>ASSIGN   3611>>ASSIGN   3614>>ASSIGN
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:92   
      3620>>ASSIGN
DT1.CEN
      3204**DCL      3547<<ASSIGN   3548<<ASSIGN
DT1.JD.YR
      3207**DCL      3546>>IF       3546>>IF
DT1.JD_R
      3205**DCL      3206--REDEF    3545<<ASSIGN
DT1_R
      3202**DCL      3203--REDEF    3553>>IF
DT2.CEN
      3211**DCL      3550<<ASSIGN
DT2.JD_R
      3212**DCL      3213--REDEF    3549<<ASSIGN   3551>>IF
DT2_R
      3209**DCL      3210--REDEF    3553>>IF
EBC_ASC.SD
      2615**DCL      3260<<ASSIGN
EBC_ASC$
      2612**DCL      2613--REDEF    3259<<ASSIGN
FRC$AVR
      3160**DCL-ENT  3603--CALL
FR_AVRBUF
      3175**DCL      3176--REDEF    3182--DCLINIT
FR_AVRBUF$
      3182**DCL      3398>>ASSIGN   3474>>IF       3486>>CALLBLT  3486>>CALLBLT  3487>>IF       3497>>ASSIGN
      3500>>ASSIGN   3503>>IF       3505>>IF       3507>>IF       3523>>CALLBLT  3523>>CALLBLT  3524>>IF
      3529>>CALLBLT  3532>>CALLBLT  3537>>CALLBLT  3540>>CALLBLT  3549>>ASSIGN   3550>>ASSIGN   3559>>ASSIGN
FR_AVRBUFBOOT.STRAP
      3177**DCL      3477>>IF
FR_AVRBUFUSED
      3179**DCL      3341>>IF       3343<<ASSIGN   3621<<ASSIGN
FR_AVRDCTX
      3180**DCL      3344<<ASSIGN
FT$ANYLBL.LABEL_TYPE
      1071**DCL      3474>>IF       3487>>IF       3524>>IF
FT$BLBL
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:93   
      1054**DCL      3486<<CALLBLT  3486>>CALLBLT  3523<<CALLBLT  3523>>CALLBLT
FT$DDT.ACCT
       752**DCL      3376<<ASSIGN   3500<<ASSIGN   3503>>IF       3584>>ASSIGN
FT$DDT.ANST
       767**DCL      3387<<ASSIGN   3453<<ASSIGN   3475<<ASSIGN   3480<<ASSIGN   3489<<ASSIGN   3492<<ASSIGN
      3495>>IF       3516<<ASSIGN
FT$DDT.DENSITY
       782**DCL      3384<<ASSIGN   3412<<ASSIGN   3415<<ASSIGN   3418<<ASSIGN   3451<<ASSIGN   3458<<ASSIGN
      3582>>ASSIGN
FT$DDT.EBCDIC
       770**DCL      3389<<ASSIGN   3456<<ASSIGN   3490<<ASSIGN   3522>>IF       3585>>IF
FT$DDT.EXPIRE
       760**DCL      3378<<ASSIGN   3544<>CALL     3545>>ASSIGN   3559<<ASSIGN
FT$DDT.EXPIRED
       786**DCL      3392<<ASSIGN   3555<<ASSIGN   3571<<ASSIGN   3596<<ASSIGN   3599>>IF
FT$DDT.FMCNT
       765**DCL      3385<<ASSIGN
FT$DDT.FMNEEDED
       783**DCL      3393<<ASSIGN
FT$DDT.FRSTFSECT
       788**DCL      3382<<ASSIGN   3542<<ASSIGN
FT$DDT.FRSTFSN
       763**DCL      3383<<ASSIGN   3535<<ASSIGN
FT$DDT.FSN
       761**DCL      3381<<ASSIGN   3534<<ASSIGN   3535>>ASSIGN
FT$DDT.FUNNYPOS
       790**DCL      3380<<ASSIGN
FT$DDT.NOTEOF
       798**DCL      3395<<ASSIGN
FT$DDT.NOWANS
       774**DCL      3391<<ASSIGN   3454<<ASSIGN   3481<<ASSIGN
FT$DDT.POS
       785**DCL      3386<<ASSIGN   3448<<ASSIGN   3452<<ASSIGN   3479<<ASSIGN   3502<<ASSIGN   3552<<ASSIGN
      3556<<ASSIGN   3558<<ASSIGN   3568>>IF       3570<<ASSIGN   3573>>ASSIGN   3599>>IF       3610<<ASSIGN
FT$DDT.POSLOST
       778**DCL      3379<<ASSIGN   3611<<ASSIGN   3614<<ASSIGN
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:94   
FT$DDT.RINGIN
       771**DCL      3360<<ASSIGN   3365<<ASSIGN   3579>>IF
FT$DDT.SCRTCH
       769**DCL      3388<<ASSIGN   3459<<ASSIGN   3520<<ASSIGN   3527<<ASSIGN   3596>>IF       3599>>IF
FT$DDT.SN
       756**DCL      3377<<ASSIGN   3455<<ASSIGN   3482<<ASSIGN   3497<<ASSIGN   3498>>IF       3583>>ASSIGN
      3597>>IF       3603<>CALL
FT$DDT.SOLICIT
       787**DCL      3323>>IF       3620<<ASSIGN
FT$DDT.VOLACCESS
       803**DCL      3394<<ASSIGN   3483<<ASSIGN   3506<<ASSIGN   3508<<ASSIGN   3509<<ASSIGN   3588>>ASSIGN
FT$DDT.WRITE
       772**DCL      3390<<ASSIGN
FT$LBL1.CENTURY2
       890**DCL      3550>>ASSIGN
FT$LBL1.EXPIRE_DATE
       891**DCL      3549>>ASSIGN   3559>>ASSIGN
FT$LBL1.FSECT
       882**DCL      3537>>CALLBLT  3540>>CALLBLT
FT$LBL1.FSEQU_NUM
       884**DCL      3529>>CALLBLT  3532>>CALLBLT
FT$LBL1.SYSTEM_ID
       895**DCL       896--REDEF
FT$LBL2.CP6
       968**DCL       986--REDEF
FT$ULBL.LABEL_NBIN
      1062**DCL      1063--REDEF
FT$VOL1.ACCESS
       821**DCL      3505>>IF       3507>>IF
FT$VOL1.ACCOUNT
       829**DCL      3500>>ASSIGN
FT$VOL1.SN
       820**DCL      3497>>ASSIGN
FT$VOL1.SYSTEM
       830**DCL      3503>>IF
HAVTAPNSTATS
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:95   
      3335**LABEL    3330--GOTO
ILGLMNT
      3603**LABEL    3603--CALLALT
LDCTX
      3189**DCL      3269<<ASSIGN   3270>>ASSIGN   3284<>CALL     3344>>ASSIGN   3589<>CALL     3603<>CALL
MSGS
      3191**DCL      3589<>CALL
MSGS.MG1
      3192**DCL      3573<<ASSIGN   3574>>IF       3576>>IF
MSGS.MG2
      3193**DCL      3580<<ASSIGN   3581<<ASSIGN
MSGS.MG3
      3194**DCL      3575<<ASSIGN   3577<<ASSIGN   3578<<ASSIGN
MSGS.MG4
      3195**DCL      3582<<ASSIGN
MSGS.MG5
      3196**DCL      3583<<ASSIGN
MSGS.MG6
      3197**DCL      3586<<ASSIGN   3587<<ASSIGN
MSGS.MG7
      3198**DCL      3584<<ASSIGN
MSGS.MG8
      3199**DCL      3588<<ASSIGN
N$DCT$$
       585**DCL       585--IMP-PTR  3270>>ASSIGN
N$REQ
       103**DCL         6--PROC
N$REQ.ARSIZE
       136**DCL      3472>>IF       3519>>IF
N$REQ.BUF$
       112**DCL      3398<<ASSIGN
N$REQ.BUFADDR
       112**DCL       113--REDEF     113--REDEF
N$REQ.BUFSIZE
       106**DCL      3399<<ASSIGN   3429<<ASSIGN
N$REQ.DLA.DCTX
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:96   
       103**DCL      3269>>ASSIGN
N$REQ.DLA.DRELADDR
       104**DCL       104--REDEF
N$REQ.DVE.EOMCHAR
       141**DCL       142--REDEF
N$REQ.EAINFO
       135**DCL       135--REDEF    3274>>DOCASE   3280<<ASSIGN   3280>>ASSIGN   3315>>DOCASE   3320<<ASSIGN
      3329<<ASSIGN   3361<<ASSIGN   3366<<ASSIGN   3403<<ASSIGN   3409>>DOCASE   3420<<ASSIGN   3420>>ASSIGN
      3427<<ASSIGN   3427>>ASSIGN   3432>>IF       3434>>DOCASE   3436<<ASSIGN   3438<<ASSIGN   3464>>IF
      3467<<ASSIGN   3467>>ASSIGN   3501<<ASSIGN
N$REQ.EAINFOX
       135**DCL       136--REDEF
N$REQ.EVNTINFO
       136**DCL       136--REDEF
N$REQ.FC
       106**DCL      3319<<ASSIGN   3362<<ASSIGN   3367<<ASSIGN   3404<<ASSIGN   3411<<ASSIGN   3414<<ASSIGN
      3417<<ASSIGN   3428<<ASSIGN   3468<<ASSIGN   3609<<ASSIGN
N$REQ.OPFLG.BPF
       111**DCL      3397<<ASSIGN
N$REQ.OPFLG.EA
       110**DCL      3619<<ASSIGN
N$REQ.OPFLG.HOLD
       111**DCL      3326<<ASSIGN   3334<<ASSIGN   3618<<ASSIGN
N$REQ.OPFLG.REQ
       111**DCL      3268<<ASSIGN   3325<<ASSIGN   3333<<ASSIGN   3351<<ASSIGN   3616<<ASSIGN
N$REQ.STATUS
       117**DCL       123--REDEF
N$REQ.STATUS.MAJOR
       117**DCL      3317>>IF       3354>>IF
N$REQ.STATUS.MINOR
       118**DCL      3317>>IF       3354>>IF       3358>>IF
N$REQ.TYC.BLNKTP
       127**DCL      3446>>IF       3519>>IF
N$REQ.TYC.EOF
       127**DCL      3519>>IF
N$REQ.TYC.IOERR
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:97   
       128**DCL      3272>>IF       3425>>IF       3462>>IF
N$REQ.TYC.OPER
       126**DCL      3271>>IF
NI$REQ.DCW
       416**DCL       419--REDEF
NI$REQ.DCW.TALLY
       417**DCL       417--REDEF
NI$REQ.IDCW.EXTA
       419**DCL       419--REDEF
NI$REQ.PCW
       421**DCL       425--REDEF
NI$REQ.SEEK
       426**DCL       427--REDEF     428--REDEF
NK$LDCT.DDT$
       547**DCL       547--REDEF    3270>>ASSIGN
NK$LDCT.IOQ$
       546**DCL       547--REDEF
NK$LDCT.LDCTX
       548**DCL       548--REDEF
NK$LDCT.LKFLG.ABORTED
       560**DCL       561--REDEF
NK$LDCT.RLCID.LDCTX
       570**DCL       570--REDEF
NK$LDCT.STA$
       566**DCL       567--REDEF
NK$LDCT.SYMB$
       545**DCL       545--REDEF     545--REDEF     546--REDEF
NK$LDCT$
       585**DCL      3270>>ASSIGN
NON_DEC.SD
      2611**DCL      3262<<ASSIGN
NON_DEC$
      2608**DCL      2609--REDEF    3261<<ASSIGN
OCI$MK_WR
      3161**DCL-ENT  3284--CALL     3589--CALL
OCI_BOOT
PL6.E3A0      #002=FRL$AVREA File=FRL$AVR.:E05TSI                                TUE 07/29/97 17:23 Page:98   
      3169**DCL      3568>>IF
PO16
      3223**DCL      3477>>IF
PO16B
      3221**DCL      3223--REDEF
SSS$SYSTIME
      3162**DCL-ENT  3543--CALL
TAPE_ERR
      3448**LABEL    3271--GOTO     3287--GOTO     3442--GOTO     3465--GOTO
TEMP
      3200**DCL      3529<<CALLBLT  3529<<CALLBLT  3537<<CALLBLT  3537<<CALLBLT
UMT$JDATE
      3163**DCL-ENT  3544--CALL
