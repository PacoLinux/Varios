/*M*     TESTDATE - COMPARE DATE  FROM OU'S AGAINS LS/LO FILES */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
/*X* IPC,PLM=5,IND=5,SDI=5,CTI=5,ENU=5,AND,DCI=5,CSU=5,ECU=5,THI=5,DTI=5 */
TESTDATE: PROC MAIN;
/*P*     NAME:     TESTDATE
         PURPOSE: COMPARE OU'S DATE AGAINST LS/LO FILE DATE.
         DESCRIPTION:
              SET F$LIST TO THE LIST FILE.
              SET M$OU TO THE ACCOUNT WHERE OU'S LIVE.
              SET M$LO TO THE ACCOUNT WHERE THE LISTING FILES LIVE.
 
         TESTDATE WILL LIST ON M$DO:
         - WHEN THE LEAST (EARLIEST) DATE IN A OU HEAD RECORD FOR
           A FILE, AND THE DATE FROM THE FIRST HEADER LINE OF THE
           LISTING FILE DO NOT AGREE.
         - WHEN AN OU FILE, BUT NOT A LISTING FILE EXISTS.
         - WHEN A LISTING FILE, BUT NOT A OU EXISTS.
 
*/
%INCLUDE CP_6;
%INCLUDE B_ERRORS_C;
%INCLUDE B$OBJECT_C;
%F$DCB;
/* */
DCL B$TCB$ PTR SYMREF;
%B$TCB;
%B$EXCFR;
%FPT_EXIT;
/*
    M$OU IS THE OBJECT UNIT ACCOUNT DCB.
*/
DCL M$OU DCB;
DCL M$OU$ PTR;
%FPT_OPEN (FPTN=OPEN_OU,DCB=M$OU,ASN=FILE,FUN=IN,NAME=FILE_OU);
%FPT_READ (FPTN=READ_OU,DCB=M$OU,BUF=BUF_OU,KEY=KEY_OU,KEYR=YES);
%FPT_CLOSE (FPTN=CLOSE_OU,DCB=M$OU);
%VLP_NAME (FPTN=FILE_OU);
/*
    F$LIST IS THE DCB ASSIGNED TO A LIST FORMAT FILE.
*/
DCL F$LIST DCB;
DCL F$LIST$ PTR;
%FPT_READ (FPTN=READ_LIST,DCB=F$LIST,BUF=BUF_LIST,WAIT=YES);
/*
    M$LO IS THE LIST FILE DCB.
*/
DCL M$LO DCB;
DCL M$LO$ PTR;
%FPT_OPEN (FPTN=OPEN_LO,DCB=M$LO,ASN=FILE,NAME=FILE_OU,FUN=IN);
%FPT_CLOSE (FPTN=CLOSE_LO,DCB=M$LO);
%FPT_READ (FPTN=READ_LO,DCB=M$LO,BUF=BUF_LO,WAIT=YES);
/*
    M$DO IS THE LISTING/DIAGNOSTIC OUTPUT DCB
*/
DCL M$DO DCB;
%FPT_WRITE (FPTN=WRITE_DO,DCB=M$DO,BUF=BUF_DO,WAIT=YES);
/*
    BUFFERS
*/
DCL BUF_OU CHAR(133) STATIC;
DCL BUF_DO CHAR(72) STATIC;
DCL 1 BUF_LO STATIC,
         2 * UBIN(2) UNAL,
         2 FCN UBIN(3) UNAL,
         2 COUNT UBIN(4) UNAL,
         2 LANGUAGE CHAR(4) UNAL,
         2 * CHAR(27) UNAL,
         2 PARTRGE,
              3 * CHAR(8) UNAL,
              3 TIME CHAR(12) UNAL,
              3 DATE CHAR(10) UNAL,
              3 * CHAR(11) UNAL,
         2 TIME CHAR(11) UNAL,
         2 * CHAR(1) UNAL,
         2 DATE CHAR(10) UNAL,
         2 * CHAR(39);
DCL 1 BUF_BMAP REDEF BUF_LO,
         2 * CHAR(2) UNAL,
         2 TIME CHAR(6) UNAL,
         2 DATE CHAR(8) UNAL,
         2 * CHAR(118) UNAL;
DCL HEAD$ PTR STATIC INIT(ADDR(BUF_OU));
DCL 1 KEY_OU STATIC,
         2 KL UBIN(9) UNAL,
         2 TYPE CHAR(1) UNAL,
         2 TEST CHAR(30) UNAL;
%B$OUHEAD (NAME=OU_HEAD,STCLASS=BASED);
DCL DATE_BUF CHAR(10) STATIC;
DCL TIME_BUF CHAR(11) STATIC;
DCL TSTAMP_BUF UBIN(36) STATIC;
%FPT_TIME (FPTN=TIME_OU,DATE=DATE_BUF,TIME=TIME_BUF,DEST=EXT,
    SOURCE=UTS,TSTAMP=TSTAMP_BUF);
%FPT_TIME (FPTN=TIME_BMAP,DATE=DATE_BUF,TIME=TIME_BUF,DEST=LOCAL,
    SOURCE=UTS,TSTAMP=TSTAMP_BUF);
DCL BUF_LIST CHAR(132) STATIC INIT(' ');
DCL I SBIN;
DCL J SBIN;
DCL K SBIN;
DCL OU_FLAG BIT(1);
DCL LO_FLAG BIT(1);
DCL LANG_TYPE UBIN WORD;
%SUB PL6@=1;
%SUB PAR@=2;
%SUB BMAP@=3;
DCL MAXTIMES SBIN CONSTANT INIT(-1);
DCL MAXTIME REDEF MAXTIMES UBIN WORD;
/* */
     M$OU$ = DCBADDR(DCBNUM(M$OU));
     M$LO$ = DCBADDR(DCBNUM(M$LO));
     F$LIST$ = DCBADDR(DCBNUM(F$LIST));
NEXT_FILE: DO WHILE('1'B);
          CALL M$READ (READ_LIST) ALTRET(LIST_ERR);
          I=F$LIST$->F$DCB.ARS#;
          CALL INDEX1(J,',',BUF_LIST);
          FILE_OU.NAME# = SUBSTR(BUF_LIST,0,J);
          FILE_OU.L# = J;
          OU_FLAG = '1'B;
          CALL M$OPEN(OPEN_OU) ALTRET(NO_OU_FILE);
          DO WHILE('0'B);
NO_OU_FILE:    CALL CONCAT(BUF_DO,' NO FILE IN OU ACCOUNT =',
                    SUBSTR(FILE_OU.NAME#,0,FILE_OU.L#));
               CALL M$WRITE (WRITE_DO);
               OU_FLAG = '0'B;
          END;
          CALL M$OPEN(OPEN_LO) ALTRET(NO_LO_FILE);
          LO_FLAG='1'B;
          DO WHILE('0'B);
NO_LO_FILE:    CALL CONCAT(BUF_DO,' NO FILE IN LO ACCOUNT =',
                    SUBSTR(FILE_OU.NAME#,0,FILE_OU.L#));
               CALL M$WRITE (WRITE_DO);
               LO_FLAG='0'B;
          END;
          IF LO_FLAG AND OU_FLAG
               THEN DO;
                    BUF_LO.FCN = 0;
                    DO WHILE(BUF_LO.FCN ~= 7);
                         CALL M$READ (READ_LO) ALTRET(NO_LO_RECS);
                         IF M$LO$->F$DCB.ARS# <= 2
                              THEN BUF_LO.FCN = 0;
                    END;
                    IF BUF_LO.LANGUAGE = ' PL6'
                         THEN LANG_TYPE = PL6@;
                         ELSE IF BUF_LO.LANGUAGE = 'PART'
                              THEN DO;
                                   LANG_TYPE = PAR@;
                                   BUF_LO.DATE = BUF_LO.PARTRGE.DATE;
                                   BUF_LO.TIME = BUF_LO.PARTRGE.TIME;
                              END;
                              ELSE DO;
                                   BUF_LO.DATE = BUF_BMAP.DATE;
                                   BUF_LO.TIME = BUF_BMAP.TIME;
                                   LANG_TYPE = BMAP@;
                                   DATE_BUF=' ';
                                   TIME_BUF = ' ';
                              END;
                    TSTAMP_BUF = MAXTIME;
                    KEY_OU.TYPE = '"';
                    DO WHILE(KEY_OU.TYPE='"');
                         CALL M$READ (READ_OU) ALTRET(BAD_OU);
                         IF KEY_OU.TYPE = '"'
                              THEN IF HEAD$->OU_HEAD.UTS < TSTAMP_BUF
                                   THEN TSTAMP_BUF = HEAD$->OU_HEAD.UTS;
                    END;
BAD_OU:             IF TSTAMP_BUF = MAXTIME
                         THEN DO;
                              CALL CONCAT(BUF_DO,' BAD M$OU FILE = ',
                                   SUBSTR(FILE_OU.NAME#,0,FILE_OU.L#));
                              CALL M$WRITE (WRITE_DO);
                         END;
                         ELSE DO;
                              IF LANG_TYPE ~= BMAP@
                                   THEN CALL M$TIME (TIME_OU) ALTRET(BAD_OU);
                                   ELSE CALL M$TIME (TIME_BMAP) ALTRET(BAD_OU);
                              IF (BUF_LO.DATE ~= DATE_BUF) OR
                                   (SUBSTR(BUF_LO.TIME,0,4) ~= SUBSTR(TIME_BUF,0,4))
                                   THEN DO;
                                        CALL CONCAT(BUF_DO,' DATES DONT MATCH FOR MODULE=',
                                             SUBSTR(FILE_OU.NAME#,0,FILE_OU.L#));
                                        CALL M$WRITE (WRITE_DO);
                                        CALL CONCAT(BUF_DO,' M$OU DATE=',DATE_BUF,
                                             TIME_BUF,'   M$LO DATE=',BUF_LO.DATE,BUF_LO.TIME);
                                        CALL M$WRITE (WRITE_DO);
                                   END;
                         END;
               END;
          DO WHILE('0'B);
NO_LO_RECS:    CALL CONCAT(BUF_DO,' NO HEADER RECORDS FOUND IN LO FILE=',
                    SUBSTR(FILE_OU.NAME#,0,FILE_OU.L#));
               CALL M$WRITE (WRITE_DO);
          END;
          IF LO_FLAG
               THEN CALL M$CLOSE (CLOSE_LO);
          IF OU_FLAG
               THEN CALL M$CLOSE (CLOSE_OU);
     END;
LIST_ERR: CALL CONCAT(BUF_DO,' END OF LIST FILE...PROCESSING FINISHED ');
     CALL M$WRITE (WRITE_DO);
     CALL M$EXIT (FPT_EXIT);
END TESTDATE;
