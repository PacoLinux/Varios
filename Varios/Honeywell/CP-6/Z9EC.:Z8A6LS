
     DIRECTORY AND SEGMENT LIST  (OBJECT UNIT NAME '')

      * SYMDEF *        GLOBAL NAME               SEGMENT  OFFSET      ACCESS ATTRIBUTES
     1  ALIGN  'Z9EC$ALIGN'                        CMP1.2      0          R  W  E  L  U

      * COMMON SECTION *  GLOBAL NAME                       SIZE          KIND                  ATTRIBUTES
     2  COMP12 'COMP12'                                       12           DATA

      * SECTION *          SIZE          KIND
     3  CMP1.2               30           CODE


     PROGRAM BREAK          42

                                      1 *M*  ALIGN  --  CONVERTS INTEGER NUMBERS TO COMP-1 AND COMP-2
                                      2 *T***********************************************************
                                      3 *T*                                                         *
                                      4 *T* COPYRIGHT (C) BULL HN INFORMATION SYSTEMS INC., 1997    *
                                      5 *T*                                                         *
                                      6 *T***********************************************************
                        000000        7        SECT    CMP1.2,CODE
                                      8 *P*
                                      9 *P*
                                     10 *P*        NAME      : ALIGN
                                     11 *P*        AUTHOR    : JIM BEHM AND MARK GLENN
                                     12 *P*        PURPOSE   : TO ACCEPT AN INTEGER NUMBER AND CONVERT IT
                                     13 *P*                    INTO THE COMP-1 (16-BIT BINARY) AND COMP-2
                                     14 *P*                    (32-BIT BINARY).
                                     15 *P*
                                     16 *P*
                                     17 *
                                     18 *D*
                                     19 *D*
                                     20 *D*        NAME      : ALIGN
                                     21 *D*        CALL      : . . .
                                     22 *D*                    CALL ALIGN(COMP_6, COMP_1_OR_2) ;
                                     23 *D*                    . . .
                                     24 *D*        INTERFACE : NONE
                                     25 *D*        INPUT     :
                                     26 *D*                    1.) THE INTEGER NUMBER TO BE CONVERTED
                                     27 *D*                    2.) THE ADDRESS OF THE RESULT (COMP-1 OR
                                     28 *D*                        COMP-2 VARIABLE).
                                     29 *D*        OUTPUT    : THE RESULT - COMP-1 OR COMP-2. COMP-2 USING
                                     30 *D*                    THE FULL WORD, COMP-1 USING ONLY THE LOWER HALF.
                                     31 *D*        SCRATCH   : NONE
                                     32 *D*        REFERENCE : MARK GLENN - COBOL 80 GROUP DEC. 1981
                                     33 *D*
                                     34 *D*
                        000000       35        ENTDEF  (ALIGN,Z9EC$ALIGN)
                                     36 *
                        000000       37 ALIGN  NULL

                                     38 *
      000000 000000 7530 00 010NN    39        SREG    REGS
      000001 000010 4574 00 010NN    40        STP7    PR7     SAVE POINTER REG 7
      000002 000011 4564 00 010NN    41        STP6    PR6     SAVE POINTER REG 6
      000003 000000 4775 00          42        LDP7    0,,0    GET THE ADDRESS OF THE INPUT VALUE TO BE ALIGNED
      000004 000001 4765 00          43        LDP6    1,,0    GET THE ADDRESS OF RESULT
      000005 700000 2361 00          44        LDQ     0,,7    INPUT IN THE Q-REG FOR SHIFTING
                                     45 *V*
                                     46 *V*
                                     47 *V*    SHIFT_SEQUENCE -- THE NEXT FEW INSTRUCTIONS SHIFT THE INTEGER
                                     48 *V*                      NUMBER TO GET IT IN THE COMP-1 OR COMP-2
                                     49 *V*                      FORMAT.  THE FORMAT IS AS  FOLLOWS:
                                     50 *V*
                                     51                          COMP-1 :
                                     52                          ---------------------------
                                     53                          ! 0 ! 8-BITS ! 0 ! 8-BITS !
                                     54                          ---------------------------
                                     55
                                     56                          COMP-2
                                     57                          --------------------------------------------------
                                     58                          ! 0 ! 8-BITS ! 0 ! 8-BITS ! 0 ! 8-BITS ! 0 ! 8-BIT
                                     59                          --------------------------------------------------
                                     60 *V*
                                     61 *V*
      000006 000004 7360 00          62        QLS     4
      000007 000001 7350 00          63        ALS     1
      000010 000010 7370 00          64        LLS     8
      000011 000001 7350 00          65        ALS     1
      000012 000010 7370 00          66        LLS     8
      000013 000001 7350 00          67        ALS     1
      000014 000010 7370 00          68        LLS     8
      000015 000001 7350 00          69        ALS     1
      000016 000010 7370 00          70        LLS     8
                                     71 *V*
                                     72 *V*
                                     73 *V*    ANSWER_IN_A_REG -- THE ANSWER IS IN THE A REGISTER.  COMP-1
                                     74 *V*                       IS IN THE LOWER HALF OF THE REG, COMP-2

                                     75 *V*                       USES THE WHOLE REG.  THE ANSWER IS THEN
                                     76 *V*                       PUT IN THE LOCATION PASSED IN.
                                     77 *V*
                                     78 *V*
      000017 600000 7551 00          79        STA     0,,6
      000020 000010 4774 00 010NN    80        LDP7    PR7
      000021 000011 4764 00 010NN    81        LDP6    PR6
      000022 000000 0730 00 010NN    82        LREG    REGS
      000023 000001 7100 11          83        TRA     1,1     RETURN TO CALLING PROCEDURE
                                     84 *
                                     85 *
                                     86 *      STORAGE ALLOCATION
                                     87 *
                                     88 *
                        000000       89        CSECT   COMP12,DATA
                        000000       90        EIGHT
                        000000       91 REGS   BSS     8
                        000010       92 PR7    BSS     1
                        000011       93 PR6    BSS     1
                                     94        END
 GMAP6 VERSION/ASSEMBLY DATES  JNPA NO TTL/2(_00]      JNPB NO TTL/2(_00]      JNPC NO TTL/2(_00]
 THERE WERE    NO  WARNING FLAGS IN THE ABOVE ASSEMBLY

                             OCTAL    SYMBOL   * KIND *      REFERENCES BY ALTER NO. AN
     0   ALIGN    REL   CMP1.2    37   35    37
  6000   CMP1.2   SEC   SECT       7    7
  6001   COMP12   SEC   CSECT     89   89
    11   PR6      REL   COMP12    93   41W   81R   93
    10   PR7      REL   COMP12    92   40W   80R   92
     0   REGS     REL   COMP12    91   39W   82R   91
