VERSION E05

PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:1    
        1        1        /*M*  DDK$GETISR - XDELTA VERSION - RETURNS PTR TO ISR | XDELWSQ | REAL */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        DDK$GETISR: PROC(POINTER);
        9        9    1   DCL POINTER BIT(36) ALIGNED;
       10       10    1   DCL USE$ PTR SYMREF;
       11       11    1   DCL DLS$ PTR SYMREF;
       12       12        %SUB REALXB_OFF=31 ;               /* OFFSET TO BASE OF REALX$ DESC IN XDLS */
       13       13    1   DCL UBIN36(0:0) UBIN BASED;
       14       14             %INCLUDE DD_DESC_R;
       15       64             %INCLUDE DD_SUBS_C;
       16      335             %INCLUDE DD$BASED;
       17     1638             %U$SE;
       18     1646             %INCLUDE XUH_MACRO_C;
       19     1730             %INCLUDE DD_SD_M;
       20     3066             %S_D;
       21     4384        /**/
       22     4385    2        DO CASE( U$SE.TYPE );
       23     4386    2          CASE( USE_MON, USE_USER@, USE_USER# ); /* USE_MON, USE_USER@, USE_USER# */
       24     4387    2             IF S_D.ANLZ
       25     4388    2             THEN POINTER = DESC.ITEM( %LS_DESC );
       26     4389    2             ELSE POINTER = DESC.ITEM( %ISR_DESC );
       27     4390    2          CASE( USE_REAL );                /* USE_REAL */
       28     4391    2             POINTER = DESC.ITEM( %REAL_DESC );
       29     4392    2             DLS$ -> UBIN36( REALXB_OFF/* REALXB_OFF */ ) = U$SE.APT;
              4392                      /* SET IN REAL BASE */
       30     4393    2          CASE( ELSE );
       31     4394    2             POINTER = DESC.ITEM( %VIRT_DESC );
       32     4395    2          END;
       33     4396    1        POINTER = POINTER & '777777770000'O | '000000002000'O;
       34     4397    1        RETURN;
       35     4398    1   END DDK$GETISR;

PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:2    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_DESC_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDK$GETISR.

   Procedure DDK$GETISR requires 40 words for executable code.
   Procedure DDK$GETISR requires 4 words of local(AUTO) storage.

    No errors detected in file DDK$GETISR.:E05TSI    .

PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:3    

 Object Unit name= DDK$GETISR                                 File name= DDK$GETISR.:E05TOU
 UTS= JUL 29 '97 14:02:10.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  DDK$GETISR
    1   Proc  even  none    40     50  DDK$GETISR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  DDK$GETISR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     USE$                                  DLS$                                  DESC
r    S_D$
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:4    


        1        1        /*M*  DDK$GETISR - XDELTA VERSION - RETURNS PTR TO ISR | XDELWSQ | REAL */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        DDK$GETISR: PROC(POINTER);

      8  1 000000   000000 700200 xent  DDK$GETISR   TSX0  ! X66_AUTO_1
         1 000001   000004 000001                    ZERO    4,1

        9        9    1   DCL POINTER BIT(36) ALIGNED;
       10       10    1   DCL USE$ PTR SYMREF;
       11       11    1   DCL DLS$ PTR SYMREF;
       12       12        %SUB REALXB_OFF=31 ;               /* OFFSET TO BASE OF REALX$ DESC IN XDLS */
       13       13    1   DCL UBIN36(0:0) UBIN BASED;
       14       14             %INCLUDE DD_DESC_R;
       15       64             %INCLUDE DD_SUBS_C;
       16      335             %INCLUDE DD$BASED;
       17     1638             %U$SE;
       18     1646             %INCLUDE XUH_MACRO_C;
       19     1730             %INCLUDE DD_SD_M;
       20     3066             %S_D;
       21     4384        /**/
       22     4385    2        DO CASE( U$SE.TYPE );

   4385  1 000002   000000 470400 xsym               LDP0    USE$
         1 000003   000001 235100                    LDA     1,,PR0
         1 000004   000005 115007                    CMPA    5,DL
         1 000005   000007 602005 1                  TNC     s:4385+5,AL
         1 000006   000037 710000 1                  TRA     s:4394
         1 000007   000014 710000 1                  TRA     s:4387
         1 000010   000027 710000 1                  TRA     s:4391
         1 000011   000037 710000 1                  TRA     s:4394
         1 000012   000014 710000 1                  TRA     s:4387
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:5    
         1 000013   000014 710000 1                  TRA     s:4387

       23     4386    2          CASE( USE_MON, USE_USER@, USE_USER# ); /* USE_MON, USE_USER@, USE_USER# */

       24     4387    2             IF S_D.ANLZ

   4387  1 000014   000000 471400 xsym               LDP1    S_D$
         1 000015   104756 234100                    SZN     2542,,PR1
         1 000016   000023 605000 1                  TPL     s:4389

       25     4388    2             THEN POINTER = DESC.ITEM( %LS_DESC );

   4388  1 000017   000053 236000 xsym               LDQ     DESC+43
         1 000020   200003 473500                    LDP3    @POINTER,,AUTO
         1 000021   300000 756100                    STQ     0,,PR3
         1 000022   000042 710000 1                  TRA     s:4396

       26     4389    2             ELSE POINTER = DESC.ITEM( %ISR_DESC );

   4389  1 000023   000007 236000 xsym               LDQ     DESC+7
         1 000024   200003 473500                    LDP3    @POINTER,,AUTO
         1 000025   300000 756100                    STQ     0,,PR3
         1 000026   000042 710000 1                  TRA     s:4396

       27     4390    2          CASE( USE_REAL );                /* USE_REAL */

       28     4391    2             POINTER = DESC.ITEM( %REAL_DESC );

   4391  1 000027   000021 236000 xsym               LDQ     DESC+17
         1 000030   200003 471500                    LDP1    @POINTER,,AUTO
         1 000031   100000 756100                    STQ     0,,PR1

       29     4392    2             DLS$ -> UBIN36( REALXB_OFF/* REALXB_OFF */ ) = U$SE.APT;
              4392                      /* SET IN REAL BASE */

   4392  1 000032   000000 470400 xsym               LDP0    USE$
         1 000033   000000 473400 xsym               LDP3    DLS$
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:6    
         1 000034   000003 235100                    LDA     3,,PR0
         1 000035   300037 755100                    STA     31,,PR3
         1 000036   000042 710000 1                  TRA     s:4396

       30     4393    2          CASE( ELSE );

       31     4394    2             POINTER = DESC.ITEM( %VIRT_DESC );

   4394  1 000037   000023 236000 xsym               LDQ     DESC+19
         1 000040   200003 471500                    LDP1    @POINTER,,AUTO
         1 000041   100000 756100                    STQ     0,,PR1

       32     4395    2          END;

       33     4396    1        POINTER = POINTER & '777777770000'O | '000000002000'O;

   4396  1 000042   200003 470500                    LDP0    @POINTER,,AUTO
         1 000043   000000 236100                    LDQ     0,,PR0
         1 000044   000000 376000 0                  ANQ     0
         1 000045   000001 276000 0                  ORQ     1
         1 000046   000000 756100                    STQ     0,,PR0

       34     4397    1        RETURN;

   4397  1 000047   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   777777 770000   000000 002000                                    ........
       35     4398    1   END DDK$GETISR;

PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:7    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD_DESC_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDK$GETISR.

   Procedure DDK$GETISR requires 40 words for executable code.
   Procedure DDK$GETISR requires 4 words of local(AUTO) storage.

    No errors detected in file DDK$GETISR.:E05TSI    .
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:8    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:9    
          MINI XREF LISTING

DESC.ITEM
        63**DCL      4388>>ASSIGN   4389>>ASSIGN   4391>>ASSIGN   4394>>ASSIGN
DLS$
        11**DCL      4392>>ASSIGN
POINTER
         9**DCL         8--PROC     4388<<ASSIGN   4389<<ASSIGN   4391<<ASSIGN   4394<<ASSIGN   4396<<ASSIGN
      4396>>ASSIGN
S_D.ANLZ
      3718**DCL      4387>>IF
S_D.CURRENT_CHANNEL
      4018**DCL      4020--REDEF
S_D.DEBUGA
      3170**DCL      3172--REDEF
S_D.EIS
      4128**DCL      4157--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      4061**DCL      4062--REDEF    4076--REDEF
S_D.JDE
      3675**DCL      3676--REDEF
S_D.L$.VALUE
      3228**DCL      3234--REDEF    3242--REDEF    3245--REDEF    3248--REDEF    3251--REDEF
S_D.L$.VALUE.L
      3229**DCL      3230--REDEF    3231--REDEF
S_D.L6_MESSAGE_BUF
      4082**DCL      4084--REDEF
S_D.OUTPUT
      4048**DCL      4050--REDEF
S_D.REMOTE_MSG.FNCC
      4067**DCL      4068--REDEF
S_D.REMOTE_MSG.STXC
      4063**DCL      4064--REDEF
S_D.REMOTE_MSG.SUBFNCC
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:10   
      4071**DCL      4072--REDEF
S_D.SV
      3127**DCL      3148--REDEF
S_D$
      4379**DCL      3075--IMP-PTR  4387>>IF
U$SE.APT
      1643**DCL      4392>>ASSIGN
U$SE.TYPE
      1641**DCL      4385>>DOCASE
UBIN36
        13**DCL      4392<<ASSIGN
USE$
        10**DCL      1639--IMP-PTR  4385>>DOCASE   4392>>ASSIGN
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:11   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDK$GETISR File=DDK$GETISR.:E05TSI                            TUE 07/29/97 14:02 Page:12   
              MINI UREF LISTING

DDK$GETISR       8**PROC
