VERSION A06

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:1    
        1        1        /*M* Z8IL Annotator Listing Routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*
       10       10
       11       11                  NAME: Z8IL
       12       12               PURPOSE: Generate all listings associated with the compile,
       13       13                         including source and generated code listings, with
       14       14                         compilation errors identified.  Errors will be printed
       15       15                         on DO file if requested.
       16       16        */
       17       17
       18       18        /*=====================*/
       19       19          Z8IL$PRODUCE_LISTINGS: PROC;
       20       20        /*=====================*/
       21       21        /*D*
       22       22               NAME: Z8IL$PRODUCE_LISTINGS
       23       23        DESCRIPTION: Generate the source listing for the compilation, as well
       24       24                       as the generated object code listing.
       25       25        */
       26       26
       27       27        % EQU PHASE = 5;
       28       28        %INCLUDE Z8A_DEFC;
       29       96        %INCLUDE Z8A_SUPP_MAC;
       30     2496        %INCLUDE Z9A_FLAGS;
       31     2510        %IF GCOS;
       36     2515        %ENDIF;
       37     2516        % INCLUDE Z8A_COMCOM;
       38     3166        % INCLUDE Z9I_PREPROC;
       39     3186        %SET INITIALIZE = '1'B;
       40     3187        % INCLUDE Z8I_LISTING;
       41     3275        %SET INITIALIZE = '0'B;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:2    
       42     3276        % INCLUDE Z8E_BUFFERS;
       43     3466        % INCLUDE Z8A_ERR;
       44     3535        %INCLUDE Z8A_XREF;
       45     3607        %INCLUDE Z8A_ST;
       46     7266        %INCLUDE Z8A_LTS;
       47     9343        %INCLUDE Z8A_DNT;
       48     9564        %INCLUDE Z8A_QLT;
       49     9670
       50     9671               /* External Declarations */
       51     9672
       52     9673    1   DCL Z8IL$FILTER_EXPANDED_S_L ENTRY ALTRET;
       53     9674    1   DCL Z8AA$PREPARE_EXPANDED_SOURCE  ENTRY ALTRET;
       54     9675    1   DCL Z9IL$OUTPUT_TO_LO             ENTRY(2);
       55     9676        %IF CP6;
       56     9677    1   DCL Z9IL$OUTPUT_TO_LO_PAGE        ENTRY(2);
       57     9678        %ENDIF;
       58     9679    1   DCL Z9IL$OUTPUT_TO_DO             ENTRY(3);
       59     9680    1   DCL Z9IL$CREATE_HEADING           ENTRY;
       60     9681    1   DCL Z8IU$BLANK_ZERO               ENTRY(1);
       61     9682        %IF GCOS;
       63     9684        %ENDIF;
       64     9685        %IF CP6;
       65     9686    1   DCL Z8IL$BUILD_LISTING_SOURCE_LINE ENTRY;
       66     9687        %ENDIF;
       67     9688    1   DCL Z9IL$PRINT_LO                 ENTRY;
       68     9689        %IF CP6;
       69     9690    1   DCL Z9IL$PRINT_LO_WITH_UNGMAP     ENTRY;
       70     9691        %ENDIF;
       71     9692        %IF GCOS;
       75     9696        %ENDIF;
       76     9697    1   DCL Z8IL$PRINT_ERROR              ENTRY(2);
       77     9698
       78     9699
       79     9700    1   DCL COMP_SUMMARY_COUNT (0:5) SBIN WORD EXT INIT(0*6);
       80     9701    1   DCL INDICATOR_AREA           SBIN WORD EXT INIT (6) ;
       81     9702    1   DCL AREA_A_START             SBIN WORD EXT INIT (7) ;
       82     9703
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:3    
       83     9704    1   DCL ERRORS_TO_LO_REQUIRED BIT (1); /* Errors should be written
       84     9705                                               to LO even though LSTIN is not
       85     9706                                               requested. */
       86     9707
       87     9708        %IF CP6;
       88     9709    1   DCL DO_FLAG            BIT(1);
       89     9710        %ENDIF;
       90     9711    1   DCL 1 INPUT_BUFFER,
       91     9712               %BUFFER_INFO;
       92     9742    1         2 SOURCE_LINE CHAR(%MAX_INPUT_LINE_LENGTH);
       93     9743    1   DCL STAR_LINE (0:%(MAX_LISTING_LINE_LENGTH-1)) CHAR (1) CONSTANT
       94     9744    1         INIT ('*'*0);
       95     9745        %IF GCOS;
      106     9756        %ENDIF;
      107     9757        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:4    
      108     9758    1   INITIALIZE_LO: PROC;     /* in Z8IL$PRODUCE_LISTINGS */
      109     9759
      110     9760        /*I*
      111     9761               NAME: INITIALIZE_LO
      112     9762        DESCRIPTION:
      113     9763                  Initialize everything necessary to begin printing
      114     9764                  the listing output.
      115     9765               */
      116     9766
      117     9767
      118     9768
      119     9769    2       LISTING_PAGE_NUMBER    = 0;
      120     9770            %NEW_PAGE;                                  /*#35040*/
      121     9774
      122     9775    2   END INITIALIZE_LO;
      123     9776        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:5    
      124     9777    1   PRINT_LISTING_SOURCE_LINE: PROC (OUTPUT_PROC);  /* in Z8IL$PRODUCE_LISTINGS */
      125     9778
      126     9779    2          DCL OUTPUT_PROC EPTR;
      127     9780
      128     9781        /*I*
      129     9782               NAME: PRINT_LISTING_SOURCE_LINE
      130     9783        DESCRIPTION: Print the line that has been built with source information
      131     9784                       on the appropriate listing.
      132     9785        */
      133     9786
      134     9787    2   IF  COMCOM.OB.FORMAT = FALSE
      135     9788    2   AND PLINE_LEN > 80 + 8 + LENGTHC (FILL_BUFFER.ESN) THEN
      136     9789    2     CALL OUTPUT_PROC(PLINE_PTR$, 80 + 8 + LENGTHC (FILL_BUFFER.ESN)) ;
      137     9790    2   ELSE
      138     9791    2     CALL OUTPUT_PROC(PLINE_PTR$, PLINE_LEN);
      139     9792
      140     9793    2   END PRINT_LISTING_SOURCE_LINE;
      141     9794        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:6    
      142     9795    1   CHECK_FOR_SLEW : PROC;
      143     9796
      144     9797    2     IF SUBSTR(PLINE_REDEF_FIELDS.LINE, INDICATOR_AREA, 1) = '/'
      145     9798    2         OR SUBSTR(PLINE_REDEF_FIELDS.LINE, INDICATOR_AREA, 6) = '*EJECT' THEN
      146     9799              /* 'EJECT', upper case only; CBL68 compatibility feature, and CBL68
      147     9800                 is BCD only, implicitly always upper case. */
      148     9801    2       CALL INITIALIZE_LO;                                    /*#37329*/
      149     9802
      150     9803    2   END CHECK_FOR_SLEW;
      151     9804        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:7    
      152     9805    1   WRITE_COMP_SUMMARY: PROC (OUTPUT_PROC);   /* in Z8IL$PRODUCE_LISTINGS */
      153     9806
      154     9807    2          DCL OUTPUT_PROC EPTR;
      155     9808
      156     9809        /*I*
      157     9810               NAME: WRITE_COMP_SUMMARY
      158     9811        DESCRIPTION:
      159     9812                  Write the summary information for the compilation
      160     9813                  as the last thing on the source listing, for the LO or the DO files.
      161     9814               */
      162     9815
      163     9816    2   DCL MSG_THERE CHAR(10) CONSTANT INIT('There were');
      164     9817    2   DCL 1 COMP_SUMMARY_MSG ,
      165     9818    2         2 COUNT CHAR(6),
      166     9819    2         2 BLK   CHAR(1),
      167     9820    2         2 TEXT  CHAR(28);
      168     9821
      169     9822    2   DCL COMP_SUMMARY_MSG_TEXT(0:5) CHAR(28) CONSTANT INIT
      170     9823    2                            ('Source input lines.',
      171     9824    2                             'Informational messages.',
      172     9825    2                             'Warning messages.',
      173     9826    2                             'Level check messages.',
      174     9827    2                             'Fatal error messages.',
      175     9828    2                             'Compile termination message.');
      176     9829    2   DCL I SBIN WORD;
      177     9830
      178     9831        %IF CP6;
      179     9832    2   IF (COMP_SUMMARY_COUNT(1) > 0)
      180     9833    2         OR (COMP_SUMMARY_COUNT(2) > 0)
      181     9834    2         OR (COMP_SUMMARY_COUNT(3) > 0)
      182     9835    2         OR (COMP_SUMMARY_COUNT(4) > 0)
      183     9836    2         OR (COMP_SUMMARY_COUNT(5) > 0) THEN
      184     9837    2     DO_FLAG = %FALSE;
      185     9838
      186     9839    2   IF NOT DO_FLAG   THEN
      187     9840    3     DO;
      188     9841        %ENDIF;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:8    
      189     9842    3       CALL OUTPUT_PROC (ADDR(BLANK), LENGTHC(BLANK));
      190     9843    3       CALL OUTPUT_PROC (ADDR(MSG_THERE), LENGTHC(MSG_THERE));
      191     9844        %IF CP6;
      192     9845    3     END;
      193     9846    2   ELSE
      194     9847    3     DO;
      195     9848    3       CALL OUTPUT_PROC( ADDR(BLANK), LENGTHC(BLANK), %TRUE );
      196     9849    3       CALL OUTPUT_PROC( ADDR(MSG_THERE), LENGTHC(MSG_THERE), %TRUE );
      197     9850    3     END;
      198     9851        %ENDIF;
      199     9852
      200     9853
      201     9854    3   DO I = 0 TO 5;
      202     9855    3     IF COMP_SUMMARY_COUNT(I) ~= 0      THEN
      203     9856    4       DO;
      204     9857    4         CALL BINCHAR (COMP_SUMMARY_MSG.COUNT, COMP_SUMMARY_COUNT(I));
      205     9858    4         COMP_SUMMARY_MSG.BLK = ' ';
      206     9859    4         COMP_SUMMARY_MSG.TEXT = COMP_SUMMARY_MSG_TEXT(I);
      207     9860    4         CALL Z8IU$BLANK_ZERO (ADDR(COMP_SUMMARY_MSG));
      208     9861
      209     9862              %IF CP6;
      210     9863    4         IF NOT DO_FLAG  THEN
      211     9864              %ENDIF;
      212     9865    4           CALL OUTPUT_PROC (ADDR(COMP_SUMMARY_MSG),
      213     9866    4                             LENGTHC(COMP_SUMMARY_MSG));
      214     9867              %IF CP6;
      215     9868    4         ELSE
      216     9869    4           CALL OUTPUT_PROC( ADDR(COMP_SUMMARY_MSG),
      217     9870    4                             LENGTHC(COMP_SUMMARY_MSG),
      218     9871    4                             %TRUE );
      219     9872              %ENDIF;
      220     9873    4       END; /* DO */
      221     9874    3   END; /* DO */
      222     9875
      223     9876    2   END WRITE_COMP_SUMMARY;
      224     9877        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:9    
      225     9878    1   PRODUCE_LSTIN: PROC;     /* in Z8IL$PRODUCE_LISTINGS */
      226     9879
      227     9880        /*I*
      228     9881               NAME: PRODUCE_LSTIN
      229     9882        DESCRIPTION:
      230     9883                  Write the compilation source listing on the LO output
      231     9884                  file.
      232     9885               */
      233     9886
      234     9887    2   DCL INST_COL SBIN; /* Column number in installation name */
      235     9888    2   DCL LAST_LINE_FROM_COPY BOOLEAN;
      236     9889    2   DCL START_COPY CHAR (0) CONSTANT INIT (
              9889            '           ###### START OF COPIED TEXT ######');
      237     9890    2   DCL END_COPY CHAR (0) CONSTANT INIT ('           ###### END OF COPIED TEXT ######');
      238     9891
      239     9892        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:10   
      240     9893    2   PRINT_ERROR : PROC;
      241     9894
      242     9895    3   IF (COMCOM.OB.LISTIN OR ERRORS_TO_LO_REQUIRED) THEN
      243     9896    3     IF COMCOM.DO_REQ THEN
      244     9897    3       CALL Z8IL$PRINT_ERROR(ENTADDR(Z9IL$OUTPUT_TO_LO),
      245     9898    3                             ENTADDR(Z9IL$OUTPUT_TO_DO));
      246     9899    3     ELSE
      247     9900    3       CALL Z8IL$PRINT_ERROR(ENTADDR(Z9IL$OUTPUT_TO_LO));
      248     9901    3   ELSE
      249     9902    3     IF COMCOM.DO_REQ THEN
      250     9903    3       CALL Z8IL$PRINT_ERROR(ENTADDR(Z9IL$OUTPUT_TO_DO));
      251     9904
      252     9905    3   END PRINT_ERROR;
      253     9906
      254     9907        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:11   
      255     9908        /*************************************************/
      256     9909        /*        P R O C E D U R E _ L I S T I N        */
      257     9910        /*************************************************/
      258     9911
      259     9912    3   IF COMCOM.OB.FORMAT THEN DO ; /* Free Format Option Subset */
      260     9913    3     INDICATOR_AREA = 0 ;        /* Column 1 */
      261     9914    3     AREA_A_START   = 1 ;        /* Column 2 */
      262     9915    3   END ;                         /* Free Format */
      263     9916
      264     9917    2   COMP_SUMMARY_COUNT(0) = COMCOM.LINES.SOURCE;
      265     9918    2   LAST_LINE_FROM_COPY = FALSE;
      266     9919    2   ERR$ = ERR_HEAD;
      267     9920    2   IF (ERR$ ~= ADDR(NIL))
      268     9921    2                  AND (NOT COMCOM.OB.LISTIN)
      269     9922    2                  AND (NOT COMCOM.OB.LISTOUT)
      270     9923                       %IF CP6;
      271     9924    2                  AND (NOT COMCOM.OB.LO)
      272     9925                       %ENDIF;
      273     9926    2                  AND (NOT COMCOM.DO_REQ) THEN
      274     9927    2     ERRORS_TO_LO_REQUIRED = TRUE;
      275     9928    2   ELSE
      276     9929    2     ERRORS_TO_LO_REQUIRED = FALSE;
      277     9930    2   IF COMCOM.OB.LISTIN
      278     9931    2         OR COMCOM.DO_REQ
      279     9932    2         OR ERRORS_TO_LO_REQUIRED THEN
      280     9933
      281     9934    3     DO;    /* Process source & errors */
      282     9935
      283     9936    3       IF COMCOM.OB.LISTIN OR (ERR$~= ADDR(NIL)) THEN
      284     9937    4         DO;
      285     9938    4           CALL Z8AA$PREPARE_EXPANDED_SOURCE ALTRET(PESERR); PESERR:
      286     9939    4         END;
      287     9940
      288     9941    3       IF COMCOM.OB.LISTIN OR ERRORS_TO_LO_REQUIRED THEN
      289     9942    3         CALL INITIALIZE_LO;
      290     9943
      291     9944    3       IF COMCOM.OB.LISTIN THEN
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:12   
      292     9945    4         IF COMCOM.INSTALLATION$ ~= ADDR (NIL) THEN DO;
      293     9946    4           PLINE_LEN = %MAX_LISTING_LINE_LENGTH;
      294     9947    4           CALL Z9IL$OUTPUT_TO_LO (ADDR (STAR_LINE), PLINE_LEN);
      295     9948    4           CALL INSERT (PLINE, 0, 1, '*');
      296     9949    4           CALL INSERT (PLINE, %(MAX_LISTING_LINE_LENGTH - 1),, '*');
      297     9950    4           INST_COL = 1;
      298     9951    5           DO WHILE INST_COL + %(MAX_LISTING_LINE_LENGTH - 5) <
      299     9952    5               COMCOM.INSTALLATION$ -> DNT.TEXT.LENGTH;
      300     9953    5             CALL INSERT (PLINE, 2, %(MAX_LISTING_LINE_LENGTH - 4),
      301     9954    5                 SUBSTR (COMCOM.INSTALLATION$ -> DNT.TEXT.NAME, INST_COL,
      302     9955    5                 %(MAX_LISTING_LINE_LENGTH - 6)));
      303     9956    5             CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));
      304     9957    5             INST_COL = INST_COL + %(MAX_LISTING_LINE_LENGTH - 6);
      305     9958    5           END;
      306     9959    4           CALL INSERT (PLINE, 2, %(MAX_LISTING_LINE_LENGTH - 6),
      307     9960    4               SUBSTR (COMCOM.INSTALLATION$ -> DNT.TEXT.NAME, INST_COL,
      308     9961    4               COMCOM.INSTALLATION$ -> DNT.TEXT.LENGTH - INST_COL - 1));
      309     9962    4           CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));
      310     9963    4           CALL Z9IL$OUTPUT_TO_LO (ADDR (STAR_LINE), PLINE_LEN);
      311     9964    4           PLINE = ' ';
      312     9965
      313     9966    4           LISTING_LINES_ON_PAGE = MAX_LINES_PER_PAGE;
      314     9967    4         END;
      315     9968
      316     9969               /* Special case errors preceding first line of source
      317     9970                  file. */
      318     9971
      319     9972    3       IF ERR$ ~= ADDR(NIL) THEN
      320     9973    3         IF ERR$->ERR.LINE <= 0 THEN
      321     9974    3           CALL PRINT_ERROR;
      322     9975
      323     9976    3       IF (COMCOM.OB.LISTIN OR (ERR$~=ADDR(NIL))) THEN
      324     9977    4       DO WHILE('1'B);
      325     9978    4         CALL Z8IL$FILTER_EXPANDED_S_L ALTRET(NO_EXP_SRC);
      326     9979    4         IF COMCOM.OB.LISTIN THEN
      327     9980    5           DO;
      328     9981                  %IF GCOS;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:13   
      330     9983                  %ENDIF;
      331     9984                  %IF CP6;
      332     9985    5             CALL Z8IL$BUILD_LISTING_SOURCE_LINE;
      333     9986                  %ENDIF;
      334     9987    5             CALL CHECK_FOR_SLEW;
      335     9988    5             IF FILL_BUFFER.LINE_TYPE.COPY_LINE AND NOT LAST_LINE_FROM_COPY THEN
      336     9989    6               DO;
      337     9990    6                 CALL Z9IL$OUTPUT_TO_LO (ADDR (START_COPY), LENGTHC (START_COPY));
      338     9991    6                 LAST_LINE_FROM_COPY = TRUE;
      339     9992    6               END;
      340     9993    5             ELSE IF NOT FILL_BUFFER.LINE_TYPE.COPY_LINE AND LAST_LINE_FROM_COPY THEN
      341     9994    6               DO;
      342     9995    6                 CALL Z9IL$OUTPUT_TO_LO (ADDR (END_COPY), LENGTHC (END_COPY));
      343     9996    6                 LAST_LINE_FROM_COPY = FALSE;
      344     9997    6               END;
      345     9998    5             CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));
      346     9999    5           END;
      347    10000    4         ELSE
      348    10001    4           IF ERR$ = ADDR(NIL) THEN
      349    10002    4             GOTO NO_EXP_SRC;
      350    10003
      351    10004              /* Check for an error */
      352    10005
      353    10006    4         IF ERR$ ~= ADDR(NIL) THEN
      354    10007    4           IF ERR$ -> ERR.LINE <= FILL_BUFFER.ISN THEN
      355    10008
      356    10009    5             DO;  /* We have an error on this line */
      357    10010
      358    10011    5               IF COMCOM.OB.LISTIN THEN
      359    10012    6                 DO;
      360    10013    6                   IF COMCOM.DO_REQ THEN
      361    10014    6                     CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_DO));
      362    10015    6                 END;
      363    10016    5               ELSE
      364    10017    5                 IF COMCOM.DO_REQ OR ERRORS_TO_LO_REQUIRED THEN
      365    10018    6                   DO;
      366    10019                          %IF GCOS;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:14   
      368    10021                          %ENDIF;
      369    10022                          %IF CP6;
      370    10023    6                     CALL Z8IL$BUILD_LISTING_SOURCE_LINE;
      371    10024                          %ENDIF;
      372    10025    6                     IF COMCOM.DO_REQ THEN
      373    10026    6                       CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_DO));
      374    10027    6                     IF ERRORS_TO_LO_REQUIRED THEN
      375    10028    6                       CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));
      376    10029    6                   END;
      377    10030    5               CALL PRINT_ERROR;
      378    10031    5             END;
      379    10032    4       END; /* while */
      380    10033    3      NO_EXP_SRC:
      381    10034    3       IF LAST_LINE_FROM_COPY THEN
      382    10035    3         CALL Z9IL$OUTPUT_TO_LO (ADDR (END_COPY), LENGTHC (END_COPY));
      383    10036
      384    10037            /* Clear any leftover errors */
      385    10038
      386    10039    4       DO WHILE (ERR$ ~= ADDR(NIL));
      387    10040    4         FILL_BUFFER.ISN = 9999999;
      388    10041    4         CALL PRINT_ERROR;
      389    10042    4       END;
      390    10043
      391    10044            /*  Write summary statistics */
      392    10045
      393    10046            %IF CP6;
      394    10047    3       DO_FLAG = FALSE;
      395    10048            %ENDIF;
      396    10049    3       IF COMCOM.OB.LISTIN OR ERRORS_TO_LO_REQUIRED THEN
      397    10050    3         CALL WRITE_COMP_SUMMARY (ENTADDR(Z9IL$OUTPUT_TO_LO));
      398    10051            %IF CP6;
      399    10052    3       DO_FLAG = TRUE;
      400    10053            %ENDIF;
      401    10054    3       IF COMCOM.DO_REQ THEN
      402    10055    3         CALL WRITE_COMP_SUMMARY (ENTADDR(Z9IL$OUTPUT_TO_DO));
      403    10056
      404    10057    3     END;  /* if */
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:15   
      405    10058
      406    10059    2   END PRODUCE_LSTIN;
      407    10060        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:16   
      408    10061    1   PRODUCE_LSTOU: PROC;     /* in Z8IL$PRODUCE_LISTINGS */
      409    10062
      410    10063        /*I*
      411    10064               NAME: PRODUCE_LSTOU
      412    10065        DESCRIPTION:
      413    10066                       Write the compilation source listing with generated code
      414    10067                           on the output file.
      415    10068               */
      416    10069
      417    10070    2   IF COMCOM.OB.LISTOUT AND COMCOM.OB.DECK THEN
      418    10071    2       CALL Z9IL$PRINT_LO;
      419    10072
      420    10073        %IF CP6;
      421    10074    2   IF COMCOM.OB.LO AND COMCOM.OB.DECK THEN
      422    10075    3     DO;
      423    10076    3       CALL INITIALIZE_LO;
      424    10077    3       CALL Z9IL$PRINT_LO_WITH_UNGMAP;
      425    10078    3     END;
      426    10079        %ENDIF;
      427    10080
      428    10081    2   END PRODUCE_LSTOU;
      429    10082        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:17   
      430    10083    1   PRODUCE_XREF: PROC;     /* in Z8IL$PRODUCE_LISTINGS */
      431    10084
      432    10085        /*I*
      433    10086               NAME: PRODUCE_XREF
      434    10087        DESCRIPTION:
      435    10088                   Write the cross reference information on the output file.
      436    10089               */
      437    10090
      438    10091        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:18   
      439    10092
      440    10093    2   DCL XREF_SYM$ PTR;  /* List of symbols included in XREF */
      441    10094    2       SET_SYM_LIST_NIL : PROC;            /*  OF PRODUCE_XREF */
      442    10095
      443    10096    3         XREF_SYM$ = ADDR(NIL);
      444    10097              %TOP_ST;
      445    10102    4         DO WHILE ST$ ~= ADDR(NIL);
      446    10103    4           ST$ -> ST.X_SORT_SYM$ = ADDR(NIL);
      447    10104    4           ST$ -> ST.X_REF_LIST$ = ADDR(NIL);
      448    10105                %STEP_ST;
      449    10115    4         END;
      450    10116
      451    10117    3       END SET_SYM_LIST_NIL;
      452    10118         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:19   
      453    10119    2     PROCESS_XREF_LIST: PROC;              /*  OF PRODUCE_XREF */
      454    10120
      455    10121    3         ADD_SYM_TO_XREF: PROC(SYM$);      /* OF PROCESS_XREF_LIST  OF PRODUCE_XREF */
      456    10122
      457    10123    4           DCL SYM$ PTR;   /* TO SYMBOL TABLE */
      458    10124    4           DCL 1 BPTR BASED ALIGNED,
      459    10125    4                 2 P PTR;
      460    10126    4           DCL LPTR PTR;
      461    10127    4           DCL LINKED BIT(1);
      462    10128
      463    10129    4           LPTR = ADDR(XREF_SYM$);
      464    10130    4           LINKED = '0'B;
      465    10131
      466    10132    5           DO UNTIL LINKED;
      467    10133    5             IF LPTR -> BPTR.P = ADDR(NIL) THEN
      468    10134    6               DO;
      469    10135    6                 LPTR -> BPTR.P = SYM$;
      470    10136    6                 SYM$ -> ST.X_SORT_SYM$ = ADDR(NIL);
      471    10137    6                 LINKED = '1'B;
      472    10138    6               END;
      473    10139    5             ELSE
      474    10140    5               IF LPTR -> BPTR.P -> ST.DNT$ -> DNT.TEXT.NAME >
      475    10141    5                  SYM$ -> ST.DNT$ -> DNT.TEXT.NAME THEN
      476    10142    6                 DO;
      477    10143    6                   SYM$ -> ST.X_SORT_SYM$ = LPTR -> BPTR.P;
      478    10144    6                   LPTR -> BPTR.P = SYM$;
      479    10145    6                   LINKED = '1'B;
      480    10146    6                 END;
      481    10147    5               ELSE
      482    10148    5                 LPTR = ADDR(LPTR -> BPTR.P -> ST.X_SORT_SYM$);
      483    10149    5           END; /* DO UNTIL */
      484    10150
      485    10151    4         END ADD_SYM_TO_XREF;
      486    10152        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:20   
      487    10153    3         ADD_REF_TO_XREF : PROC;           /* OF PROCESS_XREF  OF PRODUCE_XREF */
      488    10154
      489    10155    4           DCL 1 BPTR BASED ALIGNED,
      490    10156    4                 2 P PTR;
      491    10157    4           DCL LPTR PTR;
      492    10158    4           DCL LINKED BIT(1);
      493    10159
      494    10160    4           LPTR = ADDR(XREF$ -> XREF.SYMPTR -> ST.X_REF_LIST$);
      495    10161    4           LINKED = '0'B;
      496    10162
      497    10163    5           DO UNTIL LINKED;
      498    10164    5             IF LPTR -> BPTR.P = ADDR(NIL) THEN
      499    10165    6               DO;
      500    10166    6                 LPTR -> BPTR.P = XREF$;
      501    10167    6                 XREF$ -> XREF.SYMPTR = ADDR(NIL);
      502    10168    6                 LINKED = '1'B;
      503    10169    6               END;
      504    10170    5             ELSE
      505    10171    5               IF LPTR -> BPTR.P -> XREF.XISN >
      506    10172    5                  XREF$ -> XREF.XISN THEN
      507    10173    6                 DO;
      508    10174    6                   XREF$ -> XREF.SYMPTR = LPTR -> BPTR.P;
      509    10175    6                   LPTR -> BPTR.P = XREF$;
      510    10176    6                   LINKED = '1'B;
      511    10177    6                 END;
      512    10178    5               ELSE
      513    10179    5                 LPTR = ADDR(LPTR -> BPTR.P -> XREF.SYMPTR);
      514    10180    5           END; /* DO UNTIL */
      515    10181
      516    10182    4         END ADD_REF_TO_XREF;
      517    10183         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:21   
      518    10184              /* Main body of PROCESS_XREF_LIST */
      519    10185
      520    10186              %TOP_XREF;
      521    10189    4         DO WHILE XREF$ ~= ADDR(NIL);
      522    10190    4           IF XREF$ -> XREF.SYMPTR -> ST.X_SORT_SYM$ = ADDR(NIL) THEN
      523    10191    4             CALL ADD_SYM_TO_XREF(XREF$ -> XREF.SYMPTR);
      524    10192    4           CALL ADD_REF_TO_XREF;
      525    10193                %STEP_XREF;
      526    10203    4         END;  /* DO WHILE */
      527    10204
      528    10205    3       END PROCESS_XREF_LIST;
      529    10206         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:22   
      530    10207    2     PRINT_XREF_HEADING : PROC;  /* OF PRODUCE_XREF */
      531    10208
      532    10209
      533    10210    3       DCL 1 XREF_SUB_HEADING CONSTANT,
      534    10211    3             2 TEXT   CHAR(0) INIT('        *** Cross Reference Listing ***');
      535    10212
      536    10213    3       DCL 1 XHEAD CONSTANT,
      537    10214    3             2 BLKLIN CHAR(0) INIT(' '),
      538    10215    3             2 LINE1   CHAR(0) INIT('** Denotes line where the symbol is declared.');
      539    10216
      540    10217
      541    10218            %SETUP_SUB_HEADING( L0 = XREF_SUB_HEADING, L1 = BLANK );
      542    10228    3       CALL Z9IL$OUTPUT_TO_LO(ADDR(XHEAD.BLKLIN),LENGTHC(XHEAD.BLKLIN));
      543    10229    3       CALL Z9IL$OUTPUT_TO_LO(ADDR(XHEAD.LINE1),LENGTHC(XHEAD.LINE1));
      544    10230    3       CALL Z9IL$OUTPUT_TO_LO(ADDR(XHEAD.BLKLIN),LENGTHC(XHEAD.BLKLIN));
      545    10231
      546    10232    3     END PRINT_XREF_HEADING;
      547    10233        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:23   
      548    10234    2     PRINT_XREF : PROC;  /* OF PRODUCE_XREF */
      549    10235
      550    10236    3       DCL SYM$ PTR;
      551    10237    3       DCL XR$ PTR;
      552    10238    3       DCL LINE CHAR(%MAX_LISTING_LINE_LENGTH);
      553    10239    3       DCL LINELEN SBIN;
      554    10240
      555    10241            %MACRO FLUSH;
      556    10242              DO;
      557    10243                IF LINELEN > 0 THEN
      558    10244                  DO;
      559    10245                    CALL Z9IL$OUTPUT_TO_LO(ADDR(LINE),LINELEN);
      560    10246                    LINELEN = 0;
      561    10247                  END;
      562    10248              END;
      563    10249            %MEND;
      564    10250
      565    10251            %MACRO OUT_STR(S="' '");
      566    10252                CALL OUT_STR(S,LENGTHC(S));
      567    10253            %MEND;
      568    10254
      569    10255        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:24   
      570    10256
      571    10257    3       OUT_STR : PROC(STR, LEN);
      572    10258
      573    10259    4         DCL LEN SBIN;
      574    10260    4         DCL STR CHAR(LEN);
      575    10261
      576    10262    4         IF LEN + LINELEN > %MAX_LISTING_LINE_LENGTH THEN
      577    10263    5           DO;
      578    10264                  %FLUSH;
      579    10273    5             CALL INSERT(LINE,0,%LINE_OVERFLOW_INDENT,'                    ');
      580    10274    5             LINELEN = %LINE_OVERFLOW_INDENT;
      581    10275    5           END;
      582    10276    4         IF LINELEN + LEN > %MAX_LISTING_LINE_LENGTH THEN
      583    10277    5           DO;
      584    10278    5             CALL Z9IL$OUTPUT_TO_LO(ADDR(STR),LEN);
      585    10279    5             LINELEN = 0;
      586    10280    5           END;
      587    10281    4         ELSE
      588    10282    5           DO;
      589    10283    5             CALL INSERT(LINE,LINELEN,LEN,STR);
      590    10284    5             LINELEN = LINELEN + LEN;
      591    10285    5           END;
      592    10286
      593    10287    4       END OUT_STR;
      594    10288
      595    10289        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:25   
      596    10290    3       OUT_DEC : PROC(NUM);
      597    10291
      598    10292    4         DCL NUM SBIN;
      599    10293    4         DCL DISP SBIN;
      600    10294    4         DCL OSTR CHAR(6);
      601    10295
      602    10296    4         CALL BINCHAR(OSTR, NUM);
      603    10297    4         DISP = 0;
      604    10298    5         DO WHILE ( SUBSTR(OSTR,DISP,1) = '0' );
      605    10299    5           SUBSTR( OSTR, DISP, 1 ) = ' ';                      /*#35510*/
      606    10300    5           DISP = DISP + 1;
      607    10301    5         END;
      608    10302    4         CALL OUT_STR( OSTR, 6 );
      609    10303
      610    10304    4       END OUT_DEC;
      611    10305        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:26   
      612    10306    3       PRINT_THIS_REF : PROC;
      613    10307
      614    10308    4         CALL OUT_DEC(BINBIT(XR$ -> XREF.XISN,36));
      615    10309    4         IF  XR$-> XREF.ID = %XREF_DCL THEN
      616    10310                %OUT_STR (S="'**'");
      617    10313    4         ELSE
      618    10314                %OUT_STR (S="'  '");
      619    10317
      620    10318    4       END PRINT_THIS_REF;
      621    10319        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:27   
      622    10320    3       PRINT_SYMBOL : PROC;  /* OF PRINT_XREF OF PRODUCE_XREF */
      623    10321
      624    10322    4         ST$ = SYM$;
      625    10323    5         DO WHILE ST$ ~= ADDR(NIL);
      626    10324
      627    10325    5           CALL OUT_STR(ST$ -> ST.DNT$ -> DNT.TEXT.NAME,
      628    10326    5                    BINBIT(ST$ -> ST.DNT$ -> DNT.TEXT.LENGTH,36));
      629    10327
      630    10328    6           DO CASE ST$ -> ST.ID;
      631    10329
      632    10330    6             CASE (%SYMREF_, %SYMDEF_, %SEGMENT, %SECTION, %CONST, %ALPHABET);
      633    10331
      634    10332    6                 ST$ = ADDR(NIL);
      635    10333
      636    10334    6             CASE (%PARA);
      637    10335
      638    10336    6                 IF ST$ -> PARA.DNT$ -> DNT.ST$ -> ST.NEXT ~= ADDR(NIL) AND
      639    10337    6                    ST$ -> PARA.SECTION$ ~= ADDR(NIL) THEN
      640    10338    7                   DO;
      641    10339                          %OUT_STR(S="' of '");
      642    10342    7                     ST$ = ST$ -> PARA.SECTION$;
      643    10343    7                   END;
      644    10344    6                 ELSE
      645    10345    6                   ST$ = ADDR(NIL);
      646    10346
      647    10347    6             CASE (ELSE);
      648    10348    6               IF  ST$-> ST.DNT$-> DNT.ST$ = ADDR(NIL) THEN       /*#28017*/
      649    10349    7                 DO;
      650    10350    7                   IF ST$ -> VARIABLE.QLT$ -> QLT.FATHER ~= ADDR(NIL)  THEN
      651    10351    8                     DO;
      652    10352                            %OUT_STR(S="' of '");
      653    10355    8                       ST$ = VARIABLE.QLT$ -> QLT.FATHER -> QLT.ST$;
      654    10356    8                     END;
      655    10357    7                   ELSE
      656    10358    7                      ST$ = ADDR(NIL);
      657    10359    7                 END;
      658    10360    6               ELSE
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:28   
      659    10361    6                 IF ST$-> ST.DNT$-> DNT.ST$-> ST.NEXT ~= ADDR(NIL) /*#24623*/
      660    10362    6                 AND ST$-> VARIABLE.QLT$-> QLT.FATHER  ~= ADDR(NIL) THEN
      661    10363    7                   DO;
      662    10364                          %OUT_STR(S="' of '");
      663    10367    7                     ST$ = VARIABLE.QLT$ -> QLT.FATHER -> QLT.ST$;
      664    10368    7                   END;
      665    10369    6                 ELSE
      666    10370    6                   ST$ = ADDR(NIL);
      667    10371
      668    10372    6           END;
      669    10373    5         END;
      670    10374
      671    10375    4         IF LINELEN >= 19 THEN                                 /*#24618*/
      672    10376    5           DO CASE( LINELEN );                                 /*#35510*/
      673    10377
      674    10378    5             CASE( 19,20,21,22,23,24,25,26,27 );
      675    10379    5               CALL OUT_STR( '        ', 27-LINELEN );
      676    10380
      677    10381    5             CASE( 28,29,30,31,32,33,34,35 );
      678    10382    5               CALL OUT_STR( '       ',35-LINELEN );
      679    10383
      680    10384    5             CASE( 36,37,38,39,40,41,42,43 );
      681    10385    5               CALL OUT_STR( '       ',43-LINELEN );
      682    10386
      683    10387    5             CASE( ELSE );
      684    10388                    %FLUSH;
      685    10397
      686    10398    5           END;
      687    10399    4         ELSE
      688    10400    4           CALL OUT_STR ('                   ',19 - LINELEN);
      689    10401
      690    10402    4       END PRINT_SYMBOL;
      691    10403        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:29   
      692    10404            /* Main body of PRINT_XREF */
      693    10405
      694    10406    3     LINELEN = 0;
      695    10407
      696    10408    3       SYM$ = XREF_SYM$;
      697    10409    4       DO WHILE SYM$ ~= ADDR(NIL);
      698    10410    4         XR$ = SYM$ -> ST.X_REF_LIST$;
      699    10411              %IF GCOS;
      754    10466              %ENDIF;
      755    10467    4         CALL PRINT_SYMBOL;
      756    10468    5         DO WHILE XR$ ~= ADDR(NIL);
      757    10469    5           IF XR$ -> XREF.SYMPTR ~= ADDR(NIL) THEN
      758    10470    5             IF XR$ -> XREF.XISN = XR$ -> XREF.SYMPTR -> XREF.XISN THEN
      759    10471    5               XR$ -> XREF.SYMPTR -> XREF.ATTR =
      760    10472    5                  XR$ -> XREF.SYMPTR -> XREF.ATTR | XR$ -> XREF.ATTR;
      761    10473    5             ELSE
      762    10474    5               CALL PRINT_THIS_REF;
      763    10475    5           ELSE
      764    10476    5             CALL PRINT_THIS_REF;
      765    10477    5           XR$ = XR$ -> XREF.SYMPTR;
      766    10478                %IF GCOS;
      788    10500                %ENDIF;
      789    10501    5         END;
      790    10502              %FLUSH;
      791    10511    4         SYM$ = SYM$ -> ST.X_SORT_SYM$;
      792    10512    4       END;
      793    10513
      794    10514    3     END PRINT_XREF;
      795    10515         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:30   
      796    10516
      797    10517          /*  Main body of PRODUCE_XREF */
      798    10518
      799    10519
      800    10520              %IF GCOS;
      808    10528              %ENDIF;
      809    10529    2         CALL SET_SYM_LIST_NIL;
      810    10530    2         CALL PROCESS_XREF_LIST;
      811    10531    2         CALL PRINT_XREF_HEADING;
      812    10532    2         CALL PRINT_XREF;
      813    10533
      814    10534    2   END PRODUCE_XREF;
      815    10535        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:31   
      816    10536               /* Start of body of Z8IL$PRODUCE_LISTINGS */
      817    10537
      818    10538        /* Set up input buffer for possible use */
      819    10539    1   LOOKAHEAD_BUFFER$ = ADDR(INPUT_BUFFER);
      820    10540
      821    10541        %IF GCOS;
      828    10548        %ENDIF;
      829    10549    1   CALL PRODUCE_LSTIN;
      830    10550    1   CALL PRODUCE_LSTOU;
      831    10551
      832    10552    1   IF COMCOM.OB.XREF      THEN
      833    10553    1     CALL PRODUCE_XREF;
      834    10554
      835    10555    1   END Z8IL$PRODUCE_LISTINGS;
      836    10556        %EOD;

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:32   
--  Include file information  --

   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_XREF.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$PRODUCE_LISTINGS.

   Procedure Z8IL$PRODUCE_LISTINGS requires 1085 words for executable code.
   Procedure Z8IL$PRODUCE_LISTINGS requires 148 words of local(AUTO) storage.

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:33   

 Object Unit name= Z8IL$PRODUCE_LISTINGS                      File name= Z8IL.:Z8A6TOU
 UTS= AUG 09 '97 13:27:31.24 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  RoData even  UTS    138    212  Z8IL$PRODUCE_LISTINGS
    2  LblCom even  none     1      1  SUB_HEADING_ADDR
    3  LblCom even  none     1      1  SUB_HEADING_LEN
    4  LblCom even  none     1      1  SUB_HEADING_ADDR1
    5  LblCom even  none     1      1  SUB_HEADING_LEN1
    6  LblCom even  none     1      1  SUB_HEADING_ADDR2
    7  LblCom even  none     1      1  SUB_HEADING_LEN2
    8  LblCom even  none     1      1  MAX_LINES_PER_PAGE
    9  LblCom even  none     1      1  LISTING_LINES_ON_PAGE
   10  LblCom even  none     1      1  LISTING_PAGE_NUMBER
   11  LblCom even  none    28     34  PLINE
   12  LblCom even  none     1      1  PLINE_LEN
   13  LblCom even  none     1      1  SCANNER_STATE
   14  LblCom even  none     1      1  CURRENT_BUFFER$
   15  LblCom even  none     1      1  LOOKAHEAD_BUFFER$
   16  LblCom even  none     1      1  CURRENT_LINE_LEVEL
   17  LblCom even  none     1      1  LINE_LIST$
   18  LblCom even  none     7      7  BUFFER
   19  LblCom even  none     1      1  ORIGINAL_ISN
   20  LblCom even  none     1      1  EXPANDED_ISN
   21  LblCom even  none     1      1  ISN_FOR_EXP_SRC
   22  LblCom even  none     1      1  ERR$
   23  LblCom even  none     1      1  ERR_HEAD
   24  LblCom even  none     1      1  ERR_TAIL
   25  LblCom even  none     1      1  MAX_ERROR_GENERATED
   26  LblCom even  none     5      5  ERR_
   27  LblCom even  none     1      1  XREF$
   28  LblCom even  none     5      5  XREF_
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:34   
   29  LblCom even  none     1      1  ST$
   30  LblCom even  none     5      5  ST_
   31  LblCom even  none     1      1  LTS$
   32  LblCom even  none     5      5  LTS_
   33  LblCom even  none     1      1  DNT$
   34  LblCom even  none     5      5  DNT_
   35  LblCom even  none     1      1  DNT_BUCKET_NUMBER
   36  LblCom even  none     1      1  DNT_OF_1$
   37  LblCom even  none     1      1  QLT$
   38  LblCom even  none     1      1  PREV_01_QLT$
   39  LblCom even  none     5      5  QLT_
   40  LblCom even  none     6      6  COMP_SUMMARY_COUNT
   41  LblCom even  none     1      1  INDICATOR_AREA
   42  LblCom even  none     1      1  AREA_A_START
   43   Proc  even  none  1085   2075  Z8IL$PRODUCE_LISTINGS
   44  RoData even  none    50     62  Z8IL$PRODUCE_LISTINGS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    43      0   yes            yes      Std        0  Z8IL$PRODUCE_LISTINGS

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  DEF_LISTING_SUB_HEADING            1     11  BLANK
    1     12  PLINE_PTR$
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:35   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 Z9IL$OUTPUT_TO_LO_PAGE
         yes           Std       1 Z8IU$BLANK_ZERO
 yes     yes           Std       0 Z8AA$PREPARE_EXPANDED_SOURCE
         yes           Std       3 Z9IL$OUTPUT_TO_DO
         yes           Std       2 Z9IL$OUTPUT_TO_LO
         yes           Std       0 Z8IL$BUILD_LISTING_SOURCE_LINE
 yes     yes           Std       0 Z8IL$FILTER_EXPANDED_S_L
         yes           Std       2 Z8IL$PRINT_ERROR
         yes           Std       0 Z9IL$PRINT_LO
         yes           Std       0 Z9IL$PRINT_LO_WITH_UNGMAP
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                           r    LTS_STEP

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:36   


        1        1        /*M* Z8IL Annotator Listing Routines */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8
        9        9        /*P*
       10       10
       11       11                  NAME: Z8IL
       12       12               PURPOSE: Generate all listings associated with the compile,
       13       13                         including source and generated code listings, with
       14       14                         compilation errors identified.  Errors will be printed
       15       15                         on DO file if requested.
       16       16        */
       17       17
       18       18        /*=====================*/
       19       19          Z8IL$PRODUCE_LISTINGS: PROC;

     19 43 000000   000000 700200 xent  Z8IL$PRODUC* TSX0  ! X66_AUTO_0
        43 000001   000224 000000                    ZERO    148,0
        43 000002   002062 710000 43                 TRA     s:10539

       20       20        /*=====================*/
       21       21        /*D*
       22       22               NAME: Z8IL$PRODUCE_LISTINGS
       23       23        DESCRIPTION: Generate the source listing for the compilation, as well
       24       24                       as the generated object code listing.
       25       25        */
       26       26
       27       27        % EQU PHASE = 5;
       28       28        %INCLUDE Z8A_DEFC;
       29       96        %INCLUDE Z8A_SUPP_MAC;
       30     2496        %INCLUDE Z9A_FLAGS;
       31     2510        %IF GCOS;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:37   
       36     2515        %ENDIF;
       37     2516        % INCLUDE Z8A_COMCOM;
       38     3166        % INCLUDE Z9I_PREPROC;
       39     3186        %SET INITIALIZE = '1'B;
       40     3187        % INCLUDE Z8I_LISTING;
       41     3275        %SET INITIALIZE = '0'B;
       42     3276        % INCLUDE Z8E_BUFFERS;
       43     3466        % INCLUDE Z8A_ERR;
       44     3535        %INCLUDE Z8A_XREF;
       45     3607        %INCLUDE Z8A_ST;
       46     7266        %INCLUDE Z8A_LTS;
       47     9343        %INCLUDE Z8A_DNT;
       48     9564        %INCLUDE Z8A_QLT;
       49     9670
       50     9671               /* External Declarations */
       51     9672
       52     9673    1   DCL Z8IL$FILTER_EXPANDED_S_L ENTRY ALTRET;
       53     9674    1   DCL Z8AA$PREPARE_EXPANDED_SOURCE  ENTRY ALTRET;
       54     9675    1   DCL Z9IL$OUTPUT_TO_LO             ENTRY(2);
       55     9676        %IF CP6;
       56     9677    1   DCL Z9IL$OUTPUT_TO_LO_PAGE        ENTRY(2);
       57     9678        %ENDIF;
       58     9679    1   DCL Z9IL$OUTPUT_TO_DO             ENTRY(3);
       59     9680    1   DCL Z9IL$CREATE_HEADING           ENTRY;
       60     9681    1   DCL Z8IU$BLANK_ZERO               ENTRY(1);
       61     9682        %IF GCOS;
       63     9684        %ENDIF;
       64     9685        %IF CP6;
       65     9686    1   DCL Z8IL$BUILD_LISTING_SOURCE_LINE ENTRY;
       66     9687        %ENDIF;
       67     9688    1   DCL Z9IL$PRINT_LO                 ENTRY;
       68     9689        %IF CP6;
       69     9690    1   DCL Z9IL$PRINT_LO_WITH_UNGMAP     ENTRY;
       70     9691        %ENDIF;
       71     9692        %IF GCOS;
       75     9696        %ENDIF;
       76     9697    1   DCL Z8IL$PRINT_ERROR              ENTRY(2);
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:38   
       77     9698
       78     9699
       79     9700    1   DCL COMP_SUMMARY_COUNT (0:5) SBIN WORD EXT INIT(0*6);
       80     9701    1   DCL INDICATOR_AREA           SBIN WORD EXT INIT (6) ;
       81     9702    1   DCL AREA_A_START             SBIN WORD EXT INIT (7) ;
       82     9703
       83     9704    1   DCL ERRORS_TO_LO_REQUIRED BIT (1); /* Errors should be written
       84     9705                                               to LO even though LSTIN is not
       85     9706                                               requested. */
       86     9707
       87     9708        %IF CP6;
       88     9709    1   DCL DO_FLAG            BIT(1);
       89     9710        %ENDIF;
       90     9711    1   DCL 1 INPUT_BUFFER,
       91     9712               %BUFFER_INFO;
       92     9742    1         2 SOURCE_LINE CHAR(%MAX_INPUT_LINE_LENGTH);
       93     9743    1   DCL STAR_LINE (0:%(MAX_LISTING_LINE_LENGTH-1)) CHAR (1) CONSTANT
       94     9744    1         INIT ('*'*0);
       95     9745        %IF GCOS;
      106     9756        %ENDIF;
      107     9757        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:39   
      108     9758    1   INITIALIZE_LO: PROC;     /* in Z8IL$PRODUCE_LISTINGS */

   9758 43 000003   200126 741300       INITIALIZE_* STX1  ! LINE+1,,AUTO

      109     9759
      110     9760        /*I*
      111     9761               NAME: INITIALIZE_LO
      112     9762        DESCRIPTION:
      113     9763                  Initialize everything necessary to begin printing
      114     9764                  the listing output.
      115     9765               */
      116     9766
      117     9767
      118     9768
      119     9769    2       LISTING_PAGE_NUMBER    = 0;

   9769 43 000004   000000 450000 10                 STZ     LISTING_PAGE_NUMBER

      120     9770            %NEW_PAGE;                                  /*#35040*/

   9771 43 000005   000000 235000 8                  LDA     MAX_LINES_PER_PAGE
        43 000006   000000 755000 9                  STA     LISTING_LINES_ON_PAGE

   9772 43 000007   000000 631400 44                 EPPR1   0
        43 000010   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO_PAGE
        43 000011   000000 011000                    NOP     0

      121     9774
      122     9775    2   END INITIALIZE_LO;

   9775 43 000012   200126 221300                    LDX1  ! LINE+1,,AUTO
        43 000013   000001 702211                    TSX2  ! 1,X1

      123     9776        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:40   
      124     9777    1   PRINT_LISTING_SOURCE_LINE: PROC (OUTPUT_PROC);  /* in Z8IL$PRODUCE_LISTINGS */

   9777 43 000014   200124 741300       PRINT_LISTI* STX1  ! SYM$+1,,AUTO

      125     9778
      126     9779    2          DCL OUTPUT_PROC EPTR;
      127     9780
      128     9781        /*I*
      129     9782               NAME: PRINT_LISTING_SOURCE_LINE
      130     9783        DESCRIPTION: Print the line that has been built with source information
      131     9784                       on the appropriate listing.
      132     9785        */
      133     9786
      134     9787    2   IF  COMCOM.OB.FORMAT = FALSE

   9787 43 000015   000030 234000 xsym               SZN     COMCOM+24
        43 000016   000031 604000 43                 TMI     s:9791
        43 000017   000000 235000 12                 LDA     PLINE_LEN
        43 000020   000142 115007                    CMPA    98,DL
        43 000021   000031 604400 43                 TMOZ    s:9791

      135     9788    2   AND PLINE_LEN > 80 + 8 + LENGTHC (FILL_BUFFER.ESN) THEN
      136     9789    2     CALL OUTPUT_PROC(PLINE_PTR$, 80 + 8 + LENGTHC (FILL_BUFFER.ESN)) ;

   9789 43 000022   000004 630400 44                 EPPR0   4
        43 000023   200125 471500                    LDP1    @OUTPUT_PROC,,AUTO
        43 000024   100000 220100                    LDX0    0,,PR1
        43 000025   000002 631400 44                 EPPR1   2
        43 000026   000000 701010                    TSX1    0,X0
        43 000027   000000 011000                    NOP     0
        43 000030   000037 710000 43                 TRA     s:9793

      137     9790    2   ELSE
      138     9791    2     CALL OUTPUT_PROC(PLINE_PTR$, PLINE_LEN);

   9791 43 000031   000006 630400 44                 EPPR0   6
        43 000032   200125 471500                    LDP1    @OUTPUT_PROC,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:41   
        43 000033   100000 220100                    LDX0    0,,PR1
        43 000034   000002 631400 44                 EPPR1   2
        43 000035   000000 701010                    TSX1    0,X0
        43 000036   000000 011000                    NOP     0

      139     9792
      140     9793    2   END PRINT_LISTING_SOURCE_LINE;

   9793 43 000037   200124 221300                    LDX1  ! SYM$+1,,AUTO
        43 000040   000001 702211                    TSX2  ! 1,X1

      141     9794        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:42   
      142     9795    1   CHECK_FOR_SLEW : PROC;

   9795 43 000041   200124 741300       CHECK_FOR_S* STX1  ! SYM$+1,,AUTO

      143     9796
      144     9797    2     IF SUBSTR(PLINE_REDEF_FIELDS.LINE, INDICATOR_AREA, 1) = '/'

   9797 43 000042   000000 235000 41                 LDA     INDICATOR_AREA
        43 000043   040000 106405                    CMPC    fill='040'O
        43 000044   000004 400001 11                 ADSC9   PLINE+4,A                cn=2,n=1
        43 000045   000010 000001 44                 ADSC9   8                        cn=0,n=1
        43 000046   000053 600000 43                 TZE     s:9801
        43 000047   040000 106405                    CMPC    fill='040'O
        43 000050   000004 400006 11                 ADSC9   PLINE+4,A                cn=2,n=6
        43 000051   000201 000006 1                  ADSC9   XHEAD+12                 cn=0,n=6
        43 000052   000055 601000 43                 TNZ     s:9803

      145     9798    2         OR SUBSTR(PLINE_REDEF_FIELDS.LINE, INDICATOR_AREA, 6) = '*EJECT' THEN
      146     9799              /* 'EJECT', upper case only; CBL68 compatibility feature, and CBL68
      147     9800                 is BCD only, implicitly always upper case. */
      148     9801    2       CALL INITIALIZE_LO;                                    /*#37329*/

   9801 43 000053   000003 701000 43                 TSX1    INITIALIZE_LO
        43 000054   000000 011000                    NOP     0

      149     9802
      150     9803    2   END CHECK_FOR_SLEW;

   9803 43 000055   200124 221300                    LDX1  ! SYM$+1,,AUTO
        43 000056   000001 702211                    TSX2  ! 1,X1

      151     9804        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:43   
      152     9805    1   WRITE_COMP_SUMMARY: PROC (OUTPUT_PROC);   /* in Z8IL$PRODUCE_LISTINGS */

   9805 43 000057   200124 741300       WRITE_COMP_* STX1  ! SYM$+1,,AUTO

      153     9806
      154     9807    2          DCL OUTPUT_PROC EPTR;
      155     9808
      156     9809        /*I*
      157     9810               NAME: WRITE_COMP_SUMMARY
      158     9811        DESCRIPTION:
      159     9812                  Write the summary information for the compilation
      160     9813                  as the last thing on the source listing, for the LO or the DO files.
      161     9814               */
      162     9815
      163     9816    2   DCL MSG_THERE CHAR(10) CONSTANT INIT('There were');
      164     9817    2   DCL 1 COMP_SUMMARY_MSG ,
      165     9818    2         2 COUNT CHAR(6),
      166     9819    2         2 BLK   CHAR(1),
      167     9820    2         2 TEXT  CHAR(28);
      168     9821
      169     9822    2   DCL COMP_SUMMARY_MSG_TEXT(0:5) CHAR(28) CONSTANT INIT
      170     9823    2                            ('Source input lines.',
      171     9824    2                             'Informational messages.',
      172     9825    2                             'Warning messages.',
      173     9826    2                             'Level check messages.',
      174     9827    2                             'Fatal error messages.',
      175     9828    2                             'Compile termination message.');
      176     9829    2   DCL I SBIN WORD;
      177     9830
      178     9831        %IF CP6;
      179     9832    2   IF (COMP_SUMMARY_COUNT(1) > 0)

   9832 43 000060   000001 235000 40                 LDA     COMP_SUMMARY_COUNT+1
        43 000061   000072 605400 43                 TPNZ    s:9837
        43 000062   000002 236000 40                 LDQ     COMP_SUMMARY_COUNT+2
        43 000063   000072 605400 43                 TPNZ    s:9837
        43 000064   000003 235000 40                 LDA     COMP_SUMMARY_COUNT+3
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:44   
        43 000065   000072 605400 43                 TPNZ    s:9837
        43 000066   000004 235000 40                 LDA     COMP_SUMMARY_COUNT+4
        43 000067   000072 605400 43                 TPNZ    s:9837
        43 000070   000005 235000 40                 LDA     COMP_SUMMARY_COUNT+5
        43 000071   000073 604400 43                 TMOZ    s:9839

      180     9833    2         OR (COMP_SUMMARY_COUNT(2) > 0)
      181     9834    2         OR (COMP_SUMMARY_COUNT(3) > 0)
      182     9835    2         OR (COMP_SUMMARY_COUNT(4) > 0)
      183     9836    2         OR (COMP_SUMMARY_COUNT(5) > 0) THEN
      184     9837    2     DO_FLAG = %FALSE;

   9837 43 000072   200004 450100                    STZ     DO_FLAG,,AUTO

      185     9838
      186     9839    2   IF NOT DO_FLAG   THEN

   9839 43 000073   200004 234100                    SZN     DO_FLAG,,AUTO
        43 000074   000126 604000 43                 TMI     s:9848

      187     9840    3     DO;

      188     9841        %ENDIF;
      189     9842    3       CALL OUTPUT_PROC (ADDR(BLANK), LENGTHC(BLANK));

   9842 43 000075   000011 236000 44                 LDQ     9
        43 000076   200176 756100                    STQ     @LEN+2,,AUTO
        43 000077   000013 236000 44                 LDQ     11
        43 000100   200201 756100                    STQ     @LEN+5,,AUTO
        43 000101   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000102   200200 450500                    STP0    @LEN+4,,AUTO
        43 000103   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000104   200125 471500                    LDP1    @OUTPUT_PROC,,AUTO
        43 000105   100000 220100                    LDX0    0,,PR1
        43 000106   000002 631400 44                 EPPR1   2
        43 000107   000000 701010                    TSX1    0,X0
        43 000110   000000 011000                    NOP     0
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:45   

      190     9843    3       CALL OUTPUT_PROC (ADDR(MSG_THERE), LENGTHC(MSG_THERE));

   9843 43 000111   000014 236000 44                 LDQ     12
        43 000112   200176 756100                    STQ     @LEN+2,,AUTO
        43 000113   000016 236000 44                 LDQ     14
        43 000114   200201 756100                    STQ     @LEN+5,,AUTO
        43 000115   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000116   200200 450500                    STP0    @LEN+4,,AUTO
        43 000117   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000120   200125 471500                    LDP1    @OUTPUT_PROC,,AUTO
        43 000121   100000 220100                    LDX0    0,,PR1
        43 000122   000002 631400 44                 EPPR1   2
        43 000123   000000 701010                    TSX1    0,X0
        43 000124   000000 011000                    NOP     0

      191     9844        %IF CP6;
      192     9845    3     END;

   9845 43 000125   000156 710000 43                 TRA     s:9854

      193     9846    2   ELSE
      194     9847    3     DO;

      195     9848    3       CALL OUTPUT_PROC( ADDR(BLANK), LENGTHC(BLANK), %TRUE );

   9848 43 000126   000011 236000 44                 LDQ     9
        43 000127   200176 756100                    STQ     @LEN+2,,AUTO
        43 000130   000022 237000 44                 LDAQ    18
        43 000131   200200 757100                    STAQ    @LEN+4,,AUTO
        43 000132   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000133   200177 450500                    STP0    @LEN+3,,AUTO
        43 000134   200177 630500                    EPPR0   @LEN+3,,AUTO
        43 000135   200125 471500                    LDP1    @OUTPUT_PROC,,AUTO
        43 000136   100000 220100                    LDX0    0,,PR1
        43 000137   000017 631400 44                 EPPR1   15
        43 000140   000000 701010                    TSX1    0,X0
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:46   
        43 000141   000000 011000                    NOP     0

      196     9849    3       CALL OUTPUT_PROC( ADDR(MSG_THERE), LENGTHC(MSG_THERE), %TRUE );

   9849 43 000142   000014 236000 44                 LDQ     12
        43 000143   200176 756100                    STQ     @LEN+2,,AUTO
        43 000144   000024 237000 44                 LDAQ    20
        43 000145   200200 757100                    STAQ    @LEN+4,,AUTO
        43 000146   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000147   200177 450500                    STP0    @LEN+3,,AUTO
        43 000150   200177 630500                    EPPR0   @LEN+3,,AUTO
        43 000151   200125 471500                    LDP1    @OUTPUT_PROC,,AUTO
        43 000152   100000 220100                    LDX0    0,,PR1
        43 000153   000017 631400 44                 EPPR1   15
        43 000154   000000 701010                    TSX1    0,X0
        43 000155   000000 011000                    NOP     0

      197     9850    3     END;

      198     9851        %ENDIF;
      199     9852
      200     9853
      201     9854    3   DO I = 0 TO 5;

   9854 43 000156   200137 450100                    STZ     I,,AUTO

      202     9855    3     IF COMP_SUMMARY_COUNT(I) ~= 0      THEN

   9855 43 000157   200137 720100                    LXL0    I,,AUTO
        43 000160   000000 235010 40                 LDA     COMP_SUMMARY_COUNT,X0
        43 000161   000241 600000 43                 TZE     s:9874

      203     9856    4       DO;

      204     9857    4         CALL BINCHAR (COMP_SUMMARY_MSG.COUNT, COMP_SUMMARY_COUNT(I));

   9857 43 000162   200137 236100                    LDQ     I,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:47   
        43 000163   000002 736000                    QLS     2
        43 000164   000100 301406                    BTD
        43 000165   000000 000004 40                 NDSC9   COMP_SUMMARY_COUNT,Q     cn=0,s=lsgnf,sf=0,n=4
        43 000166   200126 030006                    NDSC9   COMP_SUMMARY_MSG,,AUTO   cn=0,s=nosgn,sf=0,n=6

      205     9858    4         COMP_SUMMARY_MSG.BLK = ' ';

   9858 43 000167   040000 236007                    LDQ     16384,DL
        43 000170   200127 552110                    STBQ    LINKED+1,'10'O,AUTO

      206     9859    4         COMP_SUMMARY_MSG.TEXT = COMP_SUMMARY_MSG_TEXT(I);

   9859 43 000171   200137 236100                    LDQ     I,,AUTO
        43 000172   000034 402007                    MPY     28,DL
        43 000173   040100 100406                    MLR     fill='040'O
        43 000174   000052 000034 1                  ADSC9   COMP_SUMMARY_MSG_TEXT,Q  cn=0,n=28
        43 000175   200127 600034                    ADSC9   LINKED+1,,AUTO           cn=3,n=28

      207     9860    4         CALL Z8IU$BLANK_ZERO (ADDR(COMP_SUMMARY_MSG));

   9860 43 000176   200126 630500                    EPPR0   COMP_SUMMARY_MSG,,AUTO
        43 000177   200176 450500                    STP0    @LEN+2,,AUTO
        43 000200   200176 631500                    EPPR1   @LEN+2,,AUTO
        43 000201   200177 451500                    STP1    @LEN+3,,AUTO
        43 000202   200177 630500                    EPPR0   @LEN+3,,AUTO
        43 000203   000021 631400 44                 EPPR1   17
        43 000204   000000 701000 xent               TSX1    Z8IU$BLANK_ZERO
        43 000205   000000 011000                    NOP     0

      208     9861
      209     9862              %IF CP6;
      210     9863    4         IF NOT DO_FLAG  THEN

   9863 43 000206   200004 234100                    SZN     DO_FLAG,,AUTO
        43 000207   000225 604000 43                 TMI     s:9869

      211     9864              %ENDIF;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:48   
      212     9865    4           CALL OUTPUT_PROC (ADDR(COMP_SUMMARY_MSG),

   9865 43 000210   200126 630500                    EPPR0   COMP_SUMMARY_MSG,,AUTO
        43 000211   200176 450500                    STP0    @LEN+2,,AUTO
        43 000212   000027 236000 44                 LDQ     23
        43 000213   200201 756100                    STQ     @LEN+5,,AUTO
        43 000214   200176 631500                    EPPR1   @LEN+2,,AUTO
        43 000215   200200 451500                    STP1    @LEN+4,,AUTO
        43 000216   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000217   200125 473500                    LDP3    @OUTPUT_PROC,,AUTO
        43 000220   300000 220100                    LDX0    0,,PR3
        43 000221   000002 631400 44                 EPPR1   2
        43 000222   000000 701010                    TSX1    0,X0
        43 000223   000000 011000                    NOP     0
        43 000224   000241 710000 43                 TRA     s:9874

      213     9866    4                             LENGTHC(COMP_SUMMARY_MSG));
      214     9867              %IF CP6;
      215     9868    4         ELSE
      216     9869    4           CALL OUTPUT_PROC( ADDR(COMP_SUMMARY_MSG),

   9869 43 000225   200126 630500                    EPPR0   COMP_SUMMARY_MSG,,AUTO
        43 000226   200176 450500                    STP0    @LEN+2,,AUTO
        43 000227   000030 237000 44                 LDAQ    24
        43 000230   200200 757100                    STAQ    @LEN+4,,AUTO
        43 000231   200176 631500                    EPPR1   @LEN+2,,AUTO
        43 000232   200177 451500                    STP1    @LEN+3,,AUTO
        43 000233   200177 630500                    EPPR0   @LEN+3,,AUTO
        43 000234   200125 473500                    LDP3    @OUTPUT_PROC,,AUTO
        43 000235   300000 220100                    LDX0    0,,PR3
        43 000236   000017 631400 44                 EPPR1   15
        43 000237   000000 701010                    TSX1    0,X0
        43 000240   000000 011000                    NOP     0

      217     9870    4                             LENGTHC(COMP_SUMMARY_MSG),
      218     9871    4                             %TRUE );
      219     9872              %ENDIF;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:49   
      220     9873    4       END; /* DO */

      221     9874    3   END; /* DO */

   9874 43 000241   200137 054100                    AOS     I,,AUTO
        43 000242   200137 235100                    LDA     I,,AUTO
        43 000243   000005 115007                    CMPA    5,DL
        43 000244   000157 604400 43                 TMOZ    s:9855

      222     9875
      223     9876    2   END WRITE_COMP_SUMMARY;

   9876 43 000245   200124 221300                    LDX1  ! SYM$+1,,AUTO
        43 000246   000001 702211                    TSX2  ! 1,X1

      224     9877        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:50   
      225     9878    1   PRODUCE_LSTIN: PROC;     /* in Z8IL$PRODUCE_LISTINGS */

   9878 43 000247   200120 741300       PRODUCE_LST* STX1  ! INPUT_BUFFER+75,,AUTO
        43 000250   000326 710000 43                 TRA     s:9912

      226     9879
      227     9880        /*I*
      228     9881               NAME: PRODUCE_LSTIN
      229     9882        DESCRIPTION:
      230     9883                  Write the compilation source listing on the LO output
      231     9884                  file.
      232     9885               */
      233     9886
      234     9887    2   DCL INST_COL SBIN; /* Column number in installation name */
      235     9888    2   DCL LAST_LINE_FROM_COPY BOOLEAN;
      236     9889    2   DCL START_COPY CHAR (0) CONSTANT INIT (
              9889            '           ###### START OF COPIED TEXT ######');
      237     9890    2   DCL END_COPY CHAR (0) CONSTANT INIT ('          ###### END OF COPIED TEXT ######');
      238     9891
      239     9892        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:51   
      240     9893    2   PRINT_ERROR : PROC;

   9893 43 000251   200124 741300       PRINT_ERROR  STX1  ! SYM$+1,,AUTO

      241     9894
      242     9895    3   IF (COMCOM.OB.LISTIN OR ERRORS_TO_LO_REQUIRED) THEN

   9895 43 000252   000040 234000 xsym               SZN     COMCOM+32
        43 000253   000256 604000 43                 TMI     s:9896
        43 000254   200003 234100                    SZN     ERRORS_TO_LO_REQUIRED,,AUTO
        43 000255   000312 605000 43                 TPL     s:9902

      243     9896    3     IF COMCOM.DO_REQ THEN

   9896 43 000256   000127 234000 xsym               SZN     COMCOM+87
        43 000257   000301 605000 43                 TPL     s:9900

      244     9897    3       CALL Z8IL$PRINT_ERROR(ENTADDR(Z9IL$OUTPUT_TO_LO),

   9897 43 000260   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_LO
        43 000261   200176 756100                    STQ     @LEN+2,,AUTO
        43 000262   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_DO
        43 000263   200200 756100                    STQ     @LEN+4,,AUTO
        43 000264   200176 236100                    LDQ     @LEN+2,,AUTO
        43 000265   200177 756100                    STQ     @LEN+3,,AUTO
        43 000266   200200 236100                    LDQ     @LEN+4,,AUTO
        43 000267   200201 756100                    STQ     @LEN+5,,AUTO
        43 000270   200201 630500                    EPPR0   @LEN+5,,AUTO
        43 000271   200203 450500                    STP0    @LEN+7,,AUTO
        43 000272   200177 631500                    EPPR1   @LEN+3,,AUTO
        43 000273   200202 451500                    STP1    @LEN+6,,AUTO
        43 000274   200202 630500                    EPPR0   @LEN+6,,AUTO
        43 000275   000002 631400 44                 EPPR1   2
        43 000276   000000 701000 xent               TSX1    Z8IL$PRINT_ERROR
        43 000277   000000 011000                    NOP     0
        43 000300   000324 710000 43                 TRA     s:9905

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:52   
      245     9898    3                             ENTADDR(Z9IL$OUTPUT_TO_DO));
      246     9899    3     ELSE
      247     9900    3       CALL Z8IL$PRINT_ERROR(ENTADDR(Z9IL$OUTPUT_TO_LO));

   9900 43 000301   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_LO
        43 000302   200176 756100                    STQ     @LEN+2,,AUTO
        43 000303   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000304   200177 450500                    STP0    @LEN+3,,AUTO
        43 000305   200177 630500                    EPPR0   @LEN+3,,AUTO
        43 000306   000021 631400 44                 EPPR1   17
        43 000307   000000 701000 xent               TSX1    Z8IL$PRINT_ERROR
        43 000310   000000 011000                    NOP     0
        43 000311   000324 710000 43                 TRA     s:9905

      248     9901    3   ELSE
      249     9902    3     IF COMCOM.DO_REQ THEN

   9902 43 000312   000127 234000 xsym               SZN     COMCOM+87
        43 000313   000324 605000 43                 TPL     s:9905

      250     9903    3       CALL Z8IL$PRINT_ERROR(ENTADDR(Z9IL$OUTPUT_TO_DO));

   9903 43 000314   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_DO
        43 000315   200176 756100                    STQ     @LEN+2,,AUTO
        43 000316   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000317   200177 450500                    STP0    @LEN+3,,AUTO
        43 000320   200177 630500                    EPPR0   @LEN+3,,AUTO
        43 000321   000021 631400 44                 EPPR1   17
        43 000322   000000 701000 xent               TSX1    Z8IL$PRINT_ERROR
        43 000323   000000 011000                    NOP     0

      251     9904
      252     9905    3   END PRINT_ERROR;

   9905 43 000324   200124 221300                    LDX1  ! SYM$+1,,AUTO
        43 000325   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:53   
      253     9906
      254     9907        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:54   
      255     9908        /*************************************************/
      256     9909        /*        P R O C E D U R E _ L I S T I N        */
      257     9910        /*************************************************/
      258     9911
      259     9912    3   IF COMCOM.OB.FORMAT THEN DO ; /* Free Format Option Subset */

   9912 43 000326   000030 234000 xsym               SZN     COMCOM+24
        43 000327   000333 605000 43                 TPL     s:9917

      260     9913    3     INDICATOR_AREA = 0 ;        /* Column 1 */

   9913 43 000330   000000 450000 41                 STZ     INDICATOR_AREA

      261     9914    3     AREA_A_START   = 1 ;        /* Column 2 */

   9914 43 000331   000001 235007                    LDA     1,DL
        43 000332   000000 755000 42                 STA     AREA_A_START

      262     9915    3   END ;                         /* Free Format */

      263     9916
      264     9917    2   COMP_SUMMARY_COUNT(0) = COMCOM.LINES.SOURCE;

   9917 43 000333   000131 235000 xsym               LDA     COMCOM+89
        43 000334   000000 755000 40                 STA     COMP_SUMMARY_COUNT

      265     9918    2   LAST_LINE_FROM_COPY = FALSE;

   9918 43 000335   200122 450100                    STZ     LAST_LINE_FROM_COPY,,AUTO

      266     9919    2   ERR$ = ERR_HEAD;

   9919 43 000336   000000 236000 23                 LDQ     ERR_HEAD
        43 000337   000000 756000 22                 STQ     ERR$

      267     9920    2   IF (ERR$ ~= ADDR(NIL))

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:55   
   9920 43 000340   000001 116000 44                 CMPQ    1
        43 000341   000355 600000 43                 TZE     s:9929
        43 000342   000040 234000 xsym               SZN     COMCOM+32
        43 000343   000355 604000 43                 TMI     s:9929
        43 000344   000041 235000 xsym               LDA     COMCOM+33
        43 000345   000355 601000 43                 TNZ     s:9929
        43 000346   000101 235000 xsym               LDA     COMCOM+65
        43 000347   000355 601000 43                 TNZ     s:9929
        43 000350   000127 234000 xsym               SZN     COMCOM+87
        43 000351   000355 604000 43                 TMI     s:9929

      268     9921    2                  AND (NOT COMCOM.OB.LISTIN)
      269     9922    2                  AND (NOT COMCOM.OB.LISTOUT)
      270     9923                       %IF CP6;
      271     9924    2                  AND (NOT COMCOM.OB.LO)
      272     9925                       %ENDIF;
      273     9926    2                  AND (NOT COMCOM.DO_REQ) THEN
      274     9927    2     ERRORS_TO_LO_REQUIRED = TRUE;

   9927 43 000352   400000 236003                    LDQ     -131072,DU
        43 000353   200003 756100                    STQ     ERRORS_TO_LO_REQUIRED,,AUTO
        43 000354   000356 710000 43                 TRA     s:9930

      275     9928    2   ELSE
      276     9929    2     ERRORS_TO_LO_REQUIRED = FALSE;

   9929 43 000355   200003 450100                    STZ     ERRORS_TO_LO_REQUIRED,,AUTO

      277     9930    2   IF COMCOM.OB.LISTIN

   9930 43 000356   000040 234000 xsym               SZN     COMCOM+32
        43 000357   000364 604000 43                 TMI     s:9936
        43 000360   000127 234000 xsym               SZN     COMCOM+87
        43 000361   000364 604000 43                 TMI     s:9936
        43 000362   200003 234100                    SZN     ERRORS_TO_LO_REQUIRED,,AUTO
        43 000363   000750 605000 43                 TPL     s:10059

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:56   
      278     9931    2         OR COMCOM.DO_REQ
      279     9932    2         OR ERRORS_TO_LO_REQUIRED THEN
      280     9933
      281     9934    3     DO;    /* Process source & errors */

      282     9935
      283     9936    3       IF COMCOM.OB.LISTIN OR (ERR$~= ADDR(NIL)) THEN

   9936 43 000364   000040 234000 xsym               SZN     COMCOM+32
        43 000365   000371 604000 43                 TMI     s:9938
        43 000366   000000 236000 22                 LDQ     ERR$
        43 000367   000001 116000 44                 CMPQ    1
        43 000370   000374 600000 43                 TZE     PESERR

      284     9937    4         DO;

      285     9938    4           CALL Z8AA$PREPARE_EXPANDED_SOURCE ALTRET(PESERR); PESERR:

   9938 43 000371   000000 631400 44                 EPPR1   0
        43 000372   000000 701000 xent               TSX1    Z8AA$PREPARE_EXPANDED_SOURCE
        43 000373   000374 702000 43                 TSX2    PESERR

      286     9939    4         END;

   9939 43 000374                       PESERR       null
      287     9940
      288     9941    3       IF COMCOM.OB.LISTIN OR ERRORS_TO_LO_REQUIRED THEN

   9941 43 000374   000040 234000 xsym               SZN     COMCOM+32
        43 000375   000400 604000 43                 TMI     s:9942
        43 000376   200003 234100                    SZN     ERRORS_TO_LO_REQUIRED,,AUTO
        43 000377   000402 605000 43                 TPL     s:9944

      289     9942    3         CALL INITIALIZE_LO;

   9942 43 000400   000003 701000 43                 TSX1    INITIALIZE_LO
        43 000401   000000 011000                    NOP     0
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:57   

      290     9943
      291     9944    3       IF COMCOM.OB.LISTIN THEN

   9944 43 000402   000040 234000 xsym               SZN     COMCOM+32
        43 000403   000515 605000 43                 TPL     s:9972

      292     9945    4         IF COMCOM.INSTALLATION$ ~= ADDR (NIL) THEN DO;

   9945 43 000404   000500 236000 xsym               LDQ     COMCOM+320
        43 000405   000001 116000 44                 CMPQ    1
        43 000406   000515 600000 43                 TZE     s:9972

      293     9946    4           PLINE_LEN = %MAX_LISTING_LINE_LENGTH;

   9946 43 000407   000155 235007                    LDA     109,DL
        43 000410   000000 755000 12                 STA     PLINE_LEN

      294     9947    4           CALL Z9IL$OUTPUT_TO_LO (ADDR (STAR_LINE), PLINE_LEN);

   9947 43 000411   000032 236000 44                 LDQ     26
        43 000412   200176 756100                    STQ     @LEN+2,,AUTO
        43 000413   000007 236000 44                 LDQ     7
        43 000414   200201 756100                    STQ     @LEN+5,,AUTO
        43 000415   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000416   200200 450500                    STP0    @LEN+4,,AUTO
        43 000417   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000420   000002 631400 44                 EPPR1   2
        43 000421   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 000422   000000 011000                    NOP     0

      295     9948    4           CALL INSERT (PLINE, 0, 1, '*');

   9948 43 000423   052000 236003                    LDQ     21504,DU
        43 000424   000000 552040 11                 STBQ    PLINE,'40'O

      296     9949    4           CALL INSERT (PLINE, %(MAX_LISTING_LINE_LENGTH - 1),, '*');
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:58   

   9949 43 000425   000033 552040 11                 STBQ    PLINE+27,'40'O

      297     9950    4           INST_COL = 1;

   9950 43 000426   000001 235007                    LDA     1,DL
        43 000427   200121 755100                    STA     INST_COL,,AUTO

      298     9951    5           DO WHILE INST_COL + %(MAX_LISTING_LINE_LENGTH - 5) <

   9951 43 000430   000447 710000 43                 TRA     s:9958

      299     9952    5               COMCOM.INSTALLATION$ -> DNT.TEXT.LENGTH;
      300     9953    5             CALL INSERT (PLINE, 2, %(MAX_LISTING_LINE_LENGTH - 4),

   9953 43 000431   000500 470400 xsym               LDP0    COMCOM+320
        43 000432   000004 220100                    LDX0    4,,PR0
        43 000433   200121 235100                    LDA     INST_COL,,AUTO
        43 000434   040000 100505                    MLR     fill='040'O
        43 000435   000004 400147                    ADSC9   4,A,PR0                  cn=2,n=103
        43 000436   000000 400151 11                 ADSC9   PLINE                    cn=2,n=105

      301     9954    5                 SUBSTR (COMCOM.INSTALLATION$ -> DNT.TEXT.NAME, INST_COL,
      302     9955    5                 %(MAX_LISTING_LINE_LENGTH - 6)));
      303     9956    5             CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));

   9956 43 000437   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_LO
        43 000440   200204 756100                    STQ     @LEN+8,,AUTO
        43 000441   200204 631500                    EPPR1   @LEN+8,,AUTO
        43 000442   200125 451500                    STP1    @OUTPUT_PROC,,AUTO
        43 000443   000014 701000 43                 TSX1    PRINT_LISTING_SOURCE_LINE
        43 000444   000000 011000                    NOP     0

      304     9957    5             INST_COL = INST_COL + %(MAX_LISTING_LINE_LENGTH - 6);

   9957 43 000445   000147 236007                    LDQ     103,DL
        43 000446   200121 056100                    ASQ     INST_COL,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:59   

      305     9958    5           END;

   9958 43 000447   000500 470400 xsym               LDP0    COMCOM+320
        43 000450   000004 236100                    LDQ     4,,PR0
        43 000451   000022 772000                    QRL     18
        43 000452   200176 756100                    STQ     @LEN+2,,AUTO
        43 000453   200121 236100                    LDQ     INST_COL,,AUTO
        43 000454   000150 036007                    ADLQ    104,DL
        43 000455   200176 116100                    CMPQ    @LEN+2,,AUTO
        43 000456   000431 604000 43                 TMI     s:9953

      306     9959    4           CALL INSERT (PLINE, 2, %(MAX_LISTING_LINE_LENGTH - 6),

   9959 43 000457   000004 220100                    LDX0    4,,PR0
        43 000460   000004 236100                    LDQ     4,,PR0
        43 000461   000022 772000                    QRL     18
        43 000462   200121 136100                    SBLQ    INST_COL,,AUTO
        43 000463   777777 621006                    EAX1    -1,QL
        43 000464   200121 235100                    LDA     INST_COL,,AUTO
        43 000465   040000 100545                    MLR     fill='040'O
        43 000466   000004 400011                    ADSC9   4,A,PR0                  cn=2,n=*X1
        43 000467   000000 400147 11                 ADSC9   PLINE                    cn=2,n=103

      307     9960    4               SUBSTR (COMCOM.INSTALLATION$ -> DNT.TEXT.NAME, INST_COL,
      308     9961    4               COMCOM.INSTALLATION$ -> DNT.TEXT.LENGTH - INST_COL - 1));
      309     9962    4           CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));

   9962 43 000470   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_LO
        43 000471   200205 756100                    STQ     @LEN+9,,AUTO
        43 000472   200205 631500                    EPPR1   @LEN+9,,AUTO
        43 000473   200125 451500                    STP1    @OUTPUT_PROC,,AUTO
        43 000474   000014 701000 43                 TSX1    PRINT_LISTING_SOURCE_LINE
        43 000475   000000 011000                    NOP     0

      310     9963    4           CALL Z9IL$OUTPUT_TO_LO (ADDR (STAR_LINE), PLINE_LEN);

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:60   
   9963 43 000476   000032 236000 44                 LDQ     26
        43 000477   200176 756100                    STQ     @LEN+2,,AUTO
        43 000500   000007 236000 44                 LDQ     7
        43 000501   200201 756100                    STQ     @LEN+5,,AUTO
        43 000502   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000503   200200 450500                    STP0    @LEN+4,,AUTO
        43 000504   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000505   000002 631400 44                 EPPR1   2
        43 000506   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 000507   000000 011000                    NOP     0

      311     9964    4           PLINE = ' ';

   9964 43 000510   040000 100400                    MLR     fill='040'O
        43 000511   000033 000001 44                 ADSC9   27                       cn=0,n=1
        43 000512   000000 000155 11                 ADSC9   PLINE                    cn=0,n=109

      312     9965
      313     9966    4           LISTING_LINES_ON_PAGE = MAX_LINES_PER_PAGE;

   9966 43 000513   000000 235000 8                  LDA     MAX_LINES_PER_PAGE
        43 000514   000000 755000 9                  STA     LISTING_LINES_ON_PAGE

      314     9967    4         END;

      315     9968
      316     9969               /* Special case errors preceding first line of source
      317     9970                  file. */
      318     9971
      319     9972    3       IF ERR$ ~= ADDR(NIL) THEN

   9972 43 000515   000000 236000 22                 LDQ     ERR$
        43 000516   000001 116000 44                 CMPQ    1
        43 000517   000525 600000 43                 TZE     s:9976

      320     9973    3         IF ERR$->ERR.LINE <= 0 THEN

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:61   
   9973 43 000520   000000 470400 22                 LDP0    ERR$
        43 000521   000002 220100                    LDX0    2,,PR0
        43 000522   000525 601000 43                 TNZ     s:9976

      321     9974    3           CALL PRINT_ERROR;

   9974 43 000523   000251 701000 43                 TSX1    PRINT_ERROR
        43 000524   000000 011000                    NOP     0

      322     9975
      323     9976    3       IF (COMCOM.OB.LISTIN OR (ERR$~=ADDR(NIL))) THEN

   9976 43 000525   000040 234000 xsym               SZN     COMCOM+32
        43 000526   000532 604000 43                 TMI     s:9978
        43 000527   000000 236000 22                 LDQ     ERR$
        43 000530   000001 116000 44                 CMPQ    1
        43 000531   000676 600000 43                 TZE     NO_EXP_SRC

      324     9977    4       DO WHILE('1'B);

      325     9978    4         CALL Z8IL$FILTER_EXPANDED_S_L ALTRET(NO_EXP_SRC);

   9978 43 000532   000000 631400 44                 EPPR1   0
        43 000533   000000 701000 xent               TSX1    Z8IL$FILTER_EXPANDED_S_L
        43 000534   000676 702000 43                 TSX2    NO_EXP_SRC

      326     9979    4         IF COMCOM.OB.LISTIN THEN

   9979 43 000535   000040 234000 xsym               SZN     COMCOM+32
        43 000536   000615 605000 43                 TPL     s:10001

      327     9980    5           DO;

      328     9981                  %IF GCOS;
      330     9983                  %ENDIF;
      331     9984                  %IF CP6;
      332     9985    5             CALL Z8IL$BUILD_LISTING_SOURCE_LINE;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:62   

   9985 43 000537   000000 631400 44                 EPPR1   0
        43 000540   000000 701000 xent               TSX1    Z8IL$BUILD_LISTING_SOURCE_LINE
        43 000541   000000 011000                    NOP     0

      333     9986                  %ENDIF;
      334     9987    5             CALL CHECK_FOR_SLEW;

   9987 43 000542   000041 701000 43                 TSX1    CHECK_FOR_SLEW
        43 000543   000000 011000                    NOP     0

      335     9988    5             IF FILL_BUFFER.LINE_TYPE.COPY_LINE AND NOT LAST_LINE_FROM_COPY THEN

   9988 43 000544   000000 470400 15                 LDP0    LOOKAHEAD_BUFFER$
        43 000545   000011 236100                    LDQ     9,,PR0
        43 000546   200000 316003                    CANQ    65536,DU
        43 000547   000567 600000 43                 TZE     s:9993
        43 000550   200122 234100                    SZN     LAST_LINE_FROM_COPY,,AUTO
        43 000551   000567 604000 43                 TMI     s:9993

      336     9989    6               DO;

      337     9990    6                 CALL Z9IL$OUTPUT_TO_LO (ADDR (START_COPY), LENGTHC (START_COPY));

   9990 43 000552   000034 236000 44                 LDQ     28
        43 000553   200176 756100                    STQ     @LEN+2,,AUTO
        43 000554   000036 236000 44                 LDQ     30
        43 000555   200201 756100                    STQ     @LEN+5,,AUTO
        43 000556   200176 631500                    EPPR1   @LEN+2,,AUTO
        43 000557   200200 451500                    STP1    @LEN+4,,AUTO
        43 000560   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000561   000002 631400 44                 EPPR1   2
        43 000562   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 000563   000000 011000                    NOP     0

      338     9991    6                 LAST_LINE_FROM_COPY = TRUE;

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:63   
   9991 43 000564   400000 236003                    LDQ     -131072,DU
        43 000565   200122 756100                    STQ     LAST_LINE_FROM_COPY,,AUTO

      339     9992    6               END;

   9992 43 000566   000606 710000 43                 TRA     s:9998

      340     9993    5             ELSE IF NOT FILL_BUFFER.LINE_TYPE.COPY_LINE AND LAST_LINE_FROM_COPY THEN

   9993 43 000567   200000 316003                    CANQ    65536,DU
        43 000570   000606 601000 43                 TNZ     s:9998
        43 000571   200122 234100                    SZN     LAST_LINE_FROM_COPY,,AUTO
        43 000572   000606 605000 43                 TPL     s:9998

      341     9994    6               DO;

      342     9995    6                 CALL Z9IL$OUTPUT_TO_LO (ADDR (END_COPY), LENGTHC (END_COPY));

   9995 43 000573   000037 236000 44                 LDQ     31
        43 000574   200176 756100                    STQ     @LEN+2,,AUTO
        43 000575   000041 236000 44                 LDQ     33
        43 000576   200201 756100                    STQ     @LEN+5,,AUTO
        43 000577   200176 631500                    EPPR1   @LEN+2,,AUTO
        43 000600   200200 451500                    STP1    @LEN+4,,AUTO
        43 000601   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000602   000002 631400 44                 EPPR1   2
        43 000603   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 000604   000000 011000                    NOP     0

      343     9996    6                 LAST_LINE_FROM_COPY = FALSE;

   9996 43 000605   200122 450100                    STZ     LAST_LINE_FROM_COPY,,AUTO

      344     9997    6               END;

      345     9998    5             CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:64   
   9998 43 000606   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_LO
        43 000607   200206 756100                    STQ     @LEN+10,,AUTO
        43 000610   200206 630500                    EPPR0   @LEN+10,,AUTO
        43 000611   200125 450500                    STP0    @OUTPUT_PROC,,AUTO
        43 000612   000014 701000 43                 TSX1    PRINT_LISTING_SOURCE_LINE
        43 000613   000000 011000                    NOP     0

      346     9999    5           END;

   9999 43 000614   000620 710000 43                 TRA     s:10006

      347    10000    4         ELSE
      348    10001    4           IF ERR$ = ADDR(NIL) THEN

  10001 43 000615   000000 236000 22                 LDQ     ERR$
        43 000616   000001 116000 44                 CMPQ    1
        43 000617   000676 600000 43                 TZE     NO_EXP_SRC

      349    10002    4             GOTO NO_EXP_SRC;
      350    10003
      351    10004              /* Check for an error */
      352    10005
      353    10006    4         IF ERR$ ~= ADDR(NIL) THEN

  10006 43 000620   000000 236000 22                 LDQ     ERR$
        43 000621   000001 116000 44                 CMPQ    1
        43 000622   000532 600000 43                 TZE     s:9978

      354    10007    4           IF ERR$ -> ERR.LINE <= FILL_BUFFER.ISN THEN

  10007 43 000623   000000 470400 15                 LDP0    LOOKAHEAD_BUFFER$
        43 000624   000000 471400 22                 LDP1    ERR$
        43 000625   100002 236100                    LDQ     2,,PR1
        43 000626   000022 772000                    QRL     18
        43 000627   000004 116100                    CMPQ    4,,PR0
        43 000630   000532 605400 43                 TPNZ    s:9978

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:65   
      355    10008
      356    10009    5             DO;  /* We have an error on this line */

      357    10010
      358    10011    5               IF COMCOM.OB.LISTIN THEN

  10011 43 000631   000040 234000 xsym               SZN     COMCOM+32
        43 000632   000644 605000 43                 TPL     s:10017

      359    10012    6                 DO;

      360    10013    6                   IF COMCOM.DO_REQ THEN

  10013 43 000633   000127 234000 xsym               SZN     COMCOM+87
        43 000634   000673 605000 43                 TPL     s:10030

      361    10014    6                     CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_DO));

  10014 43 000635   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_DO
        43 000636   200207 756100                    STQ     @LEN+11,,AUTO
        43 000637   200207 633500                    EPPR3   @LEN+11,,AUTO
        43 000640   200125 453500                    STP3    @OUTPUT_PROC,,AUTO
        43 000641   000014 701000 43                 TSX1    PRINT_LISTING_SOURCE_LINE
        43 000642   000000 011000                    NOP     0

      362    10015    6                 END;

  10015 43 000643   000673 710000 43                 TRA     s:10030

      363    10016    5               ELSE
      364    10017    5                 IF COMCOM.DO_REQ OR ERRORS_TO_LO_REQUIRED THEN

  10017 43 000644   000127 234000 xsym               SZN     COMCOM+87
        43 000645   000650 604000 43                 TMI     s:10023
        43 000646   200003 234100                    SZN     ERRORS_TO_LO_REQUIRED,,AUTO
        43 000647   000673 605000 43                 TPL     s:10030

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:66   
      365    10018    6                   DO;

      366    10019                          %IF GCOS;
      368    10021                          %ENDIF;
      369    10022                          %IF CP6;
      370    10023    6                     CALL Z8IL$BUILD_LISTING_SOURCE_LINE;

  10023 43 000650   000000 631400 44                 EPPR1   0
        43 000651   000000 701000 xent               TSX1    Z8IL$BUILD_LISTING_SOURCE_LINE
        43 000652   000000 011000                    NOP     0

      371    10024                          %ENDIF;
      372    10025    6                     IF COMCOM.DO_REQ THEN

  10025 43 000653   000127 234000 xsym               SZN     COMCOM+87
        43 000654   000663 605000 43                 TPL     s:10027

      373    10026    6                       CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_DO));

  10026 43 000655   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_DO
        43 000656   200210 756100                    STQ     @LEN+12,,AUTO
        43 000657   200210 630500                    EPPR0   @LEN+12,,AUTO
        43 000660   200125 450500                    STP0    @OUTPUT_PROC,,AUTO
        43 000661   000014 701000 43                 TSX1    PRINT_LISTING_SOURCE_LINE
        43 000662   000000 011000                    NOP     0

      374    10027    6                     IF ERRORS_TO_LO_REQUIRED THEN

  10027 43 000663   200003 234100                    SZN     ERRORS_TO_LO_REQUIRED,,AUTO
        43 000664   000673 605000 43                 TPL     s:10030

      375    10028    6                       CALL PRINT_LISTING_SOURCE_LINE (ENTADDR(Z9IL$OUTPUT_TO_LO));

  10028 43 000665   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_LO
        43 000666   200211 756100                    STQ     @LEN+13,,AUTO
        43 000667   200211 630500                    EPPR0   @LEN+13,,AUTO
        43 000670   200125 450500                    STP0    @OUTPUT_PROC,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:67   
        43 000671   000014 701000 43                 TSX1    PRINT_LISTING_SOURCE_LINE
        43 000672   000000 011000                    NOP     0

      376    10029    6                   END;

      377    10030    5               CALL PRINT_ERROR;

  10030 43 000673   000251 701000 43                 TSX1    PRINT_ERROR
        43 000674   000000 011000                    NOP     0

      378    10031    5             END;

      379    10032    4       END; /* while */

  10032 43 000675   000532 710000 43                 TRA     s:9978

      380    10033    3      NO_EXP_SRC:
      381    10034    3       IF LAST_LINE_FROM_COPY THEN

  10034 43 000676   200122 234100       NO_EXP_SRC   SZN     LAST_LINE_FROM_COPY,,AUTO
        43 000677   000712 605000 43                 TPL     s:10039

      382    10035    3         CALL Z9IL$OUTPUT_TO_LO (ADDR (END_COPY), LENGTHC (END_COPY));

  10035 43 000700   000037 236000 44                 LDQ     31
        43 000701   200176 756100                    STQ     @LEN+2,,AUTO
        43 000702   000041 236000 44                 LDQ     33
        43 000703   200201 756100                    STQ     @LEN+5,,AUTO
        43 000704   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 000705   200200 450500                    STP0    @LEN+4,,AUTO
        43 000706   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 000707   000002 631400 44                 EPPR1   2
        43 000710   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 000711   000000 011000                    NOP     0

      383    10036
      384    10037            /* Clear any leftover errors */
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:68   
      385    10038
      386    10039    4       DO WHILE (ERR$ ~= ADDR(NIL));

  10039 43 000712   000720 710000 43                 TRA     s:10042

      387    10040    4         FILL_BUFFER.ISN = 9999999;

  10040 43 000713   000042 235000 44                 LDA     34
        43 000714   000000 470400 15                 LDP0    LOOKAHEAD_BUFFER$
        43 000715   000004 755100                    STA     4,,PR0

      388    10041    4         CALL PRINT_ERROR;

  10041 43 000716   000251 701000 43                 TSX1    PRINT_ERROR
        43 000717   000000 011000                    NOP     0

      389    10042    4       END;

  10042 43 000720   000000 236000 22                 LDQ     ERR$
        43 000721   000001 116000 44                 CMPQ    1
        43 000722   000713 601000 43                 TNZ     s:10040

      390    10043
      391    10044            /*  Write summary statistics */
      392    10045
      393    10046            %IF CP6;
      394    10047    3       DO_FLAG = FALSE;

  10047 43 000723   200004 450100                    STZ     DO_FLAG,,AUTO

      395    10048            %ENDIF;
      396    10049    3       IF COMCOM.OB.LISTIN OR ERRORS_TO_LO_REQUIRED THEN

  10049 43 000724   000040 234000 xsym               SZN     COMCOM+32
        43 000725   000730 604000 43                 TMI     s:10050
        43 000726   200003 234100                    SZN     ERRORS_TO_LO_REQUIRED,,AUTO
        43 000727   000736 605000 43                 TPL     s:10052
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:69   

      397    10050    3         CALL WRITE_COMP_SUMMARY (ENTADDR(Z9IL$OUTPUT_TO_LO));

  10050 43 000730   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_LO
        43 000731   200212 756100                    STQ     @LEN+14,,AUTO
        43 000732   200212 630500                    EPPR0   @LEN+14,,AUTO
        43 000733   200125 450500                    STP0    @OUTPUT_PROC,,AUTO
        43 000734   000057 701000 43                 TSX1    WRITE_COMP_SUMMARY
        43 000735   000000 011000                    NOP     0

      398    10051            %IF CP6;
      399    10052    3       DO_FLAG = TRUE;

  10052 43 000736   400000 236003                    LDQ     -131072,DU
        43 000737   200004 756100                    STQ     DO_FLAG,,AUTO

      400    10053            %ENDIF;
      401    10054    3       IF COMCOM.DO_REQ THEN

  10054 43 000740   000127 234000 xsym               SZN     COMCOM+87
        43 000741   000750 605000 43                 TPL     s:10059

      402    10055    3         CALL WRITE_COMP_SUMMARY (ENTADDR(Z9IL$OUTPUT_TO_DO));

  10055 43 000742   000000 636000 xent               EAQ     Z9IL$OUTPUT_TO_DO
        43 000743   200213 756100                    STQ     @LEN+15,,AUTO
        43 000744   200213 630500                    EPPR0   @LEN+15,,AUTO
        43 000745   200125 450500                    STP0    @OUTPUT_PROC,,AUTO
        43 000746   000057 701000 43                 TSX1    WRITE_COMP_SUMMARY
        43 000747   000000 011000                    NOP     0

      403    10056
      404    10057    3     END;  /* if */

      405    10058
      406    10059    2   END PRODUCE_LSTIN;

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:70   
  10059 43 000750   200120 221300                    LDX1  ! INPUT_BUFFER+75,,AUTO
        43 000751   000001 702211                    TSX2  ! 1,X1

      407    10060        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:71   
      408    10061    1   PRODUCE_LSTOU: PROC;     /* in Z8IL$PRODUCE_LISTINGS */

  10061 43 000752   200120 741300       PRODUCE_LST* STX1  ! INPUT_BUFFER+75,,AUTO

      409    10062
      410    10063        /*I*
      411    10064               NAME: PRODUCE_LSTOU
      412    10065        DESCRIPTION:
      413    10066                       Write the compilation source listing with generated code
      414    10067                           on the output file.
      415    10068               */
      416    10069
      417    10070    2   IF COMCOM.OB.LISTOUT AND COMCOM.OB.DECK THEN

  10070 43 000753   000041 235000 xsym               LDA     COMCOM+33
        43 000754   000762 600000 43                 TZE     s:10074
        43 000755   000022 234000 xsym               SZN     COMCOM+18
        43 000756   000762 605000 43                 TPL     s:10074

      418    10071    2       CALL Z9IL$PRINT_LO;

  10071 43 000757   000000 631400 44                 EPPR1   0
        43 000760   000000 701000 xent               TSX1    Z9IL$PRINT_LO
        43 000761   000000 011000                    NOP     0

      419    10072
      420    10073        %IF CP6;
      421    10074    2   IF COMCOM.OB.LO AND COMCOM.OB.DECK THEN

  10074 43 000762   000101 235000 xsym               LDA     COMCOM+65
        43 000763   000773 600000 43                 TZE     s:10081
        43 000764   000022 234000 xsym               SZN     COMCOM+18
        43 000765   000773 605000 43                 TPL     s:10081

      422    10075    3     DO;

      423    10076    3       CALL INITIALIZE_LO;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:72   

  10076 43 000766   000003 701000 43                 TSX1    INITIALIZE_LO
        43 000767   000000 011000                    NOP     0

      424    10077    3       CALL Z9IL$PRINT_LO_WITH_UNGMAP;

  10077 43 000770   000000 631400 44                 EPPR1   0
        43 000771   000000 701000 xent               TSX1    Z9IL$PRINT_LO_WITH_UNGMAP
        43 000772   000000 011000                    NOP     0

      425    10078    3     END;

      426    10079        %ENDIF;
      427    10080
      428    10081    2   END PRODUCE_LSTOU;

  10081 43 000773   200120 221300                    LDX1  ! INPUT_BUFFER+75,,AUTO
        43 000774   000001 702211                    TSX2  ! 1,X1

      429    10082        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:73   
      430    10083    1   PRODUCE_XREF: PROC;     /* in Z8IL$PRODUCE_LISTINGS */

  10083 43 000775   200120 741300       PRODUCE_XREF STX1  ! INPUT_BUFFER+75,,AUTO
        43 000776   002050 710000 43                 TRA     s:10529

      431    10084
      432    10085        /*I*
      433    10086               NAME: PRODUCE_XREF
      434    10087        DESCRIPTION:
      435    10088                   Write the cross reference information on the output file.
      436    10089               */
      437    10090
      438    10091        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:74   
      439    10092
      440    10093    2   DCL XREF_SYM$ PTR;  /* List of symbols included in XREF */
      441    10094    2       SET_SYM_LIST_NIL : PROC;            /*  OF PRODUCE_XREF */

  10094 43 000777   200122 741300       SET_SYM_LIS* STX1  ! LAST_LINE_FROM_COPY,,AUTO

      442    10095
      443    10096    3         XREF_SYM$ = ADDR(NIL);

  10096 43 001000   000001 236000 44                 LDQ     1
        43 001001   200121 756100                    STQ     XREF_SYM$,,AUTO

      444    10097              %TOP_ST;

  10099 43 001002   000000 236000 30                 LDQ     ST_
        43 001003   000000 756000 29                 STQ     ST$

      445    10102    4         DO WHILE ST$ ~= ADDR(NIL);

  10102 43 001004   001031 710000 43                 TRA     s:10115

      446    10103    4           ST$ -> ST.X_SORT_SYM$ = ADDR(NIL);

  10103 43 001005   000001 236000 44                 LDQ     1
        43 001006   000000 470400 29                 LDP0    ST$
        43 001007   000010 756100                    STQ     8,,PR0

      447    10104    4           ST$ -> ST.X_REF_LIST$ = ADDR(NIL);

  10104 43 001010   000011 756100                    STQ     9,,PR0

      448    10105                %STEP_ST;

  10107 43 001011   000000 236000 29                 LDQ     ST$
        43 001012   000013 036003                    ADLQ    11,DU
        43 001013   000000 756000 29                 STQ     ST$

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:75   
  10108 43 001014   000002 236000 30                 LDQ     ST_+2
        43 001015   000022 736000                    QLS     18
        43 001016   000001 036000 30                 ADLQ    ST_+1
        43 001017   000000 116000 29                 CMPQ    ST$
        43 001020   001024 601000 43                 TNZ     s:10111

  10109 43 001021   000001 236000 44                 LDQ     1
        43 001022   000000 756000 29                 STQ     ST$
        43 001023   001031 710000 43                 TRA     s:10115

  10111 43 001024   000000 470400 29                 LDP0    ST$
        43 001025   000000 220100                    LDX0    0,,PR0
        43 001026   001031 601000 43                 TNZ     s:10115

  10112 43 001027   000001 236100                    LDQ     1,,PR0
        43 001030   000000 756000 29                 STQ     ST$

      449    10115    4         END;

  10115 43 001031   000000 236000 29                 LDQ     ST$
        43 001032   000001 116000 44                 CMPQ    1
        43 001033   001005 601000 43                 TNZ     s:10103

      450    10116
      451    10117    3       END SET_SYM_LIST_NIL;

  10117 43 001034   200122 221300                    LDX1  ! LAST_LINE_FROM_COPY,,AUTO
        43 001035   000001 702211                    TSX2  ! 1,X1

      452    10118         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:76   
      453    10119    2     PROCESS_XREF_LIST: PROC;              /*  OF PRODUCE_XREF */

  10119 43 001036   200122 741300       PROCESS_XRE* STX1  ! LAST_LINE_FROM_COPY,,AUTO
        43 001037   001161 710000 43                 TRA     s:10187

      454    10120
      455    10121    3         ADD_SYM_TO_XREF: PROC(SYM$);      /* OF PROCESS_XREF_LIST  OF PRODUCE_XREF */

  10121 43 001040   200124 741300       ADD_SYM_TO_* STX1  ! SYM$+1,,AUTO

      456    10122
      457    10123    4           DCL SYM$ PTR;   /* TO SYMBOL TABLE */
      458    10124    4           DCL 1 BPTR BASED ALIGNED,
      459    10125    4                 2 P PTR;
      460    10126    4           DCL LPTR PTR;
      461    10127    4           DCL LINKED BIT(1);
      462    10128
      463    10129    4           LPTR = ADDR(XREF_SYM$);

  10129 43 001041   200121 630500                    EPPR0   XREF_SYM$,,AUTO
        43 001042   200126 450500                    STP0    LPTR,,AUTO

      464    10130    4           LINKED = '0'B;

  10130 43 001043   200127 450100                    STZ     LINKED,,AUTO

      465    10131
      466    10132    5           DO UNTIL LINKED;

      467    10133    5             IF LPTR -> BPTR.P = ADDR(NIL) THEN

  10133 43 001044   200126 470500                    LDP0    LPTR,,AUTO
        43 001045   000000 236100                    LDQ     0,,PR0
        43 001046   000001 116000 44                 CMPQ    1
        43 001047   001061 601000 43                 TNZ     s:10140

      468    10134    6               DO;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:77   

      469    10135    6                 LPTR -> BPTR.P = SYM$;

  10135 43 001050   200125 471500                    LDP1    @SYM$,,AUTO
        43 001051   100000 236100                    LDQ     0,,PR1
        43 001052   000000 756100                    STQ     0,,PR0

      470    10136    6                 SYM$ -> ST.X_SORT_SYM$ = ADDR(NIL);

  10136 43 001053   100000 473500                    LDP3    0,,PR1
        43 001054   000001 236000 44                 LDQ     1
        43 001055   300010 756100                    STQ     8,,PR3

      471    10137    6                 LINKED = '1'B;

  10137 43 001056   400000 236003                    LDQ     -131072,DU
        43 001057   200127 756100                    STQ     LINKED,,AUTO

      472    10138    6               END;

  10138 43 001060   001104 710000 43                 TRA     s:10149

      473    10139    5             ELSE
      474    10140    5               IF LPTR -> BPTR.P -> ST.DNT$ -> DNT.TEXT.NAME >

  10140 43 001061   000000 471500                    LDP1    0,,PR0
        43 001062   100006 473500                    LDP3    6,,PR1
        43 001063   300004 220100                    LDX0    4,,PR3
        43 001064   200125 474500                    LDP4    @SYM$,,AUTO
        43 001065   400000 475500                    LDP5    0,,PR4
        43 001066   500006 476500                    LDP6    6,,PR5
        43 001067   600004 221100                    LDX1    4,,PR6
        43 001070   040140 106540                    CMPC    fill='040'O
        43 001071   600004 400011                    ADSC9   4,,PR6                   cn=2,n=*X1
        43 001072   300004 400010                    ADSC9   4,,PR3                   cn=2,n=*X0
        43 001073   001102 603000 43                 TRC     s:10148

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:78   
      475    10141    5                  SYM$ -> ST.DNT$ -> DNT.TEXT.NAME THEN
      476    10142    6                 DO;

      477    10143    6                   SYM$ -> ST.X_SORT_SYM$ = LPTR -> BPTR.P;

  10143 43 001074   500010 756100                    STQ     8,,PR5

      478    10144    6                   LPTR -> BPTR.P = SYM$;

  10144 43 001075   400000 236100                    LDQ     0,,PR4
        43 001076   000000 756100                    STQ     0,,PR0

      479    10145    6                   LINKED = '1'B;

  10145 43 001077   400000 236003                    LDQ     -131072,DU
        43 001100   200127 756100                    STQ     LINKED,,AUTO

      480    10146    6                 END;

  10146 43 001101   001104 710000 43                 TRA     s:10149

      481    10147    5               ELSE
      482    10148    5                 LPTR = ADDR(LPTR -> BPTR.P -> ST.X_SORT_SYM$);

  10148 43 001102   100010 637500                    EPPR7   8,,PR1
        43 001103   200126 457500                    STP7    LPTR,,AUTO

      483    10149    5           END; /* DO UNTIL */

  10149 43 001104   200127 234100                    SZN     LINKED,,AUTO
        43 001105   001044 605000 43                 TPL     s:10133

      484    10150
      485    10151    4         END ADD_SYM_TO_XREF;

  10151 43 001106   200124 221300                    LDX1  ! SYM$+1,,AUTO
        43 001107   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:79   

      486    10152        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:80   
      487    10153    3         ADD_REF_TO_XREF : PROC;           /* OF PROCESS_XREF  OF PRODUCE_XREF */

  10153 43 001110   200124 741300       ADD_REF_TO_* STX1  ! SYM$+1,,AUTO

      488    10154
      489    10155    4           DCL 1 BPTR BASED ALIGNED,
      490    10156    4                 2 P PTR;
      491    10157    4           DCL LPTR PTR;
      492    10158    4           DCL LINKED BIT(1);
      493    10159
      494    10160    4           LPTR = ADDR(XREF$ -> XREF.SYMPTR -> ST.X_REF_LIST$);

  10160 43 001111   000000 470400 27                 LDP0    XREF$
        43 001112   000001 471500                    LDP1    1,,PR0
        43 001113   100011 633500                    EPPR3   9,,PR1
        43 001114   200125 453500                    STP3    LPTR,,AUTO

      495    10161    4           LINKED = '0'B;

  10161 43 001115   200126 450100                    STZ     LINKED,,AUTO

      496    10162
      497    10163    5           DO UNTIL LINKED;

      498    10164    5             IF LPTR -> BPTR.P = ADDR(NIL) THEN

  10164 43 001116   200125 470500                    LDP0    LPTR,,AUTO
        43 001117   000000 236100                    LDQ     0,,PR0
        43 001120   000001 116000 44                 CMPQ    1
        43 001121   001132 601000 43                 TNZ     s:10171

      499    10165    6               DO;

      500    10166    6                 LPTR -> BPTR.P = XREF$;

  10166 43 001122   000000 236000 27                 LDQ     XREF$
        43 001123   000000 756100                    STQ     0,,PR0
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:81   

      501    10167    6                 XREF$ -> XREF.SYMPTR = ADDR(NIL);

  10167 43 001124   000001 236000 44                 LDQ     1
        43 001125   000000 471400 27                 LDP1    XREF$
        43 001126   100001 756100                    STQ     1,,PR1

      502    10168    6                 LINKED = '1'B;

  10168 43 001127   400000 236003                    LDQ     -131072,DU
        43 001130   200126 756100                    STQ     LINKED,,AUTO

      503    10169    6               END;

  10169 43 001131   001155 710000 43                 TRA     s:10180

      504    10170    5             ELSE
      505    10171    5               IF LPTR -> BPTR.P -> XREF.XISN >

  10171 43 001132   000000 471500                    LDP1    0,,PR0
        43 001133   100000 236100                    LDQ     0,,PR1
        43 001134   777777 376007                    ANQ     -1,DL
        43 001135   200176 756100                    STQ     @LEN+2,,AUTO
        43 001136   000000 471400 27                 LDP1    XREF$
        43 001137   100000 236100                    LDQ     0,,PR1
        43 001140   777777 376007                    ANQ     -1,DL
        43 001141   200176 116100                    CMPQ    @LEN+2,,AUTO
        43 001142   001152 605000 43                 TPL     s:10179

      506    10172    5                  XREF$ -> XREF.XISN THEN
      507    10173    6                 DO;

      508    10174    6                   XREF$ -> XREF.SYMPTR = LPTR -> BPTR.P;

  10174 43 001143   000000 236100                    LDQ     0,,PR0
        43 001144   100001 756100                    STQ     1,,PR1

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:82   
      509    10175    6                   LPTR -> BPTR.P = XREF$;

  10175 43 001145   000000 236000 27                 LDQ     XREF$
        43 001146   000000 756100                    STQ     0,,PR0

      510    10176    6                   LINKED = '1'B;

  10176 43 001147   400000 236003                    LDQ     -131072,DU
        43 001150   200126 756100                    STQ     LINKED,,AUTO

      511    10177    6                 END;

  10177 43 001151   001155 710000 43                 TRA     s:10180

      512    10178    5               ELSE
      513    10179    5                 LPTR = ADDR(LPTR -> BPTR.P -> XREF.SYMPTR);

  10179 43 001152   000000 473500                    LDP3    0,,PR0
        43 001153   300001 634500                    EPPR4   1,,PR3
        43 001154   200125 454500                    STP4    LPTR,,AUTO

      514    10180    5           END; /* DO UNTIL */

  10180 43 001155   200126 234100                    SZN     LINKED,,AUTO
        43 001156   001116 605000 43                 TPL     s:10164

      515    10181
      516    10182    4         END ADD_REF_TO_XREF;

  10182 43 001157   200124 221300                    LDX1  ! SYM$+1,,AUTO
        43 001160   000001 702211                    TSX2  ! 1,X1

      517    10183         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:83   
      518    10184              /* Main body of PROCESS_XREF_LIST */
      519    10185
      520    10186              %TOP_XREF;

  10187 43 001161   000000 236000 28                 LDQ     XREF_
        43 001162   000000 756000 27                 STQ     XREF$

      521    10189    4         DO WHILE XREF$ ~= ADDR(NIL);

  10189 43 001163   001220 710000 43                 TRA     s:10203

      522    10190    4           IF XREF$ -> XREF.SYMPTR -> ST.X_SORT_SYM$ = ADDR(NIL) THEN

  10190 43 001164   000000 470400 27                 LDP0    XREF$
        43 001165   000001 471500                    LDP1    1,,PR0
        43 001166   100010 236100                    LDQ     8,,PR1
        43 001167   000001 116000 44                 CMPQ    1
        43 001170   001176 601000 43                 TNZ     s:10192

      523    10191    4             CALL ADD_SYM_TO_XREF(XREF$ -> XREF.SYMPTR);

  10191 43 001171   000000 236000 27                 LDQ     XREF$
        43 001172   000001 036003                    ADLQ    1,DU
        43 001173   200125 756100                    STQ     @OUTPUT_PROC,,AUTO
        43 001174   001040 701000 43                 TSX1    ADD_SYM_TO_XREF
        43 001175   000000 011000                    NOP     0

      524    10192    4           CALL ADD_REF_TO_XREF;

  10192 43 001176   001110 701000 43                 TSX1    ADD_REF_TO_XREF
        43 001177   000000 011000                    NOP     0

      525    10193                %STEP_XREF;

  10195 43 001200   000000 236000 27                 LDQ     XREF$
        43 001201   000002 036003                    ADLQ    2,DU
        43 001202   000000 756000 27                 STQ     XREF$
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:84   

  10196 43 001203   000002 236000 28                 LDQ     XREF_+2
        43 001204   000022 736000                    QLS     18
        43 001205   000001 036000 28                 ADLQ    XREF_+1
        43 001206   000000 116000 27                 CMPQ    XREF$
        43 001207   001213 601000 43                 TNZ     s:10199

  10197 43 001210   000001 236000 44                 LDQ     1
        43 001211   000000 756000 27                 STQ     XREF$
        43 001212   001220 710000 43                 TRA     s:10203

  10199 43 001213   000000 470400 27                 LDP0    XREF$
        43 001214   000000 220100                    LDX0    0,,PR0
        43 001215   001220 601000 43                 TNZ     s:10203

  10200 43 001216   000001 236100                    LDQ     1,,PR0
        43 001217   000000 756000 27                 STQ     XREF$

      526    10203    4         END;  /* DO WHILE */

  10203 43 001220   000000 236000 27                 LDQ     XREF$
        43 001221   000001 116000 44                 CMPQ    1
        43 001222   001164 601000 43                 TNZ     s:10190

      527    10204
      528    10205    3       END PROCESS_XREF_LIST;

  10205 43 001223   200122 221300                    LDX1  ! LAST_LINE_FROM_COPY,,AUTO
        43 001224   000001 702211                    TSX2  ! 1,X1

      529    10206         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:85   
      530    10207    2     PRINT_XREF_HEADING : PROC;  /* OF PRODUCE_XREF */

  10207 43 001225   200122 741300       PRINT_XREF_* STX1  ! LAST_LINE_FROM_COPY,,AUTO

      531    10208
      532    10209
      533    10210    3       DCL 1 XREF_SUB_HEADING CONSTANT,
      534    10211    3             2 TEXT   CHAR(0) INIT('        *** Cross Reference Listing ***');
      535    10212
      536    10213    3       DCL 1 XHEAD CONSTANT,
      537    10214    3             2 BLKLIN CHAR(0) INIT(' '),
      538    10215    3             2 LINE1   CHAR(0) INIT('** Denotes line where the symbol is declared.');
      539    10216
      540    10217
      541    10218            %SETUP_SUB_HEADING( L0 = XREF_SUB_HEADING, L1 = BLANK );

  10220 43 001226   000043 236000 44                 LDQ     35
        43 001227   000000 756000 2                  STQ     SUB_HEADING_ADDR

  10221 43 001230   000047 235007                    LDA     39,DL
        43 001231   000000 755000 3                  STA     SUB_HEADING_LEN

  10222 43 001232   000011 236000 44                 LDQ     9
        43 001233   000000 756000 4                  STQ     SUB_HEADING_ADDR1

  10223 43 001234   000001 235007                    LDA     1,DL
        43 001235   000000 755000 5                  STA     SUB_HEADING_LEN1

  10224 43 001236   000001 236000 44                 LDQ     1
        43 001237   000000 756000 6                  STQ     SUB_HEADING_ADDR2

  10225 43 001240   000000 450000 7                  STZ     SUB_HEADING_LEN2

      542    10228    3       CALL Z9IL$OUTPUT_TO_LO(ADDR(XHEAD.BLKLIN),LENGTHC(XHEAD.BLKLIN));

  10228 43 001241   000044 236000 44                 LDQ     36
        43 001242   200176 756100                    STQ     @LEN+2,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:86   
        43 001243   000013 236000 44                 LDQ     11
        43 001244   200201 756100                    STQ     @LEN+5,,AUTO
        43 001245   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 001246   200200 450500                    STP0    @LEN+4,,AUTO
        43 001247   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 001250   000002 631400 44                 EPPR1   2
        43 001251   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 001252   000000 011000                    NOP     0

      543    10229    3       CALL Z9IL$OUTPUT_TO_LO(ADDR(XHEAD.LINE1),LENGTHC(XHEAD.LINE1));

  10229 43 001253   000045 236000 44                 LDQ     37
        43 001254   200176 756100                    STQ     @LEN+2,,AUTO
        43 001255   000036 236000 44                 LDQ     30
        43 001256   200201 756100                    STQ     @LEN+5,,AUTO
        43 001257   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 001260   200200 450500                    STP0    @LEN+4,,AUTO
        43 001261   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 001262   000002 631400 44                 EPPR1   2
        43 001263   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 001264   000000 011000                    NOP     0

      544    10230    3       CALL Z9IL$OUTPUT_TO_LO(ADDR(XHEAD.BLKLIN),LENGTHC(XHEAD.BLKLIN));

  10230 43 001265   000044 236000 44                 LDQ     36
        43 001266   200176 756100                    STQ     @LEN+2,,AUTO
        43 001267   000013 236000 44                 LDQ     11
        43 001270   200201 756100                    STQ     @LEN+5,,AUTO
        43 001271   200176 630500                    EPPR0   @LEN+2,,AUTO
        43 001272   200200 450500                    STP0    @LEN+4,,AUTO
        43 001273   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 001274   000002 631400 44                 EPPR1   2
        43 001275   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 001276   000000 011000                    NOP     0

      545    10231
      546    10232    3     END PRINT_XREF_HEADING;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:87   

  10232 43 001277   200122 221300                    LDX1  ! LAST_LINE_FROM_COPY,,AUTO
        43 001300   000001 702211                    TSX2  ! 1,X1

      547    10233        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:88   
      548    10234    2     PRINT_XREF : PROC;  /* OF PRODUCE_XREF */

  10234 43 001301   200122 741300       PRINT_XREF   STX1  ! LAST_LINE_FROM_COPY,,AUTO
        43 001302   001762 710000 43                 TRA     s:10406

      549    10235
      550    10236    3       DCL SYM$ PTR;
      551    10237    3       DCL XR$ PTR;
      552    10238    3       DCL LINE CHAR(%MAX_LISTING_LINE_LENGTH);
      553    10239    3       DCL LINELEN SBIN;
      554    10240
      555    10241            %MACRO FLUSH;
      556    10242              DO;
      557    10243                IF LINELEN > 0 THEN
      558    10244                  DO;
      559    10245                    CALL Z9IL$OUTPUT_TO_LO(ADDR(LINE),LINELEN);
      560    10246                    LINELEN = 0;
      561    10247                  END;
      562    10248              END;
      563    10249            %MEND;
      564    10250
      565    10251            %MACRO OUT_STR(S="' '");
      566    10252                CALL OUT_STR(S,LENGTHC(S));
      567    10253            %MEND;
      568    10254
      569    10255        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:89   
      570    10256
      571    10257    3       OUT_STR : PROC(STR, LEN);

  10257 43 001303   200172 741300       OUT_STR      STX1  ! OSTR+3,,AUTO

      572    10258
      573    10259    4         DCL LEN SBIN;
      574    10260    4         DCL STR CHAR(LEN);
      575    10261
      576    10262    4         IF LEN + LINELEN > %MAX_LISTING_LINE_LENGTH THEN

  10262 43 001304   200174 470500                    LDP0    @LEN,,AUTO
        43 001305   000000 236100                    LDQ     0,,PR0
        43 001306   200161 036100                    ADLQ    LINELEN,,AUTO
        43 001307   000155 116007                    CMPQ    109,DL
        43 001310   001333 604400 43                 TMOZ    s:10276

      577    10263    5           DO;

      578    10264                  %FLUSH;

  10266 43 001311   200161 235100                    LDA     LINELEN,,AUTO
        43 001312   001326 604400 43                 TMOZ    s:10273

  10268 43 001313   200125 631500                    EPPR1   LINE,,AUTO
        43 001314   200176 451500                    STP1    @LEN+2,,AUTO
        43 001315   200161 633500                    EPPR3   LINELEN,,AUTO
        43 001316   200201 453500                    STP3    @LEN+5,,AUTO
        43 001317   200176 634500                    EPPR4   @LEN+2,,AUTO
        43 001320   200200 454500                    STP4    @LEN+4,,AUTO
        43 001321   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 001322   000002 631400 44                 EPPR1   2
        43 001323   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 001324   000000 011000                    NOP     0

  10269 43 001325   200161 450100                    STZ     LINELEN,,AUTO

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:90   
      579    10273    5             CALL INSERT(LINE,0,%LINE_OVERFLOW_INDENT,'                    ');

  10273 43 001326   040100 100400                    MLR     fill='040'O
        43 001327   000203 000023 1                  ADSC9   XHEAD+14                 cn=0,n=19
        43 001330   200125 000023                    ADSC9   LINE,,AUTO               cn=0,n=19

      580    10274    5             LINELEN = %LINE_OVERFLOW_INDENT;

  10274 43 001331   000023 235007                    LDA     19,DL
        43 001332   200161 755100                    STA     LINELEN,,AUTO

      581    10275    5           END;

      582    10276    4         IF LINELEN + LEN > %MAX_LISTING_LINE_LENGTH THEN

  10276 43 001333   200174 470500                    LDP0    @LEN,,AUTO
        43 001334   200161 236100                    LDQ     LINELEN,,AUTO
        43 001335   000000 036100                    ADLQ    0,,PR0
        43 001336   000155 116007                    CMPQ    109,DL
        43 001337   001354 604400 43                 TMOZ    s:10283

      583    10277    5           DO;

      584    10278    5             CALL Z9IL$OUTPUT_TO_LO(ADDR(STR),LEN);

  10278 43 001340   200173 236100                    LDQ     @STR,,AUTO
        43 001341   200176 756100                    STQ     @LEN+2,,AUTO
        43 001342   200174 236100                    LDQ     @LEN,,AUTO
        43 001343   200201 756100                    STQ     @LEN+5,,AUTO
        43 001344   200176 631500                    EPPR1   @LEN+2,,AUTO
        43 001345   200200 451500                    STP1    @LEN+4,,AUTO
        43 001346   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 001347   000002 631400 44                 EPPR1   2
        43 001350   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 001351   000000 011000                    NOP     0

      585    10279    5             LINELEN = 0;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:91   

  10279 43 001352   200161 450100                    STZ     LINELEN,,AUTO

      586    10280    5           END;

  10280 43 001353   001367 710000 43                 TRA     s:10287

      587    10281    4         ELSE
      588    10282    5           DO;

      589    10283    5             CALL INSERT(LINE,LINELEN,LEN,STR);

  10283 43 001354   000000 720100                    LXL0    0,,PR0
        43 001355   200176 740100                    STX0    @LEN+2,,AUTO
        43 001356   200173 471500                    LDP1    @STR,,AUTO
        43 001357   200176 221100                    LDX1    @LEN+2,,AUTO
        43 001360   200161 235100                    LDA     LINELEN,,AUTO
        43 001361   040145 100540                    MLR     fill='040'O
        43 001362   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
        43 001363   200125 000010                    ADSC9   LINE,A,AUTO              cn=0,n=*X0

      590    10284    5             LINELEN = LINELEN + LEN;

  10284 43 001364   200161 236100                    LDQ     LINELEN,,AUTO
        43 001365   000000 036100                    ADLQ    0,,PR0
        43 001366   200161 756100                    STQ     LINELEN,,AUTO

      591    10285    5           END;

      592    10286
      593    10287    4       END OUT_STR;

  10287 43 001367   200172 221300                    LDX1  ! OSTR+3,,AUTO
        43 001370   000001 702211                    TSX2  ! 1,X1

      594    10288
      595    10289        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:92   
      596    10290    3       OUT_DEC : PROC(NUM);

  10290 43 001371   200164 741300       OUT_DEC      STX1  ! LINELEN+3,,AUTO

      597    10291
      598    10292    4         DCL NUM SBIN;
      599    10293    4         DCL DISP SBIN;
      600    10294    4         DCL OSTR CHAR(6);
      601    10295
      602    10296    4         CALL BINCHAR(OSTR, NUM);

  10296 43 001372   200165 470500                    LDP0    @NUM,,AUTO
        43 001373   000100 301500                    BTD
        43 001374   000000 000004                    NDSC9   0,,PR0                   cn=0,s=lsgnf,sf=0,n=4
        43 001375   200167 030006                    NDSC9   OSTR,,AUTO               cn=0,s=nosgn,sf=0,n=6

      603    10297    4         DISP = 0;

  10297 43 001376   200166 450100                    STZ     DISP,,AUTO

      604    10298    5         DO WHILE ( SUBSTR(OSTR,DISP,1) = '0' );

  10298 43 001377   001405 710000 43                 TRA     s:10301

      605    10299    5           SUBSTR( OSTR, DISP, 1 ) = ' ';                      /*#35510*/

  10299 43 001400   200166 235100                    LDA     DISP,,AUTO
        43 001401   040105 100400                    MLR     fill='040'O
        43 001402   000033 000001 44                 ADSC9   27                       cn=0,n=1
        43 001403   200167 000001                    ADSC9   OSTR,A,AUTO              cn=0,n=1

      606    10300    5           DISP = DISP + 1;

  10300 43 001404   200166 054100                    AOS     DISP,,AUTO

      607    10301    5         END;

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:93   
  10301 43 001405   200166 235100                    LDA     DISP,,AUTO
        43 001406   040000 106505                    CMPC    fill='040'O
        43 001407   200167 000001                    ADSC9   OSTR,A,AUTO              cn=0,n=1
        43 001410   000046 000001 44                 ADSC9   38                       cn=0,n=1
        43 001411   001400 600000 43                 TZE     s:10299

      608    10302    4         CALL OUT_STR( OSTR, 6 );

  10302 43 001412   000050 236000 44                 LDQ     40
        43 001413   200174 756100                    STQ     @LEN,,AUTO
        43 001414   200167 630500                    EPPR0   OSTR,,AUTO
        43 001415   200173 450500                    STP0    @STR,,AUTO
        43 001416   001303 701000 43                 TSX1    OUT_STR
        43 001417   000000 011000                    NOP     0

      609    10303
      610    10304    4       END OUT_DEC;

  10304 43 001420   200164 221300                    LDX1  ! LINELEN+3,,AUTO
        43 001421   000001 702211                    TSX2  ! 1,X1

      611    10305        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:94   
      612    10306    3       PRINT_THIS_REF : PROC;

  10306 43 001422   200162 741300       PRINT_THIS_* STX1  ! LINELEN+1,,AUTO

      613    10307
      614    10308    4         CALL OUT_DEC(BINBIT(XR$ -> XREF.XISN,36));

  10308 43 001423   200124 470500                    LDP0    XR$,,AUTO
        43 001424   000000 236100                    LDQ     0,,PR0
        43 001425   777777 376007                    ANQ     -1,DL
        43 001426   200214 756100                    STQ     @LEN+16,,AUTO
        43 001427   200214 631500                    EPPR1   @LEN+16,,AUTO
        43 001430   200165 451500                    STP1    @NUM,,AUTO
        43 001431   001371 701000 43                 TSX1    OUT_DEC
        43 001432   000000 011000                    NOP     0

      615    10309    4         IF  XR$-> XREF.ID = %XREF_DCL THEN

  10309 43 001433   200124 470500                    LDP0    XR$,,AUTO
        43 001434   000000 220100                    LDX0    0,,PR0
        43 001435   000004 100003                    CMPX0   4,DU
        43 001436   001446 601000 43                 TNZ     s:10315

      616    10310                %OUT_STR (S="'**'");

  10311 43 001437   000052 236000 44                 LDQ     42
        43 001440   200174 756100                    STQ     @LEN,,AUTO
        43 001441   000053 236000 44                 LDQ     43
        43 001442   200173 756100                    STQ     @STR,,AUTO
        43 001443   001303 701000 43                 TSX1    OUT_STR
        43 001444   000000 011000                    NOP     0
        43 001445   001454 710000 43                 TRA     s:10318

      617    10313    4         ELSE
      618    10314                %OUT_STR (S="'  '");

  10315 43 001446   000052 236000 44                 LDQ     42
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:95   
        43 001447   200174 756100                    STQ     @LEN,,AUTO
        43 001450   000054 236000 44                 LDQ     44
        43 001451   200173 756100                    STQ     @STR,,AUTO
        43 001452   001303 701000 43                 TSX1    OUT_STR
        43 001453   000000 011000                    NOP     0

      619    10317
      620    10318    4       END PRINT_THIS_REF;

  10318 43 001454   200162 221300                    LDX1  ! LINELEN+1,,AUTO
        43 001455   000001 702211                    TSX2  ! 1,X1

      621    10319        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:96   
      622    10320    3       PRINT_SYMBOL : PROC;  /* OF PRINT_XREF OF PRODUCE_XREF */

  10320 43 001456   200162 741300       PRINT_SYMBOL STX1  ! LINELEN+1,,AUTO

      623    10321
      624    10322    4         ST$ = SYM$;

  10322 43 001457   200123 236100                    LDQ     SYM$,,AUTO
        43 001460   000000 756000 29                 STQ     ST$

      625    10323    5         DO WHILE ST$ ~= ADDR(NIL);

  10323 43 001461   001631 710000 43                 TRA     s:10373

      626    10324
      627    10325    5           CALL OUT_STR(ST$ -> ST.DNT$ -> DNT.TEXT.NAME,

  10325 43 001462   000000 470400 29                 LDP0    ST$
        43 001463   000006 471500                    LDP1    6,,PR0
        43 001464   100004 236100                    LDQ     4,,PR1
        43 001465   000022 772000                    QRL     18
        43 001466   200216 756100                    STQ     @LEN+18,,AUTO
        43 001467   200216 633500                    EPPR3   @LEN+18,,AUTO
        43 001470   200174 453500                    STP3    @LEN,,AUTO
        43 001471   200176 451500                    STP1    @LEN+2,,AUTO
        43 001472   200176 236100                    LDQ     @LEN+2,,AUTO
        43 001473   000055 036000 44                 ADLQ    45
        43 001474   200173 756100                    STQ     @STR,,AUTO
        43 001475   001303 701000 43                 TSX1    OUT_STR
        43 001476   000000 011000                    NOP     0

      628    10326    5                    BINBIT(ST$ -> ST.DNT$ -> DNT.TEXT.LENGTH,36));
      629    10327
      630    10328    6           DO CASE ST$ -> ST.ID;

  10328 43 001477   000000 470400 29                 LDP0    ST$
        43 001500   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:97   
        43 001501   000022 772000                    QRL     18
        43 001502   000763 136007                    SBLQ    499,DL
        43 001503   000016 116007                    CMPQ    14,DL
        43 001504   001506 602006 43                 TNC     s:10328+7,QL
        43 001505   001554 710000 43                 TRA     s:10348
        43 001506   001524 710000 43                 TRA     s:10332
        43 001507   001554 710000 43                 TRA     s:10348
        43 001510   001554 710000 43                 TRA     s:10348
        43 001511   001554 710000 43                 TRA     s:10348
        43 001512   001524 710000 43                 TRA     s:10332
        43 001513   001524 710000 43                 TRA     s:10332
        43 001514   001527 710000 43                 TRA     s:10336
        43 001515   001524 710000 43                 TRA     s:10332
        43 001516   001524 710000 43                 TRA     s:10332
        43 001517   001554 710000 43                 TRA     s:10348
        43 001520   001554 710000 43                 TRA     s:10348
        43 001521   001554 710000 43                 TRA     s:10348
        43 001522   001554 710000 43                 TRA     s:10348
        43 001523   001524 710000 43                 TRA     s:10332

      631    10329
      632    10330    6             CASE (%SYMREF_, %SYMDEF_, %SEGMENT, %SECTION, %CONST, %ALPHABET);

      633    10331
      634    10332    6                 ST$ = ADDR(NIL);

  10332 43 001524   000001 236000 44                 LDQ     1
        43 001525   000000 756000 29                 STQ     ST$
        43 001526   001631 710000 43                 TRA     s:10373

      635    10333
      636    10334    6             CASE (%PARA);

      637    10335
      638    10336    6                 IF ST$ -> PARA.DNT$ -> DNT.ST$ -> ST.NEXT ~= ADDR(NIL) AND

  10336 43 001527   000006 471500                    LDP1    6,,PR0
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:98   
        43 001530   100001 473500                    LDP3    1,,PR1
        43 001531   300004 236100                    LDQ     4,,PR3
        43 001532   000001 116000 44                 CMPQ    1
        43 001533   001551 600000 43                 TZE     s:10345
        43 001534   000007 236100                    LDQ     7,,PR0
        43 001535   000001 116000 44                 CMPQ    1
        43 001536   001551 600000 43                 TZE     s:10345

      639    10337    6                    ST$ -> PARA.SECTION$ ~= ADDR(NIL) THEN
      640    10338    7                   DO;

      641    10339                          %OUT_STR(S="' of '");

  10340 43 001537   000057 236000 44                 LDQ     47
        43 001540   200174 756100                    STQ     @LEN,,AUTO
        43 001541   000060 236000 44                 LDQ     48
        43 001542   200173 756100                    STQ     @STR,,AUTO
        43 001543   001303 701000 43                 TSX1    OUT_STR
        43 001544   000000 011000                    NOP     0

      642    10342    7                     ST$ = ST$ -> PARA.SECTION$;

  10342 43 001545   000000 470400 29                 LDP0    ST$
        43 001546   000007 236100                    LDQ     7,,PR0
        43 001547   000000 756000 29                 STQ     ST$

      643    10343    7                   END;

  10343 43 001550   001631 710000 43                 TRA     s:10373

      644    10344    6                 ELSE
      645    10345    6                   ST$ = ADDR(NIL);

  10345 43 001551   000001 236000 44                 LDQ     1
        43 001552   000000 756000 29                 STQ     ST$
        43 001553   001631 710000 43                 TRA     s:10373

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:99   
      646    10346
      647    10347    6             CASE (ELSE);

      648    10348    6               IF  ST$-> ST.DNT$-> DNT.ST$ = ADDR(NIL) THEN       /*#28017*/

  10348 43 001554   000006 471500                    LDP1    6,,PR0
        43 001555   100001 236100                    LDQ     1,,PR1
        43 001556   000001 116000 44                 CMPQ    1
        43 001557   001603 601000 43                 TNZ     s:10361

      649    10349    7                 DO;

      650    10350    7                   IF ST$ -> VARIABLE.QLT$ -> QLT.FATHER ~= ADDR(NIL)  THEN

  10350 43 001560   000007 473500                    LDP3    7,,PR0
        43 001561   300001 236100                    LDQ     1,,PR3
        43 001562   000001 116000 44                 CMPQ    1
        43 001563   001600 600000 43                 TZE     s:10358

      651    10351    8                     DO;

      652    10352                            %OUT_STR(S="' of '");

  10353 43 001564   000057 236000 44                 LDQ     47
        43 001565   200174 756100                    STQ     @LEN,,AUTO
        43 001566   000060 236000 44                 LDQ     48
        43 001567   200173 756100                    STQ     @STR,,AUTO
        43 001570   001303 701000 43                 TSX1    OUT_STR
        43 001571   000000 011000                    NOP     0

      653    10355    8                       ST$ = VARIABLE.QLT$ -> QLT.FATHER -> QLT.ST$;

  10355 43 001572   000000 470400 29                 LDP0    ST$
        43 001573   000007 471500                    LDP1    7,,PR0
        43 001574   100001 473500                    LDP3    1,,PR1
        43 001575   300004 236100                    LDQ     4,,PR3
        43 001576   000000 756000 29                 STQ     ST$
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:100  

      654    10356    8                     END;

  10356 43 001577   001631 710000 43                 TRA     s:10373

      655    10357    7                   ELSE
      656    10358    7                      ST$ = ADDR(NIL);

  10358 43 001600   000001 236000 44                 LDQ     1
        43 001601   000000 756000 29                 STQ     ST$

      657    10359    7                 END;

  10359 43 001602   001631 710000 43                 TRA     s:10373

      658    10360    6               ELSE
      659    10361    6                 IF ST$-> ST.DNT$-> DNT.ST$-> ST.NEXT ~= ADDR(NIL) /*#24623*/

  10361 43 001603   100001 473500                    LDP3    1,,PR1
        43 001604   300004 236100                    LDQ     4,,PR3
        43 001605   000001 116000 44                 CMPQ    1
        43 001606   001627 600000 43                 TZE     s:10370
        43 001607   000007 474500                    LDP4    7,,PR0
        43 001610   400001 236100                    LDQ     1,,PR4
        43 001611   000001 116000 44                 CMPQ    1
        43 001612   001627 600000 43                 TZE     s:10370

      660    10362    6                 AND ST$-> VARIABLE.QLT$-> QLT.FATHER  ~= ADDR(NIL) THEN
      661    10363    7                   DO;

      662    10364                          %OUT_STR(S="' of '");

  10365 43 001613   000057 236000 44                 LDQ     47
        43 001614   200174 756100                    STQ     @LEN,,AUTO
        43 001615   000060 236000 44                 LDQ     48
        43 001616   200173 756100                    STQ     @STR,,AUTO
        43 001617   001303 701000 43                 TSX1    OUT_STR
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:101  
        43 001620   000000 011000                    NOP     0

      663    10367    7                     ST$ = VARIABLE.QLT$ -> QLT.FATHER -> QLT.ST$;

  10367 43 001621   000000 470400 29                 LDP0    ST$
        43 001622   000007 471500                    LDP1    7,,PR0
        43 001623   100001 473500                    LDP3    1,,PR1
        43 001624   300004 236100                    LDQ     4,,PR3
        43 001625   000000 756000 29                 STQ     ST$

      664    10368    7                   END;

  10368 43 001626   001631 710000 43                 TRA     s:10373

      665    10369    6                 ELSE
      666    10370    6                   ST$ = ADDR(NIL);

  10370 43 001627   000001 236000 44                 LDQ     1
        43 001630   000000 756000 29                 STQ     ST$

      667    10371
      668    10372    6           END;

      669    10373    5         END;

  10373 43 001631   000001 116000 44                 CMPQ    1
        43 001632   001462 601000 43                 TNZ     s:10325

      670    10374
      671    10375    4         IF LINELEN >= 19 THEN                                 /*#24618*/

  10375 43 001633   200161 235100                    LDA     LINELEN,,AUTO
        43 001634   000023 115007                    CMPA    19,DL
        43 001635   001747 604000 43                 TMI     s:10400

      672    10376    5           DO CASE( LINELEN );                                 /*#35510*/

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:102  
  10376 43 001636   000023 135007                    SBLA    19,DL
        43 001637   000031 115007                    CMPA    25,DL
        43 001640   001642 602005 43                 TNC     s:10376+4,AL
        43 001641   001731 710000 43                 TRA     s:10390
        43 001642   001673 710000 43                 TRA     s:10379
        43 001643   001673 710000 43                 TRA     s:10379
        43 001644   001673 710000 43                 TRA     s:10379
        43 001645   001673 710000 43                 TRA     s:10379
        43 001646   001673 710000 43                 TRA     s:10379
        43 001647   001673 710000 43                 TRA     s:10379
        43 001650   001673 710000 43                 TRA     s:10379
        43 001651   001673 710000 43                 TRA     s:10379
        43 001652   001673 710000 43                 TRA     s:10379
        43 001653   001705 710000 43                 TRA     s:10382
        43 001654   001705 710000 43                 TRA     s:10382
        43 001655   001705 710000 43                 TRA     s:10382
        43 001656   001705 710000 43                 TRA     s:10382
        43 001657   001705 710000 43                 TRA     s:10382
        43 001660   001705 710000 43                 TRA     s:10382
        43 001661   001705 710000 43                 TRA     s:10382
        43 001662   001705 710000 43                 TRA     s:10382
        43 001663   001717 710000 43                 TRA     s:10385
        43 001664   001717 710000 43                 TRA     s:10385
        43 001665   001717 710000 43                 TRA     s:10385
        43 001666   001717 710000 43                 TRA     s:10385
        43 001667   001717 710000 43                 TRA     s:10385
        43 001670   001717 710000 43                 TRA     s:10385
        43 001671   001717 710000 43                 TRA     s:10385
        43 001672   001717 710000 43                 TRA     s:10385

      673    10377
      674    10378    5             CASE( 19,20,21,22,23,24,25,26,27 );

      675    10379    5               CALL OUT_STR( '        ', 27-LINELEN );

  10379 43 001673   000033 235007                    LDA     27,DL
        43 001674   200161 135100                    SBLA    LINELEN,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:103  
        43 001675   200220 755100                    STA     @LEN+20,,AUTO
        43 001676   200220 630500                    EPPR0   @LEN+20,,AUTO
        43 001677   200174 450500                    STP0    @LEN,,AUTO
        43 001700   000054 236000 44                 LDQ     44
        43 001701   200173 756100                    STQ     @STR,,AUTO
        43 001702   001303 701000 43                 TSX1    OUT_STR
        43 001703   000000 011000                    NOP     0
        43 001704   001760 710000 43                 TRA     s:10402

      676    10380
      677    10381    5             CASE( 28,29,30,31,32,33,34,35 );

      678    10382    5               CALL OUT_STR( '       ',35-LINELEN );

  10382 43 001705   000043 235007                    LDA     35,DL
        43 001706   200161 135100                    SBLA    LINELEN,,AUTO
        43 001707   200221 755100                    STA     @LEN+21,,AUTO
        43 001710   200221 630500                    EPPR0   @LEN+21,,AUTO
        43 001711   200174 450500                    STP0    @LEN,,AUTO
        43 001712   000054 236000 44                 LDQ     44
        43 001713   200173 756100                    STQ     @STR,,AUTO
        43 001714   001303 701000 43                 TSX1    OUT_STR
        43 001715   000000 011000                    NOP     0
        43 001716   001760 710000 43                 TRA     s:10402

      679    10383
      680    10384    5             CASE( 36,37,38,39,40,41,42,43 );

      681    10385    5               CALL OUT_STR( '       ',43-LINELEN );

  10385 43 001717   000053 235007                    LDA     43,DL
        43 001720   200161 135100                    SBLA    LINELEN,,AUTO
        43 001721   200222 755100                    STA     @LEN+22,,AUTO
        43 001722   200222 630500                    EPPR0   @LEN+22,,AUTO
        43 001723   200174 450500                    STP0    @LEN,,AUTO
        43 001724   000054 236000 44                 LDQ     44
        43 001725   200173 756100                    STQ     @STR,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:104  
        43 001726   001303 701000 43                 TSX1    OUT_STR
        43 001727   000000 011000                    NOP     0
        43 001730   001760 710000 43                 TRA     s:10402

      682    10386
      683    10387    5             CASE( ELSE );

      684    10388                    %FLUSH;

  10390 43 001731   200161 235100                    LDA     LINELEN,,AUTO
        43 001732   001760 604400 43                 TMOZ    s:10402

  10392 43 001733   200125 630500                    EPPR0   LINE,,AUTO
        43 001734   200176 450500                    STP0    @LEN+2,,AUTO
        43 001735   200161 631500                    EPPR1   LINELEN,,AUTO
        43 001736   200201 451500                    STP1    @LEN+5,,AUTO
        43 001737   200176 633500                    EPPR3   @LEN+2,,AUTO
        43 001740   200200 453500                    STP3    @LEN+4,,AUTO
        43 001741   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 001742   000002 631400 44                 EPPR1   2
        43 001743   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 001744   000000 011000                    NOP     0

  10393 43 001745   200161 450100                    STZ     LINELEN,,AUTO

      685    10397
      686    10398    5           END;

  10398 43 001746   001760 710000 43                 TRA     s:10402

      687    10399    4         ELSE
      688    10400    4           CALL OUT_STR ('                   ',19 - LINELEN);

  10400 43 001747   000061 675000 44                 ERA     49
        43 001750   000024 035007                    ADLA    20,DL
        43 001751   200223 755100                    STA     @LEN+23,,AUTO
        43 001752   200223 630500                    EPPR0   @LEN+23,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:105  
        43 001753   200174 450500                    STP0    @LEN,,AUTO
        43 001754   000054 236000 44                 LDQ     44
        43 001755   200173 756100                    STQ     @STR,,AUTO
        43 001756   001303 701000 43                 TSX1    OUT_STR
        43 001757   000000 011000                    NOP     0

      689    10401
      690    10402    4       END PRINT_SYMBOL;

  10402 43 001760   200162 221300                    LDX1  ! LINELEN+1,,AUTO
        43 001761   000001 702211                    TSX2  ! 1,X1

      691    10403        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:106  
      692    10404            /* Main body of PRINT_XREF */
      693    10405
      694    10406    3     LINELEN = 0;

  10406 43 001762   200161 450100                    STZ     LINELEN,,AUTO

      695    10407
      696    10408    3       SYM$ = XREF_SYM$;

  10408 43 001763   200121 236100                    LDQ     XREF_SYM$,,AUTO
        43 001764   200123 756100                    STQ     SYM$,,AUTO

      697    10409    4       DO WHILE SYM$ ~= ADDR(NIL);

  10409 43 001765   002044 710000 43                 TRA     s:10512

      698    10410    4         XR$ = SYM$ -> ST.X_REF_LIST$;

  10410 43 001766   200123 470500                    LDP0    SYM$,,AUTO
        43 001767   000011 236100                    LDQ     9,,PR0
        43 001770   200124 756100                    STQ     XR$,,AUTO

      699    10411              %IF GCOS;
      754    10466              %ENDIF;
      755    10467    4         CALL PRINT_SYMBOL;

  10467 43 001771   001456 701000 43                 TSX1    PRINT_SYMBOL
        43 001772   000000 011000                    NOP     0

      756    10468    5         DO WHILE XR$ ~= ADDR(NIL);

  10468 43 001773   002021 710000 43                 TRA     s:10501

      757    10469    5           IF XR$ -> XREF.SYMPTR ~= ADDR(NIL) THEN

  10469 43 001774   200124 470500                    LDP0    XR$,,AUTO
        43 001775   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:107  
        43 001776   000001 116000 44                 CMPQ    1
        43 001777   002014 600000 43                 TZE     s:10476

      758    10470    5             IF XR$ -> XREF.XISN = XR$ -> XREF.SYMPTR -> XREF.XISN THEN

  10470 43 002000   000001 471500                    LDP1    1,,PR0
        43 002001   000000 236100                    LDQ     0,,PR0
        43 002002   100000 676100                    ERQ     0,,PR1
        43 002003   777777 376007                    ANQ     -1,DL
        43 002004   002011 601000 43                 TNZ     s:10474

      759    10471    5               XR$ -> XREF.SYMPTR -> XREF.ATTR =

  10471 43 002005   100000 220100                    LDX0    0,,PR1
        43 002006   000000 260100                    ORX0    0,,PR0
        43 002007   100000 740100                    STX0    0,,PR1
        43 002010   002016 710000 43                 TRA     s:10477

      760    10472    5                  XR$ -> XREF.SYMPTR -> XREF.ATTR | XR$ -> XREF.ATTR;
      761    10473    5             ELSE
      762    10474    5               CALL PRINT_THIS_REF;

  10474 43 002011   001422 701000 43                 TSX1    PRINT_THIS_REF
        43 002012   000000 011000                    NOP     0
        43 002013   002016 710000 43                 TRA     s:10477

      763    10475    5           ELSE
      764    10476    5             CALL PRINT_THIS_REF;

  10476 43 002014   001422 701000 43                 TSX1    PRINT_THIS_REF
        43 002015   000000 011000                    NOP     0

      765    10477    5           XR$ = XR$ -> XREF.SYMPTR;

  10477 43 002016   200124 470500                    LDP0    XR$,,AUTO
        43 002017   000001 236100                    LDQ     1,,PR0
        43 002020   200124 756100                    STQ     XR$,,AUTO
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:108  

      766    10478                %IF GCOS;
      788    10500                %ENDIF;
      789    10501    5         END;

  10501 43 002021   200124 236100                    LDQ     XR$,,AUTO
        43 002022   000001 116000 44                 CMPQ    1
        43 002023   001774 601000 43                 TNZ     s:10469

      790    10502              %FLUSH;

  10504 43 002024   200161 235100                    LDA     LINELEN,,AUTO
        43 002025   002041 604400 43                 TMOZ    s:10511

  10506 43 002026   200125 630500                    EPPR0   LINE,,AUTO
        43 002027   200176 450500                    STP0    @LEN+2,,AUTO
        43 002030   200161 631500                    EPPR1   LINELEN,,AUTO
        43 002031   200201 451500                    STP1    @LEN+5,,AUTO
        43 002032   200176 633500                    EPPR3   @LEN+2,,AUTO
        43 002033   200200 453500                    STP3    @LEN+4,,AUTO
        43 002034   200200 630500                    EPPR0   @LEN+4,,AUTO
        43 002035   000002 631400 44                 EPPR1   2
        43 002036   000000 701000 xent               TSX1    Z9IL$OUTPUT_TO_LO
        43 002037   000000 011000                    NOP     0

  10507 43 002040   200161 450100                    STZ     LINELEN,,AUTO

      791    10511    4         SYM$ = SYM$ -> ST.X_SORT_SYM$;

  10511 43 002041   200123 470500                    LDP0    SYM$,,AUTO
        43 002042   000010 236100                    LDQ     8,,PR0
        43 002043   200123 756100                    STQ     SYM$,,AUTO

      792    10512    4       END;

  10512 43 002044   000001 116000 44                 CMPQ    1
        43 002045   001766 601000 43                 TNZ     s:10410
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:109  

      793    10513
      794    10514    3     END PRINT_XREF;

  10514 43 002046   200122 221300                    LDX1  ! LAST_LINE_FROM_COPY,,AUTO
        43 002047   000001 702211                    TSX2  ! 1,X1

      795    10515         %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:110  
      796    10516
      797    10517          /*  Main body of PRODUCE_XREF */
      798    10518
      799    10519
      800    10520              %IF GCOS;
      808    10528              %ENDIF;
      809    10529    2         CALL SET_SYM_LIST_NIL;

  10529 43 002050   000777 701000 43                 TSX1    SET_SYM_LIST_NIL
        43 002051   000000 011000                    NOP     0

      810    10530    2         CALL PROCESS_XREF_LIST;

  10530 43 002052   001036 701000 43                 TSX1    PROCESS_XREF_LIST
        43 002053   000000 011000                    NOP     0

      811    10531    2         CALL PRINT_XREF_HEADING;

  10531 43 002054   001225 701000 43                 TSX1    PRINT_XREF_HEADING
        43 002055   000000 011000                    NOP     0

      812    10532    2         CALL PRINT_XREF;

  10532 43 002056   001301 701000 43                 TSX1    PRINT_XREF
        43 002057   000000 011000                    NOP     0

      813    10533
      814    10534    2   END PRODUCE_XREF;

  10534 43 002060   200120 221300                    LDX1  ! INPUT_BUFFER+75,,AUTO
        43 002061   000001 702211                    TSX2  ! 1,X1

      815    10535        %EJECT;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:111  
      816    10536               /* Start of body of Z8IL$PRODUCE_LISTINGS */
      817    10537
      818    10538        /* Set up input buffer for possible use */
      819    10539    1   LOOKAHEAD_BUFFER$ = ADDR(INPUT_BUFFER);

  10539 43 002062   200005 630500                    EPPR0   INPUT_BUFFER,,AUTO
        43 002063   000000 450400 15                 STP0    LOOKAHEAD_BUFFER$

      820    10540
      821    10541        %IF GCOS;
      828    10548        %ENDIF;
      829    10549    1   CALL PRODUCE_LSTIN;

  10549 43 002064   000247 701000 43                 TSX1    PRODUCE_LSTIN
        43 002065   000000 011000                    NOP     0

      830    10550    1   CALL PRODUCE_LSTOU;

  10550 43 002066   000752 701000 43                 TSX1    PRODUCE_LSTOU
        43 002067   000000 011000                    NOP     0

      831    10551
      832    10552    1   IF COMCOM.OB.XREF      THEN

  10552 43 002070   000055 234000 xsym               SZN     COMCOM+45
        43 002071   002074 605000 43                 TPL     s:10555

      833    10553    1     CALL PRODUCE_XREF;

  10553 43 002072   000775 701000 43                 TSX1    PRODUCE_XREF
        43 002073   000000 011000                    NOP     0

      834    10554
      835    10555    1   END Z8IL$PRODUCE_LISTINGS;

  10555 43 002074   000000 702200 xent               TSX2  ! X66_ARET
      836    10556        %EOD;
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:112  

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:113  
--  Include file information  --

   Z8A_QLT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_LTS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ST.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_XREF.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$PRODUCE_LISTINGS.
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:114  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 RoData Z8IL$PRODUCE_LISTINGS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    11-0-0/c CHAR        r     1 BLANK
    52-0-0/c CHAR(28)    r     1 COMP_SUMMARY_MSG_TEXT(0:5)
     0-0-0/c STRC(297)         1 DEF_LISTING_SUB_HEADING
   140-0-0/c CHAR(43)    r     1 END_COPY                  47-0-0/c CHAR(10)    r     1 MSG_THERE
    12-0-0/w PTR         r     1 PLINE_PTR$               124-0-0/c CHAR(45)    r     1 START_COPY
    13-0-0/c CHAR        r     1 STAR_LINE(0:108)
   165-0-0/c STRC(414)   r     1 XHEAD                    153-0-0/c STRC(351)   r     1 XREF_SUB_HEADING

  ****  Section 002 LblCom SUB_HEADING_ADDR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR

  ****  Section 003 LblCom SUB_HEADING_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN

  ****  Section 004 LblCom SUB_HEADING_ADDR1
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:115  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR1

  ****  Section 005 LblCom SUB_HEADING_LEN1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN1

  ****  Section 006 LblCom SUB_HEADING_ADDR2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR2

  ****  Section 007 LblCom SUB_HEADING_LEN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN2

  ****  Section 008 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 MAX_LINES_PER_PAGE

  ****  Section 009 LblCom LISTING_LINES_ON_PAGE

  ****  Scalars and arrays  ****
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:116  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LISTING_LINES_ON_PAGE

  ****  Section 010 LblCom LISTING_PAGE_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 LISTING_PAGE_NUMBER

  ****  Section 011 LblCom PLINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 PLINE
     0-0-0/c CHAR              1 PLINE_CHAR(0:108)
     0-0-0/c STRC(981)   r     1 PLINE_REDEF_FIELDS

  ****  Section 012 LblCom PLINE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 PLINE_LEN

  ****  Section 013 LblCom SCANNER_STATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SCANNER_STATE

  ****  Section 014 LblCom CURRENT_BUFFER$

  ****  Scalars and arrays  ****
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:117  
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 CURRENT_BUFFER$

  ****  Section 015 LblCom LOOKAHEAD_BUFFER$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 LOOKAHEAD_BUFFER$

  ****  Section 016 LblCom CURRENT_LINE_LEVEL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 CURRENT_LINE_LEVEL

  ****  Section 017 LblCom LINE_LIST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LINE_LIST$

  ****  Section 018 LblCom BUFFER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(252)   r     1 BUFFER

  ****  Section 019 LblCom ORIGINAL_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:118  
     0-0-0/w SBIN              1 ORIGINAL_ISN

  ****  Section 020 LblCom EXPANDED_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EXPANDED_ISN

  ****  Section 021 LblCom ISN_FOR_EXP_SRC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ISN_FOR_EXP_SRC

  ****  Section 022 LblCom ERR$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ERR$

  ****  Section 023 LblCom ERR_HEAD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ERR_HEAD

  ****  Section 024 LblCom ERR_TAIL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERR_TAIL

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:119  
  ****  Section 025 LblCom MAX_ERROR_GENERATED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_ERROR_GENERATED

  ****  Section 026 LblCom ERR_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ERR_

  ****  Section 027 LblCom XREF$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 XREF$

  ****  Section 028 LblCom XREF_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 XREF_

  ****  Section 029 LblCom ST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ST$

  ****  Section 030 LblCom ST_

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:120  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 ST_

  ****  Section 031 LblCom LTS$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LONG_ITEM$                 0-0-0/w PTR         r     1 LTS$

  ****  Section 032 LblCom LTS_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 LTS_

  ****  Section 033 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 034 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 DNT_

  ****  Section 035 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:121  

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 036 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 DNT_OF_1$

  ****  Section 037 LblCom QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 QLT$

  ****  Section 038 LblCom PREV_01_QLT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 PREV_01_QLT$

  ****  Section 039 LblCom QLT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 QLT_

  ****  Section 040 LblCom COMP_SUMMARY_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COMP_SUMMARY_COUNT(0:5)
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:122  

  ****  Section 041 LblCom INDICATOR_AREA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 INDICATOR_AREA

  ****  Section 042 LblCom AREA_A_START

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 AREA_A_START

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   174-0-0/w PTR         r     1 @LEN                     165-0-0/w PTR         r     1 @NUM
   125-0-0/w PTR         r     1 @OUTPUT_PROC             125-0-0/w PTR         r     1 @OUTPUT_PROC
   173-0-0/w PTR         r     1 @STR                     125-0-0/w PTR         r     1 @SYM$
   126-0-0/c STRC(315)   r     1 COMP_SUMMARY_MSG         166-0-0/w SBIN        r     1 DISP
     4-0-0/b BIT         r     1 DO_FLAG
     3-0-0/b BIT         r     1 ERRORS_TO_LO_REQUIRED
   137-0-0/w SBIN        r     1 I                          5-0-0/w STRC(2700)  r     1 INPUT_BUFFER
   121-0-0/w SBIN        r     1 INST_COL                 122-0-0/b BIT         r     1 LAST_LINE_FROM_COPY
    *0-0-0/w SBIN        r     1 LEN                      125-0-0/c CHAR(109)   r     1 LINE
   161-0-0/w SBIN        r     1 LINELEN                  127-0-0/b BIT         r     1 LINKED
   126-0-0/b BIT         r     1 LINKED                   126-0-0/w PTR         r     1 LPTR
   125-0-0/w PTR         r     1 LPTR                      *0-0-0/w SBIN        r     1 NUM
   167-0-0/c CHAR(6)     r     1 OSTR                      *0-0-0/w EPTR        r     1 OUTPUT_PROC
    *0-0-0/w EPTR        r     1 OUTPUT_PROC               *0-0-0/c ACHR        r     1 STR
    *0-0-0/w PTR         r     1 SYM$                     123-0-0/w PTR         r     1 SYM$
   124-0-0/w PTR         r     1 XR$                      121-0-0/w PTR         r     1 XREF_SYM$

PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:123  
  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/w UBIN              1 LTS_STEP(0:37)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(396)         1 ALPHABET                   0-0-0/w STRC(144)         1 ALTER_LTS
     0-0-0/w STRC(3672)        1 ALT_KEY                    0-0-0/w STRC(36864)       1 ARGLIST
     0-0-0/w STRC(396)         1 ARRAY                      0-0-0/w STRC(180)         1 ARRAY_PRESET_LTS
     0-0-0/w STRC(288)         1 BASE_LTS                   0-0-0/w STRC(396)         1 BLOCK
     0-0-0/w STRC        r     1 BPTR                       0-0-0/w STRC        r     1 BPTR
     0-0-0/w STRC(144)         1 BT                         0-0-0/c ACHR              1 BUFFER_LINE
     0-0-0/w STRC(396)         1 CD                         0-0-0/w STRC(288)         1 CD_LTS
     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(396)         1 CLASS
     0-0-0/w STRC(396)         1 CONDITION                  0-0-0/w STRC(396)         1 CONST
     0-0-0/w STRC(72)    r     1 CONT                       0-0-0/w STRC(540)         1 CONTROL_NAME_LTS
     0-0-0/w STRC(1872)        1 COPY_FILE                  0-0-0/w STRC(396)         1 DB
     0-0-0/w STRC(396)         1 DCB_                       0-0-0/w STRC(108)         1 DEPENDING_SIZE
     0-0-0/w STRC(5472)        1 DIMS                       0-0-0/w STRC(396)         1 DML_ITEM
     0-0-0/w STRC(216)         1 DML_REC                    0-0-0/w ASTR(180)   r     1 DNT
     0-0-0/w STRC(540)   r     1 ERR                        0-0-0/w STRC(73836)       1 EVALUATE
     0-0-0/w ASTR(396)   r     1 EXP_SRC_BUFF               0-0-0/w STRC(396)         1 FD
     0-0-0/w STRC(1692)        1 FILE_LTS                   0-0-0/w ASTR(396)   r     1 FILL_BUFFER
     0-0-0/w STRC(108)         1 INDEXES                    0-0-0/w STRC(360)         1 INIT_LTS
     0-0-0/w STRC(396)         1 INTDEF                     0-0-0/w STRC(180)         1 IO_RESTORE_CHAIN
     0-0-0/w STRC(144)         1 KEY                        0-0-0/w STRC(396)         1 LABEL
     0-0-0/w STRC(36864)       1 LCNST                      0-0-0/c ACHR              1 LISTING_SUB_HEADING
     0-0-0/c ACHR              1 LISTING_SUB_HEADING1       0-0-0/c ACHR              1 LISTING_SUB_HEADING2
     0-0-0/w STRC(72)          1 LONG                       0-0-0/w STRC              1 LTS
     0-0-0/w STRC(360)         1 LTSS                       0-0-0/w STRC(36936)       1 LTS_PTR_ARRAY
PL6.E3A0      #001=Z8IL$PRODUCE_LISTINGS File=Z8IL.:Z8A6TSI                      SAT 08/09/97 13:27 Page:124  
     0-0-0/w STRC(396)         1 MNEMONIC                   0-0-0/w STRC(144)         1 NEL
     0-0-0/w STRC(216)         1 OPEN_LTS                   0-0-0/w STRC(36864)       1 PAGE
     0-0-0/w STRC(396)   r     1 PARA                       0-0-0/w STRC(144)         1 PRIME
     0-0-0/w STRC(396)         1 PROC_                      0-0-0/w STRC(396)         1 PROC_DEF
     0-0-0/w STRC(900)         1 PROC_SUPP                  0-0-0/w STRC(216)   r     1 QLT
     0-0-0/w STRC(396)         1 RD                         0-0-0/w STRC(216)         1 REF
     0-0-0/w STRC(108)         1 RENAMES                    0-0-0/w STRC(720)         1 REPORT_01_LTS
     0-0-0/w STRC(432)         1 REPORT_ELEM_LTS            0-0-0/w STRC(252)         1 REPORT_GRP_LTS
     0-0-0/w STRC(1332)        1 REPORT_LTS                 0-0-0/w STRC(144)         1 RVA_LTS
     0-0-0/w STRC(396)         1 SCALAR                     0-0-0/w STRC(396)         1 SD
     0-0-0/w STRC(396)         1 SECTION                    0-0-0/w STRC(396)         1 SEGMENT
     0-0-0/w STRC(360)         1 SEGMENT_LTS                0-0-0/w STRC(396)   r     1 ST
     0-0-0/w STRC(252)         1 SUM_LTS                    0-0-0/w STRC(396)         1 SWITCH
     0-0-0/w STRC(396)         1 SYMBOLIC_CHAR              0-0-0/w STRC(396)         1 SYMDEF_
     0-0-0/w STRC(396)         1 SYMREF_                    0-0-0/w STRC(396)         1 TEMP
     0-0-0/d STRC(612)         1 USE                        0-0-0/w STRC(252)         1 USE_SUPP
     0-0-0/w STRC(396)   r     1 VARIABLE                   0-0-0/w STRC(72)    r     1 XREF


   Procedure Z8IL$PRODUCE_LISTINGS requires 1085 words for executable code.
   Procedure Z8IL$PRODUCE_LISTINGS requires 148 words of local(AUTO) storage.

PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:125  
      837        1        /*T***********************************************************/
      838        2        /*T*                                                         */
      839        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      840        4        /*T*                                                         */
      841        5        /*T***********************************************************/
      842        6        /*===================*/
      843        7          Z8IL$PRINT_HEADING: PROC (OUTPUT_PROC);
      844        8        /*===================*/
      845        9
      846       10        /*D*
      847       11
      848       12                  NAME: Z8IL$PRINT_HEADING
      849       13           DESCRIPTION: Print the sub headings at the top of the page.
      850       14                          The top of form should already have been done.  This
      851       15                          routine just prints the three line heading at the current
      852       16                          position.
      853       17
      854       18        */
      855       19
      856       20
      857       21        %EQU PHASE = 5;
      858       22        % INCLUDE Z8A_DEFC;
      859       90        % INCLUDE Z8A_SUPP_MAC;
      860     2490        % INCLUDE Z8A_SYS_FILE;
      861     8765        % INCLUDE Z8A_COMCOM;
      862     9415        % INCLUDE Z9I_PREPROC;
      863     9435        % INCLUDE Z9I_HEAD;
      864     9469        % INCLUDE Z8I_LISTING;
      865     9557
      866     9558        /* EXTERNAL DECLARATIONS */
      867     9559
      868     9560               %IF CP6;
      869     9561    1          DCL Z9IL$CREATE_HEADING  ENTRY;
      870     9562               %ENDIF;
      871     9563               %IF GCOS;
      872     9564 C             DCL Z8IU$BLANK_ZERO ENTRY(1);
      873     9565               %ENDIF;
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:126  
      874     9566    1          DCL OUTPUT_PROC EPTR;
      875     9567        %EJECT;
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:127  
      876     9568        %IF GCOS;
      877     9569 C      LISTING_PAGE_NUMBER = LISTING_PAGE_NUMBER + 1;
      878     9570 C      CALL BINCHAR(LISTING_MAIN_HEADING.PAGE,LISTING_PAGE_NUMBER);
      879     9571 C      CALL Z8IU$BLANK_ZERO (ADDR(LISTING_MAIN_HEADING.PAGE));
      880     9572 C      CALL OUTPUT_PROC(ADDR(LISTING_MAIN_HEADING),
      881     9573 C                       LENGTHC(LISTING_MAIN_HEADING));
      882     9574 C      CALL OUTPUT_PROC(ADDR(BLANK),
      883     9575 C                       LENGTHC(BLANK));
      884     9576        %ENDIF;
      885     9577
      886     9578    1   IF ADDR(LISTING_SUB_HEADING) ~=  ADDR(NIL) THEN
      887     9579    1     CALL OUTPUT_PROC(ADDR(LISTING_SUB_HEADING),
      888     9580    1                      LENGTHC(LISTING_SUB_HEADING));
      889     9581
      890     9582    1   IF ADDR(LISTING_SUB_HEADING1) ~= ADDR(NIL) THEN
      891     9583    1     CALL OUTPUT_PROC(ADDR(LISTING_SUB_HEADING1), LENGTHC(LISTING_SUB_HEADING1));
      892     9584
      893     9585    1   IF ADDR(LISTING_SUB_HEADING2) ~= ADDR(NIL) THEN
      894     9586    1     CALL OUTPUT_PROC(ADDR(LISTING_SUB_HEADING2), LENGTHC(LISTING_SUB_HEADING2));
      895     9587        %IF CP6;
      896     9588
      897     9589    1   RETURN;
      898     9590
      899     9591        /*====================*/
      900     9592    1     Z8IL$PRINT_HEADING_1 : ENTRY( OUTPUT_PROC );
      901     9593        /*====================*/
      902     9594                            /*#35040    Print heading for online listing */
      903     9595
      904     9596    1   CALL Z9IL$CREATE_HEADING;
      905     9597
      906     9598    1   LISTING_MAIN_HEADING.PAGE_TITLE = ' ';
      907     9599    1   LISTING_MAIN_HEADING.PAGE = ' ';
      908     9600
      909     9601    1   CALL OUTPUT_PROC(ADDR(LISTING_MAIN_HEADING),
      910     9602    1                    LENGTHC(LISTING_MAIN_HEADING));
      911     9603
      912     9604    1   CALL OUTPUT_PROC(ADDR(BLANK),
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:128  
      913     9605    1                    LENGTHC(BLANK));
      914     9606        %ENDIF;
      915     9607
      916     9608
      917     9609    1   END Z8IL$PRINT_HEADING;
      918     9610        %EOD;

PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:129  
--  Include file information  --

   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_HEAD.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$PRINT_HEADING.

   Procedure Z8IL$PRINT_HEADING requires 87 words for executable code.
   Procedure Z8IL$PRINT_HEADING requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:130  

 Object Unit name= Z8IL$PRINT_HEADING                         File name= Z8IL.:Z8A6TOU
 UTS= AUG 09 '97 13:29:45.60 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1   DCB   even  none     0      0  M$UC
    2  LblCom even  none    28     34  LISTING_MAIN_HEADING
    3  LblCom even  none     1      1  SUB_HEADING_ADDR
    4  LblCom even  none     1      1  SUB_HEADING_LEN
    5  LblCom even  none     1      1  SUB_HEADING_ADDR1
    6  LblCom even  none     1      1  SUB_HEADING_LEN1
    7  LblCom even  none     1      1  SUB_HEADING_ADDR2
    8  LblCom even  none     1      1  SUB_HEADING_LEN2
    9  LblCom even  none     1      1  MAX_LINES_PER_PAGE
   10  LblCom even  none     1      1  LISTING_LINES_ON_PAGE
   11  LblCom even  none     1      1  LISTING_PAGE_NUMBER
   12  LblCom even  none    28     34  PLINE
   13  LblCom even  none     1      1  PLINE_LEN
   14   Proc  even  none    87    127  Z8IL$PRINT_HEADING
   15  RoData even  none    10     12  Z8IL$PRINT_HEADING

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    14      0   yes            yes      Std        1  Z8IL$PRINT_HEADING
    14     63                  yes      Std        1  Z8IL$PRINT_HEADING_1
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:131  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 Z9IL$CREATE_HEADING
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  COMCOM                           r    DEF_LISTING_SUB_HEADING
r    BLANK                            r    PLINE_PTR$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:132  


      837        1        /*T***********************************************************/
      838        2        /*T*                                                         */
      839        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      840        4        /*T*                                                         */
      841        5        /*T***********************************************************/
      842        6        /*===================*/
      843        7          Z8IL$PRINT_HEADING: PROC (OUTPUT_PROC);

      7 14 000000   000000 700200 xent  Z8IL$PRINT_* TSX0  ! X66_AUTO_1
        14 000001   000010 000001                    ZERO    8,1

      844        8        /*===================*/
      845        9
      846       10        /*D*
      847       11
      848       12                  NAME: Z8IL$PRINT_HEADING
      849       13           DESCRIPTION: Print the sub headings at the top of the page.
      850       14                          The top of form should already have been done.  This
      851       15                          routine just prints the three line heading at the current
      852       16                          position.
      853       17
      854       18        */
      855       19
      856       20
      857       21        %EQU PHASE = 5;
      858       22        % INCLUDE Z8A_DEFC;
      859       90        % INCLUDE Z8A_SUPP_MAC;
      860     2490        % INCLUDE Z8A_SYS_FILE;
      861     8765        % INCLUDE Z8A_COMCOM;
      862     9415        % INCLUDE Z9I_PREPROC;
      863     9435        % INCLUDE Z9I_HEAD;
      864     9469        % INCLUDE Z8I_LISTING;
      865     9557
      866     9558        /* EXTERNAL DECLARATIONS */
      867     9559
      868     9560               %IF CP6;
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:133  
      869     9561    1          DCL Z9IL$CREATE_HEADING  ENTRY;
      870     9562               %ENDIF;
      871     9563               %IF GCOS;
      872     9564 C             DCL Z8IU$BLANK_ZERO ENTRY(1);
      873     9565               %ENDIF;
      874     9566    1          DCL OUTPUT_PROC EPTR;
      875     9567        %EJECT;
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:134  
      876     9568        %IF GCOS;
      877     9569 C      LISTING_PAGE_NUMBER = LISTING_PAGE_NUMBER + 1;
      878     9570 C      CALL BINCHAR(LISTING_MAIN_HEADING.PAGE,LISTING_PAGE_NUMBER);
      879     9571 C      CALL Z8IU$BLANK_ZERO (ADDR(LISTING_MAIN_HEADING.PAGE));
      880     9572 C      CALL OUTPUT_PROC(ADDR(LISTING_MAIN_HEADING),
      881     9573 C                       LENGTHC(LISTING_MAIN_HEADING));
      882     9574 C      CALL OUTPUT_PROC(ADDR(BLANK),
      883     9575 C                       LENGTHC(BLANK));
      884     9576        %ENDIF;
      885     9577
      886     9578    1   IF ADDR(LISTING_SUB_HEADING) ~=  ADDR(NIL) THEN

   9578 14 000002   000000 236000 3                  LDQ     SUB_HEADING_ADDR
        14 000003   000000 116000 15                 CMPQ    0
        14 000004   000022 600000 14                 TZE     s:9582

      887     9579    1     CALL OUTPUT_PROC(ADDR(LISTING_SUB_HEADING),

   9579 14 000005   200004 756100                    STQ     @OUTPUT_PROC+1,,AUTO
        14 000006   000000 235000 4                  LDA     SUB_HEADING_LEN
        14 000007   200005 755100                    STA     @OUTPUT_PROC+2,,AUTO
        14 000010   200005 630500                    EPPR0   @OUTPUT_PROC+2,,AUTO
        14 000011   200007 450500                    STP0    @OUTPUT_PROC+4,,AUTO
        14 000012   200004 631500                    EPPR1   @OUTPUT_PROC+1,,AUTO
        14 000013   200006 451500                    STP1    @OUTPUT_PROC+3,,AUTO
        14 000014   200006 630500                    EPPR0   @OUTPUT_PROC+3,,AUTO
        14 000015   200003 473500                    LDP3    @OUTPUT_PROC,,AUTO
        14 000016   300000 220100                    LDX0    0,,PR3
        14 000017   000001 631400 15                 EPPR1   1
        14 000020   000000 701010                    TSX1    0,X0
        14 000021   000000 011000                    NOP     0

      888     9580    1                      LENGTHC(LISTING_SUB_HEADING));
      889     9581
      890     9582    1   IF ADDR(LISTING_SUB_HEADING1) ~= ADDR(NIL) THEN

   9582 14 000022   000000 236000 5                  LDQ     SUB_HEADING_ADDR1
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:135  
        14 000023   000000 116000 15                 CMPQ    0
        14 000024   000042 600000 14                 TZE     s:9585

      891     9583    1     CALL OUTPUT_PROC(ADDR(LISTING_SUB_HEADING1), LENGTHC(LISTING_SUB_HEADING1));

   9583 14 000025   200004 756100                    STQ     @OUTPUT_PROC+1,,AUTO
        14 000026   000000 235000 6                  LDA     SUB_HEADING_LEN1
        14 000027   200005 755100                    STA     @OUTPUT_PROC+2,,AUTO
        14 000030   200005 630500                    EPPR0   @OUTPUT_PROC+2,,AUTO
        14 000031   200007 450500                    STP0    @OUTPUT_PROC+4,,AUTO
        14 000032   200004 631500                    EPPR1   @OUTPUT_PROC+1,,AUTO
        14 000033   200006 451500                    STP1    @OUTPUT_PROC+3,,AUTO
        14 000034   200006 630500                    EPPR0   @OUTPUT_PROC+3,,AUTO
        14 000035   200003 473500                    LDP3    @OUTPUT_PROC,,AUTO
        14 000036   300000 220100                    LDX0    0,,PR3
        14 000037   000001 631400 15                 EPPR1   1
        14 000040   000000 701010                    TSX1    0,X0
        14 000041   000000 011000                    NOP     0

      892     9584
      893     9585    1   IF ADDR(LISTING_SUB_HEADING2) ~= ADDR(NIL) THEN

   9585 14 000042   000000 236000 7                  LDQ     SUB_HEADING_ADDR2
        14 000043   000000 116000 15                 CMPQ    0
        14 000044   000062 600000 14                 TZE     s:9589

      894     9586    1     CALL OUTPUT_PROC(ADDR(LISTING_SUB_HEADING2), LENGTHC(LISTING_SUB_HEADING2));

   9586 14 000045   200004 756100                    STQ     @OUTPUT_PROC+1,,AUTO
        14 000046   000000 235000 8                  LDA     SUB_HEADING_LEN2
        14 000047   200005 755100                    STA     @OUTPUT_PROC+2,,AUTO
        14 000050   200005 630500                    EPPR0   @OUTPUT_PROC+2,,AUTO
        14 000051   200007 450500                    STP0    @OUTPUT_PROC+4,,AUTO
        14 000052   200004 631500                    EPPR1   @OUTPUT_PROC+1,,AUTO
        14 000053   200006 451500                    STP1    @OUTPUT_PROC+3,,AUTO
        14 000054   200006 630500                    EPPR0   @OUTPUT_PROC+3,,AUTO
        14 000055   200003 473500                    LDP3    @OUTPUT_PROC,,AUTO
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:136  
        14 000056   300000 220100                    LDX0    0,,PR3
        14 000057   000001 631400 15                 EPPR1   1
        14 000060   000000 701010                    TSX1    0,X0
        14 000061   000000 011000                    NOP     0

      895     9587        %IF CP6;
      896     9588
      897     9589    1   RETURN;

   9589 14 000062   000000 702200 xent               TSX2  ! X66_ARET

      898     9590
      899     9591        /*====================*/
      900     9592    1     Z8IL$PRINT_HEADING_1 : ENTRY( OUTPUT_PROC );

   9592 14 000063   000000 700200 xent  Z8IL$PRINT_* TSX0  ! X66_AUTO_1
        14 000064   000010 000001                    ZERO    8,1

      901     9593        /*====================*/
      902     9594                            /*#35040    Print heading for online listing */
      903     9595
      904     9596    1   CALL Z9IL$CREATE_HEADING;

   9596 14 000065   000002 631400 15                 EPPR1   2
        14 000066   000000 701000 xent               TSX1    Z9IL$CREATE_HEADING
        14 000067   000000 011000                    NOP     0

      905     9597
      906     9598    1   LISTING_MAIN_HEADING.PAGE_TITLE = ' ';

   9598 14 000070   040000 100400                    MLR     fill='040'O
        14 000071   000003 000001 15                 ADSC9   3                        cn=0,n=1
        14 000072   000030 600005 2                  ADSC9   LISTING_MAIN_HEADING+24  cn=3,n=5

      907     9599    1   LISTING_MAIN_HEADING.PAGE = ' ';

   9599 14 000073   040000 100400                    MLR     fill='040'O
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:137  
        14 000074   000003 000001 15                 ADSC9   3                        cn=0,n=1
        14 000075   000032 000005 2                  ADSC9   LISTING_MAIN_HEADING+26  cn=0,n=5

      908     9600
      909     9601    1   CALL OUTPUT_PROC(ADDR(LISTING_MAIN_HEADING),

   9601 14 000076   000004 236000 15                 LDQ     4
        14 000077   200004 756100                    STQ     @OUTPUT_PROC+1,,AUTO
        14 000100   000006 236000 15                 LDQ     6
        14 000101   200007 756100                    STQ     @OUTPUT_PROC+4,,AUTO
        14 000102   200004 630500                    EPPR0   @OUTPUT_PROC+1,,AUTO
        14 000103   200006 450500                    STP0    @OUTPUT_PROC+3,,AUTO
        14 000104   200006 630500                    EPPR0   @OUTPUT_PROC+3,,AUTO
        14 000105   200003 471500                    LDP1    @OUTPUT_PROC,,AUTO
        14 000106   100000 220100                    LDX0    0,,PR1
        14 000107   000001 631400 15                 EPPR1   1
        14 000110   000000 701010                    TSX1    0,X0
        14 000111   000000 011000                    NOP     0

      910     9602    1                    LENGTHC(LISTING_MAIN_HEADING));
      911     9603
      912     9604    1   CALL OUTPUT_PROC(ADDR(BLANK),

   9604 14 000112   000007 236000 15                 LDQ     7
        14 000113   200004 756100                    STQ     @OUTPUT_PROC+1,,AUTO
        14 000114   000011 236000 15                 LDQ     9
        14 000115   200007 756100                    STQ     @OUTPUT_PROC+4,,AUTO
        14 000116   200004 630500                    EPPR0   @OUTPUT_PROC+1,,AUTO
        14 000117   200006 450500                    STP0    @OUTPUT_PROC+3,,AUTO
        14 000120   200006 630500                    EPPR0   @OUTPUT_PROC+3,,AUTO
        14 000121   200003 471500                    LDP1    @OUTPUT_PROC,,AUTO
        14 000122   100000 220100                    LDX0    0,,PR1
        14 000123   000001 631400 15                 EPPR1   1
        14 000124   000000 701010                    TSX1    0,X0
        14 000125   000000 011000                    NOP     0

      913     9605    1                    LENGTHC(BLANK));
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:138  
      914     9606        %ENDIF;
      915     9607
      916     9608
      917     9609    1   END Z8IL$PRINT_HEADING;

   9609 14 000126   000000 702200 xent               TSX2  ! X66_ARET
      918     9610        %EOD;

PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:139  
--  Include file information  --

   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_HEAD.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   Z8A_SYS_FILE.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$PRINT_HEADING.
PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:140  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 002 LblCom LISTING_MAIN_HEADING

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 LISTING_HEADING            0-0-0/c STRC(981)   r     1 LISTING_MAIN_HEADING

  ****  Section 003 LblCom SUB_HEADING_ADDR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR

  ****  Section 004 LblCom SUB_HEADING_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN

  ****  Section 005 LblCom SUB_HEADING_ADDR1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR1

PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:141  
  ****  Section 006 LblCom SUB_HEADING_LEN1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN1

  ****  Section 007 LblCom SUB_HEADING_ADDR2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR2

  ****  Section 008 LblCom SUB_HEADING_LEN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN2

  ****  Section 009 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_LINES_PER_PAGE

  ****  Section 010 LblCom LISTING_LINES_ON_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LISTING_LINES_ON_PAGE

  ****  Section 011 LblCom LISTING_PAGE_NUMBER

PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:142  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LISTING_PAGE_NUMBER

  ****  Section 012 LblCom PLINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 PLINE
     0-0-0/c CHAR              1 PLINE_CHAR(0:108)
     0-0-0/c STRC(981)         1 PLINE_REDEF_FIELDS

  ****  Section 013 LblCom PLINE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PLINE_LEN

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @OUTPUT_PROC              *0-0-0/w EPTR        r     1 OUTPUT_PROC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 BLANK                      0-0-0/d STRC(13248)       1 COMCOM
     0-0-0/c STRC(297)         1 DEF_LISTING_SUB_HEADING
     0-0-0/w PTR               1 PLINE_PTR$

PL6.E3A0      #002=Z8IL$PRINT_HEADING File=Z8IL.:Z8A6TSI                         SAT 08/09/97 13:29 Page:143  
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w CHAR(4096)        1 CHARS                      0-0-0/w STRC(72)          1 CONT
     0-0-0/c ACHR        r     1 LISTING_SUB_HEADING        0-0-0/c ACHR        r     1 LISTING_SUB_HEADING1
     0-0-0/c ACHR        r     1 LISTING_SUB_HEADING2       0-0-0N  NULL        r     1 M$UC
     0-0-0/w STRC(36864)       1 PAGE


   Procedure Z8IL$PRINT_HEADING requires 87 words for executable code.
   Procedure Z8IL$PRINT_HEADING requires 8 words of local(AUTO) storage.

PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:144  
      919        1        /*T***********************************************************/
      920        2        /*T*                                                         */
      921        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      922        4        /*T*                                                         */
      923        5        /*T***********************************************************/
      924        6        Z8IL$FILTER_EXPANDED_S_L : PROC ALTRET;
      925        7
      926        8        %EQU PHASE = 5;
      927        9        %INCLUDE Z8A_DEFC;
      928       77        %INCLUDE Z8A_SUPP_MAC;
      929     2477        %INCLUDE Z9A_FLAGS;
      930     2491        %INCLUDE Z8A_COMCOM;
      931     3141        %INCLUDE Z8A_ERR;
      932     3210        %INCLUDE Z8E_BUFFERS;
      933     3400
      934     3401    1   DCL Z8AA$GET_EXPANDED_SOURCE_LINE ENTRY ALTRET;
      935     3402
      936     3403    1   DCL SKIP_DATE_COMPILED BOOLEAN STATIC INIT(FALSE);
      937     3404
      938     3405    1   DCL INDICATOR_AREA           SBIN WORD EXT ;
      939     3406    1   DCL AREA_A_START             SBIN WORD EXT ;
      940     3407
      941     3408    1   DO UNTIL
      942     3409    2     ((ERR$ ~= ADDR(NIL) AND ERR$ -> ERR.LINE = FILL_BUFFER.ISN
      943     3410    2        AND NOT FILL_BUFFER.LINE_TYPE.OLD_REP_LINE) OR
      944     3411    2     NOT FILL_BUFFER.LINE_TYPE.SQL_NEW_REP_LINE AND
      945     3412          %IF GCOS;
      947     3414          %ENDIF;
      948     3415
      949     3416    2         ((NOT COMCOM.OB.CLIST
      950     3417    2            AND NOT FILL_BUFFER.LINE_TYPE.COPY_LINE
      951     3418    2                       OR FILL_BUFFER.LINE_TYPE.NEW_REP_LINE)
      952     3419    2     OR
      953     3420    2        COMCOM.OB.CLIST
      954     3421    2            AND NOT FILL_BUFFER.LINE_TYPE.OLD_REP_LINE
      955     3422    2            AND NOT FILL_BUFFER.LINE_TYPE.SQL_OLD_REP_LINE))
      956     3423    2     OR
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:145  
      957     3424    2        SKIP_DATE_COMPILED;
      958     3425
      959     3426    2     IF NOT SKIP_DATE_COMPILED THEN
      960     3427    3       DO;
      961     3428    3         CALL Z8AA$GET_EXPANDED_SOURCE_LINE ALTRET(NO_EXP_SRC);
      962     3429
      963     3430    3         IF COMCOM.DATE_COMPILED_LINE = FILL_BUFFER.ISN THEN
      964     3431    3           SKIP_DATE_COMPILED = TRUE;
      965     3432    3       END;
      966     3433    2     ELSE
      967     3434    3       DO;
      968     3435    3         SKIP_LINES:
      969     3436    4           DO UNTIL NOT SKIP_DATE_COMPILED;
      970     3437
      971     3438    4             CALL Z8AA$GET_EXPANDED_SOURCE_LINE ALTRET(NO_EXP_SRC);
      972     3439
      973     3440    4             IF FILL_BUFFER.LINE_LENGTH >= INDICATOR_AREA
      974     3441    4                 AND ( SUBSTR(FILL_BUFFER.SOURCE_LINE,INDICATOR_AREA,1) = '*'
      975     3442    4                       OR SUBSTR(FILL_BUFFER.SOURCE_LINE,INDICATOR_AREA,1) = '/') THEN
      976     3443    4               EXIT SKIP_LINES;
      977     3444
      978     3445    4             IF SUBSTR(FILL_BUFFER.SOURCE_LINE, AREA_A_START, 4) ~= '    ' THEN
      979     3446    4               SKIP_DATE_COMPILED = FALSE;
      980     3447    4            END;
      981     3448    3       END;
      982     3449    2   END;  /* Do until */
      983     3450
      984     3451    1     RETURN;
      985     3452
      986     3453    1   NO_EXP_SRC:
      987     3454    1     ALTRETURN;
      988     3455
      989     3456    1   END Z8IL$FILTER_EXPANDED_S_L;
      990     3457        %EOD;

PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:146  
--  Include file information  --

   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$FILTER_EXPANDED_S_L.

   Procedure Z8IL$FILTER_EXPANDED_S_L requires 70 words for executable code.
   Procedure Z8IL$FILTER_EXPANDED_S_L requires 4 words of local(AUTO) storage.

PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:147  

 Object Unit name= Z8IL$FILTER_EXPANDED_S_L                   File name= Z8IL.:Z8A6TOU
 UTS= AUG 09 '97 13:30:37.20 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  ERR$
    2  LblCom even  none     1      1  ERR_HEAD
    3  LblCom even  none     1      1  ERR_TAIL
    4  LblCom even  none     1      1  MAX_ERROR_GENERATED
    5  LblCom even  none     5      5  ERR_
    6  LblCom even  none     1      1  SCANNER_STATE
    7  LblCom even  none     1      1  CURRENT_BUFFER$
    8  LblCom even  none     1      1  LOOKAHEAD_BUFFER$
    9  LblCom even  none     1      1  CURRENT_LINE_LEVEL
   10  LblCom even  none     1      1  LINE_LIST$
   11  LblCom even  none     7      7  BUFFER
   12  LblCom even  none     1      1  ORIGINAL_ISN
   13  LblCom even  none     1      1  EXPANDED_ISN
   14  LblCom even  none     1      1  ISN_FOR_EXP_SRC
   15   Data  even  none     1      1  Z8IL$FILTER_EXPANDED_S_L
   16  LblCom even  none     1      1  INDICATOR_AREA
   17  LblCom even  none     1      1  AREA_A_START
   18  RoData even  UTS      1      1  Z8IL$FILTER_EXPANDED_S_L
   19   Proc  even  none    70    106  Z8IL$FILTER_EXPANDED_S_L
   20  RoData even  none     4      4  Z8IL$FILTER_EXPANDED_S_L

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    19      0   yes    yes     yes      Std        0  Z8IL$FILTER_EXPANDED_S_L
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:148  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 Z8AA$GET_EXPANDED_SOURCE_LINE
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:149  


      919        1        /*T***********************************************************/
      920        2        /*T*                                                         */
      921        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      922        4        /*T*                                                         */
      923        5        /*T***********************************************************/
      924        6        Z8IL$FILTER_EXPANDED_S_L : PROC ALTRET;

      6 19 000000   000000 700200 xent  Z8IL$FILTER* TSX0  ! X66_AUTO_0
        19 000001   000004 000000                    ZERO    4,0

      925        7
      926        8        %EQU PHASE = 5;
      927        9        %INCLUDE Z8A_DEFC;
      928       77        %INCLUDE Z8A_SUPP_MAC;
      929     2477        %INCLUDE Z9A_FLAGS;
      930     2491        %INCLUDE Z8A_COMCOM;
      931     3141        %INCLUDE Z8A_ERR;
      932     3210        %INCLUDE Z8E_BUFFERS;
      933     3400
      934     3401    1   DCL Z8AA$GET_EXPANDED_SOURCE_LINE ENTRY ALTRET;
      935     3402
      936     3403    1   DCL SKIP_DATE_COMPILED BOOLEAN STATIC INIT(FALSE);
      937     3404
      938     3405    1   DCL INDICATOR_AREA           SBIN WORD EXT ;
      939     3406    1   DCL AREA_A_START             SBIN WORD EXT ;
      940     3407
      941     3408    1   DO UNTIL

      942     3409    2     ((ERR$ ~= ADDR(NIL) AND ERR$ -> ERR.LINE = FILL_BUFFER.ISN
      943     3410    2        AND NOT FILL_BUFFER.LINE_TYPE.OLD_REP_LINE) OR
      944     3411    2     NOT FILL_BUFFER.LINE_TYPE.SQL_NEW_REP_LINE AND
      945     3412          %IF GCOS;
      947     3414          %ENDIF;
      948     3415
      949     3416    2         ((NOT COMCOM.OB.CLIST
      950     3417    2            AND NOT FILL_BUFFER.LINE_TYPE.COPY_LINE
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:150  
      951     3418    2                       OR FILL_BUFFER.LINE_TYPE.NEW_REP_LINE)
      952     3419    2     OR
      953     3420    2        COMCOM.OB.CLIST
      954     3421    2            AND NOT FILL_BUFFER.LINE_TYPE.OLD_REP_LINE
      955     3422    2            AND NOT FILL_BUFFER.LINE_TYPE.SQL_OLD_REP_LINE))
      956     3423    2     OR
      957     3424    2        SKIP_DATE_COMPILED;
      958     3425
      959     3426    2     IF NOT SKIP_DATE_COMPILED THEN

   3426 19 000002   000000 234000 15                 SZN     SKIP_DATE_COMPILED
        19 000003   000016 604000 19                 TMI     SKIP_LINES

      960     3427    3       DO;

      961     3428    3         CALL Z8AA$GET_EXPANDED_SOURCE_LINE ALTRET(NO_EXP_SRC);

   3428 19 000004   000000 631400 20                 EPPR1   0
        19 000005   000000 701000 xent               TSX1    Z8AA$GET_EXPANDED_SOURCE_LINE
        19 000006   000105 702000 19                 TSX2    NO_EXP_SRC

      962     3429
      963     3430    3         IF COMCOM.DATE_COMPILED_LINE = FILL_BUFFER.ISN THEN

   3430 19 000007   000000 470400 8                  LDP0    LOOKAHEAD_BUFFER$
        19 000010   000433 236000 xsym               LDQ     COMCOM+283
        19 000011   000004 116100                    CMPQ    4,,PR0
        19 000012   000050 601000 19                 TNZ     s:3449

      964     3431    3           SKIP_DATE_COMPILED = TRUE;

   3431 19 000013   400000 236003                    LDQ     -131072,DU
        19 000014   000000 756000 15                 STQ     SKIP_DATE_COMPILED

      965     3432    3       END;

   3432 19 000015   000050 710000 19                 TRA     s:3449
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:151  

      966     3433    2     ELSE
      967     3434    3       DO;

      968     3435    3         SKIP_LINES:
      969     3436    4           DO UNTIL NOT SKIP_DATE_COMPILED;

   3436 19 000016                       SKIP_LINES   null
      970     3437
      971     3438    4             CALL Z8AA$GET_EXPANDED_SOURCE_LINE ALTRET(NO_EXP_SRC);

   3438 19 000016   000000 631400 20                 EPPR1   0
        19 000017   000000 701000 xent               TSX1    Z8AA$GET_EXPANDED_SOURCE_LINE
        19 000020   000105 702000 19                 TSX2    NO_EXP_SRC

      972     3439
      973     3440    4             IF FILL_BUFFER.LINE_LENGTH >= INDICATOR_AREA

   3440 19 000021   000000 470400 8                  LDP0    LOOKAHEAD_BUFFER$
        19 000022   000012 236100                    LDQ     10,,PR0
        19 000023   000000 116000 16                 CMPQ    INDICATOR_AREA
        19 000024   000037 604000 19                 TMI     s:3445
        19 000025   000012 720100                    LXL0    10,,PR0
        19 000026   000000 235000 16                 LDA     INDICATOR_AREA
        19 000027   040000 106505                    CMPC    fill='040'O
        19 000030   000013 000001                    ADSC9   11,A,PR0                 cn=0,n=1
        19 000031   000001 000001 20                 ADSC9   1                        cn=0,n=1
        19 000032   000050 600000 19                 TZE     s:3449
        19 000033   040000 106505                    CMPC    fill='040'O
        19 000034   000013 000001                    ADSC9   11,A,PR0                 cn=0,n=1
        19 000035   000002 000001 20                 ADSC9   2                        cn=0,n=1
        19 000036   000050 600000 19                 TZE     s:3449

      974     3441    4                 AND ( SUBSTR(FILL_BUFFER.SOURCE_LINE,INDICATOR_AREA,1) = '*'
      975     3442    4                       OR SUBSTR(FILL_BUFFER.SOURCE_LINE,INDICATOR_AREA,1) = '/') THEN
      976     3443    4               EXIT SKIP_LINES;
      977     3444
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:152  
      978     3445    4             IF SUBSTR(FILL_BUFFER.SOURCE_LINE, AREA_A_START, 4) ~= '    ' THEN

   3445 19 000037   000012 720100                    LXL0    10,,PR0
        19 000040   000000 235000 17                 LDA     AREA_A_START
        19 000041   040000 106505                    CMPC    fill='040'O
        19 000042   000013 000004                    ADSC9   11,A,PR0                 cn=0,n=4
        19 000043   000000 000004 18                 ADSC9   0                        cn=0,n=4
        19 000044   000046 600000 19                 TZE     s:3447

      979     3446    4               SKIP_DATE_COMPILED = FALSE;

   3446 19 000045   000000 450000 15                 STZ     SKIP_DATE_COMPILED

      980     3447    4            END;

   3447 19 000046   000000 234000 15                 SZN     SKIP_DATE_COMPILED
        19 000047   000016 604000 19                 TMI     SKIP_LINES

      981     3448    3       END;

      982     3449    2   END;  /* Do until */

   3449 19 000050   000000 236000 1                  LDQ     ERR$
        19 000051   000003 116000 20                 CMPQ    3
        19 000052   000063 600000 19                 TZE     s:3449+11
        19 000053   000000 471400 1                  LDP1    ERR$
        19 000054   100002 236100                    LDQ     2,,PR1
        19 000055   000022 772000                    QRL     18
        19 000056   000004 116100                    CMPQ    4,,PR0
        19 000057   000063 601000 19                 TNZ     s:3449+11
        19 000060   000011 236100                    LDQ     9,,PR0
        19 000061   020000 316003                    CANQ    8192,DU
        19 000062   000104 600000 19                 TZE     s:3451
        19 000063   000011 236100                    LDQ     9,,PR0
        19 000064   000200 316003                    CANQ    128,DU
        19 000065   000102 601000 19                 TNZ     s:3449+26
        19 000066   000044 234000 xsym               SZN     COMCOM+36
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:153  
        19 000067   000072 604000 19                 TMI     s:3449+18
        19 000070   200000 316003                    CANQ    65536,DU
        19 000071   000104 600000 19                 TZE     s:3451
        19 000072   000011 430100                    FSZN    9,,PR0
        19 000073   000104 604000 19                 TMI     s:3451
        19 000074   000044 234000 xsym               SZN     COMCOM+36
        19 000075   000102 605000 19                 TPL     s:3449+26
        19 000076   020000 316003                    CANQ    8192,DU
        19 000077   000102 601000 19                 TNZ     s:3449+26
        19 000100   000400 316003                    CANQ    256,DU
        19 000101   000104 600000 19                 TZE     s:3451
        19 000102   000000 234000 15                 SZN     SKIP_DATE_COMPILED
        19 000103   000002 605000 19                 TPL     s:3426

      983     3450
      984     3451    1     RETURN;

   3451 19 000104   000000 702200 xent               TSX2  ! X66_ARET

      985     3452
      986     3453    1   NO_EXP_SRC:
      987     3454    1     ALTRETURN;

   3454 19 000105   000000 702200 xent  NO_EXP_SRC   TSX2  ! X66_AALT
      988     3455
      989     3456    1   END Z8IL$FILTER_EXPANDED_S_L;
      990     3457        %EOD;

PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:154  
--  Include file information  --

   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$FILTER_EXPANDED_S_L.
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:155  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom ERR$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ERR$

  ****  Section 002 LblCom ERR_HEAD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERR_HEAD

  ****  Section 003 LblCom ERR_TAIL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERR_TAIL

  ****  Section 004 LblCom MAX_ERROR_GENERATED

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_ERROR_GENERATED

PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:156  
  ****  Section 005 LblCom ERR_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ERR_

  ****  Section 006 LblCom SCANNER_STATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SCANNER_STATE

  ****  Section 007 LblCom CURRENT_BUFFER$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 CURRENT_BUFFER$

  ****  Section 008 LblCom LOOKAHEAD_BUFFER$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 LOOKAHEAD_BUFFER$

  ****  Section 009 LblCom CURRENT_LINE_LEVEL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 CURRENT_LINE_LEVEL

  ****  Section 010 LblCom LINE_LIST$

PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:157  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LINE_LIST$

  ****  Section 011 LblCom BUFFER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(252)   r     1 BUFFER

  ****  Section 012 LblCom ORIGINAL_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ORIGINAL_ISN

  ****  Section 013 LblCom EXPANDED_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EXPANDED_ISN

  ****  Section 014 LblCom ISN_FOR_EXP_SRC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ISN_FOR_EXP_SRC

  ****  Section 015  Data  Z8IL$FILTER_EXPANDED_S_L

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:158  

     0-0-0/b BIT         r     1 SKIP_DATE_COMPILED

  ****  Section 016 LblCom INDICATOR_AREA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 INDICATOR_AREA

  ****  Section 017 LblCom AREA_A_START

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 AREA_A_START

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248) r     1 COMCOM

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR              1 BUFFER_LINE                0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(540)   r     1 ERR
     0-0-0/w ASTR(396)   r     1 EXP_SRC_BUFF               0-0-0/w ASTR(396)   r     1 FILL_BUFFER
     0-0-0/w STRC(36864)       1 PAGE


   Procedure Z8IL$FILTER_EXPANDED_S_L requires 70 words for executable code.
PL6.E3A0      #003=Z8IL$FILTER_EXPANDED_S_L File=Z8IL.:Z8A6TSI                   SAT 08/09/97 13:30 Page:159  
   Procedure Z8IL$FILTER_EXPANDED_S_L requires 4 words of local(AUTO) storage.

PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:160  
      991        1        /*T***********************************************************/
      992        2        /*T*                                                         */
      993        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      994        4        /*T*                                                         */
      995        5        /*T***********************************************************/
      996        6        %INCLUDE Z9A_FLAGS;
      997       20        Z8IL$BUILD_LISTING_SOURCE_LINE : PROC
      998       21        %IF GCOS;
     1000       23        %ENDIF;
     1001       24             ;
     1002       25
     1003       26        /*D*
     1004       27
     1005       28               NAME: Z8IL$BUILD_LISTING_SOURCE_LINE
     1006       29        DESCRIPTION: Build a print line from current information.
     1007       30
     1008       31        */
     1009       32
     1010       33        % EQU PHASE = 5;
     1011       34        %INCLUDE Z8A_DEFC;
     1012      102        %INCLUDE Z8A_SUPP_MAC;
     1013     2502          %INCLUDE Z8A_COMCOM;
     1014     3152        % INCLUDE Z9I_PREPROC;
     1015     3172        % INCLUDE Z8I_LISTING;
     1016     3260          %INCLUDE Z8E_BUFFERS;
     1017     3450          %IF GCOS;
     1022     3455          %ENDIF;
     1023     3456
     1024     3457               /* External Definitions Follow */
     1025     3458
     1026     3459    1   DCL Z8IU$BLANK_ZERO ENTRY (1);
     1027     3460        %IF GCOS;
     1038     3471        %ENDIF;
     1039     3472    1   DCL I                        SBIN;
     1040     3473    1   DCL J                        SBIN;
     1041     3474
     1042     3475        %EJECT;
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:161  
     1043     3476
     1044     3477               /* Build a listing source line in preparation for printing
     1045     3478                  that line.
     1046     3479               */
     1047     3480        /* Body of BUILD_LISTING_SOURCE_LINE */
     1048     3481
     1049     3482        %IF GCOS;
     1081     3514        %ENDIF;
     1082     3515    1   PLINE_REDEF_FIELDS.ESN = FILL_BUFFER.ESN;
     1083     3516    1   CALL BINCHAR (PLINE_REDEF_FIELDS.ISN,
     1084     3517    1                 FILL_BUFFER.ISN);
     1085     3518    1   CALL Z8IU$BLANK_ZERO(ADDR(PLINE_REDEF_FIELDS.ISN));
     1086     3519
     1087     3520    1   IF COMCOM.PRIVACY_LINE = FILL_BUFFER.ISN THEN
     1088     3521    2     DO;
     1089     3522    2       CALL INDEX (I, '"', FILL_BUFFER.SOURCE_LINE, COMCOM.PRIVACY_COL + 1);
     1090     3523    2       J = I - COMCOM.PRIVACY_COL - 1;
     1091     3524    2       CALL INSERT (FILL_BUFFER.SOURCE_LINE, COMCOM.PRIVACY_COL + 1, J,
              3524                '##############');
     1092     3525    3       DO WHILE J > 14; /* In case of privacy key over max length of 14 bytes */
     1093     3526    3         CALL INSERT (FILL_BUFFER.SOURCE_LINE, I - 1, 1, '#');
     1094     3527    3         I = I - 1;
     1095     3528    3         J = J - 1;
     1096     3529    3       END;
     1097     3530    2     END;
     1098     3531
     1099     3532    1   IF COMCOM.DATE_COMPILED_LINE ~= FILL_BUFFER.ISN THEN
     1100     3533    2     DO;
     1101     3534    2       PLINE_REDEF_FIELDS.LINE = FILL_BUFFER.SOURCE_LINE;
     1102     3535            %IF GCOS;
     1135     3568            %ENDIF;
     1136     3569    2       PLINE_LEN = LENGTHC(FILL_BUFFER.ESN) + 8
     1137     3570    2                      + MINIMUM (LENGTHC(PLINE_REDEF_FIELDS.LINE),
     1138     3571    2                                 FILL_BUFFER.LINE_LENGTH);
     1139     3572    2     END;
     1140     3573    1   ELSE
     1141     3574    2     DO;
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:162  
     1142     3575    2       PLINE_REDEF_FIELDS.LINE = '       DATE-COMPILED. ';
     1143     3576    2       SUBSTR(PLINE_REDEF_FIELDS.LINE, 22, 8) = COMCOM.COMPILE.DATE;
     1144     3577    2       SUBSTR(PLINE_REDEF_FIELDS.LINE, 30, 1) = '.';
     1145     3578    2       PLINE_LEN = LENGTHC(FILL_BUFFER.ESN) + 39;
     1146     3579    2     END;
     1147     3580    1   END Z8IL$BUILD_LISTING_SOURCE_LINE;
     1148     3581        %EOD;

PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:163  
--  Include file information  --

   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure Z8IL$BUILD_LISTING_SOURCE_LINE.

   Procedure Z8IL$BUILD_LISTING_SOURCE_LINE requires 83 words for executable code.
   Procedure Z8IL$BUILD_LISTING_SOURCE_LINE requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:164  

 Object Unit name= Z8IL$BUILD_LISTING_SOURCE_LINE             File name= Z8IL.:Z8A6TOU
 UTS= AUG 09 '97 13:31:06.36 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  SUB_HEADING_ADDR
    2  LblCom even  none     1      1  SUB_HEADING_LEN
    3  LblCom even  none     1      1  SUB_HEADING_ADDR1
    4  LblCom even  none     1      1  SUB_HEADING_LEN1
    5  LblCom even  none     1      1  SUB_HEADING_ADDR2
    6  LblCom even  none     1      1  SUB_HEADING_LEN2
    7  LblCom even  none     1      1  MAX_LINES_PER_PAGE
    8  LblCom even  none     1      1  LISTING_LINES_ON_PAGE
    9  LblCom even  none     1      1  LISTING_PAGE_NUMBER
   10  LblCom even  none    28     34  PLINE
   11  LblCom even  none     1      1  PLINE_LEN
   12  LblCom even  none     1      1  SCANNER_STATE
   13  LblCom even  none     1      1  CURRENT_BUFFER$
   14  LblCom even  none     1      1  LOOKAHEAD_BUFFER$
   15  LblCom even  none     1      1  CURRENT_LINE_LEVEL
   16  LblCom even  none     1      1  LINE_LIST$
   17  LblCom even  none     7      7  BUFFER
   18  LblCom even  none     1      1  ORIGINAL_ISN
   19  LblCom even  none     1      1  EXPANDED_ISN
   20  LblCom even  none     1      1  ISN_FOR_EXP_SRC
   21  RoData even  UTS     10     12  Z8IL$BUILD_LISTING_SOURCE_LINE
   22   Proc  even  none    83    123  Z8IL$BUILD_LISTING_SOURCE_LINE
   23  RoData even  none     5      5  Z8IL$BUILD_LISTING_SOURCE_LINE
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:165  

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    22      0   yes            yes      Std        0  Z8IL$BUILD_LISTING_SOURCE_LINE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 Z8IU$BLANK_ZERO
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                           r    DEF_LISTING_SUB_HEADING          r    BLANK
r    PLINE_PTR$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:166  


      991        1        /*T***********************************************************/
      992        2        /*T*                                                         */
      993        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      994        4        /*T*                                                         */
      995        5        /*T***********************************************************/
      996        6        %INCLUDE Z9A_FLAGS;
      997       20        Z8IL$BUILD_LISTING_SOURCE_LINE : PROC

     20 22 000000   000000 700200 xent  Z8IL$BUILD_* TSX0  ! X66_AUTO_0
        22 000001   000010 000000                    ZERO    8,0

      998       21        %IF GCOS;
     1000       23        %ENDIF;
     1001       24             ;
     1002       25
     1003       26        /*D*
     1004       27
     1005       28               NAME: Z8IL$BUILD_LISTING_SOURCE_LINE
     1006       29        DESCRIPTION: Build a print line from current information.
     1007       30
     1008       31        */
     1009       32
     1010       33        % EQU PHASE = 5;
     1011       34        %INCLUDE Z8A_DEFC;
     1012      102        %INCLUDE Z8A_SUPP_MAC;
     1013     2502          %INCLUDE Z8A_COMCOM;
     1014     3152        % INCLUDE Z9I_PREPROC;
     1015     3172        % INCLUDE Z8I_LISTING;
     1016     3260          %INCLUDE Z8E_BUFFERS;
     1017     3450          %IF GCOS;
     1022     3455          %ENDIF;
     1023     3456
     1024     3457               /* External Definitions Follow */
     1025     3458
     1026     3459    1   DCL Z8IU$BLANK_ZERO ENTRY (1);
     1027     3460        %IF GCOS;
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:167  
     1038     3471        %ENDIF;
     1039     3472    1   DCL I                        SBIN;
     1040     3473    1   DCL J                        SBIN;
     1041     3474
     1042     3475        %EJECT;
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:168  
     1043     3476
     1044     3477               /* Build a listing source line in preparation for printing
     1045     3478                  that line.
     1046     3479               */
     1047     3480        /* Body of BUILD_LISTING_SOURCE_LINE */
     1048     3481
     1049     3482        %IF GCOS;
     1081     3514        %ENDIF;
     1082     3515    1   PLINE_REDEF_FIELDS.ESN = FILL_BUFFER.ESN;

   3515 22 000002   000000 470400 14                 LDP0    LOOKAHEAD_BUFFER$
        22 000003   040000 100500                    MLR     fill='040'O
        22 000004   000005 000012                    ADSC9   5,,PR0                   cn=0,n=10
        22 000005   000000 000012 10                 ADSC9   PLINE                    cn=0,n=10

     1083     3516    1   CALL BINCHAR (PLINE_REDEF_FIELDS.ISN,

   3516 22 000006   000000 301500                    BTD
        22 000007   000004 000004                    NDSC9   4,,PR0                   cn=0,s=lsgnf,sf=0,n=4
        22 000010   000002 630006 10                 NDSC9   PLINE+2                  cn=3,s=nosgn,sf=0,n=6

     1084     3517    1                 FILL_BUFFER.ISN);
     1085     3518    1   CALL Z8IU$BLANK_ZERO(ADDR(PLINE_REDEF_FIELDS.ISN));

   3518 22 000011   000001 236000 23                 LDQ     1
        22 000012   200006 756100                    STQ     J+2,,AUTO
        22 000013   200006 631500                    EPPR1   J+2,,AUTO
        22 000014   200007 451500                    STP1    J+3,,AUTO
        22 000015   200007 630500                    EPPR0   J+3,,AUTO
        22 000016   000000 631400 23                 EPPR1   0
        22 000017   000000 701000 xent               TSX1    Z8IU$BLANK_ZERO
        22 000020   000000 011000                    NOP     0

     1086     3519
     1087     3520    1   IF COMCOM.PRIVACY_LINE = FILL_BUFFER.ISN THEN

   3520 22 000021   000000 470400 14                 LDP0    LOOKAHEAD_BUFFER$
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:169  
        22 000022   000447 236000 xsym               LDQ     COMCOM+295
        22 000023   000072 604000 22                 TMI     s:3532
        22 000024   000004 116100                    CMPQ    4,,PR0
        22 000025   000072 601000 22                 TNZ     s:3532

     1088     3521    2     DO;

     1089     3522    2       CALL INDEX (I, '"', FILL_BUFFER.SOURCE_LINE, COMCOM.PRIVACY_COL + 1);

   3522 22 000026   000012 720100                    LXL0    10,,PR0
        22 000027   000000 636010                    EAQ     0,X0
        22 000030   000022 732000                    QRS     18
        22 000031   000450 136000 xsym               SBLQ    COMCOM+296
        22 000032   777777 621006                    EAX1    -1,QL
        22 000033   000450 236000 xsym               LDQ     COMCOM+296
        22 000034   000001 036007                    ADLQ    1,DL
        22 000035   000450 235000 xsym               LDA     COMCOM+296
        22 000036   000000 124545                    SCM     mask='000'O
        22 000037   000013 200011                    ADSC9   11,A,PR0                 cn=1,n=*X1
        22 000040   000002 000001 23                 ADSC9   2                        cn=0,n=1
        22 000041   200003 000100                    ARG     I,,AUTO
        22 000042   200003 056100                    ASQ     I,,AUTO

     1090     3523    2       J = I - COMCOM.PRIVACY_COL - 1;

   3523 22 000043   200003 236100                    LDQ     I,,AUTO
        22 000044   000450 136000 xsym               SBLQ    COMCOM+296
        22 000045   000001 136007                    SBLQ    1,DL
        22 000046   200004 756100                    STQ     J,,AUTO

     1091     3524    2       CALL INSERT (FILL_BUFFER.SOURCE_LINE, COMCOM.PRIVACY_COL + 1, J,
              3524                '##############');

   3524 22 000047   000000 621006                    EAX1    0,QL
        22 000050   040145 100400                    MLR     fill='040'O
        22 000051   000000 000016 21                 ADSC9   0                        cn=0,n=14
        22 000052   000013 200011                    ADSC9   11,A,PR0                 cn=1,n=*X1
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:170  

     1092     3525    3       DO WHILE J > 14; /* In case of privacy key over max length of 14 bytes */

   3525 22 000053   200004 235100                    LDA     J,,AUTO
        22 000054   000016 115007                    CMPA    14,DL
        22 000055   000072 604400 22                 TMOZ    s:3532

     1093     3526    3         CALL INSERT (FILL_BUFFER.SOURCE_LINE, I - 1, 1, '#');

   3526 22 000056   000000 470400 14                 LDP0    LOOKAHEAD_BUFFER$
        22 000057   000012 720100                    LXL0    10,,PR0
        22 000060   200003 235100                    LDA     I,,AUTO
        22 000061   040105 100400                    MLR     fill='040'O
        22 000062   000003 000001 23                 ADSC9   3                        cn=0,n=1
        22 000063   000012 600001                    ADSC9   10,A,PR0                 cn=3,n=1

     1094     3527    3         I = I - 1;

   3527 22 000064   000001 336007                    LCQ     1,DL
        22 000065   200003 056100                    ASQ     I,,AUTO

     1095     3528    3         J = J - 1;

   3528 22 000066   200004 056100                    ASQ     J,,AUTO

     1096     3529    3       END;

   3529 22 000067   200004 235100                    LDA     J,,AUTO
        22 000070   000016 115007                    CMPA    14,DL
        22 000071   000056 605400 22                 TPNZ    s:3526

     1097     3530    2     END;

     1098     3531
     1099     3532    1   IF COMCOM.DATE_COMPILED_LINE ~= FILL_BUFFER.ISN THEN

   3532 22 000072   000000 470400 14                 LDP0    LOOKAHEAD_BUFFER$
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:171  
        22 000073   000433 236000 xsym               LDQ     COMCOM+283
        22 000074   000004 116100                    CMPQ    4,,PR0
        22 000075   000111 600000 22                 TZE     s:3575

     1100     3533    2     DO;

     1101     3534    2       PLINE_REDEF_FIELDS.LINE = FILL_BUFFER.SOURCE_LINE;

   3534 22 000076   000012 720100                    LXL0    10,,PR0
        22 000077   040000 100540                    MLR     fill='040'O
        22 000100   000013 000010                    ADSC9   11,,PR0                  cn=0,n=*X0
        22 000101   000004 400120 10                 ADSC9   PLINE+4                  cn=2,n=80

     1102     3535            %IF GCOS;
     1135     3568            %ENDIF;
     1136     3569    2       PLINE_LEN = LENGTHC(FILL_BUFFER.ESN) + 8

   3569 22 000102   000012 236100                    LDQ     10,,PR0
        22 000103   000120 116007                    CMPQ    80,DL
        22 000104   000106 604400 22                 TMOZ    s:3569+4
        22 000105   000120 236007                    LDQ     80,DL
        22 000106   000022 036007                    ADLQ    18,DL
        22 000107   000000 756000 11                 STQ     PLINE_LEN

     1137     3570    2                      + MINIMUM (LENGTHC(PLINE_REDEF_FIELDS.LINE),
     1138     3571    2                                 FILL_BUFFER.LINE_LENGTH);
     1139     3572    2     END;

   3572 22 000110   000122 710000 22                 TRA     s:3580

     1140     3573    1   ELSE
     1141     3574    2     DO;

     1142     3575    2       PLINE_REDEF_FIELDS.LINE = '       DATE-COMPILED. ';

   3575 22 000111   040000 100400                    MLR     fill='040'O
        22 000112   000004 000026 21                 ADSC9   4                        cn=0,n=22
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:172  
        22 000113   000004 400120 10                 ADSC9   PLINE+4                  cn=2,n=80

     1143     3576    2       SUBSTR(PLINE_REDEF_FIELDS.LINE, 22, 8) = COMCOM.COMPILE.DATE;

   3576 22 000114   000140 237000 xsym               LDAQ    COMCOM+96
        22 000115   000012 757000 10                 STAQ    PLINE+10

     1144     3577    2       SUBSTR(PLINE_REDEF_FIELDS.LINE, 30, 1) = '.';

   3577 22 000116   056000 236003                    LDQ     23552,DU
        22 000117   000014 552040 10                 STBQ    PLINE+12,'40'O

     1145     3578    2       PLINE_LEN = LENGTHC(FILL_BUFFER.ESN) + 39;

   3578 22 000120   000061 235007                    LDA     49,DL
        22 000121   000000 755000 11                 STA     PLINE_LEN

     1146     3579    2     END;

     1147     3580    1   END Z8IL$BUILD_LISTING_SOURCE_LINE;

   3580 22 000122   000000 702200 xent               TSX2  ! X66_ARET
     1148     3581        %EOD;

PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:173  
--  Include file information  --

   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
      No diagnostics issued in procedure Z8IL$BUILD_LISTING_SOURCE_LINE.
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:174  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom SUB_HEADING_ADDR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR

  ****  Section 002 LblCom SUB_HEADING_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN

  ****  Section 003 LblCom SUB_HEADING_ADDR1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR1

  ****  Section 004 LblCom SUB_HEADING_LEN1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN1

PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:175  
  ****  Section 005 LblCom SUB_HEADING_ADDR2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR2

  ****  Section 006 LblCom SUB_HEADING_LEN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN2

  ****  Section 007 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_LINES_PER_PAGE

  ****  Section 008 LblCom LISTING_LINES_ON_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LISTING_LINES_ON_PAGE

  ****  Section 009 LblCom LISTING_PAGE_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LISTING_PAGE_NUMBER

  ****  Section 010 LblCom PLINE

PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:176  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)   r     1 PLINE
     0-0-0/c CHAR              1 PLINE_CHAR(0:108)
     0-0-0/c STRC(981)   r     1 PLINE_REDEF_FIELDS

  ****  Section 011 LblCom PLINE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 PLINE_LEN

  ****  Section 012 LblCom SCANNER_STATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SCANNER_STATE

  ****  Section 013 LblCom CURRENT_BUFFER$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 CURRENT_BUFFER$

  ****  Section 014 LblCom LOOKAHEAD_BUFFER$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 LOOKAHEAD_BUFFER$

  ****  Section 015 LblCom CURRENT_LINE_LEVEL

PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:177  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 CURRENT_LINE_LEVEL

  ****  Section 016 LblCom LINE_LIST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LINE_LIST$

  ****  Section 017 LblCom BUFFER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(252)   r     1 BUFFER

  ****  Section 018 LblCom ORIGINAL_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ORIGINAL_ISN

  ****  Section 019 LblCom EXPANDED_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EXPANDED_ISN

  ****  Section 020 LblCom ISN_FOR_EXP_SRC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #004=Z8IL$BUILD_LISTING_SOURCE_LINE File=Z8IL.:Z8A6TSI             SAT 08/09/97 13:31 Page:178  

     0-0-0/w SBIN              1 ISN_FOR_EXP_SRC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN        r     1 I                          4-0-0/w SBIN        r     1 J

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR              1 BLANK                      0-0-0/d STRC(13248) r     1 COMCOM
     0-0-0/c STRC(297)         1 DEF_LISTING_SUB_HEADING
     0-0-0/w PTR               1 PLINE_PTR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR              1 BUFFER_LINE                0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w ASTR(396)   r     1 EXP_SRC_BUFF
     0-0-0/w ASTR(396)   r     1 FILL_BUFFER                0-0-0/c ACHR              1 LISTING_SUB_HEADING
     0-0-0/c ACHR              1 LISTING_SUB_HEADING1       0-0-0/c ACHR              1 LISTING_SUB_HEADING2
     0-0-0/w STRC(36864)       1 PAGE


   Procedure Z8IL$BUILD_LISTING_SOURCE_LINE requires 83 words for executable code.
   Procedure Z8IL$BUILD_LISTING_SOURCE_LINE requires 8 words of local(AUTO) storage.

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:179  
     1149        1        /*T***********************************************************/
     1150        2        /*T*                                                         */
     1151        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1152        4        /*T*                                                         */
     1153        5        /*T***********************************************************/
     1154        6        Z8IL$PRINT_ERROR: PROC (OUTPUT_ERR_1, OUTPUT_ERR_2);
     1155        7
     1156        8        /*D*
     1157        9               NAME: Z8IL$PRINT_ERROR
     1158       10        DESCRIPTION: Print all errors on LO & DO files which pertain
     1159       11                       to the last source line printed.
     1160       12        */
     1161       13
     1162       14        /* OUTPUT_ERR_N routines are routines called with:
     1163       15                addr of line
     1164       16                length of line
     1165       17        to output error text.  They may be left out of the
     1166       18        call to PRINT_ERROR if not used.
     1167       19        */
     1168       20    1   DCL OUTPUT_ERR_1 EPTR;
     1169       21    1   DCL OUTPUT_ERR_2 EPTR;
     1170       22
     1171       23
     1172       24        %EQU PHASE = 5;
     1173       25        %INCLUDE Z8A_DEFC;
     1174       93        %INCLUDE Z8A_SUPP_MAC;
     1175     2493        %INCLUDE Z9A_FLAGS;
     1176     2507        %INCLUDE Z8A_COMCOM;
     1177     3157        %INCLUDE Z9I_PREPROC;
     1178     3177        %INCLUDE Z8I_LISTING;
     1179     3265        %INCLUDE Z8A_ERR;
     1180     3334        %INCLUDE Z8A_DNT;
     1181     3555        %INCLUDE Z8E_BUFFERS;
     1182     3745        %INCLUDE Z8A_ERR_NUMS;
     1183     4509        %INCLUDE Z8I_ERR_TXT;
     1184    30803
     1185    30804    1   DCL COMP_SUMMARY_COUNT(0:5) SBIN WORD EXT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:180  
     1186    30805
     1187    30806    1   DCL ERR_TABLES(0:9) PTR CONSTANT
     1188    30807    1          INIT (ADDR(ERRMSG_TABLE_ADDRS_0),
     1189    30808    1                ADDR(ERRMSG_TABLE_ADDRS_1),
     1190    30809    1                ADDR(ERRMSG_TABLE_ADDRS_2),
     1191    30810    1                ADDR(ERRMSG_TABLE_ADDRS_3),
     1192    30811    1                ADDR(ERRMSG_TABLE_ADDRS_4),
     1193    30812    1                ADDR(ERRMSG_TABLE_ADDRS_5),
     1194    30813    1                ADDR(ERRMSG_TABLE_ADDRS_6),
     1195    30814    1                ADDR(ERRMSG_TABLE_ADDRS_7),
     1196    30815    1                ADDR(ERRMSG_TABLE_ADDRS_8),
     1197    30816    1                ADDR(ERRMSG_TABLE_ADDRS_9));
     1198    30817
     1199    30818    1   DCL ERR_TABLE_LENGTH(0:9) SBIN WORD CONSTANT
     1200    30819    1          INIT (LENGTHW(ERRMSG_TABLE_ADDRS_0),
     1201    30820    1                LENGTHW(ERRMSG_TABLE_ADDRS_1),
     1202    30821    1                LENGTHW(ERRMSG_TABLE_ADDRS_2),
     1203    30822    1                LENGTHW(ERRMSG_TABLE_ADDRS_3),
     1204    30823    1                LENGTHW(ERRMSG_TABLE_ADDRS_4),
     1205    30824    1                LENGTHW(ERRMSG_TABLE_ADDRS_5),
     1206    30825    1                LENGTHW(ERRMSG_TABLE_ADDRS_6),
     1207    30826    1                LENGTHW(ERRMSG_TABLE_ADDRS_7),
     1208    30827    1                LENGTHW(ERRMSG_TABLE_ADDRS_8),
     1209    30828    1                LENGTHW(ERRMSG_TABLE_ADDRS_9));
     1210    30829
     1211    30830    1   DCL NTABLE           SBIN WORD;
     1212    30831
     1213    30832        %EQU MSG_ARRAY_LEN = 20;
     1214    30833    1   DCL 1 MSG_ARRAY,
     1215    30834    1         2 NUM  (0:%MSG_ARRAY_LEN) SBIN WORD,
     1216    30835    1         2 ERR$ (0:%MSG_ARRAY_LEN) PTR;
     1217    30836
     1218    30837    1   DCL ERR_COL_LINE CHAR(%MAX_INPUT_LINE_LENGTH) ;
     1219    30838    1   DCL ERR_COL (0:%(CHARTEXT(BINCHAR(MAX_INPUT_LINE_LENGTH-1,3))))
     1220    30839    1                  REDEF ERR_COL_LINE CHAR(1) ;
     1221    30840    1   DCL MAX_ERR_COL UBIN;  /* LARGEST COLUMN FLAGGED */
     1222    30841    1   DCL ACCUM_NUM_ERRORS SBIN WORD;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:181  
     1223    30842    1   DCL LAST_MSG_NUM SBIN WORD;
     1224    30843
     1225    30844    1   DCL DEFAULT_MSG CHAR(70) CONSTANT INIT
     1226    30845    1          ('Error message text is not available - Z8IL needs recompilation.');
     1227    30846
     1228    30847    1   DCL ERROR_FOR_LINE BIT(1);   /* If error flagged for current line */
     1229    30848
     1230    30849        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:182  
     1231    30850
     1232    30851    1   PRINT_ONE_ERROR: PROC (N);     /* in Z8IL$PRODUCE_LISTINGS
     1233    30852                                                Z8IL$PRINT_ERROR        */
     1234    30853
     1235    30854    2          DCL N SBIN WORD; /* sequence number of error */
     1236    30855
     1237    30856        /*I*
     1238    30857               NAME: PRINT_ONE_ERROR
     1239    30858        DESCRIPTION: Print one error, the Nth, from an array of errors,
     1240    30859                       on the LO & DO files.  N is passed as a parameter.
     1241    30860        */
     1242    30861               /* Print one error line */
     1243    30862
     1244    30863    2   DCL ERRP$ PTR;
     1245    30864
     1246    30865        %EQU MAX_LENGTH_ERR = 300;
     1247    30866
     1248    30867    2   DCL 1 ERR_LINE_FORMAT ,
     1249    30868    2         2 STARS  CHAR(5),
     1250    30869              %IF CP6;
     1251    30870    2         2 BLK1   CHAR(1),
     1252    30871    2         2 SEQNUM CHAR(1),
     1253    30872              %ENDIF;
     1254    30873              %IF GCOS;
     1257    30876              %ENDIF;
     1258    30877    2         2 BLK3   CHAR(1),
     1259    30878    2         2 ERRNUM CHAR(3),
     1260    30879    2         2 BLK2   CHAR(2),
     1261    30880    2         2 TXT    CHAR(%MAX_LENGTH_ERR);
     1262    30881
     1263    30882    2   DCL TXT_LEN_TOT   SBIN WORD;
     1264    30883    2   DCL NERR_IN_TABLE SBIN WORD;
     1265    30884    2   DCL ERR_TABLE$    PTR;
     1266    30885    2   DCL BASED_ERR_TABLE(0:100) PTR BASED(ERR_TABLE$);
     1267    30886    2   DCL MSG_LENGTH    SBIN WORD;
     1268    30887    2   DCL MSG$          PTR;
     1269    30888
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:183  
     1270    30889    2   DCL STARS(0:5) CHAR(5) CONSTANT INIT (
     1271    30890               %IF CP6;
     1272    30891    2          '     ',
     1273    30892    2          '*    ',
     1274    30893    2          '**   ',
     1275    30894    2          '***  ',
     1276    30895    2          '**** ',
     1277    30896    2          '*****');
     1278    30897               %ENDIF;
     1279    30898               %IF GCOS;
     1286    30905               %ENDIF;
     1287    30906
     1288    30907    2   DCL ERR_TXT CHAR(MSG_LENGTH) BASED (MSG$);
     1289    30908
     1290    30909        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:184  
     1291    30910
     1292    30911    2   MERGE_PLUG_INS: PROC;     /* in Z8IL$PRODUCE_LISTINGS
     1293    30912                                          Z8IL$PRINT_ERROR
     1294    30913                                            PRINT_ONE_ERROR    */
     1295    30914        /*I*
     1296    30915               NAME: MERGE_PLUG_INS
     1297    30916        DESCRIPTION: Scan the error line for plug in designators (!0..!9)
     1298    30917                       and expand the error with these plug in values.
     1299    30918        */
     1300    30919
     1301    30920
     1302    30921    3   DCL TXT_LEN_REM  SBIN WORD;
     1303    30922    3   DCL REM_MSG      CHAR(MSG_LENGTH) BASED(MSG$);
     1304    30923    3   DCL PAR_MSG_LEN  SBIN WORD;
     1305    30924    3   DCL PAR_MSG      CHAR(PAR_MSG_LEN) BASED(MSG$);
     1306    30925    3   DCL PLUG$        PTR;
     1307    30926    3   DCL PLUG_CHAR    CHAR(1) BASED(PLUG$);
     1308    30927    3   DCL PLUG_NUM     SBIN WORD;
     1309    30928    3   DCL PLUG_LEN     SBIN WORD;
     1310    30929
     1311    30930    3   TXT_LEN_TOT = 0;
     1312    30931    3   TXT_LEN_REM = LENGTHC(ERR_LINE_FORMAT.TXT);
     1313    30932
     1314    30933               /* Substitute plug ins */
     1315    30934
     1316    30935    4   DO WHILE((TXT_LEN_REM > 0) AND (MSG_LENGTH > 0));
     1317    30936
     1318    30937               /* Find !#, if any */
     1319    30938
     1320    30939    4     CALL INDEX(PAR_MSG_LEN, '!', REM_MSG);
     1321    30940
     1322    30941               /* Add error text so far */
     1323    30942
     1324    30943    4     CALL INSERT(ERR_LINE_FORMAT.TXT,
     1325    30944    4                 TXT_LEN_TOT,
     1326    30945    4                 MINIMUM(TXT_LEN_REM, PAR_MSG_LEN),
     1327    30946    4                 PAR_MSG);
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:185  
     1328    30947    4     TXT_LEN_TOT = TXT_LEN_TOT + MINIMUM(TXT_LEN_REM, PAR_MSG_LEN);
     1329    30948    4     TXT_LEN_REM = TXT_LEN_REM - MINIMUM(TXT_LEN_REM, PAR_MSG_LEN);
     1330    30949    4     IF PAR_MSG_LEN < MSG_LENGTH - 1 THEN
     1331    30950    5       DO;
     1332    30951    5         PLUG$ = PINCRC(MSG$, PAR_MSG_LEN + 1);
     1333    30952    5         IF (PLUG_CHAR >= '0') AND (PLUG_CHAR <= '9') THEN
     1334    30953    6           DO;
     1335    30954    6             CALL CHARBIN(PLUG_NUM, PLUG_CHAR);
     1336    30955
     1337    30956                  /* Add lexeme to error text */
     1338    30957
     1339    30958    6             PLUG_LEN = MINIMUM(TXT_LEN_REM,
     1340    30959    6                                ERRP$->ERR.LEXEME$(PLUG_NUM)->DNT.TEXT.LENGTH);
     1341    30960    6             CALL INSERT(ERR_LINE_FORMAT.TXT,
     1342    30961    6                         TXT_LEN_TOT,
     1343    30962    6                         PLUG_LEN,
     1344    30963    6                         ERRP$->ERR.LEXEME$(PLUG_NUM)->DNT.TEXT.NAME);
     1345    30964    6             TXT_LEN_TOT = TXT_LEN_TOT + PLUG_LEN;
     1346    30965    6             TXT_LEN_REM = TXT_LEN_REM - PLUG_LEN;
     1347    30966    6           END; /* DO */
     1348    30967
     1349    30968                   /* Skip !# in error text */
     1350    30969
     1351    30970    5         MSG$         = PINCRC(MSG$, PAR_MSG_LEN + 2);
     1352    30971    5         MSG_LENGTH   = MSG_LENGTH - PAR_MSG_LEN - 2;
     1353    30972    5       END; /* DO */
     1354    30973    4     ELSE
     1355    30974    4       MSG_LENGTH = 0;
     1356    30975    4   END; /* WHILE */
     1357    30976
     1358    30977    3   END MERGE_PLUG_INS;
     1359    30978
     1360    30979        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:186  
     1361    30980               /* Body of PRINT_ONE_ERROR */
     1362    30981
     1363    30982
     1364    30983    2   ERRP$          = MSG_ARRAY.ERR$(N);
     1365    30984    2   NERR_IN_TABLE  = MOD(ERRP$->ERR.NUMBER, 100);
     1366    30985    2   NTABLE         = ERRP$->ERR.NUMBER / 100;
     1367    30986    2   ERR_TABLE$     = ERR_TABLES(NTABLE);
     1368    30987
     1369    30988    2   IF NERR_IN_TABLE < ERR_TABLE_LENGTH(NTABLE) - 1 THEN
     1370    30989    3     DO;
     1371    30990    3       MSG_LENGTH = POFFC(BASED_ERR_TABLE(NERR_IN_TABLE+1),
     1372    30991    3                          BASED_ERR_TABLE(NERR_IN_TABLE));
     1373    30992    3       MSG$       = BASED_ERR_TABLE(NERR_IN_TABLE);
     1374    30993    3     END;
     1375    30994               /* Build error print line */
     1376    30995
     1377    30996    2   ELSE
     1378    30997    3     DO;
     1379    30998    3       MSG$       = ADDR(DEFAULT_MSG);
     1380    30999    3       MSG_LENGTH = LENGTHC(DEFAULT_MSG);
     1381    31000    3     END;
     1382    31001
     1383    31002    2   ERR_LINE_FORMAT.STARS = STARS(SEVERITY_OF_ERROR(NTABLE));
     1384    31003    2   ERR_LINE_FORMAT.BLK1  = ' ';
     1385    31004    2   ERR_LINE_FORMAT.BLK2  = ' ';
     1386    31005    2   ERR_LINE_FORMAT.BLK3  = ' ';
     1387    31006
     1388    31007    2   CALL BINCHAR(ERR_LINE_FORMAT.ERRNUM, ERRP$->ERR.NUMBER);
     1389    31008    2   CALL BINCHAR(ERR_LINE_FORMAT.SEQNUM, MSG_ARRAY.NUM(N));
     1390    31009
     1391    31010    2   CALL MERGE_PLUG_INS;
     1392    31011
     1393    31012    2   IF ADDR(OUTPUT_ERR_1) ~= ADDR(NIL) THEN
     1394    31013    2     CALL OUTPUT_ERR_1(ADDR(ERR_LINE_FORMAT),
     1395    31014    2                            TXT_LEN_TOT+LENGTHC(ERR_LINE_FORMAT)-%MAX_LENGTH_ERR);
     1396    31015
     1397    31016    2   IF ADDR(OUTPUT_ERR_2) ~= ADDR(NIL) THEN
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:187  
     1398    31017    2     CALL OUTPUT_ERR_2(ADDR(ERR_LINE_FORMAT),
     1399    31018    2                            TXT_LEN_TOT+LENGTHC(ERR_LINE_FORMAT)-%MAX_LENGTH_ERR);
     1400    31019    2   END PRINT_ONE_ERROR;
     1401    31020
     1402    31021        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:188  
     1403    31022
     1404    31023    1   DUMP_ERRORS: PROC;     /* in Z8IL$PRODUCE_LISTINGS
     1405    31024                                        Z8IL$PRINT_ERROR      */
     1406    31025
     1407    31026        /*I*
     1408    31027               NAME: DUMP_ERRORS
     1409    31028        DESCRIPTION: Errors are accumulated for a particular source line in
     1410    31029                       order to mark each column of the source line where the
     1411    31030                       the error occurred.  DUMP_errors prints these source
     1412    31031                       lines.
     1413    31032        */
     1414    31033
     1415    31034    2   DCL I SBIN WORD;
     1416    31035
     1417    31036    2   IF ADDR(OUTPUT_ERR_1) ~= ADDR(NIL) THEN
     1418    31037    2     CALL OUTPUT_ERR_1(ADDR(ERR_COL_LINE), MAX_ERR_COL+1);
     1419    31038    2   IF ADDR(OUTPUT_ERR_2) ~= ADDR(NIL) THEN
     1420    31039    2     CALL OUTPUT_ERR_2(ADDR(ERR_COL_LINE), MAX_ERR_COL+1);
     1421    31040    2   ERR_COL_LINE = ' ';
     1422    31041    2   MAX_ERR_COL = 0;
     1423    31042    3   DO I=1 TO ACCUM_NUM_ERRORS;
     1424    31043    3     CALL PRINT_ONE_ERROR(I);
     1425    31044    3   END;  /* DO */
     1426    31045
     1427    31046    2   ACCUM_NUM_ERRORS = 0;
     1428    31047    2   LAST_MSG_NUM = 0;
     1429    31048
     1430    31049    2   END DUMP_ERRORS;
     1431    31050
     1432    31051
     1433    31052        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:189  
     1434    31053    1   MARK_ERROR: PROC;     /* in Z8IL$PRODUCE_LISTINGS
     1435    31054                                      Z8IL$PRINT_ERROR         */
     1436    31055
     1437    31056        /*I*
     1438    31057               NAME: MARK_ERROR
     1439    31058        DESCRIPTION: Mark an error on the line and column where it occurred,
     1440    31059                       and accumulate the error to be printed by DUMP_ERRORS.
     1441    31060        */
     1442    31061
     1443    31062
     1444    31063        %EQU ERR_COL_OFFSET = 18;
     1445    31064
     1446    31065        /* Check for table overflow */
     1447    31066
     1448    31067    2   IF ACCUM_NUM_ERRORS >= %MSG_ARRAY_LEN THEN
     1449    31068    2     CALL DUMP_ERRORS;
     1450    31069
     1451    31070    2   IF ERR_COL(ERR$->ERR.COLUMN + %ERR_COL_OFFSET) ~= ' ' THEN
     1452    31071    3     DO;
     1453    31072    3        ACCUM_NUM_ERRORS = ACCUM_NUM_ERRORS + 1;
     1454    31073    3        MSG_ARRAY.ERR$(ACCUM_NUM_ERRORS) = ERR$;
     1455    31074    3        CALL CHARBIN(MSG_ARRAY.NUM(ACCUM_NUM_ERRORS),
     1456    31075    3                     ERR_COL(ERR$ -> ERR.COLUMN + %ERR_COL_OFFSET));
     1457    31076    3     END;
     1458    31077    2   ELSE
     1459    31078    3     DO;
     1460    31079    3       IF LAST_MSG_NUM = 9 THEN
     1461    31080    3         CALL DUMP_ERRORS;
     1462    31081    3       ACCUM_NUM_ERRORS = ACCUM_NUM_ERRORS + 1;
     1463    31082    3       MSG_ARRAY.ERR$(ACCUM_NUM_ERRORS) = ERR$;
     1464    31083    3       LAST_MSG_NUM = LAST_MSG_NUM + 1;
     1465    31084    3       MSG_ARRAY.NUM(ACCUM_NUM_ERRORS) = LAST_MSG_NUM;
     1466    31085    3       IF ERR$ -> ERR.COLUMN > 0 THEN
     1467    31086    4         DO;
     1468    31087    4           CALL BINCHAR(ERR_COL(ERR$ -> ERR.COLUMN + %ERR_COL_OFFSET),
     1469    31088    4                        LAST_MSG_NUM);
     1470    31089    4           MAX_ERR_COL = MAXIMUM (MAX_ERR_COL,
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:190  
     1471    31090    4                                  ERR$ -> ERR.COLUMN + %ERR_COL_OFFSET);
     1472    31091    4         END;
     1473    31092    3     END;
     1474    31093
     1475    31094    2   END MARK_ERROR;
     1476    31095
     1477    31096        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:191  
     1478    31097    1   CHECK_ERRORS_FOR_LINE: PROC;
     1479    31098
     1480    31099        /*I*
     1481    31100               NAME: CHECK_ERRORS_FOR_LINE
     1482    31101        DESCRIPTION:
     1483    31102                  Check for errors on the current line; this routine
     1484    31103                  is used for the while loops in the routine Z8IL$PRINT_ERROR. */
     1485    31104
     1486    31105    2   IF ERR$ ~= ADDR(NIL) THEN
     1487    31106    2     ERROR_FOR_LINE = (ERR$->ERR.LINE <= FILL_BUFFER.ISN);
     1488    31107    2   ELSE
     1489    31108    2     ERROR_FOR_LINE = '0'B;
     1490    31109
     1491    31110    2   END CHECK_ERRORS_FOR_LINE;
     1492    31111        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:192  
     1493    31112               /* Body of Z8IL$PRINT_ERROR */
     1494    31113
     1495    31114
     1496    31115    1   ACCUM_NUM_ERRORS = 0;
     1497    31116    1   LAST_MSG_NUM = 0;
     1498    31117    1   ERR_COL_LINE = ' ';
     1499    31118    1   MAX_ERR_COL = 0;
     1500    31119
     1501    31120        /* Process all errors for this line */
     1502    31121
     1503    31122    1   CALL CHECK_ERRORS_FOR_LINE;
     1504    31123    2   DO WHILE (ERROR_FOR_LINE);
     1505    31124    2     CALL MARK_ERROR;
     1506    31125    2     NTABLE = ERR$->ERR.NUMBER / 100;
     1507    31126    2     COMP_SUMMARY_COUNT(SEVERITY_OF_ERROR(NTABLE)) =
     1508    31127    2           COMP_SUMMARY_COUNT(SEVERITY_OF_ERROR(NTABLE)) + 1;
     1509    31128    2     ERR$ = ERR$->ERR.NEXT;
     1510    31129    2     CALL CHECK_ERRORS_FOR_LINE;
     1511    31130    2   END;
     1512    31131
     1513    31132    1   IF ACCUM_NUM_ERRORS > 0 THEN
     1514    31133    1     CALL DUMP_ERRORS;
     1515    31134    1   IF ADDR(OUTPUT_ERR_1) ~= ADDR(NIL) THEN
     1516    31135    1     CALL OUTPUT_ERR_1(ADDR(BLANK),1);
     1517    31136    1   IF ADDR(OUTPUT_ERR_2) ~= ADDR(NIL) THEN
     1518    31137    1     CALL OUTPUT_ERR_2(ADDR(BLANK),1);
     1519    31138
     1520    31139    1   END Z8IL$PRINT_ERROR;
     1521    31140        %EOD;

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:193  
--  Include file information  --

   Z8I_ERR_SEV.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_ERR_TXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$PRINT_ERROR.

   Procedure Z8IL$PRINT_ERROR requires 391 words for executable code.
   Procedure Z8IL$PRINT_ERROR requires 218 words of local(AUTO) storage.

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:194  

 Object Unit name= Z8IL$PRINT_ERROR                           File name= Z8IL.:Z8A6TOU
 UTS= AUG 09 '97 13:31:39.88 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  LblCom even  none     1      1  SUB_HEADING_ADDR
    2  LblCom even  none     1      1  SUB_HEADING_LEN
    3  LblCom even  none     1      1  SUB_HEADING_ADDR1
    4  LblCom even  none     1      1  SUB_HEADING_LEN1
    5  LblCom even  none     1      1  SUB_HEADING_ADDR2
    6  LblCom even  none     1      1  SUB_HEADING_LEN2
    7  LblCom even  none     1      1  MAX_LINES_PER_PAGE
    8  LblCom even  none     1      1  LISTING_LINES_ON_PAGE
    9  LblCom even  none     1      1  LISTING_PAGE_NUMBER
   10  LblCom even  none    28     34  PLINE
   11  LblCom even  none     1      1  PLINE_LEN
   12  LblCom even  none     1      1  ERR$
   13  LblCom even  none     1      1  ERR_HEAD
   14  LblCom even  none     1      1  ERR_TAIL
   15  LblCom even  none     1      1  MAX_ERROR_GENERATED
   16  LblCom even  none     5      5  ERR_
   17  LblCom even  none     1      1  DNT$
   18  LblCom even  none     5      5  DNT_
   19  LblCom even  none     1      1  DNT_BUCKET_NUMBER
   20  LblCom even  none     1      1  DNT_OF_1$
   21  LblCom even  none     1      1  SCANNER_STATE
   22  LblCom even  none     1      1  CURRENT_BUFFER$
   23  LblCom even  none     1      1  LOOKAHEAD_BUFFER$
   24  LblCom even  none     1      1  CURRENT_LINE_LEVEL
   25  LblCom even  none     1      1  LINE_LIST$
   26  LblCom even  none     7      7  BUFFER
   27  LblCom even  none     1      1  ORIGINAL_ISN
   28  LblCom even  none     1      1  EXPANDED_ISN
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:195  
   29  LblCom even  none     1      1  ISN_FOR_EXP_SRC
   30  RoData even  UTS  11203  25703  Z8IL$PRINT_ERROR
   31  LblCom even  none     6      6  COMP_SUMMARY_COUNT
   32   Proc  even  none   391    607  Z8IL$PRINT_ERROR
   33  RoData even  none    10     12  Z8IL$PRINT_ERROR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    32      0   yes            yes      Std        2  Z8IL$PRINT_ERROR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM                           r    DEF_LISTING_SUB_HEADING          r    BLANK
r    PLINE_PTR$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:196  


     1149        1        /*T***********************************************************/
     1150        2        /*T*                                                         */
     1151        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1152        4        /*T*                                                         */
     1153        5        /*T***********************************************************/
     1154        6        Z8IL$PRINT_ERROR: PROC (OUTPUT_ERR_1, OUTPUT_ERR_2);

      6 32 000000   000000 700200 xent  Z8IL$PRINT_* TSX0  ! X66_AUTO_2
        32 000001   000332 000002                    ZERO    218,2
        32 000002   000507 710000 32                 TRA     s:31115

     1155        7
     1156        8        /*D*
     1157        9               NAME: Z8IL$PRINT_ERROR
     1158       10        DESCRIPTION: Print all errors on LO & DO files which pertain
     1159       11                       to the last source line printed.
     1160       12        */
     1161       13
     1162       14        /* OUTPUT_ERR_N routines are routines called with:
     1163       15                addr of line
     1164       16                length of line
     1165       17        to output error text.  They may be left out of the
     1166       18        call to PRINT_ERROR if not used.
     1167       19        */
     1168       20    1   DCL OUTPUT_ERR_1 EPTR;
     1169       21    1   DCL OUTPUT_ERR_2 EPTR;
     1170       22
     1171       23
     1172       24        %EQU PHASE = 5;
     1173       25        %INCLUDE Z8A_DEFC;
     1174       93        %INCLUDE Z8A_SUPP_MAC;
     1175     2493        %INCLUDE Z9A_FLAGS;
     1176     2507        %INCLUDE Z8A_COMCOM;
     1177     3157        %INCLUDE Z9I_PREPROC;
     1178     3177        %INCLUDE Z8I_LISTING;
     1179     3265        %INCLUDE Z8A_ERR;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:197  
     1180     3334        %INCLUDE Z8A_DNT;
     1181     3555        %INCLUDE Z8E_BUFFERS;
     1182     3745        %INCLUDE Z8A_ERR_NUMS;
     1183     4509        %INCLUDE Z8I_ERR_TXT;
     1184    30803
     1185    30804    1   DCL COMP_SUMMARY_COUNT(0:5) SBIN WORD EXT;
     1186    30805
     1187    30806    1   DCL ERR_TABLES(0:9) PTR CONSTANT
     1188    30807    1          INIT (ADDR(ERRMSG_TABLE_ADDRS_0),
     1189    30808    1                ADDR(ERRMSG_TABLE_ADDRS_1),
     1190    30809    1                ADDR(ERRMSG_TABLE_ADDRS_2),
     1191    30810    1                ADDR(ERRMSG_TABLE_ADDRS_3),
     1192    30811    1                ADDR(ERRMSG_TABLE_ADDRS_4),
     1193    30812    1                ADDR(ERRMSG_TABLE_ADDRS_5),
     1194    30813    1                ADDR(ERRMSG_TABLE_ADDRS_6),
     1195    30814    1                ADDR(ERRMSG_TABLE_ADDRS_7),
     1196    30815    1                ADDR(ERRMSG_TABLE_ADDRS_8),
     1197    30816    1                ADDR(ERRMSG_TABLE_ADDRS_9));
     1198    30817
     1199    30818    1   DCL ERR_TABLE_LENGTH(0:9) SBIN WORD CONSTANT
     1200    30819    1          INIT (LENGTHW(ERRMSG_TABLE_ADDRS_0),
     1201    30820    1                LENGTHW(ERRMSG_TABLE_ADDRS_1),
     1202    30821    1                LENGTHW(ERRMSG_TABLE_ADDRS_2),
     1203    30822    1                LENGTHW(ERRMSG_TABLE_ADDRS_3),
     1204    30823    1                LENGTHW(ERRMSG_TABLE_ADDRS_4),
     1205    30824    1                LENGTHW(ERRMSG_TABLE_ADDRS_5),
     1206    30825    1                LENGTHW(ERRMSG_TABLE_ADDRS_6),
     1207    30826    1                LENGTHW(ERRMSG_TABLE_ADDRS_7),
     1208    30827    1                LENGTHW(ERRMSG_TABLE_ADDRS_8),
     1209    30828    1                LENGTHW(ERRMSG_TABLE_ADDRS_9));
     1210    30829
     1211    30830    1   DCL NTABLE           SBIN WORD;
     1212    30831
     1213    30832        %EQU MSG_ARRAY_LEN = 20;
     1214    30833    1   DCL 1 MSG_ARRAY,
     1215    30834    1         2 NUM  (0:%MSG_ARRAY_LEN) SBIN WORD,
     1216    30835    1         2 ERR$ (0:%MSG_ARRAY_LEN) PTR;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:198  
     1217    30836
     1218    30837    1   DCL ERR_COL_LINE CHAR(%MAX_INPUT_LINE_LENGTH) ;
     1219    30838    1   DCL ERR_COL (0:%(CHARTEXT(BINCHAR(MAX_INPUT_LINE_LENGTH-1,3))))
     1220    30839    1                  REDEF ERR_COL_LINE CHAR(1) ;
     1221    30840    1   DCL MAX_ERR_COL UBIN;  /* LARGEST COLUMN FLAGGED */
     1222    30841    1   DCL ACCUM_NUM_ERRORS SBIN WORD;
     1223    30842    1   DCL LAST_MSG_NUM SBIN WORD;
     1224    30843
     1225    30844    1   DCL DEFAULT_MSG CHAR(70) CONSTANT INIT
     1226    30845    1          ('Error message text is not available - Z8IL needs recompilation.');
     1227    30846
     1228    30847    1   DCL ERROR_FOR_LINE BIT(1);   /* If error flagged for current line */
     1229    30848
     1230    30849        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:199  
     1231    30850
     1232    30851    1   PRINT_ONE_ERROR: PROC (N);     /* in Z8IL$PRODUCE_LISTINGS

  30851 32 000003   200170 741300       PRINT_ONE_E* STX1  ! I+1,,AUTO
        32 000004   000144 710000 32                 TRA     s:30983

     1233    30852                                                Z8IL$PRINT_ERROR        */
     1234    30853
     1235    30854    2          DCL N SBIN WORD; /* sequence number of error */
     1236    30855
     1237    30856        /*I*
     1238    30857               NAME: PRINT_ONE_ERROR
     1239    30858        DESCRIPTION: Print one error, the Nth, from an array of errors,
     1240    30859                       on the LO & DO files.  N is passed as a parameter.
     1241    30860        */
     1242    30861               /* Print one error line */
     1243    30862
     1244    30863    2   DCL ERRP$ PTR;
     1245    30864
     1246    30865        %EQU MAX_LENGTH_ERR = 300;
     1247    30866
     1248    30867    2   DCL 1 ERR_LINE_FORMAT ,
     1249    30868    2         2 STARS  CHAR(5),
     1250    30869              %IF CP6;
     1251    30870    2         2 BLK1   CHAR(1),
     1252    30871    2         2 SEQNUM CHAR(1),
     1253    30872              %ENDIF;
     1254    30873              %IF GCOS;
     1257    30876              %ENDIF;
     1258    30877    2         2 BLK3   CHAR(1),
     1259    30878    2         2 ERRNUM CHAR(3),
     1260    30879    2         2 BLK2   CHAR(2),
     1261    30880    2         2 TXT    CHAR(%MAX_LENGTH_ERR);
     1262    30881
     1263    30882    2   DCL TXT_LEN_TOT   SBIN WORD;
     1264    30883    2   DCL NERR_IN_TABLE SBIN WORD;
     1265    30884    2   DCL ERR_TABLE$    PTR;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:200  
     1266    30885    2   DCL BASED_ERR_TABLE(0:100) PTR BASED(ERR_TABLE$);
     1267    30886    2   DCL MSG_LENGTH    SBIN WORD;
     1268    30887    2   DCL MSG$          PTR;
     1269    30888
     1270    30889    2   DCL STARS(0:5) CHAR(5) CONSTANT INIT (
     1271    30890               %IF CP6;
     1272    30891    2          '     ',
     1273    30892    2          '*    ',
     1274    30893    2          '**   ',
     1275    30894    2          '***  ',
     1276    30895    2          '**** ',
     1277    30896    2          '*****');
     1278    30897               %ENDIF;
     1279    30898               %IF GCOS;
     1286    30905               %ENDIF;
     1287    30906
     1288    30907    2   DCL ERR_TXT CHAR(MSG_LENGTH) BASED (MSG$);
     1289    30908
     1290    30909        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:201  
     1291    30910
     1292    30911    2   MERGE_PLUG_INS: PROC;     /* in Z8IL$PRODUCE_LISTINGS

  30911 32 000005   200320 741300       MERGE_PLUG_* STX1  ! MSG$+2,,AUTO

     1293    30912                                          Z8IL$PRINT_ERROR
     1294    30913                                            PRINT_ONE_ERROR    */
     1295    30914        /*I*
     1296    30915               NAME: MERGE_PLUG_INS
     1297    30916        DESCRIPTION: Scan the error line for plug in designators (!0..!9)
     1298    30917                       and expand the error with these plug in values.
     1299    30918        */
     1300    30919
     1301    30920
     1302    30921    3   DCL TXT_LEN_REM  SBIN WORD;
     1303    30922    3   DCL REM_MSG      CHAR(MSG_LENGTH) BASED(MSG$);
     1304    30923    3   DCL PAR_MSG_LEN  SBIN WORD;
     1305    30924    3   DCL PAR_MSG      CHAR(PAR_MSG_LEN) BASED(MSG$);
     1306    30925    3   DCL PLUG$        PTR;
     1307    30926    3   DCL PLUG_CHAR    CHAR(1) BASED(PLUG$);
     1308    30927    3   DCL PLUG_NUM     SBIN WORD;
     1309    30928    3   DCL PLUG_LEN     SBIN WORD;
     1310    30929
     1311    30930    3   TXT_LEN_TOT = 0;

  30930 32 000006   200312 450100                    STZ     TXT_LEN_TOT,,AUTO

     1312    30931    3   TXT_LEN_REM = LENGTHC(ERR_LINE_FORMAT.TXT);

  30931 32 000007   000454 235007                    LDA     300,DL
        32 000010   200321 755100                    STA     TXT_LEN_REM,,AUTO

     1313    30932
     1314    30933               /* Substitute plug ins */
     1315    30934
     1316    30935    4   DO WHILE((TXT_LEN_REM > 0) AND (MSG_LENGTH > 0));

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:202  
  30935 32 000011   000136 710000 32                 TRA     s:30975

     1317    30936
     1318    30937               /* Find !#, if any */
     1319    30938
     1320    30939    4     CALL INDEX(PAR_MSG_LEN, '!', REM_MSG);

  30939 32 000012   200316 470500                    LDP0    MSG$,,AUTO
        32 000013   200315 720100                    LXL0    MSG_LENGTH,,AUTO
        32 000014   000000 124540                    SCM     mask='000'O
        32 000015   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        32 000016   000000 000001 33                 ADSC9   0                        cn=0,n=1
        32 000017   200322 000100                    ARG     PAR_MSG_LEN,,AUTO

     1321    30940
     1322    30941               /* Add error text so far */
     1323    30942
     1324    30943    4     CALL INSERT(ERR_LINE_FORMAT.TXT,

  30943 32 000020   200322 236100                    LDQ     PAR_MSG_LEN,,AUTO
        32 000021   200321 116100                    CMPQ    TXT_LEN_REM,,AUTO
        32 000022   000024 604400 32                 TMOZ    s:30943+4
        32 000023   200321 236100                    LDQ     TXT_LEN_REM,,AUTO
        32 000024   200322 721100                    LXL1    PAR_MSG_LEN,,AUTO
        32 000025   000000 622006                    EAX2    0,QL
        32 000026   200312 235100                    LDA     TXT_LEN_TOT,,AUTO
        32 000027   040145 100540                    MLR     fill='040'O
        32 000030   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
        32 000031   200176 200012                    ADSC9   ERR_LINE_FORMAT+3,A,AUTO cn=1,n=*X2

     1325    30944    4                 TXT_LEN_TOT,
     1326    30945    4                 MINIMUM(TXT_LEN_REM, PAR_MSG_LEN),
     1327    30946    4                 PAR_MSG);
     1328    30947    4     TXT_LEN_TOT = TXT_LEN_TOT + MINIMUM(TXT_LEN_REM, PAR_MSG_LEN);

  30947 32 000032   200322 236100                    LDQ     PAR_MSG_LEN,,AUTO
        32 000033   200321 116100                    CMPQ    TXT_LEN_REM,,AUTO
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:203  
        32 000034   000036 604400 32                 TMOZ    s:30947+4
        32 000035   200321 236100                    LDQ     TXT_LEN_REM,,AUTO
        32 000036   200312 036100                    ADLQ    TXT_LEN_TOT,,AUTO
        32 000037   200312 756100                    STQ     TXT_LEN_TOT,,AUTO

     1329    30948    4     TXT_LEN_REM = TXT_LEN_REM - MINIMUM(TXT_LEN_REM, PAR_MSG_LEN);

  30948 32 000040   200322 236100                    LDQ     PAR_MSG_LEN,,AUTO
        32 000041   200321 116100                    CMPQ    TXT_LEN_REM,,AUTO
        32 000042   000044 604400 32                 TMOZ    s:30948+4
        32 000043   200321 236100                    LDQ     TXT_LEN_REM,,AUTO
        32 000044   200326 756100                    STQ     PLUG_LEN+1,,AUTO
        32 000045   200321 236100                    LDQ     TXT_LEN_REM,,AUTO
        32 000046   200326 136100                    SBLQ    PLUG_LEN+1,,AUTO
        32 000047   200321 756100                    STQ     TXT_LEN_REM,,AUTO

     1330    30949    4     IF PAR_MSG_LEN < MSG_LENGTH - 1 THEN

  30949 32 000050   200315 236100                    LDQ     MSG_LENGTH,,AUTO
        32 000051   000001 136007                    SBLQ    1,DL
        32 000052   200322 116100                    CMPQ    PAR_MSG_LEN,,AUTO
        32 000053   000135 604400 32                 TMOZ    s:30974

     1331    30950    5       DO;

     1332    30951    5         PLUG$ = PINCRC(MSG$, PAR_MSG_LEN + 1);

  30951 32 000054   200322 236100                    LDQ     PAR_MSG_LEN,,AUTO
        32 000055   000020 736000                    QLS     16
        32 000056   200000 036007                    ADLQ    65536,DL
        32 000057   200316 036100                    ADLQ    MSG$,,AUTO
        32 000060   200323 756100                    STQ     PLUG$,,AUTO

     1333    30952    5         IF (PLUG_CHAR >= '0') AND (PLUG_CHAR <= '9') THEN

  30952 32 000061   200323 471500                    LDP1    PLUG$,,AUTO
        32 000062   040000 106500                    CMPC    fill='040'O
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:204  
        32 000063   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
        32 000064   000001 000001 33                 ADSC9   1                        cn=0,n=1
        32 000065   000123 602000 32                 TNC     s:30970
        32 000066   040100 106400                    CMPC    fill='040'O
        32 000067   000002 000001 33                 ADSC9   2                        cn=0,n=1
        32 000070   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
        32 000071   000123 602000 32                 TNC     s:30970

     1334    30953    6           DO;

     1335    30954    6             CALL CHARBIN(PLUG_NUM, PLUG_CHAR);

  30954 32 000072   000100 305500                    DTB
        32 000073   100000 030001                    NDSC9   0,,PR1                   cn=0,s=nosgn,sf=0,n=1
        32 000074   200324 000004                    NDSC9   PLUG_NUM,,AUTO           cn=0,s=lsgnf,sf=0,n=4

     1336    30955
     1337    30956                  /* Add lexeme to error text */
     1338    30957
     1339    30958    6             PLUG_LEN = MINIMUM(TXT_LEN_REM,

  30958 32 000075   200172 473500                    LDP3    ERRP$,,AUTO
        32 000076   200324 722100                    LXL2    PLUG_NUM,,AUTO
        32 000077   300005 474512                    LDP4    5,X2,PR3
        32 000100   400004 236100                    LDQ     4,,PR4
        32 000101   000022 772000                    QRL     18
        32 000102   000105 604000 32                 TMI     s:30958+8
        32 000103   200321 116100                    CMPQ    TXT_LEN_REM,,AUTO
        32 000104   000106 604400 32                 TMOZ    s:30958+9
        32 000105   200321 236100                    LDQ     TXT_LEN_REM,,AUTO
        32 000106   200325 756100                    STQ     PLUG_LEN,,AUTO

     1340    30959    6                                ERRP$->ERR.LEXEME$(PLUG_NUM)->DNT.TEXT.LENGTH);
     1341    30960    6             CALL INSERT(ERR_LINE_FORMAT.TXT,

  30960 32 000107   400004 223100                    LDX3    4,,PR4
        32 000110   000000 624006                    EAX4    0,QL
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:205  
        32 000111   200312 235100                    LDA     TXT_LEN_TOT,,AUTO
        32 000112   040145 100540                    MLR     fill='040'O
        32 000113   400004 400013                    ADSC9   4,,PR4                   cn=2,n=*X3
        32 000114   200176 200014                    ADSC9   ERR_LINE_FORMAT+3,A,AUTO cn=1,n=*X4

     1342    30961    6                         TXT_LEN_TOT,
     1343    30962    6                         PLUG_LEN,
     1344    30963    6                         ERRP$->ERR.LEXEME$(PLUG_NUM)->DNT.TEXT.NAME);
     1345    30964    6             TXT_LEN_TOT = TXT_LEN_TOT + PLUG_LEN;

  30964 32 000115   200312 236100                    LDQ     TXT_LEN_TOT,,AUTO
        32 000116   200325 036100                    ADLQ    PLUG_LEN,,AUTO
        32 000117   200312 756100                    STQ     TXT_LEN_TOT,,AUTO

     1346    30965    6             TXT_LEN_REM = TXT_LEN_REM - PLUG_LEN;

  30965 32 000120   200321 236100                    LDQ     TXT_LEN_REM,,AUTO
        32 000121   200325 136100                    SBLQ    PLUG_LEN,,AUTO
        32 000122   200321 756100                    STQ     TXT_LEN_REM,,AUTO

     1347    30966    6           END; /* DO */

     1348    30967
     1349    30968                   /* Skip !# in error text */
     1350    30969
     1351    30970    5         MSG$         = PINCRC(MSG$, PAR_MSG_LEN + 2);

  30970 32 000123   200322 236100                    LDQ     PAR_MSG_LEN,,AUTO
        32 000124   000020 736000                    QLS     16
        32 000125   400000 036007                    ADLQ    -131072,DL
        32 000126   200316 036100                    ADLQ    MSG$,,AUTO
        32 000127   200316 756100                    STQ     MSG$,,AUTO

     1352    30971    5         MSG_LENGTH   = MSG_LENGTH - PAR_MSG_LEN - 2;

  30971 32 000130   200315 236100                    LDQ     MSG_LENGTH,,AUTO
        32 000131   200322 136100                    SBLQ    PAR_MSG_LEN,,AUTO
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:206  
        32 000132   000002 136007                    SBLQ    2,DL
        32 000133   200315 756100                    STQ     MSG_LENGTH,,AUTO

     1353    30972    5       END; /* DO */

  30972 32 000134   000136 710000 32                 TRA     s:30975

     1354    30973    4     ELSE
     1355    30974    4       MSG_LENGTH = 0;

  30974 32 000135   200315 450100                    STZ     MSG_LENGTH,,AUTO

     1356    30975    4   END; /* WHILE */

  30975 32 000136   200321 235100                    LDA     TXT_LEN_REM,,AUTO
        32 000137   000142 604400 32                 TMOZ    s:30977
        32 000140   200315 236100                    LDQ     MSG_LENGTH,,AUTO
        32 000141   000012 605400 32                 TPNZ    s:30939

     1357    30976
     1358    30977    3   END MERGE_PLUG_INS;

  30977 32 000142   200320 221300                    LDX1  ! MSG$+2,,AUTO
        32 000143   000001 702211                    TSX2  ! 1,X1

     1359    30978
     1360    30979        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:207  
     1361    30980               /* Body of PRINT_ONE_ERROR */
     1362    30981
     1363    30982
     1364    30983    2   ERRP$          = MSG_ARRAY.ERR$(N);

  30983 32 000144   200171 470500                    LDP0    @N,,AUTO
        32 000145   000000 235100                    LDA     0,,PR0
        32 000146   200033 236105                    LDQ     MSG_ARRAY+21,AL,AUTO
        32 000147   200172 756100                    STQ     ERRP$,,AUTO

     1365    30984    2   NERR_IN_TABLE  = MOD(ERRP$->ERR.NUMBER, 100);

  30984 32 000150   200172 471500                    LDP1    ERRP$,,AUTO
        32 000151   100001 236100                    LDQ     1,,PR1
        32 000152   000022 772000                    QRL     18
        32 000153   000144 506007                    DIV     100,DL
        32 000154   200313 755100                    STA     NERR_IN_TABLE,,AUTO

     1366    30985    2   NTABLE         = ERRP$->ERR.NUMBER / 100;

  30985 32 000155   100001 236100                    LDQ     1,,PR1
        32 000156   000022 772000                    QRL     18
        32 000157   000144 506007                    DIV     100,DL
        32 000160   200005 756100                    STQ     NTABLE,,AUTO

     1367    30986    2   ERR_TABLE$     = ERR_TABLES(NTABLE);

  30986 32 000161   025625 236006 30                 LDQ     ERR_TABLES,QL
        32 000162   200314 756100                    STQ     ERR_TABLE$,,AUTO

     1368    30987
     1369    30988    2   IF NERR_IN_TABLE < ERR_TABLE_LENGTH(NTABLE) - 1 THEN

  30988 32 000163   200005 720100                    LXL0    NTABLE,,AUTO
        32 000164   025637 236010 30                 LDQ     ERR_TABLE_LENGTH,X0
        32 000165   000001 136007                    SBLQ    1,DL
        32 000166   200313 116100                    CMPQ    NERR_IN_TABLE,,AUTO
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:208  
        32 000167   000204 604400 32                 TMOZ    s:30998

     1370    30989    3     DO;

     1371    30990    3       MSG_LENGTH = POFFC(BASED_ERR_TABLE(NERR_IN_TABLE+1),

  30990 32 000170   200314 473500                    LDP3    ERR_TABLE$,,AUTO
        32 000171   200313 722100                    LXL2    NERR_IN_TABLE,,AUTO
        32 000172   300000 236112                    LDQ     0,X2,PR3
        32 000173   000020 772000                    QRL     16
        32 000174   200326 756100                    STQ     PLUG_LEN+1,,AUTO
        32 000175   300001 236112                    LDQ     1,X2,PR3
        32 000176   000020 772000                    QRL     16
        32 000177   200326 136100                    SBLQ    PLUG_LEN+1,,AUTO
        32 000200   200315 756100                    STQ     MSG_LENGTH,,AUTO

     1372    30991    3                          BASED_ERR_TABLE(NERR_IN_TABLE));
     1373    30992    3       MSG$       = BASED_ERR_TABLE(NERR_IN_TABLE);

  30992 32 000201   300000 236112                    LDQ     0,X2,PR3
        32 000202   200316 756100                    STQ     MSG$,,AUTO

     1374    30993    3     END;

  30993 32 000203   000210 710000 32                 TRA     s:31002

     1375    30994               /* Build error print line */
     1376    30995
     1377    30996    2   ELSE
     1378    30997    3     DO;

     1379    30998    3       MSG$       = ADDR(DEFAULT_MSG);

  30998 32 000204   000003 236000 33                 LDQ     3
        32 000205   200316 756100                    STQ     MSG$,,AUTO

     1380    30999    3       MSG_LENGTH = LENGTHC(DEFAULT_MSG);
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:209  

  30999 32 000206   000106 235007                    LDA     70,DL
        32 000207   200315 755100                    STA     MSG_LENGTH,,AUTO

     1381    31000    3     END;

     1382    31001
     1383    31002    2   ERR_LINE_FORMAT.STARS = STARS(SEVERITY_OF_ERROR(NTABLE));

  31002 32 000210   000000 236010 30                 LDQ     SEVERITY_OF_ERROR,X0
        32 000211   000005 402007                    MPY     5,DL
        32 000212   040100 100406                    MLR     fill='040'O
        32 000213   025673 000005 30                 ADSC9   STARS,Q                  cn=0,n=5
        32 000214   200173 000005                    ADSC9   ERR_LINE_FORMAT,,AUTO    cn=0,n=5

     1384    31003    2   ERR_LINE_FORMAT.BLK1  = ' ';

  31003 32 000215   000040 236003                    LDQ     32,DU
        32 000216   200174 552120                    STBQ    ERR_LINE_FORMAT+1,'20'O,AUTO

     1385    31004    2   ERR_LINE_FORMAT.BLK2  = ' ';

  31004 32 000217   040100 100400                    MLR     fill='040'O
        32 000220   000004 000001 33                 ADSC9   4                        cn=0,n=1
        32 000221   200175 600002                    ADSC9   ERR_LINE_FORMAT+2,,AUTO  cn=3,n=2

     1386    31005    2   ERR_LINE_FORMAT.BLK3  = ' ';

  31005 32 000222   000040 236007                    LDQ     32,DL
        32 000223   200174 552104                    STBQ    ERR_LINE_FORMAT+1,'04'O,AUTO

     1387    31006
     1388    31007    2   CALL BINCHAR(ERR_LINE_FORMAT.ERRNUM, ERRP$->ERR.NUMBER);

  31007 32 000224   100001 236100                    LDQ     1,,PR1
        32 000225   000022 772000                    QRL     18
        32 000226   000000 235003                    LDA     0,DU
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:210  
        32 000227   200326 757100                    STAQ    PLUG_LEN+1,,AUTO
        32 000230   000100 301500                    BTD
        32 000231   200326 000010                    NDSC9   PLUG_LEN+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
        32 000232   200175 030003                    NDSC9   ERR_LINE_FORMAT+2,,AUTO  cn=0,s=nosgn,sf=0,n=3

     1389    31008    2   CALL BINCHAR(ERR_LINE_FORMAT.SEQNUM, MSG_ARRAY.NUM(N));

  31008 32 000233   000000 235100                    LDA     0,,PR0
        32 000234   000002 735000                    ALS     2
        32 000235   000100 301505                    BTD
        32 000236   200006 000004                    NDSC9   MSG_ARRAY,A,AUTO         cn=0,s=lsgnf,sf=0,n=4
        32 000237   200174 430001                    NDSC9   ERR_LINE_FORMAT+1,,AUTO  cn=2,s=nosgn,sf=0,n=1

     1390    31009
     1391    31010    2   CALL MERGE_PLUG_INS;

  31010 32 000240   000005 701000 32                 TSX1    MERGE_PLUG_INS
        32 000241   000000 011000                    NOP     0

     1392    31011
     1393    31012    2   IF ADDR(OUTPUT_ERR_1) ~= ADDR(NIL) THEN

  31012 32 000242   200003 236100                    LDQ     @OUTPUT_ERR_1,,AUTO
        32 000243   000005 116000 33                 CMPQ    5
        32 000244   000264 600000 32                 TZE     s:31016

     1394    31013    2     CALL OUTPUT_ERR_1(ADDR(ERR_LINE_FORMAT),

  31013 32 000245   200173 630500                    EPPR0   ERR_LINE_FORMAT,,AUTO
        32 000246   200326 450500                    STP0    PLUG_LEN+1,,AUTO
        32 000247   200312 235100                    LDA     TXT_LEN_TOT,,AUTO
        32 000250   000015 035007                    ADLA    13,DL
        32 000251   200327 755100                    STA     PLUG_LEN+2,,AUTO
        32 000252   200327 631500                    EPPR1   PLUG_LEN+2,,AUTO
        32 000253   200331 451500                    STP1    PLUG_LEN+4,,AUTO
        32 000254   200326 633500                    EPPR3   PLUG_LEN+1,,AUTO
        32 000255   200330 453500                    STP3    PLUG_LEN+3,,AUTO
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:211  
        32 000256   200330 630500                    EPPR0   PLUG_LEN+3,,AUTO
        32 000257   200003 474500                    LDP4    @OUTPUT_ERR_1,,AUTO
        32 000260   400000 220100                    LDX0    0,,PR4
        32 000261   000006 631400 33                 EPPR1   6
        32 000262   000000 701010                    TSX1    0,X0
        32 000263   000000 011000                    NOP     0

     1395    31014    2                            TXT_LEN_TOT+LENGTHC(ERR_LINE_FORMAT)-%MAX_LENGTH_ERR);
     1396    31015
     1397    31016    2   IF ADDR(OUTPUT_ERR_2) ~= ADDR(NIL) THEN

  31016 32 000264   200004 236100                    LDQ     @OUTPUT_ERR_2,,AUTO
        32 000265   000005 116000 33                 CMPQ    5
        32 000266   000306 600000 32                 TZE     s:31019

     1398    31017    2     CALL OUTPUT_ERR_2(ADDR(ERR_LINE_FORMAT),

  31017 32 000267   200173 630500                    EPPR0   ERR_LINE_FORMAT,,AUTO
        32 000270   200326 450500                    STP0    PLUG_LEN+1,,AUTO
        32 000271   200312 235100                    LDA     TXT_LEN_TOT,,AUTO
        32 000272   000015 035007                    ADLA    13,DL
        32 000273   200327 755100                    STA     PLUG_LEN+2,,AUTO
        32 000274   200327 631500                    EPPR1   PLUG_LEN+2,,AUTO
        32 000275   200331 451500                    STP1    PLUG_LEN+4,,AUTO
        32 000276   200326 633500                    EPPR3   PLUG_LEN+1,,AUTO
        32 000277   200330 453500                    STP3    PLUG_LEN+3,,AUTO
        32 000300   200330 630500                    EPPR0   PLUG_LEN+3,,AUTO
        32 000301   200004 474500                    LDP4    @OUTPUT_ERR_2,,AUTO
        32 000302   400000 220100                    LDX0    0,,PR4
        32 000303   000006 631400 33                 EPPR1   6
        32 000304   000000 701010                    TSX1    0,X0
        32 000305   000000 011000                    NOP     0

     1399    31018    2                            TXT_LEN_TOT+LENGTHC(ERR_LINE_FORMAT)-%MAX_LENGTH_ERR);
     1400    31019    2   END PRINT_ONE_ERROR;

  31019 32 000306   200170 221300                    LDX1  ! I+1,,AUTO
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:212  
        32 000307   000001 702211                    TSX2  ! 1,X1

     1401    31020
     1402    31021        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:213  
     1403    31022
     1404    31023    1   DUMP_ERRORS: PROC;     /* in Z8IL$PRODUCE_LISTINGS

  31023 32 000310   200166 741300       DUMP_ERRORS  STX1  ! ERROR_FOR_LINE+3,,AUTO

     1405    31024                                        Z8IL$PRINT_ERROR      */
     1406    31025
     1407    31026        /*I*
     1408    31027               NAME: DUMP_ERRORS
     1409    31028        DESCRIPTION: Errors are accumulated for a particular source line in
     1410    31029                       order to mark each column of the source line where the
     1411    31030                       the error occurred.  DUMP_errors prints these source
     1412    31031                       lines.
     1413    31032        */
     1414    31033
     1415    31034    2   DCL I SBIN WORD;
     1416    31035
     1417    31036    2   IF ADDR(OUTPUT_ERR_1) ~= ADDR(NIL) THEN

  31036 32 000311   200003 236100                    LDQ     @OUTPUT_ERR_1,,AUTO
        32 000312   000005 116000 33                 CMPQ    5
        32 000313   000333 600000 32                 TZE     s:31038

     1418    31037    2     CALL OUTPUT_ERR_1(ADDR(ERR_COL_LINE), MAX_ERR_COL+1);

  31037 32 000314   200060 630500                    EPPR0   ERR_COL_LINE,,AUTO
        32 000315   200326 450500                    STP0    PLUG_LEN+1,,AUTO
        32 000316   200160 235100                    LDA     MAX_ERR_COL,,AUTO
        32 000317   000001 035007                    ADLA    1,DL
        32 000320   200327 755100                    STA     PLUG_LEN+2,,AUTO
        32 000321   200327 631500                    EPPR1   PLUG_LEN+2,,AUTO
        32 000322   200331 451500                    STP1    PLUG_LEN+4,,AUTO
        32 000323   200326 633500                    EPPR3   PLUG_LEN+1,,AUTO
        32 000324   200330 453500                    STP3    PLUG_LEN+3,,AUTO
        32 000325   200330 630500                    EPPR0   PLUG_LEN+3,,AUTO
        32 000326   200003 474500                    LDP4    @OUTPUT_ERR_1,,AUTO
        32 000327   400000 220100                    LDX0    0,,PR4
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:214  
        32 000330   000006 631400 33                 EPPR1   6
        32 000331   000000 701010                    TSX1    0,X0
        32 000332   000000 011000                    NOP     0

     1419    31038    2   IF ADDR(OUTPUT_ERR_2) ~= ADDR(NIL) THEN

  31038 32 000333   200004 236100                    LDQ     @OUTPUT_ERR_2,,AUTO
        32 000334   000005 116000 33                 CMPQ    5
        32 000335   000355 600000 32                 TZE     s:31040

     1420    31039    2     CALL OUTPUT_ERR_2(ADDR(ERR_COL_LINE), MAX_ERR_COL+1);

  31039 32 000336   200060 630500                    EPPR0   ERR_COL_LINE,,AUTO
        32 000337   200326 450500                    STP0    PLUG_LEN+1,,AUTO
        32 000340   200160 235100                    LDA     MAX_ERR_COL,,AUTO
        32 000341   000001 035007                    ADLA    1,DL
        32 000342   200327 755100                    STA     PLUG_LEN+2,,AUTO
        32 000343   200327 631500                    EPPR1   PLUG_LEN+2,,AUTO
        32 000344   200331 451500                    STP1    PLUG_LEN+4,,AUTO
        32 000345   200326 633500                    EPPR3   PLUG_LEN+1,,AUTO
        32 000346   200330 453500                    STP3    PLUG_LEN+3,,AUTO
        32 000347   200330 630500                    EPPR0   PLUG_LEN+3,,AUTO
        32 000350   200004 474500                    LDP4    @OUTPUT_ERR_2,,AUTO
        32 000351   400000 220100                    LDX0    0,,PR4
        32 000352   000006 631400 33                 EPPR1   6
        32 000353   000000 701010                    TSX1    0,X0
        32 000354   000000 011000                    NOP     0

     1421    31040    2   ERR_COL_LINE = ' ';

  31040 32 000355   040100 100400                    MLR     fill='040'O
        32 000356   000004 000001 33                 ADSC9   4                        cn=0,n=1
        32 000357   200060 000400                    ADSC9   ERR_COL_LINE,,AUTO       cn=0,n=256

     1422    31041    2   MAX_ERR_COL = 0;

  31041 32 000360   200160 450100                    STZ     MAX_ERR_COL,,AUTO
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:215  

     1423    31042    3   DO I=1 TO ACCUM_NUM_ERRORS;

  31042 32 000361   000001 235007                    LDA     1,DL
        32 000362   200167 755100                    STA     I,,AUTO
        32 000363   000371 710000 32                 TRA     s:31044+1

     1424    31043    3     CALL PRINT_ONE_ERROR(I);

  31043 32 000364   200167 630500                    EPPR0   I,,AUTO
        32 000365   200171 450500                    STP0    @N,,AUTO
        32 000366   000003 701000 32                 TSX1    PRINT_ONE_ERROR
        32 000367   000000 011000                    NOP     0

     1425    31044    3   END;  /* DO */

  31044 32 000370   200167 054100                    AOS     I,,AUTO
        32 000371   200167 236100                    LDQ     I,,AUTO
        32 000372   200161 116100                    CMPQ    ACCUM_NUM_ERRORS,,AUTO
        32 000373   000364 604400 32                 TMOZ    s:31043

     1426    31045
     1427    31046    2   ACCUM_NUM_ERRORS = 0;

  31046 32 000374   200161 450100                    STZ     ACCUM_NUM_ERRORS,,AUTO

     1428    31047    2   LAST_MSG_NUM = 0;

  31047 32 000375   200162 450100                    STZ     LAST_MSG_NUM,,AUTO

     1429    31048
     1430    31049    2   END DUMP_ERRORS;

  31049 32 000376   200166 221300                    LDX1  ! ERROR_FOR_LINE+3,,AUTO
        32 000377   000001 702211                    TSX2  ! 1,X1

     1431    31050
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:216  
     1432    31051
     1433    31052        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:217  
     1434    31053    1   MARK_ERROR: PROC;     /* in Z8IL$PRODUCE_LISTINGS

  31053 32 000400   200164 741300       MARK_ERROR   STX1  ! ERROR_FOR_LINE+1,,AUTO

     1435    31054                                      Z8IL$PRINT_ERROR         */
     1436    31055
     1437    31056        /*I*
     1438    31057               NAME: MARK_ERROR
     1439    31058        DESCRIPTION: Mark an error on the line and column where it occurred,
     1440    31059                       and accumulate the error to be printed by DUMP_ERRORS.
     1441    31060        */
     1442    31061
     1443    31062
     1444    31063        %EQU ERR_COL_OFFSET = 18;
     1445    31064
     1446    31065        /* Check for table overflow */
     1447    31066
     1448    31067    2   IF ACCUM_NUM_ERRORS >= %MSG_ARRAY_LEN THEN

  31067 32 000401   200161 235100                    LDA     ACCUM_NUM_ERRORS,,AUTO
        32 000402   000024 115007                    CMPA    20,DL
        32 000403   000406 604000 32                 TMI     s:31070

     1449    31068    2     CALL DUMP_ERRORS;

  31068 32 000404   000310 701000 32                 TSX1    DUMP_ERRORS
        32 000405   000000 011000                    NOP     0

     1450    31069
     1451    31070    2   IF ERR_COL(ERR$->ERR.COLUMN + %ERR_COL_OFFSET) ~= ' ' THEN

  31070 32 000406   000000 470400 12                 LDP0    ERR$
        32 000407   000002 236100                    LDQ     2,,PR0
        32 000410   777777 376007                    ANQ     -1,DL
        32 000411   040000 106506                    CMPC    fill='040'O
        32 000412   200064 400001                    ADSC9   ERR_COL_LINE+4,Q,AUTO    cn=2,n=1
        32 000413   000004 000001 33                 ADSC9   4                        cn=0,n=1
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:218  
        32 000414   000431 600000 32                 TZE     s:31079

     1452    31071    3     DO;

     1453    31072    3        ACCUM_NUM_ERRORS = ACCUM_NUM_ERRORS + 1;

  31072 32 000415   200161 054100                    AOS     ACCUM_NUM_ERRORS,,AUTO

     1454    31073    3        MSG_ARRAY.ERR$(ACCUM_NUM_ERRORS) = ERR$;

  31073 32 000416   000000 236000 12                 LDQ     ERR$
        32 000417   200161 720100                    LXL0    ACCUM_NUM_ERRORS,,AUTO
        32 000420   200033 756110                    STQ     MSG_ARRAY+21,X0,AUTO

     1455    31074    3        CALL CHARBIN(MSG_ARRAY.NUM(ACCUM_NUM_ERRORS),

  31074 32 000421   000002 236100                    LDQ     2,,PR0
        32 000422   777777 376007                    ANQ     -1,DL
        32 000423   200161 235100                    LDA     ACCUM_NUM_ERRORS,,AUTO
        32 000424   000002 735000                    ALS     2
        32 000425   000105 305506                    DTB
        32 000426   200064 430001                    NDSC9   ERR_COL_LINE+4,Q,AUTO    cn=2,s=nosgn,sf=0,n=1
        32 000427   200006 000004                    NDSC9   MSG_ARRAY,A,AUTO         cn=0,s=lsgnf,sf=0,n=4

     1456    31075    3                     ERR_COL(ERR$ -> ERR.COLUMN + %ERR_COL_OFFSET));
     1457    31076    3     END;

  31076 32 000430   000464 710000 32                 TRA     s:31094

     1458    31077    2   ELSE
     1459    31078    3     DO;

     1460    31079    3       IF LAST_MSG_NUM = 9 THEN

  31079 32 000431   200162 235100                    LDA     LAST_MSG_NUM,,AUTO
        32 000432   000011 115007                    CMPA    9,DL
        32 000433   000436 601000 32                 TNZ     s:31081
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:219  

     1461    31080    3         CALL DUMP_ERRORS;

  31080 32 000434   000310 701000 32                 TSX1    DUMP_ERRORS
        32 000435   000000 011000                    NOP     0

     1462    31081    3       ACCUM_NUM_ERRORS = ACCUM_NUM_ERRORS + 1;

  31081 32 000436   200161 054100                    AOS     ACCUM_NUM_ERRORS,,AUTO

     1463    31082    3       MSG_ARRAY.ERR$(ACCUM_NUM_ERRORS) = ERR$;

  31082 32 000437   000000 236000 12                 LDQ     ERR$
        32 000440   200161 720100                    LXL0    ACCUM_NUM_ERRORS,,AUTO
        32 000441   200033 756110                    STQ     MSG_ARRAY+21,X0,AUTO

     1464    31083    3       LAST_MSG_NUM = LAST_MSG_NUM + 1;

  31083 32 000442   200162 054100                    AOS     LAST_MSG_NUM,,AUTO

     1465    31084    3       MSG_ARRAY.NUM(ACCUM_NUM_ERRORS) = LAST_MSG_NUM;

  31084 32 000443   200162 235100                    LDA     LAST_MSG_NUM,,AUTO
        32 000444   200006 755110                    STA     MSG_ARRAY,X0,AUTO

     1466    31085    3       IF ERR$ -> ERR.COLUMN > 0 THEN

  31085 32 000445   000000 470400 12                 LDP0    ERR$
        32 000446   000002 721100                    LXL1    2,,PR0
        32 000447   000464 600000 32                 TZE     s:31094

     1467    31086    4         DO;

     1468    31087    4           CALL BINCHAR(ERR_COL(ERR$ -> ERR.COLUMN + %ERR_COL_OFFSET),

  31087 32 000450   000002 236100                    LDQ     2,,PR0
        32 000451   777777 376007                    ANQ     -1,DL
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:220  
        32 000452   000106 301500                    BTD
        32 000453   200162 000004                    NDSC9   LAST_MSG_NUM,,AUTO       cn=0,s=lsgnf,sf=0,n=4
        32 000454   200064 430001                    NDSC9   ERR_COL_LINE+4,Q,AUTO    cn=2,s=nosgn,sf=0,n=1

     1469    31088    4                        LAST_MSG_NUM);
     1470    31089    4           MAX_ERR_COL = MAXIMUM (MAX_ERR_COL,

  31089 32 000455   000002 236100                    LDQ     2,,PR0
        32 000456   777777 376007                    ANQ     -1,DL
        32 000457   000022 036007                    ADLQ    18,DL
        32 000460   200160 116100                    CMPQ    MAX_ERR_COL,,AUTO
        32 000461   000463 603000 32                 TRC     s:31089+6
        32 000462   200160 236100                    LDQ     MAX_ERR_COL,,AUTO
        32 000463   200160 756100                    STQ     MAX_ERR_COL,,AUTO

     1471    31090    4                                  ERR$ -> ERR.COLUMN + %ERR_COL_OFFSET);
     1472    31091    4         END;

     1473    31092    3     END;

     1474    31093
     1475    31094    2   END MARK_ERROR;

  31094 32 000464   200164 221300                    LDX1  ! ERROR_FOR_LINE+1,,AUTO
        32 000465   000001 702211                    TSX2  ! 1,X1

     1476    31095
     1477    31096        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:221  
     1478    31097    1   CHECK_ERRORS_FOR_LINE: PROC;

  31097 32 000466   200164 741300       CHECK_ERROR* STX1  ! ERROR_FOR_LINE+1,,AUTO

     1479    31098
     1480    31099        /*I*
     1481    31100               NAME: CHECK_ERRORS_FOR_LINE
     1482    31101        DESCRIPTION:
     1483    31102                  Check for errors on the current line; this routine
     1484    31103                  is used for the while loops in the routine Z8IL$PRINT_ERROR. */
     1485    31104
     1486    31105    2   IF ERR$ ~= ADDR(NIL) THEN

  31105 32 000467   000000 236000 12                 LDQ     ERR$
        32 000470   000005 116000 33                 CMPQ    5
        32 000471   000505 600000 32                 TZE     s:31108

     1487    31106    2     ERROR_FOR_LINE = (ERR$->ERR.LINE <= FILL_BUFFER.ISN);

  31106 32 000472   400000 220003                    LDX0    -131072,DU
        32 000473   000000 470400 23                 LDP0    LOOKAHEAD_BUFFER$
        32 000474   000000 471400 12                 LDP1    ERR$
        32 000475   100002 236100                    LDQ     2,,PR1
        32 000476   000022 772000                    QRL     18
        32 000477   000004 116100                    CMPQ    4,,PR0
        32 000500   000502 604400 32                 TMOZ    s:31106+8
        32 000501   000000 220003                    LDX0    0,DU
        32 000502   000000 636010                    EAQ     0,X0
        32 000503   200163 756100                    STQ     ERROR_FOR_LINE,,AUTO
        32 000504   000506 710000 32                 TRA     s:31110

     1488    31107    2   ELSE
     1489    31108    2     ERROR_FOR_LINE = '0'B;

  31108 32 000505   200163 450100                    STZ     ERROR_FOR_LINE,,AUTO

     1490    31109
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:222  
     1491    31110    2   END CHECK_ERRORS_FOR_LINE;

  31110 32 000506   000001 702211                    TSX2  ! 1,X1

     1492    31111        %EJECT;
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:223  
     1493    31112               /* Body of Z8IL$PRINT_ERROR */
     1494    31113
     1495    31114
     1496    31115    1   ACCUM_NUM_ERRORS = 0;

  31115 32 000507   200161 450100                    STZ     ACCUM_NUM_ERRORS,,AUTO

     1497    31116    1   LAST_MSG_NUM = 0;

  31116 32 000510   200162 450100                    STZ     LAST_MSG_NUM,,AUTO

     1498    31117    1   ERR_COL_LINE = ' ';

  31117 32 000511   040100 100400                    MLR     fill='040'O
        32 000512   000004 000001 33                 ADSC9   4                        cn=0,n=1
        32 000513   200060 000400                    ADSC9   ERR_COL_LINE,,AUTO       cn=0,n=256

     1499    31118    1   MAX_ERR_COL = 0;

  31118 32 000514   200160 450100                    STZ     MAX_ERR_COL,,AUTO

     1500    31119
     1501    31120        /* Process all errors for this line */
     1502    31121
     1503    31122    1   CALL CHECK_ERRORS_FOR_LINE;

  31122 32 000515   000466 701000 32                 TSX1    CHECK_ERRORS_FOR_LINE
        32 000516   000000 011000                    NOP     0

     1504    31123    2   DO WHILE (ERROR_FOR_LINE);

  31123 32 000517   200163 234100                    SZN     ERROR_FOR_LINE,,AUTO
        32 000520   000544 605000 32                 TPL     s:31132

     1505    31124    2     CALL MARK_ERROR;

  31124 32 000521   000400 701000 32                 TSX1    MARK_ERROR
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:224  
        32 000522   000000 011000                    NOP     0

     1506    31125    2     NTABLE = ERR$->ERR.NUMBER / 100;

  31125 32 000523   000000 470400 12                 LDP0    ERR$
        32 000524   000001 236100                    LDQ     1,,PR0
        32 000525   000022 772000                    QRL     18
        32 000526   000144 506007                    DIV     100,DL
        32 000527   200005 756100                    STQ     NTABLE,,AUTO

     1507    31126    2     COMP_SUMMARY_COUNT(SEVERITY_OF_ERROR(NTABLE)) =

  31126 32 000530   000000 720006 30                 LXL0    SEVERITY_OF_ERROR,QL
        32 000531   200005 721100                    LXL1    NTABLE,,AUTO
        32 000532   000000 722011 30                 LXL2    SEVERITY_OF_ERROR,X1
        32 000533   000000 235012 31                 LDA     COMP_SUMMARY_COUNT,X2
        32 000534   000001 035007                    ADLA    1,DL
        32 000535   000000 755010 31                 STA     COMP_SUMMARY_COUNT,X0

     1508    31127    2           COMP_SUMMARY_COUNT(SEVERITY_OF_ERROR(NTABLE)) + 1;
     1509    31128    2     ERR$ = ERR$->ERR.NEXT;

  31128 32 000536   000003 236100                    LDQ     3,,PR0
        32 000537   000000 756000 12                 STQ     ERR$

     1510    31129    2     CALL CHECK_ERRORS_FOR_LINE;

  31129 32 000540   000466 701000 32                 TSX1    CHECK_ERRORS_FOR_LINE
        32 000541   000000 011000                    NOP     0

     1511    31130    2   END;

  31130 32 000542   200163 234100                    SZN     ERROR_FOR_LINE,,AUTO
        32 000543   000521 604000 32                 TMI     s:31124

     1512    31131
     1513    31132    1   IF ACCUM_NUM_ERRORS > 0 THEN
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:225  

  31132 32 000544   200161 235100                    LDA     ACCUM_NUM_ERRORS,,AUTO
        32 000545   000550 604400 32                 TMOZ    s:31134

     1514    31133    1     CALL DUMP_ERRORS;

  31133 32 000546   000310 701000 32                 TSX1    DUMP_ERRORS
        32 000547   000000 011000                    NOP     0

     1515    31134    1   IF ADDR(OUTPUT_ERR_1) ~= ADDR(NIL) THEN

  31134 32 000550   200003 236100                    LDQ     @OUTPUT_ERR_1,,AUTO
        32 000551   000005 116000 33                 CMPQ    5
        32 000552   000567 600000 32                 TZE     s:31136

     1516    31135    1     CALL OUTPUT_ERR_1(ADDR(BLANK),1);

  31135 32 000553   000007 236000 33                 LDQ     7
        32 000554   200326 756100                    STQ     PLUG_LEN+1,,AUTO
        32 000555   000011 236000 33                 LDQ     9
        32 000556   200331 756100                    STQ     PLUG_LEN+4,,AUTO
        32 000557   200326 630500                    EPPR0   PLUG_LEN+1,,AUTO
        32 000560   200330 450500                    STP0    PLUG_LEN+3,,AUTO
        32 000561   200330 630500                    EPPR0   PLUG_LEN+3,,AUTO
        32 000562   200003 471500                    LDP1    @OUTPUT_ERR_1,,AUTO
        32 000563   100000 220100                    LDX0    0,,PR1
        32 000564   000006 631400 33                 EPPR1   6
        32 000565   000000 701010                    TSX1    0,X0
        32 000566   000000 011000                    NOP     0

     1517    31136    1   IF ADDR(OUTPUT_ERR_2) ~= ADDR(NIL) THEN

  31136 32 000567   200004 236100                    LDQ     @OUTPUT_ERR_2,,AUTO
        32 000570   000005 116000 33                 CMPQ    5
        32 000571   000606 600000 32                 TZE     s:31139

     1518    31137    1     CALL OUTPUT_ERR_2(ADDR(BLANK),1);
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:226  

  31137 32 000572   000007 236000 33                 LDQ     7
        32 000573   200326 756100                    STQ     PLUG_LEN+1,,AUTO
        32 000574   000011 236000 33                 LDQ     9
        32 000575   200331 756100                    STQ     PLUG_LEN+4,,AUTO
        32 000576   200326 630500                    EPPR0   PLUG_LEN+1,,AUTO
        32 000577   200330 450500                    STP0    PLUG_LEN+3,,AUTO
        32 000600   200330 630500                    EPPR0   PLUG_LEN+3,,AUTO
        32 000601   200004 471500                    LDP1    @OUTPUT_ERR_2,,AUTO
        32 000602   100000 220100                    LDX0    0,,PR1
        32 000603   000006 631400 33                 EPPR1   6
        32 000604   000000 701010                    TSX1    0,X0
        32 000605   000000 011000                    NOP     0

     1519    31138
     1520    31139    1   END Z8IL$PRINT_ERROR;

  31139 32 000606   000000 702200 xent               TSX2  ! X66_ARET
     1521    31140        %EOD;

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:227  
--  Include file information  --

   Z8I_ERR_SEV.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_ERR_TXT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR_NUMS.:Z8A6TOU  is referenced.
   Z8E_BUFFERS.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_DNT.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8A_ERR.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z8I_LISTING.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   Z9A_FLAGS.:Z8A6TOU  is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$PRINT_ERROR.
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:228  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 LblCom SUB_HEADING_ADDR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR

  ****  Section 002 LblCom SUB_HEADING_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN

  ****  Section 003 LblCom SUB_HEADING_ADDR1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR1

  ****  Section 004 LblCom SUB_HEADING_LEN1

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN1

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:229  
  ****  Section 005 LblCom SUB_HEADING_ADDR2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 SUB_HEADING_ADDR2

  ****  Section 006 LblCom SUB_HEADING_LEN2

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 SUB_HEADING_LEN2

  ****  Section 007 LblCom MAX_LINES_PER_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_LINES_PER_PAGE

  ****  Section 008 LblCom LISTING_LINES_ON_PAGE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LISTING_LINES_ON_PAGE

  ****  Section 009 LblCom LISTING_PAGE_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 LISTING_PAGE_NUMBER

  ****  Section 010 LblCom PLINE

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:230  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(109)         1 PLINE
     0-0-0/c CHAR              1 PLINE_CHAR(0:108)
     0-0-0/c STRC(981)         1 PLINE_REDEF_FIELDS

  ****  Section 011 LblCom PLINE_LEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 PLINE_LEN

  ****  Section 012 LblCom ERR$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 ERR$

  ****  Section 013 LblCom ERR_HEAD

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERR_HEAD

  ****  Section 014 LblCom ERR_TAIL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 ERR_TAIL

  ****  Section 015 LblCom MAX_ERROR_GENERATED

PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:231  
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 MAX_ERROR_GENERATED

  ****  Section 016 LblCom ERR_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 ERR_

  ****  Section 017 LblCom DNT$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 DNT$

  ****  Section 018 LblCom DNT_

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)         1 DNT_

  ****  Section 019 LblCom DNT_BUCKET_NUMBER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN              1 DNT_BUCKET_NUMBER

  ****  Section 020 LblCom DNT_OF_1$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:232  

     0-0-0/w PTR               1 DNT_OF_1$

  ****  Section 021 LblCom SCANNER_STATE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 SCANNER_STATE

  ****  Section 022 LblCom CURRENT_BUFFER$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 CURRENT_BUFFER$

  ****  Section 023 LblCom LOOKAHEAD_BUFFER$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 LOOKAHEAD_BUFFER$

  ****  Section 024 LblCom CURRENT_LINE_LEVEL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 CURRENT_LINE_LEVEL

  ****  Section 025 LblCom LINE_LIST$

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR               1 LINE_LIST$
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:233  

  ****  Section 026 LblCom BUFFER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(252)   r     1 BUFFER

  ****  Section 027 LblCom ORIGINAL_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ORIGINAL_ISN

  ****  Section 028 LblCom EXPANDED_ISN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 EXPANDED_ISN

  ****  Section 029 LblCom ISN_FOR_EXP_SRC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ISN_FOR_EXP_SRC

  ****  Section 030 RoData Z8IL$PRINT_ERROR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

 25651-0-0/c CHAR(70)    r     1 DEFAULT_MSG               12-0-0/c STRC(6543)  r     1 ERRMSG_TABLE_0
   317-0-0/c STRC(36468) r     1 ERRMSG_TABLE_1          2410-0-0/c STRC(12123) r     1 ERRMSG_TABLE_2
  3161-0-0/c STRC(14274) r     1 ERRMSG_TABLE_3          4032-0-0/c STRC(55503) r     1 ERRMSG_TABLE_4
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:234  
  7205-0-0/c STRC(64665) r     1 ERRMSG_TABLE_5         12757-0-0/c STRC(55260) r     1 ERRMSG_TABLE_6
 16123-0-0/c STRC(51885) r     1 ERRMSG_TABLE_7         21132-0-0/c STRC(65151) r     1 ERRMSG_TABLE_8
 24716-0-0/c STRC(15255) r     1 ERRMSG_TABLE_9
   300-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_0(0:14)
  2304-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_1(0:67)
  3131-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_2(0:23)
  3776-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_3(0:27)
  7040-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_4(0:100)
 12612-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_5(0:100)
 15756-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_6(0:100)
 20765-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_7(0:100)
 24554-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_8(0:97)
 25566-0-0/w PTR         r     1 ERRMSG_TABLE_ADDRS_9(0:30)
 25625-0-0/w PTR         r     1 ERR_TABLES(0:9)
 25637-0-0/w SBIN        r     1 ERR_TABLE_LENGTH(0:9)
     0-0-0/w SBIN        r     1 SEVERITY_OF_ERROR(0:9)
 25673-0-0/c CHAR(5)     r     1 STARS(0:5)

  ****  Section 031 LblCom COMP_SUMMARY_COUNT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 COMP_SUMMARY_COUNT(0:5)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   171-0-0/w PTR         r     1 @N                         3-0-0/w PTR         r     1 @OUTPUT_ERR_1
     4-0-0/w PTR         r     1 @OUTPUT_ERR_2            161-0-0/w SBIN        r     1 ACCUM_NUM_ERRORS
   163-0-0/b BIT         r     1 ERROR_FOR_LINE           172-0-0/w PTR         r     1 ERRP$
    60-0-0/c CHAR        r     1 ERR_COL(0:255)            60-0-0/c CHAR(256)   r     1 ERR_COL_LINE
   173-0-0/c STRC(2817)  r     1 ERR_LINE_FORMAT          314-0-0/w PTR         r     1 ERR_TABLE$
   167-0-0/w SBIN        r     1 I                        162-0-0/w SBIN        r     1 LAST_MSG_NUM
   160-0-0/w UBIN        r     1 MAX_ERR_COL              316-0-0/w PTR         r     1 MSG$
PL6.E3A0      #005=Z8IL$PRINT_ERROR File=Z8IL.:Z8A6TSI                           SAT 08/09/97 13:31 Page:235  
     6-0-0/w STRC(1512)  r     1 MSG_ARRAY                315-0-0/w SBIN        r     1 MSG_LENGTH
    *0-0-0/w SBIN        r     1 N                        313-0-0/w SBIN        r     1 NERR_IN_TABLE
     5-0-0/w SBIN        r     1 NTABLE                    *0-0-0/w EPTR        r     1 OUTPUT_ERR_1
    *0-0-0/w EPTR        r     1 OUTPUT_ERR_2             322-0-0/w SBIN        r     1 PAR_MSG_LEN
   323-0-0/w PTR         r     1 PLUG$                    325-0-0/w SBIN        r     1 PLUG_LEN
   324-0-0/w SBIN        r     1 PLUG_NUM                 321-0-0/w SBIN        r     1 TXT_LEN_REM
   312-0-0/w SBIN        r     1 TXT_LEN_TOT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 BLANK                      0-0-0/d STRC(13248)       1 COMCOM
     0-0-0/c STRC(297)         1 DEF_LISTING_SUB_HEADING
     0-0-0/w PTR               1 PLINE_PTR$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 BASED_ERR_TABLE(0:100)
     0-0-0/c ACHR              1 BUFFER_LINE                0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w ASTR(180)   r     1 DNT
     0-0-0/w STRC(540)   r     1 ERR                        0-0-0/c ACHR              1 ERR_TXT
     0-0-0/w ASTR(396)   r     1 EXP_SRC_BUFF               0-0-0/w ASTR(396)   r     1 FILL_BUFFER
     0-0-0/c ACHR              1 LISTING_SUB_HEADING        0-0-0/c ACHR              1 LISTING_SUB_HEADING1
     0-0-0/c ACHR              1 LISTING_SUB_HEADING2       0-0-0/w STRC(36864)       1 PAGE
     0-0-0/c ACHR        r     1 PAR_MSG                    0-0-0/c CHAR        r     1 PLUG_CHAR
     0-0-0/c ACHR        r     1 REM_MSG


   Procedure Z8IL$PRINT_ERROR requires 391 words for executable code.
   Procedure Z8IL$PRINT_ERROR requires 218 words of local(AUTO) storage.

PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:236  
     1522        1        /*T***********************************************************/
     1523        2        /*T*                                                         */
     1524        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1525        4        /*T*                                                         */
     1526        5        /*T***********************************************************/
     1527        6        Z8IL$HANDLE_OVERFLOW_LINE: PROC (LINE$, LENGTH, OP);
     1528        7
     1529        8        /*D*
     1530        9               NAME: Z8IL$HANDLE_OVERFLOW_LINE
     1531       10        DESCRIPTION: Print overflow lines by breaking the long line into
     1532       11                       multiple short lines which may be printed directly.
     1533       12        */
     1534       13
     1535       14
     1536       15    1          DCL LINE$   PTR;
     1537       16    1          DCL LENGTH  SBIN WORD;
     1538       17    1          DCL OP      EPTR;
     1539       18
     1540       19        %EQU PHASE = 5;
     1541       20        %INCLUDE Z8A_DEFC;
     1542       88        %INCLUDE Z8A_SUPP_MAC;
     1543     2488        %INCLUDE Z8A_COMCOM;
     1544     3138        % INCLUDE Z9I_PREPROC;
     1545     3158
     1546     3159    1   DCL NEW_LENGTH   SBIN WORD;
     1547     3160    1   DCL RES_LENGTH   SBIN WORD;
     1548     3161    1   DCL BL$          PTR;  /* Begin line to be printed */
     1549     3162    1   DCL EL$          PTR;  /* End line to be printed */
     1550     3163    1   DCL BLANK_FIELD  CHAR(%LINE_OVERFLOW_INDENT) UNAL BASED (BL$);
     1551     3164    1   DCL SAVE_FIELD   CHAR(%LINE_OVERFLOW_INDENT) UNAL;
     1552     3165    1   DCL BLANKS       CHAR(%LINE_OVERFLOW_INDENT) UNAL CONSTANT INIT(' ');
     1553     3166
     1554     3167        /* Find break, if any, in text within 30 characters before
     1555     3168           pointer P which marks the end of a line of length N.
     1556     3169        */
     1557     3170
     1558     3171    1   FIND_BREAK_IN_TEXT: PROC(P$, N);
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:237  
     1559     3172
     1560     3173    2          DCL P$           PTR;
     1561     3174    2          DCL N            SBIN WORD;
     1562     3175
     1563     3176        %EQU SWIDTH = 30;   /* Search width for break char */
     1564     3177    2          DCL Q$           PTR;
     1565     3178    2          DCL M            SBIN WORD;
     1566     3179    2          DCL QC           CHAR(1) BASED (Q$);
     1567     3180
     1568     3181    2   Q$ = P$;
     1569     3182    2   M  = %SWIDTH;
     1570     3183
     1571     3184    3   DO WHILE (((QC>='A' AND QC<='Z')
     1572     3185    3                  OR (QC>='a' AND QC<='z')
     1573     3186    3                  OR (QC>='0' AND QC <='9')
     1574     3187    3                  OR (QC='-'))
     1575     3188    3               AND (M > 0));
     1576     3189    3     Q$  = PINCRC(Q$, -1);
     1577     3190    3     M   = M-1;
     1578     3191    3   END;
     1579     3192    2   IF M=0 THEN
     1580     3193    2     M = %SWIDTH;
     1581     3194    2   ELSE
     1582     3195    2     IF M ~= %SWIDTH THEN
     1583     3196    2       M = M + 1;
     1584     3197
     1585     3198    2   P$  = PINCRC(P$, M-%SWIDTH);
     1586     3199    2   N   = N+M-%SWIDTH;
     1587     3200
     1588     3201    2   END FIND_BREAK_IN_TEXT;
     1589     3202
     1590     3203
     1591     3204
     1592     3205        /* Start body of hand_overflow_line */
     1593     3206
     1594     3207    1   BL$        = LINE$;
     1595     3208    1   EL$        = PINCRC(BL$,%MAX_LISTING_LINE_LENGTH);
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:238  
     1596     3209    1   NEW_LENGTH = %MAX_LISTING_LINE_LENGTH;
     1597     3210    1   RES_LENGTH = LENGTH;
     1598     3211    1   CALL FIND_BREAK_IN_TEXT(EL$, NEW_LENGTH);
     1599     3212    1   CALL OP(BL$, NEW_LENGTH);
     1600     3213    1   RES_LENGTH = RES_LENGTH - NEW_LENGTH;
     1601     3214
     1602     3215    2   DO WHILE (RES_LENGTH > 0);
     1603     3216    2     BL$          = PINCRC (EL$, - %LINE_OVERFLOW_INDENT);
     1604     3217    2     SAVE_FIELD   = BLANK_FIELD;
     1605     3218    2     BLANK_FIELD  = BLANKS;
     1606     3219    2     NEW_LENGTH   = MINIMUM(RES_LENGTH+%LINE_OVERFLOW_INDENT,
     1607     3220    2                          %MAX_LISTING_LINE_LENGTH);
     1608     3221    2     EL$          = PINCRC(BL$, NEW_LENGTH);
     1609     3222    2     IF RES_LENGTH + %LINE_OVERFLOW_INDENT > %MAX_LISTING_LINE_LENGTH THEN
     1610     3223    2       CALL FIND_BREAK_IN_TEXT (EL$, NEW_LENGTH);
     1611     3224    2     CALL OP(BL$, NEW_LENGTH);
     1612     3225    2     BLANK_FIELD  = SAVE_FIELD;
     1613     3226    2     RES_LENGTH   = RES_LENGTH - NEW_LENGTH + %LINE_OVERFLOW_INDENT;
     1614     3227    2   END; /* WHILE */
     1615     3228
     1616     3229    1   END Z8IL$HANDLE_OVERFLOW_LINE;

PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:239  
--  Include file information  --

   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$HANDLE_OVERFLOW_LINE.

   Procedure Z8IL$HANDLE_OVERFLOW_LINE requires 148 words for executable code.
   Procedure Z8IL$HANDLE_OVERFLOW_LINE requires 24 words of local(AUTO) storage.

    No errors detected in file Z8IL.:Z8A6TSI    .

PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:240  

 Object Unit name= Z8IL$HANDLE_OVERFLOW_LINE                  File name= Z8IL.:Z8A6TOU
 UTS= AUG 09 '97 13:35:09.08 SAT                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  ITERATION
    1  RoData even  UTS      5      5  Z8IL$HANDLE_OVERFLOW_LINE
    2   Proc  even  none   148    224  Z8IL$HANDLE_OVERFLOW_LINE
    3  RoData even  none    11     13  Z8IL$HANDLE_OVERFLOW_LINE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  Z8IL$HANDLE_OVERFLOW_LINE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     COMCOM
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:241  


     1522        1        /*T***********************************************************/
     1523        2        /*T*                                                         */
     1524        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1525        4        /*T*                                                         */
     1526        5        /*T***********************************************************/
     1527        6        Z8IL$HANDLE_OVERFLOW_LINE: PROC (LINE$, LENGTH, OP);

      6  2 000000   000000 700200 xent  Z8IL$HANDLE* TSX0  ! X66_AUTO_3
         2 000001   000030 000003                    ZERO    24,3
         2 000002   000106 710000 2                  TRA     s:3207

     1528        7
     1529        8        /*D*
     1530        9               NAME: Z8IL$HANDLE_OVERFLOW_LINE
     1531       10        DESCRIPTION: Print overflow lines by breaking the long line into
     1532       11                       multiple short lines which may be printed directly.
     1533       12        */
     1534       13
     1535       14
     1536       15    1          DCL LINE$   PTR;
     1537       16    1          DCL LENGTH  SBIN WORD;
     1538       17    1          DCL OP      EPTR;
     1539       18
     1540       19        %EQU PHASE = 5;
     1541       20        %INCLUDE Z8A_DEFC;
     1542       88        %INCLUDE Z8A_SUPP_MAC;
     1543     2488        %INCLUDE Z8A_COMCOM;
     1544     3138        % INCLUDE Z9I_PREPROC;
     1545     3158
     1546     3159    1   DCL NEW_LENGTH   SBIN WORD;
     1547     3160    1   DCL RES_LENGTH   SBIN WORD;
     1548     3161    1   DCL BL$          PTR;  /* Begin line to be printed */
     1549     3162    1   DCL EL$          PTR;  /* End line to be printed */
     1550     3163    1   DCL BLANK_FIELD  CHAR(%LINE_OVERFLOW_INDENT) UNAL BASED (BL$);
     1551     3164    1   DCL SAVE_FIELD   CHAR(%LINE_OVERFLOW_INDENT) UNAL;
     1552     3165    1   DCL BLANKS       CHAR(%LINE_OVERFLOW_INDENT) UNAL CONSTANT INIT(' ');
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:242  
     1553     3166
     1554     3167        /* Find break, if any, in text within 30 characters before
     1555     3168           pointer P which marks the end of a line of length N.
     1556     3169        */
     1557     3170
     1558     3171    1   FIND_BREAK_IN_TEXT: PROC(P$, N);

   3171  2 000003   200020 741300       FIND_BREAK_* STX1  ! SAVE_FIELD+6,,AUTO

     1559     3172
     1560     3173    2          DCL P$           PTR;
     1561     3174    2          DCL N            SBIN WORD;
     1562     3175
     1563     3176        %EQU SWIDTH = 30;   /* Search width for break char */
     1564     3177    2          DCL Q$           PTR;
     1565     3178    2          DCL M            SBIN WORD;
     1566     3179    2          DCL QC           CHAR(1) BASED (Q$);
     1567     3180
     1568     3181    2   Q$ = P$;

   3181  2 000004   200021 470500                    LDP0    @P$,,AUTO
         2 000005   000000 236100                    LDQ     0,,PR0
         2 000006   200023 756100                    STQ     Q$,,AUTO

     1569     3182    2   M  = %SWIDTH;

   3182  2 000007   000036 235007                    LDA     30,DL
         2 000010   200024 755100                    STA     M,,AUTO

     1570     3183
     1571     3184    3   DO WHILE (((QC>='A' AND QC<='Z')

   3184  2 000011   000017 710000 2                  TRA     s:3191

     1572     3185    3                  OR (QC>='a' AND QC<='z')
     1573     3186    3                  OR (QC>='0' AND QC <='9')
     1574     3187    3                  OR (QC='-'))
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:243  
     1575     3188    3               AND (M > 0));
     1576     3189    3     Q$  = PINCRC(Q$, -1);

   3189  2 000012   200023 236100                    LDQ     Q$,,AUTO
         2 000013   000000 036000 3                  ADLQ    0
         2 000014   200023 756100                    STQ     Q$,,AUTO

     1577     3190    3     M   = M-1;

   3190  2 000015   000001 336007                    LCQ     1,DL
         2 000016   200024 056100                    ASQ     M,,AUTO

     1578     3191    3   END;

   3191  2 000017   200023 470500                    LDP0    Q$,,AUTO
         2 000020   040000 106500                    CMPC    fill='040'O
         2 000021   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000022   000001 000001 3                  ADSC9   1                        cn=0,n=1
         2 000023   000030 602000 2                  TNC     s:3191+9
         2 000024   040100 106400                    CMPC    fill='040'O
         2 000025   000002 000001 3                  ADSC9   2                        cn=0,n=1
         2 000026   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000027   000054 603000 2                  TRC     s:3191+29
         2 000030   040000 106500                    CMPC    fill='040'O
         2 000031   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000032   000003 000001 3                  ADSC9   3                        cn=0,n=1
         2 000033   000040 602000 2                  TNC     s:3191+17
         2 000034   040100 106400                    CMPC    fill='040'O
         2 000035   000004 000001 3                  ADSC9   4                        cn=0,n=1
         2 000036   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000037   000054 603000 2                  TRC     s:3191+29
         2 000040   040000 106500                    CMPC    fill='040'O
         2 000041   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000042   000005 000001 3                  ADSC9   5                        cn=0,n=1
         2 000043   000050 602000 2                  TNC     s:3191+25
         2 000044   040100 106400                    CMPC    fill='040'O
         2 000045   000006 000001 3                  ADSC9   6                        cn=0,n=1
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:244  
         2 000046   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000047   000054 603000 2                  TRC     s:3191+29
         2 000050   040000 106500                    CMPC    fill='040'O
         2 000051   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         2 000052   000007 000001 3                  ADSC9   7                        cn=0,n=1
         2 000053   000056 601000 2                  TNZ     s:3192
         2 000054   200024 235100                    LDA     M,,AUTO
         2 000055   000012 605400 2                  TPNZ    s:3189

     1579     3192    2   IF M=0 THEN

   3192  2 000056   200024 235100                    LDA     M,,AUTO
         2 000057   000063 601000 2                  TNZ     s:3195

     1580     3193    2     M = %SWIDTH;

   3193  2 000060   000036 236007                    LDQ     30,DL
         2 000061   200024 756100                    STQ     M,,AUTO
         2 000062   000066 710000 2                  TRA     s:3198

     1581     3194    2   ELSE
     1582     3195    2     IF M ~= %SWIDTH THEN

   3195  2 000063   000036 115007                    CMPA    30,DL
         2 000064   000066 600000 2                  TZE     s:3198

     1583     3196    2       M = M + 1;

   3196  2 000065   200024 054100                    AOS     M,,AUTO

     1584     3197
     1585     3198    2   P$  = PINCRC(P$, M-%SWIDTH);

   3198  2 000066   200021 471500                    LDP1    @P$,,AUTO
         2 000067   100000 473500                    LDP3    0,,PR1
         2 000070   200024 236100                    LDQ     M,,AUTO
         2 000071   000011 402007                    MPY     9,DL
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:245  
         2 000072   000416 136007                    SBLQ    270,DL
         2 000073   000075 605000 2                  TPL     s:3198+7
         2 000074   000044 036003                    ADLQ    36,DU
         2 000075   300000 503506                    ABD     0,QL,PR3
         2 000076   100000 453500                    STP3    0,,PR1

     1586     3199    2   N   = N+M-%SWIDTH;

   3199  2 000077   200022 474500                    LDP4    @N,,AUTO
         2 000100   400000 236100                    LDQ     0,,PR4
         2 000101   200024 036100                    ADLQ    M,,AUTO
         2 000102   000036 136007                    SBLQ    30,DL
         2 000103   400000 756100                    STQ     0,,PR4

     1587     3200
     1588     3201    2   END FIND_BREAK_IN_TEXT;

   3201  2 000104   200020 221300                    LDX1  ! SAVE_FIELD+6,,AUTO
         2 000105   000001 702211                    TSX2  ! 1,X1

     1589     3202
     1590     3203
     1591     3204
     1592     3205        /* Start body of hand_overflow_line */
     1593     3206
     1594     3207    1   BL$        = LINE$;

   3207  2 000106   200003 470500                    LDP0    @LINE$,,AUTO
         2 000107   000000 236100                    LDQ     0,,PR0
         2 000110   200010 756100                    STQ     BL$,,AUTO

     1595     3208    1   EL$        = PINCRC(BL$,%MAX_LISTING_LINE_LENGTH);

   3208  2 000111   000010 036000 3                  ADLQ    8
         2 000112   200011 756100                    STQ     EL$,,AUTO

     1596     3209    1   NEW_LENGTH = %MAX_LISTING_LINE_LENGTH;
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:246  

   3209  2 000113   000155 235007                    LDA     109,DL
         2 000114   200006 755100                    STA     NEW_LENGTH,,AUTO

     1597     3210    1   RES_LENGTH = LENGTH;

   3210  2 000115   200004 471500                    LDP1    @LENGTH,,AUTO
         2 000116   100000 235100                    LDA     0,,PR1
         2 000117   200007 755100                    STA     RES_LENGTH,,AUTO

     1598     3211    1   CALL FIND_BREAK_IN_TEXT(EL$, NEW_LENGTH);

   3211  2 000120   200006 633500                    EPPR3   NEW_LENGTH,,AUTO
         2 000121   200022 453500                    STP3    @P$+1,,AUTO
         2 000122   200011 634500                    EPPR4   EL$,,AUTO
         2 000123   200021 454500                    STP4    SAVE_FIELD+7,,AUTO
         2 000124   000003 701000 2                  TSX1    FIND_BREAK_IN_TEXT
         2 000125   000000 011000                    NOP     0

     1599     3212    1   CALL OP(BL$, NEW_LENGTH);

   3212  2 000126   200006 630500                    EPPR0   NEW_LENGTH,,AUTO
         2 000127   200027 450500                    STP0    M+3,,AUTO
         2 000130   200010 631500                    EPPR1   BL$,,AUTO
         2 000131   200026 451500                    STP1    M+2,,AUTO
         2 000132   200026 630500                    EPPR0   M+2,,AUTO
         2 000133   200005 473500                    LDP3    @OP,,AUTO
         2 000134   300000 220100                    LDX0    0,,PR3
         2 000135   000011 631400 3                  EPPR1   9
         2 000136   000000 701010                    TSX1    0,X0
         2 000137   000000 011000                    NOP     0

     1600     3213    1   RES_LENGTH = RES_LENGTH - NEW_LENGTH;

   3213  2 000140   200007 236100                    LDQ     RES_LENGTH,,AUTO
         2 000141   200006 136100                    SBLQ    NEW_LENGTH,,AUTO
         2 000142   200007 756100                    STQ     RES_LENGTH,,AUTO
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:247  

     1601     3214
     1602     3215    2   DO WHILE (RES_LENGTH > 0);

   3215  2 000143   000223 604400 2                  TMOZ    s:3229

     1603     3216    2     BL$          = PINCRC (EL$, - %LINE_OVERFLOW_INDENT);

   3216  2 000144   200011 236100                    LDQ     EL$,,AUTO
         2 000145   000012 036000 3                  ADLQ    10
         2 000146   200010 756100                    STQ     BL$,,AUTO

     1604     3217    2     SAVE_FIELD   = BLANK_FIELD;

   3217  2 000147   200010 470500                    LDP0    BL$,,AUTO
         2 000150   040100 100500                    MLR     fill='040'O
         2 000151   000000 000023                    ADSC9   0,,PR0                   cn=0,n=19
         2 000152   200012 000023                    ADSC9   SAVE_FIELD,,AUTO         cn=0,n=19

     1605     3218    2     BLANK_FIELD  = BLANKS;

   3218  2 000153   040100 100400                    MLR     fill='040'O
         2 000154   000000 000023 1                  ADSC9   BLANKS                   cn=0,n=19
         2 000155   000000 000023                    ADSC9   0,,PR0                   cn=0,n=19

     1606     3219    2     NEW_LENGTH   = MINIMUM(RES_LENGTH+%LINE_OVERFLOW_INDENT,

   3219  2 000156   200007 236100                    LDQ     RES_LENGTH,,AUTO
         2 000157   000023 036007                    ADLQ    19,DL
         2 000160   000155 116007                    CMPQ    109,DL
         2 000161   000163 604400 2                  TMOZ    s:3219+5
         2 000162   000155 236007                    LDQ     109,DL
         2 000163   200006 756100                    STQ     NEW_LENGTH,,AUTO

     1607     3220    2                          %MAX_LISTING_LINE_LENGTH);
     1608     3221    2     EL$          = PINCRC(BL$, NEW_LENGTH);

PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:248  
   3221  2 000164   000020 736000                    QLS     16
         2 000165   200010 036100                    ADLQ    BL$,,AUTO
         2 000166   200011 756100                    STQ     EL$,,AUTO

     1609     3222    2     IF RES_LENGTH + %LINE_OVERFLOW_INDENT > %MAX_LISTING_LINE_LENGTH THEN

   3222  2 000167   200007 235100                    LDA     RES_LENGTH,,AUTO
         2 000170   000132 115007                    CMPA    90,DL
         2 000171   000200 604400 2                  TMOZ    s:3224

     1610     3223    2       CALL FIND_BREAK_IN_TEXT (EL$, NEW_LENGTH);

   3223  2 000172   200006 630500                    EPPR0   NEW_LENGTH,,AUTO
         2 000173   200022 450500                    STP0    @P$+1,,AUTO
         2 000174   200011 631500                    EPPR1   EL$,,AUTO
         2 000175   200021 451500                    STP1    SAVE_FIELD+7,,AUTO
         2 000176   000003 701000 2                  TSX1    FIND_BREAK_IN_TEXT
         2 000177   000000 011000                    NOP     0

     1611     3224    2     CALL OP(BL$, NEW_LENGTH);

   3224  2 000200   200006 630500                    EPPR0   NEW_LENGTH,,AUTO
         2 000201   200027 450500                    STP0    M+3,,AUTO
         2 000202   200010 631500                    EPPR1   BL$,,AUTO
         2 000203   200026 451500                    STP1    M+2,,AUTO
         2 000204   200026 630500                    EPPR0   M+2,,AUTO
         2 000205   200005 473500                    LDP3    @OP,,AUTO
         2 000206   300000 220100                    LDX0    0,,PR3
         2 000207   000011 631400 3                  EPPR1   9
         2 000210   000000 701010                    TSX1    0,X0
         2 000211   000000 011000                    NOP     0

     1612     3225    2     BLANK_FIELD  = SAVE_FIELD;

   3225  2 000212   200010 470500                    LDP0    BL$,,AUTO
         2 000213   040100 100500                    MLR     fill='040'O
         2 000214   200012 000023                    ADSC9   SAVE_FIELD,,AUTO         cn=0,n=19
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:249  
         2 000215   000000 000023                    ADSC9   0,,PR0                   cn=0,n=19

     1613     3226    2     RES_LENGTH   = RES_LENGTH - NEW_LENGTH + %LINE_OVERFLOW_INDENT;

   3226  2 000216   200007 236100                    LDQ     RES_LENGTH,,AUTO
         2 000217   200006 136100                    SBLQ    NEW_LENGTH,,AUTO
         2 000220   000023 036007                    ADLQ    19,DL
         2 000221   200007 756100                    STQ     RES_LENGTH,,AUTO

     1614     3227    2   END; /* WHILE */

   3227  2 000222   000144 605400 2                  TPNZ    s:3216

     1615     3228
     1616     3229    1   END Z8IL$HANDLE_OVERFLOW_LINE;

   3229  2 000223   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:250  
--  Include file information  --

   Z9I_PREPROC.:Z8A6TOU  is referenced.
   Z8A_COMCOM.:Z8A6TOU  cannot be made into a system file and is referenced.
   X8A_COM_MACS.:X8A6TOU  is referenced.
   Z8A_NAMES.:Z8A6TOU  is referenced.
   Z8A_SUPP_MAC.:Z8A6TOU  is referenced.
   Z8A_DEFC.:Z8A6TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure Z8IL$HANDLE_OVERFLOW_LINE.
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:251  

 **** Variables and constants ****

  ****  Section 000 LblCom ITERATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN              1 ITERATION

  ****  Section 001 RoData Z8IL$HANDLE_OVERFLOW_LINE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(19)    r     1 BLANKS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @LENGTH                    3-0-0/w PTR         r     1 @LINE$
    22-0-0/w PTR         r     1 @N                         5-0-0/w PTR         r     1 @OP
    21-0-0/w PTR         r     1 @P$                       10-0-0/w PTR         r     1 BL$
    11-0-0/w PTR         r     1 EL$                       *0-0-0/w SBIN        r     1 LENGTH
    *0-0-0/w PTR         r     1 LINE$                     24-0-0/w SBIN        r     1 M
    *0-0-0/w SBIN        r     1 N                          6-0-0/w SBIN        r     1 NEW_LENGTH
    *0-0-0/w EPTR        r     1 OP                        *0-0-0/w PTR         r     1 P$
    23-0-0/w PTR         r     1 Q$                         7-0-0/w SBIN        r     1 RES_LENGTH
    12-0-0/c CHAR(19)    r     1 SAVE_FIELD

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(13248)       1 COMCOM
PL6.E3A0      #006=Z8IL$HANDLE_OVERFLOW_LINE File=Z8IL.:Z8A6TSI                  SAT 08/09/97 13:35 Page:252  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(19)    r     1 BLANK_FIELD                0-0-0/w CHAR(4096)        1 CHARS
     0-0-0/w STRC(72)          1 CONT                       0-0-0/w STRC(36864)       1 PAGE
     0-0-0/c CHAR        r     1 QC


   Procedure Z8IL$HANDLE_OVERFLOW_LINE requires 148 words for executable code.
   Procedure Z8IL$HANDLE_OVERFLOW_LINE requires 24 words of local(AUTO) storage.

    No errors detected in file Z8IL.:Z8A6TSI    .
