VERSION E05

PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:1    
        1        1        /*M* SHIFTR - Shift text right and adjust offsets. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: SHIFTR
        9        9             PURPOSE:
       10       10                  To shift characters inside BLOCK right by LEN characters.
       11       11             DESCRIPTION:
       12       12                  Shift the characters from START to J to the right LEN spaces.
       13       13                  Then add len to all offsets in ARRAY greater than START.
       14       14        */
       15       15        /*D*
       16       16             NAME: SHIFTR
       17       17             CALL:
       18       18                  CALL SHIFTR (ARRAY, BLOCK, START, LEN, END);
       19       19             INPUT:
       20       20                  ARRAY - An array of 13 elements representing the offsets of the S/B
       21       21                  fields inside the :USER record.
       22       22
       23       23                  BLOCK - The area containing the text which the shift operation will
       24       24                  work on.
       25       25
       26       26                  START - The number of the character which is the start of the field
       27       27                  to be moved.
       28       28
       29       29                  LEN   - The number of character positions to shift right.
       30       30
       31       31                  END   - The total size of block which contains significant characters.
       32       32             OUTPUT:
       33       33                  BLOCK contains an opening starting at START for length LEN where we
       34       34                  can insert new text.
       35       35             SCRATCH:
       36       36                  None.
       37       37             DESCRIPTION:
PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:2    
       38       38                  The characters inside BLOCK indexed from START to END are shifted LEN
       39       39                  characters to the right.
       40       40        */
       41       41        SHIFTR: PROC (ARRAY, BLOCK, START, LEN, J);
       42       42    1   DCL ARRAY (0:13) SBIN HALF;
       43       43    1   DCL BLOCK (0:1024) CHAR (1);
       44       44    1   DCL RBLOCK REDEF BLOCK CHAR (1025);
       45       45    1   DCL START UBIN;
       46       46    1   DCL LEN UBIN;
       47       47
       48       48    1   DCL I SBIN;
       49       49    1   DCL J UBIN;
       50       50
       51       51    2           DO I = J DOWNTO START;
       52       52    2              BLOCK (I+LEN) = BLOCK (I);
       53       53    2              END;
       54       54
       55       55    2           DO I = 0 TO 13;
       56       56    2              IF ARRAY(I) >= START THEN ARRAY(I) = ARRAY(I) + LEN;
       57       57    2              END;
       58       58
       59       59    1           RETURN;
       60       60    1   END SHIFTR;
       61       61        %EOD;

PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:3    
      No diagnostics issued in procedure SHIFTR.

   Procedure SHIFTR requires 39 words for executable code.
   Procedure SHIFTR requires 10 words of local(AUTO) storage.

PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:4    

 Object Unit name= SHIFTR                                     File name= ASB$SHIFT_BANNER.:E05TOU
 UTS= JUL 29 '97 09:30:28.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    39     47  SHIFTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  SHIFTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET
PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:5    


        1        1        /*M* SHIFTR - Shift text right and adjust offsets. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8             NAME: SHIFTR
        9        9             PURPOSE:
       10       10                  To shift characters inside BLOCK right by LEN characters.
       11       11             DESCRIPTION:
       12       12                  Shift the characters from START to J to the right LEN spaces.
       13       13                  Then add len to all offsets in ARRAY greater than START.
       14       14        */
       15       15        /*D*
       16       16             NAME: SHIFTR
       17       17             CALL:
       18       18                  CALL SHIFTR (ARRAY, BLOCK, START, LEN, END);
       19       19             INPUT:
       20       20                  ARRAY - An array of 13 elements representing the offsets of the S/B
       21       21                  fields inside the :USER record.
       22       22
       23       23                  BLOCK - The area containing the text which the shift operation will
       24       24                  work on.
       25       25
       26       26                  START - The number of the character which is the start of the field
       27       27                  to be moved.
       28       28
       29       29                  LEN   - The number of character positions to shift right.
       30       30
       31       31                  END   - The total size of block which contains significant characters.
       32       32             OUTPUT:
       33       33                  BLOCK contains an opening starting at START for length LEN where we
       34       34                  can insert new text.
       35       35             SCRATCH:
       36       36                  None.
PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:6    
       37       37             DESCRIPTION:
       38       38                  The characters inside BLOCK indexed from START to END are shifted LEN
       39       39                  characters to the right.
       40       40        */
       41       41        SHIFTR: PROC (ARRAY, BLOCK, START, LEN, J);

     41  0 000000   000000 700200 xent  SHIFTR       TSX0  ! X66_AUTO_5
         0 000001   000012 000005                    ZERO    10,5

       42       42    1   DCL ARRAY (0:13) SBIN HALF;
       43       43    1   DCL BLOCK (0:1024) CHAR (1);
       44       44    1   DCL RBLOCK REDEF BLOCK CHAR (1025);
       45       45    1   DCL START UBIN;
       46       46    1   DCL LEN UBIN;
       47       47
       48       48    1   DCL I SBIN;
       49       49    1   DCL J UBIN;
       50       50
       51       51    2           DO I = J DOWNTO START;

     51  0 000002   200007 470500                    LDP0    @J,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   200010 755100                    STA     I,,AUTO
         0 000005   000020 710000 0                  TRA     s:53+2

       52       52    2              BLOCK (I+LEN) = BLOCK (I);

     52  0 000006   200006 470500                    LDP0    @LEN,,AUTO
         0 000007   200010 236100                    LDQ     I,,AUTO
         0 000010   000000 036100                    ADLQ    0,,PR0
         0 000011   200004 471500                    LDP1    @BLOCK,,AUTO
         0 000012   200010 235100                    LDA     I,,AUTO
         0 000013   040106 100505                    MLR     fill='040'O
         0 000014   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1
         0 000015   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1

       53       53    2              END;
PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:7    

     53  0 000016   000001 336007                    LCQ     1,DL
         0 000017   200010 056100                    ASQ     I,,AUTO
         0 000020   200005 470500                    LDP0    @START,,AUTO
         0 000021   200010 236100                    LDQ     I,,AUTO
         0 000022   000025 604000 0                  TMI     s:55
         0 000023   000000 116100                    CMPQ    0,,PR0
         0 000024   000006 603000 0                  TRC     s:52

       54       54
       55       55    2           DO I = 0 TO 13;

     55  0 000025   200010 450100                    STZ     I,,AUTO

       56       56    2              IF ARRAY(I) >= START THEN ARRAY(I) = ARRAY(I) + LEN;

     56  0 000026   200005 470500                    LDP0    @START,,AUTO
         0 000027   200003 471500                    LDP1    @ARRAY,,AUTO
         0 000030   200010 720100                    LXL0    I,,AUTO
         0 000031   100000 236110                    LDQ     0,X0,PR1
         0 000032   000022 732000                    QRS     18
         0 000033   000042 604000 0                  TMI     s:57
         0 000034   000000 116100                    CMPQ    0,,PR0
         0 000035   000042 602000 0                  TNC     s:57

     56  0 000036   200006 473500                    LDP3    @LEN,,AUTO
         0 000037   300000 036100                    ADLQ    0,,PR3
         0 000040   000000 621006                    EAX1    0,QL
         0 000041   100000 741110                    STX1    0,X0,PR1

       57       57    2              END;

     57  0 000042   200010 054100                    AOS     I,,AUTO
         0 000043   200010 235100                    LDA     I,,AUTO
         0 000044   000015 115007                    CMPA    13,DL
         0 000045   000026 604400 0                  TMOZ    s:56

PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:8    
       58       58
       59       59    1           RETURN;

     59  0 000046   000000 702200 xent               TSX2  ! X66_ARET
       60       60    1   END SHIFTR;
       61       61        %EOD;

PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:9    
      No diagnostics issued in procedure SHIFTR.
PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:10   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ARRAY                     4-0-0/w PTR         r     1 @BLOCK
     7-0-0/w PTR         r     1 @J                         6-0-0/w PTR         r     1 @LEN
     5-0-0/w PTR         r     1 @START                    *0-0-0/w SBIN(18)    r     1 ARRAY(0:13)
    *0-0-0/c CHAR        r     1 BLOCK(0:1024)             10-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 J                         *0-0-0/w UBIN        r     1 LEN
    *0-0-0/w UBIN        r     1 START


   Procedure SHIFTR requires 39 words for executable code.
   Procedure SHIFTR requires 10 words of local(AUTO) storage.
PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=SHIFTR File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:12   
          MINI XREF LISTING

ARRAY
        42**DCL        41--PROC       56>>IF         56<<ASSIGN     56>>ASSIGN
BLOCK
        43**DCL        41--PROC       44--REDEF      52<<ASSIGN     52>>ASSIGN
I
        48**DCL        51<<DOINDEX    52>>ASSIGN     52>>ASSIGN     55<<DOINDEX    56>>IF         56>>ASSIGN
        56>>ASSIGN
J
        49**DCL        41--PROC       51>>DOINDEX
LEN
        46**DCL        41--PROC       52>>ASSIGN     56>>ASSIGN
START
        45**DCL        41--PROC       51>>DOINDEX    56>>IF

PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:13   
       62        1        /*T***********************************************************/
       63        2        /*T*                                                         */
       64        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       65        4        /*T*                                                         */
       66        5        /*T***********************************************************/
       67        6        %EJECT;
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:14   
       68        7        /*M* SHIFTL - Shift text left and adjust offsets. */
       69        8        /*P*
       70        9             NAME: SHIFTL
       71       10             PURPOSE:
       72       11                  To shift characters inside BLOCK left by LEN characters.
       73       12             DESCRIPTION:
       74       13                  Shift the characters from START to J to the left LEN spaces.
       75       14                  Then add len to all offsets in ARRAY greater than START.
       76       15        */
       77       16        /*D*
       78       17             NAME: SHIFTL
       79       18             CALL:
       80       19                  CALL SHIFTL (ARRAY, BLOCK, START, LEN, END);
       81       20             INPUT:
       82       21                  ARRAY - An array of 13 elements representing the offsets of the S/B
       83       22                  fields inside the :USER record.
       84       23
       85       24                  BLOCK - The area containing the text which the shift operation will
       86       25                  work on.
       87       26
       88       27                  START - The number of the character which is the start of the field
       89       28                  to be moved.
       90       29
       91       30                  LEN   - The number of character positions to shift left.
       92       31
       93       32                  END   - The total size of block which contains significant characters.
       94       33             OUTPUT:
       95       34                  BLOCK contains an opening starting at START for length LEN where we
       96       35                  can insert new text.
       97       36             SCRATCH:
       98       37                  None.
       99       38             DESCRIPTION:
      100       39                  The characters inside BLOCK indexed from START to END are shifted LEN
      101       40                  characters to the left.
      102       41        */
      103       42        SHIFTL: PROC (ARRAY, BLOCK, START, LEN, J);
      104       43    1   DCL ARRAY (0:13) SBIN HALF;
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:15   
      105       44    1   DCL BLOCK (0:1024) CHAR (1);
      106       45    1   DCL RBLOCK REDEF BLOCK CHAR (1025);
      107       46    1   DCL START UBIN;
      108       47    1   DCL LEN UBIN;
      109       48
      110       49    1   DCL I SBIN;
      111       50    1   DCL J UBIN;
      112       51
      113       52    2           DO I = START TO J;
      114       53    2              BLOCK (I-LEN) = BLOCK (I);
      115       54    2              END;
      116       55
      117       56    2           DO I = 0 TO 13;
      118       57    2              IF ARRAY(I) >= START THEN ARRAY(I) = ARRAY(I) - LEN;
      119       58    2              END;
      120       59
      121       60    1           RETURN;
      122       61    1   END SHIFTL;

PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:16   
      No diagnostics issued in procedure SHIFTL.

   Procedure SHIFTL requires 38 words for executable code.
   Procedure SHIFTL requires 10 words of local(AUTO) storage.

    No errors detected in file ASB$SHIFT_BANNER.:E05TSI    .

PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:17   

 Object Unit name= SHIFTL                                     File name= ASB$SHIFT_BANNER.:E05TOU
 UTS= JUL 29 '97 09:30:37.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    38     46  SHIFTL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        5  SHIFTL

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_5
                       nStd      0 X66_ARET
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:18   


       62        1        /*T***********************************************************/
       63        2        /*T*                                                         */
       64        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       65        4        /*T*                                                         */
       66        5        /*T***********************************************************/
       67        6        %EJECT;
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:19   
       68        7        /*M* SHIFTL - Shift text left and adjust offsets. */
       69        8        /*P*
       70        9             NAME: SHIFTL
       71       10             PURPOSE:
       72       11                  To shift characters inside BLOCK left by LEN characters.
       73       12             DESCRIPTION:
       74       13                  Shift the characters from START to J to the left LEN spaces.
       75       14                  Then add len to all offsets in ARRAY greater than START.
       76       15        */
       77       16        /*D*
       78       17             NAME: SHIFTL
       79       18             CALL:
       80       19                  CALL SHIFTL (ARRAY, BLOCK, START, LEN, END);
       81       20             INPUT:
       82       21                  ARRAY - An array of 13 elements representing the offsets of the S/B
       83       22                  fields inside the :USER record.
       84       23
       85       24                  BLOCK - The area containing the text which the shift operation will
       86       25                  work on.
       87       26
       88       27                  START - The number of the character which is the start of the field
       89       28                  to be moved.
       90       29
       91       30                  LEN   - The number of character positions to shift left.
       92       31
       93       32                  END   - The total size of block which contains significant characters.
       94       33             OUTPUT:
       95       34                  BLOCK contains an opening starting at START for length LEN where we
       96       35                  can insert new text.
       97       36             SCRATCH:
       98       37                  None.
       99       38             DESCRIPTION:
      100       39                  The characters inside BLOCK indexed from START to END are shifted LEN
      101       40                  characters to the left.
      102       41        */
      103       42        SHIFTL: PROC (ARRAY, BLOCK, START, LEN, J);

PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:20   
     42  0 000000   000000 700200 xent  SHIFTL       TSX0  ! X66_AUTO_5
         0 000001   000012 000005                    ZERO    10,5

      104       43    1   DCL ARRAY (0:13) SBIN HALF;
      105       44    1   DCL BLOCK (0:1024) CHAR (1);
      106       45    1   DCL RBLOCK REDEF BLOCK CHAR (1025);
      107       46    1   DCL START UBIN;
      108       47    1   DCL LEN UBIN;
      109       48
      110       49    1   DCL I SBIN;
      111       50    1   DCL J UBIN;
      112       51
      113       52    2           DO I = START TO J;

     52  0 000002   200005 470500                    LDP0    @START,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   200010 755100                    STA     I,,AUTO
         0 000005   000017 710000 0                  TRA     s:54+1

      114       53    2              BLOCK (I-LEN) = BLOCK (I);

     53  0 000006   200006 470500                    LDP0    @LEN,,AUTO
         0 000007   200010 236100                    LDQ     I,,AUTO
         0 000010   000000 136100                    SBLQ    0,,PR0
         0 000011   200004 471500                    LDP1    @BLOCK,,AUTO
         0 000012   200010 235100                    LDA     I,,AUTO
         0 000013   040106 100505                    MLR     fill='040'O
         0 000014   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1
         0 000015   100000 000001                    ADSC9   0,Q,PR1                  cn=0,n=1

      115       54    2              END;

     54  0 000016   200010 054100                    AOS     I,,AUTO
         0 000017   200007 470500                    LDP0    @J,,AUTO
         0 000020   000000 236100                    LDQ     0,,PR0
         0 000021   000006 604000 0                  TMI     s:53
         0 000022   200010 116100                    CMPQ    I,,AUTO
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:21   
         0 000023   000006 605000 0                  TPL     s:53

      116       55
      117       56    2           DO I = 0 TO 13;

     56  0 000024   200010 450100                    STZ     I,,AUTO

      118       57    2              IF ARRAY(I) >= START THEN ARRAY(I) = ARRAY(I) - LEN;

     57  0 000025   200005 470500                    LDP0    @START,,AUTO
         0 000026   200003 471500                    LDP1    @ARRAY,,AUTO
         0 000027   200010 720100                    LXL0    I,,AUTO
         0 000030   100000 236110                    LDQ     0,X0,PR1
         0 000031   000022 732000                    QRS     18
         0 000032   000041 604000 0                  TMI     s:58
         0 000033   000000 116100                    CMPQ    0,,PR0
         0 000034   000041 602000 0                  TNC     s:58

     57  0 000035   200006 473500                    LDP3    @LEN,,AUTO
         0 000036   300000 136100                    SBLQ    0,,PR3
         0 000037   000000 621006                    EAX1    0,QL
         0 000040   100000 741110                    STX1    0,X0,PR1

      119       58    2              END;

     58  0 000041   200010 054100                    AOS     I,,AUTO
         0 000042   200010 235100                    LDA     I,,AUTO
         0 000043   000015 115007                    CMPA    13,DL
         0 000044   000025 604400 0                  TMOZ    s:57

      120       59
      121       60    1           RETURN;

     60  0 000045   000000 702200 xent               TSX2  ! X66_ARET
      122       61    1   END SHIFTL;

PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:22   
      No diagnostics issued in procedure SHIFTL.
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:23   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ARRAY                     4-0-0/w PTR         r     1 @BLOCK
     7-0-0/w PTR         r     1 @J                         6-0-0/w PTR         r     1 @LEN
     5-0-0/w PTR         r     1 @START                    *0-0-0/w SBIN(18)    r     1 ARRAY(0:13)
    *0-0-0/c CHAR        r     1 BLOCK(0:1024)             10-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 J                         *0-0-0/w UBIN        r     1 LEN
    *0-0-0/w UBIN        r     1 START


   Procedure SHIFTL requires 38 words for executable code.
   Procedure SHIFTL requires 10 words of local(AUTO) storage.

    No errors detected in file ASB$SHIFT_BANNER.:E05TSI    .
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:24   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=SHIFTL File=ASB$SHIFT_BANNER.:E05TSI                          TUE 07/29/97 09:30 Page:25   
          MINI XREF LISTING

ARRAY
        43**DCL        42--PROC       57>>IF         57<<ASSIGN     57>>ASSIGN
BLOCK
        44**DCL        42--PROC       45--REDEF      53<<ASSIGN     53>>ASSIGN
I
        49**DCL        52<<DOINDEX    53>>ASSIGN     53>>ASSIGN     56<<DOINDEX    57>>IF         57>>ASSIGN
        57>>ASSIGN
J
        50**DCL        42--PROC       52>>DOINDEX
LEN
        47**DCL        42--PROC       53>>ASSIGN     57>>ASSIGN
START
        46**DCL        42--PROC       52>>DOINDEX    57>>IF
