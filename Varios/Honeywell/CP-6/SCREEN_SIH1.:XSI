.*M*
HELP file for SCREEN.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*X*                                             
FYI, this HELP file has been specially prepared to run through TUNA.X (LEN=79)
prior to running through HERMAN.  This action will guarantee that the lines of
text in it will fill a screen as much as possible, and that more lines will end
up per screen.
.*R*
.*A*
The SCREEN routines provide an efficient front-end for CURSOR.X.
.*B*
The SCREEN object unit consists of two subroutines, SCREENIN and SCREENUP.
 
The SCREENIN routine is used to initialize the screen routines and to
initialize CURSOR.X.  Calling sequence:
 
    CALL SCREENIN (width, height);
 
"width" is a UBIN/SBIN WORD cell into which the width of the CRT screen will be
returned.  "height" is a UBIN/SBIN WORD cell into which the height of the
screen will be returned.  If the terminal device is not a CRT, height will be
returned as zero.  If SCREENIN is called without arguments (i.e., "CALL
SCREENIN;"), the CRT screen will be cleared and SCREEN's memory image will be
cleared to blanks.
 
The SCREENUP routine is called to update the memory image of the screen and to
output any changes.  Calling sequence:
 
    CALL SCREENUP (screen);
 
"screen" is a 24-line by 80-column image of what the screen should look like,
packed into a 1920-character buffer.  SCREENUP will compare the screen image
passed with the one in its memory and will output commands to CURSOR.X to
position the cursor and perform the updates.
.*B*
The SCREEN routines are more efficient than using a "naked" version of CURSOR.X
in that SCREEN scans the entire desired screen image and computes the most
efficient method of updating the screen.  In some cases, characters will be
deleted by outputting blanks; in other cases, it may be more efficient to issue
a clear-to-end-of-line command.  In extreme cases, SCREEN will issue a clear
screen command and will repaint the entire screen.
.*B*
When SCREENIN is called, the CRT screen is cleared and SCREEN's copy of the
screen image is cleared to blanks.  The user program builds a second screen
image in its local storage; when this process is done, the user program passes
the screen image to SCREENUP.  SCREENUP will output the commands to draw the
image on the actual CRT and update SCREEN's copy of the screen image.
 
The user program should always initialize SCREEN via a call to SCREENIN with
the two arguments.  Subsequent calls to SCREENIN with no arguments will erase
the CRT screen and the memory image.  Thus, to implement a "REDRAW" command, a
program need only call SCREENIN (to clear the screen) followed by a call to
SCREENUP (to repaint the last local copy of the screen).
.*K* CAUTIONS
The SCREEN routines always assume a 24-line by 80-column screen image.  This
may have undesirable side effects if the screen really isn't that shape.
 
SCREEN's copy of the screen is kept in a buffer called SCREEN which is declared
EXTROOT.
 
All information which is presented on the screen is done in a left to right,
top to bottom manner.  Thus, the cursor will always be left in the column
following the last updated character.  This is occasionally unpredictable, as
in the case where a shorter line replaces a longer one:  SCREENUP may write the
shorter line followed by erase to end of line, which may be translated to a
terminal command or multiple blanks if the terminal has no such command.
 
Direct calls to CURSOR.X routines may be performed with some caution.  Be aware
that any prompts issued by a program reading from the CRT and input data echoed
to the screen will not be reflected in SCREEN's image of the CRT and hence may
not be erased when expected.
.*K* USAGE
The SCREEN routines must be linked with the CURSOR routines:
 
    !LINK <oufid>,SCREEN.X,CURSOR.X ...
 
.*K* OWNER
Peter Rumsey, LADC
.*K* XINDEX
SCREEN.X
.*R*
AID=UTILITY
.*R*
SCREEN_UPDATING
.*R*
TERMINALS
.*R*
.*K* XINDEX_ABSTRACT
TOOL=SCREEN
.*R*
Routines that provide an efficient front-end for CURSOR.X.
.*K* CHANGES Changes changes
11/30/83 Fixed bug which caused changes in only column 0 not to appear.
         STAR #18348.
.*B*
02/28/83
.*R*
Installed in LADC X account.
