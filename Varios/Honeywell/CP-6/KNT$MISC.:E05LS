VERSION E05

PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:1    
        1        1        /*M* KNT$MISC - Miscellaneous routines used by Fep transport. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8
        9        9        /*P* NAME: KNT$MISC
       10       10
       11       11        The file KNT$MISC contains the following modules/routines:
       12       12
       13       13        KNT_DATA_D
       14       14        KNT$DSESSION
       15       15        KNT$GETBUF and KNT$RELBUF
       16       16        KNT$RLS_CHAIN
       17       17        KNT$RETRANS
       18       18        KNT$TTIMER
       19       19        KNT$SET_UNQSESS
       20       20        KNT$UNQ
       21       21        KNT$TRACE
       22       22        */
       23       23
       24       24        /*M* KNT_DATA_D - Data used by the transport layer.   */
       25       25        /*X*  MEC,MOC,EXM=20,CLM=30,CRM=80                                */
       26       26
       27       27
       28       28        /*F* NAME: KNT_DATA_D
       29       29
       30       30        */
       31       31        KNT_DATA_D: PROC;
       32       32
       33       33        %INCLUDE K_TRANSPORT_E;
       34      358        %INCLUDE K_TRANSPORT_M;
       35     2142        %INCLUDE K_ADDRESS_M;
       36     2645        %INCLUDE K_SCODE_C;
       37     2730        %INCLUDE KN_DATA_M;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:2    
       38     4516 S      %INCLUDE GU_LCP6_M;
       39     4517
       40     4518    1   DCL KNT$SET_UNQSESS ENTRY;
       41     4519
       42     4520                                      /* Based data used to determine byte sizes      */
       43     4521        %K$TPDU_CR_CC (NAME=K$TPDU_C, ALGN=CALIGNED);
       44     4590        %K$TPDU_DR (ALGN=CALIGNED);
       45     4633        %K$TPDU_DC (ALGN=CALIGNED);
       46     4672        %K$TPDU_DT (ALGN=CALIGNED);
       47     4722        %K$TPDU_DT_EXT (ALGN=CALIGNED);
       48     4786        %K$TPDU_AK (ALGN=CALIGNED);
       49     4834        %K$TPDU_AK_EXT (ALGN=CALIGNED);
       50     4878        %K$TPDU_EA (ALGN=CALIGNED);
       51     4904        %K$TPDU_EA_EXT (ALGN=CALIGNED);
       52     4930        %K$TPDU_ER (ALGN=CALIGNED);
       53     4969        %K$TPDU_CP6 (ALGN=CALIGNED);
       54     5004
       55     5005        %K$NSAP;
       56     5057        %K$TSAP;
       57     5092
       58     5093        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:3    
       59     5094
       60     5095    1   DCL K_TSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$TSAP));
       61     5096    1   DCL K_NSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$NSAP));
       62     5097
       63     5098    1   DCL K_TPDU_SIZE(0:15) SBIN CONSTANT SYMDEF INIT(
       64     5099    1           LENGTHC(K$TPDU_CP6),
       65     5100    1           LENGTHC(K$TPDU_DT),
       66     5101    1           LENGTHC(K$TPDU_EA),
       67     5102    1           255/* 3 is not used*/,
       68     5103    1           255/* 4 is not used*/,
       69     5104    1           255/* RJ only used with class 1*/,
       70     5105    1           LENGTHC(K$TPDU_AK),
       71     5106    1           LENGTHC(K$TPDU_ER),
       72     5107    1           LENGTHC(K$TPDU_DR),
       73     5108    1           255/* 9 is not used*/,
       74     5109    1           255/* 10 is not used*/,
       75     5110    1           255/* 11 is not used*/,
       76     5111    1           LENGTHC(K$TPDU_DC),
       77     5112    1           LENGTHC(K$TPDU_C),
       78     5113    1           LENGTHC(K$TPDU_C),
       79     5114    1           LENGTHC(K$TPDU_DT));
       80     5115
       81     5116    1   DCL K_TPDU_SIZE_EXT(0:15) SBIN CONSTANT SYMDEF INIT(
       82     5117    1           LENGTHC(K$TPDU_CP6),
       83     5118    1           LENGTHC(K$TPDU_DT_EXT),
       84     5119    1           LENGTHC(K$TPDU_EA_EXT),
       85     5120    1           255/* 3 is not used*/,
       86     5121    1           255/* 4 is not used*/,
       87     5122    1           255/* RJ only used with class 1*/,
       88     5123    1           LENGTHC(K$TPDU_AK_EXT),
       89     5124    1           LENGTHC(K$TPDU_ER),
       90     5125    1           LENGTHC(K$TPDU_DR),
       91     5126    1           255/* 9 is not used*/,
       92     5127    1           255/* 10 is not used*/,
       93     5128    1           255/* 11 is not used*/,
       94     5129    1           LENGTHC(K$TPDU_DC),
       95     5130    1           LENGTHC(K$TPDU_C),
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:4    
       96     5131    1           LENGTHC(K$TPDU_C),
       97     5132    1           LENGTHC(K$TPDU_DT_EXT));
       98     5133
       99     5134
      100     5135
      101     5136    1   DCL K_TPDUSZ_VALUES(0:13) SBIN CONSTANT SYMDEF INIT(
      102     5137    1                   0,0,0,0,0,0,0,
      103     5138    1                   128,256,512,1024,2048,4096,8192);
      104     5139
      105     5140        /*K* K_TPDUSZ_VALUES - ARRAY(0:13).
      106     5141        Contains the maximum TPDU size given a value from K$TPARM_TPDU.SIZE
      107     5142        to be used as an index.  See K_TPDUSIZE_equ in file K_TRANSPORT_E.
      108     5143        */
      109     5144
      110     5145
      111     5146        %K$TPARM_CHKSUM (NAME=K_CKSUM_INIT, STCLASS = CONSTANT SYMDEF);
      112     5186
      113     5187    1   DCL KV_B_POOL# UBIN WORD STATIC SYMDEF INIT(0);
      114     5188    1   DCL KV_B_POOL$(0:5) PTR STATIC SYMDEF INIT(ADDR(NIL)*0);
      115     5189
      116     5190    1   DCL KNT_SCODE_ADDR PTR CONSTANT SYMDEF INIT(ADDR(KNT_SCODE));
      117     5191
      118     5192        %VLP_SCODE (FPTN=KNT_SCODE,ERR#=%S$PRTCLERR,SEV=G_SEV_SCREECH#,
      119     5193                       STCLASS=CONSTANT SYMDEF,FCG=KN,MID=T,MON='1'B);
      120     5254
      121     5255        /*S* SCREECH_CODE: KNT-S$PRTCLERR
      122     5256             TYPE: SCREECH
      123     5257             MESSAGE: Communications protocol error.
      124     5258        */
      125     5259
      126     5260
      127     5261
      128     5262        %KN$LDCT (NAME=KNT_UNQ_LDCT, STCLASS=STATIC SYMDEF, USER_ENTRY=KNT$SET_UNQSESS);
      129     5507        /*K* KNT_UNQ_LDCT - LDCT.
      130     5508        This LDCT, which is compiled in static memory, is used by
      131     5509        transport to specify an entry point that HMI may call when
      132     5510        items have been removed from COUPLER's RCQ and we have
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:5    
      133     5511        buffered data waiting to be delivered to host session.
      134     5512        */
      135     5513
      136     5514    1   DCL KNT_WAIT_HEAD$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      137     5515        /*K* KNT_WAIT_HEAD$ - PTR.
      138     5516        Contains the address of the first LDCT on the chain of
      139     5517        LDCTs that are waiting for Transport Buffer space.
      140     5518        Waiting LDCTs are chained through KN$LDCT.LNK$.
      141     5519        */
      142     5520
      143     5521    1   DCL KNT_WAIT_COUNT UBIN STATIC SYMDEF INIT(0);
      144     5522        /*K* KNT_WAIT_COUNT - UBIN.
      145     5523        Contains a count of the LDCTs that are on the chain of LDCTs
      146     5524        that are waiting for Transport Buffer space plus a count of
      147     5525        the Transport connections that need a reassembly buffer.
      148     5526        */
      149     5527
      150     5528    1   DCL KNT$TRC_BUF$ PTR SYMDEF STATIC INIT(ADDR(NIL));
      151     5529        /*K* KNT$TRC_BUF$ - PTR.
      152     5530        Contains the address of the transport trace buffer.
      153     5531        The trace buffer is allocated by GIM$FINISH_INIT
      154     5532        in the unused area within PPUT and the address of
      155     5533        that area is stored here.
      156     5534        */
      157     5535
      158     5536    1   DCL KNT_TRC_BUF# UBIN STATIC SYMDEF INIT(0);
      159     5537        /*K* KNT_TRC_BUF# - UBIN.
      160     5538        Contains the number of entries in the transport
      161     5539        trace buffer.  Initialized by GIM$FINISH_INIT.
      162     5540        */
      163     5541
      164     5542    1   DCL KNT_TRC_X UBIN STATIC SYMDEF INIT(0);
      165     5543        /*K* KNT_TRC_X - UBIN.
      166     5544        Contains the index to the next available entry
      167     5545        in the transport trace buffer.
      168     5546        */
      169     5547
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:6    
      170     5548        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:7    
      171     5549        /*******************************************************************/
      172     5550        /*                                                                 */
      173     5551        /*                                                                 */
      174     5552        /*              Counts that should be in STATS                     */
      175     5553        /*                                                                 */
      176     5554        /*                                                                 */
      177     5555        /*******************************************************************/
      178     5556
      179     5557
      180     5558    1   DCL KNT_DISCARDED_TPDUS UBIN STATIC SYMDEF INIT(0);
      181     5559        /*K* KNT_DISCARDED_TPDUS - UBIN.
      182     5560        Contains a count of number of all TPDUs that have been discarded.
      183     5561        */
      184     5562
      185     5563
      186     5564    1   DCL KNT_CHKSUM_ERR UBIN STATIC SYMDEF INIT(0);
      187     5565        /*K* KNT_CHKSUM_ERR - UBIN.
      188     5566        Contains a count of number of TPDUs that have been discarded
      189     5567        becuase of checksum failure.
      190     5568        */
      191     5569
      192     5570    1   DCL KNT_ASSMBUF_ERR UBIN STATIC SYMDEF INIT(0);
      193     5571        /*K* KNT_ASSMBUF_ERR - UBIN.
      194     5572        Contains a count of number of times KNT$GET_RBUF failed
      195     5573        when a reassembly buffer was needed.  The count of these
      196     5574        failures is included in TCTX.RERR.NOBUF.
      197     5575        */
      198     5576
      199     5577        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:8    
      200     5578        /*******************************************************************/
      201     5579        /*                                                                 */
      202     5580        /*                                                                 */
      203     5581        /*              Defaults for transport options                     */
      204     5582        /*                                                                 */
      205     5583        /*                                                                 */
      206     5584        /*******************************************************************/
      207     5585
      208     5586
      209     5587    1   DCL KNT_DEFAULT_TPDUSZ UBIN STATIC SYMDEF INIT(0);
      210     5588        /*K* KNT_DEFAULT_TPDUSZ - UBIN.
      211     5589        Contains a value to be used to determine the default tpdu size.
      212     5590        This is an index into K_TPDUSZ_VALUES.  Valid values are 7 through 13.
      213     5591        If outside of this range, 13 (8192 bytes) will be assumed.
      214     5592        This default applies to CP-6 transport connections only.
      215     5593        */
      216     5594
      217     5595    1   DCL KNT_DEFAULT_EXTENDED UBIN STATIC SYMDEF INIT(1);
      218     5596        /*K* KNT_DEFAULT_EXTENDED - UBIN.
      219     5597        If set to zero will cause all outbound transport class 4
      220     5598        connections to use the normal formats.  The default is to
      221     5599        use the extended format, thereby allowing for a larger
      222     5600        window size.
      223     5601        */
      224     5602
      225     5603    1   DCL KNT_DEFAULT_CLASS UBIN STATIC SYMDEF INIT(4);
      226     5604        /*K* KNT_DEFAULT_CLASS - UBIN.
      227     5605        Specifies the transport class that session is to
      228     5606        choose for all connections that are not QDP.
      229     5607        */
      230     5608
      231     5609    1   DCL KNT_DEFAULT_QOS UBIN STATIC SYMDEF INIT(0);
      232     5610        /*K* KNT_DEFAULT_QOS - UBIN.
      233     5611        Specifies the transport QOS that session is to
      234     5612        choose for all connections that are not QDP.
      235     5613        */
      236     5614
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:9    
      237     5615    1   DCL KNT_DEFAULT_CHKSUM UBIN STATIC SYMDEF INIT(1);
      238     5616        /*K* KNT_DEFAULT_CHKSUM - UBIN.
      239     5617        If set to zero will cause all outbound transport connections
      240     5618        to be created with the non-use of the checksum facility.
      241     5619        */
      242     5620
      243     5621    1   DCL KNT_DO_CHKSUM UBIN STATIC SYMDEF INIT(1);
      244     5622        /*K* KNT_DO_CHKSUM - UBIN.
      245     5623        If set to zero will cause all checking of checksums to
      246     5624        be inhibited.
      247     5625        */
      248     5626
      249     5627    1   DCL KNT_WINDOW_NORMAL UBIN STATIC SYMDEF INIT(15);
      250     5628        /*K* KNT_WINDOW_NORMAL - UBIN.
      251     5629        Contains the default transport window size for transport connections
      252     5630        that use the normal formats.
      253     5631        The default for the default is 15.
      254     5632        */
      255     5633
      256     5634    1   DCL KNT_WINDOW_EXTENDED UBIN STATIC SYMDEF INIT(40);
      257     5635        /*K* KNT_WINDOW_EXTENDED - UBIN.
      258     5636        Contains the default transport window size for transport connections
      259     5637        that use the extended formats.
      260     5638        The default for the default is 40.
      261     5639        */
      262     5640
      263     5641    1   DCL KNT_HOLDBACK UBIN STATIC SYMDEF INIT(5);
      264     5642        /*K* KNT_HOLDBACK - UBIN.
      265     5643        Contains the maximum number of unacked messages that may be
      266     5644        in the receive window.
      267     5645        */
      268     5646
      269     5647
      270     5648        /* knt_retran_tpdu#, knt_max_retry and knt_retran_timer values
      271     5649           all have to be considered together.  The timeout value for
      272     5650           HDLC also has to be taken into consiceration.
      273     5651        */
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:10   
      274     5652
      275     5653    1   DCL KNT_RETRAN_TPDU# UBIN STATIC SYMDEF INIT(10);
      276     5654        /*K* KNT_RETRAN_TPDU# - UBIN.
      277     5655        Contains the maximum number of unacked messages that are to
      278     5656        be retransmitted when the retranmission timer expires.
      279     5657        */
      280     5658
      281     5659    1   DCL KNT_MAX_RETRY UBIN STATIC SYMDEF INIT(6);
      282     5660        /*K* KNT_MAX_RETRY - UBIN.
      283     5661        Contains the default value to determine how many times
      284     5662        to attempt to resend an un-ACKed TPDU before beginning
      285     5663        the disconnect process.
      286     5664        The default for the default is 6.
      287     5665        */
      288     5666
      289     5667    1   DCL KNT_RETRAN_TIMER UBIN STATIC SYMDEF INIT(25);
      290     5668        /*K* KNT_RETRAN_TIMER - UBIN.
      291     5669        Contains the default value for the retransmission timer
      292     5670        expressed in seconds.  The default is 25.
      293     5671        */
      294     5672
      295     5673    1   DCL KNT_WINDOW_TIMER UBIN STATIC SYMDEF INIT(20);
      296     5674        /*K* KNT_WINDOW_TIMER - UBIN.
      297     5675        Contains the default value for the window timer
      298     5676        expressed in seconds.  The default is 20.
      299     5677        */
      300     5678
      301     5679    1   DCL KNT_FCCWINDOW_TIMER UBIN STATIC SYMDEF INIT(260);
      302     5680        /*K* KNT_FCCWINDOW_TIMER - UBIN.
      303     5681        Contains the default value for the keep-alive window timer,
      304     5682        expressed in seconds.  The default is 260.
      305     5683        */
      306     5684
      307     5685    1   DCL KNT_INACTIVITY_TIMER UBIN STATIC SYMDEF INIT(900);
      308     5686        /*K* KNT_INACTIVITY_TIMER - UBIN.
      309     5687        Contains the default value for the inactivity timer
      310     5688        expressed in seconds.  The default is 900 (15 min).
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:11   
      311     5689        */
      312     5690
      313     5691    1   DCL KNT_REFERENCE_TIMER UBIN STATIC SYMDEF INIT(360);
      314     5692        /*K* KNT_REFERENCE_TIMER - UBIN.
      315     5693        Contains the default value for the reference timer
      316     5694        expressed in seconds.  The default is 360 (6 min).
      317     5695        */
      318     5696
      319     5697
      320     5698        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:12   
      321     5699        /*******************************************************************/
      322     5700        /*                                                                 */
      323     5701        /*                                                                 */
      324     5702        /*     Options that may be set to aid debugging transport          */
      325     5703        /*                                                                 */
      326     5704        /*                                                                 */
      327     5705        /*******************************************************************/
      328     5706
      329     5707
      330     5708    1   DCL KNT_TIMER_SCREECH UBIN STATIC SYMDEF INIT(0);
      331     5709        /*K* KNT_TIMER_SCREECH - UBIN.
      332     5710        If set to non-zero will cause the KNT$TTIMER to screech the fep
      333     5711        when entered with what appears to be stale timer info.
      334     5712        */
      335     5713
      336     5714    1   DCL KNT_ERROR_SCREECH UBIN STATIC SYMDEF INIT(0);
      337     5715        /*K* KNT_ERROR_SCREECH - UBIN.
      338     5716        If set to non-zero will cause the transport to call screech
      339     5717        instead of just logging the error tpdu.
      340     5718        */
      341     5719
      342     5720    1   DCL KNT_BUFFER_SCREECH UBIN STATIC SYMDEF INIT(0);
      343     5721        /*K* KNT_BUFFER_SCREECH - UBIN.
      344     5722        If set to non-zero will cause a screech if we run out of transport
      345     5723        buffers.
      346     5724        */
      347     5725
      348     5726    1   DCL KNT_TRACE_INTERMEDIATE UBIN STATIC SYMDEF INIT(0);
      349     5727        /*K* KNT_TRACE_INTERMEDIATE - UBIN.
      350     5728        If set to non-zero will cause a trace of most of the tpdus
      351     5729        associated with an intermediate transport connection.
      352     5730        */
      353     5731
      354     5732    1   DCL KNT_TRACE_CLASS4 UBIN STATIC SYMDEF INIT(0);
      355     5733        /*K* KNT_TRACE_CLASS4 - UBIN.
      356     5734        If set to non-zero will cause a trace of most of the tpdus
      357     5735        associated with all class 4 transport connection.
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:13   
      358     5736        */
      359     5737
      360     5738    1   DCL KNT_TRACE_OSI UBIN STATIC SYMDEF INIT(0);
      361     5739        /*K* KNT_TRACE_OSI - UBIN.
      362     5740        If set to non-zero will cause a trace of most of the tpdus
      363     5741        associated with all OSI transport connection.
      364     5742        */
      365     5743
      366     5744
      367     5745    1   END KNT_DATA_D;
      368     5746        %EOD;

PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:14   
--  Include file information  --

   KN_DATA_M.:E05TOU  is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT_DATA_D.

   No code generated for procedure KNT_DATA_D .
   Procedure KNT_DATA_D requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:15   

 Object Unit name= KNT_DATA_D                                 File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:08:40.08 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     55     37  KNT_DATA_D
    1   Data  even  none    61     3D  KNT_DATA_D
    2   Proc  even  none     0      0  KNT_DATA_D

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes     ~proc       0  KNT_DATA_D
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:16   

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  K_TSAP_SZ                          0      1  K_NSAP_SZ
    0      2  K_TPDU_SIZE                        0     12  K_TPDU_SIZE_EXT
    0     22  K_TPDUSZ_VALUES                    0     30  K_CKSUM_INIT
    1      0  KV_B_POOL#                         1      1  KV_B_POOL$
    0     32  KNT_SCODE_ADDR                     0     34  KNT_SCODE
    1      D  KNT_UNQ_LDCT                       1     1D  KNT_WAIT_HEAD$
    1     1F  KNT_WAIT_COUNT                     1     20  KNT$TRC_BUF$
    1     22  KNT_TRC_BUF#                       1     23  KNT_TRC_X
    1     24  KNT_DISCARDED_TPDUS                1     25  KNT_CHKSUM_ERR
    1     26  KNT_ASSMBUF_ERR                    1     27  KNT_DEFAULT_TPDUSZ
    1     28  KNT_DEFAULT_EXTENDED               1     29  KNT_DEFAULT_CLASS
    1     2A  KNT_DEFAULT_QOS                    1     2B  KNT_DEFAULT_CHKSUM
    1     2C  KNT_DO_CHKSUM                      1     2D  KNT_WINDOW_NORMAL
    1     2E  KNT_WINDOW_EXTENDED                1     2F  KNT_HOLDBACK
    1     30  KNT_RETRAN_TPDU#                   1     31  KNT_MAX_RETRY
    1     32  KNT_RETRAN_TIMER                   1     33  KNT_WINDOW_TIMER
    1     34  KNT_FCCWINDOW_TIMER                1     35  KNT_INACTIVITY_TIMER
    1     36  KNT_REFERENCE_TIMER                1     37  KNT_TIMER_SCREECH
    1     38  KNT_ERROR_SCREECH                  1     39  KNT_BUFFER_SCREECH
    1     3A  KNT_TRACE_INTERMEDIATE             1     3B  KNT_TRACE_CLASS4
    1     3C  KNT_TRACE_OSI

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KNT$SET_UNQSESS
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:17   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:18   

        1        1        /*M* KNT$MISC - Miscellaneous routines used by Fep transport. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
        8        8
        9        9        /*P* NAME: KNT$MISC
       10       10
       11       11        The file KNT$MISC contains the following modules/routines:
       12       12
       13       13        KNT_DATA_D
       14       14        KNT$DSESSION
       15       15        KNT$GETBUF and KNT$RELBUF
       16       16        KNT$RLS_CHAIN
       17       17        KNT$RETRANS
       18       18        KNT$TTIMER
       19       19        KNT$SET_UNQSESS
       20       20        KNT$UNQ
       21       21        KNT$TRACE
       22       22        */
       23       23
       24       24        /*M* KNT_DATA_D - Data used by the transport layer.   */
       25       25        /*X*  MEC,MOC,EXM=20,CLM=30,CRM=80                                */
       26       26
       27       27
       28       28        /*F* NAME: KNT_DATA_D
       29       29
       30       30        */
       31       31        KNT_DATA_D: PROC;
       32       32
       33       33        %INCLUDE K_TRANSPORT_E;
       34      358        %INCLUDE K_TRANSPORT_M;
       35     2142        %INCLUDE K_ADDRESS_M;
       36     2645        %INCLUDE K_SCODE_C;
       37     2730        %INCLUDE KN_DATA_M;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:19   
       38     4516 S      %INCLUDE GU_LCP6_M;
       39     4517
       40     4518    1   DCL KNT$SET_UNQSESS ENTRY;
       41     4519
       42     4520                                      /* Based data used to determine byte sizes      */
       43     4521        %K$TPDU_CR_CC (NAME=K$TPDU_C, ALGN=CALIGNED);
       44     4590        %K$TPDU_DR (ALGN=CALIGNED);
       45     4633        %K$TPDU_DC (ALGN=CALIGNED);
       46     4672        %K$TPDU_DT (ALGN=CALIGNED);
       47     4722        %K$TPDU_DT_EXT (ALGN=CALIGNED);
       48     4786        %K$TPDU_AK (ALGN=CALIGNED);
       49     4834        %K$TPDU_AK_EXT (ALGN=CALIGNED);
       50     4878        %K$TPDU_EA (ALGN=CALIGNED);
       51     4904        %K$TPDU_EA_EXT (ALGN=CALIGNED);
       52     4930        %K$TPDU_ER (ALGN=CALIGNED);
       53     4969        %K$TPDU_CP6 (ALGN=CALIGNED);
       54     5004
       55     5005        %K$NSAP;
       56     5057        %K$TSAP;
       57     5092
       58     5093        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:20   
       59     5094
       60     5095    1   DCL K_TSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$TSAP));
       61     5096    1   DCL K_NSAP_SZ UBIN CONSTANT SYMDEF INIT(LENGTHC(K$NSAP));
       62     5097
       63     5098    1   DCL K_TPDU_SIZE(0:15) SBIN CONSTANT SYMDEF INIT(
       64     5099    1           LENGTHC(K$TPDU_CP6),
       65     5100    1           LENGTHC(K$TPDU_DT),
       66     5101    1           LENGTHC(K$TPDU_EA),
       67     5102    1           255/* 3 is not used*/,
       68     5103    1           255/* 4 is not used*/,
       69     5104    1           255/* RJ only used with class 1*/,
       70     5105    1           LENGTHC(K$TPDU_AK),
       71     5106    1           LENGTHC(K$TPDU_ER),
       72     5107    1           LENGTHC(K$TPDU_DR),
       73     5108    1           255/* 9 is not used*/,
       74     5109    1           255/* 10 is not used*/,
       75     5110    1           255/* 11 is not used*/,
       76     5111    1           LENGTHC(K$TPDU_DC),
       77     5112    1           LENGTHC(K$TPDU_C),
       78     5113    1           LENGTHC(K$TPDU_C),
       79     5114    1           LENGTHC(K$TPDU_DT));
       80     5115
       81     5116    1   DCL K_TPDU_SIZE_EXT(0:15) SBIN CONSTANT SYMDEF INIT(
       82     5117    1           LENGTHC(K$TPDU_CP6),
       83     5118    1           LENGTHC(K$TPDU_DT_EXT),
       84     5119    1           LENGTHC(K$TPDU_EA_EXT),
       85     5120    1           255/* 3 is not used*/,
       86     5121    1           255/* 4 is not used*/,
       87     5122    1           255/* RJ only used with class 1*/,
       88     5123    1           LENGTHC(K$TPDU_AK_EXT),
       89     5124    1           LENGTHC(K$TPDU_ER),
       90     5125    1           LENGTHC(K$TPDU_DR),
       91     5126    1           255/* 9 is not used*/,
       92     5127    1           255/* 10 is not used*/,
       93     5128    1           255/* 11 is not used*/,
       94     5129    1           LENGTHC(K$TPDU_DC),
       95     5130    1           LENGTHC(K$TPDU_C),
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:21   
       96     5131    1           LENGTHC(K$TPDU_C),
       97     5132    1           LENGTHC(K$TPDU_DT_EXT));
       98     5133
       99     5134
      100     5135
      101     5136    1   DCL K_TPDUSZ_VALUES(0:13) SBIN CONSTANT SYMDEF INIT(
      102     5137    1                   0,0,0,0,0,0,0,
      103     5138    1                   128,256,512,1024,2048,4096,8192);
      104     5139
      105     5140        /*K* K_TPDUSZ_VALUES - ARRAY(0:13).
      106     5141        Contains the maximum TPDU size given a value from K$TPARM_TPDU.SIZE
      107     5142        to be used as an index.  See K_TPDUSIZE_equ in file K_TRANSPORT_E.
      108     5143        */
      109     5144
      110     5145
      111     5146        %K$TPARM_CHKSUM (NAME=K_CKSUM_INIT, STCLASS = CONSTANT SYMDEF);
      112     5186
      113     5187    1   DCL KV_B_POOL# UBIN WORD STATIC SYMDEF INIT(0);
      114     5188    1   DCL KV_B_POOL$(0:5) PTR STATIC SYMDEF INIT(ADDR(NIL)*0);
      115     5189
      116     5190    1   DCL KNT_SCODE_ADDR PTR CONSTANT SYMDEF INIT(ADDR(KNT_SCODE));
      117     5191
      118     5192        %VLP_SCODE (FPTN=KNT_SCODE,ERR#=%S$PRTCLERR,SEV=G_SEV_SCREECH#,
      119     5193                       STCLASS=CONSTANT SYMDEF,FCG=KN,MID=T,MON='1'B);
      120     5254
      121     5255        /*S* SCREECH_CODE: KNT-S$PRTCLERR
      122     5256             TYPE: SCREECH
      123     5257             MESSAGE: Communications protocol error.
      124     5258        */
      125     5259
      126     5260
      127     5261
      128     5262        %KN$LDCT (NAME=KNT_UNQ_LDCT, STCLASS=STATIC SYMDEF, USER_ENTRY=KNT$SET_UNQSESS);
      129     5507        /*K* KNT_UNQ_LDCT - LDCT.
      130     5508        This LDCT, which is compiled in static memory, is used by
      131     5509        transport to specify an entry point that HMI may call when
      132     5510        items have been removed from COUPLER's RCQ and we have
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:22   
      133     5511        buffered data waiting to be delivered to host session.
      134     5512        */
      135     5513
      136     5514    1   DCL KNT_WAIT_HEAD$ PTR STATIC SYMDEF INIT(ADDR(NIL));
      137     5515        /*K* KNT_WAIT_HEAD$ - PTR.
      138     5516        Contains the address of the first LDCT on the chain of
      139     5517        LDCTs that are waiting for Transport Buffer space.
      140     5518        Waiting LDCTs are chained through KN$LDCT.LNK$.
      141     5519        */
      142     5520
      143     5521    1   DCL KNT_WAIT_COUNT UBIN STATIC SYMDEF INIT(0);
      144     5522        /*K* KNT_WAIT_COUNT - UBIN.
      145     5523        Contains a count of the LDCTs that are on the chain of LDCTs
      146     5524        that are waiting for Transport Buffer space plus a count of
      147     5525        the Transport connections that need a reassembly buffer.
      148     5526        */
      149     5527
      150     5528    1   DCL KNT$TRC_BUF$ PTR SYMDEF STATIC INIT(ADDR(NIL));
      151     5529        /*K* KNT$TRC_BUF$ - PTR.
      152     5530        Contains the address of the transport trace buffer.
      153     5531        The trace buffer is allocated by GIM$FINISH_INIT
      154     5532        in the unused area within PPUT and the address of
      155     5533        that area is stored here.
      156     5534        */
      157     5535
      158     5536    1   DCL KNT_TRC_BUF# UBIN STATIC SYMDEF INIT(0);
      159     5537        /*K* KNT_TRC_BUF# - UBIN.
      160     5538        Contains the number of entries in the transport
      161     5539        trace buffer.  Initialized by GIM$FINISH_INIT.
      162     5540        */
      163     5541
      164     5542    1   DCL KNT_TRC_X UBIN STATIC SYMDEF INIT(0);
      165     5543        /*K* KNT_TRC_X - UBIN.
      166     5544        Contains the index to the next available entry
      167     5545        in the transport trace buffer.
      168     5546        */
      169     5547
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:23   
      170     5548        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:24   
      171     5549        /*******************************************************************/
      172     5550        /*                                                                 */
      173     5551        /*                                                                 */
      174     5552        /*              Counts that should be in STATS                     */
      175     5553        /*                                                                 */
      176     5554        /*                                                                 */
      177     5555        /*******************************************************************/
      178     5556
      179     5557
      180     5558    1   DCL KNT_DISCARDED_TPDUS UBIN STATIC SYMDEF INIT(0);
      181     5559        /*K* KNT_DISCARDED_TPDUS - UBIN.
      182     5560        Contains a count of number of all TPDUs that have been discarded.
      183     5561        */
      184     5562
      185     5563
      186     5564    1   DCL KNT_CHKSUM_ERR UBIN STATIC SYMDEF INIT(0);
      187     5565        /*K* KNT_CHKSUM_ERR - UBIN.
      188     5566        Contains a count of number of TPDUs that have been discarded
      189     5567        becuase of checksum failure.
      190     5568        */
      191     5569
      192     5570    1   DCL KNT_ASSMBUF_ERR UBIN STATIC SYMDEF INIT(0);
      193     5571        /*K* KNT_ASSMBUF_ERR - UBIN.
      194     5572        Contains a count of number of times KNT$GET_RBUF failed
      195     5573        when a reassembly buffer was needed.  The count of these
      196     5574        failures is included in TCTX.RERR.NOBUF.
      197     5575        */
      198     5576
      199     5577        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:25   
      200     5578        /*******************************************************************/
      201     5579        /*                                                                 */
      202     5580        /*                                                                 */
      203     5581        /*              Defaults for transport options                     */
      204     5582        /*                                                                 */
      205     5583        /*                                                                 */
      206     5584        /*******************************************************************/
      207     5585
      208     5586
      209     5587    1   DCL KNT_DEFAULT_TPDUSZ UBIN STATIC SYMDEF INIT(0);
      210     5588        /*K* KNT_DEFAULT_TPDUSZ - UBIN.
      211     5589        Contains a value to be used to determine the default tpdu size.
      212     5590        This is an index into K_TPDUSZ_VALUES.  Valid values are 7 through 13.
      213     5591        If outside of this range, 13 (8192 bytes) will be assumed.
      214     5592        This default applies to CP-6 transport connections only.
      215     5593        */
      216     5594
      217     5595    1   DCL KNT_DEFAULT_EXTENDED UBIN STATIC SYMDEF INIT(1);
      218     5596        /*K* KNT_DEFAULT_EXTENDED - UBIN.
      219     5597        If set to zero will cause all outbound transport class 4
      220     5598        connections to use the normal formats.  The default is to
      221     5599        use the extended format, thereby allowing for a larger
      222     5600        window size.
      223     5601        */
      224     5602
      225     5603    1   DCL KNT_DEFAULT_CLASS UBIN STATIC SYMDEF INIT(4);
      226     5604        /*K* KNT_DEFAULT_CLASS - UBIN.
      227     5605        Specifies the transport class that session is to
      228     5606        choose for all connections that are not QDP.
      229     5607        */
      230     5608
      231     5609    1   DCL KNT_DEFAULT_QOS UBIN STATIC SYMDEF INIT(0);
      232     5610        /*K* KNT_DEFAULT_QOS - UBIN.
      233     5611        Specifies the transport QOS that session is to
      234     5612        choose for all connections that are not QDP.
      235     5613        */
      236     5614
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:26   
      237     5615    1   DCL KNT_DEFAULT_CHKSUM UBIN STATIC SYMDEF INIT(1);
      238     5616        /*K* KNT_DEFAULT_CHKSUM - UBIN.
      239     5617        If set to zero will cause all outbound transport connections
      240     5618        to be created with the non-use of the checksum facility.
      241     5619        */
      242     5620
      243     5621    1   DCL KNT_DO_CHKSUM UBIN STATIC SYMDEF INIT(1);
      244     5622        /*K* KNT_DO_CHKSUM - UBIN.
      245     5623        If set to zero will cause all checking of checksums to
      246     5624        be inhibited.
      247     5625        */
      248     5626
      249     5627    1   DCL KNT_WINDOW_NORMAL UBIN STATIC SYMDEF INIT(15);
      250     5628        /*K* KNT_WINDOW_NORMAL - UBIN.
      251     5629        Contains the default transport window size for transport connections
      252     5630        that use the normal formats.
      253     5631        The default for the default is 15.
      254     5632        */
      255     5633
      256     5634    1   DCL KNT_WINDOW_EXTENDED UBIN STATIC SYMDEF INIT(40);
      257     5635        /*K* KNT_WINDOW_EXTENDED - UBIN.
      258     5636        Contains the default transport window size for transport connections
      259     5637        that use the extended formats.
      260     5638        The default for the default is 40.
      261     5639        */
      262     5640
      263     5641    1   DCL KNT_HOLDBACK UBIN STATIC SYMDEF INIT(5);
      264     5642        /*K* KNT_HOLDBACK - UBIN.
      265     5643        Contains the maximum number of unacked messages that may be
      266     5644        in the receive window.
      267     5645        */
      268     5646
      269     5647
      270     5648        /* knt_retran_tpdu#, knt_max_retry and knt_retran_timer values
      271     5649           all have to be considered together.  The timeout value for
      272     5650           HDLC also has to be taken into consiceration.
      273     5651        */
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:27   
      274     5652
      275     5653    1   DCL KNT_RETRAN_TPDU# UBIN STATIC SYMDEF INIT(10);
      276     5654        /*K* KNT_RETRAN_TPDU# - UBIN.
      277     5655        Contains the maximum number of unacked messages that are to
      278     5656        be retransmitted when the retranmission timer expires.
      279     5657        */
      280     5658
      281     5659    1   DCL KNT_MAX_RETRY UBIN STATIC SYMDEF INIT(6);
      282     5660        /*K* KNT_MAX_RETRY - UBIN.
      283     5661        Contains the default value to determine how many times
      284     5662        to attempt to resend an un-ACKed TPDU before beginning
      285     5663        the disconnect process.
      286     5664        The default for the default is 6.
      287     5665        */
      288     5666
      289     5667    1   DCL KNT_RETRAN_TIMER UBIN STATIC SYMDEF INIT(25);
      290     5668        /*K* KNT_RETRAN_TIMER - UBIN.
      291     5669        Contains the default value for the retransmission timer
      292     5670        expressed in seconds.  The default is 25.
      293     5671        */
      294     5672
      295     5673    1   DCL KNT_WINDOW_TIMER UBIN STATIC SYMDEF INIT(20);
      296     5674        /*K* KNT_WINDOW_TIMER - UBIN.
      297     5675        Contains the default value for the window timer
      298     5676        expressed in seconds.  The default is 20.
      299     5677        */
      300     5678
      301     5679    1   DCL KNT_FCCWINDOW_TIMER UBIN STATIC SYMDEF INIT(260);
      302     5680        /*K* KNT_FCCWINDOW_TIMER - UBIN.
      303     5681        Contains the default value for the keep-alive window timer,
      304     5682        expressed in seconds.  The default is 260.
      305     5683        */
      306     5684
      307     5685    1   DCL KNT_INACTIVITY_TIMER UBIN STATIC SYMDEF INIT(900);
      308     5686        /*K* KNT_INACTIVITY_TIMER - UBIN.
      309     5687        Contains the default value for the inactivity timer
      310     5688        expressed in seconds.  The default is 900 (15 min).
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:28   
      311     5689        */
      312     5690
      313     5691    1   DCL KNT_REFERENCE_TIMER UBIN STATIC SYMDEF INIT(360);
      314     5692        /*K* KNT_REFERENCE_TIMER - UBIN.
      315     5693        Contains the default value for the reference timer
      316     5694        expressed in seconds.  The default is 360 (6 min).
      317     5695        */
      318     5696
      319     5697
      320     5698        %EJECT;
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:29   
      321     5699        /*******************************************************************/
      322     5700        /*                                                                 */
      323     5701        /*                                                                 */
      324     5702        /*     Options that may be set to aid debugging transport          */
      325     5703        /*                                                                 */
      326     5704        /*                                                                 */
      327     5705        /*******************************************************************/
      328     5706
      329     5707
      330     5708    1   DCL KNT_TIMER_SCREECH UBIN STATIC SYMDEF INIT(0);
      331     5709        /*K* KNT_TIMER_SCREECH - UBIN.
      332     5710        If set to non-zero will cause the KNT$TTIMER to screech the fep
      333     5711        when entered with what appears to be stale timer info.
      334     5712        */
      335     5713
      336     5714    1   DCL KNT_ERROR_SCREECH UBIN STATIC SYMDEF INIT(0);
      337     5715        /*K* KNT_ERROR_SCREECH - UBIN.
      338     5716        If set to non-zero will cause the transport to call screech
      339     5717        instead of just logging the error tpdu.
      340     5718        */
      341     5719
      342     5720    1   DCL KNT_BUFFER_SCREECH UBIN STATIC SYMDEF INIT(0);
      343     5721        /*K* KNT_BUFFER_SCREECH - UBIN.
      344     5722        If set to non-zero will cause a screech if we run out of transport
      345     5723        buffers.
      346     5724        */
      347     5725
      348     5726    1   DCL KNT_TRACE_INTERMEDIATE UBIN STATIC SYMDEF INIT(0);
      349     5727        /*K* KNT_TRACE_INTERMEDIATE - UBIN.
      350     5728        If set to non-zero will cause a trace of most of the tpdus
      351     5729        associated with an intermediate transport connection.
      352     5730        */
      353     5731
      354     5732    1   DCL KNT_TRACE_CLASS4 UBIN STATIC SYMDEF INIT(0);
      355     5733        /*K* KNT_TRACE_CLASS4 - UBIN.
      356     5734        If set to non-zero will cause a trace of most of the tpdus
      357     5735        associated with all class 4 transport connection.
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:30   
      358     5736        */
      359     5737
      360     5738    1   DCL KNT_TRACE_OSI UBIN STATIC SYMDEF INIT(0);
      361     5739        /*K* KNT_TRACE_OSI - UBIN.
      362     5740        If set to non-zero will cause a trace of most of the tpdus
      363     5741        associated with all OSI transport connection.
      364     5742        */
      365     5743
      366     5744
      367     5745    1   END KNT_DATA_D;
      368     5746        %EOD;

PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:31   
--  Include file information  --

   KN_DATA_M.:E05TOU  is referenced.
   K_SCODE_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT_DATA_D.
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:32   

 **** Variables and constants ****

  ****  Section 000 RoData KNT_DATA_D

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    34-0-0/w STRC(48)    r     1 KNT_SCODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(176)   r     1 K$NSAP                     0-0-0/c STRC(40)    r     1 K$TPDU_AK
     0-0-0/c STRC(80)    r     1 K$TPDU_AK_EXT              0-0-0/c STRC(56)    r     1 K$TPDU_C
     0-0-0/c STRC(32)    r     1 K$TPDU_CP6                 0-0-0/c STRC(48)    r     1 K$TPDU_DC
     0-0-0/c STRC(56)    r     1 K$TPDU_DR                  0-0-0/c STRC(40)    r     1 K$TPDU_DT
     0-0-0/c STRC(64)    r     1 K$TPDU_DT_EXT              0-0-0/c STRC(40)    r     1 K$TPDU_EA
     0-0-0/c STRC(64)    r     1 K$TPDU_EA_EXT              0-0-0/c STRC(40)    r     1 K$TPDU_ER
     0-0-0/w STRC(272)   r     1 K$TSAP


   No code generated for procedure KNT_DATA_D .
   Procedure KNT_DATA_D requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:34   
          MINI XREF LISTING

K$NSAP
      5021**DCL      5096--DCLINIT
K$NSAP.ADDRESS_N
      5053**DCL      5054--REDEF
K$TPDU_AK
      4802**DCL      5105--DCLINIT
K$TPDU_AK_EXT
      4850**DCL      5123--DCLINIT
K$TPDU_C
      4537**DCL      5112--DCLINIT  5113--DCLINIT  5130--DCLINIT  5131--DCLINIT
K$TPDU_CP6
      4985**DCL      5099--DCLINIT  5117--DCLINIT
K$TPDU_DC
      4649**DCL      5111--DCLINIT  5129--DCLINIT
K$TPDU_DR
      4606**DCL      5107--DCLINIT  5125--DCLINIT
K$TPDU_DT
      4688**DCL      5100--DCLINIT  5114--DCLINIT
K$TPDU_DT_EXT
      4738**DCL      5118--DCLINIT  5132--DCLINIT
K$TPDU_EA
      4894**DCL      5101--DCLINIT
K$TPDU_EA_EXT
      4920**DCL      5119--DCLINIT
K$TPDU_ER
      4946**DCL      5106--DCLINIT  5124--DCLINIT
K$TSAP
      5073**DCL      5095--DCLINIT
KNT$SET_UNQSESS
      4518**DCL-ENT  5483--DCLINIT
KNT_SCODE
      5220**DCL      5190--DCLINIT
PL6.E3A0      #001=KNT_DATA_D File=KNT$MISC.:E05TSI                              WED 07/30/97 01:08 Page:35   
KNT_UNQ_LDCT.RLCID.LDCTX
      5338**DCL      5345--REDEF    5353--REDEF
KNT_UNQ_LDCT.TRANSPORT_ID
      5372**DCL      5380--REDEF
KNT_UNQ_LDCT.UID
      5402**DCL      5403--REDEF    5412--REDEF

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:36   
      369        1        /*T***********************************************************/
      370        2        /*T*                                                         */
      371        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      372        4        /*T*                                                         */
      373        5        /*T***********************************************************/
      374        6
      375        7        /*M* KNT$DSESSION - Call session from the transport layer.  */
      376        8        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      377        9
      378       10        /*F* NAME: KNT$DSESSION
      379       11
      380       12             PURPOSE:
      381       13                  To assemble message fragments received from the peer and
      382       14                  forward full messages to session.
      383       15
      384       16             DESCRIPTION:
      385       17                  Acknowledgement fragments are returned to peer as
      386       18                  appropriate.
      387       19
      388       20                  Used by KNT$RECV on receipt of TPDU_DT.
      389       21        */
      390       22        KNT$DSESSION: PROC(KN$NETPARM) ALTRET;
      391       23
      392       24        %INCLUDE K_ADDRESS_M;
      393      527        %INCLUDE K_INTERFACE_M;
      394      936        %INCLUDE K_TRANSPORT_E;
      395     1261        %INCLUDE K_TRANSPORT_M;
      396     3045        %INCLUDE KN_DATA_M;
      397     4831        %INCLUDE KNH_MACRO_C;                   /* get CP-6 function code             */
      398     5114        %INCLUDE GH_SCHD_M;
      399     5258        %INCLUDE GH_GATE_M;
      400     5299
      401     5300        %KN$NETPARM;
      402     5453
      403     5454    1   DCL CTX$ PTR;
      404     5455    1   DCL HPTR$ PTR;
      405     5456    1   DCL BUFS_RLSD UBIN;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:37   
      406     5457        %K$TPDU_DT_EXT (STCLASS=AUTO);
      407     5521
      408     5522        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS=BASED);
      409     5605        %K$TCTX (NAME=KN$TCTX,STCLASS="BASED(CTX$)");
      410     6512
      411     6513    1   DCL KNT_SCODE UBIN(32) SYMREF;
      412     6514    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      413     6515    1   DCL KNT_UNQ_LDCT UBIN SYMREF;
      414     6516    1   DCL KNT_ASSMBUF_ERR UBIN SYMREF;
      415     6517
      416     6518        %GATE (FPTN=KNT_LOCKSESS,STCLASS="STATIC SYMDEF");
      417     6537
      418     6538    1   DCL KNT$RELBUF ENTRY(2);
      419     6539    1   DCL KNT$GET_RBUF ENTRY(3) ALTRET;
      420     6540    1   DCL KNN$SEND ENTRY(1) ALTRET;
      421     6541    1   DCL KNS$RECV ENTRY(1) ALTRET;
      422     6542    1   DCL KNT$UNQ_BUFFER ENTRY;
      423     6543    1   DCL KNT$SEND_AK ENTRY(1) ALTRET;
      424     6544    1   DCL KNT$TR_DSSN ENTRY(1);
      425     6545    1   DCL KNT$TR_ERROR ENTRY(1);
      426     6546    1   DCL SCREECH ENTRY(1);
      427     6547
      428     6548        %EJECT;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:38   
      429     6549    1      CTX$ = KN$NETPARM.TCTX$;
      430     6550    1      HPTR$ = ADDR(NIL);
      431     6551    1      BUFS_RLSD = 0;
      432     6552
      433     6553        /* If all of out of sequence TPDUs have been gathered up, deliver them now.
      434     6554        */
      435     6555           %LOCK (G=KNT_LOCKSESS);
      436     6562    2      DO WHILE (KN$TCTX.RECV_HEAD$ ~= ADDR(NIL))    AND
      437     6563    2        (KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ = KN$TCTX.RECV_NEXT);
      438     6564
      439     6565    2           HPTR$ = KN$TCTX.RECV_HEAD$;
      440     6566
      441     6567    2           IF ( HPTR$->FRAG_HDR.FLAGS.EOT = '0'B )
      442     6568    2           THEN CALL CON_CAT(KN$TCTX)
      443     6569    3                WHENALTRETURN DO;
      444     6570                          %UNLOCK (G=KNT_LOCKSESS);
      445     6577    3                     ALTRETURN;
      446     6578    3                     END;
      447     6579
      448     6580    2           HPTR$ = KN$TCTX.RECV_HEAD$;
      449     6581
      450     6582    2           KN$NETPARM.SHDR$ = PINCRC(HPTR$,SIZEC(FRAG_HDR));
      451     6583    2           KN$NETPARM.SHDRSZ = HPTR$->FRAG_HDR.DATA_BSIZE;
      452     6584
      453     6585    2           IF HPTR$->FRAG_HDR.FLAGS.EOT = '0'B
      454     6586    2             OR KN$TCTX.SSN_CRDT <= 0
      455     6587    3           THEN DO;
      456     6588                     %UNLOCK (G=KNT_LOCKSESS);
      457     6595    3                GOTO UNQ_CHECK;
      458     6596    3                END;
      459     6597
      460     6598        /* When entered for a primary connection, call local CP-6 Session.
      461     6599        */
      462     6600    2           KN$NETPARM.FUNCTION = %KN_FCN_DATA;
      463     6601    2           KN$NETPARM.FPT$ = ADDR(NIL);
      464     6602
      465     6603    2           IF KN$TCTX.PRIMARY
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:39   
      466     6604    3           THEN DO;
      467     6605    3                CALL KNS$RECV(KN$NETPARM) ALTRET(LEAVE_BUFFERED);
      468     6606    3                GOTO FIX_LWE;
      469     6607    3                END/*do if primary*/;
      470     6608
      471     6609        /* When entered at RECV_4HOST, build a transport header and call
      472     6610           KNN$SEND to forward to the host.
      473     6611        */
      474     6612    2           K$TPDU_DT_EXT = '0'B;
      475     6613    2           K$TPDU_DT_EXT.LI = LENGTHC(K$TPDU_DT_EXT) -1;
      476     6614    2           K$TPDU_DT_EXT.TYPE = %K_TPDU_TYPE_DT;
      477     6615    2           K$TPDU_DT_EXT.EOT = '1'B;
      478     6616    2           K$TPDU_DT_EXT.TPDU_NR = KN$TCTX.RECV_NEXT;
      479     6617    2           K$TPDU_DT_EXT.DST_REF = KN$TCTX.HOST_REF;
      480     6618
      481     6619    2           KN$NETPARM.UHDRSZ = 0;
      482     6620    2           KN$NETPARM.THDRSZ = K$TPDU_DT_EXT.LI +1;
      483     6621    2           KN$NETPARM.THDR$ = ADDR(K$TPDU_DT_EXT);
      484     6622    2           KN$NETPARM.NODE = KN$TCTX.HOST_NODE;
      485     6623    2           KN$NETPARM.SLDCT$ = ADDR(KNT_UNQ_LDCT);
      486     6624
      487     6625    2           CALL KNN$SEND(KN$NETPARM)
      488     6626    3           WHENRETURN DO;                  /*update lwe if knt$recv didn't*/
      489     6627    3                IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_DSSN(KN$NETPARM);
      490     6628
      491     6629    3                IF KN$TCTX.OPTION.OSI
      492     6630    3                THEN KN$TCTX.SSN_CRDT = KN$TCTX.SSN_CRDT -1;
      493     6631    3   FIX_LWE:
      494     6632
      495     6633    3                KN$TCTX.RECV_LWE = HPTR$->FRAG_HDR.SEQ +1;
      496     6634    3                IF KN$TCTX.RECV_LWE > KN$TCTX.MAXSEQ
      497     6635    3                THEN KN$TCTX.RECV_LWE = KN$TCTX.RECV_LWE - KN$TCTX.MAXSEQ - 1;
      498     6636
      499     6637    3                KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT + 1;
      500     6638    3                IF KN$TCTX.RECV_NEXT > KN$TCTX.MAXSEQ
      501     6639    3                THEN KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT - KN$TCTX.MAXSEQ - 1;
      502     6640
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:40   
      503     6641    3                KN$TCTX.RECV_HEAD$ = HPTR$->FRAG_HDR.LINK$;
      504     6642    3                CALL KNT$RELBUF(HPTR$->FRAG_HDR,KN$TCTX);
      505     6643    3                BUFS_RLSD = BUFS_RLSD +1;
      506     6644    3                END;
      507     6645
      508     6646    3           WHENALTRETURN DO;
      509     6647    3   LEAVE_BUFFERED:
      510     6648    3                KN$TCTX.HOST_CQ_FULL = '1'B;
      511     6649    3                KN$TCTX.RERR.TBUF_NOQ = KN$TCTX.RERR.TBUF_NOQ +1;
      512     6650    3                KN$NETPARM.ERRCODE = 0;
      513     6651                     %UNLOCK (G=KNT_LOCKSESS);
      514     6658    3                RETURN;
      515     6659    3                END;
      516     6660
      517     6661                %UNLOCK (G=KNT_LOCKSESS);
      518     6668                %LOCK (G=KNT_LOCKSESS);
      519     6675    2           END/*do while recv_head$ ~ nil*/;
      520     6676           %UNLOCK (G=KNT_LOCKSESS);
      521     6683
      522     6684    1      IF NOT KN$TCTX.LOST_TPDU AND KN$TCTX.RECV_HEAD$~=ADDR(NIL)
      523     6685    1        AND KN$TCTX.CLASS = 4
      524     6686    2      THEN DO;
      525     6687    2           IF KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ ~= KN$TCTX.RECV_NEXT
      526     6688    3           THEN DO;
      527     6689    3                KN$TCTX.LOST_TPDU = '1'B;
      528     6690    3                KN$TCTX.RERR.LOST_TPDU = KN$TCTX.RERR.LOST_TPDU +1;
      529     6691
      530     6692    3                CALL KNT$SEND_AK(KN$NETPARM);
      531     6693
      532     6694    3                KN$NETPARM.THDRSZ = %K_ERROR_LOST_TPDU;
      533     6695    3                CALL KNT$TR_ERROR(KN$NETPARM);
      534     6696    3                END;
      535     6697    2           END;
      536     6698
      537     6699    1   UNQ_CHECK:
      538     6700    1      IF (BUFS_RLSD > 0)
      539     6701    2      THEN DO;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:41   
      540     6702    2           IF KNT_WAIT_COUNT > 0
      541     6703    2           THEN CALL KNT$UNQ_BUFFER;
      542     6704
      543     6705    2           IF NOT KN$TCTX.LOST_TPDU
      544     6706    3           THEN DO;
      545     6707    3                KN$TCTX.RECV_UWE = KN$TCTX.RECV_LWE + KN$TCTX.RCV_WINDOW_SZ;
      546     6708
      547     6709    3                IF KN$TCTX.CLASS=4 OR
      548     6710    3                  (KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='1'B)
      549     6711    3                THEN CALL KNT$SEND_AK(KN$NETPARM);
      550     6712    3                END;
      551     6713    2           END;
      552     6714
      553     6715    1      RETURN;
      554     6716
      555     6717        %EJECT;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:42   
      556     6718    1   CON_CAT: PROC(KN$TCTX) ALTRET;
      557     6719
      558     6720        %K$TCTX (NAME=KN$TCTX,STCLASS="");
      559     7627
      560     7628    2   DCL TPTR$ PTR;
      561     7629    2   DCL TSIZE UBIN;
      562     7630    2   DCL NUM SBIN;
      563     7631    2   DCL NEXT UBIN(32);
      564     7632    2   DCL DPTR$ CPTR;
      565     7633    2   DCL SPTR$ PTR;
      566     7634    2   DCL THPTR$ PTR;
      567     7635    2   DCL ITEMP SBIN;
      568     7636    2   DCL CHRBSD CHAR(ITEMP) BASED CALIGNED;
      569     7637
      570     7638    2      TPTR$ = KN$TCTX.RECV_HEAD$;
      571     7639    2      TSIZE = 0;
      572     7640    2      NUM =  0;
      573     7641    2      NEXT = KN$TCTX.RECV_NEXT;
      574     7642
      575     7643    3      DO WHILE ( (TPTR$ ~= ADDR(NIL) ) AND
      576     7644    3        (NEXT = TPTR$->FRAG_HDR.SEQ ) );
      577     7645
      578     7646    3           TSIZE = TSIZE + TPTR$->FRAG_HDR.DATA_BSIZE;
      579     7647
      580     7648    3           NEXT = NEXT + 1;
      581     7649    3           IF NEXT > KN$TCTX.MAXSEQ
      582     7650    3           THEN NEXT = 0;
      583     7651
      584     7652    3           NUM = NUM + 1;
      585     7653    3           IF TPTR$->FRAG_HDR.FLAGS.EOT
      586     7654    3           THEN GOTO GOT_EOT;
      587     7655    3           TPTR$ = TPTR$->FRAG_HDR.LINK$;
      588     7656    3           END;
      589     7657
      590     7658    2      RETURN;                         /*dont combine them till all are received*/
      591     7659
      592     7660    2   GOT_EOT:
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:43   
      593     7661    2      IF NUM <= 1 THEN RETURN;
      594     7662
      595     7663    2      CALL KNT$GET_RBUF(TSIZE, TPTR$, KN$TCTX);
      596     7664    2      IF TPTR$ = ADDR(NIL)
      597     7665    3      THEN DO;
      598     7666    3           IF KN$TCTX.NEED_ASSMBUF = '0'B
      599     7667    4           THEN DO;
      600     7668    4                KN$TCTX.NEED_ASSMBUF = '1'B;
      601     7669    4                KNT_WAIT_COUNT = KNT_WAIT_COUNT +1;
      602     7670    4                KNT_ASSMBUF_ERR = KNT_ASSMBUF_ERR +1;
      603     7671    4                END;
      604     7672    3           ALTRETURN;
      605     7673    3           END;
      606     7674
      607     7675    2      KN$TCTX.REASSM_TSDUS = KN$TCTX.REASSM_TSDUS +1;
      608     7676    2      KN$TCTX.REASSM_FRAGS = KN$TCTX.REASSM_FRAGS + NUM;
      609     7677
      610     7678    2      DPTR$ = PINCRC(TPTR$,SIZEC(TPTR$->FRAG_HDR));
      611     7679
      612     7680    3      DO WHILE ( NUM > 0 );
      613     7681    3           NUM = NUM - 1;
      614     7682    3           THPTR$ = KN$TCTX.RECV_HEAD$;
      615     7683    3           TPTR$->FRAG_HDR.SEQ = THPTR$->FRAG_HDR.SEQ;
      616     7684    3           TPTR$->FRAG_HDR.LINK$ = THPTR$->FRAG_HDR.LINK$;
      617     7685    3           TPTR$->FRAG_HDR.FLAGS.EOT = THPTR$->FRAG_HDR.FLAGS.EOT;
      618     7686    3           KN$TCTX.RECV_NEXT = TPTR$->FRAG_HDR.SEQ;
      619     7687    3           SPTR$ = PINCRC(THPTR$,SIZEC(THPTR$->FRAG_HDR));
      620     7688    3           ITEMP = THPTR$->FRAG_HDR.DATA_BSIZE;
      621     7689
      622     7690    3           DPTR$->CHRBSD = SPTR$->CHRBSD;
      623     7691    3           DPTR$ = PINCRC(DPTR$, ITEMP);
      624     7692
      625     7693    3           KN$TCTX.RECV_HEAD$ = THPTR$->FRAG_HDR.LINK$;
      626     7694    3           CALL KNT$RELBUF(THPTR$->FRAG_HDR,KN$TCTX);
      627     7695    3           IF TPTR$->FRAG_HDR.FLAGS.EOT
      628     7696    3           THEN GOTO GOT_EOT2;
      629     7697    3           END;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:44   
      630     7698
      631     7699    2   GOT_EOT2:
      632     7700    2      KN$TCTX.RECV_HEAD$ = TPTR$;
      633     7701    2      RETURN;
      634     7702
      635     7703    2   END CON_CAT;
      636     7704
      637     7705    1   END KNT$DSESSION;
      638     7706        %EOD;

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:45   
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$DSESSION.

   Procedure KNT$DSESSION requires 709 words for executable code.
   Procedure KNT$DSESSION requires 40 words of local(AUTO) storage.

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:46   

 Object Unit name= KNT$DSESSION                               File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:09:08.00 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     3      3  KNT$DSESSION
    1   Proc  even  none   709    2C5  KNT$DSESSION
    2  RoData even  none     2      2  KNT$DSESSION

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KNT$DSESSION

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KNT_LOCKSESS
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:47   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 GHH$UNLOCK
         yes           Std       1 KNT$TR_ERROR
         yes           Std       0 KNT$UNQ_BUFFER
 yes     yes           Std       1 KNS$RECV
 yes     yes           Std       1 KNT$SEND_AK
 yes     yes           Std       1 KNN$SEND
         yes           Std       1 KNT$TR_DSSN
         yes           Std       2 KNT$RELBUF
 yes     yes           Std       3 KNT$GET_RBUF
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6B_BLR
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KNT_WAIT_COUNT                        KNT_UNQ_LDCT                          KNT_ASSMBUF_ERR
r    G$ROS$
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:48   


      369        1        /*T***********************************************************/
      370        2        /*T*                                                         */
      371        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      372        4        /*T*                                                         */
      373        5        /*T***********************************************************/
      374        6
      375        7        /*M* KNT$DSESSION - Call session from the transport layer.  */
      376        8        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      377        9
      378       10        /*F* NAME: KNT$DSESSION
      379       11
      380       12             PURPOSE:
      381       13                  To assemble message fragments received from the peer and
      382       14                  forward full messages to session.
      383       15
      384       16             DESCRIPTION:
      385       17                  Acknowledgement fragments are returned to peer as
      386       18                  appropriate.
      387       19
      388       20                  Used by KNT$RECV on receipt of TPDU_DT.
      389       21        */
      390       22        KNT$DSESSION: PROC(KN$NETPARM) ALTRET;

     22   1 000000  D380 0000 0000  xent KNT$DSESSION    LNJ,B5   X6A_AUTO_1
          1 000003       0028 0001                       DC       40,1

      391       23
      392       24        %INCLUDE K_ADDRESS_M;
      393      527        %INCLUDE K_INTERFACE_M;
      394      936        %INCLUDE K_TRANSPORT_E;
      395     1261        %INCLUDE K_TRANSPORT_M;
      396     3045        %INCLUDE KN_DATA_M;
      397     4831        %INCLUDE KNH_MACRO_C;                   /* get CP-6 function code             */
      398     5114        %INCLUDE GH_SCHD_M;
      399     5258        %INCLUDE GH_GATE_M;
      400     5299
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:49   
      401     5300        %KN$NETPARM;
      402     5453
      403     5454    1   DCL CTX$ PTR;
      404     5455    1   DCL HPTR$ PTR;
      405     5456    1   DCL BUFS_RLSD UBIN;
      406     5457        %K$TPDU_DT_EXT (STCLASS=AUTO);
      407     5521
      408     5522        %K$FRAG_HDR (NAME=FRAG_HDR, STCLASS=BASED);
      409     5605        %K$TCTX (NAME=KN$TCTX,STCLASS="BASED(CTX$)");
      410     6512
      411     6513    1   DCL KNT_SCODE UBIN(32) SYMREF;
      412     6514    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      413     6515    1   DCL KNT_UNQ_LDCT UBIN SYMREF;
      414     6516    1   DCL KNT_ASSMBUF_ERR UBIN SYMREF;
      415     6517
      416     6518        %GATE (FPTN=KNT_LOCKSESS,STCLASS="STATIC SYMDEF");
      417     6537
      418     6538    1   DCL KNT$RELBUF ENTRY(2);
      419     6539    1   DCL KNT$GET_RBUF ENTRY(3) ALTRET;
      420     6540    1   DCL KNN$SEND ENTRY(1) ALTRET;
      421     6541    1   DCL KNS$RECV ENTRY(1) ALTRET;
      422     6542    1   DCL KNT$UNQ_BUFFER ENTRY;
      423     6543    1   DCL KNT$SEND_AK ENTRY(1) ALTRET;
      424     6544    1   DCL KNT$TR_DSSN ENTRY(1);
      425     6545    1   DCL KNT$TR_ERROR ENTRY(1);
      426     6546    1   DCL SCREECH ENTRY(1);
      427     6547
      428     6548        %EJECT;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:50   
      429     6549    1      CTX$ = KN$NETPARM.TCTX$;

   6549   1 000005  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000007  DCC6 001B                            LDB,B5   27,B6
          1 000009  DFC7 0006                            STB,B5   CTX$,AUTO

      430     6550    1      HPTR$ = ADDR(NIL);

   6550   1 00000B  CB80 0000 0000                       LAB,B4   0
          1 00000E  CFC7 0008                            STB,B4   HPTR$,AUTO

      431     6551    1      BUFS_RLSD = 0;

   6551   1 000010  8747 000A                            CL       BUFS_RLSD,AUTO

      432     6552
      433     6553        /* If all of out of sequence TPDUs have been gathered up, deliver them now.
      434     6554        */
      435     6555           %LOCK (G=KNT_LOCKSESS);

   6560   1 000012  BB80 0000 0000  02                   LAB,B3   0
          1 000015  CBF0 0100                            LAB,B4   256,IMO
          1 000017  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 00001A       0001                            DC       s:6562,PREL

      436     6562    2      DO WHILE (KN$TCTX.RECV_HEAD$ ~= ADDR(NIL))    AND

   6562   1 00001B  0F81 0126                            B        s:6675,PREL

      437     6563    2        (KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ = KN$TCTX.RECV_NEXT);
      438     6564
      439     6565    2           HPTR$ = KN$TCTX.RECV_HEAD$;

   6565   1 00001D  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00001F  DCC6 002A                            LDB,B5   42,B6
          1 000021  DFC7 0008                            STB,B5   HPTR$,AUTO

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:51   
      440     6566
      441     6567    2           IF ( HPTR$->FRAG_HDR.FLAGS.EOT = '0'B )

   6567   1 000023  82C5 0006                            LB,'0001'X        6,B5
   6567   1 000025       0001
          1 000026  0501 0014                            BBT      s:6580,PREL

      442     6568    2           THEN CALL CON_CAT(KN$TCTX)

   6568   1 000028  EFC7 0012                            STB,B6   K$TPDU_DT_EXT+7,AUTO
          1 00002A  E3C0 019C                            LNJ,B6   s:0,PREL
          1 00002C       0003                            DC       s:6575,PREL
          1 00002D  0F81 000D                            B        s:6580,PREL

      443     6569    3                WHENALTRETURN DO;

      444     6570                          %UNLOCK (G=KNT_LOCKSESS);

   6575   1 00002F  BB80 0000 0000  02                   LAB,B3   0
          1 000032  CBF0 0100                            LAB,B4   256,IMO
          1 000034  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000037       0001                            DC       s:6577,PREL

      445     6577    3                     ALTRETURN;

   6577   1 000038  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      446     6578    3                     END;
      447     6579
      448     6580    2           HPTR$ = KN$TCTX.RECV_HEAD$;

   6580   1 00003B  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00003D  DCC6 002A                            LDB,B5   42,B6
          1 00003F  DFC7 0008                            STB,B5   HPTR$,AUTO

      449     6581
      450     6582    2           KN$NETPARM.SHDR$ = PINCRC(HPTR$,SIZEC(FRAG_HDR));
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:52   

   6582   1 000041  CBC5 0008                            LAB,B4   8,B5
          1 000043  BCC7 0004                            LDB,B3   @KN$NETPARM,AUTO
          1 000045  CFC3 0008                            STB,B4   8,B3

      451     6583    2           KN$NETPARM.SHDRSZ = HPTR$->FRAG_HDR.DATA_BSIZE;

   6583   1 000047  E845 0001                            LDR,R6   1,B5
          1 000049  EF43 000A                            STR,R6   10,B3

      452     6584
      453     6585    2           IF HPTR$->FRAG_HDR.FLAGS.EOT = '0'B

   6585   1 00004B  82C5 0006                            LB,'0001'X        6,B5
   6585   1 00004D       0001
          1 00004E  0581 0005                            BBF      s:6593,PREL
          1 000050  D846 004A                            LDR,R5   74,B6
          1 000052  5A01 000C                            BGZ,R5   s:6600,PREL

      454     6586    2             OR KN$TCTX.SSN_CRDT <= 0
      455     6587    3           THEN DO;

      456     6588                     %UNLOCK (G=KNT_LOCKSESS);

   6593   1 000054  BB80 0000 0000  02                   LAB,B3   0
          1 000057  CBF0 0100                            LAB,B4   256,IMO
          1 000059  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00005C       0001                            DC       s:6595,PREL

      457     6595    3                GOTO UNQ_CHECK;

   6595   1 00005D  0F81 0132                            B        s:6697,PREL

      458     6596    3                END;
      459     6597
      460     6598        /* When entered for a primary connection, call local CP-6 Session.
      461     6599        */
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:53   
      462     6600    2           KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   6600   1 00005F  4C05                                 LDV,R4   5
          1 000060  CF43 0014                            STR,R4   20,B3

      463     6601    2           KN$NETPARM.FPT$ = ADDR(NIL);

   6601   1 000062  AB80 0000 0000                       LAB,B2   0
          1 000065  AFC3 0019                            STB,B2   25,B3

      464     6602
      465     6603    2           IF KN$TCTX.PRIMARY

   6603   1 000067  82C6 000D                            LB,'0001'X        13,B6
   6603   1 000069       0001
          1 00006A  0581 000B                            BBF      s:6612,PREL

      466     6604    3           THEN DO;

      467     6605    3                CALL KNS$RECV(KN$NETPARM) ALTRET(LEAVE_BUFFERED);

   6605   1 00006C  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 00006E  CBF0 0100                            LAB,B4   256,IMO
          1 000070  E380 0000 0000  xent                 LNJ,B6   KNS$RECV
          1 000073       00A6                            DC       s:6646,PREL

      468     6606    3                GOTO FIX_LWE;

   6606   1 000074  0F81 005D                            B        s:6633,PREL

      469     6607    3                END/*do if primary*/;
      470     6608
      471     6609        /* When entered at RECV_4HOST, build a transport header and call
      472     6610           KNN$SEND to forward to the host.
      473     6611        */
      474     6612    2           K$TPDU_DT_EXT = '0'B;

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:54   
   6612   1 000076  5C08                                 LDV,R5   8
          1 000077  0021                                 ALR      ;
          1 000078       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 00007A       4007 000B                                ALPHANUM(K$TPDU_DT_EXT,AUTO,,R5,FILL)

      475     6613    2           K$TPDU_DT_EXT.LI = LENGTHC(K$TPDU_DT_EXT) -1;

   6613   1 00007C  6C07                                 LDV,R6   7
          1 00007D  437F                                 CSYNC    s:6613,SPREL
          1 00007E  E7C7 000B                            STH,R6   K$TPDU_DT_EXT,AUTO

      476     6614    2           K$TPDU_DT_EXT.TYPE = %K_TPDU_TYPE_DT;

   6614   1 000080  8947 000B                            LBT,'00F0'X       K$TPDU_DT_EXT,AUTO
   6614   1 000082       00F0

      477     6615    2           K$TPDU_DT_EXT.EOT = '1'B;

   6615   1 000083  8947 000D                            LBT,'8000'X       K$TPDU_DT_EXT+2,AUTO
   6615   1 000085       8000

      478     6616    2           K$TPDU_DT_EXT.TPDU_NR = KN$TCTX.RECV_NEXT;

   6616   1 000086  8CC6 0026                            LDI      38,B6
          1 000088  7081                                 DOL,R7   1
          1 000089  8D47 0022                            SDI      ITEMP+2,AUTO
          1 00008B  ABC7 0022                            LAB,B2   ITEMP+2,AUTO
          1 00008D  2C00                                 LDV,R2   0
          1 00008E  6C20                                 LDV,R6   32
          1 00008F  BBC7 000D                            LAB,B3   K$TPDU_DT_EXT+2,AUTO
          1 000091  3C01                                 LDV,R3   1
          1 000092  7C1F                                 LDV,R7   31
          1 000093  D380 0000 0000  xent                 LNJ,B5   X6B_BLR

      479     6617    2           K$TPDU_DT_EXT.DST_REF = KN$TCTX.HOST_REF;

   6617   1 000096  ECC7 0006                            LDB,B6   CTX$,AUTO
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:55   
          1 000098  E846 0003                            LDR,R6   3,B6
          1 00009A  EF47 000C                            STR,R6   K$TPDU_DT_EXT+1,AUTO

      480     6618
      481     6619    2           KN$NETPARM.UHDRSZ = 0;

   6619   1 00009C  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 00009E  8745 0007                            CL       7,B5

      482     6620    2           KN$NETPARM.THDRSZ = K$TPDU_DT_EXT.LI +1;

   6620   1 0000A0  E2C7 000B                            LLH,R6   K$TPDU_DT_EXT,AUTO
          1 0000A2  6E01                                 ADV,R6   1
          1 0000A3  EF45 000D                            STR,R6   13,B5

      483     6621    2           KN$NETPARM.THDR$ = ADDR(K$TPDU_DT_EXT);

   6621   1 0000A5  CBC7 000B                            LAB,B4   K$TPDU_DT_EXT,AUTO
          1 0000A7  CFC5 000B                            STB,B4   11,B5

      484     6622    2           KN$NETPARM.NODE = KN$TCTX.HOST_NODE;

   6622   1 0000A9  D2C6 0004                            LLH,R5   4,B6
          1 0000AB  DF45 0015                            STR,R5   21,B5

      485     6623    2           KN$NETPARM.SLDCT$ = ADDR(KNT_UNQ_LDCT);

   6623   1 0000AD  BB80 0000 0000  xsym                 LAB,B3   KNT_UNQ_LDCT
          1 0000B0  BFC5 0017                            STB,B3   23,B5

      486     6624
      487     6625    2           CALL KNN$SEND(KN$NETPARM)

   6625   1 0000B2  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0000B4  CBF0 0100                            LAB,B4   256,IMO
          1 0000B6  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          1 0000B9       0060                            DC       s:6646,PREL
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:56   

      488     6626    3           WHENRETURN DO;                  /*update lwe if knt$recv didn't*/

      489     6627    3                IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_DSSN(KN$NETPARM);

   6627   1 0000BA  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000BC  82C6 000C                            LB,'0040'X        12,B6
          1 0000BE       0040
          1 0000BF  0581 0009                            BBF      s:6629,PREL

   6627   1 0000C1  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0000C3  CBF0 0100                            LAB,B4   256,IMO
          1 0000C5  E380 0000 0000  xent                 LNJ,B6   KNT$TR_DSSN
          1 0000C8       0001                            DC       s:6629,PREL

      490     6628
      491     6629    3                IF KN$TCTX.OPTION.OSI

   6629   1 0000C9  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000CB  82C6 000C                            LB,'0010'X        12,B6
          1 0000CD       0010
          1 0000CE  0581 0003                            BBF      s:6633,PREL

      492     6630    3                THEN KN$TCTX.SSN_CRDT = KN$TCTX.SSN_CRDT -1;

   6630   1 0000D0  88C6 004A                            DEC      74,B6

      493     6631    3   FIX_LWE:
      494     6632
      495     6633    3                KN$TCTX.RECV_LWE = HPTR$->FRAG_HDR.SEQ +1;

   6633   1 0000D2  ECC7 0008            FIX_LWE         LDB,B6   HPTR$,AUTO
          1 0000D4  DCC7 0006                            LDB,B5   CTX$,AUTO
          1 0000D6  8CC6 0002                            LDI      2,B6
          1 0000D8  8470 0000 0001                       AID      1,IMO
          1 0000DB  8D45 0022                            SDI      34,B5

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:57   
      496     6634    3                IF KN$TCTX.RECV_LWE > KN$TCTX.MAXSEQ

   6634   1 0000DD  84C5 000A                            SID      10,B5
          1 0000DF  0681 000E                            BCF      s:6637,PREL
          1 0000E1  6981 0003                            BNEZ,R6  s:6635,PREL
          1 0000E3  7901 000A                            BEZ,R7   s:6637,PREL

      497     6635    3                THEN KN$TCTX.RECV_LWE = KN$TCTX.RECV_LWE - KN$TCTX.MAXSEQ - 1;

   6635   1 0000E5  8CC5 0022                            LDI      34,B5
          1 0000E7  84C5 000A                            SID      10,B5
          1 0000E9  8470 FFFF FFFF                       AID      -1,IMO
          1 0000EC  8D45 0022                            SDI      34,B5

      498     6636
      499     6637    3                KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT + 1;

   6637   1 0000EE  8AC5 0027                            INC      39,B5
          1 0000F0  8EC5 0026                            CAD      38,B5

      500     6638    3                IF KN$TCTX.RECV_NEXT > KN$TCTX.MAXSEQ

   6638   1 0000F2  8CC5 0026                            LDI      38,B5
          1 0000F4  84C5 000A                            SID      10,B5
          1 0000F6  0681 000E                            BCF      s:6641,PREL
          1 0000F8  6981 0003                            BNEZ,R6  s:6639,PREL
          1 0000FA  7901 000A                            BEZ,R7   s:6641,PREL

      501     6639    3                THEN KN$TCTX.RECV_NEXT = KN$TCTX.RECV_NEXT - KN$TCTX.MAXSEQ - 1;

   6639   1 0000FC  8CC5 0026                            LDI      38,B5
          1 0000FE  84C5 000A                            SID      10,B5
          1 000100  8470 FFFF FFFF                       AID      -1,IMO
          1 000103  8D45 0026                            SDI      38,B5

      502     6640
      503     6641    3                KN$TCTX.RECV_HEAD$ = HPTR$->FRAG_HDR.LINK$;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:58   

   6641   1 000105  CCC6 0004                            LDB,B4   4,B6
          1 000107  CFC5 002A                            STB,B4   42,B5

      504     6642    3                CALL KNT$RELBUF(HPTR$->FRAG_HDR,KN$TCTX);

   6642   1 000109  DFC7 0024                            STB,B5   ITEMP+4,AUTO
          1 00010B  EFC7 0022                            STB,B6   ITEMP+2,AUTO
          1 00010D  BBC7 0022                            LAB,B3   ITEMP+2,AUTO
          1 00010F  CBF0 0200                            LAB,B4   512,IMO
          1 000111  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          1 000114       0001                            DC       s:6643,PREL

      505     6643    3                BUFS_RLSD = BUFS_RLSD +1;

   6643   1 000115  8AC7 000A                            INC      BUFS_RLSD,AUTO

      506     6644    3                END;

   6644   1 000117  0F81 0018                            B        s:6666,PREL

      507     6645
      508     6646    3           WHENALTRETURN DO;

      509     6647    3   LEAVE_BUFFERED:
      510     6648    3                KN$TCTX.HOST_CQ_FULL = '1'B;

   6648   1 000119  ECC7 0006            LEAVE_BUFFERED  LDB,B6   CTX$,AUTO
          1 00011B  8946 000D                            LBT,'0008'X       13,B6
          1 00011D       0008

      511     6649    3                KN$TCTX.RERR.TBUF_NOQ = KN$TCTX.RERR.TBUF_NOQ +1;

   6649   1 00011E  8AC6 001B                            INC      27,B6

      512     6650    3                KN$NETPARM.ERRCODE = 0;

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:59   
   6650   1 000120  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 000122  8745 0016                            CL       22,B5

      513     6651                     %UNLOCK (G=KNT_LOCKSESS);

   6656   1 000124  BB80 0000 0000  02                   LAB,B3   0
          1 000127  CBF0 0100                            LAB,B4   256,IMO
          1 000129  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00012C       0001                            DC       s:6658,PREL

      514     6658    3                RETURN;

   6658   1 00012D  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      515     6659    3                END;
      516     6660
      517     6661                %UNLOCK (G=KNT_LOCKSESS);

   6666   1 000130  BB80 0000 0000  02                   LAB,B3   0
          1 000133  CBF0 0100                            LAB,B4   256,IMO
          1 000135  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 000138       0001                            DC       s:6673,PREL

      518     6668                %LOCK (G=KNT_LOCKSESS);

   6673   1 000139  BB80 0000 0000  02                   LAB,B3   0
          1 00013C  CBF0 0100                            LAB,B4   256,IMO
          1 00013E  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000141       0001                            DC       s:6675,PREL

      519     6675    2           END/*do while recv_head$ ~ nil*/;

   6675   1 000142  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 000144  8DC6 002A                            CMN      42,B6
          1 000146  0901 000B                            BE       s:6681,PREL
          1 000148  DCC6 002A                            LDB,B5   42,B6
          1 00014A  8CC5 0002                            LDI      2,B5
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:60   
          1 00014C  84C6 0026                            SID      38,B6
          1 00014E  6981 0003                            BNEZ,R6  s:6681,PREL
          1 000150  7901 FECC                            BEZ,R7   s:6565,PREL

      520     6676           %UNLOCK (G=KNT_LOCKSESS);

   6681   1 000152  BB80 0000 0000  02                   LAB,B3   0
          1 000155  CBF0 0100                            LAB,B4   256,IMO
          1 000157  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00015A       0001                            DC       s:6684,PREL

      521     6683
      522     6684    1      IF NOT KN$TCTX.LOST_TPDU AND KN$TCTX.RECV_HEAD$~=ADDR(NIL)

   6684   1 00015B  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00015D  82C6 000D                            LB,'0080'X        13,B6
          1 00015F       0080
          1 000160  0501 002F                            BBT      s:6697,PREL
          1 000162  8DC6 002A                            CMN      42,B6
          1 000164  0901 002B                            BE       s:6697,PREL
          1 000166  E2C6 0005                            LLH,R6   5,B6
          1 000168  6D04                                 CMV,R6   4
          1 000169  0981 0026                            BNE      s:6697,PREL

      523     6685    1        AND KN$TCTX.CLASS = 4
      524     6686    2      THEN DO;

      525     6687    2           IF KN$TCTX.RECV_HEAD$->FRAG_HDR.SEQ ~= KN$TCTX.RECV_NEXT

   6687   1 00016B  DCC6 002A                            LDB,B5   42,B6
          1 00016D  8CC5 0002                            LDI      2,B5
          1 00016F  84C6 0026                            SID      38,B6
          1 000171  6981 0003                            BNEZ,R6  s:6689,PREL
          1 000173  7901 001C                            BEZ,R7   s:6697,PREL

      526     6688    3           THEN DO;

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:61   
      527     6689    3                KN$TCTX.LOST_TPDU = '1'B;

   6689   1 000175  8946 000D                            LBT,'0080'X       13,B6
   6689   1 000177       0080

      528     6690    3                KN$TCTX.RERR.LOST_TPDU = KN$TCTX.RERR.LOST_TPDU +1;

   6690   1 000178  8AC6 0018                            INC      24,B6

      529     6691
      530     6692    3                CALL KNT$SEND_AK(KN$NETPARM);

   6692   1 00017A  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 00017C  CBF0 0100                            LAB,B4   256,IMO
          1 00017E  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK
          1 000181       0001                            DC       s:6694,PREL

      531     6693
      532     6694    3                KN$NETPARM.THDRSZ = %K_ERROR_LOST_TPDU;

   6694   1 000182  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000184  E870 00E4                            LDR,R6   228,IMO
          1 000186  EF46 000D                            STR,R6   13,B6

      533     6695    3                CALL KNT$TR_ERROR(KN$NETPARM);

   6695   1 000188  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 00018A  CBF0 0100                            LAB,B4   256,IMO
          1 00018C  E380 0000 0000  xent                 LNJ,B6   KNT$TR_ERROR
          1 00018F       0001                            DC       s:6697,PREL

      534     6696    3                END;

      535     6697    2           END;

      536     6698
      537     6699    1   UNQ_CHECK:
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:62   
      538     6700    1      IF (BUFS_RLSD > 0)

   6700   1 000190  E847 000A            UNQ_CHECK       LDR,R6   BUFS_RLSD,AUTO
          1 000192  6901 0031                            BEZ,R6   s:6715,PREL

      539     6701    2      THEN DO;

      540     6702    2           IF KNT_WAIT_COUNT > 0

   6702   1 000194  D800 0000 0000  xsym                 LDR,R5   KNT_WAIT_COUNT
          1 000197  5901 0007                            BEZ,R5   s:6705,PREL

      541     6703    2           THEN CALL KNT$UNQ_BUFFER;

   6703   1 000199  CBF0 0000                            LAB,B4   0,IMO
          1 00019B  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_BUFFER
          1 00019E       0001                            DC       s:6705,PREL

      542     6704
      543     6705    2           IF NOT KN$TCTX.LOST_TPDU

   6705   1 00019F  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0001A1  82C6 000D                            LB,'0080'X        13,B6
          1 0001A3       0080
          1 0001A4  0501 001F                            BBT      s:6715,PREL

      544     6706    3           THEN DO;

      545     6707    3                KN$TCTX.RECV_UWE = KN$TCTX.RECV_LWE + KN$TCTX.RCV_WINDOW_SZ;

   6707   1 0001A6  F846 0005                            LDR,R7   5,B6
          1 0001A8  F570 00FF                            AND,R7   255,IMO
          1 0001AA  6C00                                 LDV,R6   0
          1 0001AB  8446 0022                            AID      34,B6
          1 0001AD  8D46 0024                            SDI      36,B6

      546     6708
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:63   
      547     6709    3                IF KN$TCTX.CLASS=4 OR

   6709   1 0001AF  D2C6 0005                            LLH,R5   5,B6
          1 0001B1  5D04                                 CMV,R5   4
          1 0001B2  0901 0009                            BE       s:6711,PREL
          1 0001B4  5D02                                 CMV,R5   2
          1 0001B5  0981 000E                            BNE      s:6715,PREL
          1 0001B7  82C6 000C                            LB,'0008'X        12,B6
          1 0001B9       0008
          1 0001BA  0581 0009                            BBF      s:6715,PREL

      548     6710    3                  (KN$TCTX.CLASS=2 AND KN$TCTX.OPTION.CLASS_2_FLOW='1'B)
      549     6711    3                THEN CALL KNT$SEND_AK(KN$NETPARM);

   6711   1 0001BC  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0001BE  CBF0 0100                            LAB,B4   256,IMO
          1 0001C0  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK
          1 0001C3       0001                            DC       s:6715,PREL

      550     6712    3                END;

      551     6713    2           END;

      552     6714
      553     6715    1      RETURN;

   6715   1 0001C4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      554     6716
      555     6717        %EJECT;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:64   
      556     6718    1   CON_CAT: PROC(KN$TCTX) ALTRET;

   6718   1 0001C7  EFC7 0010            CON_CAT         STB,B6   K$TPDU_DT_EXT+5,AUTO

      557     6719
      558     6720        %K$TCTX (NAME=KN$TCTX,STCLASS="");
      559     7627
      560     7628    2   DCL TPTR$ PTR;
      561     7629    2   DCL TSIZE UBIN;
      562     7630    2   DCL NUM SBIN;
      563     7631    2   DCL NEXT UBIN(32);
      564     7632    2   DCL DPTR$ CPTR;
      565     7633    2   DCL SPTR$ PTR;
      566     7634    2   DCL THPTR$ PTR;
      567     7635    2   DCL ITEMP SBIN;
      568     7636    2   DCL CHRBSD CHAR(ITEMP) BASED CALIGNED;
      569     7637
      570     7638    2      TPTR$ = KN$TCTX.RECV_HEAD$;

   7638   1 0001C9  DCC7 0012                            LDB,B5   @KN$TCTX,AUTO
          1 0001CB  CCC5 002A                            LDB,B4   42,B5
          1 0001CD  CFC7 0014                            STB,B4   TPTR$,AUTO

      571     7639    2      TSIZE = 0;

   7639   1 0001CF  8747 0016                            CL       TSIZE,AUTO

      572     7640    2      NUM =  0;

   7640   1 0001D1  8747 0017                            CL       NUM,AUTO

      573     7641    2      NEXT = KN$TCTX.RECV_NEXT;

   7641   1 0001D3  8CC5 0026                            LDI      38,B5
          1 0001D5  8D47 0018                            SDI      NEXT,AUTO

      574     7642
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:65   
      575     7643    3      DO WHILE ( (TPTR$ ~= ADDR(NIL) ) AND

   7643   1 0001D7  0F81 0028                            B        s:7656,PREL

      576     7644    3        (NEXT = TPTR$->FRAG_HDR.SEQ ) );
      577     7645
      578     7646    3           TSIZE = TSIZE + TPTR$->FRAG_HDR.DATA_BSIZE;

   7646   1 0001D9  ECC7 0014                            LDB,B6   TPTR$,AUTO
          1 0001DB  E847 0016                            LDR,R6   TSIZE,AUTO
          1 0001DD  EA46 0001                            ADD,R6   1,B6
          1 0001DF  EF47 0016                            STR,R6   TSIZE,AUTO

      579     7647
      580     7648    3           NEXT = NEXT + 1;

   7648   1 0001E1  8AC7 0019                            INC      NEXT+1,AUTO
          1 0001E3  8EC7 0018                            CAD      NEXT,AUTO

      581     7649    3           IF NEXT > KN$TCTX.MAXSEQ

   7649   1 0001E5  DCC7 0012                            LDB,B5   @KN$TCTX,AUTO
          1 0001E7  8CC7 0018                            LDI      NEXT,AUTO
          1 0001E9  84C5 000A                            SID      10,B5
          1 0001EB  0681 0009                            BCF      s:7652,PREL
          1 0001ED  6981 0003                            BNEZ,R6  s:7650,PREL
          1 0001EF  7901 0005                            BEZ,R7   s:7652,PREL

      582     7650    3           THEN NEXT = 0;

   7650   1 0001F1  8747 0018                            CL       NEXT,AUTO
          1 0001F3  8747 0019                            CL       NEXT+1,AUTO

      583     7651
      584     7652    3           NUM = NUM + 1;

   7652   1 0001F5  8AC7 0017                            INC      NUM,AUTO
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:66   

      585     7653    3           IF TPTR$->FRAG_HDR.FLAGS.EOT

   7653   1 0001F7  82C6 0006                            LB,'0001'X        6,B6
   7653   1 0001F9       0001
          1 0001FA  0501 0014                            BBT      s:7661,PREL

      586     7654    3           THEN GOTO GOT_EOT;
      587     7655    3           TPTR$ = TPTR$->FRAG_HDR.LINK$;

   7655   1 0001FC  CCC6 0004                            LDB,B4   4,B6
          1 0001FE  CFC7 0014                            STB,B4   TPTR$,AUTO

      588     7656    3           END;

   7656   1 000200  8DC7 0014                            CMN      TPTR$,AUTO
          1 000202  0901 0008                            BE       s:7658,PREL
          1 000204  8CC7 0018                            LDI      NEXT,AUTO
          1 000206  84C4 0002                            SID      2,B4
          1 000208  6981 0002                            BNEZ,R6  s:7658,PREL
          1 00020A  794F                                 BEZ,R7   s:7646,SPREL

      589     7657
      590     7658    2      RETURN;                         /*dont combine them till all are received*/

   7658   1 00020B  ECC7 0010                            LDB,B6   K$TPDU_DT_EXT+5,AUTO
          1 00020D  C3C6 0001                            LNJ,B4   1,B6

      591     7659
      592     7660    2   GOT_EOT:
      593     7661    2      IF NUM <= 1 THEN RETURN;

   7661   1 00020F  E847 0017            GOT_EOT         LDR,R6   NUM,AUTO
          1 000211  6D01                                 CMV,R6   1
          1 000212  0A01 0005                            BAG      s:7663,PREL

   7661   1 000214  ECC7 0010                            LDB,B6   K$TPDU_DT_EXT+5,AUTO
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:67   
          1 000216  C3C6 0001                            LNJ,B4   1,B6

      594     7662
      595     7663    2      CALL KNT$GET_RBUF(TSIZE, TPTR$, KN$TCTX);

   7663   1 000218  DFC7 0026                            STB,B5   ITEMP+6,AUTO
          1 00021A  CBC7 0014                            LAB,B4   TPTR$,AUTO
          1 00021C  CFC7 0024                            STB,B4   ITEMP+4,AUTO
          1 00021E  BBC7 0016                            LAB,B3   TSIZE,AUTO
          1 000220  BFC7 0022                            STB,B3   ITEMP+2,AUTO
          1 000222  BBC7 0022                            LAB,B3   ITEMP+2,AUTO
          1 000224  CBF0 0300                            LAB,B4   768,IMO
          1 000226  E380 0000 0000  xent                 LNJ,B6   KNT$GET_RBUF
          1 000229       0001                            DC       s:7664,PREL

      596     7664    2      IF TPTR$ = ADDR(NIL)

   7664   1 00022A  8DC7 0014                            CMN      TPTR$,AUTO
          1 00022C  0981 0015                            BNE      s:7675,PREL

      597     7665    3      THEN DO;

      598     7666    3           IF KN$TCTX.NEED_ASSMBUF = '0'B

   7666   1 00022E  ECC7 0012                            LDB,B6   @KN$TCTX,AUTO
          1 000230  82C6 000D                            LB,'0040'X        13,B6
          1 000232       0040
          1 000233  0501 000A                            BBT      s:7672,PREL

      599     7667    4           THEN DO;

      600     7668    4                KN$TCTX.NEED_ASSMBUF = '1'B;

   7668   1 000235  8946 000D                            LBT,'0040'X       13,B6
   7668   1 000237       0040

      601     7669    4                KNT_WAIT_COUNT = KNT_WAIT_COUNT +1;
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:68   

   7669   1 000238  8A80 0000 0000  xsym                 INC      KNT_WAIT_COUNT

      602     7670    4                KNT_ASSMBUF_ERR = KNT_ASSMBUF_ERR +1;

   7670   1 00023B  8A80 0000 0000  xsym                 INC      KNT_ASSMBUF_ERR

      603     7671    4                END;

      604     7672    3           ALTRETURN;

   7672   1 00023E  ECC7 0010                            LDB,B6   K$TPDU_DT_EXT+5,AUTO
          1 000240  B806                                 LDR,R3   ,B6
          1 000241  C3B6                                 LNJ,B4   ,B6,R3

      605     7673    3           END;
      606     7674
      607     7675    2      KN$TCTX.REASSM_TSDUS = KN$TCTX.REASSM_TSDUS +1;

   7675   1 000242  ECC7 0012                            LDB,B6   @KN$TCTX,AUTO
          1 000244  8AC6 0048                            INC      72,B6

      608     7676    2      KN$TCTX.REASSM_FRAGS = KN$TCTX.REASSM_FRAGS + NUM;

   7676   1 000246  E846 0049                            LDR,R6   73,B6
          1 000248  EA47 0017                            ADD,R6   NUM,AUTO
          1 00024A  EF46 0049                            STR,R6   73,B6

      609     7677
      610     7678    2      DPTR$ = PINCRC(TPTR$,SIZEC(TPTR$->FRAG_HDR));

   7678   1 00024C  DCC7 0014                            LDB,B5   TPTR$,AUTO
          1 00024E  CBC5 0008                            LAB,B4   8,B5
          1 000250  CFC7 001A                            STB,B4   DPTR$,AUTO

      611     7679
      612     7680    3      DO WHILE ( NUM > 0 );
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:69   

   7680   1 000252  D847 0017                            LDR,R5   NUM,AUTO
          1 000254  5A81 0066                            BLEZ,R5  s:7700,PREL

      613     7681    3           NUM = NUM - 1;

   7681   1 000256  88C7 0017                            DEC      NUM,AUTO

      614     7682    3           THPTR$ = KN$TCTX.RECV_HEAD$;

   7682   1 000258  ECC7 0012                            LDB,B6   @KN$TCTX,AUTO
          1 00025A  DCC6 002A                            LDB,B5   42,B6
          1 00025C  DFC7 001E                            STB,B5   THPTR$,AUTO

      615     7683    3           TPTR$->FRAG_HDR.SEQ = THPTR$->FRAG_HDR.SEQ;

   7683   1 00025E  8CC5 0002                            LDI      2,B5
          1 000260  CCC7 0014                            LDB,B4   TPTR$,AUTO
          1 000262  8D44 0002                            SDI      2,B4

      616     7684    3           TPTR$->FRAG_HDR.LINK$ = THPTR$->FRAG_HDR.LINK$;

   7684   1 000264  CCC5 0004                            LDB,B4   4,B5
          1 000266  BCC7 0014                            LDB,B3   TPTR$,AUTO
          1 000268  CFC3 0004                            STB,B4   4,B3

      617     7685    3           TPTR$->FRAG_HDR.FLAGS.EOT = THPTR$->FRAG_HDR.FLAGS.EOT;

   7685   1 00026A  E845 0006                            LDR,R6   6,B5
          1 00026C  CCC7 0014                            LDB,B4   TPTR$,AUTO
          1 00026E  EAC4 0006                            SRM,R6,'0001'X    6,B4
          1 000270       0001

      618     7686    3           KN$TCTX.RECV_NEXT = TPTR$->FRAG_HDR.SEQ;

   7686   1 000271  CCC7 0014                            LDB,B4   TPTR$,AUTO
          1 000273  8CC4 0002                            LDI      2,B4
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:70   
          1 000275  8D46 0026                            SDI      38,B6

      619     7687    3           SPTR$ = PINCRC(THPTR$,SIZEC(THPTR$->FRAG_HDR));

   7687   1 000277  BBC5 0008                            LAB,B3   8,B5
          1 000279  BFC7 001C                            STB,B3   SPTR$,AUTO

      620     7688    3           ITEMP = THPTR$->FRAG_HDR.DATA_BSIZE;

   7688   1 00027B  D845 0001                            LDR,R5   1,B5
          1 00027D  DF47 0020                            STR,R5   ITEMP,AUTO

      621     7689
      622     7690    3           DPTR$->CHRBSD = SPTR$->CHRBSD;

   7690   1 00027F  8CC7 001A                            LDI      DPTR$,AUTO
          1 000281  B856                                 LDR,R3   R6
          1 000282  E570 7FFF                            AND,R6   32767,IMO
          1 000284  8D47 0022                            SDI      ITEMP+2,AUTO
          1 000286  ACC7 0022                            LDB,B2   ITEMP+2,AUTO
          1 000288  304F                                 SOR,R3   15
          1 000289  AFC7 0024                            STB,B2   ITEMP+4,AUTO
          1 00028B  AB83                                 LAB,B2   ,B3
          1 00028C  2C00                                 LDV,R2   0
          1 00028D  E855                                 LDR,R6   R5
          1 00028E  BCC7 0024                            LDB,B3   ITEMP+4,AUTO
          1 000290  0008                                 MMM

      623     7691    3           DPTR$ = PINCRC(DPTR$, ITEMP);

   7691   1 000291  8CC7 001A                            LDI      DPTR$,AUTO
          1 000293  7031                                 DCL,R7   1
          1 000294  8D47 0022                            SDI      ITEMP+2,AUTO
          1 000296  E847 0020                            LDR,R6   ITEMP,AUTO
          1 000298  70F0                                 DAR,R7   16
          1 000299  8447 0022                            AID      ITEMP+2,AUTO
          1 00029B  7071                                 DCR,R7   1
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:71   
          1 00029C  8D47 001A                            SDI      DPTR$,AUTO

      624     7692
      625     7693    3           KN$TCTX.RECV_HEAD$ = THPTR$->FRAG_HDR.LINK$;

   7693   1 00029E  DCC7 001E                            LDB,B5   THPTR$,AUTO
          1 0002A0  CCC5 0004                            LDB,B4   4,B5
          1 0002A2  CFC6 002A                            STB,B4   42,B6

      626     7694    3           CALL KNT$RELBUF(THPTR$->FRAG_HDR,KN$TCTX);

   7694   1 0002A4  EFC7 0024                            STB,B6   ITEMP+4,AUTO
          1 0002A6  DFC7 0022                            STB,B5   ITEMP+2,AUTO
          1 0002A8  BBC7 0022                            LAB,B3   ITEMP+2,AUTO
          1 0002AA  CBF0 0200                            LAB,B4   512,IMO
          1 0002AC  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          1 0002AF       0001                            DC       s:7695,PREL

      627     7695    3           IF TPTR$->FRAG_HDR.FLAGS.EOT

   7695   1 0002B0  ECC7 0014                            LDB,B6   TPTR$,AUTO
          1 0002B2  82C6 0006                            LB,'0001'X        6,B6
          1 0002B4       0001
          1 0002B5  0501 0005                            BBT      s:7700,PREL

      628     7696    3           THEN GOTO GOT_EOT2;
      629     7697    3           END;

   7697   1 0002B7  E847 0017                            LDR,R6   NUM,AUTO
          1 0002B9  6A01 FF9C                            BGZ,R6   s:7681,PREL

      630     7698
      631     7699    2   GOT_EOT2:
      632     7700    2      KN$TCTX.RECV_HEAD$ = TPTR$;

   7700   1 0002BB  ECC7 0014            GOT_EOT2        LDB,B6   TPTR$,AUTO
          1 0002BD  DCC7 0012                            LDB,B5   @KN$TCTX,AUTO
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:72   
          1 0002BF  EFC5 002A                            STB,B6   42,B5

      633     7701    2      RETURN;

   7701   1 0002C1  ECC7 0010                            LDB,B6   K$TPDU_DT_EXT+5,AUTO
          1 0002C3  C3C6 0001                            LNJ,B4   1,B6
      634     7702
      635     7703    2   END CON_CAT;
      636     7704
      637     7705    1   END KNT$DSESSION;
      638     7706        %EOD;

PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:73   
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$DSESSION.
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:74   

 **** Variables and constants ****

  ****  Section 000  Data  KNT$DSESSION

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 KNT_LOCKSESS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM               12-0-0/w PTR         r     1 @KN$TCTX
     A-0-0/w UBIN(16)    r     1 BUFS_RLSD                  6-0-0/w PTR         r     1 CTX$
    1A-0-0/w PTR         r     1 DPTR$                      8-0-0/w PTR         r     1 HPTR$
    20-0-0/w SBIN(16)    r     1 ITEMP                      B-0-0/w STRC(64)    r     1 K$TPDU_DT_EXT
    *0-0-0/w STRC(528)   r     1 KN$NETPARM                *0-0-0/w STRC(2816)  r     1 KN$TCTX
    18-0-0/w UBIN(32)    r     1 NEXT                      17-0-0/w SBIN(16)    r     1 NUM
    1C-0-0/w PTR         r     1 SPTR$                     1E-0-0/w PTR         r     1 THPTR$
    14-0-0/w PTR         r     1 TPTR$                     16-0-0/w UBIN(16)    r     1 TSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_ASSMBUF_ERR            0-0-0/w UBIN(16)    r     1 KNT_UNQ_LDCT
     0-0-0/w UBIN(16)    r     1 KNT_WAIT_COUNT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c ACHR        r     1 CHRBSD                     0-0-0/w STRC(128)   r     1 FRAG_HDR
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:75   
     0-0-0/w STRC(2816)  r     1 KN$TCTX


   Procedure KNT$DSESSION requires 709 words for executable code.
   Procedure KNT$DSESSION requires 40 words of local(AUTO) storage.
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:76   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:77   
          MINI XREF LISTING

BUFS_RLSD
      5456**DCL      6551<<ASSIGN   6643<<ASSIGN   6643>>ASSIGN   6700>>IF
CHRBSD IN PROCEDURE CON_CAT
      7636**DCL      7690<<ASSIGN   7690>>ASSIGN
CON_CAT
      6718**PROC     6568--CALL
CTX$
      5454**DCL      5610--IMP-PTR  6549<<ASSIGN   6562>>DOWHILE  6562>>DOWHILE  6562>>DOWHILE  6565>>ASSIGN
      6568>>CALL     6580>>ASSIGN   6585>>IF       6603>>IF       6616>>ASSIGN   6617>>ASSIGN   6622>>ASSIGN
      6627>>IF       6629>>IF       6630>>ASSIGN   6630>>ASSIGN   6633>>ASSIGN   6634>>IF       6634>>IF
      6635>>ASSIGN   6635>>ASSIGN   6635>>ASSIGN   6637>>ASSIGN   6637>>ASSIGN   6638>>IF       6638>>IF
      6639>>ASSIGN   6639>>ASSIGN   6639>>ASSIGN   6641>>ASSIGN   6642>>CALL     6648>>ASSIGN   6649>>ASSIGN
      6649>>ASSIGN   6684>>IF       6684>>IF       6684>>IF       6687>>IF       6687>>IF       6689>>ASSIGN
      6690>>ASSIGN   6690>>ASSIGN   6705>>IF       6707>>ASSIGN   6707>>ASSIGN   6707>>ASSIGN   6709>>IF
      6709>>IF       6709>>IF
DPTR$ IN PROCEDURE CON_CAT
      7632**DCL      7678<<ASSIGN   7690>>ASSIGN   7691<<ASSIGN   7691>>ASSIGN
FIX_LWE
      6633**LABEL    6606--GOTO
FRAG_HDR
      5539**DCL      6582--ASSIGN   6642<>CALL     7678--ASSIGN   7687--ASSIGN   7694<>CALL
FRAG_HDR.DATA_BSIZE
      5548**DCL      6583>>ASSIGN   7646>>ASSIGN   7688>>ASSIGN
FRAG_HDR.FLAGS.EOT
      5593**DCL      6567>>IF       6585>>IF       7653>>IF       7685<<ASSIGN   7685>>ASSIGN   7695>>IF
FRAG_HDR.LINK$
      5564**DCL      6641>>ASSIGN   7655>>ASSIGN   7684<<ASSIGN   7684>>ASSIGN   7693>>ASSIGN
FRAG_HDR.SEQ
      5552**DCL      5553--REDEF    6562>>DOWHILE  6633>>ASSIGN   6687>>IF       7643>>DOWHILE  7683<<ASSIGN
      7683>>ASSIGN   7686>>ASSIGN
GHH$LOCK
      5298**DCL-ENT  6560--CALL     6673--CALL
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:78   
GHH$UNLOCK
      5298**DCL-ENT  6575--CALL     6593--CALL     6656--CALL     6666--CALL     6681--CALL
GOT_EOT IN PROCEDURE CON_CAT
      7661**LABEL    7654--GOTO
GOT_EOT2 IN PROCEDURE CON_CAT
      7700**LABEL    7696--GOTO
HPTR$
      5455**DCL      6550<<ASSIGN   6565<<ASSIGN   6567>>IF       6580<<ASSIGN   6582>>ASSIGN   6583>>ASSIGN
      6585>>IF       6633>>ASSIGN   6641>>ASSIGN   6642>>CALL
ITEMP IN PROCEDURE CON_CAT
      7635**DCL      7636--IMP-SIZ  7688<<ASSIGN   7690>>ASSIGN   7690>>ASSIGN   7691>>ASSIGN
K$TPDU_DT_EXT
      5473**DCL      6612<<ASSIGN   6613--ASSIGN   6621--ASSIGN
K$TPDU_DT_EXT.DST_REF
      5488**DCL      6617<<ASSIGN
K$TPDU_DT_EXT.EOT
      5495**DCL      6615<<ASSIGN
K$TPDU_DT_EXT.LI
      5474**DCL      6613<<ASSIGN   6620>>ASSIGN
K$TPDU_DT_EXT.TPDU_NR
      5502**DCL      6616<<ASSIGN
K$TPDU_DT_EXT.TYPE
      5481**DCL      6614<<ASSIGN
KN$NETPARM
      5313**DCL        22--PROC     6605<>CALL     6625<>CALL     6627<>CALL     6692<>CALL     6695<>CALL
      6711<>CALL
KN$NETPARM.ERRCODE
      5420**DCL      6650<<ASSIGN
KN$NETPARM.FPT$
      5432**DCL      6601<<ASSIGN
KN$NETPARM.FUNCTION
      5408**DCL      6600<<ASSIGN
KN$NETPARM.MSG$
      5320**DCL      5325--REDEF
KN$NETPARM.NHDR$
      5372**DCL      5373--REDEF
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:79   
KN$NETPARM.NODE
      5415**DCL      6622<<ASSIGN
KN$NETPARM.SHDR$
      5350**DCL      5351--REDEF    6582<<ASSIGN
KN$NETPARM.SHDRSZ
      5356**DCL      6583<<ASSIGN
KN$NETPARM.SLDCT$
      5427**DCL      6623<<ASSIGN
KN$NETPARM.TCTX$
      5437**DCL      6549>>ASSIGN
KN$NETPARM.THDR$
      5361**DCL      5362--REDEF    6621<<ASSIGN
KN$NETPARM.THDRSZ
      5367**DCL      6620<<ASSIGN   6694<<ASSIGN
KN$NETPARM.UHDR$
      5336**DCL      5337--REDEF
KN$NETPARM.UHDRSZ
      5345**DCL      6619<<ASSIGN
KN$TCTX
      5610**DCL      6568<>CALL     6642<>CALL
KN$TCTX.CLASS
      5676**DCL      6684>>IF       6709>>IF       6709>>IF
KN$TCTX.DST_NSAP.ADDRESS_N
      6495**DCL      6496--REDEF
KN$TCTX.HOST_CQ_FULL
      5838**DCL      6648<<ASSIGN
KN$TCTX.HOST_NODE
      5659**DCL      6622>>ASSIGN
KN$TCTX.HOST_REF
      5652**DCL      6617>>ASSIGN
KN$TCTX.LOST_TPDU
      5795**DCL      6684>>IF       6689<<ASSIGN   6705>>IF
KN$TCTX.MAXSEQ
      5714**DCL      6634>>IF       6635>>ASSIGN   6638>>IF       6639>>ASSIGN
KN$TCTX.NODE
      5617**DCL      5630--REDEF
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:80   
KN$TCTX.OPTION.CLASS_2_FLOW
      5748**DCL      6709>>IF
KN$TCTX.OPTION.OSI
      5738**DCL      6629>>IF
KN$TCTX.OPTION.TRACE
      5724**DCL      6627>>IF
KN$TCTX.PRIMARY
      5855**DCL      6603>>IF
KN$TCTX.RCV_WINDOW_SZ
      5682**DCL      6707>>ASSIGN
KN$TCTX.RECV_HEAD$
      6016**DCL      6562>>DOWHILE  6562>>DOWHILE  6565>>ASSIGN   6580>>ASSIGN   6641<<ASSIGN   6684>>IF
      6687>>IF
KN$TCTX.RECV_LWE
      5978**DCL      6633<<ASSIGN   6634>>IF       6635<<ASSIGN   6635>>ASSIGN   6707>>ASSIGN
KN$TCTX.RECV_NEXT
      5997**DCL      6562>>DOWHILE  6616>>ASSIGN   6637<<ASSIGN   6637>>ASSIGN   6638>>IF       6639<<ASSIGN
      6639>>ASSIGN   6687>>IF
KN$TCTX.RECV_UWE
      5988**DCL      6707<<ASSIGN
KN$TCTX.RERR.LOST_TPDU
      5935**DCL      6690<<ASSIGN   6690>>ASSIGN
KN$TCTX.RERR.TBUF_NOQ
      5952**DCL      6649<<ASSIGN   6649>>ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      6431**DCL      6432--REDEF
KN$TCTX.SSN_CRDT
      6139**DCL      6585>>IF       6630<<ASSIGN   6630>>ASSIGN
KN$TCTX.TMR_INACTIVITY.ARG
      6251**DCL      6252--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      6281**DCL      6282--REDEF
KN$TCTX.TMR_RETRAN.ARG
      6192**DCL      6193--REDEF
KN$TCTX.TMR_WINDOW.ARG
      6221**DCL      6222--REDEF
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:81   
KN$TCTX IN PROCEDURE CON_CAT
      6725**DCL      6718--PROC     7663<>CALL     7694<>CALL
KN$TCTX.DST_NSAP.ADDRESS_N IN PROCEDURE CON_CAT
      7610**DCL      7611--REDEF
KN$TCTX.MAXSEQ IN PROCEDURE CON_CAT
      6829**DCL      7649>>IF
KN$TCTX.NEED_ASSMBUF IN PROCEDURE CON_CAT
      6918**DCL      7666>>IF       7668<<ASSIGN
KN$TCTX.NODE IN PROCEDURE CON_CAT
      6732**DCL      6745--REDEF
KN$TCTX.REASSM_FRAGS IN PROCEDURE CON_CAT
      7249**DCL      7676<<ASSIGN   7676>>ASSIGN
KN$TCTX.REASSM_TSDUS IN PROCEDURE CON_CAT
      7244**DCL      7675<<ASSIGN   7675>>ASSIGN
KN$TCTX.RECV_HEAD$ IN PROCEDURE CON_CAT
      7131**DCL      7638>>ASSIGN   7682>>ASSIGN   7693<<ASSIGN   7700<<ASSIGN
KN$TCTX.RECV_NEXT IN PROCEDURE CON_CAT
      7112**DCL      7641>>ASSIGN   7686<<ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N IN PROCEDURE CON_CAT
      7546**DCL      7547--REDEF
KN$TCTX.TMR_INACTIVITY.ARG IN PROCEDURE CON_CAT
      7366**DCL      7367--REDEF
KN$TCTX.TMR_REFERENCE.ARG IN PROCEDURE CON_CAT
      7396**DCL      7397--REDEF
KN$TCTX.TMR_RETRAN.ARG IN PROCEDURE CON_CAT
      7307**DCL      7308--REDEF
KN$TCTX.TMR_WINDOW.ARG IN PROCEDURE CON_CAT
      7336**DCL      7337--REDEF
KNN$SEND
      6540**DCL-ENT  6625--CALL
KNS$RECV
      6541**DCL-ENT  6605--CALL
KNT$GET_RBUF
      6539**DCL-ENT  7663--CALL
KNT$RELBUF
      6538**DCL-ENT  6642--CALL     7694--CALL
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:82   
KNT$SEND_AK
      6543**DCL-ENT  6692--CALL     6711--CALL
KNT$TR_DSSN
      6544**DCL-ENT  6627--CALL
KNT$TR_ERROR
      6545**DCL-ENT  6695--CALL
KNT$UNQ_BUFFER
      6542**DCL-ENT  6703--CALL
KNT_ASSMBUF_ERR
      6516**DCL      7670<<ASSIGN   7670>>ASSIGN
KNT_LOCKSESS
      6530**DCL      6560<>CALL     6575<>CALL     6593<>CALL     6656<>CALL     6666<>CALL     6673<>CALL
      6681<>CALL
KNT_UNQ_LDCT
      6515**DCL      6623--ASSIGN
KNT_WAIT_COUNT
      6514**DCL      6702>>IF       7669<<ASSIGN   7669>>ASSIGN
LEAVE_BUFFERED
      6648**LABEL    6605--CALLALT
NEXT IN PROCEDURE CON_CAT
      7631**DCL      7641<<ASSIGN   7643>>DOWHILE  7648<<ASSIGN   7648>>ASSIGN   7649>>IF       7650<<ASSIGN
NUM IN PROCEDURE CON_CAT
      7630**DCL      7640<<ASSIGN   7652<<ASSIGN   7652>>ASSIGN   7661>>IF       7676>>ASSIGN   7680>>DOWHILE
      7681<<ASSIGN   7681>>ASSIGN
SPTR$ IN PROCEDURE CON_CAT
      7633**DCL      7687<<ASSIGN   7690>>ASSIGN
THPTR$ IN PROCEDURE CON_CAT
      7634**DCL      7682<<ASSIGN   7683>>ASSIGN   7684>>ASSIGN   7685>>ASSIGN   7687>>ASSIGN   7687>>ASSIGN
      7688>>ASSIGN   7693>>ASSIGN   7694>>CALL
TPTR$ IN PROCEDURE CON_CAT
      7628**DCL      7638<<ASSIGN   7643>>DOWHILE  7643>>DOWHILE  7646>>ASSIGN   7653>>IF       7655<<ASSIGN
      7655>>ASSIGN   7663<>CALL     7664>>IF       7678>>ASSIGN   7678>>ASSIGN   7683>>ASSIGN   7684>>ASSIGN
      7685>>ASSIGN   7686>>ASSIGN   7695>>IF       7700>>ASSIGN
TSIZE IN PROCEDURE CON_CAT
      7629**DCL      7639<<ASSIGN   7646<<ASSIGN   7646>>ASSIGN   7663<>CALL
UNQ_CHECK
PL6.E3A0      #002=KNT$DSESSION File=KNT$MISC.:E05TSI                            WED 07/30/97 01:09 Page:83   
      6700**LABEL    6595--GOTO

PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:84   
      639        1        /*M* KNT$GETBUF -  Get a transport buffer.            */
      640        2        /*T***********************************************************/
      641        3        /*T*                                                         */
      642        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      643        5        /*T*                                                         */
      644        6        /*T***********************************************************/
      645        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      646        8
      647        9        /*F* NAME: KNT$GETBUF
      648       10
      649       11             PURPOSE:
      650       12                  To get a buffer for a transport fragment.
      651       13
      652       14             DESCRIPTION:
      653       15                  Call KVB$GET2NSYS, initialize the header information, and
      654       16                   update buffer statistics.
      655       17
      656       18        */
      657       19        KNT$GETBUF: PROC (FRAGSIZE,FRAG$,KN$TCTX) ALTRET;
      658       20
      659       21        %INCLUDE K_ADDRESS_M;
      660      524        %INCLUDE K_TRANSPORT_E;
      661      849        %INCLUDE K_TRANSPORT_M;
      662     2633        %INCLUDE KN_DATA_M;
      663     4419        %INCLUDE KV$BPC;
      664     4448        %INCLUDE GH_SCHD_M;
      665     4592
      666     4593                                                /* Input Parameters                   */
      667     4594    1   DCL FRAGSIZE SBIN WORD;                 /*byte size of buffer to allocate     */
      668     4595    1   DCL FRAG$ PTR;           /*where we return the address of allocated buffer    */
      669     4596        %K$TCTX (NAME=KN$TCTX,STCLASS="");
      670     5503
      671     5504                                                /* Auto Storage                       */
      672     5505    1   DCL BUFSIZE SBIN WORD;
      673     5506    1   DCL ENTRY_SWITCH UBIN;
      674     5507
      675     5508        %EQU SEND_ENTRY = 0;
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:85   
      676     5509        %EQU RECV_ENTRY = 1;
      677     5510        %EQU ABUF_ENTRY = 2;
      678     5511
      679     5512                                                /* Based Structures                   */
      680     5513        %K$FRAG_HDR (NAME=FRAG_HDR);
      681     5596        %KV$BPC;
      682     5618
      683     5619                                                /* External Data                      */
      684     5620    1   DCL G$CBUFFER$ PTR SYMREF;
      685     5621    1   DCL KNT_BUFFER_SCREECH UBIN SYMREF;
      686     5622    1   DCL KNT_SCODE UBIN(32) SYMREF;
      687     5623
      688     5624                                                /* External Procedures                */
      689     5625    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      690     5626    1   DCL SCREECH ENTRY(1);
      691     5627
      692     5628        %EJECT;
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:86   
      693     5629
      694     5630    1   KNT$GET_SBUF: ENTRY(FRAGSIZE,FRAG$,KN$TCTX) ALTRET;
      695     5631    1      ENTRY_SWITCH = %SEND_ENTRY;
      696     5632    1      GOTO COMMON;
      697     5633
      698     5634    1   KNT$GET_RBUF: ENTRY(FRAGSIZE,FRAG$,KN$TCTX) ALTRET;
      699     5635    1      ENTRY_SWITCH = %RECV_ENTRY;
      700     5636    1      GOTO COMMON;
      701     5637
      702     5638    1   KNT$GET_ABUF: ENTRY(FRAGSIZE,FRAG$) ALTRET;
      703     5639    1      ENTRY_SWITCH = %ABUF_ENTRY;
      704     5640
      705     5641    1   COMMON: ;
      706     5642    1      BUFSIZE = (FRAGSIZE + SIZEC(FRAG_HDR) +1) / 2;
      707     5643
      708     5644    1      CALL KVB$GET2NSYS(BUFSIZE,FRAG$);
      709     5645
      710     5646    1      IF FRAG$ = ADDR(NIL)
      711     5647    2      THEN DO;
      712     5648    2           IF G$CBUFFER$->KV$BPC.USE = 0
      713     5649    2           THEN GOTO ENTER_SCREECH;
      714     5650
      715     5651    2           IF KNT_BUFFER_SCREECH ~= 0
      716     5652    3           THEN DO;
      717     5653    3   ENTER_SCREECH:
      718     5654    3                CALL SCREECH(KNT_SCODE);
      719     5655    3                END;
      720     5656    3           ELSE DO;
      721     5657    3                IF ENTRY_SWITCH = %SEND_ENTRY
      722     5658    3                THEN KN$TCTX.SERR.NOBUF = KN$TCTX.SERR.NOBUF +1;
      723     5659    3                IF ENTRY_SWITCH = %RECV_ENTRY
      724     5660    3                THEN KN$TCTX.RERR.NOBUF = KN$TCTX.RERR.NOBUF +1;
      725     5661    3                ALTRETURN;
      726     5662    3                END;
      727     5663    2           END;
      728     5664
      729     5665    1      FRAG$->FRAG_HDR = '0'B;
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:87   
      730     5666    1      FRAG$->FRAG_HDR.BUFF_WSIZE = BUFSIZE;
      731     5667    1      FRAG$->FRAG_HDR.DATA_BSIZE = FRAGSIZE;
      732     5668
      733     5669    1      IF ENTRY_SWITCH = %SEND_ENTRY
      734     5670    2      THEN DO;
      735     5671    2           FRAG$->FRAG_HDR.FLAGS.SEND = '1'B;
      736     5672
      737     5673    2           KN$TCTX.SEND_BUFF.CUR = KN$TCTX.SEND_BUFF.CUR +1;
      738     5674    2           IF KN$TCTX.SEND_BUFF.CUR > KN$TCTX.SEND_BUFF.PEAK
      739     5675    2           THEN KN$TCTX.SEND_BUFF.PEAK = KN$TCTX.SEND_BUFF.CUR;
      740     5676
      741     5677    2           KN$TCTX.SEND_BUFF.BYTES_CUR = KN$TCTX.SEND_BUFF.BYTES_CUR + BUFSIZE;
      742     5678    2           IF KN$TCTX.SEND_BUFF.BYTES_CUR > KN$TCTX.SEND_BUFF.BYTES_PEAK
      743     5679    2           THEN KN$TCTX.SEND_BUFF.BYTES_PEAK = KN$TCTX.SEND_BUFF.BYTES_CUR;
      744     5680    2           END;
      745     5681
      746     5682    1      IF ENTRY_SWITCH = %RECV_ENTRY
      747     5683    2      THEN DO;
      748     5684    2           FRAG$->FRAG_HDR.FLAGS.RECV = '1'B;
      749     5685
      750     5686    2           KN$TCTX.RECV_BUFF.CUR = KN$TCTX.RECV_BUFF.CUR +1;
      751     5687    2           IF KN$TCTX.RECV_BUFF.CUR > KN$TCTX.RECV_BUFF.PEAK
      752     5688    2           THEN KN$TCTX.RECV_BUFF.PEAK = KN$TCTX.RECV_BUFF.CUR;
      753     5689
      754     5690    2           KN$TCTX.RECV_BUFF.BYTES_CUR = KN$TCTX.RECV_BUFF.BYTES_CUR + BUFSIZE;
      755     5691    2           IF KN$TCTX.RECV_BUFF.BYTES_CUR > KN$TCTX.RECV_BUFF.BYTES_PEAK
      756     5692    2           THEN KN$TCTX.RECV_BUFF.BYTES_PEAK = KN$TCTX.RECV_BUFF.BYTES_CUR;
      757     5693    2           END;
      758     5694    1      RETURN;
      759     5695
      760     5696    1   END KNT$GETBUF;
      761     5697        %EOD;

PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:88   
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$GETBUF.

   Procedure KNT$GETBUF requires 195 words for executable code.
   Procedure KNT$GETBUF requires 16 words of local(AUTO) storage.

PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:89   

 Object Unit name= KNT$GETBUF                                 File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:09:42.96 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   195     C3  KNT$GETBUF
    1  RoData even  none     2      2  KNT$GETBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  KNT$GETBUF
     0      7          yes     yes      Std        3  KNT$GET_SBUF
     0     10          yes     yes      Std        3  KNT$GET_RBUF
     0     1A          yes     yes      Std        2  KNT$GET_ABUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$GET2NSYS
         yes           Std       1 SCREECH
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:90   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$CBUFFER$                            KNT_BUFFER_SCREECH                    KNT_SCODE
r    G$ROS$
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:91   


      639        1        /*M* KNT$GETBUF -  Get a transport buffer.            */
      640        2        /*T***********************************************************/
      641        3        /*T*                                                         */
      642        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      643        5        /*T*                                                         */
      644        6        /*T***********************************************************/
      645        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      646        8
      647        9        /*F* NAME: KNT$GETBUF
      648       10
      649       11             PURPOSE:
      650       12                  To get a buffer for a transport fragment.
      651       13
      652       14             DESCRIPTION:
      653       15                  Call KVB$GET2NSYS, initialize the header information, and
      654       16                   update buffer statistics.
      655       17
      656       18        */
      657       19        KNT$GETBUF: PROC (FRAGSIZE,FRAG$,KN$TCTX) ALTRET;

     19   0 000000  D380 0000 0000  xent KNT$GETBUF      LNJ,B5   X6A_AUTO_3
          0 000003       0010 0003                       DC       16,3
          0 000005  0F81 0006                            B        s:5631,PREL

      658       20
      659       21        %INCLUDE K_ADDRESS_M;
      660      524        %INCLUDE K_TRANSPORT_E;
      661      849        %INCLUDE K_TRANSPORT_M;
      662     2633        %INCLUDE KN_DATA_M;
      663     4419        %INCLUDE KV$BPC;
      664     4448        %INCLUDE GH_SCHD_M;
      665     4592
      666     4593                                                /* Input Parameters                   */
      667     4594    1   DCL FRAGSIZE SBIN WORD;                 /*byte size of buffer to allocate     */
      668     4595    1   DCL FRAG$ PTR;           /*where we return the address of allocated buffer    */
      669     4596        %K$TCTX (NAME=KN$TCTX,STCLASS="");
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:92   
      670     5503
      671     5504                                                /* Auto Storage                       */
      672     5505    1   DCL BUFSIZE SBIN WORD;
      673     5506    1   DCL ENTRY_SWITCH UBIN;
      674     5507
      675     5508        %EQU SEND_ENTRY = 0;
      676     5509        %EQU RECV_ENTRY = 1;
      677     5510        %EQU ABUF_ENTRY = 2;
      678     5511
      679     5512                                                /* Based Structures                   */
      680     5513        %K$FRAG_HDR (NAME=FRAG_HDR);
      681     5596        %KV$BPC;
      682     5618
      683     5619                                                /* External Data                      */
      684     5620    1   DCL G$CBUFFER$ PTR SYMREF;
      685     5621    1   DCL KNT_BUFFER_SCREECH UBIN SYMREF;
      686     5622    1   DCL KNT_SCODE UBIN(32) SYMREF;
      687     5623
      688     5624                                                /* External Procedures                */
      689     5625    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      690     5626    1   DCL SCREECH ENTRY(1);
      691     5627
      692     5628        %EJECT;
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:93   
      693     5629
      694     5630    1   KNT$GET_SBUF: ENTRY(FRAGSIZE,FRAG$,KN$TCTX) ALTRET;

   5630   0 000007  D380 0000 0000  xent KNT$GET_SBUF    LNJ,B5   X6A_AUTO_3
          0 00000A       0010 0003                       DC       16,3

      695     5631    1      ENTRY_SWITCH = %SEND_ENTRY;

   5631   0 00000C  8747 000B                            CL       ENTRY_SWITCH,AUTO

      696     5632    1      GOTO COMMON;

   5632   0 00000E  0F81 0013                            B        s:5639,PREL

      697     5633
      698     5634    1   KNT$GET_RBUF: ENTRY(FRAGSIZE,FRAG$,KN$TCTX) ALTRET;

   5634   0 000010  D380 0000 0000  xent KNT$GET_RBUF    LNJ,B5   X6A_AUTO_3
          0 000013       0010 0003                       DC       16,3

      699     5635    1      ENTRY_SWITCH = %RECV_ENTRY;

   5635   0 000015  6C01                                 LDV,R6   1
          0 000016  EF47 000B                            STR,R6   ENTRY_SWITCH,AUTO

      700     5636    1      GOTO COMMON;

   5636   0 000018  0F81 0009                            B        s:5639,PREL

      701     5637
      702     5638    1   KNT$GET_ABUF: ENTRY(FRAGSIZE,FRAG$) ALTRET;

   5638   0 00001A  D380 0000 0000  xent KNT$GET_ABUF    LNJ,B5   X6A_AUTO_3
          0 00001D       0010 0003                       DC       16,3

      703     5639    1      ENTRY_SWITCH = %ABUF_ENTRY;

PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:94   
   5639   0 00001F  6C02                                 LDV,R6   2
          0 000020  EF47 000B                            STR,R6   ENTRY_SWITCH,AUTO

   5639   0                              COMMON          null
      704     5640
      705     5641    1   COMMON: ;
      706     5642    1      BUFSIZE = (FRAGSIZE + SIZEC(FRAG_HDR) +1) / 2;

   5642   0 000022  ECC7 0004            COMMON          LDB,B6   @FRAGSIZE,AUTO
          0 000024  E806                                 LDR,R6   ,B6
          0 000025  6E11                                 ADV,R6   17
          0 000026  E370 0002                            DIV,R6   2,IMO
          0 000028  EF47 000A                            STR,R6   BUFSIZE,AUTO

      707     5643
      708     5644    1      CALL KVB$GET2NSYS(BUFSIZE,FRAG$);

   5644   0 00002A  DCC7 0006                            LDB,B5   @FRAG$,AUTO
          0 00002C  DFC7 000E                            STB,B5   ENTRY_SWITCH+3,AUTO
          0 00002E  CBC7 000A                            LAB,B4   BUFSIZE,AUTO
          0 000030  CFC7 000C                            STB,B4   ENTRY_SWITCH+1,AUTO
          0 000032  BBC7 000C                            LAB,B3   ENTRY_SWITCH+1,AUTO
          0 000034  CBF0 0200                            LAB,B4   512,IMO
          0 000036  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          0 000039       0001                            DC       s:5646,PREL

      709     5645
      710     5646    1      IF FRAG$ = ADDR(NIL)

   5646   0 00003A  ECC7 0006                            LDB,B6   @FRAG$,AUTO
          0 00003C  8D86                                 CMN      ,B6
          0 00003D  0981 002F                            BNE      s:5665,PREL

      711     5647    2      THEN DO;

      712     5648    2           IF G$CBUFFER$->KV$BPC.USE = 0

PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:95   
   5648   0 00003F  DC80 0000 0000  xsym                 LDB,B5   G$CBUFFER$
          0 000042  8CC5 0002                            LDI      2,B5
          0 000044  84F0 0000 0000                       SID      0,IMO
          0 000047  6981 0003                            BNEZ,R6  s:5651,PREL
          0 000049  7901 0006                            BEZ,R7   s:5652,PREL

      713     5649    2           THEN GOTO ENTER_SCREECH;
      714     5650
      715     5651    2           IF KNT_BUFFER_SCREECH ~= 0

   5651   0 00004B  E800 0000 0000  xsym                 LDR,R6   KNT_BUFFER_SCREECH
          0 00004E  6901 000C                            BEZ,R6   s:5657,PREL

      716     5652    3           THEN DO;

      717     5653    3   ENTER_SCREECH:
      718     5654    3                CALL SCREECH(KNT_SCODE);

   5654   0 000050  BB80 0000 0000  01   ENTER_SCREECH   LAB,B3   0
          0 000053  CBF0 0100                            LAB,B4   256,IMO
          0 000055  E380 0000 0000  xent                 LNJ,B6   SCREECH
          0 000058       0001                            DC       s:5655,PREL

      719     5655    3                END;

   5655   0 000059  0F81 0013                            B        s:5665,PREL

      720     5656    3           ELSE DO;

      721     5657    3                IF ENTRY_SWITCH = %SEND_ENTRY

   5657   0 00005B  D847 000B                            LDR,R5   ENTRY_SWITCH,AUTO
          0 00005D  5981 0005                            BNEZ,R5  s:5659,PREL

      722     5658    3                THEN KN$TCTX.SERR.NOBUF = KN$TCTX.SERR.NOBUF +1;

   5658   0 00005F  CCC7 0008                            LDB,B4   @KN$TCTX,AUTO
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:96   
          0 000061  8AC4 0010                            INC      16,B4

      723     5659    3                IF ENTRY_SWITCH = %RECV_ENTRY

   5659   0 000063  5D01                                 CMV,R5   1
          0 000064  0981 0005                            BNE      s:5661,PREL

      724     5660    3                THEN KN$TCTX.RERR.NOBUF = KN$TCTX.RERR.NOBUF +1;

   5660   0 000066  CCC7 0008                            LDB,B4   @KN$TCTX,AUTO
          0 000068  8AC4 0016                            INC      22,B4

      725     5661    3                ALTRETURN;

   5661   0 00006A  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      726     5662    3                END;
      727     5663    2           END;
      728     5664
      729     5665    1      FRAG$->FRAG_HDR = '0'B;

   5665   0 00006D  ECC7 0006                            LDB,B6   @FRAG$,AUTO
          0 00006F  DC86                                 LDB,B5   ,B6
          0 000070  5C10                                 LDV,R5   16
          0 000071  0021                                 ALR      ;
          0 000072       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          0 000074       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      730     5666    1      FRAG$->FRAG_HDR.BUFF_WSIZE = BUFSIZE;

   5666   0 000076  437F                                 CSYNC    s:5665+8,SPREL
          0 000077  DC86                                 LDB,B5   ,B6
          0 000078  E847 000A                            LDR,R6   BUFSIZE,AUTO
          0 00007A  EF05                                 STR,R6   ,B5

      731     5667    1      FRAG$->FRAG_HDR.DATA_BSIZE = FRAGSIZE;

PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:97   
   5667   0 00007B  DC86                                 LDB,B5   ,B6
          0 00007C  CCC7 0004                            LDB,B4   @FRAGSIZE,AUTO
          0 00007E  E804                                 LDR,R6   ,B4
          0 00007F  EF45 0001                            STR,R6   1,B5

      732     5668
      733     5669    1      IF ENTRY_SWITCH = %SEND_ENTRY

   5669   0 000081  E847 000B                            LDR,R6   ENTRY_SWITCH,AUTO
          0 000083  6981 001D                            BNEZ,R6  s:5682,PREL

      734     5670    2      THEN DO;

      735     5671    2           FRAG$->FRAG_HDR.FLAGS.SEND = '1'B;

   5671   0 000085  DC86                                 LDB,B5   ,B6
          0 000086  8945 0006                            LBT,'0002'X       6,B5
          0 000088       0002

      736     5672
      737     5673    2           KN$TCTX.SEND_BUFF.CUR = KN$TCTX.SEND_BUFF.CUR +1;

   5673   0 000089  DCC7 0008                            LDB,B5   @KN$TCTX,AUTO
          0 00008B  8AC5 002E                            INC      46,B5

      738     5674    2           IF KN$TCTX.SEND_BUFF.CUR > KN$TCTX.SEND_BUFF.PEAK

   5674   0 00008D  C845 002E                            LDR,R4   46,B5
          0 00008F  C945 002F                            CMR,R4   47,B5
          0 000091  0381 0003                            BLE      s:5677,PREL

      739     5675    2           THEN KN$TCTX.SEND_BUFF.PEAK = KN$TCTX.SEND_BUFF.CUR;

   5675   0 000093  CF45 002F                            STR,R4   47,B5

      740     5676
      741     5677    2           KN$TCTX.SEND_BUFF.BYTES_CUR = KN$TCTX.SEND_BUFF.BYTES_CUR + BUFSIZE;
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:98   

   5677   0 000095  B845 0030                            LDR,R3   48,B5
          0 000097  BA47 000A                            ADD,R3   BUFSIZE,AUTO
          0 000099  BF45 0030                            STR,R3   48,B5

      742     5678    2           IF KN$TCTX.SEND_BUFF.BYTES_CUR > KN$TCTX.SEND_BUFF.BYTES_PEAK

   5678   0 00009B  B945 0031                            CMR,R3   49,B5
          0 00009D  0381 0003                            BLE      s:5682,PREL

      743     5679    2           THEN KN$TCTX.SEND_BUFF.BYTES_PEAK = KN$TCTX.SEND_BUFF.BYTES_CUR;

   5679   0 00009F  BF45 0031                            STR,R3   49,B5

      744     5680    2           END;

      745     5681
      746     5682    1      IF ENTRY_SWITCH = %RECV_ENTRY

   5682   0 0000A1  6D01                                 CMV,R6   1
          0 0000A2  0981 001D                            BNE      s:5694,PREL

      747     5683    2      THEN DO;

      748     5684    2           FRAG$->FRAG_HDR.FLAGS.RECV = '1'B;

   5684   0 0000A4  DC86                                 LDB,B5   ,B6
          0 0000A5  8945 0006                            LBT,'0004'X       6,B5
          0 0000A7       0004

      749     5685
      750     5686    2           KN$TCTX.RECV_BUFF.CUR = KN$TCTX.RECV_BUFF.CUR +1;

   5686   0 0000A8  DCC7 0008                            LDB,B5   @KN$TCTX,AUTO
          0 0000AA  8AC5 001E                            INC      30,B5

      751     5687    2           IF KN$TCTX.RECV_BUFF.CUR > KN$TCTX.RECV_BUFF.PEAK
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:99   

   5687   0 0000AC  C845 001E                            LDR,R4   30,B5
          0 0000AE  C945 001F                            CMR,R4   31,B5
          0 0000B0  0381 0003                            BLE      s:5690,PREL

      752     5688    2           THEN KN$TCTX.RECV_BUFF.PEAK = KN$TCTX.RECV_BUFF.CUR;

   5688   0 0000B2  CF45 001F                            STR,R4   31,B5

      753     5689
      754     5690    2           KN$TCTX.RECV_BUFF.BYTES_CUR = KN$TCTX.RECV_BUFF.BYTES_CUR + BUFSIZE;

   5690   0 0000B4  B845 0020                            LDR,R3   32,B5
          0 0000B6  BA47 000A                            ADD,R3   BUFSIZE,AUTO
          0 0000B8  BF45 0020                            STR,R3   32,B5

      755     5691    2           IF KN$TCTX.RECV_BUFF.BYTES_CUR > KN$TCTX.RECV_BUFF.BYTES_PEAK

   5691   0 0000BA  B945 0021                            CMR,R3   33,B5
          0 0000BC  0381 0003                            BLE      s:5694,PREL

      756     5692    2           THEN KN$TCTX.RECV_BUFF.BYTES_PEAK = KN$TCTX.RECV_BUFF.BYTES_CUR;

   5692   0 0000BE  BF45 0021                            STR,R3   33,B5

      757     5693    2           END;

      758     5694    1      RETURN;

   5694   0 0000C0  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      759     5695
      760     5696    1   END KNT$GETBUF;
      761     5697        %EOD;

PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:100  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$GETBUF.
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:101  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @FRAG$                     4-0-0/w PTR         r     1 @FRAGSIZE
     8-0-0/w PTR         r     1 @KN$TCTX                   A-0-0/w SBIN(16)    r     1 BUFSIZE
     B-0-0/w UBIN(16)    r     1 ENTRY_SWITCH              *0-0-0/w PTR         r     1 FRAG$
    *0-0-0/w SBIN(16)    r     1 FRAGSIZE                  *0-0-0/w STRC(2816)  r     1 KN$TCTX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$CBUFFER$                 0-0-0/w UBIN(16)    r     1 KNT_BUFFER_SCREECH
     0-0-0/w UBIN(32)    r     1 KNT_SCODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(128)   r     1 FRAG_HDR                   0-0-0/w ASTR(1824)  r     1 KV$BPC


   Procedure KNT$GETBUF requires 195 words for executable code.
   Procedure KNT$GETBUF requires 16 words of local(AUTO) storage.
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:102  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:103  
          MINI XREF LISTING

BUFSIZE
      5505**DCL      5642<<ASSIGN   5644<>CALL     5666>>ASSIGN   5677>>ASSIGN   5690>>ASSIGN
COMMON
      5639**LABEL    5632--GOTO     5636--GOTO
ENTER_SCREECH
      5654**LABEL    5649--GOTO
ENTRY_SWITCH
      5506**DCL      5631<<ASSIGN   5635<<ASSIGN   5639<<ASSIGN   5657>>IF       5659>>IF       5669>>IF
      5682>>IF
FRAG$
      4595**DCL        19--PROC     5630--ENTRY    5634--ENTRY    5638--ENTRY    5644<>CALL     5646>>IF
      5665>>ASSIGN   5666>>ASSIGN   5667>>ASSIGN   5671>>ASSIGN   5684>>ASSIGN
FRAGSIZE
      4594**DCL        19--PROC     5630--ENTRY    5634--ENTRY    5638--ENTRY    5642>>ASSIGN   5667>>ASSIGN
FRAG_HDR
      5530**DCL      5642--ASSIGN   5665<<ASSIGN
FRAG_HDR.BUFF_WSIZE
      5534**DCL      5666<<ASSIGN
FRAG_HDR.DATA_BSIZE
      5539**DCL      5667<<ASSIGN
FRAG_HDR.FLAGS.RECV
      5574**DCL      5684<<ASSIGN
FRAG_HDR.FLAGS.SEND
      5579**DCL      5671<<ASSIGN
FRAG_HDR.SEQ
      5543**DCL      5544--REDEF
G$CBUFFER$
      5620**DCL      5648>>IF
KN$TCTX
      4601**DCL        19--PROC     5630--ENTRY    5634--ENTRY
KN$TCTX.DST_NSAP.ADDRESS_N
      5486**DCL      5487--REDEF
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:104  
KN$TCTX.NODE
      4608**DCL      4621--REDEF
KN$TCTX.RECV_BUFF.BYTES_CUR
      4967**DCL      5690<<ASSIGN   5690>>ASSIGN   5691>>IF       5692>>ASSIGN
KN$TCTX.RECV_BUFF.BYTES_PEAK
      4968**DCL      5691>>IF       5692<<ASSIGN
KN$TCTX.RECV_BUFF.CUR
      4965**DCL      5686<<ASSIGN   5686>>ASSIGN   5687>>IF       5688>>ASSIGN
KN$TCTX.RECV_BUFF.PEAK
      4966**DCL      5687>>IF       5688<<ASSIGN
KN$TCTX.RERR.NOBUF
      4913**DCL      5660<<ASSIGN   5660>>ASSIGN
KN$TCTX.SEND_BUFF.BYTES_CUR
      5027**DCL      5677<<ASSIGN   5677>>ASSIGN   5678>>IF       5679>>ASSIGN
KN$TCTX.SEND_BUFF.BYTES_PEAK
      5028**DCL      5678>>IF       5679<<ASSIGN
KN$TCTX.SEND_BUFF.CUR
      5025**DCL      5673<<ASSIGN   5673>>ASSIGN   5674>>IF       5675>>ASSIGN
KN$TCTX.SEND_BUFF.PEAK
      5026**DCL      5674>>IF       5675<<ASSIGN
KN$TCTX.SERR.NOBUF
      4871**DCL      5658<<ASSIGN   5658>>ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      5422**DCL      5423--REDEF
KN$TCTX.TMR_INACTIVITY.ARG
      5242**DCL      5243--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      5272**DCL      5273--REDEF
KN$TCTX.TMR_RETRAN.ARG
      5183**DCL      5184--REDEF
KN$TCTX.TMR_WINDOW.ARG
      5212**DCL      5213--REDEF
KNT_BUFFER_SCREECH
      5621**DCL      5651>>IF
KNT_SCODE
      5622**DCL      5654<>CALL
PL6.E3A0      #003=KNT$GETBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:09 Page:105  
KV$BPC.BITMAPSIZ
      5612**DCL      5615--IMP-SIZ
KV$BPC.USE
      5605**DCL      5648>>IF
KVB$GET2NSYS
      5625**DCL-ENT  5644--CALL
SCREECH
      5626**DCL-ENT  5654--CALL

PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:106  
      762        1        /*M* KNT$RELBUF - Release a transport buffer.                 */
      763        2        /*T***********************************************************/
      764        3        /*T*                                                         */
      765        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      766        5        /*T*                                                         */
      767        6        /*T***********************************************************/
      768        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      769        8
      770        9        /*F* NAME: KNT$RELBUF
      771       10
      772       11             PURPOSE:
      773       12                  To return a transport buffer to the pool.
      774       13
      775       14             DESCRIPTION:
      776       15                  Call KVB$RLS2NSYS and update buffer statistics.
      777       16
      778       17        */
      779       18        KNT$RELBUF: PROC (FRAG_HDR,KN$TCTX);
      780       19
      781       20        %INCLUDE K_ADDRESS_M;
      782      523        %INCLUDE K_TRANSPORT_E;
      783      848        %INCLUDE K_TRANSPORT_M;
      784     2632        %INCLUDE KN_DATA_M;
      785     4418        %INCLUDE GH_SCHD_M;
      786     4562
      787     4563        %K$FRAG_HDR (NAME=FRAG_HDR,STCLASS="");
      788     4646        %K$TCTX (NAME=KN$TCTX,STCLASS="");
      789     5553
      790     5554    1   DCL BUFSIZE SBIN WORD;
      791     5555
      792     5556    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      793     5557
      794     5558    1      BUFSIZE = FRAG_HDR.BUFF_WSIZE;
      795     5559
      796     5560    1      CALL KVB$RLS2NSYS (FRAG_HDR.BUFF_WSIZE);
      797     5561
      798     5562    1      IF FRAG_HDR.FLAGS.SEND
PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:107  
      799     5563    2      THEN DO;
      800     5564    2           KN$TCTX.SEND_BUFF.CUR = KN$TCTX.SEND_BUFF.CUR -1;
      801     5565    2           KN$TCTX.SEND_BUFF.BYTES_CUR = KN$TCTX.SEND_BUFF.BYTES_CUR - BUFSIZE;
      802     5566    2           END;
      803     5567
      804     5568    2      ELSE DO;
      805     5569    2           KN$TCTX.RECV_BUFF.CUR = KN$TCTX.RECV_BUFF.CUR -1;
      806     5570    2           KN$TCTX.RECV_BUFF.BYTES_CUR = KN$TCTX.RECV_BUFF.BYTES_CUR - BUFSIZE;
      807     5571    2           END;
      808     5572    1      RETURN;
      809     5573
      810     5574    1   END KNT$RELBUF;
      811     5575        %EOD;

PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:108  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RELBUF.

   Procedure KNT$RELBUF requires 50 words for executable code.
   Procedure KNT$RELBUF requires 10 words of local(AUTO) storage.

PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:109  

 Object Unit name= KNT$RELBUF                                 File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:10:06.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    50     32  KNT$RELBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KNT$RELBUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$RLS2NSYS
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:110  


      762        1        /*M* KNT$RELBUF - Release a transport buffer.                 */
      763        2        /*T***********************************************************/
      764        3        /*T*                                                         */
      765        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      766        5        /*T*                                                         */
      767        6        /*T***********************************************************/
      768        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      769        8
      770        9        /*F* NAME: KNT$RELBUF
      771       10
      772       11             PURPOSE:
      773       12                  To return a transport buffer to the pool.
      774       13
      775       14             DESCRIPTION:
      776       15                  Call KVB$RLS2NSYS and update buffer statistics.
      777       16
      778       17        */
      779       18        KNT$RELBUF: PROC (FRAG_HDR,KN$TCTX);

     18   0 000000  D380 0000 0000  xent KNT$RELBUF      LNJ,B5   X6A_AUTO_2
          0 000003       000A 0002                       DC       10,2

      780       19
      781       20        %INCLUDE K_ADDRESS_M;
      782      523        %INCLUDE K_TRANSPORT_E;
      783      848        %INCLUDE K_TRANSPORT_M;
      784     2632        %INCLUDE KN_DATA_M;
      785     4418        %INCLUDE GH_SCHD_M;
      786     4562
      787     4563        %K$FRAG_HDR (NAME=FRAG_HDR,STCLASS="");
      788     4646        %K$TCTX (NAME=KN$TCTX,STCLASS="");
      789     5553
      790     5554    1   DCL BUFSIZE SBIN WORD;
      791     5555
      792     5556    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      793     5557
PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:111  
      794     5558    1      BUFSIZE = FRAG_HDR.BUFF_WSIZE;

   5558   0 000005  ECC7 0004                            LDB,B6   @FRAG_HDR,AUTO
          0 000007  E806                                 LDR,R6   ,B6
          0 000008  EF47 0008                            STR,R6   BUFSIZE,AUTO

      795     5559
      796     5560    1      CALL KVB$RLS2NSYS (FRAG_HDR.BUFF_WSIZE);

   5560   0 00000A  BBC7 0004                            LAB,B3   @FRAG_HDR,AUTO
          0 00000C  CBF0 0100                            LAB,B4   256,IMO
          0 00000E  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          0 000011       0001                            DC       s:5562,PREL

      797     5561
      798     5562    1      IF FRAG_HDR.FLAGS.SEND

   5562   0 000012  ECC7 0004                            LDB,B6   @FRAG_HDR,AUTO
          0 000014  82C6 0006                            LB,'0002'X        6,B6
          0 000016       0002
          0 000017  0581 000D                            BBF      s:5569,PREL

      799     5563    2      THEN DO;

      800     5564    2           KN$TCTX.SEND_BUFF.CUR = KN$TCTX.SEND_BUFF.CUR -1;

   5564   0 000019  DCC7 0006                            LDB,B5   @KN$TCTX,AUTO
          0 00001B  88C5 002E                            DEC      46,B5

      801     5565    2           KN$TCTX.SEND_BUFF.BYTES_CUR = KN$TCTX.SEND_BUFF.BYTES_CUR - BUFSIZE;

   5565   0 00001D  E845 0030                            LDR,R6   48,B5
          0 00001F  E247 0008                            SUB,R6   BUFSIZE,AUTO
          0 000021  EF45 0030                            STR,R6   48,B5

      802     5566    2           END;

PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:112  
   5566   0 000023  0F81 000B                            B        s:5572,PREL

      803     5567
      804     5568    2      ELSE DO;

      805     5569    2           KN$TCTX.RECV_BUFF.CUR = KN$TCTX.RECV_BUFF.CUR -1;

   5569   0 000025  DCC7 0006                            LDB,B5   @KN$TCTX,AUTO
          0 000027  88C5 001E                            DEC      30,B5

      806     5570    2           KN$TCTX.RECV_BUFF.BYTES_CUR = KN$TCTX.RECV_BUFF.BYTES_CUR - BUFSIZE;

   5570   0 000029  E845 0020                            LDR,R6   32,B5
          0 00002B  E247 0008                            SUB,R6   BUFSIZE,AUTO
          0 00002D  EF45 0020                            STR,R6   32,B5

      807     5571    2           END;

      808     5572    1      RETURN;

   5572   0 00002F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      809     5573
      810     5574    1   END KNT$RELBUF;
      811     5575        %EOD;

PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:113  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RELBUF.
PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:114  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FRAG_HDR                  6-0-0/w PTR         r     1 @KN$TCTX
     8-0-0/w SBIN(16)    r     1 BUFSIZE                   *0-0-0/w STRC(128)   r     1 FRAG_HDR
    *0-0-0/w STRC(2816)  r     1 KN$TCTX


   Procedure KNT$RELBUF requires 50 words for executable code.
   Procedure KNT$RELBUF requires 10 words of local(AUTO) storage.
PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:115  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:116  
          MINI XREF LISTING

BUFSIZE
      5554**DCL      5558<<ASSIGN   5565>>ASSIGN   5570>>ASSIGN
FRAG_HDR
      4580**DCL        18--PROC
FRAG_HDR.BUFF_WSIZE
      4584**DCL      5558>>ASSIGN   5560<>CALL
FRAG_HDR.FLAGS.SEND
      4629**DCL      5562>>IF
FRAG_HDR.SEQ
      4593**DCL      4594--REDEF
KN$TCTX
      4651**DCL        18--PROC
KN$TCTX.DST_NSAP.ADDRESS_N
      5536**DCL      5537--REDEF
KN$TCTX.NODE
      4658**DCL      4671--REDEF
KN$TCTX.RECV_BUFF.BYTES_CUR
      5017**DCL      5570<<ASSIGN   5570>>ASSIGN
KN$TCTX.RECV_BUFF.CUR
      5015**DCL      5569<<ASSIGN   5569>>ASSIGN
KN$TCTX.SEND_BUFF.BYTES_CUR
      5077**DCL      5565<<ASSIGN   5565>>ASSIGN
KN$TCTX.SEND_BUFF.CUR
      5075**DCL      5564<<ASSIGN   5564>>ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      5472**DCL      5473--REDEF
KN$TCTX.TMR_INACTIVITY.ARG
      5292**DCL      5293--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      5322**DCL      5323--REDEF
KN$TCTX.TMR_RETRAN.ARG
      5233**DCL      5234--REDEF
PL6.E3A0      #004=KNT$RELBUF File=KNT$MISC.:E05TSI                              WED 07/30/97 01:10 Page:117  
KN$TCTX.TMR_WINDOW.ARG
      5262**DCL      5263--REDEF
KVB$RLS2NSYS
      5556**DCL-ENT  5560--CALL

PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:118  
      812        1        /*M* KNT$RLS_CHAIN - Release the send and receive chains.     */
      813        2        /*T***********************************************************/
      814        3        /*T*                                                         */
      815        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      816        5        /*T*                                                         */
      817        6        /*T***********************************************************/
      818        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      819        8
      820        9        /*F* NAME: KNT$RLS_CHAIN
      821       10             PURPOSE:
      822       11                  The send and receive chains for a peer pair are released.
      823       12
      824       13             DESCRIPTION:
      825       14                  Start at the head of each chain and go to the end.
      826       15
      827       16        */
      828       17        KNT$RLS_CHAIN: PROC(KN$TCTX);
      829       18
      830       19        %INCLUDE K_ADDRESS_M;
      831      522        %INCLUDE KN_DATA_M;
      832     2308        %INCLUDE K_TRANSPORT_E;
      833     2633        %INCLUDE K_TRANSPORT_M;
      834     4417        %INCLUDE GH_SCHD_M;
      835     4561
      836     4562        %K$TCTX (NAME=KN$TCTX,STCLASS="");
      837     5469
      838     5470    1   DCL PTR$$(0:3) PTR;
      839     5471    1   DCL PTR$ PTR;
      840     5472    1   DCL PTR2$ PTR;
      841     5473    1   DCL ITEMP SBIN;
      842     5474    1   DCL BUFS_RLSD UBIN;
      843     5475
      844     5476        %K$FRAG_HDR (NAME=FRAG_HDR);
      845     5559
      846     5560    1   DCL KNT$RELBUF ENTRY(2);
      847     5561    1   DCL KNT$UNQ_BUFFER ENTRY;
      848     5562
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:119  
      849     5563    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      850     5564
      851     5565        %EJECT
      852     5566    1      BUFS_RLSD = 0;
      853     5567
      854     5568    1      PTR$$(0) = KN$TCTX.SEND_EHEAD$;
      855     5569    1      PTR$$(1) = KN$TCTX.SEND_HEAD$;
      856     5570    1      PTR$$(2) = KN$TCTX.RECV_EHEAD$;
      857     5571    1      PTR$$(3) = KN$TCTX.RECV_HEAD$;
      858     5572
      859     5573    2      DO ITEMP = 0 TO 3;
      860     5574    2           PTR$ = PTR$$(ITEMP);
      861     5575    3           DO WHILE ( PTR$ ~= ADDR(NIL) );
      862     5576    3                PTR2$ = PTR$->FRAG_HDR.LINK$;
      863     5577    3                CALL KNT$RELBUF(PTR$->FRAG_HDR,KN$TCTX);
      864     5578    3                BUFS_RLSD = BUFS_RLSD +1;
      865     5579    3                PTR$ = PTR2$;
      866     5580    3                END/*do while*/;
      867     5581    2           END/*0 to 3*/;
      868     5582
      869     5583    1      KN$TCTX.SEND_HEAD$ = ADDR(NIL);
      870     5584    1      KN$TCTX.SEND_TAIL$ = ADDR(NIL);
      871     5585    1      KN$TCTX.SEND_NOTSENT$ = ADDR(NIL);
      872     5586
      873     5587    1      KN$TCTX.SEND_EHEAD$ = ADDR(NIL);
      874     5588    1      KN$TCTX.SEND_ETAIL$ = ADDR(NIL);
      875     5589    1      KN$TCTX.SEND_ENOTSENT$ = ADDR(NIL);
      876     5590
      877     5591    1      KN$TCTX.RECV_HEAD$ = ADDR(NIL);
      878     5592    1      KN$TCTX.RECV_EHEAD$ = ADDR(NIL);
      879     5593
      880     5594    1      IF (BUFS_RLSD > 0) AND (KNT_WAIT_COUNT > 0)
      881     5595    1      THEN CALL KNT$UNQ_BUFFER;
      882     5596
      883     5597    1      RETURN;
      884     5598
      885     5599    1   END KNT$RLS_CHAIN;
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:120  
      886     5600        %EOD;

PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:121  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RLS_CHAIN.

   Procedure KNT$RLS_CHAIN requires 130 words for executable code.
   Procedure KNT$RLS_CHAIN requires 24 words of local(AUTO) storage.

PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:122  

 Object Unit name= KNT$RLS_CHAIN                              File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:10:25.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   130     82  KNT$RLS_CHAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KNT$RLS_CHAIN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 KNT$RELBUF
         yes           Std       0 KNT$UNQ_BUFFER
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KNT_WAIT_COUNT                   r    G$ROS$
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:123  


      812        1        /*M* KNT$RLS_CHAIN - Release the send and receive chains.     */
      813        2        /*T***********************************************************/
      814        3        /*T*                                                         */
      815        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      816        5        /*T*                                                         */
      817        6        /*T***********************************************************/
      818        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      819        8
      820        9        /*F* NAME: KNT$RLS_CHAIN
      821       10             PURPOSE:
      822       11                  The send and receive chains for a peer pair are released.
      823       12
      824       13             DESCRIPTION:
      825       14                  Start at the head of each chain and go to the end.
      826       15
      827       16        */
      828       17        KNT$RLS_CHAIN: PROC(KN$TCTX);

     17   0 000000  D380 0000 0000  xent KNT$RLS_CHAIN   LNJ,B5   X6A_AUTO_1
          0 000003       0018 0001                       DC       24,1

      829       18
      830       19        %INCLUDE K_ADDRESS_M;
      831      522        %INCLUDE KN_DATA_M;
      832     2308        %INCLUDE K_TRANSPORT_E;
      833     2633        %INCLUDE K_TRANSPORT_M;
      834     4417        %INCLUDE GH_SCHD_M;
      835     4561
      836     4562        %K$TCTX (NAME=KN$TCTX,STCLASS="");
      837     5469
      838     5470    1   DCL PTR$$(0:3) PTR;
      839     5471    1   DCL PTR$ PTR;
      840     5472    1   DCL PTR2$ PTR;
      841     5473    1   DCL ITEMP SBIN;
      842     5474    1   DCL BUFS_RLSD UBIN;
      843     5475
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:124  
      844     5476        %K$FRAG_HDR (NAME=FRAG_HDR);
      845     5559
      846     5560    1   DCL KNT$RELBUF ENTRY(2);
      847     5561    1   DCL KNT$UNQ_BUFFER ENTRY;
      848     5562
      849     5563    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
      850     5564
      851     5565        %EJECT
      852     5566    1      BUFS_RLSD = 0;

   5566   0 000005  8747 0013                            CL       BUFS_RLSD,AUTO

      853     5567
      854     5568    1      PTR$$(0) = KN$TCTX.SEND_EHEAD$;

   5568   0 000007  ECC7 0004                            LDB,B6   @KN$TCTX,AUTO
          0 000009  DCC6 0040                            LDB,B5   64,B6
          0 00000B  DFC7 0006                            STB,B5   PTR$$,AUTO

      855     5569    1      PTR$$(1) = KN$TCTX.SEND_HEAD$;

   5569   0 00000D  CCC6 003A                            LDB,B4   58,B6
          0 00000F  CFC7 0008                            STB,B4   PTR$$+2,AUTO

      856     5570    1      PTR$$(2) = KN$TCTX.RECV_EHEAD$;

   5570   0 000011  BCC6 002C                            LDB,B3   44,B6
          0 000013  BFC7 000A                            STB,B3   PTR$$+4,AUTO

      857     5571    1      PTR$$(3) = KN$TCTX.RECV_HEAD$;

   5571   0 000015  ACC6 002A                            LDB,B2   42,B6
          0 000017  AFC7 000C                            STB,B2   PTR$$+6,AUTO

      858     5572
      859     5573    2      DO ITEMP = 0 TO 3;

PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:125  
   5573   0 000019  8747 0012                            CL       ITEMP,AUTO

      860     5574    2           PTR$ = PTR$$(ITEMP);

   5574   0 00001B  B847 0012                            LDR,R3   ITEMP,AUTO
          0 00001D  3E03                                 ADV,R3   3
          0 00001E  ECB7                                 LDB,B6   ,AUTO,R3
          0 00001F  EFC7 000E                            STB,B6   PTR$,AUTO

      861     5575    3           DO WHILE ( PTR$ ~= ADDR(NIL) );

   5575   0 000021  0F81 001B                            B        s:5580,PREL

      862     5576    3                PTR2$ = PTR$->FRAG_HDR.LINK$;

   5576   0 000023  ECC7 000E                            LDB,B6   PTR$,AUTO
          0 000025  DCC6 0004                            LDB,B5   4,B6
          0 000027  DFC7 0010                            STB,B5   PTR2$,AUTO

      863     5577    3                CALL KNT$RELBUF(PTR$->FRAG_HDR,KN$TCTX);

   5577   0 000029  CCC7 0004                            LDB,B4   @KN$TCTX,AUTO
          0 00002B  CFC7 0016                            STB,B4   BUFS_RLSD+3,AUTO
          0 00002D  EFC7 0014                            STB,B6   BUFS_RLSD+1,AUTO
          0 00002F  BBC7 0014                            LAB,B3   BUFS_RLSD+1,AUTO
          0 000031  CBF0 0200                            LAB,B4   512,IMO
          0 000033  E380 0000 0000  xent                 LNJ,B6   KNT$RELBUF
          0 000036       0001                            DC       s:5578,PREL

      864     5578    3                BUFS_RLSD = BUFS_RLSD +1;

   5578   0 000037  8AC7 0013                            INC      BUFS_RLSD,AUTO

      865     5579    3                PTR$ = PTR2$;

   5579   0 000039  ECC7 0010                            LDB,B6   PTR2$,AUTO
          0 00003B  EFC7 000E                            STB,B6   PTR$,AUTO
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:126  

      866     5580    3                END/*do while*/;

   5580   0 00003D  8DC7 000E                            CMN      PTR$,AUTO
          0 00003F  09E4                                 BNE      s:5576,SPREL

      867     5581    2           END/*0 to 3*/;

   5581   0 000040  8AC7 0012                            INC      ITEMP,AUTO
          0 000042  E847 0012                            LDR,R6   ITEMP,AUTO
          0 000044  6D03                                 CMV,R6   3
          0 000045  0AD6                                 BALE     s:5574,SPREL

      868     5582
      869     5583    1      KN$TCTX.SEND_HEAD$ = ADDR(NIL);

   5583   0 000046  DB80 0000 0000                       LAB,B5   0
          0 000049  CCC7 0004                            LDB,B4   @KN$TCTX,AUTO
          0 00004B  DFC4 003A                            STB,B5   58,B4

      870     5584    1      KN$TCTX.SEND_TAIL$ = ADDR(NIL);

   5584   0 00004D  BB80 0000 0000                       LAB,B3   0
          0 000050  BFC4 003C                            STB,B3   60,B4

      871     5585    1      KN$TCTX.SEND_NOTSENT$ = ADDR(NIL);

   5585   0 000052  AB80 0000 0000                       LAB,B2   0
          0 000055  AFC4 003E                            STB,B2   62,B4

      872     5586
      873     5587    1      KN$TCTX.SEND_EHEAD$ = ADDR(NIL);

   5587   0 000057  9B80 0000 0000                       LAB,B1   0
          0 00005A  9FC4 0040                            STB,B1   64,B4

      874     5588    1      KN$TCTX.SEND_ETAIL$ = ADDR(NIL);
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:127  

   5588   0 00005C  EB80 0000 0000                       LAB,B6   0
          0 00005F  EFC4 0042                            STB,B6   66,B4

      875     5589    1      KN$TCTX.SEND_ENOTSENT$ = ADDR(NIL);

   5589   0 000061  EB80 0000 0000                       LAB,B6   0
          0 000064  EFC4 0044                            STB,B6   68,B4

      876     5590
      877     5591    1      KN$TCTX.RECV_HEAD$ = ADDR(NIL);

   5591   0 000066  EB80 0000 0000                       LAB,B6   0
          0 000069  EFC4 002A                            STB,B6   42,B4

      878     5592    1      KN$TCTX.RECV_EHEAD$ = ADDR(NIL);

   5592   0 00006B  EB80 0000 0000                       LAB,B6   0
          0 00006E  EFC4 002C                            STB,B6   44,B4

      879     5593
      880     5594    1      IF (BUFS_RLSD > 0) AND (KNT_WAIT_COUNT > 0)

   5594   0 000070  D847 0013                            LDR,R5   BUFS_RLSD,AUTO
          0 000072  5901 000C                            BEZ,R5   s:5597,PREL
          0 000074  C800 0000 0000  xsym                 LDR,R4   KNT_WAIT_COUNT
          0 000077  4901 0007                            BEZ,R4   s:5597,PREL

      881     5595    1      THEN CALL KNT$UNQ_BUFFER;

   5595   0 000079  CBF0 0000                            LAB,B4   0,IMO
          0 00007B  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_BUFFER
          0 00007E       0001                            DC       s:5597,PREL

      882     5596
      883     5597    1      RETURN;

PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:128  
   5597   0 00007F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      884     5598
      885     5599    1   END KNT$RLS_CHAIN;
      886     5600        %EOD;

PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:129  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RLS_CHAIN.
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:130  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$TCTX                  13-0-0/w UBIN(16)    r     1 BUFS_RLSD
    12-0-0/w SBIN(16)    r     1 ITEMP                     *0-0-0/w STRC(2816)  r     1 KN$TCTX
     E-0-0/w PTR         r     1 PTR$                       6-0-0/w PTR         r     1 PTR$$(0:3)
    10-0-0/w PTR         r     1 PTR2$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_WAIT_COUNT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(128)   r     1 FRAG_HDR


   Procedure KNT$RLS_CHAIN requires 130 words for executable code.
   Procedure KNT$RLS_CHAIN requires 24 words of local(AUTO) storage.
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:131  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:132  
          MINI XREF LISTING

BUFS_RLSD
      5474**DCL      5566<<ASSIGN   5578<<ASSIGN   5578>>ASSIGN   5594>>IF
FRAG_HDR
      5493**DCL      5577<>CALL
FRAG_HDR.LINK$
      5518**DCL      5576>>ASSIGN
FRAG_HDR.SEQ
      5506**DCL      5507--REDEF
ITEMP
      5473**DCL      5573<<DOINDEX  5574>>ASSIGN
KN$TCTX
      4567**DCL        17--PROC     5577<>CALL
KN$TCTX.DST_NSAP.ADDRESS_N
      5452**DCL      5453--REDEF
KN$TCTX.NODE
      4574**DCL      4587--REDEF
KN$TCTX.RECV_EHEAD$
      4984**DCL      5570>>ASSIGN   5592<<ASSIGN
KN$TCTX.RECV_HEAD$
      4973**DCL      5571>>ASSIGN   5591<<ASSIGN
KN$TCTX.SEND_EHEAD$
      5053**DCL      5568>>ASSIGN   5587<<ASSIGN
KN$TCTX.SEND_ENOTSENT$
      5066**DCL      5589<<ASSIGN
KN$TCTX.SEND_ETAIL$
      5060**DCL      5588<<ASSIGN
KN$TCTX.SEND_HEAD$
      5028**DCL      5569>>ASSIGN   5583<<ASSIGN
KN$TCTX.SEND_NOTSENT$
      5045**DCL      5585<<ASSIGN
KN$TCTX.SEND_TAIL$
      5036**DCL      5584<<ASSIGN
PL6.E3A0      #005=KNT$RLS_CHAIN File=KNT$MISC.:E05TSI                           WED 07/30/97 01:10 Page:133  
KN$TCTX.SRC_NSAP.ADDRESS_N
      5388**DCL      5389--REDEF
KN$TCTX.TMR_INACTIVITY.ARG
      5208**DCL      5209--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      5238**DCL      5239--REDEF
KN$TCTX.TMR_RETRAN.ARG
      5149**DCL      5150--REDEF
KN$TCTX.TMR_WINDOW.ARG
      5178**DCL      5179--REDEF
KNT$RELBUF
      5560**DCL-ENT  5577--CALL
KNT$UNQ_BUFFER
      5561**DCL-ENT  5595--CALL
KNT_WAIT_COUNT
      5563**DCL      5594>>IF
PTR$
      5471**DCL      5574<<ASSIGN   5575>>DOWHILE  5576>>ASSIGN   5577>>CALL     5579<<ASSIGN
PTR$$
      5470**DCL      5568<<ASSIGN   5569<<ASSIGN   5570<<ASSIGN   5571<<ASSIGN   5574>>ASSIGN
PTR2$
      5472**DCL      5576<<ASSIGN   5579>>ASSIGN

PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:134  
      887        1        /*M* KNT$RETRANS - Retransmit a segment to the peer. */
      888        2        /*T***********************************************************/
      889        3        /*T*                                                         */
      890        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      891        5        /*T*                                                         */
      892        6        /*T***********************************************************/
      893        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      894        8
      895        9        /*F* NAME: KNT$RETRANS
      896       10
      897       11        The KNT$RETRANS routine is used to retransmit a segment to the peer.
      898       12        This routine is called by:
      899       13          - KNT$TTIMER when the RETRAN Timer has expired
      900       14          - KNT$RECV when a TPDU_CR is received and the state is AKWAIT
      901       15          - KNT$RECV when a TPDU_AK is received that reduces the upper window edge
      902       16
      903       17        The retransmission timer is maintained on a per transport connection
      904       18        basis.  The timer is started whenever a TPDU requiring acknowledgement
      905       19        is transmitted and restarted whenever it receives an acknowledgement.
      906       20        The timer is stopped when an acknowledgement is received for the last
      907       21        TPDU that required acknowledgement.
      908       22
      909       23        When the retransmission timer expires, the first expediated data
      910       24        TPDU awaiting acknowledgement is retransmitted, if any.
      911       25        Otherwise some number of normal data TPDUs will be retransmitted.
      912       26        If entered from KNT$TTIMER, the number of TPDUs to be retransmitted
      913       27        is determined by the value of KNT_RETRAN_TPDU#.
      914       28        If entered because of a reduced send upper window edge, those tpdus
      915       29        between the current lower window edge and the new upper window edge
      916       30        will be retransmitted.
      917       31
      918       32        See ISO Specification 8073, 12.2.1.2 j.
      919       33        */
      920       34        KNT$RETRANS: PROC(KN$NETPARM) ALTRET;
      921       35
      922       36        %INCLUDE K_ADDRESS_M;
      923      539        %INCLUDE KN_DATA_M;
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:135  
      924     2325        %INCLUDE KNH_MACRO_C;                   /* get CP-6 function code             */
      925     2608        %INCLUDE K_INTERFACE_M;
      926     3017        %INCLUDE K_TRANSPORT_E;
      927     3342        %INCLUDE K_TRANSPORT_M;
      928     5126        %INCLUDE GH_SCHD_M;
      929     5270        %INCLUDE GH_GATE_M;
      930     5311
      931     5312                                                /* Input parameters                   */
      932     5313        %KN$NETPARM;
      933     5466
      934     5467                                                /* Auto Storage                       */
      935     5468
      936     5469    1   DCL CTX$ PTR;
      937     5470    1   DCL DATA$ CPTR;
      938     5471    1   DCL DATASIZE SBIN;
      939     5472    1   DCL HPTR$ PTR;
      940     5473    1   DCL RETRAN# UBIN;
      941     5474    1   DCL RETRAN_MAX UBIN;
      942     5475
      943     5476                                                /* Based Data                         */
      944     5477        %K$TCTX (NAME=KN$TCTX,STCLASS="BASED(CTX$)");
      945     6384    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
      946     6385
      947     6386        %K$FRAG_HDR (NAME=FRAG_HDR);
      948     6469
      949     6470                                                /* External Data                      */
      950     6471    1   DCL KN_DCT$$ PTR SYMREF;
      951     6472    1   DCL KNT_RETRAN_TPDU# UBIN SYMREF;
      952     6473    1   DCL KNT_SCODE UBIN(32) SYMREF;
      953     6474        %GATE (FPTN=KNT_LOCK,STCLASS="STATIC SYMDEF");
      954     6493
      955     6494                                                /* External Procedures                */
      956     6495    1   DCL KNN$SEND ENTRY(1) ALTRET;
      957     6496    1   DCL KNH$SEND ENTRY(1) ALTRET;
      958     6497    1   DCL KNT$TR_RETRN ENTRY(1);
      959     6498    1   DCL SCREECH ENTRY(1);
      960     6499
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:136  
      961     6500        %EJECT;
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:137  
      962     6501    1      CTX$ = KN$NETPARM.TCTX$;
      963     6502    1      RETRAN_MAX = KNT_RETRAN_TPDU#;
      964     6503    1      GOTO COMMON;
      965     6504
      966     6505    1   KNT$RETRANS_LOST: ENTRY(KN$NETPARM) ALTRET;
      967     6506    1      CTX$ = KN$NETPARM.TCTX$;
      968     6507
      969     6508    1      IF KN$TCTX.SEND_UWE > KN$TCTX.SEND_LWE
      970     6509    1      THEN RETRAN_MAX = KN$TCTX.SEND_UWE - KN$TCTX.SEND_LWE;
      971     6510    1      ELSE RETRAN_MAX = KN$TCTX.MAXSEQ - KN$TCTX.SEND_LWE + KN$TCTX.SEND_UWE;
      972     6511
      973     6512    1      KN$NETPARM.MSGSZ = 0;
      974     6513    1      KN$NETPARM.UHDRSZ = 0;
      975     6514    1      KN$NETPARM.SHDRSZ = 0;
      976     6515
      977     6516    1   COMMON: ;
      978     6517           %LOCK (G=KNT_LOCK);
      979     6524
      980     6525        /* Figure out which fragment to retransmit, if any.
      981     6526        */
      982     6527    1      IF (KN$TCTX.SEND_EHEAD$ ~= ADDR(NIL) )
      983     6528    1      THEN HPTR$ = KN$TCTX.SEND_EHEAD$;
      984     6529    1      ELSE IF ( KN$TCTX.SEND_HEAD$ = KN$TCTX.SEND_NOTSENT$ )
      985     6530    1           THEN GOTO UNLOCK_N_RETURN;
      986     6531    1           ELSE HPTR$ = KN$TCTX.SEND_HEAD$;
      987     6532
      988     6533    1      IF HPTR$ = ADDR(NIL)
      989     6534    1      THEN GOTO UNLOCK_N_RETURN;
      990     6535
      991     6536    1      RETRAN# = 0;
      992     6537
      993     6538    1   RETRAN: ;
      994     6539    1      KN$NETPARM.THDR$ = PINCRW(HPTR$,SIZEW(FRAG_HDR));
      995     6540    1      KN$NETPARM.THDRSZ = HPTR$->FRAG_HDR.DATA_BSIZE;
      996     6541    1      KN$NETPARM.NODE = KN$TCTX.NODE;
      997     6542
      998     6543    1      IF KN$TCTX.OPTION.OSI
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:138  
      999     6544    2      THEN DO;
     1000     6545    2           KN$NETPARM.FUNCTION = %K_NDATA;
     1001     6546    2           KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);
     1002     6547    2           KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);
     1003     6548    2           END;
     1004     6549    1      ELSE KN$NETPARM.FUNCTION = %KN_FCN_DATA;
     1005     6550
     1006     6551    1      IF KN$TCTX.OPTION.CONS
     1007     6552    2      THEN DO;
     1008     6553    2           KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);
     1009     6554    2           CALL KNH$SEND(KN$NETPARM) ALTRET(SET_ERR);
     1010     6555    2           END;
     1011     6556
     1012     6557    2      ELSE DO;
     1013     6558    2           CALL KNN$SEND(KN$NETPARM)
     1014     6559    3           WHENALTRETURN DO;
     1015     6560    3   SET_ERR:
     1016     6561    3                KN$TCTX.SERR.NOQ = KN$TCTX.SERR.NOQ +1;
     1017     6562    3                KN$NETPARM.ERRCODE = 0;
     1018     6563                     %UNLOCK (G=KNT_LOCK);
     1019     6570    3                ALTRETURN;
     1020     6571    3                END;
     1021     6572    2           END/*do if not cons*/;
     1022     6573
     1023     6574    1      IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_RETRN(KN$NETPARM);
     1024     6575
     1025     6576    1      KN$TCTX.SERR.RETRAN = KN$TCTX.SERR.RETRAN +1;
     1026     6577
     1027     6578    1      RETRAN# = RETRAN# +1;
     1028     6579    1      IF RETRAN# = RETRAN_MAX THEN GOTO UNLOCK_N_RETURN;
     1029     6580
     1030     6581    1      IF HPTR$ = KN$TCTX.SEND_EHEAD$ THEN GOTO UNLOCK_N_RETURN;
     1031     6582
     1032     6583    1      HPTR$ = HPTR$->FRAG_HDR.LINK$;
     1033     6584
     1034     6585    1      IF HPTR$ = ADDR(NIL) THEN GOTO UNLOCK_N_RETURN;
     1035     6586
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:139  
     1036     6587    1      IF HPTR$->FRAG_HDR.SEQ >= KN$TCTX.SEND_UWE
     1037     6588    1      THEN GOTO UNLOCK_N_RETURN;
     1038     6589
     1039     6590    1      IF HPTR$ ~= KN$TCTX.SEND_NOTSENT$
     1040     6591    1      THEN GOTO RETRAN;
     1041     6592
     1042     6593    1   UNLOCK_N_RETURN:
     1043     6594           %UNLOCK (G=KNT_LOCK);
     1044     6601    1      RETURN;
     1045     6602
     1046     6603    1   END KNT$RETRANS;
     1047     6604        %EOD;

PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:140  
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RETRANS.

   Procedure KNT$RETRANS requires 254 words for executable code.
   Procedure KNT$RETRANS requires 16 words of local(AUTO) storage.

PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:141  

 Object Unit name= KNT$RETRANS                                File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:10:44.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none     3      3  KNT$RETRANS
    1   Proc  even  none   254     FE  KNT$RETRANS
    2  RoData even  none     2      2  KNT$RETRANS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KNT$RETRANS
     1     12          yes     yes      Std        1  KNT$RETRANS_LOST

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  KNT_LOCK
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:142  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 GHH$LOCK
 yes     yes           Std       1 KNH$SEND
 yes     yes           Std       1 GHH$UNLOCK
 yes     yes           Std       1 KNN$SEND
         yes           Std       1 KNT$TR_RETRN
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KN_DCT$$                              KNT_RETRAN_TPDU#                 r    G$ROS$
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:143  


      887        1        /*M* KNT$RETRANS - Retransmit a segment to the peer. */
      888        2        /*T***********************************************************/
      889        3        /*T*                                                         */
      890        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      891        5        /*T*                                                         */
      892        6        /*T***********************************************************/
      893        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
      894        8
      895        9        /*F* NAME: KNT$RETRANS
      896       10
      897       11        The KNT$RETRANS routine is used to retransmit a segment to the peer.
      898       12        This routine is called by:
      899       13          - KNT$TTIMER when the RETRAN Timer has expired
      900       14          - KNT$RECV when a TPDU_CR is received and the state is AKWAIT
      901       15          - KNT$RECV when a TPDU_AK is received that reduces the upper window edge
      902       16
      903       17        The retransmission timer is maintained on a per transport connection
      904       18        basis.  The timer is started whenever a TPDU requiring acknowledgement
      905       19        is transmitted and restarted whenever it receives an acknowledgement.
      906       20        The timer is stopped when an acknowledgement is received for the last
      907       21        TPDU that required acknowledgement.
      908       22
      909       23        When the retransmission timer expires, the first expediated data
      910       24        TPDU awaiting acknowledgement is retransmitted, if any.
      911       25        Otherwise some number of normal data TPDUs will be retransmitted.
      912       26        If entered from KNT$TTIMER, the number of TPDUs to be retransmitted
      913       27        is determined by the value of KNT_RETRAN_TPDU#.
      914       28        If entered because of a reduced send upper window edge, those tpdus
      915       29        between the current lower window edge and the new upper window edge
      916       30        will be retransmitted.
      917       31
      918       32        See ISO Specification 8073, 12.2.1.2 j.
      919       33        */
      920       34        KNT$RETRANS: PROC(KN$NETPARM) ALTRET;

     34   1 000000  D380 0000 0000  xent KNT$RETRANS     LNJ,B5   X6A_AUTO_1
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:144  
          1 000003       0010 0001                       DC       16,1

      921       35
      922       36        %INCLUDE K_ADDRESS_M;
      923      539        %INCLUDE KN_DATA_M;
      924     2325        %INCLUDE KNH_MACRO_C;                   /* get CP-6 function code             */
      925     2608        %INCLUDE K_INTERFACE_M;
      926     3017        %INCLUDE K_TRANSPORT_E;
      927     3342        %INCLUDE K_TRANSPORT_M;
      928     5126        %INCLUDE GH_SCHD_M;
      929     5270        %INCLUDE GH_GATE_M;
      930     5311
      931     5312                                                /* Input parameters                   */
      932     5313        %KN$NETPARM;
      933     5466
      934     5467                                                /* Auto Storage                       */
      935     5468
      936     5469    1   DCL CTX$ PTR;
      937     5470    1   DCL DATA$ CPTR;
      938     5471    1   DCL DATASIZE SBIN;
      939     5472    1   DCL HPTR$ PTR;
      940     5473    1   DCL RETRAN# UBIN;
      941     5474    1   DCL RETRAN_MAX UBIN;
      942     5475
      943     5476                                                /* Based Data                         */
      944     5477        %K$TCTX (NAME=KN$TCTX,STCLASS="BASED(CTX$)");
      945     6384    1   DCL KN$LDCT$(0:0) PTR BASED(KN_DCT$$);
      946     6385
      947     6386        %K$FRAG_HDR (NAME=FRAG_HDR);
      948     6469
      949     6470                                                /* External Data                      */
      950     6471    1   DCL KN_DCT$$ PTR SYMREF;
      951     6472    1   DCL KNT_RETRAN_TPDU# UBIN SYMREF;
      952     6473    1   DCL KNT_SCODE UBIN(32) SYMREF;
      953     6474        %GATE (FPTN=KNT_LOCK,STCLASS="STATIC SYMDEF");
      954     6493
      955     6494                                                /* External Procedures                */
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:145  
      956     6495    1   DCL KNN$SEND ENTRY(1) ALTRET;
      957     6496    1   DCL KNH$SEND ENTRY(1) ALTRET;
      958     6497    1   DCL KNT$TR_RETRN ENTRY(1);
      959     6498    1   DCL SCREECH ENTRY(1);
      960     6499
      961     6500        %EJECT;
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:146  
      962     6501    1      CTX$ = KN$NETPARM.TCTX$;

   6501   1 000005  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000007  DCC6 001B                            LDB,B5   27,B6
          1 000009  DFC7 0006                            STB,B5   CTX$,AUTO

      963     6502    1      RETRAN_MAX = KNT_RETRAN_TPDU#;

   6502   1 00000B  E800 0000 0000  xsym                 LDR,R6   KNT_RETRAN_TPDU#
          1 00000E  EF47 000E                            STR,R6   RETRAN_MAX,AUTO

      964     6503    1      GOTO COMMON;

   6503   1 000010  0F81 002E                            B        s:6514,PREL

      965     6504
      966     6505    1   KNT$RETRANS_LOST: ENTRY(KN$NETPARM) ALTRET;

   6505   1 000012  D380 0000 0000  xent KNT$RETRANS_LOSTLNJ,B5   X6A_AUTO_1
          1 000015       0010 0001                       DC       16,1

      967     6506    1      CTX$ = KN$NETPARM.TCTX$;

   6506   1 000017  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          1 000019  DCC6 001B                            LDB,B5   27,B6
          1 00001B  DFC7 0006                            STB,B5   CTX$,AUTO

      968     6507
      969     6508    1      IF KN$TCTX.SEND_UWE > KN$TCTX.SEND_LWE

   6508   1 00001D  8CC5 0034                            LDI      52,B5
          1 00001F  84C5 0032                            SID      50,B5
          1 000021  0681 000E                            BCF      s:6510,PREL
          1 000023  6981 0003                            BNEZ,R6  s:6509,PREL
          1 000025  7901 000A                            BEZ,R7   s:6510,PREL

      970     6509    1      THEN RETRAN_MAX = KN$TCTX.SEND_UWE - KN$TCTX.SEND_LWE;
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:147  

   6509   1 000027  8CC5 0034                            LDI      52,B5
          1 000029  84C5 0032                            SID      50,B5
          1 00002B  E857                                 LDR,R6   R7
          1 00002C  EF47 000E                            STR,R6   RETRAN_MAX,AUTO
          1 00002E  0F81 000A                            B        s:6512,PREL

      971     6510    1      ELSE RETRAN_MAX = KN$TCTX.MAXSEQ - KN$TCTX.SEND_LWE + KN$TCTX.SEND_UWE;

   6510   1 000030  8CC5 000A                            LDI      10,B5
          1 000032  84C5 0032                            SID      50,B5
          1 000034  8445 0034                            AID      52,B5
          1 000036  E857                                 LDR,R6   R7
          1 000037  EF47 000E                            STR,R6   RETRAN_MAX,AUTO

      972     6511
      973     6512    1      KN$NETPARM.MSGSZ = 0;

   6512   1 000039  8746 0004                            CL       4,B6

      974     6513    1      KN$NETPARM.UHDRSZ = 0;

   6513   1 00003B  8746 0007                            CL       7,B6

      975     6514    1      KN$NETPARM.SHDRSZ = 0;

   6514   1 00003D  8746 000A                            CL       10,B6

   6514   1                              COMMON          null
      976     6515
      977     6516    1   COMMON: ;
      978     6517           %LOCK (G=KNT_LOCK);

   6522   1 00003F  BB80 0000 0000  02   COMMON          LAB,B3   0
          1 000042  CBF0 0100                            LAB,B4   256,IMO
          1 000044  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 000047       0001                            DC       s:6527,PREL
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:148  

      979     6524
      980     6525        /* Figure out which fragment to retransmit, if any.
      981     6526        */
      982     6527    1      IF (KN$TCTX.SEND_EHEAD$ ~= ADDR(NIL) )

   6527   1 000048  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 00004A  8DC6 0040                            CMN      64,B6
          1 00004C  0901 0007                            BE       s:6529,PREL

      983     6528    1      THEN HPTR$ = KN$TCTX.SEND_EHEAD$;

   6528   1 00004E  DCC6 0040                            LDB,B5   64,B6
          1 000050  DFC7 000B                            STB,B5   HPTR$,AUTO
          1 000052  0F81 0009                            B        s:6533,PREL

      984     6529    1      ELSE IF ( KN$TCTX.SEND_HEAD$ = KN$TCTX.SEND_NOTSENT$ )

   6529   1 000054  DCC6 003A                            LDB,B5   58,B6
          1 000056  DDC6 003E                            CMB,B5   62,B6
          1 000058  0901 0099                            BE       s:6599,PREL

      985     6530    1           THEN GOTO UNLOCK_N_RETURN;
      986     6531    1           ELSE HPTR$ = KN$TCTX.SEND_HEAD$;

   6531   1 00005A  DFC7 000B                            STB,B5   HPTR$,AUTO

      987     6532
      988     6533    1      IF HPTR$ = ADDR(NIL)

   6533   1 00005C  8DC7 000B                            CMN      HPTR$,AUTO
          1 00005E  0901 0093                            BE       s:6599,PREL

      989     6534    1      THEN GOTO UNLOCK_N_RETURN;
      990     6535
      991     6536    1      RETRAN# = 0;

PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:149  
   6536   1 000060  8747 000D                            CL       RETRAN#,AUTO

   6536   1                              RETRAN          null
      992     6537
      993     6538    1   RETRAN: ;
      994     6539    1      KN$NETPARM.THDR$ = PINCRW(HPTR$,SIZEW(FRAG_HDR));

   6539   1 000062  ECC7 000B            RETRAN          LDB,B6   HPTR$,AUTO
          1 000064  DBC6 0008                            LAB,B5   8,B6
          1 000066  CCC7 0004                            LDB,B4   @KN$NETPARM,AUTO
          1 000068  DFC4 000B                            STB,B5   11,B4

      995     6540    1      KN$NETPARM.THDRSZ = HPTR$->FRAG_HDR.DATA_BSIZE;

   6540   1 00006A  E846 0001                            LDR,R6   1,B6
          1 00006C  EF44 000D                            STR,R6   13,B4

      996     6541    1      KN$NETPARM.NODE = KN$TCTX.NODE;

   6541   1 00006E  BCC7 0006                            LDB,B3   CTX$,AUTO
          1 000070  D803                                 LDR,R5   ,B3
          1 000071  D570 00FF                            AND,R5   255,IMO
          1 000073  DF44 0015                            STR,R5   21,B4

      997     6542
      998     6543    1      IF KN$TCTX.OPTION.OSI

   6543   1 000075  82C3 000C                            LB,'0010'X        12,B3
   6543   1 000077       0010
          1 000078  0581 000E                            BBF      s:6549,PREL

      999     6544    2      THEN DO;

     1000     6545    2           KN$NETPARM.FUNCTION = %K_NDATA;

   6545   1 00007A  4C21                                 LDV,R4   33
          1 00007B  CF44 0014                            STR,R4   20,B4
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:150  

     1001     6546    2           KN$NETPARM.SRC_ADDR$ = ADDR(KN$TCTX.SRC_NSAP);

   6546   1 00007D  ABC3 009A                            LAB,B2   154,B3
          1 00007F  AFC4 001D                            STB,B2   29,B4

     1002     6547    2           KN$NETPARM.DST_ADDR$ = ADDR(KN$TCTX.DST_NSAP);

   6547   1 000081  9BC3 00A5                            LAB,B1   165,B3
          1 000083  9FC4 001F                            STB,B1   31,B4

     1003     6548    2           END;

   6548   1 000085  0F81 0004                            B        s:6551,PREL

     1004     6549    1      ELSE KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   6549   1 000087  4C05                                 LDV,R4   5
          1 000088  CF44 0014                            STR,R4   20,B4

     1005     6550
     1006     6551    1      IF KN$TCTX.OPTION.CONS

   6551   1 00008A  82C3 000C                            LB,'0020'X        12,B3
   6551   1 00008C       0020
          1 00008D  0581 0013                            BBF      s:6558,PREL

     1007     6552    2      THEN DO;

     1008     6553    2           KN$NETPARM.LDCT$ = KN$LDCT$(KN$TCTX.LDCTX#);

   6553   1 00008F  B803                                 LDR,R3   ,B3
          1 000090  B570 00FF                            AND,R3   255,IMO
          1 000092  AC80 0000 0000  xsym                 LDB,B2   KN_DCT$$
          1 000095  9CB2                                 LDB,B1   ,B2,R3
          1 000096  9F84                                 STB,B1   ,B4

PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:151  
     1009     6554    2           CALL KNH$SEND(KN$NETPARM) ALTRET(SET_ERR);

   6554   1 000097  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 000099  CBF0 0100                            LAB,B4   256,IMO
          1 00009B  E380 0000 0000  xent                 LNJ,B6   KNH$SEND
          1 00009E       000D                            DC       s:6559,PREL

     1010     6555    2           END;

   6555   1 00009F  0F81 001F                            B        s:6574,PREL

     1011     6556
     1012     6557    2      ELSE DO;

     1013     6558    2           CALL KNN$SEND(KN$NETPARM)

   6558   1 0000A1  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0000A3  CBF0 0100                            LAB,B4   256,IMO
          1 0000A5  E380 0000 0000  xent                 LNJ,B6   KNN$SEND
          1 0000A8       0003                            DC       s:6559,PREL
          1 0000A9  0F81 0015                            B        s:6574,PREL

     1014     6559    3           WHENALTRETURN DO;

     1015     6560    3   SET_ERR:
     1016     6561    3                KN$TCTX.SERR.NOQ = KN$TCTX.SERR.NOQ +1;

   6561   1 0000AB  ECC7 0006            SET_ERR         LDB,B6   CTX$,AUTO
          1 0000AD  8AC6 0013                            INC      19,B6

     1017     6562    3                KN$NETPARM.ERRCODE = 0;

   6562   1 0000AF  DCC7 0004                            LDB,B5   @KN$NETPARM,AUTO
          1 0000B1  8745 0016                            CL       22,B5

     1018     6563                     %UNLOCK (G=KNT_LOCK);

PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:152  
   6568   1 0000B3  BB80 0000 0000  02                   LAB,B3   0
          1 0000B6  CBF0 0100                            LAB,B4   256,IMO
          1 0000B8  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000BB       0001                            DC       s:6570,PREL

     1019     6570    3                ALTRETURN;

   6570   1 0000BC  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

     1020     6571    3                END;
     1021     6572    2           END/*do if not cons*/;

     1022     6573
     1023     6574    1      IF KN$TCTX.OPTION.TRACE THEN CALL KNT$TR_RETRN(KN$NETPARM);

   6574   1 0000BF  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000C1  82C6 000C                            LB,'0040'X        12,B6
          1 0000C3       0040
          1 0000C4  0581 0009                            BBF      s:6576,PREL

   6574   1 0000C6  BBC7 0004                            LAB,B3   @KN$NETPARM,AUTO
          1 0000C8  CBF0 0100                            LAB,B4   256,IMO
          1 0000CA  E380 0000 0000  xent                 LNJ,B6   KNT$TR_RETRN
          1 0000CD       0001                            DC       s:6576,PREL

     1024     6575
     1025     6576    1      KN$TCTX.SERR.RETRAN = KN$TCTX.SERR.RETRAN +1;

   6576   1 0000CE  ECC7 0006                            LDB,B6   CTX$,AUTO
          1 0000D0  8AC6 0014                            INC      20,B6

     1026     6577
     1027     6578    1      RETRAN# = RETRAN# +1;

   6578   1 0000D2  8AC7 000D                            INC      RETRAN#,AUTO

     1028     6579    1      IF RETRAN# = RETRAN_MAX THEN GOTO UNLOCK_N_RETURN;
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:153  

   6579   1 0000D4  E847 000D                            LDR,R6   RETRAN#,AUTO
          1 0000D6  E947 000E                            CMR,R6   RETRAN_MAX,AUTO
          1 0000D8  0901 0019                            BE       s:6599,PREL

     1029     6580
     1030     6581    1      IF HPTR$ = KN$TCTX.SEND_EHEAD$ THEN GOTO UNLOCK_N_RETURN;

   6581   1 0000DA  DCC7 000B                            LDB,B5   HPTR$,AUTO
          1 0000DC  DDC6 0040                            CMB,B5   64,B6
          1 0000DE  0901 0013                            BE       s:6599,PREL

     1031     6582
     1032     6583    1      HPTR$ = HPTR$->FRAG_HDR.LINK$;

   6583   1 0000E0  CCC5 0004                            LDB,B4   4,B5
          1 0000E2  CFC7 000B                            STB,B4   HPTR$,AUTO

     1033     6584
     1034     6585    1      IF HPTR$ = ADDR(NIL) THEN GOTO UNLOCK_N_RETURN;

   6585   1 0000E4  8DC7 000B                            CMN      HPTR$,AUTO
          1 0000E6  0901 000B                            BE       s:6599,PREL

     1035     6586
     1036     6587    1      IF HPTR$->FRAG_HDR.SEQ >= KN$TCTX.SEND_UWE

   6587   1 0000E8  8CC4 0002                            LDI      2,B4
          1 0000EA  84C6 0034                            SID      52,B6
          1 0000EC  0601 0005                            BCT      s:6599,PREL

     1037     6588    1      THEN GOTO UNLOCK_N_RETURN;
     1038     6589
     1039     6590    1      IF HPTR$ ~= KN$TCTX.SEND_NOTSENT$

   6590   1 0000EE  CDC6 003E                            CMB,B4   62,B6
          1 0000F0  0981 FF71                            BNE      s:6536,PREL
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:154  

     1040     6591    1      THEN GOTO RETRAN;
     1041     6592
     1042     6593    1   UNLOCK_N_RETURN:
     1043     6594           %UNLOCK (G=KNT_LOCK);

   6599   1 0000F2  BB80 0000 0000  02   UNLOCK_N_RETURN LAB,B3   0
          1 0000F5  CBF0 0100                            LAB,B4   256,IMO
          1 0000F7  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 0000FA       0001                            DC       s:6601,PREL

     1044     6601    1      RETURN;

   6601   1 0000FB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1045     6602
     1046     6603    1   END KNT$RETRANS;
     1047     6604        %EOD;

PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:155  
--  Include file information  --

   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   K_INTERFACE_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$RETRANS.
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:156  

 **** Variables and constants ****

  ****  Section 000  Data  KNT$RETRANS

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(48)    r     1 KNT_LOCK

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM                6-0-0/w PTR         r     1 CTX$
     B-0-0/w PTR         r     1 HPTR$                     *0-0-0/w STRC(528)   r     1 KN$NETPARM
     D-0-0/w UBIN(16)    r     1 RETRAN#                    E-0-0/w UBIN(16)    r     1 RETRAN_MAX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_RETRAN_TPDU#           0-0-0/w PTR         r     1 KN_DCT$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(128)   r     1 FRAG_HDR
     0-0-0/w PTR         r     1 KN$LDCT$(0:0)
     0-0-0/w STRC(2816)  r     1 KN$TCTX


   Procedure KNT$RETRANS requires 254 words for executable code.
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:157  
   Procedure KNT$RETRANS requires 16 words of local(AUTO) storage.
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:158  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:159  
          MINI XREF LISTING

COMMON
      6514**LABEL    6503--GOTO
CTX$
      5469**DCL      5482--IMP-PTR  6501<<ASSIGN   6506<<ASSIGN   6508>>IF       6508>>IF       6509>>ASSIGN
      6509>>ASSIGN   6510>>ASSIGN   6510>>ASSIGN   6510>>ASSIGN   6527>>IF       6528>>ASSIGN   6529>>IF
      6529>>IF       6531>>ASSIGN   6541>>ASSIGN   6543>>IF       6546>>ASSIGN   6547>>ASSIGN   6551>>IF
      6553>>ASSIGN   6561>>ASSIGN   6561>>ASSIGN   6574>>IF       6576>>ASSIGN   6576>>ASSIGN   6581>>IF
      6587>>IF       6590>>IF
FRAG_HDR
      6403**DCL      6539--ASSIGN
FRAG_HDR.DATA_BSIZE
      6412**DCL      6540>>ASSIGN
FRAG_HDR.LINK$
      6428**DCL      6583>>ASSIGN
FRAG_HDR.SEQ
      6416**DCL      6417--REDEF    6587>>IF
GHH$LOCK
      5310**DCL-ENT  6522--CALL
GHH$UNLOCK
      5310**DCL-ENT  6568--CALL     6599--CALL
HPTR$
      5472**DCL      6528<<ASSIGN   6531<<ASSIGN   6533>>IF       6539>>ASSIGN   6540>>ASSIGN   6581>>IF
      6583<<ASSIGN   6583>>ASSIGN   6585>>IF       6587>>IF       6590>>IF
KN$LDCT$
      6384**DCL      6553>>ASSIGN
KN$NETPARM
      5326**DCL        34--PROC     6505--ENTRY    6554<>CALL     6558<>CALL     6574<>CALL
KN$NETPARM.DST_ADDR$
      5460**DCL      6547<<ASSIGN
KN$NETPARM.ERRCODE
      5433**DCL      6562<<ASSIGN
KN$NETPARM.FUNCTION
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:160  
      5421**DCL      6545<<ASSIGN   6549<<ASSIGN
KN$NETPARM.LDCT$
      5327**DCL      6553<<ASSIGN
KN$NETPARM.MSG$
      5333**DCL      5338--REDEF
KN$NETPARM.MSGSZ
      5344**DCL      6512<<ASSIGN
KN$NETPARM.NHDR$
      5385**DCL      5386--REDEF
KN$NETPARM.NODE
      5428**DCL      6541<<ASSIGN
KN$NETPARM.SHDR$
      5363**DCL      5364--REDEF
KN$NETPARM.SHDRSZ
      5369**DCL      6514<<ASSIGN
KN$NETPARM.SRC_ADDR$
      5455**DCL      6546<<ASSIGN
KN$NETPARM.TCTX$
      5450**DCL      6501>>ASSIGN   6506>>ASSIGN
KN$NETPARM.THDR$
      5374**DCL      5375--REDEF    6539<<ASSIGN
KN$NETPARM.THDRSZ
      5380**DCL      6540<<ASSIGN
KN$NETPARM.UHDR$
      5349**DCL      5350--REDEF
KN$NETPARM.UHDRSZ
      5358**DCL      6513<<ASSIGN
KN$TCTX.DST_NSAP
      6337**DCL      6547--ASSIGN
KN$TCTX.DST_NSAP.ADDRESS_N
      6367**DCL      6368--REDEF
KN$TCTX.LDCTX#
      5502**DCL      6553>>ASSIGN
KN$TCTX.MAXSEQ
      5586**DCL      6510>>ASSIGN
KN$TCTX.NODE
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:161  
      5489**DCL      5502--REDEF    6541>>ASSIGN
KN$TCTX.OPTION.CONS
      5601**DCL      6551>>IF
KN$TCTX.OPTION.OSI
      5610**DCL      6543>>IF
KN$TCTX.OPTION.TRACE
      5596**DCL      6574>>IF
KN$TCTX.SEND_EHEAD$
      5968**DCL      6527>>IF       6528>>ASSIGN   6581>>IF
KN$TCTX.SEND_HEAD$
      5943**DCL      6529>>IF       6531>>ASSIGN
KN$TCTX.SEND_LWE
      5910**DCL      6508>>IF       6509>>ASSIGN   6510>>ASSIGN
KN$TCTX.SEND_NOTSENT$
      5960**DCL      6529>>IF       6590>>IF
KN$TCTX.SEND_UWE
      5916**DCL      6508>>IF       6509>>ASSIGN   6510>>ASSIGN   6587>>IF
KN$TCTX.SERR.NOQ
      5774**DCL      6561<<ASSIGN   6561>>ASSIGN
KN$TCTX.SERR.RETRAN
      5782**DCL      6576<<ASSIGN   6576>>ASSIGN
KN$TCTX.SRC_NSAP
      6273**DCL      6546--ASSIGN
KN$TCTX.SRC_NSAP.ADDRESS_N
      6303**DCL      6304--REDEF
KN$TCTX.TMR_INACTIVITY.ARG
      6123**DCL      6124--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      6153**DCL      6154--REDEF
KN$TCTX.TMR_RETRAN.ARG
      6064**DCL      6065--REDEF
KN$TCTX.TMR_WINDOW.ARG
      6093**DCL      6094--REDEF
KNH$SEND
      6496**DCL-ENT  6554--CALL
KNN$SEND
PL6.E3A0      #006=KNT$RETRANS File=KNT$MISC.:E05TSI                             WED 07/30/97 01:10 Page:162  
      6495**DCL-ENT  6558--CALL
KNT$TR_RETRN
      6497**DCL-ENT  6574--CALL
KNT_LOCK
      6486**DCL      6522<>CALL     6568<>CALL     6599<>CALL
KNT_RETRAN_TPDU#
      6472**DCL      6502>>ASSIGN
KN_DCT$$
      6471**DCL      6384--IMP-PTR  6553>>ASSIGN
RETRAN
      6536**LABEL    6591--GOTO
RETRAN#
      5473**DCL      6536<<ASSIGN   6578<<ASSIGN   6578>>ASSIGN   6579>>IF
RETRAN_MAX
      5474**DCL      6502<<ASSIGN   6509<<ASSIGN   6510<<ASSIGN   6579>>IF
SET_ERR
      6561**LABEL    6554--CALLALT
UNLOCK_N_RETURN
      6599**LABEL    6530--GOTO     6534--GOTO     6579--GOTO     6581--GOTO     6585--GOTO     6588--GOTO

PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:163  
     1048        1        /*M* KNT$SET_REFWAIT - Do TCTX rundown and put in REFWAIT state */
     1049        2        /*T***********************************************************/
     1050        3        /*T*                                                         */
     1051        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1052        5        /*T*                                                         */
     1053        6        /*T***********************************************************/
     1054        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
     1055        8
     1056        9        /*F* NAME: KNT$SET_REFWAIT
     1057       10             PURPOSE:
     1058       11                  Final rundown for the TCTX before it is put in state REFWAIT.
     1059       12
     1060       13             DESCRIPTION:
     1061       14                  The send and receive chains for a peer pair are released.
     1062       15                  All timers are reset.  The state is changed to REFWAIT and
     1063       16                  the reference timer is set.
     1064       17
     1065       18        */
     1066       19        KNT$SET_REFWAIT: PROC(KN$TCTX);
     1067       20
     1068       21        %INCLUDE K_ADDRESS_M;
     1069      524        %INCLUDE KN_DATA_M;
     1070     2310        %INCLUDE GH_SCHD_M;
     1071     2454
     1072     2455        %K$TCTX (NAME=KN$TCTX,STCLASS="");
     1073     3362
     1074     3363    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1075     3364    1   DCL GHS$SET_TMR ENTRY(1);
     1076     3365    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1077     3366
     1078     3367        %EJECT;
PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:164  
     1079     3368    1      CALL GHS$CANCEL_TMR(KN$TCTX.TMR_RETRAN);
     1080     3369    1      CALL GHS$CANCEL_TMR(KN$TCTX.TMR_WINDOW);
     1081     3370    1      CALL GHS$CANCEL_TMR(KN$TCTX.TMR_INACTIVITY);
     1082     3371
     1083     3372    1      CALL KNT$RLS_CHAIN(KN$TCTX);
     1084     3373
     1085     3374    1      KN$TCTX.STATE = %K_TSTATE_REFWAIT;
     1086     3375    1      CALL GHS$SET_TMR (KN$TCTX.TMR_REFERENCE);
     1087     3376
     1088     3377    1      RETURN;
     1089     3378    1   END KNT$SET_REFWAIT;
     1090     3379        %EOD;

PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:165  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SET_REFWAIT.

   Procedure KNT$SET_REFWAIT requires 74 words for executable code.
   Procedure KNT$SET_REFWAIT requires 8 words of local(AUTO) storage.

PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:166  

 Object Unit name= KNT$SET_REFWAIT                            File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:11:11.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    74     4A  KNT$SET_REFWAIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KNT$SET_REFWAIT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 GHS$CANCEL_TMR
         yes           Std       1 KNT$RLS_CHAIN
         yes           Std       1 GHS$SET_TMR
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:167  


     1048        1        /*M* KNT$SET_REFWAIT - Do TCTX rundown and put in REFWAIT state */
     1049        2        /*T***********************************************************/
     1050        3        /*T*                                                         */
     1051        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1052        5        /*T*                                                         */
     1053        6        /*T***********************************************************/
     1054        7        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
     1055        8
     1056        9        /*F* NAME: KNT$SET_REFWAIT
     1057       10             PURPOSE:
     1058       11                  Final rundown for the TCTX before it is put in state REFWAIT.
     1059       12
     1060       13             DESCRIPTION:
     1061       14                  The send and receive chains for a peer pair are released.
     1062       15                  All timers are reset.  The state is changed to REFWAIT and
     1063       16                  the reference timer is set.
     1064       17
     1065       18        */
     1066       19        KNT$SET_REFWAIT: PROC(KN$TCTX);

     19   0 000000  D380 0000 0000  xent KNT$SET_REFWAIT LNJ,B5   X6A_AUTO_1
          0 000003       0008 0001                       DC       8,1

     1067       20
     1068       21        %INCLUDE K_ADDRESS_M;
     1069      524        %INCLUDE KN_DATA_M;
     1070     2310        %INCLUDE GH_SCHD_M;
     1071     2454
     1072     2455        %K$TCTX (NAME=KN$TCTX,STCLASS="");
     1073     3362
     1074     3363    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1075     3364    1   DCL GHS$SET_TMR ENTRY(1);
     1076     3365    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1077     3366
     1078     3367        %EJECT;
PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:168  
     1079     3368    1      CALL GHS$CANCEL_TMR(KN$TCTX.TMR_RETRAN);

   3368   0 000005  ECC7 0004                            LDB,B6   @KN$TCTX,AUTO
          0 000007  DBC6 0050                            LAB,B5   80,B6
          0 000009  DFC7 0006                            STB,B5   @KN$TCTX+2,AUTO
          0 00000B  BBC7 0006                            LAB,B3   @KN$TCTX+2,AUTO
          0 00000D  CBF0 0100                            LAB,B4   256,IMO
          0 00000F  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 000012       0001                            DC       s:3369,PREL

     1080     3369    1      CALL GHS$CANCEL_TMR(KN$TCTX.TMR_WINDOW);

   3369   0 000013  ECC7 0004                            LDB,B6   @KN$TCTX,AUTO
          0 000015  DBC6 005A                            LAB,B5   90,B6
          0 000017  DFC7 0006                            STB,B5   @KN$TCTX+2,AUTO
          0 000019  BBC7 0006                            LAB,B3   @KN$TCTX+2,AUTO
          0 00001B  CBF0 0100                            LAB,B4   256,IMO
          0 00001D  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 000020       0001                            DC       s:3370,PREL

     1081     3370    1      CALL GHS$CANCEL_TMR(KN$TCTX.TMR_INACTIVITY);

   3370   0 000021  ECC7 0004                            LDB,B6   @KN$TCTX,AUTO
          0 000023  DBC6 0064                            LAB,B5   100,B6
          0 000025  DFC7 0006                            STB,B5   @KN$TCTX+2,AUTO
          0 000027  BBC7 0006                            LAB,B3   @KN$TCTX+2,AUTO
          0 000029  CBF0 0100                            LAB,B4   256,IMO
          0 00002B  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 00002E       0001                            DC       s:3372,PREL

     1082     3371
     1083     3372    1      CALL KNT$RLS_CHAIN(KN$TCTX);

   3372   0 00002F  BBC7 0004                            LAB,B3   @KN$TCTX,AUTO
          0 000031  CBF0 0100                            LAB,B4   256,IMO
          0 000033  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 000036       0001                            DC       s:3374,PREL
PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:169  

     1084     3373
     1085     3374    1      KN$TCTX.STATE = %K_TSTATE_REFWAIT;

   3374   0 000037  6C01                                 LDV,R6   1
          0 000038  ECC7 0004                            LDB,B6   @KN$TCTX,AUTO
          0 00003A  E786                                 STH,R6   ,B6

     1086     3375    1      CALL GHS$SET_TMR (KN$TCTX.TMR_REFERENCE);

   3375   0 00003B  DBC6 006E                            LAB,B5   110,B6
          0 00003D  DFC7 0006                            STB,B5   @KN$TCTX+2,AUTO
          0 00003F  BBC7 0006                            LAB,B3   @KN$TCTX+2,AUTO
          0 000041  CBF0 0100                            LAB,B4   256,IMO
          0 000043  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 000046       0001                            DC       s:3377,PREL

     1087     3376
     1088     3377    1      RETURN;

   3377   0 000047  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1089     3378    1   END KNT$SET_REFWAIT;
     1090     3379        %EOD;

PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:170  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SET_REFWAIT.
PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:171  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$TCTX                  *0-0-0/w STRC(2816)  r     1 KN$TCTX


   Procedure KNT$SET_REFWAIT requires 74 words for executable code.
   Procedure KNT$SET_REFWAIT requires 8 words of local(AUTO) storage.
PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:172  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=KNT$SET_REFWAIT File=KNT$MISC.:E05TSI                         WED 07/30/97 01:11 Page:173  
          MINI XREF LISTING

GHS$CANCEL_TMR
      3363**DCL-ENT  3368--CALL     3369--CALL     3370--CALL
GHS$SET_TMR
      3364**DCL-ENT  3375--CALL
KN$TCTX
      2460**DCL        19--PROC     3372<>CALL
KN$TCTX.DST_NSAP.ADDRESS_N
      3345**DCL      3346--REDEF
KN$TCTX.NODE
      2467**DCL      2480--REDEF
KN$TCTX.SRC_NSAP.ADDRESS_N
      3281**DCL      3282--REDEF
KN$TCTX.STATE
      2461**DCL      3374<<ASSIGN
KN$TCTX.TMR_INACTIVITY
      3099**DCL      3370<>CALL
KN$TCTX.TMR_INACTIVITY.ARG
      3101**DCL      3102--REDEF
KN$TCTX.TMR_REFERENCE
      3129**DCL      3375<>CALL
KN$TCTX.TMR_REFERENCE.ARG
      3131**DCL      3132--REDEF
KN$TCTX.TMR_RETRAN
      3040**DCL      3368<>CALL
KN$TCTX.TMR_RETRAN.ARG
      3042**DCL      3043--REDEF
KN$TCTX.TMR_WINDOW
      3069**DCL      3369<>CALL
KN$TCTX.TMR_WINDOW.ARG
      3071**DCL      3072--REDEF
KNT$RLS_CHAIN
      3365**DCL-ENT  3372--CALL

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:174  
     1091        1        /*M* KNT$TTIMER - Expired transport clock handler.  */
     1092        2        /*T***********************************************************/
     1093        3        /*T*                                                         */
     1094        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1095        5        /*T*                                                         */
     1096        6        /*T***********************************************************/
     1097        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1098        8
     1099        9        /*F* NAME: KNT$TTIMER
     1100       10
     1101       11        The KNT$TTIMER routine is the handler for the expired transport
     1102       12        clocks.
     1103       13
     1104       14
     1105       15        */
     1106       16        KNT$TTIMER: PROC(CLOCK_ID);
     1107       17
     1108       18        %INCLUDE K_ADDRESS_M;
     1109      521        %INCLUDE KNH_MACRO_C;
     1110      804        %INCLUDE KN_DATA_M;
     1111     2590        %INCLUDE K_TRANSPORT_E;
     1112     2915        %INCLUDE K_TRANSPORT_M;
     1113     4699        %INCLUDE GH_SCHD_M;
     1114     4843
     1115     4844                                                /* Input parameters                   */
     1116     4845    1   DCL 1 CLOCK_ID ALIGNED,
     1117     4846    1         2 TCTX UBIN BYTE UNAL,
     1118     4847    1         2 TIMER UBIN BYTE UNAL;
     1119     4848
     1120     4849                                                /* Auto Storage                       */
     1121     4850    1   DCL CTX$ PTR;
     1122     4851    1   DCL TYPE UBIN;
     1123     4852    1   DCL FUNCTION UBIN;
     1124     4853
     1125     4854        %KN$NETPARM (STCLASS=AUTO);
     1126     5007
     1127     5008                                                /* Based Data                         */
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:175  
     1128     5009        %K$TCTX (NAME=KN$TCTX,STCLASS="BASED(CTX$)");
     1129     5916    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     1130     5917
     1131     5918                                                /* External Data                      */
     1132     5919    1   DCL KN_TCTX$$ PTR SYMREF;
     1133     5920    1   DCL KNT_MAX_RETRY UBIN SYMREF;
     1134     5921    1   DCL KNT_TIMER_SCREECH UBIN SYMREF;
     1135     5922    1   DCL KNT_SCODE UBIN(32) SYMREF;
     1136     5923        %KN$NETPARM (NAME=KN_NETPARM_INIT, STCLASS=SYMREF);
     1137     6076
     1138     6077                                                /* External Procedures                */
     1139     6078    1   DCL GHS$SET_TMR ENTRY(1);
     1140     6079    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1141     6080    1   DCL KNT$RETRANS ENTRY(1) ALTRET;
     1142     6081    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1143     6082    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
     1144     6083    1   DCL KNS$RECV ENTRY(1) ALTRET;
     1145     6084    1   DCL KNT$SEND_AK ENTRY(1) ALTRET;
     1146     6085    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
     1147     6086    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
     1148     6087    1   DCL KNT$SET_REFWAIT ENTRY(1);
     1149     6088    1   DCL KNT$UNQ_FLOW ENTRY(1);
     1150     6089    1   DCL SCREECH ENTRY(1);
     1151     6090
     1152     6091        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:176  
     1153     6092    1      CTX$ = KN$TCTX$(CLOCK_ID.TCTX);
     1154     6093    1      IF CTX$ = ADDR(NIL)
     1155     6094    2      THEN DO;
     1156     6095    2           CALL I$TIMER_SCREECH;
     1157     6096    2           RETURN;
     1158     6097    2           END;
     1159     6098
     1160     6099    1      KN$NETPARM = KN_NETPARM_INIT;
     1161     6100    1      KN$NETPARM.TCTX$ = CTX$;
     1162     6101    1      KN$NETPARM.NODE = KN$TCTX.NODE;
     1163     6102
     1164     6103        /* When the call to KNT$TTIMER was made with the pseudo timer code,
     1165     6104           this is a call to begin the disconnect process for this connection.
     1166     6105        */
     1167     6106    1      IF CLOCK_ID.TIMER = %K_TTIMER_PSEUDO
     1168     6107    2      THEN DO;
     1169     6108    2           CALL I$WINDOW_STOP;
     1170     6109    2           CALL I$INACTIVITY_STOP;
     1171     6110    2           CALL GHS$CANCEL_TMR (KN$TCTX.TMR_RETRAN);
     1172     6111
     1173     6112    2           KN$TCTX.ERR = %K_ERROR_RESTART;
     1174     6113    2           GOTO INIT_RELEASE;
     1175     6114    2           END;
     1176     6115
     1177     6116    1      KN$TCTX.TMR_COUNT(CLOCK_ID.TIMER) = KN$TCTX.TMR_COUNT(CLOCK_ID.TIMER) +1;
     1178     6117
     1179     6118        /* When the retran timer expires after the maximum number of transmissions
     1180     6119           we wait one final time to provide a higher probability of receiving
     1181     6120           an ack before entering the release phase.  We do this for any possible
     1182     6121           state of the transport connection.
     1183     6122        */
     1184     6123    1      IF CLOCK_ID.TIMER = %K_TTIMER_RETRAN
     1185     6124    2      THEN DO;
     1186     6125    2           IF KN$TCTX.CLASS ~= 4
     1187     6126    2           THEN CALL I$TIMER_SCREECH;
     1188     6127
     1189     6128    2           IF KN$TCTX.SEND_RETRY_COUNT = KNT_MAX_RETRY
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:177  
     1190     6129    3           THEN DO;
     1191     6130    3   WAIT_T1:
     1192     6131    3                KN$TCTX.SEND_RETRY_COUNT = KN$TCTX.SEND_RETRY_COUNT + 1;
     1193     6132    3                CALL I$RETRAN_START;
     1194     6133    3                RETURN;
     1195     6134    3                END;
     1196     6135
     1197     6136        /* If the transport connection is in the OPEN state when the retran
     1198     6137           timer expires, the first un-acked tpdu in the window is retransmitted,
     1199     6138           the retry_count is bumped and the retran timer is restarted.
     1200     6139        */
     1201     6140    2           IF KN$TCTX.STATE = %K_TSTATE_OPEN
     1202     6141    3           THEN DO;
     1203     6142    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY
     1204     6143    4                THEN DO;
     1205     6144    4   RETRANSMIT_TPDU:
     1206     6145    4                     CALL KNT$RETRANS(KN$NETPARM);
     1207     6146    4                     IF KN$TCTX.SEND_HEAD$ = ADDR(NIL) AND
     1208     6147    4                       KN$TCTX.SEND_EHEAD$ = ADDR(NIL)
     1209     6148    4                     THEN RETURN;
     1210     6149    4                     GOTO WAIT_T1;
     1211     6150    4                     END;
     1212     6151
     1213     6152        /* After the maximum number of retries, we begin the release procedure.
     1214     6153           The window and inactivity timers are stopped and the transport
     1215     6154           state is set to CLOSING.  A disconnect request tpdu is sent to
     1216     6155           the other endpoint and we reset the retran timer and retry count
     1217     6156           to try to get a response to the disconnect request.
     1218     6157        */
     1219     6158    3                CALL I$WINDOW_STOP;
     1220     6159    3                CALL I$INACTIVITY_STOP;
     1221     6160    3   INIT_RELEASE0: ;
     1222     6161    3                IF KN$TCTX.ERR = 0
     1223     6162    3                THEN KN$TCTX.ERR = %K_ERROR_RETRAN;
     1224     6163
     1225     6164    3   INIT_RELEASE: ;
     1226     6165    3                KN$TCTX.STATE = %K_TSTATE_CLOSING;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:178  
     1227     6166    3                CALL KNT$RLS_CHAIN(KN$TCTX);
     1228     6167
     1229     6168    3                IF KN$TCTX.PRIMARY
     1230     6169    4                THEN DO;
     1231     6170    4                     KN$NETPARM.FUNCTION = %KN_FCN_TERM;
     1232     6171    4                     KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;
     1233     6172    4                     CALL KNS$RECV(KN$NETPARM);
     1234     6173    4                     KN$NETPARM.NODE = KN$TCTX.NODE;
     1235     6174    4                     KN$NETPARM.TCTX$ = CTX$;
     1236     6175    4                     END;
     1237     6176    4                ELSE DO;
     1238     6177    4                     CALL KNT$SEND_DR_HOST(KN$NETPARM);
     1239     6178    4                     END;
     1240     6179
     1241     6180    3                IF KN$TCTX.LNK$ ~= ADDR(NIL)
     1242     6181    3                THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);
     1243     6182
     1244     6183    3                IF KN$TCTX.ERR = %K_ERROR_RESTART
     1245     6184    3                THEN GOTO END_IT;
     1246     6185
     1247     6186    3                KN$TCTX.SEND_RETRY_COUNT = 1;
     1248     6187
     1249     6188    3                CALL KNT$SEND_DR(KN$NETPARM);
     1250     6189    3                CALL I$RETRAN_START;
     1251     6190
     1252     6191    3                RETURN;
     1253     6192    3                END/*do if open*/;
     1254     6193
     1255     6194        /* If the retran timer expires while waiting for an ACK to our TPDU_CC,
     1256     6195           we retransmit the TPDU_CC and restart the timer.  After the
     1257     6196           maximum number of retries, the release procedure is initiated.
     1258     6197        */
     1259     6198    2           IF KN$TCTX.STATE = %K_TSTATE_AKWAIT
     1260     6199    3           THEN DO;
     1261     6200    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY
     1262     6201    3                THEN GOTO RETRANSMIT_TPDU;
     1263     6202    3                ELSE GOTO INIT_RELEASE0;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:179  
     1264     6203    3                END/*do fi akwait*/;
     1265     6204
     1266     6205        /*  If the retran timer expires when the state is CLOSING, after the
     1267     6206            usual number of retires to transmit the disconnect request, the
     1268     6207            state of the connection is set to REFWAIT, and the reference timer
     1269     6208            is started so we can discared any tpdus that belong to this connection
     1270     6209            that may leak through the network.
     1271     6210        */
     1272     6211    2           IF KN$TCTX.STATE = %K_TSTATE_CLOSING
     1273     6212    3           THEN DO;
     1274     6213    3                IF KN$TCTX.CLASS ~= 4 THEN GOTO END_IT;
     1275     6214
     1276     6215    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY
     1277     6216    4                THEN DO;
     1278     6217    4                     KN$TCTX.SEND_RETRY_COUNT = KN$TCTX.SEND_RETRY_COUNT + 1;
     1279     6218    4                     GOTO RETRANSMIT_TPDU;
     1280     6219    4                     END;
     1281     6220    4                ELSE DO;
     1282     6221    4   END_IT:
     1283     6222    4                     CALL KNT$SET_REFWAIT (KN$TCTX);
     1284     6223    4                     END;
     1285     6224    3                RETURN;
     1286     6225    3                END/*do if closing*/;
     1287     6226
     1288     6227        /* If the retran timer expires while we are waiting for the connect
     1289     6228           confirm, we retransmit the tpdu_cr the standare number of times
     1290     6229           and then initiate the r3lease procedures.
     1291     6230        */
     1292     6231    2           IF KN$TCTX.STATE = %K_TSTATE_WFCC
     1293     6232    2             OR KN$TCTX.STATE = %K_TSTATE_WBCL
     1294     6233    2             OR KN$TCTX.STATE = %K_TSTATE_WFCC_R
     1295     6234    3           THEN DO;
     1296     6235    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY
     1297     6236    3                THEN GOTO RETRANSMIT_TPDU;
     1298     6237    4                ELSE DO;
     1299     6238    4                     KN$TCTX.ERR = %K_ERROR_CONNECT_TO;
     1300     6239                                                /* Connection establishment timed out */
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:180  
     1301     6240    4                     GOTO INIT_RELEASE;
     1302     6241    4                     END;
     1303     6242    3                END/*do if wfcc or wbcl*/;
     1304     6243
     1305     6244        /* If the retrans timer expires while the transport connection is in
     1306     6245           any other state, simply ignore it.
     1307     6246        */
     1308     6247    2           CALL I$TIMER_SCREECH;
     1309     6248    2           RETURN;
     1310     6249
     1311     6250    2           END/*do if timer_retran*/;
     1312     6251
     1313     6252        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:181  
     1314     6253        /* When the reference timer expires, the transport connection is
     1315     6254           marked CLOSED and the context block is returned to the chain of
     1316     6255           free entries.
     1317     6256        */
     1318     6257    1      IF CLOCK_ID.TIMER = %K_TTIMER_REFERENCE
     1319     6258    2      THEN DO;
     1320     6259    2           IF KN$TCTX.STATE = %K_TSTATE_REFWAIT
     1321     6260    3           THEN DO;
     1322     6261    3                KN$TCTX.STATE = %K_TSTATE_CLOSED;
     1323     6262    3                CALL KNA$RELTCTX(CTX$);
     1324     6263    3                END;
     1325     6264    2           ELSE CALL I$TIMER_SCREECH;
     1326     6265    2           RETURN;
     1327     6266    2           END;
     1328     6267
     1329     6268        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:182  
     1330     6269        /* If the window timer or the inactivity timer expires while the
     1331     6270           the timer is in any state but open, it is ignored.
     1332     6271           Otherwise, send an Ack tpdu when the window timer expires and
     1333     6272           initiate the release procedures when the inactivity timer expries.
     1334     6273        */
     1335     6274    1      IF KN$TCTX.STATE ~= %K_TSTATE_OPEN
     1336     6275    1      THEN RETURN;
     1337     6276
     1338     6277    1      IF KN$TCTX.CLASS ~= 4
     1339     6278    1      THEN CALL I$TIMER_SCREECH;
     1340     6279
     1341     6280    1      IF CLOCK_ID.TIMER = %K_TTIMER_WINDOW
     1342     6281    2      THEN DO;
     1343     6282    2           CALL KNT$SEND_AK(KN$NETPARM);
     1344     6283    2           CALL GHS$SET_TMR (KN$TCTX.TMR_WINDOW);
     1345     6284    2           RETURN;
     1346     6285    2           END;
     1347     6286
     1348     6287
     1349     6288    1      IF CLOCK_ID.TIMER = %K_TTIMER_INACTIVITY
     1350     6289    2      THEN DO;
     1351     6290    2           IF NOT KN$TCTX.OPTION.OSI
     1352     6291    3           THEN DO;
     1353     6292    3                CALL GHS$SET_TMR (KN$TCTX.TMR_INACTIVITY);
     1354     6293    3                RETURN;
     1355     6294    3                END;
     1356     6295
     1357     6296    2           CALL I$WINDOW_STOP;
     1358     6297    2           KN$TCTX.ERR = %K_ERROR_INACT_TO;
     1359     6298    2           GOTO INIT_RELEASE;
     1360     6299    2           END;
     1361     6300
     1362     6301    1      CALL I$TIMER_SCREECH;
     1363     6302
     1364     6303    1      RETURN;
     1365     6304        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:183  
     1366     6305
     1367     6306    1   I$RETRAN_START: PROC;
     1368     6307    2      CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);
     1369     6308    2      RETURN;
     1370     6309    2   END I$RETRAN_START;
     1371     6310
     1372     6311    1   I$WINDOW_STOP: PROC;
     1373     6312    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_WINDOW);
     1374     6313    2      RETURN;
     1375     6314    2   END I$WINDOW_STOP;
     1376     6315
     1377     6316    1   I$INACTIVITY_STOP: PROC;
     1378     6317    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_INACTIVITY);
     1379     6318    2      RETURN;
     1380     6319    2   END I$INACTIVITY_STOP;
     1381     6320
     1382     6321
     1383     6322    1   I$TIMER_SCREECH: PROC;
     1384     6323    2      IF KNT_TIMER_SCREECH ~= 0
     1385     6324    3      THEN DO;
     1386     6325    3           CALL SCREECH(KNT_SCODE);
     1387     6326    3           END;
     1388     6327    2      RETURN;
     1389     6328    2   END I$TIMER_SCREECH;
     1390     6329    1   END KNT$TTIMER;
     1391     6330        %EOD;

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:184  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$TTIMER.

   Procedure KNT$TTIMER requires 560 words for executable code.
   Procedure KNT$TTIMER requires 48 words of local(AUTO) storage.

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:185  

 Object Unit name= KNT$TTIMER                                 File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:11:31.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   560    230  KNT$TTIMER
    1  RoData even  none     2      2  KNT$TTIMER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KNT$TTIMER

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 GHS$CANCEL_TMR
         yes           Std       1 KNT$SET_REFWAIT
 yes     yes           Std       1 KNT$RETRANS
         yes           Std       1 KNT$RLS_CHAIN
 yes     yes           Std       1 KNA$RELTCTX
         yes           Std       1 GHS$SET_TMR
 yes     yes           Std       1 KNT$SEND_AK
 yes     yes           Std       1 KNS$RECV
 yes     yes           Std       1 KNT$SEND_DR_HOST
         yes           Std       1 KNT$UNQ_FLOW
 yes     yes           Std       1 KNT$SEND_DR
         yes           Std       1 SCREECH
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:186  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KN_TCTX$$                             KNT_MAX_RETRY                         KNT_TIMER_SCREECH
     KNT_SCODE                             KN_NETPARM_INIT                  r    G$ROS$
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:187  


     1091        1        /*M* KNT$TTIMER - Expired transport clock handler.  */
     1092        2        /*T***********************************************************/
     1093        3        /*T*                                                         */
     1094        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1095        5        /*T*                                                         */
     1096        6        /*T***********************************************************/
     1097        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1098        8
     1099        9        /*F* NAME: KNT$TTIMER
     1100       10
     1101       11        The KNT$TTIMER routine is the handler for the expired transport
     1102       12        clocks.
     1103       13
     1104       14
     1105       15        */
     1106       16        KNT$TTIMER: PROC(CLOCK_ID);

     16   0 000000  D380 0000 0000  xent KNT$TTIMER      LNJ,B5   X6A_AUTO_1
          0 000003       0030 0001                       DC       48,1

     1107       17
     1108       18        %INCLUDE K_ADDRESS_M;
     1109      521        %INCLUDE KNH_MACRO_C;
     1110      804        %INCLUDE KN_DATA_M;
     1111     2590        %INCLUDE K_TRANSPORT_E;
     1112     2915        %INCLUDE K_TRANSPORT_M;
     1113     4699        %INCLUDE GH_SCHD_M;
     1114     4843
     1115     4844                                                /* Input parameters                   */
     1116     4845    1   DCL 1 CLOCK_ID ALIGNED,
     1117     4846    1         2 TCTX UBIN BYTE UNAL,
     1118     4847    1         2 TIMER UBIN BYTE UNAL;
     1119     4848
     1120     4849                                                /* Auto Storage                       */
     1121     4850    1   DCL CTX$ PTR;
     1122     4851    1   DCL TYPE UBIN;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:188  
     1123     4852    1   DCL FUNCTION UBIN;
     1124     4853
     1125     4854        %KN$NETPARM (STCLASS=AUTO);
     1126     5007
     1127     5008                                                /* Based Data                         */
     1128     5009        %K$TCTX (NAME=KN$TCTX,STCLASS="BASED(CTX$)");
     1129     5916    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     1130     5917
     1131     5918                                                /* External Data                      */
     1132     5919    1   DCL KN_TCTX$$ PTR SYMREF;
     1133     5920    1   DCL KNT_MAX_RETRY UBIN SYMREF;
     1134     5921    1   DCL KNT_TIMER_SCREECH UBIN SYMREF;
     1135     5922    1   DCL KNT_SCODE UBIN(32) SYMREF;
     1136     5923        %KN$NETPARM (NAME=KN_NETPARM_INIT, STCLASS=SYMREF);
     1137     6076
     1138     6077                                                /* External Procedures                */
     1139     6078    1   DCL GHS$SET_TMR ENTRY(1);
     1140     6079    1   DCL GHS$CANCEL_TMR ENTRY(1);
     1141     6080    1   DCL KNT$RETRANS ENTRY(1) ALTRET;
     1142     6081    1   DCL KNT$RLS_CHAIN ENTRY(1);
     1143     6082    1   DCL KNA$RELTCTX ENTRY(1) ALTRET;
     1144     6083    1   DCL KNS$RECV ENTRY(1) ALTRET;
     1145     6084    1   DCL KNT$SEND_AK ENTRY(1) ALTRET;
     1146     6085    1   DCL KNT$SEND_DR ENTRY(1) ALTRET;
     1147     6086    1   DCL KNT$SEND_DR_HOST ENTRY(1) ALTRET;
     1148     6087    1   DCL KNT$SET_REFWAIT ENTRY(1);
     1149     6088    1   DCL KNT$UNQ_FLOW ENTRY(1);
     1150     6089    1   DCL SCREECH ENTRY(1);
     1151     6090
     1152     6091        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:189  
     1153     6092    1      CTX$ = KN$TCTX$(CLOCK_ID.TCTX);

   6092   0 000005  ECC7 0004                            LDB,B6   @CLOCK_ID,AUTO
          0 000007  B286                                 LLH,R3   ,B6
          0 000008  DC80 0000 0000  xsym                 LDB,B5   KN_TCTX$$
          0 00000B  CCB5                                 LDB,B4   ,B5,R3
          0 00000C  CFC7 0006                            STB,B4   CTX$,AUTO

     1154     6093    1      IF CTX$ = ADDR(NIL)

   6093   0 00000E  8DC7 0006                            CMN      CTX$,AUTO
          0 000010  0981 0007                            BNE      s:6099,PREL

     1155     6094    2      THEN DO;

     1156     6095    2           CALL I$TIMER_SCREECH;

   6095   0 000012  E3C0 0209                            LNJ,B6   s:0,PREL
          0 000014       0001                            DC       s:6096,PREL

     1157     6096    2           RETURN;

   6096   0 000015  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1158     6097    2           END;
     1159     6098
     1160     6099    1      KN$NETPARM = KN_NETPARM_INIT;

   6099   0 000018  AB80 0000 0000  xsym                 LAB,B2   KN_NETPARM_INIT
          0 00001B  2C00                                 LDV,R2   0
          0 00001C  6C42                                 LDV,R6   66
          0 00001D  BB87                                 LAB,B3   ,AUTO
          0 00001E  3C14                                 LDV,R3   20
          0 00001F  0008                                 MMM

     1161     6100    1      KN$NETPARM.TCTX$ = CTX$;

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:190  
   6100   0 000020  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 000022  DFC7 0025                            STB,B5   KN$NETPARM+27,AUTO

     1162     6101    1      KN$NETPARM.NODE = KN$TCTX.NODE;

   6101   0 000024  E805                                 LDR,R6   ,B5
          0 000025  E570 00FF                            AND,R6   255,IMO
          0 000027  EF47 001F                            STR,R6   KN$NETPARM+21,AUTO

     1163     6102
     1164     6103        /* When the call to KNT$TTIMER was made with the pseudo timer code,
     1165     6104           this is a call to begin the disconnect process for this connection.
     1166     6105        */
     1167     6106    1      IF CLOCK_ID.TIMER = %K_TTIMER_PSEUDO

   6106   0 000029  D806                                 LDR,R5   ,B6
          0 00002A  D570 00FF                            AND,R5   255,IMO
          0 00002C  5D04                                 CMV,R5   4
          0 00002D  0981 001E                            BNE      s:6116,PREL

     1168     6107    2      THEN DO;

     1169     6108    2           CALL I$WINDOW_STOP;

   6108   0 00002F  E3C0 01C4                            LNJ,B6   s:0,PREL
          0 000031       0001                            DC       s:6109,PREL

     1170     6109    2           CALL I$INACTIVITY_STOP;

   6109   0 000032  E3C0 01D5                            LNJ,B6   s:0,PREL
          0 000034       0001                            DC       s:6110,PREL

     1171     6110    2           CALL GHS$CANCEL_TMR (KN$TCTX.TMR_RETRAN);

   6110   0 000035  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 000037  DBC6 0050                            LAB,B5   80,B6
          0 000039  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:191  
          0 00003B  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 00003D  CBF0 0100                            LAB,B4   256,IMO
          0 00003F  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 000042       0001                            DC       s:6112,PREL

     1172     6111
     1173     6112    2           KN$TCTX.ERR = %K_ERROR_RESTART;

   6112   0 000043  E870 00F6                            LDR,R6   246,IMO
          0 000045  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 000047  EAC6 000E                            SRM,R6,'00FF'X    14,B6
          0 000049       00FF

     1174     6113    2           GOTO INIT_RELEASE;

   6113   0 00004A  0F81 0062                            B        s:6161,PREL

     1175     6114    2           END;
     1176     6115
     1177     6116    1      KN$TCTX.TMR_COUNT(CLOCK_ID.TIMER) = KN$TCTX.TMR_COUNT(CLOCK_ID.TIMER) +1;

   6116   0 00004C  B855                                 LDR,R3   R5
          0 00004D  CBC5 004E                            LAB,B4   78,B5
          0 00004F  C2B4                                 LLH,R4   ,B4,R3
          0 000050  4E01                                 ADV,R4   1
          0 000051  CBC5 004E                            LAB,B4   78,B5
          0 000053  C7B4                                 STH,R4   ,B4,R3

     1178     6117
     1179     6118        /* When the retran timer expires after the maximum number of transmissions
     1180     6119           we wait one final time to provide a higher probability of receiving
     1181     6120           an ack before entering the release phase.  We do this for any possible
     1182     6121           state of the transport connection.
     1183     6122        */
     1184     6123    1      IF CLOCK_ID.TIMER = %K_TTIMER_RETRAN

   6123   0 000054  8286                                 LB,'00FF'X        ,B6
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:192  
   6123   0 000055       00FF
          0 000056  0501 0106                            BBT      s:6257,PREL

     1185     6124    2      THEN DO;

     1186     6125    2           IF KN$TCTX.CLASS ~= 4

   6125   0 000058  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 00005A  E2C5 0005                            LLH,R6   5,B5
          0 00005C  6D04                                 CMV,R6   4
          0 00005D  0901 0004                            BE       s:6128,PREL

     1187     6126    2           THEN CALL I$TIMER_SCREECH;

   6126   0 00005F  E3C0 01BC                            LNJ,B6   s:0,PREL
          0 000061       0001                            DC       s:6128,PREL

     1188     6127
     1189     6128    2           IF KN$TCTX.SEND_RETRY_COUNT = KNT_MAX_RETRY

   6128   0 000062  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 000064  E2C6 004D                            LLH,R6   77,B6
          0 000066  E900 0000 0000  xsym                 CMR,R6   KNT_MAX_RETRY
          0 000069  0981 000E                            BNE      s:6140,PREL

     1190     6129    3           THEN DO;

     1191     6130    3   WAIT_T1:
     1192     6131    3                KN$TCTX.SEND_RETRY_COUNT = KN$TCTX.SEND_RETRY_COUNT + 1;

   6131   0 00006B  ECC7 0006            WAIT_T1         LDB,B6   CTX$,AUTO
          0 00006D  E2C6 004D                            LLH,R6   77,B6
          0 00006F  6E01                                 ADV,R6   1
          0 000070  E7C6 004D                            STH,R6   77,B6

     1193     6132    3                CALL I$RETRAN_START;

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:193  
   6132   0 000072  E3C0 016D                            LNJ,B6   s:0,PREL
          0 000074       0001                            DC       s:6133,PREL

     1194     6133    3                RETURN;

   6133   0 000075  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1195     6134    3                END;
     1196     6135
     1197     6136        /* If the transport connection is in the OPEN state when the retran
     1198     6137           timer expires, the first un-acked tpdu in the window is retransmitted,
     1199     6138           the retry_count is bumped and the retran timer is restarted.
     1200     6139        */
     1201     6140    2           IF KN$TCTX.STATE = %K_TSTATE_OPEN

   6140   0 000078  D286                                 LLH,R5   ,B6
          0 000079  5D05                                 CMV,R5   5
          0 00007A  0981 00A0                            BNE      s:6198,PREL

     1202     6141    3           THEN DO;

     1203     6142    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY

   6142   0 00007C  E900 0000 0000  xsym                 CMR,R6   KNT_MAX_RETRY
          0 00007F  0281 001B                            BGE      s:6158,PREL

     1204     6143    4                THEN DO;

     1205     6144    4   RETRANSMIT_TPDU:
     1206     6145    4                     CALL KNT$RETRANS(KN$NETPARM);

   6145   0 000081  EBC7 000A            RETRANSMIT_TPDU LAB,B6   KN$NETPARM,AUTO
          0 000083  EFC7 002E                            STB,B6   KN$NETPARM+36,AUTO
          0 000085  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 000087  CBF0 0100                            LAB,B4   256,IMO
          0 000089  E380 0000 0000  xent                 LNJ,B6   KNT$RETRANS
          0 00008C       0001                            DC       s:6146,PREL
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:194  

     1207     6146    4                     IF KN$TCTX.SEND_HEAD$ = ADDR(NIL) AND

   6146   0 00008D  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 00008F  8DC6 003A                            CMN      58,B6
          0 000091  0981 0008                            BNE      s:6149,PREL
          0 000093  8DC6 0040                            CMN      64,B6
          0 000095  0981 0004                            BNE      s:6149,PREL

     1208     6147    4                       KN$TCTX.SEND_EHEAD$ = ADDR(NIL)
     1209     6148    4                     THEN RETURN;

   6148   0 000097  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1210     6149    4                     GOTO WAIT_T1;

   6149   0 00009A  0FD1                                 B        s:6129,SPREL

     1211     6150    4                     END;
     1212     6151
     1213     6152        /* After the maximum number of retries, we begin the release procedure.
     1214     6153           The window and inactivity timers are stopped and the transport
     1215     6154           state is set to CLOSING.  A disconnect request tpdu is sent to
     1216     6155           the other endpoint and we reset the retran timer and retry count
     1217     6156           to try to get a response to the disconnect request.
     1218     6157        */
     1219     6158    3                CALL I$WINDOW_STOP;

   6158   0 00009B  E3C0 0158                            LNJ,B6   s:0,PREL
          0 00009D       0001                            DC       s:6159,PREL

     1220     6159    3                CALL I$INACTIVITY_STOP;

   6159   0 00009E  E3C0 0169                            LNJ,B6   s:0,PREL
          0 0000A0       0001                            DC       s:6143,PREL

   6143   0                              INIT_RELEASE0   null
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:195  
     1221     6160    3   INIT_RELEASE0: ;
     1222     6161    3                IF KN$TCTX.ERR = 0

   6161   0 0000A1  ECC7 0006            INIT_RELEASE0   LDB,B6   CTX$,AUTO
          0 0000A3  82C6 000E                            LB,'00FF'X        14,B6
          0 0000A5       00FF
          0 0000A6  0501 0006                            BBT      s:6161,PREL

     1223     6162    3                THEN KN$TCTX.ERR = %K_ERROR_RETRAN;

   6162   0 0000A8  E870 00DD                            LDR,R6   221,IMO
          0 0000AA  EAC6 000E                            SRM,R6,'00FF'X    14,B6
          0 0000AC       00FF

   6161   0                              INIT_RELEASE    null
     1224     6163
     1225     6164    3   INIT_RELEASE: ;
     1226     6165    3                KN$TCTX.STATE = %K_TSTATE_CLOSING;

   6165   0 0000AD  6C08                 INIT_RELEASE    LDV,R6   8
          0 0000AE  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0000B0  E786                                 STH,R6   ,B6

     1227     6166    3                CALL KNT$RLS_CHAIN(KN$TCTX);

   6166   0 0000B1  BBC7 0006                            LAB,B3   CTX$,AUTO
          0 0000B3  CBF0 0100                            LAB,B4   256,IMO
          0 0000B5  E380 0000 0000  xent                 LNJ,B6   KNT$RLS_CHAIN
          0 0000B8       0001                            DC       s:6168,PREL

     1228     6167
     1229     6168    3                IF KN$TCTX.PRIMARY

   6168   0 0000B9  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0000BB  82C6 000D                            LB,'0001'X        13,B6
          0 0000BD       0001
          0 0000BE  0581 001F                            BBF      s:6177,PREL
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:196  

     1230     6169    4                THEN DO;

     1231     6170    4                     KN$NETPARM.FUNCTION = %KN_FCN_TERM;

   6170   0 0000C0  6C03                                 LDV,R6   3
          0 0000C1  EF47 001E                            STR,R6   KN$NETPARM+20,AUTO

     1232     6171    4                     KN$NETPARM.TCTX_ID = KN$TCTX.SRC_REF;

   6171   0 0000C3  D846 0002                            LDR,R5   2,B6
          0 0000C5  DF47 001B                            STR,R5   KN$NETPARM+17,AUTO

     1233     6172    4                     CALL KNS$RECV(KN$NETPARM);

   6172   0 0000C7  DBC7 000A                            LAB,B5   KN$NETPARM,AUTO
          0 0000C9  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
          0 0000CB  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 0000CD  CBF0 0100                            LAB,B4   256,IMO
          0 0000CF  E380 0000 0000  xent                 LNJ,B6   KNS$RECV
          0 0000D2       0001                            DC       s:6173,PREL

     1234     6173    4                     KN$NETPARM.NODE = KN$TCTX.NODE;

   6173   0 0000D3  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0000D5  E806                                 LDR,R6   ,B6
          0 0000D6  E570 00FF                            AND,R6   255,IMO
          0 0000D8  EF47 001F                            STR,R6   KN$NETPARM+21,AUTO

     1235     6174    4                     KN$NETPARM.TCTX$ = CTX$;

   6174   0 0000DA  EFC7 0025                            STB,B6   KN$NETPARM+27,AUTO

     1236     6175    4                     END;

   6175   0 0000DC  0F81 000D                            B        s:6180,PREL

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:197  
     1237     6176    4                ELSE DO;

     1238     6177    4                     CALL KNT$SEND_DR_HOST(KN$NETPARM);

   6177   0 0000DE  DBC7 000A                            LAB,B5   KN$NETPARM,AUTO
          0 0000E0  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
          0 0000E2  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 0000E4  CBF0 0100                            LAB,B4   256,IMO
          0 0000E6  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR_HOST
          0 0000E9       0001                            DC       s:6180,PREL

     1239     6178    4                     END;

     1240     6179
     1241     6180    3                IF KN$TCTX.LNK$ ~= ADDR(NIL)

   6180   0 0000EA  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0000EC  8DC6 0006                            CMN      6,B6
          0 0000EE  0901 000D                            BE       s:6183,PREL

     1242     6181    3                THEN CALL KNT$UNQ_FLOW(KN$TCTX.LNK$);

   6181   0 0000F0  DBC6 0006                            LAB,B5   6,B6
          0 0000F2  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
          0 0000F4  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 0000F6  CBF0 0100                            LAB,B4   256,IMO
          0 0000F8  E380 0000 0000  xent                 LNJ,B6   KNT$UNQ_FLOW
          0 0000FB       0001                            DC       s:6183,PREL

     1243     6182
     1244     6183    3                IF KN$TCTX.ERR = %K_ERROR_RESTART

   6183   0 0000FC  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0000FE  E846 000E                            LDR,R6   14,B6
          0 000100  E570 00FF                            AND,R6   255,IMO
          0 000102  E970 00F6                            CMR,R6   246,IMO
          0 000104  0901 0032                            BE       s:6220,PREL
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:198  

     1245     6184    3                THEN GOTO END_IT;
     1246     6185
     1247     6186    3                KN$TCTX.SEND_RETRY_COUNT = 1;

   6186   0 000106  5C01                                 LDV,R5   1
          0 000107  D7C6 004D                            STH,R5   77,B6

     1248     6187
     1249     6188    3                CALL KNT$SEND_DR(KN$NETPARM);

   6188   0 000109  DBC7 000A                            LAB,B5   KN$NETPARM,AUTO
          0 00010B  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
          0 00010D  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 00010F  CBF0 0100                            LAB,B4   256,IMO
          0 000111  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_DR
          0 000114       0001                            DC       s:6189,PREL

     1250     6189    3                CALL I$RETRAN_START;

   6189   0 000115  E3C0 00CA                            LNJ,B6   s:0,PREL
          0 000117       0001                            DC       s:6191,PREL

     1251     6190
     1252     6191    3                RETURN;

   6191   0 000118  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1253     6192    3                END/*do if open*/;
     1254     6193
     1255     6194        /* If the retran timer expires while waiting for an ACK to our TPDU_CC,
     1256     6195           we retransmit the TPDU_CC and restart the timer.  After the
     1257     6196           maximum number of retries, the release procedure is initiated.
     1258     6197        */
     1259     6198    2           IF KN$TCTX.STATE = %K_TSTATE_AKWAIT

   6198   0 00011B  5D07                                 CMV,R5   7
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:199  
          0 00011C  0981 0008                            BNE      s:6211,PREL

     1260     6199    3           THEN DO;

     1261     6200    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY

   6200   0 00011E  E900 0000 0000  xsym                 CMR,R6   KNT_MAX_RETRY
          0 000121  0201 FF5F                            BL       s:6143,PREL

     1262     6201    3                THEN GOTO RETRANSMIT_TPDU;
     1263     6202    3                ELSE GOTO INIT_RELEASE0;

   6202   0 000123  0F81 FF7D                            B        s:6143,PREL

     1264     6203    3                END/*do fi akwait*/;
     1265     6204
     1266     6205        /*  If the retran timer expires when the state is CLOSING, after the
     1267     6206            usual number of retires to transmit the disconnect request, the
     1268     6207            state of the connection is set to REFWAIT, and the reference timer
     1269     6208            is started so we can discared any tpdus that belong to this connection
     1270     6209            that may leak through the network.
     1271     6210        */
     1272     6211    2           IF KN$TCTX.STATE = %K_TSTATE_CLOSING

   6211   0 000125  5D08                                 CMV,R5   8
          0 000126  0981 001B                            BNE      s:6231,PREL

     1273     6212    3           THEN DO;

     1274     6213    3                IF KN$TCTX.CLASS ~= 4 THEN GOTO END_IT;

   6213   0 000128  C2C6 0005                            LLH,R4   5,B6
          0 00012A  4D04                                 CMV,R4   4
          0 00012B  0981 000B                            BNE      s:6220,PREL

     1275     6214
     1276     6215    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:200  

   6215   0 00012D  E900 0000 0000  xsym                 CMR,R6   KNT_MAX_RETRY
          0 000130  0281 0006                            BGE      s:6220,PREL

     1277     6216    4                THEN DO;

     1278     6217    4                     KN$TCTX.SEND_RETRY_COUNT = KN$TCTX.SEND_RETRY_COUNT + 1;

   6217   0 000132  6E01                                 ADV,R6   1
          0 000133  E7C6 004D                            STH,R6   77,B6

     1279     6218    4                     GOTO RETRANSMIT_TPDU;

   6218   0 000135  0F81 FF4B                            B        s:6143,PREL

     1280     6219    4                     END;
     1281     6220    4                ELSE DO;

     1282     6221    4   END_IT:
     1283     6222    4                     CALL KNT$SET_REFWAIT (KN$TCTX);

   6222   0 000137  BBC7 0006            END_IT          LAB,B3   CTX$,AUTO
          0 000139  CBF0 0100                            LAB,B4   256,IMO
          0 00013B  E380 0000 0000  xent                 LNJ,B6   KNT$SET_REFWAIT
          0 00013E       0001                            DC       s:6224,PREL

     1284     6223    4                     END;

     1285     6224    3                RETURN;

   6224   0 00013F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1286     6225    3                END/*do if closing*/;
     1287     6226
     1288     6227        /* If the retran timer expires while we are waiting for the connect
     1289     6228           confirm, we retransmit the tpdu_cr the standare number of times
     1290     6229           and then initiate the r3lease procedures.
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:201  
     1291     6230        */
     1292     6231    2           IF KN$TCTX.STATE = %K_TSTATE_WFCC

   6231   0 000142  5D03                                 CMV,R5   3
          0 000143  0901 0007                            BE       s:6235,PREL
          0 000145  5D04                                 CMV,R5   4
          0 000146  0901 0004                            BE       s:6235,PREL
          0 000148  5D0A                                 CMV,R5   10
          0 000149  0981 000D                            BNE      s:6247,PREL

     1293     6232    2             OR KN$TCTX.STATE = %K_TSTATE_WBCL
     1294     6233    2             OR KN$TCTX.STATE = %K_TSTATE_WFCC_R
     1295     6234    3           THEN DO;

     1296     6235    3                IF KN$TCTX.SEND_RETRY_COUNT < KNT_MAX_RETRY

   6235   0 00014B  E900 0000 0000  xsym                 CMR,R6   KNT_MAX_RETRY
          0 00014E  0201 FF32                            BL       s:6143,PREL

     1297     6236    3                THEN GOTO RETRANSMIT_TPDU;
     1298     6237    4                ELSE DO;

     1299     6238    4                     KN$TCTX.ERR = %K_ERROR_CONNECT_TO;

   6238   0 000150  C870 00DC                            LDR,R4   220,IMO
          0 000152  CAC6 000E                            SRM,R4,'00FF'X    14,B6
          0 000154       00FF

     1300     6239                                                /* Connection establishment timed out */
     1301     6240    4                     GOTO INIT_RELEASE;

   6240   0 000155  0F81 FF57                            B        s:6161,PREL

     1302     6241    4                     END;
     1303     6242    3                END/*do if wfcc or wbcl*/;
     1304     6243
     1305     6244        /* If the retrans timer expires while the transport connection is in
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:202  
     1306     6245           any other state, simply ignore it.
     1307     6246        */
     1308     6247    2           CALL I$TIMER_SCREECH;

   6247   0 000157  E3C0 00C4                            LNJ,B6   s:0,PREL
          0 000159       0001                            DC       s:6248,PREL

     1309     6248    2           RETURN;

   6248   0 00015A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1310     6249
     1311     6250    2           END/*do if timer_retran*/;
     1312     6251
     1313     6252        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:203  
     1314     6253        /* When the reference timer expires, the transport connection is
     1315     6254           marked CLOSED and the context block is returned to the chain of
     1316     6255           free entries.
     1317     6256        */
     1318     6257    1      IF CLOCK_ID.TIMER = %K_TTIMER_REFERENCE

   6257   0 00015D  E806                                 LDR,R6   ,B6
          0 00015E  E570 00FF                            AND,R6   255,IMO
          0 000160  6D03                                 CMV,R6   3
          0 000161  0981 001D                            BNE      s:6274,PREL

     1319     6258    2      THEN DO;

     1320     6259    2           IF KN$TCTX.STATE = %K_TSTATE_REFWAIT

   6259   0 000163  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 000165  C285                                 LLH,R4   ,B5
          0 000166  4D01                                 CMV,R4   1
          0 000167  0981 0011                            BNE      s:6264,PREL

     1321     6260    3           THEN DO;

     1322     6261    3                KN$TCTX.STATE = %K_TSTATE_CLOSED;

   6261   0 000169  2C02                                 LDV,R2   2
          0 00016A  A785                                 STH,R2   ,B5

     1323     6262    3                CALL KNA$RELTCTX(CTX$);

   6262   0 00016B  DBC7 0006                            LAB,B5   CTX$,AUTO
          0 00016D  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
          0 00016F  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 000171  CBF0 0100                            LAB,B4   256,IMO
          0 000173  E380 0000 0000  xent                 LNJ,B6   KNA$RELTCTX
          0 000176       0001                            DC       s:6263,PREL

     1324     6263    3                END;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:204  

   6263   0 000177  0F81 0004                            B        s:6265,PREL

     1325     6264    2           ELSE CALL I$TIMER_SCREECH;

   6264   0 000179  E3C0 00A2                            LNJ,B6   s:0,PREL
          0 00017B       0001                            DC       s:6265,PREL

     1326     6265    2           RETURN;

   6265   0 00017C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1327     6266    2           END;
     1328     6267
     1329     6268        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:205  
     1330     6269        /* If the window timer or the inactivity timer expires while the
     1331     6270           the timer is in any state but open, it is ignored.
     1332     6271           Otherwise, send an Ack tpdu when the window timer expires and
     1333     6272           initiate the release procedures when the inactivity timer expries.
     1334     6273        */
     1335     6274    1      IF KN$TCTX.STATE ~= %K_TSTATE_OPEN

   6274   0 00017F  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 000181  C285                                 LLH,R4   ,B5
          0 000182  4D05                                 CMV,R4   5
          0 000183  0901 0004                            BE       s:6277,PREL

     1336     6275    1      THEN RETURN;

   6275   0 000185  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1337     6276
     1338     6277    1      IF KN$TCTX.CLASS ~= 4

   6277   0 000188  A2C5 0005                            LLH,R2   5,B5
          0 00018A  2D04                                 CMV,R2   4
          0 00018B  0901 0004                            BE       s:6280,PREL

     1339     6278    1      THEN CALL I$TIMER_SCREECH;

   6278   0 00018D  E3C0 008E                            LNJ,B6   s:0,PREL
          0 00018F       0001                            DC       s:6280,PREL

     1340     6279
     1341     6280    1      IF CLOCK_ID.TIMER = %K_TTIMER_WINDOW

   6280   0 000190  ECC7 0004                            LDB,B6   @CLOCK_ID,AUTO
          0 000192  E806                                 LDR,R6   ,B6
          0 000193  E570 00FF                            AND,R6   255,IMO
          0 000195  6D01                                 CMV,R6   1
          0 000196  0981 001E                            BNE      s:6288,PREL

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:206  
     1342     6281    2      THEN DO;

     1343     6282    2           CALL KNT$SEND_AK(KN$NETPARM);

   6282   0 000198  DBC7 000A                            LAB,B5   KN$NETPARM,AUTO
          0 00019A  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
          0 00019C  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 00019E  CBF0 0100                            LAB,B4   256,IMO
          0 0001A0  E380 0000 0000  xent                 LNJ,B6   KNT$SEND_AK
          0 0001A3       0001                            DC       s:6283,PREL

     1344     6283    2           CALL GHS$SET_TMR (KN$TCTX.TMR_WINDOW);

   6283   0 0001A4  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0001A6  DBC6 005A                            LAB,B5   90,B6
          0 0001A8  DFC7 002E                            STB,B5   KN$NETPARM+36,AUTO
          0 0001AA  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 0001AC  CBF0 0100                            LAB,B4   256,IMO
          0 0001AE  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 0001B1       0001                            DC       s:6284,PREL

     1345     6284    2           RETURN;

   6284   0 0001B2  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1346     6285    2           END;
     1347     6286
     1348     6287
     1349     6288    1      IF CLOCK_ID.TIMER = %K_TTIMER_INACTIVITY

   6288   0 0001B5  6D02                                 CMV,R6   2
          0 0001B6  0981 0023                            BNE      s:6301,PREL

     1350     6289    2      THEN DO;

     1351     6290    2           IF NOT KN$TCTX.OPTION.OSI

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:207  
   6290   0 0001B8  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 0001BA  82C5 000C                            LB,'0010'X        12,B5
          0 0001BC       0010
          0 0001BD  0501 0010                            BBT      s:6296,PREL

     1352     6291    3           THEN DO;

     1353     6292    3                CALL GHS$SET_TMR (KN$TCTX.TMR_INACTIVITY);

   6292   0 0001BF  CBC5 0064                            LAB,B4   100,B5
          0 0001C1  CFC7 002E                            STB,B4   KN$NETPARM+36,AUTO
          0 0001C3  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 0001C5  CBF0 0100                            LAB,B4   256,IMO
          0 0001C7  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 0001CA       0001                            DC       s:6293,PREL

     1354     6293    3                RETURN;

   6293   0 0001CB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1355     6294    3                END;
     1356     6295
     1357     6296    2           CALL I$WINDOW_STOP;

   6296   0 0001CE  E3C0 0025                            LNJ,B6   s:0,PREL
          0 0001D0       0001                            DC       s:6297,PREL

     1358     6297    2           KN$TCTX.ERR = %K_ERROR_INACT_TO;

   6297   0 0001D1  E870 00DE                            LDR,R6   222,IMO
          0 0001D3  ECC7 0006                            LDB,B6   CTX$,AUTO
          0 0001D5  EAC6 000E                            SRM,R6,'00FF'X    14,B6
          0 0001D7       00FF

     1359     6298    2           GOTO INIT_RELEASE;

   6298   0 0001D8  0F81 FED4                            B        s:6161,PREL
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:208  

     1360     6299    2           END;
     1361     6300
     1362     6301    1      CALL I$TIMER_SCREECH;

   6301   0 0001DA  E3C0 0041                            LNJ,B6   s:0,PREL
          0 0001DC       0001                            DC       s:6303,PREL

     1363     6302
     1364     6303    1      RETURN;

   6303   0 0001DD  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1365     6304        %EJECT;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:209  
     1366     6305
     1367     6306    1   I$RETRAN_START: PROC;

   6306   0 0001E0  EFC7 002C            I$RETRAN_START  STB,B6   KN$NETPARM+34,AUTO

     1368     6307    2      CALL GHS$SET_TMR (KN$TCTX.TMR_RETRAN);

   6307   0 0001E2  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 0001E4  CBC5 0050                            LAB,B4   80,B5
          0 0001E6  CFC7 002E                            STB,B4   KN$NETPARM+36,AUTO
          0 0001E8  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 0001EA  CBF0 0100                            LAB,B4   256,IMO
          0 0001EC  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          0 0001EF       0001                            DC       s:6308,PREL

     1369     6308    2      RETURN;

   6308   0 0001F0  ECC7 002C                            LDB,B6   KN$NETPARM+34,AUTO
          0 0001F2  C3C6 0001                            LNJ,B4   1,B6

     1370     6309    2   END I$RETRAN_START;
     1371     6310
     1372     6311    1   I$WINDOW_STOP: PROC;

   6311   0 0001F4  EFC7 002C            I$WINDOW_STOP   STB,B6   KN$NETPARM+34,AUTO

     1373     6312    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_WINDOW);

   6312   0 0001F6  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 0001F8  CBC5 005A                            LAB,B4   90,B5
          0 0001FA  CFC7 002E                            STB,B4   KN$NETPARM+36,AUTO
          0 0001FC  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 0001FE  CBF0 0100                            LAB,B4   256,IMO
          0 000200  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 000203       0001                            DC       s:6313,PREL

     1374     6313    2      RETURN;
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:210  

   6313   0 000204  ECC7 002C                            LDB,B6   KN$NETPARM+34,AUTO
          0 000206  C3C6 0001                            LNJ,B4   1,B6

     1375     6314    2   END I$WINDOW_STOP;
     1376     6315
     1377     6316    1   I$INACTIVITY_STOP: PROC;

   6316   0 000208  EFC7 002C            I$INACTIVITY_ST*STB,B6   KN$NETPARM+34,AUTO

     1378     6317    2      CALL GHS$CANCEL_TMR (KN$TCTX.TMR_INACTIVITY);

   6317   0 00020A  DCC7 0006                            LDB,B5   CTX$,AUTO
          0 00020C  CBC5 0064                            LAB,B4   100,B5
          0 00020E  CFC7 002E                            STB,B4   KN$NETPARM+36,AUTO
          0 000210  BBC7 002E                            LAB,B3   KN$NETPARM+36,AUTO
          0 000212  CBF0 0100                            LAB,B4   256,IMO
          0 000214  E380 0000 0000  xent                 LNJ,B6   GHS$CANCEL_TMR
          0 000217       0001                            DC       s:6318,PREL

     1379     6318    2      RETURN;

   6318   0 000218  ECC7 002C                            LDB,B6   KN$NETPARM+34,AUTO
          0 00021A  C3C6 0001                            LNJ,B4   1,B6

     1380     6319    2   END I$INACTIVITY_STOP;
     1381     6320
     1382     6321
     1383     6322    1   I$TIMER_SCREECH: PROC;

   6322   0 00021C  EFC7 002C            I$TIMER_SCREECH STB,B6   KN$NETPARM+34,AUTO

     1384     6323    2      IF KNT_TIMER_SCREECH ~= 0

   6323   0 00021E  E800 0000 0000  xsym                 LDR,R6   KNT_TIMER_SCREECH
          0 000221  6901 000A                            BEZ,R6   s:6327,PREL

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:211  
     1385     6324    3      THEN DO;

     1386     6325    3           CALL SCREECH(KNT_SCODE);

   6325   0 000223  BB80 0000 0000  01                   LAB,B3   0
          0 000226  CBF0 0100                            LAB,B4   256,IMO
          0 000228  E380 0000 0000  xent                 LNJ,B6   SCREECH
          0 00022B       0001                            DC       s:6327,PREL

     1387     6326    3           END;

     1388     6327    2      RETURN;

   6327   0 00022C  ECC7 002C                            LDB,B6   KN$NETPARM+34,AUTO
          0 00022E  C3C6 0001                            LNJ,B4   1,B6
     1389     6328    2   END I$TIMER_SCREECH;
     1390     6329    1   END KNT$TTIMER;
     1391     6330        %EOD;

PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:212  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_TRANSPORT_M.:E05TOU  is referenced.
   K_TRANSPORT_E.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$TTIMER.
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:213  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CLOCK_ID                 *0-0-0/w STRC(16)    r     1 CLOCK_ID
     6-0-0/w PTR         r     1 CTX$                       A-0-0/w STRC(528)   r     1 KN$NETPARM

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_MAX_RETRY              0-0-0/w UBIN(32)    r     1 KNT_SCODE
     0-0-0/w UBIN(16)    r     1 KNT_TIMER_SCREECH          0-0-0/w STRC(528)   r     1 KN_NETPARM_INIT
     0-0-0/w PTR         r     1 KN_TCTX$$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2816)  r     1 KN$TCTX
     0-0-0/w PTR         r     1 KN$TCTX$(0:0)


   Procedure KNT$TTIMER requires 560 words for executable code.
   Procedure KNT$TTIMER requires 48 words of local(AUTO) storage.
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:214  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:215  
          MINI XREF LISTING

CLOCK_ID
      4845**DCL        16--PROC
CLOCK_ID.TCTX
      4846**DCL      6092>>ASSIGN
CLOCK_ID.TIMER
      4847**DCL      6106>>IF       6116>>ASSIGN   6116>>ASSIGN   6123>>IF       6257>>IF       6280>>IF
      6288>>IF
CTX$
      4850**DCL      5014--IMP-PTR  6092<<ASSIGN   6093>>IF       6100>>ASSIGN   6101>>ASSIGN   6110>>CALL
      6112>>ASSIGN   6116>>ASSIGN   6116>>ASSIGN   6125>>IF       6128>>IF       6131>>ASSIGN   6131>>ASSIGN
      6140>>IF       6142>>IF       6146>>IF       6146>>IF       6161>>IF       6162>>ASSIGN   6165>>ASSIGN
      6166>>CALL     6168>>IF       6171>>ASSIGN   6173>>ASSIGN   6174>>ASSIGN   6180>>IF       6181>>CALL
      6183>>IF       6186>>ASSIGN   6198>>IF       6200>>IF       6211>>IF       6213>>IF       6215>>IF
      6217>>ASSIGN   6217>>ASSIGN   6222>>CALL     6231>>IF       6231>>IF       6231>>IF       6235>>IF
      6238>>ASSIGN   6259>>IF       6261>>ASSIGN   6262<>CALL     6274>>IF       6277>>IF       6283>>CALL
      6290>>IF       6292>>CALL     6297>>ASSIGN   6307>>CALL     6312>>CALL     6317>>CALL
END_IT
      6222**LABEL    6184--GOTO     6213--GOTO
GHS$CANCEL_TMR
      6079**DCL-ENT  6110--CALL     6312--CALL     6317--CALL
GHS$SET_TMR
      6078**DCL-ENT  6283--CALL     6292--CALL     6307--CALL
I$INACTIVITY_STOP
      6316**PROC     6109--CALL     6159--CALL
I$RETRAN_START
      6306**PROC     6132--CALL     6189--CALL
I$TIMER_SCREECH
      6322**PROC     6095--CALL     6126--CALL     6247--CALL     6264--CALL     6278--CALL     6301--CALL
I$WINDOW_STOP
      6311**PROC     6108--CALL     6158--CALL     6296--CALL
INIT_RELEASE
      6161**LABEL    6113--GOTO     6240--GOTO     6298--GOTO
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:216  
INIT_RELEASE0
      6143**LABEL    6202--GOTO
KN$NETPARM
      4867**DCL      6099<<ASSIGN   6145<>CALL     6172<>CALL     6177<>CALL     6188<>CALL     6282<>CALL
KN$NETPARM.FUNCTION
      4962**DCL      6170<<ASSIGN
KN$NETPARM.MSG$
      4874**DCL      4879--REDEF
KN$NETPARM.NHDR$
      4926**DCL      4927--REDEF
KN$NETPARM.NODE
      4969**DCL      6101<<ASSIGN   6173<<ASSIGN
KN$NETPARM.SHDR$
      4904**DCL      4905--REDEF
KN$NETPARM.TCTX$
      4991**DCL      6100<<ASSIGN   6174<<ASSIGN
KN$NETPARM.TCTX_ID
      4937**DCL      6171<<ASSIGN
KN$NETPARM.THDR$
      4915**DCL      4916--REDEF
KN$NETPARM.UHDR$
      4890**DCL      4891--REDEF
KN$TCTX
      5014**DCL      6166<>CALL     6222<>CALL
KN$TCTX.CLASS
      5080**DCL      6125>>IF       6213>>IF       6277>>IF
KN$TCTX.DST_NSAP.ADDRESS_N
      5899**DCL      5900--REDEF
KN$TCTX.ERR
      5271**DCL      6112<<ASSIGN   6161>>IF       6162<<ASSIGN   6183>>IF       6238<<ASSIGN   6297<<ASSIGN
KN$TCTX.LNK$
      5098**DCL      6180>>IF       6181<>CALL
KN$TCTX.NODE
      5021**DCL      5034--REDEF    6101>>ASSIGN   6173>>ASSIGN
KN$TCTX.OPTION.OSI
      5142**DCL      6290>>IF
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:217  
KN$TCTX.PRIMARY
      5259**DCL      6168>>IF
KN$TCTX.SEND_EHEAD$
      5500**DCL      6146>>IF
KN$TCTX.SEND_HEAD$
      5475**DCL      6146>>IF
KN$TCTX.SEND_RETRY_COUNT
      5558**DCL      6128>>IF       6131<<ASSIGN   6131>>ASSIGN   6142>>IF       6186<<ASSIGN   6200>>IF
      6215>>IF       6217<<ASSIGN   6217>>ASSIGN   6235>>IF
KN$TCTX.SRC_NSAP.ADDRESS_N
      5835**DCL      5836--REDEF
KN$TCTX.SRC_REF
      5048**DCL      6171>>ASSIGN
KN$TCTX.STATE
      5015**DCL      6140>>IF       6165<<ASSIGN   6198>>IF       6211>>IF       6231>>IF       6231>>IF
      6231>>IF       6259>>IF       6261<<ASSIGN   6274>>IF
KN$TCTX.TMR_COUNT
      5570**DCL      6116<<ASSIGN   6116>>ASSIGN
KN$TCTX.TMR_INACTIVITY
      5653**DCL      6292<>CALL     6317<>CALL
KN$TCTX.TMR_INACTIVITY.ARG
      5655**DCL      5656--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      5685**DCL      5686--REDEF
KN$TCTX.TMR_RETRAN
      5594**DCL      6110<>CALL     6307<>CALL
KN$TCTX.TMR_RETRAN.ARG
      5596**DCL      5597--REDEF
KN$TCTX.TMR_WINDOW
      5623**DCL      6283<>CALL     6312<>CALL
KN$TCTX.TMR_WINDOW.ARG
      5625**DCL      5626--REDEF
KN$TCTX$
      5916**DCL      6092>>ASSIGN
KNA$RELTCTX
      6082**DCL-ENT  6262--CALL
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:218  
KNS$RECV
      6083**DCL-ENT  6172--CALL
KNT$RETRANS
      6080**DCL-ENT  6145--CALL
KNT$RLS_CHAIN
      6081**DCL-ENT  6166--CALL
KNT$SEND_AK
      6084**DCL-ENT  6282--CALL
KNT$SEND_DR
      6085**DCL-ENT  6188--CALL
KNT$SEND_DR_HOST
      6086**DCL-ENT  6177--CALL
KNT$SET_REFWAIT
      6087**DCL-ENT  6222--CALL
KNT$UNQ_FLOW
      6088**DCL-ENT  6181--CALL
KNT_MAX_RETRY
      5920**DCL      6128>>IF       6142>>IF       6200>>IF       6215>>IF       6235>>IF
KNT_SCODE
      5922**DCL      6325<>CALL
KNT_TIMER_SCREECH
      5921**DCL      6323>>IF
KN_NETPARM_INIT
      5936**DCL      6099>>ASSIGN
KN_NETPARM_INIT.MSG$
      5943**DCL      5948--REDEF
KN_NETPARM_INIT.NHDR$
      5995**DCL      5996--REDEF
KN_NETPARM_INIT.SHDR$
      5973**DCL      5974--REDEF
KN_NETPARM_INIT.THDR$
      5984**DCL      5985--REDEF
KN_NETPARM_INIT.UHDR$
      5959**DCL      5960--REDEF
KN_TCTX$$
      5919**DCL      5916--IMP-PTR  6092>>ASSIGN
PL6.E3A0      #008=KNT$TTIMER File=KNT$MISC.:E05TSI                              WED 07/30/97 01:11 Page:219  
RETRANSMIT_TPDU
      6145**LABEL    6201--GOTO     6218--GOTO     6236--GOTO
SCREECH
      6089**DCL-ENT  6325--CALL
WAIT_T1
      6131**LABEL    6149--GOTO

PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:220  
     1392        1        /*M* KNT$SET_UNQSESS - Handler for KNT_UNQ_LDCT.USER_ENTRY$  */
     1393        2        /*T***********************************************************/
     1394        3        /*T*                                                         */
     1395        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1396        5        /*T*                                                         */
     1397        6        /*T***********************************************************/
     1398        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1399        8
     1400        9        /*F* NAME: KNT$SET_UNQSESS
     1401       10
     1402       11        The KNT$SET_UNQSESS routine is entered from KNH$SCAN after the
     1403       12        COUPLER has removed items from his RCQ, and transport has his
     1404       13        LDCT queued waiting for space on that queue.
     1405       14
     1406       15        Here we simply set a timer with an interval value of zero that will
     1407       16        cause entry to the KNT$UNQ_SESSION routine when KNH$SCAN is finished.
     1408       17        */
     1409       18        KNT$SET_UNQSESS: PROC;
     1410       19
     1411       20        %INCLUDE GH_SCHD_M;
     1412      164
     1413      165        %GH$TMR_BLK (FPTN=KNT_UNQ_TMR, STCLASS=STATIC, INTERVAL=0, PROC$=KNT$UNQ_SESSION);
     1414      188
     1415      189    1   DCL GHS$SET_TMR ENTRY(1);
     1416      190    1   DCL KNT$UNQ_SESSION ENTRY;
     1417      191
     1418      192    1      CALL GHS$SET_TMR(KNT_UNQ_TMR);
     1419      193    1      RETURN;
     1420      194    1   END KNT$SET_UNQSESS;
     1421      195        %EOD;

PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:221  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SET_UNQSESS.

   Procedure KNT$SET_UNQSESS requires 17 words for executable code.
   Procedure KNT$SET_UNQSESS requires 4 words of local(AUTO) storage.

PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:222  

 Object Unit name= KNT$SET_UNQSESS                            File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:12:11.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Data  even  none    10      A  KNT$SET_UNQSESS
    1   Proc  even  none    17     11  KNT$SET_UNQSESS
    2  RoData even  none     2      2  KNT$SET_UNQSESS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  KNT$SET_UNQSESS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 KNT$UNQ_SESSION
         yes           Std       1 GHS$SET_TMR
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:223  


     1392        1        /*M* KNT$SET_UNQSESS - Handler for KNT_UNQ_LDCT.USER_ENTRY$  */
     1393        2        /*T***********************************************************/
     1394        3        /*T*                                                         */
     1395        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1396        5        /*T*                                                         */
     1397        6        /*T***********************************************************/
     1398        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1399        8
     1400        9        /*F* NAME: KNT$SET_UNQSESS
     1401       10
     1402       11        The KNT$SET_UNQSESS routine is entered from KNH$SCAN after the
     1403       12        COUPLER has removed items from his RCQ, and transport has his
     1404       13        LDCT queued waiting for space on that queue.
     1405       14
     1406       15        Here we simply set a timer with an interval value of zero that will
     1407       16        cause entry to the KNT$UNQ_SESSION routine when KNH$SCAN is finished.
     1408       17        */
     1409       18        KNT$SET_UNQSESS: PROC;

     18   1 000000  D380 0000 0000  xent KNT$SET_UNQSESS LNJ,B5   X6A_AUTO_0
          1 000003       0004 0000                       DC       4,0

     1410       19
     1411       20        %INCLUDE GH_SCHD_M;
     1412      164
     1413      165        %GH$TMR_BLK (FPTN=KNT_UNQ_TMR, STCLASS=STATIC, INTERVAL=0, PROC$=KNT$UNQ_SESSION);
     1414      188
     1415      189    1   DCL GHS$SET_TMR ENTRY(1);
     1416      190    1   DCL KNT$UNQ_SESSION ENTRY;
     1417      191
     1418      192    1      CALL GHS$SET_TMR(KNT_UNQ_TMR);

    192   1 000005  BB80 0000 0000  02                   LAB,B3   0
          1 000008  CBF0 0100                            LAB,B4   256,IMO
          1 00000A  E380 0000 0000  xent                 LNJ,B6   GHS$SET_TMR
          1 00000D       0001                            DC       s:193,PREL
PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:224  

     1419      193    1      RETURN;

    193   1 00000E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1420      194    1   END KNT$SET_UNQSESS;
     1421      195        %EOD;

PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:225  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$SET_UNQSESS.
PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:226  

 **** Variables and constants ****

  ****  Section 000  Data  KNT$SET_UNQSESS

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(160)   r     1 KNT_UNQ_TMR


   Procedure KNT$SET_UNQSESS requires 17 words for executable code.
   Procedure KNT$SET_UNQSESS requires 4 words of local(AUTO) storage.
PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:227  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #009=KNT$SET_UNQSESS File=KNT$MISC.:E05TSI                         WED 07/30/97 01:12 Page:228  
          MINI XREF LISTING

GHS$SET_TMR
       189**DCL-ENT   192--CALL
KNT$UNQ_SESSION
       190**DCL-ENT   183--DCLINIT
KNT_UNQ_TMR
       179**DCL       192<>CALL
KNT_UNQ_TMR.ARG
       183**DCL       184--REDEF

PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:229  
     1422        1        /*M* KNT$UNQ - Unqueue things for transport.   */
     1423        2        /*T***********************************************************/
     1424        3        /*T*                                                         */
     1425        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1426        5        /*T*                                                         */
     1427        6        /*T***********************************************************/
     1428        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1429        8
     1430        9        /*F* NAME: KNT$UNQ
     1431       10
     1432       11        The KNT$UNQ routine unqueues LDCTs waiting for the transport
     1433       12        connection to open, waiting for transport buffers to become free,
     1434       13        or waiting for space in the COUPLER's RCQ.
     1435       14
     1436       15        KNT$UNQ_BUFFER is called from various transport routines when one
     1437       16        or more transport buffers have been released and KNT_WAIT_COUNT
     1438       17        is non-zero.  We will look at all the transport context blocks to
     1439       18        find those needing a reassemble buffer first, and if any are found,
     1440       19        call KNT$DSESSION for the transport connection.  Next, the chain of
     1441       20        LDCTs that have been queued on the KNT_WAIT_HEAD$ chain to wait for
     1442       21        a free transport buffer will be unqueued.
     1443       22
     1444       23        KNT$UNQ_SESSION is called from the GHS$MONTIMR routine after
     1445       24        transport has been unqued by KNH$SCAN because space has become
     1446       25        available in the COUPLER's RCQ.  We will look at all transport
     1447       26        context blocks to find those with buffered data waiting for space
     1448       27        in the COUPLER's RCQ, and if any are found, call KNT$DSESSION for
     1449       28        the transport connection.
     1450       29
     1451       30        KNT$UNQ_OPEN is called when a TPDU is received for a transport
     1452       31        connection whose state is AKWAIT.  Queuing for open should only
     1453       32        happen for primary connections.  We run the chain of LDCTs that
     1454       33        are queued and call the LDCT.USER_ENTRY$ routine.
     1455       34
     1456       35        KNT$UNQ_FLOW is called after an ACK has been received that opens
     1457       36        up the send window.  This can happen for primary connections or
     1458       37        for intermediate connections if we run out of transport buffers
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:230  
     1459       38        and cannot move data from the COUPLER's SCQ.  We run the chain of
     1460       39        LDCTs that are queued and call the LDCT.USER_ENTRY$ routine.
     1461       40
     1462       41        */
     1463       42        KNT$UNQ: PROC(HEAD$);
     1464       43
     1465       44        %INCLUDE KN_DATA_M;
     1466     1830        %INCLUDE KNH_MACRO_C;
     1467     2113        %INCLUDE K_ADDRESS_M;
     1468     2616        %INCLUDE GH_SCHD_M;
     1469     2760
     1470     2761                                                /* Input parameters                   */
     1471     2762    1   DCL HEAD$ PTR;
     1472     2763
     1473     2764                                                /* Auto Storage                       */
     1474     2765    1   DCL LNK$ PTR;
     1475     2766    1   DCL ENTRY_SWITCH UBIN;
     1476     2767    1   DCL TCTX# UBIN;
     1477     2768    1   DCL CTX$ PTR;
     1478     2769        %KN$NETPARM (NAME=KN$NETPARM, STCLASS=AUTO);
     1479     2922
     1480     2923                                                /* Based Structures                   */
     1481     2924    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     1482     2925        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     1483     3832        %KN$LDCT (STCLASS="BASED(KN$NETPARM.LDCT$)");
     1484     4077
     1485     4078                                                /* External Data                      */
     1486     4079    1   DCL KNT_WAIT_HEAD$ PTR SYMREF;
     1487     4080    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
     1488     4081    1   DCL KN_TCTX$$ PTR SYMREF;
     1489     4082    1   DCL KN_TCTX_MAX# UBIN SYMREF;
     1490     4083        %KN$NETPARM (NAME=KN_NETPARM_INIT, STCLASS=SYMREF);
     1491     4236
     1492     4237                                                /* External Procedures                */
     1493     4238    1   DCL KNT$DSESSION ENTRY(1) ALTRET;
     1494     4239    1   DCL KNA$RLSLDCT ENTRY(1) ALTRET;
     1495     4240
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:231  
     1496     4241        %EJECT;
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:232  
     1497     4242
     1498     4243    1   KNT$UNQ_BUFFER: ENTRY;
     1499     4244    1      ENTRY_SWITCH = 1;
     1500     4245    1      GOTO COMMON_SEARCH;
     1501     4246
     1502     4247    1   KNT$UNQ_SESSION: ENTRY;
     1503     4248    1      ENTRY_SWITCH = 2;
     1504     4249
     1505     4250    1   COMMON_SEARCH: ;
     1506     4251    2      DO TCTX# = 1 TO KN_TCTX_MAX#;
     1507     4252    2           CTX$ = KN$TCTX$(TCTX#);
     1508     4253    2           IF CTX$ ~= ADDR(NIL)
     1509     4254    3           THEN DO;
     1510     4255    3                IF (KN$TCTX.STATE > %K_TSTATE_CLOSED) AND
     1511     4256    3                  ( (KN$TCTX.NEED_ASSMBUF AND ENTRY_SWITCH = 1) OR
     1512     4257    3                  (KN$TCTX.HOST_CQ_FULL AND ENTRY_SWITCH = 2) )
     1513     4258    4                THEN DO;
     1514     4259    4                     KN$NETPARM = KN_NETPARM_INIT;
     1515     4260    4                     KN$NETPARM.FUNCTION = %KN_FCN_DATA;
     1516     4261    4                     KN$NETPARM.TCTX$ = CTX$;
     1517     4262
     1518     4263    4                     KN$TCTX.HOST_CQ_FULL = '0'B;
     1519     4264    4                     KN$TCTX.NEED_ASSMBUF = '0'B;
     1520     4265
     1521     4266    4                     CALL KNT$DSESSION(KN$NETPARM);
     1522     4267
     1523     4268    4                     IF (ENTRY_SWITCH = 2)
     1524     4269    5                     THEN DO;
     1525     4270    5                          IF KN$TCTX.HOST_CQ_FULL THEN RETURN;
     1526     4271    5                          END;
     1527     4272    5                     ELSE DO;
     1528     4273    5                          IF KN$TCTX.NEED_ASSMBUF THEN RETURN;
     1529     4274    5                          KNT_WAIT_COUNT = KNT_WAIT_COUNT -1;
     1530     4275    5                          END;
     1531     4276    4                     END/*do if need assembly buffer*/;
     1532     4277    3                END/*do if ctx$ ~ nil*/;
     1533     4278    2           END/*do 1 to max*/;
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:233  
     1534     4279
     1535     4280    1      LNK$ = KNT_WAIT_HEAD$;
     1536     4281    1      KNT_WAIT_HEAD$ = ADDR(NIL);
     1537     4282    1      GOTO COMMON;
     1538     4283
     1539     4284
     1540     4285
     1541     4286    1   KNT$UNQ_OPEN: ENTRY(HEAD$);
     1542     4287    1   KNT$UNQ_FLOW: ENTRY(HEAD$);
     1543     4288    1      ENTRY_SWITCH = 0;
     1544     4289    1      LNK$ = HEAD$;
     1545     4290    1      HEAD$ = ADDR(NIL);
     1546     4291    1      GOTO COMMON;
     1547     4292
     1548     4293    1   COMMON: ;
     1549     4294    2      DO WHILE (LNK$ ~= ADDR(NIL) );
     1550     4295    2           KN$NETPARM.FUNCTION = %KN_FCN_UNQ;
     1551     4296    2           KN$NETPARM.LDCT$ = LNK$;
     1552     4297    2           LNK$ = KN$LDCT.LNK$;
     1553     4298    2           KN$LDCT.LNK$ = ADDR(NIL);
     1554     4299    2           KN$LDCT.FLAGS.QUEUED = '0'B;
     1555     4300
     1556     4301    2           IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)
     1557     4302    2           THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM);
     1558     4303
     1559     4304    2           IF KN$LDCT.FLAGS.REL
     1560     4305    2           THEN CALL KNA$RLSLDCT (KN$NETPARM.LDCT$);
     1561     4306
     1562     4307    2           IF ENTRY_SWITCH = 1
     1563     4308    2           THEN KNT_WAIT_COUNT = KNT_WAIT_COUNT -1;
     1564     4309    2           END;
     1565     4310
     1566     4311    1      RETURN;
     1567     4312    1   END KNT$UNQ;
     1568     4313        %EOD;

PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:234  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$UNQ.

   Procedure KNT$UNQ requires 252 words for executable code.
   Procedure KNT$UNQ requires 48 words of local(AUTO) storage.

PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:235  

 Object Unit name= KNT$UNQ                                    File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:12:16.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   252     FC  KNT$UNQ
    1  RoData even  none     2      2  KNT$UNQ

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KNT$UNQ
     0      7                  yes      Std        0  KNT$UNQ_BUFFER
     0     11                  yes      Std        0  KNT$UNQ_SESSION
     0     95                  yes      Std        1  KNT$UNQ_OPEN
     0     9C                  yes      Std        1  KNT$UNQ_FLOW

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KNT$DSESSION
 yes     yes           Std       1 KNA$RLSLDCT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:236  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KNT_WAIT_HEAD$                        KNT_WAIT_COUNT                        KN_TCTX$$
     KN_TCTX_MAX#                          KN_NETPARM_INIT                  r    G$ROS$
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:237  


     1422        1        /*M* KNT$UNQ - Unqueue things for transport.   */
     1423        2        /*T***********************************************************/
     1424        3        /*T*                                                         */
     1425        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1426        5        /*T*                                                         */
     1427        6        /*T***********************************************************/
     1428        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
     1429        8
     1430        9        /*F* NAME: KNT$UNQ
     1431       10
     1432       11        The KNT$UNQ routine unqueues LDCTs waiting for the transport
     1433       12        connection to open, waiting for transport buffers to become free,
     1434       13        or waiting for space in the COUPLER's RCQ.
     1435       14
     1436       15        KNT$UNQ_BUFFER is called from various transport routines when one
     1437       16        or more transport buffers have been released and KNT_WAIT_COUNT
     1438       17        is non-zero.  We will look at all the transport context blocks to
     1439       18        find those needing a reassemble buffer first, and if any are found,
     1440       19        call KNT$DSESSION for the transport connection.  Next, the chain of
     1441       20        LDCTs that have been queued on the KNT_WAIT_HEAD$ chain to wait for
     1442       21        a free transport buffer will be unqueued.
     1443       22
     1444       23        KNT$UNQ_SESSION is called from the GHS$MONTIMR routine after
     1445       24        transport has been unqued by KNH$SCAN because space has become
     1446       25        available in the COUPLER's RCQ.  We will look at all transport
     1447       26        context blocks to find those with buffered data waiting for space
     1448       27        in the COUPLER's RCQ, and if any are found, call KNT$DSESSION for
     1449       28        the transport connection.
     1450       29
     1451       30        KNT$UNQ_OPEN is called when a TPDU is received for a transport
     1452       31        connection whose state is AKWAIT.  Queuing for open should only
     1453       32        happen for primary connections.  We run the chain of LDCTs that
     1454       33        are queued and call the LDCT.USER_ENTRY$ routine.
     1455       34
     1456       35        KNT$UNQ_FLOW is called after an ACK has been received that opens
     1457       36        up the send window.  This can happen for primary connections or
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:238  
     1458       37        for intermediate connections if we run out of transport buffers
     1459       38        and cannot move data from the COUPLER's SCQ.  We run the chain of
     1460       39        LDCTs that are queued and call the LDCT.USER_ENTRY$ routine.
     1461       40
     1462       41        */
     1463       42        KNT$UNQ: PROC(HEAD$);

     42   0 000000  D380 0000 0000  xent KNT$UNQ         LNJ,B5   X6A_AUTO_1
          0 000003       0030 0001                       DC       48,1
          0 000005  0F81 0006                            B        s:4244,PREL

     1464       43
     1465       44        %INCLUDE KN_DATA_M;
     1466     1830        %INCLUDE KNH_MACRO_C;
     1467     2113        %INCLUDE K_ADDRESS_M;
     1468     2616        %INCLUDE GH_SCHD_M;
     1469     2760
     1470     2761                                                /* Input parameters                   */
     1471     2762    1   DCL HEAD$ PTR;
     1472     2763
     1473     2764                                                /* Auto Storage                       */
     1474     2765    1   DCL LNK$ PTR;
     1475     2766    1   DCL ENTRY_SWITCH UBIN;
     1476     2767    1   DCL TCTX# UBIN;
     1477     2768    1   DCL CTX$ PTR;
     1478     2769        %KN$NETPARM (NAME=KN$NETPARM, STCLASS=AUTO);
     1479     2922
     1480     2923                                                /* Based Structures                   */
     1481     2924    1   DCL KN$TCTX$(0:0) PTR BASED(KN_TCTX$$);
     1482     2925        %K$TCTX (NAME=KN$TCTX, STCLASS="BASED(CTX$)");
     1483     3832        %KN$LDCT (STCLASS="BASED(KN$NETPARM.LDCT$)");
     1484     4077
     1485     4078                                                /* External Data                      */
     1486     4079    1   DCL KNT_WAIT_HEAD$ PTR SYMREF;
     1487     4080    1   DCL KNT_WAIT_COUNT UBIN SYMREF;
     1488     4081    1   DCL KN_TCTX$$ PTR SYMREF;
     1489     4082    1   DCL KN_TCTX_MAX# UBIN SYMREF;
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:239  
     1490     4083        %KN$NETPARM (NAME=KN_NETPARM_INIT, STCLASS=SYMREF);
     1491     4236
     1492     4237                                                /* External Procedures                */
     1493     4238    1   DCL KNT$DSESSION ENTRY(1) ALTRET;
     1494     4239    1   DCL KNA$RLSLDCT ENTRY(1) ALTRET;
     1495     4240
     1496     4241        %EJECT;
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:240  
     1497     4242
     1498     4243    1   KNT$UNQ_BUFFER: ENTRY;

   4243   0 000007  D380 0000 0000  xent KNT$UNQ_BUFFER  LNJ,B5   X6A_AUTO_1
          0 00000A       0030 0001                       DC       48,1

     1499     4244    1      ENTRY_SWITCH = 1;

   4244   0 00000C  6C01                                 LDV,R6   1
          0 00000D  EF47 0008                            STR,R6   ENTRY_SWITCH,AUTO

     1500     4245    1      GOTO COMMON_SEARCH;

   4245   0 00000F  0F81 0009                            B        s:4248,PREL

     1501     4246
     1502     4247    1   KNT$UNQ_SESSION: ENTRY;

   4247   0 000011  D380 0000 0000  xent KNT$UNQ_SESSION LNJ,B5   X6A_AUTO_1
          0 000014       0030 0001                       DC       48,1

     1503     4248    1      ENTRY_SWITCH = 2;

   4248   0 000016  6C02                                 LDV,R6   2
          0 000017  EF47 0008                            STR,R6   ENTRY_SWITCH,AUTO

   4248   0                              COMMON_SEARCH   null
     1504     4249
     1505     4250    1   COMMON_SEARCH: ;
     1506     4251    2      DO TCTX# = 1 TO KN_TCTX_MAX#;

   4251   0 000019  5C01                 COMMON_SEARCH   LDV,R5   1
          0 00001A  DF47 0009                            STR,R5   TCTX#,AUTO
          0 00001C  0F81 0064                            B        s:4278+2,PREL

     1507     4252    2           CTX$ = KN$TCTX$(TCTX#);

PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:241  
   4252   0 00001E  EC80 0000 0000  xsym                 LDB,B6   KN_TCTX$$
          0 000021  B847 0009                            LDR,R3   TCTX#,AUTO
          0 000023  DCB6                                 LDB,B5   ,B6,R3
          0 000024  DFC7 000A                            STB,B5   CTX$,AUTO

     1508     4253    2           IF CTX$ ~= ADDR(NIL)

   4253   0 000026  8DC7 000A                            CMN      CTX$,AUTO
          0 000028  0901 0056                            BE       s:4278,PREL

     1509     4254    3           THEN DO;

     1510     4255    3                IF (KN$TCTX.STATE > %K_TSTATE_CLOSED) AND

   4255   0 00002A  E285                                 LLH,R6   ,B5
          0 00002B  6D02                                 CMV,R6   2
          0 00002C  0381 0052                            BLE      s:4278,PREL
          0 00002E  82C5 000D                            LB,'0040'X        13,B5
          0 000030       0040
          0 000031  0581 0006                            BBF      s:4255+14,PREL
          0 000033  D847 0008                            LDR,R5   ENTRY_SWITCH,AUTO
          0 000035  5D01                                 CMV,R5   1
          0 000036  0901 000B                            BE       s:4259,PREL
          0 000038  82C5 000D                            LB,'0008'X        13,B5
          0 00003A       0008
          0 00003B  0581 0043                            BBF      s:4278,PREL
          0 00003D  D847 0008                            LDR,R5   ENTRY_SWITCH,AUTO
          0 00003F  5D02                                 CMV,R5   2
          0 000040  0981 003E                            BNE      s:4278,PREL

     1511     4256    3                  ( (KN$TCTX.NEED_ASSMBUF AND ENTRY_SWITCH = 1) OR
     1512     4257    3                  (KN$TCTX.HOST_CQ_FULL AND ENTRY_SWITCH = 2) )
     1513     4258    4                THEN DO;

     1514     4259    4                     KN$NETPARM = KN_NETPARM_INIT;

   4259   0 000042  AB80 0000 0000  xsym                 LAB,B2   KN_NETPARM_INIT
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:242  
          0 000045  2C00                                 LDV,R2   0
          0 000046  6C42                                 LDV,R6   66
          0 000047  BB87                                 LAB,B3   ,AUTO
          0 000048  3C18                                 LDV,R3   24
          0 000049  0008                                 MMM

     1515     4260    4                     KN$NETPARM.FUNCTION = %KN_FCN_DATA;

   4260   0 00004A  6C05                                 LDV,R6   5
          0 00004B  EF47 0020                            STR,R6   KN$NETPARM+20,AUTO

     1516     4261    4                     KN$NETPARM.TCTX$ = CTX$;

   4261   0 00004D  ECC7 000A                            LDB,B6   CTX$,AUTO
          0 00004F  EFC7 0027                            STB,B6   KN$NETPARM+27,AUTO

     1517     4262
     1518     4263    4                     KN$TCTX.HOST_CQ_FULL = '0'B;

   4263   0 000051  8846 000D                            LBF,'0008'X       13,B6
   4263   0 000053       0008

     1519     4264    4                     KN$TCTX.NEED_ASSMBUF = '0'B;

   4264   0 000054  8846 000D                            LBF,'0040'X       13,B6
   4264   0 000056       0040

     1520     4265
     1521     4266    4                     CALL KNT$DSESSION(KN$NETPARM);

   4266   0 000057  DBC7 000C                            LAB,B5   KN$NETPARM,AUTO
          0 000059  DFC7 002E                            STB,B5   KN$NETPARM+34,AUTO
          0 00005B  BBC7 002E                            LAB,B3   KN$NETPARM+34,AUTO
          0 00005D  CBF0 0100                            LAB,B4   256,IMO
          0 00005F  E380 0000 0000  xent                 LNJ,B6   KNT$DSESSION
          0 000062       0001                            DC       s:4268,PREL

PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:243  
     1522     4267
     1523     4268    4                     IF (ENTRY_SWITCH = 2)

   4268   0 000063  E847 0008                            LDR,R6   ENTRY_SWITCH,AUTO
          0 000065  6D02                                 CMV,R6   2
          0 000066  0981 000B                            BNE      s:4273,PREL

     1524     4269    5                     THEN DO;

     1525     4270    5                          IF KN$TCTX.HOST_CQ_FULL THEN RETURN;

   4270   0 000068  ECC7 000A                            LDB,B6   CTX$,AUTO
          0 00006A  82C6 000D                            LB,'0008'X        13,B6
          0 00006C       0008
          0 00006D  0581 0011                            BBF      s:4278,PREL

   4270   0 00006F  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1526     4271    5                          END;
     1527     4272    5                     ELSE DO;

     1528     4273    5                          IF KN$TCTX.NEED_ASSMBUF THEN RETURN;

   4273   0 000072  ECC7 000A                            LDB,B6   CTX$,AUTO
          0 000074  82C6 000D                            LB,'0040'X        13,B6
          0 000076       0040
          0 000077  0581 0004                            BBF      s:4274,PREL

   4273   0 000079  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

     1529     4274    5                          KNT_WAIT_COUNT = KNT_WAIT_COUNT -1;

   4274   0 00007C  8880 0000 0000  xsym                 DEC      KNT_WAIT_COUNT

     1530     4275    5                          END;

     1531     4276    4                     END/*do if need assembly buffer*/;
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:244  

     1532     4277    3                END/*do if ctx$ ~ nil*/;

     1533     4278    2           END/*do 1 to max*/;

   4278   0 00007F  8AC7 0009                            INC      TCTX#,AUTO
          0 000081  E847 0009                            LDR,R6   TCTX#,AUTO
          0 000083  E900 0000 0000  xsym                 CMR,R6   KN_TCTX_MAX#
          0 000086  0381 FF97                            BLE      s:4252,PREL

     1534     4279
     1535     4280    1      LNK$ = KNT_WAIT_HEAD$;

   4280   0 000088  EC80 0000 0000  xsym                 LDB,B6   KNT_WAIT_HEAD$
          0 00008B  EFC7 0006                            STB,B6   LNK$,AUTO

     1536     4281    1      KNT_WAIT_HEAD$ = ADDR(NIL);

   4281   0 00008D  DB80 0000 0000                       LAB,B5   0
          0 000090  DF80 0000 0000  xsym                 STB,B5   KNT_WAIT_HEAD$

     1537     4282    1      GOTO COMMON;

   4282   0 000093  0F81 001A                            B        s:4290,PREL

     1538     4283
     1539     4284
     1540     4285
     1541     4286    1   KNT$UNQ_OPEN: ENTRY(HEAD$);

   4286   0 000095  D380 0000 0000  xent KNT$UNQ_OPEN    LNJ,B5   X6A_AUTO_1
          0 000098       0030 0001                       DC       48,1
          0 00009A  0F81 0006                            B        s:4288,PREL

     1542     4287    1   KNT$UNQ_FLOW: ENTRY(HEAD$);

   4287   0 00009C  D380 0000 0000  xent KNT$UNQ_FLOW    LNJ,B5   X6A_AUTO_1
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:245  
          0 00009F       0030 0001                       DC       48,1

     1543     4288    1      ENTRY_SWITCH = 0;

   4288   0 0000A1  8747 0008                            CL       ENTRY_SWITCH,AUTO

     1544     4289    1      LNK$ = HEAD$;

   4289   0 0000A3  ECC7 0004                            LDB,B6   @HEAD$,AUTO
          0 0000A5  DC86                                 LDB,B5   ,B6
          0 0000A6  DFC7 0006                            STB,B5   LNK$,AUTO

     1545     4290    1      HEAD$ = ADDR(NIL);

   4290   0 0000A8  CB80 0000 0000                       LAB,B4   0
          0 0000AB  CF86                                 STB,B4   ,B6

     1546     4291    1      GOTO COMMON;

   4291   0 0000AC  0F81 0001                            B        s:4290,PREL

   4290   0                              COMMON          null
     1547     4292
     1548     4293    1   COMMON: ;
     1549     4294    2      DO WHILE (LNK$ ~= ADDR(NIL) );

   4294   0 0000AE  0F81 0046            COMMON          B        s:4309,PREL

     1550     4295    2           KN$NETPARM.FUNCTION = %KN_FCN_UNQ;

   4295   0 0000B0  6C08                                 LDV,R6   8
          0 0000B1  EF47 0020                            STR,R6   KN$NETPARM+20,AUTO

     1551     4296    2           KN$NETPARM.LDCT$ = LNK$;

   4296   0 0000B3  ECC7 0006                            LDB,B6   LNK$,AUTO
          0 0000B5  EFC7 000C                            STB,B6   KN$NETPARM,AUTO
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:246  

     1552     4297    2           LNK$ = KN$LDCT.LNK$;

   4297   0 0000B7  DCC6 0008                            LDB,B5   8,B6
          0 0000B9  DFC7 0006                            STB,B5   LNK$,AUTO

     1553     4298    2           KN$LDCT.LNK$ = ADDR(NIL);

   4298   0 0000BB  CB80 0000 0000                       LAB,B4   0
          0 0000BE  CFC6 0008                            STB,B4   8,B6

     1554     4299    2           KN$LDCT.FLAGS.QUEUED = '0'B;

   4299   0 0000C0  ECC7 000C                            LDB,B6   KN$NETPARM,AUTO
          0 0000C2  8846 000A                            LBF,'8000'X       10,B6
          0 0000C4       8000

     1555     4300
     1556     4301    2           IF KN$LDCT.USER_ENTRY$ ~= ENTADDR(NIL)

   4301   0 0000C5  ECC7 000C                            LDB,B6   KN$NETPARM,AUTO
          0 0000C7  CCC6 000C                            LDB,B4   12,B6
          0 0000C9  CD80 0000 0000  01                   CMB,B4   0
          0 0000CC  0901 000D                            BE       s:4304,PREL

     1557     4302    2           THEN CALL KN$LDCT.USER_ENTRY$ (KN$NETPARM);

   4302   0 0000CE  BBC7 000C                            LAB,B3   KN$NETPARM,AUTO
          0 0000D0  BFC7 002E                            STB,B3   KN$NETPARM+34,AUTO
          0 0000D2  BBC7 002E                            LAB,B3   KN$NETPARM+34,AUTO
          0 0000D4  9CC6 000C                            LDB,B1   12,B6
          0 0000D6  CBF0 0100                            LAB,B4   256,IMO
          0 0000D8  E381                                 LNJ,B6   ,B1
          0 0000D9       0001                            DC       s:4304,PREL

     1558     4303
     1559     4304    2           IF KN$LDCT.FLAGS.REL
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:247  

   4304   0 0000DA  ECC7 000C                            LDB,B6   KN$NETPARM,AUTO
          0 0000DC  82C6 000A                            LB,'4000'X        10,B6
          0 0000DE       4000
          0 0000DF  0581 000D                            BBF      s:4307,PREL

     1560     4305    2           THEN CALL KNA$RLSLDCT (KN$NETPARM.LDCT$);

   4305   0 0000E1  DBC7 000C                            LAB,B5   KN$NETPARM,AUTO
          0 0000E3  DFC7 002E                            STB,B5   KN$NETPARM+34,AUTO
          0 0000E5  BBC7 002E                            LAB,B3   KN$NETPARM+34,AUTO
          0 0000E7  CBF0 0100                            LAB,B4   256,IMO
          0 0000E9  E380 0000 0000  xent                 LNJ,B6   KNA$RLSLDCT
          0 0000EC       0001                            DC       s:4307,PREL

     1561     4306
     1562     4307    2           IF ENTRY_SWITCH = 1

   4307   0 0000ED  E847 0008                            LDR,R6   ENTRY_SWITCH,AUTO
          0 0000EF  6D01                                 CMV,R6   1
          0 0000F0  0981 0004                            BNE      s:4309,PREL

     1563     4308    2           THEN KNT_WAIT_COUNT = KNT_WAIT_COUNT -1;

   4308   0 0000F2  8880 0000 0000  xsym                 DEC      KNT_WAIT_COUNT

     1564     4309    2           END;

   4309   0 0000F5  8DC7 0006                            CMN      LNK$,AUTO
          0 0000F7  0981 FFB8                            BNE      s:4295,PREL

     1565     4310
     1566     4311    1      RETURN;

   4311   0 0000F9  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
     1567     4312    1   END KNT$UNQ;
     1568     4313        %EOD;
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:248  

PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:249  
--  Include file information  --

   GH_SCHD_M.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$UNQ.
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:250  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @HEAD$                     A-0-0/w PTR         r     1 CTX$
     8-0-0/w UBIN(16)    r     1 ENTRY_SWITCH              *0-0-0/w PTR         r     1 HEAD$
     C-0-0/w STRC(528)   r     1 KN$NETPARM                 6-0-0/w PTR         r     1 LNK$
     9-0-0/w UBIN(16)    r     1 TCTX#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 KNT_WAIT_COUNT             0-0-0/w PTR         r     1 KNT_WAIT_HEAD$
     0-0-0/w STRC(528)   r     1 KN_NETPARM_INIT            0-0-0/w PTR         r     1 KN_TCTX$$
     0-0-0/w UBIN(16)    r     1 KN_TCTX_MAX#

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(256)   r     1 KN$LDCT                    0-0-0/w STRC(2816)  r     1 KN$TCTX
     0-0-0/w PTR         r     1 KN$TCTX$(0:0)


   Procedure KNT$UNQ requires 252 words for executable code.
   Procedure KNT$UNQ requires 48 words of local(AUTO) storage.
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:251  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:252  
          MINI XREF LISTING

COMMON
      4290**LABEL    4282--GOTO     4291--GOTO
COMMON_SEARCH
      4248**LABEL    4245--GOTO
CTX$
      2768**DCL      2930--IMP-PTR  4252<<ASSIGN   4253>>IF       4255>>IF       4255>>IF       4255>>IF
      4261>>ASSIGN   4263>>ASSIGN   4264>>ASSIGN   4270>>IF       4273>>IF
ENTRY_SWITCH
      2766**DCL      4244<<ASSIGN   4248<<ASSIGN   4255>>IF       4255>>IF       4268>>IF       4288<<ASSIGN
      4307>>IF
HEAD$
      2762**DCL        42--PROC     4286--ENTRY    4287--ENTRY    4289>>ASSIGN   4290<<ASSIGN
KN$LDCT.FLAGS.QUEUED
      4024**DCL      4299<<ASSIGN
KN$LDCT.FLAGS.REL
      4032**DCL      4304>>IF
KN$LDCT.LNK$
      3993**DCL      4297>>ASSIGN   4298<<ASSIGN
KN$LDCT.RLCID.LDCTX
      3908**DCL      3915--REDEF    3923--REDEF
KN$LDCT.TRANSPORT_ID
      3942**DCL      3950--REDEF
KN$LDCT.UID
      3972**DCL      3973--REDEF    3982--REDEF
KN$LDCT.USER_ENTRY$
      4053**DCL      4301>>IF       4302>>CALL
KN$NETPARM
      2782**DCL      4259<<ASSIGN   4266<>CALL     4302<>CALL
KN$NETPARM.FUNCTION
      2877**DCL      4260<<ASSIGN   4295<<ASSIGN
KN$NETPARM.LDCT$
      2783**DCL      3847--IMP-PTR  4296<<ASSIGN   4297>>ASSIGN   4298>>ASSIGN   4299>>ASSIGN   4301>>IF
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:253  
      4302>>CALL     4304>>IF       4305<>CALL
KN$NETPARM.MSG$
      2789**DCL      2794--REDEF
KN$NETPARM.NHDR$
      2841**DCL      2842--REDEF
KN$NETPARM.SHDR$
      2819**DCL      2820--REDEF
KN$NETPARM.TCTX$
      2906**DCL      4261<<ASSIGN
KN$NETPARM.THDR$
      2830**DCL      2831--REDEF
KN$NETPARM.UHDR$
      2805**DCL      2806--REDEF
KN$TCTX.DST_NSAP.ADDRESS_N
      3815**DCL      3816--REDEF
KN$TCTX.HOST_CQ_FULL
      3158**DCL      4255>>IF       4263<<ASSIGN   4270>>IF
KN$TCTX.NEED_ASSMBUF
      3123**DCL      4255>>IF       4264<<ASSIGN   4273>>IF
KN$TCTX.NODE
      2937**DCL      2950--REDEF
KN$TCTX.SRC_NSAP.ADDRESS_N
      3751**DCL      3752--REDEF
KN$TCTX.STATE
      2931**DCL      4255>>IF
KN$TCTX.TMR_INACTIVITY.ARG
      3571**DCL      3572--REDEF
KN$TCTX.TMR_REFERENCE.ARG
      3601**DCL      3602--REDEF
KN$TCTX.TMR_RETRAN.ARG
      3512**DCL      3513--REDEF
KN$TCTX.TMR_WINDOW.ARG
      3541**DCL      3542--REDEF
KN$TCTX$
      2924**DCL      4252>>ASSIGN
KNA$RLSLDCT
PL6.E3A0      #010=KNT$UNQ File=KNT$MISC.:E05TSI                                 WED 07/30/97 01:12 Page:254  
      4239**DCL-ENT  4305--CALL
KNT$DSESSION
      4238**DCL-ENT  4266--CALL
KNT_WAIT_COUNT
      4080**DCL      4274<<ASSIGN   4274>>ASSIGN   4308<<ASSIGN   4308>>ASSIGN
KNT_WAIT_HEAD$
      4079**DCL      4280>>ASSIGN   4281<<ASSIGN
KN_NETPARM_INIT
      4096**DCL      4259>>ASSIGN
KN_NETPARM_INIT.MSG$
      4103**DCL      4108--REDEF
KN_NETPARM_INIT.NHDR$
      4155**DCL      4156--REDEF
KN_NETPARM_INIT.SHDR$
      4133**DCL      4134--REDEF
KN_NETPARM_INIT.THDR$
      4144**DCL      4145--REDEF
KN_NETPARM_INIT.UHDR$
      4119**DCL      4120--REDEF
KN_TCTX$$
      4081**DCL      2924--IMP-PTR  4252>>ASSIGN
KN_TCTX_MAX#
      4082**DCL      4251>>DOINDEX
LNK$
      2765**DCL      4280<<ASSIGN   4289<<ASSIGN   4294>>DOWHILE  4296>>ASSIGN   4297<<ASSIGN
TCTX#
      2767**DCL      4251<<DOINDEX  4252>>ASSIGN

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:255  
     1569        1        /*T***********************************************************/
     1570        2        /*T*                                                         */
     1571        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1572        4        /*T*                                                         */
     1573        5        /*T***********************************************************/
     1574        6
     1575        7        /*M* KNT$TRACE - Trace activity of specified transport connections.  */
     1576        8        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
     1577        9
     1578       10        KNT$TRACE: PROC(KN$NETPARM);
     1579       11
     1580       12        %INCLUDE KN_DATA_M;
     1581     1798        %INCLUDE K_TRANSPORT_M;
     1582     3582
     1583     3583                                                /* Input Parameters                   */
     1584     3584        %KN$NETPARM;
     1585     3737
     1586     3738                                                /* AUTO Storage                       */
     1587     3739    1   DCL WHO UBIN;
     1588     3740    1   DCL TEMP$ PTR;
     1589     3741    1   DCL DATA$ CPTR;
     1590     3742
     1591     3743                                                /* Based structures                   */
     1592     3744        %KNT_TRC_BUF (FPTN=KNT$BUFF_ENTRY, STCLASS="BASED(TEMP$)");
     1593     3792
     1594     3793        %KNT_TRC_BUF(FPTN="KNT$TRC_BUF(0:0)", STCLASS="BASED(KNT$TRC_BUF$)");
     1595     3841
     1596     3842    1   DCL B$TPDU CHAR(10) BASED;
     1597     3843
     1598     3844                                                /* External Data                      */
     1599     3845    1   DCL KNT$TRC_BUF$ PTR SYMREF READONLY;
     1600     3846    1   DCL KNT_TRC_BUF# UBIN SYMREF;
     1601     3847    1   DCL KNT_TRC_X SBIN SYMREF;
     1602     3848
     1603     3849                                                /* External Procedures                */
     1604     3850    1   DCL GHI$TICS ENTRY(1);
     1605     3851    1   DCL GHI$TR_TICS ENTRY(1);
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:256  
     1606     3852
     1607     3853        %EJECT;
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:257  
     1608     3854    1   KNT$TR_SEND: ENTRY(KN$NETPARM);
     1609     3855    1      WHO = %ASCBIN('E') + 256 * ASCBIN('S'); /* SE -send                        */
     1610     3856    1      GOTO SET_DATA1;
     1611     3857
     1612     3858    1   KNT$TR_RECV: ENTRY(KN$NETPARM);
     1613     3859    1      WHO = %ASCBIN('C') + 256 * ASCBIN('R'); /* RC -receive                     */
     1614     3860    1      GOTO SET_DATA1;
     1615     3861
     1616     3862    1   KNT$TR_RETRN: ENTRY(KN$NETPARM);
     1617     3863    1      WHO = %ASCBIN('T') + 256 * ASCBIN('R'); /* RT - retransmit*/
     1618     3864    1      GOTO SET_DATA1;
     1619     3865
     1620     3866    1   KNT$TR_FHOST: ENTRY(KN$NETPARM);
     1621     3867    1      WHO = %ASCBIN('H') + 256 * ASCBIN('F'); /* FH -forward to host             */
     1622     3868    1      GOTO SET_DATA1;
     1623     3869
     1624     3870    1   KNT$TR_DSSN: ENTRY(KN$NETPARM);
     1625     3871    1      WHO = %ASCBIN('S') + 256 * ASCBIN('D'); /* DS -deliver to session*/
     1626     3872    1      GOTO SET_DATA1;
     1627     3873
     1628     3874    1   KNT$TR_RCVH: ENTRY(KN$NETPARM);
     1629     3875    1      WHO = %ASCBIN('H') + 256 * ASCBIN('R'); /* RH - received from host         */
     1630     3876    1      GOTO SET_DATA1;
     1631     3877
     1632     3878    1   KNT$TR_ERROR: ENTRY(KN$NETPARM);
     1633     3879    1      WHO = KN$NETPARM.THDRSZ;
     1634     3880    1      GOTO SET_DATA1;
     1635     3881
     1636     3882    1   KNT$TR_TERM: ENTRY(KN$NETPARM);
     1637     3883    1      WHO = %ASCBIN('R') + 256 * ASCBIN('T'); /* TR -term function recvd         */
     1638     3884    1      GOTO SET_DATA2;
     1639     3885
     1640     3886    1   KNT$TR_NCR: ENTRY(KN$NETPARM);
     1641     3887    1      WHO = %ASCBIN('R') + 256 * ASCBIN('C'); /* CR -NCONNECT Request sent       */
     1642     3888    1      GOTO SET_DATA2;
     1643     3889
     1644     3890    1   KNT$TR_NCI: ENTRY(KN$NETPARM);
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:258  
     1645     3891    1      WHO = %ASCBIN('I') + 256 * ASCBIN('C'); /* CI -NCONNECT Indication rcvd    */
     1646     3892    1      GOTO SET_DATA2;
     1647     3893
     1648     3894    1   KNT$TR_NCC: ENTRY(KN$NETPARM);
     1649     3895    1      WHO = %ASCBIN('C') + 256 * ASCBIN('C'); /* CC -NCONNECT Confirm rcvd       */
     1650     3896    1      GOTO SET_DATA2;
     1651     3897
     1652     3898    1   KNT$TR_NRESET: ENTRY(KN$NETPARM);
     1653     3899    1      WHO = %ASCBIN('R') + 256 * ASCBIN('N'); /* NR -NRESET received             */
     1654     3900    1      GOTO SET_DATA2;
     1655     3901
     1656     3902    1   KNT$TR_NDISCONNECT: ENTRY(KN$NETPARM);
     1657     3903    1      WHO = %ASCBIN('D') + 256 * ASCBIN('N'); /* ND -NDISCONNECT received        */
     1658     3904    1      GOTO SET_DATA2;
     1659     3905
     1660     3906
     1661     3907
     1662     3908    1   SET_DATA1:
     1663     3909    1      DATA$ = KN$NETPARM.THDR_C$;
     1664     3910    1      GOTO COMMON;
     1665     3911
     1666     3912    1   SET_DATA2:
     1667     3913    1      DATA$ = ADDR(KN$NETPARM.TCTX_ID);
     1668     3914
     1669     3915    1   COMMON:
     1670     3916    1      TEMP$ = ADDR(KNT$TRC_BUF(KNT_TRC_X));
     1671     3917    1      KNT$BUFF_ENTRY.WHO = WHO;
     1672     3918
     1673     3919    1      IF DATA$ ~= ADDR(NIL)
     1674     3920    1      THEN KNT$BUFF_ENTRY.TPDU = DATA$->B$TPDU;
     1675     3921
     1676     3922    1      IF DATA$ = ADDR(KN$NETPARM.TCTX_ID)
     1677     3923    1      THEN CALL GHI$TR_TICS (KNT$BUFF_ENTRY.TIME);
     1678     3924    1      ELSE CALL GHI$TICS (KNT$BUFF_ENTRY.TIME);
     1679     3925
     1680     3926    1      KNT_TRC_X = KNT_TRC_X + 1;
     1681     3927
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:259  
     1682     3928    1      IF KNT_TRC_X = KNT_TRC_BUF#
     1683     3929    1      THEN KNT_TRC_X = 0;
     1684     3930    1   END KNT$TRACE;

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:260  
--  Include file information  --

   K_TRANSPORT_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$TRACE.

   Procedure KNT$TRACE requires 259 words for executable code.
   Procedure KNT$TRACE requires 14 words of local(AUTO) storage.

    No errors detected in file KNT$MISC.:E05TSI    .

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:261  

 Object Unit name= KNT$TRACE                                  File name= KNT$MISC.:E05TOU
 UTS= JUL 30 '97 01:12:38.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   259    103  KNT$TRACE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KNT$TRACE
     0      7                  yes      Std        1  KNT$TR_SEND
     0     12                  yes      Std        1  KNT$TR_RECV
     0     1D                  yes      Std        1  KNT$TR_RETRN
     0     28                  yes      Std        1  KNT$TR_FHOST
     0     33                  yes      Std        1  KNT$TR_DSSN
     0     3E                  yes      Std        1  KNT$TR_RCVH
     0     49                  yes      Std        1  KNT$TR_ERROR
     0     56                  yes      Std        1  KNT$TR_TERM
     0     61                  yes      Std        1  KNT$TR_NCR
     0     6C                  yes      Std        1  KNT$TR_NCI
     0     77                  yes      Std        1  KNT$TR_NCC
     0     82                  yes      Std        1  KNT$TR_NRESET
     0     8D                  yes      Std        1  KNT$TR_NDISCONNECT
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:262  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 GHI$TR_TICS
         yes           Std       1 GHI$TICS
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    KNT$TRC_BUF$                          KNT_TRC_BUF#                          KNT_TRC_X
r    G$ROS$
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:263  


     1569        1        /*T***********************************************************/
     1570        2        /*T*                                                         */
     1571        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1572        4        /*T*                                                         */
     1573        5        /*T***********************************************************/
     1574        6
     1575        7        /*M* KNT$TRACE - Trace activity of specified transport connections.  */
     1576        8        /*X* PLM=3,IND=5,ENU=0,ECU=0  */
     1577        9
     1578       10        KNT$TRACE: PROC(KN$NETPARM);

     10   0 000000  D380 0000 0000  xent KNT$TRACE       LNJ,B5   X6A_AUTO_1
          0 000003       000E 0001                       DC       14,1
          0 000005  0F81 0006                            B        s:3855,PREL

     1579       11
     1580       12        %INCLUDE KN_DATA_M;
     1581     1798        %INCLUDE K_TRANSPORT_M;
     1582     3582
     1583     3583                                                /* Input Parameters                   */
     1584     3584        %KN$NETPARM;
     1585     3737
     1586     3738                                                /* AUTO Storage                       */
     1587     3739    1   DCL WHO UBIN;
     1588     3740    1   DCL TEMP$ PTR;
     1589     3741    1   DCL DATA$ CPTR;
     1590     3742
     1591     3743                                                /* Based structures                   */
     1592     3744        %KNT_TRC_BUF (FPTN=KNT$BUFF_ENTRY, STCLASS="BASED(TEMP$)");
     1593     3792
     1594     3793        %KNT_TRC_BUF(FPTN="KNT$TRC_BUF(0:0)", STCLASS="BASED(KNT$TRC_BUF$)");
     1595     3841
     1596     3842    1   DCL B$TPDU CHAR(10) BASED;
     1597     3843
     1598     3844                                                /* External Data                      */
     1599     3845    1   DCL KNT$TRC_BUF$ PTR SYMREF READONLY;
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:264  
     1600     3846    1   DCL KNT_TRC_BUF# UBIN SYMREF;
     1601     3847    1   DCL KNT_TRC_X SBIN SYMREF;
     1602     3848
     1603     3849                                                /* External Procedures                */
     1604     3850    1   DCL GHI$TICS ENTRY(1);
     1605     3851    1   DCL GHI$TR_TICS ENTRY(1);
     1606     3852
     1607     3853        %EJECT;
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:265  
     1608     3854    1   KNT$TR_SEND: ENTRY(KN$NETPARM);

   3854   0 000007  D380 0000 0000  xent KNT$TR_SEND     LNJ,B5   X6A_AUTO_1
          0 00000A       000E 0001                       DC       14,1

     1609     3855    1      WHO = %ASCBIN('E') + 256 * ASCBIN('S'); /* SE -send                        */

   3855   0 00000C  E870 5345                            LDR,R6   21317,IMO
          0 00000E  EF47 0006                            STR,R6   WHO,AUTO

     1610     3856    1      GOTO SET_DATA1;

   3856   0 000010  0F81 0087                            B        s:3909,PREL

     1611     3857
     1612     3858    1   KNT$TR_RECV: ENTRY(KN$NETPARM);

   3858   0 000012  D380 0000 0000  xent KNT$TR_RECV     LNJ,B5   X6A_AUTO_1
          0 000015       000E 0001                       DC       14,1

     1613     3859    1      WHO = %ASCBIN('C') + 256 * ASCBIN('R'); /* RC -receive                     */

   3859   0 000017  E870 5243                            LDR,R6   21059,IMO
          0 000019  EF47 0006                            STR,R6   WHO,AUTO

     1614     3860    1      GOTO SET_DATA1;

   3860   0 00001B  0F81 007C                            B        s:3909,PREL

     1615     3861
     1616     3862    1   KNT$TR_RETRN: ENTRY(KN$NETPARM);

   3862   0 00001D  D380 0000 0000  xent KNT$TR_RETRN    LNJ,B5   X6A_AUTO_1
          0 000020       000E 0001                       DC       14,1

     1617     3863    1      WHO = %ASCBIN('T') + 256 * ASCBIN('R'); /* RT - retransmit*/

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:266  
   3863   0 000022  E870 5254                            LDR,R6   21076,IMO
          0 000024  EF47 0006                            STR,R6   WHO,AUTO

     1618     3864    1      GOTO SET_DATA1;

   3864   0 000026  0F81 0071                            B        s:3909,PREL

     1619     3865
     1620     3866    1   KNT$TR_FHOST: ENTRY(KN$NETPARM);

   3866   0 000028  D380 0000 0000  xent KNT$TR_FHOST    LNJ,B5   X6A_AUTO_1
          0 00002B       000E 0001                       DC       14,1

     1621     3867    1      WHO = %ASCBIN('H') + 256 * ASCBIN('F'); /* FH -forward to host             */

   3867   0 00002D  E870 4648                            LDR,R6   17992,IMO
          0 00002F  EF47 0006                            STR,R6   WHO,AUTO

     1622     3868    1      GOTO SET_DATA1;

   3868   0 000031  0F81 0066                            B        s:3909,PREL

     1623     3869
     1624     3870    1   KNT$TR_DSSN: ENTRY(KN$NETPARM);

   3870   0 000033  D380 0000 0000  xent KNT$TR_DSSN     LNJ,B5   X6A_AUTO_1
          0 000036       000E 0001                       DC       14,1

     1625     3871    1      WHO = %ASCBIN('S') + 256 * ASCBIN('D'); /* DS -deliver to session*/

   3871   0 000038  E870 4453                            LDR,R6   17491,IMO
          0 00003A  EF47 0006                            STR,R6   WHO,AUTO

     1626     3872    1      GOTO SET_DATA1;

   3872   0 00003C  0F81 005B                            B        s:3909,PREL

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:267  
     1627     3873
     1628     3874    1   KNT$TR_RCVH: ENTRY(KN$NETPARM);

   3874   0 00003E  D380 0000 0000  xent KNT$TR_RCVH     LNJ,B5   X6A_AUTO_1
          0 000041       000E 0001                       DC       14,1

     1629     3875    1      WHO = %ASCBIN('H') + 256 * ASCBIN('R'); /* RH - received from host         */

   3875   0 000043  E870 5248                            LDR,R6   21064,IMO
          0 000045  EF47 0006                            STR,R6   WHO,AUTO

     1630     3876    1      GOTO SET_DATA1;

   3876   0 000047  0F81 0050                            B        s:3909,PREL

     1631     3877
     1632     3878    1   KNT$TR_ERROR: ENTRY(KN$NETPARM);

   3878   0 000049  D380 0000 0000  xent KNT$TR_ERROR    LNJ,B5   X6A_AUTO_1
          0 00004C       000E 0001                       DC       14,1

     1633     3879    1      WHO = KN$NETPARM.THDRSZ;

   3879   0 00004E  ECC7 0004                            LDB,B6   @KN$NETPARM,AUTO
          0 000050  E846 000D                            LDR,R6   13,B6
          0 000052  EF47 0006                            STR,R6   WHO,AUTO

     1634     3880    1      GOTO SET_DATA1;

   3880   0 000054  0F81 0043                            B        s:3909,PREL

     1635     3881
     1636     3882    1   KNT$TR_TERM: ENTRY(KN$NETPARM);

   3882   0 000056  D380 0000 0000  xent KNT$TR_TERM     LNJ,B5   X6A_AUTO_1
          0 000059       000E 0001                       DC       14,1

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:268  
     1637     3883    1      WHO = %ASCBIN('R') + 256 * ASCBIN('T'); /* TR -term function recvd         */

   3883   0 00005B  E870 5452                            LDR,R6   21586,IMO
          0 00005D  EF47 0006                            STR,R6   WHO,AUTO

     1638     3884    1      GOTO SET_DATA2;

   3884   0 00005F  0F81 0040                            B        s:3913,PREL

     1639     3885
     1640     3886    1   KNT$TR_NCR: ENTRY(KN$NETPARM);

   3886   0 000061  D380 0000 0000  xent KNT$TR_NCR      LNJ,B5   X6A_AUTO_1
          0 000064       000E 0001                       DC       14,1

     1641     3887    1      WHO = %ASCBIN('R') + 256 * ASCBIN('C'); /* CR -NCONNECT Request sent       */

   3887   0 000066  E870 4352                            LDR,R6   17234,IMO
          0 000068  EF47 0006                            STR,R6   WHO,AUTO

     1642     3888    1      GOTO SET_DATA2;

   3888   0 00006A  0F81 0035                            B        s:3913,PREL

     1643     3889
     1644     3890    1   KNT$TR_NCI: ENTRY(KN$NETPARM);

   3890   0 00006C  D380 0000 0000  xent KNT$TR_NCI      LNJ,B5   X6A_AUTO_1
          0 00006F       000E 0001                       DC       14,1

     1645     3891    1      WHO = %ASCBIN('I') + 256 * ASCBIN('C'); /* CI -NCONNECT Indication rcvd    */

   3891   0 000071  E870 4349                            LDR,R6   17225,IMO
          0 000073  EF47 0006                            STR,R6   WHO,AUTO

     1646     3892    1      GOTO SET_DATA2;

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:269  
   3892   0 000075  0F81 002A                            B        s:3913,PREL

     1647     3893
     1648     3894    1   KNT$TR_NCC: ENTRY(KN$NETPARM);

   3894   0 000077  D380 0000 0000  xent KNT$TR_NCC      LNJ,B5   X6A_AUTO_1
          0 00007A       000E 0001                       DC       14,1

     1649     3895    1      WHO = %ASCBIN('C') + 256 * ASCBIN('C'); /* CC -NCONNECT Confirm rcvd       */

   3895   0 00007C  E870 4343                            LDR,R6   17219,IMO
          0 00007E  EF47 0006                            STR,R6   WHO,AUTO

     1650     3896    1      GOTO SET_DATA2;

   3896   0 000080  0F81 001F                            B        s:3913,PREL

     1651     3897
     1652     3898    1   KNT$TR_NRESET: ENTRY(KN$NETPARM);

   3898   0 000082  D380 0000 0000  xent KNT$TR_NRESET   LNJ,B5   X6A_AUTO_1
          0 000085       000E 0001                       DC       14,1

     1653     3899    1      WHO = %ASCBIN('R') + 256 * ASCBIN('N'); /* NR -NRESET received             */

   3899   0 000087  E870 4E52                            LDR,R6   20050,IMO
          0 000089  EF47 0006                            STR,R6   WHO,AUTO

     1654     3900    1      GOTO SET_DATA2;

   3900   0 00008B  0F81 0014                            B        s:3913,PREL

     1655     3901
     1656     3902    1   KNT$TR_NDISCONNECT: ENTRY(KN$NETPARM);

   3902   0 00008D  D380 0000 0000  xent KNT$TR_NDISCONN*LNJ,B5   X6A_AUTO_1
          0 000090       000E 0001                       DC       14,1
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:270  

     1657     3903    1      WHO = %ASCBIN('D') + 256 * ASCBIN('N'); /* ND -NDISCONNECT received        */

   3903   0 000092  E870 4E44                            LDR,R6   20036,IMO
          0 000094  EF47 0006                            STR,R6   WHO,AUTO

     1658     3904    1      GOTO SET_DATA2;

   3904   0 000096  0F81 0009                            B        s:3913,PREL

     1659     3905
     1660     3906
     1661     3907
     1662     3908    1   SET_DATA1:
     1663     3909    1      DATA$ = KN$NETPARM.THDR_C$;

   3909   0 000098  ECC7 0004            SET_DATA1       LDB,B6   @KN$NETPARM,AUTO
          0 00009A  8CC6 000B                            LDI      11,B6
          0 00009C  8D47 0009                            SDI      DATA$,AUTO

     1664     3910    1      GOTO COMMON;

   3910   0 00009E  0F81 0007                            B        s:3916,PREL

     1665     3911
     1666     3912    1   SET_DATA2:
     1667     3913    1      DATA$ = ADDR(KN$NETPARM.TCTX_ID);

   3913   0 0000A0  ECC7 0004            SET_DATA2       LDB,B6   @KN$NETPARM,AUTO
          0 0000A2  DBC6 0011                            LAB,B5   17,B6
          0 0000A4  DFC7 0009                            STB,B5   DATA$,AUTO

     1668     3914
     1669     3915    1   COMMON:
     1670     3916    1      TEMP$ = ADDR(KNT$TRC_BUF(KNT_TRC_X));

   3916   0 0000A6  DC80 0000 0000  xsym COMMON          LDB,B5   KNT$TRC_BUF$
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:271  
          0 0000A9  B800 0000 0000  xsym                 LDR,R3   KNT_TRC_X
          0 0000AC  3003                                 SOL,R3   3
          0 0000AD  CBB5                                 LAB,B4   ,B5,R3
          0 0000AE  CFC7 0007                            STB,B4   TEMP$,AUTO

     1671     3917    1      KNT$BUFF_ENTRY.WHO = WHO;

   3917   0 0000B0  E847 0006                            LDR,R6   WHO,AUTO
          0 0000B2  EF04                                 STR,R6   ,B4

     1672     3918
     1673     3919    1      IF DATA$ ~= ADDR(NIL)

   3919   0 0000B3  8DC7 0009                            CMN      DATA$,AUTO
          0 0000B5  0901 0011                            BE       s:3922,PREL

     1674     3920    1      THEN KNT$BUFF_ENTRY.TPDU = DATA$->B$TPDU;

   3920   0 0000B7  8CC7 0009                            LDI      DATA$,AUTO
          0 0000B9  B856                                 LDR,R3   R6
          0 0000BA  E570 7FFF                            AND,R6   32767,IMO
          0 0000BC  8D47 000C                            SDI      DATA$+3,AUTO
          0 0000BE  BCC7 000C                            LDB,B3   DATA$+3,AUTO
          0 0000C0  304F                                 SOR,R3   15
          0 0000C1  AB83                                 LAB,B2   ,B3
          0 0000C2  A853                                 LDR,R2   R3
          0 0000C3  6C0A                                 LDV,R6   10
          0 0000C4  BB84                                 LAB,B3   ,B4
          0 0000C5  3C06                                 LDV,R3   6
          0 0000C6  0008                                 MMM

     1675     3921
     1676     3922    1      IF DATA$ = ADDR(KN$NETPARM.TCTX_ID)

   3922   0 0000C7  8CC7 0004                            LDI      @KN$NETPARM,AUTO
          0 0000C9  8470 0000 0011                       AID      17,IMO
          0 0000CC  84C7 0009                            SID      DATA$,AUTO
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:272  
          0 0000CE  6981 0013                            BNEZ,R6  s:3924,PREL
          0 0000D0  7981 0011                            BNEZ,R7  s:3924,PREL

     1677     3923    1      THEN CALL GHI$TR_TICS (KNT$BUFF_ENTRY.TIME);

   3923   0 0000D2  CCC7 0007                            LDB,B4   TEMP$,AUTO
          0 0000D4  BBC4 0001                            LAB,B3   1,B4
          0 0000D6  BFC7 000C                            STB,B3   DATA$+3,AUTO
          0 0000D8  BBC7 000C                            LAB,B3   DATA$+3,AUTO
          0 0000DA  CBF0 0100                            LAB,B4   256,IMO
          0 0000DC  E380 0000 0000  xent                 LNJ,B6   GHI$TR_TICS
          0 0000DF       0001                            DC       s:3923+14,PREL
          0 0000E0  0F81 000F                            B        s:3926,PREL

     1678     3924    1      ELSE CALL GHI$TICS (KNT$BUFF_ENTRY.TIME);

   3924   0 0000E2  CCC7 0007                            LDB,B4   TEMP$,AUTO
          0 0000E4  BBC4 0001                            LAB,B3   1,B4
          0 0000E6  BFC7 000C                            STB,B3   DATA$+3,AUTO
          0 0000E8  BBC7 000C                            LAB,B3   DATA$+3,AUTO
          0 0000EA  CBF0 0100                            LAB,B4   256,IMO
          0 0000EC  E380 0000 0000  xent                 LNJ,B6   GHI$TICS
          0 0000EF       0001                            DC       s:3926,PREL

     1679     3925
     1680     3926    1      KNT_TRC_X = KNT_TRC_X + 1;

   3926   0 0000F0  8A80 0000 0000  xsym                 INC      KNT_TRC_X

     1681     3927
     1682     3928    1      IF KNT_TRC_X = KNT_TRC_BUF#

   3928   0 0000F3  E800 0000 0000  xsym                 LDR,R6   KNT_TRC_X
          0 0000F6  6801 0009                            BLZ,R6   s:3930,PREL
          0 0000F8  E900 0000 0000  xsym                 CMR,R6   KNT_TRC_BUF#
          0 0000FB  0981 0004                            BNE      s:3930,PREL

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:273  
     1683     3929    1      THEN KNT_TRC_X = 0;

   3929   0 0000FD  8700 0000 0000  xsym                 CL       KNT_TRC_X

     1684     3930    1   END KNT$TRACE;

   3930   0 000100  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:274  
--  Include file information  --

   K_TRANSPORT_M.:E05TOU  is referenced.
   KN_DATA_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is never referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure KNT$TRACE.
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:275  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KN$NETPARM                9-0-0/w PTR         r     1 DATA$
    *0-0-0/w STRC(528)   r     1 KN$NETPARM                 7-0-0/w PTR         r     1 TEMP$
     6-0-0/w UBIN(16)    r     1 WHO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KNT$TRC_BUF$               0-0-0/w UBIN(16)    r     1 KNT_TRC_BUF#
     0-0-0/w SBIN(16)    r     1 KNT_TRC_X

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(10)    r     1 B$TPDU                     0-0-0/w STRC(128)   r     1 KNT$BUFF_ENTRY
     0-0-0/w STRC(128)   r     1 KNT$TRC_BUF(0:0)


   Procedure KNT$TRACE requires 259 words for executable code.
   Procedure KNT$TRACE requires 14 words of local(AUTO) storage.

    No errors detected in file KNT$MISC.:E05TSI    .
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:276  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:277  
          MINI XREF LISTING

B$TPDU
      3842**DCL      3920>>ASSIGN
COMMON
      3916**LABEL    3910--GOTO
DATA$
      3741**DCL      3909<<ASSIGN   3913<<ASSIGN   3919>>IF       3920>>ASSIGN   3922>>IF
GHI$TICS
      3850**DCL-ENT  3924--CALL
GHI$TR_TICS
      3851**DCL-ENT  3923--CALL
KN$NETPARM
      3597**DCL        10--PROC     3854--ENTRY    3858--ENTRY    3862--ENTRY    3866--ENTRY    3870--ENTRY
      3874--ENTRY    3878--ENTRY    3882--ENTRY    3886--ENTRY    3890--ENTRY    3894--ENTRY    3898--ENTRY
      3902--ENTRY
KN$NETPARM.MSG$
      3604**DCL      3609--REDEF
KN$NETPARM.NHDR$
      3656**DCL      3657--REDEF
KN$NETPARM.SHDR$
      3634**DCL      3635--REDEF
KN$NETPARM.TCTX_ID
      3667**DCL      3913--ASSIGN   3922--IF
KN$NETPARM.THDR$
      3645**DCL      3646--REDEF
KN$NETPARM.THDRSZ
      3651**DCL      3879>>ASSIGN
KN$NETPARM.THDR_C$
      3646**DCL      3909>>ASSIGN
KN$NETPARM.UHDR$
      3620**DCL      3621--REDEF
KNT$BUFF_ENTRY.TIME
      3779**DCL      3923<>CALL     3924<>CALL
PL6.E3A0      #011=KNT$TRACE File=KNT$MISC.:E05TSI                               WED 07/30/97 01:12 Page:278  
KNT$BUFF_ENTRY.TPDU
      3784**DCL      3920<<ASSIGN
KNT$BUFF_ENTRY.WHO
      3750**DCL      3917<<ASSIGN
KNT$TRC_BUF
      3798**DCL      3916--ASSIGN
KNT$TRC_BUF$
      3845**DCL      3798--IMP-PTR  3916>>ASSIGN
KNT_TRC_BUF#
      3846**DCL      3928>>IF
KNT_TRC_X
      3847**DCL      3916>>ASSIGN   3926<<ASSIGN   3926>>ASSIGN   3928>>IF       3929<<ASSIGN
SET_DATA1
      3909**LABEL    3856--GOTO     3860--GOTO     3864--GOTO     3868--GOTO     3872--GOTO     3876--GOTO
      3880--GOTO
SET_DATA2
      3913**LABEL    3884--GOTO     3888--GOTO     3892--GOTO     3896--GOTO     3900--GOTO     3904--GOTO
TEMP$
      3740**DCL      3749--IMP-PTR  3916<<ASSIGN   3917>>ASSIGN   3920>>ASSIGN   3923>>CALL     3924>>CALL
WHO
      3739**DCL      3855<<ASSIGN   3859<<ASSIGN   3863<<ASSIGN   3867<<ASSIGN   3871<<ASSIGN   3875<<ASSIGN
      3879<<ASSIGN   3883<<ASSIGN   3887<<ASSIGN   3891<<ASSIGN   3895<<ASSIGN   3899<<ASSIGN   3903<<ASSIGN
      3917>>ASSIGN
