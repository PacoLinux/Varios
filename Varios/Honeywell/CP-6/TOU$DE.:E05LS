VERSION E05

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:1    
        1        1        /*M* TOU$DE     DEckfile Editor Routine Driver program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10        /*P*  NAME:        TOU$DE
       11       11              AUTHOR:      Scott S. Sheppard
       12       12              PURPOSE:     Edits the CP-6 Test and Diagnostic Deckfile
       13       13              DESCRIPTION: DEER  is the  DEckfile Editor Routine  which may be run in
       14       14                           on-line or  batch mode.  DEER accepts a series of commands
       15       15                           from the user and alters the deckfile accordingly.
       16       16                           DEER can be used to:
       17       17                             -- build a new deckfile from an IFAD (tape or disk) file
       18       18                             -- obtain a listing of an old deckfile
       19       19                             -- show an object deck's full attributes
       20       20                             -- show a deckfile's history log
       21       21                             -- add a new catalog to an old deckfile
       22       22                             -- add a new object deck to an old deckfile
       23       23                             -- replace an object deck in an old deckfile
       24       24                             -- remove a reference to an object deck from
       25       25                                a catalog in an old deckfile
       26       26                             -- delete an object deck from an old deckfile
       27       27                             -- delete object patches from an old deckfile
       28       28                             -- delete a catalog from an old deckfile
       29       29                             -- patch an object deck in an old deckfile
       30       30                             -- update a deckfile from an IFAD input source
       31       31                             -- obtain help information on the use of DEER
       32       32              REFERENCE:   CP-6 Release C0P0
       33       33              LAST UPDATE: 12/10/84
       34       34        */
       35       35        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:2    
       36       36        /*D*  NAME:        DEER
       37       37              PURPOSE:     DEckfile Editor Routine run unit
       38       38              DESCRIPTION: The modules linked together to form the DEER run unit are:
       39       39                              TOU$DE   TOU$BREAK      TOU$BUILD    TOU$DELDECK
       40       40                              TOU$DU   TOU$CHECKS     TOU$LIST     TOU$DELPATCH
       41       41                              TOU$DFU  TOU$DEBLOCKER  TOU$SHOWDECK TOU$REMREF
       42       42                                                      TOU$SHOWFILE TOU$DELCAT
       43       43                                       TOU$GET_CARD   TOU$NEWCAT   TOU$PATCH
       44       44                                       TOU$REPLACE    TOU$NEWDECK  TOU$UPDATE
       45       45                                       TOU_NODES_D    TOU$REPDECK  TOU$MERGE
       46       46
       47       47                           Other files considered part of the DEER are:
       48       48                                       TOU_DEER_M
       49       49                                       TOU_RQSTS_E
       50       50                                       TO_DEER_HELP
       51       51                                       DEERHELP (message data base)
       52       52                                       HELP:DEER: (DEER help file)
       53       53        */
       54       54
       55       55        /*F*  NAME:        TOU$DE
       56       56              DESCRIPTION: Procedure Nesting Hierarchy
       57       57
       58       58              TOU$DE: procedure MAIN
       59       59                 DE_SETUP_BREAK_HANDLER: procedure ALTRET
       60       60                 DE_GET_BUFFERS: procedure ALTRET
       61       61                 DE_START_MSG: procedure ALTRET
       62       62                 DE_CHECK_PROCESSING_MODE: procedure
       63       63                 DE_EDIT_DECKFILE: procedure
       64       64                    DE_PROCESS_COMMAND: procedure
       65       65                    DE_PROCESS_ERROR: procedure
       66       66                 DE_END_MSG: procedure
       67       67                 DE_FREE_BUFFERS: procedure
       68       68
       69       69        */
       70       70        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:3    
       71       71        TOU$DE: PROC MAIN ;
       72       72
       73       73        /* Include Files */
       74       74
       75       75           %INCLUDE B$OBJECT_C ;
       76     3505           %INCLUDE CP_6_SUBS ;
       77     4045           %INCLUDE CP_6 ;
       78     9604           %INCLUDE TOU_DEER_M ;
       79    11015           %INCLUDE TOU_RQSTS_E ;
       80    11090           %INCLUDE TO_PERR_C ;
       81    11675           %INCLUDE XU_MACRO_C ;
       82    14781           %INCLUDE XUH_MACRO_C ;
       83    14865           %INCLUDE XUG_ENTRY ;
       84    14896           %INCLUDE B_ERRORS_C ;
       85    16023
       86    16024        /* Macros */
       87    16025
       88    16026           %DUP (STCLASS = "STATIC SYMDEF") ;
       89    16169           %TOU$DEER (STCLASS = "STATIC SYMDEF") ;
       90    16183           %P$PCB (NAME    = DEER_PCB,
       91    16184                   STCLASS = STATIC) ;
       92    16385           %XUG_GETCMD (NAME = DEER_GETCMD,
       93    16386                        ALWAYS_SET_PROMPT = YES,
       94    16387                        XUH = DEER_HELP,
       95    16388                        DCB2_PARAM = M$DO,
       96    16389                        PROMPT = DEER_PROMPT);
       97    16727           %XUH_PARAM  (NAME = DEER_HELP,
       98    16728                        PROCNAME = DEER_NAME) ;
       99    16789           %VLP_NAME   (FPTN = DEER_NAME,
      100    16790                        NAME = 'DEER') ;
      101    16817
      102    16818        /* Data Control Blocks */
      103    16819
      104    16820    1      DCL M$DO        DCB ;
      105    16821    1      DCL M$LM        DCB ;
      106    16822
      107    16823    1      DCL DEER_ROOT_NODE             SBIN SYMREF ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:4    
      108    16824    1      DCL 1 DEER_PROMPT              CONSTANT CALIGNED,
      109    16825    1            2 *                      UBIN BYTE CALIGNED INIT (4),
      110    16826    1            2 *                      UBIN BYTE CALIGNED INIT (30),
      111    16827    1            2 *                      CHAR (3) CALIGNED INIT ('???') ;
      112    16828           %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:5    
      113    16829        /* External Entry Points */
      114    16830
      115    16831    1      DCL TOU$BREAK                      ENTRY ASYNC ;
      116    16832    1      DCL TOU$BREAK_FOR_FAULT            ENTRY ASYNC ;
      117    16833
      118    16834    1      DCL TOU$DU_SET_EDIT_PROMPT         ENTRY ALTRET ;
      119    16835    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
      120    16836    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
      121    16837    1      DCL TOU$DU_SYSTEM_ERRMSG           ENTRY ALTRET ;
      122    16838
      123    16839    1      DCL TOU$DU_GET_DATA_SEGMENT        ENTRY ALTRET ;
      124    16840    1      DCL TOU$DU_FREE_DATA_SEGMENT       ENTRY ALTRET ;
      125    16841
      126    16842    1      DCL TOU$BUILD                      ENTRY ALTRET ;
      127    16843    1      DCL TOU$LIST                       ENTRY ;
      128    16844    1      DCL TOU$SHOWDECK                   ENTRY ;
      129    16845    1      DCL TOU$SHOWFILE                   ENTRY ;
      130    16846    1      DCL TOU$NEWCAT                     ENTRY ;
      131    16847    1      DCL TOU$NEWDECK                    ENTRY ALTRET ;
      132    16848    1      DCL TOU$REPDECK                    ENTRY ;
      133    16849    1      DCL TOU$REMREF                     ENTRY ALTRET ;
      134    16850    1      DCL TOU$DELDECK                    ENTRY ;
      135    16851    1      DCL TOU$DELPATCH                   ENTRY ;
      136    16852    1      DCL TOU$DELCAT                     ENTRY ;
      137    16853    1      DCL TOU$PATCH                      ENTRY ;
      138    16854    1      DCL TOU$UPDATE                     ENTRY ;
      139    16855    1      DCL TOU$MERGE                      ENTRY ;
      140    16856    1      DCL TOU$DU_OPERATOR_WRITE          ENTRY ALTRET ;
      141    16857           %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:6    
      142    16858        /* ********************
      143    16859           ********************
      144    16860           **  Main Program  **
      145    16861           ********************
      146    16862           ******************** */
      147    16863
      148    16864    1      CALL DE_GET_BUFFERS ALTRET (DEER_TERMINATED) ;
      149    16865    1      CALL DE_SETUP_BREAK_HANDLER ALTRET (DEER_TERMINATED) ;
      150    16866    1      CALL DE_START_MSG ALTRET (DEER_TERMINATED) ;
      151    16867    1      CALL DE_CHECK_PROCESSING_MODE ;
      152    16868    1      REMEMBER DEER_PROCESSING IN DUP.BREAK_RETURN ;
      153    16869
      154    16870    1   DEER_PROCESSING:
      155    16871    1      CALL DE_EDIT_DECKFILE ;
      156    16872    1      CALL DE_END_MSG ;
      157    16873
      158    16874    1   DEER_TERMINATED:
      159    16875    1      CALL DE_FREE_BUFFERS ;
      160    16876    1      RETURN ;
      161    16877
      162    16878        /* ********************
      163    16879           ********************
      164    16880           **  End Of  Main  **
      165    16881           ********************
      166    16882           ******************** */
      167    16883        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:7    
      168    16884        /*I*  NAME:        DE_SETUP_BREAK_HANDLER
      169    16885              AUTHOR:      Scott S. Sheppard
      170    16886              PURPOSE:     Sets Up Break Control
      171    16887              INTERFACE:   TOU$DU_USER_WRITE
      172    16888                           TOU$DU_SYSTEM_ERRMSG
      173    16889                           M$INT Monitor Service
      174    16890                           M$TRAP Monitor Service
      175    16891                           XUG$INIT Library Service
      176    16892              INPUT:       No system data accessed.
      177    16893              OUTPUT:      Break Control set to TOU$BREAK
      178    16894                           Fault Control set to TOU$BREAK_FOR_FAULT
      179    16895              DESCRIPTION: This procedure calls the M$INT monitor service so
      180    16896                           that  user  requested  "breaks"  are  handled  in
      181    16897                           TOU$BREAK.    M$TRAP is called so that unexpected
      182    16898                           are routed to TOU$BREAK so  DEER can be  normally
      183    16899                           terminated.     XUR$INIT is called to set up DEER
      184    16900                           command input processing.
      185    16901        */
      186    16902
      187    16903    1   DE_SETUP_BREAK_HANDLER: PROC ALTRET ;
      188    16904
      189    16905           %XUG_INIT (NAME = DEER_INIT,
      190    16906                      GOODCMD = YES,
      191    16907                      SYNTAX = YES,
      192    16908                      PCB  = DEER_PCB) ;
      193    17321           %FPT_INT (FPTN   = DEER_BREAKS,
      194    17322                     UENTRY = TOU$BREAK) ;
      195    17336           %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:8    
      196    17337           %FPT_TRAP (FPTN         = DEER_FAULTS,
      197    17338                      ARITHMETIC   = TOU$BREAK_FOR_FAULT,
      198    17339                      OVERFLOW     = TRAP,
      199    17340                      DIVIDE_CHECK = TRAP,
      200    17341                      PROGRAMMED   = TOU$BREAK_FOR_FAULT,
      201    17342                      MME          = TRAP,
      202    17343                      DERAIL       = TRAP,
      203    17344                      FAULT_TAG    = TRAP,
      204    17345                      ERRORS       = TOU$BREAK_FOR_FAULT,
      205    17346                      MEMORY       = TRAP,
      206    17347                      COMMAND      = TRAP,
      207    17348                      LOCKUP       = TRAP,
      208    17349                      IPR          = TRAP,
      209    17350                      MISSING_SEG  = TRAP,
      210    17351                      MISSING_PAGE = TRAP,
      211    17352                      SECURITY_1   = TRAP,
      212    17353                      SECURITY_2   = TRAP,
      213    17354                      HARDWARE     = TRAP) ;
      214    17377
      215    17378        /* Code */
      216    17379
      217    17380    2      DUP.MSG_CODE = %E$DSBH_BREAK ;
      218    17381    2      DEER_GETCMD.NODES$ = ADDR (DEER_ROOT_NODE);
      219    17382    2      DEER_GETCMD.OUT$ = DUP.CMD$ ;
      220    17383    2      CALL XUG$INIT (DEER_GETCMD, DEER_INIT) ALTRET (XUG_ERROR) ;
      221    17384    2      CALL M$INT (DEER_BREAKS) ALTRET (SETUP_ERROR) ;
      222    17385    2      CALL M$TRAP (DEER_FAULTS) ALTRET (SETUP_ERROR) ;
      223    17386    2      RETURN ;
      224    17387
      225    17388    2   XUG_ERROR:
      226    17389    2      CALL TOU$DU_USER_WRITE ;
      227    17390    2      ALTRETURN ;
      228    17391    2   SETUP_ERROR:
      229    17392    2      CALL TOU$DU_USER_WRITE ;
      230    17393    2      CALL TOU$DU_SYSTEM_ERRMSG ;
      231    17394    2      ALTRETURN ;
      232    17395
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:9    
      233    17396    2   END DE_SETUP_BREAK_HANDLER ;
      234    17397        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:10   
      235    17398        /*I*  NAME:        DE_GET_BUFFERS
      236    17399              AUTHOR:      Scott S. Sheppard
      237    17400              PURPOSE:     Gets DEER Buffers
      238    17401              INTERFACE:   TOU$DU_GET_DATA_SEGMENT
      239    17402              INPUT:       BUF_SIZE     - number of bytes for the msg output buffer
      240    17403                           MAX_BINARY   - maximum number of binary input records
      241    17404                           BIN_RCD_LGTH - length in bytes of a binary input record
      242    17405                           MAX_PATCHES  - maximum number of BCD input records
      243    17406                           BCD_RCD_LGTH - length in bytes of a BCD input record
      244    17407                           MAX_ACCESSES - maximum number of deckfile changes
      245    17408                           4            - number of bytes per word
      246    17409              OUTPUT:      DUP.NUM_WORDS - number of dynamic words required
      247    17410                           DUP.DS_VECTOR - returns the vector from utility pgm
      248    17411                           DUP.MSG_V     - vector to the message output buffer
      249    17412                           DUP.BINARY_V  - vector to the binary card buffer
      250    17413                           DUP.BCD_V     - vector to the patch card buffer
      251    17414                           DUP.LOG_V     - vector to the deckfile history log
      252    17415              DESCRIPTION: This procedure makes calls to obtain dynamic memory
      253    17416                           for DEER.  Buffer sizes are computed,  calls to get
      254    17417                           memory, and vector assignments are done for:
      255    17418                               * the message output buffer
      256    17419                               * the binary card array buffer
      257    17420                               * the patch card array buffer
      258    17421                               * the deckfile history log buffer
      259    17422        */
      260    17423        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:11   
      261    17424    1   DE_GET_BUFFERS: PROC ALTRET ;
      262    17425
      263    17426        /* Variables */
      264    17427
      265    17428    2      DCL MSG_LGTH UBIN WORD ALIGNED;
      266    17429    2      DCL LOG_LGTH UBIN WORD ALIGNED;
      267    17430
      268    17431        /* Code */
      269    17432
      270    17433    2      MSG_LGTH = %(((MAX_BUF * BUF_RCD_LGTH / 4) + 1) / 2) * 2 ;
      271    17434    2      DUP.NUM_WORDS = MSG_LGTH ;
      272    17435    2      DUP.DS_V = '0'B ;
      273    17436    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;
      274    17437    2      DUP.MSG_V = DUP.DS_V ;
      275    17438
      276    17439    2      LOG_LGTH = %(MAX_ACCESSES * LOG_RCD_LGTH / 4 + 1) ;
      277    17440    2      DUP.NUM_WORDS = LOG_LGTH ;
      278    17441    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;
      279    17442    2      DUP.LOG_V = DUP.DS_V ;
      280    17443    2      VBASE (DUP.LOG_V_) = PINCRW (DUP.LOG_V.PTR$, MSG_LGTH) ;
      281    17444    2      VBOUND (DUP.LOG_V_) = (LOG_LGTH * 4) - 1 ;
      282    17445
      283    17446    2      DUP.NUM_WORDS = %BINARY_SPACE ;
      284    17447    2      DUP.DS_V = '0'B ;
      285    17448    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;
      286    17449    2      DUP.BINARY_V = DUP.DS_V ;
      287    17450
      288    17451    2      DUP.NUM_WORDS = %(MAX_PATCHES * BCD_RCD_LGTH / 4) ;
      289    17452    2      DUP.DS_V = '0'B ;
      290    17453    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;
      291    17454    2      DUP.BCD_V = DUP.DS_V ;
      292    17455
      293    17456    2      RETURN ;
      294    17457
      295    17458    2   ERROR:
      296    17459    2      ALTRETURN ;
      297    17460
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:12   
      298    17461    2   END DE_GET_BUFFERS ;
      299    17462        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:13   
      300    17463        /*I*  NAME:        DE_START_MSG
      301    17464              AUTHOR:      Scott S. Sheppard
      302    17465              PURPOSE:     Prints initialization message
      303    17466              INTERFACE:   TOU$DU_USER_WRITE
      304    17467              INPUT:       T$START_DEER  - Deckfile Start Message constant
      305    17468              OUTPUT:      DUP.MSG_CODE  - integer message number
      306    17469              DESCRIPTION: This procedure logs a start up message to the
      307    17470                           user when the DEER processor is invoked.
      308    17471        */
      309    17472
      310    17473    1   DE_START_MSG: PROC ALTRET ;
      311    17474
      312    17475        /* Code */
      313    17476
      314    17477    2      CALL GET_DEER_VERSION ;
      315    17478    2      DUP.MSG_CODE = %T$START_DEER ;
      316    17479    2      CALL TOU$DU_USER_WRITE ALTRET (FAILURE) ;
      317    17480    2      RETURN ;
      318    17481
      319    17482    2   FAILURE:
      320    17483    2      ALTRETURN ;
      321    17484
      322    17485    2   END DE_START_MSG ;
      323    17486        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:14   
      324    17487        /*I*  NAME:        DE_CHECK_PROCESSING_MODE
      325    17488              AUTHOR:      Scott S. Sheppard
      326    17489              PURPOSE:     Determines processing mode and Sets prompt
      327    17490              INTERFACE:   None called.
      328    17491              INPUT:       B$JIT$           - ptr to Job Info. Table (JIT)
      329    17492                           B$JIT.MODE       - System processing mode flag
      330    17493                           M_BATCH#         - System constant for BATCH
      331    17494              OUTPUT:      DUP.BATCH_MODE   - bit (1) processing flag
      332    17495              DESCRIPTION: The procedure checks the processing mode and sets
      333    17496                           the execution flag accordingly.   The system mode
      334    17497                           is a 4 bit binary field which is set:
      335    17498                              1 for BATCH mode      3 for INT
      336    17499                              2 for GHOST mode      4 for TP
      337    17500                           The deckfile utility program mode flag is set to:
      338    17501                              '1'b for BATCH mode
      339    17502                              '0'b for ON-LINE mode.
      340    17503        */
      341    17504
      342    17505    1   DE_CHECK_PROCESSING_MODE: PROC ;
      343    17506
      344    17507    2      DCL B$JIT$                     PTR SYMREF ;
      345    17508           %INCLUDE B$JIT ;
      346    18111
      347    18112        /* Code */
      348    18113
      349    18114    2      IF B$JIT$ -> B$JIT.MODE = %M_BATCH#
      350    18115    2      THEN DUP.BATCH_MODE = %TRUE ;
      351    18116    2      ELSE DUP.BATCH_MODE = %FALSE ;
      352    18117    2      RETURN ;
      353    18118
      354    18119    2   END DE_CHECK_PROCESSING_MODE ;
      355    18120        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:15   
      356    18121        /*I*  NAME:        DE_EDIT_DECKFILE
      357    18122              AUTHOR:      Scott S. Sheppard
      358    18123              PURPOSE:     Editor Driver
      359    18124              INTERFACE:   DE_PROCESS_COMMAND
      360    18125                           DE_PROCESS_ERROR
      361    18126                           TOU$DU_SET_EDIT_PROMPT
      362    18127                           XUG$GETCMD
      363    18128              INPUT:       DUP.PROCESS_COMPLETE - DEER termination flag
      364    18129              OUTPUT:      DUP.CMD$ - pointer to the parse control block
      365    18130              DESCRIPTION: This procedure alters the deckfile  by accepting and
      366    18131                           processing commands until the END command is issued.
      367    18132        */
      368    18133
      369    18134    1   DE_EDIT_DECKFILE: PROC ;
      370    18135
      371    18136        /* Code */
      372    18137
      373    18138    3      DO WHILE (~DUP.PROCESS_COMPLETE) ;
      374    18139    3         DUP.BREAK_DISABLED = %TRUE ;
      375    18140    3         DEER_GETCMD.NODES$ = ADDR (DEER_ROOT_NODE);
      376    18141    3         CALL XUG$GETCMD (DEER_GETCMD) WHENRETURN
      377    18142    4              DO ;
      378    18143    4                 DUP.BREAK_DISABLED = %FALSE ;
      379    18144    4                 DUP.CMD$ = DEER_GETCMD.OUT$ ;
      380    18145    4                 CALL DE_PROCESS_COMMAND ;
      381    18146    4              END /* WHEN RETURN */ ;
      382    18147    3         WHENALTRETURN
      383    18148    4              DO ;
      384    18149    4                 CALL DE_PROCESS_ERROR ;
      385    18150    4                 DUP.BREAK_DISABLED = %FALSE ;
      386    18151    4              END /* WHEN ALTRETURN */ ;
      387    18152    3      END /* WHILE */ ;
      388    18153    2      RETURN ;
      389    18154
      390    18155        /* END DE_EDIT_DECKFILE */
      391    18156        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:16   
      392    18157        /*I*  NAME:        DE_PROCESS_COMMAND
      393    18158              AUTHOR:      Scott S. Sheppard
      394    18159              PURPOSE:     Processes DEER Command
      395    18160              INTERFACE:   TOU$BUILD
      396    18161                           TOU$LIST
      397    18162                           TOU$SHOWDECK
      398    18163                           TOU$SHOWFILE
      399    18164                           TOU$NEWCAT
      400    18165                           TOU$NEWDECK
      401    18166                           TOU$REPDECK
      402    18167                           TOU$REMREF
      403    18168                           TOU$DELDECK
      404    18169                           TOU$DELPATCH
      405    18170                           TOU$DELCAT
      406    18171                           TOU$PATCH
      407    18172                           TOU$UPDATE
      408    18173                           TOU$MERGE
      409    18174                           TOU$DU_OPERATOR_WRITE
      410    18175              INPUT:       OUT$BLK.CODE - integer code for command type
      411    18176              OUTPUT:      DUP.PROCESS_COMPLETE - set if END issued
      412    18177              DESCRIPTION: This procedure processes DEER commands by calling
      413    18178                           the appropriate  DEER  function or in the case of
      414    18179                           the  END  command,  setting the  termination bit.
      415    18180                           This procedure is called only if a  valid command
      416    18181                           was accepted by XUG$GETCMD
      417    18182        */
      418    18183
      419    18184    2   DE_PROCESS_COMMAND: PROC ;
      420    18185
      421    18186           %PARSE$OUT (STCLASS = "BASED (DUP.CMD$)") ;
      422    18231
      423    18232        /* Code */
      424    18233
      425    18234    4      DO CASE (OUT$BLK.CODE) ;
      426    18235    4         CASE (%NULL) ;
      427    18236                 /* Do Nothing */
      428    18237    4         CASE (%BUILD) ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:17   
      429    18238    4            CALL TOU$BUILD ;
      430    18239    4         CASE (%LIST) ;
      431    18240    4            CALL TOU$LIST ;
      432    18241    4         CASE (%SHOWDECK) ;
      433    18242    4            CALL TOU$SHOWDECK ;
      434    18243    4         CASE (%SHOWFILE) ;
      435    18244    4            CALL TOU$SHOWFILE ;
      436    18245    4         CASE (%NEWCAT) ;
      437    18246    4            CALL TOU$NEWCAT ;
      438    18247    4         CASE (%NEWDECK) ;
      439    18248    4            CALL TOU$NEWDECK ;
      440    18249    4         CASE (%REPDECK) ;
      441    18250    4            CALL TOU$REPDECK ;
      442    18251    4         CASE (%REMREF) ;
      443    18252    4            CALL TOU$REMREF ;
      444    18253    4         CASE (%DELDECK) ;
      445    18254    4            CALL TOU$DELDECK ;
      446    18255    4         CASE (%DELPATCH) ;
      447    18256    4            CALL TOU$DELPATCH ;
      448    18257    4         CASE (%DELCAT) ;
      449    18258    4            CALL TOU$DELCAT ;
      450    18259    4         CASE (%PATCH) ;
      451    18260    4            CALL TOU$PATCH ;
      452    18261    4         CASE (%UPDATE) ;
      453    18262    4            CALL TOU$UPDATE ;
      454    18263    4         CASE (%MERGE) ;
      455    18264    4            CALL TOU$MERGE ;
      456    18265    4         CASE (%MSG) ;
      457    18266    4            CALL TOU$DU_OPERATOR_WRITE ;
      458    18267    4         CASE (%END) ;
      459    18268    4            DUP.PROCESS_COMPLETE = %TRUE ;
      460    18269    4      END /* CASE */ ;
      461    18270    3      RETURN ;
      462    18271
      463    18272    3   END DE_PROCESS_COMMAND ;
      464    18273        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:18   
      465    18274        /*I*  NAME:        DE_PROCESS_ERROR
      466    18275              AUTHOR:      Scott S. Sheppard
      467    18276                           Kathy Larkin
      468    18277              PURPOSE:     Editor Error Reporter
      469    18278              INTERFACE:   TOU$DU_SYSTEM_ERRMSG
      470    18279                           XUG$ERRMSG
      471    18280              INPUT:       DEER_GETCMD.ERR# - errcode received by XUG
      472    18281              OUTPUT:      Error message written to M$DO.
      473    18282              DESCRIPTION: This procedure processes an altreturn from the
      474    18283                           XUG$GETCMD service.  Since we specify  GOODCMD
      475    18284                           = YES, SYNTAX = YES, we  will not altreturn on
      476    18285                           command syntax errors, only if XUG altreturned
      477    18286                           from one of it's calls (e.g. X$PARSE, M$ERRMSG)
      478    18287        */
      479    18288
      480    18289    2   DE_PROCESS_ERROR: PROC ;
      481    18290
      482    18291        /* Code */
      483    18292
      484    18293    3      DEER_GETCMD.ERR_CODE = DEER_GETCMD.ERR# ;
      485    18294    3      CALL XUG$ERRMSG (DEER_GETCMD) ALTRET (MSG_ERR) ;
      486    18295    3      IF DEER_GETCMD.ERR#.CODE# = %E$EOF THEN
      487    18296    3         DUP.PROCESS_COMPLETE = %TRUE ;  /* 30212 */
      488    18297    3      RETURN ;
      489    18298
      490    18299    3   MSG_ERR:
      491    18300    3      DUP.FAULT_ERROR = %FALSE ;
      492    18301    3      CALL TOU$DU_SYSTEM_ERRMSG ;
      493    18302    3      DUP.PROCESS_COMPLETE = %TRUE ;
      494    18303    3      RETURN ;
      495    18304
      496    18305    3   END DE_PROCESS_ERROR ;
      497    18306    2   END DE_EDIT_DECKFILE ;
      498    18307        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:19   
      499    18308        /*I*  NAME:        DE_END_MSG
      500    18309              AUTHOR:      Scott S. Sheppard
      501    18310              PURPOSE:     Prints termination message
      502    18311              INTERFACE:   TOU$DU_USER_WRITE
      503    18312              INPUT:       T$END_DEER
      504    18313              OUTPUT:      DUP.MSG_CODE - integer message number
      505    18314              DESCRIPTION: This procedure logs a termination message to the
      506    18315                           user when DEER is normally terminated.
      507    18316        */
      508    18317
      509    18318    1   DE_END_MSG: PROC ;
      510    18319
      511    18320        /* Code */
      512    18321
      513    18322    2      DUP.MSG_CODE = %T$END_DEER ;
      514    18323    2      CALL TOU$DU_USER_WRITE ;
      515    18324    2      RETURN ;
      516    18325
      517    18326    2   END DE_END_MSG ;
      518    18327        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:20   
      519    18328        /*I*  NAME:        DE_FREE_BUFFERS
      520    18329              AUTHOR:      Scott S. Sheppard
      521    18330              PURPOSE:     Frees DEER Dynamic Buffers
      522    18331              INTERFACE:   TOU$DU_FREE_DATA_SEGMENT
      523    18332              INPUT:       BUF_SIZE      - number of bytes for the output buffer
      524    18333                           MAX_BINARY    - maximum number of binary input records
      525    18334                           BIN_RCD_LGTH  - length in bytes of a binary input record
      526    18335                           MAX_PATCHES   - maximum number of BCD input records
      527    18336                           BCD_RCD_LGTH  - length in bytes of a BCD input record
      528    18337                           MAX_ACCESSES  - maximum accesses allowed
      529    18338                           DUP.MSG_V     - vector to the message output buffer
      530    18339                           DUP.BINARY_V  - vector to the binary card buffer
      531    18340                           DUP.BCD_V     - vector to the patch card buffer
      532    18341                           DUP.LOG_V     - vector to the deckfile log buffer
      533    18342              OUTPUT:      DUP.NUM_WORDS - number of dynamic words being used
      534    18343                           DUP.DS_VECTOR - vector of data segment to free
      535    18344              DESCRIPTION: This procedure makes calls to free dynamic memory
      536    18345                           for DEER.  Buffer sizes are computed and calls to
      537    18346                           free the data segments are done for:
      538    18347                            * the message output buffer
      539    18348                            * the binary card array buffer
      540    18349                            * the patch card array buffer
      541    18350                            * the deckfile history log buffer
      542    18351        */
      543    18352        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:21   
      544    18353    1   DE_FREE_BUFFERS: PROC ;
      545    18354
      546    18355        /* Code */
      547    18356
      548    18357    2      DUP.NUM_WORDS = %(MAX_BUF * BUF_RCD_LGTH / 4) ;
      549    18358    2      DUP.DS_V = DUP.MSG_V ;
      550    18359    2      CALL TOU$DU_FREE_DATA_SEGMENT ;
      551    18360
      552    18361    2      DUP.NUM_WORDS = %BINARY_SPACE ;
      553    18362    2      DUP.DS_V = DUP.BINARY_V ;
      554    18363    2      CALL TOU$DU_FREE_DATA_SEGMENT ;
      555    18364
      556    18365    2      DUP.NUM_WORDS = %(MAX_PATCHES * BCD_RCD_LGTH / 4) ;
      557    18366    2      DUP.DS_V = DUP.BCD_V ;
      558    18367    2      CALL TOU$DU_FREE_DATA_SEGMENT ;
      559    18368
      560    18369    2      DUP.NUM_WORDS = %(MAX_ACCESSES * LOG_RCD_LGTH / 4 + 1) ;
      561    18370    2      DUP.DS_V = DUP.LOG_V ;
      562    18371    2      CALL TOU$DU_FREE_DATA_SEGMENT ;
      563    18372    2      RETURN ;
      564    18373
      565    18374    2   END DE_FREE_BUFFERS ;
      566    18375        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:22   
      567    18376        /*I* NAME:         GET_DEER_VERSION
      568    18377             AUTHOR:       Scott S. Sheppard
      569    18378             PURPOSE:      Obtains Link Time, Date, and Release
      570    18379             INTERFACE:    M$READ
      571    18380                           M$TIME
      572    18381             PARAMETERS:   None passed.
      573    18382             DATA:         B_VERSION - input
      574    18383                           TOU$DEER.LINK_DATE.ASCII - output
      575    18384             DESCRIPTION:  This  procedure  sets  up  the  DEER  version
      576    18385                           information.  The   CP-6  release  version  is
      577    18386                           obtained from a  SYMREF called B_VERSION which
      578    18387                           obtains  its  value  as  part  of  the JCL for
      579    18388                           linking   DEER.    However,   the   B_VERSION
      580    18389                           structure does NOT contain the date when DEER
      581    18390                           was  linked. This  is obtained  by reading the
      582    18391                           head  record of  the DEER  module and culling
      583    18392                           out the link date and time.
      584    18393        */
      585    18394        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:23   
      586    18395    1   GET_DEER_VERSION: PROC ;
      587    18396
      588    18397    2      DCL 1 BIRTH_KEY CONSTANT,
      589    18398    2            2 * UBIN BYTE CALIGNED INIT (5),
      590    18399    2            2 * CHAR (5)  CALIGNED INIT ('BIRTH') ;
      591    18400    2      DCL CC              UBIN WORD STATIC ALIGNED INIT (6) ;
      592    18401           %B$RUBIRTH (NAME = B_RUBIRTH,
      593    18402                       STCLASS = STATIC) ;
      594    18411           %FPT_READ (FPTN = GET_LINK_DATE,
      595    18412                      BUF  = B_RUBIRTH,
      596    18413                      BIN  = YES,
      597    18414                      DCB  = M$LM,
      598    18415                      KEY  = BIRTH_KEY,
      599    18416                      KEYS = YES,
      600    18417                      WAIT = YES) ;
      601    18456           %FPT_TIME (FPTN   = COMP_LINK_DATE,
      602    18457                      SOURCE = UTS,
      603    18458                      DEST   = ANS,
      604    18459                      DATE   = TOU$DEER.LINK_DATE.ASCII,
      605    18460                      TIME   = TOU$DEER.LINK_TIME,
      606    18461                      TSTAMP = B_RUBIRTH.CREATE_UTS) ;
      607    18480
      608    18481        /* Code */
      609    18482
      610    18483    2      CALL M$READ (GET_LINK_DATE) ;
      611    18484    2      CALL M$TIME (COMP_LINK_DATE) ;
      612    18485    2      RETURN ;
      613    18486
      614    18487    2   END GET_DEER_VERSION ;
      615    18488    1   END TOU$DE ;

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:24   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$DE.

   Procedure TOU$DE requires 325 words for executable code.
   Procedure TOU$DE requires 8 words of local(AUTO) storage.

    No errors detected in file TOU$DE.:E05TSI    .

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:25   

 Object Unit name= TOU$DE                                     File name= TOU$DE.:E05TOU
 UTS= JUL 30 '97 06:39:49.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   346    532  TOU$DE
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$LM
    4  RoData even  UTS      4      4  TOU$DE
    5   Proc  even  none   325    505  TOU$DE
    6  RoData even  none     5      5  TOU$DE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Main       0  TOU$DE

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    1      0  DUP                                1    222  TOU$DEER
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:26   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XTX$ADAPT
         yes          Async      0 TOU$BREAK_FOR_FAULT
         yes          Async      0 TOU$BREAK
 yes     yes           Std       2 XUG$INIT
 yes     yes           Std       0 TOU$DU_USER_WRITE
 yes     yes           Std       0 TOU$DU_SYSTEM_ERRMSG
 yes     yes           Std       0 TOU$DU_GET_DATA_SEGMENT
 yes     yes           Std       1 XUG$GETCMD
 yes     yes           Std       0 TOU$BUILD
         yes           Std       0 TOU$DELDECK
         yes           Std       0 TOU$UPDATE
 yes     yes           Std       0 TOU$DU_OPERATOR_WRITE
         yes           Std       0 TOU$LIST
         yes           Std       0 TOU$SHOWDECK
         yes           Std       0 TOU$SHOWFILE
         yes           Std       0 TOU$MERGE
 yes     yes           Std       0 TOU$NEWDECK
         yes           Std       0 TOU$REPDECK
 yes     yes           Std       0 TOU$REMREF
         yes           Std       0 TOU$DELCAT
         yes           Std       0 TOU$PATCH
         yes           Std       0 TOU$NEWCAT
         yes           Std       0 TOU$DELPATCH
 yes     yes           Std       1 XUG$ERRMSG
 yes     yes           Std       0 TOU$DU_FREE_DATA_SEGMENT
                       nStd      0 X66_MAUTO
                       nStd      0 X66_MARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:27   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$DO                                  M$LM
     DEER_ROOT_NODE                        B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:28   


        1        1        /*M* TOU$DE     DEckfile Editor Routine Driver program */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=3,DCI=6,SQB=N,PRB=N,DTI=5,ENI=0,AND=Y,ECI=0,CSU=3,DIN=3,
        9        9             CTI=8,CRM=109,CRT=1,NLB=N,NTB=Y,MCL=110 */
       10       10        /*P*  NAME:        TOU$DE
       11       11              AUTHOR:      Scott S. Sheppard
       12       12              PURPOSE:     Edits the CP-6 Test and Diagnostic Deckfile
       13       13              DESCRIPTION: DEER  is the  DEckfile Editor Routine  which may be run in
       14       14                           on-line or  batch mode.  DEER accepts a series of commands
       15       15                           from the user and alters the deckfile accordingly.
       16       16                           DEER can be used to:
       17       17                             -- build a new deckfile from an IFAD (tape or disk) file
       18       18                             -- obtain a listing of an old deckfile
       19       19                             -- show an object deck's full attributes
       20       20                             -- show a deckfile's history log
       21       21                             -- add a new catalog to an old deckfile
       22       22                             -- add a new object deck to an old deckfile
       23       23                             -- replace an object deck in an old deckfile
       24       24                             -- remove a reference to an object deck from
       25       25                                a catalog in an old deckfile
       26       26                             -- delete an object deck from an old deckfile
       27       27                             -- delete object patches from an old deckfile
       28       28                             -- delete a catalog from an old deckfile
       29       29                             -- patch an object deck in an old deckfile
       30       30                             -- update a deckfile from an IFAD input source
       31       31                             -- obtain help information on the use of DEER
       32       32              REFERENCE:   CP-6 Release C0P0
       33       33              LAST UPDATE: 12/10/84
       34       34        */
       35       35        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:29   
       36       36        /*D*  NAME:        DEER
       37       37              PURPOSE:     DEckfile Editor Routine run unit
       38       38              DESCRIPTION: The modules linked together to form the DEER run unit are:
       39       39                              TOU$DE   TOU$BREAK      TOU$BUILD    TOU$DELDECK
       40       40                              TOU$DU   TOU$CHECKS     TOU$LIST     TOU$DELPATCH
       41       41                              TOU$DFU  TOU$DEBLOCKER  TOU$SHOWDECK TOU$REMREF
       42       42                                                      TOU$SHOWFILE TOU$DELCAT
       43       43                                       TOU$GET_CARD   TOU$NEWCAT   TOU$PATCH
       44       44                                       TOU$REPLACE    TOU$NEWDECK  TOU$UPDATE
       45       45                                       TOU_NODES_D    TOU$REPDECK  TOU$MERGE
       46       46
       47       47                           Other files considered part of the DEER are:
       48       48                                       TOU_DEER_M
       49       49                                       TOU_RQSTS_E
       50       50                                       TO_DEER_HELP
       51       51                                       DEERHELP (message data base)
       52       52                                       HELP:DEER: (DEER help file)
       53       53        */
       54       54
       55       55        /*F*  NAME:        TOU$DE
       56       56              DESCRIPTION: Procedure Nesting Hierarchy
       57       57
       58       58              TOU$DE: procedure MAIN
       59       59                 DE_SETUP_BREAK_HANDLER: procedure ALTRET
       60       60                 DE_GET_BUFFERS: procedure ALTRET
       61       61                 DE_START_MSG: procedure ALTRET
       62       62                 DE_CHECK_PROCESSING_MODE: procedure
       63       63                 DE_EDIT_DECKFILE: procedure
       64       64                    DE_PROCESS_COMMAND: procedure
       65       65                    DE_PROCESS_ERROR: procedure
       66       66                 DE_END_MSG: procedure
       67       67                 DE_FREE_BUFFERS: procedure
       68       68
       69       69        */
       70       70        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:30   
       71       71        TOU$DE: PROC MAIN ;

     71  5 000000   000000 700200 xent  TOU$DE       TSX0  ! X66_MAUTO
         5 000001   000010 000000                    ZERO    8,0

       72       72
       73       73        /* Include Files */
       74       74
       75       75           %INCLUDE B$OBJECT_C ;
       76     3505           %INCLUDE CP_6_SUBS ;
       77     4045           %INCLUDE CP_6 ;
       78     9604           %INCLUDE TOU_DEER_M ;
       79    11015           %INCLUDE TOU_RQSTS_E ;
       80    11090           %INCLUDE TO_PERR_C ;
       81    11675           %INCLUDE XU_MACRO_C ;
       82    14781           %INCLUDE XUH_MACRO_C ;
       83    14865           %INCLUDE XUG_ENTRY ;
       84    14896           %INCLUDE B_ERRORS_C ;
       85    16023
       86    16024        /* Macros */
       87    16025
       88    16026           %DUP (STCLASS = "STATIC SYMDEF") ;
       89    16169           %TOU$DEER (STCLASS = "STATIC SYMDEF") ;
       90    16183           %P$PCB (NAME    = DEER_PCB,
       91    16184                   STCLASS = STATIC) ;
       92    16385           %XUG_GETCMD (NAME = DEER_GETCMD,
       93    16386                        ALWAYS_SET_PROMPT = YES,
       94    16387                        XUH = DEER_HELP,
       95    16388                        DCB2_PARAM = M$DO,
       96    16389                        PROMPT = DEER_PROMPT);
       97    16727           %XUH_PARAM  (NAME = DEER_HELP,
       98    16728                        PROCNAME = DEER_NAME) ;
       99    16789           %VLP_NAME   (FPTN = DEER_NAME,
      100    16790                        NAME = 'DEER') ;
      101    16817
      102    16818        /* Data Control Blocks */
      103    16819
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:31   
      104    16820    1      DCL M$DO        DCB ;
      105    16821    1      DCL M$LM        DCB ;
      106    16822
      107    16823    1      DCL DEER_ROOT_NODE             SBIN SYMREF ;
      108    16824    1      DCL 1 DEER_PROMPT              CONSTANT CALIGNED,
      109    16825    1            2 *                      UBIN BYTE CALIGNED INIT (4),
      110    16826    1            2 *                      UBIN BYTE CALIGNED INIT (30),
      111    16827    1            2 *                      CHAR (3) CALIGNED INIT ('???') ;
      112    16828           %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:32   
      113    16829        /* External Entry Points */
      114    16830
      115    16831    1      DCL TOU$BREAK                      ENTRY ASYNC ;
      116    16832    1      DCL TOU$BREAK_FOR_FAULT            ENTRY ASYNC ;
      117    16833
      118    16834    1      DCL TOU$DU_SET_EDIT_PROMPT         ENTRY ALTRET ;
      119    16835    1      DCL TOU$DU_USER_WRITE              ENTRY ALTRET ;
      120    16836    1      DCL TOU$DU_PRINTER_WRITE           ENTRY ALTRET ;
      121    16837    1      DCL TOU$DU_SYSTEM_ERRMSG           ENTRY ALTRET ;
      122    16838
      123    16839    1      DCL TOU$DU_GET_DATA_SEGMENT        ENTRY ALTRET ;
      124    16840    1      DCL TOU$DU_FREE_DATA_SEGMENT       ENTRY ALTRET ;
      125    16841
      126    16842    1      DCL TOU$BUILD                      ENTRY ALTRET ;
      127    16843    1      DCL TOU$LIST                       ENTRY ;
      128    16844    1      DCL TOU$SHOWDECK                   ENTRY ;
      129    16845    1      DCL TOU$SHOWFILE                   ENTRY ;
      130    16846    1      DCL TOU$NEWCAT                     ENTRY ;
      131    16847    1      DCL TOU$NEWDECK                    ENTRY ALTRET ;
      132    16848    1      DCL TOU$REPDECK                    ENTRY ;
      133    16849    1      DCL TOU$REMREF                     ENTRY ALTRET ;
      134    16850    1      DCL TOU$DELDECK                    ENTRY ;
      135    16851    1      DCL TOU$DELPATCH                   ENTRY ;
      136    16852    1      DCL TOU$DELCAT                     ENTRY ;
      137    16853    1      DCL TOU$PATCH                      ENTRY ;
      138    16854    1      DCL TOU$UPDATE                     ENTRY ;
      139    16855    1      DCL TOU$MERGE                      ENTRY ;
      140    16856    1      DCL TOU$DU_OPERATOR_WRITE          ENTRY ALTRET ;
      141    16857           %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:33   
      142    16858        /* ********************
      143    16859           ********************
      144    16860           **  Main Program  **
      145    16861           ********************
      146    16862           ******************** */
      147    16863
      148    16864    1      CALL DE_GET_BUFFERS ALTRET (DEER_TERMINATED) ;

  16864  5 000002   000066 701000 5                  TSX1    DE_GET_BUFFERS
         5 000003   000021 702000 5                  TSX2    DEER_TERMINATED

      149    16865    1      CALL DE_SETUP_BREAK_HANDLER ALTRET (DEER_TERMINATED) ;

  16865  5 000004   000024 701000 5                  TSX1    DE_SETUP_BREAK_HANDLER
         5 000005   000021 702000 5                  TSX2    DEER_TERMINATED

      150    16866    1      CALL DE_START_MSG ALTRET (DEER_TERMINATED) ;

  16866  5 000006   000157 701000 5                  TSX1    DE_START_MSG
         5 000007   000021 702000 5                  TSX2    DEER_TERMINATED

      151    16867    1      CALL DE_CHECK_PROCESSING_MODE ;

  16867  5 000010   000173 701000 5                  TSX1    DE_CHECK_PROCESSING_MODE
         5 000011   000000 011000                    NOP     0

      152    16868    1      REMEMBER DEER_PROCESSING IN DUP.BREAK_RETURN ;

  16868  5 000012   000015 635000 5                  EAA     DEER_PROCESSING
         5 000013   000156 452400 1                  STP2    DUP+110
         5 000014   000157 755000 1                  STA     DUP+111

      153    16869
      154    16870    1   DEER_PROCESSING:
      155    16871    1      CALL DE_EDIT_DECKFILE ;

  16871  5 000015   000207 701000 5     DEER_PROCES* TSX1    DE_EDIT_DECKFILE
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:34   
         5 000016   000000 011000                    NOP     0

      156    16872    1      CALL DE_END_MSG ;

  16872  5 000017   000425 701000 5                  TSX1    DE_END_MSG
         5 000020   000000 011000                    NOP     0

      157    16873
      158    16874    1   DEER_TERMINATED:
      159    16875    1      CALL DE_FREE_BUFFERS ;

  16875  5 000021   000435 701000 5     DEER_TERMIN* TSX1    DE_FREE_BUFFERS
         5 000022   000000 011000                    NOP     0

      160    16876    1      RETURN ;

  16876  5 000023   000000 702200 xent               TSX2  ! X66_MARET

      161    16877
      162    16878        /* ********************
      163    16879           ********************
      164    16880           **  End Of  Main  **
      165    16881           ********************
      166    16882           ******************** */
      167    16883        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:35   
      168    16884        /*I*  NAME:        DE_SETUP_BREAK_HANDLER
      169    16885              AUTHOR:      Scott S. Sheppard
      170    16886              PURPOSE:     Sets Up Break Control
      171    16887              INTERFACE:   TOU$DU_USER_WRITE
      172    16888                           TOU$DU_SYSTEM_ERRMSG
      173    16889                           M$INT Monitor Service
      174    16890                           M$TRAP Monitor Service
      175    16891                           XUG$INIT Library Service
      176    16892              INPUT:       No system data accessed.
      177    16893              OUTPUT:      Break Control set to TOU$BREAK
      178    16894                           Fault Control set to TOU$BREAK_FOR_FAULT
      179    16895              DESCRIPTION: This procedure calls the M$INT monitor service so
      180    16896                           that  user  requested  "breaks"  are  handled  in
      181    16897                           TOU$BREAK.    M$TRAP is called so that unexpected
      182    16898                           are routed to TOU$BREAK so  DEER can be  normally
      183    16899                           terminated.     XUR$INIT is called to set up DEER
      184    16900                           command input processing.
      185    16901        */
      186    16902
      187    16903    1   DE_SETUP_BREAK_HANDLER: PROC ALTRET ;

  16903  5 000024   200004 741300       DE_SETUP_BR* STX1  ! 4,,AUTO

      188    16904
      189    16905           %XUG_INIT (NAME = DEER_INIT,
      190    16906                      GOODCMD = YES,
      191    16907                      SYNTAX = YES,
      192    16908                      PCB  = DEER_PCB) ;
      193    17321           %FPT_INT (FPTN   = DEER_BREAKS,
      194    17322                     UENTRY = TOU$BREAK) ;
      195    17336           %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:36   
      196    17337           %FPT_TRAP (FPTN         = DEER_FAULTS,
      197    17338                      ARITHMETIC   = TOU$BREAK_FOR_FAULT,
      198    17339                      OVERFLOW     = TRAP,
      199    17340                      DIVIDE_CHECK = TRAP,
      200    17341                      PROGRAMMED   = TOU$BREAK_FOR_FAULT,
      201    17342                      MME          = TRAP,
      202    17343                      DERAIL       = TRAP,
      203    17344                      FAULT_TAG    = TRAP,
      204    17345                      ERRORS       = TOU$BREAK_FOR_FAULT,
      205    17346                      MEMORY       = TRAP,
      206    17347                      COMMAND      = TRAP,
      207    17348                      LOCKUP       = TRAP,
      208    17349                      IPR          = TRAP,
      209    17350                      MISSING_SEG  = TRAP,
      210    17351                      MISSING_PAGE = TRAP,
      211    17352                      SECURITY_1   = TRAP,
      212    17353                      SECURITY_2   = TRAP,
      213    17354                      HARDWARE     = TRAP) ;
      214    17377
      215    17378        /* Code */
      216    17379
      217    17380    2      DUP.MSG_CODE = %E$DSBH_BREAK ;

  17380  5 000025   000310 235007                    LDA     200,DL
         5 000026   000020 755000 1                  STA     DUP+16

      218    17381    2      DEER_GETCMD.NODES$ = ADDR (DEER_ROOT_NODE);

  17381  5 000027   000000 236000 6                  LDQ     0
         5 000030   000244 756000 1                  STQ     DEER_GETCMD

      219    17382    2      DEER_GETCMD.OUT$ = DUP.CMD$ ;

  17382  5 000031   000017 236000 1                  LDQ     DUP+15
         5 000032   000245 756000 1                  STQ     DEER_GETCMD+1

      220    17383    2      CALL XUG$INIT (DEER_GETCMD, DEER_INIT) ALTRET (XUG_ERROR) ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:37   

  17383  5 000033   000001 630400 6                  EPPR0   1
         5 000034   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000035   000000 701000 xent               TSX1    XUG$INIT
         5 000036   000051 702000 5                  TSX2    XUG_ERROR

      221    17384    2      CALL M$INT (DEER_BREAKS) ALTRET (SETUP_ERROR) ;

  17384  5 000037   000456 630400 1                  EPPR0   DEER_BREAKS
         5 000040   410002 713400                    CLIMB   alt,+4098
         5 000041   400000 401760                    pmme    nvectors=1
         5 000042   000056 702000 5                  TSX2    SETUP_ERROR

      222    17385    2      CALL M$TRAP (DEER_FAULTS) ALTRET (SETUP_ERROR) ;

  17385  5 000043   000462 630400 1                  EPPR0   DEER_FAULTS
         5 000044   410004 713400                    CLIMB   alt,+4100
         5 000045   400400 401760                    pmme    nvectors=2
         5 000046   000056 702000 5                  TSX2    SETUP_ERROR

      223    17386    2      RETURN ;

  17386  5 000047   200004 221300                    LDX1  ! 4,,AUTO
         5 000050   000001 702211                    TSX2  ! 1,X1

      224    17387
      225    17388    2   XUG_ERROR:
      226    17389    2      CALL TOU$DU_USER_WRITE ;

  17389  5 000051   000002 631400 xsym  XUG_ERROR    EPPR1   B_VECTNIL+2
         5 000052   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         5 000053   000000 011000                    NOP     0

      227    17390    2      ALTRETURN ;

  17390  5 000054   200004 221300                    LDX1  ! 4,,AUTO
         5 000055   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:38   

      228    17391    2   SETUP_ERROR:
      229    17392    2      CALL TOU$DU_USER_WRITE ;

  17392  5 000056   000002 631400 xsym  SETUP_ERROR  EPPR1   B_VECTNIL+2
         5 000057   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         5 000060   000000 011000                    NOP     0

      230    17393    2      CALL TOU$DU_SYSTEM_ERRMSG ;

  17393  5 000061   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000062   000000 701000 xent               TSX1    TOU$DU_SYSTEM_ERRMSG
         5 000063   000000 011000                    NOP     0

      231    17394    2      ALTRETURN ;

  17394  5 000064   200004 221300                    LDX1  ! 4,,AUTO
         5 000065   000000 702211                    TSX2  ! 0,X1

      232    17395
      233    17396    2   END DE_SETUP_BREAK_HANDLER ;
      234    17397        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:39   
      235    17398        /*I*  NAME:        DE_GET_BUFFERS
      236    17399              AUTHOR:      Scott S. Sheppard
      237    17400              PURPOSE:     Gets DEER Buffers
      238    17401              INTERFACE:   TOU$DU_GET_DATA_SEGMENT
      239    17402              INPUT:       BUF_SIZE     - number of bytes for the msg output buffer
      240    17403                           MAX_BINARY   - maximum number of binary input records
      241    17404                           BIN_RCD_LGTH - length in bytes of a binary input record
      242    17405                           MAX_PATCHES  - maximum number of BCD input records
      243    17406                           BCD_RCD_LGTH - length in bytes of a BCD input record
      244    17407                           MAX_ACCESSES - maximum number of deckfile changes
      245    17408                           4            - number of bytes per word
      246    17409              OUTPUT:      DUP.NUM_WORDS - number of dynamic words required
      247    17410                           DUP.DS_VECTOR - returns the vector from utility pgm
      248    17411                           DUP.MSG_V     - vector to the message output buffer
      249    17412                           DUP.BINARY_V  - vector to the binary card buffer
      250    17413                           DUP.BCD_V     - vector to the patch card buffer
      251    17414                           DUP.LOG_V     - vector to the deckfile history log
      252    17415              DESCRIPTION: This procedure makes calls to obtain dynamic memory
      253    17416                           for DEER.  Buffer sizes are computed,  calls to get
      254    17417                           memory, and vector assignments are done for:
      255    17418                               * the message output buffer
      256    17419                               * the binary card array buffer
      257    17420                               * the patch card array buffer
      258    17421                               * the deckfile history log buffer
      259    17422        */
      260    17423        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:40   
      261    17424    1   DE_GET_BUFFERS: PROC ALTRET ;

  17424  5 000066   200004 741300       DE_GET_BUFF* STX1  ! 4,,AUTO

      262    17425
      263    17426        /* Variables */
      264    17427
      265    17428    2      DCL MSG_LGTH UBIN WORD ALIGNED;
      266    17429    2      DCL LOG_LGTH UBIN WORD ALIGNED;
      267    17430
      268    17431        /* Code */
      269    17432
      270    17433    2      MSG_LGTH = %(((MAX_BUF * BUF_RCD_LGTH / 4) + 1) / 2) * 2 ;

  17433  5 000067   001130 235007                    LDA     600,DL
         5 000070   200005 755100                    STA     MSG_LGTH,,AUTO

      271    17434    2      DUP.NUM_WORDS = MSG_LGTH ;

  17434  5 000071   000000 620005                    EAX0    0,AL
         5 000072   000001 740000 1                  STX0    DUP+1

      272    17435    2      DUP.DS_V = '0'B ;

  17435  5 000073   000000 235003                    LDA     0,DU
         5 000074   000000 236003                    LDQ     0,DU
         5 000075   000002 757000 1                  STAQ    DUP+2

      273    17436    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;

  17436  5 000076   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000077   000000 701000 xent               TSX1    TOU$DU_GET_DATA_SEGMENT
         5 000100   000155 702000 5                  TSX2    ERROR

      274    17437    2      DUP.MSG_V = DUP.DS_V ;

  17437  5 000101   000002 237000 1                  LDAQ    DUP+2
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:41   
         5 000102   000024 757000 1                  STAQ    DUP+20

      275    17438
      276    17439    2      LOG_LGTH = %(MAX_ACCESSES * LOG_RCD_LGTH / 4 + 1) ;

  17439  5 000103   017171 235007                    LDA     7801,DL
         5 000104   200006 755100                    STA     LOG_LGTH,,AUTO

      277    17440    2      DUP.NUM_WORDS = LOG_LGTH ;

  17440  5 000105   000000 620005                    EAX0    0,AL
         5 000106   000001 740000 1                  STX0    DUP+1

      278    17441    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;

  17441  5 000107   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000110   000000 701000 xent               TSX1    TOU$DU_GET_DATA_SEGMENT
         5 000111   000155 702000 5                  TSX2    ERROR

      279    17442    2      DUP.LOG_V = DUP.DS_V ;

  17442  5 000112   000002 237000 1                  LDAQ    DUP+2
         5 000113   000136 757000 1                  STAQ    DUP+94

      280    17443    2      VBASE (DUP.LOG_V_) = PINCRW (DUP.LOG_V.PTR$, MSG_LGTH) ;

  17443  5 000114   200005 236100                    LDQ     MSG_LGTH,,AUTO
         5 000115   000022 736000                    QLS     18
         5 000116   000137 036000 1                  ADLQ    DUP+95
         5 000117   000137 756000 1                  STQ     DUP+95

      281    17444    2      VBOUND (DUP.LOG_V_) = (LOG_LGTH * 4) - 1 ;

  17444  5 000120   200006 236100                    LDQ     LOG_LGTH,,AUTO
         5 000121   000002 736000                    QLS     2
         5 000122   000001 136007                    SBLQ    1,DL
         5 000123   000020 736000                    QLS     16
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:42   
         5 000124   000136 676000 1                  ERQ     DUP+94
         5 000125   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000126   000136 656000 1                  ERSQ    DUP+94

      282    17445
      283    17446    2      DUP.NUM_WORDS = %BINARY_SPACE ;

  17446  5 000127   100000 220003                    LDX0    32768,DU
         5 000130   000001 740000 1                  STX0    DUP+1

      284    17447    2      DUP.DS_V = '0'B ;

  17447  5 000131   000000 235003                    LDA     0,DU
         5 000132   000000 236003                    LDQ     0,DU
         5 000133   000002 757000 1                  STAQ    DUP+2

      285    17448    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;

  17448  5 000134   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000135   000000 701000 xent               TSX1    TOU$DU_GET_DATA_SEGMENT
         5 000136   000155 702000 5                  TSX2    ERROR

      286    17449    2      DUP.BINARY_V = DUP.DS_V ;

  17449  5 000137   000002 237000 1                  LDAQ    DUP+2
         5 000140   000100 757000 1                  STAQ    DUP+64

      287    17450
      288    17451    2      DUP.NUM_WORDS = %(MAX_PATCHES * BCD_RCD_LGTH / 4) ;

  17451  5 000141   010150 220003                    LDX0    4200,DU
         5 000142   000001 740000 1                  STX0    DUP+1

      289    17452    2      DUP.DS_V = '0'B ;

  17452  5 000143   000000 235003                    LDA     0,DU
         5 000144   000000 236003                    LDQ     0,DU
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:43   
         5 000145   000002 757000 1                  STAQ    DUP+2

      290    17453    2      CALL TOU$DU_GET_DATA_SEGMENT ALTRET (ERROR) ;

  17453  5 000146   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000147   000000 701000 xent               TSX1    TOU$DU_GET_DATA_SEGMENT
         5 000150   000155 702000 5                  TSX2    ERROR

      291    17454    2      DUP.BCD_V = DUP.DS_V ;

  17454  5 000151   000002 237000 1                  LDAQ    DUP+2
         5 000152   000102 757000 1                  STAQ    DUP+66

      292    17455
      293    17456    2      RETURN ;

  17456  5 000153   200004 221300                    LDX1  ! 4,,AUTO
         5 000154   000001 702211                    TSX2  ! 1,X1

      294    17457
      295    17458    2   ERROR:
      296    17459    2      ALTRETURN ;

  17459  5 000155   200004 221300       ERROR        LDX1  ! 4,,AUTO
         5 000156   000000 702211                    TSX2  ! 0,X1

      297    17460
      298    17461    2   END DE_GET_BUFFERS ;
      299    17462        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:44   
      300    17463        /*I*  NAME:        DE_START_MSG
      301    17464              AUTHOR:      Scott S. Sheppard
      302    17465              PURPOSE:     Prints initialization message
      303    17466              INTERFACE:   TOU$DU_USER_WRITE
      304    17467              INPUT:       T$START_DEER  - Deckfile Start Message constant
      305    17468              OUTPUT:      DUP.MSG_CODE  - integer message number
      306    17469              DESCRIPTION: This procedure logs a start up message to the
      307    17470                           user when the DEER processor is invoked.
      308    17471        */
      309    17472
      310    17473    1   DE_START_MSG: PROC ALTRET ;

  17473  5 000157   200004 741300       DE_START_MSG STX1  ! 4,,AUTO

      311    17474
      312    17475        /* Code */
      313    17476
      314    17477    2      CALL GET_DEER_VERSION ;

  17477  5 000160   000474 701000 5                  TSX1    GET_DEER_VERSION
         5 000161   000000 011000                    NOP     0

      315    17478    2      DUP.MSG_CODE = %T$START_DEER ;

  17478  5 000162   000012 235007                    LDA     10,DL
         5 000163   000020 755000 1                  STA     DUP+16

      316    17479    2      CALL TOU$DU_USER_WRITE ALTRET (FAILURE) ;

  17479  5 000164   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000165   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         5 000166   000171 702000 5                  TSX2    FAILURE

      317    17480    2      RETURN ;

  17480  5 000167   200004 221300                    LDX1  ! 4,,AUTO
         5 000170   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:45   

      318    17481
      319    17482    2   FAILURE:
      320    17483    2      ALTRETURN ;

  17483  5 000171   200004 221300       FAILURE      LDX1  ! 4,,AUTO
         5 000172   000000 702211                    TSX2  ! 0,X1

      321    17484
      322    17485    2   END DE_START_MSG ;
      323    17486        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:46   
      324    17487        /*I*  NAME:        DE_CHECK_PROCESSING_MODE
      325    17488              AUTHOR:      Scott S. Sheppard
      326    17489              PURPOSE:     Determines processing mode and Sets prompt
      327    17490              INTERFACE:   None called.
      328    17491              INPUT:       B$JIT$           - ptr to Job Info. Table (JIT)
      329    17492                           B$JIT.MODE       - System processing mode flag
      330    17493                           M_BATCH#         - System constant for BATCH
      331    17494              OUTPUT:      DUP.BATCH_MODE   - bit (1) processing flag
      332    17495              DESCRIPTION: The procedure checks the processing mode and sets
      333    17496                           the execution flag accordingly.   The system mode
      334    17497                           is a 4 bit binary field which is set:
      335    17498                              1 for BATCH mode      3 for INT
      336    17499                              2 for GHOST mode      4 for TP
      337    17500                           The deckfile utility program mode flag is set to:
      338    17501                              '1'b for BATCH mode
      339    17502                              '0'b for ON-LINE mode.
      340    17503        */
      341    17504
      342    17505    1   DE_CHECK_PROCESSING_MODE: PROC ;

  17505  5 000173   200004 741300       DE_CHECK_PR* STX1  ! 4,,AUTO

      343    17506
      344    17507    2      DCL B$JIT$                     PTR SYMREF ;
      345    17508           %INCLUDE B$JIT ;
      346    18111
      347    18112        /* Code */
      348    18113
      349    18114    2      IF B$JIT$ -> B$JIT.MODE = %M_BATCH#

  18114  5 000174   000000 470400 xsym               LDP0    B$JIT$
         5 000175   000000 236100                    LDQ     0,,PR0
         5 000176   740000 376003                    ANQ     -16384,DU
         5 000177   040000 116003                    CMPQ    16384,DU
         5 000200   000204 601000 5                  TNZ     s:18116

      350    18115    2      THEN DUP.BATCH_MODE = %TRUE ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:47   

  18115  5 000201   400000 236003                    LDQ     -131072,DU
         5 000202   000000 256000 1                  ORSQ    DUP
         5 000203   000206 710000 5                  TRA     s:18117

      351    18116    2      ELSE DUP.BATCH_MODE = %FALSE ;

  18116  5 000204   000031 236000 xsym               LDQ     B_VECTNIL+25
         5 000205   000000 356000 1                  ANSQ    DUP

      352    18117    2      RETURN ;

  18117  5 000206   000001 702211                    TSX2  ! 1,X1

      353    18118
      354    18119    2   END DE_CHECK_PROCESSING_MODE ;
      355    18120        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:48   
      356    18121        /*I*  NAME:        DE_EDIT_DECKFILE
      357    18122              AUTHOR:      Scott S. Sheppard
      358    18123              PURPOSE:     Editor Driver
      359    18124              INTERFACE:   DE_PROCESS_COMMAND
      360    18125                           DE_PROCESS_ERROR
      361    18126                           TOU$DU_SET_EDIT_PROMPT
      362    18127                           XUG$GETCMD
      363    18128              INPUT:       DUP.PROCESS_COMPLETE - DEER termination flag
      364    18129              OUTPUT:      DUP.CMD$ - pointer to the parse control block
      365    18130              DESCRIPTION: This procedure alters the deckfile  by accepting and
      366    18131                           processing commands until the END command is issued.
      367    18132        */
      368    18133
      369    18134    1   DE_EDIT_DECKFILE: PROC ;

  18134  5 000207   200004 741300       DE_EDIT_DEC* STX1  ! 4,,AUTO

      370    18135
      371    18136        /* Code */
      372    18137
      373    18138    3      DO WHILE (~DUP.PROCESS_COMPLETE) ;

  18138  5 000210   000234 710000 5                  TRA     s:18152

      374    18139    3         DUP.BREAK_DISABLED = %TRUE ;

  18139  5 000211   000400 236003                    LDQ     256,DU
         5 000212   000155 256000 1                  ORSQ    DUP+109

      375    18140    3         DEER_GETCMD.NODES$ = ADDR (DEER_ROOT_NODE);

  18140  5 000213   000000 236000 6                  LDQ     0
         5 000214   000244 756000 1                  STQ     DEER_GETCMD

      376    18141    3         CALL XUG$GETCMD (DEER_GETCMD) WHENRETURN

  18141  5 000215   000001 630400 6                  EPPR0   1
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:49   
         5 000216   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000217   000000 701000 xent               TSX1    XUG$GETCMD
         5 000220   000230 702000 5                  TSX2    s:18149

      377    18142    4              DO ;

      378    18143    4                 DUP.BREAK_DISABLED = %FALSE ;

  18143  5 000221   000003 236000 6                  LDQ     3
         5 000222   000155 356000 1                  ANSQ    DUP+109

      379    18144    4                 DUP.CMD$ = DEER_GETCMD.OUT$ ;

  18144  5 000223   000245 236000 1                  LDQ     DEER_GETCMD+1
         5 000224   000017 756000 1                  STQ     DUP+15

      380    18145    4                 CALL DE_PROCESS_COMMAND ;

  18145  5 000225   000243 701000 5                  TSX1    DE_PROCESS_COMMAND
         5 000226   000000 011000                    NOP     0

      381    18146    4              END /* WHEN RETURN */ ;

  18146  5 000227   000234 710000 5                  TRA     s:18152

      382    18147    3         WHENALTRETURN
      383    18148    4              DO ;

      384    18149    4                 CALL DE_PROCESS_ERROR ;

  18149  5 000230   000375 701000 5                  TSX1    DE_PROCESS_ERROR
         5 000231   000000 011000                    NOP     0

      385    18150    4                 DUP.BREAK_DISABLED = %FALSE ;

  18150  5 000232   000003 236000 6                  LDQ     3
         5 000233   000155 356000 1                  ANSQ    DUP+109
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:50   

      386    18151    4              END /* WHEN ALTRETURN */ ;

      387    18152    3      END /* WHILE */ ;

  18152  5 000234   000000 236000 1                  LDQ     DUP
         5 000235   000011 736000                    QLS     9
         5 000236   400000 376003                    ANQ     -131072,DU
         5 000237   400000 676003                    ERQ     -131072,DU
         5 000240   000211 601000 5                  TNZ     s:18139

      388    18153    2      RETURN ;

  18153  5 000241   200004 221300                    LDX1  ! 4,,AUTO
         5 000242   000001 702211                    TSX2  ! 1,X1

      389    18154
      390    18155        /* END DE_EDIT_DECKFILE */
      391    18156        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:51   
      392    18157        /*I*  NAME:        DE_PROCESS_COMMAND
      393    18158              AUTHOR:      Scott S. Sheppard
      394    18159              PURPOSE:     Processes DEER Command
      395    18160              INTERFACE:   TOU$BUILD
      396    18161                           TOU$LIST
      397    18162                           TOU$SHOWDECK
      398    18163                           TOU$SHOWFILE
      399    18164                           TOU$NEWCAT
      400    18165                           TOU$NEWDECK
      401    18166                           TOU$REPDECK
      402    18167                           TOU$REMREF
      403    18168                           TOU$DELDECK
      404    18169                           TOU$DELPATCH
      405    18170                           TOU$DELCAT
      406    18171                           TOU$PATCH
      407    18172                           TOU$UPDATE
      408    18173                           TOU$MERGE
      409    18174                           TOU$DU_OPERATOR_WRITE
      410    18175              INPUT:       OUT$BLK.CODE - integer code for command type
      411    18176              OUTPUT:      DUP.PROCESS_COMPLETE - set if END issued
      412    18177              DESCRIPTION: This procedure processes DEER commands by calling
      413    18178                           the appropriate  DEER  function or in the case of
      414    18179                           the  END  command,  setting the  termination bit.
      415    18180                           This procedure is called only if a  valid command
      416    18181                           was accepted by XUG$GETCMD
      417    18182        */
      418    18183
      419    18184    2   DE_PROCESS_COMMAND: PROC ;

  18184  5 000243   200006 741300       DE_PROCESS_* STX1  ! LOG_LGTH,,AUTO

      420    18185
      421    18186           %PARSE$OUT (STCLASS = "BASED (DUP.CMD$)") ;
      422    18231
      423    18232        /* Code */
      424    18233
      425    18234    4      DO CASE (OUT$BLK.CODE) ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:52   

  18234  5 000244   000017 470400 1                  LDP0    DUP+15
         5 000245   000000 720100                    LXL0    0,,PR0
         5 000246   000024 100003                    CMPX0   20,DU
         5 000247   000251 602010 5                  TNC     s:18234+5,X0
         5 000250   000373 710000 5                  TRA     s:18270
         5 000251   000373 710000 5                  TRA     s:18270
         5 000252   000275 710000 5                  TRA     s:18238
         5 000253   000301 710000 5                  TRA     s:18240
         5 000254   000305 710000 5                  TRA     s:18242
         5 000255   000311 710000 5                  TRA     s:18244
         5 000256   000315 710000 5                  TRA     s:18246
         5 000257   000321 710000 5                  TRA     s:18248
         5 000260   000325 710000 5                  TRA     s:18250
         5 000261   000331 710000 5                  TRA     s:18252
         5 000262   000335 710000 5                  TRA     s:18254
         5 000263   000341 710000 5                  TRA     s:18256
         5 000264   000345 710000 5                  TRA     s:18258
         5 000265   000351 710000 5                  TRA     s:18260
         5 000266   000355 710000 5                  TRA     s:18262
         5 000267   000373 710000 5                  TRA     s:18270
         5 000270   000371 710000 5                  TRA     s:18268
         5 000271   000373 710000 5                  TRA     s:18270
         5 000272   000373 710000 5                  TRA     s:18270
         5 000273   000361 710000 5                  TRA     s:18264
         5 000274   000365 710000 5                  TRA     s:18266

      426    18235    4         CASE (%NULL) ;

      427    18236                 /* Do Nothing */
      428    18237    4         CASE (%BUILD) ;

      429    18238    4            CALL TOU$BUILD ;

  18238  5 000275   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000276   000000 701000 xent               TSX1    TOU$BUILD
         5 000277   000000 011000                    NOP     0
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:53   
         5 000300   000373 710000 5                  TRA     s:18270

      430    18239    4         CASE (%LIST) ;

      431    18240    4            CALL TOU$LIST ;

  18240  5 000301   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000302   000000 701000 xent               TSX1    TOU$LIST
         5 000303   000000 011000                    NOP     0
         5 000304   000373 710000 5                  TRA     s:18270

      432    18241    4         CASE (%SHOWDECK) ;

      433    18242    4            CALL TOU$SHOWDECK ;

  18242  5 000305   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000306   000000 701000 xent               TSX1    TOU$SHOWDECK
         5 000307   000000 011000                    NOP     0
         5 000310   000373 710000 5                  TRA     s:18270

      434    18243    4         CASE (%SHOWFILE) ;

      435    18244    4            CALL TOU$SHOWFILE ;

  18244  5 000311   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000312   000000 701000 xent               TSX1    TOU$SHOWFILE
         5 000313   000000 011000                    NOP     0
         5 000314   000373 710000 5                  TRA     s:18270

      436    18245    4         CASE (%NEWCAT) ;

      437    18246    4            CALL TOU$NEWCAT ;

  18246  5 000315   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000316   000000 701000 xent               TSX1    TOU$NEWCAT
         5 000317   000000 011000                    NOP     0
         5 000320   000373 710000 5                  TRA     s:18270
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:54   

      438    18247    4         CASE (%NEWDECK) ;

      439    18248    4            CALL TOU$NEWDECK ;

  18248  5 000321   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000322   000000 701000 xent               TSX1    TOU$NEWDECK
         5 000323   000000 011000                    NOP     0
         5 000324   000373 710000 5                  TRA     s:18270

      440    18249    4         CASE (%REPDECK) ;

      441    18250    4            CALL TOU$REPDECK ;

  18250  5 000325   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000326   000000 701000 xent               TSX1    TOU$REPDECK
         5 000327   000000 011000                    NOP     0
         5 000330   000373 710000 5                  TRA     s:18270

      442    18251    4         CASE (%REMREF) ;

      443    18252    4            CALL TOU$REMREF ;

  18252  5 000331   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000332   000000 701000 xent               TSX1    TOU$REMREF
         5 000333   000000 011000                    NOP     0
         5 000334   000373 710000 5                  TRA     s:18270

      444    18253    4         CASE (%DELDECK) ;

      445    18254    4            CALL TOU$DELDECK ;

  18254  5 000335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000336   000000 701000 xent               TSX1    TOU$DELDECK
         5 000337   000000 011000                    NOP     0
         5 000340   000373 710000 5                  TRA     s:18270

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:55   
      446    18255    4         CASE (%DELPATCH) ;

      447    18256    4            CALL TOU$DELPATCH ;

  18256  5 000341   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000342   000000 701000 xent               TSX1    TOU$DELPATCH
         5 000343   000000 011000                    NOP     0
         5 000344   000373 710000 5                  TRA     s:18270

      448    18257    4         CASE (%DELCAT) ;

      449    18258    4            CALL TOU$DELCAT ;

  18258  5 000345   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000346   000000 701000 xent               TSX1    TOU$DELCAT
         5 000347   000000 011000                    NOP     0
         5 000350   000373 710000 5                  TRA     s:18270

      450    18259    4         CASE (%PATCH) ;

      451    18260    4            CALL TOU$PATCH ;

  18260  5 000351   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000352   000000 701000 xent               TSX1    TOU$PATCH
         5 000353   000000 011000                    NOP     0
         5 000354   000373 710000 5                  TRA     s:18270

      452    18261    4         CASE (%UPDATE) ;

      453    18262    4            CALL TOU$UPDATE ;

  18262  5 000355   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000356   000000 701000 xent               TSX1    TOU$UPDATE
         5 000357   000000 011000                    NOP     0
         5 000360   000373 710000 5                  TRA     s:18270

      454    18263    4         CASE (%MERGE) ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:56   

      455    18264    4            CALL TOU$MERGE ;

  18264  5 000361   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000362   000000 701000 xent               TSX1    TOU$MERGE
         5 000363   000000 011000                    NOP     0
         5 000364   000373 710000 5                  TRA     s:18270

      456    18265    4         CASE (%MSG) ;

      457    18266    4            CALL TOU$DU_OPERATOR_WRITE ;

  18266  5 000365   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000366   000000 701000 xent               TSX1    TOU$DU_OPERATOR_WRITE
         5 000367   000000 011000                    NOP     0
         5 000370   000373 710000 5                  TRA     s:18270

      458    18267    4         CASE (%END) ;

      459    18268    4            DUP.PROCESS_COMPLETE = %TRUE ;

  18268  5 000371   000400 236003                    LDQ     256,DU
         5 000372   000000 256000 1                  ORSQ    DUP

      460    18269    4      END /* CASE */ ;

      461    18270    3      RETURN ;

  18270  5 000373   200006 221300                    LDX1  ! LOG_LGTH,,AUTO
         5 000374   000001 702211                    TSX2  ! 1,X1

      462    18271
      463    18272    3   END DE_PROCESS_COMMAND ;
      464    18273        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:57   
      465    18274        /*I*  NAME:        DE_PROCESS_ERROR
      466    18275              AUTHOR:      Scott S. Sheppard
      467    18276                           Kathy Larkin
      468    18277              PURPOSE:     Editor Error Reporter
      469    18278              INTERFACE:   TOU$DU_SYSTEM_ERRMSG
      470    18279                           XUG$ERRMSG
      471    18280              INPUT:       DEER_GETCMD.ERR# - errcode received by XUG
      472    18281              OUTPUT:      Error message written to M$DO.
      473    18282              DESCRIPTION: This procedure processes an altreturn from the
      474    18283                           XUG$GETCMD service.  Since we specify  GOODCMD
      475    18284                           = YES, SYNTAX = YES, we  will not altreturn on
      476    18285                           command syntax errors, only if XUG altreturned
      477    18286                           from one of it's calls (e.g. X$PARSE, M$ERRMSG)
      478    18287        */
      479    18288
      480    18289    2   DE_PROCESS_ERROR: PROC ;

  18289  5 000375   200006 741300       DE_PROCESS_* STX1  ! LOG_LGTH,,AUTO

      481    18290
      482    18291        /* Code */
      483    18292
      484    18293    3      DEER_GETCMD.ERR_CODE = DEER_GETCMD.ERR# ;

  18293  5 000376   000245 236000 1                  LDQ     DEER_GETCMD+1
         5 000377   000254 756000 1                  STQ     DEER_GETCMD+8

      485    18294    3      CALL XUG$ERRMSG (DEER_GETCMD) ALTRET (MSG_ERR) ;

  18294  5 000400   000001 630400 6                  EPPR0   1
         5 000401   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000402   000000 701000 xent               TSX1    XUG$ERRMSG
         5 000403   000414 702000 5                  TSX2    MSG_ERR

      486    18295    3      IF DEER_GETCMD.ERR#.CODE# = %E$EOF THEN

  18295  5 000404   000245 236000 1                  LDQ     DEER_GETCMD+1
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:58   
         5 000405   377770 376007                    ANQ     131064,DL
         5 000406   000060 116007                    CMPQ    48,DL
         5 000407   000412 601000 5                  TNZ     s:18297

      487    18296    3         DUP.PROCESS_COMPLETE = %TRUE ;  /* 30212 */

  18296  5 000410   000400 236003                    LDQ     256,DU
         5 000411   000000 256000 1                  ORSQ    DUP

      488    18297    3      RETURN ;

  18297  5 000412   200006 221300                    LDX1  ! LOG_LGTH,,AUTO
         5 000413   000001 702211                    TSX2  ! 1,X1

      489    18298
      490    18299    3   MSG_ERR:
      491    18300    3      DUP.FAULT_ERROR = %FALSE ;

  18300  5 000414   000004 236000 6     MSG_ERR      LDQ     4
         5 000415   000000 356000 1                  ANSQ    DUP

      492    18301    3      CALL TOU$DU_SYSTEM_ERRMSG ;

  18301  5 000416   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000417   000000 701000 xent               TSX1    TOU$DU_SYSTEM_ERRMSG
         5 000420   000000 011000                    NOP     0

      493    18302    3      DUP.PROCESS_COMPLETE = %TRUE ;

  18302  5 000421   000400 236003                    LDQ     256,DU
         5 000422   000000 256000 1                  ORSQ    DUP

      494    18303    3      RETURN ;

  18303  5 000423   200006 221300                    LDX1  ! LOG_LGTH,,AUTO
         5 000424   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:59   
      495    18304
      496    18305    3   END DE_PROCESS_ERROR ;
      497    18306    2   END DE_EDIT_DECKFILE ;
      498    18307        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:60   
      499    18308        /*I*  NAME:        DE_END_MSG
      500    18309              AUTHOR:      Scott S. Sheppard
      501    18310              PURPOSE:     Prints termination message
      502    18311              INTERFACE:   TOU$DU_USER_WRITE
      503    18312              INPUT:       T$END_DEER
      504    18313              OUTPUT:      DUP.MSG_CODE - integer message number
      505    18314              DESCRIPTION: This procedure logs a termination message to the
      506    18315                           user when DEER is normally terminated.
      507    18316        */
      508    18317
      509    18318    1   DE_END_MSG: PROC ;

  18318  5 000425   200004 741300       DE_END_MSG   STX1  ! 4,,AUTO

      510    18319
      511    18320        /* Code */
      512    18321
      513    18322    2      DUP.MSG_CODE = %T$END_DEER ;

  18322  5 000426   000013 235007                    LDA     11,DL
         5 000427   000020 755000 1                  STA     DUP+16

      514    18323    2      CALL TOU$DU_USER_WRITE ;

  18323  5 000430   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000431   000000 701000 xent               TSX1    TOU$DU_USER_WRITE
         5 000432   000000 011000                    NOP     0

      515    18324    2      RETURN ;

  18324  5 000433   200004 221300                    LDX1  ! 4,,AUTO
         5 000434   000001 702211                    TSX2  ! 1,X1

      516    18325
      517    18326    2   END DE_END_MSG ;
      518    18327        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:61   
      519    18328        /*I*  NAME:        DE_FREE_BUFFERS
      520    18329              AUTHOR:      Scott S. Sheppard
      521    18330              PURPOSE:     Frees DEER Dynamic Buffers
      522    18331              INTERFACE:   TOU$DU_FREE_DATA_SEGMENT
      523    18332              INPUT:       BUF_SIZE      - number of bytes for the output buffer
      524    18333                           MAX_BINARY    - maximum number of binary input records
      525    18334                           BIN_RCD_LGTH  - length in bytes of a binary input record
      526    18335                           MAX_PATCHES   - maximum number of BCD input records
      527    18336                           BCD_RCD_LGTH  - length in bytes of a BCD input record
      528    18337                           MAX_ACCESSES  - maximum accesses allowed
      529    18338                           DUP.MSG_V     - vector to the message output buffer
      530    18339                           DUP.BINARY_V  - vector to the binary card buffer
      531    18340                           DUP.BCD_V     - vector to the patch card buffer
      532    18341                           DUP.LOG_V     - vector to the deckfile log buffer
      533    18342              OUTPUT:      DUP.NUM_WORDS - number of dynamic words being used
      534    18343                           DUP.DS_VECTOR - vector of data segment to free
      535    18344              DESCRIPTION: This procedure makes calls to free dynamic memory
      536    18345                           for DEER.  Buffer sizes are computed and calls to
      537    18346                           free the data segments are done for:
      538    18347                            * the message output buffer
      539    18348                            * the binary card array buffer
      540    18349                            * the patch card array buffer
      541    18350                            * the deckfile history log buffer
      542    18351        */
      543    18352        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:62   
      544    18353    1   DE_FREE_BUFFERS: PROC ;

  18353  5 000435   200004 741300       DE_FREE_BUF* STX1  ! 4,,AUTO

      545    18354
      546    18355        /* Code */
      547    18356
      548    18357    2      DUP.NUM_WORDS = %(MAX_BUF * BUF_RCD_LGTH / 4) ;

  18357  5 000436   001130 220003                    LDX0    600,DU
         5 000437   000001 740000 1                  STX0    DUP+1

      549    18358    2      DUP.DS_V = DUP.MSG_V ;

  18358  5 000440   000024 237000 1                  LDAQ    DUP+20
         5 000441   000002 757000 1                  STAQ    DUP+2

      550    18359    2      CALL TOU$DU_FREE_DATA_SEGMENT ;

  18359  5 000442   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000443   000000 701000 xent               TSX1    TOU$DU_FREE_DATA_SEGMENT
         5 000444   000000 011000                    NOP     0

      551    18360
      552    18361    2      DUP.NUM_WORDS = %BINARY_SPACE ;

  18361  5 000445   100000 220003                    LDX0    32768,DU
         5 000446   000001 740000 1                  STX0    DUP+1

      553    18362    2      DUP.DS_V = DUP.BINARY_V ;

  18362  5 000447   000100 237000 1                  LDAQ    DUP+64
         5 000450   000002 757000 1                  STAQ    DUP+2

      554    18363    2      CALL TOU$DU_FREE_DATA_SEGMENT ;

  18363  5 000451   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:63   
         5 000452   000000 701000 xent               TSX1    TOU$DU_FREE_DATA_SEGMENT
         5 000453   000000 011000                    NOP     0

      555    18364
      556    18365    2      DUP.NUM_WORDS = %(MAX_PATCHES * BCD_RCD_LGTH / 4) ;

  18365  5 000454   010150 220003                    LDX0    4200,DU
         5 000455   000001 740000 1                  STX0    DUP+1

      557    18366    2      DUP.DS_V = DUP.BCD_V ;

  18366  5 000456   000102 237000 1                  LDAQ    DUP+66
         5 000457   000002 757000 1                  STAQ    DUP+2

      558    18367    2      CALL TOU$DU_FREE_DATA_SEGMENT ;

  18367  5 000460   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000461   000000 701000 xent               TSX1    TOU$DU_FREE_DATA_SEGMENT
         5 000462   000000 011000                    NOP     0

      559    18368
      560    18369    2      DUP.NUM_WORDS = %(MAX_ACCESSES * LOG_RCD_LGTH / 4 + 1) ;

  18369  5 000463   017171 220003                    LDX0    7801,DU
         5 000464   000001 740000 1                  STX0    DUP+1

      561    18370    2      DUP.DS_V = DUP.LOG_V ;

  18370  5 000465   000136 237000 1                  LDAQ    DUP+94
         5 000466   000002 757000 1                  STAQ    DUP+2

      562    18371    2      CALL TOU$DU_FREE_DATA_SEGMENT ;

  18371  5 000467   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000470   000000 701000 xent               TSX1    TOU$DU_FREE_DATA_SEGMENT
         5 000471   000000 011000                    NOP     0

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:64   
      563    18372    2      RETURN ;

  18372  5 000472   200004 221300                    LDX1  ! 4,,AUTO
         5 000473   000001 702211                    TSX2  ! 1,X1

      564    18373
      565    18374    2   END DE_FREE_BUFFERS ;
      566    18375        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:65   
      567    18376        /*I* NAME:         GET_DEER_VERSION
      568    18377             AUTHOR:       Scott S. Sheppard
      569    18378             PURPOSE:      Obtains Link Time, Date, and Release
      570    18379             INTERFACE:    M$READ
      571    18380                           M$TIME
      572    18381             PARAMETERS:   None passed.
      573    18382             DATA:         B_VERSION - input
      574    18383                           TOU$DEER.LINK_DATE.ASCII - output
      575    18384             DESCRIPTION:  This  procedure  sets  up  the  DEER  version
      576    18385                           information.  The   CP-6  release  version  is
      577    18386                           obtained from a  SYMREF called B_VERSION which
      578    18387                           obtains  its  value  as  part  of  the JCL for
      579    18388                           linking   DEER.    However,   the   B_VERSION
      580    18389                           structure does NOT contain the date when DEER
      581    18390                           was  linked. This  is obtained  by reading the
      582    18391                           head  record of  the DEER  module and culling
      583    18392                           out the link date and time.
      584    18393        */
      585    18394        %EJECT ;
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:66   
      586    18395    1   GET_DEER_VERSION: PROC ;

  18395  5 000474   200006 741300       GET_DEER_VE* STX1  ! LOG_LGTH,,AUTO

      587    18396
      588    18397    2      DCL 1 BIRTH_KEY CONSTANT,
      589    18398    2            2 * UBIN BYTE CALIGNED INIT (5),
      590    18399    2            2 * CHAR (5)  CALIGNED INIT ('BIRTH') ;
      591    18400    2      DCL CC              UBIN WORD STATIC ALIGNED INIT (6) ;
      592    18401           %B$RUBIRTH (NAME = B_RUBIRTH,
      593    18402                       STCLASS = STATIC) ;
      594    18411           %FPT_READ (FPTN = GET_LINK_DATE,
      595    18412                      BUF  = B_RUBIRTH,
      596    18413                      BIN  = YES,
      597    18414                      DCB  = M$LM,
      598    18415                      KEY  = BIRTH_KEY,
      599    18416                      KEYS = YES,
      600    18417                      WAIT = YES) ;
      601    18456           %FPT_TIME (FPTN   = COMP_LINK_DATE,
      602    18457                      SOURCE = UTS,
      603    18458                      DEST   = ANS,
      604    18459                      DATE   = TOU$DEER.LINK_DATE.ASCII,
      605    18460                      TIME   = TOU$DEER.LINK_TIME,
      606    18461                      TSTAMP = B_RUBIRTH.CREATE_UTS) ;
      607    18480
      608    18481        /* Code */
      609    18482
      610    18483    2      CALL M$READ (GET_LINK_DATE) ;

  18483  5 000475   000500 630400 1                  EPPR0   GET_LINK_DATE
         5 000476   040000 713400                    CLIMB   read
         5 000477   401400 401760                    pmme    nvectors=4

      611    18484    2      CALL M$TIME (COMP_LINK_DATE) ;

  18484  5 000500   000516 630400 1                  EPPR0   COMP_LINK_DATE
         5 000501   020004 713400                    CLIMB   8196
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:67   
         5 000502   402000 401760                    pmme    nvectors=5

      612    18485    2      RETURN ;

  18485  5 000503   200006 221300                    LDX1  ! LOG_LGTH,,AUTO
         5 000504   000001 702211                    TSX2  ! 1,X1

DUP
 Sect OctLoc
   1     000   0**0** 0*****   000000 ******   000000 000000   000000 000000    ................
   1     004   040040 040040   040040 040040   040040 040040   040040 040040
   1     014*  040040 040040   040040 040040   000000 000000   000000 006014            ........
   1     020   000000 000000   000000 001274   000000 000000   ****** ******    ................
   1     024   000000 000000   000000 006014   142*** ******   000000 000000    ........b.......
   1     030   000000 000000   000000 000000   040040 040040   040040 040040    ........
   1     034   040040 040040   040040 040040   040040 040040   040040 040040
   1     054*  040040 040040   040040 040040   4***** ******   0**0** 0**0**            ........
   1     060   040040 040***   000000 000000   000000 000000   040040 040040       .........
   1     064   040040 040040   040040 040040   040040 040040   040040 040040
   1     074*  040040 040040   040*** ******   000000 000000   ****** ******         ...........
   1     100   000000 000000   000000 006014   000000 000000   000000 006014    ................
   1     104   0**0** 4*****   000000 000002   000000 000000   040040 040040    ............
   1     110   040040 040040   040040 040040   040040 040040   040040 040040
   1     120*  040040 040040   000000 000000   000000 000000   040040 040040        ........
   1     124   040040 040040   040040 040040   040040 040040   040040 040040
   1     134*  040040 040040   040040 040040   000000 000000   000000 006014            ........
   1     140   000000 000000   000000 000000   040040 040040   040040 040040    ........
   1     144   040040 040040   040040 040040   040040 040040   040040 040040
   1     154*  000000 000000   0**4** ******   ****** ******   ****** ******    ................
   1     160   000040 040040   040040 040040   040040 040040   040040 040040    .
   1     164   040040 040040   040040 040040   040040 040040   040040 040040
   1     214*  040040 040040   040040 040040   040040 040040   040040 ******                  ..
   1     220   000*** ******                                                    ....

TOU$DEER
 Sect OctLoc
   1     222   040040 040040   040040 040040   040040 040040   040040 ******                  ..
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:68   

DEER_PCB
 Sect OctLoc
   1     226   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     232   000000 000000   000000 600000   000000 000000   040042 040042    ............ " "
   1     236   000000 040000   000000 000000   000000 000000   000000 006014    .. .............
   1     242   000000 006014   000000 000000                                    ........

DEER_GETCMD
 Sect OctLoc
   1     244   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     250   000000 006014   000316 006000   242000 000000   04000* ***000    ............ ...
   1     254   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     260   000000 000000   000000 000000   000000 000000   000000 177640    ................
   1     264   000000 006014   000000 177640   000000 006014   000000 177640    ................
   1     270   000000 006014   000001 177640   000000 006000   000000 177640    ................
   1     274   000000 006014   000000 000000   000000 000000   000000 000000    ................
   1     300   000000 177640   000000 006014   000000 006014   000000 000000    ................
   1     304   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     310   000000 006014   000000 006014   000000 000000   000000 000000    ................
   1     314   000000 000000   000000 000000                                    ........

DEER_HELP
 Sect OctLoc
   1     316   000001 177640   000410 006000   000000 177640   000000 006014    ................
   1     322   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     326   000000 000000   000000 006014   000000 000000   0***** ******    ................
   1     332   000000 000000   000000 000000   003040 040040   040040 040040    .........
   1     336   040040 040040   040040 040040   040040 040040   040040 040040
   1     342   040040 040040   040040 040040   040040 040000   040040 040040               .
   1     346   040040 040040   040040 040040   040040 040040   040040 040040
   1     362*  040*** ******   ****** ******   000000 177640   000000 006014     ...............
   1     366   000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     372   000000 177640   000000 006014   000000 361101   000000 000000    ...........A....
   1     376   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     406*  000000 000000                                                    ....

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:69   
DEER_NAME
 Sect OctLoc
   1     410   004104 105105   122*** ******                                    .DEER...

DEER_INIT
 Sect OctLoc
   1     412   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     422*  000000 177640   000000 006014   000000 177640   000000 006014    ................
   1     426   000000 006014   000000 177640   000000 006014   000226 006000    ................
   1     432   000000 006014   000000 177640   000000 006014   000000 000454    ................
   1     436   000144 000144   000000 000000   470000 000000   000000 000000    .d.d............
   1     442   000000 000000   000000 000000   000000 000000   000000 006014    ................
   1     446   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     452   00000* ******   000000 000000   000000 000000   000000 000000    ................

DEER_BREAKS
 Sect OctLoc
   1     456   000001 777640   000460 006000   000000 000000   000000 000000    ................

DEER_FAULTS
 Sect OctLoc
   1     462   000005 777640   000466 006000   000000 177640   000000 006014    ................
   1     466   000000 000000   000000 000000   000000 000000   000000 000000    ................
   1     472   525062 525253   000000 000000                                    .2......

(unnamed)
 Sect OctLoc
   1     474   000000 000006                                                    ....

B_RUBIRTH
 Sect OctLoc
   1     475   ****** ******   ****** ******   000000 000000                    ............

GET_LINK_DATE
 Sect OctLoc
   1     500   000005 777640   000510 006000   000001 377640   000002 006000    ................
   1     504   000002 777640   000475 006000   000000 177640   000000 006014    ................
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:70   
   1     510   000000 600000   000000 000000   000000 000000   040000 000000    ............ ...
   1     514   000000 000000   000000 000000                                    ........

COMP_LINK_DATE
 Sect OctLoc
   1     516   000001 777640   000530 006000   000001 377640   000222 006000    ................
   1     522   000001 777640   000223 406000   000000 177640   000000 006014    ................
   1     526   000000 777640   000475 006000   004002 000000   ****** ******    ................

DEER_PROMPT
 Sect OctLoc
   4     000   004036 077077   077*** ******                                    ..???...

BIRTH_KEY
 Sect OctLoc
   4     002   005102 111122   124110 ******                                    .BIRTH..

(unnamed)
 Sect OctLoc
   6     000   000000 006000   000244 006000   000412 006000   777377 777777    ................
   6     004   777777 377777                                                    ....
      613    18486
      614    18487    2   END GET_DEER_VERSION ;
      615    18488    1   END TOU$DE ;

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:71   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   XUG_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   TO_PERR_C.:E05TOU  is referenced.
   TOU_RQSTS_E.:E05TOU  is referenced.
   TOU_DEER_M.:E05TOU  is referenced.
   CP_6_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   B$OBJECT_C.:E05TOU  is referenced.
      No diagnostics issued in procedure TOU$DE.
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:72   

 **** Procedure blocks ****

LB#    Line#s    #stmts #vars Sect# OctLoc  P A C   NP Lvl/name
  0    71- 18488    141    33     5      0  y   y    0   1 TOU$DE
  1 16903- 17396     13     5     5     24  y y y    0     2 DE_SETUP_BREAK_HANDLER
  2 17424- 17461     22     2     5     66  y y y    0     2 DE_GET_BUFFERS
  3 17473- 17485      6     0     5    157  y y y    0     2 DE_START_MSG
  4 17505- 18119      5     3     5    173  y   y    0     2 DE_CHECK_PROCESSING_MODE
  5 18134- 18306     63     0     5    207  y   y    0     2 DE_EDIT_DECKFILE
  6 18184- 18272     37     2     5    243  y   y    0      3 DE_PROCESS_COMMAND
  7 18289- 18305     10     0     5    375  y   y    0      3 DE_PROCESS_ERROR
  8 18318- 18326      4     0     5    425  y   y    0     2 DE_END_MSG
  9 18353- 18374     14     0     5    435  y   y    0     2 DE_FREE_BUFFERS
 10 18395- 18487      4     7     5    474  y   y    0     2 GET_DEER_VERSION
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:73   

    **** Executable statements  ****

  Exec cost Stmt Sec OctLoc Type   LB Label              Exec cost Stmt Sec OctLoc Type   LB Label

              71   5      0 Proc    0                             16864   5      2 Call    0
           16865   5      4 Call    0                             16866   5      6 Call    0
           16867   5     10 Call    0                             16868   5     12 Rememb  0
           16871   5     15 Call    0 DEER_PROCESSING             16872   5     17 Call    0
           16875   5     21 Call    0 DEER_TERMINATED             16876   5     23 Return  0
           16903   5     24 Proc    1                             17380   5     25 Assign  1
           17381   5     27 Assign  1                             17382   5     31 Assign  1
           17383   5     33 Call    1                   $$$$$$$$$ 17384   5     37 MonCal  1
$$$$$$$$$$ 17385   5     43 MonCal  1                             17386   5     47 Return  1
           17389   5     51 Call    1 XUG_ERROR                   17390   5     54 Altret  1
           17392   5     56 Call    1 SETUP_ERROR                 17393   5     61 Call    1
           17394   5     64 Altret  1                             17424   5     66 Proc    2
           17433   5     67 Assign  2                             17434   5     71 Assign  2
           17435   5     73 Assign  2                             17436   5     76 Call    2
           17437   5    101 Assign  2                             17439   5    103 Assign  2
           17440   5    105 Assign  2                             17441   5    107 Call    2
           17442   5    112 Assign  2                             17443   5    114 Assign  2
         $ 17444   5    120 Assign  2                             17446   5    127 Assign  2
           17447   5    131 Assign  2                             17448   5    134 Call    2
           17449   5    137 Assign  2                             17451   5    141 Assign  2
           17452   5    143 Assign  2                             17453   5    146 Call    2
           17454   5    151 Assign  2                             17456   5    153 Return  2
           17459   5    155 Altret  2 ERROR                       17473   5    157 Proc    3
           17477   5    160 Call    3                             17478   5    162 Assign  3
           17479   5    164 Call    3                             17480   5    167 Return  3
           17483   5    171 Altret  3 FAILURE                     17505   5    173 Proc    4
         $ 18114   5    174 If      4                             18115   5    201 Assign  4
           18116   5    204 Assign  4                             18117   5    206 Return  4
           18134   5    207 Proc    5                             18138   5    210 DoWhil  5
           18139   5    211 Assign  5                             18140   5    213 Assign  5
           18141   5    215 Call    5                             18142   5    221 Do      5
           18143   5    221 Assign  5                             18144   5    223 Assign  5
           18145   5    225 Call    5                             18146   5    227 EndDo   5
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:74   
           18148   5    230 Do      5                             18149   5    230 Call    5
           18150   5    232 Assign  5                             18151   5    234 EndDo   5
           18152   5    234 EndWhi  5                             18153   5    241 Return  5
           18184   5    243 Proc    6                  $$$$$$$$$$ 18234   5    244 DoCase  6
           18235   5    275 Case    6                             18237   5    275 Case    6
           18238   5    275 Call    6                             18239   5    301 Case    6
           18240   5    301 Call    6                             18241   5    305 Case    6
           18242   5    305 Call    6                             18243   5    311 Case    6
           18244   5    311 Call    6                             18245   5    315 Case    6
           18246   5    315 Call    6                             18247   5    321 Case    6
           18248   5    321 Call    6                             18249   5    325 Case    6
           18250   5    325 Call    6                             18251   5    331 Case    6
           18252   5    331 Call    6                             18253   5    335 Case    6
           18254   5    335 Call    6                             18255   5    341 Case    6
           18256   5    341 Call    6                             18257   5    345 Case    6
           18258   5    345 Call    6                             18259   5    351 Case    6
           18260   5    351 Call    6                             18261   5    355 Case    6
           18262   5    355 Call    6                             18263   5    361 Case    6
           18264   5    361 Call    6                             18265   5    365 Case    6
           18266   5    365 Call    6                             18267   5    371 Case    6
           18268   5    371 Assign  6                             18269   5    373 EndCse  6
           18270   5    373 Return  6                             18289   5    375 Proc    7
           18293   5    376 Assign  7                             18294   5    400 Call    7
           18295   5    404 If      7                             18296   5    410 Assign  7
           18297   5    412 Return  7                             18300   5    414 Assign  7 MSG_ERR
           18301   5    416 Call    7                             18302   5    421 Assign  7
           18303   5    423 Return  7                             18318   5    425 Proc    8
           18322   5    426 Assign  8                             18323   5    430 Call    8
           18324   5    433 Return  8                             18353   5    435 Proc    9
           18357   5    436 Assign  9                             18358   5    440 Assign  9
           18359   5    442 Call    9                             18361   5    445 Assign  9
           18362   5    447 Assign  9                             18363   5    451 Call    9
           18365   5    454 Assign  9                             18366   5    456 Assign  9
           18367   5    460 Call    9                             18369   5    463 Assign  9
           18370   5    465 Assign  9                             18371   5    467 Call    9
           18372   5    472 Return  9                             18395   5    474 Proc   10
$$$$$$$$$$ 18483   5    475 MonCal 10                  $$$$$$$$$$ 18484   5    500 MonCal 10
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:75   
           18485   5    503 Return 10

  **** Statement type totals  ****

    40 Assign    42 Call       4 MonCal     2 If        17 Case      12 Return
     4 Altret     1 Rememb     1 DoWhil     1 DoCase     2 Do         1 EndWhi
     1 EndCse     2 EndDo     11 Proc       7 Labels

 # major stmts=  107 Code/major= 3.03 # stmts=  141 Code/stmt= 2.30  Point total=101.4
 Cost/major stmt=  3.2 Cost/stmt=  2.4 Total cost=    350.6

   0-4  $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
   4-6  $
   6-8
  8-10
 10-12
 12-14
 14-16
 16-18
 18-20
 20-22
 22-??  $$$
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:76   

 **** Variables and constants ****

  ****  Section 001  Data  TOU$DE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   316-0-0/d STRC(2052)  r     1 DEER_HELP                412-0-0/d STRC(1296)  r     1 DEER_INIT
   410-0-0/c STRC(45)    r     1 DEER_NAME                226-0-0/w STRC(504)   r     1 DEER_PCB

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

   475-0-0/w STRC(108)   r     1 B_RUBIRTH
   475-0-0/w UBIN        r         2 CREATE_UTS

   516-0-0/d STRC(432)   r     1 COMP_LINK_DATE
   530-0-0/d STRC        r         2 V

   456-0-0/d STRC(144)   r     1 DEER_BREAKS
   460-0-0/d STRC(72)    r         2 V

   462-0-0/d STRC(360)   r     1 DEER_FAULTS
   466-0-0/d STRC(216)   r         2 V

   244-0-0/d STRC(1512)  r     1 DEER_GETCMD
   244-0-0/w PTR         r         2 NODES$
   245-0-0/w PTR         r         2 OUT$
   245-0-0/b STRC        r         2 ERR#
   245-2-1/b UBIN(14)    r          3 CODE#
   254-0-0/w STRC        r         2 ERR_CODE

     0-0-0/d STRC(5220)  r     1 DUP
     0-0-0/c BIT         r         2 BATCH_MODE
     0-1-0/c BIT         r         2 PROCESS_COMPLETE
     0-2-0/c BIT         r         2 FAULT_ERROR
     1-0-0/h UBIN(18)    r         2 NUM_WORDS
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:77   
     2-0-0/d BIT (72)    r         2 DS_V
    17-0-0/w PTR         r         2 CMD$
    20-0-0/w UBIN        r         2 MSG_CODE
    24-0-0/d STRC(72)    r         2 MSG_V
   100-0-0/d STRC(72)    r         2 BINARY_V
   102-0-0/d STRC(72)    r         2 BCD_V
   136-0-0/d STRC(72)    r         2 LOG_V
   137-0-0/b PTR         r          3 PTR$
   136-0-0/d VECT        r         2 LOG_V_
   155-1-0/c BIT         r         2 BREAK_DISABLED
   156-0-0/d REMB        r         2 BREAK_RETURN

   500-0-0/d STRC(504)   r     1 GET_LINK_DATE
   510-0-0/d STRC(216)   r         2 V

   222-0-0/c STRC(126)   r     1 TOU$DEER
   222-0-0/c STRC(54)    r         2 LINK_DATE
   222-0-0/c CHAR(6)     r          3 ASCII
   223-2-0/c CHAR(8)     r         2 LINK_TIME


  ****  Section 004 RoData TOU$DE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/c STRC(54)    r     1 BIRTH_KEY                  0-0-0/c STRC(45)    r     1 DEER_PROMPT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN        r     1 LOG_LGTH                   5-0-0/w UBIN        r     1 MSG_LGTH

  ****  SYMREF variables  ****

PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:78   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w SBIN        r     1 DEER_ROOT_NODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0N  NULL        r     1 M$DO                       0-0-0N  NULL        r     1 M$LM

  ****  Structures  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/b UBIN(4)     r         2 MODE

     0-0-0/w STRC(144)   r     1 OUT$BLK
     0-2-0/h UBIN(18)    r         2 CODE



   Procedure TOU$DE requires 325 words for executable code.
   Procedure TOU$DE requires 8 words of local(AUTO) storage.

    No errors detected in file TOU$DE.:E05TSI    .
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:79   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:80   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17929**DCL     17929--REDEF
B$JIT.ERR.MID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL     17836--REDEF
B$JIT.JRESPEAK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17997**DCL     17998--REDEF
B$JIT.MODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17830**DCL     18114>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18106**DCL     18106--REDEF   18107--REDEF
B$JIT.PNR IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18010**DCL     18010--REDEF
B$JIT.TSLINE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18104**DCL     18105--REDEF
B$JIT$ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17507**DCL     17830--IMP-PTR 18114>>IF
BIRTH_KEY IN PROCEDURE GET_DEER_VERSION
     18397**DCL     18434--DCLINIT 18435--DCLINIT
B_RUBIRTH IN PROCEDURE GET_DEER_VERSION
     18403**DCL     18436--DCLINIT 18437--DCLINIT
B_RUBIRTH.CREATE_UTS IN PROCEDURE GET_DEER_VERSION
     18404**DCL     18476--DCLINIT
COMP_LINK_DATE IN PROCEDURE GET_DEER_VERSION
     18472**DCL     18484<>CALL
COMP_LINK_DATE.V IN PROCEDURE GET_DEER_VERSION
     18476**DCL     18472--DCLINIT
DEER_BREAKS IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17333**DCL     17384<>CALL
DEER_BREAKS.V IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17333**DCL     17333--DCLINIT
DEER_FAULTS IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17365**DCL     17385<>CALL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:81   
DEER_FAULTS.V IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17365**DCL     17365--DCLINIT
DEER_GETCMD
     16402**DCL     17383<>CALL    18141<>CALL    18294<>CALL
DEER_GETCMD.ERR#
     16413**DCL     18293>>ASSIGN
DEER_GETCMD.ERR#.CODE#
     16416**DCL     18295>>IF
DEER_GETCMD.ERR_CODE
     16550**DCL     18293<<ASSIGN
DEER_GETCMD.NODES$
     16403**DCL     17381<<ASSIGN  18140<<ASSIGN
DEER_GETCMD.OUT$
     16407**DCL     16413--REDEF   17382<<ASSIGN  18144>>ASSIGN
DEER_HELP
     16748**DCL     16440--DCLINIT
DEER_INIT IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16930**DCL     17383<>CALL
DEER_NAME
     16815**DCL     16752--DCLINIT
DEER_PCB
     16203**DCL     17063--DCLINIT
DEER_PROCESSING
     16871**LABEL   16868--REMEMBR
DEER_PROMPT
     16824**DCL     16611--DCLINIT
DEER_ROOT_NODE
     16823**DCL     17381--ASSIGN  18140--ASSIGN
DEER_TERMINATED
     16875**LABEL   16864--CALLALT 16865--CALLALT 16866--CALLALT
DE_CHECK_PROCESSING_MODE
     17505**PROC    16867--CALL
DE_EDIT_DECKFILE
     18134**PROC    16871--CALL
DE_END_MSG
     18318**PROC    16872--CALL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:82   
DE_FREE_BUFFERS
     18353**PROC    16875--CALL
DE_GET_BUFFERS
     17424**PROC    16864--CALL
DE_PROCESS_COMMAND IN PROCEDURE DE_EDIT_DECKFILE
     18184**PROC    18145--CALL
DE_PROCESS_ERROR IN PROCEDURE DE_EDIT_DECKFILE
     18289**PROC    18149--CALL
DE_SETUP_BREAK_HANDLER
     16903**PROC    16865--CALL
DE_START_MSG
     17473**PROC    16866--CALL
DUP.BATCH_MODE
     16037**DCL     18115<<ASSIGN  18116<<ASSIGN
DUP.BCD_V
     16106**DCL     17454<<ASSIGN  18366>>ASSIGN
DUP.BINARY_V
     16101**DCL     17449<<ASSIGN  18362>>ASSIGN
DUP.BREAK_DISABLED
     16155**DCL     18139<<ASSIGN  18143<<ASSIGN  18150<<ASSIGN
DUP.BREAK_RETURN
     16157**DCL     16868<<REMEMBR
DUP.CMD$
     16053**DCL     17382>>ASSIGN  18144<<ASSIGN  18192--IMP-PTR 18234>>DOCASE
DUP.DS_V
     16046**DCL     17435<<ASSIGN  17437>>ASSIGN  17442>>ASSIGN  17447<<ASSIGN  17449>>ASSIGN  17452<<ASSIGN
     17454>>ASSIGN  18358<<ASSIGN  18362<<ASSIGN  18366<<ASSIGN  18370<<ASSIGN
DUP.FAULT_ERROR
     16041**DCL     18300<<ASSIGN
DUP.LOG_V
     16135**DCL     16140--REDEF   17442<<ASSIGN  18370>>ASSIGN
DUP.LOG_V.PTR$
     16138**DCL     17443>>ASSIGN
DUP.LOG_V_
     16140**DCL     17443<<ASSIGN  17444<<ASSIGN
DUP.MSG_CODE
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:83   
     16056**DCL     17380<<ASSIGN  17478<<ASSIGN  18322<<ASSIGN
DUP.MSG_V
     16062**DCL     17437<<ASSIGN  18358>>ASSIGN
DUP.NUM_WORDS
     16044**DCL     17434<<ASSIGN  17440<<ASSIGN  17446<<ASSIGN  17451<<ASSIGN  18357<<ASSIGN  18361<<ASSIGN
     18365<<ASSIGN  18369<<ASSIGN
DUP.PROCESS_COMPLETE
     16039**DCL     18138>>DOWHILE 18268<<ASSIGN  18296<<ASSIGN  18302<<ASSIGN
ERROR IN PROCEDURE DE_GET_BUFFERS
     17459**LABEL   17436--CALLALT 17441--CALLALT 17448--CALLALT 17453--CALLALT
FAILURE IN PROCEDURE DE_START_MSG
     17483**LABEL   17479--CALLALT
GET_DEER_VERSION
     18395**PROC    17477--CALL
GET_LINK_DATE IN PROCEDURE GET_DEER_VERSION
     18434**DCL     18483<>CALL
GET_LINK_DATE.STATION_ IN PROCEDURE GET_DEER_VERSION
     18437**DCL     18438--REDEF
GET_LINK_DATE.V IN PROCEDURE GET_DEER_VERSION
     18438**DCL     18434--DCLINIT
GET_LINK_DATE.V.DVBYTE.REREAD# IN PROCEDURE GET_DEER_VERSION
     18449**DCL     18449--REDEF
GET_LINK_DATE.V.INDX# IN PROCEDURE GET_DEER_VERSION
     18447**DCL     18447--REDEF
LOG_LGTH IN PROCEDURE DE_GET_BUFFERS
     17429**DCL     17439<<ASSIGN  17440>>ASSIGN  17444>>ASSIGN
M$INT
      9587**DCL-ENT 17384--CALL
M$READ
      9533**DCL-ENT 18483--CALL
M$TIME
      9599**DCL-ENT 18484--CALL
M$TRAP
      9586**DCL-ENT 17385--CALL
MSG_ERR IN PROCEDURE DE_PROCESS_ERROR
     18300**LABEL   18294--CALLALT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:84   
MSG_LGTH IN PROCEDURE DE_GET_BUFFERS
     17428**DCL     17433<<ASSIGN  17434>>ASSIGN  17443>>ASSIGN
OUT$BLK.CODE IN PROCEDURE DE_PROCESS_COMMAND
     18200**DCL     18234>>DOCASE
SETUP_ERROR IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17392**LABEL   17384--CALLALT 17385--CALLALT
TOU$BREAK
     16831**DCL-ENT 17333--DCLINIT
TOU$BREAK_FOR_FAULT
     16832**DCL-ENT 17366--DCLINIT 17367--DCLINIT 17367--DCLINIT
TOU$BUILD
     16842**DCL-ENT 18238--CALL
TOU$DEER.LINK_DATE.ASCII
     16180**DCL     18472--DCLINIT 18473--DCLINIT
TOU$DEER.LINK_TIME
     16181**DCL     18474--DCLINIT 18475--DCLINIT
TOU$DELCAT
     16852**DCL-ENT 18258--CALL
TOU$DELDECK
     16850**DCL-ENT 18254--CALL
TOU$DELPATCH
     16851**DCL-ENT 18256--CALL
TOU$DU_FREE_DATA_SEGMENT
     16840**DCL-ENT 18359--CALL    18363--CALL    18367--CALL    18371--CALL
TOU$DU_GET_DATA_SEGMENT
     16839**DCL-ENT 17436--CALL    17441--CALL    17448--CALL    17453--CALL
TOU$DU_OPERATOR_WRITE
     16856**DCL-ENT 18266--CALL
TOU$DU_SYSTEM_ERRMSG
     16837**DCL-ENT 17393--CALL    18301--CALL
TOU$DU_USER_WRITE
     16835**DCL-ENT 17389--CALL    17392--CALL    17479--CALL    18323--CALL
TOU$LIST
     16843**DCL-ENT 18240--CALL
TOU$MERGE
     16855**DCL-ENT 18264--CALL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:85   
TOU$NEWCAT
     16846**DCL-ENT 18246--CALL
TOU$NEWDECK
     16847**DCL-ENT 18248--CALL
TOU$PATCH
     16853**DCL-ENT 18260--CALL
TOU$REMREF
     16849**DCL-ENT 18252--CALL
TOU$REPDECK
     16848**DCL-ENT 18250--CALL
TOU$SHOWDECK
     16844**DCL-ENT 18242--CALL
TOU$SHOWFILE
     16845**DCL-ENT 18244--CALL
TOU$UPDATE
     16854**DCL-ENT 18262--CALL
XTX$ADAPT IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16925**DCL-ENT 17241--DCLINIT
XUG$ERRMSG
     14879**DCL-ENT 18294--CALL
XUG$GETCMD
     14872**DCL-ENT 18141--CALL
XUG$INIT
     14876**DCL-ENT 17383--CALL
XUG_ERROR IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17389**LABEL   17383--CALLALT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:86   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:87   
              FULL UREF LISTING

B$JIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17830**DCL
B$JIT.ACCEPT_FLAGS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.ACCEPT_FLAGS.ANNOUNCE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.ACCEPT_FLAGS.BROADCAST IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.ACCEPT_FLAGS.SEND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.ACCESS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.ACCESS.FORMS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.ACCESS.PACKS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.ACCESS.TAPES IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.ACCN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.APATTR IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18108**DCL
B$JIT.ARECX IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.BILL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.BLINDACCTNG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.BUDLIM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17972**DCL
B$JIT.CALCNT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:88   
B$JIT.CCARS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17923**DCL
B$JIT.CCBUF IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17923**DCL
B$JIT.CCDISP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17923**DCL
B$JIT.CHECK_CFU IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18005**DCL
B$JIT.CLRES IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18102**DCL
B$JIT.CPFLAGS1 IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17924**DCL
B$JIT.CPFLAGS1.BRK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.BUFFULL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.CFREAD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.DELTA IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17929**DCL
B$JIT.CPFLAGS1.DONTRFEXT3 IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17925**DCL
B$JIT.CPFLAGS1.DRIBBLE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.ECHO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.ECHO_LINK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17925**DCL
B$JIT.CPFLAGS1.EXIT# IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.FIRSTCP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17926**DCL
B$JIT.CPFLAGS1.INITIALIZE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.JSTEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17924**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:89   
B$JIT.CPFLAGS1.KEEPDS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.LASTCP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17926**DCL
B$JIT.CPFLAGS1.LASTCPEXISTS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17926**DCL
B$JIT.CPFLAGS1.LNKPMME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17925**DCL
B$JIT.CPFLAGS1.LOGOFF IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17924**DCL
B$JIT.CPFLAGS1.NOTIFY IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.PROCACCT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.PROTECT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.RUND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17924**DCL
B$JIT.CPFLAGS1.SCREECH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.SKIPABORT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.SOMENOTIFY IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17926**DCL
B$JIT.CPFLAGS1.SSTART IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17925**DCL
B$JIT.CPFLAGS1.STARPROC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17926**DCL
B$JIT.CPFLAGS1.STARSACC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17926**DCL
B$JIT.CPFLAGS1.STEPACCT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.STEPLMT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17928**DCL
B$JIT.CPFLAGS1.TESTMODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17926**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:90   
B$JIT.CPFLAGS1.TRMNATE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17927**DCL
B$JIT.CPFLAGS1.WHEN_INPUT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17925**DCL
B$JIT.CPFLAGS1.YC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17924**DCL
B$JIT.CPFLAGS1.YCGET IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17925**DCL
B$JIT.CPFLAGS1.YCPMME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17925**DCL
B$JIT.CSLEV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17990**DCL
B$JIT.CTIME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18008**DCL
B$JIT.CURPNUM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18089**DCL
B$JIT.CURRCORE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17997**DCL
B$JIT.CURSUDO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18104**DCL
B$JIT.CURTMPDP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.DCB$ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.DCBNO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17916**DCL
B$JIT.DDLL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17993**DCL
B$JIT.DDUL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17993**DCL
B$JIT.DEFEXP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.DEFPRI IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.DLL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17993**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:91   
B$JIT.DO$ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.DUL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17993**DCL
B$JIT.ENQS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18108**DCL
B$JIT.ERR IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.ERR.CODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.ERR.FCG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.ERR.MON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.ERR.SEV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.ERR.UMID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.EUP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17995**DCL
B$JIT.EXTUS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18011**DCL
B$JIT.FACCN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.FACNACS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.FACNCM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18005**DCL
B$JIT.FBUC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17995**DCL
B$JIT.FBUL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17995**DCL
B$JIT.FEXT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.FPSN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17916**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:92   
B$JIT.FRS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18031**DCL
B$JIT.GAC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.HIGHPNUM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18089**DCL
B$JIT.HPSN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.IDELTAT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.INSTWORD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17923**DCL
B$JIT.INTER IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18102**DCL
B$JIT.INTTIME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18008**DCL
B$JIT.JOBNAME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17984**DCL
B$JIT.JOBUNIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17924**DCL
B$JIT.JORG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.JPEAK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17997**DCL
B$JIT.JSLEV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17972**DCL
B$JIT.JTMPDPPK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.JUNK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18035**DCL
B$JIT.JUNK2 IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18089**DCL
B$JIT.LANG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.LBJID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18011**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:93   
B$JIT.LLL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17999**DCL
B$JIT.LNKCNT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18035**DCL
B$JIT.LOCK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17984**DCL
B$JIT.LOGONTIME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17972**DCL
B$JIT.LUL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17999**DCL
B$JIT.MAXCORE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17996**DCL
B$JIT.MAXENQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18108**DCL
B$JIT.MAXEXP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.MAXPRI IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17983**DCL
B$JIT.MAXTMPDP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.MMFLGS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17996**DCL
B$JIT.MMFLGS.FREE_PPGS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17996**DCL
B$JIT.MOUNTS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.MRT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.MSGID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17984**DCL
B$JIT.MSGID.PRIMARY IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17984**DCL
B$JIT.MSGID.XT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17985**DCL
B$JIT.NEXTCC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17977**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:94   
B$JIT.NODOEVER IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18102**DCL
B$JIT.NOLOEVER IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18102**DCL
B$JIT.NOPOEVER IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18102**DCL
B$JIT.NUTS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18010**DCL
B$JIT.OLTA IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.ORIGINATOR_MODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18102**DCL
B$JIT.ORIGINATOR_PORT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18105**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.DEVICE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18106**DCL
B$JIT.ORIGINATOR_PORT.FROM_CR.TNAME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18106**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18106**DCL
B$JIT.ORIGINATOR_PORT.FROM_GHOST.SYSID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18106**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.SYSID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.ORIGINATOR_PORT.FROM_INT.TSLINE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.OUTPRIO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17916**DCL
B$JIT.PCADS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17999**DCL
B$JIT.PCC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17994**DCL
B$JIT.PCD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17994**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:95   
B$JIT.PCDD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17995**DCL
B$JIT.PCDDS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17998**DCL
B$JIT.PCDS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17994**DCL
B$JIT.PCL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17999**DCL
B$JIT.PCP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17994**DCL
B$JIT.PCROS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17994**DCL
B$JIT.PCV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17999**DCL
B$JIT.PLL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17993**DCL
B$JIT.PMEMTIM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.PMME_COUNT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.PMME_DATA IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.PMME_DATA.CPU IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.PMME_DATA.I_O IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.PMME_DATA.MISC1 IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18107**DCL
B$JIT.PMME_DATA.MISC2 IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18108**DCL
B$JIT.PPC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17996**DCL
B$JIT.PPRIV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PPRIV.CNTRLC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:96   
B$JIT.PPRIV.CNTRLD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PPRIV.EFT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PPRIV.EL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PPRIV.LABEL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.NETCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.PADMIN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
B$JIT.PPRIV.PIGC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.PIGD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.PIGETTE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17894**DCL
B$JIT.PPRIV.RATES IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
B$JIT.PPRIV.REPLAY IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
B$JIT.PPRIV.SPIDERC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.SPIDERD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.SUPER IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.SUPERAUTH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17892**DCL
B$JIT.PPRIV.SUPERD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
B$JIT.PPRIV.SUPERFORM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
B$JIT.PPRIV.SUPERWSN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:97   
B$JIT.PPRIV.SYSCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
B$JIT.PPRIV.VOLINIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17893**DCL
B$JIT.PRDPRM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.PRFLAGS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.COMMENT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.CONTINUED IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.CORRECT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17920**DCL
B$JIT.PRFLAGS.EXPOUND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17920**DCL
B$JIT.PRFLAGS.LIST IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.LS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.NOSCAN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17920**DCL
B$JIT.PRFLAGS.NSSYNTAX IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.OU IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.OUTPUT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.POINT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17920**DCL
B$JIT.PRFLAGS.POSITION IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17920**DCL
B$JIT.PRFLAGS.SI IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
B$JIT.PRFLAGS.UI IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17919**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:98   
B$JIT.PRFLAGS.WHEN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17920**DCL
B$JIT.PRIINC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18010**DCL
B$JIT.PRIOB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18008**DCL
B$JIT.PRIOCORE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17996**DCL
B$JIT.PRIOR_CP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18099**DCL
B$JIT.PRIV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.PRIV.ACTIVE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.PRIV.ACTIVE.ASAVE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17838**DCL
B$JIT.PRIV.ACTIVE.CFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.CQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.DISPJOB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17838**DCL
B$JIT.PRIV.ACTIVE.DOMANE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17837**DCL
B$JIT.PRIV.ACTIVE.EXMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17840**DCL
B$JIT.PRIV.ACTIVE.EXPM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.FMBLK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.PRIV.ACTIVE.FMDIAG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17837**DCL
B$JIT.PRIV.ACTIVE.FMEFT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17836**DCL
B$JIT.PRIV.ACTIVE.FMREAD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17837**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:99   
B$JIT.PRIV.ACTIVE.FMSEC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17837**DCL
B$JIT.PRIV.ACTIVE.GPP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17838**DCL
B$JIT.PRIV.ACTIVE.INTCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.IOQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.IOQW IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.JIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17840**DCL
B$JIT.PRIV.ACTIVE.MAXMEM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17840**DCL
B$JIT.PRIV.ACTIVE.MFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.MODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17837**DCL
B$JIT.PRIV.ACTIVE.MSYS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17840**DCL
B$JIT.PRIV.ACTIVE.PM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.SCREECH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17838**DCL
B$JIT.PRIV.ACTIVE.SNAP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17838**DCL
B$JIT.PRIV.ACTIVE.SPCLMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17840**DCL
B$JIT.PRIV.ACTIVE.SYSACCT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17837**DCL
B$JIT.PRIV.ACTIVE.SYSCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17838**DCL
B$JIT.PRIV.ACTIVE.SYSLOG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
B$JIT.PRIV.ACTIVE.TND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17839**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:100  
B$JIT.PRIV.AUTH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.ASAVE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17877**DCL
B$JIT.PRIV.AUTH.CFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.CQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.DISPJOB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17877**DCL
B$JIT.PRIV.AUTH.DOMANE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.EXMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.AUTH.EXPM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.FMBLK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.FMDIAG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.FMEFT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.FMREAD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.FMSEC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.GPP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.INTCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.IOQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.IOQW IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.JIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:101  
B$JIT.PRIV.AUTH.MAXMEM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.AUTH.MFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.MODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.MSYS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.AUTH.PM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.AUTH.SCREECH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17877**DCL
B$JIT.PRIV.AUTH.SNAP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17877**DCL
B$JIT.PRIV.AUTH.SPCLMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.AUTH.SYSACCT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17876**DCL
B$JIT.PRIV.AUTH.SYSCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17877**DCL
B$JIT.PRIV.AUTH.SYSLOG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17878**DCL
B$JIT.PRIV.AUTH.TND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.JOB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.JOB.ASAVE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17881**DCL
B$JIT.PRIV.JOB.CFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.CQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.DISPJOB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17881**DCL
B$JIT.PRIV.JOB.DOMANE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17880**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:102  
B$JIT.PRIV.JOB.EXMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.JOB.EXPM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.FMBLK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17880**DCL
B$JIT.PRIV.JOB.FMDIAG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17880**DCL
B$JIT.PRIV.JOB.FMEFT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17879**DCL
B$JIT.PRIV.JOB.FMREAD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17880**DCL
B$JIT.PRIV.JOB.FMSEC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17880**DCL
B$JIT.PRIV.JOB.GPP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17881**DCL
B$JIT.PRIV.JOB.INTCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.IOQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.IOQW IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.JIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.JOB.MAXMEM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.JOB.MFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.MODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17880**DCL
B$JIT.PRIV.JOB.MSYS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.JOB.PM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.SCREECH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17881**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:103  
B$JIT.PRIV.JOB.SNAP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17881**DCL
B$JIT.PRIV.JOB.SPCLMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.JOB.SYSACCT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17880**DCL
B$JIT.PRIV.JOB.SYSCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17881**DCL
B$JIT.PRIV.JOB.SYSLOG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17882**DCL
B$JIT.PRIV.JOB.TND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.PRC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.PRC.ASAVE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17885**DCL
B$JIT.PRIV.PRC.CFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.CQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.DISPJOB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17885**DCL
B$JIT.PRIV.PRC.DOMANE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17884**DCL
B$JIT.PRIV.PRC.EXMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.PRC.EXPM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.FMBLK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.PRC.FMDIAG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17884**DCL
B$JIT.PRIV.PRC.FMEFT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17883**DCL
B$JIT.PRIV.PRC.FMREAD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17884**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:104  
B$JIT.PRIV.PRC.FMSEC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17884**DCL
B$JIT.PRIV.PRC.GPP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17885**DCL
B$JIT.PRIV.PRC.INTCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.IOQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.IOQW IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.JIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.PRC.MAXMEM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.PRC.MFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.MODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17884**DCL
B$JIT.PRIV.PRC.MSYS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.PRC.PM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
B$JIT.PRIV.PRC.SCREECH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17885**DCL
B$JIT.PRIV.PRC.SNAP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17885**DCL
B$JIT.PRIV.PRC.SPCLMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.PRC.SYSACCT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17884**DCL
B$JIT.PRIV.PRC.SYSCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17885**DCL
B$JIT.PRIV.PRC.SYSLOG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17885**DCL
B$JIT.PRIV.PRC.TND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17886**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:105  
B$JIT.PRIV.SAVED IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.SAVED.ASAVE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17889**DCL
B$JIT.PRIV.SAVED.CFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.CQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.DISPJOB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17889**DCL
B$JIT.PRIV.SAVED.DOMANE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17888**DCL
B$JIT.PRIV.SAVED.EXMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PRIV.SAVED.EXPM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.FMBLK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.SAVED.FMDIAG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17888**DCL
B$JIT.PRIV.SAVED.FMEFT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.SAVED.FMREAD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17888**DCL
B$JIT.PRIV.SAVED.FMSEC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17887**DCL
B$JIT.PRIV.SAVED.GPP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17889**DCL
B$JIT.PRIV.SAVED.INTCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.IOQ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.IOQW IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.JIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:106  
B$JIT.PRIV.SAVED.MAXMEM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PRIV.SAVED.MFEP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.MODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17888**DCL
B$JIT.PRIV.SAVED.MSYS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PRIV.SAVED.PM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PRIV.SAVED.SCREECH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17889**DCL
B$JIT.PRIV.SAVED.SNAP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17889**DCL
B$JIT.PRIV.SAVED.SPCLMM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17891**DCL
B$JIT.PRIV.SAVED.SYSACCT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17888**DCL
B$JIT.PRIV.SAVED.SYSCON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17889**DCL
B$JIT.PRIV.SAVED.SYSLOG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17889**DCL
B$JIT.PRIV.SAVED.TND IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17890**DCL
B$JIT.PROG_ENTRY IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17985**DCL
B$JIT.PROMPTS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17984**DCL
B$JIT.PSEUDOPGS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17998**DCL
B$JIT.PSEUDO_COUNT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18099**DCL
B$JIT.PSEUDO_TEXT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18099**DCL
B$JIT.PSLEV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17972**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:107  
B$JIT.PTSIZ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17999**DCL
B$JIT.PUL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17993**DCL
B$JIT.QUAN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18008**DCL
B$JIT.REMCPO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18108**DCL
B$JIT.REMDO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18108**DCL
B$JIT.REMLO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18108**DCL
B$JIT.RERUN IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18010**DCL
B$JIT.RESCORE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18104**DCL
B$JIT.RESPEAK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17998**DCL
B$JIT.RNST IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18014**DCL
B$JIT.RUNFLAGS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18031**DCL
B$JIT.SAVEDCB$ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18005**DCL
B$JIT.SCHTIME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18008**DCL
B$JIT.SINPUTSZ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17984**DCL
B$JIT.SPEAK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17997**DCL
B$JIT.SRESPEAK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17998**DCL
B$JIT.SSLEV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17972**DCL
B$JIT.STAR IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:108  
B$JIT.STAR.DA IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18003**DCL
B$JIT.STDLOPGS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18103**DCL
B$JIT.STEPCC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18062**DCL
B$JIT.STEPS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18056**DCL
B$JIT.STEPUNIT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17924**DCL
B$JIT.STIME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18008**DCL
B$JIT.STMPDPPK IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.SVLDTF IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18076**DCL
B$JIT.SVTUS IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18011**DCL
B$JIT.SWITCH IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17923**DCL
B$JIT.SYSID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.TDP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17995**DCL
B$JIT.TMPGAC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.TMPGAC.N IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.TMPGAC.TIME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18004**DCL
B$JIT.TPEXT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.TPSVT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.TSLINE.FEX IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18104**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:109  
B$JIT.TSLINE.LEV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18105**DCL
B$JIT.TSLINE.PORT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18104**DCL
B$JIT.TSLINE.SPEED IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18104**DCL
B$JIT.TSLINE.SUBDEVICE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18105**DCL
B$JIT.TSLINE.SUBSUBDEVICE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18105**DCL
B$JIT.TSLINE.TTYP IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18105**DCL
B$JIT.TUEXT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.TUSVT IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.UMEMTIM IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18009**DCL
B$JIT.UNAME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.USER IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.USERWORD IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17923**DCL
B$JIT.USRDCB IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17984**DCL
B$JIT.USRERR IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.USRERR.CODE IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.USRERR.FCG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.USRERR.MID IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.USRERR.MON IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:110  
B$JIT.USRERR.SEV IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.USRIC IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17972**DCL
B$JIT.USRRNST IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17971**DCL
B$JIT.UTIMER IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18010**DCL
B$JIT.VIRTUAL IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18000**DCL
B$JIT.VIRTUAL.DCB# IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18000**DCL
B$JIT.WOO IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17835**DCL
B$JIT.XCONF IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18056**DCL
B$JIT.XLIMFLG IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18066**DCL
B$JIT.XTIME IN PROCEDURE DE_CHECK_PROCESSING_MODE
     18008**DCL
B$JIT.YC0SZ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17972**DCL
B$JIT.YC2SZ IN PROCEDURE DE_CHECK_PROCESSING_MODE
     17990**DCL
B_RUBIRTH.COUNT IN PROCEDURE GET_DEER_VERSION
     18408**DCL
B_RUBIRTH.RUMED_UTS IN PROCEDURE GET_DEER_VERSION
     18406**DCL
CC IN PROCEDURE GET_DEER_VERSION
     18400**DCL
COMP_LINK_DATE.DATE_ IN PROCEDURE GET_DEER_VERSION
     18472**DCL
COMP_LINK_DATE.DATE_.BOUND IN PROCEDURE GET_DEER_VERSION
     18472**DCL
COMP_LINK_DATE.DATE_.DATE$ IN PROCEDURE GET_DEER_VERSION
     18473**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:111  
COMP_LINK_DATE.DAY_ IN PROCEDURE GET_DEER_VERSION
     18475**DCL
COMP_LINK_DATE.TIME_ IN PROCEDURE GET_DEER_VERSION
     18474**DCL
COMP_LINK_DATE.TIME_.BOUND IN PROCEDURE GET_DEER_VERSION
     18474**DCL
COMP_LINK_DATE.TIME_.TIME$ IN PROCEDURE GET_DEER_VERSION
     18475**DCL
COMP_LINK_DATE.TSTAMP_ IN PROCEDURE GET_DEER_VERSION
     18475**DCL
COMP_LINK_DATE.V.DEST# IN PROCEDURE GET_DEER_VERSION
     18476**DCL
COMP_LINK_DATE.V.DEST_BASIS# IN PROCEDURE GET_DEER_VERSION
     18477**DCL
COMP_LINK_DATE.V.SOURCE# IN PROCEDURE GET_DEER_VERSION
     18476**DCL
COMP_LINK_DATE.V.SOURCE_BASIS# IN PROCEDURE GET_DEER_VERSION
     18477**DCL
COMP_LINK_DATE.V_ IN PROCEDURE GET_DEER_VERSION
     18472**DCL
DEER_BREAKS.V.UENTRY# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17333**DCL
DEER_BREAKS.V_ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17333**DCL
DEER_FAULTS.PTC_ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17365**DCL
DEER_FAULTS.V.ARITHMETIC# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17366**DCL
DEER_FAULTS.V.ERRORS# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17367**DCL
DEER_FAULTS.V.FLAGS IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17367**DCL
DEER_FAULTS.V.FLAGS.COMMAND# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17371**DCL
DEER_FAULTS.V.FLAGS.DERAIL# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17369**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:112  
DEER_FAULTS.V.FLAGS.DIVIDE_CHECK# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17368**DCL
DEER_FAULTS.V.FLAGS.FAULT_TAG# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17369**DCL
DEER_FAULTS.V.FLAGS.HARDWARE# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17374**DCL
DEER_FAULTS.V.FLAGS.HISTORY_REGS# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17374**DCL
DEER_FAULTS.V.FLAGS.IPR# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17372**DCL
DEER_FAULTS.V.FLAGS.LOCKUP# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17372**DCL
DEER_FAULTS.V.FLAGS.MEMORY# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17371**DCL
DEER_FAULTS.V.FLAGS.MISSING_PAGE# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17373**DCL
DEER_FAULTS.V.FLAGS.MISSING_SEG# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17372**DCL
DEER_FAULTS.V.FLAGS.MME# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17368**DCL
DEER_FAULTS.V.FLAGS.OVERFLOW# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17367**DCL
DEER_FAULTS.V.FLAGS.RESTORE# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17370**DCL
DEER_FAULTS.V.FLAGS.SECURITY_1# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17370**DCL
DEER_FAULTS.V.FLAGS.SECURITY_2# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17373**DCL
DEER_FAULTS.V.PMME# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17366**DCL
DEER_FAULTS.V.PROGRAMMED# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17366**DCL
DEER_FAULTS.V_ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17365**DCL
DEER_GETCMD.ALWAYS_SET_PROMPT#
     16490**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:113  
DEER_GETCMD.BUF$
     16679**DCL
DEER_GETCMD.CONTINUED#
     16462**DCL
DEER_GETCMD.CONTINUE_OK#
     16466**DCL
DEER_GETCMD.DCB2_PARAM#
     16587**DCL
DEER_GETCMD.DCB_PARAM#
     16582**DCL
DEER_GETCMD.DISP#
     16593**DCL
DEER_GETCMD.ECHO
     16522**DCL
DEER_GETCMD.EOMCHAR#
     16542**DCL
DEER_GETCMD.EPOS#
     16512**DCL
DEER_GETCMD.ERR#.FCG#
     16414**DCL
DEER_GETCMD.ERR#.MON#
     16415**DCL
DEER_GETCMD.ERR#.SEV#
     16417**DCL
DEER_GETCMD.ERRDCB#
     16561**DCL
DEER_GETCMD.ERRMFID$
     16421**DCL
DEER_GETCMD.ERRMSG_VFC#
     16517**DCL
DEER_GETCMD.ERR_CODE.CODE#
     16553**DCL
DEER_GETCMD.ERR_CODE.FCG#
     16551**DCL
DEER_GETCMD.ERR_CODE.MON#
     16552**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:114  
DEER_GETCMD.ERR_CODE.SEV#
     16554**DCL
DEER_GETCMD.F1_
     16599**DCL
DEER_GETCMD.F2_
     16603**DCL
DEER_GETCMD.F3_
     16607**DCL
DEER_GETCMD.FLGLEV#
     16507**DCL
DEER_GETCMD.FPT$
     16699**DCL
DEER_GETCMD.INDCB#
     16573**DCL
DEER_GETCMD.INFOMSG#
     16498**DCL
DEER_GETCMD.NLINES
     16718**DCL
DEER_GETCMD.OUTDCB#
     16578**DCL
DEER_GETCMD.PASS
     16532**DCL
DEER_GETCMD.PCB$
     16427**DCL
DEER_GETCMD.PP_FUN$$
     16620**DCL
DEER_GETCMD.PP_ROOT$
     16707**DCL
DEER_GETCMD.PROMPT_
     16611**DCL
DEER_GETCMD.PROMPT_VFC#
     16477**DCL
DEER_GETCMD.RCVD_PROMPT#
     16472**DCL
DEER_GETCMD.READR$$
     16625**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:115  
DEER_GETCMD.RFU10#
     16723**DCL
DEER_GETCMD.RFU11#
     16724**DCL
DEER_GETCMD.RFU12#
     16725**DCL
DEER_GETCMD.RFU2$
     16678**DCL
DEER_GETCMD.RFU9#
     16722**DCL
DEER_GETCMD.RFUBIT2
     16541**DCL
DEER_GETCMD.RFUBYTE
     16549**DCL
DEER_GETCMD.RLT$
     16684**DCL
DEER_GETCMD.RPROMPT_
     16615**DCL
DEER_GETCMD.SFROUTINE$
     16652**DCL
DEER_GETCMD.SKIP_PREPROCESS#
     16483**DCL
DEER_GETCMD.SYNERR_NODES$
     16691**DCL
DEER_GETCMD.TEXT_
     16665**DCL
DEER_GETCMD.TREAD#
     16451**DCL
DEER_GETCMD.USE_EPOS#
     16445**DCL
DEER_GETCMD.UTIL$
     16703**DCL
DEER_GETCMD.WORK$
     16435**DCL
DEER_GETCMD.XT_PARAM$
     16671**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:116  
DEER_GETCMD.XUH$
     16440**DCL
DEER_HELP.ALL#
     16760**DCL
DEER_HELP.CHARPOS
     16772**DCL
DEER_HELP.ERR
     16765**DCL
DEER_HELP.ERR.ERR#
     16769**DCL
DEER_HELP.ERR.FCG
     16766**DCL
DEER_HELP.ERR.MID
     16767**DCL
DEER_HELP.ERR.MON
     16768**DCL
DEER_HELP.ERR.SEV
     16770**DCL
DEER_HELP.ERR_DCB#
     16771**DCL
DEER_HELP.FPT_VERSION
     16786**DCL
DEER_HELP.HELP$
     16758**DCL
DEER_HELP.HELP_CODE#
     16773**DCL
DEER_HELP.HELP_CODE#.LEN
     16774**DCL
DEER_HELP.HELP_CODE#.PACCT
     16779**DCL
DEER_HELP.HELP_CODE#.PNAME
     16776**DCL
DEER_HELP.HELP_CODE#.PNAME.LEN
     16777**DCL
DEER_HELP.HELP_CODE#.PNAME.TEXT
     16778**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:117  
DEER_HELP.HELP_CODE#.PPASS
     16780**DCL
DEER_HELP.HELP_CODE#.PPSN
     16781**DCL
DEER_HELP.HELP_CODE#.TEXT
     16775**DCL
DEER_HELP.KEYWORD_
     16755**DCL
DEER_HELP.MORE#
     16761**DCL
DEER_HELP.OTHER_PROC#
     16763**DCL
DEER_HELP.OUTDCB1#
     16756**DCL
DEER_HELP.OUTDCB2#
     16757**DCL
DEER_HELP.PROCACCT_
     16753**DCL
DEER_HELP.PROCNAME_
     16752**DCL
DEER_HELP.PROCPASS_
     16754**DCL
DEER_HELP.PROCPSN_
     16782**DCL
DEER_HELP.RESERVED
     16787**DCL
DEER_HELP.SPARE1_
     16785**DCL
DEER_HELP.SPARE2_
     16784**DCL
DEER_HELP.SPARE3_
     16783**DCL
DEER_HELP.TOPICS#
     16762**DCL
DEER_HELP.VFC#
     16759**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:118  
DEER_INIT.ABORT$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16931**DCL
DEER_INIT.ADAPT$$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17241**DCL
DEER_INIT.ADDL_NRECS# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17087**DCL
DEER_INIT.ALWAYS_SET_PROMPT# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17209**DCL
DEER_INIT.BRKMSG$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16946**DCL
DEER_INIT.CMDSZ# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17081**DCL
DEER_INIT.COMMANDS# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17138**DCL
DEER_INIT.CONTINUE$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16939**DCL
DEER_INIT.DONT_REREAD_CCBUF# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17224**DCL
DEER_INIT.DONT_STRIP_PROMPT# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17232**DCL
DEER_INIT.ECHO# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17101**DCL
DEER_INIT.GOODCMD# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17192**DCL
DEER_INIT.INHIBITS IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17262**DCL
DEER_INIT.INHIBITS.DATE# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17263**DCL
DEER_INIT.INHIBITS.DIRECTORY# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17268**DCL
DEER_INIT.INHIBITS.DO# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17273**DCL
DEER_INIT.INHIBITS.END# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17278**DCL
DEER_INIT.INHIBITS.ENTER# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17313**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:119  
DEER_INIT.INHIBITS.ERASE# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17283**DCL
DEER_INIT.INHIBITS.HELP# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17288**DCL
DEER_INIT.INHIBITS.NULL# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17293**DCL
DEER_INIT.INHIBITS.OUTPUT# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17298**DCL
DEER_INIT.INHIBITS.PRINT# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17303**DCL
DEER_INIT.INHIBITS.QMARK# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17308**DCL
DEER_INIT.INIT_NRECS# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17094**DCL
DEER_INIT.MOREMEM$$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17004**DCL
DEER_INIT.NO_DOWNGRADE# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17215**DCL
DEER_INIT.PARAMS$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17046**DCL
DEER_INIT.PASS# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17111**DCL
DEER_INIT.PCB$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17063**DCL
DEER_INIT.POST_EXEC$$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16986**DCL
DEER_INIT.PPCB$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17070**DCL
DEER_INIT.PP_DCB# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17119**DCL
DEER_INIT.PP_PROCNAME_ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17075**DCL
DEER_INIT.PP_ROOT$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17254**DCL
DEER_INIT.PREPROCESS# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17173**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:120  
DEER_INIT.PREPROCESSOR$$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17026**DCL
DEER_INIT.PRE_EXEC$$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16968**DCL
DEER_INIT.PROCACCT_ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17040**DCL
DEER_INIT.PROCNAME_ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17035**DCL
DEER_INIT.REQ_PROMPT# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17180**DCL
DEER_INIT.RFU10# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17317**DCL
DEER_INIT.RFU11# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17318**DCL
DEER_INIT.RFU12# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17319**DCL
DEER_INIT.RFU2$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17250**DCL
DEER_INIT.RFU3$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17251**DCL
DEER_INIT.RFU4$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17252**DCL
DEER_INIT.RFU5$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17253**DCL
DEER_INIT.RFU6$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17259**DCL
DEER_INIT.RFU7$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17260**DCL
DEER_INIT.RFU8$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17261**DCL
DEER_INIT.RFUBIT IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17240**DCL
DEER_INIT.SPELLING# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17204**DCL
DEER_INIT.SPHANDLE$ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     16953**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:121  
DEER_INIT.SYNTAX# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17187**DCL
DEER_INIT.WORK_ IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17050**DCL
DEER_INIT.WSEG# IN PROCEDURE DE_SETUP_BREAK_HANDLER
     17128**DCL
DEER_NAME.L#
     16815**DCL
DEER_NAME.NAME#
     16815**DCL
DEER_PCB.BLANKONLY
     16290**DCL
DEER_PCB.CMPRS
     16238**DCL
DEER_PCB.COMMENT
     16317**DCL
DEER_PCB.COMMENT.LEAD
     16321**DCL
DEER_PCB.COMMENT.TRAIL
     16329**DCL
DEER_PCB.CONTINUE
     16244**DCL
DEER_PCB.DYNMEM
     16270**DCL
DEER_PCB.ERROR
     16307**DCL
DEER_PCB.ERROR.CODE
     16315**DCL
DEER_PCB.ERROR.FCG
     16312**DCL
DEER_PCB.ERROR.MID
     16313**DCL
DEER_PCB.ERROR.MON
     16314**DCL
DEER_PCB.ERROR.SEV
     16316**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:122  
DEER_PCB.HINODE$
     16361**DCL
DEER_PCB.HI_CHAR
     16354**DCL
DEER_PCB.KEYWORDS
     16275**DCL
DEER_PCB.NCHARS
     16350**DCL
DEER_PCB.NOLEADBLANKS
     16248**DCL
DEER_PCB.NXT
     16253**DCL
DEER_PCB.NXT_SZONLY
     16298**DCL
DEER_PCB.OUT$
     16216**DCL
DEER_PCB.OUTDCB#
     16345**DCL
DEER_PCB.OUTENT$
     16376**DCL
DEER_PCB.ROOT$
     16208**DCL
DEER_PCB.TEXT$
     16204**DCL
DEER_PCB.U$$
     16221**DCL
DEER_PCB.USER$
     16370**DCL
DEER_PCB.VERSION_CODE
     16340**DCL
DEER_PCB.WKSZ
     16233**DCL
DEER_PCB.WK_USED
     16336**DCL
DEER_PCB.WORK$
     16212**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:123  
DUP
     16035**DCL
DUP.BCD_V.PTR$
     16109**DCL
DUP.BINARY_V.PTR$
     16104**DCL
DUP.BOTTOM_LINE#
     16073**DCL
DUP.BREAK_TERMINATE
     16153**DCL
DUP.CPU_TYPE
     16166**DCL
DUP.CURRENT_LINE#
     16071**DCL
DUP.CURRENT_PAGE#
     16069**DCL
DUP.DF
     16112**DCL
DUP.DF.CLOSE_TYPE
     16121**DCL
DUP.DF.ENTERED
     16113**DCL
DUP.DF.FID
     16123**DCL
DUP.DF.FID_LGTH
     16125**DCL
DUP.DF.NO_EXIST
     16115**DCL
DUP.DF.OPEN_TYPE
     16119**DCL
DUP.DF.REPORT_ERROR
     16117**DCL
DUP.ERROR_IMAGE
     16075**DCL
DUP.FORCE_NEW_PAGE
     16077**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:124  
DUP.HDR_CODE
     16058**DCL
DUP.HOLD_AREA
     16148**DCL
DUP.HOLD_AREA_LGTH
     16150**DCL
DUP.IFAD
     16080**DCL
DUP.IFAD.CONFIG_TAB
     16089**DCL
DUP.IFAD.DEVICE_INPUT
     16085**DCL
DUP.IFAD.DRIVE_NUMBER
     16095**DCL
DUP.IFAD.ENTERED
     16083**DCL
DUP.IFAD.FID
     16097**DCL
DUP.IFAD.FID_LGTH
     16099**DCL
DUP.IFAD.IMU_NUMBER
     16093**DCL
DUP.IFAD.IMU_TAB
     16087**DCL
DUP.IFAD.ME_ALLOWED
     16081**DCL
DUP.IFAD.NUM_VOLUMES
     16091**DCL
DUP.LINE_VFC
     16067**DCL
DUP.LOG
     16128**DCL
DUP.LOG.CATALOG
     16131**DCL
DUP.LOG.DECK
     16133**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:125  
DUP.LOG.TYPE
     16129**DCL
DUP.MSG_V.PTR$
     16065**DCL
DUP.NUM_LINES
     16060**DCL
DUP.RESPONSE
     16049**DCL
DUP.RESPONSE_LGTH
     16051**DCL
DUP.SITE_ID
     16164**DCL
DUP.SITE_NAME
     16159**DCL
DUP.SITE_NAME.LGTH
     16160**DCL
DUP.SITE_NAME.TEXT
     16162**DCL
DUP.TEMP
     16142**DCL
DUP.TEMP.CLOSE_TYPE
     16145**DCL
DUP.TEMP.OPEN_TYPE
     16143**DCL
GET_LINK_DATE.BUF_ IN PROCEDURE GET_DEER_VERSION
     18436**DCL
GET_LINK_DATE.BUF_.BOUND IN PROCEDURE GET_DEER_VERSION
     18436**DCL
GET_LINK_DATE.BUF_.BUF$ IN PROCEDURE GET_DEER_VERSION
     18437**DCL
GET_LINK_DATE.IDBUF_ IN PROCEDURE GET_DEER_VERSION
     18438**DCL
GET_LINK_DATE.KEY_ IN PROCEDURE GET_DEER_VERSION
     18434**DCL
GET_LINK_DATE.KEY_.BOUND IN PROCEDURE GET_DEER_VERSION
     18434**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:126  
GET_LINK_DATE.KEY_.KEY$ IN PROCEDURE GET_DEER_VERSION
     18435**DCL
GET_LINK_DATE.V.DCB# IN PROCEDURE GET_DEER_VERSION
     18438**DCL
GET_LINK_DATE.V.DVBYTE IN PROCEDURE GET_DEER_VERSION
     18448**DCL
GET_LINK_DATE.V.DVBYTE.BIN# IN PROCEDURE GET_DEER_VERSION
     18449**DCL
GET_LINK_DATE.V.DVBYTE.BP# IN PROCEDURE GET_DEER_VERSION
     18448**DCL
GET_LINK_DATE.V.DVBYTE.CONT# IN PROCEDURE GET_DEER_VERSION
     18451**DCL
GET_LINK_DATE.V.DVBYTE.NODAT# IN PROCEDURE GET_DEER_VERSION
     18450**DCL
GET_LINK_DATE.V.DVBYTE.TOP# IN PROCEDURE GET_DEER_VERSION
     18448**DCL
GET_LINK_DATE.V.DVBYTE.TRANS# IN PROCEDURE GET_DEER_VERSION
     18450**DCL
GET_LINK_DATE.V.DVBYTE.VFC# IN PROCEDURE GET_DEER_VERSION
     18449**DCL
GET_LINK_DATE.V.EVENT# IN PROCEDURE GET_DEER_VERSION
     18447**DCL
GET_LINK_DATE.V.FULL# IN PROCEDURE GET_DEER_VERSION
     18440**DCL
GET_LINK_DATE.V.ID# IN PROCEDURE GET_DEER_VERSION
     18439**DCL
GET_LINK_DATE.V.IDS# IN PROCEDURE GET_DEER_VERSION
     18440**DCL
GET_LINK_DATE.V.IOERROK# IN PROCEDURE GET_DEER_VERSION
     18441**DCL
GET_LINK_DATE.V.KEYCHNG# IN PROCEDURE GET_DEER_VERSION
     18440**DCL
GET_LINK_DATE.V.KEYR# IN PROCEDURE GET_DEER_VERSION
     18439**DCL
GET_LINK_DATE.V.KEYS# IN PROCEDURE GET_DEER_VERSION
     18439**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:127  
GET_LINK_DATE.V.KEYTYPE# IN PROCEDURE GET_DEER_VERSION
     18447**DCL
GET_LINK_DATE.V.ODFNC# IN PROCEDURE GET_DEER_VERSION
     18452**DCL
GET_LINK_DATE.V.RECNUM# IN PROCEDURE GET_DEER_VERSION
     18452**DCL
GET_LINK_DATE.V.REREADPOS# IN PROCEDURE GET_DEER_VERSION
     18453**DCL
GET_LINK_DATE.V.SEED# IN PROCEDURE GET_DEER_VERSION
     18448**DCL
GET_LINK_DATE.V.SINPUTSIZE# IN PROCEDURE GET_DEER_VERSION
     18452**DCL
GET_LINK_DATE.V.STRPVFC# IN PROCEDURE GET_DEER_VERSION
     18451**DCL
GET_LINK_DATE.V.WAIT# IN PROCEDURE GET_DEER_VERSION
     18438**DCL
GET_LINK_DATE.V_ IN PROCEDURE GET_DEER_VERSION
     18434**DCL
M$ACCT
      9549**DCL-ENT
M$ACTIVATE
      9552**DCL-ENT
M$ALIB
      9545**DCL-ENT
M$ASUSER
      9547**DCL-ENT
M$ATTACH
      9554**DCL-ENT
M$BADPP
      9572**DCL-ENT
M$CGCTL
      9553**DCL-ENT
M$CGINFO
      9553**DCL-ENT
M$CHECK
      9534**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:128  
M$CHGUNIT
      9592**DCL-ENT
M$CLOSE
      9532**DCL-ENT
M$CLRSTK
      9590**DCL-ENT
M$CMDVAR
      9601**DCL-ENT
M$CONFIG
      9562**DCL-ENT
M$CORRES
      9537**DCL-ENT
M$CPEXIT
      9546**DCL-ENT
M$CVM
      9570**DCL-ENT
M$CVOL
      9535**DCL-ENT
M$DCLFLD
      9562**DCL-ENT
M$DEACTIVATE
      9552**DCL-ENT
M$DELREC
      9534**DCL-ENT
M$DEQ
      9599**DCL-ENT
M$DETACH
      9554**DCL-ENT
M$DEVICE
      9536**DCL-ENT
M$DISPLAY
      9599**DCL-ENT
M$DISPRES
      9539**DCL-ENT
M$DLIB
      9545**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:129  
M$DO
     16820**DCL
M$DRIBBLE
      9562**DCL-ENT
M$DRTN
      9590**DCL-ENT
M$DSUSER
      9547**DCL-ENT
M$ENQ
      9598**DCL-ENT
M$EOM
      9557**DCL-ENT
M$ERASE
      9563**DCL-ENT
M$ERR
      9544**DCL-ENT
M$ERRMSG
      9595**DCL-ENT
M$EVENT
      9587**DCL-ENT
M$EXHUME
      9596**DCL-ENT
M$EXIT
      9544**DCL-ENT
M$EXTEND
      9536**DCL-ENT
M$FDP
      9568**DCL-ENT
M$FDS
      9567**DCL-ENT
M$FEBOOT
      9560**DCL-ENT
M$FECTL
      9561**DCL-ENT
M$FEDUMP
      9560**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:130  
M$FID
      9595**DCL-ENT
M$FINDPROC
      9549**DCL-ENT
M$FSUSER
      9547**DCL-ENT
M$FVP
      9569**DCL-ENT
M$FWCG
      9553**DCL-ENT
M$GBPL
      9573**DCL-ENT
M$GDDL
      9569**DCL-ENT
M$GDP
      9568**DCL-ENT
M$GDS
      9567**DCL-ENT
M$GETDCB
      9538**DCL-ENT
M$GETMOUSE
      9578**DCL-ENT
M$GETPM
      9579**DCL-ENT
M$GJOB
      9597**DCL-ENT
M$GLINEATTR
      9557**DCL-ENT
M$GOODPP
      9572**DCL-ENT
M$GPLATEN
      9565**DCL-ENT
M$GPROMPT
      9564**DCL-ENT
M$GTRMATTR
      9558**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:131  
M$GTRMCTL
      9556**DCL-ENT
M$GTRMTAB
      9559**DCL-ENT
M$GVP
      9568**DCL-ENT
M$HELP
      9595**DCL-ENT
M$INTRTN
      9548**DCL-ENT
M$IOQ
      9583**DCL-ENT
M$JOBSTATS
      9597**DCL-ENT
M$KEYIN
      9537**DCL-ENT
M$LDEV
      9532**DCL-ENT
M$LDTRC
      9545**DCL-ENT
M$LIMIT
      9538**DCL-ENT
M$LINES
      9537**DCL-ENT
M$LINK
      9544**DCL-ENT
M$LM
     16821**DCL
M$MADMUCK
      9540**DCL-ENT
M$MAKUSER
      9571**DCL-ENT
M$MBS
      9539**DCL-ENT
M$MDFFLD
      9563**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:132  
M$MERC
      9588**DCL-ENT
M$MERCS
      9589**DCL-ENT
M$MIRROR
      9583**DCL-ENT
M$MONINFO
      9600**DCL-ENT
M$MPL
      9573**DCL-ENT
M$NODEINFO
      9564**DCL-ENT
M$NXTUSR
      9598**DCL-ENT
M$OCMSG
      9596**DCL-ENT
M$OLAY
      9544**DCL-ENT
M$OPEN
      9532**DCL-ENT
M$PAS
      9573**DCL-ENT
M$PATHCON
      9596**DCL-ENT
M$PDS
      9567**DCL-ENT
M$PFIL
      9534**DCL-ENT
M$PLATEN
      9558**DCL-ENT
M$PRECORD
      9536**DCL-ENT
M$PROCNAME
      9549**DCL-ENT
M$PROFILE
      9560**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:133  
M$PROMPT
      9556**DCL-ENT
M$RACST
      9540**DCL-ENT
M$RDSYSLOG
      9581**DCL-ENT
M$RELDCB
      9538**DCL-ENT
M$RELRES
      9539**DCL-ENT
M$RELSTARF
      9541**DCL-ENT
M$REM
      9541**DCL-ENT
M$RENV
      9588**DCL-ENT
M$REQUIRE
      9540**DCL-ENT
M$RETRY
      9589**DCL-ENT
M$RETRYS
      9589**DCL-ENT
M$REW
      9535**DCL-ENT
M$RLSFLD
      9563**DCL-ENT
M$RPRIV
      9591**DCL-ENT
M$RSPP
      9570**DCL-ENT
M$RSWITCH
      9592**DCL-ENT
M$RUE
      9598**DCL-ENT
M$SAD
      9571**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:134  
M$SAVE
      9547**DCL-ENT
M$SCON
      9548**DCL-ENT
M$SCREECH
      9546**DCL-ENT
M$SENV
      9588**DCL-ENT
M$SETFMA
      9532**DCL-ENT
M$SETFP
      9561**DCL-ENT
M$SINPUT
      9559**DCL-ENT
M$SLCFLD
      9564**DCL-ENT
M$SMOUSE
      9578**DCL-ENT
M$SMPRT
      9570**DCL-ENT
M$SPRIV
      9591**DCL-ENT
M$SSC
      9571**DCL-ENT
M$SSWITCH
      9591**DCL-ENT
M$STATE
      9600**DCL-ENT
M$STD
      9572**DCL-ENT
M$STIMER
      9586**DCL-ENT
M$STLPP
      9569**DCL-ENT
M$STRAP
      9586**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:135  
M$STRMATTR
      9558**DCL-ENT
M$STRMCTL
      9556**DCL-ENT
M$STRMTAB
      9559**DCL-ENT
M$SYMBIO
      9597**DCL-ENT
M$SYSCON
      9583**DCL-ENT
M$SYSID
      9601**DCL-ENT
M$TDCLOSE
      9582**DCL-ENT
M$TDIO
      9582**DCL-ENT
M$TDOPEN
      9581**DCL-ENT
M$TDREQCPU
      9582**DCL-ENT
M$TEMPWROC
      9576**DCL-ENT
M$TRMISC
      9561**DCL-ENT
M$TRMPRG
      9557**DCL-ENT
M$TRTN
      9590**DCL-ENT
M$TRUNC
      9533**DCL-ENT
M$TTIMER
      9586**DCL-ENT
M$UC
      9556**DCL
M$UMPL
      9573**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:136  
M$UNFID
      9595**DCL-ENT
M$UNLATCH
      9552**DCL-ENT
M$UNSHARE
      9549**DCL-ENT
M$USRFIELD
      9592**DCL-ENT
M$VIRTUAL
      9567**DCL-ENT
M$WAIT
      9590**DCL-ENT
M$WEOF
      9535**DCL-ENT
M$WRITE
      9533**DCL-ENT
M$WRSYSLOG
      9581**DCL-ENT
M$XCON
      9587**DCL-ENT
M$XCONRTN
      9548**DCL-ENT
M$XEQTIME
      9600**DCL-ENT
M$XFLUSH
      9541**DCL-ENT
M$XMOUSE
      9578**DCL-ENT
M$XXX
      9544**DCL-ENT
M$YC
      9546**DCL-ENT
OUT$BLK IN PROCEDURE DE_PROCESS_COMMAND
     18192**DCL
OUT$BLK.CPOS IN PROCEDURE DE_PROCESS_COMMAND
     18218**DCL
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:137  
OUT$BLK.NDTYPE IN PROCEDURE DE_PROCESS_COMMAND
     18195**DCL
OUT$BLK.NSUBLKS IN PROCEDURE DE_PROCESS_COMMAND
     18204**DCL
OUT$BLK.SCRITCH IN PROCEDURE DE_PROCESS_COMMAND
     18208**DCL
OUT$BLK.SUBLK$ IN PROCEDURE DE_PROCESS_COMMAND
     18225**DCL
OUT$BLK.TEMP IN PROCEDURE DE_PROCESS_COMMAND
     18193**DCL
TOU$DE
        71**PROC
TOU$DEER
     16178**DCL
TOU$DEER.LINK_DATE
     16179**DCL
TOU$DU_PRINTER_WRITE
     16836**DCL-ENT
TOU$DU_SET_EDIT_PROMPT
     16834**DCL-ENT
XUG$ALLMSG
     14889**DCL-ENT
XUG$BLANK_PASSWORD
     14892**DCL-ENT
XUG$BREAK
     14882**DCL-ENT
XUG$CLOSE_DCBS
     14881**DCL-ENT
XUG$CLRENABLE
     14885**DCL-ENT
XUG$CORRES
     14877**DCL-ENT
XUG$DISABLE
     14883**DCL-ENT
XUG$ECHO
     14875**DCL-ENT
PL6.E3A0      #001=TOU$DE File=TOU$DE.:E05TSI                                    WED 07/30/97 06:39 Page:138  
XUG$ECHOIF
     14874**DCL-ENT
XUG$ECHOLAST
     14878**DCL-ENT
XUG$ENABLE
     14884**DCL-ENT
XUG$ERRCNVRT
     14894**DCL-ENT
XUG$ERRPTR
     14873**DCL-ENT
XUG$ERRTOLCP6
     14895**DCL-ENT
XUG$FINDDCB
     14890**DCL-ENT
XUG$GETDCB
     14891**DCL-ENT
XUG$HELP
     14887**DCL-ENT
XUG$MOREMSG
     14888**DCL-ENT
XUG$OPENOUT
     14893**DCL-ENT
XUG$SETERRMSG
     14880**DCL-ENT
XUG$SIMULATE_BREAK
     14886**DCL-ENT
