VERSION E05

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:1    
        1        1        /*M* QQA$INIT - Initialize a TP instance */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  CSU=2, ECU=3, AND */
        8        8        /*P* NAME:        QQA$INIT
        9        9
       10       10             PURPOSE:     This routine initializes an instance of TP.
       11       11        */
       12       12        /*D* NAME:        QQA$INIT
       13       13
       14       14             CALL:        CALL QQA$INIT
       15       15
       16       16             INPUT:       None
       17       17
       18       18             OUTPUT:      None
       19       19
       20       20             DESCRIPTION: There are a number of things that must be done
       21       21                          in order to prepare the instance of TP.
       22       22
       23       23                          Open up CSCG so that we may communicate with
       24       24                          the operators.  Also if another station with
       25       25                          the same name as us (B$JIT.ACCN) is open to CSCG we
       26       26                          know that this instance of TP is already up.
       27       27
       28       28                          Open the shared data segment file that
       29       29                          CONTROL builds.  The information provided
       30       30                          in this file tells us that this instance has
       31       31                          been authorized and, it may use up to #
       32       32                          TPU slots.  In addition this shared data
       33       33                          segment file contains the statistics data
       34       34                          for the instance of TP.  Someday STATS
       35       35                          will open up to this file to obtain
       36       36                          statistics information about the instance
       37       37                          of TP which TPA put here.
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:2    
       38       38
       39       39                          Read the initialization commands.  These
       40       40                          commands are read in two different passes.
       41       41                          First the commands are read that must be
       42       42                          processed before the comgroup has been
       43       43                          opened and then the commands that must
       44       44                          be read later are written to a star
       45       45                          file by QQA$CMD.
       46       46
       47       47                          Reading the TRADER file.  The purpose of reading
       48       48                          the TRADER file is to gather control information
       49       49                          that we are going to pass to the comgroup.
       50       50                          What we are looking for when reading the file is
       51       51                          'non default' cases.  A non default case is
       52       52                          one where the prio is > 1, maxactive ~= to the
       53       53                          system default or maybe this type is to be
       54       54                          journaled.  The information gathered from
       55       55                          reading the TRADER file is collected so we
       56       56                          may perform a M$CGCTL pmme passing the info
       57       57                          to the comgroup.
       58       58
       59       59                          Initializing dynamic memory. There are some
       60       60                          number of linked list tables that TPA
       61       61                          utilizes.  These tables all have a fixed
       62       62                          head and tail that are initialized to
       63       63                          point to each other.  Every structure
       64       64                          that is stored in dynamic memory contains
       65       65                          the blink and flink of the linked list
       66       66                          as the first two words of the structure.
       67       67
       68       68                          Once the comgroup has been opened the commands
       69       69                          that had been saved in the star file for deferred
       70       70                          processing can now be processed.
       71       71
       72       72                          A no wait read is established from the CSCG and
       73       73                          TP comgroup.
       74       74
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:3    
       75       75                          The initial or default TPUs are started.
       76       76        */
       77       77        %EJECT;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:4    
       78       78        QQA$INIT:
       79       79                PROC;
       80       80
       81       81        %INCLUDE Q_PAGE_C;
       82      113        %SET LISTEXP = '1'B;
       83      114        %PAGE(ARG="Includes");

               131        /***************************************************************************
               132         *                                                                         *
               133         *                                  Includes                               *
               134         *                                                                         *
               135         ***************************************************************************/

       84      139        %INCLUDE CP_6;
       85      220        %INCLUDE CP_6_SUBS;
       86      760        %INCLUDE OC_SUBS_C;
       87     1491        %INCLUDE B$JIT;
       88     1781        %INCLUDE B_ERRORS_C;
       89     2908        %INCLUDE QQ_PERR_C;
       90     3069        %INCLUDE Q_ERRCODE_C;
       91     3092        %INCLUDE QQ_MACROS_C;
       92     3517        %INCLUDE QQ_DATA_R;
       93     3763        %INCLUDE QQ_SUBS_C;
       94     3955        %INCLUDE QT_MACROS_C;
       95     4113        %INCLUDE PC_MACRO_C;
       96     4139        %PAGE(ARG="Externally defined routines");

              4156    1   /***************************************************************************
              4157    1    *                                                                         *
              4158    1    *                        Externally defined routines                      *
              4159    1    *                                                                         *
              4160    1    ***************************************************************************/

       97     4164    1   DCL QQC$START_TPU ENTRY(4) ALTRET;
       98     4165    1   DCL QQC$INIT_BLKMGR ENTRY(2);
       99     4166    1   DCL QQC$GET_BLK ENTRY(3) ALTRET;
      100     4167    1   DCL QQA$CMD ENTRY;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:5    
      101     4168    1   DCL QQA$EVENT ENTRY ASYNC;
      102     4169    1   DCL QQA$XCON ENTRY ASYNC;
      103     4170    1   DCL QQC$STOPTP ENTRY(1);
      104     4171    1   DCL QQC$BLDMSG_ERRBLK ENTRY(1);
      105     4172    1   DCL QQC$BLDMSG ENTRY(1);
      106     4173    1   DCL QQC$CONVERT_NUM ENTRY(3);
      107     4174    1   DCL QQC$SCREECH ENTRY;
      108     4175    1   DCL QQD$SEGSIZE ENTRY(2);
      109     4176        %PAGE(ARG="Symrefs");

              4193    1   /***************************************************************************
              4194    1    *                                                                         *
              4195    1    *                                  Symrefs                                *
              4196    1    *                                                                         *
              4197    1    ***************************************************************************/

      110     4201    1   DCL B$JIT$ PTR SYMREF;
      111     4202    1   DCL B$TCB$ PTR SYMREF;
      112     4203        %PAGE(ARG="DCBs");

              4220    1   /***************************************************************************
              4221    1    *                                                                         *
              4222    1    *                                    DCBs                                 *
              4223    1    *                                                                         *
              4224    1    ***************************************************************************/

      113     4228    1   DCL M$SI DCB;
      114     4229        %M$DCB(DCBN=M$SAVCMD,
      115     4230               NAME='*SAVCMD',
      116     4231               ACS=SEQUEN,
      117     4232               ASN=FILE,
      118     4233               CTG=YES,
      119     4234               DISP=NAMED,
      120     4235               EXIST=NEWFILE,
      121     4236               FUN=CREATE,
      122     4237               ORG=CONSEC,
      123     4238               SHARE=ALL) ;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:6    
      124     4312    1   DCL M$SVCMD1 DCB;
      125     4313    1   DCL M$JOURNAL DCB;
      126     4314    1   DCL M$DO DCB;
      127     4315    1   DCL M$TPCMD DCB;
      128     4316    1   DCL M$TRADER DCB;
      129     4317    1   DCL M$HOLD DCB;
      130     4318    1   DCL M$INFOSTA DCB;
      131     4319    1   DCL M$CG DCB;
      132     4320        %M$DCB(DCBN=M$CSCG, NAME='CSCG', ACCT=':SYS');
      133     4394        %M$DCB(DCBN=M$TPCNTRL, NAME='TP_CNTRL_D', ACCT=':SYS');
      134     4468        %PAGE(ARG="Based");

              4485    1   /***************************************************************************
              4486    1    *                                                                         *
              4487    1    *                                   Based                                 *
              4488    1    *                                                                         *
              4489    1    ***************************************************************************/

      135     4493        %B$TCB;
      136     4496        %B$ALT;
      137     4504        %F$DCB;
      138     4561        %TP$EVENT;
      139     4630        %TPU$INFO;
      140     4659        %QT$ENTRY(STCLASS="BASED(QT$ENTRY$)");
      141     4713        %QT$SETBITS;
      142     4734        %VLP_SETSTA(FPTN=VLP$SETSTA, STCLASS="BASED(SETSTA$)");
      143     4762        %VLP_JRNLFIDV(FPTN=VLP$JRNLFIDV, STCLASS=BASED);
      144     4769        %QT$FORM(STCLASS="BASED(QT$ENTRY$)");
      145     4808        %DISAB$INFO;
      146     4824        %VLP_CGQL(FPTN=VLP$CGQL, STCLASS="BASED(QLIST$)");
      147     4846        %VLP_CGTYPL(FPTN=VLP$CGTYPL, STCLASS="BASED(TYPLIST$)");
      148     4871        %PC$HDR(STCLASS="BASED(QQ_GLOBAL.CONTROL$)");
      149     4875        %PC$INSTANCE(STCLASS="BASED(QQ_GLOBAL.PC$INSTANCE$)");
      150     4925        %FPT_OPEN(FPTN=AMR$FPT_OPEN, STCLASS="BASED(AMR$FPT_OPEN$)",
      151     4926        PFMT=PTR, VECTOR=ADDR);
      152     5035
      153     5036    1   DCL BASED$WORD BIT(36) UNAL BASED;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:7    
      154     5037
      155     5038
      156     5039    1   DCL CHAR$STRING CHAR(CHAR_STRING_SIZE) BASED;
      157     5040        %PAGE(ARG="Constants");

              5057    1   /***************************************************************************
              5058    1    *                                                                         *
              5059    1    *                                 Constants                               *
              5060    1    *                                                                         *
              5061    1    ***************************************************************************/

      158     5065        %VLP_CGTYPL(FPTN=VLP_CGTYPL_C, STCLASS=CONSTANT);
      159     5090        %VLP_CGQL(FPTN=VLP_CGQL_C, MXACT=9999, STCLASS=CONSTANT);
      160     5112        %PAGE(ARG="Static");

              5129    1   /***************************************************************************
              5130    1    *                                                                         *
              5131    1    *                                   Static                                *
              5132    1    *                                                                         *
              5133    1    ***************************************************************************/

      161     5137    1   DCL LEN UBIN WORD STATIC;
      162     5138
      163     5139    1   DCL 1 KEY STATIC,
      164     5140    1         2 COUNT UBIN(9) UNAL INIT(10),
      165     5141    1         2 MSGTYP CHAR(8),
      166     5142    1         2 SUFFIX CHAR(2);
      167     5143        %PAGE(ARG="Auto");

              5160    1   /***************************************************************************
              5161    1    *                                                                         *
              5162    1    *                                    Auto                                 *
              5163    1    *                                                                         *
              5164    1    ***************************************************************************/

      168     5168    1   DCL HEAD$ PTR;
      169     5169    1   DCL TAIL$ PTR;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:8    
      170     5170    1   DCL P$ PTR;
      171     5171    1   DCL M$TPCMD$ PTR;
      172     5172    1   DCL M$SI$ PTR;
      173     5173    1   DCL M$SAVCMD$ PTR;
      174     5174    1   DCL M$SVCMD1$ PTR;
      175     5175    1   DCL TYPLIST$ PTR;
      176     5176    1   DCL QLIST$ PTR;
      177     5177    1   DCL QT$ENTRY$ PTR;
      178     5178    1   DCL REC$ PTR;
      179     5179    1   DCL AMR$FPT_OPEN$ PTR;
      180     5180    1   DCL SETSTA$ PTR;
      181     5181
      182     5182    1   DCL COUNT SBIN WORD;
      183     5183    1   DCL TYPLIST_SLOTS SBIN WORD;
      184     5184    1   DCL QLIST_SLOTS SBIN WORD;
      185     5185    1   DCL POS SBIN WORD;
      186     5186    1   DCL CHAR_STRING_SIZE SBIN WORD;
      187     5187    1   DCL WORDS SBIN WORD;
      188     5188    1   DCL I SBIN WORD;
      189     5189    1   DCL K SBIN WORD;
      190     5190    1   DCL SIZE SBIN WORD;
      191     5191    1   DCL BLANK_POS SBIN WORD;
      192     5192    1   DCL PRIO SBIN WORD;
      193     5193    1   DCL MAXACTIVE SBIN WORD;
      194     5194
      195     5195    1   DCL JOURNAL_FLAG BIT(1) ALIGNED;
      196     5196    1   DCL ONEREPORT_FLAG BIT(1) ALIGNED;
      197     5197    1   DCL FOUND_FLAG BIT(1) ALIGNED;
      198     5198    1   DCL NOW_FLAG BIT(1) ALIGNED;
      199     5199
      200     5200    1   DCL CMD CHAR(80);
      201     5201    1   DCL MSGTYP CHAR(8);
      202     5202
      203     5203        %MSGBLK;
      204     5293        %VLP_NAME(FPTN=TEXTC_NUM, STCLASS=AUTO, LEN=7);
      205     5320    1   DCL 1 ERR,
      206     5321    1         2 FCG BIT(12) UNAL,
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:9    
      207     5322    1         2 MID BIT(6) UNAL,
      208     5323    1         2 MON BIT(1) UNAL,
      209     5324    1         2 CODE UBIN(14) UNAL,
      210     5325    1         2 SEV UBIN(3) UNAL;
      211     5326
      212     5327    1   DCL 1 PTR$_BITS,
      213     5328    1         2 WORDS UBIN(18) UNAL,
      214     5329    1         2 * UBIN(18) UNAL;
      215     5330        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:10   
              5347    1   /***************************************************************************
              5348    1    *                                                                         *
              5349    1    *                                Error codes                              *
              5350    1    *                                                                         *
              5351    1    ***************************************************************************/

      216     5355        %ERRCODE(NAME=CODE_NO_POOLMEM, CODE#=%E$NO_POOLMEM, FCG#=%FCG_QQ, MID#=%MID_A);
      217     5362        %ERRCODE(NAME=CODE_NTRDRBUILT, CODE#=%E$NTRDRBUILT, FCG#=%FCG_QQ, MID#=%MID_A);
      218     5369        %ERRCODE(NAME=CODE_NT, CODE#=%E$NT, FCG#=%FCG_QQ, MID#=%MID_A);
      219     5376        %ERRCODE(NAME=CODE_DDI, CODE#=%E$DDI, FCG#=%FCG_QQ, MID#=%MID_A);
      220     5383        %ERRCODE(NAME=CODE_IIAU, CODE#=%E$IIAU, FCG#=%FCG_QQ, MID#=%MID_A);
      221     5390        %ERRCODE(NAME=CODE_COC, CODE#=%E$COC, FCG#=%FCG_QQ, MID#=%MID_A);
      222     5397        %ERRCODE(NAME=CODE_NAVC, CODE#=%E$NAVC, FCG#=%FCG_QQ, MID#=%MID_A);
      223     5404        %ERRCODE(NAME=CODE_NOTPUS, CODE#=%E$NOTPUS, FCG#=%FCG_QQ, MID#=%MID_A);
      224     5411        %ERRCODE(NAME=CODE_LESSTPUS, CODE#=%E$LESSTPUS, FCG#=%FCG_QQ, MID#=%MID_A);
      225     5418        %ERRCODE(NAME=CODE_JERR, CODE#=%E$JERR, FCG#=%FCG_QQ, MID#=%MID_A);
      226     5425        %ERRCODE(NAME=CODE_STRTUP, CODE#=%E$STRTUP, FCG#=%FCG_QQ, MID#=%MID_A);
      227     5432
      228     5433        /*E*       ERROR: QQA-E$NO_POOLMEM-E
      229     5434
      230     5435                 MESSAGE: Memory request failed.  Increase the value
      231     5436                          of POOLSIZE via the LET command.
      232     5437             DESCRIPTION: For some reason all of the memory from the
      233     5438                          pool is gone.  Check the chains of the user's
      234     5439                          of this memory to see where it has gone.
      235     5440        */
      236     5441        /*E*       ERROR: QQA-E$NT-C
      237     5442
      238     5443                 MESSAGE: M$TRADER DCB has not been assigned.
      239     5444             DESCRIPTION: Since we are unable to open the TRADER file we
      240     5445                          can not start up the instance of TP.
      241     5446        */
      242     5447        /*E*       ERROR: QQA-E$NTRDRBUILT-C
      243     5448
      244     5449                 MESSAGE: The file supplied as the TRADER file was not
      245     5450                          built by TRADER.
      246     5451             DESCRIPTION: Only files built by the TRADER utility can
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:11   
      247     5452                          be used as TRADER files.
      248     5453        */
      249     5454        /*E*       ERROR: QQA-E$DDI-C
      250     5455
      251     5456                 MESSAGE: %U1 diagnostic(s) issued during TP
      252     5457                          initialization.
      253     5458             DESCRIPTION: Number of diagnostics printed during
      254     5459                          initialization.
      255     5460        */
      256     5461        /*E*       ERROR: QQA-E$IIAU-C
      257     5462
      258     5463                 MESSAGE: This instance of TP is already up.
      259     5464             DESCRIPTION: Only one instance of TP may be running in
      260     5465                          an account at a time.
      261     5466        */
      262     5467        /*E*       ERROR: QQA-E$COC-C
      263     5468
      264     5469                 MESSAGE: This instance of TP has not been authorized
      265     5470                          with the CONTROL processor.
      266     5471             DESCRIPTION: We must be able to open the file built by
      267     5472                          CONTROL in order to start up the TP instance.
      268     5473        */
      269     5474        /*E*       ERROR: QQA-E$NAVC-C
      270     5475
      271     5476                 MESSAGE: This instance of TP has not been authorized with
      272     5477                          the CONTROL processor.
      273     5478             DESCRIPTION: An instance of TP must be authorized with the
      274     5479                          to find out how to do this.
      275     5480        */
      276     5481        /*E*       ERROR: QQA-E$NOTPUS-C
      277     5482
      278     5483                 MESSAGE: No TPUs can be started in response to the
      279     5484                          LET TPUINITIAL command.
      280     5485             DESCRIPTION: If we are unable to start even one TPU from
      281     5486                          from the initial number that was requested
      282     5487                          something must be wrong
      283     5488        */
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:12   
      284     5489        /*E*       ERROR: QQA-E$LESSTPUS-C
      285     5490
      286     5491                 MESSAGE: CONTROL limit for TPUs in this instance of TP
      287     5492                          reached.  Unable to start the number of TPUs
      288     5493                          reached by LET TPUINITIAL.
      289     5494             DESCRIPTION: For some reason we are unable to start the
      290     5495                          full compliment of requested TPUs.
      291     5496        */
      292     5497        /*E*       ERROR: QQA-E$JERR-C
      293     5498
      294     5499                 MESSAGE: Unable to open the JOURNAL
      295     5500             DESCRIPTION: For some reason we were unable to open the
      296     5501                          journal file.
      297     5502        */
      298     5503        /*E*       ERROR: QQA-E$STRTUP-E
      299     5504
      300     5505                 MESSAGE: Error encountered in startup of TP during %U1
      301     5506                          for the following reason.
      302     5507             DESCRIPTION: For some reason we encountered an exceptional
      303     5508                          condition during startup of TP. Error message
      304     5509                          follows.
      305     5510        */
      306     5511        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:13   
              5528    1   /***************************************************************************
              5529    1    *                                                                         *
              5530    1    *                                    FPTs                                 *
              5531    1    *                                                                         *
              5532    1    ***************************************************************************/

      307     5536        %FPT_READ(FPTN=FPT_READ_SEQ, DCB=M$SI);
      308     5575
      309     5576        %FPT_READ(FPTN=FPT_READ_CG, DCB=M$CG, WAIT=NO, EVENT=1, STATION=VLP_STATION);
      310     5615
      311     5616        %FPT_READ(FPTN=FPT_READ_CSCG,DCB=M$CSCG, WAIT=NO, EVENT=2, STATION=VLP_STATION);
      312     5655
      313     5656        %FPT_PFIL(DCB=M$TRADER, BOF=YES);
      314     5671
      315     5672        %FPT_OPEN(FPTN=FPT_OPEN_CG, DCB=M$CG, ASN=COMGROUP, CTG=YES, AU=YES,
      316     5673        FUN=CREATE, EXIST=OLDFILE, SETSTA=VLP_SETSTA,
      317     5674        NAME=VLP_NAME, SHARE=NONE, JRNLBYPASS=YES);
      318     5783
      319     5784        %FPT_OPEN(FPTN=FPT_OPEN_HOLD, DCB=M$HOLD, ASN=COMGROUP,
      320     5785        NAME=VLP_NAME, SETSTA=VLP_SETSTA_HOLD);
      321     5894
      322     5895        %FPT_OPEN(FPTN=FPT_OPEN_INFO, DCB=M$INFOSTA, ASN=COMGROUP,
      323     5896        NAME=VLP_NAME, SETSTA=VLP_SETSTA_INFO);
      324     6005
      325     6006        %FPT_OPEN(FPTN=FPT_OPEN_CSCG, DCB=M$CSCG, ASN=COMGROUP, SETSTA=VLP_SETSTA_CSCG,
      326     6007                   FUN=UPDATE,SHARE=ALL,ACCT=SYSACCT,NAME=CGNAME);
      327     6116
      328     6117        %FPT_OPEN(FPTN=FPT_OPEN_SAVCMD, DCB=M$SAVCMD) ;
      329     6226
      330     6227        %FPT_OPEN(FPTN=FPT_OPEN_SVCMD1, DCB=M$SVCMD1, ASN=FILE,
      331     6228        ACS=SEQUEN, FUN=IN,CTG=YES,NAME=SAVCMD) ;
      332     6337
      333     6338        %FPT_OPEN(FPTN=FPT_OPEN_TPCMD, DCB=M$TPCMD, ASN=FILE,
      334     6339        DISP=SCRATCH, ACS=SEQUEN, FUN=CREATE);
      335     6448
      336     6449        %FPT_OPEN(FPTN=FPT_OPEN_TRADER, DCB=M$TRADER, ASN=FILE,
      337     6450        FUN=UPDATE, ACS=DIRECT, SHARE=ALL);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:14   
      338     6559
      339     6560        %FPT_OPEN(FPTN=FPT_OPEN_TPCNTRL, DCB=M$TPCNTRL, FUN=UPDATE,
      340     6561        ASN=FILE, SHARE=ALL, ORG=RANDOM, ACS=DS4);
      341     6670
      342     6671        %FPT_FDS(RESULTS=VLP_VECTOR);
      343     6686
      344     6687        %FPT_GDS(RESULTS=VLP_VECTOR, SEGSIZE=1024);
      345     6703
      346     6704        %FPT_CGCTL(DCB=M$CG, CGCP=VLP_CGCP,
      347     6705        HOLDSTA=VLP_SETSTA_HOLD);
      348     6728
      349     6729        %FPT_EVENT(UENTRY=QQA$EVENT);
      350     6743
      351     6744        %FPT_READ(FPTN=FPT_READ_TRADER, DCB=M$TRADER, KEYR=YES, KEY=KEY);
      352     6783
      353     6784        %FPT_UNFID(DCB=M$TRADER, TEXTFID="QQ_GLOBAL.TRADER_FID.NAME#", LEN=LEN);
      354     6802
      355     6803        %FPT_INT(UENTRY=QQA$XCON);
      356     6817
      357     6818        %FPT_XCON(UENTRY=QQA$XCON);
      358     6832
      359     6833        %FPT_TIME(SOURCE=CLOCK, TSTAMP=QQ_GLOBAL.STIMER_UTS);
      360     6852
      361     6853        %FPT_PRECORD(DCB=M$TRADER, N=-1);
      362     6874
      363     6875        %FPT_READ(FPTN=FPT_READ_KEY, DCB=M$TRADER, KEYS=YES, KEY=KEY);
      364     6914
      365     6915        %FPT_CLOSE(FPTN=FPT_CLOSE_CG, DCB=M$CG, CHGATT=YES);
      366     6957
      367     6958        %FPT_CLOSE(FPTN=FPT_CLOSE_SVCMD1, DCB=M$SVCMD1);
      368     7000
      369     7001        %FPT_OPEN(FPTN=FPT_OPEN_JOURNAL, DCB=M$JOURNAL, ACS=JRNL,
      370     7002        GHSTACS=JRNLOPN, FUN=CREATE, ASN=FILE, EXIST=OLDFILE, ORG=CONSEC);
      371     7111        %PAGE(ARG="VLPs");

              7128    1   /***************************************************************************
              7129    1    *                                                                         *
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:15   
              7130    1    *                                    VLPs                                 *
              7131    1    *                                                                         *
              7132    1    ***************************************************************************/

      372     7136        %VLP_CGCP(TERMCONAU=NO, DCBCONAU=NO, TERMCONNAU=NO,
      373     7137        DCBCONNAU=NO, AUDCONTERM=DISCONNECT, AUDCONDCB=DEACTIVATE,
      374     7138        XSTALGL=YES, XTYPLGL=YES, DCBCONLGL=YES, TERMCONLGL=YES,
      375     7139        SECURE=YES, UNLAMSG=NO, DISKWARN=25, MEMWARN=5,
      376     7140        QRML=YES, DRML=YES, CARRYOSTA=YES,
      377     7141        BIGMXT=YES, DCBCONWA=YES, TMTYP='TBING', DMTYP='*RESP',
      378     7142        MINPG=10, MAXPG=30, DEFERBLKS=40, MEMWARNP=YES);
      379     7185
      380     7186        %VLP_VECTOR(SEGID='0'O);
      381     7201        %VLP_STATION(DIRONLY=YES, LATCH=YES);
      382     7228        %VLP_STATION(FPTN=VLP_STATION_JRNL, STATION='JRNLSTA');
      383     7255        %VLP_SETSTA(MYSTATION='TPA');
      384     7283        %VLP_SETSTA(FPTN=VLP_SETSTA_CSCG);
      385     7311        %VLP_ACCT (FPTN=SYSACCT, ACCT=':SYS');
      386     7324        %VLP_NAME (FPTN=CGNAME, NAME='CSCG');
      387     7351        %VLP_NAME(NAME='123456789');
      388     7378        %VLP_NAME(FPTN=TEXTC_NAME);
      389     7405        %VLP_NAME(FPTN=SAVCMD,NAME='*SAVCMD');
      390     7432        %VLP_SETSTA(FPTN=VLP_SETSTA_HOLD, MYSTATION='HOLDSTA');
      391     7460        %VLP_CGSTAL(FPTN=VLP_CGSTAL_HOLD, AUP=YES);
      392     7485        %VLP_SETSTA(FPTN=VLP_SETSTA_INFO, MYSTATION='INFOSTA');
      393     7513        %VLP_CGSTAL(FPTN=VLP_CGSTAL_INFO, AUP=YES);
      394     7538        %PAGE(ARG="QQA$INIT", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:16   
              7555    1   /***************************************************************************
              7556    1    *                                                                         *
              7557    1    *                                  QQA$INIT                               *
              7558    1    *                                                                         *
              7559    1    ***************************************************************************/

      395     7563    1           CALL M$XCON(FPT_XCON);
      396     7564
      397     7565    1           QQ_CMDBLK.ORIGIN = 2 /* ORIGIN_INIT */;
      398     7566
      399     7567    1           IF B$JIT.MODE = 3 /* M_INT# */ THEN
      400     7568    2           DO;
      401     7569    2              CALL M$INT(FPT_INT) ALTRET(MON_ERR);
      402     7570    2           END;
      403     7571
      404     7572    1           QQ_GLOBAL.INSTANCE_NAME = B$JIT.ACCN;
      405     7573    1           VLP_SETSTA_CSCG.MYSTATION# = QQ_GLOBAL.INSTANCE_NAME;
      406     7574    1           CALL M$OPEN(FPT_OPEN_CSCG) ALTRET(OPEN_CSCG_ERR);
      407     7575
      408     7576    2           DO WHILE('0'B);
      409     7577
      410     7578    2   OPEN_CSCG_ERR:
      411     7579    2              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 867 /* E$DUPNM */ AND
      412     7580    2                B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 881 THEN
      413     7581    3              DO;
      414     7582    3                 CALL QQC$BLDMSG_ERRBLK(MSGBLK);
      415     7583    3                 MSGBLK.ERRINFO.ERR(0) = CODE_STRTUP;
      416     7584    3                 TEXTC_NAME.NAME# = 'CSCG open';
      417     7585    3                 TEXTC_NAME.L# = 9;
      418     7586    3                 MSGBLK.ERRINFO.FIELD1(0) = VECTOR(TEXTC_NAME);
      419     7587    3                 MSGBLK.ERRINFO.ERR(1) = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      420     7588    3                 CALL QQC$BLDMSG(MSGBLK);
      421     7589    3                 GOTO STOPTPNOW;
      422     7590    3              END;
      423     7591
      424     7592    2              QQ_GLOBAL.ERR = CODE_IIAU;
      425     7593    2              GOTO STOPTP;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:17   
      426     7594    2           END /* NEVER */;
      427     7595
      428     7596    1           CALL M$OPEN(FPT_OPEN_TPCNTRL) ALTRET(OPEN_TPCNTRL_ERR);
      429     7597
      430     7598    2           DO WHILE('0'B);
      431     7599
      432     7600    2   OPEN_TPCNTRL_ERR:
      433     7601    2              CALL QQC$BLDMSG_ERRBLK(MSGBLK);
      434     7602    2              MSGBLK.ERRINFO.ERR(1) = CODE_COC;
      435     7603    2              CALL QQC$BLDMSG(MSGBLK);
      436     7604    2              GOTO STOPTP;
      437     7605    2           END /* NEVER */;
      438     7606
      439     7607    1           QQ_GLOBAL.PC$INSTANCE$ = PINCRW(QQ_GLOBAL.CONTROL$, SIZEW(PC$HDR));
      440     7608
      441     7609    2           DO I = 1 TO PC$HDR.CURINSTANCES;
      442     7610    2              IF PC$INSTANCE.INSTANCE_NAME = QQ_GLOBAL.INSTANCE_NAME AND
      443     7611    2                NOT PC$INSTANCE.FLAGS.DELETED THEN
      444     7612    3              DO;
      445     7613    3                 PC$INSTANCE.STATS = '0'B;
      446     7614    3                 PC$INSTANCE.STATS.PGSI = BITBIN('400000000000'O);
      447     7615    3                 QQ_GLOBAL.DELTA_STATS = PC$INSTANCE.STATS;
      448     7616    3                 PC$INSTANCE.FLAGS.ACTIVE = '1'B;
      449     7617    3                 GOTO READ_CMDS;
      450     7618    3              END;
      451     7619
      452     7620    2              QQ_GLOBAL.PC$INSTANCE$ = PINCRW(QQ_GLOBAL.PC$INSTANCE$, SIZEW(PC$INSTANCE
              7620                       ));
      453     7621    2           END;
      454     7622
      455     7623    1           QQ_GLOBAL.ERR = CODE_NAVC;
      456     7624    1           GOTO STOPTP;
      457     7625
      458     7626    1   READ_CMDS:
      459     7627    1           M$TPCMD$ = DCBADDR(DCBNUM(M$TPCMD));
      460     7628    1           M$SI$ = DCBADDR(DCBNUM(M$SI));
      461     7629    1           QQ_CMDBLK.ORIGIN = 2 /* ORIGIN_INIT */;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:18   
      462     7630    1           QQ_CMDBLK.S$ = ADDR(QQ_TP$STATION_INIT);
      463     7631    1           QQ_CMDBLK.FLAGS = '0'B;
      464     7632    1           QQ_CMDBLK.TEXT$ = ADDR(CMD);
      465     7633    1           FPT_READ_SEQ.BUF_ = VECTOR(CMD);
      466     7634    1           CALL M$OPEN(FPT_OPEN_TPCMD) ALTRET(MON_ERR);
      467     7635        /* Install the system default values */
      468     7636    1           QQ_GLOBAL.CGPAGEMIN = VLP_CGCP.MINPG#;
      469     7637    1           QQ_GLOBAL.CGPAGEMAX = VLP_CGCP.MAXPG#;
      470     7638    1           QQ_GLOBAL.CGDISKWARN = VLP_CGCP.DISKWARN#;
      471     7639    1           QQ_GLOBAL.CGMEMWARN = VLP_CGCP.MEMWARN#;
      472     7640
      473     7641    2           DO WHILE('1'B);
      474     7642    2              CALL M$READ(FPT_READ_SEQ) ALTRET(READ_CMD_ERR1);
      475     7643
      476     7644    3              DO WHILE('0'B);
      477     7645
      478     7646    3   READ_CMD_ERR1:
      479     7647    3                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      480     7648    3                 IF ERR.CODE ~= 6 /* E$EOF */ THEN
      481     7649    4                 DO;
      482     7650    4                    GOTO MON_ERR;
      483     7651    4                 END;
      484     7652    3                 GOTO OPEN_FILES;
      485     7653    3              END /* NEVER */;
      486     7654
      487     7655    2              QQ_CMDBLK.ARS = M$SI$ -> F$DCB.ARS#;
      488     7656    2              CALL QQA$CMD;
      489     7657    2           END;
      490     7658
      491     7659    1   OPEN_FILES:
      492     7660    1           CALL OPEN_SAVCMD ALTRET(STOPTP);
      493     7661
      494     7662    1           CALL OPEN_TRADER ALTRET(STOPTP);
      495     7663
      496     7664    1           VLP_NAME.NAME# = QQ_GLOBAL.INSTANCE_NAME;
      497     7665    1           CALL INDEX(BLANK_POS, ' ', VLP_NAME.NAME#);
      498     7666    1           VLP_NAME.L# = BLANK_POS;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:19   
      499     7667    1           IF QQ_GLOBAL.NEWCG THEN
      500     7668    2           DO;
      501     7669    2              FPT_OPEN_CG.V.EXIST# = 3 /* NEWFILE# */;
      502     7670    2           END;
      503     7671    1           FPT_OPEN_CG.V.IXTNSIZE# = QQ_GLOBAL.IXTNSIZE;
      504     7672
      505     7673
      506     7674
      507     7675    1           VLP_CGCP.MINPG# = QQ_GLOBAL.CGPAGEMIN;
      508     7676    1           VLP_CGCP.MAXPG# = QQ_GLOBAL.CGPAGEMAX;
      509     7677    1           VLP_CGCP.DISKWARN# = QQ_GLOBAL.CGDISKWARN;
      510     7678    1           VLP_CGCP.MEMWARN# = QQ_GLOBAL.CGMEMWARN;
      511     7679    1           IF 14 + 640 + 74 > QQ_GLOBAL.CGSIZEMAX THEN
      512     7680    2           DO;
      513     7681    2              QQ_GLOBAL.CGSIZEMAX = 14 + 640 + 74;
      514     7682    2           END;
      515     7683    1           VLP_CGCP.MAXMC# = QQ_GLOBAL.CGSIZEMAX;
      516     7684    1           IF QQ_GLOBAL.TRMRDSIZ > QQ_GLOBAL.CGSIZEMAX THEN
      517     7685    2           DO;
      518     7686    2              QQ_GLOBAL.CGSIZEMAX = QQ_GLOBAL.TRMRDSIZ;
      519     7687    2           END;
      520     7688    1           VLP_CGCP.TRMRDSIZ# = QQ_GLOBAL.TRMRDSIZ;
      521     7689    1           CALL OPEN_CG ALTRET(STOPTP);
      522     7690
      523     7691    1           FPT_CGCTL.STALIST_ = VECTOR(VLP_CGSTAL_HOLD);
      524     7692    1           VLP_CGSTAL_HOLD.LIST.NAME#(0) = 'HOLDSTA';
      525     7693    1           CALL M$CGCTL(FPT_CGCTL) ALTRET(MON_ERR);
      526     7694    1           CALL M$OPEN(FPT_OPEN_HOLD) ALTRET(MON_ERR);
      527     7695
      528     7696    1           FPT_CGCTL.STALIST_ = VECTOR(VLP_CGSTAL_INFO);
      529     7697    1           VLP_CGSTAL_INFO.LIST.NAME#(0) = 'INFOSTA';
      530     7698    1           CALL M$CGCTL(FPT_CGCTL) ALTRET(MON_ERR);
      531     7699    1           CALL M$OPEN(FPT_OPEN_INFO) ALTRET(MON_ERR);
      532     7700
      533     7701    1           CALL RELEASE_MEM;
      534     7702
      535     7703    1           VLP_VECTOR.PTR$ = QQ_GLOBAL.POOL$;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:20   
      536     7704    1           FPT_GDS.V.SEGSIZE# = QQ_GLOBAL.POOLSIZE;
      537     7705    1           CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);
      538     7706    1           CALL QQC$INIT_BLKMGR(QQ_GLOBAL.POOL$, QQ_GLOBAL.POOLSIZE);
      539     7707
      540     7708    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$,
      541     7709    1             (14 + 640 + 74 + 3) / 4,
      542     7710    1             QQ_GLOBAL.CMDBUF$) ALTRET(NO_MEM);
      543     7711
      544     7712    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, (CSCG_MAXMC# + 3) / 4, QQ_GLOBAL.KEYINBUF$
              7712                    )
      545     7713    1             ALTRET(NO_MEM);
      546     7714
      547     7715    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 20,
      548     7716    1             QQ_GLOBAL.DEBUGCMD$) ALTRET(NO_MEM);
      549     7717
      550     7718    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 4, HEAD$) ALTRET(NO_MEM);
      551     7719    1           QQ_GLOBAL.EVENT$ = HEAD$;
      552     7720    1           TAIL$ = PINCRW(HEAD$, 2);
      553     7721    1           HEAD$ -> TP$EVENT.BLINK$ = TAIL$;
      554     7722    1           HEAD$ -> TP$EVENT.FLINK$ = TAIL$;
      555     7723    1           TAIL$ -> TP$EVENT.BLINK$ = HEAD$;
      556     7724    1           TAIL$ -> TP$EVENT.FLINK$ = ADDR(NIL);
      557     7725
      558     7726    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 4, HEAD$) ALTRET(NO_MEM);
      559     7727    1           QQ_GLOBAL.TPU$ = HEAD$;
      560     7728    1           TAIL$ = PINCRW(HEAD$, 2);
      561     7729    1           HEAD$ -> TPU$INFO.BLINK$ = TAIL$;
      562     7730    1           HEAD$ -> TPU$INFO.FLINK$ = TAIL$;
      563     7731    1           TAIL$ -> TPU$INFO.BLINK$ = HEAD$;
      564     7732    1           TAIL$ -> TPU$INFO.FLINK$ = ADDR(NIL);
      565     7733
      566     7734    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 4, HEAD$) ALTRET(NO_MEM);
      567     7735    1           QQ_GLOBAL.DISAB$ = HEAD$;
      568     7736    1           TAIL$ = PINCRW(HEAD$, 2);
      569     7737    1           HEAD$ -> DISAB$INFO.BLINK$ = TAIL$;
      570     7738    1           HEAD$ -> DISAB$INFO.FLINK$ = TAIL$;
      571     7739    1           TAIL$ -> DISAB$INFO.BLINK$ = HEAD$;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:21   
      572     7740    1           TAIL$ -> DISAB$INFO.FLINK$ = ADDR(NIL);
      573     7741
      574     7742    1           FPT_GDS.V.SEGSIZE# = 1024;
      575     7743    1           VLP_VECTOR.PTR$ = ADDR(NIL);
      576     7744    1           CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);
      577     7745    1           QQ_GLOBAL.TRASHBUF$ = VLP_VECTOR.PTR$;
      578     7746    1           QQ_GLOBAL.TRASHBUF_SIZE = 4096;
      579     7747
      580     7748    1           QQ_GLOBAL.INIT_PASS = 1;
      581     7749    1           IF QQ_GLOBAL.PASS1_CMDS THEN
      582     7750    2           DO;
      583     7751    2              FPT_PFIL.V.DCB# = DCBNUM(M$TPCMD);
      584     7752    2              CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
      585     7753    2              FPT_READ_SEQ.V.DCB# = DCBNUM(M$TPCMD);
      586     7754                   /*  reset pointer because of usage of the READ command
      587     7755                       in the startup fid.  QQB$READ resets this guy      */
      588     7756    2              QQ_CMDBLK.TEXT$ = ADDR(CMD);
      589     7757    3              DO WHILE('1'B);
      590     7758    3                 CALL M$READ(FPT_READ_SEQ) ALTRET(READ_CMD_ERR2);
      591     7759
      592     7760    4                 DO WHILE('0'B);
      593     7761
      594     7762    4   READ_CMD_ERR2:
      595     7763    4                    ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      596     7764    4                    IF ERR.CODE ~= 6 /* E$EOF */ THEN
      597     7765    5                    DO;
      598     7766    5                       GOTO MON_ERR;
      599     7767    5                    END;
      600     7768    4                    GOTO COUNT_ERRORS;
      601     7769    4                 END /* NEVER */;
      602     7770
      603     7771    3                 QQ_CMDBLK.ARS = M$TPCMD$ -> F$DCB.ARS#;
      604     7772    3                 CALL QQA$CMD;
      605     7773    3              END;
      606     7774    2           END;
      607     7775
      608     7776    1   COUNT_ERRORS:
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:22   
      609     7777    1           IF QQ_GLOBAL.ERROR_CNT > 0 THEN
      610     7778    2           DO;
      611     7779    2              CALL QQC$CONVERT_NUM(QQ_GLOBAL.ERROR_CNT, SIZE, ADDR(TEXTC_NUM.NAME#));
      612     7780    2              TEXTC_NUM.L# = SIZE;
      613     7781    2              CALL QQC$BLDMSG_ERRBLK(MSGBLK);
      614     7782    2              MSGBLK.ERRINFO.ERR(0) = CODE_DDI;
      615     7783    2              MSGBLK.ERRINFO.FIELD1(0) = VECTOR(TEXTC_NUM);
      616     7784    2              CALL QQC$BLDMSG(MSGBLK);
      617     7785    2           END;
      618     7786
      619     7787    1           CALL M$EVENT(FPT_EVENT) ALTRET(MON_ERR);
      620     7788
      621     7789    1           FPT_READ_CG.BUF_.BOUND = 14 + 640 + 74 - 1;
      622     7790    1           FPT_READ_CG.BUF_.BUF$ = QQ_GLOBAL.CMDBUF$;
      623     7791    1           CALL M$READ(FPT_READ_CG) ALTRET(MON_ERR);
      624     7792
      625     7793    1           NOW_FLAG = '0'B;
      626     7794    1           MSGTYP = '?';
      627     7795    2           DO I = 1 TO QQ_GLOBAL.TPUINITIAL;
      628     7796        /* Start up the defualt TPUs */
      629     7797    2              CALL QQC$START_TPU(MSGTYP,ERR,NOW_FLAG,0) ALTRET(START_ERR);
      630     7798    2           END;
      631     7799
      632     7800    2           DO WHILE('0'B);
      633     7801
      634     7802    2   START_ERR:
      635     7803    2              CALL QQC$BLDMSG_ERRBLK(MSGBLK);
      636     7804    2              MSGBLK.ERRINFO.ERR(0) = ERR;
      637     7805    2              CALL QQC$BLDMSG(MSGBLK);
      638     7806
      639     7807    2              IF I = 1 THEN
      640     7808    3              DO;
      641     7809    3                 QQ_GLOBAL.ERR = CODE_NOTPUS;
      642     7810    3                 GOTO STOPTP;
      643     7811    3              END;
      644     7812    2              ELSE
      645     7813    3              DO;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:23   
      646     7814    3                 CALL QQC$BLDMSG_ERRBLK(MSGBLK);
      647     7815    3                 MSGBLK.ERRINFO.ERR(0) = CODE_LESSTPUS;
      648     7816    3                 CALL QQC$BLDMSG(MSGBLK);
      649     7817    3              END;
      650     7818    2           END /* NEVER */;
      651     7819
      652     7820    1           VLP_STATION.CTL.LATCH# = '0'B;
      653     7821    1           FPT_READ_CSCG.BUF_.BOUND = CSCG_MAXMC# - 1;
      654     7822    1           FPT_READ_CSCG.BUF_.BUF$ = QQ_GLOBAL.KEYINBUF$;
      655     7823    1           CALL M$READ(FPT_READ_CSCG) ALTRET(MON_ERR);
      656     7824
      657     7825        /* Initialize QQ_GLOBAL.STIMER_UTS */
      658     7826    1           CALL M$TIME(FPT_TIME);
      659     7827    1           QQ_GLOBAL.SLEEP_SECS = QQ_GLOBAL.SCHEDINT;
      660     7828
      661     7829    1           RETURN;
      662     7830
      663     7831    1   STOPTP:
      664     7832    1           CALL QQC$STOPTP('0'B);
      665     7833
      666     7834    1   STOPTPNOW:
      667     7835    1           QQ_GLOBAL.ERR = '0'B;
      668     7836    1           CALL QQC$STOPTP('1'B);
      669     7837
      670     7838    1   NO_MEM:
      671     7839    1           QQ_GLOBAL.ERR = CODE_NO_POOLMEM;
      672     7840    1           GOTO SCREECH;
      673     7841
      674     7842    1   MON_ERR:
      675     7843    1           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      676     7844
      677     7845    1   SCREECH:
      678     7846    1           CALL QQC$SCREECH;
      679     7847                %PAGE(ARG="OPEN_TRADER",PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:24   
              7864    1   /***************************************************************************
              7865    1    *                                                                         *
              7866    1    *                                OPEN_TRADER                              *
              7867    1    *                                                                         *
              7868    1    ***************************************************************************/

      680     7872    1   OPEN_TRADER:
      681     7873    1           PROC ALTRET;
      682     7874
      683     7875    2           CALL M$OPEN(FPT_OPEN_TRADER) ALTRET(OPEN_TRADER_ERR);
      684     7876
      685     7877    3           DO WHILE('0'B);
      686     7878
      687     7879    3   OPEN_TRADER_ERR:
      688     7880    3              CALL QQC$BLDMSG_ERRBLK(MSGBLK);
      689     7881    3              MSGBLK.ERRINFO.ERR(1) = CODE_NT;
      690     7882    3              CALL QQC$BLDMSG(MSGBLK);
      691     7883    3              GOTO ALT;
      692     7884    3           END /* NEVER */;
      693     7885
      694     7886    2           CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);
      695     7887    2           QT$ENTRY$ = VLP_VECTOR.PTR$;
      696     7888    2           CHAR_STRING_SIZE = 4096;
      697     7889
      698     7890    2           KEY.MSGTYP = 'Version';
      699     7891    2           KEY.SUFFIX = ' ';
      700     7892    2           FPT_READ_KEY.BUF_ = VECTOR(QT$ENTRY$ -> CHAR$STRING);
      701     7893    2           CALL M$READ(FPT_READ_KEY) ALTRET(READ_KEY_ERR);
      702     7894
      703     7895    3           DO WHILE('0'B);
      704     7896
      705     7897    3   READ_KEY_ERR:
      706     7898    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 66 /* E$NOKEY */ THEN
      707     7899    4              DO;
      708     7900    4                 GOTO MON_ERR;
      709     7901    4              END;
      710     7902
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:25   
      711     7903    3              QQ_GLOBAL.ERR = CODE_NTRDRBUILT;
      712     7904    3              GOTO ALT;
      713     7905    3           END /* NEVER */;
      714     7906
      715     7907    2           CALL M$UNFID(FPT_UNFID) ALTRET(MON_ERR);
      716     7908    2           QQ_GLOBAL.TRADER_FID.L# = LEN;
      717     7909    2           SUBSTR(QQ_GLOBAL.TRADER_FID.NAME#, LEN, SIZEC(F$DCB.PASS#)) =
      718     7910    2             DCBADDR(DCBNUM(M$TRADER)) -> F$DCB.PASS#;
      719     7911
      720     7912    2           TYPLIST$ = ADDR(NIL);
      721     7913    2           QLIST$ = ADDR(NIL);
      722     7914    2           TYPLIST_SLOTS = 0;
      723     7915    2           QLIST_SLOTS = 0;
      724     7916    2           COUNT = 0;
      725     7917
      726     7918    2           CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
      727     7919
      728     7920    3           DO WHILE('1'B);
      729     7921    3              FPT_READ_TRADER.BUF_ = VECTOR(QT$ENTRY$ -> CHAR$STRING);
      730     7922    3              CALL M$READ(FPT_READ_TRADER) ALTRET(READ_ERR);
      731     7923
      732     7924    4              DO WHILE('0'B);
      733     7925
      734     7926    4   READ_ERR:
      735     7927    4                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      736     7928    4                 IF ERR.CODE = 6 /* E$EOF */ THEN
      737     7929    5                 DO;
      738     7930    5                    GOTO SETUP_FPT;
      739     7931    5                 END;
      740     7932
      741     7933    4                 IF ERR.CODE ~= 7 /* E$LD */ THEN
      742     7934    5                 DO;
      743     7935    5                    GOTO MON_ERR;
      744     7936    5                 END;
      745     7937
      746     7938    4                 VLP_VECTOR.PTR$ = QT$ENTRY$;
      747     7939    4                 CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:26   
      748     7940    4                 CHAR_STRING_SIZE = VLP_VECTOR.W1.VSIZE# + 1;
      749     7941    4                 CALL M$PRECORD(FPT_PRECORD) ALTRET(MON_ERR);
      750     7942    4                 GOTO LOOP;
      751     7943    4              END /* NEVER */;
      752     7944
      753     7945    3              IF KEY.SUFFIX = '_S' OR KEY.MSGTYP = 'Version' THEN
      754     7946    4              DO;
      755     7947    4                 GOTO LOOP;
      756     7948    4              END;
      757     7949
      758     7950    3              MAXACTIVE = VLP_CGQL_C.LIST.MXACT#(0);
      759     7951    3              PRIO = VLP_CGTYPL_C.LIST.PRIO#(0);
      760     7952    3              JOURNAL_FLAG = VLP_CGTYPL_C.LIST.JOURNAL#(0);
      761     7953    3              ONEREPORT_FLAG = '0'B;
      762     7954
      763     7955    3              IF KEY.SUFFIX = '_E' THEN
      764     7956    4              DO;
      765     7957    4                 CALL CHK_ENTRY;
      766     7958    4              END;
      767     7959    3              ELSE
      768     7960    4              DO;
      769     7961    4                 CALL CHK_FORM;
      770     7962    4              END;
      771     7963
      772     7964
      773     7965    3   LOOP:
      774     7966    3           END /* WHILE */;
      775     7967
      776     7968    2   SETUP_FPT:
      777     7969    2           IF COUNT > 0 THEN
      778     7970    3           DO;
      779     7971    3              CHAR_STRING_SIZE = 4 + COUNT * SIZEC(VLP_CGTYPL_C.LIST);
      780     7972    3              FPT_CGCTL.TYPLIST_ = VECTOR(TYPLIST$ -> CHAR$STRING);
      781     7973    3              CHAR_STRING_SIZE = COUNT * SIZEC(VLP_CGQL_C.LIST);
      782     7974    3              FPT_CGCTL.QLIST_ = VECTOR(QLIST$ -> CHAR$STRING);
      783     7975    3           END;
      784     7976
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:27   
      785     7977    2           RETURN;
      786     7978
      787     7979    2   ALT:
      788     7980    2           ALTRETURN;
      789     7981
      790     7982    2   MON_ERR:
      791     7983    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      792     7984    2           CALL QQC$SCREECH;
      793     7985
      794     7986    2   END OPEN_TRADER;
      795     7987                %PAGE(ARG="CHK_FORM", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:28   
              8004    2   /***************************************************************************
              8005    2    *                                                                         *
              8006    2    *                                  CHK_FORM                               *
              8007    2    *                                                                         *
              8008    2    ***************************************************************************/

      796     8012    1   CHK_FORM:
      797     8013    1           PROC;
      798     8014
      799     8015    2           IF QT$FORM.FLAGS.JOURNAL OR
      800     8016    2             QT$FORM.FLAGS.ONEREPORT THEN
      801     8017    3           DO;
      802     8018    3              JOURNAL_FLAG = QT$FORM.FLAGS.JOURNAL;
      803     8019    3              ONEREPORT_FLAG = QT$FORM.FLAGS.ONEREPORT;
      804     8020
      805     8021    3              CALL ADD_MSGTYP;
      806     8022    3           END;
      807     8023
      808     8024    2           RETURN;
      809     8025
      810     8026    2   END CHK_FORM;
      811     8027                %PAGE(ARG="CHK_ENTRY", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:29   
              8044    2   /***************************************************************************
              8045    2    *                                                                         *
              8046    2    *                                 CHK_ENTRY                               *
              8047    2    *                                                                         *
              8048    2    ***************************************************************************/

      812     8052    1   CHK_ENTRY:
      813     8053    1           PROC;
      814     8054
      815     8055    2           IF QT$ENTRY.MAXACTIVE ~= MAXACTIVE OR
      816     8056    2             QT$ENTRY.PRIO > 1 OR
      817     8057    2             QT$ENTRY.FLAGS.JOURNAL THEN
      818     8058    3           DO;
      819     8059    3              MAXACTIVE = QT$ENTRY.MAXACTIVE;
      820     8060    3              PRIO = QT$ENTRY.PRIO;
      821     8061    3              JOURNAL_FLAG = QT$ENTRY.FLAGS.JOURNAL;
      822     8062
      823     8063    3              CALL ADD_MSGTYP;
      824     8064    3           END;
      825     8065
      826     8066    2           REC$ = PINCRW(QT$ENTRY$, SIZEW(QT$ENTRY));
      827     8067    3           DO K = 1 TO QT$ENTRY.SET_COUNT;
      828     8068                                           /* Warning! QT_SUBS_C can't be included so */
      829     8069                                                /* 'REPORTS' is a hard coded #        */
      830     8070    3              IF REC$ -> QT$SETBITS.TYPE = 19 /* REPORTS */ AND
      831     8071    3                REC$ -> QT$SETBITS.FLAGS.ONEREPORT THEN
      832     8072    4              DO;
      833     8073    4                 MAXACTIVE = VLP_CGQL_C.LIST.MXACT#(0);
      834     8074    4                 PRIO = VLP_CGTYPL_C.LIST.PRIO#(0);
      835     8075    4                 JOURNAL_FLAG = VLP_CGTYPL_C.LIST.JOURNAL#(0);
      836     8076    4                 ONEREPORT_FLAG = '1'B;
      837     8077
      838     8078    4                 AMR$FPT_OPEN$ = ADDR(REC$ -> QT$SETBITS.ASN_MERGE.TEXT);
      839     8079    4                 PTR$_BITS = PINCRC(AMR$FPT_OPEN$,
      840     8080    4                   POFFC(ADDR(AMR$FPT_OPEN.SETSTA_), AMR$FPT_OPEN$)) -> BASED$WORD;
      841     8081
      842     8082    4                 SETSTA$ = PINCRC(AMR$FPT_OPEN$, PTR$_BITS.WORDS * 4);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:30   
      843     8083
      844     8084    4                 KEY.MSGTYP = VLP$SETSTA.OSTA.OMSGTYP#;
      845     8085
      846     8086    4                 CALL ADD_MSGTYP;
      847     8087    4              END;
      848     8088
      849     8089    3              REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETBITS));
      850     8090    3           END;
      851     8091
      852     8092    2           RETURN;
      853     8093
      854     8094    2   END CHK_ENTRY;
      855     8095                %PAGE(ARG="ADD_MSGTYP", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:31   
              8112    2   /***************************************************************************
              8113    2    *                                                                         *
              8114    2    *                                 ADD_MSGTYP                              *
              8115    2    *                                                                         *
              8116    2    ***************************************************************************/

      856     8120    1   ADD_MSGTYP:
      857     8121    1           PROC;
      858     8122
      859     8123    2           FOUND_FLAG = '0'B;
      860     8124    3           DO I = 1 TO COUNT;
      861     8125    3              IF VLP$CGTYPL.LIST.NAME#(I - 1) = KEY.MSGTYP THEN
      862     8126    4              DO;
      863     8127    4                 FOUND_FLAG = '1'B;
      864     8128
      865     8129    4                 IF MAXACTIVE ~= VLP_CGQL_C.LIST.MXACT#(0) THEN
      866     8130    5                 DO;
      867     8131    5                    VLP$CGQL.LIST.MXACT#(I - 1) = MAXACTIVE;
      868     8132    5                 END;
      869     8133
      870     8134    4                 IF PRIO > 1 THEN
      871     8135    5                 DO;
      872     8136    5                    VLP$CGTYPL.LIST.PRIO#(I - 1) = PRIO;
      873     8137    5                 END;
      874     8138
      875     8139    4                 IF JOURNAL_FLAG THEN
      876     8140    5                 DO;
      877     8141    5                    VLP$CGTYPL.LIST.JOURNAL#(I - 1) = JOURNAL_FLAG;
      878     8142    5                 END;
      879     8143
      880     8144    4                 IF ONEREPORT_FLAG THEN
      881     8145    5                 DO;
      882     8146    5                    VLP$CGTYPL.LIST.ONEREPORT#(I - 1) = ONEREPORT_FLAG;
      883     8147    5                 END;
      884     8148    4              END;
      885     8149    3           END;
      886     8150
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:32   
      887     8151    2           IF FOUND_FLAG THEN
      888     8152    3           DO;
      889     8153    3              GOTO RET;
      890     8154    3           END;
      891     8155
      892     8156    2           IF TYPLIST_SLOTS = 0 THEN
      893     8157    3           DO;
      894     8158    3              VLP_VECTOR.PTR$ = TYPLIST$;
      895     8159    3              CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);
      896     8160    3              TYPLIST$ = VLP_VECTOR.PTR$;
      897     8161    3              TYPLIST_SLOTS = 1024 / SIZEW(VLP_CGTYPL_C);
      898     8162    3           END;
      899     8163
      900     8164    2           IF QLIST_SLOTS = 0 THEN
      901     8165    3           DO;
      902     8166    3              VLP_VECTOR.PTR$ = QLIST$;
      903     8167    3              CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);
      904     8168    3              QLIST$ = VLP_VECTOR.PTR$;
      905     8169    3              QLIST_SLOTS = 1024 / SIZEW(VLP_CGQL_C);
      906     8170    3           END;
      907     8171
      908     8172    2           VLP$CGTYPL.LIST(COUNT) = VLP_CGTYPL_C.LIST;
      909     8173    2           VLP$CGTYPL.LIST.NAME#(COUNT) = KEY.MSGTYP;
      910     8174    2           VLP$CGTYPL.LIST.PRIO#(COUNT) = PRIO;
      911     8175    2           VLP$CGTYPL.LIST.JOURNAL#(COUNT) = JOURNAL_FLAG;
      912     8176    2           VLP$CGTYPL.LIST.ONEREPORT#(COUNT) = ONEREPORT_FLAG;
      913     8177    2           VLP$CGTYPL.LIST.PERM#(COUNT) = '1'B;
      914     8178
      915     8179    2           VLP$CGQL.LIST(COUNT) = VLP_CGQL_C.LIST;
      916     8180    2           VLP$CGQL.LIST.MXACT#(COUNT) = QT$ENTRY.MAXACTIVE;
      917     8181
      918     8182    2           QLIST_SLOTS = QLIST_SLOTS - 1;
      919     8183    2           COUNT = COUNT + 1;
      920     8184    2           TYPLIST_SLOTS = TYPLIST_SLOTS - 1;
      921     8185
      922     8186    2   RET:
      923     8187    2           RETURN;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:33   
      924     8188
      925     8189    2   MON_ERR:
      926     8190    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      927     8191    2           CALL QQC$SCREECH;
      928     8192
      929     8193    2   END ADD_MSGTYP;
      930     8194                %PAGE(ARG="RELEASE_MEM",PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:34   
              8211    2   /***************************************************************************
              8212    2    *                                                                         *
              8213    2    *                                RELEASE_MEM                              *
              8214    2    *                                                                         *
              8215    2    ***************************************************************************/

      931     8219    1   RELEASE_MEM:
      932     8220    1           PROC;
      933     8221
      934     8222    2           CALL QQD$SEGSIZE(QT$ENTRY$, WORDS);
      935     8223    2           VLP_VECTOR.PTR$ = QT$ENTRY$;
      936     8224    2           FPT_FDS.V.SEGSIZE# = WORDS;
      937     8225    2           CALL M$FDS(FPT_FDS) ALTRET(MON_ERR);
      938     8226
      939     8227    2           IF COUNT > 0 THEN
      940     8228    3           DO;
      941     8229    3              CALL QQD$SEGSIZE(TYPLIST$, WORDS);
      942     8230    3              VLP_VECTOR.PTR$ = TYPLIST$;
      943     8231    3              FPT_FDS.V.SEGSIZE# = WORDS;
      944     8232    3              CALL M$FDS(FPT_FDS) ALTRET(MON_ERR);
      945     8233    3              CALL QQD$SEGSIZE(QLIST$, WORDS);
      946     8234    3              VLP_VECTOR.PTR$ = QLIST$;
      947     8235    3              FPT_FDS.V.SEGSIZE# = WORDS;
      948     8236    3              CALL M$FDS(FPT_FDS) ALTRET(MON_ERR);
      949     8237    3           END;
      950     8238    2           RETURN;
      951     8239
      952     8240    2   MON_ERR:
      953     8241    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      954     8242    2           CALL QQC$SCREECH;
      955     8243    2   END RELEASE_MEM;
      956     8244                %PAGE(ARG="OPEN_JOURNAL", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:35   
              8261    2   /***************************************************************************
              8262    2    *                                                                         *
              8263    2    *                                OPEN_JOURNAL                             *
              8264    2    *                                                                         *
              8265    2    ***************************************************************************/

      957     8269    1   OPEN_JOURNAL:
      958     8270    1           PROC ALTRET;
      959     8271
      960     8272    2           CALL M$OPEN(FPT_OPEN_JOURNAL) ALTRET(OPEN_ERR);
      961     8273
      962     8274    3           DO WHILE('0'B);
      963     8275
      964     8276    3   OPEN_ERR:
      965     8277    3              CALL QQC$BLDMSG_ERRBLK(MSGBLK);
      966     8278    3              MSGBLK.ERRINFO.ERR(1) = CODE_JERR;
      967     8279    3              CALL QQC$BLDMSG(MSGBLK);
      968     8280    3              GOTO ALT;
      969     8281    3           END /* NEVER */;
      970     8282
      971     8283    2           FPT_UNFID.V.DCB# = DCBNUM(M$JOURNAL);
      972     8284    2           CALL QQD$SEGSIZE(QT$ENTRY$, WORDS);
      973     8285    2           CHAR_STRING_SIZE = WORDS * 4 - 2;
      974     8286    2           FPT_UNFID.TEXTFID_ = VECTOR(PINCRC(QT$ENTRY$, 2) -> CHAR$STRING);
      975     8287    2           CALL M$UNFID(FPT_UNFID) ALTRET(MON_ERR);
      976     8288    2           QT$ENTRY$ -> VLP$JRNLFIDV.L# = LEN;
      977     8289
      978     8290    2           FPT_CGCTL.JRNLFID_ = VECTOR(QT$ENTRY$ -> VLP$JRNLFIDV);
      979     8291    2           FPT_CGCTL.JRNLSTA_ = VECTOR(VLP_STATION_JRNL);
      980     8292    2           FPT_CLOSE_CG.V.GHSTACS# = 2 /* JRNLOPN# */;
      981     8293    2           VLP_CGCP.JOURNAL# = '1'B;
      982     8294
      983     8295    2           RETURN;
      984     8296
      985     8297    2   ALT:
      986     8298    2           ALTRETURN;
      987     8299
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:36   
      988     8300    2   MON_ERR:
      989     8301    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      990     8302    2           CALL QQC$SCREECH;
      991     8303
      992     8304    2   END OPEN_JOURNAL;
      993     8305                %PAGE(ARG="OPEN_CG", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:37   
              8322    2   /***************************************************************************
              8323    2    *                                                                         *
              8324    2    *                                  OPEN_CG                                *
              8325    2    *                                                                         *
              8326    2    ***************************************************************************/

      994     8330    1   OPEN_CG:
      995     8331    1           PROC ALTRET;
      996     8332
      997     8333    2           IF QQ_GLOBAL.JOURNAL THEN
      998     8334    3           DO;
      999     8335    3              CALL OPEN_JOURNAL ALTRET(ALT);
     1000     8336    3           END;
     1001     8337    2           ELSE
     1002     8338    3           DO;
     1003     8339    3              FPT_CGCTL.JRNLFID_ = VECTOR(ERASE);
     1004     8340    3              FPT_CGCTL.JRNLSTA_ = VECTOR(ERASE);
     1005     8341    3           END;
     1006     8342
     1007     8343    2           CALL M$OPEN(FPT_OPEN_CG) ALTRET(OPEN_ERR);
     1008     8344
     1009     8345    3           DO WHILE ('0'B);
     1010     8346    3   OPEN_ERR:
     1011     8347    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 142 AND
     1012     8348    3                B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 109 AND
     1013     8349    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 1136 AND
     1014     8350    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 886 THEN
     1015     8351    3                 GOTO MON_ERR;
     1016     8352    3              QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1017     8353    3              GOTO ALT;
     1018     8354    3           END /* WHILE NEVER */;
     1019     8355
     1020     8356    2           CALL M$CGCTL(FPT_CGCTL) ALTRET(CGCTL_ERR);
     1021     8357
     1022     8358    3           DO WHILE ('0'B);
     1023     8359    3   CGCTL_ERR:
     1024     8360    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 109
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:38   
     1025     8361    3              THEN GOTO MON_ERR;
     1026     8362    3           END /* WHILE NEVER */;
     1027     8363
     1028     8364    2           FPT_CGCTL.QLIST_ = VECTOR(NIL);
     1029     8365    2           FPT_CGCTL.TYPLIST_ = VECTOR(NIL);
     1030     8366
     1031     8367    2           CALL M$CLOSE(FPT_CLOSE_CG) ALTRET(MON_ERR);
     1032     8368
     1033     8369    2           FPT_OPEN_CG.V.SHARE# = 1 /* ALL# */;
     1034     8370    2           FPT_OPEN_CG.V.EXIST# = 2 /* OLDFILE# */;
     1035     8371    2           FPT_OPEN_CG.V.FUN# = 1 /* UPDATE# */;
     1036     8372    2           CALL M$OPEN(FPT_OPEN_CG) ALTRET(MON_ERR);
     1037     8373
     1038     8374    2           RETURN;
     1039     8375
     1040     8376    2   ALT:
     1041     8377    2           ALTRETURN;
     1042     8378
     1043     8379    2   MON_ERR:
     1044     8380    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1045     8381    2           CALL QQC$SCREECH;
     1046     8382
     1047     8383    2   END OPEN_CG;
     1048     8384                %PAGE(ARG="OPEN_SAVCMD", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:39   
              8401    2   /***************************************************************************
              8402    2    *                                                                         *
              8403    2    *                                OPEN_SAVCMD                              *
              8404    2    *                                                                         *
              8405    2    ***************************************************************************/

     1049     8409    1   OPEN_SAVCMD:
     1050     8410    1           PROC ALTRET;
     1051     8411
     1052     8412    2           M$SAVCMD$ = DCBADDR(DCBNUM(M$SAVCMD));
     1053     8413    2           M$SVCMD1$ = DCBADDR(DCBNUM(M$SVCMD1));
     1054     8414    2           IF (M$SAVCMD$->F$DCB.AMR#) AND NOT (QQ_GLOBAL.NEWCG) THEN
     1055     8415    3           DO;
     1056     8416    3              SAVCMD.L# = M$SAVCMD$->F$DCB.NAME#.L;
     1057     8417    3              SAVCMD.NAME# = M$SAVCMD$->F$DCB.NAME#.C;
     1058     8418    3              CALL M$OPEN (FPT_OPEN_SVCMD1)
     1059     8419    4              WHENALTRETURN DO; END;
     1060     8420    3           END;
     1061     8421    2           CALL M$OPEN(FPT_OPEN_SAVCMD) ALTRET(OPEN_ERR);
     1062     8422    2           FPT_READ_SEQ.V.DCB# = DCBNUM(M$SVCMD1);
     1063     8423
     1064     8424    3           DO WHILE ('0'B);
     1065     8425    3   OPEN_ERR:
     1066     8426    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 142 AND
     1067     8427    3                B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 109 AND
     1068     8428    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 1136 AND
     1069     8429    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 886 THEN
     1070     8430    3                 GOTO MON_ERR;
     1071     8431    3              QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1072     8432    3              GOTO ALT;
     1073     8433    3           END /* WHILE NEVER */;
     1074     8434
     1075     8435    2           IF (M$SVCMD1$->F$DCB.FCD#) THEN
     1076     8436    3           DO WHILE('1'B);
     1077     8437    3              CALL M$READ(FPT_READ_SEQ) ALTRET(READ_CMD_ERR1);
     1078     8438
     1079     8439    4              DO WHILE('0'B);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:40   
     1080     8440
     1081     8441    4   READ_CMD_ERR1:
     1082     8442    4                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1083     8443    4                 IF ERR.CODE ~= 6 /* E$EOF */ THEN
     1084     8444    5                 DO;
     1085     8445    5                    GOTO MON_ERR;
     1086     8446    5                 END;
     1087     8447
     1088     8448    4                 CALL M$CLOSE (FPT_CLOSE_SVCMD1);
     1089     8449    4                 RETURN;
     1090     8450    4              END /* NEVER */;
     1091     8451
     1092     8452    3              QQ_CMDBLK.ARS = M$SVCMD1$ -> F$DCB.ARS#;
     1093     8453    3              CALL QQA$CMD;
     1094     8454    3           END;
     1095     8455    2           ELSE RETURN;                    /* NO SAVE COMMANDS TO PROCESS        */
     1096     8456
     1097     8457    2   ALT:
     1098     8458    2           ALTRETURN;
     1099     8459
     1100     8460    2   MON_ERR:
     1101     8461    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1102     8462    2           CALL QQC$SCREECH;
     1103     8463
     1104     8464    2   END OPEN_SAVCMD;
     1105     8465    1   END QQA$INIT;

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:41   
--  Include file information  --

   PC_MACRO_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQA$INIT.

   Procedure QQA$INIT requires 1309 words for executable code.
   Procedure QQA$INIT requires 94 words of local(AUTO) storage.

    No errors detected in file QQA$INIT.:E05TSI    .

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:42   

 Object Unit name= QQA$INIT                                   File name= QQA$INIT.:E05TOU
 UTS= JUL 30 '97 05:24:20.16 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$SI
    2   DCB   even  none    98    142  M$SAVCMD
    3   DCB   even  none     0      0  M$SVCMD1
    4   DCB   even  none     0      0  M$JOURNAL
    5   DCB   even  none     0      0  M$DO
    6   DCB   even  none     0      0  M$TPCMD
    7   DCB   even  none     0      0  M$TRADER
    8   DCB   even  none     0      0  M$HOLD
    9   DCB   even  none     0      0  M$INFOSTA
   10   DCB   even  none     0      0  M$CG
   11   DCB   even  none    98    142  M$CSCG
   12   DCB   even  none    98    142  M$TPCNTRL
   13  RoData even  UTS     40     50  QQA$INIT
   14   Data  even  none   964   1704  QQA$INIT
   15   Proc  even  none  1309   2435  QQA$INIT
   16  RoData even  none    46     56  QQA$INIT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    15      0   yes            yes      Std        0  QQA$INIT
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:43   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          Async      0 QQA$EVENT
 yes     yes           Std       4 QQC$START_TPU
         yes          Async      0 QQA$XCON
         yes           Std       0 QQC$SCREECH
         yes           Std       1 QQC$BLDMSG
         yes           Std       0 QQA$CMD
         yes           Std       1 QQC$BLDMSG_ERRBLK
         yes           Std       2 QQC$INIT_BLKMGR
         yes           Std       1 QQC$STOPTP
 yes     yes           Std       3 QQC$GET_BLK
         yes           Std       3 QQC$CONVERT_NUM
         yes           Std       2 QQD$SEGSIZE
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  QQ_CMDBLK                             QQ_GLOBAL
     QQ_TP$STATION_INIT                    B$JIT$                                B$TCB$
     M$SI                                  M$SAVCMD                              M$SVCMD1
     M$JOURNAL                             M$DO                                  M$TPCMD
     M$TRADER                              M$HOLD                                M$INFOSTA
     M$CG                                  M$CSCG                                M$TPCNTRL
     B_VECTNIL
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:44   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:45   


        1        1        /*M* QQA$INIT - Initialize a TP instance */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  CSU=2, ECU=3, AND */
        8        8        /*P* NAME:        QQA$INIT
        9        9
       10       10             PURPOSE:     This routine initializes an instance of TP.
       11       11        */
       12       12        /*D* NAME:        QQA$INIT
       13       13
       14       14             CALL:        CALL QQA$INIT
       15       15
       16       16             INPUT:       None
       17       17
       18       18             OUTPUT:      None
       19       19
       20       20             DESCRIPTION: There are a number of things that must be done
       21       21                          in order to prepare the instance of TP.
       22       22
       23       23                          Open up CSCG so that we may communicate with
       24       24                          the operators.  Also if another station with
       25       25                          the same name as us (B$JIT.ACCN) is open to CSCG we
       26       26                          know that this instance of TP is already up.
       27       27
       28       28                          Open the shared data segment file that
       29       29                          CONTROL builds.  The information provided
       30       30                          in this file tells us that this instance has
       31       31                          been authorized and, it may use up to #
       32       32                          TPU slots.  In addition this shared data
       33       33                          segment file contains the statistics data
       34       34                          for the instance of TP.  Someday STATS
       35       35                          will open up to this file to obtain
       36       36                          statistics information about the instance
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:46   
       37       37                          of TP which TPA put here.
       38       38
       39       39                          Read the initialization commands.  These
       40       40                          commands are read in two different passes.
       41       41                          First the commands are read that must be
       42       42                          processed before the comgroup has been
       43       43                          opened and then the commands that must
       44       44                          be read later are written to a star
       45       45                          file by QQA$CMD.
       46       46
       47       47                          Reading the TRADER file.  The purpose of reading
       48       48                          the TRADER file is to gather control information
       49       49                          that we are going to pass to the comgroup.
       50       50                          What we are looking for when reading the file is
       51       51                          'non default' cases.  A non default case is
       52       52                          one where the prio is > 1, maxactive ~= to the
       53       53                          system default or maybe this type is to be
       54       54                          journaled.  The information gathered from
       55       55                          reading the TRADER file is collected so we
       56       56                          may perform a M$CGCTL pmme passing the info
       57       57                          to the comgroup.
       58       58
       59       59                          Initializing dynamic memory. There are some
       60       60                          number of linked list tables that TPA
       61       61                          utilizes.  These tables all have a fixed
       62       62                          head and tail that are initialized to
       63       63                          point to each other.  Every structure
       64       64                          that is stored in dynamic memory contains
       65       65                          the blink and flink of the linked list
       66       66                          as the first two words of the structure.
       67       67
       68       68                          Once the comgroup has been opened the commands
       69       69                          that had been saved in the star file for deferred
       70       70                          processing can now be processed.
       71       71
       72       72                          A no wait read is established from the CSCG and
       73       73                          TP comgroup.
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:47   
       74       74
       75       75                          The initial or default TPUs are started.
       76       76        */
       77       77        %EJECT;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:48   
       78       78        QQA$INIT:
       79       79                PROC;

     79 15 000000   000000 700200 xent  QQA$INIT     TSX0  ! X66_AUTO_0
        15 000001   000136 000000                    ZERO    94,0

       80       80
       81       81        %INCLUDE Q_PAGE_C;
       82      113        %SET LISTEXP = '1'B;
       83      114        %PAGE(ARG="Includes");

               131        /***************************************************************************
               132         *                                                                         *
               133         *                                  Includes                               *
               134         *                                                                         *
               135         ***************************************************************************/

       84      139        %INCLUDE CP_6;
       85      220        %INCLUDE CP_6_SUBS;
       86      760        %INCLUDE OC_SUBS_C;
       87     1491        %INCLUDE B$JIT;
       88     1781        %INCLUDE B_ERRORS_C;
       89     2908        %INCLUDE QQ_PERR_C;
       90     3069        %INCLUDE Q_ERRCODE_C;
       91     3092        %INCLUDE QQ_MACROS_C;
       92     3517        %INCLUDE QQ_DATA_R;
       93     3763        %INCLUDE QQ_SUBS_C;
       94     3955        %INCLUDE QT_MACROS_C;
       95     4113        %INCLUDE PC_MACRO_C;
       96     4139        %PAGE(ARG="Externally defined routines");

              4156    1   /***************************************************************************
              4157    1    *                                                                         *
              4158    1    *                        Externally defined routines                      *
              4159    1    *                                                                         *
              4160    1    ***************************************************************************/

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:49   
       97     4164    1   DCL QQC$START_TPU ENTRY(4) ALTRET;
       98     4165    1   DCL QQC$INIT_BLKMGR ENTRY(2);
       99     4166    1   DCL QQC$GET_BLK ENTRY(3) ALTRET;
      100     4167    1   DCL QQA$CMD ENTRY;
      101     4168    1   DCL QQA$EVENT ENTRY ASYNC;
      102     4169    1   DCL QQA$XCON ENTRY ASYNC;
      103     4170    1   DCL QQC$STOPTP ENTRY(1);
      104     4171    1   DCL QQC$BLDMSG_ERRBLK ENTRY(1);
      105     4172    1   DCL QQC$BLDMSG ENTRY(1);
      106     4173    1   DCL QQC$CONVERT_NUM ENTRY(3);
      107     4174    1   DCL QQC$SCREECH ENTRY;
      108     4175    1   DCL QQD$SEGSIZE ENTRY(2);
      109     4176        %PAGE(ARG="Symrefs");

              4193    1   /***************************************************************************
              4194    1    *                                                                         *
              4195    1    *                                  Symrefs                                *
              4196    1    *                                                                         *
              4197    1    ***************************************************************************/

      110     4201    1   DCL B$JIT$ PTR SYMREF;
      111     4202    1   DCL B$TCB$ PTR SYMREF;
      112     4203        %PAGE(ARG="DCBs");

              4220    1   /***************************************************************************
              4221    1    *                                                                         *
              4222    1    *                                    DCBs                                 *
              4223    1    *                                                                         *
              4224    1    ***************************************************************************/

      113     4228    1   DCL M$SI DCB;
      114     4229        %M$DCB(DCBN=M$SAVCMD,
      115     4230               NAME='*SAVCMD',
      116     4231               ACS=SEQUEN,
      117     4232               ASN=FILE,
      118     4233               CTG=YES,
      119     4234               DISP=NAMED,
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:50   
      120     4235               EXIST=NEWFILE,
      121     4236               FUN=CREATE,
      122     4237               ORG=CONSEC,
      123     4238               SHARE=ALL) ;
      124     4312    1   DCL M$SVCMD1 DCB;
      125     4313    1   DCL M$JOURNAL DCB;
      126     4314    1   DCL M$DO DCB;
      127     4315    1   DCL M$TPCMD DCB;
      128     4316    1   DCL M$TRADER DCB;
      129     4317    1   DCL M$HOLD DCB;
      130     4318    1   DCL M$INFOSTA DCB;
      131     4319    1   DCL M$CG DCB;
      132     4320        %M$DCB(DCBN=M$CSCG, NAME='CSCG', ACCT=':SYS');
      133     4394        %M$DCB(DCBN=M$TPCNTRL, NAME='TP_CNTRL_D', ACCT=':SYS');
      134     4468        %PAGE(ARG="Based");

              4485    1   /***************************************************************************
              4486    1    *                                                                         *
              4487    1    *                                   Based                                 *
              4488    1    *                                                                         *
              4489    1    ***************************************************************************/

      135     4493        %B$TCB;
      136     4496        %B$ALT;
      137     4504        %F$DCB;
      138     4561        %TP$EVENT;
      139     4630        %TPU$INFO;
      140     4659        %QT$ENTRY(STCLASS="BASED(QT$ENTRY$)");
      141     4713        %QT$SETBITS;
      142     4734        %VLP_SETSTA(FPTN=VLP$SETSTA, STCLASS="BASED(SETSTA$)");
      143     4762        %VLP_JRNLFIDV(FPTN=VLP$JRNLFIDV, STCLASS=BASED);
      144     4769        %QT$FORM(STCLASS="BASED(QT$ENTRY$)");
      145     4808        %DISAB$INFO;
      146     4824        %VLP_CGQL(FPTN=VLP$CGQL, STCLASS="BASED(QLIST$)");
      147     4846        %VLP_CGTYPL(FPTN=VLP$CGTYPL, STCLASS="BASED(TYPLIST$)");
      148     4871        %PC$HDR(STCLASS="BASED(QQ_GLOBAL.CONTROL$)");
      149     4875        %PC$INSTANCE(STCLASS="BASED(QQ_GLOBAL.PC$INSTANCE$)");
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:51   
      150     4925        %FPT_OPEN(FPTN=AMR$FPT_OPEN, STCLASS="BASED(AMR$FPT_OPEN$)",
      151     4926        PFMT=PTR, VECTOR=ADDR);
      152     5035
      153     5036    1   DCL BASED$WORD BIT(36) UNAL BASED;
      154     5037
      155     5038
      156     5039    1   DCL CHAR$STRING CHAR(CHAR_STRING_SIZE) BASED;
      157     5040        %PAGE(ARG="Constants");

              5057    1   /***************************************************************************
              5058    1    *                                                                         *
              5059    1    *                                 Constants                               *
              5060    1    *                                                                         *
              5061    1    ***************************************************************************/

      158     5065        %VLP_CGTYPL(FPTN=VLP_CGTYPL_C, STCLASS=CONSTANT);
      159     5090        %VLP_CGQL(FPTN=VLP_CGQL_C, MXACT=9999, STCLASS=CONSTANT);
      160     5112        %PAGE(ARG="Static");

              5129    1   /***************************************************************************
              5130    1    *                                                                         *
              5131    1    *                                   Static                                *
              5132    1    *                                                                         *
              5133    1    ***************************************************************************/

      161     5137    1   DCL LEN UBIN WORD STATIC;
      162     5138
      163     5139    1   DCL 1 KEY STATIC,
      164     5140    1         2 COUNT UBIN(9) UNAL INIT(10),
      165     5141    1         2 MSGTYP CHAR(8),
      166     5142    1         2 SUFFIX CHAR(2);
      167     5143        %PAGE(ARG="Auto");

              5160    1   /***************************************************************************
              5161    1    *                                                                         *
              5162    1    *                                    Auto                                 *
              5163    1    *                                                                         *
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:52   
              5164    1    ***************************************************************************/

      168     5168    1   DCL HEAD$ PTR;
      169     5169    1   DCL TAIL$ PTR;
      170     5170    1   DCL P$ PTR;
      171     5171    1   DCL M$TPCMD$ PTR;
      172     5172    1   DCL M$SI$ PTR;
      173     5173    1   DCL M$SAVCMD$ PTR;
      174     5174    1   DCL M$SVCMD1$ PTR;
      175     5175    1   DCL TYPLIST$ PTR;
      176     5176    1   DCL QLIST$ PTR;
      177     5177    1   DCL QT$ENTRY$ PTR;
      178     5178    1   DCL REC$ PTR;
      179     5179    1   DCL AMR$FPT_OPEN$ PTR;
      180     5180    1   DCL SETSTA$ PTR;
      181     5181
      182     5182    1   DCL COUNT SBIN WORD;
      183     5183    1   DCL TYPLIST_SLOTS SBIN WORD;
      184     5184    1   DCL QLIST_SLOTS SBIN WORD;
      185     5185    1   DCL POS SBIN WORD;
      186     5186    1   DCL CHAR_STRING_SIZE SBIN WORD;
      187     5187    1   DCL WORDS SBIN WORD;
      188     5188    1   DCL I SBIN WORD;
      189     5189    1   DCL K SBIN WORD;
      190     5190    1   DCL SIZE SBIN WORD;
      191     5191    1   DCL BLANK_POS SBIN WORD;
      192     5192    1   DCL PRIO SBIN WORD;
      193     5193    1   DCL MAXACTIVE SBIN WORD;
      194     5194
      195     5195    1   DCL JOURNAL_FLAG BIT(1) ALIGNED;
      196     5196    1   DCL ONEREPORT_FLAG BIT(1) ALIGNED;
      197     5197    1   DCL FOUND_FLAG BIT(1) ALIGNED;
      198     5198    1   DCL NOW_FLAG BIT(1) ALIGNED;
      199     5199
      200     5200    1   DCL CMD CHAR(80);
      201     5201    1   DCL MSGTYP CHAR(8);
      202     5202
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:53   
      203     5203        %MSGBLK;
      204     5293        %VLP_NAME(FPTN=TEXTC_NUM, STCLASS=AUTO, LEN=7);
      205     5320    1   DCL 1 ERR,
      206     5321    1         2 FCG BIT(12) UNAL,
      207     5322    1         2 MID BIT(6) UNAL,
      208     5323    1         2 MON BIT(1) UNAL,
      209     5324    1         2 CODE UBIN(14) UNAL,
      210     5325    1         2 SEV UBIN(3) UNAL;
      211     5326
      212     5327    1   DCL 1 PTR$_BITS,
      213     5328    1         2 WORDS UBIN(18) UNAL,
      214     5329    1         2 * UBIN(18) UNAL;
      215     5330        %PAGE(ARG="Error codes", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:54   
              5347    1   /***************************************************************************
              5348    1    *                                                                         *
              5349    1    *                                Error codes                              *
              5350    1    *                                                                         *
              5351    1    ***************************************************************************/

      216     5355        %ERRCODE(NAME=CODE_NO_POOLMEM, CODE#=%E$NO_POOLMEM, FCG#=%FCG_QQ, MID#=%MID_A);
      217     5362        %ERRCODE(NAME=CODE_NTRDRBUILT, CODE#=%E$NTRDRBUILT, FCG#=%FCG_QQ, MID#=%MID_A);
      218     5369        %ERRCODE(NAME=CODE_NT, CODE#=%E$NT, FCG#=%FCG_QQ, MID#=%MID_A);
      219     5376        %ERRCODE(NAME=CODE_DDI, CODE#=%E$DDI, FCG#=%FCG_QQ, MID#=%MID_A);
      220     5383        %ERRCODE(NAME=CODE_IIAU, CODE#=%E$IIAU, FCG#=%FCG_QQ, MID#=%MID_A);
      221     5390        %ERRCODE(NAME=CODE_COC, CODE#=%E$COC, FCG#=%FCG_QQ, MID#=%MID_A);
      222     5397        %ERRCODE(NAME=CODE_NAVC, CODE#=%E$NAVC, FCG#=%FCG_QQ, MID#=%MID_A);
      223     5404        %ERRCODE(NAME=CODE_NOTPUS, CODE#=%E$NOTPUS, FCG#=%FCG_QQ, MID#=%MID_A);
      224     5411        %ERRCODE(NAME=CODE_LESSTPUS, CODE#=%E$LESSTPUS, FCG#=%FCG_QQ, MID#=%MID_A);
      225     5418        %ERRCODE(NAME=CODE_JERR, CODE#=%E$JERR, FCG#=%FCG_QQ, MID#=%MID_A);
      226     5425        %ERRCODE(NAME=CODE_STRTUP, CODE#=%E$STRTUP, FCG#=%FCG_QQ, MID#=%MID_A);
      227     5432
      228     5433        /*E*       ERROR: QQA-E$NO_POOLMEM-E
      229     5434
      230     5435                 MESSAGE: Memory request failed.  Increase the value
      231     5436                          of POOLSIZE via the LET command.
      232     5437             DESCRIPTION: For some reason all of the memory from the
      233     5438                          pool is gone.  Check the chains of the user's
      234     5439                          of this memory to see where it has gone.
      235     5440        */
      236     5441        /*E*       ERROR: QQA-E$NT-C
      237     5442
      238     5443                 MESSAGE: M$TRADER DCB has not been assigned.
      239     5444             DESCRIPTION: Since we are unable to open the TRADER file we
      240     5445                          can not start up the instance of TP.
      241     5446        */
      242     5447        /*E*       ERROR: QQA-E$NTRDRBUILT-C
      243     5448
      244     5449                 MESSAGE: The file supplied as the TRADER file was not
      245     5450                          built by TRADER.
      246     5451             DESCRIPTION: Only files built by the TRADER utility can
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:55   
      247     5452                          be used as TRADER files.
      248     5453        */
      249     5454        /*E*       ERROR: QQA-E$DDI-C
      250     5455
      251     5456                 MESSAGE: %U1 diagnostic(s) issued during TP
      252     5457                          initialization.
      253     5458             DESCRIPTION: Number of diagnostics printed during
      254     5459                          initialization.
      255     5460        */
      256     5461        /*E*       ERROR: QQA-E$IIAU-C
      257     5462
      258     5463                 MESSAGE: This instance of TP is already up.
      259     5464             DESCRIPTION: Only one instance of TP may be running in
      260     5465                          an account at a time.
      261     5466        */
      262     5467        /*E*       ERROR: QQA-E$COC-C
      263     5468
      264     5469                 MESSAGE: This instance of TP has not been authorized
      265     5470                          with the CONTROL processor.
      266     5471             DESCRIPTION: We must be able to open the file built by
      267     5472                          CONTROL in order to start up the TP instance.
      268     5473        */
      269     5474        /*E*       ERROR: QQA-E$NAVC-C
      270     5475
      271     5476                 MESSAGE: This instance of TP has not been authorized with
      272     5477                          the CONTROL processor.
      273     5478             DESCRIPTION: An instance of TP must be authorized with the
      274     5479                          to find out how to do this.
      275     5480        */
      276     5481        /*E*       ERROR: QQA-E$NOTPUS-C
      277     5482
      278     5483                 MESSAGE: No TPUs can be started in response to the
      279     5484                          LET TPUINITIAL command.
      280     5485             DESCRIPTION: If we are unable to start even one TPU from
      281     5486                          from the initial number that was requested
      282     5487                          something must be wrong
      283     5488        */
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:56   
      284     5489        /*E*       ERROR: QQA-E$LESSTPUS-C
      285     5490
      286     5491                 MESSAGE: CONTROL limit for TPUs in this instance of TP
      287     5492                          reached.  Unable to start the number of TPUs
      288     5493                          reached by LET TPUINITIAL.
      289     5494             DESCRIPTION: For some reason we are unable to start the
      290     5495                          full compliment of requested TPUs.
      291     5496        */
      292     5497        /*E*       ERROR: QQA-E$JERR-C
      293     5498
      294     5499                 MESSAGE: Unable to open the JOURNAL
      295     5500             DESCRIPTION: For some reason we were unable to open the
      296     5501                          journal file.
      297     5502        */
      298     5503        /*E*       ERROR: QQA-E$STRTUP-E
      299     5504
      300     5505                 MESSAGE: Error encountered in startup of TP during %U1
      301     5506                          for the following reason.
      302     5507             DESCRIPTION: For some reason we encountered an exceptional
      303     5508                          condition during startup of TP. Error message
      304     5509                          follows.
      305     5510        */
      306     5511        %PAGE(ARG="FPTs", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:57   
              5528    1   /***************************************************************************
              5529    1    *                                                                         *
              5530    1    *                                    FPTs                                 *
              5531    1    *                                                                         *
              5532    1    ***************************************************************************/

      307     5536        %FPT_READ(FPTN=FPT_READ_SEQ, DCB=M$SI);
      308     5575
      309     5576        %FPT_READ(FPTN=FPT_READ_CG, DCB=M$CG, WAIT=NO, EVENT=1, STATION=VLP_STATION);
      310     5615
      311     5616        %FPT_READ(FPTN=FPT_READ_CSCG,DCB=M$CSCG, WAIT=NO, EVENT=2, STATION=VLP_STATION);
      312     5655
      313     5656        %FPT_PFIL(DCB=M$TRADER, BOF=YES);
      314     5671
      315     5672        %FPT_OPEN(FPTN=FPT_OPEN_CG, DCB=M$CG, ASN=COMGROUP, CTG=YES, AU=YES,
      316     5673        FUN=CREATE, EXIST=OLDFILE, SETSTA=VLP_SETSTA,
      317     5674        NAME=VLP_NAME, SHARE=NONE, JRNLBYPASS=YES);
      318     5783
      319     5784        %FPT_OPEN(FPTN=FPT_OPEN_HOLD, DCB=M$HOLD, ASN=COMGROUP,
      320     5785        NAME=VLP_NAME, SETSTA=VLP_SETSTA_HOLD);
      321     5894
      322     5895        %FPT_OPEN(FPTN=FPT_OPEN_INFO, DCB=M$INFOSTA, ASN=COMGROUP,
      323     5896        NAME=VLP_NAME, SETSTA=VLP_SETSTA_INFO);
      324     6005
      325     6006        %FPT_OPEN(FPTN=FPT_OPEN_CSCG, DCB=M$CSCG, ASN=COMGROUP, SETSTA=VLP_SETSTA_CSCG,
      326     6007                   FUN=UPDATE,SHARE=ALL,ACCT=SYSACCT,NAME=CGNAME);
      327     6116
      328     6117        %FPT_OPEN(FPTN=FPT_OPEN_SAVCMD, DCB=M$SAVCMD) ;
      329     6226
      330     6227        %FPT_OPEN(FPTN=FPT_OPEN_SVCMD1, DCB=M$SVCMD1, ASN=FILE,
      331     6228        ACS=SEQUEN, FUN=IN,CTG=YES,NAME=SAVCMD) ;
      332     6337
      333     6338        %FPT_OPEN(FPTN=FPT_OPEN_TPCMD, DCB=M$TPCMD, ASN=FILE,
      334     6339        DISP=SCRATCH, ACS=SEQUEN, FUN=CREATE);
      335     6448
      336     6449        %FPT_OPEN(FPTN=FPT_OPEN_TRADER, DCB=M$TRADER, ASN=FILE,
      337     6450        FUN=UPDATE, ACS=DIRECT, SHARE=ALL);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:58   
      338     6559
      339     6560        %FPT_OPEN(FPTN=FPT_OPEN_TPCNTRL, DCB=M$TPCNTRL, FUN=UPDATE,
      340     6561        ASN=FILE, SHARE=ALL, ORG=RANDOM, ACS=DS4);
      341     6670
      342     6671        %FPT_FDS(RESULTS=VLP_VECTOR);
      343     6686
      344     6687        %FPT_GDS(RESULTS=VLP_VECTOR, SEGSIZE=1024);
      345     6703
      346     6704        %FPT_CGCTL(DCB=M$CG, CGCP=VLP_CGCP,
      347     6705        HOLDSTA=VLP_SETSTA_HOLD);
      348     6728
      349     6729        %FPT_EVENT(UENTRY=QQA$EVENT);
      350     6743
      351     6744        %FPT_READ(FPTN=FPT_READ_TRADER, DCB=M$TRADER, KEYR=YES, KEY=KEY);
      352     6783
      353     6784        %FPT_UNFID(DCB=M$TRADER, TEXTFID="QQ_GLOBAL.TRADER_FID.NAME#", LEN=LEN);
      354     6802
      355     6803        %FPT_INT(UENTRY=QQA$XCON);
      356     6817
      357     6818        %FPT_XCON(UENTRY=QQA$XCON);
      358     6832
      359     6833        %FPT_TIME(SOURCE=CLOCK, TSTAMP=QQ_GLOBAL.STIMER_UTS);
      360     6852
      361     6853        %FPT_PRECORD(DCB=M$TRADER, N=-1);
      362     6874
      363     6875        %FPT_READ(FPTN=FPT_READ_KEY, DCB=M$TRADER, KEYS=YES, KEY=KEY);
      364     6914
      365     6915        %FPT_CLOSE(FPTN=FPT_CLOSE_CG, DCB=M$CG, CHGATT=YES);
      366     6957
      367     6958        %FPT_CLOSE(FPTN=FPT_CLOSE_SVCMD1, DCB=M$SVCMD1);
      368     7000
      369     7001        %FPT_OPEN(FPTN=FPT_OPEN_JOURNAL, DCB=M$JOURNAL, ACS=JRNL,
      370     7002        GHSTACS=JRNLOPN, FUN=CREATE, ASN=FILE, EXIST=OLDFILE, ORG=CONSEC);
      371     7111        %PAGE(ARG="VLPs");

              7128    1   /***************************************************************************
              7129    1    *                                                                         *
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:59   
              7130    1    *                                    VLPs                                 *
              7131    1    *                                                                         *
              7132    1    ***************************************************************************/

      372     7136        %VLP_CGCP(TERMCONAU=NO, DCBCONAU=NO, TERMCONNAU=NO,
      373     7137        DCBCONNAU=NO, AUDCONTERM=DISCONNECT, AUDCONDCB=DEACTIVATE,
      374     7138        XSTALGL=YES, XTYPLGL=YES, DCBCONLGL=YES, TERMCONLGL=YES,
      375     7139        SECURE=YES, UNLAMSG=NO, DISKWARN=25, MEMWARN=5,
      376     7140        QRML=YES, DRML=YES, CARRYOSTA=YES,
      377     7141        BIGMXT=YES, DCBCONWA=YES, TMTYP='TBING', DMTYP='*RESP',
      378     7142        MINPG=10, MAXPG=30, DEFERBLKS=40, MEMWARNP=YES);
      379     7185
      380     7186        %VLP_VECTOR(SEGID='0'O);
      381     7201        %VLP_STATION(DIRONLY=YES, LATCH=YES);
      382     7228        %VLP_STATION(FPTN=VLP_STATION_JRNL, STATION='JRNLSTA');
      383     7255        %VLP_SETSTA(MYSTATION='TPA');
      384     7283        %VLP_SETSTA(FPTN=VLP_SETSTA_CSCG);
      385     7311        %VLP_ACCT (FPTN=SYSACCT, ACCT=':SYS');
      386     7324        %VLP_NAME (FPTN=CGNAME, NAME='CSCG');
      387     7351        %VLP_NAME(NAME='123456789');
      388     7378        %VLP_NAME(FPTN=TEXTC_NAME);
      389     7405        %VLP_NAME(FPTN=SAVCMD,NAME='*SAVCMD');
      390     7432        %VLP_SETSTA(FPTN=VLP_SETSTA_HOLD, MYSTATION='HOLDSTA');
      391     7460        %VLP_CGSTAL(FPTN=VLP_CGSTAL_HOLD, AUP=YES);
      392     7485        %VLP_SETSTA(FPTN=VLP_SETSTA_INFO, MYSTATION='INFOSTA');
      393     7513        %VLP_CGSTAL(FPTN=VLP_CGSTAL_INFO, AUP=YES);
      394     7538        %PAGE(ARG="QQA$INIT", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:60   
              7555    1   /***************************************************************************
              7556    1    *                                                                         *
              7557    1    *                                  QQA$INIT                               *
              7558    1    *                                                                         *
              7559    1    ***************************************************************************/

      395     7563    1           CALL M$XCON(FPT_XCON);

   7563 15 000002   001250 630400 14                 EPPR0   FPT_XCON
        15 000003   010003 713400                    CLIMB   4099
        15 000004   400400 401760                    pmme    nvectors=2

      396     7564
      397     7565    1           QQ_CMDBLK.ORIGIN = 2 /* ORIGIN_INIT */;

   7565 15 000005   000002 220003                    LDX0    2,DU
        15 000006   000007 740000 xsym               STX0    QQ_CMDBLK+7

      398     7566
      399     7567    1           IF B$JIT.MODE = 3 /* M_INT# */ THEN

   7567 15 000007   000000 470400 xsym               LDP0    B$JIT$
        15 000010   000000 236100                    LDQ     0,,PR0
        15 000011   740000 376003                    ANQ     -16384,DU
        15 000012   140000 116003                    CMPQ    49152,DU
        15 000013   000020 601000 15                 TNZ     s:7572

      400     7568    2           DO;

      401     7569    2              CALL M$INT(FPT_INT) ALTRET(MON_ERR);

   7569 15 000014   001244 630400 14                 EPPR0   FPT_INT
        15 000015   410002 713400                    CLIMB   alt,+4098
        15 000016   400000 401760                    pmme    nvectors=1
        15 000017   001033 702000 15                 TSX2    MON_ERR

      402     7570    2           END;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:61   

      403     7571
      404     7572    1           QQ_GLOBAL.INSTANCE_NAME = B$JIT.ACCN;

   7572 15 000020   000000 470400 xsym               LDP0    B$JIT$
        15 000021   040000 100500                    MLR     fill='040'O
        15 000022   000001 000010                    ADSC9   1,,PR0                   cn=0,n=8
        15 000023   000325 000010 xsym               ADSC9   QQ_GLOBAL+213            cn=0,n=8

      405     7573    1           VLP_SETSTA_CSCG.MYSTATION# = QQ_GLOBAL.INSTANCE_NAME;

   7573 15 000024   040000 100400                    MLR     fill='040'O
        15 000025   000325 000010 xsym               ADSC9   QQ_GLOBAL+213            cn=0,n=8
        15 000026   001572 000010 14                 ADSC9   VLP_SETSTA_CSCG          cn=0,n=8

      406     7574    1           CALL M$OPEN(FPT_OPEN_CSCG) ALTRET(OPEN_CSCG_ERR);

   7574 15 000027   000340 630400 14                 EPPR0   FPT_OPEN_CSCG
        15 000030   450000 713400                    CLIMB   alt,open
        15 000031   410400 401760                    pmme    nvectors=18
        15 000032   000034 702000 15                 TSX2    OPEN_CSCG_ERR

      407     7575
      408     7576    2           DO WHILE('0'B);

   7576 15 000033   000103 710000 15                 TRA     s:7596

      409     7577
      410     7578    2   OPEN_CSCG_ERR:
      411     7579    2              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 867 /* E$DUPNM */ AND

   7579 15 000034   000000 470400 xsym  OPEN_CSCG_E* LDP0    B$TCB$
        15 000035   000000 471500                    LDP1    0,,PR0
        15 000036   100102 236100                    LDQ     66,,PR1
        15 000037   377770 376007                    ANQ     131064,DL
        15 000040   015430 116007                    CMPQ    6936,DL
        15 000041   000100 600000 15                 TZE     s:7592
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:62   
        15 000042   015610 116007                    CMPQ    7048,DL
        15 000043   000100 600000 15                 TZE     s:7592

      412     7580    2                B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 881 THEN
      413     7581    3              DO;

      414     7582    3                 CALL QQC$BLDMSG_ERRBLK(MSGBLK);

   7582 15 000044   200070 633500                    EPPR3   MSGBLK,,AUTO
        15 000045   200130 453500                    STP3    PTR$_BITS+8,,AUTO
        15 000046   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000047   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000050   000000 701000 xent               TSX1    QQC$BLDMSG_ERRBLK
        15 000051   000000 011000                    NOP     0

      415     7583    3                 MSGBLK.ERRINFO.ERR(0) = CODE_STRTUP;

   7583 15 000052   000034 236000 13                 LDQ     CODE_STRTUP
        15 000053   200076 756100                    STQ     MSGBLK+6,,AUTO

      416     7584    3                 TEXTC_NAME.NAME# = 'CSCG open';

   7584 15 000054   040000 100400                    MLR     fill='040'O
        15 000055   000035 000011 13                 ADSC9   CODE_STRTUP+1            cn=0,n=9
        15 000056   001615 200037 14                 ADSC9   TEXTC_NAME               cn=1,n=31

      417     7585    3                 TEXTC_NAME.L# = 9;

   7585 15 000057   011000 236003                    LDQ     4608,DU
        15 000060   001615 552040 14                 STBQ    TEXTC_NAME,'40'O

      418     7586    3                 MSGBLK.ERRINFO.FIELD1(0) = VECTOR(TEXTC_NAME);

   7586 15 000061   000100 100400                    MLR     fill='000'O
        15 000062   000000 000010 16                 ADSC9   0                        cn=0,n=8
        15 000063   200077 200010                    ADSC9   MSGBLK+7,,AUTO           cn=1,n=8

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:63   
      419     7587    3                 MSGBLK.ERRINFO.ERR(1) = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7587 15 000064   000000 470400 xsym               LDP0    B$TCB$
        15 000065   000000 471500                    LDP1    0,,PR0
        15 000066   000100 100500                    MLR     fill='000'O
        15 000067   100102 000004                    ADSC9   66,,PR1                  cn=0,n=4
        15 000070   200105 200004                    ADSC9   MSGBLK+13,,AUTO          cn=1,n=4

      420     7588    3                 CALL QQC$BLDMSG(MSGBLK);

   7588 15 000071   200070 631500                    EPPR1   MSGBLK,,AUTO
        15 000072   200130 451500                    STP1    PTR$_BITS+8,,AUTO
        15 000073   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000074   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000075   000000 701000 xent               TSX1    QQC$BLDMSG
        15 000076   000000 011000                    NOP     0

      421     7589    3                 GOTO STOPTPNOW;

   7589 15 000077   001023 710000 15                 TRA     STOPTPNOW

      422     7590    3              END;
      423     7591
      424     7592    2              QQ_GLOBAL.ERR = CODE_IIAU;

   7592 15 000100   000026 236000 13                 LDQ     CODE_IIAU
        15 000101   000000 756000 xsym               STQ     QQ_GLOBAL

      425     7593    2              GOTO STOPTP;

   7593 15 000102   001017 710000 15                 TRA     STOPTP

      426     7594    2           END /* NEVER */;

      427     7595
      428     7596    1           CALL M$OPEN(FPT_OPEN_TPCNTRL) ALTRET(OPEN_TPCNTRL_ERR);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:64   
   7596 15 000103   001002 630400 14                 EPPR0   FPT_OPEN_TPCNTRL
        15 000104   450000 713400                    CLIMB   alt,open
        15 000105   410400 401760                    pmme    nvectors=18
        15 000106   000110 702000 15                 TSX2    OPEN_TPCNTRL_ERR

      429     7597
      430     7598    2           DO WHILE('0'B);

   7598 15 000107   000130 710000 15                 TRA     s:7607

      431     7599
      432     7600    2   OPEN_TPCNTRL_ERR:
      433     7601    2              CALL QQC$BLDMSG_ERRBLK(MSGBLK);

   7601 15 000110   200070 630500       OPEN_TPCNTR* EPPR0   MSGBLK,,AUTO
        15 000111   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000112   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000113   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000114   000000 701000 xent               TSX1    QQC$BLDMSG_ERRBLK
        15 000115   000000 011000                    NOP     0

      434     7602    2              MSGBLK.ERRINFO.ERR(1) = CODE_COC;

   7602 15 000116   000100 100400                    MLR     fill='000'O
        15 000117   000027 000004 13                 ADSC9   CODE_COC                 cn=0,n=4
        15 000120   200105 200004                    ADSC9   MSGBLK+13,,AUTO          cn=1,n=4

      435     7603    2              CALL QQC$BLDMSG(MSGBLK);

   7603 15 000121   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 000122   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000123   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000124   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000125   000000 701000 xent               TSX1    QQC$BLDMSG
        15 000126   000000 011000                    NOP     0

      436     7604    2              GOTO STOPTP;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:65   

   7604 15 000127   001017 710000 15                 TRA     STOPTP

      437     7605    2           END /* NEVER */;

      438     7606
      439     7607    1           QQ_GLOBAL.PC$INSTANCE$ = PINCRW(QQ_GLOBAL.CONTROL$, SIZEW(PC$HDR));

   7607 15 000130   000153 236000 xsym               LDQ     QQ_GLOBAL+107
        15 000131   000001 036003                    ADLQ    1,DU
        15 000132   000154 756000 xsym               STQ     QQ_GLOBAL+108

      440     7608
      441     7609    2           DO I = 1 TO PC$HDR.CURINSTANCES;

   7609 15 000133   000001 235007                    LDA     1,DL
        15 000134   200030 755100                    STA     I,,AUTO
        15 000135   000167 710000 15                 TRA     s:7621+1

      442     7610    2              IF PC$INSTANCE.INSTANCE_NAME = QQ_GLOBAL.INSTANCE_NAME AND

   7610 15 000136   000154 470400 xsym               LDP0    QQ_GLOBAL+108
        15 000137   040000 106500                    CMPC    fill='040'O
        15 000140   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
        15 000141   000325 000010 xsym               ADSC9   QQ_GLOBAL+213            cn=0,n=8
        15 000142   000163 601000 15                 TNZ     s:7620
        15 000143   000003 236100                    LDQ     3,,PR0
        15 000144   200000 316003                    CANQ    65536,DU
        15 000145   000163 601000 15                 TNZ     s:7620

      443     7611    2                NOT PC$INSTANCE.FLAGS.DELETED THEN
      444     7612    3              DO;

      445     7613    3                 PC$INSTANCE.STATS = '0'B;

   7613 15 000146   000100 100400                    MLR     fill='000'O
        15 000147   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:66   
        15 000150   000031 000310                    ADSC9   25,,PR0                  cn=0,n=200

      446     7614    3                 PC$INSTANCE.STATS.PGSI = BITBIN('400000000000'O);

   7614 15 000151   000154 470400 xsym               LDP0    QQ_GLOBAL+108
        15 000152   000030 235000 xsym               LDA     B_VECTNIL+24
        15 000153   000043 755100                    STA     35,,PR0

      447     7615    3                 QQ_GLOBAL.DELTA_STATS = PC$INSTANCE.STATS;

   7615 15 000154   000154 470400 xsym               LDP0    QQ_GLOBAL+108
        15 000155   000000 100500                    MLR     fill='000'O
        15 000156   000031 000310                    ADSC9   25,,PR0                  cn=0,n=200
        15 000157   000241 000310 xsym               ADSC9   QQ_GLOBAL+161            cn=0,n=200

      448     7616    3                 PC$INSTANCE.FLAGS.ACTIVE = '1'B;

   7616 15 000160   400000 236003                    LDQ     -131072,DU
        15 000161   000003 256100                    ORSQ    3,,PR0

      449     7617    3                 GOTO READ_CMDS;

   7617 15 000162   000177 710000 15                 TRA     READ_CMDS

      450     7618    3              END;
      451     7619
      452     7620    2             QQ_GLOBAL.PC$INSTANCE$ = PINCRW(QQ_GLOBAL.PC$INSTANCE$, SIZEW(PC$INSTANCE
              7620                       ));

   7620 15 000163   000154 236000 xsym               LDQ     QQ_GLOBAL+108
        15 000164   000113 036003                    ADLQ    75,DU
        15 000165   000154 756000 xsym               STQ     QQ_GLOBAL+108

      453     7621    2           END;

   7621 15 000166   200030 054100                    AOS     I,,AUTO
        15 000167   000153 470400 xsym               LDP0    QQ_GLOBAL+107
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:67   
        15 000170   000000 236100                    LDQ     0,,PR0
        15 000171   000136 604000 15                 TMI     s:7610
        15 000172   200030 116100                    CMPQ    I,,AUTO
        15 000173   000136 605000 15                 TPL     s:7610

      454     7622
      455     7623    1           QQ_GLOBAL.ERR = CODE_NAVC;

   7623 15 000174   000030 236000 13                 LDQ     CODE_NAVC
        15 000175   000000 756000 xsym               STQ     QQ_GLOBAL

      456     7624    1           GOTO STOPTP;

   7624 15 000176   001017 710000 15                 TRA     STOPTP

      457     7625
      458     7626    1   READ_CMDS:
      459     7627    1           M$TPCMD$ = DCBADDR(DCBNUM(M$TPCMD));

   7627 15 000177   000000 236007 xsym  READ_CMDS    LDQ     M$TPCMD,DL
        15 000200   000002 470400 16                 LDP0    2
        15 000201   000000 471500                    LDP1    0,,PR0
        15 000202   100000 236106                    LDQ     0,QL,PR1
        15 000203   200010 756100                    STQ     M$TPCMD$,,AUTO

      460     7628    1           M$SI$ = DCBADDR(DCBNUM(M$SI));

   7628 15 000204   000000 236007 xsym               LDQ     M$SI,DL
        15 000205   100000 236106                    LDQ     0,QL,PR1
        15 000206   200011 756100                    STQ     M$SI$,,AUTO

      461     7629    1           QQ_CMDBLK.ORIGIN = 2 /* ORIGIN_INIT */;

   7629 15 000207   000002 220003                    LDX0    2,DU
        15 000210   000007 740000 xsym               STX0    QQ_CMDBLK+7

      462     7630    1           QQ_CMDBLK.S$ = ADDR(QQ_TP$STATION_INIT);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:68   

   7630 15 000211   000003 236000 16                 LDQ     3
        15 000212   000004 756000 xsym               STQ     QQ_CMDBLK+4

      463     7631    1           QQ_CMDBLK.FLAGS = '0'B;

   7631 15 000213   000000 236003                    LDQ     0,DU
        15 000214   000010 552010 xsym               STBQ    QQ_CMDBLK+8,'10'O

      464     7632    1           QQ_CMDBLK.TEXT$ = ADDR(CMD);

   7632 15 000215   200042 633500                    EPPR3   CMD,,AUTO
        15 000216   000003 453400 xsym               STP3    QQ_CMDBLK+3

      465     7633    1           FPT_READ_SEQ.BUF_ = VECTOR(CMD);

   7633 15 000217   000004 235000 16                 LDA     4
        15 000220   200130 452500                    STP2    PTR$_BITS+8,,AUTO
        15 000221   200130 236100                    LDQ     PTR$_BITS+8,,AUTO
        15 000222   000042 036003                    ADLQ    34,DU
        15 000223   000010 757000 14                 STAQ    FPT_READ_SEQ+4

      466     7634    1           CALL M$OPEN(FPT_OPEN_TPCMD) ALTRET(MON_ERR);

   7634 15 000224   000616 630400 14                 EPPR0   FPT_OPEN_TPCMD
        15 000225   450000 713400                    CLIMB   alt,open
        15 000226   410400 401760                    pmme    nvectors=18
        15 000227   001033 702000 15                 TSX2    MON_ERR

      467     7635        /* Install the system default values */
      468     7636    1           QQ_GLOBAL.CGPAGEMIN = VLP_CGCP.MINPG#;

   7636 15 000230   001514 235000 14                 LDA     VLP_CGCP+4
        15 000231   000022 771000                    ARL     18
        15 000232   000020 755000 xsym               STA     QQ_GLOBAL+16

      469     7637    1           QQ_GLOBAL.CGPAGEMAX = VLP_CGCP.MAXPG#;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:69   

   7637 15 000233   001516 236000 14                 LDQ     VLP_CGCP+6
        15 000234   000022 772000                    QRL     18
        15 000235   000017 756000 xsym               STQ     QQ_GLOBAL+15

      470     7638    1           QQ_GLOBAL.CGDISKWARN = VLP_CGCP.DISKWARN#;

   7638 15 000236   001522 235000 14                 LDA     VLP_CGCP+10
        15 000237   000022 771000                    ARL     18
        15 000240   000022 755000 xsym               STA     QQ_GLOBAL+18

      471     7639    1           QQ_GLOBAL.CGMEMWARN = VLP_CGCP.MEMWARN#;

   7639 15 000241   001522 236000 14                 LDQ     VLP_CGCP+10
        15 000242   777777 376007                    ANQ     -1,DL
        15 000243   000023 756000 xsym               STQ     QQ_GLOBAL+19

      472     7640
      473     7641    2           DO WHILE('1'B);

      474     7642    2              CALL M$READ(FPT_READ_SEQ) ALTRET(READ_CMD_ERR1);

   7642 15 000244   000004 630400 14                 EPPR0   FPT_READ_SEQ
        15 000245   440000 713400                    CLIMB   alt,read
        15 000246   401400 401760                    pmme    nvectors=4
        15 000247   000251 702000 15                 TSX2    READ_CMD_ERR1

      475     7643
      476     7644    3              DO WHILE('0'B);

   7644 15 000250   000263 710000 15                 TRA     s:7655

      477     7645
      478     7646    3   READ_CMD_ERR1:
      479     7647    3                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7647 15 000251   000000 470400 xsym  READ_CMD_ER* LDP0    B$TCB$
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:70   
        15 000252   000000 471500                    LDP1    0,,PR0
        15 000253   100102 236100                    LDQ     66,,PR1
        15 000254   200117 756100                    STQ     ERR,,AUTO

      480     7648    3                 IF ERR.CODE ~= 6 /* E$EOF */ THEN

   7648 15 000255   200117 236100                    LDQ     ERR,,AUTO
        15 000256   377770 376007                    ANQ     131064,DL
        15 000257   000060 116007                    CMPQ    48,DL
        15 000260   000262 600000 15                 TZE     s:7652

      481     7649    4                 DO;

      482     7650    4                    GOTO MON_ERR;

   7650 15 000261   001033 710000 15                 TRA     MON_ERR

      483     7651    4                 END;
      484     7652    3                 GOTO OPEN_FILES;

   7652 15 000262   000272 710000 15                 TRA     OPEN_FILES

      485     7653    3              END /* NEVER */;

      486     7654
      487     7655    2              QQ_CMDBLK.ARS = M$SI$ -> F$DCB.ARS#;

   7655 15 000263   200011 470500                    LDP0    M$SI$,,AUTO
        15 000264   000000 720100                    LXL0    0,,PR0
        15 000265   000007 440000 xsym               SXL0    QQ_CMDBLK+7

      488     7656    2              CALL QQA$CMD;

   7656 15 000266   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 000267   000000 701000 xent               TSX1    QQA$CMD
        15 000270   000000 011000                    NOP     0

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:71   
      489     7657    2           END;

   7657 15 000271   000244 710000 15                 TRA     s:7642

      490     7658
      491     7659    1   OPEN_FILES:
      492     7660    1           CALL OPEN_SAVCMD ALTRET(STOPTP);

   7660 15 000272   002302 701000 15    OPEN_FILES   TSX1    OPEN_SAVCMD
        15 000273   001017 702000 15                 TSX2    STOPTP

      493     7661
      494     7662    1           CALL OPEN_TRADER ALTRET(STOPTP);

   7662 15 000274   001043 701000 15                 TSX1    OPEN_TRADER
        15 000275   001017 702000 15                 TSX2    STOPTP

      495     7663
      496     7664    1           VLP_NAME.NAME# = QQ_GLOBAL.INSTANCE_NAME;

   7664 15 000276   040000 100400                    MLR     fill='040'O
        15 000277   000325 000010 xsym               ADSC9   QQ_GLOBAL+213            cn=0,n=8
        15 000300   001612 200011 14                 ADSC9   VLP_NAME                 cn=1,n=9

      497     7665    1           CALL INDEX(BLANK_POS, ' ', VLP_NAME.NAME#);

   7665 15 000301   000000 124400                    SCM     mask='000'O
        15 000302   001612 200011 14                 ADSC9   VLP_NAME                 cn=1,n=9
        15 000303   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        15 000304   200033 000100                    ARG     BLANK_POS,,AUTO

      498     7666    1           VLP_NAME.L# = BLANK_POS;

   7666 15 000305   200033 236100                    LDQ     BLANK_POS,,AUTO
        15 000306   000033 736000                    QLS     27
        15 000307   001612 552040 14                 STBQ    VLP_NAME,'40'O

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:72   
      499     7667    1           IF QQ_GLOBAL.NEWCG THEN

   7667 15 000310   000010 234000 xsym               SZN     QQ_GLOBAL+8
        15 000311   000314 605000 15                 TPL     s:7671

      500     7668    2           DO;

      501     7669    2              FPT_OPEN_CG.V.EXIST# = 3 /* NEWFILE# */;

   7669 15 000312   000600 236007                    LDQ     384,DL
        15 000313   000126 256000 14                 ORSQ    FPT_OPEN_CG+36

      502     7670    2           END;

      503     7671    1           FPT_OPEN_CG.V.IXTNSIZE# = QQ_GLOBAL.IXTNSIZE;

   7671 15 000314   000061 235000 xsym               LDA     QQ_GLOBAL+49
        15 000315   000137 755000 14                 STA     FPT_OPEN_CG+45

      504     7672
      505     7673
      506     7674
      507     7675    1           VLP_CGCP.MINPG# = QQ_GLOBAL.CGPAGEMIN;

   7675 15 000316   000020 720000 xsym               LXL0    QQ_GLOBAL+16
        15 000317   001514 740000 14                 STX0    VLP_CGCP+4

      508     7676    1           VLP_CGCP.MAXPG# = QQ_GLOBAL.CGPAGEMAX;

   7676 15 000320   000017 721000 xsym               LXL1    QQ_GLOBAL+15
        15 000321   001516 741000 14                 STX1    VLP_CGCP+6

      509     7677    1           VLP_CGCP.DISKWARN# = QQ_GLOBAL.CGDISKWARN;

   7677 15 000322   000022 722000 xsym               LXL2    QQ_GLOBAL+18
        15 000323   001522 742000 14                 STX2    VLP_CGCP+10

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:73   
      510     7678    1           VLP_CGCP.MEMWARN# = QQ_GLOBAL.CGMEMWARN;

   7678 15 000324   000023 723000 xsym               LXL3    QQ_GLOBAL+19
        15 000325   001522 443000 14                 SXL3    VLP_CGCP+10

      511     7679    1           IF 14 + 640 + 74 > QQ_GLOBAL.CGSIZEMAX THEN

   7679 15 000326   000021 236000 xsym               LDQ     QQ_GLOBAL+17
        15 000327   001330 116007                    CMPQ    728,DL
        15 000330   000333 603000 15                 TRC     s:7683

      512     7680    2           DO;

      513     7681    2              QQ_GLOBAL.CGSIZEMAX = 14 + 640 + 74;

   7681 15 000331   001330 235007                    LDA     728,DL
        15 000332   000021 755000 xsym               STA     QQ_GLOBAL+17

      514     7682    2           END;

      515     7683    1           VLP_CGCP.MAXMC# = QQ_GLOBAL.CGSIZEMAX;

   7683 15 000333   000021 235000 xsym               LDA     QQ_GLOBAL+17
        15 000334   001517 755000 14                 STA     VLP_CGCP+7

      516     7684    1           IF QQ_GLOBAL.TRMRDSIZ > QQ_GLOBAL.CGSIZEMAX THEN

   7684 15 000335   000021 236000 xsym               LDQ     QQ_GLOBAL+17
        15 000336   000024 116000 xsym               CMPQ    QQ_GLOBAL+20
        15 000337   000342 603000 15                 TRC     s:7688

      517     7685    2           DO;

      518     7686    2              QQ_GLOBAL.CGSIZEMAX = QQ_GLOBAL.TRMRDSIZ;

   7686 15 000340   000024 235000 xsym               LDA     QQ_GLOBAL+20
        15 000341   000021 755000 xsym               STA     QQ_GLOBAL+17
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:74   

      519     7687    2           END;

      520     7688    1           VLP_CGCP.TRMRDSIZ# = QQ_GLOBAL.TRMRDSIZ;

   7688 15 000342   000024 724000 xsym               LXL4    QQ_GLOBAL+20
        15 000343   001521 444000 14                 SXL4    VLP_CGCP+9

      521     7689    1           CALL OPEN_CG ALTRET(STOPTP);

   7689 15 000344   002166 701000 15                 TSX1    OPEN_CG
        15 000345   001017 702000 15                 TSX2    STOPTP

      522     7690
      523     7691    1           FPT_CGCTL.STALIST_ = VECTOR(VLP_CGSTAL_HOLD);

   7691 15 000346   000006 237000 16                 LDAQ    6
        15 000347   001114 757000 14                 STAQ    FPT_CGCTL+4

      524     7692    1           VLP_CGSTAL_HOLD.LIST.NAME#(0) = 'HOLDSTA';

   7692 15 000350   040000 100400                    MLR     fill='040'O
        15 000351   000040 000007 13                 ADSC9   CODE_STRTUP+4            cn=0,n=7
        15 000352   001645 000010 14                 ADSC9   VLP_CGSTAL_HOLD+1        cn=0,n=8

      525     7693    1           CALL M$CGCTL(FPT_CGCTL) ALTRET(MON_ERR);

   7693 15 000353   001110 630400 14                 EPPR0   FPT_CGCTL
        15 000354   500003 713400                    CLIMB   alt,+32771
        15 000355   411400 401760                    pmme    nvectors=20
        15 000356   001033 702000 15                 TSX2    MON_ERR

      526     7694    1           CALL M$OPEN(FPT_OPEN_HOLD) ALTRET(MON_ERR);

   7694 15 000357   000154 630400 14                 EPPR0   FPT_OPEN_HOLD
        15 000360   450000 713400                    CLIMB   alt,open
        15 000361   410400 401760                    pmme    nvectors=18
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:75   
        15 000362   001033 702000 15                 TSX2    MON_ERR

      527     7695
      528     7696    1           FPT_CGCTL.STALIST_ = VECTOR(VLP_CGSTAL_INFO);

   7696 15 000363   000010 237000 16                 LDAQ    8
        15 000364   001114 757000 14                 STAQ    FPT_CGCTL+4

      529     7697    1           VLP_CGSTAL_INFO.LIST.NAME#(0) = 'INFOSTA';

   7697 15 000365   040000 100400                    MLR     fill='040'O
        15 000366   000042 000007 13                 ADSC9   CODE_STRTUP+6            cn=0,n=7
        15 000367   001673 000010 14                 ADSC9   VLP_CGSTAL_INFO+1        cn=0,n=8

      530     7698    1           CALL M$CGCTL(FPT_CGCTL) ALTRET(MON_ERR);

   7698 15 000370   001110 630400 14                 EPPR0   FPT_CGCTL
        15 000371   500003 713400                    CLIMB   alt,+32771
        15 000372   411400 401760                    pmme    nvectors=20
        15 000373   001033 702000 15                 TSX2    MON_ERR

      531     7699    1           CALL M$OPEN(FPT_OPEN_INFO) ALTRET(MON_ERR);

   7699 15 000374   000246 630400 14                 EPPR0   FPT_OPEN_INFO
        15 000375   450000 713400                    CLIMB   alt,open
        15 000376   410400 401760                    pmme    nvectors=18
        15 000377   001033 702000 15                 TSX2    MON_ERR

      532     7700
      533     7701    1           CALL RELEASE_MEM;

   7701 15 000400   001746 701000 15                 TSX1    RELEASE_MEM
        15 000401   000000 011000                    NOP     0

      534     7702
      535     7703    1           VLP_VECTOR.PTR$ = QQ_GLOBAL.POOL$;

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:76   
   7703 15 000402   000152 236000 xsym               LDQ     QQ_GLOBAL+106
        15 000403   001535 756000 14                 STQ     VLP_VECTOR+1

      536     7704    1           FPT_GDS.V.SEGSIZE# = QQ_GLOBAL.POOLSIZE;

   7704 15 000404   000045 720000 xsym               LXL0    QQ_GLOBAL+37
        15 000405   001106 440000 14                 SXL0    FPT_GDS+4

      537     7705    1           CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);

   7705 15 000406   001102 630400 14                 EPPR0   FPT_GDS
        15 000407   430001 713400                    CLIMB   alt,gds
        15 000410   400400 401760                    pmme    nvectors=2
        15 000411   001033 702000 15                 TSX2    MON_ERR

      538     7706    1           CALL QQC$INIT_BLKMGR(QQ_GLOBAL.POOL$, QQ_GLOBAL.POOLSIZE);

   7706 15 000412   000012 630400 16                 EPPR0   10
        15 000413   000020 631400 xsym               EPPR1   B_VECTNIL+16
        15 000414   000000 701000 xent               TSX1    QQC$INIT_BLKMGR
        15 000415   000000 011000                    NOP     0

      539     7707
      540     7708    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$,

   7708 15 000416   000014 630400 16                 EPPR0   12
        15 000417   000021 631400 xsym               EPPR1   B_VECTNIL+17
        15 000420   000000 701000 xent               TSX1    QQC$GET_BLK
        15 000421   001030 702000 15                 TSX2    NO_MEM

      541     7709    1             (14 + 640 + 74 + 3) / 4,
      542     7710    1             QQ_GLOBAL.CMDBUF$) ALTRET(NO_MEM);
      543     7711
      544     7712    1          CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, (CSCG_MAXMC# + 3) / 4, QQ_GLOBAL.KEYINBUF$
              7712                    )

   7712 15 000422   000020 630400 16                 EPPR0   16
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:77   
        15 000423   000021 631400 xsym               EPPR1   B_VECTNIL+17
        15 000424   000000 701000 xent               TSX1    QQC$GET_BLK
        15 000425   001030 702000 15                 TSX2    NO_MEM

      545     7713    1             ALTRET(NO_MEM);
      546     7714
      547     7715    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 20,

   7715 15 000426   000024 630400 16                 EPPR0   20
        15 000427   000021 631400 xsym               EPPR1   B_VECTNIL+17
        15 000430   000000 701000 xent               TSX1    QQC$GET_BLK
        15 000431   001030 702000 15                 TSX2    NO_MEM

      548     7716    1             QQ_GLOBAL.DEBUGCMD$) ALTRET(NO_MEM);
      549     7717
      550     7718    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 4, HEAD$) ALTRET(NO_MEM);

   7718 15 000432   200005 630500                    EPPR0   HEAD$,,AUTO
        15 000433   200132 450500                    STP0    PTR$_BITS+10,,AUTO
        15 000434   000030 237000 16                 LDAQ    24
        15 000435   200130 757100                    STAQ    PTR$_BITS+8,,AUTO
        15 000436   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000437   000021 631400 xsym               EPPR1   B_VECTNIL+17
        15 000440   000000 701000 xent               TSX1    QQC$GET_BLK
        15 000441   001030 702000 15                 TSX2    NO_MEM

      551     7719    1           QQ_GLOBAL.EVENT$ = HEAD$;

   7719 15 000442   200005 236100                    LDQ     HEAD$,,AUTO
        15 000443   000051 756000 xsym               STQ     QQ_GLOBAL+41

      552     7720    1           TAIL$ = PINCRW(HEAD$, 2);

   7720 15 000444   000002 036003                    ADLQ    2,DU
        15 000445   200006 756100                    STQ     TAIL$,,AUTO

      553     7721    1           HEAD$ -> TP$EVENT.BLINK$ = TAIL$;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:78   

   7721 15 000446   200005 470500                    LDP0    HEAD$,,AUTO
        15 000447   000000 756100                    STQ     0,,PR0

      554     7722    1           HEAD$ -> TP$EVENT.FLINK$ = TAIL$;

   7722 15 000450   200005 470500                    LDP0    HEAD$,,AUTO
        15 000451   000001 756100                    STQ     1,,PR0

      555     7723    1           TAIL$ -> TP$EVENT.BLINK$ = HEAD$;

   7723 15 000452   200005 236100                    LDQ     HEAD$,,AUTO
        15 000453   200006 470500                    LDP0    TAIL$,,AUTO
        15 000454   000000 756100                    STQ     0,,PR0

      556     7724    1           TAIL$ -> TP$EVENT.FLINK$ = ADDR(NIL);

   7724 15 000455   000001 236000 xsym               LDQ     B_VECTNIL+1
        15 000456   000001 756100                    STQ     1,,PR0

      557     7725
      558     7726    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 4, HEAD$) ALTRET(NO_MEM);

   7726 15 000457   200005 631500                    EPPR1   HEAD$,,AUTO
        15 000460   200132 451500                    STP1    PTR$_BITS+10,,AUTO
        15 000461   000030 237000 16                 LDAQ    24
        15 000462   200130 757100                    STAQ    PTR$_BITS+8,,AUTO
        15 000463   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000464   000021 631400 xsym               EPPR1   B_VECTNIL+17
        15 000465   000000 701000 xent               TSX1    QQC$GET_BLK
        15 000466   001030 702000 15                 TSX2    NO_MEM

      559     7727    1           QQ_GLOBAL.TPU$ = HEAD$;

   7727 15 000467   200005 236100                    LDQ     HEAD$,,AUTO
        15 000470   000155 756000 xsym               STQ     QQ_GLOBAL+109

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:79   
      560     7728    1           TAIL$ = PINCRW(HEAD$, 2);

   7728 15 000471   000002 036003                    ADLQ    2,DU
        15 000472   200006 756100                    STQ     TAIL$,,AUTO

      561     7729    1           HEAD$ -> TPU$INFO.BLINK$ = TAIL$;

   7729 15 000473   200005 470500                    LDP0    HEAD$,,AUTO
        15 000474   000000 756100                    STQ     0,,PR0

      562     7730    1           HEAD$ -> TPU$INFO.FLINK$ = TAIL$;

   7730 15 000475   200005 470500                    LDP0    HEAD$,,AUTO
        15 000476   000001 756100                    STQ     1,,PR0

      563     7731    1           TAIL$ -> TPU$INFO.BLINK$ = HEAD$;

   7731 15 000477   200005 236100                    LDQ     HEAD$,,AUTO
        15 000500   200006 470500                    LDP0    TAIL$,,AUTO
        15 000501   000000 756100                    STQ     0,,PR0

      564     7732    1           TAIL$ -> TPU$INFO.FLINK$ = ADDR(NIL);

   7732 15 000502   000001 236000 xsym               LDQ     B_VECTNIL+1
        15 000503   000001 756100                    STQ     1,,PR0

      565     7733
      566     7734    1           CALL QQC$GET_BLK(QQ_GLOBAL.POOL$, 4, HEAD$) ALTRET(NO_MEM);

   7734 15 000504   200005 631500                    EPPR1   HEAD$,,AUTO
        15 000505   200132 451500                    STP1    PTR$_BITS+10,,AUTO
        15 000506   000030 237000 16                 LDAQ    24
        15 000507   200130 757100                    STAQ    PTR$_BITS+8,,AUTO
        15 000510   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000511   000021 631400 xsym               EPPR1   B_VECTNIL+17
        15 000512   000000 701000 xent               TSX1    QQC$GET_BLK
        15 000513   001030 702000 15                 TSX2    NO_MEM
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:80   

      567     7735    1           QQ_GLOBAL.DISAB$ = HEAD$;

   7735 15 000514   200005 236100                    LDQ     HEAD$,,AUTO
        15 000515   000055 756000 xsym               STQ     QQ_GLOBAL+45

      568     7736    1           TAIL$ = PINCRW(HEAD$, 2);

   7736 15 000516   000002 036003                    ADLQ    2,DU
        15 000517   200006 756100                    STQ     TAIL$,,AUTO

      569     7737    1           HEAD$ -> DISAB$INFO.BLINK$ = TAIL$;

   7737 15 000520   200005 470500                    LDP0    HEAD$,,AUTO
        15 000521   000000 756100                    STQ     0,,PR0

      570     7738    1           HEAD$ -> DISAB$INFO.FLINK$ = TAIL$;

   7738 15 000522   200005 470500                    LDP0    HEAD$,,AUTO
        15 000523   000001 756100                    STQ     1,,PR0

      571     7739    1           TAIL$ -> DISAB$INFO.BLINK$ = HEAD$;

   7739 15 000524   200005 236100                    LDQ     HEAD$,,AUTO
        15 000525   200006 470500                    LDP0    TAIL$,,AUTO
        15 000526   000000 756100                    STQ     0,,PR0

      572     7740    1           TAIL$ -> DISAB$INFO.FLINK$ = ADDR(NIL);

   7740 15 000527   000001 236000 xsym               LDQ     B_VECTNIL+1
        15 000530   000001 756100                    STQ     1,,PR0

      573     7741
      574     7742    1           FPT_GDS.V.SEGSIZE# = 1024;

   7742 15 000531   002000 220003                    LDX0    1024,DU
        15 000532   001106 440000 14                 SXL0    FPT_GDS+4
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:81   

      575     7743    1           VLP_VECTOR.PTR$ = ADDR(NIL);

   7743 15 000533   000001 236000 xsym               LDQ     B_VECTNIL+1
        15 000534   001535 756000 14                 STQ     VLP_VECTOR+1

      576     7744    1           CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);

   7744 15 000535   001102 630400 14                 EPPR0   FPT_GDS
        15 000536   430001 713400                    CLIMB   alt,gds
        15 000537   400400 401760                    pmme    nvectors=2
        15 000540   001033 702000 15                 TSX2    MON_ERR

      577     7745    1           QQ_GLOBAL.TRASHBUF$ = VLP_VECTOR.PTR$;

   7745 15 000541   001535 236000 14                 LDQ     VLP_VECTOR+1
        15 000542   000057 756000 xsym               STQ     QQ_GLOBAL+47

      578     7746    1           QQ_GLOBAL.TRASHBUF_SIZE = 4096;

   7746 15 000543   010000 235007                    LDA     4096,DL
        15 000544   000060 755000 xsym               STA     QQ_GLOBAL+48

      579     7747
      580     7748    1           QQ_GLOBAL.INIT_PASS = 1;

   7748 15 000545   000001 235007                    LDA     1,DL
        15 000546   000050 755000 xsym               STA     QQ_GLOBAL+40

      581     7749    1           IF QQ_GLOBAL.PASS1_CMDS THEN

   7749 15 000547   000011 234000 xsym               SZN     QQ_GLOBAL+9
        15 000550   000613 605000 15                 TPL     COUNT_ERRORS

      582     7750    2           DO;

      583     7751    2              FPT_PFIL.V.DCB# = DCBNUM(M$TPCMD);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:82   

   7751 15 000551   000000 236007 xsym               LDQ     M$TPCMD,DL
        15 000552   000000 620006                    EAX0    0,QL
        15 000553   000060 740000 14                 STX0    FPT_PFIL+2

      584     7752    2              CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);

   7752 15 000554   000056 630400 14                 EPPR0   FPT_PFIL
        15 000555   440004 713400                    CLIMB   alt,+16388
        15 000556   400000 401760                    pmme    nvectors=1
        15 000557   001033 702000 15                 TSX2    MON_ERR

      585     7753    2              FPT_READ_SEQ.V.DCB# = DCBNUM(M$TPCMD);

   7753 15 000560   000000 236007 xsym               LDQ     M$TPCMD,DL
        15 000561   000000 620006                    EAX0    0,QL
        15 000562   000014 740000 14                 STX0    FPT_READ_SEQ+8

      586     7754                   /*  reset pointer because of usage of the READ command
      587     7755                       in the startup fid.  QQB$READ resets this guy      */
      588     7756    2              QQ_CMDBLK.TEXT$ = ADDR(CMD);

   7756 15 000563   200042 630500                    EPPR0   CMD,,AUTO
        15 000564   000003 450400 xsym               STP0    QQ_CMDBLK+3

      589     7757    3              DO WHILE('1'B);

      590     7758    3                 CALL M$READ(FPT_READ_SEQ) ALTRET(READ_CMD_ERR2);

   7758 15 000565   000004 630400 14                 EPPR0   FPT_READ_SEQ
        15 000566   440000 713400                    CLIMB   alt,read
        15 000567   401400 401760                    pmme    nvectors=4
        15 000570   000572 702000 15                 TSX2    READ_CMD_ERR2

      591     7759
      592     7760    4                 DO WHILE('0'B);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:83   
   7760 15 000571   000604 710000 15                 TRA     s:7771

      593     7761
      594     7762    4   READ_CMD_ERR2:
      595     7763    4                    ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7763 15 000572   000000 470400 xsym  READ_CMD_ER* LDP0    B$TCB$
        15 000573   000000 471500                    LDP1    0,,PR0
        15 000574   100102 236100                    LDQ     66,,PR1
        15 000575   200117 756100                    STQ     ERR,,AUTO

      596     7764    4                    IF ERR.CODE ~= 6 /* E$EOF */ THEN

   7764 15 000576   200117 236100                    LDQ     ERR,,AUTO
        15 000577   377770 376007                    ANQ     131064,DL
        15 000600   000060 116007                    CMPQ    48,DL
        15 000601   000603 600000 15                 TZE     s:7768

      597     7765    5                    DO;

      598     7766    5                       GOTO MON_ERR;

   7766 15 000602   001033 710000 15                 TRA     MON_ERR

      599     7767    5                    END;
      600     7768    4                    GOTO COUNT_ERRORS;

   7768 15 000603   000613 710000 15                 TRA     COUNT_ERRORS

      601     7769    4                 END /* NEVER */;

      602     7770
      603     7771    3                 QQ_CMDBLK.ARS = M$TPCMD$ -> F$DCB.ARS#;

   7771 15 000604   200010 470500                    LDP0    M$TPCMD$,,AUTO
        15 000605   000000 720100                    LXL0    0,,PR0
        15 000606   000007 440000 xsym               SXL0    QQ_CMDBLK+7
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:84   

      604     7772    3                 CALL QQA$CMD;

   7772 15 000607   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 000610   000000 701000 xent               TSX1    QQA$CMD
        15 000611   000000 011000                    NOP     0

      605     7773    3              END;

   7773 15 000612   000565 710000 15                 TRA     s:7758

      606     7774    2           END;
      607     7775
      608     7776    1   COUNT_ERRORS:
      609     7777    1           IF QQ_GLOBAL.ERROR_CNT > 0 THEN

   7777 15 000613   000040 235000 xsym  COUNT_ERRORS LDA     QQ_GLOBAL+32
        15 000614   000664 600000 15                 TZE     s:7787

      610     7778    2           DO;

      611     7779    2              CALL QQC$CONVERT_NUM(QQ_GLOBAL.ERROR_CNT, SIZE, ADDR(TEXTC_NUM.NAME#));

   7779 15 000615   200131 452500                    STP2    PTR$_BITS+9,,AUTO
        15 000616   200131 236100                    LDQ     PTR$_BITS+9,,AUTO
        15 000617   000032 036000 16                 ADLQ    26
        15 000620   200130 756100                    STQ     PTR$_BITS+8,,AUTO
        15 000621   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000622   200134 450500                    STP0    PTR$_BITS+12,,AUTO
        15 000623   200032 631500                    EPPR1   SIZE,,AUTO
        15 000624   200133 451500                    STP1    PTR$_BITS+11,,AUTO
        15 000625   000033 236000 16                 LDQ     27
        15 000626   200132 756100                    STQ     PTR$_BITS+10,,AUTO
        15 000627   200132 630500                    EPPR0   PTR$_BITS+10,,AUTO
        15 000630   000021 631400 xsym               EPPR1   B_VECTNIL+17
        15 000631   000000 701000 xent               TSX1    QQC$CONVERT_NUM
        15 000632   000000 011000                    NOP     0
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:85   

      612     7780    2              TEXTC_NUM.L# = SIZE;

   7780 15 000633   200032 236100                    LDQ     SIZE,,AUTO
        15 000634   000033 736000                    QLS     27
        15 000635   200115 552140                    STBQ    TEXTC_NUM,'40'O,AUTO

      613     7781    2              CALL QQC$BLDMSG_ERRBLK(MSGBLK);

   7781 15 000636   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 000637   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000640   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000641   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000642   000000 701000 xent               TSX1    QQC$BLDMSG_ERRBLK
        15 000643   000000 011000                    NOP     0

      614     7782    2              MSGBLK.ERRINFO.ERR(0) = CODE_DDI;

   7782 15 000644   000025 236000 13                 LDQ     CODE_DDI
        15 000645   200076 756100                    STQ     MSGBLK+6,,AUTO

      615     7783    2              MSGBLK.ERRINFO.FIELD1(0) = VECTOR(TEXTC_NUM);

   7783 15 000646   000034 235000 16                 LDA     28
        15 000647   200130 452500                    STP2    PTR$_BITS+8,,AUTO
        15 000650   200130 236100                    LDQ     PTR$_BITS+8,,AUTO
        15 000651   000115 036003                    ADLQ    77,DU
        15 000652   200132 757100                    STAQ    PTR$_BITS+10,,AUTO
        15 000653   000100 100500                    MLR     fill='000'O
        15 000654   200132 000010                    ADSC9   PTR$_BITS+10,,AUTO       cn=0,n=8
        15 000655   200077 200010                    ADSC9   MSGBLK+7,,AUTO           cn=1,n=8

      616     7784    2              CALL QQC$BLDMSG(MSGBLK);

   7784 15 000656   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 000657   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000660   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:86   
        15 000661   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000662   000000 701000 xent               TSX1    QQC$BLDMSG
        15 000663   000000 011000                    NOP     0

      617     7785    2           END;

      618     7786
      619     7787    1           CALL M$EVENT(FPT_EVENT) ALTRET(MON_ERR);

   7787 15 000664   001174 630400 14                 EPPR0   FPT_EVENT
        15 000665   410001 713400                    CLIMB   alt,+4097
        15 000666   400000 401760                    pmme    nvectors=1
        15 000667   001033 702000 15                 TSX2    MON_ERR

      620     7788
      621     7789    1           FPT_READ_CG.BUF_.BOUND = 14 + 640 + 74 - 1;

   7789 15 000670   000026 236000 14                 LDQ     FPT_READ_CG+4
        15 000671   177777 376007                    ANQ     65535,DL
        15 000672   000035 276000 16                 ORQ     29
        15 000673   000026 756000 14                 STQ     FPT_READ_CG+4

      622     7790    1           FPT_READ_CG.BUF_.BUF$ = QQ_GLOBAL.CMDBUF$;

   7790 15 000674   000052 236000 xsym               LDQ     QQ_GLOBAL+42
        15 000675   000027 756000 14                 STQ     FPT_READ_CG+5

      623     7791    1           CALL M$READ(FPT_READ_CG) ALTRET(MON_ERR);

   7791 15 000676   000022 630400 14                 EPPR0   FPT_READ_CG
        15 000677   440000 713400                    CLIMB   alt,read
        15 000700   401400 401760                    pmme    nvectors=4
        15 000701   001033 702000 15                 TSX2    MON_ERR

      624     7792
      625     7793    1           NOW_FLAG = '0'B;

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:87   
   7793 15 000702   200041 450100                    STZ     NOW_FLAG,,AUTO

      626     7794    1           MSGTYP = '?';

   7794 15 000703   000036 235000 16                 LDA     30
        15 000704   000035 236000 xsym               LDQ     B_VECTNIL+29
        15 000705   200066 757100                    STAQ    MSGTYP,,AUTO

      627     7795    2           DO I = 1 TO QQ_GLOBAL.TPUINITIAL;

   7795 15 000706   000001 235007                    LDA     1,DL
        15 000707   200030 755100                    STA     I,,AUTO
        15 000710   000726 710000 15                 TRA     s:7798+1

      628     7796        /* Start up the defualt TPUs */
      629     7797    2              CALL QQC$START_TPU(MSGTYP,ERR,NOW_FLAG,0) ALTRET(START_ERR);

   7797 15 000711   000037 236000 16                 LDQ     31
        15 000712   200133 756100                    STQ     PTR$_BITS+11,,AUTO
        15 000713   200041 630500                    EPPR0   NOW_FLAG,,AUTO
        15 000714   200132 450500                    STP0    PTR$_BITS+10,,AUTO
        15 000715   200117 631500                    EPPR1   ERR,,AUTO
        15 000716   200131 451500                    STP1    PTR$_BITS+9,,AUTO
        15 000717   200066 633500                    EPPR3   MSGTYP,,AUTO
        15 000720   200130 453500                    STP3    PTR$_BITS+8,,AUTO
        15 000721   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000722   000022 631400 xsym               EPPR1   B_VECTNIL+18
        15 000723   000000 701000 xent               TSX1    QQC$START_TPU
        15 000724   000733 702000 15                 TSX2    START_ERR

      630     7798    2           END;

   7798 15 000725   200030 054100                    AOS     I,,AUTO
        15 000726   000016 236000 xsym               LDQ     QQ_GLOBAL+14
        15 000727   000711 604000 15                 TMI     s:7797
        15 000730   200030 116100                    CMPQ    I,,AUTO
        15 000731   000711 605000 15                 TPL     s:7797
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:88   

      631     7799
      632     7800    2           DO WHILE('0'B);

   7800 15 000732   000775 710000 15                 TRA     s:7820

      633     7801
      634     7802    2   START_ERR:
      635     7803    2              CALL QQC$BLDMSG_ERRBLK(MSGBLK);

   7803 15 000733   200070 630500       START_ERR    EPPR0   MSGBLK,,AUTO
        15 000734   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000735   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000736   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000737   000000 701000 xent               TSX1    QQC$BLDMSG_ERRBLK
        15 000740   000000 011000                    NOP     0

      636     7804    2              MSGBLK.ERRINFO.ERR(0) = ERR;

   7804 15 000741   200117 236100                    LDQ     ERR,,AUTO
        15 000742   200076 756100                    STQ     MSGBLK+6,,AUTO

      637     7805    2              CALL QQC$BLDMSG(MSGBLK);

   7805 15 000743   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 000744   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000745   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000746   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000747   000000 701000 xent               TSX1    QQC$BLDMSG
        15 000750   000000 011000                    NOP     0

      638     7806
      639     7807    2              IF I = 1 THEN

   7807 15 000751   200030 235100                    LDA     I,,AUTO
        15 000752   000001 115007                    CMPA    1,DL
        15 000753   000757 601000 15                 TNZ     s:7814
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:89   

      640     7808    3              DO;

      641     7809    3                 QQ_GLOBAL.ERR = CODE_NOTPUS;

   7809 15 000754   000031 236000 13                 LDQ     CODE_NOTPUS
        15 000755   000000 756000 xsym               STQ     QQ_GLOBAL

      642     7810    3                 GOTO STOPTP;

   7810 15 000756   001017 710000 15                 TRA     STOPTP

      643     7811    3              END;
      644     7812    2              ELSE
      645     7813    3              DO;

      646     7814    3                 CALL QQC$BLDMSG_ERRBLK(MSGBLK);

   7814 15 000757   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 000760   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000761   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000762   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000763   000000 701000 xent               TSX1    QQC$BLDMSG_ERRBLK
        15 000764   000000 011000                    NOP     0

      647     7815    3                 MSGBLK.ERRINFO.ERR(0) = CODE_LESSTPUS;

   7815 15 000765   000032 236000 13                 LDQ     CODE_LESSTPUS
        15 000766   200076 756100                    STQ     MSGBLK+6,,AUTO

      648     7816    3                 CALL QQC$BLDMSG(MSGBLK);

   7816 15 000767   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 000770   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 000771   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 000772   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 000773   000000 701000 xent               TSX1    QQC$BLDMSG
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:90   
        15 000774   000000 011000                    NOP     0

      649     7817    3              END;

      650     7818    2           END /* NEVER */;

      651     7819
      652     7820    1           VLP_STATION.CTL.LATCH# = '0'B;

   7820 15 000775   000040 236000 16                 LDQ     32
        15 000776   001542 356000 14                 ANSQ    VLP_STATION+4

      653     7821    1           FPT_READ_CSCG.BUF_.BOUND = CSCG_MAXMC# - 1;

   7821 15 000777   000044 236000 14                 LDQ     FPT_READ_CSCG+4
        15 001000   177777 376007                    ANQ     65535,DL
        15 001001   000041 276000 16                 ORQ     33
        15 001002   000044 756000 14                 STQ     FPT_READ_CSCG+4

      654     7822    1           FPT_READ_CSCG.BUF_.BUF$ = QQ_GLOBAL.KEYINBUF$;

   7822 15 001003   000053 236000 xsym               LDQ     QQ_GLOBAL+43
        15 001004   000045 756000 14                 STQ     FPT_READ_CSCG+5

      655     7823    1           CALL M$READ(FPT_READ_CSCG) ALTRET(MON_ERR);

   7823 15 001005   000040 630400 14                 EPPR0   FPT_READ_CSCG
        15 001006   440000 713400                    CLIMB   alt,read
        15 001007   401400 401760                    pmme    nvectors=4
        15 001010   001033 702000 15                 TSX2    MON_ERR

      656     7824
      657     7825        /* Initialize QQ_GLOBAL.STIMER_UTS */
      658     7826    1           CALL M$TIME(FPT_TIME);

   7826 15 001011   001256 630400 14                 EPPR0   FPT_TIME
        15 001012   020004 713400                    CLIMB   8196
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:91   
        15 001013   402000 401760                    pmme    nvectors=5

      659     7827    1           QQ_GLOBAL.SLEEP_SECS = QQ_GLOBAL.SCHEDINT;

   7827 15 001014   000031 235000 xsym               LDA     QQ_GLOBAL+25
        15 001015   000047 755000 xsym               STA     QQ_GLOBAL+39

      660     7828
      661     7829    1           RETURN;

   7829 15 001016   000000 702200 xent               TSX2  ! X66_ARET

      662     7830
      663     7831    1   STOPTP:
      664     7832    1           CALL QQC$STOPTP('0'B);

   7832 15 001017   000037 630400 16    STOPTP       EPPR0   31
        15 001020   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 001021   000000 701000 xent               TSX1    QQC$STOPTP
        15 001022   000000 011000                    NOP     0

      665     7833
      666     7834    1   STOPTPNOW:
      667     7835    1           QQ_GLOBAL.ERR = '0'B;

   7835 15 001023   000000 450000 xsym  STOPTPNOW    STZ     QQ_GLOBAL

      668     7836    1           CALL QQC$STOPTP('1'B);

   7836 15 001024   000042 630400 16                 EPPR0   34
        15 001025   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 001026   000000 701000 xent               TSX1    QQC$STOPTP
        15 001027   000000 011000                    NOP     0

      669     7837
      670     7838    1   NO_MEM:
      671     7839    1           QQ_GLOBAL.ERR = CODE_NO_POOLMEM;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:92   

   7839 15 001030   000022 236000 13    NO_MEM       LDQ     CODE_NO_POOLMEM
        15 001031   000000 756000 xsym               STQ     QQ_GLOBAL

      672     7840    1           GOTO SCREECH;

   7840 15 001032   001037 710000 15                 TRA     SCREECH

      673     7841
      674     7842    1   MON_ERR:
      675     7843    1           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7843 15 001033   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
        15 001034   000000 471500                    LDP1    0,,PR0
        15 001035   100102 236100                    LDQ     66,,PR1
        15 001036   000000 756000 xsym               STQ     QQ_GLOBAL

      676     7844
      677     7845    1   SCREECH:
      678     7846    1           CALL QQC$SCREECH;

   7846 15 001037   000002 631400 xsym  SCREECH      EPPR1   B_VECTNIL+2
        15 001040   000000 701000 xent               TSX1    QQC$SCREECH
        15 001041   000000 011000                    NOP     0
        15 001042   002434 710000 15                 TRA     s:8465

      679     7847                %PAGE(ARG="OPEN_TRADER",PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:93   
              7864    1   /***************************************************************************
              7865    1    *                                                                         *
              7866    1    *                                OPEN_TRADER                              *
              7867    1    *                                                                         *
              7868    1    ***************************************************************************/

      680     7872    1   OPEN_TRADER:

   7872 15 001043   200122 741300       OPEN_TRADER  STX1  ! PTR$_BITS+2,,AUTO

      681     7873    1           PROC ALTRET;
      682     7874
      683     7875    2           CALL M$OPEN(FPT_OPEN_TRADER) ALTRET(OPEN_TRADER_ERR);

   7875 15 001044   000710 630400 14                 EPPR0   FPT_OPEN_TRADER
        15 001045   450000 713400                    CLIMB   alt,open
        15 001046   410400 401760                    pmme    nvectors=18
        15 001047   001051 702000 15                 TSX2    OPEN_TRADER_ERR

      684     7876
      685     7877    3           DO WHILE('0'B);

   7877 15 001050   001071 710000 15                 TRA     s:7886

      686     7878
      687     7879    3   OPEN_TRADER_ERR:
      688     7880    3              CALL QQC$BLDMSG_ERRBLK(MSGBLK);

   7880 15 001051   200070 630500       OPEN_TRADER* EPPR0   MSGBLK,,AUTO
        15 001052   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 001053   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 001054   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 001055   000000 701000 xent               TSX1    QQC$BLDMSG_ERRBLK
        15 001056   000000 011000                    NOP     0

      689     7881    3              MSGBLK.ERRINFO.ERR(1) = CODE_NT;

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:94   
   7881 15 001057   000100 100400                    MLR     fill='000'O
        15 001060   000024 000004 13                 ADSC9   CODE_NT                  cn=0,n=4
        15 001061   200105 200004                    ADSC9   MSGBLK+13,,AUTO          cn=1,n=4

      690     7882    3              CALL QQC$BLDMSG(MSGBLK);

   7882 15 001062   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 001063   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 001064   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 001065   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 001066   000000 701000 xent               TSX1    QQC$BLDMSG
        15 001067   000000 011000                    NOP     0

      691     7883    3              GOTO ALT;

   7883 15 001070   001311 710000 15                 TRA     ALT

      692     7884    3           END /* NEVER */;

      693     7885
      694     7886    2           CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);

   7886 15 001071   001102 630400 14                 EPPR0   FPT_GDS
        15 001072   430001 713400                    CLIMB   alt,gds
        15 001073   400400 401760                    pmme    nvectors=2
        15 001074   001313 702000 15                 TSX2    MON_ERR

      695     7887    2           QT$ENTRY$ = VLP_VECTOR.PTR$;

   7887 15 001075   001535 236000 14                 LDQ     VLP_VECTOR+1
        15 001076   200016 756100                    STQ     QT$ENTRY$,,AUTO

      696     7888    2           CHAR_STRING_SIZE = 4096;

   7888 15 001077   010000 235007                    LDA     4096,DL
        15 001100   200026 755100                    STA     CHAR_STRING_SIZE,,AUTO

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:95   
      697     7889
      698     7890    2           KEY.MSGTYP = 'Version';

   7890 15 001101   040000 100400                    MLR     fill='040'O
        15 001102   000044 000007 13                 ADSC9   CODE_STRTUP+8            cn=0,n=7
        15 001103   000001 200010 14                 ADSC9   KEY                      cn=1,n=8

      699     7891    2           KEY.SUFFIX = ' ';

   7891 15 001104   000043 236000 16                 LDQ     35
        15 001105   000003 552030 14                 STBQ    KEY+2,'30'O

      700     7892    2           FPT_READ_KEY.BUF_ = VECTOR(QT$ENTRY$ -> CHAR$STRING);

   7892 15 001106   000020 735000                    ALS     16
        15 001107   000140 135007                    SBLA    96,DL
        15 001110   200016 236100                    LDQ     QT$ENTRY$,,AUTO
        15 001111   001310 757000 14                 STAQ    FPT_READ_KEY+4

      701     7893    2           CALL M$READ(FPT_READ_KEY) ALTRET(READ_KEY_ERR);

   7893 15 001112   001304 630400 14                 EPPR0   FPT_READ_KEY
        15 001113   440000 713400                    CLIMB   alt,read
        15 001114   401400 401760                    pmme    nvectors=4
        15 001115   001117 702000 15                 TSX2    READ_KEY_ERR

      702     7894
      703     7895    3           DO WHILE('0'B);

   7895 15 001116   001131 710000 15                 TRA     s:7907

      704     7896
      705     7897    3   READ_KEY_ERR:
      706     7898    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 66 /* E$NOKEY */ THEN

   7898 15 001117   000000 470400 xsym  READ_KEY_ERR LDP0    B$TCB$
        15 001120   000000 471500                    LDP1    0,,PR0
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:96   
        15 001121   100102 236100                    LDQ     66,,PR1
        15 001122   377770 376007                    ANQ     131064,DL
        15 001123   001020 116007                    CMPQ    528,DL
        15 001124   001126 600000 15                 TZE     s:7903

      707     7899    4              DO;

      708     7900    4                 GOTO MON_ERR;

   7900 15 001125   001313 710000 15                 TRA     MON_ERR

      709     7901    4              END;
      710     7902
      711     7903    3              QQ_GLOBAL.ERR = CODE_NTRDRBUILT;

   7903 15 001126   000023 236000 13                 LDQ     CODE_NTRDRBUILT
        15 001127   000000 756000 xsym               STQ     QQ_GLOBAL

      712     7904    3              GOTO ALT;

   7904 15 001130   001311 710000 15                 TRA     ALT

      713     7905    3           END /* NEVER */;

      714     7906
      715     7907    2           CALL M$UNFID(FPT_UNFID) ALTRET(MON_ERR);

   7907 15 001131   001216 630400 14                 EPPR0   FPT_UNFID
        15 001132   420021 713400                    CLIMB   alt,+8209
        15 001133   404400 401760                    pmme    nvectors=10
        15 001134   001313 702000 15                 TSX2    MON_ERR

      716     7908    2           QQ_GLOBAL.TRADER_FID.L# = LEN;

   7908 15 001135   000000 236000 14                 LDQ     LEN
        15 001136   000033 736000                    QLS     27
        15 001137   000327 552040 xsym               STBQ    QQ_GLOBAL+215,'40'O
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:97   

      717     7909    2           SUBSTR(QQ_GLOBAL.TRADER_FID.NAME#, LEN, SIZEC(F$DCB.PASS#)) =

   7909 15 001140   000000 236007 xsym               LDQ     M$TRADER,DL
        15 001141   000002 470400 16                 LDP0    2
        15 001142   000000 471500                    LDP1    0,,PR0
        15 001143   100000 473506                    LDP3    0,QL,PR1
        15 001144   000000 235000 14                 LDA     LEN
        15 001145   040005 100500                    MLR     fill='040'O
        15 001146   300022 000010                    ADSC9   18,,PR3                  cn=0,n=8
        15 001147   000327 200010 xsym               ADSC9   QQ_GLOBAL+215,A          cn=1,n=8

      718     7910    2             DCBADDR(DCBNUM(M$TRADER)) -> F$DCB.PASS#;
      719     7911
      720     7912    2           TYPLIST$ = ADDR(NIL);

   7912 15 001150   000001 236000 xsym               LDQ     B_VECTNIL+1
        15 001151   200014 756100                    STQ     TYPLIST$,,AUTO

      721     7913    2           QLIST$ = ADDR(NIL);

   7913 15 001152   200015 756100                    STQ     QLIST$,,AUTO

      722     7914    2           TYPLIST_SLOTS = 0;

   7914 15 001153   200023 450100                    STZ     TYPLIST_SLOTS,,AUTO

      723     7915    2           QLIST_SLOTS = 0;

   7915 15 001154   200024 450100                    STZ     QLIST_SLOTS,,AUTO

      724     7916    2           COUNT = 0;

   7916 15 001155   200022 450100                    STZ     COUNT,,AUTO

      725     7917
      726     7918    2           CALL M$PFIL(FPT_PFIL) ALTRET(MON_ERR);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:98   

   7918 15 001156   000056 630400 14                 EPPR0   FPT_PFIL
        15 001157   440004 713400                    CLIMB   alt,+16388
        15 001160   400000 401760                    pmme    nvectors=1
        15 001161   001313 702000 15                 TSX2    MON_ERR

      727     7919
      728     7920    3           DO WHILE('1'B);

      729     7921    3              FPT_READ_TRADER.BUF_ = VECTOR(QT$ENTRY$ -> CHAR$STRING);

   7921 15 001162   200026 235100                    LDA     CHAR_STRING_SIZE,,AUTO
        15 001163   000020 735000                    ALS     16
        15 001164   000140 135007                    SBLA    96,DL
        15 001165   200016 236100                    LDQ     QT$ENTRY$,,AUTO
        15 001166   001204 757000 14                 STAQ    FPT_READ_TRADER+4

      730     7922    3              CALL M$READ(FPT_READ_TRADER) ALTRET(READ_ERR);

   7922 15 001167   001200 630400 14                 EPPR0   FPT_READ_TRADER
        15 001170   440000 713400                    CLIMB   alt,read
        15 001171   401400 401760                    pmme    nvectors=4
        15 001172   001174 702000 15                 TSX2    READ_ERR

      731     7923
      732     7924    4              DO WHILE('0'B);

   7924 15 001173   001227 710000 15                 TRA     s:7945

      733     7925
      734     7926    4   READ_ERR:
      735     7927    4                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7927 15 001174   000000 470400 xsym  READ_ERR     LDP0    B$TCB$
        15 001175   000000 471500                    LDP1    0,,PR0
        15 001176   100102 236100                    LDQ     66,,PR1
        15 001177   200117 756100                    STQ     ERR,,AUTO
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:99   

      736     7928    4                 IF ERR.CODE = 6 /* E$EOF */ THEN

   7928 15 001200   200117 236100                    LDQ     ERR,,AUTO
        15 001201   377770 376007                    ANQ     131064,DL
        15 001202   000060 116007                    CMPQ    48,DL
        15 001203   001205 601000 15                 TNZ     s:7933

      737     7929    5                 DO;

      738     7930    5                    GOTO SETUP_FPT;

   7930 15 001204   001264 710000 15                 TRA     SETUP_FPT

      739     7931    5                 END;
      740     7932
      741     7933    4                 IF ERR.CODE ~= 7 /* E$LD */ THEN

   7933 15 001205   000070 116007                    CMPQ    56,DL
        15 001206   001210 600000 15                 TZE     s:7938

      742     7934    5                 DO;

      743     7935    5                    GOTO MON_ERR;

   7935 15 001207   001313 710000 15                 TRA     MON_ERR

      744     7936    5                 END;
      745     7937
      746     7938    4                 VLP_VECTOR.PTR$ = QT$ENTRY$;

   7938 15 001210   200016 236100                    LDQ     QT$ENTRY$,,AUTO
        15 001211   001535 756000 14                 STQ     VLP_VECTOR+1

      747     7939    4                 CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);

   7939 15 001212   001102 630400 14                 EPPR0   FPT_GDS
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:100  
        15 001213   430001 713400                    CLIMB   alt,gds
        15 001214   400400 401760                    pmme    nvectors=2
        15 001215   001313 702000 15                 TSX2    MON_ERR

      748     7940    4                 CHAR_STRING_SIZE = VLP_VECTOR.W1.VSIZE# + 1;

   7940 15 001216   001534 236000 14                 LDQ     VLP_VECTOR
        15 001217   000020 772000                    QRL     16
        15 001220   000001 036007                    ADLQ    1,DL
        15 001221   200026 756100                    STQ     CHAR_STRING_SIZE,,AUTO

      749     7941    4                 CALL M$PRECORD(FPT_PRECORD) ALTRET(MON_ERR);

   7941 15 001222   001272 630400 14                 EPPR0   FPT_PRECORD
        15 001223   440003 713400                    CLIMB   alt,+16387
        15 001224   401000 401760                    pmme    nvectors=3
        15 001225   001313 702000 15                 TSX2    MON_ERR

      750     7942    4                 GOTO LOOP;

   7942 15 001226   001263 710000 15                 TRA     LOOP

      751     7943    4              END /* NEVER */;

      752     7944
      753     7945    3              IF KEY.SUFFIX = '_S' OR KEY.MSGTYP = 'Version' THEN

   7945 15 001227   040000 106400                    CMPC    fill='040'O
        15 001230   000003 200002 14                 ADSC9   KEY+2                    cn=1,n=2
        15 001231   000046 000002 13                 ADSC9   CODE_STRTUP+10           cn=0,n=2
        15 001232   001237 600000 15                 TZE     s:7947
        15 001233   040000 106400                    CMPC    fill='040'O
        15 001234   000001 200010 14                 ADSC9   KEY                      cn=1,n=8
        15 001235   000044 000007 13                 ADSC9   CODE_STRTUP+8            cn=0,n=7
        15 001236   001240 601000 15                 TNZ     s:7950

      754     7946    4              DO;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:101  

      755     7947    4                 GOTO LOOP;

   7947 15 001237   001263 710000 15                 TRA     LOOP

      756     7948    4              END;
      757     7949
      758     7950    3              MAXACTIVE = VLP_CGQL_C.LIST.MXACT#(0);

   7950 15 001240   000010 235000 13                 LDA     VLP_CGQL_C
        15 001241   200035 755100                    STA     MAXACTIVE,,AUTO

      759     7951    3              PRIO = VLP_CGTYPL_C.LIST.PRIO#(0);

   7951 15 001242   000003 236000 13                 LDQ     VLP_CGTYPL_C+3
        15 001243   000033 772000                    QRL     27
        15 001244   200034 756100                    STQ     PRIO,,AUTO

      760     7952    3              JOURNAL_FLAG = VLP_CGTYPL_C.LIST.JOURNAL#(0);

   7952 15 001245   000003 236000 13                 LDQ     VLP_CGTYPL_C+3
        15 001246   000012 736000                    QLS     10
        15 001247   400000 376003                    ANQ     -131072,DU
        15 001250   200036 756100                    STQ     JOURNAL_FLAG,,AUTO

      761     7953    3              ONEREPORT_FLAG = '0'B;

   7953 15 001251   200037 450100                    STZ     ONEREPORT_FLAG,,AUTO

      762     7954
      763     7955    3              IF KEY.SUFFIX = '_E' THEN

   7955 15 001252   040000 106400                    CMPC    fill='040'O
        15 001253   000003 200002 14                 ADSC9   KEY+2                    cn=1,n=2
        15 001254   000047 000002 13                 ADSC9   CODE_STRTUP+11           cn=0,n=2
        15 001255   001261 601000 15                 TNZ     s:7961

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:102  
      764     7956    4              DO;

      765     7957    4                 CALL CHK_ENTRY;

   7957 15 001256   001346 701000 15                 TSX1    CHK_ENTRY
        15 001257   000000 011000                    NOP     0

      766     7958    4              END;

   7958 15 001260   001263 710000 15                 TRA     LOOP

      767     7959    3              ELSE
      768     7960    4              DO;

      769     7961    4                 CALL CHK_FORM;

   7961 15 001261   001324 701000 15                 TSX1    CHK_FORM
        15 001262   000000 011000                    NOP     0

      770     7962    4              END;

      771     7963
      772     7964
      773     7965    3   LOOP:
      774     7966    3           END /* WHILE */;

   7966 15 001263   001162 710000 15    LOOP         TRA     s:7921

      775     7967
      776     7968    2   SETUP_FPT:
      777     7969    2           IF COUNT > 0 THEN

   7969 15 001264   200022 235100       SETUP_FPT    LDA     COUNT,,AUTO
        15 001265   001307 604400 15                 TMOZ    s:7977

      778     7970    3           DO;

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:103  
      779     7971    3              CHAR_STRING_SIZE = 4 + COUNT * SIZEC(VLP_CGTYPL_C.LIST);

   7971 15 001266   200022 236100                    LDQ     COUNT,,AUTO
        15 001267   000034 402007                    MPY     28,DL
        15 001270   000004 036007                    ADLQ    4,DL
        15 001271   200026 756100                    STQ     CHAR_STRING_SIZE,,AUTO

      780     7972    3              FPT_CGCTL.TYPLIST_ = VECTOR(TYPLIST$ -> CHAR$STRING);

   7972 15 001272   200026 235100                    LDA     CHAR_STRING_SIZE,,AUTO
        15 001273   000020 735000                    ALS     16
        15 001274   000140 135007                    SBLA    96,DL
        15 001275   200014 236100                    LDQ     TYPLIST$,,AUTO
        15 001276   001112 757000 14                 STAQ    FPT_CGCTL+2

      781     7973    3              CHAR_STRING_SIZE = COUNT * SIZEC(VLP_CGQL_C.LIST);

   7973 15 001277   200022 236100                    LDQ     COUNT,,AUTO
        15 001300   000044 402007                    MPY     36,DL
        15 001301   200026 756100                    STQ     CHAR_STRING_SIZE,,AUTO

      782     7974    3              FPT_CGCTL.QLIST_ = VECTOR(QLIST$ -> CHAR$STRING);

   7974 15 001302   200026 235100                    LDA     CHAR_STRING_SIZE,,AUTO
        15 001303   000020 735000                    ALS     16
        15 001304   000140 135007                    SBLA    96,DL
        15 001305   200015 236100                    LDQ     QLIST$,,AUTO
        15 001306   001122 757000 14                 STAQ    FPT_CGCTL+10

      783     7975    3           END;

      784     7976
      785     7977    2           RETURN;

   7977 15 001307   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 001310   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:104  
      786     7978
      787     7979    2   ALT:
      788     7980    2           ALTRETURN;

   7980 15 001311   200122 221300       ALT          LDX1  ! PTR$_BITS+2,,AUTO
        15 001312   000000 702211                    TSX2  ! 0,X1

      789     7981
      790     7982    2   MON_ERR:
      791     7983    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   7983 15 001313   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
        15 001314   000000 471500                    LDP1    0,,PR0
        15 001315   100102 236100                    LDQ     66,,PR1
        15 001316   000000 756000 xsym               STQ     QQ_GLOBAL

      792     7984    2           CALL QQC$SCREECH;

   7984 15 001317   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 001320   000000 701000 xent               TSX1    QQC$SCREECH
        15 001321   000000 011000                    NOP     0

      793     7985
      794     7986    2   END OPEN_TRADER;

   7986 15 001322   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 001323   000001 702211                    TSX2  ! 1,X1

      795     7987                %PAGE(ARG="CHK_FORM", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:105  
              8004    2   /***************************************************************************
              8005    2    *                                                                         *
              8006    2    *                                  CHK_FORM                               *
              8007    2    *                                                                         *
              8008    2    ***************************************************************************/

      796     8012    1   CHK_FORM:

   8012 15 001324   200124 741300       CHK_FORM     STX1  ! PTR$_BITS+4,,AUTO

      797     8013    1           PROC;
      798     8014
      799     8015    2           IF QT$FORM.FLAGS.JOURNAL OR

   8015 15 001325   200016 470500                    LDP0    QT$ENTRY$,,AUTO
        15 001326   000000 234100                    SZN     0,,PR0
        15 001327   001333 604000 15                 TMI     s:8018
        15 001330   000000 236100                    LDQ     0,,PR0
        15 001331   200000 316003                    CANQ    65536,DU
        15 001332   001344 600000 15                 TZE     s:8024

      800     8016    2             QT$FORM.FLAGS.ONEREPORT THEN
      801     8017    3           DO;

      802     8018    3              JOURNAL_FLAG = QT$FORM.FLAGS.JOURNAL;

   8018 15 001333   000000 236100                    LDQ     0,,PR0
        15 001334   400000 376003                    ANQ     -131072,DU
        15 001335   200036 756100                    STQ     JOURNAL_FLAG,,AUTO

      803     8019    3              ONEREPORT_FLAG = QT$FORM.FLAGS.ONEREPORT;

   8019 15 001336   000000 236100                    LDQ     0,,PR0
        15 001337   000001 736000                    QLS     1
        15 001340   400000 376003                    ANQ     -131072,DU
        15 001341   200037 756100                    STQ     ONEREPORT_FLAG,,AUTO

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:106  
      804     8020
      805     8021    3              CALL ADD_MSGTYP;

   8021 15 001342   001516 701000 15                 TSX1    ADD_MSGTYP
        15 001343   000000 011000                    NOP     0

      806     8022    3           END;

      807     8023
      808     8024    2           RETURN;

   8024 15 001344   200124 221300                    LDX1  ! PTR$_BITS+4,,AUTO
        15 001345   000001 702211                    TSX2  ! 1,X1

      809     8025
      810     8026    2   END CHK_FORM;
      811     8027                %PAGE(ARG="CHK_ENTRY", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:107  
              8044    2   /***************************************************************************
              8045    2    *                                                                         *
              8046    2    *                                 CHK_ENTRY                               *
              8047    2    *                                                                         *
              8048    2    ***************************************************************************/

      812     8052    1   CHK_ENTRY:

   8052 15 001346   200124 741300       CHK_ENTRY    STX1  ! PTR$_BITS+4,,AUTO

      813     8053    1           PROC;
      814     8054
      815     8055    2           IF QT$ENTRY.MAXACTIVE ~= MAXACTIVE OR

   8055 15 001347   200016 470500                    LDP0    QT$ENTRY$,,AUTO
        15 001350   000002 236100                    LDQ     2,,PR0
        15 001351   001363 604000 15                 TMI     s:8059
        15 001352   200035 116100                    CMPQ    MAXACTIVE,,AUTO
        15 001353   001363 601000 15                 TNZ     s:8059
        15 001354   000023 236100                    LDQ     19,,PR0
        15 001355   000777 376007                    ANQ     511,DL
        15 001356   000002 116007                    CMPQ    2,DL
        15 001357   001363 603000 15                 TRC     s:8059
        15 001360   000000 236100                    LDQ     0,,PR0
        15 001361   020000 316003                    CANQ    8192,DU
        15 001362   001376 600000 15                 TZE     s:8066

      816     8056    2             QT$ENTRY.PRIO > 1 OR
      817     8057    2             QT$ENTRY.FLAGS.JOURNAL THEN
      818     8058    3           DO;

      819     8059    3              MAXACTIVE = QT$ENTRY.MAXACTIVE;

   8059 15 001363   000002 235100                    LDA     2,,PR0
        15 001364   200035 755100                    STA     MAXACTIVE,,AUTO

      820     8060    3              PRIO = QT$ENTRY.PRIO;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:108  

   8060 15 001365   000023 236100                    LDQ     19,,PR0
        15 001366   000777 376007                    ANQ     511,DL
        15 001367   200034 756100                    STQ     PRIO,,AUTO

      821     8061    3              JOURNAL_FLAG = QT$ENTRY.FLAGS.JOURNAL;

   8061 15 001370   000000 236100                    LDQ     0,,PR0
        15 001371   000004 736000                    QLS     4
        15 001372   400000 376003                    ANQ     -131072,DU
        15 001373   200036 756100                    STQ     JOURNAL_FLAG,,AUTO

      822     8062
      823     8063    3              CALL ADD_MSGTYP;

   8063 15 001374   001516 701000 15                 TSX1    ADD_MSGTYP
        15 001375   000000 011000                    NOP     0

      824     8064    3           END;

      825     8065
      826     8066    2           REC$ = PINCRW(QT$ENTRY$, SIZEW(QT$ENTRY));

   8066 15 001376   200016 236100                    LDQ     QT$ENTRY$,,AUTO
        15 001377   000032 036003                    ADLQ    26,DU
        15 001400   200017 756100                    STQ     REC$,,AUTO

      827     8067    3           DO K = 1 TO QT$ENTRY.SET_COUNT;

   8067 15 001401   000001 235007                    LDA     1,DL
        15 001402   200031 755100                    STA     K,,AUTO
        15 001403   001506 710000 15                 TRA     s:8090+1

      828     8068                                           /* Warning! QT_SUBS_C can't be included so */
      829     8069                                                /* 'REPORTS' is a hard coded #        */
      830     8070    3              IF REC$ -> QT$SETBITS.TYPE = 19 /* REPORTS */ AND

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:109  
   8070 15 001404   200017 470500                    LDP0    REC$,,AUTO
        15 001405   000100 101500                    MRL     fill='000'O
        15 001406   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        15 001407   200130 000004                    ADSC9   PTR$_BITS+8,,AUTO        cn=0,n=4
        15 001410   200130 236100                    LDQ     PTR$_BITS+8,,AUTO
        15 001411   000023 116007                    CMPQ    19,DL
        15 001412   001467 601000 15                 TNZ     s:8089
        15 001413   000000 066500                    CMPB    filb='0'B
        15 001414   000000 200001                    BDSC    0,,PR0                   by=1,bit=0,n=1
        15 001415   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
        15 001416   001467 600000 15                 TZE     s:8089

      831     8071    3                REC$ -> QT$SETBITS.FLAGS.ONEREPORT THEN
      832     8072    4              DO;

      833     8073    4                 MAXACTIVE = VLP_CGQL_C.LIST.MXACT#(0);

   8073 15 001417   000010 235000 13                 LDA     VLP_CGQL_C
        15 001420   200035 755100                    STA     MAXACTIVE,,AUTO

      834     8074    4                 PRIO = VLP_CGTYPL_C.LIST.PRIO#(0);

   8074 15 001421   000003 236000 13                 LDQ     VLP_CGTYPL_C+3
        15 001422   000033 772000                    QRL     27
        15 001423   200034 756100                    STQ     PRIO,,AUTO

      835     8075    4                 JOURNAL_FLAG = VLP_CGTYPL_C.LIST.JOURNAL#(0);

   8075 15 001424   000003 236000 13                 LDQ     VLP_CGTYPL_C+3
        15 001425   000012 736000                    QLS     10
        15 001426   400000 376003                    ANQ     -131072,DU
        15 001427   200036 756100                    STQ     JOURNAL_FLAG,,AUTO

      836     8076    4                 ONEREPORT_FLAG = '1'B;

   8076 15 001430   400000 236003                    LDQ     -131072,DU
        15 001431   200037 756100                    STQ     ONEREPORT_FLAG,,AUTO
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:110  

      837     8077
      838     8078    4                 AMR$FPT_OPEN$ = ADDR(REC$ -> QT$SETBITS.ASN_MERGE.TEXT);

   8078 15 001432   200017 236100                    LDQ     REC$,,AUTO
        15 001433   000044 036000 16                 ADLQ    36
        15 001434   200020 756100                    STQ     AMR$FPT_OPEN$,,AUTO

      839     8079    4                 PTR$_BITS = PINCRC(AMR$FPT_OPEN$,

   8079 15 001435   000002 036003                    ADLQ    2,DU
        15 001436   000020 772000                    QRL     16
        15 001437   200130 756100                    STQ     PTR$_BITS+8,,AUTO
        15 001440   200020 236100                    LDQ     AMR$FPT_OPEN$,,AUTO
        15 001441   000020 772000                    QRL     16
        15 001442   200131 756100                    STQ     PTR$_BITS+9,,AUTO
        15 001443   200130 236100                    LDQ     PTR$_BITS+8,,AUTO
        15 001444   200131 136100                    SBLQ    PTR$_BITS+9,,AUTO
        15 001445   000011 402007                    MPY     9,DL
        15 001446   000000 116003                    CMPQ    0,DU
        15 001447   001451 605000 15                 TPL     s:8079+12
        15 001450   000044 036003                    ADLQ    36,DU
        15 001451   200020 471500                    LDP1    AMR$FPT_OPEN$,,AUTO
        15 001452   003100 060506                    CSL     bolr='003'O
        15 001453   100000 000044                    BDSC    0,Q,PR1                  by=0,bit=0,n=36
        15 001454   200120 000044                    BDSC    PTR$_BITS,,AUTO          by=0,bit=0,n=36

      840     8080    4                   POFFC(ADDR(AMR$FPT_OPEN.SETSTA_), AMR$FPT_OPEN$)) -> BASED$WORD;
      841     8081
      842     8082    4                 SETSTA$ = PINCRC(AMR$FPT_OPEN$, PTR$_BITS.WORDS * 4);

   8082 15 001455   200120 236100                    LDQ     PTR$_BITS,,AUTO
        15 001456   777777 376003                    ANQ     -1,DU
        15 001457   200020 036100                    ADLQ    AMR$FPT_OPEN$,,AUTO
        15 001460   200021 756100                    STQ     SETSTA$,,AUTO

      843     8083
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:111  
      844     8084    4                 KEY.MSGTYP = VLP$SETSTA.OSTA.OMSGTYP#;

   8084 15 001461   200021 473500                    LDP3    SETSTA$,,AUTO
        15 001462   040000 100500                    MLR     fill='040'O
        15 001463   300011 000010                    ADSC9   9,,PR3                   cn=0,n=8
        15 001464   000001 200010 14                 ADSC9   KEY                      cn=1,n=8

      845     8085
      846     8086    4                 CALL ADD_MSGTYP;

   8086 15 001465   001516 701000 15                 TSX1    ADD_MSGTYP
        15 001466   000000 011000                    NOP     0

      847     8087    4              END;

      848     8088
      849     8089    3              REC$ = PINCRW(REC$, SIZEW(REC$ -> QT$SETBITS));

   8089 15 001467   200017 470500                    LDP0    REC$,,AUTO
        15 001470   000100 101500                    MRL     fill='000'O
        15 001471   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1
        15 001472   200130 000002                    ADSC9   PTR$_BITS+8,,AUTO        cn=0,n=2
        15 001473   200130 220100                    LDX0    PTR$_BITS+8,,AUTO
        15 001474   000055 621010                    EAX1    45,X0
        15 001475   000000 636011                    EAQ     0,X1
        15 001476   000022 772000                    QRL     18
        15 001477   000011 402007                    MPY     9,DL
        15 001500   000043 036007                    ADLQ    35,DL
        15 001501   000044 506007                    DIV     36,DL
        15 001502   000022 736000                    QLS     18
        15 001503   200017 036100                    ADLQ    REC$,,AUTO
        15 001504   200017 756100                    STQ     REC$,,AUTO

      850     8090    3           END;

   8090 15 001505   200031 054100                    AOS     K,,AUTO
        15 001506   200016 470500                    LDP0    QT$ENTRY$,,AUTO
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:112  
        15 001507   000023 236100                    LDQ     19,,PR0
        15 001510   000011 772000                    QRL     9
        15 001511   000777 376007                    ANQ     511,DL
        15 001512   200031 116100                    CMPQ    K,,AUTO
        15 001513   001404 605000 15                 TPL     s:8070

      851     8091
      852     8092    2           RETURN;

   8092 15 001514   200124 221300                    LDX1  ! PTR$_BITS+4,,AUTO
        15 001515   000001 702211                    TSX2  ! 1,X1

      853     8093
      854     8094    2   END CHK_ENTRY;
      855     8095                %PAGE(ARG="ADD_MSGTYP", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:113  
              8112    2   /***************************************************************************
              8113    2    *                                                                         *
              8114    2    *                                 ADD_MSGTYP                              *
              8115    2    *                                                                         *
              8116    2    ***************************************************************************/

      856     8120    1   ADD_MSGTYP:

   8120 15 001516   200126 741300       ADD_MSGTYP   STX1  ! PTR$_BITS+6,,AUTO

      857     8121    1           PROC;
      858     8122
      859     8123    2           FOUND_FLAG = '0'B;

   8123 15 001517   200040 450100                    STZ     FOUND_FLAG,,AUTO

      860     8124    3           DO I = 1 TO COUNT;

   8124 15 001520   000001 235007                    LDA     1,DL
        15 001521   200030 755100                    STA     I,,AUTO
        15 001522   001610 710000 15                 TRA     s:8149+1

      861     8125    3              IF VLP$CGTYPL.LIST.NAME#(I - 1) = KEY.MSGTYP THEN

   8125 15 001523   200030 236100                    LDQ     I,,AUTO
        15 001524   000034 402007                    MPY     28,DL
        15 001525   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001526   040000 106506                    CMPC    fill='040'O
        15 001527   077772 000010                    ADSC9   -6,Q,PR0                 cn=0,n=8
        15 001530   000001 200010 14                 ADSC9   KEY                      cn=1,n=8
        15 001531   001607 601000 15                 TNZ     s:8149

      862     8126    4              DO;

      863     8127    4                 FOUND_FLAG = '1'B;

   8127 15 001532   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:114  
        15 001533   200040 756100                    STQ     FOUND_FLAG,,AUTO

      864     8128
      865     8129    4                 IF MAXACTIVE ~= VLP_CGQL_C.LIST.MXACT#(0) THEN

   8129 15 001534   200035 236100                    LDQ     MAXACTIVE,,AUTO
        15 001535   001540 604000 15                 TMI     s:8131
        15 001536   000010 116000 13                 CMPQ    VLP_CGQL_C
        15 001537   001545 600000 15                 TZE     s:8134

      866     8130    5                 DO;

      867     8131    5                    VLP$CGQL.LIST.MXACT#(I - 1) = MAXACTIVE;

   8131 15 001540   200030 236100                    LDQ     I,,AUTO
        15 001541   000011 402007                    MPY     9,DL
        15 001542   200035 235100                    LDA     MAXACTIVE,,AUTO
        15 001543   200015 471500                    LDP1    QLIST$,,AUTO
        15 001544   177767 755106                    STA     -9,QL,PR1

      868     8132    5                 END;

      869     8133
      870     8134    4                 IF PRIO > 1 THEN

   8134 15 001545   200034 235100                    LDA     PRIO,,AUTO
        15 001546   000001 115007                    CMPA    1,DL
        15 001547   001561 604400 15                 TMOZ    s:8139

      871     8135    5                 DO;

      872     8136    5                    VLP$CGTYPL.LIST.PRIO#(I - 1) = PRIO;

   8136 15 001550   200030 236100                    LDQ     I,,AUTO
        15 001551   000007 402007                    MPY     7,DL
        15 001552   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001553   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:115  
        15 001554   200034 236100                    LDQ     PRIO,,AUTO
        15 001555   000033 736000                    QLS     27
        15 001556   077774 676110                    ERQ     -4,X0,PR0
        15 001557   777000 376003                    ANQ     -512,DU
        15 001560   077774 656110                    ERSQ    -4,X0,PR0

      873     8137    5                 END;

      874     8138
      875     8139    4                 IF JOURNAL_FLAG THEN

   8139 15 001561   200036 234100                    SZN     JOURNAL_FLAG,,AUTO
        15 001562   001574 605000 15                 TPL     s:8144

      876     8140    5                 DO;

      877     8141    5                    VLP$CGTYPL.LIST.JOURNAL#(I - 1) = JOURNAL_FLAG;

   8141 15 001563   200030 236100                    LDQ     I,,AUTO
        15 001564   000007 402007                    MPY     7,DL
        15 001565   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001566   000000 620006                    EAX0    0,QL
        15 001567   200036 236100                    LDQ     JOURNAL_FLAG,,AUTO
        15 001570   000012 772000                    QRL     10
        15 001571   077774 676110                    ERQ     -4,X0,PR0
        15 001572   000200 376003                    ANQ     128,DU
        15 001573   077774 656110                    ERSQ    -4,X0,PR0

      878     8142    5                 END;

      879     8143
      880     8144    4                 IF ONEREPORT_FLAG THEN

   8144 15 001574   200037 234100                    SZN     ONEREPORT_FLAG,,AUTO
        15 001575   001607 605000 15                 TPL     s:8149

      881     8145    5                 DO;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:116  

      882     8146    5                    VLP$CGTYPL.LIST.ONEREPORT#(I - 1) = ONEREPORT_FLAG;

   8146 15 001576   200030 236100                    LDQ     I,,AUTO
        15 001577   000007 402007                    MPY     7,DL
        15 001600   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001601   000000 620006                    EAX0    0,QL
        15 001602   200037 236100                    LDQ     ONEREPORT_FLAG,,AUTO
        15 001603   000013 772000                    QRL     11
        15 001604   077774 676110                    ERQ     -4,X0,PR0
        15 001605   000100 376003                    ANQ     64,DU
        15 001606   077774 656110                    ERSQ    -4,X0,PR0

      883     8147    5                 END;

      884     8148    4              END;

      885     8149    3           END;

   8149 15 001607   200030 054100                    AOS     I,,AUTO
        15 001610   200030 236100                    LDQ     I,,AUTO
        15 001611   200022 116100                    CMPQ    COUNT,,AUTO
        15 001612   001523 604400 15                 TMOZ    s:8125

      886     8150
      887     8151    2           IF FOUND_FLAG THEN

   8151 15 001613   200040 234100                    SZN     FOUND_FLAG,,AUTO
        15 001614   001616 605000 15                 TPL     s:8156

      888     8152    3           DO;

      889     8153    3              GOTO RET;

   8153 15 001615   001733 710000 15                 TRA     RET

      890     8154    3           END;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:117  
      891     8155
      892     8156    2           IF TYPLIST_SLOTS = 0 THEN

   8156 15 001616   200023 235100                    LDA     TYPLIST_SLOTS,,AUTO
        15 001617   001632 601000 15                 TNZ     s:8164

      893     8157    3           DO;

      894     8158    3              VLP_VECTOR.PTR$ = TYPLIST$;

   8158 15 001620   200014 236100                    LDQ     TYPLIST$,,AUTO
        15 001621   001535 756000 14                 STQ     VLP_VECTOR+1

      895     8159    3              CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);

   8159 15 001622   001102 630400 14                 EPPR0   FPT_GDS
        15 001623   430001 713400                    CLIMB   alt,gds
        15 001624   400400 401760                    pmme    nvectors=2
        15 001625   001735 702000 15                 TSX2    MON_ERR

      896     8160    3              TYPLIST$ = VLP_VECTOR.PTR$;

   8160 15 001626   001535 236000 14                 LDQ     VLP_VECTOR+1
        15 001627   200014 756100                    STQ     TYPLIST$,,AUTO

      897     8161    3              TYPLIST_SLOTS = 1024 / SIZEW(VLP_CGTYPL_C);

   8161 15 001630   000200 235007                    LDA     128,DL
        15 001631   200023 755100                    STA     TYPLIST_SLOTS,,AUTO

      898     8162    3           END;

      899     8163
      900     8164    2           IF QLIST_SLOTS = 0 THEN

   8164 15 001632   200024 236100                    LDQ     QLIST_SLOTS,,AUTO
        15 001633   001646 601000 15                 TNZ     s:8172
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:118  

      901     8165    3           DO;

      902     8166    3              VLP_VECTOR.PTR$ = QLIST$;

   8166 15 001634   200015 236100                    LDQ     QLIST$,,AUTO
        15 001635   001535 756000 14                 STQ     VLP_VECTOR+1

      903     8167    3              CALL M$GDS(FPT_GDS) ALTRET(MON_ERR);

   8167 15 001636   001102 630400 14                 EPPR0   FPT_GDS
        15 001637   430001 713400                    CLIMB   alt,gds
        15 001640   400400 401760                    pmme    nvectors=2
        15 001641   001735 702000 15                 TSX2    MON_ERR

      904     8168    3              QLIST$ = VLP_VECTOR.PTR$;

   8168 15 001642   001535 236000 14                 LDQ     VLP_VECTOR+1
        15 001643   200015 756100                    STQ     QLIST$,,AUTO

      905     8169    3              QLIST_SLOTS = 1024 / SIZEW(VLP_CGQL_C);

   8169 15 001644   000146 235007                    LDA     102,DL
        15 001645   200024 755100                    STA     QLIST_SLOTS,,AUTO

      906     8170    3           END;

      907     8171
      908     8172    2           VLP$CGTYPL.LIST(COUNT) = VLP_CGTYPL_C.LIST;

   8172 15 001646   200022 236100                    LDQ     COUNT,,AUTO
        15 001647   000034 402007                    MPY     28,DL
        15 001650   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001651   000106 100400                    MLR     fill='000'O
        15 001652   000001 000034 13                 ADSC9   VLP_CGTYPL_C+1           cn=0,n=28
        15 001653   000001 000034                    ADSC9   1,Q,PR0                  cn=0,n=28

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:119  
      909     8173    2           VLP$CGTYPL.LIST.NAME#(COUNT) = KEY.MSGTYP;

   8173 15 001654   200022 236100                    LDQ     COUNT,,AUTO
        15 001655   000007 402007                    MPY     7,DL
        15 001656   000002 736000                    QLS     2
        15 001657   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001660   040106 100400                    MLR     fill='040'O
        15 001661   000001 200010 14                 ADSC9   KEY                      cn=1,n=8
        15 001662   000001 000010                    ADSC9   1,Q,PR0                  cn=0,n=8

      910     8174    2           VLP$CGTYPL.LIST.PRIO#(COUNT) = PRIO;

   8174 15 001663   200022 236100                    LDQ     COUNT,,AUTO
        15 001664   000007 402007                    MPY     7,DL
        15 001665   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001666   000000 620006                    EAX0    0,QL
        15 001667   200034 236100                    LDQ     PRIO,,AUTO
        15 001670   000033 736000                    QLS     27
        15 001671   000003 676110                    ERQ     3,X0,PR0
        15 001672   777000 376003                    ANQ     -512,DU
        15 001673   000003 656110                    ERSQ    3,X0,PR0

      911     8175    2           VLP$CGTYPL.LIST.JOURNAL#(COUNT) = JOURNAL_FLAG;

   8175 15 001674   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001675   200036 236100                    LDQ     JOURNAL_FLAG,,AUTO
        15 001676   000012 772000                    QRL     10
        15 001677   000003 676110                    ERQ     3,X0,PR0
        15 001700   000200 376003                    ANQ     128,DU
        15 001701   000003 656110                    ERSQ    3,X0,PR0

      912     8176    2           VLP$CGTYPL.LIST.ONEREPORT#(COUNT) = ONEREPORT_FLAG;

   8176 15 001702   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001703   200037 236100                    LDQ     ONEREPORT_FLAG,,AUTO
        15 001704   000013 772000                    QRL     11
        15 001705   000003 676110                    ERQ     3,X0,PR0
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:120  
        15 001706   000100 376003                    ANQ     64,DU
        15 001707   000003 656110                    ERSQ    3,X0,PR0

      913     8177    2           VLP$CGTYPL.LIST.PERM#(COUNT) = '1'B;

   8177 15 001710   200014 470500                    LDP0    TYPLIST$,,AUTO
        15 001711   000400 236003                    LDQ     256,DU
        15 001712   000003 256110                    ORSQ    3,X0,PR0

      914     8178
      915     8179    2           VLP$CGQL.LIST(COUNT) = VLP_CGQL_C.LIST;

   8179 15 001713   200022 236100                    LDQ     COUNT,,AUTO
        15 001714   000044 402007                    MPY     36,DL
        15 001715   200015 470500                    LDP0    QLIST$,,AUTO
        15 001716   000106 100400                    MLR     fill='000'O
        15 001717   000010 000044 13                 ADSC9   VLP_CGQL_C               cn=0,n=36
        15 001720   000000 000044                    ADSC9   0,Q,PR0                  cn=0,n=36

      916     8180    2           VLP$CGQL.LIST.MXACT#(COUNT) = QT$ENTRY.MAXACTIVE;

   8180 15 001721   200022 236100                    LDQ     COUNT,,AUTO
        15 001722   000011 402007                    MPY     9,DL
        15 001723   200016 470500                    LDP0    QT$ENTRY$,,AUTO
        15 001724   200015 471500                    LDP1    QLIST$,,AUTO
        15 001725   000002 235100                    LDA     2,,PR0
        15 001726   100000 755106                    STA     0,QL,PR1

      917     8181
      918     8182    2           QLIST_SLOTS = QLIST_SLOTS - 1;

   8182 15 001727   000001 336007                    LCQ     1,DL
        15 001730   200024 056100                    ASQ     QLIST_SLOTS,,AUTO

      919     8183    2           COUNT = COUNT + 1;

   8183 15 001731   200022 054100                    AOS     COUNT,,AUTO
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:121  

      920     8184    2           TYPLIST_SLOTS = TYPLIST_SLOTS - 1;

   8184 15 001732   200023 056100                    ASQ     TYPLIST_SLOTS,,AUTO

      921     8185
      922     8186    2   RET:
      923     8187    2           RETURN;

   8187 15 001733   200126 221300       RET          LDX1  ! PTR$_BITS+6,,AUTO
        15 001734   000001 702211                    TSX2  ! 1,X1

      924     8188
      925     8189    2   MON_ERR:
      926     8190    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8190 15 001735   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
        15 001736   000000 471500                    LDP1    0,,PR0
        15 001737   100102 236100                    LDQ     66,,PR1
        15 001740   000000 756000 xsym               STQ     QQ_GLOBAL

      927     8191    2           CALL QQC$SCREECH;

   8191 15 001741   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 001742   000000 701000 xent               TSX1    QQC$SCREECH
        15 001743   000000 011000                    NOP     0

      928     8192
      929     8193    2   END ADD_MSGTYP;

   8193 15 001744   200126 221300                    LDX1  ! PTR$_BITS+6,,AUTO
        15 001745   000001 702211                    TSX2  ! 1,X1

      930     8194                %PAGE(ARG="RELEASE_MEM",PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:122  
              8211    2   /***************************************************************************
              8212    2    *                                                                         *
              8213    2    *                                RELEASE_MEM                              *
              8214    2    *                                                                         *
              8215    2    ***************************************************************************/

      931     8219    1   RELEASE_MEM:

   8219 15 001746   200122 741300       RELEASE_MEM  STX1  ! PTR$_BITS+2,,AUTO

      932     8220    1           PROC;
      933     8221
      934     8222    2           CALL QQD$SEGSIZE(QT$ENTRY$, WORDS);

   8222 15 001747   200027 630500                    EPPR0   WORDS,,AUTO
        15 001750   200131 450500                    STP0    PTR$_BITS+9,,AUTO
        15 001751   200016 631500                    EPPR1   QT$ENTRY$,,AUTO
        15 001752   200130 451500                    STP1    PTR$_BITS+8,,AUTO
        15 001753   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 001754   000020 631400 xsym               EPPR1   B_VECTNIL+16
        15 001755   000000 701000 xent               TSX1    QQD$SEGSIZE
        15 001756   000000 011000                    NOP     0

      935     8223    2           VLP_VECTOR.PTR$ = QT$ENTRY$;

   8223 15 001757   200016 236100                    LDQ     QT$ENTRY$,,AUTO
        15 001760   001535 756000 14                 STQ     VLP_VECTOR+1

      936     8224    2           FPT_FDS.V.SEGSIZE# = WORDS;

   8224 15 001761   200027 720100                    LXL0    WORDS,,AUTO
        15 001762   001100 440000 14                 SXL0    FPT_FDS+4

      937     8225    2           CALL M$FDS(FPT_FDS) ALTRET(MON_ERR);

   8225 15 001763   001074 630400 14                 EPPR0   FPT_FDS
        15 001764   430002 713400                    CLIMB   alt,fds
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:123  
        15 001765   400400 401760                    pmme    nvectors=2
        15 001766   002033 702000 15                 TSX2    MON_ERR

      938     8226
      939     8227    2           IF COUNT > 0 THEN

   8227 15 001767   200022 235100                    LDA     COUNT,,AUTO
        15 001770   002031 604400 15                 TMOZ    s:8238

      940     8228    3           DO;

      941     8229    3              CALL QQD$SEGSIZE(TYPLIST$, WORDS);

   8229 15 001771   200027 630500                    EPPR0   WORDS,,AUTO
        15 001772   200131 450500                    STP0    PTR$_BITS+9,,AUTO
        15 001773   200014 631500                    EPPR1   TYPLIST$,,AUTO
        15 001774   200130 451500                    STP1    PTR$_BITS+8,,AUTO
        15 001775   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 001776   000020 631400 xsym               EPPR1   B_VECTNIL+16
        15 001777   000000 701000 xent               TSX1    QQD$SEGSIZE
        15 002000   000000 011000                    NOP     0

      942     8230    3              VLP_VECTOR.PTR$ = TYPLIST$;

   8230 15 002001   200014 236100                    LDQ     TYPLIST$,,AUTO
        15 002002   001535 756000 14                 STQ     VLP_VECTOR+1

      943     8231    3              FPT_FDS.V.SEGSIZE# = WORDS;

   8231 15 002003   200027 720100                    LXL0    WORDS,,AUTO
        15 002004   001100 440000 14                 SXL0    FPT_FDS+4

      944     8232    3              CALL M$FDS(FPT_FDS) ALTRET(MON_ERR);

   8232 15 002005   001074 630400 14                 EPPR0   FPT_FDS
        15 002006   430002 713400                    CLIMB   alt,fds
        15 002007   400400 401760                    pmme    nvectors=2
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:124  
        15 002010   002033 702000 15                 TSX2    MON_ERR

      945     8233    3              CALL QQD$SEGSIZE(QLIST$, WORDS);

   8233 15 002011   200027 630500                    EPPR0   WORDS,,AUTO
        15 002012   200131 450500                    STP0    PTR$_BITS+9,,AUTO
        15 002013   200015 631500                    EPPR1   QLIST$,,AUTO
        15 002014   200130 451500                    STP1    PTR$_BITS+8,,AUTO
        15 002015   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 002016   000020 631400 xsym               EPPR1   B_VECTNIL+16
        15 002017   000000 701000 xent               TSX1    QQD$SEGSIZE
        15 002020   000000 011000                    NOP     0

      946     8234    3              VLP_VECTOR.PTR$ = QLIST$;

   8234 15 002021   200015 236100                    LDQ     QLIST$,,AUTO
        15 002022   001535 756000 14                 STQ     VLP_VECTOR+1

      947     8235    3              FPT_FDS.V.SEGSIZE# = WORDS;

   8235 15 002023   200027 720100                    LXL0    WORDS,,AUTO
        15 002024   001100 440000 14                 SXL0    FPT_FDS+4

      948     8236    3              CALL M$FDS(FPT_FDS) ALTRET(MON_ERR);

   8236 15 002025   001074 630400 14                 EPPR0   FPT_FDS
        15 002026   430002 713400                    CLIMB   alt,fds
        15 002027   400400 401760                    pmme    nvectors=2
        15 002030   002033 702000 15                 TSX2    MON_ERR

      949     8237    3           END;

      950     8238    2           RETURN;

   8238 15 002031   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 002032   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:125  
      951     8239
      952     8240    2   MON_ERR:
      953     8241    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8241 15 002033   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
        15 002034   000000 471500                    LDP1    0,,PR0
        15 002035   100102 236100                    LDQ     66,,PR1
        15 002036   000000 756000 xsym               STQ     QQ_GLOBAL

      954     8242    2           CALL QQC$SCREECH;

   8242 15 002037   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 002040   000000 701000 xent               TSX1    QQC$SCREECH
        15 002041   000000 011000                    NOP     0

      955     8243    2   END RELEASE_MEM;

   8243 15 002042   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 002043   000001 702211                    TSX2  ! 1,X1

      956     8244                %PAGE(ARG="OPEN_JOURNAL", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:126  
              8261    2   /***************************************************************************
              8262    2    *                                                                         *
              8263    2    *                                OPEN_JOURNAL                             *
              8264    2    *                                                                         *
              8265    2    ***************************************************************************/

      957     8269    1   OPEN_JOURNAL:

   8269 15 002044   200124 741300       OPEN_JOURNAL STX1  ! PTR$_BITS+4,,AUTO

      958     8270    1           PROC ALTRET;
      959     8271
      960     8272    2           CALL M$OPEN(FPT_OPEN_JOURNAL) ALTRET(OPEN_ERR);

   8272 15 002045   001416 630400 14                 EPPR0   FPT_OPEN_JOURNAL
        15 002046   450000 713400                    CLIMB   alt,open
        15 002047   410400 401760                    pmme    nvectors=18
        15 002050   002052 702000 15                 TSX2    OPEN_ERR

      961     8273
      962     8274    3           DO WHILE('0'B);

   8274 15 002051   002072 710000 15                 TRA     s:8283

      963     8275
      964     8276    3   OPEN_ERR:
      965     8277    3              CALL QQC$BLDMSG_ERRBLK(MSGBLK);

   8277 15 002052   200070 630500       OPEN_ERR     EPPR0   MSGBLK,,AUTO
        15 002053   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 002054   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 002055   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 002056   000000 701000 xent               TSX1    QQC$BLDMSG_ERRBLK
        15 002057   000000 011000                    NOP     0

      966     8278    3              MSGBLK.ERRINFO.ERR(1) = CODE_JERR;

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:127  
   8278 15 002060   000100 100400                    MLR     fill='000'O
        15 002061   000033 000004 13                 ADSC9   CODE_JERR                cn=0,n=4
        15 002062   200105 200004                    ADSC9   MSGBLK+13,,AUTO          cn=1,n=4

      967     8279    3              CALL QQC$BLDMSG(MSGBLK);

   8279 15 002063   200070 630500                    EPPR0   MSGBLK,,AUTO
        15 002064   200130 450500                    STP0    PTR$_BITS+8,,AUTO
        15 002065   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 002066   000017 631400 xsym               EPPR1   B_VECTNIL+15
        15 002067   000000 701000 xent               TSX1    QQC$BLDMSG
        15 002070   000000 011000                    NOP     0

      968     8280    3              GOTO ALT;

   8280 15 002071   002153 710000 15                 TRA     ALT

      969     8281    3           END /* NEVER */;

      970     8282
      971     8283    2           FPT_UNFID.V.DCB# = DCBNUM(M$JOURNAL);

   8283 15 002072   000000 236007 xsym               LDQ     M$JOURNAL,DL
        15 002073   000000 620006                    EAX0    0,QL
        15 002074   001242 740000 14                 STX0    FPT_UNFID+20

      972     8284    2           CALL QQD$SEGSIZE(QT$ENTRY$, WORDS);

   8284 15 002075   200027 630500                    EPPR0   WORDS,,AUTO
        15 002076   200131 450500                    STP0    PTR$_BITS+9,,AUTO
        15 002077   200016 631500                    EPPR1   QT$ENTRY$,,AUTO
        15 002100   200130 451500                    STP1    PTR$_BITS+8,,AUTO
        15 002101   200130 630500                    EPPR0   PTR$_BITS+8,,AUTO
        15 002102   000020 631400 xsym               EPPR1   B_VECTNIL+16
        15 002103   000000 701000 xent               TSX1    QQD$SEGSIZE
        15 002104   000000 011000                    NOP     0

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:128  
      973     8285    2           CHAR_STRING_SIZE = WORDS * 4 - 2;

   8285 15 002105   200027 235100                    LDA     WORDS,,AUTO
        15 002106   000002 735000                    ALS     2
        15 002107   000002 135007                    SBLA    2,DL
        15 002110   200026 755100                    STA     CHAR_STRING_SIZE,,AUTO

      974     8286    2           FPT_UNFID.TEXTFID_ = VECTOR(PINCRC(QT$ENTRY$, 2) -> CHAR$STRING);

   8286 15 002111   000020 735000                    ALS     16
        15 002112   000140 135007                    SBLA    96,DL
        15 002113   200016 236100                    LDQ     QT$ENTRY$,,AUTO
        15 002114   400000 036007                    ADLQ    -131072,DL
        15 002115   001220 757000 14                 STAQ    FPT_UNFID+2

      975     8287    2           CALL M$UNFID(FPT_UNFID) ALTRET(MON_ERR);

   8287 15 002116   001216 630400 14                 EPPR0   FPT_UNFID
        15 002117   420021 713400                    CLIMB   alt,+8209
        15 002120   404400 401760                    pmme    nvectors=10
        15 002121   002155 702000 15                 TSX2    MON_ERR

      976     8288    2           QT$ENTRY$ -> VLP$JRNLFIDV.L# = LEN;

   8288 15 002122   200016 470500                    LDP0    QT$ENTRY$,,AUTO
        15 002123   000100 101400                    MRL     fill='000'O
        15 002124   000000 000004 14                 ADSC9   LEN                      cn=0,n=4
        15 002125   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

      977     8289
      978     8290    2           FPT_CGCTL.JRNLFID_ = VECTOR(QT$ENTRY$ -> VLP$JRNLFIDV);

   8290 15 002126   200016 470500                    LDP0    QT$ENTRY$,,AUTO
        15 002127   000100 100500                    MLR     fill='000'O
        15 002130   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
        15 002131   200130 000004                    ADSC9   PTR$_BITS+8,,AUTO        cn=0,n=4
        15 002132   200130 220100                    LDX0    PTR$_BITS+8,,AUTO
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:129  
        15 002133   000002 621010                    EAX1    2,X0
        15 002134   000000 635011                    EAA     0,X1
        15 002135   000002 771000                    ARL     2
        15 002136   000140 135007                    SBLA    96,DL
        15 002137   200016 236100                    LDQ     QT$ENTRY$,,AUTO
        15 002140   001134 757000 14                 STAQ    FPT_CGCTL+20

      979     8291    2           FPT_CGCTL.JRNLSTA_ = VECTOR(VLP_STATION_JRNL);

   8291 15 002141   000046 237000 16                 LDAQ    38
        15 002142   001132 757000 14                 STAQ    FPT_CGCTL+18

      980     8292    2           FPT_CLOSE_CG.V.GHSTACS# = 2 /* JRNLOPN# */;

   8292 15 002143   001356 236000 14                 LDQ     FPT_CLOSE_CG+28
        15 002144   000045 376000 16                 ANQ     37
        15 002145   000002 276003                    ORQ     2,DU
        15 002146   001356 756000 14                 STQ     FPT_CLOSE_CG+28

      981     8293    2           VLP_CGCP.JOURNAL# = '1'B;

   8293 15 002147   000400 236003                    LDQ     256,DU
        15 002150   001521 256000 14                 ORSQ    VLP_CGCP+9

      982     8294
      983     8295    2           RETURN;

   8295 15 002151   200124 221300                    LDX1  ! PTR$_BITS+4,,AUTO
        15 002152   000001 702211                    TSX2  ! 1,X1

      984     8296
      985     8297    2   ALT:
      986     8298    2           ALTRETURN;

   8298 15 002153   200124 221300       ALT          LDX1  ! PTR$_BITS+4,,AUTO
        15 002154   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:130  
      987     8299
      988     8300    2   MON_ERR:
      989     8301    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8301 15 002155   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
        15 002156   000000 471500                    LDP1    0,,PR0
        15 002157   100102 236100                    LDQ     66,,PR1
        15 002160   000000 756000 xsym               STQ     QQ_GLOBAL

      990     8302    2           CALL QQC$SCREECH;

   8302 15 002161   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 002162   000000 701000 xent               TSX1    QQC$SCREECH
        15 002163   000000 011000                    NOP     0

      991     8303
      992     8304    2   END OPEN_JOURNAL;

   8304 15 002164   200124 221300                    LDX1  ! PTR$_BITS+4,,AUTO
        15 002165   000001 702211                    TSX2  ! 1,X1

      993     8305                %PAGE(ARG="OPEN_CG", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:131  
              8322    2   /***************************************************************************
              8323    2    *                                                                         *
              8324    2    *                                  OPEN_CG                                *
              8325    2    *                                                                         *
              8326    2    ***************************************************************************/

      994     8330    1   OPEN_CG:

   8330 15 002166   200122 741300       OPEN_CG      STX1  ! PTR$_BITS+2,,AUTO

      995     8331    1           PROC ALTRET;
      996     8332
      997     8333    2           IF QQ_GLOBAL.JOURNAL THEN

   8333 15 002167   000004 234000 xsym               SZN     QQ_GLOBAL+4
        15 002170   002174 605000 15                 TPL     s:8339

      998     8334    3           DO;

      999     8335    3              CALL OPEN_JOURNAL ALTRET(ALT);

   8335 15 002171   002044 701000 15                 TSX1    OPEN_JOURNAL
        15 002172   002267 702000 15                 TSX2    ALT

     1000     8336    3           END;

   8336 15 002173   002200 710000 15                 TRA     s:8343

     1001     8337    2           ELSE
     1002     8338    3           DO;

     1003     8339    3              FPT_CGCTL.JRNLFID_ = VECTOR(ERASE);

   8339 15 002174   000050 237000 16                 LDAQ    40
        15 002175   001134 757000 14                 STAQ    FPT_CGCTL+20

     1004     8340    3              FPT_CGCTL.JRNLSTA_ = VECTOR(ERASE);
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:132  

   8340 15 002176   000050 237000 16                 LDAQ    40
        15 002177   001132 757000 14                 STAQ    FPT_CGCTL+18

     1005     8341    3           END;

     1006     8342
     1007     8343    2           CALL M$OPEN(FPT_OPEN_CG) ALTRET(OPEN_ERR);

   8343 15 002200   000062 630400 14                 EPPR0   FPT_OPEN_CG
        15 002201   450000 713400                    CLIMB   alt,open
        15 002202   410400 401760                    pmme    nvectors=18
        15 002203   002205 702000 15                 TSX2    OPEN_ERR

     1008     8344
     1009     8345    3           DO WHILE ('0'B);

   8345 15 002204   002224 710000 15                 TRA     s:8356

     1010     8346    3   OPEN_ERR:
     1011     8347    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 142 AND

   8347 15 002205   000000 470400 xsym  OPEN_ERR     LDP0    B$TCB$
        15 002206   000000 471500                    LDP1    0,,PR0
        15 002207   100102 236100                    LDQ     66,,PR1
        15 002210   377770 376007                    ANQ     131064,DL
        15 002211   002160 116007                    CMPQ    1136,DL
        15 002212   002221 600000 15                 TZE     s:8352
        15 002213   001550 116007                    CMPQ    872,DL
        15 002214   002221 600000 15                 TZE     s:8352
        15 002215   021600 116007                    CMPQ    9088,DL
        15 002216   002221 600000 15                 TZE     s:8352
        15 002217   015660 116007                    CMPQ    7088,DL
        15 002220   002271 601000 15                 TNZ     MON_ERR

     1012     8348    3                B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 109 AND
     1013     8349    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 1136 AND
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:133  
     1014     8350    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 886 THEN
     1015     8351    3                 GOTO MON_ERR;
     1016     8352    3              QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8352 15 002221   100102 236100                    LDQ     66,,PR1
        15 002222   000000 756000 xsym               STQ     QQ_GLOBAL

     1017     8353    3              GOTO ALT;

   8353 15 002223   002267 710000 15                 TRA     ALT

     1018     8354    3           END /* WHILE NEVER */;

     1019     8355
     1020     8356    2           CALL M$CGCTL(FPT_CGCTL) ALTRET(CGCTL_ERR);

   8356 15 002224   001110 630400 14                 EPPR0   FPT_CGCTL
        15 002225   500003 713400                    CLIMB   alt,+32771
        15 002226   411400 401760                    pmme    nvectors=20
        15 002227   002231 702000 15                 TSX2    CGCTL_ERR

     1021     8357
     1022     8358    3           DO WHILE ('0'B);

   8358 15 002230   002237 710000 15                 TRA     s:8364

     1023     8359    3   CGCTL_ERR:
     1024     8360    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 109

   8360 15 002231   000000 470400 xsym  CGCTL_ERR    LDP0    B$TCB$
        15 002232   000000 471500                    LDP1    0,,PR0
        15 002233   100102 236100                    LDQ     66,,PR1
        15 002234   377770 376007                    ANQ     131064,DL
        15 002235   001550 116007                    CMPQ    872,DL
        15 002236   002271 601000 15                 TNZ     MON_ERR

     1025     8361    3              THEN GOTO MON_ERR;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:134  
     1026     8362    3           END /* WHILE NEVER */;

     1027     8363
     1028     8364    2           FPT_CGCTL.QLIST_ = VECTOR(NIL);

   8364 15 002237   000052 237000 16                 LDAQ    42
        15 002240   001122 757000 14                 STAQ    FPT_CGCTL+10

     1029     8365    2           FPT_CGCTL.TYPLIST_ = VECTOR(NIL);

   8365 15 002241   000052 237000 16                 LDAQ    42
        15 002242   001112 757000 14                 STAQ    FPT_CGCTL+2

     1030     8366
     1031     8367    2           CALL M$CLOSE(FPT_CLOSE_CG) ALTRET(MON_ERR);

   8367 15 002243   001322 630400 14                 EPPR0   FPT_CLOSE_CG
        15 002244   450001 713400                    CLIMB   alt,close
        15 002245   406000 401760                    pmme    nvectors=13
        15 002246   002271 702000 15                 TSX2    MON_ERR

     1032     8368
     1033     8369    2           FPT_OPEN_CG.V.SHARE# = 1 /* ALL# */;

   8369 15 002247   000126 236000 14                 LDQ     FPT_OPEN_CG+36
        15 002250   000054 376000 16                 ANQ     44
        15 002251   000010 276007                    ORQ     8,DL
        15 002252   000126 756000 14                 STQ     FPT_OPEN_CG+36

     1034     8370    2           FPT_OPEN_CG.V.EXIST# = 2 /* OLDFILE# */;

   8370 15 002253   000126 236000 14                 LDQ     FPT_OPEN_CG+36
        15 002254   000055 376000 16                 ANQ     45
        15 002255   000400 276007                    ORQ     256,DL
        15 002256   000126 756000 14                 STQ     FPT_OPEN_CG+36

     1035     8371    2           FPT_OPEN_CG.V.FUN# = 1 /* UPDATE# */;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:135  

   8371 15 002257   001000 236007                    LDQ     512,DL
        15 002260   000127 552010 14                 STBQ    FPT_OPEN_CG+37,'10'O

     1036     8372    2           CALL M$OPEN(FPT_OPEN_CG) ALTRET(MON_ERR);

   8372 15 002261   000062 630400 14                 EPPR0   FPT_OPEN_CG
        15 002262   450000 713400                    CLIMB   alt,open
        15 002263   410400 401760                    pmme    nvectors=18
        15 002264   002271 702000 15                 TSX2    MON_ERR

     1037     8373
     1038     8374    2           RETURN;

   8374 15 002265   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 002266   000001 702211                    TSX2  ! 1,X1

     1039     8375
     1040     8376    2   ALT:
     1041     8377    2           ALTRETURN;

   8377 15 002267   200122 221300       ALT          LDX1  ! PTR$_BITS+2,,AUTO
        15 002270   000000 702211                    TSX2  ! 0,X1

     1042     8378
     1043     8379    2   MON_ERR:
     1044     8380    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8380 15 002271   000000 470400 xsym  MON_ERR      LDP0    B$TCB$
        15 002272   000000 471500                    LDP1    0,,PR0
        15 002273   100102 236100                    LDQ     66,,PR1
        15 002274   000000 756000 xsym               STQ     QQ_GLOBAL

     1045     8381    2           CALL QQC$SCREECH;

   8381 15 002275   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 002276   000000 701000 xent               TSX1    QQC$SCREECH
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:136  
        15 002277   000000 011000                    NOP     0

     1046     8382
     1047     8383    2   END OPEN_CG;

   8383 15 002300   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 002301   000001 702211                    TSX2  ! 1,X1

     1048     8384                %PAGE(ARG="OPEN_SAVCMD", PAGE=YES);

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:137  
              8401    2   /***************************************************************************
              8402    2    *                                                                         *
              8403    2    *                                OPEN_SAVCMD                              *
              8404    2    *                                                                         *
              8405    2    ***************************************************************************/

     1049     8409    1   OPEN_SAVCMD:

   8409 15 002302   200122 741300       OPEN_SAVCMD  STX1  ! PTR$_BITS+2,,AUTO

     1050     8410    1           PROC ALTRET;
     1051     8411
     1052     8412    2           M$SAVCMD$ = DCBADDR(DCBNUM(M$SAVCMD));

   8412 15 002303   000000 236007 xsym               LDQ     M$SAVCMD,DL
        15 002304   000002 470400 16                 LDP0    2
        15 002305   000000 471500                    LDP1    0,,PR0
        15 002306   100000 236106                    LDQ     0,QL,PR1
        15 002307   200012 756100                    STQ     M$SAVCMD$,,AUTO

     1053     8413    2           M$SVCMD1$ = DCBADDR(DCBNUM(M$SVCMD1));

   8413 15 002310   000000 236007 xsym               LDQ     M$SVCMD1,DL
        15 002311   100000 236106                    LDQ     0,QL,PR1
        15 002312   200013 756100                    STQ     M$SVCMD1$,,AUTO

     1054     8414    2           IF (M$SAVCMD$->F$DCB.AMR#) AND NOT (QQ_GLOBAL.NEWCG) THEN

   8414 15 002313   200012 473500                    LDP3    M$SAVCMD$,,AUTO
        15 002314   300031 236100                    LDQ     25,,PR3
        15 002315   010000 316007                    CANQ    4096,DL
        15 002316   002333 600000 15                 TZE     s:8421
        15 002317   000010 234000 xsym               SZN     QQ_GLOBAL+8
        15 002320   002333 604000 15                 TMI     s:8421

     1055     8415    3           DO;

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:138  
     1056     8416    3              SAVCMD.L# = M$SAVCMD$->F$DCB.NAME#.L;

   8416 15 002321   300010 236100                    LDQ     8,,PR3
        15 002322   001625 552040 14                 STBQ    SAVCMD,'40'O

     1057     8417    3              SAVCMD.NAME# = M$SAVCMD$->F$DCB.NAME#.C;

   8417 15 002323   040000 100500                    MLR     fill='040'O
        15 002324   300010 200007                    ADSC9   8,,PR3                   cn=1,n=7
        15 002325   001625 200007 14                 ADSC9   SAVCMD                   cn=1,n=7

     1058     8418    3              CALL M$OPEN (FPT_OPEN_SVCMD1)

   8418 15 002326   000524 630400 14                 EPPR0   FPT_OPEN_SVCMD1
        15 002327   450000 713400                    CLIMB   alt,open
        15 002330   410400 401760                    pmme    nvectors=18
        15 002331   002333 702000 15                 TSX2    s:8421
        15 002332   002333 710000 15                 TRA     s:8421

     1059     8419    4              WHENALTRETURN DO; END;

     1060     8420    3           END;

     1061     8421    2           CALL M$OPEN(FPT_OPEN_SAVCMD) ALTRET(OPEN_ERR);

   8421 15 002333   000432 630400 14                 EPPR0   FPT_OPEN_SAVCMD
        15 002334   450000 713400                    CLIMB   alt,open
        15 002335   410400 401760                    pmme    nvectors=18
        15 002336   002343 702000 15                 TSX2    OPEN_ERR

     1062     8422    2           FPT_READ_SEQ.V.DCB# = DCBNUM(M$SVCMD1);

   8422 15 002337   000000 236007 xsym               LDQ     M$SVCMD1,DL
        15 002340   000000 620006                    EAX0    0,QL
        15 002341   000014 740000 14                 STX0    FPT_READ_SEQ+8

     1063     8423
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:139  
     1064     8424    3           DO WHILE ('0'B);

   8424 15 002342   002362 710000 15                 TRA     s:8435

     1065     8425    3   OPEN_ERR:
     1066     8426    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 142 AND

   8426 15 002343   000000 470400 xsym  OPEN_ERR     LDP0    B$TCB$
        15 002344   000000 471500                    LDP1    0,,PR0
        15 002345   100102 236100                    LDQ     66,,PR1
        15 002346   377770 376007                    ANQ     131064,DL
        15 002347   002160 116007                    CMPQ    1136,DL
        15 002350   002357 600000 15                 TZE     s:8431
        15 002351   001550 116007                    CMPQ    872,DL
        15 002352   002357 600000 15                 TZE     s:8431
        15 002353   021600 116007                    CMPQ    9088,DL
        15 002354   002357 600000 15                 TZE     s:8431
        15 002355   015660 116007                    CMPQ    7088,DL
        15 002356   002424 601000 15                 TNZ     MON_ERR

     1067     8427    3                B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.CODE ~= 109 AND
     1068     8428    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 1136 AND
     1069     8429    3                B$TCB$ -> B$TCB.ALT$ ->B$ALT.ERR.CODE ~= 886 THEN
     1070     8430    3                 GOTO MON_ERR;
     1071     8431    3              QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8431 15 002357   100102 236100                    LDQ     66,,PR1
        15 002360   000000 756000 xsym               STQ     QQ_GLOBAL

     1072     8432    3              GOTO ALT;

   8432 15 002361   002422 710000 15                 TRA     ALT

     1073     8433    3           END /* WHILE NEVER */;

     1074     8434
     1075     8435    2           IF (M$SVCMD1$->F$DCB.FCD#) THEN
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:140  

   8435 15 002362   200013 470500                    LDP0    M$SVCMD1$,,AUTO
        15 002363   000031 236100                    LDQ     25,,PR0
        15 002364   020000 316007                    CANQ    8192,DL
        15 002365   002420 600000 15                 TZE     s:8455

     1076     8436    3           DO WHILE('1'B);

     1077     8437    3              CALL M$READ(FPT_READ_SEQ) ALTRET(READ_CMD_ERR1);

   8437 15 002366   000004 630400 14                 EPPR0   FPT_READ_SEQ
        15 002367   440000 713400                    CLIMB   alt,read
        15 002370   401400 401760                    pmme    nvectors=4
        15 002371   002373 702000 15                 TSX2    READ_CMD_ERR1

     1078     8438
     1079     8439    4              DO WHILE('0'B);

   8439 15 002372   002411 710000 15                 TRA     s:8452

     1080     8440
     1081     8441    4   READ_CMD_ERR1:
     1082     8442    4                 ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8442 15 002373   000000 470400 xsym  READ_CMD_ER* LDP0    B$TCB$
        15 002374   000000 471500                    LDP1    0,,PR0
        15 002375   100102 236100                    LDQ     66,,PR1
        15 002376   200117 756100                    STQ     ERR,,AUTO

     1083     8443    4                 IF ERR.CODE ~= 6 /* E$EOF */ THEN

   8443 15 002377   200117 236100                    LDQ     ERR,,AUTO
        15 002400   377770 376007                    ANQ     131064,DL
        15 002401   000060 116007                    CMPQ    48,DL
        15 002402   002404 600000 15                 TZE     s:8448

     1084     8444    5                 DO;
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:141  

     1085     8445    5                    GOTO MON_ERR;

   8445 15 002403   002424 710000 15                 TRA     MON_ERR

     1086     8446    5                 END;
     1087     8447
     1088     8448    4                 CALL M$CLOSE (FPT_CLOSE_SVCMD1);

   8448 15 002404   001360 630400 14                 EPPR0   FPT_CLOSE_SVCMD1
        15 002405   050001 713400                    CLIMB   close
        15 002406   406000 401760                    pmme    nvectors=13

     1089     8449    4                 RETURN;

   8449 15 002407   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 002410   000001 702211                    TSX2  ! 1,X1

     1090     8450    4              END /* NEVER */;

     1091     8451
     1092     8452    3              QQ_CMDBLK.ARS = M$SVCMD1$ -> F$DCB.ARS#;

   8452 15 002411   200013 470500                    LDP0    M$SVCMD1$,,AUTO
        15 002412   000000 720100                    LXL0    0,,PR0
        15 002413   000007 440000 xsym               SXL0    QQ_CMDBLK+7

     1093     8453    3              CALL QQA$CMD;

   8453 15 002414   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 002415   000000 701000 xent               TSX1    QQA$CMD
        15 002416   000000 011000                    NOP     0

     1094     8454    3           END;

   8454 15 002417   002366 710000 15                 TRA     s:8437

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:142  
     1095     8455    2           ELSE RETURN;                    /* NO SAVE COMMANDS TO PROCESS        */

   8455 15 002420   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 002421   000001 702211                    TSX2  ! 1,X1

     1096     8456
     1097     8457    2   ALT:
     1098     8458    2           ALTRETURN;

   8458 15 002422   200122 221300       ALT          LDX1  ! PTR$_BITS+2,,AUTO
        15 002423   000000 702211                    TSX2  ! 0,X1

     1099     8459
     1100     8460    2   MON_ERR:
     1101     8461    2           QQ_GLOBAL.ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   8461 15 002424   000000 471500       MON_ERR      LDP1    0,,PR0
        15 002425   100102 236100                    LDQ     66,,PR1
        15 002426   000000 756000 xsym               STQ     QQ_GLOBAL

     1102     8462    2           CALL QQC$SCREECH;

   8462 15 002427   000002 631400 xsym               EPPR1   B_VECTNIL+2
        15 002430   000000 701000 xent               TSX1    QQC$SCREECH
        15 002431   000000 011000                    NOP     0

     1103     8463
     1104     8464    2   END OPEN_SAVCMD;

   8464 15 002432   200122 221300                    LDX1  ! PTR$_BITS+2,,AUTO
        15 002433   000001 702211                    TSX2  ! 1,X1

     1105     8465    1   END QQA$INIT;

   8465 15 002434   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:143  
--  Include file information  --

   PC_MACRO_C.:E05TOU  is referenced.
   QT_MACROS_C.:E05TOU  is referenced.
   QQ_SUBS_C.:E05TOU  is referenced.
   QQ_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   QQ_MACROS_C.:E05TOU  is referenced.
   Q_ERRCODE_C.:E05TOU  is referenced.
   QQ_PERR_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   Q_PAGE_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QQA$INIT.
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:144  

 **** Variables and constants ****

  ****  Section 013 RoData QQA$INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    27-0-0/b STRC        r     1 CODE_COC                  25-0-0/b STRC        r     1 CODE_DDI
    26-0-0/b STRC        r     1 CODE_IIAU                 33-0-0/b STRC        r     1 CODE_JERR
    32-0-0/b STRC        r     1 CODE_LESSTPUS             30-0-0/b STRC        r     1 CODE_NAVC
    31-0-0/b STRC        r     1 CODE_NOTPUS               22-0-0/b STRC        r     1 CODE_NO_POOLMEM
    24-0-0/b STRC        r     1 CODE_NT                   23-0-0/b STRC        r     1 CODE_NTRDRBUILT
    34-0-0/b STRC        r     1 CODE_STRTUP               10-0-0/d STRC(324)   r     1 VLP_CGQL_C
     0-0-0/d STRC(288)   r     1 VLP_CGTYPL_C

  ****  Section 014  Data  QQA$INIT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  1610-0-0/c STRC(45)    r     1 CGNAME                  1110-0-0/d STRC(1872)  r     1 FPT_CGCTL
  1322-0-0/d STRC(1080)  r     1 FPT_CLOSE_CG            1360-0-0/d STRC(1080)  r     1 FPT_CLOSE_SVCMD1
  1174-0-0/d STRC(144)   r     1 FPT_EVENT               1074-0-0/d STRC(216)   r     1 FPT_FDS
  1102-0-0/d STRC(216)   r     1 FPT_GDS                 1244-0-0/d STRC(144)   r     1 FPT_INT
    62-0-0/d STRC(2088)  r     1 FPT_OPEN_CG              340-0-0/d STRC(2088)  r     1 FPT_OPEN_CSCG
   154-0-0/d STRC(2088)  r     1 FPT_OPEN_HOLD            246-0-0/d STRC(2088)  r     1 FPT_OPEN_INFO
  1416-0-0/d STRC(2088)  r     1 FPT_OPEN_JOURNAL         432-0-0/d STRC(2088)  r     1 FPT_OPEN_SAVCMD
   524-0-0/d STRC(2088)  r     1 FPT_OPEN_SVCMD1          616-0-0/d STRC(2088)  r     1 FPT_OPEN_TPCMD
  1002-0-0/d STRC(2088)  r     1 FPT_OPEN_TPCNTRL         710-0-0/d STRC(2088)  r     1 FPT_OPEN_TRADER
    56-0-0/d STRC(144)   r     1 FPT_PFIL                1272-0-0/d STRC(360)   r     1 FPT_PRECORD
    22-0-0/d STRC(504)   r     1 FPT_READ_CG               40-0-0/d STRC(504)   r     1 FPT_READ_CSCG
  1304-0-0/d STRC(504)   r     1 FPT_READ_KEY               4-0-0/d STRC(504)   r     1 FPT_READ_SEQ
  1200-0-0/d STRC(504)   r     1 FPT_READ_TRADER         1256-0-0/d STRC(432)   r     1 FPT_TIME
  1216-0-0/d STRC(792)   r     1 FPT_UNFID               1250-0-0/d STRC(216)   r     1 FPT_XCON
     1-0-0/c STRC(99)    r     1 KEY                        0-0-0/w UBIN        r     1 LEN
  1625-0-0/c STRC(72)    r     1 SAVCMD                  1606-0-0/c STRC(72)    r     1 SYSACCT
  1615-0-0/c STRC(288)   r     1 TEXTC_NAME              1510-0-0/d STRC(720)   r     1 VLP_CGCP
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:145  
  1644-0-0/d STRC(324)   r     1 VLP_CGSTAL_HOLD         1672-0-0/d STRC(324)   r     1 VLP_CGSTAL_INFO
  1612-0-0/c STRC(90)    r     1 VLP_NAME                1556-0-0/w STRC(432)   r     1 VLP_SETSTA
  1572-0-0/w STRC(432)   r     1 VLP_SETSTA_CSCG         1627-0-0/w STRC(432)   r     1 VLP_SETSTA_HOLD
  1656-0-0/w STRC(432)   r     1 VLP_SETSTA_INFO         1536-0-0/w STRC(288)   r     1 VLP_STATION
  1546-0-0/w STRC(288)   r     1 VLP_STATION_JRNL        1534-0-0/d STRC(72)    r     1 VLP_VECTOR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    20-0-0/w PTR         r     1 AMR$FPT_OPEN$             33-0-0/w SBIN        r     1 BLANK_POS
    26-0-0/w SBIN        r     1 CHAR_STRING_SIZE          42-0-0/c CHAR(80)    r     1 CMD
    22-0-0/w SBIN        r     1 COUNT                      4-0-0/w PTR         r     1 D$
   117-0-0/b STRC        r     1 ERR                       40-0-0/w BIT         r     1 FOUND_FLAG
     5-0-0/w PTR         r     1 HEAD$                     30-0-0/w SBIN        r     1 I
    36-0-0/w BIT         r     1 JOURNAL_FLAG              31-0-0/w SBIN        r     1 K
    12-0-0/w PTR         r     1 M$SAVCMD$                 11-0-0/w PTR         r     1 M$SI$
    13-0-0/w PTR         r     1 M$SVCMD1$                 10-0-0/w PTR         r     1 M$TPCMD$
    35-0-0/w SBIN        r     1 MAXACTIVE                 70-0-0/w STRC(738)   r     1 MSGBLK
    66-0-0/c CHAR(8)     r     1 MSGTYP                    41-0-0/w BIT         r     1 NOW_FLAG
    37-0-0/w BIT         r     1 ONEREPORT_FLAG            34-0-0/w SBIN        r     1 PRIO
   120-0-0/b STRC        r     1 PTR$_BITS                 15-0-0/w PTR         r     1 QLIST$
    24-0-0/w SBIN        r     1 QLIST_SLOTS               16-0-0/w PTR         r     1 QT$ENTRY$
    17-0-0/w PTR         r     1 REC$                      21-0-0/w PTR         r     1 SETSTA$
    32-0-0/w SBIN        r     1 SIZE                       3-0-0/w PTR         r     1 T$
     6-0-0/w PTR         r     1 TAIL$                    115-0-0/c STRC(72)    r     1 TEXTC_NUM
    14-0-0/w PTR         r     1 TYPLIST$                  23-0-0/w SBIN        r     1 TYPLIST_SLOTS
    27-0-0/w SBIN        r     1 WORDS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w STRC(315)   r     1 QQ_CMDBLK                  0-0-0/d STRC(9090)  r     1 QQ_GLOBAL
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:146  
     0-0-0/w STRC(909)   r     1 QQ_TP$STATION_INIT

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1440)  r     1 AMR$FPT_OPEN               0-0-0/w STRC(2448)  r     1 B$ALT
     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/b BIT         r     1 BASED$WORD                 0-0-0/c ACHR        r     1 CHAR$STRING
     0-0-0/w STRC(288)   r     1 DISAB$INFO                 0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$CG                       0-0-0/d ASTR(3528)  r     1 M$CSCG
     0-0-0N  NULL        r     1 M$HOLD                     0-0-0N  NULL        r     1 M$INFOSTA
     0-0-0N  NULL        r     1 M$JOURNAL                  0-0-0/d ASTR(3528)  r     1 M$SAVCMD
     0-0-0N  NULL        r     1 M$SI                       0-0-0N  NULL        r     1 M$SVCMD1
     0-0-0N  NULL        r     1 M$TPCMD                    0-0-0/d ASTR(3528)  r     1 M$TPCNTRL
     0-0-0N  NULL        r     1 M$TRADER                   0-0-0/w STRC        r     1 PC$HDR
     0-0-0/w STRC(2700)  r     1 PC$INSTANCE                0-0-0/w STRC(936)   r     1 QT$ENTRY
     0-0-0/w STRC(828)   r     1 QT$FORM                    0-0-0/c ASTR(405)   r     1 QT$SETBITS
     0-0-0/w STRC(612)   r     1 TP$EVENT                   0-0-0/w STRC(361)   r     1 TPU$INFO
     0-0-0/d STRC(324)   r     1 VLP$CGQL                   0-0-0/d STRC(288)   r     1 VLP$CGTYPL
     0-0-0/c ASTR(18)    r     1 VLP$JRNLFIDV               0-0-0/w STRC(432)   r     1 VLP$SETSTA


   Procedure QQA$INIT requires 1309 words for executable code.
   Procedure QQA$INIT requires 94 words of local(AUTO) storage.

    No errors detected in file QQA$INIT.:E05TSI    .
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:147  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:148  
          MINI XREF LISTING

ADD_MSGTYP
      8121**PROC     8021--CALL     8063--CALL     8086--CALL
ALT IN PROCEDURE OPEN_CG
      8377**LABEL    8335--CALLALT  8353--GOTO
ALT IN PROCEDURE OPEN_JOURNAL
      8298**LABEL    8280--GOTO
ALT IN PROCEDURE OPEN_SAVCMD
      8458**LABEL    8432--GOTO
ALT IN PROCEDURE OPEN_TRADER
      7980**LABEL    7883--GOTO     7904--GOTO
AMR$FPT_OPEN.ACSVEH_
      4993**DCL      4994--REDEF
AMR$FPT_OPEN.ALTKEYS_
      4999**DCL      5000--REDEF    5000--REDEF
AMR$FPT_OPEN.HDR_
      4998**DCL      4999--REDEF
AMR$FPT_OPEN.SETSTA_
      4992**DCL      8079--ASSIGN
AMR$FPT_OPEN.TAB_
      4997**DCL      4998--REDEF
AMR$FPT_OPEN.UHL_
      4991**DCL      4992--REDEF    4992--REDEF
AMR$FPT_OPEN.V.FSN#
      5031**DCL      5031--REDEF    5031--REDEF
AMR$FPT_OPEN.WSN_
      4997**DCL      4997--REDEF
AMR$FPT_OPEN$
      5179**DCL      4991--IMP-PTR  8078<<ASSIGN   8079>>ASSIGN   8079>>ASSIGN   8079>>ASSIGN   8082>>ASSIGN
B$ALT.CODE
      4498**DCL      4498--REDEF    4499--REDEF    4499--REDEF
B$ALT.ERR
      4499**DCL      7587>>ASSIGN   7647>>ASSIGN   7763>>ASSIGN   7843>>ASSIGN   7927>>ASSIGN   7983>>ASSIGN
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:149  
      8190>>ASSIGN   8241>>ASSIGN   8301>>ASSIGN   8352>>ASSIGN   8380>>ASSIGN   8431>>ASSIGN   8442>>ASSIGN
      8461>>ASSIGN
B$ALT.ERR.CODE
      4500**DCL      7579>>IF       7579>>IF       7898>>IF       8347>>IF       8347>>IF       8347>>IF
      8347>>IF       8360>>IF       8426>>IF       8426>>IF       8426>>IF       8426>>IF
B$ALT.ERR.ERR#
      4500**DCL      4500--REDEF
B$ALT.EVID
      4499**DCL      4499--REDEF    4499--REDEF
B$JIT.ACCN
      1505**DCL      7572>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      1599**DCL      1599--REDEF
B$JIT.ERR.MID
      1506**DCL      1506--REDEF
B$JIT.JRESPEAK
      1667**DCL      1668--REDEF
B$JIT.MODE
      1500**DCL      7567>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
      1776**DCL      1776--REDEF    1777--REDEF
B$JIT.PNR
      1680**DCL      1680--REDEF
B$JIT.TSLINE
      1774**DCL      1775--REDEF
B$JIT$
      4201**DCL      1500--IMP-PTR  7567>>IF       7572>>ASSIGN
B$TCB.ALT$
      4494**DCL      7579>>IF       7579>>IF       7587>>ASSIGN   7647>>ASSIGN   7763>>ASSIGN   7843>>ASSIGN
      7898>>IF       7927>>ASSIGN   7983>>ASSIGN   8190>>ASSIGN   8241>>ASSIGN   8301>>ASSIGN   8347>>IF
      8347>>IF       8347>>IF       8347>>IF       8352>>ASSIGN   8360>>IF       8380>>ASSIGN   8426>>IF
      8426>>IF       8426>>IF       8426>>IF       8431>>ASSIGN   8442>>ASSIGN   8461>>ASSIGN
B$TCB$
      4202**DCL      7579>>IF       7579>>IF       7587>>ASSIGN   7647>>ASSIGN   7763>>ASSIGN   7843>>ASSIGN
      7898>>IF       7927>>ASSIGN   7983>>ASSIGN   8190>>ASSIGN   8241>>ASSIGN   8301>>ASSIGN   8347>>IF
      8347>>IF       8347>>IF       8347>>IF       8352>>ASSIGN   8360>>IF       8380>>ASSIGN   8426>>IF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:150  
      8426>>IF       8426>>IF       8426>>IF       8431>>ASSIGN   8442>>ASSIGN   8461>>ASSIGN
BASED$WORD
      5036**DCL      8079>>ASSIGN
BLANK_POS
      5191**DCL      7665<<CALLBLT  7666>>ASSIGN
CGCTL_ERR IN PROCEDURE OPEN_CG
      8360**LABEL    8356--CALLALT
CGNAME
      7349**DCL      6073--DCLINIT
CHAR$STRING
      5039**DCL      7892--ASSIGN   7921--ASSIGN   7972--ASSIGN   7974--ASSIGN   8286--ASSIGN
CHAR_STRING_SIZE
      5186**DCL      5039--IMP-SIZ  7888<<ASSIGN   7892>>ASSIGN   7921>>ASSIGN   7940<<ASSIGN   7971<<ASSIGN
      7972>>ASSIGN   7973<<ASSIGN   7974>>ASSIGN   8285<<ASSIGN   8286>>ASSIGN
CHK_ENTRY
      8053**PROC     7957--CALL
CHK_FORM
      8013**PROC     7961--CALL
CMD
      5200**DCL      7632--ASSIGN   7633--ASSIGN   7756--ASSIGN
CODE_COC
      5391**DCL      7602>>ASSIGN
CODE_DDI
      5377**DCL      7782>>ASSIGN
CODE_IIAU
      5384**DCL      7592>>ASSIGN
CODE_JERR
      5419**DCL      8278>>ASSIGN
CODE_LESSTPUS
      5412**DCL      7815>>ASSIGN
CODE_NAVC
      5398**DCL      7623>>ASSIGN
CODE_NOTPUS
      5405**DCL      7809>>ASSIGN
CODE_NO_POOLMEM
      5356**DCL      7839>>ASSIGN
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:151  
CODE_NT
      5370**DCL      7881>>ASSIGN
CODE_NTRDRBUILT
      5363**DCL      7903>>ASSIGN
CODE_STRTUP
      5426**DCL      7583>>ASSIGN
COUNT
      5182**DCL      7916<<ASSIGN   7969>>IF       7971>>ASSIGN   7973>>ASSIGN   8124>>DOINDEX  8172>>ASSIGN
      8173>>ASSIGN   8174>>ASSIGN   8175>>ASSIGN   8176>>ASSIGN   8177>>ASSIGN   8179>>ASSIGN   8180>>ASSIGN
      8183<<ASSIGN   8183>>ASSIGN   8227>>IF
COUNT_ERRORS
      7777**LABEL    7768--GOTO
D$
      4809**DCL      4810--IMP-PTR
DISAB$INFO.BLINK$
      4811**DCL      7737<<ASSIGN   7739<<ASSIGN
DISAB$INFO.FLINK$
      4813**DCL      7738<<ASSIGN   7740<<ASSIGN
ERR
      5320**DCL      7647<<ASSIGN   7763<<ASSIGN   7797<>CALL     7804>>ASSIGN   7927<<ASSIGN   8442<<ASSIGN
ERR.CODE
      5324**DCL      7648>>IF       7764>>IF       7928>>IF       7933>>IF       8443>>IF
F$DCB.ACTPOS
      4537**DCL      4537--REDEF
F$DCB.AMR#
      4524**DCL      8414>>IF
F$DCB.ARS#
      4511**DCL      4511--REDEF    7655>>ASSIGN   7771>>ASSIGN   8452>>ASSIGN
F$DCB.ATTR
      4530**DCL      4531--REDEF
F$DCB.BORROW
      4545**DCL      4545--REDEF    4545--REDEF    4545--REDEF
F$DCB.DCBNAME.L
      4559**DCL      4559--IMP-SIZ
F$DCB.EOMCHAR#
      4515**DCL      4515--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:152  
F$DCB.FCD#
      4524**DCL      8435>>IF
F$DCB.FLDID
      4540**DCL      4540--REDEF
F$DCB.FORM$
      4534**DCL      4534--REDEF
F$DCB.FSECT
      4550**DCL      4550--REDEF
F$DCB.FSN#
      4527**DCL      4527--REDEF    4527--REDEF    4528--REDEF
F$DCB.HEADER$
      4533**DCL      4533--REDEF
F$DCB.IXTNSIZE#
      4531**DCL      4531--REDEF
F$DCB.LASTSTA$
      4520**DCL      4520--REDEF
F$DCB.LVL
      4546**DCL      4546--REDEF
F$DCB.NAME#.C
      4521**DCL      4521--REDEF    8417>>ASSIGN
F$DCB.NAME#.L
      4521**DCL      8416>>ASSIGN
F$DCB.NOEOF
      4543**DCL      4543--REDEF
F$DCB.NRECS#
      4532**DCL      4532--REDEF
F$DCB.NRECX
      4551**DCL      4551--REDEF
F$DCB.OHDR
      4543**DCL      4543--REDEF
F$DCB.ORG#
      4526**DCL      4526--REDEF
F$DCB.PASS#
      4521**DCL      7909--ASSIGN   7909>>ASSIGN
F$DCB.PRECNO
      4549**DCL      4549--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:153  
F$DCB.RCSZ
      4555**DCL      4555--REDEF
F$DCB.RES#
      4522**DCL      4522--REDEF
F$DCB.SETX
      4534**DCL      4534--REDEF
F$DCB.TAB$
      4534**DCL      4534--REDEF
F$DCB.TDA
      4548**DCL      4549--REDEF
F$DCB.WSN#
      4522**DCL      4522--REDEF
FOUND_FLAG
      5197**DCL      8123<<ASSIGN   8127<<ASSIGN   8151>>IF
FPT_CGCTL
      6716**DCL      7693<>CALL     7698<>CALL     8356<>CALL
FPT_CGCTL.JRNLFID_
      6720**DCL      8290<<ASSIGN   8339<<ASSIGN
FPT_CGCTL.JRNLSTA_
      6719**DCL      8291<<ASSIGN   8340<<ASSIGN
FPT_CGCTL.QLIST_
      6718**DCL      7974<<ASSIGN   8364<<ASSIGN
FPT_CGCTL.STALIST_
      6717**DCL      7691<<ASSIGN   7696<<ASSIGN
FPT_CGCTL.TYPLIST_
      6716**DCL      7972<<ASSIGN   8365<<ASSIGN
FPT_CGCTL.V
      6721**DCL      6716--DCLINIT
FPT_CLOSE_CG
      6938**DCL      8367<>CALL
FPT_CLOSE_CG.SN_
      6938**DCL      6938--REDEF
FPT_CLOSE_CG.UTL_
      6939**DCL      6939--REDEF
FPT_CLOSE_CG.V
      6943**DCL      6938--DCLINIT
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:154  
FPT_CLOSE_CG.V.EXPIRE#
      6953**DCL      6953--REDEF
FPT_CLOSE_CG.V.GHSTACS#
      6952**DCL      8292<<ASSIGN
FPT_CLOSE_CG.V.TYPE#
      6951**DCL      6951--REDEF
FPT_CLOSE_CG.V.XTNSIZE#
      6948**DCL      6948--REDEF    6950--REDEF
FPT_CLOSE_SVCMD1
      6981**DCL      8448<>CALL
FPT_CLOSE_SVCMD1.SN_
      6981**DCL      6981--REDEF
FPT_CLOSE_SVCMD1.UTL_
      6982**DCL      6982--REDEF
FPT_CLOSE_SVCMD1.V
      6986**DCL      6981--DCLINIT
FPT_CLOSE_SVCMD1.V.EXPIRE#
      6996**DCL      6996--REDEF
FPT_CLOSE_SVCMD1.V.TYPE#
      6994**DCL      6994--REDEF
FPT_CLOSE_SVCMD1.V.XTNSIZE#
      6991**DCL      6991--REDEF    6993--REDEF
FPT_EVENT
      6740**DCL      7787<>CALL
FPT_EVENT.V
      6740**DCL      6740--DCLINIT
FPT_FDS
      6682**DCL      8225<>CALL     8232<>CALL     8236<>CALL
FPT_FDS.V
      6682**DCL      6682--DCLINIT
FPT_FDS.V.SEGSIZE#
      6684**DCL      8224<<ASSIGN   8231<<ASSIGN   8235<<ASSIGN
FPT_GDS
      6698**DCL      7705<>CALL     7744<>CALL     7886<>CALL     7939<>CALL     8159<>CALL     8167<>CALL
FPT_GDS.V
      6698**DCL      6698--DCLINIT
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:155  
FPT_GDS.V.SEGSIZE#
      6701**DCL      7704<<ASSIGN   7742<<ASSIGN
FPT_INT
      6814**DCL      7569<>CALL
FPT_INT.V
      6814**DCL      6814--DCLINIT
FPT_OPEN_CG
      5739**DCL      8343<>CALL     8372<>CALL
FPT_OPEN_CG.ACSVEH_
      5741**DCL      5742--REDEF
FPT_OPEN_CG.ALTKEYS_
      5747**DCL      5748--REDEF    5748--REDEF
FPT_OPEN_CG.HDR_
      5746**DCL      5747--REDEF
FPT_OPEN_CG.TAB_
      5745**DCL      5746--REDEF
FPT_OPEN_CG.UHL_
      5739**DCL      5740--REDEF    5740--REDEF
FPT_OPEN_CG.V
      5748**DCL      5739--DCLINIT
FPT_OPEN_CG.V.EXIST#
      5752**DCL      7669<<ASSIGN   8370<<ASSIGN
FPT_OPEN_CG.V.FSN#
      5779**DCL      5779--REDEF    5779--REDEF
FPT_OPEN_CG.V.FUN#
      5758**DCL      8371<<ASSIGN
FPT_OPEN_CG.V.IXTNSIZE#
      5767**DCL      7671<<ASSIGN
FPT_OPEN_CG.V.SHARE#
      5753**DCL      8369<<ASSIGN
FPT_OPEN_CG.WSN_
      5745**DCL      5745--REDEF
FPT_OPEN_CSCG
      6072**DCL      7574<>CALL
FPT_OPEN_CSCG.ACSVEH_
      6074**DCL      6075--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:156  
FPT_OPEN_CSCG.ALTKEYS_
      6080**DCL      6081--REDEF    6081--REDEF
FPT_OPEN_CSCG.HDR_
      6079**DCL      6080--REDEF
FPT_OPEN_CSCG.TAB_
      6078**DCL      6079--REDEF
FPT_OPEN_CSCG.UHL_
      6072**DCL      6073--REDEF    6073--REDEF
FPT_OPEN_CSCG.V
      6081**DCL      6072--DCLINIT
FPT_OPEN_CSCG.V.FSN#
      6112**DCL      6112--REDEF    6112--REDEF
FPT_OPEN_CSCG.WSN_
      6078**DCL      6078--REDEF
FPT_OPEN_HOLD
      5850**DCL      7694<>CALL
FPT_OPEN_HOLD.ACSVEH_
      5852**DCL      5853--REDEF
FPT_OPEN_HOLD.ALTKEYS_
      5858**DCL      5859--REDEF    5859--REDEF
FPT_OPEN_HOLD.HDR_
      5857**DCL      5858--REDEF
FPT_OPEN_HOLD.TAB_
      5856**DCL      5857--REDEF
FPT_OPEN_HOLD.UHL_
      5850**DCL      5851--REDEF    5851--REDEF
FPT_OPEN_HOLD.V
      5859**DCL      5850--DCLINIT
FPT_OPEN_HOLD.V.FSN#
      5890**DCL      5890--REDEF    5890--REDEF
FPT_OPEN_HOLD.WSN_
      5856**DCL      5856--REDEF
FPT_OPEN_INFO
      5961**DCL      7699<>CALL
FPT_OPEN_INFO.ACSVEH_
      5963**DCL      5964--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:157  
FPT_OPEN_INFO.ALTKEYS_
      5969**DCL      5970--REDEF    5970--REDEF
FPT_OPEN_INFO.HDR_
      5968**DCL      5969--REDEF
FPT_OPEN_INFO.TAB_
      5967**DCL      5968--REDEF
FPT_OPEN_INFO.UHL_
      5961**DCL      5962--REDEF    5962--REDEF
FPT_OPEN_INFO.V
      5970**DCL      5961--DCLINIT
FPT_OPEN_INFO.V.FSN#
      6001**DCL      6001--REDEF    6001--REDEF
FPT_OPEN_INFO.WSN_
      5967**DCL      5967--REDEF
FPT_OPEN_JOURNAL
      7067**DCL      8272<>CALL
FPT_OPEN_JOURNAL.ACSVEH_
      7069**DCL      7070--REDEF
FPT_OPEN_JOURNAL.ALTKEYS_
      7075**DCL      7076--REDEF    7076--REDEF
FPT_OPEN_JOURNAL.HDR_
      7074**DCL      7075--REDEF
FPT_OPEN_JOURNAL.TAB_
      7073**DCL      7074--REDEF
FPT_OPEN_JOURNAL.UHL_
      7067**DCL      7068--REDEF    7068--REDEF
FPT_OPEN_JOURNAL.V
      7076**DCL      7067--DCLINIT
FPT_OPEN_JOURNAL.V.FSN#
      7107**DCL      7107--REDEF    7107--REDEF
FPT_OPEN_JOURNAL.WSN_
      7073**DCL      7073--REDEF
FPT_OPEN_SAVCMD
      6182**DCL      8421<>CALL
FPT_OPEN_SAVCMD.ACSVEH_
      6184**DCL      6185--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:158  
FPT_OPEN_SAVCMD.ALTKEYS_
      6190**DCL      6191--REDEF    6191--REDEF
FPT_OPEN_SAVCMD.HDR_
      6189**DCL      6190--REDEF
FPT_OPEN_SAVCMD.TAB_
      6188**DCL      6189--REDEF
FPT_OPEN_SAVCMD.UHL_
      6182**DCL      6183--REDEF    6183--REDEF
FPT_OPEN_SAVCMD.V
      6191**DCL      6182--DCLINIT
FPT_OPEN_SAVCMD.V.FSN#
      6222**DCL      6222--REDEF    6222--REDEF
FPT_OPEN_SAVCMD.WSN_
      6188**DCL      6188--REDEF
FPT_OPEN_SVCMD1
      6293**DCL      8418<>CALL
FPT_OPEN_SVCMD1.ACSVEH_
      6295**DCL      6296--REDEF
FPT_OPEN_SVCMD1.ALTKEYS_
      6301**DCL      6302--REDEF    6302--REDEF
FPT_OPEN_SVCMD1.HDR_
      6300**DCL      6301--REDEF
FPT_OPEN_SVCMD1.TAB_
      6299**DCL      6300--REDEF
FPT_OPEN_SVCMD1.UHL_
      6293**DCL      6294--REDEF    6294--REDEF
FPT_OPEN_SVCMD1.V
      6302**DCL      6293--DCLINIT
FPT_OPEN_SVCMD1.V.FSN#
      6333**DCL      6333--REDEF    6333--REDEF
FPT_OPEN_SVCMD1.WSN_
      6299**DCL      6299--REDEF
FPT_OPEN_TPCMD
      6404**DCL      7634<>CALL
FPT_OPEN_TPCMD.ACSVEH_
      6406**DCL      6407--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:159  
FPT_OPEN_TPCMD.ALTKEYS_
      6412**DCL      6413--REDEF    6413--REDEF
FPT_OPEN_TPCMD.HDR_
      6411**DCL      6412--REDEF
FPT_OPEN_TPCMD.TAB_
      6410**DCL      6411--REDEF
FPT_OPEN_TPCMD.UHL_
      6404**DCL      6405--REDEF    6405--REDEF
FPT_OPEN_TPCMD.V
      6413**DCL      6404--DCLINIT
FPT_OPEN_TPCMD.V.FSN#
      6444**DCL      6444--REDEF    6444--REDEF
FPT_OPEN_TPCMD.WSN_
      6410**DCL      6410--REDEF
FPT_OPEN_TPCNTRL
      6626**DCL      7596<>CALL
FPT_OPEN_TPCNTRL.ACSVEH_
      6628**DCL      6629--REDEF
FPT_OPEN_TPCNTRL.ALTKEYS_
      6634**DCL      6635--REDEF    6635--REDEF
FPT_OPEN_TPCNTRL.HDR_
      6633**DCL      6634--REDEF
FPT_OPEN_TPCNTRL.TAB_
      6632**DCL      6633--REDEF
FPT_OPEN_TPCNTRL.UHL_
      6626**DCL      6627--REDEF    6627--REDEF
FPT_OPEN_TPCNTRL.V
      6635**DCL      6626--DCLINIT
FPT_OPEN_TPCNTRL.V.FSN#
      6666**DCL      6666--REDEF    6666--REDEF
FPT_OPEN_TPCNTRL.WSN_
      6632**DCL      6632--REDEF
FPT_OPEN_TRADER
      6515**DCL      7875<>CALL
FPT_OPEN_TRADER.ACSVEH_
      6517**DCL      6518--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:160  
FPT_OPEN_TRADER.ALTKEYS_
      6523**DCL      6524--REDEF    6524--REDEF
FPT_OPEN_TRADER.HDR_
      6522**DCL      6523--REDEF
FPT_OPEN_TRADER.TAB_
      6521**DCL      6522--REDEF
FPT_OPEN_TRADER.UHL_
      6515**DCL      6516--REDEF    6516--REDEF
FPT_OPEN_TRADER.V
      6524**DCL      6515--DCLINIT
FPT_OPEN_TRADER.V.FSN#
      6555**DCL      6555--REDEF    6555--REDEF
FPT_OPEN_TRADER.WSN_
      6521**DCL      6521--REDEF
FPT_PFIL
      5667**DCL      7752<>CALL     7918<>CALL
FPT_PFIL.V
      5667**DCL      5667--DCLINIT
FPT_PFIL.V.DCB#
      5667**DCL      7751<<ASSIGN
FPT_PRECORD
      6864**DCL      7941<>CALL
FPT_PRECORD.V
      6866**DCL      6864--DCLINIT
FPT_READ_CG
      5593**DCL      7791<>CALL
FPT_READ_CG.BUF_.BOUND
      5595**DCL      7789<<ASSIGN
FPT_READ_CG.BUF_.BUF$
      5596**DCL      7790<<ASSIGN
FPT_READ_CG.STATION_
      5596**DCL      5597--REDEF
FPT_READ_CG.V
      5597**DCL      5593--DCLINIT
FPT_READ_CG.V.DVBYTE.REREAD#
      5608**DCL      5608--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:161  
FPT_READ_CG.V.INDX#
      5606**DCL      5606--REDEF
FPT_READ_CSCG
      5633**DCL      7823<>CALL
FPT_READ_CSCG.BUF_.BOUND
      5635**DCL      7821<<ASSIGN
FPT_READ_CSCG.BUF_.BUF$
      5636**DCL      7822<<ASSIGN
FPT_READ_CSCG.STATION_
      5636**DCL      5637--REDEF
FPT_READ_CSCG.V
      5637**DCL      5633--DCLINIT
FPT_READ_CSCG.V.DVBYTE.REREAD#
      5648**DCL      5648--REDEF
FPT_READ_CSCG.V.INDX#
      5646**DCL      5646--REDEF
FPT_READ_KEY
      6892**DCL      7893<>CALL
FPT_READ_KEY.BUF_
      6894**DCL      7892<<ASSIGN
FPT_READ_KEY.STATION_
      6895**DCL      6896--REDEF
FPT_READ_KEY.V
      6896**DCL      6892--DCLINIT
FPT_READ_KEY.V.DVBYTE.REREAD#
      6907**DCL      6907--REDEF
FPT_READ_KEY.V.INDX#
      6905**DCL      6905--REDEF
FPT_READ_SEQ
      5553**DCL      7642<>CALL     7758<>CALL     8437<>CALL
FPT_READ_SEQ.BUF_
      5555**DCL      7633<<ASSIGN
FPT_READ_SEQ.STATION_
      5556**DCL      5557--REDEF
FPT_READ_SEQ.V
      5557**DCL      5553--DCLINIT
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:162  
FPT_READ_SEQ.V.DCB#
      5557**DCL      7753<<ASSIGN   8422<<ASSIGN
FPT_READ_SEQ.V.DVBYTE.REREAD#
      5568**DCL      5568--REDEF
FPT_READ_SEQ.V.INDX#
      5566**DCL      5566--REDEF
FPT_READ_TRADER
      6761**DCL      7922<>CALL
FPT_READ_TRADER.BUF_
      6763**DCL      7921<<ASSIGN
FPT_READ_TRADER.STATION_
      6764**DCL      6765--REDEF
FPT_READ_TRADER.V
      6765**DCL      6761--DCLINIT
FPT_READ_TRADER.V.DVBYTE.REREAD#
      6776**DCL      6776--REDEF
FPT_READ_TRADER.V.INDX#
      6774**DCL      6774--REDEF
FPT_TIME
      6844**DCL      7826<>CALL
FPT_TIME.V
      6848**DCL      6844--DCLINIT
FPT_UNFID
      6795**DCL      7907<>CALL     8287<>CALL
FPT_UNFID.TEXTFID_
      6795**DCL      8286<<ASSIGN
FPT_UNFID.V
      6799**DCL      6795--DCLINIT
FPT_UNFID.V.DCB#
      6799**DCL      8283<<ASSIGN
FPT_XCON
      6829**DCL      7563<>CALL
FPT_XCON.V
      6830**DCL      6829--DCLINIT
HEAD$
      5168**DCL      7718<>CALL     7719>>ASSIGN   7720>>ASSIGN   7721>>ASSIGN   7722>>ASSIGN   7723>>ASSIGN
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:163  
      7726<>CALL     7727>>ASSIGN   7728>>ASSIGN   7729>>ASSIGN   7730>>ASSIGN   7731>>ASSIGN   7734<>CALL
      7735>>ASSIGN   7736>>ASSIGN   7737>>ASSIGN   7738>>ASSIGN   7739>>ASSIGN
I
      5188**DCL      7609<<DOINDEX  7795<<DOINDEX  7807>>IF       8124<<DOINDEX  8125>>IF       8131>>ASSIGN
      8136>>ASSIGN   8141>>ASSIGN   8146>>ASSIGN
JOURNAL_FLAG
      5195**DCL      7952<<ASSIGN   8018<<ASSIGN   8061<<ASSIGN   8075<<ASSIGN   8139>>IF       8141>>ASSIGN
      8175>>ASSIGN
K
      5189**DCL      8067<<DOINDEX
KEY
      5139**DCL      6761--DCLINIT  6762--DCLINIT  6892--DCLINIT  6893--DCLINIT
KEY.MSGTYP
      5141**DCL      7890<<ASSIGN   7945>>IF       8084<<ASSIGN   8125>>IF       8173>>ASSIGN
KEY.SUFFIX
      5142**DCL      7891<<ASSIGN   7945>>IF       7955>>IF
LEN
      5137**DCL      6799--DCLINIT  7908>>ASSIGN   7909>>ASSIGN   8288>>ASSIGN
LOOP IN PROCEDURE OPEN_TRADER
      7966**LABEL    7942--GOTO     7947--GOTO
M$CGCTL
       169**DCL-ENT  7693--CALL     7698--CALL     8356--CALL
M$CLOSE
       148**DCL-ENT  8367--CALL     8448--CALL
M$CSCG.ACTPOS
      4362**DCL      4362--REDEF
M$CSCG.ARS#
      4321**DCL      4321--REDEF
M$CSCG.ATTR#
      4351**DCL      4351--REDEF    4353--REDEF
M$CSCG.BORROW
      4373**DCL      4373--REDEF    4373--REDEF    4373--REDEF
M$CSCG.DCBNAME.L
      4392**DCL      4392--IMP-SIZ
M$CSCG.EOMCHAR#
      4328**DCL      4329--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:164  
M$CSCG.FLDID
      4365**DCL      4366--REDEF
M$CSCG.FORM$
      4357**DCL      4357--REDEF
M$CSCG.FSECT
      4380**DCL      4380--REDEF
M$CSCG.FSN#
      4347**DCL      4347--REDEF    4347--REDEF    4348--REDEF
M$CSCG.HEADER$
      4356**DCL      4357--REDEF
M$CSCG.IXTNSIZE#
      4353**DCL      4354--REDEF
M$CSCG.LASTSTA$
      4337**DCL      4337--REDEF
M$CSCG.LVL
      4374**DCL      4374--REDEF
M$CSCG.NAME#.C
      4337**DCL      4338--REDEF
M$CSCG.NOEOF
      4369**DCL      4369--REDEF
M$CSCG.NRECS#
      4354**DCL      4354--REDEF
M$CSCG.NRECX
      4381**DCL      4381--REDEF
M$CSCG.OHDR
      4370**DCL      4370--REDEF
M$CSCG.ORG#
      4345**DCL      4346--REDEF
M$CSCG.PRECNO
      4378**DCL      4378--REDEF
M$CSCG.RCSZ
      4386**DCL      4386--REDEF
M$CSCG.RES#
      4339**DCL      4339--REDEF
M$CSCG.SETX
      4358**DCL      4358--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:165  
M$CSCG.TAB$
      4357**DCL      4357--REDEF
M$CSCG.TDA
      4377**DCL      4378--REDEF
M$CSCG.WSN#
      4339**DCL      4340--REDEF
M$EVENT
       203**DCL-ENT  7787--CALL
M$FDS
       183**DCL-ENT  8225--CALL     8232--CALL     8236--CALL
M$GDS
       183**DCL-ENT  7705--CALL     7744--CALL     7886--CALL     7939--CALL     8159--CALL     8167--CALL
M$INT
       203**DCL-ENT  7569--CALL
M$JOURNAL
      4313**DCL      8283>>ASSIGN
M$OPEN
       148**DCL-ENT  7574--CALL     7596--CALL     7634--CALL     7694--CALL     7699--CALL     7875--CALL
      8272--CALL     8343--CALL     8372--CALL     8418--CALL     8421--CALL
M$PFIL
       150**DCL-ENT  7752--CALL     7918--CALL
M$PRECORD
       152**DCL-ENT  7941--CALL
M$READ
       149**DCL-ENT  7642--CALL     7758--CALL     7791--CALL     7823--CALL     7893--CALL     7922--CALL
      8437--CALL
M$SAVCMD
      4239**DCL      8412--ASSIGN
M$SAVCMD.ACTPOS
      4280**DCL      4280--REDEF
M$SAVCMD.ARS#
      4239**DCL      4239--REDEF
M$SAVCMD.ATTR#
      4269**DCL      4269--REDEF    4271--REDEF
M$SAVCMD.BORROW
      4291**DCL      4291--REDEF    4291--REDEF    4291--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:166  
M$SAVCMD.DCBNAME.L
      4310**DCL      4310--IMP-SIZ  8412>>ASSIGN
M$SAVCMD.EOMCHAR#
      4246**DCL      4247--REDEF
M$SAVCMD.FLDID
      4283**DCL      4284--REDEF
M$SAVCMD.FORM$
      4275**DCL      4275--REDEF
M$SAVCMD.FSECT
      4298**DCL      4298--REDEF
M$SAVCMD.FSN#
      4265**DCL      4265--REDEF    4265--REDEF    4266--REDEF
M$SAVCMD.HEADER$
      4274**DCL      4275--REDEF
M$SAVCMD.IXTNSIZE#
      4271**DCL      4272--REDEF
M$SAVCMD.LASTSTA$
      4255**DCL      4255--REDEF
M$SAVCMD.LVL
      4292**DCL      4292--REDEF
M$SAVCMD.NAME#.C
      4255**DCL      4256--REDEF
M$SAVCMD.NOEOF
      4287**DCL      4287--REDEF
M$SAVCMD.NRECS#
      4272**DCL      4272--REDEF
M$SAVCMD.NRECX
      4299**DCL      4299--REDEF
M$SAVCMD.OHDR
      4288**DCL      4288--REDEF
M$SAVCMD.ORG#
      4263**DCL      4264--REDEF
M$SAVCMD.PRECNO
      4296**DCL      4296--REDEF
M$SAVCMD.RCSZ
      4304**DCL      4304--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:167  
M$SAVCMD.RES#
      4257**DCL      4257--REDEF
M$SAVCMD.SETX
      4276**DCL      4276--REDEF
M$SAVCMD.TAB$
      4275**DCL      4275--REDEF
M$SAVCMD.TDA
      4295**DCL      4296--REDEF
M$SAVCMD.WSN#
      4257**DCL      4258--REDEF
M$SAVCMD$
      5173**DCL      8412<<ASSIGN   8414>>IF       8416>>ASSIGN   8417>>ASSIGN
M$SI
      4228**DCL      7628--ASSIGN
M$SI$
      5172**DCL      7628<<ASSIGN   7655>>ASSIGN
M$SVCMD1
      4312**DCL      8413--ASSIGN   8422>>ASSIGN
M$SVCMD1$
      5174**DCL      8413<<ASSIGN   8435>>IF       8452>>ASSIGN
M$TIME
       215**DCL-ENT  7826--CALL
M$TPCMD
      4315**DCL      7627--ASSIGN   7751>>ASSIGN   7753>>ASSIGN
M$TPCMD$
      5171**DCL      7627<<ASSIGN   7771>>ASSIGN
M$TPCNTRL.ACTPOS
      4436**DCL      4436--REDEF
M$TPCNTRL.ARS#
      4395**DCL      4395--REDEF
M$TPCNTRL.ATTR#
      4425**DCL      4425--REDEF    4427--REDEF
M$TPCNTRL.BORROW
      4447**DCL      4447--REDEF    4447--REDEF    4447--REDEF
M$TPCNTRL.DCBNAME.L
      4466**DCL      4466--IMP-SIZ
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:168  
M$TPCNTRL.EOMCHAR#
      4402**DCL      4403--REDEF
M$TPCNTRL.FLDID
      4439**DCL      4440--REDEF
M$TPCNTRL.FORM$
      4431**DCL      4431--REDEF
M$TPCNTRL.FSECT
      4454**DCL      4454--REDEF
M$TPCNTRL.FSN#
      4421**DCL      4421--REDEF    4421--REDEF    4422--REDEF
M$TPCNTRL.HEADER$
      4430**DCL      4431--REDEF
M$TPCNTRL.IXTNSIZE#
      4427**DCL      4428--REDEF
M$TPCNTRL.LASTSTA$
      4411**DCL      4411--REDEF
M$TPCNTRL.LVL
      4448**DCL      4448--REDEF
M$TPCNTRL.NAME#.C
      4411**DCL      4412--REDEF
M$TPCNTRL.NOEOF
      4443**DCL      4443--REDEF
M$TPCNTRL.NRECS#
      4428**DCL      4428--REDEF
M$TPCNTRL.NRECX
      4455**DCL      4455--REDEF
M$TPCNTRL.OHDR
      4444**DCL      4444--REDEF
M$TPCNTRL.ORG#
      4419**DCL      4420--REDEF
M$TPCNTRL.PRECNO
      4452**DCL      4452--REDEF
M$TPCNTRL.RCSZ
      4460**DCL      4460--REDEF
M$TPCNTRL.RES#
      4413**DCL      4413--REDEF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:169  
M$TPCNTRL.SETX
      4432**DCL      4432--REDEF
M$TPCNTRL.TAB$
      4431**DCL      4431--REDEF
M$TPCNTRL.TDA
      4451**DCL      4452--REDEF
M$TPCNTRL.WSN#
      4413**DCL      4414--REDEF
M$TRADER
      4316**DCL      7909--ASSIGN
M$UNFID
       211**DCL-ENT  7907--CALL     8287--CALL
M$XCON
       203**DCL-ENT  7563--CALL
MAXACTIVE
      5193**DCL      7950<<ASSIGN   8055>>IF       8059<<ASSIGN   8073<<ASSIGN   8129>>IF       8131>>ASSIGN
MON_ERR
      7843**LABEL    7569--CALLALT  7634--CALLALT  7650--GOTO     7693--CALLALT  7694--CALLALT  7698--CALLALT
      7699--CALLALT  7705--CALLALT  7744--CALLALT  7752--CALLALT  7766--GOTO     7787--CALLALT  7791--CALLALT
      7823--CALLALT
MON_ERR IN PROCEDURE ADD_MSGTYP
      8190**LABEL    8159--CALLALT  8167--CALLALT
MON_ERR IN PROCEDURE OPEN_CG
      8380**LABEL    8351--GOTO     8361--GOTO     8367--CALLALT  8372--CALLALT
MON_ERR IN PROCEDURE OPEN_JOURNAL
      8301**LABEL    8287--CALLALT
MON_ERR IN PROCEDURE OPEN_SAVCMD
      8461**LABEL    8430--GOTO     8445--GOTO
MON_ERR IN PROCEDURE OPEN_TRADER
      7983**LABEL    7886--CALLALT  7900--GOTO     7907--CALLALT  7918--CALLALT  7935--GOTO     7939--CALLALT
      7941--CALLALT
MON_ERR IN PROCEDURE RELEASE_MEM
      8241**LABEL    8225--CALLALT  8232--CALLALT  8236--CALLALT
MSGBLK
      5204**DCL      7582<>CALL     7588<>CALL     7601<>CALL     7603<>CALL     7781<>CALL     7784<>CALL
      7803<>CALL     7805<>CALL     7814<>CALL     7816<>CALL     7880<>CALL     7882<>CALL     8277<>CALL
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:170  
      8279<>CALL
MSGBLK.ERRINFO.ERR
      5282**DCL      7583<<ASSIGN   7587<<ASSIGN   7602<<ASSIGN   7782<<ASSIGN   7804<<ASSIGN   7815<<ASSIGN
      7881<<ASSIGN   8278<<ASSIGN
MSGBLK.ERRINFO.FIELD1
      5286**DCL      7586<<ASSIGN   7783<<ASSIGN
MSGTYP
      5201**DCL      7794<<ASSIGN   7797<>CALL
NOW_FLAG
      5198**DCL      7793<<ASSIGN   7797<>CALL
NO_MEM
      7839**LABEL    7708--CALLALT  7712--CALLALT  7715--CALLALT  7718--CALLALT  7726--CALLALT  7734--CALLALT
ONEREPORT_FLAG
      5196**DCL      7953<<ASSIGN   8019<<ASSIGN   8076<<ASSIGN   8144>>IF       8146>>ASSIGN   8176>>ASSIGN
OPEN_CG
      8331**PROC     7689--CALL
OPEN_CSCG_ERR
      7579**LABEL    7574--CALLALT
OPEN_ERR IN PROCEDURE OPEN_CG
      8347**LABEL    8343--CALLALT
OPEN_ERR IN PROCEDURE OPEN_JOURNAL
      8277**LABEL    8272--CALLALT
OPEN_ERR IN PROCEDURE OPEN_SAVCMD
      8426**LABEL    8421--CALLALT
OPEN_FILES
      7660**LABEL    7652--GOTO
OPEN_JOURNAL
      8270**PROC     8335--CALL
OPEN_SAVCMD
      8410**PROC     7660--CALL
OPEN_TPCNTRL_ERR
      7601**LABEL    7596--CALLALT
OPEN_TRADER
      7873**PROC     7662--CALL
OPEN_TRADER_ERR IN PROCEDURE OPEN_TRADER
      7880**LABEL    7875--CALLALT
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:171  
PC$HDR
      4872**DCL      7607--ASSIGN
PC$HDR.CURINSTANCES
      4873**DCL      7609>>DOINDEX
PC$INSTANCE
      4876**DCL      7620--ASSIGN
PC$INSTANCE.FLAGS.ACTIVE
      4880**DCL      7616<<ASSIGN
PC$INSTANCE.FLAGS.DELETED
      4881**DCL      7610>>IF
PC$INSTANCE.INSTANCE_NAME
      4877**DCL      7610>>IF
PC$INSTANCE.STATS
      4902**DCL      7613<<ASSIGN   7615>>ASSIGN
PC$INSTANCE.STATS.PGSI
      4907**DCL      7614<<ASSIGN
PRIO
      5192**DCL      7951<<ASSIGN   8060<<ASSIGN   8074<<ASSIGN   8134>>IF       8136>>ASSIGN   8174>>ASSIGN
PTR$_BITS
      5327**DCL      8079<<ASSIGN
PTR$_BITS.WORDS
      5328**DCL      8082>>ASSIGN
QLIST$
      5176**DCL      4840--IMP-PTR  7913<<ASSIGN   7974>>ASSIGN   8131>>ASSIGN   8166>>ASSIGN   8168<<ASSIGN
      8179>>ASSIGN   8180>>ASSIGN   8233<>CALL     8234>>ASSIGN
QLIST_SLOTS
      5184**DCL      7915<<ASSIGN   8164>>IF       8169<<ASSIGN   8182<<ASSIGN   8182>>ASSIGN
QQA$CMD
      4167**DCL-ENT  7656--CALL     7772--CALL     8453--CALL
QQA$EVENT
      4168**DCL-ENT  6740--DCLINIT
QQA$XCON
      4169**DCL-ENT  6814--DCLINIT  6830--DCLINIT
QQC$BLDMSG
      4172**DCL-ENT  7588--CALL     7603--CALL     7784--CALL     7805--CALL     7816--CALL     7882--CALL
      8279--CALL
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:172  
QQC$BLDMSG_ERRBLK
      4171**DCL-ENT  7582--CALL     7601--CALL     7781--CALL     7803--CALL     7814--CALL     7880--CALL
      8277--CALL
QQC$CONVERT_NUM
      4173**DCL-ENT  7779--CALL
QQC$GET_BLK
      4166**DCL-ENT  7708--CALL     7712--CALL     7715--CALL     7718--CALL     7726--CALL     7734--CALL
QQC$INIT_BLKMGR
      4165**DCL-ENT  7706--CALL
QQC$SCREECH
      4174**DCL-ENT  7846--CALL     7984--CALL     8191--CALL     8242--CALL     8302--CALL     8381--CALL
      8462--CALL
QQC$START_TPU
      4164**DCL-ENT  7797--CALL
QQC$STOPTP
      4170**DCL-ENT  7832--CALL     7836--CALL
QQD$SEGSIZE
      4175**DCL-ENT  8222--CALL     8229--CALL     8233--CALL     8284--CALL
QQ_CMDBLK.ARS
      3526**DCL      7655<<ASSIGN   7771<<ASSIGN   8452<<ASSIGN
QQ_CMDBLK.FLAGS
      3527**DCL      7631<<ASSIGN
QQ_CMDBLK.ORIGIN
      3526**DCL      7565<<ASSIGN   7629<<ASSIGN
QQ_CMDBLK.S$
      3526**DCL      7630<<ASSIGN
QQ_CMDBLK.TEXT$
      3526**DCL      7632<<ASSIGN   7756<<ASSIGN
QQ_GLOBAL.CGDISKWARN
      3530**DCL      7638<<ASSIGN   7677>>ASSIGN
QQ_GLOBAL.CGMEMWARN
      3531**DCL      7639<<ASSIGN   7678>>ASSIGN
QQ_GLOBAL.CGPAGEMAX
      3530**DCL      7637<<ASSIGN   7676>>ASSIGN
QQ_GLOBAL.CGPAGEMIN
      3530**DCL      7636<<ASSIGN   7675>>ASSIGN
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:173  
QQ_GLOBAL.CGSIZEMAX
      3530**DCL      7679>>IF       7681<<ASSIGN   7683>>ASSIGN   7684>>IF       7686<<ASSIGN
QQ_GLOBAL.CMDBUF$
      3534**DCL      7708<>CALL     7790>>ASSIGN
QQ_GLOBAL.CONTROL$
      3539**DCL      4872--IMP-PTR  7607>>ASSIGN   7609>>DOINDEX
QQ_GLOBAL.DEBUGCMD$
      3535**DCL      7715<>CALL
QQ_GLOBAL.DELTA_STATS
      3592**DCL      7615<<ASSIGN
QQ_GLOBAL.DISAB$
      3535**DCL      7735<<ASSIGN
QQ_GLOBAL.DS1$_BITS
      3537**DCL      3537--REDEF
QQ_GLOBAL.DS2$_BITS
      3537**DCL      3538--REDEF
QQ_GLOBAL.DS3$_BITS
      3538**DCL      3538--REDEF
QQ_GLOBAL.DS4$_BITS
      3538**DCL      3539--REDEF
QQ_GLOBAL.ERR
      3527**DCL      7592<<ASSIGN   7623<<ASSIGN   7809<<ASSIGN   7835<<ASSIGN   7839<<ASSIGN   7843<<ASSIGN
      7903<<ASSIGN   7983<<ASSIGN   8190<<ASSIGN   8241<<ASSIGN   8301<<ASSIGN   8352<<ASSIGN   8380<<ASSIGN
      8431<<ASSIGN   8461<<ASSIGN
QQ_GLOBAL.ERROR_CNT
      3533**DCL      7777>>IF       7779<>CALL
QQ_GLOBAL.EVENT$
      3534**DCL      7719<<ASSIGN
QQ_GLOBAL.INIT_PASS
      3534**DCL      7748<<ASSIGN
QQ_GLOBAL.INSTANCE_NAME
      3614**DCL      7572<<ASSIGN   7573>>ASSIGN   7610>>IF       7664>>ASSIGN
QQ_GLOBAL.IXTNSIZE
      3535**DCL      7671>>ASSIGN
QQ_GLOBAL.JOURNAL
      3528**DCL      8333>>IF
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:174  
QQ_GLOBAL.KEYINBUF$
      3535**DCL      7712<>CALL     7822>>ASSIGN
QQ_GLOBAL.NEWCG
      3529**DCL      7667>>IF       8414>>IF
QQ_GLOBAL.PASS1_CMDS
      3529**DCL      7749>>IF
QQ_GLOBAL.PC$INSTANCE$
      3539**DCL      4876--IMP-PTR  7607<<ASSIGN   7610>>IF       7610>>IF       7613>>ASSIGN   7614>>ASSIGN
      7615>>ASSIGN   7616>>ASSIGN   7620<<ASSIGN   7620>>ASSIGN
QQ_GLOBAL.POOL$
      3538**DCL      7703>>ASSIGN   7706<>CALL     7708<>CALL     7712<>CALL     7715<>CALL     7718<>CALL
      7726<>CALL     7734<>CALL
QQ_GLOBAL.POOLSIZE
      3534**DCL      7704>>ASSIGN   7706<>CALL
QQ_GLOBAL.SCHEDINT
      3532**DCL      7827>>ASSIGN
QQ_GLOBAL.SLEEP_SECS
      3534**DCL      7827<<ASSIGN
QQ_GLOBAL.STIMER_UTS
      3534**DCL      6848--DCLINIT
QQ_GLOBAL.TPU$
      3539**DCL      7727<<ASSIGN
QQ_GLOBAL.TPUINITIAL
      3530**DCL      7795>>DOINDEX
QQ_GLOBAL.TRADER_FID.L#
      3614**DCL      7908<<ASSIGN
QQ_GLOBAL.TRADER_FID.NAME#
      3614**DCL      6795--DCLINIT  7909<<ASSIGN
QQ_GLOBAL.TRASHBUF$
      3535**DCL      7745<<ASSIGN
QQ_GLOBAL.TRASHBUF_SIZE
      3535**DCL      7746<<ASSIGN
QQ_GLOBAL.TRMRDSIZ
      3531**DCL      7684>>IF       7686>>ASSIGN   7688>>ASSIGN
QQ_TP$STATION_INIT
      3630**DCL      7630--ASSIGN
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:175  
QT$ENTRY
      4670**DCL      8066--ASSIGN
QT$ENTRY.FLAGS.JOURNAL
      4681**DCL      8055>>IF       8061>>ASSIGN
QT$ENTRY.MAXACTIVE
      4687**DCL      8055>>IF       8059>>ASSIGN   8180>>ASSIGN
QT$ENTRY.PRIO
      4708**DCL      8055>>IF       8060>>ASSIGN
QT$ENTRY.SET_COUNT
      4706**DCL      8067>>DOINDEX
QT$ENTRY$
      5177**DCL      4670--IMP-PTR  4780--IMP-PTR  7887<<ASSIGN   7892>>ASSIGN   7921>>ASSIGN   7938>>ASSIGN
      8015>>IF       8015>>IF       8018>>ASSIGN   8019>>ASSIGN   8055>>IF       8055>>IF       8055>>IF
      8059>>ASSIGN   8060>>ASSIGN   8061>>ASSIGN   8066>>ASSIGN   8067>>DOINDEX  8180>>ASSIGN   8222<>CALL
      8223>>ASSIGN   8284<>CALL     8286>>ASSIGN   8288>>ASSIGN   8290>>ASSIGN   8290>>ASSIGN
QT$FORM.FLAGS.JOURNAL
      4783**DCL      8015>>IF       8018>>ASSIGN
QT$FORM.FLAGS.ONEREPORT
      4785**DCL      8015>>IF       8019>>ASSIGN
QT$SETBITS
      4714**DCL      8089--ASSIGN
QT$SETBITS.ASN_MERGE.COUNT
      4731**DCL      4732--IMP-SIZ  8089>>ASSIGN
QT$SETBITS.ASN_MERGE.TEXT
      4732**DCL      8078--ASSIGN
QT$SETBITS.FLAGS.ONEREPORT
      4719**DCL      8070>>IF
QT$SETBITS.TYPE
      4715**DCL      8070>>IF
READ_CMDS
      7627**LABEL    7617--GOTO
READ_CMD_ERR1
      7647**LABEL    7642--CALLALT
READ_CMD_ERR1 IN PROCEDURE OPEN_SAVCMD
      8442**LABEL    8437--CALLALT
READ_CMD_ERR2
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:176  
      7763**LABEL    7758--CALLALT
READ_ERR IN PROCEDURE OPEN_TRADER
      7927**LABEL    7922--CALLALT
READ_KEY_ERR IN PROCEDURE OPEN_TRADER
      7898**LABEL    7893--CALLALT
REC$
      5178**DCL      8066<<ASSIGN   8070>>IF       8070>>IF       8078>>ASSIGN   8089<<ASSIGN   8089>>ASSIGN
      8089>>ASSIGN   8089>>ASSIGN
RELEASE_MEM
      8220**PROC     7701--CALL
RET IN PROCEDURE ADD_MSGTYP
      8187**LABEL    8153--GOTO
SAVCMD
      7430**DCL      6294--DCLINIT
SAVCMD.L#
      7430**DCL      8416<<ASSIGN
SAVCMD.NAME#
      7430**DCL      8417<<ASSIGN
SCREECH
      7846**LABEL    7840--GOTO
SETSTA$
      5180**DCL      4746--IMP-PTR  8082<<ASSIGN   8084>>ASSIGN
SETUP_FPT IN PROCEDURE OPEN_TRADER
      7969**LABEL    7930--GOTO
SIZE
      5190**DCL      7779<>CALL     7780>>ASSIGN
START_ERR
      7803**LABEL    7797--CALLALT
STOPTP
      7832**LABEL    7593--GOTO     7604--GOTO     7624--GOTO     7660--CALLALT  7662--CALLALT  7689--CALLALT
      7810--GOTO
STOPTPNOW
      7835**LABEL    7589--GOTO
SYSACCT
      7322**DCL      6077--DCLINIT
T$
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:177  
      4631**DCL      4632--IMP-PTR
TAIL$
      5169**DCL      7720<<ASSIGN   7721>>ASSIGN   7722>>ASSIGN   7723>>ASSIGN   7724>>ASSIGN   7728<<ASSIGN
      7729>>ASSIGN   7730>>ASSIGN   7731>>ASSIGN   7732>>ASSIGN   7736<<ASSIGN   7737>>ASSIGN   7738>>ASSIGN
      7739>>ASSIGN   7740>>ASSIGN
TEXTC_NAME
      7403**DCL      7586--ASSIGN
TEXTC_NAME.L#
      7403**DCL      7585<<ASSIGN
TEXTC_NAME.NAME#
      7403**DCL      7584<<ASSIGN
TEXTC_NUM
      5318**DCL      7783--ASSIGN
TEXTC_NUM.L#
      5318**DCL      7780<<ASSIGN
TEXTC_NUM.NAME#
      5318**DCL      7779--CALL
TP$EVENT.BLINK$
      4563**DCL      7721<<ASSIGN   7723<<ASSIGN
TP$EVENT.FLINK$
      4565**DCL      7722<<ASSIGN   7724<<ASSIGN
TP$EVENT.VLP_STATION.MSGIDXT
      4623**DCL      4626--REDEF
TPU$INFO.BLINK$
      4633**DCL      7729<<ASSIGN   7731<<ASSIGN
TPU$INFO.FLINK$
      4635**DCL      7730<<ASSIGN   7732<<ASSIGN
TYPLIST$
      5175**DCL      4864--IMP-PTR  7912<<ASSIGN   7972>>ASSIGN   8125>>IF       8136>>ASSIGN   8141>>ASSIGN
      8146>>ASSIGN   8158>>ASSIGN   8160<<ASSIGN   8172>>ASSIGN   8173>>ASSIGN   8174>>ASSIGN   8175>>ASSIGN
      8176>>ASSIGN   8177>>ASSIGN   8229<>CALL     8230>>ASSIGN
TYPLIST_SLOTS
      5183**DCL      7914<<ASSIGN   8156>>IF       8161<<ASSIGN   8184<<ASSIGN   8184>>ASSIGN
VLP$CGQL.LIST
      4840**DCL      8179<<ASSIGN
VLP$CGQL.LIST.MXACT#
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:178  
      4840**DCL      8131<<ASSIGN   8180<<ASSIGN
VLP$CGTYPL.LIST
      4864**DCL      8172<<ASSIGN
VLP$CGTYPL.LIST.JOURNAL#
      4865**DCL      8141<<ASSIGN   8175<<ASSIGN
VLP$CGTYPL.LIST.NAME#
      4864**DCL      8125>>IF       8173<<ASSIGN
VLP$CGTYPL.LIST.ONEREPORT#
      4866**DCL      8146<<ASSIGN   8176<<ASSIGN
VLP$CGTYPL.LIST.PERM#
      4865**DCL      8177<<ASSIGN
VLP$CGTYPL.LIST.PRIO#
      4865**DCL      8136<<ASSIGN   8174<<ASSIGN
VLP$JRNLFIDV
      4767**DCL      8290--ASSIGN
VLP$JRNLFIDV.L#
      4767**DCL      4767--IMP-SIZ  8288<<ASSIGN   8290>>ASSIGN
VLP$SETSTA.OSTA.OMSGTYP#
      4755**DCL      8084>>ASSIGN
VLP_CGCP
      7154**DCL      6717--DCLINIT
VLP_CGCP.DISKWARN#
      7180**DCL      7638>>ASSIGN   7677<<ASSIGN
VLP_CGCP.DVBYTE.REREAD#
      7168**DCL      7169--REDEF
VLP_CGCP.JOURNAL#
      7176**DCL      8293<<ASSIGN
VLP_CGCP.MAXMC#
      7167**DCL      7683<<ASSIGN
VLP_CGCP.MAXPG#
      7160**DCL      7637>>ASSIGN   7676<<ASSIGN
VLP_CGCP.MEMWARN#
      7181**DCL      7639>>ASSIGN   7678<<ASSIGN
VLP_CGCP.MINPG#
      7158**DCL      7636>>ASSIGN   7675<<ASSIGN
VLP_CGCP.TRMRDSIZ#
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:179  
      7179**DCL      7688<<ASSIGN
VLP_CGQL_C
      5106**DCL      8169--ASSIGN
VLP_CGQL_C.LIST
      5106**DCL      7973--ASSIGN   8179>>ASSIGN
VLP_CGQL_C.LIST.MXACT#
      5106**DCL      7950>>ASSIGN   8073>>ASSIGN   8129>>IF
VLP_CGSTAL_HOLD
      7478**DCL      7691--ASSIGN
VLP_CGSTAL_HOLD.LIST.NAME#
      7478**DCL      7692<<ASSIGN
VLP_CGSTAL_INFO
      7531**DCL      7696--ASSIGN
VLP_CGSTAL_INFO.LIST.NAME#
      7531**DCL      7697<<ASSIGN
VLP_CGTYPL_C
      5083**DCL      8161--ASSIGN
VLP_CGTYPL_C.LIST
      5083**DCL      7971--ASSIGN   8172>>ASSIGN
VLP_CGTYPL_C.LIST.JOURNAL#
      5084**DCL      7952>>ASSIGN   8075>>ASSIGN
VLP_CGTYPL_C.LIST.PRIO#
      5084**DCL      7951>>ASSIGN   8074>>ASSIGN
VLP_NAME
      7376**DCL      5740--DCLINIT  5851--DCLINIT  5962--DCLINIT
VLP_NAME.L#
      7376**DCL      7666<<ASSIGN
VLP_NAME.NAME#
      7376**DCL      7664<<ASSIGN   7665>>CALLBLT
VLP_SETSTA
      7267**DCL      5740--DCLINIT
VLP_SETSTA_CSCG
      7295**DCL      6073--DCLINIT
VLP_SETSTA_CSCG.MYSTATION#
      7299**DCL      7573<<ASSIGN
VLP_SETSTA_HOLD
PL6.E3A0      #001=QQA$INIT File=QQA$INIT.:E05TSI                                WED 07/30/97 05:24 Page:180  
      7444**DCL      5851--DCLINIT  6719--DCLINIT
VLP_SETSTA_INFO
      7497**DCL      5962--DCLINIT
VLP_STATION
      7213**DCL      5596--DCLINIT  5636--DCLINIT
VLP_STATION.CTL.LATCH#
      7218**DCL      7820<<ASSIGN
VLP_STATION.MSGIDXT
      7223**DCL      7226--REDEF
VLP_STATION_JRNL
      7240**DCL      8291--ASSIGN
VLP_STATION_JRNL.MSGIDXT
      7250**DCL      7253--REDEF
VLP_VECTOR
      7197**DCL      6682--DCLINIT  6698--DCLINIT
VLP_VECTOR.PTR$
      7199**DCL      7703<<ASSIGN   7743<<ASSIGN   7745>>ASSIGN   7887>>ASSIGN   7938<<ASSIGN   8158<<ASSIGN
      8160>>ASSIGN   8166<<ASSIGN   8168>>ASSIGN   8223<<ASSIGN   8230<<ASSIGN   8234<<ASSIGN
VLP_VECTOR.W1.VSIZE#
      7197**DCL      7940>>ASSIGN
VLP_VECTOR.W2
      7198**DCL      7199--REDEF
WORDS
      5187**DCL      8222<>CALL     8224>>ASSIGN   8229<>CALL     8231>>ASSIGN   8233<>CALL     8235>>ASSIGN
      8284<>CALL     8285>>ASSIGN
