/*M* WASP_SI65 - I/O CACHE display for WASP */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
WASP_CACHE: PROC;
 
%SUB GLOBAL = SYMREF;
%INCLUDE WASP_C61;
 
%INCLUDE FM_CACHE_C;
 
DCL 1 CACHE_HDR CONSTANT,
       2 P1 CHAR(0) INIT('%15-%9..4.4U  I/O cache activity since  %14..3U%2/'),
       2 P2 CHAR(0) INIT ('%10-Attempted    Hits      Hits     Percent  Attempted   Failed    Unused%/'),
       2 P3 CHAR(0) INIT ('%10-  Gets       UC=0      UC>0       Hits      Puts      Puts      Pages%/');
 
DCL 1 CACHE_FMT CONSTANT CHAR(0) INIT('%A%8-%7(%10D%)');
 
DCL P_STARTUP UBIN SYMREF;
 
DCL CACHE_TYPE_TITLE(0:%(%CACHETYPES-1+1)) CONSTANT CHAR(8) INIT(
 'MAD     ','PAD     ','GP      ','FD      ','FIT     ','UL      ',
 'INDEX   ','DATA    ','REL     ','CONSEC  ','ELSE    ','Total   ');
 
DCL FMC_STATS$ PTR SYMREF;
DCL FMC$STATS$ PTR STATIC;
%FMC$STATS(STCLASS="BASED(TABLE$)");
%FMC$STATS(FPTN=FMC_OLD_STATS,STCLASS=STATIC);
DCL TABLE$ STATIC PTR;
 
DCL 1 DISPLAY (0:%(CACHETYPES)),
       2 ATTGET SBIN,
       2 HITZERO SBIN,
       2 HITNONZERO SBIN,
       2 PERCT SBIN,
       2 ATTPUT SBIN,
       2 FAILED SBIN,
       2 UNUSED SBIN;
 
DCL ITYPE SBIN;
 
   IF BREAK_COUNT > 0 THEN DO;
      IF DOUBLE_BREAK OR BREAK_COUNT > 1 THEN EXITING='1'B;
      ELSE DO;
         CALL M$TIME(GET_INITIAL_UTS);
         FMC_OLD_STATS = FMC$STATS;
         BREAK_COUNT = 0;
         DOUBLE_BREAK = '1'B;
      END;
   END;
   ELSE DOUBLE_BREAK = '0'B;
 
   CALL X$WRITE (F_FDS, VECTOR(CACHE_HDR), VECTOR(INITIAL_UTS));
 
   DISPLAY = '0'B;
 
   DO ITYPE=0 TO %(%CACHETYPES-1);
 
      DISPLAY.HITZERO(ITYPE) =
        FMC$STATS.HITZERO(ITYPE) - FMC_OLD_STATS.HITZERO(ITYPE);
      DISPLAY.HITNONZERO(ITYPE) =
        FMC$STATS.HITNONZERO(ITYPE) - FMC_OLD_STATS.HITNONZERO(ITYPE);
      DISPLAY.FAILED(ITYPE) =
        FMC$STATS.FAILED(ITYPE) - FMC_OLD_STATS.FAILED(ITYPE);
      DISPLAY.ATTGET(ITYPE) =
        FMC$STATS.ATTGET(ITYPE) - FMC_OLD_STATS.ATTGET(ITYPE);
      DISPLAY.ATTPUT(ITYPE) =
        FMC$STATS.ATTPUT(ITYPE) - FMC_OLD_STATS.ATTPUT(ITYPE);
      DISPLAY.UNUSED(ITYPE) =
        FMC$STATS.UNUSED(ITYPE);
 
      DISPLAY.HITZERO(%CACHETYPES) = DISPLAY.HITZERO(%CACHETYPES) +
        FMC$STATS.HITZERO(ITYPE) - FMC_OLD_STATS.HITZERO(ITYPE);
      DISPLAY.HITNONZERO(%CACHETYPES) = DISPLAY.HITNONZERO(%CACHETYPES) +
        FMC$STATS.HITNONZERO(ITYPE) - FMC_OLD_STATS.HITNONZERO(ITYPE);
      DISPLAY.FAILED(%CACHETYPES) = DISPLAY.FAILED(%CACHETYPES) +
        FMC$STATS.FAILED(ITYPE) - FMC_OLD_STATS.FAILED(ITYPE);
      DISPLAY.ATTGET(%CACHETYPES) = DISPLAY.ATTGET(%CACHETYPES) +
        FMC$STATS.ATTGET(ITYPE) - FMC_OLD_STATS.ATTGET(ITYPE);
      DISPLAY.ATTPUT(%CACHETYPES) = DISPLAY.ATTPUT(%CACHETYPES) +
        FMC$STATS.ATTPUT(ITYPE) - FMC_OLD_STATS.ATTPUT(ITYPE);
      DISPLAY.UNUSED(%CACHETYPES) = DISPLAY.UNUSED(%CACHETYPES) +
        FMC$STATS.UNUSED(ITYPE);
 
   END;
 
   DO ITYPE = 0 TO %CACHETYPES;
 
      CALL PERCENT( DISPLAY.PERCT(ITYPE),
        DISPLAY.HITZERO(ITYPE)+ DISPLAY.HITNONZERO(ITYPE),
        DISPLAY.ATTGET(ITYPE));
 
      CALL X$WRITE (F_FDS, VECTOR(CACHE_FMT),
        VECTOR(CACHE_TYPE_TITLE(ITYPE)),
        VECTOR(DISPLAY(ITYPE)));
 
   END /* DO ITYPE */;
 
   RETURN;
 
 
%EJECT;
PERCENT: PROC( RESULT, ITEM, DIVISOR);
 
DCL RESULT SBIN;
DCL ITEM SBIN;
DCL DIVISOR SBIN;
   IF DIVISOR=0
   THEN RESULT=0;
   ELSE IF DIVISOR < 343597383
   THEN RESULT = (100 * ITEM) / DIVISOR;
   ELSE RESULT = ITEM / (DIVISOR / 100);
 
END PERCENT;
%EJECT;
 
WASP_CACHE_INIT: ENTRY;
   CALL DAM$INIT;
   CALL DAM$MAP(ADDR(P_STARTUP),TABLE$,0,0);
   INITIAL_UTS = TABLE$->UBIN_;
   CALL DAM$MAP(ADDR(FMC_STATS$),TABLE$,0,0);
   FMC$STATS$ = TABLE$->PTR$_;
   CALL DAM$MAP(FMC$STATS$,TABLE$,0,0);
   FMC_OLD_STATS = '0'B;
   DISPLAY = '0'B;
   RETURN;
END WASP_CACHE;
