VERSION E05

PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:1    
        1        1        /*M* DDS$STOREDA . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$STOREDA
        9        9             PURPOSE: TO INITIALIZE FIXCOM & VARCOM ENTRIES FOR STORED COMMANDS.
       10       10             DESCRIPTION: SETS UP FIRST ATTACHMENT INDEX & COMMAND ID IN FIXCOM,
       11       11             SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$ TO POINT
       12       12             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       13       13             MEMORY IN VARCOM, THEN ALTRETURNS. */
       14       14        /*D* NAME: DDS$STOREDA
       15       15             CALL: CALL DDS$STOREDA( SIZE, CODE ) ALTRET(NOROOM);
       16       16             INTERFACE: DDD$BUMP_D$
       17       17             ENVIRONMENT: XDELTA OR USER DELTA.
       18       18             INPUT: SIZE - FIXED SIZE ENTRY IN VARCOM.
       19       19                    CODE - COMMAND CODE.
       20       20             OUTPUT: FXCM.FAI - FIXCOM ATTACHMENT INDEX.
       21       21                     FXCM.CMD - FIXCOM ATTACHMENT COMMAND CODE.
       22       22                     ALL_ATTACH.CMD - ATTACHMENT COMMAND CODE.
       23       23                     ALL_ATTACH.CID - ATTACHMENT COMMAND ID IN FIXCOM.
       24       24             SCRATCH: LOCAL AUTO ONLY.
       25       25             DESCRIPTION: SETS UP FIRST ATTACHMENT INDEX & COMMAND ID IN FIXCOM,
       26       26             SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$ TO POINT
       27       27             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       28       28             MEMORY IN VARCOM, THEN ALTRETURNS. */
       29       29        /**/
       30       30        DDS$STOREDA: PROC( SIZE, CODE ) ALTRET;
       31       31        /**/
       32       32    1   DCL SIZE SBIN;                          /* INIT VARCOM ENTRY SIZE */
       33       33    1   DCL CODE SBIN;                          /* COMMAND CODE */
       34       34    1   DCL TFIX$ PTR;                          /* POINTER TO FIXCOM ENTRY */
       35       35    1   DCL SIZECHAR UBIN;                      /* SIZE OF FRAME IN CHARACTERS */
       36       36    1   DCL LASTBLT$ PTR;                       /* =S_D.LASTBLT$ */
       37       37    1   DCL TUSE SBIN;                          /* TEMP FOR U$SE.TYPE */
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:2    
       38       38        %INCLUDE DD$BASED;
       39     1341        %FIXCOM (NAME=FXCM,STCLASS="BASED(TFIX$)");
       40     1357        %ALL_ATTACH (STCLASS="BASED(LASTBLT$)");
       41     1372        %U$SE;
       42     1380        %FPRG$CONTEXT;
       43     1443        %INCLUDE DD_SUBS_C;                     /* %SUBS */
       44     1714        %INCLUDE DD_ERR_C;                      /* ERROR %SUBS */
       45     2111    1   DCL 1 BUFF$ER BASED( LASTBLT$ ),        /* FOR FAST MOVE A LA SAM KEYS */
       46     2112    1         2 * CHAR( SIZECHAR );
       47     2113        %INCLUDE XUH_MACRO_C;
       48     2197        %INCLUDE DD_SD_M;
       49     3533        %S_D;
       50     4851    1   DCL USE$ PTR SYMREF;                    /* PTR TO USE FRAME */
       51     4852    1   DCL DDD$BUMP_D$ ENTRY(1) ALTRET;        /* BUMPS S_D.D$ */
       52     4853    1   DCL DDS$IFSPEC ENTRY(0) ALTRET;         /* BUILDS IFSPEC */
       53     4854    1   DCL DDM$GETMEM ENTRY(3) ALTRET;         /* EXPAND VARCOM */
       54     4855        /* GET POINTER TO FIXCOM SLOT */
       55     4856    1        TFIX$ = ADDR( S_D.FIXCOM( S_D.STORED ) );
       56     4857        /* SET FIRST ATTACHMENT INDEX & STORED COMMAND ID IN FIXCOM SLOT */
       57     4858    1        FXCM.FAI = POFFW( S_D.DESC$, S_D.VARCOM$ );
       58     4859    1        FXCM.CMD = CODE;
       59     4860    1        TUSE = U$SE.TYPE;
       60     4861    1        IF ( CODE = C_AT ) OR ( CODE = C_WHEN ) /* C_AT, C_WHEN */
       61     4862    1        THEN IF ( TUSE = USE_REAL ) OR ( TUSE = USE_PT ) /* USE_REAL, USE_PT */
       62     4863    2             THEN DO;
       63     4864    2                  S_D.ERROR = E@USE;       /* E@USE */
       64     4865    2                  GOTO ALTRT;
       65     4866    2                END;
       66     4867    2             ELSE DO;
       67     4868    2                  IF ( TUSE = USE_USER# ) OR ( TUSE = USE_USER@ )
              4868                           /* USE_USER#, USE_USER@ */
       68     4869    2                  THEN FXCM.USER = '1'B;
       69     4870    2                  IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA
       70     4871    2                  THEN FXCM.USER = '1'B;
       71     4872    2                END;
       72     4873    1        GOTO STOREC;
       73     4874        %EJECT;
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:3    
       74     4875        /*F* NAME: DDS$ATTDIRA
       75     4876             PURPOSE: TO INITIALIZE VARCOM ENTRIES FOR ATTACHABLE & DIRECT COMMANDS.
       76     4877             DESCRIPTION: SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$
       77     4878             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       78     4879             MEMORY IN VARCOM, THEN ALTRETURNS. */
       79     4880        /*D* NAME: DDS$ATTDIRA
       80     4881             CALL: CALL DDS$ATTDIRA( SIZE, CODE ) ALTRET(NOROOM);
       81     4882             INTERFACE: DDD$BUMP_D$
       82     4883             ENVIRONMENT: XDELTA OR USER DELTA.
       83     4884             INPUT: SIZE - FIXED SIZE ENTRY IN VARCOM.
       84     4885                    CODE - COMMAND CODE.
       85     4886             OUTPUT: ALL_ATTACH.CMD - ATTACHMENT COMMAND CODE.
       86     4887                     ALL_ATTACH.CID - ATTACHMENT COMMAND ID IN FIXCOM.
       87     4888             SCRATCH: LOCAL AUTO ONLY.
       88     4889             DESCRIPTION: SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$
       89     4890             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       90     4891             MEMORY IN VARCOM, THEN ALTRETURNS. */
       91     4892        /**/
       92     4893    1   DDS$ATTDIRA: ENTRY( SIZE, CODE ) ALTRET;
       93     4894        /**/
       94     4895    1        TUSE = USE_MON;                    /* USE_MON */
       95     4896    1   STOREC:
       96     4897        /* MAKE SURE THERE IS ENOUGH ROOM FOR THE BASIC FIRST ATTACHMENT */
       97     4898    1        CALL DDD$BUMP_D$( SIZE ) ALTRET(ALTRT);
       98     4899        /* SETUP THE INITIAL PORTION OF VARCOM ENTRY */
       99     4900        /* FIRST ZERO OUT THE WHOLE MAGILLA */
      100     4901    1        SIZECHAR = SIZE * SIZEC( SIZE );
      101     4902    1        LASTBLT$ = S_D.LASTBLT$;
      102     4903    1        IF POFFC (S_D.VARCOM_HIGH$, LASTBLT$) < SIZECHAR THEN
      103     4904    2        DO;
      104     4905    2             CALL DDM$GETMEM (S_D.VARCOM$, 1024);
      105     4906    2             S_D.VARCOM_HIGH$ = PINCRW (S_D.VARCOM_HIGH$, 1024);
      106     4907    2           END;
      107     4908    1        BUFF$ER = '0'B;
      108     4909    1        ALL_ATTACH.CMD = CODE;             /* COMMAND CODE */
      109     4910    1        ALL_ATTACH.CID = S_D.STORED;       /* COMMAND ID */
      110     4911    1        IF ( TUSE = USE_USER# ) OR ( TUSE = USE_USER@ ) /* USE_USER#, USE_USER@ */
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:4    
      111     4912    2        THEN DO;
      112     4913    2             ALL_ATTACH.U.APT = U$SE.APT;
      113     4914    2             ALL_ATTACH.U.LS = U$SE.LS;
      114     4915    2           END;
      115     4916    1        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA
      116     4917    1        THEN ALL_ATTACH.USERNO = S_D.USERNO;
      117     4918    1        IF ( S_D.IFSPEC$ ~= ADDR(NIL) )
      118     4919    1        THEN CALL DDS$IFSPEC ALTRET( ALTRT );
      119     4920        /**/
      120     4921    1        RETURN;
      121     4922        /**/
      122     4923    1   ALTRT: ALTRETURN;
      123     4924        /**/
      124     4925    1   END DDS$STOREDA;

PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:5    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$STOREDA.

   Procedure DDS$STOREDA requires 132 words for executable code.
   Procedure DDS$STOREDA requires 12 words of local(AUTO) storage.

    No errors detected in file DDS$STOREDA.:E05TSI    .

PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:6    

 Object Unit name= DDS$STOREDA                                File name= DDS$STOREDA.:E05TOU
 UTS= JUL 29 '97 14:22:54.84 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   132    204  DDS$STOREDA
    1  RoData even  none     2      2  DDS$STOREDA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$STOREDA
     0     65          yes     yes      Std        2  DDS$ATTDIRA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DDD$BUMP_D$
 yes     yes           Std       3 DDM$GETMEM
 yes     yes           Std       0 DDS$IFSPEC
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  USE$                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:8    


        1        1        /*M* DDS$STOREDA . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$STOREDA
        9        9             PURPOSE: TO INITIALIZE FIXCOM & VARCOM ENTRIES FOR STORED COMMANDS.
       10       10             DESCRIPTION: SETS UP FIRST ATTACHMENT INDEX & COMMAND ID IN FIXCOM,
       11       11             SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$ TO POINT
       12       12             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       13       13             MEMORY IN VARCOM, THEN ALTRETURNS. */
       14       14        /*D* NAME: DDS$STOREDA
       15       15             CALL: CALL DDS$STOREDA( SIZE, CODE ) ALTRET(NOROOM);
       16       16             INTERFACE: DDD$BUMP_D$
       17       17             ENVIRONMENT: XDELTA OR USER DELTA.
       18       18             INPUT: SIZE - FIXED SIZE ENTRY IN VARCOM.
       19       19                    CODE - COMMAND CODE.
       20       20             OUTPUT: FXCM.FAI - FIXCOM ATTACHMENT INDEX.
       21       21                     FXCM.CMD - FIXCOM ATTACHMENT COMMAND CODE.
       22       22                     ALL_ATTACH.CMD - ATTACHMENT COMMAND CODE.
       23       23                     ALL_ATTACH.CID - ATTACHMENT COMMAND ID IN FIXCOM.
       24       24             SCRATCH: LOCAL AUTO ONLY.
       25       25             DESCRIPTION: SETS UP FIRST ATTACHMENT INDEX & COMMAND ID IN FIXCOM,
       26       26             SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$ TO POINT
       27       27             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       28       28             MEMORY IN VARCOM, THEN ALTRETURNS. */
       29       29        /**/
       30       30        DDS$STOREDA: PROC( SIZE, CODE ) ALTRET;

     30  0 000000   000000 700200 xent  DDS$STOREDA  TSX0  ! X66_AUTO_2
         0 000001   000014 000002                    ZERO    12,2

       31       31        /**/
       32       32    1   DCL SIZE SBIN;                          /* INIT VARCOM ENTRY SIZE */
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:9    
       33       33    1   DCL CODE SBIN;                          /* COMMAND CODE */
       34       34    1   DCL TFIX$ PTR;                          /* POINTER TO FIXCOM ENTRY */
       35       35    1   DCL SIZECHAR UBIN;                      /* SIZE OF FRAME IN CHARACTERS */
       36       36    1   DCL LASTBLT$ PTR;                       /* =S_D.LASTBLT$ */
       37       37    1   DCL TUSE SBIN;                          /* TEMP FOR U$SE.TYPE */
       38       38        %INCLUDE DD$BASED;
       39     1341        %FIXCOM (NAME=FXCM,STCLASS="BASED(TFIX$)");
       40     1357        %ALL_ATTACH (STCLASS="BASED(LASTBLT$)");
       41     1372        %U$SE;
       42     1380        %FPRG$CONTEXT;
       43     1443        %INCLUDE DD_SUBS_C;                     /* %SUBS */
       44     1714        %INCLUDE DD_ERR_C;                      /* ERROR %SUBS */
       45     2111    1   DCL 1 BUFF$ER BASED( LASTBLT$ ),        /* FOR FAST MOVE A LA SAM KEYS */
       46     2112    1         2 * CHAR( SIZECHAR );
       47     2113        %INCLUDE XUH_MACRO_C;
       48     2197        %INCLUDE DD_SD_M;
       49     3533        %S_D;
       50     4851    1   DCL USE$ PTR SYMREF;                    /* PTR TO USE FRAME */
       51     4852    1   DCL DDD$BUMP_D$ ENTRY(1) ALTRET;        /* BUMPS S_D.D$ */
       52     4853    1   DCL DDS$IFSPEC ENTRY(0) ALTRET;         /* BUILDS IFSPEC */
       53     4854    1   DCL DDM$GETMEM ENTRY(3) ALTRET;         /* EXPAND VARCOM */
       54     4855        /* GET POINTER TO FIXCOM SLOT */
       55     4856    1        TFIX$ = ADDR( S_D.FIXCOM( S_D.STORED ) );

   4856  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000135 236100                    LDQ     93,,PR0
         0 000004   000003 402007                    MPY     3,DL
         0 000005   000023 736000                    QLS     19
         0 000006   001212 036003                    ADLQ    650,DU
         0 000007   000000 036000 xsym               ADLQ    S_D$
         0 000010   200005 756100                    STQ     TFIX$,,AUTO

       56     4857        /* SET FIRST ATTACHMENT INDEX & STORED COMMAND ID IN FIXCOM SLOT */
       57     4858    1        FXCM.FAI = POFFW( S_D.DESC$, S_D.VARCOM$ );

   4858  0 000011   004622 236100                    LDQ     2450,,PR0
         0 000012   000022 772000                    QRL     18
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:10   
         0 000013   200012 756100                    STQ     TUSE+2,,AUTO
         0 000014   000041 236100                    LDQ     33,,PR0
         0 000015   000022 772000                    QRL     18
         0 000016   200012 136100                    SBLQ    TUSE+2,,AUTO
         0 000017   000000 620006                    EAX0    0,QL
         0 000020   200005 471500                    LDP1    TFIX$,,AUTO
         0 000021   100002 440100                    SXL0    2,,PR1

       58     4859    1        FXCM.CMD = CODE;

   4859  0 000022   200004 473500                    LDP3    @CODE,,AUTO
         0 000023   300000 236100                    LDQ     0,,PR3
         0 000024   000033 736000                    QLS     27
         0 000025   100000 552140                    STBQ    0,'40'O,PR1

       59     4860    1        TUSE = U$SE.TYPE;

   4860  0 000026   000000 474400 xsym               LDP4    USE$
         0 000027   400001 235100                    LDA     1,,PR4
         0 000030   200010 755100                    STA     TUSE,,AUTO

       60     4861    1        IF ( CODE = C_AT ) OR ( CODE = C_WHEN ) /* C_AT, C_WHEN */

   4861  0 000031   300000 235100                    LDA     0,,PR3
         0 000032   000002 115007                    CMPA    2,DL
         0 000033   000036 600000 0                  TZE     s:4862
         0 000034   000103 115007                    CMPA    67,DL
         0 000035   000064 601000 0                  TNZ     s:4873

       61     4862    1        THEN IF ( TUSE = USE_REAL ) OR ( TUSE = USE_PT ) /* USE_REAL, USE_PT */

   4862  0 000036   200010 236100                    LDQ     TUSE,,AUTO
         0 000037   000001 116007                    CMPQ    1,DL
         0 000040   000043 600000 0                  TZE     s:4864
         0 000041   000002 116007                    CMPQ    2,DL
         0 000042   000046 601000 0                  TNZ     s:4868

PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:11   
       62     4863    2             THEN DO;

       63     4864    2                  S_D.ERROR = E@USE;       /* E@USE */

   4864  0 000043   000067 235007                    LDA     55,DL
         0 000044   000013 755100                    STA     11,,PR0

       64     4865    2                  GOTO ALTRT;

   4865  0 000045   000203 710000 0                  TRA     ALTRT

       65     4866    2                END;
       66     4867    2             ELSE DO;

       67     4868    2                  IF ( TUSE = USE_USER# ) OR ( TUSE = USE_USER@ )
              4868                           /* USE_USER#, USE_USER@ */

   4868  0 000046   000004 116007                    CMPQ    4,DL
         0 000047   000052 600000 0                  TZE     s:4869
         0 000050   000003 116007                    CMPQ    3,DL
         0 000051   000054 601000 0                  TNZ     s:4870

       68     4869    2                  THEN FXCM.USER = '1'B;

   4869  0 000052   000001 236003                    LDQ     1,DU
         0 000053   100000 256100                    ORSQ    0,,PR1

       69     4870    2                  IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA

   4870  0 000054   000101 234100                    SZN     65,,PR0
         0 000055   000064 605000 0                  TPL     s:4873
         0 000056   000102 474500                    LDP4    66,,PR0
         0 000057   400001 236100                    LDQ     1,,PR4
         0 000060   002000 316003                    CANQ    1024,DU
         0 000061   000064 600000 0                  TZE     s:4873

       70     4871    2                  THEN FXCM.USER = '1'B;
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:12   

   4871  0 000062   000001 236003                    LDQ     1,DU
         0 000063   100000 256100                    ORSQ    0,,PR1

       71     4872    2                END;

       72     4873    1        GOTO STOREC;

   4873  0 000064   000070 710000 0                  TRA     STOREC

       73     4874        %EJECT;
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:13   
       74     4875        /*F* NAME: DDS$ATTDIRA
       75     4876             PURPOSE: TO INITIALIZE VARCOM ENTRIES FOR ATTACHABLE & DIRECT COMMANDS.
       76     4877             DESCRIPTION: SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$
       77     4878             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       78     4879             MEMORY IN VARCOM, THEN ALTRETURNS. */
       79     4880        /*D* NAME: DDS$ATTDIRA
       80     4881             CALL: CALL DDS$ATTDIRA( SIZE, CODE ) ALTRET(NOROOM);
       81     4882             INTERFACE: DDD$BUMP_D$
       82     4883             ENVIRONMENT: XDELTA OR USER DELTA.
       83     4884             INPUT: SIZE - FIXED SIZE ENTRY IN VARCOM.
       84     4885                    CODE - COMMAND CODE.
       85     4886             OUTPUT: ALL_ATTACH.CMD - ATTACHMENT COMMAND CODE.
       86     4887                     ALL_ATTACH.CID - ATTACHMENT COMMAND ID IN FIXCOM.
       87     4888             SCRATCH: LOCAL AUTO ONLY.
       88     4889             DESCRIPTION: SETS COMMAND CODE, COMMAND ID IN VARCOM ENTRY, BUMPS S_D.D$
       89     4890             PAST THE FIXED LENGTH PORTION OF VARCOM, RETURNS UNLESS NOT ENOUGH
       90     4891             MEMORY IN VARCOM, THEN ALTRETURNS. */
       91     4892        /**/
       92     4893    1   DDS$ATTDIRA: ENTRY( SIZE, CODE ) ALTRET;

   4893  0 000065   000000 700200 xent  DDS$ATTDIRA  TSX0  ! X66_AUTO_2
         0 000066   000014 000002                    ZERO    12,2

       93     4894        /**/
       94     4895    1        TUSE = USE_MON;                    /* USE_MON */

   4895  0 000067   200010 450100                    STZ     TUSE,,AUTO

       95     4896    1   STOREC:
       96     4897        /* MAKE SURE THERE IS ENOUGH ROOM FOR THE BASIC FIRST ATTACHMENT */
       97     4898    1        CALL DDD$BUMP_D$( SIZE ) ALTRET(ALTRT);

   4898  0 000070   200003 630500       STOREC       EPPR0   @SIZE,,AUTO
         0 000071   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000072   000000 701000 xent               TSX1    DDD$BUMP_D$
         0 000073   000203 702000 0                  TSX2    ALTRT

PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:14   
       98     4899        /* SETUP THE INITIAL PORTION OF VARCOM ENTRY */
       99     4900        /* FIRST ZERO OUT THE WHOLE MAGILLA */
      100     4901    1        SIZECHAR = SIZE * SIZEC( SIZE );

   4901  0 000074   200003 470500                    LDP0    @SIZE,,AUTO
         0 000075   000000 235100                    LDA     0,,PR0
         0 000076   000002 735000                    ALS     2
         0 000077   200006 755100                    STA     SIZECHAR,,AUTO

      101     4902    1        LASTBLT$ = S_D.LASTBLT$;

   4902  0 000100   000000 471400 xsym               LDP1    S_D$
         0 000101   100134 236100                    LDQ     92,,PR1
         0 000102   200007 756100                    STQ     LASTBLT$,,AUTO

      102     4903    1        IF POFFC (S_D.VARCOM_HIGH$, LASTBLT$) < SIZECHAR THEN

   4903  0 000103   200007 236100                    LDQ     LASTBLT$,,AUTO
         0 000104   000020 772000                    QRL     16
         0 000105   200012 756100                    STQ     TUSE+2,,AUTO
         0 000106   104623 236100                    LDQ     2451,,PR1
         0 000107   000020 772000                    QRL     16
         0 000110   200012 136100                    SBLQ    TUSE+2,,AUTO
         0 000111   000114 604000 0                  TMI     s:4905
         0 000112   200006 116100                    CMPQ    SIZECHAR,,AUTO
         0 000113   000131 603000 0                  TRC     s:4908

      103     4904    2        DO;

      104     4905    2             CALL DDM$GETMEM (S_D.VARCOM$, 1024);

   4905  0 000114   000001 236000 1                  LDQ     1
         0 000115   200013 756100                    STQ     TUSE+3,,AUTO
         0 000116   000000 236000 xsym               LDQ     S_D$
         0 000117   004622 036003                    ADLQ    2450,DU
         0 000120   200012 756100                    STQ     TUSE+2,,AUTO
         0 000121   200012 630500                    EPPR0   TUSE+2,,AUTO
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:15   
         0 000122   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000123   000000 701000 xent               TSX1    DDM$GETMEM
         0 000124   000000 011000                    NOP     0

      105     4906    2             S_D.VARCOM_HIGH$ = PINCRW (S_D.VARCOM_HIGH$, 1024);

   4906  0 000125   000000 470400 xsym               LDP0    S_D$
         0 000126   004623 236100                    LDQ     2451,,PR0
         0 000127   002000 036003                    ADLQ    1024,DU
         0 000130   004623 756100                    STQ     2451,,PR0

      106     4907    2           END;

      107     4908    1        BUFF$ER = '0'B;

   4908  0 000131   200007 470500                    LDP0    LASTBLT$,,AUTO
         0 000132   200006 720100                    LXL0    SIZECHAR,,AUTO
         0 000133   000140 100400                    MLR     fill='000'O
         0 000134   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000135   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0

      108     4909    1        ALL_ATTACH.CMD = CODE;             /* COMMAND CODE */

   4909  0 000136   200004 471500                    LDP1    @CODE,,AUTO
         0 000137   100000 236100                    LDQ     0,,PR1
         0 000140   000033 736000                    QLS     27
         0 000141   000000 552140                    STBQ    0,'40'O,PR0

      109     4910    1        ALL_ATTACH.CID = S_D.STORED;       /* COMMAND ID */

   4910  0 000142   000000 473400 xsym               LDP3    S_D$
         0 000143   300135 236100                    LDQ     93,,PR3
         0 000144   000022 736000                    QLS     18
         0 000145   000000 552120                    STBQ    0,'20'O,PR0

      110     4911    1        IF ( TUSE = USE_USER# ) OR ( TUSE = USE_USER@ ) /* USE_USER#, USE_USER@ */

PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:16   
   4911  0 000146   200010 235100                    LDA     TUSE,,AUTO
         0 000147   000004 115007                    CMPA    4,DL
         0 000150   000153 600000 0                  TZE     s:4913
         0 000151   000003 115007                    CMPA    3,DL
         0 000152   000163 601000 0                  TNZ     s:4916

      111     4912    2        THEN DO;

      112     4913    2             ALL_ATTACH.U.APT = U$SE.APT;

   4913  0 000153   000000 474400 xsym               LDP4    USE$
         0 000154   400003 721100                    LXL1    3,,PR4
         0 000155   000001 741100                    STX1    1,,PR0

      113     4914    2             ALL_ATTACH.U.LS = U$SE.LS;

   4914  0 000156   400002 236100                    LDQ     2,,PR4
         0 000157   000017 736000                    QLS     15
         0 000160   000001 676100                    ERQ     1,,PR0
         0 000161   700000 376007                    ANQ     -32768,DL
         0 000162   000001 656100                    ERSQ    1,,PR0

      114     4915    2           END;

      115     4916    1        IF S_D.FPRG AND S_D.CURRENT_FPRG_CONTEXT$ -> FPRG$CONTEXT.XDELTA

   4916  0 000163   300101 234100                    SZN     65,,PR3
         0 000164   000174 605000 0                  TPL     s:4918
         0 000165   300102 474500                    LDP4    66,,PR3
         0 000166   400001 236100                    LDQ     1,,PR4
         0 000167   002000 316003                    CANQ    1024,DU
         0 000170   000174 600000 0                  TZE     s:4918

      116     4917    1        THEN ALL_ATTACH.USERNO = S_D.USERNO;

   4917  0 000171   305241 236100                    LDQ     2721,,PR3
         0 000172   000011 736000                    QLS     9
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:17   
         0 000173   000001 552170                    STBQ    1,'70'O,PR0

      117     4918    1        IF ( S_D.IFSPEC$ ~= ADDR(NIL) )

   4918  0 000174   300055 236100                    LDQ     45,,PR3
         0 000175   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000176   000202 600000 0                  TZE     s:4921

      118     4919    1        THEN CALL DDS$IFSPEC ALTRET( ALTRT );

   4919  0 000177   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000200   000000 701000 xent               TSX1    DDS$IFSPEC
         0 000201   000203 702000 0                  TSX2    ALTRT

      119     4920        /**/
      120     4921    1        RETURN;

   4921  0 000202   000000 702200 xent               TSX2  ! X66_ARET

      121     4922        /**/
      122     4923    1   ALTRT: ALTRETURN;

   4923  0 000203   000000 702200 xent  ALTRT        TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   1     000   000000 002000   000000 006000                                    ........
      123     4924        /**/
      124     4925    1   END DDS$STOREDA;

PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:18   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   DD$BASED.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$STOREDA.

   Procedure DDS$STOREDA requires 132 words for executable code.
   Procedure DDS$STOREDA requires 12 words of local(AUTO) storage.

    No errors detected in file DDS$STOREDA.:E05TSI    .
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:20   
          MINI XREF LISTING

ALL_ATTACH.CID
      1360**DCL      4910<<ASSIGN
ALL_ATTACH.CMD
      1359**DCL      4909<<ASSIGN
ALL_ATTACH.U.APT
      1364**DCL      4913<<ASSIGN
ALL_ATTACH.U.LS
      1365**DCL      4914<<ASSIGN
ALL_ATTACH.UNUSED
      1362**DCL      1363--REDEF    1367--REDEF
ALL_ATTACH.USERNO
      1367**DCL      4917<<ASSIGN
ALTRT
      4923**LABEL    4865--GOTO     4898--CALLALT  4919--CALLALT
BUFF$ER
      2111**DCL      4908<<ASSIGN
CODE
        33**DCL        30--PROC     4859>>ASSIGN   4861>>IF       4861>>IF       4893--ENTRY    4909>>ASSIGN
DDD$BUMP_D$
      4852**DCL-ENT  4898--CALL
DDM$GETMEM
      4854**DCL-ENT  4905--CALL
DDS$IFSPEC
      4853**DCL-ENT  4919--CALL
FPRG$CONTEXT.XDELTA
      1394**DCL      4870>>IF       4916>>IF
FXCM.CMD
      1343**DCL      4859<<ASSIGN
FXCM.FAI
      1353**DCL      4858<<ASSIGN
FXCM.USER
      1349**DCL      4869<<ASSIGN   4871<<ASSIGN
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:21   
LASTBLT$
        36**DCL      1358--IMP-PTR  2111--IMP-PTR  4902<<ASSIGN   4903>>IF       4908>>ASSIGN   4909>>ASSIGN
      4910>>ASSIGN   4913>>ASSIGN   4914>>ASSIGN   4917>>ASSIGN
SIZE
        32**DCL        30--PROC     4893--ENTRY    4898<>CALL     4901>>ASSIGN   4901--ASSIGN
SIZECHAR
        35**DCL      2112--IMP-SIZ  4901<<ASSIGN   4903>>IF       4908>>ASSIGN
STOREC
      4898**LABEL    4873--GOTO
S_D.CURRENT_CHANNEL
      4485**DCL      4487--REDEF
S_D.CURRENT_FPRG_CONTEXT$
      3685**DCL      4870>>IF       4916>>IF
S_D.DEBUGA
      3637**DCL      3639--REDEF
S_D.DESC$
      3617**DCL      4858>>ASSIGN
S_D.EIS
      4595**DCL      4624--REDEF
S_D.ERROR
      3566**DCL      4864<<ASSIGN
S_D.FIXCOM
      3991**DCL      4856--ASSIGN
S_D.FPRG
      3683**DCL      4870>>IF       4916>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      4528**DCL      4529--REDEF    4543--REDEF
S_D.IFSPEC$
      3643**DCL      4918>>IF
S_D.JDE
      4142**DCL      4143--REDEF
S_D.L$.VALUE
      3695**DCL      3701--REDEF    3709--REDEF    3712--REDEF    3715--REDEF    3718--REDEF
S_D.L$.VALUE.L
      3696**DCL      3697--REDEF    3698--REDEF
S_D.L6_MESSAGE_BUF
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:22   
      4549**DCL      4551--REDEF
S_D.LASTBLT$
      3729**DCL      4902>>ASSIGN
S_D.OUTPUT
      4515**DCL      4517--REDEF
S_D.REMOTE_MSG.FNCC
      4534**DCL      4535--REDEF
S_D.REMOTE_MSG.STXC
      4530**DCL      4531--REDEF
S_D.REMOTE_MSG.SUBFNCC
      4538**DCL      4539--REDEF
S_D.STORED
      3731**DCL      4856>>ASSIGN   4910>>ASSIGN
S_D.SV
      3594**DCL      3615--REDEF
S_D.USERNO
      4374**DCL      4917>>ASSIGN
S_D.VARCOM$
      4006**DCL      4858>>ASSIGN   4905<>CALL
S_D.VARCOM_HIGH$
      4008**DCL      4903>>IF       4906<<ASSIGN   4906>>ASSIGN
S_D$
      4846**DCL      3542--IMP-PTR  4856>>ASSIGN   4856>>ASSIGN   4858>>ASSIGN   4858>>ASSIGN   4864>>ASSIGN
      4870>>IF       4870>>IF       4902>>ASSIGN   4903>>IF       4905>>CALL     4906>>ASSIGN   4906>>ASSIGN
      4910>>ASSIGN   4916>>IF       4916>>IF       4917>>ASSIGN   4918>>IF
TFIX$
        34**DCL      1342--IMP-PTR  4856<<ASSIGN   4858>>ASSIGN   4859>>ASSIGN   4869>>ASSIGN   4871>>ASSIGN
TUSE
        37**DCL      4860<<ASSIGN   4862>>IF       4862>>IF       4868>>IF       4868>>IF       4895<<ASSIGN
      4911>>IF       4911>>IF
U$SE.APT
      1377**DCL      4913>>ASSIGN
U$SE.LS
      1376**DCL      4914>>ASSIGN
U$SE.TYPE
      1375**DCL      4860>>ASSIGN
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:23   
USE$
      4851**DCL      1373--IMP-PTR  4860>>ASSIGN   4913>>ASSIGN   4914>>ASSIGN
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:24   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$STOREDA File=DDS$STOREDA.:E05TSI                          TUE 07/29/97 14:22 Page:25   
              MINI UREF LISTING

DDS$ATTDIRA    4893**ENTRY
DDS$STOREDA      30**PROC
