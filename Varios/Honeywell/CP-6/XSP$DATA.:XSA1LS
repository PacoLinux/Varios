VERSION A01

PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:1    
        1        1        /*M*    XSP$DATA        Initialization and memory management.           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*    NAME:   XSP$GETCTX
        9        9                PURPOSE:
       10       10                    This routine is called to obtain a new Presentation context block.
       11       11                DESCRIPTION:
       12       12                    Space for a new context block is allocated.
       13       13                    The ALTRETURN is taken if space is not available.
       14       14                INPUT:  none.
       15       15                OUTPUT: CTX$ gets the address of the new context block.
       16       16                        PCID, if specified, is the desired connection id.
       17       17        */
       18       18        XSP$GETCTX: PROC( CTX$, PCID) ALTRET;
       19       19        %INCLUDE XSS_SESSION_E;
       20      584        %INCLUDE XSP_PRESENTATION_E;
       21      683        %INCLUDE XSP_INTERNAL_E;
       22      957        %INCLUDE XSP_INTERNAL_M;
       23     1618            %XSP$CTXTMAP( NAME=CMAP, STCLASS="BASED( CMAP$)");
       24     1659            %XSP$PCTX( NAME=PCTX, STCLASS="BASED( CTX$)");
       25     1815            %XSP$PCTX( NAME=XSP_PCTX, STCLASS="CONSTANT SYMDEF");
       26     1971        %INCLUDE XSS_INTERNAL_M;
       27     2560            %XSS$MEMBLK( NAME=B$BLOCK);
       28     2598
       29     2599    1       DCL XSP$INITLISTS ENTRY ALTRET;
       30     2600    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
       31     2601    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
       32     2602    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
       33     2603
       34     2604    1       DCL XSS_MAX_LCID SBIN SYMREF;
       35     2605
       36     2606    1       DCL XSP_MAPPCID$ PTR INIT( ADDR( NIL)) STATIC SYMDEF;
       37     2607
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:2    
       38     2608    1       DCL BLKX UBIN HALF HALIGNED;
       39     2609    1       DCL CBLKX UBIN HALF HALIGNED;
       40     2610    1       DCL CMAP$ PTR;
       41     2611    1       DCL CTXINITED BIT(1) STATIC INIT( %FALSE);  /* set iff CTX array init'd */
       42     2612    1       DCL CTX$ PTR;
       43     2613    1       DCL I SBIN;
       44     2614    1       DCL LASTGET SBIN STATIC;
       45     2615    1       DCL MAPPCID(0:0) UBIN HALF BASED( XSP_MAPPCID$) HALIGNED;
       46     2616    1       DCL PCID SBIN;
       47     2617    1       DCL TMP$ PTR;
       48     2618        %EJECT;
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:3    
       49     2619    2       IF NOT CTXINITED THEN DO;
       50     2620                /* figure out how many bytes to allocate for MAPPCID array */
       51     2621    2           I = 2 * ( 1 + XSS_MAX_LCID);
       52     2622                /* allocate the space and set it up */
       53     2623    2           CALL XSS$GETMEM( BLKX, XSP_MAPPCID$, I) ALTRET( OOPS);
       54     2624    3           DO I = 1 TO XSS_MAX_LCID;
       55     2625    3               MAPPCID( I) = %NULL;
       56     2626    3               END;
       57     2627    2           MAPPCID( 0) = 0;  /* unused */
       58     2628    2           LASTGET = XSS_MAX_LCID;
       59     2629    2           CALL XSP$INITLISTS;  /* init syntax name lists */
       60     2630    2           CTXINITED = %TRUE;
       61     2631    2           END;
       62     2632            /* allocate space for the context block */
       63     2633    1       CALL XSS$GETMEM( BLKX, CTX$, SIZEC( PCTX)) ALTRET( OOPS);
       64     2634            /* Allocate and initialize connection's context map */
       65     2635    1       CALL XSS$GETMEM( CBLKX, CMAP$, 8 * %XSP_MAX_CTXTID) ALTRET( NOPE);
       66     2636    2       DO I = 0 TO %XSP_MAX_CTXTID - 1;
       67     2637    2           CMAP( I) = '0'B;
       68     2638    2           END;
       69     2639            /* if connection id specified, try to use it */
       70     2640    2       IF ADDR( PCID) ~= ADDR( NIL) THEN DO;
       71     2641    2           I = PCID;
       72     2642    2           IF MAPPCID( I) = %NULL THEN
       73     2643    2               GOTO FOUND;
       74     2644    2           GOTO NOPE;
       75     2645    2           END;
       76     2646            /* find a free slot with aid of roving pointer */
       77     2647    1       I = LASTGET;
       78     2648    1   LOOP:
       79     2649    2       DO WHILE( %TRUE);
       80     2650    2           I = I + 1;
       81     2651    2           IF I > XSS_MAX_LCID THEN
       82     2652    2               I = 1;
       83     2653    3           IF I = LASTGET THEN DO;
       84     2654                    /* We cycled through all the slots and none were free */
       85     2655    3               CALL XSS$RELMEM( CBLKX);
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:4    
       86     2656    3   NOPE:
       87     2657    3               CALL XSS$RELMEM( BLKX);
       88     2658    3               CTX$ = ADDR( NIL);
       89     2659    3   OOPS:
       90     2660    3               ALTRETURN;
       91     2661    3               END;
       92     2662    2           IF MAPPCID( I) = %NULL THEN
       93     2663    2               EXIT LOOP;
       94     2664    2           END;
       95     2665            /* found a free slot */
       96     2666    1   FOUND:
       97     2667    1       MAPPCID( I) = BLKX;
       98     2668    1       CALL XSS$BUFPTR( BLKX, CTX$);  /* now point at buffer within mem block */
       99     2669    1       PCTX = XSP_PCTX;
      100     2670    1       PCTX.PCID = I;
      101     2671    1       PCTX.STATE = %XSP_PST_I0;  /* Idle, no connection */
      102     2672    1       PCTX.CTXTMAPX = CBLKX;
      103     2673            /* update roving pointer for next time */
      104     2674    1       LASTGET = I;
      105     2675    1       RETURN;
      106     2676        %EJECT;
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:5    
      107     2677        /*F*    NAME:   XSP$RELCTX
      108     2678                PURPOSE:
      109     2679                    This routine is called to release a Presentation context block.
      110     2680                DESCRIPTION:
      111     2681                    The memory block for the context is released.
      112     2682                    The ALTRETURN is taken if the passed pointer doesn't point at
      113     2683                    a Presentation context.
      114     2684                INPUT:  CTX$ is the address of the context block to release.
      115     2685                OUTPUT: none.
      116     2686        */
      117     2687    1   XSP$RELCTX: ENTRY( CTX$) ALTRET;
      118     2688
      119     2689    1       I = PCTX.PCID;
      120     2690            /* consistency checks */
      121     2691    1       BLKX = MAPPCID( I);
      122     2692    1       IF BLKX = %NULL THEN
      123     2693    1           ALTRETURN;
      124     2694    1       TMP$ = PINCRW( CTX$, -2);  /*N* note hardwired B$BLOCK size here */
      125     2695    1       IF BLKX ~= TMP$->B$BLOCK.BLKX THEN
      126     2696    1           ALTRETURN;
      127     2697            /* looks good.. first release the context map */
      128     2698    1       CBLKX = PCTX.CTXTMAPX;
      129     2699    1       CALL XSS$RELMEM( CBLKX) ALTRET( OOPS);
      130     2700            /* then release connection context block */
      131     2701    1       CALL XSS$RELMEM( BLKX) ALTRET( OOPS);
      132     2702    1       MAPPCID( I) = %NULL;
      133     2703    1       RETURN;
      134     2704
      135     2705    1       END XSP$GETCTX;
      136     2706        %EOD;

PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:6    
--  Include file information  --

   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSP$GETCTX.

   Procedure XSP$GETCTX requires 203 words for executable code.
   Procedure XSP$GETCTX requires 14 words of local(AUTO) storage.

PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:7    

 Object Unit name= XSP$GETCTX                                 File name= XSP$DATA.:XSA1TOU
 UTS= OCT 01 '97 11:59:17.04 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     13     15  XSP$GETCTX
    1   Data  even  none     3      3  XSP$GETCTX
    2   Proc  even  none   203    313  XSP$GETCTX
    3  RoData even  none    11     13  XSP$GETCTX

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  XSP$GETCTX
     2    233          yes     yes      Std        1  XSP$RELCTX

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSP_PCTX                           1      0  XSP_MAPPCID$
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:8    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       3 XSS$GETMEM
 yes     yes           Std       0 XSP$INITLISTS
 yes     yes           Std       1 XSS$RELMEM
 yes     yes           Std       2 XSS$BUFPTR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSS_MAX_LCID

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:9    


        1        1        /*M*    XSP$DATA        Initialization and memory management.           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DDA */
        8        8        /*F*    NAME:   XSP$GETCTX
        9        9                PURPOSE:
       10       10                    This routine is called to obtain a new Presentation context block.
       11       11                DESCRIPTION:
       12       12                    Space for a new context block is allocated.
       13       13                    The ALTRETURN is taken if space is not available.
       14       14                INPUT:  none.
       15       15                OUTPUT: CTX$ gets the address of the new context block.
       16       16                        PCID, if specified, is the desired connection id.
       17       17        */
       18       18        XSP$GETCTX: PROC( CTX$, PCID) ALTRET;

     18  2 000000   000000 700200 xent  XSP$GETCTX   TSX0  ! X66_AUTO_2
         2 000001   000016 000002                    ZERO    14,2

       19       19        %INCLUDE XSS_SESSION_E;
       20      584        %INCLUDE XSP_PRESENTATION_E;
       21      683        %INCLUDE XSP_INTERNAL_E;
       22      957        %INCLUDE XSP_INTERNAL_M;
       23     1618            %XSP$CTXTMAP( NAME=CMAP, STCLASS="BASED( CMAP$)");
       24     1659            %XSP$PCTX( NAME=PCTX, STCLASS="BASED( CTX$)");
       25     1815            %XSP$PCTX( NAME=XSP_PCTX, STCLASS="CONSTANT SYMDEF");
       26     1971        %INCLUDE XSS_INTERNAL_M;
       27     2560            %XSS$MEMBLK( NAME=B$BLOCK);
       28     2598
       29     2599    1       DCL XSP$INITLISTS ENTRY ALTRET;
       30     2600    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
       31     2601    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
       32     2602    1       DCL XSS$RELMEM ENTRY(1) ALTRET;
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:10   
       33     2603
       34     2604    1       DCL XSS_MAX_LCID SBIN SYMREF;
       35     2605
       36     2606    1       DCL XSP_MAPPCID$ PTR INIT( ADDR( NIL)) STATIC SYMDEF;
       37     2607
       38     2608    1       DCL BLKX UBIN HALF HALIGNED;
       39     2609    1       DCL CBLKX UBIN HALF HALIGNED;
       40     2610    1       DCL CMAP$ PTR;
       41     2611    1       DCL CTXINITED BIT(1) STATIC INIT( %FALSE);  /* set iff CTX array init'd */
       42     2612    1       DCL CTX$ PTR;
       43     2613    1       DCL I SBIN;
       44     2614    1       DCL LASTGET SBIN STATIC;
       45     2615    1       DCL MAPPCID(0:0) UBIN HALF BASED( XSP_MAPPCID$) HALIGNED;
       46     2616    1       DCL PCID SBIN;
       47     2617    1       DCL TMP$ PTR;
       48     2618        %EJECT;
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:11   
       49     2619    2       IF NOT CTXINITED THEN DO;

   2619  2 000002   000001 234000 1                  SZN     CTXINITED
         2 000003   000052 604000 2                  TMI     s:2633

       50     2620                /* figure out how many bytes to allocate for MAPPCID array */
       51     2621    2           I = 2 * ( 1 + XSS_MAX_LCID);

   2621  2 000004   000000 235000 xsym               LDA     XSS_MAX_LCID
         2 000005   000001 735000                    ALS     1
         2 000006   000002 035007                    ADLA    2,DL
         2 000007   200010 755100                    STA     I,,AUTO

       52     2622                /* allocate the space and set it up */
       53     2623    2           CALL XSS$GETMEM( BLKX, XSP_MAPPCID$, I) ALTRET( OOPS);

   2623  2 000010   200010 630500                    EPPR0   I,,AUTO
         2 000011   200014 450500                    STP0    TMP$+3,,AUTO
         2 000012   000001 236000 3                  LDQ     1
         2 000013   200013 756100                    STQ     TMP$+2,,AUTO
         2 000014   200005 631500                    EPPR1   BLKX,,AUTO
         2 000015   200012 451500                    STP1    TMP$+1,,AUTO
         2 000016   200012 630500                    EPPR0   TMP$+1,,AUTO
         2 000017   000000 631400 3                  EPPR1   0
         2 000020   000000 701000 xent               TSX1    XSS$GETMEM
         2 000021   000162 702000 2                  TSX2    OOPS

       54     2624    3           DO I = 1 TO XSS_MAX_LCID;

   2624  2 000022   000001 235007                    LDA     1,DL
         2 000023   200010 755100                    STA     I,,AUTO
         2 000024   000034 710000 2                  TRA     s:2626+1

       55     2625    3               MAPPCID( I) = %NULL;

   2625  2 000025   200010 235100                    LDA     I,,AUTO
         2 000026   000001 735000                    ALS     1
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:12   
         2 000027   000000 470400 1                  LDP0    XSP_MAPPCID$
         2 000030   000105 101400                    MRL     fill='000'O
         2 000031   000002 000004 3                  ADSC9   2                        cn=0,n=4
         2 000032   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2

       56     2626    3               END;

   2626  2 000033   200010 054100                    AOS     I,,AUTO
         2 000034   200010 236100                    LDQ     I,,AUTO
         2 000035   000000 116000 xsym               CMPQ    XSS_MAX_LCID
         2 000036   000025 604400 2                  TMOZ    s:2625

       57     2627    2           MAPPCID( 0) = 0;  /* unused */

   2627  2 000037   000000 470400 1                  LDP0    XSP_MAPPCID$
         2 000040   000100 101400                    MRL     fill='000'O
         2 000041   000003 000004 3                  ADSC9   3                        cn=0,n=4
         2 000042   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

       58     2628    2           LASTGET = XSS_MAX_LCID;

   2628  2 000043   000000 235000 xsym               LDA     XSS_MAX_LCID
         2 000044   000002 755000 1                  STA     LASTGET

       59     2629    2           CALL XSP$INITLISTS;  /* init syntax name lists */

   2629  2 000045   000003 631400 3                  EPPR1   3
         2 000046   000000 701000 xent               TSX1    XSP$INITLISTS
         2 000047   000000 011000                    NOP     0

       60     2630    2           CTXINITED = %TRUE;

   2630  2 000050   400000 236003                    LDQ     -131072,DU
         2 000051   000001 756000 1                  STQ     CTXINITED

       61     2631    2           END;

PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:13   
       62     2632            /* allocate space for the context block */
       63     2633    1       CALL XSS$GETMEM( BLKX, CTX$, SIZEC( PCTX)) ALTRET( OOPS);

   2633  2 000052   000006 236000 3                  LDQ     6
         2 000053   200014 756100                    STQ     TMP$+3,,AUTO
         2 000054   200003 236100                    LDQ     @CTX$,,AUTO
         2 000055   200013 756100                    STQ     TMP$+2,,AUTO
         2 000056   200005 630500                    EPPR0   BLKX,,AUTO
         2 000057   200012 450500                    STP0    TMP$+1,,AUTO
         2 000060   200012 630500                    EPPR0   TMP$+1,,AUTO
         2 000061   000000 631400 3                  EPPR1   0
         2 000062   000000 701000 xent               TSX1    XSS$GETMEM
         2 000063   000162 702000 2                  TSX2    OOPS

       64     2634            /* Allocate and initialize connection's context map */
       65     2635    1       CALL XSS$GETMEM( CBLKX, CMAP$, 8 * %XSP_MAX_CTXTID) ALTRET( NOPE);

   2635  2 000064   000010 236000 3                  LDQ     8
         2 000065   200014 756100                    STQ     TMP$+3,,AUTO
         2 000066   200007 630500                    EPPR0   CMAP$,,AUTO
         2 000067   200013 450500                    STP0    TMP$+2,,AUTO
         2 000070   200006 631500                    EPPR1   CBLKX,,AUTO
         2 000071   200012 451500                    STP1    TMP$+1,,AUTO
         2 000072   200012 630500                    EPPR0   TMP$+1,,AUTO
         2 000073   000000 631400 3                  EPPR1   0
         2 000074   000000 701000 xent               TSX1    XSS$GETMEM
         2 000075   000151 702000 2                  TSX2    NOPE

       66     2636    2       DO I = 0 TO %XSP_MAX_CTXTID - 1;

   2636  2 000076   200010 450100                    STZ     I,,AUTO
         2 000077   000106 710000 2                  TRA     s:2638+1

       67     2637    2           CMAP( I) = '0'B;

   2637  2 000100   200010 235100                    LDA     I,,AUTO
         2 000101   000001 735000                    ALS     1
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:14   
         2 000102   200007 470500                    LDP0    CMAP$,,AUTO
         2 000103   000000 450105                    STZ     0,AL,PR0
         2 000104   000001 450105                    STZ     1,AL,PR0

       68     2638    2           END;

   2638  2 000105   200010 054100                    AOS     I,,AUTO
         2 000106   200010 235100                    LDA     I,,AUTO
         2 000107   000021 115007                    CMPA    17,DL
         2 000110   000100 604400 2                  TMOZ    s:2637

       69     2639            /* if connection id specified, try to use it */
       70     2640    2       IF ADDR( PCID) ~= ADDR( NIL) THEN DO;

   2640  2 000111   200004 236100                    LDQ     @PCID,,AUTO
         2 000112   000004 116000 3                  CMPQ    4
         2 000113   000130 600000 2                  TZE     s:2647

       71     2641    2           I = PCID;

   2641  2 000114   200004 470500                    LDP0    @PCID,,AUTO
         2 000115   000000 235100                    LDA     0,,PR0
         2 000116   200010 755100                    STA     I,,AUTO

       72     2642    2           IF MAPPCID( I) = %NULL THEN

   2642  2 000117   000001 735000                    ALS     1
         2 000120   000000 471400 1                  LDP1    XSP_MAPPCID$
         2 000121   000100 101505                    MRL     fill='000'O
         2 000122   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 000123   200012 000004                    ADSC9   TMP$+1,,AUTO             cn=0,n=4
         2 000124   200012 236100                    LDQ     TMP$+1,,AUTO
         2 000125   777777 116007                    CMPQ    -1,DL
         2 000126   000175 600000 2                  TZE     FOUND

       73     2643    2               GOTO FOUND;
       74     2644    2           GOTO NOPE;
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:15   

   2644  2 000127   000151 710000 2                  TRA     NOPE

       75     2645    2           END;
       76     2646            /* find a free slot with aid of roving pointer */
       77     2647    1       I = LASTGET;

   2647  2 000130   000002 235000 1                  LDA     LASTGET
         2 000131   200010 755100                    STA     I,,AUTO

       78     2648    1   LOOP:
       79     2649    2       DO WHILE( %TRUE);

   2649  2 000132                       LOOP         null
       80     2650    2           I = I + 1;

   2650  2 000132   200010 054100                    AOS     I,,AUTO

       81     2651    2           IF I > XSS_MAX_LCID THEN

   2651  2 000133   200010 236100                    LDQ     I,,AUTO
         2 000134   000000 116000 xsym               CMPQ    XSS_MAX_LCID
         2 000135   000140 604400 2                  TMOZ    s:2653

       82     2652    2               I = 1;

   2652  2 000136   000001 235007                    LDA     1,DL
         2 000137   200010 755100                    STA     I,,AUTO

       83     2653    3           IF I = LASTGET THEN DO;

   2653  2 000140   200010 236100                    LDQ     I,,AUTO
         2 000141   000002 116000 1                  CMPQ    LASTGET
         2 000142   000163 601000 2                  TNZ     s:2662

       84     2654                    /* We cycled through all the slots and none were free */
       85     2655    3               CALL XSS$RELMEM( CBLKX);
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:16   

   2655  2 000143   200006 630500                    EPPR0   CBLKX,,AUTO
         2 000144   200012 450500                    STP0    TMP$+1,,AUTO
         2 000145   200012 630500                    EPPR0   TMP$+1,,AUTO
         2 000146   000011 631400 3                  EPPR1   9
         2 000147   000000 701000 xent               TSX1    XSS$RELMEM
         2 000150   000000 011000                    NOP     0

       86     2656    3   NOPE:
       87     2657    3               CALL XSS$RELMEM( BLKX);

   2657  2 000151   200005 630500       NOPE         EPPR0   BLKX,,AUTO
         2 000152   200012 450500                    STP0    TMP$+1,,AUTO
         2 000153   200012 630500                    EPPR0   TMP$+1,,AUTO
         2 000154   000011 631400 3                  EPPR1   9
         2 000155   000000 701000 xent               TSX1    XSS$RELMEM
         2 000156   000000 011000                    NOP     0

       88     2658    3               CTX$ = ADDR( NIL);

   2658  2 000157   000004 236000 3                  LDQ     4
         2 000160   200003 470500                    LDP0    @CTX$,,AUTO
         2 000161   000000 756100                    STQ     0,,PR0

       89     2659    3   OOPS:
       90     2660    3               ALTRETURN;

   2660  2 000162   000000 702200 xent  OOPS         TSX2  ! X66_AALT

       91     2661    3               END;
       92     2662    2           IF MAPPCID( I) = %NULL THEN

   2662  2 000163   200010 235100                    LDA     I,,AUTO
         2 000164   000001 735000                    ALS     1
         2 000165   000000 470400 1                  LDP0    XSP_MAPPCID$
         2 000166   000100 101505                    MRL     fill='000'O
         2 000167   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:17   
         2 000170   200012 000004                    ADSC9   TMP$+1,,AUTO             cn=0,n=4
         2 000171   200012 236100                    LDQ     TMP$+1,,AUTO
         2 000172   777777 116007                    CMPQ    -1,DL
         2 000173   000175 600000 2                  TZE     FOUND

       93     2663    2               EXIT LOOP;
       94     2664    2           END;

   2664  2 000174   000132 710000 2                  TRA     LOOP

       95     2665            /* found a free slot */
       96     2666    1   FOUND:
       97     2667    1       MAPPCID( I) = BLKX;

   2667  2 000175   000000 470400 1     FOUND        LDP0    XSP_MAPPCID$
         2 000176   000105 100500                    MLR     fill='000'O
         2 000177   200005 000002                    ADSC9   BLKX,,AUTO               cn=0,n=2
         2 000200   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2

       98     2668    1       CALL XSS$BUFPTR( BLKX, CTX$);  /* now point at buffer within mem block */

   2668  2 000201   200003 236100                    LDQ     @CTX$,,AUTO
         2 000202   200013 756100                    STQ     TMP$+2,,AUTO
         2 000203   200005 630500                    EPPR0   BLKX,,AUTO
         2 000204   200012 450500                    STP0    TMP$+1,,AUTO
         2 000205   200012 630500                    EPPR0   TMP$+1,,AUTO
         2 000206   000012 631400 3                  EPPR1   10
         2 000207   000000 701000 xent               TSX1    XSS$BUFPTR
         2 000210   000000 011000                    NOP     0

       99     2669    1       PCTX = XSP_PCTX;

   2669  2 000211   200003 470500                    LDP0    @CTX$,,AUTO
         2 000212   000000 471500                    LDP1    0,,PR0
         2 000213   000100 100400                    MLR     fill='000'O
         2 000214   000000 000064 0                  ADSC9   XSP_PCTX                 cn=0,n=52
         2 000215   100000 000064                    ADSC9   0,,PR1                   cn=0,n=52
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:18   

      100     2670    1       PCTX.PCID = I;

   2670  2 000216   000000 471500                    LDP1    0,,PR0
         2 000217   200010 236100                    LDQ     I,,AUTO
         2 000220   000022 736000                    QLS     18
         2 000221   100001 552120                    STBQ    1,'20'O,PR1

      101     2671    1       PCTX.STATE = %XSP_PST_I0;  /* Idle, no connection */

   2671  2 000222   000000 471500                    LDP1    0,,PR0
         2 000223   001000 236003                    LDQ     512,DU
         2 000224   100000 552140                    STBQ    0,'40'O,PR1

      102     2672    1       PCTX.CTXTMAPX = CBLKX;

   2672  2 000225   000000 471500                    LDP1    0,,PR0
         2 000226   200006 220100                    LDX0    CBLKX,,AUTO
         2 000227   100014 440100                    SXL0    12,,PR1

      103     2673            /* update roving pointer for next time */
      104     2674    1       LASTGET = I;

   2674  2 000230   200010 235100                    LDA     I,,AUTO
         2 000231   000002 755000 1                  STA     LASTGET

      105     2675    1       RETURN;

   2675  2 000232   000000 702200 xent               TSX2  ! X66_ARET

      106     2676        %EJECT;
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:19   
      107     2677        /*F*    NAME:   XSP$RELCTX
      108     2678                PURPOSE:
      109     2679                    This routine is called to release a Presentation context block.
      110     2680                DESCRIPTION:
      111     2681                    The memory block for the context is released.
      112     2682                    The ALTRETURN is taken if the passed pointer doesn't point at
      113     2683                    a Presentation context.
      114     2684                INPUT:  CTX$ is the address of the context block to release.
      115     2685                OUTPUT: none.
      116     2686        */
      117     2687    1   XSP$RELCTX: ENTRY( CTX$) ALTRET;

   2687  2 000233   000000 700200 xent  XSP$RELCTX   TSX0  ! X66_AUTO_2
         2 000234   000016 000002                    ZERO    14,2

      118     2688
      119     2689    1       I = PCTX.PCID;

   2689  2 000235   200003 470500                    LDP0    @CTX$,,AUTO
         2 000236   000000 471500                    LDP1    0,,PR0
         2 000237   100001 236100                    LDQ     1,,PR1
         2 000240   000022 772000                    QRL     18
         2 000241   000777 376007                    ANQ     511,DL
         2 000242   200010 756100                    STQ     I,,AUTO

      120     2690            /* consistency checks */
      121     2691    1       BLKX = MAPPCID( I);

   2691  2 000243   200010 235100                    LDA     I,,AUTO
         2 000244   000001 735000                    ALS     1
         2 000245   000000 471400 1                  LDP1    XSP_MAPPCID$
         2 000246   000100 100505                    MLR     fill='000'O
         2 000247   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         2 000250   200005 000002                    ADSC9   BLKX,,AUTO               cn=0,n=2

      122     2692    1       IF BLKX = %NULL THEN

PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:20   
   2692  2 000251   200005 220100                    LDX0    BLKX,,AUTO
         2 000252   777777 100003                    CMPX0   -1,DU
         2 000253   000255 601000 2                  TNZ     s:2694

      123     2693    1           ALTRETURN;

   2693  2 000254   000000 702200 xent               TSX2  ! X66_AALT

      124     2694    1       TMP$ = PINCRW( CTX$, -2);  /*N* note hardwired B$BLOCK size here */

   2694  2 000255   000000 236100                    LDQ     0,,PR0
         2 000256   777776 036003                    ADLQ    -2,DU
         2 000257   200011 756100                    STQ     TMP$,,AUTO

      125     2695    1       IF BLKX ~= TMP$->B$BLOCK.BLKX THEN

   2695  2 000260   200011 473500                    LDP3    TMP$,,AUTO
         2 000261   300000 721100                    LXL1    0,,PR3
         2 000262   200005 101100                    CMPX1   BLKX,,AUTO
         2 000263   000265 600000 2                  TZE     s:2698

      126     2696    1           ALTRETURN;

   2696  2 000264   000000 702200 xent               TSX2  ! X66_AALT

      127     2697            /* looks good.. first release the context map */
      128     2698    1       CBLKX = PCTX.CTXTMAPX;

   2698  2 000265   000000 474500                    LDP4    0,,PR0
         2 000266   400014 722100                    LXL2    12,,PR4
         2 000267   200006 742100                    STX2    CBLKX,,AUTO

      129     2699    1       CALL XSS$RELMEM( CBLKX) ALTRET( OOPS);

   2699  2 000270   200006 634500                    EPPR4   CBLKX,,AUTO
         2 000271   200012 454500                    STP4    TMP$+1,,AUTO
         2 000272   200012 630500                    EPPR0   TMP$+1,,AUTO
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:21   
         2 000273   000011 631400 3                  EPPR1   9
         2 000274   000000 701000 xent               TSX1    XSS$RELMEM
         2 000275   000162 702000 2                  TSX2    OOPS

      130     2700            /* then release connection context block */
      131     2701    1       CALL XSS$RELMEM( BLKX) ALTRET( OOPS);

   2701  2 000276   200005 630500                    EPPR0   BLKX,,AUTO
         2 000277   200012 450500                    STP0    TMP$+1,,AUTO
         2 000300   200012 630500                    EPPR0   TMP$+1,,AUTO
         2 000301   000011 631400 3                  EPPR1   9
         2 000302   000000 701000 xent               TSX1    XSS$RELMEM
         2 000303   000162 702000 2                  TSX2    OOPS

      132     2702    1       MAPPCID( I) = %NULL;

   2702  2 000304   200010 235100                    LDA     I,,AUTO
         2 000305   000001 735000                    ALS     1
         2 000306   000000 470400 1                  LDP0    XSP_MAPPCID$
         2 000307   000105 101400                    MRL     fill='000'O
         2 000310   000002 000004 3                  ADSC9   2                        cn=0,n=4
         2 000311   000000 000002                    ADSC9   0,A,PR0                  cn=0,n=2

      133     2703    1       RETURN;

   2703  2 000312   000000 702200 xent               TSX2  ! X66_ARET

XSP_PCTX
 Sect OctLoc
   0     000   000000 000000   000000 000***   000000 000000   000000 000000    ................
   0     004   000000 000000   000000 000000   777777 777777   000000 000000    ................
   0     010   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     014   000000 777777                                                    ....

XSP_MAPPCID$
 Sect OctLoc
   1     000   000000 006014                                                    ....
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:22   

CTXINITED
 Sect OctLoc
   1     001   0***** ******                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000003 000000   000000 006000   000000 777777   000000 000000    ................
   3     004   000000 006014   000000 000064   000005 006000   000000 000220    .......4........
   3     010   000007 006000   000001 000000   000002 000000                    ............
      134     2704
      135     2705    1       END XSP$GETCTX;
      136     2706        %EOD;

PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:23   
--  Include file information  --

   XSS_INTERNAL_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSP$GETCTX.
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:24   

 **** Variables and constants ****

  ****  Section 000 RoData XSP$GETCTX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(468)   r     1 XSP_PCTX

  ****  Section 001  Data  XSP$GETCTX

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     1-0-0/b BIT         r     1 CTXINITED                  2-0-0/w SBIN        r     1 LASTGET
     0-0-0/w PTR         r     1 XSP_MAPPCID$

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CTX$                      4-0-0/w PTR         r     1 @PCID
     5-0-0/h UBIN(18)    r     1 BLKX                       6-0-0/h UBIN(18)    r     1 CBLKX
     7-0-0/w PTR         r     1 CMAP$                     *0-0-0/w PTR         r     1 CTX$
    10-0-0/w SBIN        r     1 I                         *0-0-0/w SBIN        r     1 PCID
    11-0-0/w PTR         r     1 TMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 XSS_MAX_LCID

  ****  BASED and DCB variables  ****

PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:25   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 B$BLOCK                    0-0-0/w STRC(72)    r     1 CMAP(0:0)
     0-0-0/h UBIN(18)    r     1 MAPPCID(0:0)
     0-0-0/w STRC(468)   r     1 PCTX


   Procedure XSP$GETCTX requires 203 words for executable code.
   Procedure XSP$GETCTX requires 14 words of local(AUTO) storage.
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:26   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:27   
          MINI XREF LISTING

B$BLOCK.BLKX
      2592**DCL      2695>>IF
B$BLOCK.BLNKX
      2594**DCL      2595--REDEF
BLKX
      2608**DCL      2623<>CALL     2633<>CALL     2657<>CALL     2667>>ASSIGN   2668<>CALL     2691<<ASSIGN
      2692>>IF       2695>>IF       2701<>CALL
CBLKX
      2609**DCL      2635<>CALL     2655<>CALL     2672>>ASSIGN   2698<<ASSIGN   2699<>CALL
CMAP
      1635**DCL      2637<<ASSIGN
CMAP$
      2610**DCL      1635--IMP-PTR  2635<>CALL     2637>>ASSIGN
CTX$
      2612**DCL        18--PROC     1677--IMP-PTR  2633<>CALL     2658<<ASSIGN   2668<>CALL     2669>>ASSIGN
      2670>>ASSIGN   2671>>ASSIGN   2672>>ASSIGN   2687--ENTRY    2689>>ASSIGN   2694>>ASSIGN   2698>>ASSIGN
CTXINITED
      2611**DCL      2619>>IF       2630<<ASSIGN
FOUND
      2667**LABEL    2643--GOTO
I
      2613**DCL      2621<<ASSIGN   2623<>CALL     2624<<DOINDEX  2625>>ASSIGN   2636<<DOINDEX  2637>>ASSIGN
      2641<<ASSIGN   2642>>IF       2647<<ASSIGN   2650<<ASSIGN   2650>>ASSIGN   2651>>IF       2652<<ASSIGN
      2653>>IF       2662>>IF       2667>>ASSIGN   2670>>ASSIGN   2674>>ASSIGN   2689<<ASSIGN   2691>>ASSIGN
      2702>>ASSIGN
LASTGET
      2614**DCL      2628<<ASSIGN   2647>>ASSIGN   2653>>IF       2674<<ASSIGN
LOOP
      2649**LABEL    2663--EXIT
MAPPCID
      2615**DCL      2625<<ASSIGN   2627<<ASSIGN   2642>>IF       2662>>IF       2667<<ASSIGN   2691>>ASSIGN
      2702<<ASSIGN
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:28   
NOPE
      2657**LABEL    2635--CALLALT  2644--GOTO
OOPS
      2660**LABEL    2623--CALLALT  2633--CALLALT  2699--CALLALT  2701--CALLALT
PCID
      2616**DCL        18--PROC     2640--IF       2641>>ASSIGN
PCTX
      1677**DCL      2633--CALL     2669<<ASSIGN
PCTX.ACTDCSMASK
      1763**DCL      1766--REDEF
PCTX.CTXTMAPX
      1813**DCL      2672<<ASSIGN   2698>>ASSIGN
PCTX.CURDCSMASK
      1748**DCL      1751--REDEF
PCTX.HISTZ
      1806**DCL      1807--REDEF
PCTX.INIDCSMASK
      1756**DCL      1759--REDEF
PCTX.PCID
      1735**DCL      2670<<ASSIGN   2689>>ASSIGN
PCTX.STATE
      1694**DCL      2671<<ASSIGN
TMP$
      2617**DCL      2694<<ASSIGN   2695>>IF
XSP$INITLISTS
      2599**DCL-ENT  2629--CALL
XSP_MAPPCID$
      2606**DCL      2615--IMP-PTR  2623<>CALL     2625>>ASSIGN   2627>>ASSIGN   2642>>IF       2662>>IF
      2667>>ASSIGN   2691>>ASSIGN   2702>>ASSIGN
XSP_PCTX
      1833**DCL      2669>>ASSIGN
XSP_PCTX.ACTDCSMASK
      1919**DCL      1922--REDEF
XSP_PCTX.CURDCSMASK
      1904**DCL      1907--REDEF
XSP_PCTX.HISTZ
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:29   
      1962**DCL      1963--REDEF
XSP_PCTX.INIDCSMASK
      1912**DCL      1915--REDEF
XSS$BUFPTR
      2600**DCL-ENT  2668--CALL
XSS$GETMEM
      2601**DCL-ENT  2623--CALL     2633--CALL     2635--CALL
XSS$RELMEM
      2602**DCL-ENT  2655--CALL     2657--CALL     2699--CALL     2701--CALL
XSS_MAX_LCID
      2604**DCL      2621>>ASSIGN   2624>>DOINDEX  2628>>ASSIGN   2651>>IF
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:30   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=XSP$GETCTX File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:31   
              MINI UREF LISTING

XSP$GETCTX      18**PROC
XSP$RELCTX    2687**ENTRY

PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:32   
      137        1        /*T***********************************************************/
      138        2        /*T*                                                         */
      139        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      140        4        /*T*                                                         */
      141        5        /*T***********************************************************/
      142        6        /*F*    NAME:   XSP$CTXPTR
      143        7                DESCRIPTION:
      144        8                    Given a PCID, this routine returns the address of the context
      145        9                    block for the associated connection.
      146       10                INPUT:  PCID is the Presentation connection identifier of interest.
      147       11                OUTPUT: CTX$ gets the address of that connection's context block.
      148       12        */
      149       13        XSP$CTXPTR: PROC( PCID, CTX$) ALTRET;
      150       14
      151       15    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      152       16
      153       17    1       DCL XSP_MAPPCID$ PTR SYMREF;
      154       18    1       DCL XSS_MAX_LCID SBIN SYMREF;
      155       19
      156       20    1       DCL BLKX UBIN HALF HALIGNED;
      157       21    1       DCL CTX$ PTR;
      158       22    1       DCL MAPPCID(0:0) UBIN HALF BASED( XSP_MAPPCID$) HALIGNED;
      159       23    1       DCL PCID SBIN;
      160       24
      161       25    1       IF PCID <= 0 OR PCID > XSS_MAX_LCID OR XSP_MAPPCID$ = ADDR( NIL) THEN
      162       26    1   OOPS:
      163       27    1           ALTRETURN;
      164       28    1       BLKX = MAPPCID( PCID);
      165       29    1       CALL XSS$BUFPTR( BLKX, CTX$) ALTRET( OOPS);
      166       30    1       RETURN;
      167       31
      168       32    1       END XSP$CTXPTR;
      169       33        %EOD;

PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:33   
      No diagnostics issued in procedure XSP$CTXPTR.

   Procedure XSP$CTXPTR requires 26 words for executable code.
   Procedure XSP$CTXPTR requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:34   

 Object Unit name= XSP$CTXPTR                                 File name= XSP$DATA.:XSA1TOU
 UTS= OCT 01 '97 11:59:24.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    26     32  XSP$CTXPTR
    1  RoData even  none     2      2  XSP$CTXPTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  XSP$CTXPTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSS$BUFPTR
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSP_MAPPCID$                          XSS_MAX_LCID
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:35   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:36   


      137        1        /*T***********************************************************/
      138        2        /*T*                                                         */
      139        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      140        4        /*T*                                                         */
      141        5        /*T***********************************************************/
      142        6        /*F*    NAME:   XSP$CTXPTR
      143        7                DESCRIPTION:
      144        8                    Given a PCID, this routine returns the address of the context
      145        9                    block for the associated connection.
      146       10                INPUT:  PCID is the Presentation connection identifier of interest.
      147       11                OUTPUT: CTX$ gets the address of that connection's context block.
      148       12        */
      149       13        XSP$CTXPTR: PROC( PCID, CTX$) ALTRET;

     13  0 000000   000000 700200 xent  XSP$CTXPTR   TSX0  ! X66_AUTO_2
         0 000001   000010 000002                    ZERO    8,2

      150       14
      151       15    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      152       16
      153       17    1       DCL XSP_MAPPCID$ PTR SYMREF;
      154       18    1       DCL XSS_MAX_LCID SBIN SYMREF;
      155       19
      156       20    1       DCL BLKX UBIN HALF HALIGNED;
      157       21    1       DCL CTX$ PTR;
      158       22    1       DCL MAPPCID(0:0) UBIN HALF BASED( XSP_MAPPCID$) HALIGNED;
      159       23    1       DCL PCID SBIN;
      160       24
      161       25    1       IF PCID <= 0 OR PCID > XSS_MAX_LCID OR XSP_MAPPCID$ = ADDR( NIL) THEN

     25  0 000002   200003 470500                    LDP0    @PCID,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000013 604400 0                  TMOZ    OOPS
         0 000005   000000 236100                    LDQ     0,,PR0
         0 000006   000000 116000 xsym               CMPQ    XSS_MAX_LCID
         0 000007   000013 605400 0                  TPNZ    OOPS
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:37   
         0 000010   000000 236000 xsym               LDQ     XSP_MAPPCID$
         0 000011   000000 116000 1                  CMPQ    0
         0 000012   000014 601000 0                  TNZ     s:28

      162       26    1   OOPS:
      163       27    1           ALTRETURN;

     27  0 000013   000000 702200 xent  OOPS         TSX2  ! X66_AALT

      164       28    1       BLKX = MAPPCID( PCID);

     28  0 000014   000001 735000                    ALS     1
         0 000015   000000 471400 xsym               LDP1    XSP_MAPPCID$
         0 000016   000100 100505                    MLR     fill='000'O
         0 000017   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         0 000020   200005 000002                    ADSC9   BLKX,,AUTO               cn=0,n=2

      165       29    1       CALL XSS$BUFPTR( BLKX, CTX$) ALTRET( OOPS);

     29  0 000021   200004 236100                    LDQ     @CTX$,,AUTO
         0 000022   200007 756100                    STQ     BLKX+2,,AUTO
         0 000023   200005 633500                    EPPR3   BLKX,,AUTO
         0 000024   200006 453500                    STP3    BLKX+1,,AUTO
         0 000025   200006 630500                    EPPR0   BLKX+1,,AUTO
         0 000026   000001 631400 1                  EPPR1   1
         0 000027   000000 701000 xent               TSX1    XSS$BUFPTR
         0 000030   000013 702000 0                  TSX2    OOPS

      166       30    1       RETURN;

     30  0 000031   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006014   000002 000000                                    ........
      167       31
      168       32    1       END XSP$CTXPTR;
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:38   
      169       33        %EOD;

PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:39   
      No diagnostics issued in procedure XSP$CTXPTR.
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:40   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CTX$                      3-0-0/w PTR         r     1 @PCID
     5-0-0/h UBIN(18)    r     1 BLKX                      *0-0-0/w PTR         r     1 CTX$
    *0-0-0/w SBIN        r     1 PCID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 XSP_MAPPCID$               0-0-0/w SBIN        r     1 XSS_MAX_LCID

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h UBIN(18)    r     1 MAPPCID(0:0)


   Procedure XSP$CTXPTR requires 26 words for executable code.
   Procedure XSP$CTXPTR requires 8 words of local(AUTO) storage.
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:41   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:42   
          MINI XREF LISTING

BLKX
        20**DCL        28<<ASSIGN     29<>CALL
CTX$
        21**DCL        13--PROC       29<>CALL
MAPPCID
        22**DCL        28>>ASSIGN
OOPS
        27**LABEL      29--CALLALT
PCID
        23**DCL        13--PROC       25>>IF         25>>IF         28>>ASSIGN
XSP_MAPPCID$
        17**DCL        22--IMP-PTR    25>>IF         28>>ASSIGN
XSS$BUFPTR
        15**DCL-ENT    29--CALL
XSS_MAX_LCID
        18**DCL        25>>IF
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:43   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=XSP$CTXPTR File=XSP$DATA.:XSA1TSI                             WED 10/01/97 11:59 Page:44   
              MINI UREF LISTING

XSP$CTXPTR      13**PROC

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:45   
      170        1        /*T***********************************************************/
      171        2        /*T*                                                         */
      172        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      173        4        /*T*                                                         */
      174        5        /*T***********************************************************/
      175        6        /*F*    NAME:   XSP$MISC
      176        7
      177        8                XSP$MISC is an enclosing routine with several ENTRYs for analyzing
      178        9                the Presentation FPT passed on a call to XSP$PRESENTATION.
      179       10                The ENTRYs initialize the appropriate Presentation context bitmasks
      180       11                in VBLK depending on the FPT.
      181       12                There are constant versions of the Presentation primitive FPTs here.
      182       13                Also, the global tables identifying the supported abstract and
      183       14                transfer syntaxes are located here.
      184       15        */
      185       16        XSP$MISC: PROC( VBLK) ALTRET;
      186       17        %INCLUDE XSS_SESSION_E;
      187      582        %INCLUDE XSP_PRESENTATION_E;
      188      681        %INCLUDE XSP_PRESENTATION_M;
      189     2167            %XSP$GENERIC( STCLASS="BASED( PFPT$)");
      190     2263            %XSP$ALTER_CONTEXT( STCLASS="BASED( PFPT$)");
      191     2324            %XSP$CONNECT( STCLASS="BASED( PFPT$)");
      192     2469            %XSP$RESYNCHRONIZE( STCLASS="BASED( PFPT$)");
      193     2574            %XSP$CTXTLIST( NAME=CLST, STCLASS="BASED( CLST$)");
      194     2601            %XSP$CTXTNAME( NAME=CNAM, STCLASS=BASED);
      195     2643            %XSP_PRIMITIVES( STCLASS="CONSTANT SYMDEF");  /* const Pres FPTs here */
      196     4342        %INCLUDE XSP_INTERNAL_E;
      197     4616        %INCLUDE XSP_INTERNAL_M;
      198     5277            %XSP$CTXTMAP( NAME=CMAP, STCLASS="BASED( CMAP$)");
      199     5318            %XSP$PCTX( NAME=PCTX, STCLASS="BASED( VBLK.CTX$)");
      200     5474            %XSP$VBLK( NAME=VBLK, STCLASS="");
      201     5620        %INCLUDE XSP_ASN1_M;
      202     5966            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
      203     5986        %INCLUDE UM_CP6;
      204     6838        %MACRO ERRORDEF( NAME=XSP_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      205     6839                         ERR#=0, SEV=0);
      206     6840            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='P',
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:46   
      207     6841                          MON='0'B, ERR#=ERR#, SEV=SEV);
      208     6842        %MEND;
      209     6843        %INCLUDE XSC_PERR_C;
      210     6920            %ERRORDEF( NAME=XSP_E$DFLT, STCLASS=SYMREF);
      211     6968            %ERRORDEF( NAME=XSP_E$CTXTID, ERR#=%E$CTXTID);
      212     7016            /*E*  ERROR:  XSP-E$CTXTID-0
      213     7017                MESSAGE:  DATA$->XSP_ASN1_FPT.CTXTID contains an illegal value.
      214     7018            */
      215     7019
      216     7020    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      217     7021    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
      218     7022
      219     7023    1       DCL AFPT$ PTR;
      220     7024    1       DCL CLST$ PTR;
      221     7025    1       DCL CMAP$ PTR;
      222     7026    1       DCL DFLT$ PTR;
      223     7027    1       DCL ERR SBIN;
      224     7028    1       DCL FLAG SBIN;
      225     7029        %EQU DATA = 1/*DATA*/;
      226     7030        %EQU DFLT = 2/*DFLT*/;
      227     7031        %EQU CTXT = 3/*CTXT*/;
      228     7032    1       DCL I SBIN;
      229     7033    1       DCL J SBIN;
      230     7034    1       DCL PCID SBIN;
      231     7035    1       DCL PFPT$ PTR;
      232     7036        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:47   
      233     7037        /****************************************************
      234     7038            GLOBAL LIST OF IMPLEMENTED TRANSFER SYNTAXES
      235     7039        ****************************************************/
      236     7040        %EQU MAXTFR = 1;  /* reserve space for this many names in table */
      237     7041            %XSP$CTXTNAME( NAME=T1, STCLASS=CONSTANT, CTXT="2-1-1");  /* 8825 */
      238     7083    1       DCL 1 XSP_TFRLIST STATIC SYMDEF,
      239     7084    1            2 CTXT$(0:%MAXTFR) PTR INIT(
      240     7085    1                   ADDR( NIL),     /* overlayed with COUNT by XSP$INITLISTS */
      241     7086    1                   ADDR( T1)),
      242     7087    1            2 COUNT(0:%MAXTFR) REDEF CTXT$ UBIN;
      243     7088        /****************************************************
      244     7089            GLOBAL LIST OF SUPPORTED ABSTRACT SYNTAXES
      245     7090        ****************************************************/
      246     7091        %EQU MAXABS = 8;  /* reserve space for this many names in table */
      247     7092            %XSP$CTXTNAME( NAME=A1, STCLASS=CONSTANT, CTXT="0-0");  /* bogus syntax */
      248     7134            %XSP$CTXTNAME( NAME=A2, STCLASS=CONSTANT, CTXT="2-2-1-0-1");  /* ACSE */
      249     7176    1       DCL 1 XSP_ABSLIST STATIC SYMDEF,
      250     7177    1            2 CTXT$(0:%MAXABS) PTR INIT(
      251     7178    1                   ADDR( NIL),     /* overlayed with COUNT by XSP$INITLISTS */
      252     7179    1                   ADDR( A1),
      253     7180    1                   ADDR( A2),
      254     7181    1                   ADDR( NIL)*6),
      255     7182    1            2 COUNT(0:%MAXABS) REDEF CTXT$ UBIN;
      256     7183        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:48   
      257     7184    1   XSP$DFLTMASKS: ENTRY( VBLK) ALTRET;
      258     7185    1       FLAG = %DFLT;
      259     7186    1       GOTO COMMON;
      260     7187    1   XSP$CTXTMASKS: ENTRY( VBLK) ALTRET;
      261     7188    1       FLAG = %CTXT;
      262     7189    1       GOTO COMMON;
      263     7190    1   XSP$DATAMASKS: ENTRY( VBLK) ALTRET;
      264     7191    1       FLAG = %DATA;
      265     7192    1   COMMON:
      266     7193    1       PFPT$ = VBLK.FPT$;
      267     7194    1       XSP$GENERIC.ERROR = '0'O;
      268     7195    1       CALL XSS$BUFPTR( PCTX.CTXTMAPX, CMAP$);
      269     7196        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:49   
      270     7197    1       IF FLAG = %CTXT THEN
      271     7198    1   CASE_CTXT:
      272     7199    2                            DO;
      273     7200    3           DO SELECT( XSP$GENERIC.FNC);
      274     7201    3               SELECT( %XSP_FNC_PALTREQ#,
      275     7202    3                       %XSP_FNC_PALTRSP#);
      276     7203    3                   CLST$ = XSP$ALTER_CONTEXT.CTXT$;
      277     7204    3               SELECT( %XSP_FNC_PCONREQ#,
      278     7205    3                       %XSP_FNC_PCONRSP#);
      279     7206    3                   CLST$ = XSP$CONNECT.CTXT$;
      280     7207    3               SELECT( %XSP_FNC_PRSXREQ#,
      281     7208    3                       %XSP_FNC_PRSXRSP#);
      282     7209    3                   CLST$ = XSP$RESYNCHRONIZE.CTXT$;
      283     7210    3               END;
      284     7211    2           IF CLST$ = ADDR( NIL) THEN
      285     7212    2               EXIT CASE_CTXT;
      286     7213                /* Analyze the proposals for definition and deletion */
      287     7214    3           DO I = 1 TO CLST.COUNT(0);
      288     7215    3   THISCTXT:
      289     7216    4               DO CASE( CLST.RESULT( I));
      290     7217    4                   CASE( %XSP_RSLT_ACCEPT);
      291     7218    4                   CASE( %XSP_RSLT_UREJECT);
      292     7219    4                   CASE( %XSP_RSLT_PREJECT);
      293     7220    4                   CASE( ELSE);  /* either DELETE or ptr to name */
      294     7221    5                       IF CLST.RESULT( I) < 0 THEN DO;
      295     7222    5                           CMAP.STATE( I) = %XSP_CMAP_LCLDEL;
      296     7223    5                           VBLK.DELBITS( I) = %TRUE;
      297     7224    5                           EXIT THISCTXT;
      298     7225    5                           END;
      299     7226    5                       DO J = 1 TO XSP_ABSLIST.COUNT(0);
      300     7227    5                           IF XSP_ABSLIST.CTXT$( J) ~= ADDR( NIL) AND
      301     7228    5                                   CLST.CTXT$( I)->CNAM.LEN = XSP_ABSLIST.CTXT$( J)->
              7228                                            CNAM.LEN AND
      302     7229    6                                   CLST.CTXT$( I)->CNAM.TXT = XSP_ABSLIST.CTXT$( J)->
              7229                                            CNAM.TXT THEN DO;
      303     7230                                    /* this abstract syntax is supported */
      304     7231    6                               CMAP.STATE( I) = %XSP_CMAP_LCLDEF;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:50   
      305     7232    6                               CMAP.ABSCTXTID( I) = J;
      306     7233    6                               VBLK.DEFBITS( I) = %TRUE;
      307     7234    6                               CLST.RESULT( I) = %XSP_RSLT_ACCEPT;
      308     7235    6                               EXIT THISCTXT;
      309     7236    6                               END;
      310     7237    5                           END;
      311     7238    4                       CLST.RESULT( I) = %XSP_RSLT_PREJECT;
      312     7239    4                   END;  /* do case CLST.RESULT */
      313     7240    3               END;  /* for each item in CLST */
      314     7241    2           END;  /* case CTXT */
      315     7242        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:51   
      316     7243    1       IF FLAG = %DFLT THEN
      317     7244    1   CASE_DFLT:
      318     7245    2                            DO;
      319     7246                /* Analyze the default context, if any */
      320     7247    2           DFLT$ = XSP$CONNECT.DFLT$;
      321     7248    2           IF DFLT$ = ADDR( NIL) THEN
      322     7249    2               GOTO DFLT_ERROR;
      323     7250    3           DO J = 1 TO XSP_ABSLIST.COUNT(0);
      324     7251    3               IF XSP_ABSLIST.CTXT$( J) ~= ADDR( NIL) AND
      325     7252    3                       DFLT$->CNAM.LEN = XSP_ABSLIST.CTXT$( J)->CNAM.LEN AND
      326     7253    4                       DFLT$->CNAM.TXT = XSP_ABSLIST.CTXT$( J)->CNAM.TXT THEN DO;
      327     7254    4                   CMAP.STATE(0) = %XSP_CMAP_LCLDEF;
      328     7255    4                   CMAP.ABSCTXTID(0) = J;
      329     7256    4                   XSP$CONNECT.DFLTRSLT = %XSP_RSLT_ACCEPT;
      330     7257    4                   EXIT CASE_DFLT;
      331     7258    4                   END;
      332     7259    3               END;
      333     7260    2   DFLT_ERROR:
      334     7261    2           XSP$CONNECT.DFLTRSLT = %XSP_RSLT_PREJECT;
      335     7262    2           XSP$CONNECT.ERROR = XSP_E$DFLT;
      336     7263    2           END;  /* case DFLT */
      337     7264        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:52   
      338     7265    1       IF FLAG = %DATA THEN
      339     7266    1   CASE_DATA:
      340     7267    2                            DO;
      341     7268    2           AFPT$ = XSP$GENERIC.DATA$;
      342     7269    3           DO WHILE( AFPT$ ~= ADDR( NIL));
      343     7270                    /* Analyze the contexts used in the User Data parameter */
      344     7271    3               IF AFPT.CTXTID = 0 THEN
      345     7272    3                   XSP$GENERIC.ERROR = XSP_E$CTXTID;
      346     7273    3               ELSE
      347     7274    3                   VBLK.DATBITS( AFPT.CTXTID) = %TRUE;
      348     7275    3               AFPT$ = AFPT.LINK$;
      349     7276    3               END;
      350     7277    2           END;
      351     7278        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:53   
      352     7279            /*N* DO WHAT'S NEEDED FOR VBLK.SPIBITS */
      353     7280            /* if there was some kind of error, bail out */
      354     7281    1       IF XSP$GENERIC.ERROR ~= '0'O THEN
      355     7282    1           ALTRETURN;
      356     7283    1       RETURN;
      357     7284        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:54   
      358     7285        /*F*    NAME:   XSP$INITLISTS
      359     7286
      360     7287                XSP$INITLISTS is called once, when Presentation is first being
      361     7288                initialized, in order to set up the global lists of supported
      362     7289                transfer and abstract syntaxes.
      363     7290        */
      364     7291    1   XSP$INITLISTS: ENTRY ALTRET;
      365     7292
      366     7293    1       XSP_TFRLIST.COUNT(0) = %MAXTFR;
      367     7294    1       XSP_ABSLIST.COUNT(0) = %MAXABS;
      368     7295    1       RETURN;
      369     7296
      370     7297    1       END XSP$MISC;
      371     7298        %EOD;

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:55   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSP$MISC.

   Procedure XSP$MISC requires 240 words for executable code.
   Procedure XSP$MISC requires 18 words of local(AUTO) storage.

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:56   

 Object Unit name= XSP$MISC                                   File name= XSP$DATA.:XSA1TOU
 UTS= OCT 01 '97 11:59:26.12 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS    116    164  XSP$MISC
    1   Data  even  none    11     13  XSP$MISC
    2   Proc  even  none   240    360  XSP$MISC
    3  RoData even  none     5      5  XSP$MISC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        1  XSP$MISC
     2      3          yes     yes      Std        1  XSP$DFLTMASKS
     2     10          yes     yes      Std        1  XSP$CTXTMASKS
     2     15          yes     yes      Std        1  XSP$DATAMASKS
     2    351          yes     yes      Std        0  XSP$INITLISTS
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:57   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0      0  XSP_GENERIC                        0     16  XSP_ACTIVITY_DISCARD
    0     20  XSP_ACTIVITY_END                   0     25  XSP_ACTIVITY_INTERRUPT
    0     27  XSP_ACTIVITY_RESUME                0     44  XSP_ACTIVITY_START
    0     52  XSP_ALTER_CONTEXT                  0     60  XSP_CAPABILITY_DATA
    0     63  XSP_CONNECT                        0     77  XSP_CONTROL_GIVE
    0    101  XSP_DATA                           0    104  XSP_EXPEDITED_DATA
    0    107  XSP_P_ABORT                        0    111  XSP_P_EXCEPTION_REPORT
    0    113  XSP_RELEASE                        0    116  XSP_RESYNCHRONIZE
    0    124  XSP_SYNC_MAJOR                     0    131  XSP_SYNC_MINOR
    0    136  XSP_TOKEN_GIVE                     0    140  XSP_TOKEN_PLEASE
    0    143  XSP_TYPED_DATA                     0    146  XSP_U_ABORT
    0    151  XSP_U_EXCEPTION_REPORT             0    154  XSP_E$CTXTID
    1      0  XSP_TFRLIST                        1      2  XSP_ABSLIST

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSS$BUFPTR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     XSP_E$DFLT
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:58   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:59   


      170        1        /*T***********************************************************/
      171        2        /*T*                                                         */
      172        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      173        4        /*T*                                                         */
      174        5        /*T***********************************************************/
      175        6        /*F*    NAME:   XSP$MISC
      176        7
      177        8                XSP$MISC is an enclosing routine with several ENTRYs for analyzing
      178        9                the Presentation FPT passed on a call to XSP$PRESENTATION.
      179       10                The ENTRYs initialize the appropriate Presentation context bitmasks
      180       11                in VBLK depending on the FPT.
      181       12                There are constant versions of the Presentation primitive FPTs here.
      182       13                Also, the global tables identifying the supported abstract and
      183       14                transfer syntaxes are located here.
      184       15        */
      185       16        XSP$MISC: PROC( VBLK) ALTRET;

     16  2 000000   000000 700200 xent  XSP$MISC     TSX0  ! X66_AUTO_1
         2 000001   000022 000001                    ZERO    18,1
         2 000002   000005 710000 2                  TRA     s:7185

      186       17        %INCLUDE XSS_SESSION_E;
      187      582        %INCLUDE XSP_PRESENTATION_E;
      188      681        %INCLUDE XSP_PRESENTATION_M;
      189     2167            %XSP$GENERIC( STCLASS="BASED( PFPT$)");
      190     2263            %XSP$ALTER_CONTEXT( STCLASS="BASED( PFPT$)");
      191     2324            %XSP$CONNECT( STCLASS="BASED( PFPT$)");
      192     2469            %XSP$RESYNCHRONIZE( STCLASS="BASED( PFPT$)");
      193     2574            %XSP$CTXTLIST( NAME=CLST, STCLASS="BASED( CLST$)");
      194     2601            %XSP$CTXTNAME( NAME=CNAM, STCLASS=BASED);
      195     2643            %XSP_PRIMITIVES( STCLASS="CONSTANT SYMDEF");  /* const Pres FPTs here */
      196     4342        %INCLUDE XSP_INTERNAL_E;
      197     4616        %INCLUDE XSP_INTERNAL_M;
      198     5277            %XSP$CTXTMAP( NAME=CMAP, STCLASS="BASED( CMAP$)");
      199     5318            %XSP$PCTX( NAME=PCTX, STCLASS="BASED( VBLK.CTX$)");
      200     5474            %XSP$VBLK( NAME=VBLK, STCLASS="");
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:60   
      201     5620        %INCLUDE XSP_ASN1_M;
      202     5966            %XSP_ASN1_FPT( FPTN=AFPT, STCLASS="BASED( AFPT$)");
      203     5986        %INCLUDE UM_CP6;
      204     6838        %MACRO ERRORDEF( NAME=XSP_ERROR, STCLASS="CONSTANT SYMDEF", LVL=1, LAST=";",
      205     6839                         ERR#=0, SEV=0);
      206     6840            %VLP_ERRCODE( FPTN=NAME, STCLASS=STCLASS, FCG='XS', MID='P',
      207     6841                          MON='0'B, ERR#=ERR#, SEV=SEV);
      208     6842        %MEND;
      209     6843        %INCLUDE XSC_PERR_C;
      210     6920            %ERRORDEF( NAME=XSP_E$DFLT, STCLASS=SYMREF);
      211     6968            %ERRORDEF( NAME=XSP_E$CTXTID, ERR#=%E$CTXTID);
      212     7016            /*E*  ERROR:  XSP-E$CTXTID-0
      213     7017                MESSAGE:  DATA$->XSP_ASN1_FPT.CTXTID contains an illegal value.
      214     7018            */
      215     7019
      216     7020    1       DCL XSS$BUFPTR ENTRY(2) ALTRET;
      217     7021    1       DCL XSS$GETMEM ENTRY(3) ALTRET;
      218     7022
      219     7023    1       DCL AFPT$ PTR;
      220     7024    1       DCL CLST$ PTR;
      221     7025    1       DCL CMAP$ PTR;
      222     7026    1       DCL DFLT$ PTR;
      223     7027    1       DCL ERR SBIN;
      224     7028    1       DCL FLAG SBIN;
      225     7029        %EQU DATA = 1/*DATA*/;
      226     7030        %EQU DFLT = 2/*DFLT*/;
      227     7031        %EQU CTXT = 3/*CTXT*/;
      228     7032    1       DCL I SBIN;
      229     7033    1       DCL J SBIN;
      230     7034    1       DCL PCID SBIN;
      231     7035    1       DCL PFPT$ PTR;
      232     7036        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:61   
      233     7037        /****************************************************
      234     7038            GLOBAL LIST OF IMPLEMENTED TRANSFER SYNTAXES
      235     7039        ****************************************************/
      236     7040        %EQU MAXTFR = 1;  /* reserve space for this many names in table */
      237     7041            %XSP$CTXTNAME( NAME=T1, STCLASS=CONSTANT, CTXT="2-1-1");  /* 8825 */
      238     7083    1       DCL 1 XSP_TFRLIST STATIC SYMDEF,
      239     7084    1            2 CTXT$(0:%MAXTFR) PTR INIT(
      240     7085    1                   ADDR( NIL),     /* overlayed with COUNT by XSP$INITLISTS */
      241     7086    1                   ADDR( T1)),
      242     7087    1            2 COUNT(0:%MAXTFR) REDEF CTXT$ UBIN;
      243     7088        /****************************************************
      244     7089            GLOBAL LIST OF SUPPORTED ABSTRACT SYNTAXES
      245     7090        ****************************************************/
      246     7091        %EQU MAXABS = 8;  /* reserve space for this many names in table */
      247     7092            %XSP$CTXTNAME( NAME=A1, STCLASS=CONSTANT, CTXT="0-0");  /* bogus syntax */
      248     7134            %XSP$CTXTNAME( NAME=A2, STCLASS=CONSTANT, CTXT="2-2-1-0-1");  /* ACSE */
      249     7176    1       DCL 1 XSP_ABSLIST STATIC SYMDEF,
      250     7177    1            2 CTXT$(0:%MAXABS) PTR INIT(
      251     7178    1                   ADDR( NIL),     /* overlayed with COUNT by XSP$INITLISTS */
      252     7179    1                   ADDR( A1),
      253     7180    1                   ADDR( A2),
      254     7181    1                   ADDR( NIL)*6),
      255     7182    1            2 COUNT(0:%MAXABS) REDEF CTXT$ UBIN;
      256     7183        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:62   
      257     7184    1   XSP$DFLTMASKS: ENTRY( VBLK) ALTRET;

   7184  2 000003   000000 700200 xent  XSP$DFLTMAS* TSX0  ! X66_AUTO_1
         2 000004   000022 000001                    ZERO    18,1

      258     7185    1       FLAG = %DFLT;

   7185  2 000005   000002 235007                    LDA     2,DL
         2 000006   200011 755100                    STA     FLAG,,AUTO

      259     7186    1       GOTO COMMON;

   7186  2 000007   000021 710000 2                  TRA     COMMON

      260     7187    1   XSP$CTXTMASKS: ENTRY( VBLK) ALTRET;

   7187  2 000010   000000 700200 xent  XSP$CTXTMAS* TSX0  ! X66_AUTO_1
         2 000011   000022 000001                    ZERO    18,1

      261     7188    1       FLAG = %CTXT;

   7188  2 000012   000003 235007                    LDA     3,DL
         2 000013   200011 755100                    STA     FLAG,,AUTO

      262     7189    1       GOTO COMMON;

   7189  2 000014   000021 710000 2                  TRA     COMMON

      263     7190    1   XSP$DATAMASKS: ENTRY( VBLK) ALTRET;

   7190  2 000015   000000 700200 xent  XSP$DATAMAS* TSX0  ! X66_AUTO_1
         2 000016   000022 000001                    ZERO    18,1

      264     7191    1       FLAG = %DATA;

   7191  2 000017   000001 235007                    LDA     1,DL
         2 000020   200011 755100                    STA     FLAG,,AUTO
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:63   

      265     7192    1   COMMON:
      266     7193    1       PFPT$ = VBLK.FPT$;

   7193  2 000021   200003 470500       COMMON       LDP0    @VBLK,,AUTO
         2 000022   000001 236100                    LDQ     1,,PR0
         2 000023   200015 756100                    STQ     PFPT$,,AUTO

      267     7194    1       XSP$GENERIC.ERROR = '0'O;

   7194  2 000024   200015 471500                    LDP1    PFPT$,,AUTO
         2 000025   100001 450100                    STZ     1,,PR1

      268     7195    1       CALL XSS$BUFPTR( PCTX.CTXTMAPX, CMAP$);

   7195  2 000026   000000 473500                    LDP3    0,,PR0
         2 000027   200006 634500                    EPPR4   CMAP$,,AUTO
         2 000030   200017 454500                    STP4    PFPT$+2,,AUTO
         2 000031   200020 453500                    STP3    PFPT$+3,,AUTO
         2 000032   200020 236100                    LDQ     PFPT$+3,,AUTO
         2 000033   000001 036000 3                  ADLQ    1
         2 000034   200016 756100                    STQ     PFPT$+1,,AUTO
         2 000035   200016 630500                    EPPR0   PFPT$+1,,AUTO
         2 000036   000000 631400 3                  EPPR1   0
         2 000037   000000 701000 xent               TSX1    XSS$BUFPTR
         2 000040   000000 011000                    NOP     0

      269     7196        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:64   
      270     7197    1       IF FLAG = %CTXT THEN

   7197  2 000041   200011 235100                    LDA     FLAG,,AUTO
         2 000042   000003 115007                    CMPA    3,DL
         2 000043   000237 601000 2                  TNZ     s:7243

      271     7198    1   CASE_CTXT:
      272     7199    2                            DO;

   7199  2 000044                       CASE_CTXT    null
      273     7200    3           DO SELECT( XSP$GENERIC.FNC);

   7200  2 000044   200015 470500                    LDP0    PFPT$,,AUTO
         2 000045   000000 236100                    LDQ     0,,PR0
         2 000046   000033 772000                    QRL     27
         2 000047   000033 116007                    CMPQ    27,DL
         2 000050   000061 602000 2                  TNC     CASE_CTXT+13
         2 000051   000102 600000 2                  TZE     s:7206
         2 000052   000047 116007                    CMPQ    39,DL
         2 000053   000107 602000 2                  TNC     s:7211
         2 000054   000105 600000 2                  TZE     s:7209
         2 000055   000033 736000                    QLS     27
         2 000056   051000 116003                    CMPQ    20992,DU
         2 000057   000107 601000 2                  TNZ     s:7211
         2 000060   000105 710000 2                  TRA     s:7209
         2 000061   000000 236100                    LDQ     0,,PR0
         2 000062   000033 772000                    QRL     27
         2 000063   000023 116007                    CMPQ    19,DL
         2 000064   000072 602000 2                  TNC     CASE_CTXT+22
         2 000065   000077 600000 2                  TZE     s:7203
         2 000066   000033 736000                    QLS     27
         2 000067   031000 116003                    CMPQ    12800,DU
         2 000070   000107 601000 2                  TNZ     s:7211
         2 000071   000102 710000 2                  TRA     s:7206
         2 000072   000000 236100                    LDQ     0,,PR0
         2 000073   777000 376003                    ANQ     -512,DU
         2 000074   021000 116003                    CMPQ    8704,DU
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:65   
         2 000075   000107 601000 2                  TNZ     s:7211
         2 000076   000077 710000 2                  TRA     s:7203

      274     7201    3               SELECT( %XSP_FNC_PALTREQ#,

      275     7202    3                       %XSP_FNC_PALTRSP#);
      276     7203    3                   CLST$ = XSP$ALTER_CONTEXT.CTXT$;

   7203  2 000077   000005 236100                    LDQ     5,,PR0
         2 000100   200005 756100                    STQ     CLST$,,AUTO
         2 000101   000107 710000 2                  TRA     s:7211

      277     7204    3               SELECT( %XSP_FNC_PCONREQ#,

      278     7205    3                       %XSP_FNC_PCONRSP#);
      279     7206    3                   CLST$ = XSP$CONNECT.CTXT$;

   7206  2 000102   000005 236100                    LDQ     5,,PR0
         2 000103   200005 756100                    STQ     CLST$,,AUTO
         2 000104   000107 710000 2                  TRA     s:7211

      280     7207    3               SELECT( %XSP_FNC_PRSXREQ#,

      281     7208    3                       %XSP_FNC_PRSXRSP#);
      282     7209    3                   CLST$ = XSP$RESYNCHRONIZE.CTXT$;

   7209  2 000105   000005 236100                    LDQ     5,,PR0
         2 000106   200005 756100                    STQ     CLST$,,AUTO

      283     7210    3               END;

      284     7211    2           IF CLST$ = ADDR( NIL) THEN

   7211  2 000107   200005 236100                    LDQ     CLST$,,AUTO
         2 000110   000002 116000 3                  CMPQ    2
         2 000111   000237 600000 2                  TZE     s:7243

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:66   
      285     7212    2               EXIT CASE_CTXT;
      286     7213                /* Analyze the proposals for definition and deletion */
      287     7214    3           DO I = 1 TO CLST.COUNT(0);

   7214  2 000112   000001 235007                    LDA     1,DL
         2 000113   200012 755100                    STA     I,,AUTO
         2 000114   000233 710000 2                  TRA     s:7240+1

      288     7215    3   THISCTXT:
      289     7216    4               DO CASE( CLST.RESULT( I));

   7216  2 000115   200005 470500       THISCTXT     LDP0    CLST$,,AUTO
         2 000116   200012 720100                    LXL0    I,,AUTO
         2 000117   000000 235110                    LDA     0,X0,PR0
         2 000120   000003 115007                    CMPA    3,DL
         2 000121   000123 602005 2                  TNC     THISCTXT+6,AL
         2 000122   000126 710000 2                  TRA     s:7221
         2 000123   000232 710000 2                  TRA     s:7240
         2 000124   000232 710000 2                  TRA     s:7240
         2 000125   000232 710000 2                  TRA     s:7240

      290     7217    4                   CASE( %XSP_RSLT_ACCEPT);

      291     7218    4                   CASE( %XSP_RSLT_UREJECT);

      292     7219    4                   CASE( %XSP_RSLT_PREJECT);

      293     7220    4                   CASE( ELSE);  /* either DELETE or ptr to name */

      294     7221    5                       IF CLST.RESULT( I) < 0 THEN DO;

   7221  2 000126   000000 115003                    CMPA    0,DU
         2 000127   000150 605000 2                  TPL     s:7226

      295     7222    5                           CMAP.STATE( I) = %XSP_CMAP_LCLDEL;

   7222  2 000130   200012 236100                    LDQ     I,,AUTO
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:67   
         2 000131   000001 736000                    QLS     1
         2 000132   200006 471500                    LDP1    CMAP$,,AUTO
         2 000133   000000 621006                    EAX1    0,QL
         2 000134   100001 236106                    LDQ     1,QL,PR1
         2 000135   000003 376000 3                  ANQ     3
         2 000136   000002 276007                    ORQ     2,DL
         2 000137   100001 756111                    STQ     1,X1,PR1

      296     7223    5                           VBLK.DELBITS( I) = %TRUE;

   7223  2 000140   200012 235100                    LDA     I,,AUTO
         2 000141   000143 605000 2                  TPL     s:7223+3
         2 000142   000044 035003                    ADLA    36,DU
         2 000143   200003 471500                    LDP1    @VBLK,,AUTO
         2 000144   003105 060400                    CSL     bolr='003'O
         2 000145   000004 000001 3                  BDSC    4                        by=0,bit=0,n=1
         2 000146   100010 000001                    BDSC    8,A,PR1                  by=0,bit=0,n=1

      297     7224    5                           EXIT THISCTXT;

   7224  2 000147   000232 710000 2                  TRA     s:7240

      298     7225    5                           END;
      299     7226    5                       DO J = 1 TO XSP_ABSLIST.COUNT(0);

   7226  2 000150   000001 236007                    LDQ     1,DL
         2 000151   200013 756100                    STQ     J,,AUTO
         2 000152   000222 710000 2                  TRA     s:7237+1

      300     7227    5                           IF XSP_ABSLIST.CTXT$( J) ~= ADDR( NIL) AND

   7227  2 000153   200013 720100                    LXL0    J,,AUTO
         2 000154   000002 236010 1                  LDQ     XSP_ABSLIST,X0
         2 000155   000002 116000 3                  CMPQ    2
         2 000156   000221 600000 2                  TZE     s:7237
         2 000157   200005 470500                    LDP0    CLST$,,AUTO
         2 000160   200012 721100                    LXL1    I,,AUTO
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:68   
         2 000161   000000 471511                    LDP1    0,X1,PR0
         2 000162   000002 473410 1                  LDP3    XSP_ABSLIST,X0
         2 000163   100000 222100                    LDX2    0,,PR1
         2 000164   300000 102100                    CMPX2   0,,PR3
         2 000165   000221 601000 2                  TNZ     s:7237
         2 000166   300000 223100                    LDX3    0,,PR3
         2 000167   040140 106540                    CMPC    fill='040'O
         2 000170   100000 400012                    ADSC9   0,,PR1                   cn=2,n=*X2
         2 000171   300000 400013                    ADSC9   0,,PR3                   cn=2,n=*X3
         2 000172   000221 601000 2                  TNZ     s:7237

      301     7228    5                                   CLST.CTXT$( I)->CNAM.LEN = XSP_ABSLIST.CTXT$( J)->
              7228                                            CNAM.LEN AND
      302     7229    6                                   CLST.CTXT$( I)->CNAM.TXT = XSP_ABSLIST.CTXT$( J)->
              7229                                            CNAM.TXT THEN DO;

      303     7230                                    /* this abstract syntax is supported */
      304     7231    6                               CMAP.STATE( I) = %XSP_CMAP_LCLDEF;

   7231  2 000173   200012 235100                    LDA     I,,AUTO
         2 000174   000001 735000                    ALS     1
         2 000175   200006 474500                    LDP4    CMAP$,,AUTO
         2 000176   400001 236105                    LDQ     1,AL,PR4
         2 000177   000003 376000 3                  ANQ     3
         2 000200   000001 276007                    ORQ     1,DL
         2 000201   400001 756105                    STQ     1,AL,PR4

      305     7232    6                               CMAP.ABSCTXTID( I) = J;

   7232  2 000202   200006 471500                    LDP1    CMAP$,,AUTO
         2 000203   200013 236100                    LDQ     J,,AUTO
         2 000204   000033 736000                    QLS     27
         2 000205   100001 676105                    ERQ     1,AL,PR1
         2 000206   777000 376003                    ANQ     -512,DU
         2 000207   100001 656105                    ERSQ    1,AL,PR1

      306     7233    6                               VBLK.DEFBITS( I) = %TRUE;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:69   

   7233  2 000210   200012 236100                    LDQ     I,,AUTO
         2 000211   000213 605000 2                  TPL     s:7233+3
         2 000212   000044 036003                    ADLQ    36,DU
         2 000213   200003 471500                    LDP1    @VBLK,,AUTO
         2 000214   003106 060400                    CSL     bolr='003'O
         2 000215   000004 000001 3                  BDSC    4                        by=0,bit=0,n=1
         2 000216   100007 000001                    BDSC    7,Q,PR1                  by=0,bit=0,n=1

      307     7234    6                               CLST.RESULT( I) = %XSP_RSLT_ACCEPT;

   7234  2 000217   000000 450111                    STZ     0,X1,PR0

      308     7235    6                               EXIT THISCTXT;

   7235  2 000220   000232 710000 2                  TRA     s:7240

      309     7236    6                               END;
      310     7237    5                           END;

   7237  2 000221   200013 054100                    AOS     J,,AUTO
         2 000222   000002 236000 1                  LDQ     XSP_ABSLIST
         2 000223   000153 604000 2                  TMI     s:7227
         2 000224   200013 116100                    CMPQ    J,,AUTO
         2 000225   000153 605000 2                  TPL     s:7227

      311     7238    4                       CLST.RESULT( I) = %XSP_RSLT_PREJECT;

   7238  2 000226   000002 235007                    LDA     2,DL
         2 000227   200005 470500                    LDP0    CLST$,,AUTO
         2 000230   200012 720100                    LXL0    I,,AUTO
         2 000231   000000 755110                    STA     0,X0,PR0

      312     7239    4                   END;  /* do case CLST.RESULT */

      313     7240    3               END;  /* for each item in CLST */

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:70   
   7240  2 000232   200012 054100                    AOS     I,,AUTO
         2 000233   200005 470500                    LDP0    CLST$,,AUTO
         2 000234   200012 236100                    LDQ     I,,AUTO
         2 000235   000000 116100                    CMPQ    0,,PR0
         2 000236   000115 604400 2                  TMOZ    THISCTXT

      314     7241    2           END;  /* case CTXT */

      315     7242        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:71   
      316     7243    1       IF FLAG = %DFLT THEN

   7243  2 000237   200011 235100                    LDA     FLAG,,AUTO
         2 000240   000002 115007                    CMPA    2,DL
         2 000241   000314 601000 2                  TNZ     s:7265

      317     7244    1   CASE_DFLT:
      318     7245    2                            DO;

   7245  2 000242                       CASE_DFLT    null
      319     7246                /* Analyze the default context, if any */
      320     7247    2           DFLT$ = XSP$CONNECT.DFLT$;

   7247  2 000242   200015 470500                    LDP0    PFPT$,,AUTO
         2 000243   000003 236100                    LDQ     3,,PR0
         2 000244   200007 756100                    STQ     DFLT$,,AUTO

      321     7248    2           IF DFLT$ = ADDR( NIL) THEN

   7248  2 000245   000002 116000 3                  CMPQ    2
         2 000246   000307 600000 2                  TZE     DFLT_ERROR

      322     7249    2               GOTO DFLT_ERROR;
      323     7250    3           DO J = 1 TO XSP_ABSLIST.COUNT(0);

   7250  2 000247   000001 235007                    LDA     1,DL
         2 000250   200013 755100                    STA     J,,AUTO
         2 000251   000303 710000 2                  TRA     s:7259+1

      324     7251    3               IF XSP_ABSLIST.CTXT$( J) ~= ADDR( NIL) AND

   7251  2 000252   200013 720100                    LXL0    J,,AUTO
         2 000253   000002 236010 1                  LDQ     XSP_ABSLIST,X0
         2 000254   000002 116000 3                  CMPQ    2
         2 000255   000302 600000 2                  TZE     s:7259
         2 000256   000002 470410 1                  LDP0    XSP_ABSLIST,X0
         2 000257   200007 471500                    LDP1    DFLT$,,AUTO
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:72   
         2 000260   100000 221100                    LDX1    0,,PR1
         2 000261   000000 101100                    CMPX1   0,,PR0
         2 000262   000302 601000 2                  TNZ     s:7259
         2 000263   000000 222100                    LDX2    0,,PR0
         2 000264   040140 106540                    CMPC    fill='040'O
         2 000265   100000 400011                    ADSC9   0,,PR1                   cn=2,n=*X1
         2 000266   000000 400012                    ADSC9   0,,PR0                   cn=2,n=*X2
         2 000267   000302 601000 2                  TNZ     s:7259

      325     7252    3                       DFLT$->CNAM.LEN = XSP_ABSLIST.CTXT$( J)->CNAM.LEN AND
      326     7253    4                       DFLT$->CNAM.TXT = XSP_ABSLIST.CTXT$( J)->CNAM.TXT THEN DO;

      327     7254    4                   CMAP.STATE(0) = %XSP_CMAP_LCLDEF;

   7254  2 000270   200006 473500                    LDP3    CMAP$,,AUTO
         2 000271   000001 236007                    LDQ     1,DL
         2 000272   300001 552104                    STBQ    1,'04'O,PR3

      328     7255    4                   CMAP.ABSCTXTID(0) = J;

   7255  2 000273   200006 470500                    LDP0    CMAP$,,AUTO
         2 000274   200013 236100                    LDQ     J,,AUTO
         2 000275   000033 736000                    QLS     27
         2 000276   000001 552140                    STBQ    1,'40'O,PR0

      329     7256    4                   XSP$CONNECT.DFLTRSLT = %XSP_RSLT_ACCEPT;

   7256  2 000277   200015 470500                    LDP0    PFPT$,,AUTO
         2 000300   000003 450100                    STZ     3,,PR0

      330     7257    4                   EXIT CASE_DFLT;

   7257  2 000301   000314 710000 2                  TRA     s:7265

      331     7258    4                   END;
      332     7259    3               END;

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:73   
   7259  2 000302   200013 054100                    AOS     J,,AUTO
         2 000303   000002 236000 1                  LDQ     XSP_ABSLIST
         2 000304   000252 604000 2                  TMI     s:7251
         2 000305   200013 116100                    CMPQ    J,,AUTO
         2 000306   000252 605000 2                  TPL     s:7251

      333     7260    2   DFLT_ERROR:
      334     7261    2           XSP$CONNECT.DFLTRSLT = %XSP_RSLT_PREJECT;

   7261  2 000307   000002 235007       DFLT_ERROR   LDA     2,DL
         2 000310   200015 470500                    LDP0    PFPT$,,AUTO
         2 000311   000003 755100                    STA     3,,PR0

      335     7262    2           XSP$CONNECT.ERROR = XSP_E$DFLT;

   7262  2 000312   000000 236000 xsym               LDQ     XSP_E$DFLT
         2 000313   000001 756100                    STQ     1,,PR0

      336     7263    2           END;  /* case DFLT */

      337     7264        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:74   
      338     7265    1       IF FLAG = %DATA THEN

   7265  2 000314   200011 235100                    LDA     FLAG,,AUTO
         2 000315   000001 115007                    CMPA    1,DL
         2 000316   000344 601000 2                  TNZ     s:7281

      339     7266    1   CASE_DATA:
      340     7267    2                            DO;

   7267  2 000317                       CASE_DATA    null
      341     7268    2           AFPT$ = XSP$GENERIC.DATA$;

   7268  2 000317   200015 470500                    LDP0    PFPT$,,AUTO
         2 000320   000002 236100                    LDQ     2,,PR0
         2 000321   200004 756100                    STQ     AFPT$,,AUTO

      342     7269    3           DO WHILE( AFPT$ ~= ADDR( NIL));

   7269  2 000322   000342 710000 2                  TRA     s:7276

      343     7270                    /* Analyze the contexts used in the User Data parameter */
      344     7271    3               IF AFPT.CTXTID = 0 THEN

   7271  2 000323   200004 470500                    LDP0    AFPT$,,AUTO
         2 000324   000005 235100                    LDA     5,,PR0
         2 000325   000332 601000 2                  TNZ     s:7274

      345     7272    3                   XSP$GENERIC.ERROR = XSP_E$CTXTID;

   7272  2 000326   000154 236000 0                  LDQ     XSP_E$CTXTID
         2 000327   200015 471500                    LDP1    PFPT$,,AUTO
         2 000330   100001 756100                    STQ     1,,PR1
         2 000331   000340 710000 2                  TRA     s:7275

      346     7273    3               ELSE
      347     7274    3                   VBLK.DATBITS( AFPT.CTXTID) = %TRUE;

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:75   
   7274  2 000332   000334 605000 2                  TPL     s:7274+2
         2 000333   000044 035003                    ADLA    36,DU
         2 000334   200003 471500                    LDP1    @VBLK,,AUTO
         2 000335   003105 060400                    CSL     bolr='003'O
         2 000336   000004 000001 3                  BDSC    4                        by=0,bit=0,n=1
         2 000337   100011 000001                    BDSC    9,A,PR1                  by=0,bit=0,n=1

      348     7275    3               AFPT$ = AFPT.LINK$;

   7275  2 000340   000004 236100                    LDQ     4,,PR0
         2 000341   200004 756100                    STQ     AFPT$,,AUTO

      349     7276    3               END;

   7276  2 000342   000002 116000 3                  CMPQ    2
         2 000343   000323 601000 2                  TNZ     s:7271

      350     7277    2           END;

      351     7278        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:76   
      352     7279            /*N* DO WHAT'S NEEDED FOR VBLK.SPIBITS */
      353     7280            /* if there was some kind of error, bail out */
      354     7281    1       IF XSP$GENERIC.ERROR ~= '0'O THEN

   7281  2 000344   200015 470500                    LDP0    PFPT$,,AUTO
         2 000345   000001 235100                    LDA     1,,PR0
         2 000346   000350 600000 2                  TZE     s:7283

      355     7282    1           ALTRETURN;

   7282  2 000347   000000 702200 xent               TSX2  ! X66_AALT

      356     7283    1       RETURN;

   7283  2 000350   000000 702200 xent               TSX2  ! X66_ARET

      357     7284        %EJECT;
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:77   
      358     7285        /*F*    NAME:   XSP$INITLISTS
      359     7286
      360     7287                XSP$INITLISTS is called once, when Presentation is first being
      361     7288                initialized, in order to set up the global lists of supported
      362     7289                transfer and abstract syntaxes.
      363     7290        */
      364     7291    1   XSP$INITLISTS: ENTRY ALTRET;

   7291  2 000351   000000 700200 xent  XSP$INITLIS* TSX0  ! X66_AUTO_1
         2 000352   000022 000001                    ZERO    18,1

      365     7292
      366     7293    1       XSP_TFRLIST.COUNT(0) = %MAXTFR;

   7293  2 000353   000001 235007                    LDA     1,DL
         2 000354   000000 755000 1                  STA     XSP_TFRLIST

      367     7294    1       XSP_ABSLIST.COUNT(0) = %MAXABS;

   7294  2 000355   000010 236007                    LDQ     8,DL
         2 000356   000002 756000 1                  STQ     XSP_ABSLIST

      368     7295    1       RETURN;

   7295  2 000357   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   0     000   000000 000000   302320 000200   000000 006014   000000 000000    ................
   0     004   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0     014*  000000 000000   000000 000000   000000 000000   302320 000200    ................
   0     020   000000 000000   302320 000200   000000 006014   000000 000000    ................
   0     024   000000 000000   000000 000000   302320 000200   015000 000000    ................
   0     030   302320 000200   000000 006014   000000 000000   000000 000000    ................
   0     034   000000 000000   000000 000000   000000 000000   000040 040040    .............
   0     040   040040 040***   000040 040040   040040 040***   055055 055055       ..      .----
   0     044   017000 000000   302320 000200   000000 006014   000000 000000    ................
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:78   
   0     050   000040 040040   040040 040***   000000 000000   302320 000200    .      .........
   0     054   000000 006014   000000 000000   000000 000000   000000 006014    ................
   0     060   000000 000000   302320 000200   000000 006014   000000 000000    ................
   0     064   302320 000200   000000 006014   000000 006014   000000 000000    ................
   0     070   000000 006014   000000 006014   000000 006014   776000 000000    ................
   0     074   000000 000000   055055 055055   00**** ******   035000 000000    ....----........
   0     100   302320 000200   037000 000000   302320 000200   000000 006014    ................
   0     104   041000 000000   302320 000200   000000 006014   075000 000000    !...........=...
   0     110   302320 000200   076000 000000   302320 000200   000000 000000    ....>...........
   0     114   302320 000200   000000 006014   000000 003000   302320 000200    ................
   0     120   000000 006014   000000 000000   000000 000000   000000 006014    ................
   0     124   000000 001000   302320 000200   000000 006014   000000 000000    ................
   0     130   000000 000000   000000 003000   302320 000200   000000 006014    ................
   0     134   000000 000000   000000 000000   063000 000000   302320 000200    ........3.......
   0     140   065000 000000   302320 000200   000000 006014   067000 000000    5...........7...
   0     144   302320 000200   000000 006014   071000 000000   302320 000200    ........9.......
   0     150   000000 006014   073000 000000   302320 000200   000000 006014    ....;...........

XSP_E$CTXTID
 Sect OctLoc
   0     154   302320 000510                                                    ....

T1
 Sect OctLoc
   0     155   000005 062055   061055 061***                                    ..2-1-1.

A1
 Sect OctLoc
   0     157   000003 060055   060*** ******                                    ..0-0...

A2
 Sect OctLoc
   0     161   000011 062055   062055 061055   060055 061***                    ..2-2-1-0-1.

XSP_TFRLIST
 Sect OctLoc
   1     000   000000 006014   000155 006000                                    .....m..
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:79   

XSP_ABSLIST
 Sect OctLoc
   1     002   000000 006014   000157 006000   000161 006000   000000 006014    .....o...q......
   1     006   000000 006014   000000 006014   000000 006014   000000 006014    ................
   1     012   000000 006014                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000002 000000   000014 400000   000000 006014   777777 777000    ................
   3     004   400000 000000                                                    ....
      369     7296
      370     7297    1       END XSP$MISC;
      371     7298        %EOD;

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:80   
--  Include file information  --

   XSC_PERR_C.:XSA1TOU  is referenced.
   UM_CP6.:E05OU  is referenced.
   XSP_ASN1_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_M.:XSA1TOU  is referenced.
   XSP_INTERNAL_E.:XSA1TOU  is referenced.
   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
      No diagnostics issued in procedure XSP$MISC.
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:81   

 **** Variables and constants ****

  ****  Section 000 RoData XSP$MISC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   157-0-0/w STRC(45)    r     1 A1                       161-0-0/w STRC(99)    r     1 A2
   155-0-0/w STRC(63)    r     1 T1                       154-0-0/w STRC        r     1 XSP_E$CTXTID

  ****  Section 001  Data  XSP$MISC

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/w STRC(324)   r     1 XSP_ABSLIST                0-0-0/w STRC(72)    r     1 XSP_TFRLIST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @VBLK                      4-0-0/w PTR         r     1 AFPT$
     5-0-0/w PTR         r     1 CLST$                      6-0-0/w PTR         r     1 CMAP$
     7-0-0/w PTR         r     1 DFLT$                     11-0-0/w SBIN        r     1 FLAG
    12-0-0/w SBIN        r     1 I                         13-0-0/w SBIN        r     1 J
    15-0-0/w PTR         r     1 PFPT$                     *0-0-0/d STRC(396)   r     1 VBLK

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 XSP_E$DFLT

  ****  BASED and DCB variables  ****

PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:82   
  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 AFPT                       0-0-0/d STRC        r     1 CLST
     0-0-0/w STRC(72)    r     1 CMAP(0:0)                  0-0-0/w ASTR(18)    r     1 CNAM
     0-0-0/w STRC(468)   r     1 PCTX                       0-0-0/w STRC(216)   r     1 XSP$ALTER_CONTEXT
     0-0-0/w STRC(398)   r     1 XSP$CONNECT                0-0-0/w STRC(504)   r     1 XSP$GENERIC
     0-0-0/w STRC(216)   r     1 XSP$RESYNCHRONIZE


   Procedure XSP$MISC requires 240 words for executable code.
   Procedure XSP$MISC requires 18 words of local(AUTO) storage.
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:83   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:84   
          MINI XREF LISTING

A1
      7111**DCL      7179--DCLINIT
A2
      7153**DCL      7180--DCLINIT
AFPT.C0
      5982**DCL      5982--REDEF
AFPT.CTXTID
      5981**DCL      7271>>IF       7274>>ASSIGN
AFPT.DAT$
      5984**DCL      5984--REDEF
AFPT.LINK$
      5981**DCL      7275>>ASSIGN
AFPT.N0
      5983**DCL      5983--REDEF
AFPT.R0
      5981**DCL      5982--REDEF
AFPT$
      7023**DCL      5976--IMP-PTR  7268<<ASSIGN   7269>>DOWHILE  7271>>IF       7274>>ASSIGN   7275<<ASSIGN
      7275>>ASSIGN
CASE_CTXT
      7199**LABEL    7212--EXIT
CASE_DFLT
      7245**LABEL    7257--EXIT
CLST.COUNT
      2599**DCL      7214>>DOINDEX
CLST.CTXT$
      2597**DCL      2598--REDEF    2599--REDEF    7227>>IF       7227>>IF       7227>>IF
CLST.RESULT
      2598**DCL      7216>>DOCASE   7221>>IF       7234<<ASSIGN   7238<<ASSIGN
CLST$
      7024**DCL      2591--IMP-PTR  7203<<ASSIGN   7206<<ASSIGN   7209<<ASSIGN   7211>>IF       7214>>DOINDEX
      7216>>DOCASE   7221>>IF       7227>>IF       7227>>IF       7227>>IF       7234>>ASSIGN   7238>>ASSIGN
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:85   
CMAP.ABSCTXTID
      5309**DCL      7232<<ASSIGN   7255<<ASSIGN
CMAP.STATE
      5316**DCL      7222<<ASSIGN   7231<<ASSIGN   7254<<ASSIGN
CMAP$
      7025**DCL      5294--IMP-PTR  7195<>CALL     7222>>ASSIGN   7231>>ASSIGN   7232>>ASSIGN   7254>>ASSIGN
      7255>>ASSIGN
CNAM.LEN
      2639**DCL      2640--IMP-SIZ  7227>>IF       7227>>IF       7227>>IF       7227>>IF       7251>>IF
      7251>>IF       7251>>IF       7251>>IF
CNAM.TXT
      2640**DCL      7227>>IF       7227>>IF       7251>>IF       7251>>IF
COMMON
      7193**LABEL    7186--GOTO     7189--GOTO
DFLT$
      7026**DCL      7247<<ASSIGN   7248>>IF       7251>>IF       7251>>IF       7251>>IF
DFLT_ERROR
      7261**LABEL    7249--GOTO
FLAG
      7028**DCL      7185<<ASSIGN   7188<<ASSIGN   7191<<ASSIGN   7197>>IF       7243>>IF       7265>>IF
I
      7032**DCL      7214<<DOINDEX  7216>>DOCASE   7221>>IF       7222>>ASSIGN   7223>>ASSIGN   7227>>IF
      7227>>IF       7227>>IF       7231>>ASSIGN   7232>>ASSIGN   7233>>ASSIGN   7234>>ASSIGN   7238>>ASSIGN
J
      7033**DCL      7226<<DOINDEX  7227>>IF       7227>>IF       7227>>IF       7227>>IF       7232>>ASSIGN
      7250<<DOINDEX  7251>>IF       7251>>IF       7251>>IF       7251>>IF       7255>>ASSIGN
PCTX.ACTDCSMASK
      5422**DCL      5425--REDEF
PCTX.CTXTMAPX
      5472**DCL      7195<>CALL
PCTX.CURDCSMASK
      5407**DCL      5410--REDEF
PCTX.HISTZ
      5465**DCL      5466--REDEF
PCTX.INIDCSMASK
      5415**DCL      5418--REDEF
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:86   
PFPT$
      7035**DCL      2184--IMP-PTR  2280--IMP-PTR  2341--IMP-PTR  2486--IMP-PTR  7193<<ASSIGN   7194>>ASSIGN
      7200>>DOSELCT  7203>>ASSIGN   7206>>ASSIGN   7209>>ASSIGN   7247>>ASSIGN   7256>>ASSIGN   7261>>ASSIGN
      7262>>ASSIGN   7268>>ASSIGN   7272>>ASSIGN   7281>>IF
T1
      7060**DCL      7086--DCLINIT
THISCTXT
      7216**LABEL    7224--EXIT     7235--EXIT
VBLK
      5491**DCL        16--PROC     7184--ENTRY    7187--ENTRY    7190--ENTRY
VBLK.CTX$
      5501**DCL      5336--IMP-PTR  7195>>CALL
VBLK.DATBITS
      5610**DCL      7274<<ASSIGN
VBLK.DATMASK
      5607**DCL      5610--REDEF
VBLK.DEFBITS
      5594**DCL      7233<<ASSIGN
VBLK.DEFMASK
      5591**DCL      5594--REDEF
VBLK.DELBITS
      5602**DCL      7223<<ASSIGN
VBLK.DELMASK
      5599**DCL      5602--REDEF
VBLK.FPT$
      5505**DCL      7193>>ASSIGN
VBLK.SPIMASK
      5615**DCL      5618--REDEF
XSP$ALTER_CONTEXT.CTXT$
      2322**DCL      7203>>ASSIGN
XSP$ALTER_CONTEXT.ERRDEF
      2289**DCL      2309--REDEF
XSP$CONNECT.CALLED$
      2436**DCL      2437--REDEF
XSP$CONNECT.CTXT$
      2429**DCL      7206>>ASSIGN
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:87   
XSP$CONNECT.DFLT$
      2426**DCL      2427--REDEF    7247>>ASSIGN
XSP$CONNECT.DFLTRSLT
      2427**DCL      7256<<ASSIGN   7261<<ASSIGN
XSP$CONNECT.ERRDEF
      2395**DCL      2415--REDEF
XSP$CONNECT.ERROR
      2415**DCL      7262<<ASSIGN
XSP$GENERIC.DATA$
      2260**DCL      7268>>ASSIGN
XSP$GENERIC.ERRDEF
      2230**DCL      2250--REDEF
XSP$GENERIC.ERROR
      2250**DCL      7194<<ASSIGN   7272<<ASSIGN   7281>>IF
XSP$GENERIC.FNC
      2190**DCL      7200>>DOSELCT
XSP$RESYNCHRONIZE.CTXT$
      2572**DCL      7209>>ASSIGN
XSP$RESYNCHRONIZE.ERRDEF
      2539**DCL      2559--REDEF
XSP_ABSLIST.COUNT
      7182**DCL      7226>>DOINDEX  7250>>DOINDEX  7294<<ASSIGN
XSP_ABSLIST.CTXT$
      7177**DCL      7182--REDEF    7227>>IF       7227>>IF       7227>>IF       7227>>IF       7251>>IF
      7251>>IF       7251>>IF       7251>>IF
XSP_ACTIVITY_DISCARD.ERRDEF
      2767**DCL      2787--REDEF
XSP_ACTIVITY_END.ERRDEF
      2829**DCL      2849--REDEF
XSP_ACTIVITY_INTERRUPT.ERRDEF
      2890**DCL      2910--REDEF
XSP_ACTIVITY_RESUME.ERRDEF
      2954**DCL      2974--REDEF
XSP_ACTIVITY_START.ERRDEF
      3044**DCL      3064--REDEF
XSP_ALTER_CONTEXT.ERRDEF
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:88   
      3113**DCL      3133--REDEF
XSP_CAPABILITY_DATA.ERRDEF
      3174**DCL      3194--REDEF
XSP_CONNECT.CALLED$
      3318**DCL      3319--REDEF
XSP_CONNECT.DFLT$
      3308**DCL      3309--REDEF
XSP_CONNECT.ERRDEF
      3277**DCL      3297--REDEF
XSP_CONTROL_GIVE.ERRDEF
      3414**DCL      3434--REDEF
XSP_DATA.ERRDEF
      3471**DCL      3491--REDEF
XSP_E$CTXTID
      6982**DCL      7272>>ASSIGN
XSP_E$DFLT
      6934**DCL      7262>>ASSIGN
XSP_EXPEDITED_DATA.ERRDEF
      3529**DCL      3549--REDEF
XSP_GENERIC.ERRDEF
      2707**DCL      2727--REDEF
XSP_P_ABORT.ERRDEF
      3588**DCL      3608--REDEF
XSP_P_EXCEPTION_REPORT.ERRDEF
      3646**DCL      3666--REDEF
XSP_RELEASE.ERRDEF
      3704**DCL      3724--REDEF
XSP_RESYNCHRONIZE.ERRDEF
      3806**DCL      3826--REDEF
XSP_SYNC_MAJOR.ERRDEF
      3873**DCL      3893--REDEF
XSP_SYNC_MINOR.ERRDEF
      3939**DCL      3959--REDEF
XSP_TFRLIST.COUNT
      7087**DCL      7293<<ASSIGN
XSP_TFRLIST.CTXT$
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:89   
      7084**DCL      7087--REDEF
XSP_TOKEN_GIVE.ERRDEF
      4038**DCL      4058--REDEF
XSP_TOKEN_PLEASE.ERRDEF
      4134**DCL      4154--REDEF
XSP_TYPED_DATA.ERRDEF
      4192**DCL      4212--REDEF
XSP_U_ABORT.ERRDEF
      4250**DCL      4270--REDEF
XSP_U_EXCEPTION_REPORT.ERRDEF
      4309**DCL      4329--REDEF
XSS$BUFPTR
      7020**DCL-ENT  7195--CALL
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:90   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=XSP$MISC File=XSP$DATA.:XSA1TSI                               WED 10/01/97 11:59 Page:91   
              MINI UREF LISTING

CASE_DATA    7267**LABEL
ERR    7027**DCL
PCID    7034**DCL
XSP$CTXTMASKS    7187**ENTRY
XSP$DATAMASKS    7190**ENTRY
XSP$DFLTMASKS    7184**ENTRY
XSP$INITLISTS    7291**ENTRY
XSP$MISC      16**PROC
XSS$GETMEM    7021**DCL-ENT

PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:92   
      372        1        /*T***********************************************************/
      373        2        /*T*                                                         */
      374        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      375        4        /*T*                                                         */
      376        5        /*T***********************************************************/
      377        6        /*F*    NAME:   XSP$DUMPFPT
      378        7
      379        8        */
      380        9        XSP$DUMPFPT: PROC( XSP$GENERIC);
      381       10        %INCLUDE CP_6;
      382     5569            %FPT_WRITE( FPTN=FPT_DUMPFPT, DCB=M$DO, BUF=XSS_SCRITCH);
      383     5600        %INCLUDE XSS_SESSION_E;
      384     6165        %INCLUDE XSP_PRESENTATION_E;
      385     6264        %INCLUDE XSP_PRESENTATION_M;
      386     7750            %XSP$GENERIC( STCLASS="");
      387     7846
      388     7847    1       DCL XSS_SCRITCH CHAR(80) SYMREF;
      389     7848
      390     7849    1       DCL I SBIN;
      391     7850    1       DCL M$DO DCB;
      392     7851    1       DCL PKID CHAR(2);
      393     7852    1       DCL FNCGRP CHAR(69) CONSTANT INIT(
      394     7853    1        'BUGAcDAcEAcIAcRAcSAltCaDConCtGDatExpRelRsxSMaSMiTkGTkPTyDUAbUErPAbPEr');
      395     7854    1       DCL FNCTYP CHAR(15) CONSTANT INIT( 'BUGReqIndRspCnf');
      396     7855    1       DCL FNCMAP(0:62) UBIN BYTE CONSTANT INIT(
      397     7856    1           0,
      398     7857    1           65, 129, 193, 257,
      399     7858    1           66, 130, 194, 258,
      400     7859    1           67, 131, 195, 259,
      401     7860    1           68, 132,
      402     7861    1           69, 133,
      403     7862    1           70, 134, 198, 262,
      404     7863    1           71, 135, 199, 263,
      405     7864    1           72, 136, 200, 264,
      406     7865    1           73, 137,
      407     7866    1           74, 138,
      408     7867    1           75, 139,
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:93   
      409     7868    1           76, 140, 204, 268,
      410     7869    1           77, 141, 205, 269,
      411     7870    1           78, 142, 206, 270,
      412     7871    1           79, 143, 207, 271,
      413     7872    1           80, 144,
      414     7873    1           81, 145,
      415     7874    1           82, 146,
      416     7875    1           83, 147,
      417     7876    1           84, 148,
      418     7877    1               149,
      419     7878    1               150) CALIGNED;
      420     7879
      421     7880    1       CALL BINCHAR( PKID, XSP$GENERIC.PCID);
      422     7881    1       I = FNCMAP( XSP$GENERIC.FNC);
      423     7882    1       CALL INSERT( XSS_SCRITCH, , , '       ', PKID, ' P',
      424     7883    1               SUBSTR( FNCGRP, 3 * MOD( I, 64), 3),
      425     7884    1               SUBSTR( FNCTYP, 3 * ( I / 64), 3));
      426     7885    1       FPT_DUMPFPT.BUF_.BOUND = 16;
      427     7886    1       CALL M$WRITE( FPT_DUMPFPT);
      428     7887    1       RETURN;
      429     7888
      430     7889    1       END XSP$DUMPFPT;

PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:94   
--  Include file information  --

   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSP$DUMPFPT.

   Procedure XSP$DUMPFPT requires 49 words for executable code.
   Procedure XSP$DUMPFPT requires 8 words of local(AUTO) storage.

    No errors detected in file XSP$DATA.:XSA1TSI    .

PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:95   

 Object Unit name= XSP$DUMPFPT                                File name= XSP$DATA.:XSA1TOU
 UTS= OCT 01 '97 11:59:44.64 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    12     14  XSP$DUMPFPT
    2   DCB   even  none     0      0  M$DO
    3  RoData even  UTS     41     51  XSP$DUMPFPT
    4   Proc  even  none    49     61  XSP$DUMPFPT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        1  XSP$DUMPFPT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  XSS_SCRITCH                           M$DO
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:96   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:97   


      372        1        /*T***********************************************************/
      373        2        /*T*                                                         */
      374        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      375        4        /*T*                                                         */
      376        5        /*T***********************************************************/
      377        6        /*F*    NAME:   XSP$DUMPFPT
      378        7
      379        8        */
      380        9        XSP$DUMPFPT: PROC( XSP$GENERIC);

      9  4 000000   000000 700200 xent  XSP$DUMPFPT  TSX0  ! X66_AUTO_1
         4 000001   000010 000001                    ZERO    8,1

      381       10        %INCLUDE CP_6;
      382     5569            %FPT_WRITE( FPTN=FPT_DUMPFPT, DCB=M$DO, BUF=XSS_SCRITCH);
      383     5600        %INCLUDE XSS_SESSION_E;
      384     6165        %INCLUDE XSP_PRESENTATION_E;
      385     6264        %INCLUDE XSP_PRESENTATION_M;
      386     7750            %XSP$GENERIC( STCLASS="");
      387     7846
      388     7847    1       DCL XSS_SCRITCH CHAR(80) SYMREF;
      389     7848
      390     7849    1       DCL I SBIN;
      391     7850    1       DCL M$DO DCB;
      392     7851    1       DCL PKID CHAR(2);
      393     7852    1       DCL FNCGRP CHAR(69) CONSTANT INIT(
      394     7853    1        'BUGAcDAcEAcIAcRAcSAltCaDConCtGDatExpRelRsxSMaSMiTkGTkPTyDUAbUErPAbPEr');
      395     7854    1       DCL FNCTYP CHAR(15) CONSTANT INIT( 'BUGReqIndRspCnf');
      396     7855    1       DCL FNCMAP(0:62) UBIN BYTE CONSTANT INIT(
      397     7856    1           0,
      398     7857    1           65, 129, 193, 257,
      399     7858    1           66, 130, 194, 258,
      400     7859    1           67, 131, 195, 259,
      401     7860    1           68, 132,
      402     7861    1           69, 133,
      403     7862    1           70, 134, 198, 262,
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:98   
      404     7863    1           71, 135, 199, 263,
      405     7864    1           72, 136, 200, 264,
      406     7865    1           73, 137,
      407     7866    1           74, 138,
      408     7867    1           75, 139,
      409     7868    1           76, 140, 204, 268,
      410     7869    1           77, 141, 205, 269,
      411     7870    1           78, 142, 206, 270,
      412     7871    1           79, 143, 207, 271,
      413     7872    1           80, 144,
      414     7873    1           81, 145,
      415     7874    1           82, 146,
      416     7875    1           83, 147,
      417     7876    1           84, 148,
      418     7877    1               149,
      419     7878    1               150) CALIGNED;
      420     7879
      421     7880    1       CALL BINCHAR( PKID, XSP$GENERIC.PCID);

   7880  4 000002   200003 470500                    LDP0    @XSP$GENERIC,,AUTO
         4 000003   000000 236100                    LDQ     0,,PR0
         4 000004   000022 772000                    QRL     18
         4 000005   000777 376007                    ANQ     511,DL
         4 000006   000000 235003                    LDA     0,DU
         4 000007   200006 757100                    STAQ    PKID+1,,AUTO
         4 000010   000100 301500                    BTD
         4 000011   200006 000010                    NDSC9   PKID+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 000012   200005 030002                    NDSC9   PKID,,AUTO               cn=0,s=nosgn,sf=0,n=2

      422     7881    1       I = FNCMAP( XSP$GENERIC.FNC);

   7881  4 000013   000000 236100                    LDQ     0,,PR0
         4 000014   000033 772000                    QRL     27
         4 000015   000100 101406                    MRL     fill='000'O
         4 000016   000026 000001 3                  ADSC9   FNCMAP,Q                 cn=0,n=1
         4 000017   200004 000004                    ADSC9   I,,AUTO                  cn=0,n=4

PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:99   
      423     7882    1       CALL INSERT( XSS_SCRITCH, , , '       ', PKID, ' P',

   7882  4 000020   200004 236100                    LDQ     I,,AUTO
         4 000021   000100 506007                    DIV     64,DL
         4 000022   200004 236100                    LDQ     I,,AUTO
         4 000023   200006 755100                    STA     PKID+1,,AUTO
         4 000024   000100 506007                    DIV     64,DL
         4 000025   040000 100400                    MLR     fill='040'O
         4 000026   000046 000007 3                  ADSC9   FNCMAP+16                cn=0,n=7
         4 000027   000000 000007 xsym               ADSC9   XSS_SCRITCH              cn=0,n=7
         4 000030   040000 100500                    MLR     fill='040'O
         4 000031   200005 000002                    ADSC9   PKID,,AUTO               cn=0,n=2
         4 000032   000001 600002 xsym               ADSC9   XSS_SCRITCH+1            cn=3,n=2
         4 000033   200007 756100                    STQ     PKID+2,,AUTO
         4 000034   000050 236000 3                  LDQ     FNCMAP+18
         4 000035   000011 772000                    QRL     9
         4 000036   000002 552030 xsym               STBQ    XSS_SCRITCH+2,'30'O
         4 000037   200006 236100                    LDQ     PKID+1,,AUTO
         4 000040   000003 402007                    MPY     3,DL
         4 000041   040000 100406                    MLR     fill='040'O
         4 000042   000000 000003 3                  ADSC9   FNCGRP,Q                 cn=0,n=3
         4 000043   000002 600003 xsym               ADSC9   XSS_SCRITCH+2            cn=3,n=3
         4 000044   200007 236100                    LDQ     PKID+2,,AUTO
         4 000045   000003 402007                    MPY     3,DL
         4 000046   040000 100406                    MLR     fill='040'O
         4 000047   000022 000003 3                  ADSC9   FNCTYP,Q                 cn=0,n=3
         4 000050   000003 400102 xsym               ADSC9   XSS_SCRITCH+3            cn=2,n=66

      424     7883    1               SUBSTR( FNCGRP, 3 * MOD( I, 64), 3),
      425     7884    1               SUBSTR( FNCTYP, 3 * ( I / 64), 3));
      426     7885    1       FPT_DUMPFPT.BUF_.BOUND = 16;

   7885  4 000051   000004 236000 1                  LDQ     FPT_DUMPFPT+4
         4 000052   177777 376007                    ANQ     65535,DL
         4 000053   000004 276003                    ORQ     4,DU
         4 000054   000004 756000 1                  STQ     FPT_DUMPFPT+4

PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:100  
      427     7886    1       CALL M$WRITE( FPT_DUMPFPT);

   7886  4 000055   000000 630400 1                  EPPR0   FPT_DUMPFPT
         4 000056   040001 713400                    CLIMB   write
         4 000057   401400 401760                    pmme    nvectors=4

      428     7887    1       RETURN;

   7887  4 000060   000000 702200 xent               TSX2  ! X66_ARET

FPT_DUMPFPT
 Sect OctLoc
   1     000   000003 777640   000010 006000   000000 177640   000000 006014    ................
   1     004   000023 777640   000000 006000   000000 177640   000000 006014    ................
   1     010   000000 400400   000000 000000   000000 000000   000000 000000    ................

FNCGRP
 Sect OctLoc
   3     000   102125 107101   143104 101143   105101 143111   101143 122101    BUGAcDAcEAcIAcRA
   3     004   143123 101154   164103 141104   103157 156103   164107 104141    cSAltCaDConCtGDa
   3     010   164105 170160   122145 154122   163170 123115   141123 115151    tExpRelRsxSMaSMi
   3     014   124153 107124   153120 124171   104125 101142   125105 162120    TkGTkPTyDUAbUErP
   3     020   101142 120105   162*** ******                                    AbPEr...

FNCTYP
 Sect OctLoc
   3     022   102125 107122   145161 111156   144122 163160   103156 146***    BUGReqIndRspCnf.

FNCMAP
 Sect OctLoc
   3     026   000101 201301   401102 202302   402103 203303   403104 204105    .A...B...C...D.E
   3     032   205106 206306   406107 207307   407110 210310   410111 211112    .F...G...H...I.J
   3     036   212113 213114   214314 414115   215315 415116   216316 416117    .K.L...M...N...O
   3     042   217317 417120   220121 221122   222123 223124   224225 226***    ...P.Q.R.S.T....

(unnamed)
 Sect OctLoc
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:101  
   3     046   040040 040040   040040 040040   040120 040040                             P
      429     7888
      430     7889    1       END XSP$DUMPFPT;

PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:102  
--  Include file information  --

   XSP_PRESENTATION_M.:XSA1TOU  is referenced.
   XSP_PRESENTATION_E.:XSA1TOU  is referenced.
   XSS_SESSION_E.:XSA1TOU  is referenced.
   CP_6_C.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure XSP$DUMPFPT.
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:103  

 **** Variables and constants ****

  ****  Section 001  Data  XSP$DUMPFPT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 FPT_DUMPFPT

  ****  Section 003 RoData XSP$DUMPFPT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(69)    r     1 FNCGRP                    26-0-0/c UBIN(9)     r     1 FNCMAP(0:62)
    22-0-0/c CHAR(15)    r     1 FNCTYP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @XSP$GENERIC               4-0-0/w SBIN        r     1 I
     5-0-0/c CHAR(2)     r     1 PKID                      *0-0-0/w STRC(504)   r     1 XSP$GENERIC

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(80)    r     1 XSS_SCRITCH

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:104  
     0-0-0N  NULL        r     1 M$DO


   Procedure XSP$DUMPFPT requires 49 words for executable code.
   Procedure XSP$DUMPFPT requires 8 words of local(AUTO) storage.

    No errors detected in file XSP$DATA.:XSA1TSI    .
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:105  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:106  
          MINI XREF LISTING

FNCGRP
      7852**DCL      7882>>CALLBLT
FNCMAP
      7855**DCL      7881>>ASSIGN
FNCTYP
      7854**DCL      7882>>CALLBLT
FPT_DUMPFPT
      5586**DCL      7886<>CALL
FPT_DUMPFPT.BUF_.BOUND
      5586**DCL      7885<<ASSIGN
FPT_DUMPFPT.STATION_
      5588**DCL      5588--REDEF
FPT_DUMPFPT.V
      5589**DCL      5586--DCLINIT
FPT_DUMPFPT.V.DVBYTE.VFC#
      5595**DCL      5595--REDEF
I
      7849**DCL      7881<<ASSIGN   7882>>CALLBLT  7882>>CALLBLT
M$WRITE
      5498**DCL-ENT  7886--CALL
PKID
      7851**DCL      7880<<CALLBLT  7882>>CALLBLT
XSP$GENERIC
      7767**DCL         9--PROC
XSP$GENERIC.ERRDEF
      7813**DCL      7833--REDEF
XSP$GENERIC.FNC
      7773**DCL      7881>>ASSIGN
XSP$GENERIC.PCID
      7774**DCL      7880>>CALLBLT
XSS_SCRITCH
      7847**DCL      5587--DCLINIT  5588--DCLINIT  7882<<CALLBLT
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:107  
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:108  
              MINI UREF LISTING

M$ACCT    5514**DCL-ENT
M$ACTIVATE    5517**DCL-ENT
M$ALIB    5510**DCL-ENT
M$ASUSER    5512**DCL-ENT
M$ATTACH    5519**DCL-ENT
M$BADPP    5537**DCL-ENT
M$CGCTL    5518**DCL-ENT
M$CGINFO    5518**DCL-ENT
M$CHECK    5499**DCL-ENT
M$CHGUNIT    5557**DCL-ENT
M$CLOSE    5497**DCL-ENT
M$CLRSTK    5555**DCL-ENT
M$CMDVAR    5566**DCL-ENT
M$CONFIG    5527**DCL-ENT
M$CORRES    5502**DCL-ENT
M$CPEXIT    5511**DCL-ENT
M$CVM    5535**DCL-ENT
M$CVOL    5500**DCL-ENT
M$DCLFLD    5527**DCL-ENT
M$DEACTIVATE    5517**DCL-ENT
M$DELREC    5499**DCL-ENT
M$DEQ    5564**DCL-ENT
M$DETACH    5519**DCL-ENT
M$DEVICE    5501**DCL-ENT
M$DISPLAY    5564**DCL-ENT
M$DISPRES    5504**DCL-ENT
M$DLIB    5510**DCL-ENT
M$DO    7850**DCL
M$DRIBBLE    5527**DCL-ENT
M$DRTN    5555**DCL-ENT
M$DSUSER    5512**DCL-ENT
M$ENQ    5563**DCL-ENT
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:109  
M$EOM    5522**DCL-ENT
M$ERASE    5528**DCL-ENT
M$ERR    5509**DCL-ENT
M$ERRMSG    5560**DCL-ENT
M$EVENT    5552**DCL-ENT
M$EXHUME    5561**DCL-ENT
M$EXIT    5509**DCL-ENT
M$EXTEND    5501**DCL-ENT
M$FDP    5533**DCL-ENT
M$FDS    5532**DCL-ENT
M$FEBOOT    5525**DCL-ENT
M$FECTL    5526**DCL-ENT
M$FEDUMP    5525**DCL-ENT
M$FID    5560**DCL-ENT
M$FINDPROC    5514**DCL-ENT
M$FSUSER    5512**DCL-ENT
M$FVP    5534**DCL-ENT
M$FWCG    5518**DCL-ENT
M$GBPL    5538**DCL-ENT
M$GDDL    5534**DCL-ENT
M$GDP    5533**DCL-ENT
M$GDS    5532**DCL-ENT
M$GETDCB    5503**DCL-ENT
M$GETMOUSE    5543**DCL-ENT
M$GETPM    5544**DCL-ENT
M$GJOB    5562**DCL-ENT
M$GLINEATTR    5522**DCL-ENT
M$GOODPP    5537**DCL-ENT
M$GPLATEN    5530**DCL-ENT
M$GPROMPT    5529**DCL-ENT
M$GTRMATTR    5523**DCL-ENT
M$GTRMCTL    5521**DCL-ENT
M$GTRMTAB    5524**DCL-ENT
M$GVP    5533**DCL-ENT
M$HELP    5560**DCL-ENT
M$INT    5552**DCL-ENT
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:110  
M$INTRTN    5513**DCL-ENT
M$IOQ    5548**DCL-ENT
M$JOBSTATS    5562**DCL-ENT
M$KEYIN    5502**DCL-ENT
M$LDEV    5497**DCL-ENT
M$LDTRC    5510**DCL-ENT
M$LIMIT    5503**DCL-ENT
M$LINES    5502**DCL-ENT
M$LINK    5509**DCL-ENT
M$MADMUCK    5505**DCL-ENT
M$MAKUSER    5536**DCL-ENT
M$MBS    5504**DCL-ENT
M$MDFFLD    5528**DCL-ENT
M$MERC    5553**DCL-ENT
M$MERCS    5554**DCL-ENT
M$MIRROR    5548**DCL-ENT
M$MONINFO    5565**DCL-ENT
M$MPL    5538**DCL-ENT
M$NODEINFO    5529**DCL-ENT
M$NXTUSR    5563**DCL-ENT
M$OCMSG    5561**DCL-ENT
M$OLAY    5509**DCL-ENT
M$OPEN    5497**DCL-ENT
M$PAS    5538**DCL-ENT
M$PATHCON    5561**DCL-ENT
M$PDS    5532**DCL-ENT
M$PFIL    5499**DCL-ENT
M$PLATEN    5523**DCL-ENT
M$PRECORD    5501**DCL-ENT
M$PROCNAME    5514**DCL-ENT
M$PROFILE    5525**DCL-ENT
M$PROMPT    5521**DCL-ENT
M$RACST    5505**DCL-ENT
M$RDSYSLOG    5546**DCL-ENT
M$READ    5498**DCL-ENT
M$RELDCB    5503**DCL-ENT
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:111  
M$RELRES    5504**DCL-ENT
M$RELSTARF    5506**DCL-ENT
M$REM    5506**DCL-ENT
M$RENV    5553**DCL-ENT
M$REQUIRE    5505**DCL-ENT
M$RETRY    5554**DCL-ENT
M$RETRYS    5554**DCL-ENT
M$REW    5500**DCL-ENT
M$RLSFLD    5528**DCL-ENT
M$RPRIV    5556**DCL-ENT
M$RSPP    5535**DCL-ENT
M$RSWITCH    5557**DCL-ENT
M$RUE    5563**DCL-ENT
M$SAD    5536**DCL-ENT
M$SAVE    5512**DCL-ENT
M$SCON    5513**DCL-ENT
M$SCREECH    5511**DCL-ENT
M$SENV    5553**DCL-ENT
M$SETFMA    5497**DCL-ENT
M$SETFP    5526**DCL-ENT
M$SINPUT    5524**DCL-ENT
M$SLCFLD    5529**DCL-ENT
M$SMOUSE    5543**DCL-ENT
M$SMPRT    5535**DCL-ENT
M$SPRIV    5556**DCL-ENT
M$SSC    5536**DCL-ENT
M$SSWITCH    5556**DCL-ENT
M$STATE    5565**DCL-ENT
M$STD    5537**DCL-ENT
M$STIMER    5551**DCL-ENT
M$STLPP    5534**DCL-ENT
M$STRAP    5551**DCL-ENT
M$STRMATTR    5523**DCL-ENT
M$STRMCTL    5521**DCL-ENT
M$STRMTAB    5524**DCL-ENT
M$SYMBIO    5562**DCL-ENT
PL6.E3A0      #004=XSP$DUMPFPT File=XSP$DATA.:XSA1TSI                            WED 10/01/97 11:59 Page:112  
M$SYSCON    5548**DCL-ENT
M$SYSID    5566**DCL-ENT
M$TDCLOSE    5547**DCL-ENT
M$TDIO    5547**DCL-ENT
M$TDOPEN    5546**DCL-ENT
M$TDREQCPU    5547**DCL-ENT
M$TEMPWROC    5541**DCL-ENT
M$TIME    5564**DCL-ENT
M$TRAP    5551**DCL-ENT
M$TRMISC    5526**DCL-ENT
M$TRMPRG    5522**DCL-ENT
M$TRTN    5555**DCL-ENT
M$TRUNC    5498**DCL-ENT
M$TTIMER    5551**DCL-ENT
M$UC    5521**DCL
M$UMPL    5538**DCL-ENT
M$UNFID    5560**DCL-ENT
M$UNLATCH    5517**DCL-ENT
M$UNSHARE    5514**DCL-ENT
M$USRFIELD    5557**DCL-ENT
M$VIRTUAL    5532**DCL-ENT
M$WAIT    5555**DCL-ENT
M$WEOF    5500**DCL-ENT
M$WRSYSLOG    5546**DCL-ENT
M$XCON    5552**DCL-ENT
M$XCONRTN    5513**DCL-ENT
M$XEQTIME    5565**DCL-ENT
M$XFLUSH    5506**DCL-ENT
M$XMOUSE    5543**DCL-ENT
M$XXX    5509**DCL-ENT
M$YC    5511**DCL-ENT
XSP$DUMPFPT       9**PROC
