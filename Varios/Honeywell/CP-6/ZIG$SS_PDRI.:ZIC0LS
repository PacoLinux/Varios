
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:1    
        1        1        /*M*     ZIG$SS_PDRI      I-D-S/II       DBACS SUBSCHEMA TRANSLATER. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$SS_PDRI
        9        9        PURPOSE:	TO CHECK THE SYNTAX FOR SUBSCHEMAS (COBOL, APL, BASIC, AND FORTRAN)
       10       10                 AND BUILD THE SUBSCHEMA FILE FOR VALIDATION TO BE DONE ON
       11       11                 THAT SUBSCHEMA FILE.
       12       12        */
       13       13        ZIG$SS_PDRI:
       14       14            PROC ;
       15       15    1   DCL CLOSE_64 ENTRY;
       16       16    1   DCL QUIT BIT (1) EXT;
       17       17    1   DCL LAST_COUNT UBIN (36) EXT;
       18       18    1   DCL SS_COBOL UBIN (36) SYMREF;
       19       19    1   DCL SS_APL UBIN (36) SYMREF;
       20       20    1   DCL SS_FORTRAN UBIN (36) SYMREF;
       21       21    1   DCL SS_BASIC UBIN (36) SYMREF;
       22       22    1   DCL SUB_ERR BIT (72) STATIC SYMDEF;
       23       23    1   DCL LIST_STRING CHAR (128) EXT;
       24       24    1   DCL DBASE2(0:4159) UBIN (36) AUTO;
       25       25    1   DCL ONLINE BIT (1) EXT;
       26       26    1   DCL NUM_CHAR_READ UBIN (36) EXT;
       27       27    1   DCL X$PARSE ENTRY(1) ALTRET;
       28       28    1   DCL ZIG$SS_PSET ENTRY(1);
       29       29    1   DCL END_SUBSCHEMA BIT (1) EXT;
       30       30    1   DCL ZIG$SS_READ ENTRY;
       31       31    1   DCL REC CHAR (80) EXT;
       32       32    1   DCL FOUND_PER BIT(1) SYMREF;
       33       33    1   DCL NU_ERROR UBIN (36) EXT;
       34       34    1   DCL COMPRD ENTRY;
       35       35    1   DCL LINE CHAR (4000) EXT;
       36       36    1   DCL EOFFLG UBIN (36) EXT;
       37       37    1   DCL NCS UBIN (36) EXT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:2    
       38       38    1   DCL INTERNAL_ID UBIN (36) EXT;
       39       39    1   DCL UWA_ALLOC UBIN (36) EXT;
       40       40        /*       If we didn't use this record then don't read another */
       41       41    1   DCL LINE_COUNT UBIN (36) EXT;
       42       42    1   DCL TRANSLTBLE (0:257) UBIN (9) EXT INIT (50*258) UNAL;
       43       43    1   DCL LAST_GROUP(0:49) UBIN (36) EXT;
       44       44    1   DCL LARGEST_GROUP UBIN (36) EXT;
       45       45    1   DCL I UBIN (36);
       46       46    1   DCL J UBIN (36) EXT;
       47       47    1   DCL FIR_SW UBIN (36) EXT;
       48       48    1   DCL HAVE_CU_RECORD BIT (1) STATIC;
       49       49    1   DCL DESCPTR PTR STATIC INIT (ADDR(BUFFER1));
       50       50    1   DCL BUFFER1 CHAR (128) STATIC;
       51       51    1   DCL TEMP_BUFFER CHAR (128) BASED (DESCPTR);
       52       52    1   DCL EOF UBIN (36) STATIC;
       53       53    1   DCL BUFFER_SIZE UBIN (36) STATIC;
       54       54    1   DCL WRITSF ENTRY (2);
       55       55    1   DCL READSF ENTRY (2);
       56       56    1   DCL WRIT64 ENTRY (2);
       57       57    1   DCL READ64 ENTRY (2);
       58       58    1   DCL WORD36 UBIN (36) BASED;
       59       59    1   DCL BUFFER_ERR BIT(1) EXT INIT('0'B);
       60       60    1   DCL NO_ERRORS BIT (1) EXT;
       61       61    1   DCL TITLE_DIV BIT(1) EXT;
       62       62    1   DCL MAPPING_DIV BIT(1) EXT;
       63       63    1   DCL ALIAS_SEC BIT(1) EXT;
       64       64    1   DCL STRUCTURE_DIV BIT(1) EXT;
       65       65    1   DCL REALM_SEC BIT(1) EXT;
       66       66    1   DCL SET_SEC BIT(1) EXT;
       67       67    1   DCL KEY_SEC BIT(1) EXT;
       68       68    1   DCL RECORD_SEC BIT(1) EXT;
       69       69    1   DCL INVOK BIT(1) STATIC;
       70       70    1   DCL PRIV BIT(1) STATIC;
       71       71    1   DCL DIAG BIT(1) STATIC;
       72       72         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:3    
       73       73         %INCLUDE ZIG_GENERAL;
       74      181         %INCLUDE ZI_SUB_LANG;
       75     1896         %GENERAL;
       76     2020         %TEXT_LINE;
       77     2057         %CONTROL_BLOCK;
       78     2165        %CONTROL_BLOCK(NAME=TEMP_CONTROL);
       79     2273         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:4    
       80     2274         %INCLUDE XU_MACRO_C;
       81     5380         %INCLUDE ZI_ERRORS_SUBS;
       82     5900        %LIST;
       83     5901         %P_PCB(NAME = SS_TRAN,T = LINE,
       84     5902         WSZ=4160, U$ = ZIG$SS_PSET,STCLASS =
       85     5903         "STATIC SYMDEF",C_LD='/*',C_TL='*/',C=NO);
              5904        /*F*  NAME:     P_PCB
              5905              FUNCTION: Parse Control Block.  This structure is used to pass data
              5906                  to the X$PARSE utility, and to receive X$PARSE's responses.
              5907        */
              5908         %LSET LISTDIR='0'B;
              5921    1   DCL 1 SS_TRAN STATIC SYMDEF ALIGNED,
              5922    1         2 TEXT$ PTR INIT(ADDR(LINE))/**/,
              5926    1         2 ROOT$ PTR INIT(ADDR(NIL))/**/,
              5930    1         2 WORK$ PTR INIT(ADDR(NIL))/**/,
              5934    1         2 OUT$ PTR INIT(ADDR(NIL))/**/,
              5939    1         2 U$$ EPTR INIT(ENTADDR(ZIG$SS_PSET))/**/,
              5951    1         2 WKSZ UBIN(18) UNAL INIT(4160)/**/,
              5956    1         2 CMPRS BIT(1) UNAL INIT('0'B)/**/,
              5962    1         2 CONTINUE BIT(1) UNAL INIT('1'B)/**/,
              5966    1         2 NOLEADBLANKS BIT(1) UNAL INIT('0'B)/**/,
              5971    1         2 NXT BIT(1) UNAL INIT('0'B)/**/,
              5988    1         2 DYNMEM BIT(1) UNAL INIT('0'B)/**/,
              5993    1         2 KEYWORDS BIT (1) INIT ('0'B) /**/,
              6008    1         2 BLANKONLY BIT (1),
              6016    1         2 NXT_SZONLY BIT(1) UNAL INIT('0'B)/**/,
              6024    1         2 * BIT (10) INIT ('0'B) /**/,
              6025    1         2 ERROR ALIGNED,
              6030    1           3 FCG BIT(12) UNAL INIT('0'B)/**/,
              6031    1           3 MID BIT(6) UNAL INIT('0'B)/**/,
              6032    1           3 MON BIT(1) UNAL INIT('0'B)/**/,
              6033    1           3 CODE UBIN(14) UNAL INIT(0)/**/,
              6034    1           3 SEV UBIN(3) UNAL INIT(0)/**/,
              6035    1         2 COMMENT ALIGNED,
              6039    1           3 LEAD CHAR(2) UNAL INIT('/*')/**/,
              6047    1           3 TRAIL CHAR(2) UNAL INIT('*/')/**/,
              6054    1         2 WK_USED UBIN(18) UNAL INIT(0)/**/,
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:5    
              6058    1         2 VERSION_CODE UBIN(4) UNAL INIT(1)/**/,
              6063    1         2 OUTDCB# UBIN(14) UNAL INIT(DCBNUM(NIL))/**/,
              6068    1         2 NCHARS UBIN WORD INIT(0)/**/,
              6072    1         2 HI_CHAR UBIN WORD INIT(0)/**/,
              6079    1         2 HINODE$ PTR INIT(ADDR(NIL))/**/,
              6088    1         2 USER$ PTR INIT(ADDR(NIL))/**/,
              6094    1         2 OUTENT$ EPTR INIT(ENTADDR(NIL))/**/;
       86     6102         %PARSE$OUT(NAME=BLK,
       87     6103         STCLASS = BASED);
              6104        /*F*  NAME:     PARSE$OUT
              6105              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
              6106                  "alternative", "reducing alternative", or "koncat" node in
              6107                  the user's parse tree.
              6108        */
              6109    1   DCL 1 NAME STCLASS ALIGNED,
              6110    1         2 TEMP BIT(1) UNAL,
              6111    1         2 * BIT (11) UNAL,
              6112    1         2 NDTYPE UBIN (6) UNAL,
              6113        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
              6114                  block corresponds.  See the XU_SUBS_C file for the
              6115                  %EQU symbols whose values may appear in this field.
              6116        */
              6117    1         2 CODE UBIN HALF HALIGNED,
              6118        /*K* CODE - Contains the numeric "node code" specified by the user when
              6119                  the corresponding parse-node was defined.
              6120        */
              6121    1         2 NSUBLKS UBIN HALF HALIGNED,
              6122        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
              6123                  pointers actually available in the PARSE$OUT.SUBLK$ array.
              6124        */
              6125    1         2 SCRITCH SCRMODE SCRALGN,
              6126        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
              6127                  initializes this field to zero when the PARSE$OUT structure
              6128                  is allocated, and never sets or examines it thereafter.
              6129                  The name of this field may be changed when the PARSE$OUT macro
              6130                  is invoked by the user (say "SCRITCH=yourname"), and its data
              6131                  type may also be changed (say "SCRMODE=pl6datatype" and
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:6    
              6132                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
              6133                  and be UNALIGNED, CALIGNED, or HALIGNED.
              6134        */
              6135    1         2 CPOS UBIN WORD,
              6136        /*K* CPOS - "character position" of this block.  This field will contain
              6137                  a character index (starting at 0) into the original parse
              6138                  string;  the index identifies the first character of the
              6139                  string which was accepted by this node (or by any of its
              6140                  sub-nodes).
              6141        */
              6142    1         2 SUBLK$(0:0) PTR UNAL;
              6143        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
              6144                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
              6145                  OUT$BLK structure, or to an OUT$SYM structure.
              6146        */
       88     6148         %PARSE$SYM(NAME=SYM,
       89     6149         STCLASS = BASED);
              6150        /*F*  NAME:     PARSE$SYM
              6151              FUNCTION: holds "parse symbols".  Structures of this form are created
              6152                  by X$PARSE to hold those portions of the string being parsed
              6153                  which must be returned to the user - quoted strings, decimal
              6154                  or octal numbers, PL-6 identifiers, etc.
              6155        */
              6156    1   DCL 1 NAME STCLASS ALIGNED,
              6157    1         2 TEMP BIT(1) UNAL,
              6158    1         2 * BIT (11) UNAL,
              6159    1         2 NDTYPE UBIN (6) UNAL,
              6160        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
              6161        */
              6162    1         2 CODE UBIN HALF HALIGNED,
              6163        /*K* CODE - see OUT$BLK.CODE for details.
              6164        */
              6165    1         2 NSUBLKS UBIN HALF HALIGNED,
              6166        /*K* NSUBLKS - always contains the value 1.
              6167        */
              6168    1         2 SCRITCH SCRMODE SCRALGN,
              6169        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:7    
              6170        */
              6171    1         2 CPOS UBIN WORD,
              6172        /*K* CPOS - see OUT$BLK.CPOS for details.
              6173        */
              6174    1         2 TEXTC$ PTR,
              6175        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
              6176                  followed by a variable number of characters).  Always
              6177                  points to OUT$SYM.COUNT in the current OUT$SYM block.
              6178        */
              6179    1         2 COUNT UBIN BYTE CALIGNED,
              6180        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
              6181        */
              6182    1         2 TEXT CHAR(NAME.COUNT) CALIGNED;
              6183        /*K* TEXT - contains the text of a string, decimal number, PL-6
              6184                  identifier, or some other parser "symbol".
              6185        */
       90     6187         %PLIST;
       91     6188         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:8    
       92     6189        /*******
       93     6190            Here starts the program.
       94     6191        *******/
       95     6192    1       IF LANG_ALLOWED(SUB_LANGUAGE) = 0
       96     6193    2       THEN DO;
       97     6194    2           BUFFER1 = LANG_TEXT(SUB_LANGUAGE);
       98     6195    2           CALL SET_FIELDS(1,30,BUFFER1);
       99     6196    2           CALL ERROR(%ZIG_INTERFACE_NO_$);
      100     6197    2           RETURN;
      101     6198    2           END;
      102     6199    1       CALL CONCAT(HEADING_TEXT,LANG_TEXT(SUB_LANGUAGE),' SUBSCHEMA TRANSLATE');
      103     6200    1       CALL SUBLST(HEADING_TEXT);
      104     6201    2       DO I = 0 TO 49;
      105     6202    2           LAST_GROUP(I) = 0;
      106     6203    2           END;
      107     6204    1       LARGEST_GROUP = 0;
      108     6205        /*
      109     6206              Init things for COBOL group items.
      110     6207        */
      111     6208        /*
      112     6209              Now we init the transltable for evaling cobol picture
      113     6210            clauses. This table is from GCOS and i personally don't
      114     6211            understand how the picture clause is evalulated.
      115     6212        */
      116     6213    1       IF SUB_LANGUAGE = #COBOL
      117     6214    2       THEN DO;
      118     6215        /*
      119     6216              Init the table for picture clauses.
      120     6217        */
      121     6218    2           TRANSLTBLE(40) = 40;
      122     6219    2           TRANSLTBLE(41) = 41;
      123     6220    2           TRANSLTBLE(48) = 127;
      124     6221    2           TRANSLTBLE(49) = 127;
      125     6222    2           TRANSLTBLE(50) = 127;
      126     6223    2           TRANSLTBLE(51) = 127;
      127     6224    2           TRANSLTBLE(52) = 127;
      128     6225    2           TRANSLTBLE(53) = 127;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:9    
      129     6226    2           TRANSLTBLE(54) = 127;
      130     6227    2           TRANSLTBLE(55) = 127;
      131     6228    2           TRANSLTBLE(56) = 127;
      132     6229    2           TRANSLTBLE(57) = 15;
      133     6230    2           TRANSLTBLE(65) = 14;
      134     6231    2           TRANSLTBLE(80) = 10;
      135     6232    2           TRANSLTBLE(83) = 12;
      136     6233    2           TRANSLTBLE(86) = 9;
      137     6234    2           TRANSLTBLE(88) = 13;
      138     6235    2           TRANSLTBLE(97) = 14;
      139     6236    2           TRANSLTBLE(112)= 10;
      140     6237    2           TRANSLTBLE(115)= 12;
      141     6238    2           TRANSLTBLE(118)= 9;
      142     6239    2           TRANSLTBLE(120)= 13;
      143     6240    2           END;
      144     6241    1       CALL UOPEN('5*',1);
      145     6242        /*
      146     6243              Now open the subschema for input and store all the compilelation
      147     6244            records so they can be restored in the subschema.
      148     6245        */
      149     6246    1       J = 1; /* Fool the ZIG$SS_IO to think we want the subschema open input */
      150     6247    1       ERROR_IO = 0;
      151     6248    1       HAVE_CU_RECORD = '0'B;
      152     6249    1       CALL READ64(0,ADDR(TEMP_CONTROL));
      153     6250    1       IF ERROR_IO = 0 /* Subschema exists */
      154     6251    2       THEN DO;
      155     6252    2           I = TEMP_CONTROL.FIRST_CU_RECORD;
      156     6253    2           CALL UOPEN('3*',1);
      157     6254    3           DO WHILE (I ~= 0);
      158     6255    3               HAVE_CU_RECORD = '1'B;
      159     6256    3               CALL READSF(I,BUFFER1);
      160     6257    3               CALL UPUT('3*',ADDR(BUFFER1),32);
      161     6258    3               I = ADDR(BUFFER1) -> WORD36;
      162     6259    3               END;
      163     6260    2           CALL UCLOSE('3*');
      164     6261    2           END;
      165     6262    1       CALL CLOSE_64;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:10   
      166     6263    1       FIR_SW = 0; /* Make READ64 think it has not been called */
      167     6264    1       J = 5; /* Reset the function to TRANSLATE subschema DDL */
      168     6265    1       INTERNAL_ID = 1;
      169     6266    1       UWA_ALLOC = CONTROL.NEXT_UWA_LOC * 8;
      170     6267         /*
      171     6268            UWA_ALLOC IS IN NIBBLES AND NEXT_UWA_LOC IS IN WORDS.
      172     6269         */
      173     6270    1       LAST_COUNT=0;
      174     6271    1       CURRENT_RECORD = 2;
      175     6272    1       SS_TRAN.WORK$=ADDR(DBASE2);
      176     6273    1       REMEMBER SYNTAX_ERROR IN SUB_ERR;
      177     6274    1       LINE_COUNT=1;
      178     6275    1       END_SUBSCHEMA ='0'B;
      179     6276    1       TITLE_DIV = '0'B;
      180     6277    1       MAPPING_DIV = '0'B;
      181     6278    1       ALIAS_SEC = '0'B;
      182     6279    1       STRUCTURE_DIV = '0'B;
      183     6280    1       REALM_SEC = '0'B;
      184     6281    1       SET_SEC = '0'B;
      185     6282    1       KEY_SEC = '0'B;
      186     6283    1       RECORD_SEC = '0'B;
      187     6284    1       INVOK = '0'B;
      188     6285    1       PRIV = '0'B;
      189     6286    1       DIAG = '0'B;
      190     6287    1       BUFFER_ERR = '0'B;
      191     6288    1       IF SUB_LANGUAGE=#COBOL
      192     6289    2       THEN DO;
      193     6290    2           SS_TRAN.ROOT$ = ADDR(SS_COBOL);
      194     6291    2           TEXT_LINE.COLUMN_NU = 7;
      195     6292    2           END;
      196     6293    1       IF SUB_LANGUAGE=#APL
      197     6294    2       THEN DO;
      198     6295    2           SS_TRAN.ROOT$ = ADDR(SS_APL);
      199     6296    2           TEXT_LINE.COLUMN_NU = 1;
      200     6297    2           END;
      201     6298    1       IF SUB_LANGUAGE=#BASIC
      202     6299    2       THEN DO;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:11   
      203     6300    2           SS_TRAN.ROOT$ = ADDR(SS_BASIC);
      204     6301    2           TEXT_LINE.COLUMN_NU = 1;
      205     6302    2           END;
      206     6303    1       IF SUB_LANGUAGE=#FORTRAN
      207     6304    2       THEN DO;
      208     6305    2           SS_TRAN.ROOT$ = ADDR(SS_FORTRAN);
      209     6306    2           TEXT_LINE.COLUMN_NU = 1;
      210     6307    2           END;
      211     6308    2       DO WHILE (~END_SUBSCHEMA);
      212     6309    2           CALL ZIG$SS_READ;
      213     6310    2           IF END_SUBSCHEMA
      214     6311    2           THEN GOTO GO_BACK_AND_END;
      215     6312    2   START_PARSE: CALL X$PARSE(SS_TRAN) ALTRET(PARSE_ERROR);/* Call syntax parser */
      216     6313    2   NEXT_PARSE:
      217     6314    2           SS_TRAN.NCHARS=0;
      218     6315    2           LINE = ' ';
      219     6316    2           END;
      220     6317    1   GO_BACK_AND_END:
      221     6318    1       IF HAVE_CU_RECORD
      222     6319    2       THEN DO;
      223     6320    2           CALL UOPEN('3*',0);
      224     6321    2           CALL UGET('3*',DESCPTR,EOF,BUFFER_SIZE);
      225     6322    2           CONTROL.FIRST_CU_RECORD = CONTROL.NEXT_AVAILABLE_RECORD;
      226     6323    2           CURRENT_RECORD = CONTROL.NEXT_AVAILABLE_RECORD;
      227     6324    3           DO WHILE (EOF=0);
      228     6325    3               IF DESCPTR -> WORD36 ~= 0
      229     6326    3               THEN DESCPTR -> WORD36 = CURRENT_RECORD + 1;
      230     6327    3               CALL WRITSF(CURRENT_RECORD,TEMP_BUFFER);
      231     6328    3               CURRENT_RECORD = CURRENT_RECORD + 1;
      232     6329    3               CALL UGET('3*',DESCPTR,EOF,BUFFER_SIZE);
      233     6330    3               END;
      234     6331    2           CONTROL.FIRST_NFE_RECORD = CURRENT_RECORD;
      235     6332    2           CONTROL.NEXT_AVAILABLE_RECORD = CURRENT_RECORD + 1;
      236     6333    2           CALL WRIT64(0, ADDR(CONTROL));
      237     6334    2           CALL UCLOSE('3*');
      238     6335    2           END;
      239     6336    1       CALL SET_FIELDS(1,30,CONTROL.SUBSCHEMA_NAME);
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:12   
      240     6337    1       CALL SET_FIELDS(2,30,CONTROL.SCHEMA_NAME);
      241     6338    1       IF NO_ERRORS
      242     6339    2       THEN DO;
      243     6340    2           CALL INFO_ONLY(%SS_TRANSLATION_OK);
      244     6341        /*E*     ERROR:    ZIG-SS_TRANSLATION_OK-C
      245     6342        MESSAGE: No errors for the subschema %U1
      246     6343                 ( schema %U2 ) on subschema translation.
      247     6344        */
      248     6345    2           END;
      249     6346    2       ELSE DO;
      250     6347    2           CALL SET_FIELD_NUM(3,NUM_ERROR_MSG);
      251     6348    2           CALL ERROR(%SS_TRANSLATION_NOT_OK);
      252     6349        /*E*     ERROR:    ZIG-SS_TRANSLATION_NOT_OK-C
      253     6350        MESSAGE: %U3 Errors in the subschema %U1
      254     6351                 ( schema %U2 ) on subschema translation.
      255     6352                 Validation cannot be ran on this subschema
      256     6353                 until all errors have been corrected.
      257     6354        */
      258     6355    2           END;
      259     6356    1       IF NUM_WARN_MSG ~= 0
      260     6357    2       THEN DO;
      261     6358    2           CALL SET_FIELD_NUM(3,NUM_WARN_MSG);
      262     6359    2           CALL INFO_ONLY(%SS_TRANSLATION_WARN_MSG);
      263     6360        /*E*     ERROR:    ZIG-SS_TRANSLATION_WARN_MSG-C
      264     6361        MESSAGE: %U3 Warning messages in this subschema translation.
      265     6362        */
      266     6363    2           END;
      267     6364    1       RETURN;
      268     6365        /*
      269     6366            Handle the internal parsing errors.
      270     6367        */
      271     6368    1   PARSE_ERROR:
      272     6369    1       QUIT = '0'B;
      273     6370    2       DO CASE (SS_TRAN.ERROR.CODE);
      274     6371    2       CASE (E$SYNERR,E$NULLROOT,E$BADNODE,E$WKOVERFLOW,
      275     6372    2          E$SMALLWORK,E$NULLU$$);
      276     6373    2           CALL ERROR (SS_TRAN.ERROR.CODE);/* Put out error */
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:13   
      277     6374    2       CASE (ELSE);
      278     6375    2           CALL ERROR (E$UNKN_ERR); /* Put out error */
      279     6376    2           END;
      280     6377    1       CALL ABORT;
      281     6378        /*                                                        */
      282     6379        /*       ERROR:    ZIG-E$SYNERR-C
      283     6380                 MESSAGE:  Syntax error.
      284     6381        */
      285     6382        /*       ERROR:    ZIG-E$NULLROOT-C
      286     6383                 MESSAGE:  Missing tree.
      287     6384        */
      288     6385        /*       ERROR:    ZIG-E$BADNODE-C
      289     6386                 MESSAGE:  Illegal node.
      290     6387        */
      291     6388        /*       ERROR:    ZIG-E$WKOVERFLOW-C
      292     6389                 MESSAGE:  Workspace overflow.
      293     6390        */
      294     6391        /*       ERROR:    ZIG-E$SMALLWORK-C
      295     6392                 MESSAGE:  Insufficient work area.
      296     6393        */
      297     6394        /*       ERROR:    ZIG-E$NULLU$$-C
      298     6395                 MESSAGE:  Missing U$$ routine.
      299     6396        */
      300     6397        /*       ERROR:    ZIG-E$UNKN_ERR-C
      301     6398                 MESSAGE:  Unknown error from X$PARSE.
      302     6399        */
      303     6400         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:14   
      304     6401        /*******
      305     6402                 The directive had a syntax error so
      306     6403                 if the user is online then let him retype the last
      307     6404                 line and restart the syntax checking else return to exec.
      308     6405        ******/
      309     6406    1   SYNTAX_ERROR:
      310     6407    1       IF END_SUBSCHEMA
      311     6408    1       THEN GOTO GO_BACK_AND_END;
      312     6409    1       IF ONLINE & EOFFLG = 0
      313     6410    2       THEN DO;
      314     6411    2           CALL ZIG$SS_READ;
      315     6412    2           IF SUBSTR(REC,0,2)='Q ' OR SUBSTR(REC,0,5)='QUIT '
      316     6413    3           THEN DO ;
      317     6414    3               QUIT='1'B;
      318     6415    3               RETURN;
      319     6416    3               END;
      320     6417    2           END;
      321     6418    1       LAST_COUNT=0;
      322     6419    2       DO WHILE (~FOUND_PER);
      323     6420    2           SS_TRAN.NCHARS = 0;
      324     6421    2           CALL ZIG$SS_READ;
      325     6422    2           END;
      326     6423    1       GOTO NEXT_PARSE;
      327     6424    1   END ZIG$SS_PDRI;

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:15   
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   XU_MACRO_C.:LIB_E05  is referenced.
   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   ZIG_GENERAL.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$SS_PDRI.

   Procedure ZIG$SS_PDRI requires 374 words for executable code.
   Procedure ZIG$SS_PDRI requires 4168 words of local(AUTO) storage.

    No errors detected in file ZIG$SS_PDRI.:ZIC0TSI    .

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:16   

 Object Unit name= ZIG$SS_PDRI                                File name= ZIG$SS_PDRI.:ZIC0TOU
 UTS= SEP 05 '97 12:13:45.04 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none     1      1  QUIT
    1  LblCom even  none     1      1  LAST_COUNT
    2   Data  even  none    55     67  ZIG$SS_PDRI
    3  LblCom even  none    32     40  LIST_STRING
    4  LblCom even  none     1      1  ONLINE
    5  LblCom even  none     1      1  NUM_CHAR_READ
    6  LblCom even  none     1      1  END_SUBSCHEMA
    7  LblCom even  none    20     24  REC
    8  LblCom even  none     1      1  NU_ERROR
    9  LblCom even  none  1000   1750  LINE
   10  LblCom even  none     1      1  EOFFLG
   11  LblCom even  none     1      1  NCS
   12  LblCom even  none     1      1  INTERNAL_ID
   13  LblCom even  none     1      1  UWA_ALLOC
   14  LblCom even  none     1      1  LINE_COUNT
   15  LblCom even  none    65    101  TRANSLTBLE
   16  LblCom even  none    50     62  LAST_GROUP
   17  LblCom even  none     1      1  LARGEST_GROUP
   18  LblCom even  none     1      1  J
   19  LblCom even  none     1      1  FIR_SW
   20  LblCom even  none     1      1  BUFFER_ERR
   21  LblCom even  none     1      1  NO_ERRORS
   22  LblCom even  none     1      1  TITLE_DIV
   23  LblCom even  none     1      1  MAPPING_DIV
   24  LblCom even  none     1      1  ALIAS_SEC
   25  LblCom even  none     1      1  STRUCTURE_DIV
   26  LblCom even  none     1      1  REALM_SEC
   27  LblCom even  none     1      1  SET_SEC
   28  LblCom even  none     1      1  KEY_SEC
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:17   
   29  LblCom even  none     1      1  RECORD_SEC
   30  LblCom even  none     1      1  NUM_ERROR_MSG
   31  LblCom even  none     1      1  NUM_WARN_MSG
   32  LblCom even  none     1      1  ALLOCATE_END
   33  LblCom even  none     2      2  SUBSCHEMA_KEY
   34  LblCom even  none     1      1  BUFFER$
   35  LblCom even  none     1      1  ERROR_IO
   36  LblCom even  none     1      1  BUFFER_LEN
   37  LblCom even  none     2      2  UWA_KEY
   38  LblCom even  none     1      1  NEXT_UWA_SECOND_HALF
   39  LblCom even  none     2      2  RVA_KEY
   40  LblCom even  none     2      2  IA__KEY
   41  LblCom even  none     1      1  NEXT_RVA_SECOND_HALF
   42  LblCom even  none    32     40  SEARCHR_NB
   43  LblCom even  none    32     40  SEM_COM
   44  LblCom even  none    32     40  DMCL_XLATE
   45  LblCom even  none    32     40  Q2_PERCENT
   46  LblCom even  none     5      5  LANG_ALLOWED
   47  LblCom even  none     1      1  SUB_LANGUAGE
   48  LblCom even  none    16     20  HEADING_TEXT
   49  LblCom even  none    13     15  LANG_TEXT
   50  LblCom even  none     1      1  HASH_SCHEMA_NAME
   51  LblCom even  none     1      1  CURRENT_RECORD
   52  LblCom even  none    32     40  TEXT_LINE
   53  LblCom even  none    64    100  CONTROL
   54  LblCom even  none    64    100  TEMP_CONTROL
   55  RoData even  UTS     10     12  ZIG$SS_PDRI
   56   Proc  even  none   374    566  ZIG$SS_PDRI
   57  RoData even  none    56     70  ZIG$SS_PDRI

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    56      0   yes            yes      Std        0  ZIG$SS_PDRI
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:18   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    2      0  SUB_ERR                            2     51  SS_TRAN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 ZIG$SS_PSET
         yes           Std       3 SET_FIELDS
         yes           Std       2 UOPEN
         yes           Std       4 UGET
         yes           Std       3 UPUT
         yes           Std       0 CLOSE_64
         yes           Std       0 ZIG$SS_READ
         yes           Std       1 INFO_ONLY
         yes           Std       2 SET_FIELD_NUM
         yes           Std       1 ERROR
         yes           Std       2 SUBLST
         yes           Std       2 READ64
         yes           Std       2 READSF
         yes           Std       1 UCLOSE
         yes           Std       2 WRITSF
         yes           Std       0 ABORT
 yes     yes           Std       1 X$PARSE
         yes           Std       2 WRIT64
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:19   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SS_COBOL                              SS_APL                                SS_FORTRAN
     SS_BASIC                              FOUND_PER

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:20   


        1        1        /*M*     ZIG$SS_PDRI      I-D-S/II       DBACS SUBSCHEMA TRANSLATER. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$SS_PDRI
        9        9        PURPOSE:	TO CHECK THE SYNTAX FOR SUBSCHEMAS (COBOL, APL, BASIC, AND FORTRAN)
       10       10                 AND BUILD THE SUBSCHEMA FILE FOR VALIDATION TO BE DONE ON
       11       11                 THAT SUBSCHEMA FILE.
       12       12        */
       13       13        ZIG$SS_PDRI:
       14       14            PROC ;

     14 56 000000   000000 700200 xent  ZIG$SS_PDRI  TSX0  ! X66_AUTO_0
        56 000001   010110 000000                    ZERO    4168,0

       15       15    1   DCL CLOSE_64 ENTRY;
       16       16    1   DCL QUIT BIT (1) EXT;
       17       17    1   DCL LAST_COUNT UBIN (36) EXT;
       18       18    1   DCL SS_COBOL UBIN (36) SYMREF;
       19       19    1   DCL SS_APL UBIN (36) SYMREF;
       20       20    1   DCL SS_FORTRAN UBIN (36) SYMREF;
       21       21    1   DCL SS_BASIC UBIN (36) SYMREF;
       22       22    1   DCL SUB_ERR BIT (72) STATIC SYMDEF;
       23       23    1   DCL LIST_STRING CHAR (128) EXT;
       24       24    1   DCL DBASE2(0:4159) UBIN (36) AUTO;
       25       25    1   DCL ONLINE BIT (1) EXT;
       26       26    1   DCL NUM_CHAR_READ UBIN (36) EXT;
       27       27    1   DCL X$PARSE ENTRY(1) ALTRET;
       28       28    1   DCL ZIG$SS_PSET ENTRY(1);
       29       29    1   DCL END_SUBSCHEMA BIT (1) EXT;
       30       30    1   DCL ZIG$SS_READ ENTRY;
       31       31    1   DCL REC CHAR (80) EXT;
       32       32    1   DCL FOUND_PER BIT(1) SYMREF;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:21   
       33       33    1   DCL NU_ERROR UBIN (36) EXT;
       34       34    1   DCL COMPRD ENTRY;
       35       35    1   DCL LINE CHAR (4000) EXT;
       36       36    1   DCL EOFFLG UBIN (36) EXT;
       37       37    1   DCL NCS UBIN (36) EXT;
       38       38    1   DCL INTERNAL_ID UBIN (36) EXT;
       39       39    1   DCL UWA_ALLOC UBIN (36) EXT;
       40       40        /*       If we didn't use this record then don't read another */
       41       41    1   DCL LINE_COUNT UBIN (36) EXT;
       42       42    1   DCL TRANSLTBLE (0:257) UBIN (9) EXT INIT (50*258) UNAL;
       43       43    1   DCL LAST_GROUP(0:49) UBIN (36) EXT;
       44       44    1   DCL LARGEST_GROUP UBIN (36) EXT;
       45       45    1   DCL I UBIN (36);
       46       46    1   DCL J UBIN (36) EXT;
       47       47    1   DCL FIR_SW UBIN (36) EXT;
       48       48    1   DCL HAVE_CU_RECORD BIT (1) STATIC;
       49       49    1   DCL DESCPTR PTR STATIC INIT (ADDR(BUFFER1));
       50       50    1   DCL BUFFER1 CHAR (128) STATIC;
       51       51    1   DCL TEMP_BUFFER CHAR (128) BASED (DESCPTR);
       52       52    1   DCL EOF UBIN (36) STATIC;
       53       53    1   DCL BUFFER_SIZE UBIN (36) STATIC;
       54       54    1   DCL WRITSF ENTRY (2);
       55       55    1   DCL READSF ENTRY (2);
       56       56    1   DCL WRIT64 ENTRY (2);
       57       57    1   DCL READ64 ENTRY (2);
       58       58    1   DCL WORD36 UBIN (36) BASED;
       59       59    1   DCL BUFFER_ERR BIT(1) EXT INIT('0'B);
       60       60    1   DCL NO_ERRORS BIT (1) EXT;
       61       61    1   DCL TITLE_DIV BIT(1) EXT;
       62       62    1   DCL MAPPING_DIV BIT(1) EXT;
       63       63    1   DCL ALIAS_SEC BIT(1) EXT;
       64       64    1   DCL STRUCTURE_DIV BIT(1) EXT;
       65       65    1   DCL REALM_SEC BIT(1) EXT;
       66       66    1   DCL SET_SEC BIT(1) EXT;
       67       67    1   DCL KEY_SEC BIT(1) EXT;
       68       68    1   DCL RECORD_SEC BIT(1) EXT;
       69       69    1   DCL INVOK BIT(1) STATIC;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:22   
       70       70    1   DCL PRIV BIT(1) STATIC;
       71       71    1   DCL DIAG BIT(1) STATIC;
       72       72         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:23   
       73       73         %INCLUDE ZIG_GENERAL;
       74      181         %INCLUDE ZI_SUB_LANG;
       75     1896         %GENERAL;
       76     2020         %TEXT_LINE;
       77     2057         %CONTROL_BLOCK;
       78     2165        %CONTROL_BLOCK(NAME=TEMP_CONTROL);
       79     2273         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:24   
       80     2274         %INCLUDE XU_MACRO_C;
       81     5380         %INCLUDE ZI_ERRORS_SUBS;
       82     5900        %LIST;
       83     5901         %P_PCB(NAME = SS_TRAN,T = LINE,
       84     5902         WSZ=4160, U$ = ZIG$SS_PSET,STCLASS =
       85     5903         "STATIC SYMDEF",C_LD='/*',C_TL='*/',C=NO);
              5904        /*F*  NAME:     P_PCB
              5905              FUNCTION: Parse Control Block.  This structure is used to pass data
              5906                  to the X$PARSE utility, and to receive X$PARSE's responses.
              5907        */
              5908         %LSET LISTDIR='0'B;
              5921    1   DCL 1 SS_TRAN STATIC SYMDEF ALIGNED,
              5922    1         2 TEXT$ PTR INIT(ADDR(LINE))/**/,
              5926    1         2 ROOT$ PTR INIT(ADDR(NIL))/**/,
              5930    1         2 WORK$ PTR INIT(ADDR(NIL))/**/,
              5934    1         2 OUT$ PTR INIT(ADDR(NIL))/**/,
              5939    1         2 U$$ EPTR INIT(ENTADDR(ZIG$SS_PSET))/**/,
              5951    1         2 WKSZ UBIN(18) UNAL INIT(4160)/**/,
              5956    1         2 CMPRS BIT(1) UNAL INIT('0'B)/**/,
              5962    1         2 CONTINUE BIT(1) UNAL INIT('1'B)/**/,
              5966    1         2 NOLEADBLANKS BIT(1) UNAL INIT('0'B)/**/,
              5971    1         2 NXT BIT(1) UNAL INIT('0'B)/**/,
              5988    1         2 DYNMEM BIT(1) UNAL INIT('0'B)/**/,
              5993    1         2 KEYWORDS BIT (1) INIT ('0'B) /**/,
              6008    1         2 BLANKONLY BIT (1),
              6016    1         2 NXT_SZONLY BIT(1) UNAL INIT('0'B)/**/,
              6024    1         2 * BIT (10) INIT ('0'B) /**/,
              6025    1         2 ERROR ALIGNED,
              6030    1           3 FCG BIT(12) UNAL INIT('0'B)/**/,
              6031    1           3 MID BIT(6) UNAL INIT('0'B)/**/,
              6032    1           3 MON BIT(1) UNAL INIT('0'B)/**/,
              6033    1           3 CODE UBIN(14) UNAL INIT(0)/**/,
              6034    1           3 SEV UBIN(3) UNAL INIT(0)/**/,
              6035    1         2 COMMENT ALIGNED,
              6039    1           3 LEAD CHAR(2) UNAL INIT('/*')/**/,
              6047    1           3 TRAIL CHAR(2) UNAL INIT('*/')/**/,
              6054    1         2 WK_USED UBIN(18) UNAL INIT(0)/**/,
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:25   
              6058    1         2 VERSION_CODE UBIN(4) UNAL INIT(1)/**/,
              6063    1         2 OUTDCB# UBIN(14) UNAL INIT(DCBNUM(NIL))/**/,
              6068    1         2 NCHARS UBIN WORD INIT(0)/**/,
              6072    1         2 HI_CHAR UBIN WORD INIT(0)/**/,
              6079    1         2 HINODE$ PTR INIT(ADDR(NIL))/**/,
              6088    1         2 USER$ PTR INIT(ADDR(NIL))/**/,
              6094    1         2 OUTENT$ EPTR INIT(ENTADDR(NIL))/**/;
       86     6102         %PARSE$OUT(NAME=BLK,
       87     6103         STCLASS = BASED);
              6104        /*F*  NAME:     PARSE$OUT
              6105              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
              6106                  "alternative", "reducing alternative", or "koncat" node in
              6107                  the user's parse tree.
              6108        */
              6109    1   DCL 1 NAME STCLASS ALIGNED,
              6110    1         2 TEMP BIT(1) UNAL,
              6111    1         2 * BIT (11) UNAL,
              6112    1         2 NDTYPE UBIN (6) UNAL,
              6113        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
              6114                  block corresponds.  See the XU_SUBS_C file for the
              6115                  %EQU symbols whose values may appear in this field.
              6116        */
              6117    1         2 CODE UBIN HALF HALIGNED,
              6118        /*K* CODE - Contains the numeric "node code" specified by the user when
              6119                  the corresponding parse-node was defined.
              6120        */
              6121    1         2 NSUBLKS UBIN HALF HALIGNED,
              6122        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
              6123                  pointers actually available in the PARSE$OUT.SUBLK$ array.
              6124        */
              6125    1         2 SCRITCH SCRMODE SCRALGN,
              6126        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
              6127                  initializes this field to zero when the PARSE$OUT structure
              6128                  is allocated, and never sets or examines it thereafter.
              6129                  The name of this field may be changed when the PARSE$OUT macro
              6130                  is invoked by the user (say "SCRITCH=yourname"), and its data
              6131                  type may also be changed (say "SCRMODE=pl6datatype" and
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:26   
              6132                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
              6133                  and be UNALIGNED, CALIGNED, or HALIGNED.
              6134        */
              6135    1         2 CPOS UBIN WORD,
              6136        /*K* CPOS - "character position" of this block.  This field will contain
              6137                  a character index (starting at 0) into the original parse
              6138                  string;  the index identifies the first character of the
              6139                  string which was accepted by this node (or by any of its
              6140                  sub-nodes).
              6141        */
              6142    1         2 SUBLK$(0:0) PTR UNAL;
              6143        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
              6144                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
              6145                  OUT$BLK structure, or to an OUT$SYM structure.
              6146        */
       88     6148         %PARSE$SYM(NAME=SYM,
       89     6149         STCLASS = BASED);
              6150        /*F*  NAME:     PARSE$SYM
              6151              FUNCTION: holds "parse symbols".  Structures of this form are created
              6152                  by X$PARSE to hold those portions of the string being parsed
              6153                  which must be returned to the user - quoted strings, decimal
              6154                  or octal numbers, PL-6 identifiers, etc.
              6155        */
              6156    1   DCL 1 NAME STCLASS ALIGNED,
              6157    1         2 TEMP BIT(1) UNAL,
              6158    1         2 * BIT (11) UNAL,
              6159    1         2 NDTYPE UBIN (6) UNAL,
              6160        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
              6161        */
              6162    1         2 CODE UBIN HALF HALIGNED,
              6163        /*K* CODE - see OUT$BLK.CODE for details.
              6164        */
              6165    1         2 NSUBLKS UBIN HALF HALIGNED,
              6166        /*K* NSUBLKS - always contains the value 1.
              6167        */
              6168    1         2 SCRITCH SCRMODE SCRALGN,
              6169        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:27   
              6170        */
              6171    1         2 CPOS UBIN WORD,
              6172        /*K* CPOS - see OUT$BLK.CPOS for details.
              6173        */
              6174    1         2 TEXTC$ PTR,
              6175        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
              6176                  followed by a variable number of characters).  Always
              6177                  points to OUT$SYM.COUNT in the current OUT$SYM block.
              6178        */
              6179    1         2 COUNT UBIN BYTE CALIGNED,
              6180        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
              6181        */
              6182    1         2 TEXT CHAR(NAME.COUNT) CALIGNED;
              6183        /*K* TEXT - contains the text of a string, decimal number, PL-6
              6184                  identifier, or some other parser "symbol".
              6185        */
       90     6187         %PLIST;
       91     6188         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:28   
       92     6189        /*******
       93     6190            Here starts the program.
       94     6191        *******/
       95     6192    1       IF LANG_ALLOWED(SUB_LANGUAGE) = 0

   6192 56 000002   000000 720000 47                 LXL0    SUB_LANGUAGE
        56 000003   000000 235010 46                 LDA     LANG_ALLOWED,X0
        56 000004   000023 601000 56                 TNZ     s:6199

       96     6193    2       THEN DO;

       97     6194    2           BUFFER1 = LANG_TEXT(SUB_LANGUAGE);

   6194 56 000005   000000 236000 47                 LDQ     SUB_LANGUAGE
        56 000006   000012 402007                    MPY     10,DL
        56 000007   040000 100406                    MLR     fill='040'O
        56 000010   000000 000012 49                 ADSC9   LANG_TEXT,Q              cn=0,n=10
        56 000011   000004 000200 2                  ADSC9   BUFFER1                  cn=0,n=128

       98     6195    2           CALL SET_FIELDS(1,30,BUFFER1);

   6195 56 000012   000003 630400 57                 EPPR0   3
        56 000013   000000 631400 57                 EPPR1   0
        56 000014   000000 701000 xent               TSX1    SET_FIELDS
        56 000015   000000 011000                    NOP     0

       99     6196    2           CALL ERROR(%ZIG_INTERFACE_NO_$);

   6196 56 000016   000010 630400 57                 EPPR0   8
        56 000017   000006 631400 57                 EPPR1   6
        56 000020   000000 701000 xent               TSX1    ERROR
        56 000021   000000 011000                    NOP     0

      100     6197    2           RETURN;

   6197 56 000022   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:29   
      101     6198    2           END;
      102     6199    1       CALL CONCAT(HEADING_TEXT,LANG_TEXT(SUB_LANGUAGE),' SUBSCHEMA TRANSLATE');

   6199 56 000023   000000 236000 47                 LDQ     SUB_LANGUAGE
        56 000024   000012 402007                    MPY     10,DL
        56 000025   040000 100406                    MLR     fill='040'O
        56 000026   000000 000012 49                 ADSC9   LANG_TEXT,Q              cn=0,n=10
        56 000027   000000 000012 48                 ADSC9   HEADING_TEXT             cn=0,n=10
        56 000030   040000 100400                    MLR     fill='040'O
        56 000031   000000 000024 55                 ADSC9   0                        cn=0,n=20
        56 000032   000002 400066 48                 ADSC9   HEADING_TEXT+2           cn=2,n=54

      103     6200    1       CALL SUBLST(HEADING_TEXT);

   6200 56 000033   000011 630400 57                 EPPR0   9
        56 000034   000006 631400 57                 EPPR1   6
        56 000035   000000 701000 xent               TSX1    SUBLST
        56 000036   000000 011000                    NOP     0

      104     6201    2       DO I = 0 TO 49;

   6201 56 000037   210103 450100                    STZ     I,,AUTO

      105     6202    2           LAST_GROUP(I) = 0;

   6202 56 000040   210103 720100                    LXL0    I,,AUTO
        56 000041   000000 450010 16                 STZ     LAST_GROUP,X0

      106     6203    2           END;

   6203 56 000042   210103 235100                    LDA     I,,AUTO
        56 000043   000001 035007                    ADLA    1,DL
        56 000044   210103 755100                    STA     I,,AUTO
        56 000045   000062 115007                    CMPA    50,DL
        56 000046   000040 602000 56                 TNC     s:6202

      107     6204    1       LARGEST_GROUP = 0;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:30   

   6204 56 000047   000000 450000 17                 STZ     LARGEST_GROUP

      108     6205        /*
      109     6206              Init things for COBOL group items.
      110     6207        */
      111     6208        /*
      112     6209              Now we init the transltable for evaling cobol picture
      113     6210            clauses. This table is from GCOS and i personally don't
      114     6211            understand how the picture clause is evalulated.
      115     6212        */
      116     6213    1       IF SUB_LANGUAGE = #COBOL

   6213 56 000050   000000 236000 47                 LDQ     SUB_LANGUAGE
        56 000051   000001 116007                    CMPQ    1,DL
        56 000052   000127 601000 56                 TNZ     s:6241

      117     6214    2       THEN DO;

      118     6215        /*
      119     6216              Init the table for picture clauses.
      120     6217        */
      121     6218    2           TRANSLTBLE(40) = 40;

   6218 56 000053   050000 236003                    LDQ     20480,DU
        56 000054   000012 552040 15                 STBQ    TRANSLTBLE+10,'40'O

      122     6219    2           TRANSLTBLE(41) = 41;

   6219 56 000055   000051 236003                    LDQ     41,DU
        56 000056   000012 552020 15                 STBQ    TRANSLTBLE+10,'20'O

      123     6220    2           TRANSLTBLE(48) = 127;

   6220 56 000057   177000 236003                    LDQ     65024,DU
        56 000060   000014 552040 15                 STBQ    TRANSLTBLE+12,'40'O

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:31   
      124     6221    2           TRANSLTBLE(49) = 127;

   6221 56 000061   000177 236003                    LDQ     127,DU
        56 000062   000014 552020 15                 STBQ    TRANSLTBLE+12,'20'O

      125     6222    2           TRANSLTBLE(50) = 127;

   6222 56 000063   177000 236007                    LDQ     65024,DL
        56 000064   000014 552010 15                 STBQ    TRANSLTBLE+12,'10'O

      126     6223    2           TRANSLTBLE(51) = 127;

   6223 56 000065   000177 236007                    LDQ     127,DL
        56 000066   000014 552004 15                 STBQ    TRANSLTBLE+12,'04'O

      127     6224    2           TRANSLTBLE(52) = 127;

   6224 56 000067   177000 236003                    LDQ     65024,DU
        56 000070   000015 552040 15                 STBQ    TRANSLTBLE+13,'40'O

      128     6225    2           TRANSLTBLE(53) = 127;

   6225 56 000071   000177 236003                    LDQ     127,DU
        56 000072   000015 552020 15                 STBQ    TRANSLTBLE+13,'20'O

      129     6226    2           TRANSLTBLE(54) = 127;

   6226 56 000073   177000 236007                    LDQ     65024,DL
        56 000074   000015 552010 15                 STBQ    TRANSLTBLE+13,'10'O

      130     6227    2           TRANSLTBLE(55) = 127;

   6227 56 000075   000177 236007                    LDQ     127,DL
        56 000076   000015 552004 15                 STBQ    TRANSLTBLE+13,'04'O

      131     6228    2           TRANSLTBLE(56) = 127;

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:32   
   6228 56 000077   177000 236003                    LDQ     65024,DU
        56 000100   000016 552040 15                 STBQ    TRANSLTBLE+14,'40'O

      132     6229    2           TRANSLTBLE(57) = 15;

   6229 56 000101   000017 236003                    LDQ     15,DU
        56 000102   000016 552020 15                 STBQ    TRANSLTBLE+14,'20'O

      133     6230    2           TRANSLTBLE(65) = 14;

   6230 56 000103   000016 236003                    LDQ     14,DU
        56 000104   000020 552020 15                 STBQ    TRANSLTBLE+16,'20'O

      134     6231    2           TRANSLTBLE(80) = 10;

   6231 56 000105   012000 236003                    LDQ     5120,DU
        56 000106   000024 552040 15                 STBQ    TRANSLTBLE+20,'40'O

      135     6232    2           TRANSLTBLE(83) = 12;

   6232 56 000107   000014 236007                    LDQ     12,DL
        56 000110   000024 552004 15                 STBQ    TRANSLTBLE+20,'04'O

      136     6233    2           TRANSLTBLE(86) = 9;

   6233 56 000111   011000 236007                    LDQ     4608,DL
        56 000112   000025 552010 15                 STBQ    TRANSLTBLE+21,'10'O

      137     6234    2           TRANSLTBLE(88) = 13;

   6234 56 000113   015000 236003                    LDQ     6656,DU
        56 000114   000026 552040 15                 STBQ    TRANSLTBLE+22,'40'O

      138     6235    2           TRANSLTBLE(97) = 14;

   6235 56 000115   000016 236003                    LDQ     14,DU
        56 000116   000030 552020 15                 STBQ    TRANSLTBLE+24,'20'O
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:33   

      139     6236    2           TRANSLTBLE(112)= 10;

   6236 56 000117   012000 236003                    LDQ     5120,DU
        56 000120   000034 552040 15                 STBQ    TRANSLTBLE+28,'40'O

      140     6237    2           TRANSLTBLE(115)= 12;

   6237 56 000121   000014 236007                    LDQ     12,DL
        56 000122   000034 552004 15                 STBQ    TRANSLTBLE+28,'04'O

      141     6238    2           TRANSLTBLE(118)= 9;

   6238 56 000123   011000 236007                    LDQ     4608,DL
        56 000124   000035 552010 15                 STBQ    TRANSLTBLE+29,'10'O

      142     6239    2           TRANSLTBLE(120)= 13;

   6239 56 000125   015000 236003                    LDQ     6656,DU
        56 000126   000036 552040 15                 STBQ    TRANSLTBLE+30,'40'O

      143     6240    2           END;

      144     6241    1       CALL UOPEN('5*',1);

   6241 56 000127   000013 630400 57                 EPPR0   11
        56 000130   000012 631400 57                 EPPR1   10
        56 000131   000000 701000 xent               TSX1    UOPEN
        56 000132   000000 011000                    NOP     0

      145     6242        /*
      146     6243              Now open the subschema for input and store all the compilelation
      147     6244            records so they can be restored in the subschema.
      148     6245        */
      149     6246    1       J = 1; /* Fool the ZIG$SS_IO to think we want the subschema open input */

   6246 56 000133   000001 235007                    LDA     1,DL
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:34   
        56 000134   000000 755000 18                 STA     J

      150     6247    1       ERROR_IO = 0;

   6247 56 000135   000000 450000 35                 STZ     ERROR_IO

      151     6248    1       HAVE_CU_RECORD = '0'B;

   6248 56 000136   000002 450000 2                  STZ     HAVE_CU_RECORD

      152     6249    1       CALL READ64(0,ADDR(TEMP_CONTROL));

   6249 56 000137   000016 236000 57                 LDQ     14
        56 000140   210104 756100                    STQ     I+1,,AUTO
        56 000141   210104 630500                    EPPR0   I+1,,AUTO
        56 000142   210107 450500                    STP0    I+4,,AUTO
        56 000143   000017 236000 57                 LDQ     15
        56 000144   210106 756100                    STQ     I+3,,AUTO
        56 000145   210106 630500                    EPPR0   I+3,,AUTO
        56 000146   000012 631400 57                 EPPR1   10
        56 000147   000000 701000 xent               TSX1    READ64
        56 000150   000000 011000                    NOP     0

      153     6250    1       IF ERROR_IO = 0 /* Subschema exists */

   6250 56 000151   000000 235000 35                 LDA     ERROR_IO
        56 000152   000220 601000 56                 TNZ     s:6262

      154     6251    2       THEN DO;

      155     6252    2           I = TEMP_CONTROL.FIRST_CU_RECORD;

   6252 56 000153   000073 236000 54                 LDQ     TEMP_CONTROL+59
        56 000154   210103 756100                    STQ     I,,AUTO

      156     6253    2           CALL UOPEN('3*',1);

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:35   
   6253 56 000155   000020 630400 57                 EPPR0   16
        56 000156   000012 631400 57                 EPPR1   10
        56 000157   000000 701000 xent               TSX1    UOPEN
        56 000160   000000 011000                    NOP     0

      157     6254    3           DO WHILE (I ~= 0);

   6254 56 000161   210103 235100                    LDA     I,,AUTO
        56 000162   000214 600000 56                 TZE     s:6260

      158     6255    3               HAVE_CU_RECORD = '1'B;

   6255 56 000163   400000 236003                    LDQ     -131072,DU
        56 000164   000002 756000 2                  STQ     HAVE_CU_RECORD

      159     6256    3               CALL READSF(I,BUFFER1);

   6256 56 000165   000005 236000 57                 LDQ     5
        56 000166   210105 756100                    STQ     I+2,,AUTO
        56 000167   210103 630500                    EPPR0   I,,AUTO
        56 000170   210104 450500                    STP0    I+1,,AUTO
        56 000171   210104 630500                    EPPR0   I+1,,AUTO
        56 000172   000012 631400 57                 EPPR1   10
        56 000173   000000 701000 xent               TSX1    READSF
        56 000174   000000 011000                    NOP     0

      160     6257    3               CALL UPUT('3*',ADDR(BUFFER1),32);

   6257 56 000175   000005 236000 57                 LDQ     5
        56 000176   210104 756100                    STQ     I+1,,AUTO
        56 000177   000023 236000 57                 LDQ     19
        56 000200   210107 756100                    STQ     I+4,,AUTO
        56 000201   210104 630500                    EPPR0   I+1,,AUTO
        56 000202   210106 450500                    STP0    I+3,,AUTO
        56 000203   000020 236000 57                 LDQ     16
        56 000204   210105 756100                    STQ     I+2,,AUTO
        56 000205   210105 630500                    EPPR0   I+2,,AUTO
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:36   
        56 000206   000000 631400 57                 EPPR1   0
        56 000207   000000 701000 xent               TSX1    UPUT
        56 000210   000000 011000                    NOP     0

      161     6258    3               I = ADDR(BUFFER1) -> WORD36;

   6258 56 000211   000004 235000 2                  LDA     BUFFER1
        56 000212   210103 755100                    STA     I,,AUTO

      162     6259    3               END;

   6259 56 000213   000163 601000 56                 TNZ     s:6255

      163     6260    2           CALL UCLOSE('3*');

   6260 56 000214   000020 630400 57                 EPPR0   16
        56 000215   000006 631400 57                 EPPR1   6
        56 000216   000000 701000 xent               TSX1    UCLOSE
        56 000217   000000 011000                    NOP     0

      164     6261    2           END;

      165     6262    1       CALL CLOSE_64;

   6262 56 000220   000015 631400 57                 EPPR1   13
        56 000221   000000 701000 xent               TSX1    CLOSE_64
        56 000222   000000 011000                    NOP     0

      166     6263    1       FIR_SW = 0; /* Make READ64 think it has not been called */

   6263 56 000223   000000 450000 19                 STZ     FIR_SW

      167     6264    1       J = 5; /* Reset the function to TRANSLATE subschema DDL */

   6264 56 000224   000005 235007                    LDA     5,DL
        56 000225   000000 755000 18                 STA     J

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:37   
      168     6265    1       INTERNAL_ID = 1;

   6265 56 000226   000001 236007                    LDQ     1,DL
        56 000227   000000 756000 12                 STQ     INTERNAL_ID

      169     6266    1       UWA_ALLOC = CONTROL.NEXT_UWA_LOC * 8;

   6266 56 000230   000051 235000 53                 LDA     CONTROL+41
        56 000231   000003 735000                    ALS     3
        56 000232   000000 755000 13                 STA     UWA_ALLOC

      170     6267         /*
      171     6268            UWA_ALLOC IS IN NIBBLES AND NEXT_UWA_LOC IS IN WORDS.
      172     6269         */
      173     6270    1       LAST_COUNT=0;

   6270 56 000233   000000 450000 1                  STZ     LAST_COUNT

      174     6271    1       CURRENT_RECORD = 2;

   6271 56 000234   000002 235007                    LDA     2,DL
        56 000235   000000 755000 51                 STA     CURRENT_RECORD

      175     6272    1       SS_TRAN.WORK$=ADDR(DBASE2);

   6272 56 000236   200003 630500                    EPPR0   DBASE2,,AUTO
        56 000237   000053 450400 2                  STP0    SS_TRAN+2

      176     6273    1       REMEMBER SYNTAX_ERROR IN SUB_ERR;

   6273 56 000240   000522 635000 56                 EAA     SYNTAX_ERROR
        56 000241   000000 452400 2                  STP2    SUB_ERR
        56 000242   000001 755000 2                  STA     SUB_ERR+1

      177     6274    1       LINE_COUNT=1;

   6274 56 000243   000000 756000 14                 STQ     LINE_COUNT
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:38   

      178     6275    1       END_SUBSCHEMA ='0'B;

   6275 56 000244   000000 450000 6                  STZ     END_SUBSCHEMA

      179     6276    1       TITLE_DIV = '0'B;

   6276 56 000245   000000 450000 22                 STZ     TITLE_DIV

      180     6277    1       MAPPING_DIV = '0'B;

   6277 56 000246   000000 450000 23                 STZ     MAPPING_DIV

      181     6278    1       ALIAS_SEC = '0'B;

   6278 56 000247   000000 450000 24                 STZ     ALIAS_SEC

      182     6279    1       STRUCTURE_DIV = '0'B;

   6279 56 000250   000000 450000 25                 STZ     STRUCTURE_DIV

      183     6280    1       REALM_SEC = '0'B;

   6280 56 000251   000000 450000 26                 STZ     REALM_SEC

      184     6281    1       SET_SEC = '0'B;

   6281 56 000252   000000 450000 27                 STZ     SET_SEC

      185     6282    1       KEY_SEC = '0'B;

   6282 56 000253   000000 450000 28                 STZ     KEY_SEC

      186     6283    1       RECORD_SEC = '0'B;

   6283 56 000254   000000 450000 29                 STZ     RECORD_SEC

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:39   
      187     6284    1       INVOK = '0'B;

   6284 56 000255   000046 450000 2                  STZ     INVOK

      188     6285    1       PRIV = '0'B;

   6285 56 000256   000047 450000 2                  STZ     PRIV

      189     6286    1       DIAG = '0'B;

   6286 56 000257   000050 450000 2                  STZ     DIAG

      190     6287    1       BUFFER_ERR = '0'B;

   6287 56 000260   000000 450000 20                 STZ     BUFFER_ERR

      191     6288    1       IF SUB_LANGUAGE=#COBOL

   6288 56 000261   000000 235000 47                 LDA     SUB_LANGUAGE
        56 000262   000001 115007                    CMPA    1,DL
        56 000263   000270 601000 56                 TNZ     s:6293

      192     6289    2       THEN DO;

      193     6290    2           SS_TRAN.ROOT$ = ADDR(SS_COBOL);

   6290 56 000264   000024 236000 57                 LDQ     20
        56 000265   000052 756000 2                  STQ     SS_TRAN+1

      194     6291    2           TEXT_LINE.COLUMN_NU = 7;

   6291 56 000266   000007 235007                    LDA     7,DL
        56 000267   000002 755000 52                 STA     TEXT_LINE+2

      195     6292    2           END;

      196     6293    1       IF SUB_LANGUAGE=#APL
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:40   

   6293 56 000270   000000 235000 47                 LDA     SUB_LANGUAGE
        56 000271   000003 115007                    CMPA    3,DL
        56 000272   000277 601000 56                 TNZ     s:6298

      197     6294    2       THEN DO;

      198     6295    2           SS_TRAN.ROOT$ = ADDR(SS_APL);

   6295 56 000273   000025 236000 57                 LDQ     21
        56 000274   000052 756000 2                  STQ     SS_TRAN+1

      199     6296    2           TEXT_LINE.COLUMN_NU = 1;

   6296 56 000275   000001 235007                    LDA     1,DL
        56 000276   000002 755000 52                 STA     TEXT_LINE+2

      200     6297    2           END;

      201     6298    1       IF SUB_LANGUAGE=#BASIC

   6298 56 000277   000000 235000 47                 LDA     SUB_LANGUAGE
        56 000300   000004 115007                    CMPA    4,DL
        56 000301   000306 601000 56                 TNZ     s:6303

      202     6299    2       THEN DO;

      203     6300    2           SS_TRAN.ROOT$ = ADDR(SS_BASIC);

   6300 56 000302   000026 236000 57                 LDQ     22
        56 000303   000052 756000 2                  STQ     SS_TRAN+1

      204     6301    2           TEXT_LINE.COLUMN_NU = 1;

   6301 56 000304   000001 235007                    LDA     1,DL
        56 000305   000002 755000 52                 STA     TEXT_LINE+2

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:41   
      205     6302    2           END;

      206     6303    1       IF SUB_LANGUAGE=#FORTRAN

   6303 56 000306   000000 235000 47                 LDA     SUB_LANGUAGE
        56 000307   000002 115007                    CMPA    2,DL
        56 000310   000315 601000 56                 TNZ     s:6308

      207     6304    2       THEN DO;

      208     6305    2           SS_TRAN.ROOT$ = ADDR(SS_FORTRAN);

   6305 56 000311   000027 236000 57                 LDQ     23
        56 000312   000052 756000 2                  STQ     SS_TRAN+1

      209     6306    2           TEXT_LINE.COLUMN_NU = 1;

   6306 56 000313   000001 235007                    LDA     1,DL
        56 000314   000002 755000 52                 STA     TEXT_LINE+2

      210     6307    2           END;

      211     6308    2       DO WHILE (~END_SUBSCHEMA);

   6308 56 000315   000333 710000 56                 TRA     s:6316

      212     6309    2           CALL ZIG$SS_READ;

   6309 56 000316   000015 631400 57                 EPPR1   13
        56 000317   000000 701000 xent               TSX1    ZIG$SS_READ
        56 000320   000000 011000                    NOP     0

      213     6310    2           IF END_SUBSCHEMA

   6310 56 000321   000000 234000 6                  SZN     END_SUBSCHEMA
        56 000322   000337 604000 56                 TMI     GO_BACK_AND_END

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:42   
      214     6311    2           THEN GOTO GO_BACK_AND_END;
      215     6312    2   START_PARSE: CALL X$PARSE(SS_TRAN) ALTRET(PARSE_ERROR);/* Call syntax parser */

   6312 56 000323   000030 630400 57    START_PARSE  EPPR0   24
        56 000324   000006 631400 57                 EPPR1   6
        56 000325   000000 701000 xent               TSX1    X$PARSE
        56 000326   000470 702000 56                 TSX2    PARSE_ERROR

      216     6313    2   NEXT_PARSE:
      217     6314    2           SS_TRAN.NCHARS=0;

   6314 56 000327   000062 450000 2     NEXT_PARSE   STZ     SS_TRAN+9

      218     6315    2           LINE = ' ';

   6315 56 000330   040000 100400                    MLR     fill='040'O
        56 000331   000031 000001 57                 ADSC9   25                       cn=0,n=1
        56 000332   000000 007640 9                  ADSC9   LINE                     cn=0,n=4000

      219     6316    2           END;

   6316 56 000333   000000 236000 6                  LDQ     END_SUBSCHEMA
        56 000334   400000 376003                    ANQ     -131072,DU
        56 000335   400000 676003                    ERQ     -131072,DU
        56 000336   000316 601000 56                 TNZ     s:6309

      220     6317    1   GO_BACK_AND_END:
      221     6318    1       IF HAVE_CU_RECORD

   6318 56 000337   000002 234000 2     GO_BACK_AND* SZN     HAVE_CU_RECORD
        56 000340   000426 605000 56                 TPL     s:6336

      222     6319    2       THEN DO;

      223     6320    2           CALL UOPEN('3*',0);

   6320 56 000341   000032 630400 57                 EPPR0   26
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:43   
        56 000342   000012 631400 57                 EPPR1   10
        56 000343   000000 701000 xent               TSX1    UOPEN
        56 000344   000000 011000                    NOP     0

      224     6321    2           CALL UGET('3*',DESCPTR,EOF,BUFFER_SIZE);

   6321 56 000345   000035 630400 57                 EPPR0   29
        56 000346   000034 631400 57                 EPPR1   28
        56 000347   000000 701000 xent               TSX1    UGET
        56 000350   000000 011000                    NOP     0

      225     6322    2           CONTROL.FIRST_CU_RECORD = CONTROL.NEXT_AVAILABLE_RECORD;

   6322 56 000351   000072 235000 53                 LDA     CONTROL+58
        56 000352   000073 755000 53                 STA     CONTROL+59

      226     6323    2           CURRENT_RECORD = CONTROL.NEXT_AVAILABLE_RECORD;

   6323 56 000353   000000 755000 51                 STA     CURRENT_RECORD

      227     6324    3           DO WHILE (EOF=0);

   6324 56 000354   000044 236000 2                  LDQ     EOF
        56 000355   000404 601000 56                 TNZ     s:6331

      228     6325    3               IF DESCPTR -> WORD36 ~= 0

   6325 56 000356   000003 470400 2                  LDP0    DESCPTR
        56 000357   000000 235100                    LDA     0,,PR0
        56 000360   000364 600000 56                 TZE     s:6327

      229     6326    3               THEN DESCPTR -> WORD36 = CURRENT_RECORD + 1;

   6326 56 000361   000000 236000 51                 LDQ     CURRENT_RECORD
        56 000362   000001 036007                    ADLQ    1,DL
        56 000363   000000 756100                    STQ     0,,PR0

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:44   
      230     6327    3               CALL WRITSF(CURRENT_RECORD,TEMP_BUFFER);

   6327 56 000364   000003 236000 2                  LDQ     DESCPTR
        56 000365   000041 235000 57                 LDA     33
        56 000366   210104 757100                    STAQ    I+1,,AUTO
        56 000367   210104 630500                    EPPR0   I+1,,AUTO
        56 000370   000012 631400 57                 EPPR1   10
        56 000371   000000 701000 xent               TSX1    WRITSF
        56 000372   000000 011000                    NOP     0

      231     6328    3               CURRENT_RECORD = CURRENT_RECORD + 1;

   6328 56 000373   000000 235000 51                 LDA     CURRENT_RECORD
        56 000374   000001 035007                    ADLA    1,DL
        56 000375   000000 755000 51                 STA     CURRENT_RECORD

      232     6329    3               CALL UGET('3*',DESCPTR,EOF,BUFFER_SIZE);

   6329 56 000376   000035 630400 57                 EPPR0   29
        56 000377   000034 631400 57                 EPPR1   28
        56 000400   000000 701000 xent               TSX1    UGET
        56 000401   000000 011000                    NOP     0

      233     6330    3               END;

   6330 56 000402   000044 235000 2                  LDA     EOF
        56 000403   000356 600000 56                 TZE     s:6325

      234     6331    2           CONTROL.FIRST_NFE_RECORD = CURRENT_RECORD;

   6331 56 000404   000000 235000 51                 LDA     CURRENT_RECORD
        56 000405   000076 755000 53                 STA     CONTROL+62

      235     6332    2           CONTROL.NEXT_AVAILABLE_RECORD = CURRENT_RECORD + 1;

   6332 56 000406   000001 035007                    ADLA    1,DL
        56 000407   000072 755000 53                 STA     CONTROL+58
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:45   

      236     6333    2           CALL WRIT64(0, ADDR(CONTROL));

   6333 56 000410   000042 236000 57                 LDQ     34
        56 000411   210104 756100                    STQ     I+1,,AUTO
        56 000412   210104 630500                    EPPR0   I+1,,AUTO
        56 000413   210107 450500                    STP0    I+4,,AUTO
        56 000414   000017 236000 57                 LDQ     15
        56 000415   210106 756100                    STQ     I+3,,AUTO
        56 000416   210106 630500                    EPPR0   I+3,,AUTO
        56 000417   000012 631400 57                 EPPR1   10
        56 000420   000000 701000 xent               TSX1    WRIT64
        56 000421   000000 011000                    NOP     0

      237     6334    2           CALL UCLOSE('3*');

   6334 56 000422   000020 630400 57                 EPPR0   16
        56 000423   000006 631400 57                 EPPR1   6
        56 000424   000000 701000 xent               TSX1    UCLOSE
        56 000425   000000 011000                    NOP     0

      238     6335    2           END;

      239     6336    1       CALL SET_FIELDS(1,30,CONTROL.SUBSCHEMA_NAME);

   6336 56 000426   000043 630400 57                 EPPR0   35
        56 000427   000000 631400 57                 EPPR1   0
        56 000430   000000 701000 xent               TSX1    SET_FIELDS
        56 000431   000000 011000                    NOP     0

      240     6337    1       CALL SET_FIELDS(2,30,CONTROL.SCHEMA_NAME);

   6337 56 000432   000047 630400 57                 EPPR0   39
        56 000433   000000 631400 57                 EPPR1   0
        56 000434   000000 701000 xent               TSX1    SET_FIELDS
        56 000435   000000 011000                    NOP     0

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:46   
      241     6338    1       IF NO_ERRORS

   6338 56 000436   000000 234000 21                 SZN     NO_ERRORS
        56 000437   000445 605000 56                 TPL     s:6347

      242     6339    2       THEN DO;

      243     6340    2           CALL INFO_ONLY(%SS_TRANSLATION_OK);

   6340 56 000440   000053 630400 57                 EPPR0   43
        56 000441   000006 631400 57                 EPPR1   6
        56 000442   000000 701000 xent               TSX1    INFO_ONLY
        56 000443   000000 011000                    NOP     0

      244     6341        /*E*     ERROR:    ZIG-SS_TRANSLATION_OK-C
      245     6342        MESSAGE: No errors for the subschema %U1
      246     6343                 ( schema %U2 ) on subschema translation.
      247     6344        */
      248     6345    2           END;

   6345 56 000444   000455 710000 56                 TRA     s:6356

      249     6346    2       ELSE DO;

      250     6347    2           CALL SET_FIELD_NUM(3,NUM_ERROR_MSG);

   6347 56 000445   000055 630400 57                 EPPR0   45
        56 000446   000012 631400 57                 EPPR1   10
        56 000447   000000 701000 xent               TSX1    SET_FIELD_NUM
        56 000450   000000 011000                    NOP     0

      251     6348    2           CALL ERROR(%SS_TRANSLATION_NOT_OK);

   6348 56 000451   000060 630400 57                 EPPR0   48
        56 000452   000006 631400 57                 EPPR1   6
        56 000453   000000 701000 xent               TSX1    ERROR
        56 000454   000000 011000                    NOP     0
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:47   

      252     6349        /*E*     ERROR:    ZIG-SS_TRANSLATION_NOT_OK-C
      253     6350        MESSAGE: %U3 Errors in the subschema %U1
      254     6351                 ( schema %U2 ) on subschema translation.
      255     6352                 Validation cannot be ran on this subschema
      256     6353                 until all errors have been corrected.
      257     6354        */
      258     6355    2           END;

      259     6356    1       IF NUM_WARN_MSG ~= 0

   6356 56 000455   000000 235000 31                 LDA     NUM_WARN_MSG
        56 000456   000467 600000 56                 TZE     s:6364

      260     6357    2       THEN DO;

      261     6358    2           CALL SET_FIELD_NUM(3,NUM_WARN_MSG);

   6358 56 000457   000061 630400 57                 EPPR0   49
        56 000460   000012 631400 57                 EPPR1   10
        56 000461   000000 701000 xent               TSX1    SET_FIELD_NUM
        56 000462   000000 011000                    NOP     0

      262     6359    2           CALL INFO_ONLY(%SS_TRANSLATION_WARN_MSG);

   6359 56 000463   000064 630400 57                 EPPR0   52
        56 000464   000006 631400 57                 EPPR1   6
        56 000465   000000 701000 xent               TSX1    INFO_ONLY
        56 000466   000000 011000                    NOP     0

      263     6360        /*E*     ERROR:    ZIG-SS_TRANSLATION_WARN_MSG-C
      264     6361        MESSAGE: %U3 Warning messages in this subschema translation.
      265     6362        */
      266     6363    2           END;

      267     6364    1       RETURN;

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:48   
   6364 56 000467   000000 702200 xent               TSX2  ! X66_ARET

      268     6365        /*
      269     6366            Handle the internal parsing errors.
      270     6367        */
      271     6368    1   PARSE_ERROR:
      272     6369    1       QUIT = '0'B;

   6369 56 000470   000000 450000 0     PARSE_ERROR  STZ     QUIT

      273     6370    2       DO CASE (SS_TRAN.ERROR.CODE);

   6370 56 000471   000057 236000 2                  LDQ     SS_TRAN+6
        56 000472   000003 772000                    QRL     3
        56 000473   037777 376007                    ANQ     16383,DL
        56 000474   000007 116007                    CMPQ    7,DL
        56 000475   000477 602006 56                 TNC     s:6370+6,QL
        56 000476   000513 710000 56                 TRA     s:6375
        56 000477   000513 710000 56                 TRA     s:6375
        56 000500   000506 710000 56                 TRA     s:6373
        56 000501   000506 710000 56                 TRA     s:6373
        56 000502   000506 710000 56                 TRA     s:6373
        56 000503   000506 710000 56                 TRA     s:6373
        56 000504   000506 710000 56                 TRA     s:6373
        56 000505   000506 710000 56                 TRA     s:6373

      274     6371    2       CASE (E$SYNERR,E$NULLROOT,E$BADNODE,E$WKOVERFLOW,

      275     6372    2          E$SMALLWORK,E$NULLU$$);
      276     6373    2           CALL ERROR (SS_TRAN.ERROR.CODE);/* Put out error */

   6373 56 000506   000065 630400 57                 EPPR0   53
        56 000507   000006 631400 57                 EPPR1   6
        56 000510   000000 701000 xent               TSX1    ERROR
        56 000511   000000 011000                    NOP     0
        56 000512   000517 710000 56                 TRA     s:6377

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:49   
      277     6374    2       CASE (ELSE);

      278     6375    2           CALL ERROR (E$UNKN_ERR); /* Put out error */

   6375 56 000513   000067 630400 57                 EPPR0   55
        56 000514   000006 631400 57                 EPPR1   6
        56 000515   000000 701000 xent               TSX1    ERROR
        56 000516   000000 011000                    NOP     0

      279     6376    2           END;

      280     6377    1       CALL ABORT;

   6377 56 000517   000015 631400 57                 EPPR1   13
        56 000520   000000 701000 xent               TSX1    ABORT
        56 000521   000000 011000                    NOP     0

      281     6378        /*                                                        */
      282     6379        /*       ERROR:    ZIG-E$SYNERR-C
      283     6380                 MESSAGE:  Syntax error.
      284     6381        */
      285     6382        /*       ERROR:    ZIG-E$NULLROOT-C
      286     6383                 MESSAGE:  Missing tree.
      287     6384        */
      288     6385        /*       ERROR:    ZIG-E$BADNODE-C
      289     6386                 MESSAGE:  Illegal node.
      290     6387        */
      291     6388        /*       ERROR:    ZIG-E$WKOVERFLOW-C
      292     6389                 MESSAGE:  Workspace overflow.
      293     6390        */
      294     6391        /*       ERROR:    ZIG-E$SMALLWORK-C
      295     6392                 MESSAGE:  Insufficient work area.
      296     6393        */
      297     6394        /*       ERROR:    ZIG-E$NULLU$$-C
      298     6395                 MESSAGE:  Missing U$$ routine.
      299     6396        */
      300     6397        /*       ERROR:    ZIG-E$UNKN_ERR-C
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:50   
      301     6398                 MESSAGE:  Unknown error from X$PARSE.
      302     6399        */
      303     6400         %EJECT;
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:51   
      304     6401        /*******
      305     6402                 The directive had a syntax error so
      306     6403                 if the user is online then let him retype the last
      307     6404                 line and restart the syntax checking else return to exec.
      308     6405        ******/
      309     6406    1   SYNTAX_ERROR:
      310     6407    1       IF END_SUBSCHEMA

   6407 56 000522   000000 234000 6     SYNTAX_ERROR SZN     END_SUBSCHEMA
        56 000523   000337 604000 56                 TMI     GO_BACK_AND_END

      311     6408    1       THEN GOTO GO_BACK_AND_END;
      312     6409    1       IF ONLINE & EOFFLG = 0

   6409 56 000524   400000 220003                    LDX0    -131072,DU
        56 000525   000000 235000 10                 LDA     EOFFLG
        56 000526   000530 600000 56                 TZE     s:6409+4
        56 000527   000000 220003                    LDX0    0,DU
        56 000530   000000 236000 4                  LDQ     ONLINE
        56 000531   400000 376003                    ANQ     -131072,DU
        56 000532   210104 756100                    STQ     I+1,,AUTO
        56 000533   000000 636010                    EAQ     0,X0
        56 000534   210104 376100                    ANQ     I+1,,AUTO
        56 000535   000553 600000 56                 TZE     s:6418

      313     6410    2       THEN DO;

      314     6411    2           CALL ZIG$SS_READ;

   6411 56 000536   000015 631400 57                 EPPR1   13
        56 000537   000000 701000 xent               TSX1    ZIG$SS_READ
        56 000540   000000 011000                    NOP     0

      315     6412    2           IF SUBSTR(REC,0,2)='Q ' OR SUBSTR(REC,0,5)='QUIT '

   6412 56 000541   000000 220000 7                  LDX0    REC
        56 000542   000007 100000 55                 CMPX0   7
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:52   
        56 000543   000550 600000 56                 TZE     s:6414
        56 000544   040000 106400                    CMPC    fill='040'O
        56 000545   000000 000005 7                  ADSC9   REC                      cn=0,n=5
        56 000546   000010 000005 55                 ADSC9   8                        cn=0,n=5
        56 000547   000553 601000 56                 TNZ     s:6418

      316     6413    3           THEN DO ;

      317     6414    3               QUIT='1'B;

   6414 56 000550   400000 236003                    LDQ     -131072,DU
        56 000551   000000 756000 0                  STQ     QUIT

      318     6415    3               RETURN;

   6415 56 000552   000000 702200 xent               TSX2  ! X66_ARET

      319     6416    3               END;
      320     6417    2           END;
      321     6418    1       LAST_COUNT=0;

   6418 56 000553   000000 450000 1                  STZ     LAST_COUNT

      322     6419    2       DO WHILE (~FOUND_PER);

   6419 56 000554   000561 710000 56                 TRA     s:6422

      323     6420    2           SS_TRAN.NCHARS = 0;

   6420 56 000555   000062 450000 2                  STZ     SS_TRAN+9

      324     6421    2           CALL ZIG$SS_READ;

   6421 56 000556   000015 631400 57                 EPPR1   13
        56 000557   000000 701000 xent               TSX1    ZIG$SS_READ
        56 000560   000000 011000                    NOP     0

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:53   
      325     6422    2           END;

   6422 56 000561   000000 236000 xsym               LDQ     FOUND_PER
        56 000562   400000 376003                    ANQ     -131072,DU
        56 000563   400000 676003                    ERQ     -131072,DU
        56 000564   000555 601000 56                 TNZ     s:6420

      326     6423    1       GOTO NEXT_PARSE;

   6423 56 000565   000327 710000 56                 TRA     NEXT_PARSE

DESCPTR
 Sect OctLoc
   2     003   000004 006000                                                    ....

BUFFER1
 Sect OctLoc
   2     004   ****** ******   ****** ******   ****** ******   ****** ******    ................

SS_TRAN
 Sect OctLoc
   2     051   000000 006000   000000 006014   000000 006014   000000 006014    ................
   2     055   000000 000000   010100 200000   000000 000000   057052 052057    .....@....../**/
   2     061   000000 040000   000000 000000   000000 000000   000000 006014    .. .............
   2     065   000000 006014   000000 000000                                    ........

LIST_STRING
 Sect OctLoc
   3     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

REC
 Sect OctLoc
   7     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LINE
 Sect OctLoc
   9     000   ****** ******   ****** ******   ****** ******   ****** ******    ................
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:54   

TRANSLTBLE
 Sect OctLoc
  15     000   062062 062062   062062 062062   062062 062062   062062 062062    2222222222222222
  15     100*  062062 ******                                                    22..

LAST_GROUP
 Sect OctLoc
  16     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

BUFFER_ERR
 Sect OctLoc
  20     000   0***** ******                                                    ....

UWA_KEY
 Sect OctLoc
  37     000   007125 127101   ****** ******                                    .UWA....

RVA_KEY
 Sect OctLoc
  39     000   007122 126101   ****** ******                                    .RVA....

IA__KEY
 Sect OctLoc
  40     000   007111 101137   ****** ******                                    .IA_....

SEARCHR_NB
 Sect OctLoc
  42     000   001001 001001   001001 001001   001001 001001   001001 001001    ................
  42     010*  000001 001001   001001 001001   001001 001001   001001 001001    ................
  42     014   001001 001001   001001 001001   001001 001001   001001 001001    ................
  42     034*  001001 001001   001001 001001   001001 001001   001001 001001    ................

SEM_COM
 Sect OctLoc
  43     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  43     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:55   
  43     010   040041 042043   044045 046047   050051 052053   054055 056057     !"#$%&'()*+,-./
  43     014   060061 062063   064065 066067   070071 072040   074075 076077    0123456789: <=>?
  43     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  43     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  43     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  43     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

DMCL_XLATE
 Sect OctLoc
  44     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  44     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  44     010   040041 041043   044045 046047   050051 052053   054055 136057     !!#$%&'()*+,-^/
  44     014   060061 062063   064065 066067   070071 072040   074075 076077    0123456789: <=>?
  44     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  44     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  44     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  44     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

Q2_PERCENT
 Sect OctLoc
  45     000   000001 002003   004005 006007   010011 012013   014015 016017    ................
  45     004   020021 022023   024025 026027   030031 032033   034035 036037    ................
  45     010   040041 045043   044045 046047   050051 052053   054055 056057     !%#$%&'()*+,-./
  45     014   060061 062063   064065 066067   070071 072073   074075 076077    0123456789:;<=>?
  45     020   100101 102103   104105 106107   110111 112113   114115 116117    @ABCDEFGHIJKLMNO
  45     024   120121 122123   124125 126127   130131 132133   134135 136137    PQRSTUVWXYZ[\]^_
  45     030   140141 142143   144145 146147   150151 152153   154155 156157    `abcdefghijklmno
  45     034   160161 162163   164165 166167   170171 172173   174175 176177    pqrstuvwxyz{|}~.

LANG_ALLOWED
 Sect OctLoc
  46     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

HEADING_TEXT
 Sect OctLoc
  48     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:56   
LANG_TEXT
 Sect OctLoc
  49     000   116117 124040   125123 105104   040040 103117   102117 114040    NOT USED  COBOL
  49     004   040040 040040   106117 122124   122101 116040   040040 101120        FORTRAN   AP
  49     010   114040 040040   040040 040040   102101 123111   103040 040040    L       BASIC
  49     014   040040 ******                                                      ..

HASH_SCHEMA_NAME
 Sect OctLoc
  50     000   0***** ******                                                    ....

TEXT_LINE
 Sect OctLoc
  52     000   000000 000151   000000 000000   000000 000000   000000 000006    ...i............
  52     004   000000 000001   000000 000121   040040 040040   040040 040040    .......Q
  52     010   040040 040040   040040 040040   040040 040040   040040 040040
  52     030*  040040 040040   040040 040040   012000 000000   000000 000000            ........
  52     034   000000 000000   000000 000000   000000 000000   000000 000000    ................

CONTROL
 Sect OctLoc
  53     000   777777 777777   000000 000001   000000 000000   000000 000036    ................
  53     004   000000 000060   000000 000000   000000 000000   000000 000000    ...0............
  53     010   000000 000000   000000 000000   000000 000000   000000 000000    ................
  53     020*  040040 040040   040040 040040   040040 040040   040040 040040
  53     040*  000000 000144   000000 000000   400000 000000   042116 125114    ...d........"NUL
  53     044   114042 040040   040040 040040   042116 125114   114042 040040    L"      "NULL"
  53     050   040040 040040   000000 000060   000000 000000   000000 000000        ...0........
  53     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
  53     064*  000000 000000   040040 040040   040040 040040   040040 040040    ....
  53     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
  53     074   000000 000002   000000 000000   000000 000000   000000 000000    ................

TEMP_CONTROL
 Sect OctLoc
  54     000   777777 777777   000000 000001   000000 000000   000000 000036    ................
  54     004   000000 000060   000000 000000   000000 000000   000000 000000    ...0............
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:57   
  54     010   000000 000000   000000 000000   000000 000000   000000 000000    ................
  54     020*  040040 040040   040040 040040   040040 040040   040040 040040
  54     040*  000000 000144   000000 000000   400000 000000   042116 125114    ...d........"NUL
  54     044   114042 040040   040040 040040   042116 125114   114042 040040    L"      "NULL"
  54     050   040040 040040   000000 000060   000000 000000   000000 000000        ...0........
  54     054   000000 000000   000000 000000   000000 000000   000000 000000    ................
  54     064*  000000 000000   040040 040040   040040 040040   040040 040040    ....
  54     070   000000 000000   000000 000000   000000 000000   000000 000000    ................
  54     074   000000 000002   000000 000000   000000 000000   000000 000000    ................

(unnamed)
 Sect OctLoc
  55     000   040123 125102   123103 110105   115101 040124   122101 116123     SUBSCHEMA TRANS
  55     004   114101 124105   065052 040040   063052 040040   121040 040040    LATE5*  3*  Q
  55     010   121125 111124   040040 040040                                    QUIT

(unnamed)
 Sect OctLoc
  57     000   000003 000000   000000 000001   000000 000036   000001 006000    ................
  57     004   000002 006000   000004 006000   000001 000000   000000 021543    ................
  57     010   000007 006000   000000 006000   000002 000000   000005 006000    ................
  57     014   000001 006000   000000 000000   000000 006000   000015 006000    ................
  57     020   000006 006000   000001 006000   000000 000040   000022 006000    ........... ....
  57     024   000000 006000   000000 006000   000000 006000   000000 006000    ................
  57     030   000051 006000   040040 040040   000006 006000   000015 006000    .)..    ........
  57     034   000004 000000   000006 006000   000003 006000   000044 006000    .............$..
  57     040   000045 006000   000000 006000   000000 006000   000001 006000    .%..............
  57     044   000002 006000   000030 006000   000000 000002   000046 006000    .............&..
  57     050   000002 006000   000020 006000   000000 021505   000052 006000    .............*..
  57     054   000000 000003   000054 006000   000000 006000   000000 021506    .....,..........
  57     060   000057 006000   000054 006000   000000 006000   000000 021507    ./...,..........
  57     064   000063 006000   000057 416000   000000 023416   000066 006000    .3.../.......6..
      327     6424    1   END ZIG$SS_PDRI;

PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:58   
--  Include file information  --

   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   XU_MACRO_C.:LIB_E05  is referenced.
   ZI_SUB_LANG.:ZIC0TOU  is referenced.
   ZIG_GENERAL.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$SS_PDRI.

   Procedure ZIG$SS_PDRI requires 374 words for executable code.
   Procedure ZIG$SS_PDRI requires 4168 words of local(AUTO) storage.

    No errors detected in file ZIG$SS_PDRI.:ZIC0TSI    .
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:59   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:60   
          MINI XREF LISTING

ABORT
        94**DCL-ENT  6377--CALL
ALIAS_SEC
        63**DCL      6278<<ASSIGN
BUFFER1
        50**DCL        49--DCLINIT  6194<<ASSIGN   6195<>CALL     6256<>CALL     6257--CALL     6258--ASSIGN
BUFFER_ERR
        59**DCL      6287<<ASSIGN
BUFFER_SIZE
        53**DCL      6321<>CALL     6329<>CALL
CLOSE_64
        15**DCL-ENT  6262--CALL
CONTROL
      2122**DCL      6333--CALL
CONTROL.FIRST_CU_RECORD
      2159**DCL      6322<<ASSIGN
CONTROL.FIRST_NFE_RECORD
      2162**DCL      6331<<ASSIGN
CONTROL.NEXT_AVAILABLE_RECORD
      2158**DCL      6322>>ASSIGN   6323>>ASSIGN   6332<<ASSIGN
CONTROL.NEXT_UWA_LOC
      2144**DCL      6266>>ASSIGN
CONTROL.SCHEMA_NAME
      2137**DCL      6337<>CALL
CONTROL.SUBSCHEMA_NAME
      2138**DCL      6336<>CALL
CURRENT_RECORD
      2006**DCL      6271<<ASSIGN   6323<<ASSIGN   6326>>ASSIGN   6327<>CALL     6328<<ASSIGN   6328>>ASSIGN
      6331>>ASSIGN   6332>>ASSIGN
DBASE2
        24**DCL      6272--ASSIGN
DESCPTR
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:61   
        49**DCL        51--IMP-PTR  6321<>CALL     6325>>IF       6326>>ASSIGN   6327>>CALL     6329<>CALL
DIAG
        71**DCL      6286<<ASSIGN
END_SUBSCHEMA
        29**DCL      6275<<ASSIGN   6308>>DOWHILE  6310>>IF       6407>>IF
EOF
        52**DCL      6321<>CALL     6324>>DOWHILE  6329<>CALL
EOFFLG
        36**DCL      6409>>IF
ERROR
        86**DCL-ENT  6196--CALL     6348--CALL     6373--CALL     6375--CALL
ERROR_IO
       127**DCL      6247<<ASSIGN   6250>>IF
FIR_SW
        47**DCL      6263<<ASSIGN
FOUND_PER
        32**DCL      6419>>DOWHILE
GO_BACK_AND_END
      6318**LABEL    6311--GOTO     6408--GOTO
HAVE_CU_RECORD
        48**DCL      6248<<ASSIGN   6255<<ASSIGN   6318>>IF
HEADING_TEXT
      1917**DCL      6199<<CALLBLT  6200<>CALL
I
        45**DCL      6201<<DOINDEX  6202>>ASSIGN   6252<<ASSIGN   6254>>DOWHILE  6256<>CALL     6258<<ASSIGN
INFO_ONLY
        88**DCL-ENT  6340--CALL     6359--CALL
INTERNAL_ID
        38**DCL      6265<<ASSIGN
INVOK
        69**DCL      6284<<ASSIGN
J
        46**DCL      6246<<ASSIGN   6264<<ASSIGN
KEY_SEC
        67**DCL      6282<<ASSIGN
LANG_ALLOWED
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:62   
      1903**DCL      6192>>IF
LANG_TEXT
      1918**DCL      6194>>ASSIGN   6199>>CALLBLT
LARGEST_GROUP
        44**DCL      6204<<ASSIGN
LAST_COUNT
        17**DCL      6270<<ASSIGN   6418<<ASSIGN
LAST_GROUP
        43**DCL      6202<<ASSIGN
LINE
        35**DCL      5922--DCLINIT  6315<<ASSIGN
LINE_COUNT
        41**DCL      6274<<ASSIGN
MAPPING_DIV
        62**DCL      6277<<ASSIGN
NEXT_PARSE
      6314**LABEL    6423--GOTO
NO_ERRORS
        60**DCL      6338>>IF
NUM_ERROR_MSG
        91**DCL      6347<>CALL
NUM_WARN_MSG
        92**DCL      6356>>IF       6358<>CALL
ONLINE
        25**DCL      6409>>IF
PARSE_ERROR
      6369**LABEL    6312--CALLALT
PRIV
        70**DCL      6285<<ASSIGN
QUIT
        16**DCL      6369<<ASSIGN   6414<<ASSIGN
READ64
        57**DCL-ENT  6249--CALL
READSF
        55**DCL-ENT  6256--CALL
REALM_SEC
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:63   
        65**DCL      6280<<ASSIGN
REC
        31**DCL      6412>>IF       6412>>IF
RECORD_SEC
        68**DCL      6283<<ASSIGN
SET_FIELDS
        89**DCL-ENT  6195--CALL     6336--CALL     6337--CALL
SET_FIELD_NUM
        90**DCL-ENT  6347--CALL     6358--CALL
SET_SEC
        66**DCL      6281<<ASSIGN
SS_APL
        19**DCL      6295--ASSIGN
SS_BASIC
        21**DCL      6300--ASSIGN
SS_COBOL
        18**DCL      6290--ASSIGN
SS_FORTRAN
        20**DCL      6305--ASSIGN
SS_TRAN
      5921**DCL      6312<>CALL
SS_TRAN.ERROR.CODE
      6033**DCL      6370>>DOCASE   6373<>CALL
SS_TRAN.NCHARS
      6068**DCL      6314<<ASSIGN   6420<<ASSIGN
SS_TRAN.ROOT$
      5926**DCL      6290<<ASSIGN   6295<<ASSIGN   6300<<ASSIGN   6305<<ASSIGN
SS_TRAN.WORK$
      5930**DCL      6272<<ASSIGN
STRUCTURE_DIV
        64**DCL      6279<<ASSIGN
SUBLST
       103**DCL-ENT  6200--CALL
SUBSCHEMA_KEY
       121**DCL       122--REDEF
SUB_ERR
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:64   
        22**DCL      6273<<REMEMBR
SUB_LANGUAGE
      1904**DCL      6192>>IF       6194>>ASSIGN   6199>>CALLBLT  6213>>IF       6288>>IF       6293>>IF
      6298>>IF       6303>>IF
SYM.COUNT
      6179**DCL      6182--IMP-SIZ
SYNTAX_ERROR
      6407**LABEL    6273--REMEMBR
TEMP_BUFFER
        51**DCL      6327<>CALL
TEMP_CONTROL
      2230**DCL      6249--CALL
TEMP_CONTROL.FIRST_CU_RECORD
      2267**DCL      6252>>ASSIGN
TEXT_LINE.COLUMN_NU
      2048**DCL      6291<<ASSIGN   6296<<ASSIGN   6301<<ASSIGN   6306<<ASSIGN
TITLE_DIV
        61**DCL      6276<<ASSIGN
TRANSLTBLE
        42**DCL      6218<<ASSIGN   6219<<ASSIGN   6220<<ASSIGN   6221<<ASSIGN   6222<<ASSIGN   6223<<ASSIGN
      6224<<ASSIGN   6225<<ASSIGN   6226<<ASSIGN   6227<<ASSIGN   6228<<ASSIGN   6229<<ASSIGN   6230<<ASSIGN
      6231<<ASSIGN   6232<<ASSIGN   6233<<ASSIGN   6234<<ASSIGN   6235<<ASSIGN   6236<<ASSIGN   6237<<ASSIGN
      6238<<ASSIGN   6239<<ASSIGN
UCLOSE
       110**DCL-ENT  6260--CALL     6334--CALL
UGET
       108**DCL-ENT  6321--CALL     6329--CALL
UOPEN
       107**DCL-ENT  6241--CALL     6253--CALL     6320--CALL
UPUT
       109**DCL-ENT  6257--CALL
UWA_ALLOC
        39**DCL      6266<<ASSIGN
WORD36
        58**DCL      6258>>ASSIGN   6325>>IF       6326<<ASSIGN
WRIT64
PL6.E3A0      #001=ZIG$SS_PDRI File=ZIG$SS_PDRI.:ZIC0TSI                         FRI 09/05/97 12:13 Page:65   
        56**DCL-ENT  6333--CALL
WRITSF
        54**DCL-ENT  6327--CALL
X$PARSE
        27**DCL-ENT  6312--CALL
ZIG$SS_PSET
        28**DCL-ENT  5939--DCLINIT
ZIG$SS_READ
        30**DCL-ENT  6309--CALL     6411--CALL     6421--CALL
