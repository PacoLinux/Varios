VERSION E05

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:1    
        1        1        /*M* KXN$CMND  -  X.25 Handler MLCP Control Subroutines                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=4,IND=3,CTI=3,DCI=6,IAD=0,DTI=6,AND=Y,CSI=3,THI=3,STI=3,DMC=Y */
        9        9        /*P* NAME: KXN$CMND                                                           */
       10       10        /*P* PURPOSE: This module contains the X.25 handler                           */
       11       11        /*P* MLCP control subroutines.                                                */
       12       12
       13       13        /*F* NAME: KXN$CMND                                                           */
       14       14        /*F* PURPOSE: This subroutine does the MLCP control                           */
       15       15        /*F* functions for the X.25 handler.                                          */
       16       16
       17       17        /*D* NAME: KXN$CMND                                                           */
       18       18        /*D* PURPOSE: This subroutine does the MLCP control                           */
       19       19        /*D* functions for the X.25 handler.                                          */
       20       20        /*D* CALL: CALL KXN$CMND, ARGS ( NTYPE, CHN$, DAT$ )                */
       21       21        /*D* INPUT: NTYPE  =  request type                                              */
       22       22        /*D* KH$CHN  =  channel table                                       */
       23       23        /*D* DAT$  =  data pointer  ( optional )
                23        */
       24       24        /*D* OUTPUT: None                                                             */
       25       25
       26       26        KXN$CMND: PROC ( NTYPE, KH$CHN, INPDAT$ );
       27       27
       28       28        /*****************************************************************
       29       29        *                                                                *
       30       30        *                           Include files                        *
       31       31        *                                                                *
       32       32        *****************************************************************/
       33       33
       34       34        %INCLUDE K_ID_E;
       35       84        %K#ENTID_E;
       36      103        %K#LYRID_E;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:2    
       37      110        %INCLUDE KL_MACRO_C;
       38     3462        %INCLUDE KL_AFCN_C;
       39     3563        %INCLUDE LCP_6;
       40     7842        %INCLUDE CP_6_SUBS;
       41     8382        %INCLUDE GH_HARDWARE_M;
       42     8480        %INCLUDE GH_IOFNC_E;
       43     8549        %INCLUDE KH$CHN;
       44     8671        %INCLUDE KL_SUPER_C;
       45    11573        %INCLUDE KV$GLB;
       46    11992        %INCLUDE KV_GLBCNS_E;
       47    12333        %KV#CQ_HNDID_E;
       48    12338        %INCLUDE KH$IO;
       49    12585        %INCLUDE KX_EQUS_E;
       50    13024        %INCLUDE KX_PERR_C;
       51    13153        %INCLUDE KX_SCODE_C;
       52    13219        %INCLUDE KX_DATA_C;
       53    13287        %INCLUDE KX_MACROS_M;
       54    14058        %INCLUDE KW_LCT_E;
       55    14413        %INCLUDE KW_SLCT_E;
       56    14589        %INCLUDE KX_LCT_E;
       57    14710        %INCLUDE KNH_MACRO_C;
       58    14993        %INCLUDE K_ADDRESS_M;
       59    15496        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:3    
       60    15497        /*****************************************************************
       61    15498        *                                                                *
       62    15499        *                           External Routines                    *
       63    15500        *                                                                *
       64    15501        *****************************************************************/
       65    15502
       66    15503    1   DCL KHI$DWNLODCCP ENTRY (1) ALTRET;
       67    15504    1   DCL KHI$DWNLODLCT ENTRY (1) ALTRET;
       68    15505    1   DCL KHI$IOLD ENTRY (2);
       69    15506    1   DCL KHI$IOLD_FNC ENTRY(2);
       70    15507    1   DCL KHI$IO_INP ENTRY (2);
       71    15508    1   DCL KHI$IO_INPLCTBYT ENTRY (2);
       72    15509    1   DCL KHI$IO_OTP ENTRY (2);
       73    15510    1   DCL KHI$IO_OTPLCTBYT ENTRY (2);
       74    15511    1   DCL KXS$GETBFR ENTRY (3) ALTRET;
       75    15512    1   DCL KXS$RLSBFR ENTRY (1);
       76    15513    1   DCL KXX$X29 ENTRY (1);
       77    15514    1   DCL KHD$SCREECH ENTRY (1);
       78    15515    1   DCL KXS$SYSLOG ENTRY(7);
       79    15516    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       80    15517        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:4    
       81    15518        /*****************************************************************
       82    15519        *                                                                *
       83    15520        *                           Auto                                 *
       84    15521        *                                                                *
       85    15522        *****************************************************************/
       86    15523
       87    15524    1   DCL NTYPE UBIN;
       88    15525    1   DCL CTX$ PTR;
       89    15526    1   DCL INPDAT$ PTR;
       90    15527    1   DCL DAT$ PTR;
       91    15528    1   DCL 1 DAT REDEF DAT$,
       92    15529    1         2 * UBIN, 2 W UBIN;
       93    15530    1   DCL CCB$ PTR;
       94    15531    1   DCL 1 CCB REDEF CCB$,
       95    15532    1         2 * UBIN, 2 W UBIN;
       96    15533    1   DCL T$ PTR; /* Temp so PL6 can trash as an argument */
       97    15534        %KH$CHN ( STCLASS = );
       98    15658    1   DCL TRCX UBIN;
       99    15659        %VLP_ERRCODE (STCLASS=AUTO, FPTN=ERCOD);
      100    15705        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:5    
      101    15706        /*****************************************************************
      102    15707        *                                                                *
      103    15708        *                           Based                                *
      104    15709        *                                                                *
      105    15710        *****************************************************************/
      106    15711
      107    15712        %KX$L1 ( STCLASS = "BASED(CTX$)" );
      108    15752        %KX$L2 ( STCLASS = "BASED(CTX$)" );
      109    16119        %KX$L2 ( FPTN = KX$L2S, STCLASS = "BASED(CTX$)", SLCC = YES );
      110    16516        %KX$CCB ( STCLASS = "BASED(CCB$)" );
      111    16547        %KX$DATA ( STCLASS = "BASED(DAT$)" );
      112    16567        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      113    16587    1   DCL FRAME_TRACE (0:20) ALIGNED UBIN(16) BASED(DAT$);
      114    16588        %KX$FRAME ( STCLASS = "BASED(DAT$)" );
      115    16620        %KX$EXTFRAME ( STCLASS = "BASED(DAT$)" );
      116    16644        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:6    
      117    16645        /*****************************************************************
      118    16646        *                                                                *
      119    16647        *                           Static                               *
      120    16648        *                                                                *
      121    16649        *****************************************************************/
      122    16650
      123    16651        %KX_DATA;
      124    17341        %KH$CCPLCT ( NAME = KXM$CCP, STCLASS = SYMREF );
      125    17367        %KH$CCPLCT ( NAME = KXM$MLC16, STCLASS = SYMREF );
      126    17393    1   DCL KXS$PTR$$ EPTR CONSTANT INIT(ENTADDR(KXS$SLCC));
      127    17394    1   DCL KXS$PTR$ REDEF KXS$PTR$$ PTR;
      128    17395    1   DCL KXS$SLCC ENTRY OPTIONAL; /* To test for existence */
      129    17396    1   DCL KX_SLCCRCVCCBS SYMREF UBIN;
      130    17397        %KH$DWNLODCCP ( NAME = DWNLODCCP, STCLASS = STATIC, CCPLODBIS = 0 );
      131    17420        %KH$DWNLODLCT ( NAME = DWNLODLCT, STCLASS = STATIC );
      132    17444        %KH$IO ( FPTN = OTPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_OTPLCTBYT );
      133    17558        %KH$IOLD ( FPTN = IOLD_INPCHN, STCLASS = STATIC, VLDCCB = YES,
      134    17559                     BYTX = "SIZEC(KX$DATA)" );
      135    17610        %KH$IO ( FPTN = INPNXTCCBSTT_INPCHN, STCLASS = STATIC, FNC = %GH#IO_INPNXTCCBSTT );
      136    17724        %KH$IO ( FPTN = OTPCHNCTR_INPCHN_STR, STCLASS = STATIC,
      137    17725                  FNC = %GH#IO_OTPCHNCTR, STRIO = YES );
      138    17839        %KH$IO ( FPTN = OTPCHNCTR_INPCHN_RST, STCLASS = STATIC,
      139    17840                  FNC = %GH#IO_OTPCHNCTR, CCBLSTRST = YES);
      140    17954        %KH$IO ( FPTN = OTPCHNCTR_OTPCHN_STR, STCLASS = STATIC, OTPCHN = YES,
      141    17955                  FNC = %GH#IO_OTPCHNCTR, STRIO = YES );
      142    18069        %KH$IO ( FPTN = OTPCHNCTR_INPCHN_INT, STCLASS = STATIC,
      143    18070                  FNC = %GH#IO_OTPCHNCTR, CHNINT = YES );
      144    18184        %KH$IO ( FPTN = OTPCHNCTR_OTPCHN_INT, STCLASS = STATIC, OTPCHN = YES,
      145    18185                  FNC = %GH#IO_OTPCHNCTR, CHNINT = YES );
      146    18299        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT);
      147    18413        %KH$IO ( FPTN = OTPCHNCTR_OTPCHN_RST, STCLASS = STATIC,
      148    18414                  FNC = %GH#IO_OTPCHNCTR, CCBLSTRST = YES, OTPCHN = YES);
      149    18528        %KH$IOLD ( FPTN = IOLD_OTPCHN, STCLASS = STATIC, VLDCCB = YES,
      150    18529                     BYTX = "SIZEC(KX$DATA)", OTPCHN = YES);
      151    18580        %KH$IOLD ( FPTN = SLCC_DUMP, STCLASS = CONSTANT, BYTSIZ = 768,
      152    18581                    ADR$ = KX_SLCC_SPM, FNC = %GH#IO_IOLD_SLCRAMTRN);
      153    18632    1   DCL KX_SLCC_SPM(0:383) UBIN STATIC SYMDEF;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:7    
      154    18633        %KH$IO ( FPTN = SLCC_OTPRAMCTR, STCLASS = CONSTANT, FNC = %GH#IO_OTPRAMCTR);
      155    18747        %KH$IO ( FPTN = SLCC_START, STCLASS = CONSTANT, OTPCHN = YES,
      156    18748                  FNC = %GH#IO_OTPCTR, STRIO = YES);
      157    18862        %KH$IO ( FPTN = SLCC_STOP, STCLASS = CONSTANT,
      158    18863                  FNC = %GH#IO_OTPSLCTSK, TSK = 128);
      159    18977        %KH$IO ( FPTN = SLCC_KILL, STCLASS = CONSTANT,
      160    18978                  FNC = %GH#IO_OTPCTR, STPIO = YES);
      161    19092        %KH$IO ( FPTN = SLCC_TASK, STCLASS = STATIC, FNC = %GH#IO_OTPSLCTSK);
      162    19206        %KH$IO ( FPTN = SLCC_CNF, STCLASS = CONSTANT,
      163    19207                  FNC = %GH#IO_OTPCNF, CNF = "%BITBIN('1158'X)");
      164    19321        %KH$IOLD (FPTN = SLCC_OTPAREA, STCLASS = STATIC);
      165    19372        %KH$IOLD (FPTN = SLCC_OTPSYS, STCLASS = STATIC,
      166    19373                   FNC = %GH#IO_IOLD_OTPSYSRNG, BYTSIZ = "SIZEC (KX$L2S)" );
      167    19424    1   DCL KV_B_POOL$(0:0) PTR SYMREF;
      168    19425        %KH$IO (FPTN = SLCC_OTPCCBPTR, STCLASS = STATIC, FNC = %GH#IO_OTPCCBPTR );
      169    19539        %KH$IO (FPTN = SLCC_INPSTT, STCLASS = STATIC, FNC = %GH#IO_INPSLCSTT);
      170    19653        %KH$IO (FPTN = SLCC_INIT, STCLASS = CONSTANT, FNC = %GH#IO_OTPCTR, HRDINT = YES);
      171    19767        %KH$IO (FPTN = SLCC_OTPINTCTR, STCLASS = CONSTANT, FNC = %GH#IO_OTPINTCTR);
      172    19881        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:8    
      173    19882        /*****************************************************************
      174    19883        *                                                                *
      175    19884        *                           Static                               *
      176    19885        *                                                                *
      177    19886        *****************************************************************/
      178    19887
      179    19888        %VLP_ERRCODE (FPTN=Y_NO_DWNLODCCP,STCLASS=CONSTANT,FCG='KX',MID='N',
      180    19889                      ERR# = %E_KXN_DWNLODCCP_FAL#, SEV = %G_WRSYSLOG_SEV_BAD_HARD#);
      181    19935        %VLP_ERRCODE (FPTN=Y_NO_DWNLODLCT,STCLASS=CONSTANT,FCG='KX',MID='N',
      182    19936                      ERR# = %E_KXN_DWNLODLCT_FAL#, SEV = %G_WRSYSLOG_SEV_BAD_HARD#);
      183    19982        %VLP_ERRCODE (FPTN=Y_SLCC_BIGMEM,STCLASS=CONSTANT,FCG='KX',MID='N',
      184    19983                      ERR# = %E_KXN_SLCC_BIGMEM#, SEV = %G_WRSYSLOG_SEV_BAD_HARD#);
      185    20029        %VLP_SCODE (FPTN=Y_UNKFNC,STCLASS=CONSTANT,FCG=KX,MID=N,ERR#=%S$KX_BADKXNFNC#);
      186    20090        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:9    
      187    20091
      188    20092        /*****************************************************************
      189    20093        *                                                                *
      190    20094        *                           Procedure                            *
      191    20095        *                                                                *
      192    20096        *****************************************************************/
      193    20097
      194    20098    1       IF ADDR ( INPDAT$ ) ~= ADDR(NIL)
      195    20099    1          THEN
      196    20100    1             DAT$ = INPDAT$;
      197    20101    1          ELSE
      198    20102    1             DAT$ = ADDR(NIL);
      199    20103    1       CTX$ = KH$CHN.CTX$;
      200    20104
      201    20105        /* Eh? $$TRACE ( FCG, 'GXN' ) , ( EVENT, 0 ) , ( MASK, %KX_TRACE_N )  */
      202    20106        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:10   
      203    20107        /*
      204    20108                                             Some SLCC operations are quite
      205    20109                                             different, so pick them out first.
      206    20110        */
      207    20111    1       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC
      208    20112    1          THEN
      209    20113    1             IF KH$CHN.DED THEN RETURN;
      210    20114    1                ELSE
      211    20115    2                   DO CASE ( NTYPE );
      212    20116    2                      CASE ( %KX_N_START_TRN# );
      213    20117    3                         IF NOT KH$CHN.DWNLOD THEN DO;
      214    20118    3                                  CALL KXN$CMND ( %KX_N_INIT_CTR#, KH$CHN );
      215    20119    3                                  CALL KXN$CMND ( %KX_N_INIT#, KH$CHN );
      216    20120    3                               END;
      217    20121    2                         IF NOT KH$CHN.DED
      218    20122    2                            THEN CALL KHI$IO_OTP (KH$CHN, SLCC_START);
      219    20123    2                         RETURN;
      220    20124    2                      CASE ( %KX_N_STOP# );
      221    20125    3                         IF KH$CHN.DWNLOD THEN DO;
      222    20126        /*
      223    20127                                             If only a "stop", tell the SLCC
      224    20128        */
      225    20129    3                                  CALL KHI$IO_OTP (KH$CHN, SLCC_STOP);
      226    20130    3                                  RETURN;
      227    20131    3                               END;
      228    20132    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_KILL);
      229    20133        /*
      230    20134                                             Take a dump, too.
      231    20135        */
      232    20136    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_OTPINTCTR);
      233    20137    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_OTPRAMCTR);
      234    20138    2                         CALL KHI$IOLD_FNC (KH$CHN, SLCC_DUMP);
      235    20139    2                         SLCC_INPSTT.SLCSTT = '0'B;
      236    20140    2                         TRCX = 5000;
      237    20141    3                         DO UNTIL SLCC_INPSTT.SLCSTT;
      238    20142    3                            CALL KHI$IO_INP (KH$CHN, SLCC_INPSTT);
      239    20143    3                            TRCX = TRCX-1;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:11   
      240    20144    3                            IF TRCX=0 OR KH$CHN.DED THEN EXIT;
      241    20145    3                         END;
      242    20146    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_INIT);
      243    20147    2                         RETURN;
      244    20148    2                      CASE ( %KX_N_INIT# );
      245    20149    2                         IF NOT KH$CHN.DWNLOD
      246    20150    2                            THEN
      247    20151    2                               CALL KXN$CMND (%KX_N_INIT_CTR#, KH$CHN);
      248    20152    2                         IF KH$CHN.DED THEN RETURN;
      249    20153    2                      CASE ( %KX_N_INIT_CTR#, %KX_N_SEND_Q#, %KX_N_UPDATE_TRN_CCB# );
      250    20154        /*
      251    20155                                             Code below is ok for these
      252    20156        */
      253    20157    2                      CASE ( %KX_N_START_RCV# );
      254    20158    2                         SLCC_OTPAREA.BFR_.ADR$ = KV_B_POOL$(1);
      255    20159    2                         SLCC_OTPAREA.BFR_.BYTSIZ = KX_IOMEM*512;
      256    20160    2                         SLCC_OTPAREA.FNC = %GH#IO_IOLD_OTPCCBRNG;
      257    20161    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );
      258    20162    2                         SLCC_OTPAREA.OTPCHN = '1'B;
      259    20163    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );
      260    20164    2                         SLCC_OTPAREA.FNC = %GH#IO_IOLD_OTPDATRNG;
      261    20165    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );
      262    20166    2                         SLCC_OTPAREA.OTPCHN = '0'B;
      263    20167    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );
      264    20168    2                         SLCC_OTPSYS.BFR_.ADR$ = CTX$;
      265    20169    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPSYS );
      266    20170        /*
      267    20171                                             Get some RCV buffers, too.
      268    20172        */
      269    20173    3                         DO TRCX=MINIMUM(KX$L2.K,KX_SLCCRCVCCBS) DOWNTO 1;
      270    20174    3                            CALL KXS$GETBFR ( KX_BUF.SIZ(KX$L2.BUF_SIZE), T$ );
      271    20175    3                            DAT$ = T$;
      272    20176    3                            IF KX$L1.IN_CCB_HEAD$ = ADDR(NIL)
      273    20177    3                               THEN KX$L1.IN_CCB_HEAD$ = DAT$;
      274    20178    3                               ELSE KX$L1.IN_CCB_TAIL$-> KX$TDATA.NEXT$ = DAT$;
      275    20179    3                            KX$L1.IN_CCB_TAIL$ = DAT$;
      276    20180    3                            CCB$ = KX$L2S.CCBHD$;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:12   
      277    20181    3                            KX$L2S.CCBHD$ = KX$CCB.LNK$;
      278    20182    3                            KX$CCB.LNK.SLCC = 0;
      279    20183    3                            KX$CCB.RANGE = KX_BUF.SIZ(KX$L2.BUF_SIZE)+7;
      280    20184    3                            KX$CCB.DATA_ADR = DAT.W*2+SIZEC(KX$DATA);
      281    20185    3                            KX$CCB.CCB_TAIL = CCB.W*2;
      282    20186    3                            SLCC_OTPCCBPTR.CCBPTR = CCB.W*2;
      283    20187    3                            CALL KHI$IO_OTP ( KH$CHN, SLCC_OTPCCBPTR ) ;
      284    20188    3                         END;
      285    20189    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_TASK);
      286    20190    2                         RETURN;
      287    20191    2                      CASE ( ELSE );
      288    20192    2                         RETURN;
      289    20193    2                   END;
      290    20194        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:13   
      291    20195        /*
      292    20196                                             Handle the request depending on
      293    20197                                             the type.
      294    20198        */
      295    20199    2       DO CASE ( NTYPE );
      296    20200        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:14   
      297    20201
      298    20202        /* Initialize a controller                                                    */
      299    20203
      300    20204    2          CASE ( %KX_N_INIT_CTR# );
      301    20205        /*
      302    20206                                             Load the CCP into the MLCP.
      303    20207        */
      304    20208    2             DWNLODCCP.CHN$ = ADDR(KH$CHN);
      305    20209    2             IF KH$CHN.DVCID = '2978'X THEN
      306    20210    2                   DWNLODCCP.CCPLCT$ = ADDR(KXM$MLC16); /* MLC-16 */
      307    20211    2                ELSE IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN
      308    20212    2                         DWNLODCCP.CCPLCT$ = ADDR(KXM$CCP); /* MLC-8 */
      309    20213    2                      ELSE IF KXS$PTR$ ~= ADDR(NIL) AND KX_IOMEM<128 THEN
      310    20214    2                               DWNLODCCP.CCPLCT$ = KXS$PTR$;
      311    20215    3                            ELSE DO;
      312    20216    3                                  KH$CHN.DED = '1'B; /* FOrget this one */
      313    20217    3                                  ERCOD = Y_SLCC_BIGMEM;
      314    20218        /*E* ERROR:   KXN-E_KXN_SLCC_BIGMEM#-2
      315    20219             MESSAGE: IOMEM too big (>127) for SLCC - line deadened.
      316    20220        */
      317    20221    3                                  GOTO ERRLOG_RET;
      318    20222
      319    20223    3                               END;
      320    20224    2             CALL KHI$DWNLODCCP ( DWNLODCCP )
      321    20225    2                WHENALTRETURN
      322    20226    3                   DO;
      323    20227        /*E* ERROR:        KXN-E_KXN_DWNLODCCP_FAL#-2
      324    20228             MESSAGE:      Cannot download the CCP.
      325    20229        */
      326    20230    3                      ERCOD = Y_NO_DWNLODCCP;
      327    20231    3                      GOTO ERRLOG_RET; /* in case %KX_N_INIT# */
      328    20232    3                   END;
      329    20233        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:15   
      330    20234
      331    20235        /* Initialize a line                                                          */
      332    20236
      333    20237    2          CASE ( %KX_N_INIT# );
      334    20238        /*
      335    20239                                             Load the LCTs into the MLCP.
      336    20240        */
      337    20241    2             DWNLODLCT.CHN$ = ADDR(KH$CHN);
      338    20242    2             IF KH$CHN.DVCID = '2978'X THEN
      339    20243    2                   DWNLODLCT.CCPLCT$ = ADDR(KXM$MLC16); /* MLC-16 */
      340    20244    2                ELSE IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN
      341    20245    2                         DWNLODLCT.CCPLCT$ = ADDR(KXM$CCP); /* MLC-8 */
      342    20246    2                      ELSE
      343    20247    2                         DWNLODLCT.CCPLCT$ = KXS$PTR$; /* SLCC */
      344    20248    2             DWNLODLCT.RCVINTLVL = KX_INHLVL + 1;
      345    20249    2             DWNLODLCT.TRNINTLVL = DWNLODLCT.RCVINTLVL;
      346    20250    2             CALL KHI$DWNLODLCT ( DWNLODLCT )
      347    20251    2                WHENALTRETURN
      348    20252    3                   DO;
      349    20253        /*E* ERROR:        KXN-E_KXN_DWNLODLCT_FAL#-2
      350    20254             MESSAGE:      Cannot download the LCTs.
      351    20255        */
      352    20256    3                      ERCOD = Y_NO_DWNLODLCT;
      353    20257    3   ERRLOG_RET:
      354    20258                           %WRSYSLOG (ERRCOD = ERCOD, TRMID = "KH$CHN.TERMID" );
      355    20276    3                      RETURN;
      356    20277    3                   END;
      357    20278    3             IF KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN DO;
      358    20279    3                      CALL KHI$IO_OTP (KH$CHN, SLCC_CNF);
      359    20280    3                      RETURN;
      360    20281    3                   END;
      361    20282        /*
      362    20283                                             If this is a direct-connect line
      363    20284                                             and the MLCP is supposed to
      364    20285                                             supply the clock, set the bit in
      365    20286                                             the proper LCT byte.
      366    20287        */
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:16   
      367    20288    2             IF KH$CHN.CLK
      368    20289    2                THEN
      369    20290    3                   DO;
      370    20291    3                      OTPLCTBYT.LCTBYT.ADR = %KW#CLACTR;
      371    20292    3                      OTPLCTBYT.LCTBYT.DAT = KXM$CCP.LCTBYT ( %KW#CLACTR ) + BITBIN(
             20292                               '08'X);
      372    20293    3                      CALL KHI$IO_OTPLCTBYT ( KH$CHN, OTPLCTBYT );
      373    20294    3                   END /* IF */;
      374    20295        /*
      375    20296                                             The CCP needs to know if it is
      376    20297                                             a baseband or broadband line.
      377    20298                                             Tell it by setting the LCT byte
      378    20299                                             to the proper value.
      379    20300        */
      380    20301    2             IF ( KH$CHN.DVCID = %BINBIT(%KX_DVCID_BASBND#, 16) )
      381    20302    2                THEN
      382    20303    3                   DO;
      383    20304    3                      OTPLCTBYT.LCTBYT.DAT = 0;
      384    20305
      385    20306    3                   END;
      386    20307    2                ELSE
      387    20308    3                   DO;
      388    20309    3                      OTPLCTBYT.LCTBYT.DAT = 1;
      389    20310
      390    20311    3                   END /* IF */;
      391    20312    2             OTPLCTBYT.LCTBYT.ADR = %KW#PWA4;
      392    20313    2             CALL KHI$IO_OTPLCTBYT ( KH$CHN, OTPLCTBYT );
      393    20314
      394    20315        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:17   
      395    20316
      396    20317        /* Start the line                                                             */
      397    20318
      398    20319    2          CASE ( %KX_N_START# );
      399    20320        /*
      400    20321                                             If the line is not dead, start
      401    20322                                             the output channel, put up some
      402    20323                                             receive buffers, and start the
      403    20324                                             input channel.
      404    20325        */
      405    20326    2             IF NOT KH$CHN.DED
      406    20327    2                THEN
      407    20328    3                   DO;
      408    20329
      409    20330    3                      CALL KXN$CMND ( %KX_N_START_TRN#, KH$CHN );
      410    20331
      411    20332        /*N*               CALL KXN$CMND ( %KX_N_UPDATE_RCV_CCB#, KH$CHN );  */
      412    20333    3                      CALL KXN$CMND ( %KX_N_START_RCV#, KH$CHN );
      413    20334    3                   END /* IF */;
      414    20335        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:18   
      415    20336
      416    20337        /* Start the receiver                                                         */
      417    20338
      418    20339    2          CASE ( %KX_N_START_RCV# );
      419    20340        /*
      420    20341                                             Make sure the receiver has max number of
      421    20342                                             receive CCBs.
      422    20343        */
      423    20344    2             IF KH$CHN.INPCCBCNT = 0
      424    20345    2                THEN
      425    20346    2                   CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INPCHN_RST );
      426    20347    3             DO WHILE ( KH$CHN.INPCCBCNT < KX$L2.MAXCCB );
      427    20348
      428    20349    3                CALL KXS$GETBFR ( KX_BUF.SIZ ( KX$L1.BUF_SIZE ), T$ );
      429    20350    3                DAT$ = T$;
      430    20351    3                IOLD_INPCHN.BFR_.ADR$ = DAT$;
      431    20352    3                IOLD_INPCHN.BFR_.BYTSIZ = KX_BUF.SIZ ( KX$DATA.BFRSIZ ) + 7;
      432    20353    3                CALL KHI$IOLD ( KH$CHN, IOLD_INPCHN );
      433    20354    3                IF ( KX$L1.IN_CCB_HEAD$ = ADDR(NIL) )
      434    20355    3                   THEN
      435    20356    4                      DO;
      436    20357    4                         KX$L1.IN_CCB_HEAD$ = DAT$;
      437    20358    4                         KH$CHN.INPCCBCNT = 1;
      438    20359    4                      END;
      439    20360    3                   ELSE
      440    20361    4                      DO;
      441    20362    4                         KX$L1.IN_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
      442    20363    4                         KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT + 1;
      443    20364    4                      END /* IF */;
      444    20365    3                KX$L1.IN_CCB_TAIL$ = DAT$;
      445    20366    3                KX$DATA.NEXT$ = ADDR(NIL);
      446    20367    3             END; /*  Loop on CCBs  */
      447    20368        /*
      448    20369            Acquire a reserved in CCB.
      449    20370        */
      450    20371    2             IF KX_RSV_INCCB$(KX$L1.BUF_SIZE) = ADDR(NIL)
      451    20372    2                THEN
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:19   
      452    20373    2                   CALL KXS$GETBFR ( KX_BUF.SIZ(KX$L1.BUF_SIZE),
      453    20374    2                      KX_RSV_INCCB$(KX$L1.BUF_SIZE) );
      454    20375
      455    20376        /*
      456    20377            Move status to CCB to active CCB
      457    20378        */
      458    20379    2             CALL KHI$IO_INP ( KH$CHN, INPNXTCCBSTT_INPCHN);
      459    20380        /*
      460    20381                                             If the line is not dead, start
      461    20382                                             the input channel.
      462    20383        */
      463    20384    2             IF NOT KH$CHN.DED
      464    20385    2                THEN
      465    20386    3                   DO;
      466    20387    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INPCHN_STR );
      467    20388    3                   END /* IF */;
      468    20389
      469    20390        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:20   
      470    20391
      471    20392        /* Start the transmitter                                                      */
      472    20393
      473    20394    2          CASE ( %KX_N_START_TRN# );
      474    20395        /*
      475    20396                                             If the line is not dead, start
      476    20397                                             the output channel.
      477    20398        */
      478    20399    2             IF NOT KH$CHN.DED
      479    20400    2                THEN
      480    20401    3                   DO;
      481    20402    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_STR );
      482    20403    3                   END /* IF */;
      483    20404        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:21   
      484    20405
      485    20406        /* Stop the line                                                              */
      486    20407
      487    20408    2          CASE ( %KX_N_STOP# );
      488    20409        /*
      489    20410                                             If the line is not dead, stop
      490    20411                                             both the input and output channel
      491    20412                                             and re-initialize the MLCP.
      492    20413        */
      493    20414    2             IF NOT KH$CHN.DED
      494    20415    2                THEN
      495    20416    3                   DO;
      496    20417    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INPCHN_INT );
      497    20418
      498    20419    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_INT );
      499    20420
      500    20421    3                      CALL KXN$CMND ( %KX_N_INIT#, KH$CHN );
      501    20422    3                   END /* IF */;
      502    20423        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:22   
      503    20424
      504    20425        /* Suspend the MLCP  -  go into RNR mode                                        */
      505    20426
      506    20427    2          CASE ( %KX_N_SUSPEND# );
      507    20428        /** RNR mode  -  later                                                          */
      508    20429        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:23   
      509    20430
      510    20431        /* Have the MLCP resume  -  come out of RNR mode                                */
      511    20432
      512    20433    2          CASE ( %KX_N_RESUME# );
      513    20434        /** Clear RNR mode  -  later                                                    */
      514    20435        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:24   
      515    20436
      516    20437        /* Queue the buffer and then try to send it                                   */
      517    20438
      518    20439    2          CASE ( %KX_N_SEND_Q# );
      519    20440
      520    20441        /* Is the queue empty                                                         */
      521    20442
      522    20443    2             IF ( KX$L1.OUT_Q_HEAD$ = ADDR(NIL) )
      523    20444    2                THEN
      524    20445
      525    20446        /* Yes,  put the buffer in at the head and tail                                */
      526    20447
      527    20448    2                   KX$L1.OUT_Q_HEAD$ = DAT$;
      528    20449    2                ELSE
      529    20450
      530    20451        /* No,  put the buffer at the tail of the queue                                */
      531    20452
      532    20453    2                   KX$L1.OUT_Q_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
      533    20454    2             KX$L1.OUT_Q_TAIL$ = DAT$;
      534    20455
      535    20456        /* Clear the forward link                                                     */
      536    20457
      537    20458    2             KX$DATA.NEXT$ = ADDR(NIL);
      538    20459
      539    20460        /* ALWAYS clear the level 2 release flag                                      */
      540    20461
      541    20462    2             KX$DATA.RLS.L1 = '0'B;
      542    20463
      543    20464        /* See if the MLCP is not busy now                                            */
      544    20465
      545    20466    2             IF ( KH$CHN.OTPCCBCNT = 0 )
      546    20467    2                THEN
      547    20468    3                   DO;
      548    20469
      549    20470        /* Not busy,  try to update the transmit CCBs                                  */
      550    20471
      551    20472    3                      CALL Y$UPDATE_TRN_CCB;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:25   
      552    20473    3                   END /* IF */;
      553    20474        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:26   
      554    20475
      555    20476        /* Update the transmitter's list of CCBs                                      */
      556    20477
      557    20478    2          CASE ( %KX_N_UPDATE_TRN_CCB# );
      558    20479
      559    20480    2             CALL Y$UPDATE_TRN_CCB;
      560    20481        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:27   
      561    20482
      562    20483        /* Queue the buffer to the supervisory queue                                  */
      563    20484
      564    20485    2          CASE ( %KX_N_SUPV_Q# );
      565    20486
      566    20487    2             IF ( KX$L1.SUPV_Q_HEAD$ = ADDR(NIL) )
      567    20488    2                THEN
      568    20489    2                   KX$L1.SUPV_Q_HEAD$ = DAT$;
      569    20490    2                ELSE
      570    20491    2                   KX$L1.SUPV_Q_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
      571    20492    2             KX$L1.SUPV_Q_TAIL$ = DAT$;
      572    20493
      573    20494    2             KX$DATA.NEXT$ = ADDR(NIL);
      574    20495    2             KX$DATA.RLS.L1 = '0'B;
      575    20496        /*
      576    20497                                             If the transmitter is not busy,
      577    20498                                             give it this buffer right away.
      578    20499        */
      579    20500    2             IF ( KH$CHN.OTPCCBCNT = 0 )
      580    20501    2                THEN
      581    20502    3                   DO;
      582    20503    3                      CALL Y$UPDATE_TRN_CCB;
      583    20504    3                   END /* IF */;
      584    20505        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:28   
      585    20506
      586    20507        /* For MLC8/16, set the LCT byte that tell the CCP to abort transmission      */
      587    20508
      588    20509    2          CASE ( %KX_N_ABR# );
      589    20510        /*
      590    20511                                             skip SLCCs.
      591    20512                  IF KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN RETURN;
      592    20513                  OTPLCTBYT.LCTBYT.ADR = %KX#M_ABR;
      593    20514                  OTPLCTBYT.LCTBYT.DAT = 1;
      594    20515                  CALL KHI$IO_OTPLCTBYT ( KH$CHN, OTPLCTBYT );
      595    20516        */
      596    20517        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:29   
      597    20518
      598    20519        /* Unknown request type                                                       */
      599    20520
      600    20521    2          CASE ( ELSE );
      601    20522        /*S* SCREECH_CODE: KXN-S$KX_BADKXNFNC#
      602    20523             MESSAGE: KXN$CMND received an unknown order.
      603    20524        */
      604    20525    2             CALL KHD$SCREECH ( Y_UNKFNC );
      605    20526    2       END /* CASE */;
      606    20527
      607    20528        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:30   
      608    20529
      609    20530        /*I*
      610    20531             NAME: Y$UPDATE_TRN_CCB
      611    20532             PURPOSE:
      612    20533                       Update the transmitter's list of CCBs
      613    20534        */
      614    20535    1   Y$UPDATE_TRN_CCB: PROC;
      615    20536
      616    20537        /* Do SLCC code if that's what it is. */
      617    20538
      618    20539    2       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC
      619    20540    2          THEN
      620    20541    2             GOTO Y$UPDATE_SLCC_CCB;
      621    20542
      622    20543        /* Get the transmit CCP state                                                 */
      623    20544
      624    20545    2       INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;
      625    20546    2       CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );
      626    20547    2       TRCX = KX$L2.TRCX;
      627    20548
      628    20549        /* Make sure the state is OFF and no CCBs are in the MLCP                     */
      629    20550
      630    20551    2       IF ( INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_OFF ) AND
      631    20552    2          KH$CHN.OTPCCBCNT = 0
      632    20553    2          THEN
      633    20554    3             DO;
      634    20555        /*
      635    20556                                             Reset the output CCB list.
      636    20557        */
      637    20558    3                CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_RST );
      638    20559        /*
      639    20560                                             Try to give some CCBs to the
      640    20561                                             MLCP to transmit.
      641    20562        */
      642    20563    4                DO WHILE (( KH$CHN.OTPCCBCNT < 4 ) AND
      643    20564    4                   ( KX$L1.SUPV_Q_HEAD$ ~= ADDR(NIL)));
      644    20565        /*
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:31   
      645    20566                                             Take the first buffer off the
      646    20567                                             queue and pass it to the MLCP.
      647    20568        */
      648    20569    4                   DAT$ = KX$L1.SUPV_Q_HEAD$;
      649    20570    4                   KX$L1.SUPV_Q_HEAD$ = KX$DATA.NEXT$;
      650    20571    4                   IF ( KX$DATA.NEXT$ = ADDR(NIL) )
      651    20572    4                      THEN
      652    20573    5                         DO;
      653    20574    5                            KX$L1.SUPV_Q_TAIL$ = ADDR(NIL);
      654    20575    5                         END /* IF */;
      655    20576        /*
      656    20577                                             For supervisory frames, insert
      657    20578                                             the current N(R).
      658    20579        */
      659    20580    4                   IF ( MOD ( KX$FRAME.CTL, 4 ) = 1 )
      660    20581    4                      THEN
      661    20582    5                         DO;
      662    20583    5                            IF NOT KX$L2.FLG.EXTSEQ
      663    20584    5                               THEN
      664    20585    5                                  KX$FRAME.CTL_BITS.NR = KX$L2.VR;
      665    20586    5                               ELSE
      666    20587    5                                  KX$EXTFRAME.XCTL.NR = KX$L2.VR;
      667    20588    5                            KX$L2.DCE_I_CNT = 0;
      668    20589    5                         END /* IF */;
      669    20590
      670    20591    4                   IF ( BINBIT(KX$FRAME.CTL,8) & '1F'X ) = '01'X AND
      671    20592    4                      KX$L2.OUT_Q_HEAD$ ~= ADDR(NIL) AND
      672    20593    4                      NOT KX$L2.FLG.BLK
      673    20594    4                      THEN
      674    20595        /*
      675    20596           There is no need to send this RR frame.
      676    20597        */
      677    20598    4                         CALL KXS$RLSBFR ( DAT$ );
      678    20599    4                      ELSE
      679    20600    5                         DO;
      680    20601    5                            IF ( KX$L1.OUT_CCB_HEAD$ = ADDR(NIL) )
      681    20602    5                               THEN
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:32   
      682    20603    5                                  KX$L1.OUT_CCB_HEAD$ = DAT$;
      683    20604    5                               ELSE
      684    20605    5                                  KX$L1.OUT_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
      685    20606    5                            KX$L1.OUT_CCB_TAIL$ = DAT$;
      686    20607    5                            KX$DATA.NEXT$ = ADDR(NIL);
      687    20608
      688    20609    5                            IOLD_OTPCHN.BFR_.ADR$ = DAT$;
      689    20610    5                            IOLD_OTPCHN.BFR_.BYTSIZ = KX$DATA.CNT;
      690    20611    5                            KH$CHN.OTPCCBCNT = KH$CHN.OTPCCBCNT + 1;
      691    20612    5                            CALL KHI$IOLD ( KH$CHN, IOLD_OTPCHN );
      692    20613        /*
      693    20614           Record frame in trace buffer.
      694    20615        */
      695    20616    5                            KX$L2.TRC(TRCX) = FRAME_TRACE(SIZEW(KX$DATA));
      696    20617    5                            KX$L2.TRC(TRCX+1) = FRAME_TRACE(SIZEW(KX$DATA)+1);
      697    20618    5                            TRCX = MOD ( TRCX + 4, 200 );
      698    20619    5                            KX$L2.TRCX = TRCX;
      699    20620    5                         END;
      700    20621    4                END /* LOOP */;
      701    20622        /*
      702    20623                                             If less than 4 CCBs have been
      703    20624                                             giver to the MLCP, check the
      704    20625                                             other queue.
      705    20626        */
      706    20627    4                DO WHILE (( KH$CHN.OTPCCBCNT < 4 ) AND
      707    20628    4                   ( KX$L1.OUT_Q_HEAD$ ~= ADDR(NIL))
      708    20629    4                   AND (KX$L2.STATE.CURRENT = 4) );
      709    20630
      710    20631    4                   DAT$ = KX$L1.OUT_Q_HEAD$;
      711    20632    4                   KX$L1.OUT_Q_HEAD$ = KX$DATA.NEXT$;
      712    20633    4                   IF ( KX$DATA.NEXT$ = ADDR(NIL) )
      713    20634    4                      THEN
      714    20635    5                         DO;
      715    20636    5                            KX$L1.OUT_Q_TAIL$ = ADDR(NIL);
      716    20637    5                         END /* IF */;
      717    20638        /*
      718    20639                                             Only I frames are on this
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:33   
      719    20640                                             queue, so it is always safe to
      720    20641                                             insert the current N(R).
      721    20642        */
      722    20643    4                   IF NOT KX$L2.FLG.EXTSEQ
      723    20644    4                      THEN
      724    20645    4                         KX$FRAME.CTL_BITS.NR = KX$L2.VR;
      725    20646    4                      ELSE
      726    20647    4                         KX$EXTFRAME.XCTL.NR = KX$L2.VR;
      727    20648    4                   KX$L2.DCE_I_CNT = 0;
      728    20649
      729    20650    4                   IF ( KX$L1.OUT_CCB_HEAD$ = ADDR(NIL) )
      730    20651    4                      THEN
      731    20652    4                         KX$L1.OUT_CCB_HEAD$ = DAT$;
      732    20653    4                      ELSE
      733    20654    4                         KX$L1.OUT_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
      734    20655    4                   KX$L1.OUT_CCB_TAIL$ = DAT$;
      735    20656    4                   KX$DATA.NEXT$ = ADDR(NIL);
      736    20657
      737    20658    4                   KH$CHN.OTPCCBCNT = KH$CHN.OTPCCBCNT + 1;
      738    20659    4                   IOLD_OTPCHN.BFR_.ADR$ = DAT$;
      739    20660    4                   IOLD_OTPCHN.BFR_.BYTSIZ = KX$DATA.CNT;
      740    20661    4                   CALL KHI$IOLD ( KH$CHN, IOLD_OTPCHN );
      741    20662        /*
      742    20663           Record frame in trace buffer.
      743    20664        */
      744    20665    4                   KX$L2.TRC(TRCX) = FRAME_TRACE(SIZEW(KX$DATA));
      745    20666    4                   KX$L2.TRC(TRCX+1) = FRAME_TRACE(SIZEW(KX$DATA)+1);
      746    20667    4                   KX$L2.TRC(TRCX+2) = FRAME_TRACE(SIZEW(KX$DATA)+2);
      747    20668    4                   KX$L2.TRC(TRCX+3) = FRAME_TRACE(SIZEW(KX$DATA)+3);
      748    20669    4                   TRCX = MOD ( TRCX + 4, 200 );
      749    20670    4                   KX$L2.TRCX = TRCX;
      750    20671    4                END /* LOOP */;
      751    20672        /*
      752    20673                                             If any buffers were given to the
      753    20674                                             MLCP, start the transmitter.
      754    20675        */
      755    20676    3                IF ( KH$CHN.OTPCCBCNT ~= 0 AND NOT KH$CHN.DED )
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:34   
      756    20677    3                   THEN
      757    20678    4                      DO;
      758    20679    4                         CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_STR );
      759    20680    4                      END /* IF */;
      760    20681    3             END /* IF */;
      761    20682
      762    20683    2       RETURN;
      763    20684
      764    20685        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:35   
      765    20686    2   Y$UPDATE_SLCC_CCB:;
      766    20687
      767    20688    3       DO WHILE '1'B;
      768    20689    3          DAT$ = KX$L1.OUT_Q_HEAD$;
      769    20690    3          CCB$ = KX$L2S.CCBHD$;
      770    20691    3          IF CCB$ = ADDR(NIL) OR KX$L2S.FLG.BLK OR DAT$ = ADDR(NIL)
      771    20692    3             THEN
      772    20693    3                RETURN;
      773    20694    3          KX$L1.OUT_Q_HEAD$ = KX$DATA.NEXT$;
      774    20695    3          IF KX$DATA.NEXT$ = ADDR(NIL)
      775    20696    3             THEN
      776    20697    3                KX$L1.OUT_Q_TAIL$ = KX$DATA.NEXT$;
      777    20698    3          IF KX$L1.OUT_CCB_HEAD$ = ADDR(NIL)
      778    20699    3             THEN
      779    20700    3                KX$L1.OUT_CCB_HEAD$ = DAT$;
      780    20701    3             ELSE
      781    20702    3                KX$L1.OUT_CCB_TAIL$->KX$DATA.NEXT$ = DAT$;
      782    20703    3          KX$L1.OUT_CCB_TAIL$ = DAT$;
      783    20704    3          KX$L2S.I_CNT = KX$L2S.I_CNT + 1;
      784    20705    3          IF KX$L2S.I_CNT >=KX$L2S.K
      785    20706    3             THEN
      786    20707    3                KX$L2S.FLG.BLK = '1'B;
      787    20708    3          KX$DATA.NEXT$ = ADDR(NIL);
      788    20709    3          KX$L2S.CCBHD$ = KX$CCB.LNK$;
      789    20710    3          KX$CCB.DATA_ADR = DAT.W*2 + SIZEC(KX$DATA);
      790    20711    3          KX$CCB.RANGE = KX$DATA.CNT;
      791    20712    3          TRCX = CCB.W*2;
      792    20713        /*     SLCC_OTPCCBPTR.CCBPTR = TRCX;
      793    20714               KX$CCB.CCB_TAIL = TRCX; */
      794    20715    3          KX$CCB.FLAGS = 'C000'X;
      795    20716    3          KX$CCB.LNK = '0'B;
      796    20717    4          DO UNTIL KX$L2S.XMTCCB.LOCK<0;
      797    20718    4             IF KX$L2S.XMTCCB.LOCK=0
      798    20719    4                THEN
      799    20720    4                   KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;
      800    20721    4          END;
      801    20722    3          IF KX$L2S.XMTCCB.HEAD = 0
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:36   
      802    20723    3             THEN
      803    20724    4                DO;
      804    20725    4                   KX$L2S.XMTCCB.HEAD = TRCX;
      805    20726    4                   KX$L2S.XMTCCB.NEXT = TRCX;
      806    20727    4                END;
      807    20728    3             ELSE
      808    20729    4                DO;
      809    20730    4                   CCB.W = KX$L2S.XMTCCB.TAIL/2;
      810    20731    4                   KX$CCB.LNK.FEP = TRCX;
      811    20732    4                   IF KX$L2S.XMTCCB.NEXT=0
      812    20733    4                      THEN KX$L2S.XMTCCB.NEXT = TRCX;
      813    20734    4                      ELSE KX$CCB.LNK.SLCC = TRCX;
      814    20735    4                END;
      815    20736    3          KX$L2S.XMTCCB.TAIL = TRCX;
      816    20737    3          IF KX$L2S.XMTCCB.NEXT=TRCX
      817    20738    3             THEN CALL KHI$IO_OTP (KH$CHN, SLCC_TASK);
      818    20739        /*     SLCC_OTPCCBPTR.OTPCHN = '1'B;
      819    20740               CALL KHI$IO_OTP (KH$CHN, SLCC_OTPCCBPTR);
      820    20741               SLCC_OTPCCBPTR.OTPCHN = '0'B; */
      821    20742    3          KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;
      822    20743    3       END;
      823    20744    2   END Y$UPDATE_TRN_CCB;
      824    20745
      825    20746    1   END KXN$CMND;

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:37   
--  Include file information  --

   K_ADDRESS_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KX_LCT_E.:E05TOU  is referenced.
   KW_SLCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXN$CMND.

   Procedure KXN$CMND requires 1909 words for executable code.
   Procedure KXN$CMND requires 30 words of local(AUTO) storage.
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:38   

    No errors detected in file KXN$CMND.:E05TSI    .

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:39   

 Object Unit name= KXN$CMND                                   File name= KXN$CMND.:E05TOU
 UTS= JUL 30 '97 02:23:27.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     30     1E  KXN$CMND
    1   Data  even  none   440    1B8  KXN$CMND
    2   Proc  even  none  1909    775  KXN$CMND
    3  RoData even  none     6      6  KXN$CMND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        3  KXN$CMND

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    1     28  KX_SLCC_SPM
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:40   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes    yes    Std       0 KXS$SLCC
         yes           Std       2 KHI$IOLD_FNC
         yes           Std       2 KHI$IO_OTP
         yes           Std       2 KHI$IO_INP
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       3 KXS$GETBFR
 yes     yes           Std       1 KHI$DWNLODCCP
 yes     yes           Std       1 KHI$DWNLODLCT
         yes           Std       2 KHI$IO_OTPLCTBYT
         yes           Std       2 KHI$IOLD
         yes           Std       1 KHD$SCREECH
         yes           Std       2 KHI$IO_INPLCTBYT
         yes           Std       1 KXS$RLSBFR
                       nStd      0 X6A_AUTO_3
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KX_BUF                                KX_RSV_INCCB$                         KX_INHLVL
     KX_IOMEM                              KX_PM$                                KXM$CCP
     KXM$MLC16                             KX_SLCCRCVCCBS                        KV_B_POOL$
r    G$ROS$
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:41   


        1        1        /*M* KXN$CMND  -  X.25 Handler MLCP Control Subroutines                         */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*X* PLM=4,IND=3,CTI=3,DCI=6,IAD=0,DTI=6,AND=Y,CSI=3,THI=3,STI=3,DMC=Y */
        9        9        /*P* NAME: KXN$CMND                                                           */
       10       10        /*P* PURPOSE: This module contains the X.25 handler                           */
       11       11        /*P* MLCP control subroutines.                                                */
       12       12
       13       13        /*F* NAME: KXN$CMND                                                           */
       14       14        /*F* PURPOSE: This subroutine does the MLCP control                           */
       15       15        /*F* functions for the X.25 handler.                                          */
       16       16
       17       17        /*D* NAME: KXN$CMND                                                           */
       18       18        /*D* PURPOSE: This subroutine does the MLCP control                           */
       19       19        /*D* functions for the X.25 handler.                                          */
       20       20        /*D* CALL: CALL KXN$CMND, ARGS ( NTYPE, CHN$, DAT$ )                */
       21       21        /*D* INPUT: NTYPE  =  request type                                              */
       22       22        /*D* KH$CHN  =  channel table                                       */
       23       23        /*D* DAT$  =  data pointer  ( optional )
                23        */
       24       24        /*D* OUTPUT: None                                                             */
       25       25
       26       26        KXN$CMND: PROC ( NTYPE, KH$CHN, INPDAT$ );

     26   2 000000  D380 0000 0000  xent KXN$CMND        LNJ,B5   X6A_AUTO_3
          2 000003       001E 0003                       DC       30,3

       27       27
       28       28        /*****************************************************************
       29       29        *                                                                *
       30       30        *                           Include files                        *
       31       31        *                                                                *
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:42   
       32       32        *****************************************************************/
       33       33
       34       34        %INCLUDE K_ID_E;
       35       84        %K#ENTID_E;
       36      103        %K#LYRID_E;
       37      110        %INCLUDE KL_MACRO_C;
       38     3462        %INCLUDE KL_AFCN_C;
       39     3563        %INCLUDE LCP_6;
       40     7842        %INCLUDE CP_6_SUBS;
       41     8382        %INCLUDE GH_HARDWARE_M;
       42     8480        %INCLUDE GH_IOFNC_E;
       43     8549        %INCLUDE KH$CHN;
       44     8671        %INCLUDE KL_SUPER_C;
       45    11573        %INCLUDE KV$GLB;
       46    11992        %INCLUDE KV_GLBCNS_E;
       47    12333        %KV#CQ_HNDID_E;
       48    12338        %INCLUDE KH$IO;
       49    12585        %INCLUDE KX_EQUS_E;
       50    13024        %INCLUDE KX_PERR_C;
       51    13153        %INCLUDE KX_SCODE_C;
       52    13219        %INCLUDE KX_DATA_C;
       53    13287        %INCLUDE KX_MACROS_M;
       54    14058        %INCLUDE KW_LCT_E;
       55    14413        %INCLUDE KW_SLCT_E;
       56    14589        %INCLUDE KX_LCT_E;
       57    14710        %INCLUDE KNH_MACRO_C;
       58    14993        %INCLUDE K_ADDRESS_M;
       59    15496        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:43   
       60    15497        /*****************************************************************
       61    15498        *                                                                *
       62    15499        *                           External Routines                    *
       63    15500        *                                                                *
       64    15501        *****************************************************************/
       65    15502
       66    15503    1   DCL KHI$DWNLODCCP ENTRY (1) ALTRET;
       67    15504    1   DCL KHI$DWNLODLCT ENTRY (1) ALTRET;
       68    15505    1   DCL KHI$IOLD ENTRY (2);
       69    15506    1   DCL KHI$IOLD_FNC ENTRY(2);
       70    15507    1   DCL KHI$IO_INP ENTRY (2);
       71    15508    1   DCL KHI$IO_INPLCTBYT ENTRY (2);
       72    15509    1   DCL KHI$IO_OTP ENTRY (2);
       73    15510    1   DCL KHI$IO_OTPLCTBYT ENTRY (2);
       74    15511    1   DCL KXS$GETBFR ENTRY (3) ALTRET;
       75    15512    1   DCL KXS$RLSBFR ENTRY (1);
       76    15513    1   DCL KXX$X29 ENTRY (1);
       77    15514    1   DCL KHD$SCREECH ENTRY (1);
       78    15515    1   DCL KXS$SYSLOG ENTRY(7);
       79    15516    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       80    15517        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:44   
       81    15518        /*****************************************************************
       82    15519        *                                                                *
       83    15520        *                           Auto                                 *
       84    15521        *                                                                *
       85    15522        *****************************************************************/
       86    15523
       87    15524    1   DCL NTYPE UBIN;
       88    15525    1   DCL CTX$ PTR;
       89    15526    1   DCL INPDAT$ PTR;
       90    15527    1   DCL DAT$ PTR;
       91    15528    1   DCL 1 DAT REDEF DAT$,
       92    15529    1         2 * UBIN, 2 W UBIN;
       93    15530    1   DCL CCB$ PTR;
       94    15531    1   DCL 1 CCB REDEF CCB$,
       95    15532    1         2 * UBIN, 2 W UBIN;
       96    15533    1   DCL T$ PTR; /* Temp so PL6 can trash as an argument */
       97    15534        %KH$CHN ( STCLASS = );
       98    15658    1   DCL TRCX UBIN;
       99    15659        %VLP_ERRCODE (STCLASS=AUTO, FPTN=ERCOD);
      100    15705        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:45   
      101    15706        /*****************************************************************
      102    15707        *                                                                *
      103    15708        *                           Based                                *
      104    15709        *                                                                *
      105    15710        *****************************************************************/
      106    15711
      107    15712        %KX$L1 ( STCLASS = "BASED(CTX$)" );
      108    15752        %KX$L2 ( STCLASS = "BASED(CTX$)" );
      109    16119        %KX$L2 ( FPTN = KX$L2S, STCLASS = "BASED(CTX$)", SLCC = YES );
      110    16516        %KX$CCB ( STCLASS = "BASED(CCB$)" );
      111    16547        %KX$DATA ( STCLASS = "BASED(DAT$)" );
      112    16567        %KX$DATA ( FPTN = KX$TDATA, STCLASS = BASED );
      113    16587    1   DCL FRAME_TRACE (0:20) ALIGNED UBIN(16) BASED(DAT$);
      114    16588        %KX$FRAME ( STCLASS = "BASED(DAT$)" );
      115    16620        %KX$EXTFRAME ( STCLASS = "BASED(DAT$)" );
      116    16644        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:46   
      117    16645        /*****************************************************************
      118    16646        *                                                                *
      119    16647        *                           Static                               *
      120    16648        *                                                                *
      121    16649        *****************************************************************/
      122    16650
      123    16651        %KX_DATA;
      124    17341        %KH$CCPLCT ( NAME = KXM$CCP, STCLASS = SYMREF );
      125    17367        %KH$CCPLCT ( NAME = KXM$MLC16, STCLASS = SYMREF );
      126    17393    1   DCL KXS$PTR$$ EPTR CONSTANT INIT(ENTADDR(KXS$SLCC));
      127    17394    1   DCL KXS$PTR$ REDEF KXS$PTR$$ PTR;
      128    17395    1   DCL KXS$SLCC ENTRY OPTIONAL; /* To test for existence */
      129    17396    1   DCL KX_SLCCRCVCCBS SYMREF UBIN;
      130    17397        %KH$DWNLODCCP ( NAME = DWNLODCCP, STCLASS = STATIC, CCPLODBIS = 0 );
      131    17420        %KH$DWNLODLCT ( NAME = DWNLODLCT, STCLASS = STATIC );
      132    17444        %KH$IO ( FPTN = OTPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_OTPLCTBYT );
      133    17558        %KH$IOLD ( FPTN = IOLD_INPCHN, STCLASS = STATIC, VLDCCB = YES,
      134    17559                     BYTX = "SIZEC(KX$DATA)" );
      135    17610        %KH$IO ( FPTN = INPNXTCCBSTT_INPCHN, STCLASS = STATIC, FNC = %GH#IO_INPNXTCCBSTT );
      136    17724        %KH$IO ( FPTN = OTPCHNCTR_INPCHN_STR, STCLASS = STATIC,
      137    17725                  FNC = %GH#IO_OTPCHNCTR, STRIO = YES );
      138    17839        %KH$IO ( FPTN = OTPCHNCTR_INPCHN_RST, STCLASS = STATIC,
      139    17840                  FNC = %GH#IO_OTPCHNCTR, CCBLSTRST = YES);
      140    17954        %KH$IO ( FPTN = OTPCHNCTR_OTPCHN_STR, STCLASS = STATIC, OTPCHN = YES,
      141    17955                  FNC = %GH#IO_OTPCHNCTR, STRIO = YES );
      142    18069        %KH$IO ( FPTN = OTPCHNCTR_INPCHN_INT, STCLASS = STATIC,
      143    18070                  FNC = %GH#IO_OTPCHNCTR, CHNINT = YES );
      144    18184        %KH$IO ( FPTN = OTPCHNCTR_OTPCHN_INT, STCLASS = STATIC, OTPCHN = YES,
      145    18185                  FNC = %GH#IO_OTPCHNCTR, CHNINT = YES );
      146    18299        %KH$IO ( FPTN = INPLCTBYT, STCLASS = STATIC, FNC = %GH#IO_INPLCTBYT);
      147    18413        %KH$IO ( FPTN = OTPCHNCTR_OTPCHN_RST, STCLASS = STATIC,
      148    18414                  FNC = %GH#IO_OTPCHNCTR, CCBLSTRST = YES, OTPCHN = YES);
      149    18528        %KH$IOLD ( FPTN = IOLD_OTPCHN, STCLASS = STATIC, VLDCCB = YES,
      150    18529                     BYTX = "SIZEC(KX$DATA)", OTPCHN = YES);
      151    18580        %KH$IOLD ( FPTN = SLCC_DUMP, STCLASS = CONSTANT, BYTSIZ = 768,
      152    18581                    ADR$ = KX_SLCC_SPM, FNC = %GH#IO_IOLD_SLCRAMTRN);
      153    18632    1   DCL KX_SLCC_SPM(0:383) UBIN STATIC SYMDEF;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:47   
      154    18633        %KH$IO ( FPTN = SLCC_OTPRAMCTR, STCLASS = CONSTANT, FNC = %GH#IO_OTPRAMCTR);
      155    18747        %KH$IO ( FPTN = SLCC_START, STCLASS = CONSTANT, OTPCHN = YES,
      156    18748                  FNC = %GH#IO_OTPCTR, STRIO = YES);
      157    18862        %KH$IO ( FPTN = SLCC_STOP, STCLASS = CONSTANT,
      158    18863                  FNC = %GH#IO_OTPSLCTSK, TSK = 128);
      159    18977        %KH$IO ( FPTN = SLCC_KILL, STCLASS = CONSTANT,
      160    18978                  FNC = %GH#IO_OTPCTR, STPIO = YES);
      161    19092        %KH$IO ( FPTN = SLCC_TASK, STCLASS = STATIC, FNC = %GH#IO_OTPSLCTSK);
      162    19206        %KH$IO ( FPTN = SLCC_CNF, STCLASS = CONSTANT,
      163    19207                  FNC = %GH#IO_OTPCNF, CNF = "%BITBIN('1158'X)");
      164    19321        %KH$IOLD (FPTN = SLCC_OTPAREA, STCLASS = STATIC);
      165    19372        %KH$IOLD (FPTN = SLCC_OTPSYS, STCLASS = STATIC,
      166    19373                   FNC = %GH#IO_IOLD_OTPSYSRNG, BYTSIZ = "SIZEC (KX$L2S)" );
      167    19424    1   DCL KV_B_POOL$(0:0) PTR SYMREF;
      168    19425        %KH$IO (FPTN = SLCC_OTPCCBPTR, STCLASS = STATIC, FNC = %GH#IO_OTPCCBPTR );
      169    19539        %KH$IO (FPTN = SLCC_INPSTT, STCLASS = STATIC, FNC = %GH#IO_INPSLCSTT);
      170    19653        %KH$IO (FPTN = SLCC_INIT, STCLASS = CONSTANT, FNC = %GH#IO_OTPCTR, HRDINT = YES);
      171    19767        %KH$IO (FPTN = SLCC_OTPINTCTR, STCLASS = CONSTANT, FNC = %GH#IO_OTPINTCTR);
      172    19881        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:48   
      173    19882        /*****************************************************************
      174    19883        *                                                                *
      175    19884        *                           Static                               *
      176    19885        *                                                                *
      177    19886        *****************************************************************/
      178    19887
      179    19888        %VLP_ERRCODE (FPTN=Y_NO_DWNLODCCP,STCLASS=CONSTANT,FCG='KX',MID='N',
      180    19889                      ERR# = %E_KXN_DWNLODCCP_FAL#, SEV = %G_WRSYSLOG_SEV_BAD_HARD#);
      181    19935        %VLP_ERRCODE (FPTN=Y_NO_DWNLODLCT,STCLASS=CONSTANT,FCG='KX',MID='N',
      182    19936                      ERR# = %E_KXN_DWNLODLCT_FAL#, SEV = %G_WRSYSLOG_SEV_BAD_HARD#);
      183    19982        %VLP_ERRCODE (FPTN=Y_SLCC_BIGMEM,STCLASS=CONSTANT,FCG='KX',MID='N',
      184    19983                      ERR# = %E_KXN_SLCC_BIGMEM#, SEV = %G_WRSYSLOG_SEV_BAD_HARD#);
      185    20029        %VLP_SCODE (FPTN=Y_UNKFNC,STCLASS=CONSTANT,FCG=KX,MID=N,ERR#=%S$KX_BADKXNFNC#);
      186    20090        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:49   
      187    20091
      188    20092        /*****************************************************************
      189    20093        *                                                                *
      190    20094        *                           Procedure                            *
      191    20095        *                                                                *
      192    20096        *****************************************************************/
      193    20097
      194    20098    1       IF ADDR ( INPDAT$ ) ~= ADDR(NIL)

  20098   2 000005  ECC7 0008                            LDB,B6   @INPDAT$,AUTO
          2 000007  8DD6                                 CMN      B6
          2 000008  0901 0006                            BE       s:20102,PREL

      195    20099    1          THEN
      196    20100    1             DAT$ = INPDAT$;

  20100   2 00000A  DC86                                 LDB,B5   ,B6
          2 00000B  DFC7 000C                            STB,B5   DAT$,AUTO
          2 00000D  0F81 0006                            B        s:20103,PREL

      197    20101    1          ELSE
      198    20102    1             DAT$ = ADDR(NIL);

  20102   2 00000F  DB80 0000 0000                       LAB,B5   0
          2 000012  DFC7 000C                            STB,B5   DAT$,AUTO

      199    20103    1       CTX$ = KH$CHN.CTX$;

  20103   2 000014  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 000016  BCC4 000C                            LDB,B3   12,B4
          2 000018  BFC7 000A                            STB,B3   CTX$,AUTO

      200    20104
      201    20105        /* Eh? $$TRACE ( FCG, 'GXN' ) , ( EVENT, 0 ) , ( MASK, %KX_TRACE_N )  */
      202    20106        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:50   
      203    20107        /*
      204    20108                                             Some SLCC operations are quite
      205    20109                                             different, so pick them out first.
      206    20110        */
      207    20111    1       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC

  20111   2 00001A  E844 0005                            LDR,R6   5,B4
          2 00001C  E570 0200                            AND,R6   512,IMO
          2 00001E  6901 0208                            BEZ,R6   s:20199,PREL

      208    20112    1          THEN
      209    20113    1             IF KH$CHN.DED THEN RETURN;

  20113   2 000020  82C4 0009                            LB,'0100'X        9,B4
  20113   2 000022       0100
          2 000023  0581 0004                            BBF      s:20115,PREL

  20113   2 000025  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      210    20114    1                ELSE
      211    20115    2                   DO CASE ( NTYPE );

  20115   2 000028  ACC7 0004                            LDB,B2   @NTYPE,AUTO
          2 00002A  B802                                 LDR,R3   ,B2
          2 00002B  3D0A                                 CMV,R3   10
          2 00002C  0281 01F7                            BGE      s:20192,PREL
          2 00002E  A830 0000 0034  02                   LDR,R2   s:20115+12,R3
          2 000031  83A0 0000 003E  02                   JMP      s:20117,R2
          2 000034       01E9                            DC       s:20199,PREL
          2 000035       00D0                            DC       s:20149,PREL
          2 000036       01E6                            DC       s:20192,PREL
          2 000037       00EC                            DC       s:20158,PREL
          2 000038       0000                            DC       s:20117,PREL
          2 000039       003A                            DC       s:20125,PREL
          2 00003A       01E6                            DC       s:20192,PREL
          2 00003B       01E6                            DC       s:20192,PREL
          2 00003C       01E9                            DC       s:20199,PREL
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:51   
          2 00003D       01E9                            DC       s:20199,PREL

      212    20116    2                      CASE ( %KX_N_START_TRN# );

      213    20117    3                         IF NOT KH$CHN.DWNLOD THEN DO;

  20117   2 00003E  82C4 0007                            LB,'1000'X        7,B4
  20117   2 000040       1000
          2 000041  0501 001D                            BBT      s:20121,PREL

      214    20118    3                                  CALL KXN$CMND ( %KX_N_INIT_CTR#, KH$CHN );

  20118   2 000043  9BF0 0000                            LAB,B1   0,IMO
          2 000045  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 000047  9FC7 0018                            STB,B1   ERCOD+5,AUTO
          2 000049  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00004B  CBF0 0200                            LAB,B4   512,IMO
          2 00004D  E3C0 FFB2                            LNJ,B6   s:26,PREL
          2 00004F       0001                            DC       s:20119,PREL

      215    20119    3                                  CALL KXN$CMND ( %KX_N_INIT#, KH$CHN );

  20119   2 000050  EBF0 0001                            LAB,B6   1,IMO
          2 000052  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000054  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 000056  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 000058  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00005A  CBF0 0200                            LAB,B4   512,IMO
          2 00005C  E3C0 FFA3                            LNJ,B6   s:26,PREL
          2 00005E       0001                            DC       s:20121,PREL

      216    20120    3                               END;

      217    20121    2                         IF NOT KH$CHN.DED

  20121   2 00005F  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 000061  82C6 0009                            LB,'0100'X        9,B6
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:52   
          2 000063       0100
          2 000064  0501 0010                            BBT      s:20123,PREL

      218    20122    2                            THEN CALL KHI$IO_OTP (KH$CHN, SLCC_START);

  20122   2 000066  DB80 0000 0009  00                   LAB,B5   SLCC_START
          2 000069  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 00006B  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 00006D  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00006F  CBF0 0200                            LAB,B4   512,IMO
          2 000071  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000074       0001                            DC       s:20123,PREL

      219    20123    2                         RETURN;

  20123   2 000075  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      220    20124    2                      CASE ( %KX_N_STOP# );

      221    20125    3                         IF KH$CHN.DWNLOD THEN DO;

  20125   2 000078  82C4 0007                            LB,'1000'X        7,B4
  20125   2 00007A       1000
          2 00007B  0581 0013                            BBF      s:20132,PREL

      222    20126        /*
      223    20127                                             If only a "stop", tell the SLCC
      224    20128        */
      225    20129    3                                  CALL KHI$IO_OTP (KH$CHN, SLCC_STOP);

  20129   2 00007D  9B80 0000 000B  00                   LAB,B1   SLCC_STOP
          2 000080  9FC7 001A                            STB,B1   ERCOD+7,AUTO
          2 000082  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 000084  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000086  CBF0 0200                            LAB,B4   512,IMO
          2 000088  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 00008B       0001                            DC       s:20130,PREL
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:53   

      226    20130    3                                  RETURN;

  20130   2 00008C  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      227    20131    3                               END;
      228    20132    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_KILL);

  20132   2 00008F  9B80 0000 000D  00                   LAB,B1   SLCC_KILL
          2 000092  9FC7 001A                            STB,B1   ERCOD+7,AUTO
          2 000094  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 000096  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000098  CBF0 0200                            LAB,B4   512,IMO
          2 00009A  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 00009D       0001                            DC       s:20136,PREL

      229    20133        /*
      230    20134                                             Take a dump, too.
      231    20135        */
      232    20136    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_OTPINTCTR);

  20136   2 00009E  EB80 0000 0013  00                   LAB,B6   SLCC_OTPINTCTR
          2 0000A1  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 0000A3  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 0000A5  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 0000A7  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0000A9  CBF0 0200                            LAB,B4   512,IMO
          2 0000AB  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 0000AE       0001                            DC       s:20137,PREL

      233    20137    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_OTPRAMCTR);

  20137   2 0000AF  EB80 0000 0007  00                   LAB,B6   SLCC_OTPRAMCTR
          2 0000B2  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 0000B4  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 0000B6  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 0000B8  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:54   
          2 0000BA  CBF0 0200                            LAB,B4   512,IMO
          2 0000BC  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 0000BF       0001                            DC       s:20138,PREL

      234    20138    2                         CALL KHI$IOLD_FNC (KH$CHN, SLCC_DUMP);

  20138   2 0000C0  EB80 0000 0002  00                   LAB,B6   SLCC_DUMP
          2 0000C3  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 0000C5  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 0000C7  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 0000C9  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0000CB  CBF0 0200                            LAB,B4   512,IMO
          2 0000CD  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD_FNC
          2 0000D0       0001                            DC       s:20139,PREL

      235    20139    2                         SLCC_INPSTT.SLCSTT = '0'B;

  20139   2 0000D1  8700 0000 01B7  01                   CL       SLCC_INPSTT+1

      236    20140    2                         TRCX = 5000;

  20140   2 0000D4  E870 1388                            LDR,R6   5000,IMO
          2 0000D6  EF47 0012                            STR,R6   TRCX,AUTO

      237    20141    3                         DO UNTIL SLCC_INPSTT.SLCSTT;

      238    20142    3                            CALL KHI$IO_INP (KH$CHN, SLCC_INPSTT);

  20142   2 0000D8  EB80 0000 01B6  01                   LAB,B6   SLCC_INPSTT
          2 0000DB  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 0000DD  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 0000DF  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 0000E1  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0000E3  CBF0 0200                            LAB,B4   512,IMO
          2 0000E5  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 0000E8       0001                            DC       s:20143,PREL

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:55   
      239    20143    3                            TRCX = TRCX-1;

  20143   2 0000E9  88C7 0012                            DEC      TRCX,AUTO

      240    20144    3                            IF TRCX=0 OR KH$CHN.DED THEN EXIT;

  20144   2 0000EB  E847 0012                            LDR,R6   TRCX,AUTO
          2 0000ED  6901 000C                            BEZ,R6   s:20146,PREL
          2 0000EF  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 0000F1  82C6 0009                            LB,'0100'X        9,B6
          2 0000F3       0100
          2 0000F4  0501 0005                            BBT      s:20146,PREL

      241    20145    3                         END;

  20145   2 0000F6  D800 0000 01B7  01                   LDR,R5   SLCC_INPSTT+1
          2 0000F9  595F                                 BEZ,R5   s:20142,SPREL

      242    20146    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_INIT);

  20146   2 0000FA  EB80 0000 0011  00                   LAB,B6   SLCC_INIT
          2 0000FD  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 0000FF  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000101  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 000103  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000105  CBF0 0200                            LAB,B4   512,IMO
          2 000107  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 00010A       0001                            DC       s:20147,PREL

      243    20147    2                         RETURN;

  20147   2 00010B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      244    20148    2                      CASE ( %KX_N_INIT# );

      245    20149    2                         IF NOT KH$CHN.DWNLOD

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:56   
  20149   2 00010E  82C4 0007                            LB,'1000'X        7,B4
  20149   2 000110       1000
          2 000111  0501 000E                            BBT      s:20152,PREL

      246    20150    2                            THEN
      247    20151    2                               CALL KXN$CMND (%KX_N_INIT_CTR#, KH$CHN);

  20151   2 000113  9BF0 0000                            LAB,B1   0,IMO
          2 000115  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 000117  9FC7 0018                            STB,B1   ERCOD+5,AUTO
          2 000119  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00011B  CBF0 0200                            LAB,B4   512,IMO
          2 00011D  E3C0 FEE2                            LNJ,B6   s:26,PREL
          2 00011F       0001                            DC       s:20152,PREL

      248    20152    2                         IF KH$CHN.DED THEN RETURN;

  20152   2 000120  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 000122  82C6 0009                            LB,'0100'X        9,B6
          2 000124       0100
          2 000125  0581 0101                            BBF      s:20199,PREL

  20152   2 000127  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      249    20153    2                      CASE ( %KX_N_INIT_CTR#, %KX_N_SEND_Q#, %KX_N_UPDATE_TRN_CCB# );

      250    20154        /*
      251    20155                                             Code below is ok for these
      252    20156        */
      253    20157    2                      CASE ( %KX_N_START_RCV# );

      254    20158    2                         SLCC_OTPAREA.BFR_.ADR$ = KV_B_POOL$(1);

  20158   2 00012A  9C80 0000 0002  xsym                 LDB,B1   KV_B_POOL$+2
          2 00012D  9F80 0000 01AB  01                   STB,B1   SLCC_OTPAREA+1

      255    20159    2                         SLCC_OTPAREA.BFR_.BYTSIZ = KX_IOMEM*512;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:57   

  20159   2 000130  E800 0000 0000  xsym                 LDR,R6   KX_IOMEM
          2 000133  6009                                 SOL,R6   9
          2 000134  EF00 0000 01AE  01                   STR,R6   SLCC_OTPAREA+4

      256    20160    2                         SLCC_OTPAREA.FNC = %GH#IO_IOLD_OTPCCBRNG;

  20160   2 000137  5C0B                                 LDV,R5   11
          2 000138  DA80 0000 01AA  01                   SRM,R5,'003F'X    SLCC_OTPAREA
          2 00013B       003F

      257    20161    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );

  20161   2 00013C  EB80 0000 01AA  01                   LAB,B6   SLCC_OTPAREA
          2 00013F  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 000141  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 000143  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000145  CBF0 0200                            LAB,B4   512,IMO
          2 000147  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD_FNC
          2 00014A       0001                            DC       s:20162,PREL

      258    20162    2                         SLCC_OTPAREA.OTPCHN = '1'B;

  20162   2 00014B  8900 0000 01AA  01                   LBT,'0040'X       SLCC_OTPAREA
  20162   2 00014E       0040

      259    20163    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );

  20163   2 00014F  EB80 0000 01AA  01                   LAB,B6   SLCC_OTPAREA
          2 000152  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 000154  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000156  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 000158  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00015A  CBF0 0200                            LAB,B4   512,IMO
          2 00015C  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD_FNC
          2 00015F       0001                            DC       s:20164,PREL

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:58   
      260    20164    2                         SLCC_OTPAREA.FNC = %GH#IO_IOLD_OTPDATRNG;

  20164   2 000160  6C09                                 LDV,R6   9
          2 000161  EA80 0000 01AA  01                   SRM,R6,'003F'X    SLCC_OTPAREA
          2 000164       003F

      261    20165    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );

  20165   2 000165  EB80 0000 01AA  01                   LAB,B6   SLCC_OTPAREA
          2 000168  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 00016A  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 00016C  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 00016E  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000170  CBF0 0200                            LAB,B4   512,IMO
          2 000172  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD_FNC
          2 000175       0001                            DC       s:20166,PREL

      262    20166    2                         SLCC_OTPAREA.OTPCHN = '0'B;

  20166   2 000176  8800 0000 01AA  01                   LBF,'0040'X       SLCC_OTPAREA
  20166   2 000179       0040

      263    20167    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPAREA );

  20167   2 00017A  EB80 0000 01AA  01                   LAB,B6   SLCC_OTPAREA
          2 00017D  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 00017F  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000181  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 000183  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000185  CBF0 0200                            LAB,B4   512,IMO
          2 000187  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD_FNC
          2 00018A       0001                            DC       s:20168,PREL

      264    20168    2                         SLCC_OTPSYS.BFR_.ADR$ = CTX$;

  20168   2 00018B  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00018D  EF80 0000 01B0  01                   STB,B6   SLCC_OTPSYS+1
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:59   

      265    20169    2                         CALL KHI$IOLD_FNC ( KH$CHN, SLCC_OTPSYS );

  20169   2 000190  DB80 0000 01AF  01                   LAB,B5   SLCC_OTPSYS
          2 000193  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 000195  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 000197  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 000199  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00019B  CBF0 0200                            LAB,B4   512,IMO
          2 00019D  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD_FNC
          2 0001A0       0001                            DC       s:20173,PREL

      266    20170        /*
      267    20171                                             Get some RCV buffers, too.
      268    20172        */
      269    20173    3                         DO TRCX=MINIMUM(KX$L2.K,KX_SLCCRCVCCBS) DOWNTO 1;

  20173   2 0001A1  E800 0000 0000  xsym                 LDR,R6   KX_SLCCRCVCCBS
          2 0001A4  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0001A6  D2C6 0016                            LLH,R5   22,B6
          2 0001A8  D956                                 CMR,R5   R6
          2 0001A9  0281 0002                            BGE      s:20173+11,PREL
          2 0001AB  E855                                 LDR,R6   R5
          2 0001AC  EF47 0012                            STR,R6   TRCX,AUTO
          2 0001AE  0F81 005C                            B        s:20188+2,PREL

      270    20174    3                            CALL KXS$GETBFR ( KX_BUF.SIZ(KX$L2.BUF_SIZE), T$ );

  20174   2 0001B0  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0001B2  B2C6 0004                            LLH,R3   4,B6
          2 0001B4  DBC7 0010                            LAB,B5   T$,AUTO
          2 0001B6  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 0001B8  CBB0 0000 001E  xsym                 LAB,B4   KX_BUF+30,R3
          2 0001BB  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 0001BD  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0001BF  CBF0 0200                            LAB,B4   512,IMO
          2 0001C1  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:60   
          2 0001C4       0001                            DC       s:20175,PREL

      271    20175    3                            DAT$ = T$;

  20175   2 0001C5  ECC7 0010                            LDB,B6   T$,AUTO
          2 0001C7  EFC7 000C                            STB,B6   DAT$,AUTO

      272    20176    3                            IF KX$L1.IN_CCB_HEAD$ = ADDR(NIL)

  20176   2 0001C9  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 0001CB  8DC5 0006                            CMN      6,B5
          2 0001CD  0981 0005                            BNE      s:20178,PREL

      273    20177    3                               THEN KX$L1.IN_CCB_HEAD$ = DAT$;

  20177   2 0001CF  EFC5 0006                            STB,B6   6,B5
          2 0001D1  0F81 0004                            B        s:20179,PREL

      274    20178    3                               ELSE KX$L1.IN_CCB_TAIL$-> KX$TDATA.NEXT$ = DAT$;

  20178   2 0001D3  CCC5 0008                            LDB,B4   8,B5
          2 0001D5  EF84                                 STB,B6   ,B4

      275    20179    3                            KX$L1.IN_CCB_TAIL$ = DAT$;

  20179   2 0001D6  ECC7 000C                            LDB,B6   DAT$,AUTO
          2 0001D8  EFC5 0008                            STB,B6   8,B5

      276    20180    3                            CCB$ = KX$L2S.CCBHD$;

  20180   2 0001DA  CCC5 002C                            LDB,B4   44,B5
          2 0001DC  CFC7 000E                            STB,B4   CCB$,AUTO

      277    20181    3                            KX$L2S.CCBHD$ = KX$CCB.LNK$;

  20181   2 0001DE  BC84                                 LDB,B3   ,B4
          2 0001DF  BFC5 002C                            STB,B3   44,B5
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:61   

      278    20182    3                            KX$CCB.LNK.SLCC = 0;

  20182   2 0001E1  8704                                 CL       ,B4

      279    20183    3                            KX$CCB.RANGE = KX_BUF.SIZ(KX$L2.BUF_SIZE)+7;

  20183   2 0001E2  B2C5 0004                            LLH,R3   4,B5
          2 0001E4  E830 0000 001E  xsym                 LDR,R6   KX_BUF+30,R3
          2 0001E7  6E07                                 ADV,R6   7
          2 0001E8  EF44 0003                            STR,R6   3,B4

      280    20184    3                            KX$CCB.DATA_ADR = DAT.W*2+SIZEC(KX$DATA);

  20184   2 0001EA  D847 000D                            LDR,R5   DAT$+1,AUTO
          2 0001EC  5001                                 SOL,R5   1
          2 0001ED  5E10                                 ADV,R5   16
          2 0001EE  DF44 0002                            STR,R5   2,B4

      281    20185    3                            KX$CCB.CCB_TAIL = CCB.W*2;

  20185   2 0001F0  C847 000F                            LDR,R4   CCB$+1,AUTO
          2 0001F2  4001                                 SOL,R4   1
          2 0001F3  CF44 0007                            STR,R4   7,B4

      282    20186    3                            SLCC_OTPCCBPTR.CCBPTR = CCB.W*2;

  20186   2 0001F5  CF00 0000 01B5  01                   STR,R4   SLCC_OTPCCBPTR+1

      283    20187    3                            CALL KHI$IO_OTP ( KH$CHN, SLCC_OTPCCBPTR ) ;

  20187   2 0001F8  EB80 0000 01B4  01                   LAB,B6   SLCC_OTPCCBPTR
          2 0001FB  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 0001FD  BCC7 0006                            LDB,B3   @KH$CHN,AUTO
          2 0001FF  BFC7 0018                            STB,B3   ERCOD+5,AUTO
          2 000201  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000203  CBF0 0200                            LAB,B4   512,IMO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:62   
          2 000205  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000208       0001                            DC       s:20188,PREL

      284    20188    3                         END;

  20188   2 000209  88C7 0012                            DEC      TRCX,AUTO
          2 00020B  E847 0012                            LDR,R6   TRCX,AUTO
          2 00020D  6D01                                 CMV,R6   1
          2 00020E  0281 FFA1                            BGE      s:20174,PREL

      285    20189    2                         CALL KHI$IO_OTP (KH$CHN, SLCC_TASK);

  20189   2 000210  EB80 0000 01A8  01                   LAB,B6   SLCC_TASK
          2 000213  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 000215  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000217  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 000219  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00021B  CBF0 0200                            LAB,B4   512,IMO
          2 00021D  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000220       0001                            DC       s:20190,PREL

      286    20190    2                         RETURN;

  20190   2 000221  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      287    20191    2                      CASE ( ELSE );

      288    20192    2                         RETURN;

  20192   2 000224  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      289    20193    2                   END;

      290    20194        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:63   
      291    20195        /*
      292    20196                                             Handle the request depending on
      293    20197                                             the type.
      294    20198        */
      295    20199    2       DO CASE ( NTYPE );

  20199   2 000227  ECC7 0004                            LDB,B6   @NTYPE,AUTO
          2 000229  B806                                 LDR,R3   ,B6
          2 00022A  3D0D                                 CMV,R3   13
          2 00022B  0281 02D2                            BGE      s:20525,PREL
          2 00022D  A830 0000 0233  02                   LDR,R2   s:20199+12,R3
          2 000230  83A0 0000 0240  02                   JMP      s:20208,R2
          2 000233       0000                            DC       s:20208,PREL
          2 000234       0053                            DC       s:20241,PREL
          2 000235       010E                            DC       s:20326,PREL
          2 000236       0133                            DC       s:20344,PREL
          2 000237       0215                            DC       s:20399,PREL
          2 000238       022D                            DC       s:20414,PREL
          2 000239       02C7                            DC       s:20526,PREL
          2 00023A       02C7                            DC       s:20526,PREL
          2 00023B       0265                            DC       s:20443,PREL
          2 00023C       028F                            DC       s:20480,PREL
          2 00023D       02BE                            DC       s:20525,PREL
          2 00023E       0294                            DC       s:20487,PREL
          2 00023F       02C7                            DC       s:20526,PREL

      296    20200        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:64   
      297    20201
      298    20202        /* Initialize a controller                                                    */
      299    20203
      300    20204    2          CASE ( %KX_N_INIT_CTR# );

      301    20205        /*
      302    20206                                             Load the CCP into the MLCP.
      303    20207        */
      304    20208    2             DWNLODCCP.CHN$ = ADDR(KH$CHN);

  20208   2 000240  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000242  DF80 0000 0000  01                   STB,B5   DWNLODCCP

      305    20209    2             IF KH$CHN.DVCID = '2978'X THEN

  20209   2 000245  E845 0002                            LDR,R6   2,B5
          2 000247  E970 2978                            CMR,R6   10616,IMO
          2 000249  0981 0009                            BNE      s:20211,PREL

      306    20210    2                   DWNLODCCP.CCPLCT$ = ADDR(KXM$MLC16); /* MLC-16 */

  20210   2 00024B  CB80 0000 0000  xsym                 LAB,B4   KXM$MLC16
          2 00024E  CF80 0000 0002  01                   STB,B4   DWNLODCCP+2
          2 000251  0F81 002D                            B        s:20224,PREL

      307    20211    2                ELSE IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN

  20211   2 000253  D845 0005                            LDR,R5   5,B5
          2 000255  D570 0200                            AND,R5   512,IMO
          2 000257  5981 0009                            BNEZ,R5  s:20213,PREL

      308    20212    2                         DWNLODCCP.CCPLCT$ = ADDR(KXM$CCP); /* MLC-8 */

  20212   2 000259  CB80 0000 0000  xsym                 LAB,B4   KXM$CCP
          2 00025C  CF80 0000 0002  01                   STB,B4   DWNLODCCP+2
          2 00025F  0F81 001F                            B        s:20224,PREL

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:65   
      309    20213    2                      ELSE IF KXS$PTR$ ~= ADDR(NIL) AND KX_IOMEM<128 THEN

  20213   2 000261  8D80 0000 0000  00                   CMN      KXS$PTR$$
          2 000264  0901 0010                            BE       s:20216,PREL
          2 000266  D800 0000 0000  xsym                 LDR,R5   KX_IOMEM
          2 000269  D970 0080                            CMR,R5   128,IMO
          2 00026B  0281 0009                            BGE      s:20216,PREL

      310    20214    2                               DWNLODCCP.CCPLCT$ = KXS$PTR$;

  20214   2 00026D  CC80 0000 0000  00                   LDB,B4   KXS$PTR$$
          2 000270  CF80 0000 0002  01                   STB,B4   DWNLODCCP+2
          2 000273  0F81 000B                            B        s:20224,PREL

      311    20215    3                            ELSE DO;

      312    20216    3                                  KH$CHN.DED = '1'B; /* FOrget this one */

  20216   2 000275  8945 0009                            LBT,'0100'X       9,B5
  20216   2 000277       0100

      313    20217    3                                  ERCOD = Y_SLCC_BIGMEM;

  20217   2 000278  8C80 0000 0019  00                   LDI      Y_SLCC_BIGMEM
          2 00027B  8D47 0013                            SDI      ERCOD,AUTO

      314    20218        /*E* ERROR:   KXN-E_KXN_SLCC_BIGMEM#-2
      315    20219             MESSAGE: IOMEM too big (>127) for SLCC - line deadened.
      316    20220        */
      317    20221    3                                  GOTO ERRLOG_RET;

  20221   2 00027D  0F81 0056                            B        s:20274,PREL

      318    20222
      319    20223    3                               END;
      320    20224    2             CALL KHI$DWNLODCCP ( DWNLODCCP )

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:66   
  20224   2 00027F  BB80 0000 0000  03                   LAB,B3   0
          2 000282  CBF0 0100                            LAB,B4   256,IMO
          2 000284  E380 0000 0000  xent                 LNJ,B6   KHI$DWNLODCCP
          2 000287       0003                            DC       s:20230,PREL
          2 000288  0F81 0008                            B        s:20231+2,PREL

      321    20225    2                WHENALTRETURN
      322    20226    3                   DO;

      323    20227        /*E* ERROR:        KXN-E_KXN_DWNLODCCP_FAL#-2
      324    20228             MESSAGE:      Cannot download the CCP.
      325    20229        */
      326    20230    3                      ERCOD = Y_NO_DWNLODCCP;

  20230   2 00028A  8C80 0000 0015  00                   LDI      Y_NO_DWNLODCCP
          2 00028D  8D47 0013                            SDI      ERCOD,AUTO

      327    20231    3                      GOTO ERRLOG_RET; /* in case %KX_N_INIT# */

  20231   2 00028F  0F81 0044                            B        s:20274,PREL
          2 000291  0F81 0275                            B        s:20526,PREL

      328    20232    3                   END;
      329    20233        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:67   
      330    20234
      331    20235        /* Initialize a line                                                          */
      332    20236
      333    20237    2          CASE ( %KX_N_INIT# );

      334    20238        /*
      335    20239                                             Load the LCTs into the MLCP.
      336    20240        */
      337    20241    2             DWNLODLCT.CHN$ = ADDR(KH$CHN);

  20241   2 000293  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000295  DF80 0000 0005  01                   STB,B5   DWNLODLCT

      338    20242    2             IF KH$CHN.DVCID = '2978'X THEN

  20242   2 000298  E845 0002                            LDR,R6   2,B5
          2 00029A  E970 2978                            CMR,R6   10616,IMO
          2 00029C  0981 0009                            BNE      s:20244,PREL

      339    20243    2                   DWNLODLCT.CCPLCT$ = ADDR(KXM$MLC16); /* MLC-16 */

  20243   2 00029E  CB80 0000 0000  xsym                 LAB,B4   KXM$MLC16
          2 0002A1  CF80 0000 0007  01                   STB,B4   DWNLODLCT+2
          2 0002A4  0F81 0015                            B        s:20248,PREL

      340    20244    2                ELSE IF NOT KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN

  20244   2 0002A6  D845 0005                            LDR,R5   5,B5
          2 0002A8  D570 0200                            AND,R5   512,IMO
          2 0002AA  5981 0009                            BNEZ,R5  s:20247,PREL

      341    20245    2                         DWNLODLCT.CCPLCT$ = ADDR(KXM$CCP); /* MLC-8 */

  20245   2 0002AC  CB80 0000 0000  xsym                 LAB,B4   KXM$CCP
          2 0002AF  CF80 0000 0007  01                   STB,B4   DWNLODLCT+2
          2 0002B2  0F81 0007                            B        s:20248,PREL

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:68   
      342    20246    2                      ELSE
      343    20247    2                         DWNLODLCT.CCPLCT$ = KXS$PTR$; /* SLCC */

  20247   2 0002B4  CC80 0000 0000  00                   LDB,B4   KXS$PTR$$
          2 0002B7  CF80 0000 0007  01                   STB,B4   DWNLODLCT+2

      344    20248    2             DWNLODLCT.RCVINTLVL = KX_INHLVL + 1;

  20248   2 0002BA  E800 0000 0000  xsym                 LDR,R6   KX_INHLVL
          2 0002BD  6E01                                 ADV,R6   1
          2 0002BE  EF00 0000 000A  01                   STR,R6   DWNLODLCT+5

      345    20249    2             DWNLODLCT.TRNINTLVL = DWNLODLCT.RCVINTLVL;

  20249   2 0002C1  EF00 0000 000B  01                   STR,R6   DWNLODLCT+6

      346    20250    2             CALL KHI$DWNLODLCT ( DWNLODLCT )

  20250   2 0002C4  BB80 0000 0002  03                   LAB,B3   +2
          2 0002C7  CBF0 0100                            LAB,B4   256,IMO
          2 0002C9  E380 0000 0000  xent                 LNJ,B6   KHI$DWNLODLCT
          2 0002CC       0003                            DC       s:20256,PREL
          2 0002CD  0F81 0020                            B        s:20278,PREL

      347    20251    2                WHENALTRETURN
      348    20252    3                   DO;

      349    20253        /*E* ERROR:        KXN-E_KXN_DWNLODLCT_FAL#-2
      350    20254             MESSAGE:      Cannot download the LCTs.
      351    20255        */
      352    20256    3                      ERCOD = Y_NO_DWNLODLCT;

  20256   2 0002CF  8C80 0000 0017  00                   LDI      Y_NO_DWNLODLCT
          2 0002D2  8D47 0013                            SDI      ERCOD,AUTO

      353    20257    3   ERRLOG_RET:
      354    20258                           %WRSYSLOG (ERRCOD = ERCOD, TRMID = "KH$CHN.TERMID" );
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:69   

  20274   2 0002D4  EB80 0000 0000       ERRLOG_RET      LAB,B6   0
          2 0002D7  EFC7 001C                            STB,B6   ERCOD+9,AUTO
          2 0002D9  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 0002DB  CBC5 0012                            LAB,B4   18,B5
          2 0002DD  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 0002DF  BBC7 0013                            LAB,B3   ERCOD,AUTO
          2 0002E1  BFC7 0018                            STB,B3   ERCOD+5,AUTO
          2 0002E3  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0002E5  CBF0 0300                            LAB,B4   768,IMO
          2 0002E7  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 0002EA       0001                            DC       s:20276,PREL

      355    20276    3                      RETURN;

  20276   2 0002EB  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      356    20277    3                   END;
      357    20278    3             IF KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN DO;

  20278   2 0002EE  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 0002F0  E846 0005                            LDR,R6   5,B6
          2 0002F2  E570 0200                            AND,R6   512,IMO
          2 0002F4  6901 0013                            BEZ,R6   s:20288,PREL

      358    20279    3                      CALL KHI$IO_OTP (KH$CHN, SLCC_CNF);

  20279   2 0002F6  DB80 0000 000F  00                   LAB,B5   SLCC_CNF
          2 0002F9  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 0002FB  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 0002FD  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0002FF  CBF0 0200                            LAB,B4   512,IMO
          2 000301  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000304       0001                            DC       s:20280,PREL

      359    20280    3                      RETURN;

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:70   
  20280   2 000305  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      360    20281    3                   END;
      361    20282        /*
      362    20283                                             If this is a direct-connect line
      363    20284                                             and the MLCP is supposed to
      364    20285                                             supply the clock, set the bit in
      365    20286                                             the proper LCT byte.
      366    20287        */
      367    20288    2             IF KH$CHN.CLK

  20288   2 000308  8286                                 LB,'0020'X        ,B6
  20288   2 000309       0020
          2 00030A  0581 001C                            BBF      s:20301,PREL

      368    20289    2                THEN
      369    20290    3                   DO;

      370    20291    3                      OTPLCTBYT.LCTBYT.ADR = %KW#CLACTR;

  20291   2 00030C  6C14                                 LDV,R6   20
          2 00030D  EA80 0000 000D  01                   SRM,R6,'00FF'X    OTPLCTBYT+1
          2 000310       00FF

      371    20292    3                      OTPLCTBYT.LCTBYT.DAT = KXM$CCP.LCTBYT ( %KW#CLACTR ) + BITBIN(
             20292                               '08'X);

  20292   2 000311  D280 0000 000D  xsym                 LLH,R5   KXM$CCP+13
          2 000314  5E08                                 ADV,R5   8
          2 000315  D780 0000 000D  01                   STH,R5   OTPLCTBYT+1

      372    20293    3                      CALL KHI$IO_OTPLCTBYT ( KH$CHN, OTPLCTBYT );

  20293   2 000318  DB80 0000 000C  01                   LAB,B5   OTPLCTBYT
          2 00031B  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 00031D  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 00031F  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:71   
          2 000321  CBF0 0200                            LAB,B4   512,IMO
          2 000323  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 000326       0001                            DC       s:20301,PREL

      373    20294    3                   END /* IF */;

      374    20295        /*
      375    20296                                             The CCP needs to know if it is
      376    20297                                             a baseband or broadband line.
      377    20298                                             Tell it by setting the LCT byte
      378    20299                                             to the proper value.
      379    20300        */
      380    20301    2             IF ( KH$CHN.DVCID = %BINBIT(%KX_DVCID_BASBND#, 16) )

  20301   2 000327  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 000329  E846 0002                            LDR,R6   2,B6
          2 00032B  E970 2140                            CMR,R6   8512,IMO
          2 00032D  0981 0006                            BNE      s:20309,PREL

      381    20302    2                THEN
      382    20303    3                   DO;

      383    20304    3                      OTPLCTBYT.LCTBYT.DAT = 0;

  20304   2 00032F  8780 0000 000D  01                   CLH      OTPLCTBYT+1

      384    20305
      385    20306    3                   END;

  20306   2 000332  0F81 0005                            B        s:20312,PREL

      386    20307    2                ELSE
      387    20308    3                   DO;

      388    20309    3                      OTPLCTBYT.LCTBYT.DAT = 1;

  20309   2 000334  5C01                                 LDV,R5   1
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:72   
          2 000335  D780 0000 000D  01                   STH,R5   OTPLCTBYT+1

      389    20310
      390    20311    3                   END /* IF */;

      391    20312    2             OTPLCTBYT.LCTBYT.ADR = %KW#PWA4;

  20312   2 000338  6C1A                                 LDV,R6   26
          2 000339  EA80 0000 000D  01                   SRM,R6,'00FF'X    OTPLCTBYT+1
          2 00033C       00FF

      392    20313    2             CALL KHI$IO_OTPLCTBYT ( KH$CHN, OTPLCTBYT );

  20313   2 00033D  DB80 0000 000C  01                   LAB,B5   OTPLCTBYT
          2 000340  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 000342  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 000344  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000346  CBF0 0200                            LAB,B4   512,IMO
          2 000348  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTPLCTBYT
          2 00034B       0001                            DC       s:20313+15,PREL
          2 00034C  0F81 01BA                            B        s:20526,PREL

      393    20314
      394    20315        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:73   
      395    20316
      396    20317        /* Start the line                                                             */
      397    20318
      398    20319    2          CASE ( %KX_N_START# );

      399    20320        /*
      400    20321                                             If the line is not dead, start
      401    20322                                             the output channel, put up some
      402    20323                                             receive buffers, and start the
      403    20324                                             input channel.
      404    20325        */
      405    20326    2             IF NOT KH$CHN.DED

  20326   2 00034E  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000350  82C5 0009                            LB,'0100'X        9,B5
          2 000352       0100
          2 000353  0501 01B3                            BBT      s:20526,PREL

      406    20327    2                THEN
      407    20328    3                   DO;

      408    20329
      409    20330    3                      CALL KXN$CMND ( %KX_N_START_TRN#, KH$CHN );

  20330   2 000355  CBF0 0004                            LAB,B4   4,IMO
          2 000357  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 000359  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 00035B  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00035D  CBF0 0200                            LAB,B4   512,IMO
          2 00035F  E3C0 FCA0                            LNJ,B6   s:26,PREL
          2 000361       0001                            DC       s:20333,PREL

      410    20331
      411    20332        /*N*               CALL KXN$CMND ( %KX_N_UPDATE_RCV_CCB#, KH$CHN );  */
      412    20333    3                      CALL KXN$CMND ( %KX_N_START_RCV#, KH$CHN );

  20333   2 000362  EBF0 0003                            LAB,B6   3,IMO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:74   
          2 000364  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000366  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 000368  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 00036A  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00036C  CBF0 0200                            LAB,B4   512,IMO
          2 00036E  E3C0 FC91                            LNJ,B6   s:26,PREL
          2 000370       0001                            DC       s:20334,PREL

      413    20334    3                   END /* IF */;

  20334   2 000371  0F81 0195                            B        s:20526,PREL

      414    20335        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:75   
      415    20336
      416    20337        /* Start the receiver                                                         */
      417    20338
      418    20339    2          CASE ( %KX_N_START_RCV# );

      419    20340        /*
      420    20341                                             Make sure the receiver has max number of
      421    20342                                             receive CCBs.
      422    20343        */
      423    20344    2             IF KH$CHN.INPCCBCNT = 0

  20344   2 000373  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000375  82C5 0007                            LB,'0F00'X        7,B5
          2 000377       0F00
          2 000378  0501 0010                            BBT      s:20347,PREL

      424    20345    2                THEN
      425    20346    2                   CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INPCHN_RST );

  20346   2 00037A  CB80 0000 0017  01                   LAB,B4   OTPCHNCTR_INPCHN_RST
          2 00037D  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 00037F  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 000381  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000383  CBF0 0200                            LAB,B4   512,IMO
          2 000385  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000388       0001                            DC       s:20347,PREL

      426    20347    3             DO WHILE ( KH$CHN.INPCCBCNT < KX$L2.MAXCCB );

  20347   2 000389  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 00038B  E846 0007                            LDR,R6   7,B6
          2 00038D  6048                                 SOR,R6   8
          2 00038E  E570 000F                            AND,R6   15,IMO
          2 000390  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 000392  D845 002F                            LDR,R5   47,B5
          2 000394  5048                                 SOR,R5   8
          2 000395  D570 001F                            AND,R5   31,IMO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:76   
          2 000397  E955                                 CMR,R6   R5
          2 000398  0881 0073                            BAGE     s:20371,PREL

      427    20348
      428    20349    3                CALL KXS$GETBFR ( KX_BUF.SIZ ( KX$L1.BUF_SIZE ), T$ );

  20349   2 00039A  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00039C  B2C6 0004                            LLH,R3   4,B6
          2 00039E  DBC7 0010                            LAB,B5   T$,AUTO
          2 0003A0  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 0003A2  CBB0 0000 001E  xsym                 LAB,B4   KX_BUF+30,R3
          2 0003A5  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 0003A7  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0003A9  CBF0 0200                            LAB,B4   512,IMO
          2 0003AB  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 0003AE       0001                            DC       s:20350,PREL

      429    20350    3                DAT$ = T$;

  20350   2 0003AF  ECC7 0010                            LDB,B6   T$,AUTO
          2 0003B1  EFC7 000C                            STB,B6   DAT$,AUTO

      430    20351    3                IOLD_INPCHN.BFR_.ADR$ = DAT$;

  20351   2 0003B3  EF80 0000 000F  01                   STB,B6   IOLD_INPCHN+1

      431    20352    3                IOLD_INPCHN.BFR_.BYTSIZ = KX_BUF.SIZ ( KX$DATA.BFRSIZ ) + 7;

  20352   2 0003B6  B846 0006                            LDR,R3   6,B6
          2 0003B8  B570 1FFF                            AND,R3   8191,IMO
          2 0003BA  E830 0000 001E  xsym                 LDR,R6   KX_BUF+30,R3
          2 0003BD  6E07                                 ADV,R6   7
          2 0003BE  EF00 0000 0012  01                   STR,R6   IOLD_INPCHN+4

      432    20353    3                CALL KHI$IOLD ( KH$CHN, IOLD_INPCHN );

  20353   2 0003C1  DB80 0000 000E  01                   LAB,B5   IOLD_INPCHN
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:77   
          2 0003C4  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 0003C6  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 0003C8  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 0003CA  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0003CC  CBF0 0200                            LAB,B4   512,IMO
          2 0003CE  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          2 0003D1       0001                            DC       s:20354,PREL

      433    20354    3                IF ( KX$L1.IN_CCB_HEAD$ = ADDR(NIL) )

  20354   2 0003D2  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0003D4  8DC6 0006                            CMN      6,B6
          2 0003D6  0981 000E                            BNE      s:20362,PREL

      434    20355    3                   THEN
      435    20356    4                      DO;

      436    20357    4                         KX$L1.IN_CCB_HEAD$ = DAT$;

  20357   2 0003D8  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0003DA  DFC6 0006                            STB,B5   6,B6

      437    20358    4                         KH$CHN.INPCCBCNT = 1;

  20358   2 0003DC  E870 0100                            LDR,R6   256,IMO
          2 0003DE  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 0003E0  EAC4 0007                            SRM,R6,'0F00'X    7,B4
          2 0003E2       0F00

      438    20359    4                      END;

  20359   2 0003E3  0F81 000F                            B        s:20365,PREL

      439    20360    3                   ELSE
      440    20361    4                      DO;

      441    20362    4                         KX$L1.IN_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:78   

  20362   2 0003E5  DCC6 0008                            LDB,B5   8,B6
          2 0003E7  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0003E9  CF85                                 STB,B4   ,B5

      442    20363    4                         KH$CHN.INPCCBCNT = KH$CHN.INPCCBCNT + 1;

  20363   2 0003EA  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 0003EC  E845 0007                            LDR,R6   7,B5
          2 0003EE  EA70 0100                            ADD,R6   256,IMO
          2 0003F0  EAC5 0007                            SRM,R6,'0F00'X    7,B5
          2 0003F2       0F00

      443    20364    4                      END /* IF */;

      444    20365    3                KX$L1.IN_CCB_TAIL$ = DAT$;

  20365   2 0003F3  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0003F5  DFC6 0008                            STB,B5   8,B6

      445    20366    3                KX$DATA.NEXT$ = ADDR(NIL);

  20366   2 0003F7  CB80 0000 0000                       LAB,B4   0
          2 0003FA  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 0003FC  CF83                                 STB,B4   ,B3

      446    20367    3             END; /*  Loop on CCBs  */

  20367   2 0003FD  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 0003FF  E845 0007                            LDR,R6   7,B5
          2 000401  6048                                 SOR,R6   8
          2 000402  E570 000F                            AND,R6   15,IMO
          2 000404  D846 002F                            LDR,R5   47,B6
          2 000406  5048                                 SOR,R5   8
          2 000407  D570 001F                            AND,R5   31,IMO
          2 000409  E955                                 CMR,R6   R5
          2 00040A  0801 FF8F                            BAL      s:20349,PREL
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:79   

      447    20368        /*
      448    20369            Acquire a reserved in CCB.
      449    20370        */
      450    20371    2             IF KX_RSV_INCCB$(KX$L1.BUF_SIZE) = ADDR(NIL)

  20371   2 00040C  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00040E  B2C6 0004                            LLH,R3   4,B6
          2 000410  8DB0 0000 0000  xsym                 CMN      KX_RSV_INCCB$,R3
          2 000413  0981 0018                            BNE      s:20379,PREL

      451    20372    2                THEN
      452    20373    2                   CALL KXS$GETBFR ( KX_BUF.SIZ(KX$L1.BUF_SIZE),

  20373   2 000415  BF47 001C                            STR,R3   ERCOD+9,AUTO
          2 000417  3001                                 SOL,R3   1
          2 000418  DBB0 0000 0000  xsym                 LAB,B5   KX_RSV_INCCB$,R3
          2 00041B  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 00041D  B847 001C                            LDR,R3   ERCOD+9,AUTO
          2 00041F  CBB0 0000 001E  xsym                 LAB,B4   KX_BUF+30,R3
          2 000422  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 000424  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000426  CBF0 0200                            LAB,B4   512,IMO
          2 000428  E380 0000 0000  xent                 LNJ,B6   KXS$GETBFR
          2 00042B       0001                            DC       s:20379,PREL

      453    20374    2                      KX_RSV_INCCB$(KX$L1.BUF_SIZE) );
      454    20375
      455    20376        /*
      456    20377            Move status to CCB to active CCB
      457    20378        */
      458    20379    2             CALL KHI$IO_INP ( KH$CHN, INPNXTCCBSTT_INPCHN);

  20379   2 00042C  EB80 0000 0013  01                   LAB,B6   INPNXTCCBSTT_INPCHN
          2 00042F  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 000431  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000433  DFC7 0018                            STB,B5   ERCOD+5,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:80   
          2 000435  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000437  CBF0 0200                            LAB,B4   512,IMO
          2 000439  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INP
          2 00043C       0001                            DC       s:20384,PREL

      459    20380        /*
      460    20381                                             If the line is not dead, start
      461    20382                                             the input channel.
      462    20383        */
      463    20384    2             IF NOT KH$CHN.DED

  20384   2 00043D  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 00043F  82C6 0009                            LB,'0100'X        9,B6
          2 000441       0100
          2 000442  0501 00C4                            BBT      s:20526,PREL

      464    20385    2                THEN
      465    20386    3                   DO;

      466    20387    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INPCHN_STR );

  20387   2 000444  DB80 0000 0015  01                   LAB,B5   OTPCHNCTR_INPCHN_STR
          2 000447  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 000449  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 00044B  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00044D  CBF0 0200                            LAB,B4   512,IMO
          2 00044F  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000452       0001                            DC       s:20388,PREL

      467    20388    3                   END /* IF */;

  20388   2 000453  0F81 00B3                            B        s:20526,PREL

      468    20389
      469    20390        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:81   
      470    20391
      471    20392        /* Start the transmitter                                                      */
      472    20393
      473    20394    2          CASE ( %KX_N_START_TRN# );

      474    20395        /*
      475    20396                                             If the line is not dead, start
      476    20397                                             the output channel.
      477    20398        */
      478    20399    2             IF NOT KH$CHN.DED

  20399   2 000455  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000457  82C5 0009                            LB,'0100'X        9,B5
          2 000459       0100
          2 00045A  0501 00AC                            BBT      s:20526,PREL

      479    20400    2                THEN
      480    20401    3                   DO;

      481    20402    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_STR );

  20402   2 00045C  CB80 0000 0019  01                   LAB,B4   OTPCHNCTR_OTPCHN_STR
          2 00045F  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 000461  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 000463  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000465  CBF0 0200                            LAB,B4   512,IMO
          2 000467  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 00046A       0001                            DC       s:20403,PREL

      482    20403    3                   END /* IF */;

  20403   2 00046B  0F81 009B                            B        s:20526,PREL

      483    20404        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:82   
      484    20405
      485    20406        /* Stop the line                                                              */
      486    20407
      487    20408    2          CASE ( %KX_N_STOP# );

      488    20409        /*
      489    20410                                             If the line is not dead, stop
      490    20411                                             both the input and output channel
      491    20412                                             and re-initialize the MLCP.
      492    20413        */
      493    20414    2             IF NOT KH$CHN.DED

  20414   2 00046D  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 00046F  82C5 0009                            LB,'0100'X        9,B5
          2 000471       0100
          2 000472  0501 0094                            BBT      s:20526,PREL

      494    20415    2                THEN
      495    20416    3                   DO;

      496    20417    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_INPCHN_INT );

  20417   2 000474  CB80 0000 001B  01                   LAB,B4   OTPCHNCTR_INPCHN_INT
          2 000477  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 000479  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 00047B  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00047D  CBF0 0200                            LAB,B4   512,IMO
          2 00047F  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000482       0001                            DC       s:20419,PREL

      497    20418
      498    20419    3                      CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_INT );

  20419   2 000483  EB80 0000 001D  01                   LAB,B6   OTPCHNCTR_OTPCHN_INT
          2 000486  EFC7 001A                            STB,B6   ERCOD+7,AUTO
          2 000488  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 00048A  DFC7 0018                            STB,B5   ERCOD+5,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:83   
          2 00048C  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00048E  CBF0 0200                            LAB,B4   512,IMO
          2 000490  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000493       0001                            DC       s:20421,PREL

      499    20420
      500    20421    3                      CALL KXN$CMND ( %KX_N_INIT#, KH$CHN );

  20421   2 000494  EBF0 0001                            LAB,B6   1,IMO
          2 000496  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000498  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 00049A  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 00049C  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00049E  CBF0 0200                            LAB,B4   512,IMO
          2 0004A0  E3C0 FB5F                            LNJ,B6   s:26,PREL
          2 0004A2       0001                            DC       s:20422,PREL

      501    20422    3                   END /* IF */;

  20422   2 0004A3  0F81 0063                            B        s:20526,PREL

      502    20423        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:84   
      503    20424
      504    20425        /* Suspend the MLCP  -  go into RNR mode                                        */
      505    20426
      506    20427    2          CASE ( %KX_N_SUSPEND# );

      507    20428        /** RNR mode  -  later                                                          */
      508    20429        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:85   
      509    20430
      510    20431        /* Have the MLCP resume  -  come out of RNR mode                                */
      511    20432
      512    20433    2          CASE ( %KX_N_RESUME# );

      513    20434        /** Clear RNR mode  -  later                                                    */
      514    20435        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:86   
      515    20436
      516    20437        /* Queue the buffer and then try to send it                                   */
      517    20438
      518    20439    2          CASE ( %KX_N_SEND_Q# );

      519    20440
      520    20441        /* Is the queue empty                                                         */
      521    20442
      522    20443    2             IF ( KX$L1.OUT_Q_HEAD$ = ADDR(NIL) )

  20443   2 0004A5  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 0004A7  8DC5 000E                            CMN      14,B5
          2 0004A9  0981 0007                            BNE      s:20453,PREL

      523    20444    2                THEN
      524    20445
      525    20446        /* Yes,  put the buffer in at the head and tail                                */
      526    20447
      527    20448    2                   KX$L1.OUT_Q_HEAD$ = DAT$;

  20448   2 0004AB  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0004AD  CFC5 000E                            STB,B4   14,B5
          2 0004AF  0F81 0006                            B        s:20454,PREL

      528    20449    2                ELSE
      529    20450
      530    20451        /* No,  put the buffer at the tail of the queue                                */
      531    20452
      532    20453    2                   KX$L1.OUT_Q_TAIL$ -> KX$TDATA.NEXT$ = DAT$;

  20453   2 0004B1  CCC5 0010                            LDB,B4   16,B5
          2 0004B3  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 0004B5  BF84                                 STB,B3   ,B4

      533    20454    2             KX$L1.OUT_Q_TAIL$ = DAT$;

  20454   2 0004B6  CCC7 000C                            LDB,B4   DAT$,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:87   
          2 0004B8  CFC5 0010                            STB,B4   16,B5

      534    20455
      535    20456        /* Clear the forward link                                                     */
      536    20457
      537    20458    2             KX$DATA.NEXT$ = ADDR(NIL);

  20458   2 0004BA  BB80 0000 0000                       LAB,B3   0
          2 0004BD  BF84                                 STB,B3   ,B4

      538    20459
      539    20460        /* ALWAYS clear the level 2 release flag                                      */
      540    20461
      541    20462    2             KX$DATA.RLS.L1 = '0'B;

  20462   2 0004BE  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0004C0  8844 0006                            LBF,'2000'X       6,B4
          2 0004C2       2000

      542    20463
      543    20464        /* See if the MLCP is not busy now                                            */
      544    20465
      545    20466    2             IF ( KH$CHN.OTPCCBCNT = 0 )

  20466   2 0004C3  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 0004C5  82C4 0007                            LB,'000F'X        7,B4
          2 0004C7       000F
          2 0004C8  0501 003E                            BBT      s:20526,PREL

      546    20467    2                THEN
      547    20468    3                   DO;

      548    20469
      549    20470        /* Not busy,  try to update the transmit CCBs                                  */
      550    20471
      551    20472    3                      CALL Y$UPDATE_TRN_CCB;

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:88   
  20472   2 0004CA  E3C0 003E                            LNJ,B6   s:0,PREL
          2 0004CC       0001                            DC       s:20473,PREL

      552    20473    3                   END /* IF */;

  20473   2 0004CD  0F81 0039                            B        s:20526,PREL

      553    20474        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:89   
      554    20475
      555    20476        /* Update the transmitter's list of CCBs                                      */
      556    20477
      557    20478    2          CASE ( %KX_N_UPDATE_TRN_CCB# );

      558    20479
      559    20480    2             CALL Y$UPDATE_TRN_CCB;

  20480   2 0004CF  E3C0 0039                            LNJ,B6   s:0,PREL
          2 0004D1       0001                            DC       s:20480+3,PREL
          2 0004D2  0F81 0034                            B        s:20526,PREL

      560    20481        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:90   
      561    20482
      562    20483        /* Queue the buffer to the supervisory queue                                  */
      563    20484
      564    20485    2          CASE ( %KX_N_SUPV_Q# );

      565    20486
      566    20487    2             IF ( KX$L1.SUPV_Q_HEAD$ = ADDR(NIL) )

  20487   2 0004D4  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 0004D6  8DC5 0012                            CMN      18,B5
          2 0004D8  0981 0007                            BNE      s:20491,PREL

      567    20488    2                THEN
      568    20489    2                   KX$L1.SUPV_Q_HEAD$ = DAT$;

  20489   2 0004DA  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0004DC  CFC5 0012                            STB,B4   18,B5
          2 0004DE  0F81 0006                            B        s:20492,PREL

      569    20490    2                ELSE
      570    20491    2                   KX$L1.SUPV_Q_TAIL$ -> KX$TDATA.NEXT$ = DAT$;

  20491   2 0004E0  CCC5 0014                            LDB,B4   20,B5
          2 0004E2  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 0004E4  BF84                                 STB,B3   ,B4

      571    20492    2             KX$L1.SUPV_Q_TAIL$ = DAT$;

  20492   2 0004E5  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0004E7  CFC5 0014                            STB,B4   20,B5

      572    20493
      573    20494    2             KX$DATA.NEXT$ = ADDR(NIL);

  20494   2 0004E9  BB80 0000 0000                       LAB,B3   0
          2 0004EC  BF84                                 STB,B3   ,B4

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:91   
      574    20495    2             KX$DATA.RLS.L1 = '0'B;

  20495   2 0004ED  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 0004EF  8844 0006                            LBF,'2000'X       6,B4
          2 0004F1       2000

      575    20496        /*
      576    20497                                             If the transmitter is not busy,
      577    20498                                             give it this buffer right away.
      578    20499        */
      579    20500    2             IF ( KH$CHN.OTPCCBCNT = 0 )

  20500   2 0004F2  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 0004F4  82C4 0007                            LB,'000F'X        7,B4
          2 0004F6       000F
          2 0004F7  0501 000F                            BBT      s:20526,PREL

      580    20501    2                THEN
      581    20502    3                   DO;

      582    20503    3                      CALL Y$UPDATE_TRN_CCB;

  20503   2 0004F9  E3C0 000F                            LNJ,B6   s:0,PREL
          2 0004FB       0001                            DC       s:20504,PREL

      583    20504    3                   END /* IF */;

  20504   2 0004FC  0F81 000A                            B        s:20526,PREL

      584    20505        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:92   
      585    20506
      586    20507        /* For MLC8/16, set the LCT byte that tell the CCP to abort transmission      */
      587    20508
      588    20509    2          CASE ( %KX_N_ABR# );

      589    20510        /*
      590    20511                                             skip SLCCs.
      591    20512                  IF KH$CHN.ATTR&%G_ATTR_CL_SLCC THEN RETURN;
      592    20513                  OTPLCTBYT.LCTBYT.ADR = %KX#M_ABR;
      593    20514                  OTPLCTBYT.LCTBYT.DAT = 1;
      594    20515                  CALL KHI$IO_OTPLCTBYT ( KH$CHN, OTPLCTBYT );
      595    20516        */
      596    20517        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:93   
      597    20518
      598    20519        /* Unknown request type                                                       */
      599    20520
      600    20521    2          CASE ( ELSE );

      601    20522        /*S* SCREECH_CODE: KXN-S$KX_BADKXNFNC#
      602    20523             MESSAGE: KXN$CMND received an unknown order.
      603    20524        */
      604    20525    2             CALL KHD$SCREECH ( Y_UNKFNC );

  20525   2 0004FE  BB80 0000 0004  03                   LAB,B3   +4
          2 000501  CBF0 0100                            LAB,B4   256,IMO
          2 000503  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000506       0001                            DC       s:20526,PREL

      605    20526    2       END /* CASE */;

  20526   2 000507  0F81 026A                            B        s:20746,PREL

      606    20527
      607    20528        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:94   
      608    20529
      609    20530        /*I*
      610    20531             NAME: Y$UPDATE_TRN_CCB
      611    20532             PURPOSE:
      612    20533                       Update the transmitter's list of CCBs
      613    20534        */
      614    20535    1   Y$UPDATE_TRN_CCB: PROC;

  20535   2 000509  EFC7 0016            Y$UPDATE_TRN_CCBSTB,B6   ERCOD+3,AUTO

      615    20536
      616    20537        /* Do SLCC code if that's what it is. */
      617    20538
      618    20539    2       IF KH$CHN.ATTR&%G_ATTR_CL_SLCC

  20539   2 00050B  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 00050D  E845 0005                            LDR,R6   5,B5
          2 00050F  E570 0200                            AND,R6   512,IMO
          2 000511  6981 01AF                            BNEZ,R6  s:20679,PREL

      619    20540    2          THEN
      620    20541    2             GOTO Y$UPDATE_SLCC_CCB;
      621    20542
      622    20543        /* Get the transmit CCP state                                                 */
      623    20544
      624    20545    2       INPLCTBYT.LCTBYT.ADR = %KX#M_TRNST;

  20545   2 000513  6C38                                 LDV,R6   56
          2 000514  EA80 0000 0020  01                   SRM,R6,'00FF'X    INPLCTBYT+1
          2 000517       00FF

      625    20546    2       CALL KHI$IO_INPLCTBYT ( KH$CHN, INPLCTBYT );

  20546   2 000518  CB80 0000 001F  01                   LAB,B4   INPLCTBYT
          2 00051B  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 00051D  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 00051F  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:95   
          2 000521  CBF0 0200                            LAB,B4   512,IMO
          2 000523  E380 0000 0000  xent                 LNJ,B6   KHI$IO_INPLCTBYT
          2 000526       0001                            DC       s:20547,PREL

      626    20547    2       TRCX = KX$L2.TRCX;

  20547   2 000527  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000529  E846 006F                            LDR,R6   111,B6
          2 00052B  EF47 0012                            STR,R6   TRCX,AUTO

      627    20548
      628    20549        /* Make sure the state is OFF and no CCBs are in the MLCP                     */
      629    20550
      630    20551    2       IF ( INPLCTBYT.LCTBYT.DAT = %KX#M_TRNST_OFF ) AND

  20551   2 00052D  D280 0000 0020  01                   LLH,R5   INPLCTBYT+1
          2 000530  5D0C                                 CMV,R5   12
          2 000531  0981 018B                            BNE      s:20683,PREL
          2 000533  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000535  82C5 0007                            LB,'000F'X        7,B5
          2 000537       000F
          2 000538  0501 0184                            BBT      s:20683,PREL

      631    20552    2          KH$CHN.OTPCCBCNT = 0
      632    20553    2          THEN
      633    20554    3             DO;

      634    20555        /*
      635    20556                                             Reset the output CCB list.
      636    20557        */
      637    20558    3                CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_RST );

  20558   2 00053A  CB80 0000 0021  01                   LAB,B4   OTPCHNCTR_OTPCHN_RST
          2 00053D  CFC7 001A                            STB,B4   ERCOD+7,AUTO
          2 00053F  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 000541  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000543  CBF0 0200                            LAB,B4   512,IMO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:96   
          2 000545  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 000548       0001                            DC       s:20563,PREL

      638    20559        /*
      639    20560                                             Try to give some CCBs to the
      640    20561                                             MLCP to transmit.
      641    20562        */
      642    20563    4                DO WHILE (( KH$CHN.OTPCCBCNT < 4 ) AND

  20563   2 000549  0F81 00A7                            B        s:20621,PREL

      643    20564    4                   ( KX$L1.SUPV_Q_HEAD$ ~= ADDR(NIL)));
      644    20565        /*
      645    20566                                             Take the first buffer off the
      646    20567                                             queue and pass it to the MLCP.
      647    20568        */
      648    20569    4                   DAT$ = KX$L1.SUPV_Q_HEAD$;

  20569   2 00054B  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00054D  DCC6 0012                            LDB,B5   18,B6
          2 00054F  DFC7 000C                            STB,B5   DAT$,AUTO

      649    20570    4                   KX$L1.SUPV_Q_HEAD$ = KX$DATA.NEXT$;

  20570   2 000551  CC85                                 LDB,B4   ,B5
          2 000552  CFC6 0012                            STB,B4   18,B6

      650    20571    4                   IF ( KX$DATA.NEXT$ = ADDR(NIL) )

  20571   2 000554  8D85                                 CMN      ,B5
          2 000555  0981 0006                            BNE      s:20580,PREL

      651    20572    4                      THEN
      652    20573    5                         DO;

      653    20574    5                            KX$L1.SUPV_Q_TAIL$ = ADDR(NIL);

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:97   
  20574   2 000557  BB80 0000 0000                       LAB,B3   0
          2 00055A  BFC6 0014                            STB,B3   20,B6

      654    20575    5                         END /* IF */;

      655    20576        /*
      656    20577                                             For supervisory frames, insert
      657    20578                                             the current N(R).
      658    20579        */
      659    20580    4                   IF ( MOD ( KX$FRAME.CTL, 4 ) = 1 )

  20580   2 00055C  E845 0008                            LDR,R6   8,B5
          2 00055E  E570 00FF                            AND,R6   255,IMO
          2 000560  E570 0003                            AND,R6   3,IMO
          2 000562  6D01                                 CMV,R6   1
          2 000563  0981 0015                            BNE      s:20591,PREL

      660    20581    4                      THEN
      661    20582    5                         DO;

      662    20583    5                            IF NOT KX$L2.FLG.EXTSEQ

  20583   2 000565  89C6 002F                            CMZ      47,B6
          2 000567  0801 0009                            BAL      s:20587,PREL

      663    20584    5                               THEN
      664    20585    5                                  KX$FRAME.CTL_BITS.NR = KX$L2.VR;

  20585   2 000569  E846 002D                            LDR,R6   45,B6
          2 00056B  6005                                 SOL,R6   5
          2 00056C  EAC5 0008                            SRM,R6,'00E0'X    8,B5
          2 00056E       00E0
          2 00056F  0F81 0007                            B        s:20588,PREL

      665    20586    5                               ELSE
      666    20587    5                                  KX$EXTFRAME.XCTL.NR = KX$L2.VR;

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:98   
  20587   2 000571  E846 002D                            LDR,R6   45,B6
          2 000573  6009                                 SOL,R6   9
          2 000574  EAC5 0009                            SRM,R6,'FE00'X    9,B5
          2 000576       FE00

      667    20588    5                            KX$L2.DCE_I_CNT = 0;

  20588   2 000577  87C6 002D                            CLH      45,B6

      668    20589    5                         END /* IF */;

      669    20590
      670    20591    4                   IF ( BINBIT(KX$FRAME.CTL,8) & '1F'X ) = '01'X AND

  20591   2 000579  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 00057B  E845 0008                            LDR,R6   8,B5
          2 00057D  E570 00FF                            AND,R6   255,IMO
          2 00057F  6008                                 SOL,R6   8
          2 000580  E570 1F00                            AND,R6   7936,IMO
          2 000582  E970 0100                            CMR,R6   256,IMO
          2 000584  0981 0017                            BNE      s:20601,PREL
          2 000586  8DC6 000E                            CMN      14,B6
          2 000588  0901 0013                            BE       s:20601,PREL
          2 00058A  89C6 002E                            CMZ      46,B6
          2 00058C  0801 000F                            BAL      s:20601,PREL

      671    20592    4                      KX$L2.OUT_Q_HEAD$ ~= ADDR(NIL) AND
      672    20593    4                      NOT KX$L2.FLG.BLK
      673    20594    4                      THEN
      674    20595        /*
      675    20596           There is no need to send this RR frame.
      676    20597        */
      677    20598    4                         CALL KXS$RLSBFR ( DAT$ );

  20598   2 00058E  CBC7 000C                            LAB,B4   DAT$,AUTO
          2 000590  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 000592  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:99   
          2 000594  CBF0 0100                            LAB,B4   256,IMO
          2 000596  E380 0000 0000  xent                 LNJ,B6   KXS$RLSBFR
          2 000599       0001                            DC       s:20598+12,PREL
          2 00059A  0F81 0056                            B        s:20621,PREL

      678    20599    4                      ELSE
      679    20600    5                         DO;

      680    20601    5                            IF ( KX$L1.OUT_CCB_HEAD$ = ADDR(NIL) )

  20601   2 00059C  8DC6 000A                            CMN      10,B6
          2 00059E  0981 0005                            BNE      s:20605,PREL

      681    20602    5                               THEN
      682    20603    5                                  KX$L1.OUT_CCB_HEAD$ = DAT$;

  20603   2 0005A0  DFC6 000A                            STB,B5   10,B6
          2 0005A2  0F81 0004                            B        s:20606,PREL

      683    20604    5                               ELSE
      684    20605    5                                  KX$L1.OUT_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;

  20605   2 0005A4  CCC6 000C                            LDB,B4   12,B6
          2 0005A6  DF84                                 STB,B5   ,B4

      685    20606    5                            KX$L1.OUT_CCB_TAIL$ = DAT$;

  20606   2 0005A7  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0005A9  DFC6 000C                            STB,B5   12,B6

      686    20607    5                            KX$DATA.NEXT$ = ADDR(NIL);

  20607   2 0005AB  CB80 0000 0000                       LAB,B4   0
          2 0005AE  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 0005B0  CF83                                 STB,B4   ,B3

      687    20608
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:100  
      688    20609    5                            IOLD_OTPCHN.BFR_.ADR$ = DAT$;

  20609   2 0005B1  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0005B3  DF80 0000 0024  01                   STB,B5   IOLD_OTPCHN+1

      689    20610    5                            IOLD_OTPCHN.BFR_.BYTSIZ = KX$DATA.CNT;

  20610   2 0005B6  E845 0007                            LDR,R6   7,B5
          2 0005B8  EF00 0000 0027  01                   STR,R6   IOLD_OTPCHN+4

      690    20611    5                            KH$CHN.OTPCCBCNT = KH$CHN.OTPCCBCNT + 1;

  20611   2 0005BB  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 0005BD  D844 0007                            LDR,R5   7,B4
          2 0005BF  DA70 0001                            ADD,R5   1,IMO
          2 0005C1  DAC4 0007                            SRM,R5,'000F'X    7,B4
          2 0005C3       000F

      691    20612    5                            CALL KHI$IOLD ( KH$CHN, IOLD_OTPCHN );

  20612   2 0005C4  DB80 0000 0023  01                   LAB,B5   IOLD_OTPCHN
          2 0005C7  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 0005C9  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 0005CB  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0005CD  CBF0 0200                            LAB,B4   512,IMO
          2 0005CF  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          2 0005D2       0001                            DC       s:20616,PREL

      692    20613        /*
      693    20614           Record frame in trace buffer.
      694    20615        */
      695    20616    5                            KX$L2.TRC(TRCX) = FRAME_TRACE(SIZEW(KX$DATA));

  20616   2 0005D3  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 0005D5  B847 0012                            LDR,R3   TRCX,AUTO
          2 0005D7  3E70                                 ADV,R3   112
          2 0005D8  DCC7 000C                            LDB,B5   DAT$,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:101  
          2 0005DA  E845 0008                            LDR,R6   8,B5
          2 0005DC  EF36                                 STR,R6   ,B6,R3

      696    20617    5                            KX$L2.TRC(TRCX+1) = FRAME_TRACE(SIZEW(KX$DATA)+1);

  20617   2 0005DD  A847 0012                            LDR,R2   TRCX,AUTO
          2 0005DF  2E71                                 ADV,R2   113
          2 0005E0  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0005E2  D845 0009                            LDR,R5   9,B5
          2 0005E4  DF26                                 STR,R5   ,B6,R2

      697    20618    5                            TRCX = MOD ( TRCX + 4, 200 );

  20618   2 0005E5  F847 0012                            LDR,R7   TRCX,AUTO
          2 0005E7  6C00                                 LDV,R6   0
          2 0005E8  8470 0000 0004                       AID      4,IMO
          2 0005EB  F370 00C8                            DIV,R7   200,IMO
          2 0005ED  EF47 0012                            STR,R6   TRCX,AUTO

      698    20619    5                            KX$L2.TRCX = TRCX;

  20619   2 0005EF  EF46 006F                            STR,R6   111,B6

      699    20620    5                         END;

      700    20621    4                END /* LOOP */;

  20621   2 0005F1  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 0005F3  E846 0007                            LDR,R6   7,B6
          2 0005F5  E570 000F                            AND,R6   15,IMO
          2 0005F7  6D04                                 CMV,R6   4
          2 0005F8  0281 0007                            BGE      s:20627,PREL
          2 0005FA  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 0005FC  8DC5 0012                            CMN      18,B5
          2 0005FE  0981 FF4C                            BNE      s:20569,PREL

      701    20622        /*
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:102  
      702    20623                                             If less than 4 CCBs have been
      703    20624                                             giver to the MLCP, check the
      704    20625                                             other queue.
      705    20626        */
      706    20627    4                DO WHILE (( KH$CHN.OTPCCBCNT < 4 ) AND

  20627   2 000600  0F81 008F                            B        s:20671,PREL

      707    20628    4                   ( KX$L1.OUT_Q_HEAD$ ~= ADDR(NIL))
      708    20629    4                   AND (KX$L2.STATE.CURRENT = 4) );
      709    20630
      710    20631    4                   DAT$ = KX$L1.OUT_Q_HEAD$;

  20631   2 000602  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000604  DCC6 000E                            LDB,B5   14,B6
          2 000606  DFC7 000C                            STB,B5   DAT$,AUTO

      711    20632    4                   KX$L1.OUT_Q_HEAD$ = KX$DATA.NEXT$;

  20632   2 000608  CC85                                 LDB,B4   ,B5
          2 000609  CFC6 000E                            STB,B4   14,B6

      712    20633    4                   IF ( KX$DATA.NEXT$ = ADDR(NIL) )

  20633   2 00060B  8D85                                 CMN      ,B5
          2 00060C  0981 0006                            BNE      s:20643,PREL

      713    20634    4                      THEN
      714    20635    5                         DO;

      715    20636    5                            KX$L1.OUT_Q_TAIL$ = ADDR(NIL);

  20636   2 00060E  BB80 0000 0000                       LAB,B3   0
          2 000611  BFC6 0010                            STB,B3   16,B6

      716    20637    5                         END /* IF */;

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:103  
      717    20638        /*
      718    20639                                             Only I frames are on this
      719    20640                                             queue, so it is always safe to
      720    20641                                             insert the current N(R).
      721    20642        */
      722    20643    4                   IF NOT KX$L2.FLG.EXTSEQ

  20643   2 000613  89C6 002F                            CMZ      47,B6
          2 000615  0801 0009                            BAL      s:20647,PREL

      723    20644    4                      THEN
      724    20645    4                         KX$FRAME.CTL_BITS.NR = KX$L2.VR;

  20645   2 000617  E846 002D                            LDR,R6   45,B6
          2 000619  6005                                 SOL,R6   5
          2 00061A  EAC5 0008                            SRM,R6,'00E0'X    8,B5
          2 00061C       00E0
          2 00061D  0F81 0007                            B        s:20648,PREL

      725    20646    4                      ELSE
      726    20647    4                         KX$EXTFRAME.XCTL.NR = KX$L2.VR;

  20647   2 00061F  E846 002D                            LDR,R6   45,B6
          2 000621  6009                                 SOL,R6   9
          2 000622  EAC5 0009                            SRM,R6,'FE00'X    9,B5
          2 000624       FE00

      727    20648    4                   KX$L2.DCE_I_CNT = 0;

  20648   2 000625  87C6 002D                            CLH      45,B6

      728    20649
      729    20650    4                   IF ( KX$L1.OUT_CCB_HEAD$ = ADDR(NIL) )

  20650   2 000627  8DC6 000A                            CMN      10,B6
          2 000629  0981 0007                            BNE      s:20654,PREL

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:104  
      730    20651    4                      THEN
      731    20652    4                         KX$L1.OUT_CCB_HEAD$ = DAT$;

  20652   2 00062B  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 00062D  DFC6 000A                            STB,B5   10,B6
          2 00062F  0F81 0006                            B        s:20655,PREL

      732    20653    4                      ELSE
      733    20654    4                         KX$L1.OUT_CCB_TAIL$ -> KX$TDATA.NEXT$ = DAT$;

  20654   2 000631  DCC6 000C                            LDB,B5   12,B6
          2 000633  CCC7 000C                            LDB,B4   DAT$,AUTO
          2 000635  CF85                                 STB,B4   ,B5

      734    20655    4                   KX$L1.OUT_CCB_TAIL$ = DAT$;

  20655   2 000636  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 000638  DFC6 000C                            STB,B5   12,B6

      735    20656    4                   KX$DATA.NEXT$ = ADDR(NIL);

  20656   2 00063A  CB80 0000 0000                       LAB,B4   0
          2 00063D  BCC7 000C                            LDB,B3   DAT$,AUTO
          2 00063F  CF83                                 STB,B4   ,B3

      736    20657
      737    20658    4                   KH$CHN.OTPCCBCNT = KH$CHN.OTPCCBCNT + 1;

  20658   2 000640  DCC7 0006                            LDB,B5   @KH$CHN,AUTO
          2 000642  E845 0007                            LDR,R6   7,B5
          2 000644  EA70 0001                            ADD,R6   1,IMO
          2 000646  EAC5 0007                            SRM,R6,'000F'X    7,B5
          2 000648       000F

      738    20659    4                   IOLD_OTPCHN.BFR_.ADR$ = DAT$;

  20659   2 000649  CCC7 000C                            LDB,B4   DAT$,AUTO
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:105  
          2 00064B  CF80 0000 0024  01                   STB,B4   IOLD_OTPCHN+1

      739    20660    4                   IOLD_OTPCHN.BFR_.BYTSIZ = KX$DATA.CNT;

  20660   2 00064E  E844 0007                            LDR,R6   7,B4
          2 000650  EF00 0000 0027  01                   STR,R6   IOLD_OTPCHN+4

      740    20661    4                   CALL KHI$IOLD ( KH$CHN, IOLD_OTPCHN );

  20661   2 000653  BB80 0000 0023  01                   LAB,B3   IOLD_OTPCHN
          2 000656  BFC7 001A                            STB,B3   ERCOD+7,AUTO
          2 000658  DFC7 0018                            STB,B5   ERCOD+5,AUTO
          2 00065A  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 00065C  CBF0 0200                            LAB,B4   512,IMO
          2 00065E  E380 0000 0000  xent                 LNJ,B6   KHI$IOLD
          2 000661       0001                            DC       s:20665,PREL

      741    20662        /*
      742    20663           Record frame in trace buffer.
      743    20664        */
      744    20665    4                   KX$L2.TRC(TRCX) = FRAME_TRACE(SIZEW(KX$DATA));

  20665   2 000662  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000664  B847 0012                            LDR,R3   TRCX,AUTO
          2 000666  3E70                                 ADV,R3   112
          2 000667  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 000669  E845 0008                            LDR,R6   8,B5
          2 00066B  EF36                                 STR,R6   ,B6,R3

      745    20666    4                   KX$L2.TRC(TRCX+1) = FRAME_TRACE(SIZEW(KX$DATA)+1);

  20666   2 00066C  A847 0012                            LDR,R2   TRCX,AUTO
          2 00066E  2E71                                 ADV,R2   113
          2 00066F  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 000671  D845 0009                            LDR,R5   9,B5
          2 000673  DF26                                 STR,R5   ,B6,R2

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:106  
      746    20667    4                   KX$L2.TRC(TRCX+2) = FRAME_TRACE(SIZEW(KX$DATA)+2);

  20667   2 000674  9847 0012                            LDR,R1   TRCX,AUTO
          2 000676  1E72                                 ADV,R1   114
          2 000677  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 000679  E845 000A                            LDR,R6   10,B5
          2 00067B  EF16                                 STR,R6   ,B6,R1

      747    20668    4                   KX$L2.TRC(TRCX+3) = FRAME_TRACE(SIZEW(KX$DATA)+3);

  20668   2 00067C  B847 0012                            LDR,R3   TRCX,AUTO
          2 00067E  3E73                                 ADV,R3   115
          2 00067F  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 000681  D845 000B                            LDR,R5   11,B5
          2 000683  DF36                                 STR,R5   ,B6,R3

      748    20669    4                   TRCX = MOD ( TRCX + 4, 200 );

  20669   2 000684  F847 0012                            LDR,R7   TRCX,AUTO
          2 000686  6C00                                 LDV,R6   0
          2 000687  8470 0000 0004                       AID      4,IMO
          2 00068A  F370 00C8                            DIV,R7   200,IMO
          2 00068C  EF47 0012                            STR,R6   TRCX,AUTO

      749    20670    4                   KX$L2.TRCX = TRCX;

  20670   2 00068E  EF46 006F                            STR,R6   111,B6

      750    20671    4                END /* LOOP */;

  20671   2 000690  ECC7 0006                            LDB,B6   @KH$CHN,AUTO
          2 000692  E846 0007                            LDR,R6   7,B6
          2 000694  E570 000F                            AND,R6   15,IMO
          2 000696  6D04                                 CMV,R6   4
          2 000697  0281 000C                            BGE      s:20676,PREL
          2 000699  DCC7 000A                            LDB,B5   CTX$,AUTO
          2 00069B  8DC5 000E                            CMN      14,B5
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:107  
          2 00069D  0901 0006                            BE       s:20676,PREL
          2 00069F  D2C5 001D                            LLH,R5   29,B5
          2 0006A1  5D04                                 CMV,R5   4
          2 0006A2  0901 FF5F                            BE       s:20631,PREL

      751    20672        /*
      752    20673                                             If any buffers were given to the
      753    20674                                             MLCP, start the transmitter.
      754    20675        */
      755    20676    3                IF ( KH$CHN.OTPCCBCNT ~= 0 AND NOT KH$CHN.DED )

  20676   2 0006A4  82C6 0007                            LB,'000F'X        7,B6
  20676   2 0006A6       000F
          2 0006A7  0581 0015                            BBF      s:20683,PREL
          2 0006A9  82C6 0009                            LB,'0100'X        9,B6
          2 0006AB       0100
          2 0006AC  0501 0010                            BBT      s:20683,PREL

      756    20677    3                   THEN
      757    20678    4                      DO;

      758    20679    4                         CALL KHI$IO_OTP ( KH$CHN, OTPCHNCTR_OTPCHN_STR );

  20679   2 0006AE  DB80 0000 0019  01                   LAB,B5   OTPCHNCTR_OTPCHN_STR
          2 0006B1  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 0006B3  EFC7 0018                            STB,B6   ERCOD+5,AUTO
          2 0006B5  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 0006B7  CBF0 0200                            LAB,B4   512,IMO
          2 0006B9  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 0006BC       0001                            DC       s:20683,PREL

      759    20680    4                      END /* IF */;

      760    20681    3             END /* IF */;

      761    20682
      762    20683    2       RETURN;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:108  

  20683   2 0006BD  ECC7 0016                            LDB,B6   ERCOD+3,AUTO
          2 0006BF  C3C6 0001                            LNJ,B4   1,B6

  20679   2                              Y$UPDATE_SLCC_C*null
      763    20684
      764    20685        %EJECT;
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:109  
      765    20686    2   Y$UPDATE_SLCC_CCB:;
      766    20687
      767    20688    3       DO WHILE '1'B;

      768    20689    3          DAT$ = KX$L1.OUT_Q_HEAD$;

  20689   2 0006C1  ECC7 000A            Y$UPDATE_SLCC_C*LDB,B6   CTX$,AUTO
          2 0006C3  DCC6 000E                            LDB,B5   14,B6
          2 0006C5  DFC7 000C                            STB,B5   DAT$,AUTO

      769    20690    3          CCB$ = KX$L2S.CCBHD$;

  20690   2 0006C7  CCC6 002C                            LDB,B4   44,B6
          2 0006C9  CFC7 000E                            STB,B4   CCB$,AUTO

      770    20691    3          IF CCB$ = ADDR(NIL) OR KX$L2S.FLG.BLK OR DAT$ = ADDR(NIL)

  20691   2 0006CB  8DC7 000E                            CMN      CCB$,AUTO
          2 0006CD  0901 0009                            BE       s:20693,PREL
          2 0006CF  89C6 002E                            CMZ      46,B6
          2 0006D1  0801 0005                            BAL      s:20693,PREL
          2 0006D3  8DC7 000C                            CMN      DAT$,AUTO
          2 0006D5  0981 0005                            BNE      s:20694,PREL

      771    20692    3             THEN
      772    20693    3                RETURN;

  20693   2 0006D7  ECC7 0016                            LDB,B6   ERCOD+3,AUTO
          2 0006D9  C3C6 0001                            LNJ,B4   1,B6

      773    20694    3          KX$L1.OUT_Q_HEAD$ = KX$DATA.NEXT$;

  20694   2 0006DB  BC85                                 LDB,B3   ,B5
          2 0006DC  BFC6 000E                            STB,B3   14,B6

      774    20695    3          IF KX$DATA.NEXT$ = ADDR(NIL)

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:110  
  20695   2 0006DE  8D85                                 CMN      ,B5
          2 0006DF  0981 0004                            BNE      s:20698,PREL

      775    20696    3             THEN
      776    20697    3                KX$L1.OUT_Q_TAIL$ = KX$DATA.NEXT$;

  20697   2 0006E1  AC85                                 LDB,B2   ,B5
          2 0006E2  AFC6 0010                            STB,B2   16,B6

      777    20698    3          IF KX$L1.OUT_CCB_HEAD$ = ADDR(NIL)

  20698   2 0006E4  8DC6 000A                            CMN      10,B6
          2 0006E6  0981 0005                            BNE      s:20702,PREL

      778    20699    3             THEN
      779    20700    3                KX$L1.OUT_CCB_HEAD$ = DAT$;

  20700   2 0006E8  DFC6 000A                            STB,B5   10,B6
          2 0006EA  0F81 0004                            B        s:20703,PREL

      780    20701    3             ELSE
      781    20702    3                KX$L1.OUT_CCB_TAIL$->KX$DATA.NEXT$ = DAT$;

  20702   2 0006EC  ACC6 000C                            LDB,B2   12,B6
          2 0006EE  DF82                                 STB,B5   ,B2

      782    20703    3          KX$L1.OUT_CCB_TAIL$ = DAT$;

  20703   2 0006EF  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 0006F1  DFC6 000C                            STB,B5   12,B6

      783    20704    3          KX$L2S.I_CNT = KX$L2S.I_CNT + 1;

  20704   2 0006F3  E846 002F                            LDR,R6   47,B6
          2 0006F5  EA70 0001                            ADD,R6   1,IMO
          2 0006F7  EAC6 002F                            SRM,R6,'00FF'X    47,B6
          2 0006F9       00FF
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:111  

      784    20705    3          IF KX$L2S.I_CNT >=KX$L2S.K

  20705   2 0006FA  E846 002F                            LDR,R6   47,B6
          2 0006FC  E570 00FF                            AND,R6   255,IMO
          2 0006FE  D2C6 0016                            LLH,R5   22,B6
          2 000700  E955                                 CMR,R6   R5
          2 000701  0801 0004                            BAL      s:20708,PREL

      785    20706    3             THEN
      786    20707    3                KX$L2S.FLG.BLK = '1'B;

  20707   2 000703  8946 002E                            LBT,'8000'X       46,B6
  20707   2 000705       8000

      787    20708    3          KX$DATA.NEXT$ = ADDR(NIL);

  20708   2 000706  BB80 0000 0000                       LAB,B3   0
          2 000709  ACC7 000C                            LDB,B2   DAT$,AUTO
          2 00070B  BF82                                 STB,B3   ,B2

      788    20709    3          KX$L2S.CCBHD$ = KX$CCB.LNK$;

  20709   2 00070C  DC84                                 LDB,B5   ,B4
          2 00070D  DFC6 002C                            STB,B5   44,B6

      789    20710    3          KX$CCB.DATA_ADR = DAT.W*2 + SIZEC(KX$DATA);

  20710   2 00070F  E847 000D                            LDR,R6   DAT$+1,AUTO
          2 000711  6001                                 SOL,R6   1
          2 000712  6E10                                 ADV,R6   16
          2 000713  EF44 0002                            STR,R6   2,B4

      790    20711    3          KX$CCB.RANGE = KX$DATA.CNT;

  20711   2 000715  DCC7 000C                            LDB,B5   DAT$,AUTO
          2 000717  D845 0007                            LDR,R5   7,B5
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:112  
          2 000719  DF44 0003                            STR,R5   3,B4

      791    20712    3          TRCX = CCB.W*2;

  20712   2 00071B  C847 000F                            LDR,R4   CCB$+1,AUTO
          2 00071D  4001                                 SOL,R4   1
          2 00071E  CF47 0012                            STR,R4   TRCX,AUTO

      792    20713        /*     SLCC_OTPCCBPTR.CCBPTR = TRCX;
      793    20714               KX$CCB.CCB_TAIL = TRCX; */
      794    20715    3          KX$CCB.FLAGS = 'C000'X;

  20715   2 000720  B870 C000                            LDR,R3   -16384,IMO
          2 000722  BF44 0005                            STR,R3   5,B4

      795    20716    3          KX$CCB.LNK = '0'B;

  20716   2 000724  8704                                 CL       ,B4
          2 000725  8744 0001                            CL       1,B4

      796    20717    4          DO UNTIL KX$L2S.XMTCCB.LOCK<0;

      797    20718    4             IF KX$L2S.XMTCCB.LOCK=0

  20718   2 000727  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 000729  E846 0074                            LDR,R6   116,B6
          2 00072B  6981 0003                            BNEZ,R6  s:20721,PREL

      798    20719    4                THEN
      799    20720    4                   KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK-1;

  20720   2 00072D  88C6 0074                            DEC      116,B6

      800    20721    4          END;

  20721   2 00072F  E846 0074                            LDR,R6   116,B6
          2 000731  68F6                                 BGEZ,R6  s:20718,SPREL
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:113  

      801    20722    3          IF KX$L2S.XMTCCB.HEAD = 0

  20722   2 000732  D846 0072                            LDR,R5   114,B6
          2 000734  5981 0009                            BNEZ,R5  s:20730,PREL

      802    20723    3             THEN
      803    20724    4                DO;

      804    20725    4                   KX$L2S.XMTCCB.HEAD = TRCX;

  20725   2 000736  D847 0012                            LDR,R5   TRCX,AUTO
          2 000738  DF46 0072                            STR,R5   114,B6

      805    20726    4                   KX$L2S.XMTCCB.NEXT = TRCX;

  20726   2 00073A  DF46 0075                            STR,R5   117,B6

      806    20727    4                END;

  20727   2 00073C  0F81 0016                            B        s:20736,PREL

      807    20728    3             ELSE
      808    20729    4                DO;

      809    20730    4                   CCB.W = KX$L2S.XMTCCB.TAIL/2;

  20730   2 00073E  C846 0073                            LDR,R4   115,B6
          2 000740  4041                                 SOR,R4   1
          2 000741  CF47 000F                            STR,R4   CCB$+1,AUTO

      810    20731    4                   KX$CCB.LNK.FEP = TRCX;

  20731   2 000743  DCC7 000E                            LDB,B5   CCB$,AUTO
          2 000745  B847 0012                            LDR,R3   TRCX,AUTO
          2 000747  BF45 0001                            STR,R3   1,B5

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:114  
      811    20732    4                   IF KX$L2S.XMTCCB.NEXT=0

  20732   2 000749  E846 0075                            LDR,R6   117,B6
          2 00074B  6981 0006                            BNEZ,R6  s:20734,PREL

      812    20733    4                      THEN KX$L2S.XMTCCB.NEXT = TRCX;

  20733   2 00074D  E853                                 LDR,R6   R3
          2 00074E  EF46 0075                            STR,R6   117,B6
          2 000750  0F81 0002                            B        s:20736,PREL

      813    20734    4                      ELSE KX$CCB.LNK.SLCC = TRCX;

  20734   2 000752  BF05                                 STR,R3   ,B5

      814    20735    4                END;

      815    20736    3          KX$L2S.XMTCCB.TAIL = TRCX;

  20736   2 000753  E847 0012                            LDR,R6   TRCX,AUTO
          2 000755  EF46 0073                            STR,R6   115,B6

      816    20737    3          IF KX$L2S.XMTCCB.NEXT=TRCX

  20737   2 000757  E946 0075                            CMR,R6   117,B6
          2 000759  0981 0012                            BNE      s:20742,PREL

      817    20738    3             THEN CALL KHI$IO_OTP (KH$CHN, SLCC_TASK);

  20738   2 00075B  DB80 0000 01A8  01                   LAB,B5   SLCC_TASK
          2 00075E  DFC7 001A                            STB,B5   ERCOD+7,AUTO
          2 000760  CCC7 0006                            LDB,B4   @KH$CHN,AUTO
          2 000762  CFC7 0018                            STB,B4   ERCOD+5,AUTO
          2 000764  BBC7 0018                            LAB,B3   ERCOD+5,AUTO
          2 000766  CBF0 0200                            LAB,B4   512,IMO
          2 000768  E380 0000 0000  xent                 LNJ,B6   KHI$IO_OTP
          2 00076B       0001                            DC       s:20742,PREL
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:115  

      818    20739        /*     SLCC_OTPCCBPTR.OTPCHN = '1'B;
      819    20740               CALL KHI$IO_OTP (KH$CHN, SLCC_OTPCCBPTR);
      820    20741               SLCC_OTPCCBPTR.OTPCHN = '0'B; */
      821    20742    3          KX$L2S.XMTCCB.LOCK = KX$L2S.XMTCCB.LOCK+1;

  20742   2 00076C  ECC7 000A                            LDB,B6   CTX$,AUTO
          2 00076E  8AC6 0074                            INC      116,B6

      822    20743    3       END;

  20743   2 000770  0F81 FF50                            B        s:20679,PREL

      823    20744    2   END Y$UPDATE_TRN_CCB;
      824    20745
      825    20746    1   END KXN$CMND;

  20746   2 000772  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:116  
--  Include file information  --

   K_ADDRESS_M.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KX_LCT_E.:E05TOU  is referenced.
   KW_SLCT_E.:E05TOU  is referenced.
   KW_LCT_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KH$IO.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KV$GLB.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_IOFNC_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXN$CMND.
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:117  

 **** Variables and constants ****

  ****  Section 000 RoData KXN$CMND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KXS$PTR$                   0-0-0/w EPTR        r     1 KXS$PTR$$
     F-0-0/w STRC(32)    r     1 SLCC_CNF                   2-0-0/w STRC(80)    r     1 SLCC_DUMP
    11-0-0/w STRC(32)    r     1 SLCC_INIT                  D-0-0/w STRC(32)    r     1 SLCC_KILL
    13-0-0/w STRC(32)    r     1 SLCC_OTPINTCTR             7-0-0/w STRC(32)    r     1 SLCC_OTPRAMCTR
     9-0-0/w STRC(32)    r     1 SLCC_START                 B-0-0/w STRC(32)    r     1 SLCC_STOP
    15-0-0/w STRC(32)    r     1 Y_NO_DWNLODCCP            17-0-0/w STRC(32)    r     1 Y_NO_DWNLODLCT
    19-0-0/w STRC(32)    r     1 Y_SLCC_BIGMEM             1B-0-0/w STRC(48)    r     1 Y_UNKFNC

  ****  Section 001  Data  KXN$CMND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(80)    r     1 DWNLODCCP                  5-0-0/w STRC(112)   r     1 DWNLODLCT
    1F-0-0/w STRC(32)    r     1 INPLCTBYT                 13-0-0/w STRC(32)    r     1 INPNXTCCBSTT_INPCHN
     E-0-0/w STRC(80)    r     1 IOLD_INPCHN               23-0-0/w STRC(80)    r     1 IOLD_OTPCHN
    28-0-0/w UBIN(16)    r     1 KX_SLCC_SPM(0:383)
    1B-0-0/w STRC(32)    r     1 OTPCHNCTR_INPCHN_INT      17-0-0/w STRC(32)    r     1 OTPCHNCTR_INPCHN_RST
    15-0-0/w STRC(32)    r     1 OTPCHNCTR_INPCHN_STR      1D-0-0/w STRC(32)    r     1 OTPCHNCTR_OTPCHN_INT
    21-0-0/w STRC(32)    r     1 OTPCHNCTR_OTPCHN_RST      19-0-0/w STRC(32)    r     1 OTPCHNCTR_OTPCHN_STR
     C-0-0/w STRC(32)    r     1 OTPLCTBYT                1B6-0-0/w STRC(32)    r     1 SLCC_INPSTT
   1AA-0-0/w STRC(80)    r     1 SLCC_OTPAREA             1B4-0-0/w STRC(32)    r     1 SLCC_OTPCCBPTR
   1AF-0-0/w STRC(80)    r     1 SLCC_OTPSYS              1A8-0-0/w STRC(32)    r     1 SLCC_TASK

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     8-0-0/w PTR         r     1 @INPDAT$                   6-0-0/w PTR         r     1 @KH$CHN
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:118  
     4-0-0/w PTR         r     1 @NTYPE                     E-0-0/w STRC(32)    r     1 CCB
     E-0-0/w PTR         r     1 CCB$                       A-0-0/w PTR         r     1 CTX$
     C-0-0/w STRC(32)    r     1 DAT                        C-0-0/w PTR         r     1 DAT$
    13-0-0/w STRC(32)    r     1 ERCOD                     *0-0-0/w PTR         r     1 INPDAT$
    *0-0-0/w STRC(512)   r     1 KH$CHN                    *0-0-0/w UBIN(16)    r     1 NTYPE
    10-0-0/w PTR         r     1 T$                        12-0-0/w UBIN(16)    r     1 TRCX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 KV_B_POOL$(0:0)
     0-0-0/w STRC(2360)  r     1 KXM$CCP                    0-0-0/w STRC(2360)  r     1 KXM$MLC16
     0-0-0/w STRC(672)   r     1 KX_BUF                     0-0-0/w UBIN(16)    r     1 KX_INHLVL
     0-0-0/w UBIN(16)    r     1 KX_IOMEM                   0-0-0/b EPTR        r     1 KX_PM$(0:2)
     0-0-0/w PTR         r     1 KX_RSV_INCCB$(0:5)
     0-0-0/w UBIN(16)    r     1 KX_SLCCRCVCCBS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN(16)    r     1 FRAME_TRACE(0:20)
     0-0-0/w STRC(128)   r     1 KX$CCB                     0-0-0/w STRC(128)   r     1 KX$DATA
     0-0-0/w STRC(152)   r     1 KX$EXTFRAME                0-0-0/w STRC(144)   r     1 KX$FRAME
     0-0-0/w STRC(352)   r     1 KX$L1                      0-0-0/w STRC(4992)  r     1 KX$L2
     0-0-0/w STRC(2032)  r     1 KX$L2S                     0-0-0/w STRC(128)   r     1 KX$TDATA


   Procedure KXN$CMND requires 1909 words for executable code.
   Procedure KXN$CMND requires 30 words of local(AUTO) storage.

    No errors detected in file KXN$CMND.:E05TSI    .
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:119  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:120  
          MINI XREF LISTING

CCB.W
     15532**DCL     20185>>ASSIGN  20186>>ASSIGN  20712>>ASSIGN  20730<<ASSIGN
CCB$
     15530**DCL     15531--REDEF   16536--IMP-PTR 20180<<ASSIGN  20181>>ASSIGN  20182>>ASSIGN  20183>>ASSIGN
     20184>>ASSIGN  20185>>ASSIGN  20690<<ASSIGN  20691>>IF      20709>>ASSIGN  20710>>ASSIGN  20711>>ASSIGN
     20715>>ASSIGN  20716>>ASSIGN  20731>>ASSIGN  20734>>ASSIGN
CTX$
     15525**DCL     15725--IMP-PTR 15770--IMP-PTR 16137--IMP-PTR 20103<<ASSIGN  20168>>ASSIGN  20173>>DOINDEX
     20174>>CALL    20176>>IF      20177>>ASSIGN  20178>>ASSIGN  20179>>ASSIGN  20180>>ASSIGN  20181>>ASSIGN
     20183>>ASSIGN  20347>>DOWHILE 20349>>CALL    20354>>IF      20357>>ASSIGN  20362>>ASSIGN  20365>>ASSIGN
     20371>>IF      20373>>CALL    20373>>CALL    20443>>IF      20448>>ASSIGN  20453>>ASSIGN  20454>>ASSIGN
     20487>>IF      20489>>ASSIGN  20491>>ASSIGN  20492>>ASSIGN  20547>>ASSIGN  20563>>DOWHILE 20569>>ASSIGN
     20570>>ASSIGN  20574>>ASSIGN  20583>>IF      20585>>ASSIGN  20587>>ASSIGN  20588>>ASSIGN  20591>>IF
     20591>>IF      20601>>IF      20603>>ASSIGN  20605>>ASSIGN  20606>>ASSIGN  20616>>ASSIGN  20617>>ASSIGN
     20619>>ASSIGN  20627>>DOWHILE 20627>>DOWHILE 20631>>ASSIGN  20632>>ASSIGN  20636>>ASSIGN  20643>>IF
     20645>>ASSIGN  20647>>ASSIGN  20648>>ASSIGN  20650>>IF      20652>>ASSIGN  20654>>ASSIGN  20655>>ASSIGN
     20665>>ASSIGN  20666>>ASSIGN  20667>>ASSIGN  20668>>ASSIGN  20670>>ASSIGN  20689>>ASSIGN  20690>>ASSIGN
     20691>>IF      20694>>ASSIGN  20697>>ASSIGN  20698>>IF      20700>>ASSIGN  20702>>ASSIGN  20703>>ASSIGN
     20704>>ASSIGN  20704>>ASSIGN  20705>>IF      20705>>IF      20707>>ASSIGN  20709>>ASSIGN  20717>>DOUNTIL
     20718>>IF      20720>>ASSIGN  20720>>ASSIGN  20722>>IF      20725>>ASSIGN  20726>>ASSIGN  20730>>ASSIGN
     20732>>IF      20733>>ASSIGN  20736>>ASSIGN  20737>>IF      20742>>ASSIGN  20742>>ASSIGN
DAT.W
     15529**DCL     20184>>ASSIGN  20710>>ASSIGN
DAT$
     15527**DCL     15528--REDEF   16560--IMP-PTR 16587--IMP-PTR 16601--IMP-PTR 16633--IMP-PTR 20100<<ASSIGN
     20102<<ASSIGN  20175<<ASSIGN  20177>>ASSIGN  20178>>ASSIGN  20179>>ASSIGN  20350<<ASSIGN  20351>>ASSIGN
     20352>>ASSIGN  20357>>ASSIGN  20362>>ASSIGN  20365>>ASSIGN  20366>>ASSIGN  20448>>ASSIGN  20453>>ASSIGN
     20454>>ASSIGN  20458>>ASSIGN  20462>>ASSIGN  20489>>ASSIGN  20491>>ASSIGN  20492>>ASSIGN  20494>>ASSIGN
     20495>>ASSIGN  20569<<ASSIGN  20570>>ASSIGN  20571>>IF      20580>>IF      20585>>ASSIGN  20587>>ASSIGN
     20591>>IF      20598<>CALL    20603>>ASSIGN  20605>>ASSIGN  20606>>ASSIGN  20607>>ASSIGN  20609>>ASSIGN
     20610>>ASSIGN  20616>>ASSIGN  20617>>ASSIGN  20631<<ASSIGN  20632>>ASSIGN  20633>>IF      20645>>ASSIGN
     20647>>ASSIGN  20652>>ASSIGN  20654>>ASSIGN  20655>>ASSIGN  20656>>ASSIGN  20659>>ASSIGN  20660>>ASSIGN
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:121  
     20665>>ASSIGN  20666>>ASSIGN  20667>>ASSIGN  20668>>ASSIGN  20689<<ASSIGN  20691>>IF      20694>>ASSIGN
     20695>>IF      20697>>ASSIGN  20700>>ASSIGN  20702>>ASSIGN  20703>>ASSIGN  20708>>ASSIGN  20711>>ASSIGN
DWNLODCCP
     17411**DCL     20224<>CALL
DWNLODCCP.CCPLCT$
     17417**DCL     20210<<ASSIGN  20212<<ASSIGN  20214<<ASSIGN
DWNLODCCP.CHN$
     17417**DCL     20208<<ASSIGN
DWNLODLCT
     17434**DCL     20250<>CALL
DWNLODLCT.CCPLCT$
     17440**DCL     20243<<ASSIGN  20245<<ASSIGN  20247<<ASSIGN
DWNLODLCT.CHN$
     17440**DCL     20241<<ASSIGN
DWNLODLCT.RCVINTLVL
     17441**DCL     20248<<ASSIGN  20249>>ASSIGN
DWNLODLCT.TRNINTLVL
     17441**DCL     20249<<ASSIGN
ERCOD
     15673**DCL     20217<<ASSIGN  20230<<ASSIGN  20256<<ASSIGN  20274<>CALL
ERRLOG_RET
     20274**LABEL   20221--GOTO    20231--GOTO
FRAME_TRACE
     16587**DCL     20616>>ASSIGN  20617>>ASSIGN  20665>>ASSIGN  20666>>ASSIGN  20667>>ASSIGN  20668>>ASSIGN
INPDAT$
     15526**DCL        26--PROC    20098--IF      20100>>ASSIGN
INPLCTBYT
     18311**DCL     20546<>CALL
INPLCTBYT.LCTBYT.ADR
     18327**DCL     20545<<ASSIGN
INPLCTBYT.LCTBYT.DAT
     18327**DCL     20551>>IF
INPNXTCCBSTT_INPCHN
     17622**DCL     20379<>CALL
IOLD_INPCHN
     17573**DCL     20353<>CALL
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:122  
IOLD_INPCHN.BFR_.ADR$
     17606**DCL     20351<<ASSIGN
IOLD_INPCHN.BFR_.BYTSIZ
     17606**DCL     20352<<ASSIGN
IOLD_OTPCHN
     18543**DCL     20612<>CALL    20661<>CALL
IOLD_OTPCHN.BFR_.ADR$
     18576**DCL     20609<<ASSIGN  20659<<ASSIGN
IOLD_OTPCHN.BFR_.BYTSIZ
     18576**DCL     20610<<ASSIGN  20660<<ASSIGN
KH$CHN
     15549**DCL        26--PROC    20118<>CALL    20119<>CALL    20122<>CALL    20129<>CALL    20132<>CALL
     20136<>CALL    20137<>CALL    20138<>CALL    20142<>CALL    20146<>CALL    20151<>CALL    20161<>CALL
     20163<>CALL    20165<>CALL    20167<>CALL    20169<>CALL    20187<>CALL    20189<>CALL    20208--ASSIGN
     20241--ASSIGN  20279<>CALL    20293<>CALL    20313<>CALL    20330<>CALL    20333<>CALL    20346<>CALL
     20353<>CALL    20379<>CALL    20387<>CALL    20402<>CALL    20417<>CALL    20419<>CALL    20421<>CALL
     20546<>CALL    20558<>CALL    20612<>CALL    20661<>CALL    20679<>CALL    20738<>CALL
KH$CHN.ATTR
     15582**DCL     20111>>IF      20211>>IF      20244>>IF      20278>>IF      20539>>IF
KH$CHN.CLK
     15560**DCL     20288>>IF
KH$CHN.CTX$
     15619**DCL     20103>>ASSIGN
KH$CHN.DED
     15609**DCL     20113>>IF      20121>>IF      20144>>IF      20152>>IF      20216<<ASSIGN  20326>>IF
     20384>>IF      20399>>IF      20414>>IF      20676>>IF
KH$CHN.DVCID
     15575**DCL     20209>>IF      20242>>IF      20301>>IF
KH$CHN.DWNLOD
     15587**DCL     20117>>IF      20125>>IF      20149>>IF
KH$CHN.INPCCBCNT
     15588**DCL     20344>>IF      20347>>DOWHILE 20358<<ASSIGN  20363<<ASSIGN  20363>>ASSIGN
KH$CHN.OTPCCBCNT
     15593**DCL     20466>>IF      20500>>IF      20551>>IF      20563>>DOWHILE 20611<<ASSIGN  20611>>ASSIGN
     20627>>DOWHILE 20658<<ASSIGN  20658>>ASSIGN  20676>>IF
KH$CHN.TERMID
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:123  
     15643**DCL     20274<>CALL
KH$CHN.TERMID.TERM
     15645**DCL     15654--REDEF
KHD$SCREECH
     15514**DCL-ENT 20525--CALL
KHI$DWNLODCCP
     15503**DCL-ENT 20224--CALL
KHI$DWNLODLCT
     15504**DCL-ENT 20250--CALL
KHI$IOLD
     15505**DCL-ENT 20353--CALL    20612--CALL    20661--CALL
KHI$IOLD_FNC
     15506**DCL-ENT 20138--CALL    20161--CALL    20163--CALL    20165--CALL    20167--CALL    20169--CALL
KHI$IO_INP
     15507**DCL-ENT 20142--CALL    20379--CALL
KHI$IO_INPLCTBYT
     15508**DCL-ENT 20546--CALL
KHI$IO_OTP
     15509**DCL-ENT 20122--CALL    20129--CALL    20132--CALL    20136--CALL    20137--CALL    20146--CALL
     20187--CALL    20189--CALL    20279--CALL    20346--CALL    20387--CALL    20402--CALL    20417--CALL
     20419--CALL    20558--CALL    20679--CALL    20738--CALL
KHI$IO_OTPLCTBYT
     15510**DCL-ENT 20293--CALL    20313--CALL
KV_B_POOL$
     19424**DCL     20158>>ASSIGN
KX$CCB.CCB_TAIL
     16544**DCL     20185<<ASSIGN
KX$CCB.DATA_ADR
     16541**DCL     20184<<ASSIGN  20710<<ASSIGN
KX$CCB.FLAGS
     16542**DCL     20715<<ASSIGN
KX$CCB.LNK
     16540**DCL     20716<<ASSIGN
KX$CCB.LNK.FEP
     16541**DCL     20731<<ASSIGN
KX$CCB.LNK.SLCC
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:124  
     16540**DCL     20182<<ASSIGN  20734<<ASSIGN
KX$CCB.LNK$
     16540**DCL     16540--REDEF   20181>>ASSIGN  20709>>ASSIGN
KX$CCB.RANGE
     16541**DCL     20183<<ASSIGN  20711<<ASSIGN
KX$DATA
     16560**DCL     17606--DCLINIT 18576--DCLINIT 20184--ASSIGN  20616--ASSIGN  20617--ASSIGN  20665--ASSIGN
     20666--ASSIGN  20667--ASSIGN  20668--ASSIGN  20710--ASSIGN
KX$DATA.BFRSIZ
     16563**DCL     20352>>ASSIGN
KX$DATA.CNT
     16563**DCL     20610>>ASSIGN  20660>>ASSIGN  20711>>ASSIGN
KX$DATA.NEXT$
     16562**DCL     20366<<ASSIGN  20458<<ASSIGN  20494<<ASSIGN  20570>>ASSIGN  20571>>IF      20607<<ASSIGN
     20632>>ASSIGN  20633>>IF      20656<<ASSIGN  20694>>ASSIGN  20695>>IF      20697>>ASSIGN  20702<<ASSIGN
     20708<<ASSIGN
KX$DATA.RLS.L1
     16563**DCL     20462<<ASSIGN  20495<<ASSIGN
KX$DATA.RLS_STAT
     16562**DCL     16563--REDEF
KX$EXTFRAME.RLS_STAT
     16635**DCL     16636--REDEF
KX$EXTFRAME.XCTL
     16640**DCL     16641--REDEF
KX$EXTFRAME.XCTL.CTL
     16640**DCL     16640--REDEF
KX$EXTFRAME.XCTL.NR
     16641**DCL     20587<<ASSIGN  20647<<ASSIGN
KX$FRAME.CTL
     16608**DCL     16608--REDEF   20580>>IF      20591>>IF
KX$FRAME.CTL_BITS.NR
     16610**DCL     20585<<ASSIGN  20645<<ASSIGN
KX$FRAME.RLS_STAT
     16603**DCL     16604--REDEF
KX$L1.BUF_SIZE
     15744**DCL     20349>>CALL    20371>>IF      20373>>CALL    20373>>CALL
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:125  
KX$L1.IN_CCB_HEAD$
     15746**DCL     20176>>IF      20177<<ASSIGN  20354>>IF      20357<<ASSIGN
KX$L1.IN_CCB_TAIL$
     15746**DCL     20178>>ASSIGN  20179<<ASSIGN  20362>>ASSIGN  20365<<ASSIGN
KX$L1.OUT_CCB_HEAD$
     15746**DCL     20601>>IF      20603<<ASSIGN  20650>>IF      20652<<ASSIGN  20698>>IF      20700<<ASSIGN
KX$L1.OUT_CCB_TAIL$
     15747**DCL     20605>>ASSIGN  20606<<ASSIGN  20654>>ASSIGN  20655<<ASSIGN  20702>>ASSIGN  20703<<ASSIGN
KX$L1.OUT_Q_HEAD$
     15747**DCL     20443>>IF      20448<<ASSIGN  20627>>DOWHILE 20631>>ASSIGN  20632<<ASSIGN  20689>>ASSIGN
     20694<<ASSIGN
KX$L1.OUT_Q_TAIL$
     15748**DCL     20453>>ASSIGN  20454<<ASSIGN  20636<<ASSIGN  20697<<ASSIGN
KX$L1.SUPV_Q_HEAD$
     15748**DCL     20487>>IF      20489<<ASSIGN  20563>>DOWHILE 20569>>ASSIGN  20570<<ASSIGN
KX$L1.SUPV_Q_TAIL$
     15749**DCL     20491>>ASSIGN  20492<<ASSIGN  20574<<ASSIGN
KX$L2.BUF_SIZE
     15789**DCL     20174>>CALL    20183>>ASSIGN
KX$L2.DCE_I_CNT
     15805**DCL     20588<<ASSIGN  20648<<ASSIGN
KX$L2.DFLVCPRF.TRADEL
     15910**DCL     15920--REDEF
KX$L2.DSTSNPA.ADR_STRING
     16101**DCL     16101--REDEF
KX$L2.FLG.BLK
     15813**DCL     20591>>IF
KX$L2.FLG.EXTSEQ
     15817**DCL     20583>>IF      20643>>IF
KX$L2.FRMR_NSNR
     15887**DCL     15888--REDEF
KX$L2.K
     15796**DCL     20173>>DOINDEX
KX$L2.MAXCCB
     15818**DCL     20347>>DOWHILE
KX$L2.NTWADR.ADR_STRING
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:126  
     15821**DCL     15821--REDEF
KX$L2.OUT_Q_HEAD$
     15792**DCL     20591>>IF
KX$L2.STATE.CURRENT
     15800**DCL     20627>>DOWHILE
KX$L2.STATES
     15799**DCL     15799--REDEF
KX$L2.TRC
     16110**DCL     20616<<ASSIGN  20617<<ASSIGN  20665<<ASSIGN  20666<<ASSIGN  20667<<ASSIGN  20668<<ASSIGN
KX$L2.TRCX
     16110**DCL     20547>>ASSIGN  20619<<ASSIGN  20670<<ASSIGN
KX$L2.VR
     15805**DCL     20585>>ASSIGN  20587>>ASSIGN  20645>>ASSIGN  20647>>ASSIGN
KX$L2S
     16137**DCL     19421--DCLINIT
KX$L2S.CCBHD$
     16208**DCL     20180>>ASSIGN  20181<<ASSIGN  20690>>ASSIGN  20709<<ASSIGN
KX$L2S.DFLVCPRF.TRADEL
     16307**DCL     16317--REDEF
KX$L2S.DSTSNPA.ADR_STRING
     16498**DCL     16498--REDEF
KX$L2S.FLG.BLK
     16210**DCL     20691>>IF      20707<<ASSIGN
KX$L2S.FRMR_NSNR
     16284**DCL     16285--REDEF
KX$L2S.I_CNT
     16215**DCL     20704<<ASSIGN  20704>>ASSIGN  20705>>IF
KX$L2S.K
     16163**DCL     20705>>IF
KX$L2S.NTWADR.ADR_STRING
     16218**DCL     16218--REDEF
KX$L2S.P_CCB.LNK$
     16198**DCL     16198--REDEF
KX$L2S.STATES
     16166**DCL     16166--REDEF
KX$L2S.XMTCCB.HEAD
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:127  
     16509**DCL     20722>>IF      20725<<ASSIGN
KX$L2S.XMTCCB.LOCK
     16510**DCL     20717>>DOUNTIL 20718>>IF      20720<<ASSIGN  20720>>ASSIGN  20742<<ASSIGN  20742>>ASSIGN
KX$L2S.XMTCCB.NEXT
     16511**DCL     20726<<ASSIGN  20732>>IF      20733<<ASSIGN  20737>>IF
KX$L2S.XMTCCB.TAIL
     16510**DCL     20730>>ASSIGN  20736<<ASSIGN
KX$TDATA.NEXT$
     16582**DCL     20178<<ASSIGN  20362<<ASSIGN  20453<<ASSIGN  20491<<ASSIGN  20605<<ASSIGN  20654<<ASSIGN
KX$TDATA.RLS_STAT
     16582**DCL     16583--REDEF
KXM$CCP
     17355**DCL     20212--ASSIGN  20245--ASSIGN
KXM$CCP.CCPRLCTBLWRDX
     17361**DCL     17361--REDEF
KXM$CCP.LCTBYT
     17362**DCL     17362--REDEF   17362--REDEF   20292>>ASSIGN
KXM$CCP.LCTRLCTBL_BYT
     17364**DCL     17365--REDEF
KXM$MLC16
     17381**DCL     20210--ASSIGN  20243--ASSIGN
KXM$MLC16.CCPRLCTBLWRDX
     17387**DCL     17387--REDEF
KXM$MLC16.LCTBYT
     17388**DCL     17388--REDEF   17388--REDEF
KXM$MLC16.LCTRLCTBL_BYT
     17390**DCL     17391--REDEF
KXN$CMND
        26**PROC    20118--CALL    20119--CALL    20151--CALL    20330--CALL    20333--CALL    20421--CALL
KXS$GETBFR
     15511**DCL-ENT 20174--CALL    20349--CALL    20373--CALL
KXS$PTR$
     17394**DCL     20213>>IF      20214>>ASSIGN  20247>>ASSIGN
KXS$PTR$$
     17393**DCL     17394--REDEF
KXS$RLSBFR
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:128  
     15512**DCL-ENT 20598--CALL
KXS$SLCC
     17395**DCL-ENT 17393--DCLINIT
KXS$SYSLOG
     15515**DCL-ENT 20274--CALL
KX_BUF.SIZ
     16667**DCL     20174<>CALL    20183>>ASSIGN  20349<>CALL    20352>>ASSIGN  20373<>CALL
KX_INHLVL
     17329**DCL     20248>>ASSIGN
KX_IOMEM
     17330**DCL     20159>>ASSIGN  20213>>IF
KX_RSV_INCCB$
     16668**DCL     20371>>IF      20373<>CALL
KX_SLCCRCVCCBS
     17396**DCL     20173>>DOINDEX
KX_SLCC_SPM
     18632**DCL     18628--DCLINIT
KX_STATS_HDLC.REQSTATS.DSPMSK
     16938**DCL     16944--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     16979**DCL     16986--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     17263**DCL     17269--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     17304**DCL     17311--REDEF
NTYPE
     15524**DCL        26--PROC    20115>>DOCASE  20199>>DOCASE
OTPCHNCTR_INPCHN_INT
     18082**DCL     20417<>CALL
OTPCHNCTR_INPCHN_RST
     17852**DCL     20346<>CALL
OTPCHNCTR_INPCHN_STR
     17737**DCL     20387<>CALL
OTPCHNCTR_OTPCHN_INT
     18197**DCL     20419<>CALL
OTPCHNCTR_OTPCHN_RST
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:129  
     18426**DCL     20558<>CALL
OTPCHNCTR_OTPCHN_STR
     17967**DCL     20402<>CALL    20679<>CALL
OTPLCTBYT
     17456**DCL     20293<>CALL    20313<>CALL
OTPLCTBYT.LCTBYT.ADR
     17472**DCL     20291<<ASSIGN  20312<<ASSIGN
OTPLCTBYT.LCTBYT.DAT
     17472**DCL     20292<<ASSIGN  20304<<ASSIGN  20309<<ASSIGN
SLCC_CNF
     19219**DCL     20279<>CALL
SLCC_DUMP
     18595**DCL     20138<>CALL
SLCC_INIT
     19665**DCL     20146<>CALL
SLCC_INPSTT
     19551**DCL     20142<>CALL
SLCC_INPSTT.SLCSTT
     19591**DCL     20139<<ASSIGN  20141>>DOUNTIL
SLCC_KILL
     18990**DCL     20132<>CALL
SLCC_OTPAREA
     19335**DCL     20161<>CALL    20163<>CALL    20165<>CALL    20167<>CALL
SLCC_OTPAREA.BFR_.ADR$
     19368**DCL     20158<<ASSIGN
SLCC_OTPAREA.BFR_.BYTSIZ
     19368**DCL     20159<<ASSIGN
SLCC_OTPAREA.FNC
     19344**DCL     20160<<ASSIGN  20164<<ASSIGN
SLCC_OTPAREA.OTPCHN
     19343**DCL     20162<<ASSIGN  20166<<ASSIGN
SLCC_OTPCCBPTR
     19437**DCL     20187<>CALL
SLCC_OTPCCBPTR.CCBPTR
     19519**DCL     20186<<ASSIGN
SLCC_OTPINTCTR
PL6.E3A0      #001=KXN$CMND File=KXN$CMND.:E05TSI                                WED 07/30/97 02:23 Page:130  
     19779**DCL     20136<>CALL
SLCC_OTPRAMCTR
     18645**DCL     20137<>CALL
SLCC_OTPSYS
     19387**DCL     20169<>CALL
SLCC_OTPSYS.BFR_.ADR$
     19420**DCL     20168<<ASSIGN
SLCC_START
     18760**DCL     20122<>CALL
SLCC_STOP
     18875**DCL     20129<>CALL
SLCC_TASK
     19104**DCL     20189<>CALL    20738<>CALL
T$
     15533**DCL     20174<>CALL    20175>>ASSIGN  20349<>CALL    20350>>ASSIGN
TRCX
     15658**DCL     20140<<ASSIGN  20143<<ASSIGN  20143>>ASSIGN  20144>>IF      20173<<DOINDEX 20547<<ASSIGN
     20616>>ASSIGN  20617>>ASSIGN  20618<<ASSIGN  20618>>ASSIGN  20619>>ASSIGN  20665>>ASSIGN  20666>>ASSIGN
     20667>>ASSIGN  20668>>ASSIGN  20669<<ASSIGN  20669>>ASSIGN  20670>>ASSIGN  20712<<ASSIGN  20725>>ASSIGN
     20726>>ASSIGN  20731>>ASSIGN  20733>>ASSIGN  20734>>ASSIGN  20736>>ASSIGN  20737>>IF
Y$UPDATE_SLCC_CCB IN PROCEDURE Y$UPDATE_TRN_CCB
     20679**LABEL   20541--GOTO
Y$UPDATE_TRN_CCB
     20535**PROC    20472--CALL    20480--CALL    20503--CALL
Y_NO_DWNLODCCP
     19903**DCL     20230>>ASSIGN
Y_NO_DWNLODLCT
     19950**DCL     20256>>ASSIGN
Y_SLCC_BIGMEM
     19997**DCL     20217>>ASSIGN
Y_UNKFNC
     20056**DCL     20525<>CALL
