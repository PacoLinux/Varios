100 REM M* FILER_SIB1 - CREATE FPT INFO PL6 SOURCE FROM MUNGED MACROS
200 T4=0
300 GOTO 15500
400 REM ** PRINT LOC OF SCANNER.
500 GOSUB 900
600 PRINT "** THIS MAC/FPT WILL NOT BE INCLUDED IN FILER **"
700 GOTO 77400
800 PRINT
900 PRINT R$
1000 PRINT TAB(P-1);"!"
1100 RETURN
1200 REM ** INITIALIZE DELIMITER VECTOR.
1300 DIM D(9),C(511)
1400 FOR I=1 TO 511
1500 C(I)=0
1600 REM MARK ALL BAD TO START
1700 IF I>=ASC("A") AND I<=ASC("Z") THEN C(I)=1
1800 IF I>=ASC("0") AND I<=ASC("9") THEN C(I)=2
1900 IF I=ASC("_") OR I=ASC("$") OR I=ASC("#") OR I=ASC("@") THEN C(I)=1
2000 NEXT I
2100 FOR I=1 TO 9
2200 D(I)=ASC(SST$(",;=:.()*%",I,1))
2300 C(D(I))=I+3
2400 NEXT I
2500 D9=9
2600 RETURN
2700 REM ** RETURN NEXT CHAR FROM INPUT STREAM.
2800 IF P<Z GOTO 3900
2900 IF P>Z GOTO 3400
3000 C=ASC(" ")
3100 R=C(C)
3200 P=P+1
3300 RETURN
3400 LINPUT# 1,R$
3500 V8=V8+1
3600 P=0
3700 Z=LEN(R$)
3800 IF Z=0 GOTO 3400
3900 P=P+1
4000 C=ASC(SST$(R$,P,1))
4100 R=C(C)
4200 RETURN
4300 REM ** RETURN NEXT TOKEN FROM INPUT STREAM.
4400 IF C<>ASC(" ") GOTO 4700
4500 GOSUB 2700
4600 GOTO 4400
4700 IF R<>1 GOTO 5500
4800 X$=""
4900 T=1
5000 REM  NAME.
5100 X$=X$+CHR$(C)
5200 GOSUB 2700
5300 IF R=1 OR R=2 GOTO 5100
5400 RETURN
5500 IF R<>2 GOTO 6500
5600 T=2
5700 REM  INTEGER.
5800 X$=""
5900 X$=X$+CHR$(C)
6000 GOSUB 2700
6100 IF R=2 GOTO 5900
6200 IF R=1 GOTO 4900
6300 RETURN
6400 REM
6500 IF R>0 GOTO 8600
6600 IF C<>ASC("/") GOTO 7500
6700 GOSUB 2700
6800 IF C<>ASC("*") GOTO 9100
6900 GOSUB 2700
7000 IF C<>ASC("*") GOTO 6900
7100 GOSUB 2700
7200 IF C<>ASC("/") GOTO 7000
7300 GOSUB 2700
7400 GOTO 4300
7500 IF C<>ASC("'") GOTO 9100
7600 T=3
7700 REM  STRING.
7800 X$=""
7900 GOSUB 2700
8000 IF C=ASC("'") GOTO 8300
8100 X$=X$+CHR$(C)
8200 GOTO 7900
8300 GOSUB 2700
8400 IF C=ASC("'") GOTO 8100
8500 RETURN
8600 T=R
8700 REM  DELIM AND TYPE.
8800 X$=CHR$(C)
8900 GOSUB 2700
9000 RETURN
9100 T=-1
9200 IF R=0 GOTO 9500
9300 PRINT "END-OF-FILE"
9310 PRINT# 3,"END;"
9400 STOP
9500 REM  ERROR.
9600 X$=CHR$(C)
9700 GOSUB 2700
9800 RETURN
9900 REM ** ASK USER FOR FILE NAME AND OPEN IT.
10000 PRINT "INPUT FILE NAME";
10100 INPUT F$
10200 PRINT
10300 OPEN F$ TO 1,INPUT
10400 MARGIN#1,200
10500 WHEN EOF# 1 GOTO 10900
10501 OPEN "FILER_SI9" TO 3,INPUT,UPDATE,CONSEC
10502 MARGIN #3,132
10503 O9=500
10504 PRINT# 3,"FILER_FPT_INFO0: PROC;"
10505 PRINT# 3,"%INCLUDE CP_6;"
10506 OPEN "__FPTLIST" TO 4,PRINT,OVER
10600 P=Z+1
10700 V8=0
10800 GOTO 2700
10900 REM ** INDICATE END OF FILE.
11000 IF R<>-1 GOTO 11300
11100 PRINT "DOUBLE EOF"
11200 STOP
11300 R=-1
11400 C=0
11500 REM  FLUSH CHAR.
11600 RETURN
11700 REM * TOKENS:
11800 REM *    T         X$
11900 REM *    1  ---  'NAME'
12000 REM *    2  ---  'INTEGER'
12100 REM *    3  ---  'STRING'
12200 REM *    4   ,
12300 REM *    5   ;
12400 REM *    6   =
12500 REM *    7   :
12600 REM *    8   .
12700 REM *    9   (
12800 REM *    10  )
12900 REM *    11  *
13000 REM *    12  %
13100 REM ** PARSER FOR ( <INT> ).
13200 GOSUB 4300
13300 P9=1
13400 IF T=9 GOTO 13800
13500 PRINT "NOT ( AFTER ATTR"
13600 E7=1
13700 RETURN
13800 GOSUB 4300
13900 IF T=2 GOTO 14900
14000 I9=1
14100 IF T<>9 GOTO 14300
14200 P9=P9+1
14300 IF T<>10 GOTO 14700
14400 P9=P9-1
14500 IF P9=0 THEN RETURN
14600 GOTO 13800
14700 PRINT "IGNORE ";T;"'";X$;"' in ";R$
14800 GOTO 13800
14900 I9=VAL(X$)
15000 GOSUB 4300
15100 IF T=10 THEN RETURN
15200 PRINT "NOT ( <INT> ) AFTER ATTR"
15300 E7=1
15400 RETURN
15500 REM ** MAIN PARSER.
15600 GOSUB 83500
15700 T9=0
15800 GOSUB 4300
15900 E8=0
16000 IF T=12 GOTO 17100
16100 T=V8
16200 REM  LINE COUNT.
16300 IF T=T9 GOTO 16900
16400 T9=T
16500 E8=1
16600 IF T4<>0 GOTO 16800
16700 T4=T
16800 T5=T
16900 GOSUB 4300
17000 GOTO 16000
17100 REM
17200 E7=0
17300 REM  RESET ERROR FLAG.
17400 GOSUB 4300
17500 IF T<>1 GOTO 16100
17600 IF X$="MACRO" GOTO 17800
17700 IF X$<>"MAC" GOTO 16100
17800 IF T4=0 GOTO 18100
17900 PRINT "NON %MACS IN RECS";T4;"-";T5;"SKIPPED"
18000 T4=0
18100 E8=0
18200 GOSUB 4300
18300 IF T=1 GOTO 18600
18400 PRINT "No Name for this MACRO - ";R$
18500 GOTO 400
18600 PRINT "********** _";X$
18700 F$=X$
18800 IF LEN(F$)<21 GOTO 19100
18900 PRINT "Name Too Long to Construct Table Names"
19000 GOTO 400
19100 GOSUB 4300
19200 V$(901)=""
19300 T1=0
19400 IF T=9 GOTO 19700
19500 PRINT "NOT ("
19600 GOTO 400
19700 GOSUB 4300
19800 IF T=1 GOTO 20100
19900 PRINT "NOT OPT NAME"
20000 GOTO 400
20100 IF X$="ANY" GOTO 26600
20200 V0=V0+1
20300 V$(V0)=X$
20400 GOSUB 4300
20500 IF T=6 GOTO 21300
20600 IF T<>9 GOTO 21100
20700 V$(901)=V$(V0)
20800 T1=100
20900 V0=V0-1
21000 GOTO 19700
21100 PRINT "NOT ="
21200 GOTO 400
21300 V7=0
21400 C$(V0)=""
21500 GOSUB 4300
21600 IF T<>2 GOTO 22100
21700 C$(V0)=C$(V0)+X$
21800 REM INT SAVE VALUE.
21900 T(V0)=T+T1
22000 GOTO 26600
22100 IF T<>1 GOTO 23600
22200 C$(V0)=C$(V0)+X$
22300 REM SAVE NAME
22400 T(V0)=T+T1
22500 GOSUB 4300
22600 IF T<>9 GOTO 26700
22700 REM  PRINT "VALUE ASSUMED TO BE 36 BIT 0---0"
22800 T(V0)=2+T1
22900 C$(V0)="0"
23000 GOSUB 4300
23100 IF V7=1 GOTO 23400
23200 IF T=4 GOTO 19700
23300 IF T=10 GOTO 26600
23400 IF X$<>"""" GOTO 23000
23500 GOTO 26600
23600 IF T=3 GOTO 25300
23700 IF X$<>"""" GOTO 24000
23800 V7=1
23900 GOTO 21500
24000 C$(V0)=C$(V0)+X$
24100 IF X$="-" GOTO 21500
24200 IF X$="+" GOTO 21500
24300 REM GOSUB 180
24400 REM PRINT "NOT DATA--ASSUMED 36 BIT 0"
24500 IF V7=0 GOTO 24900
24600 IF X$<>"""" GOTO 25100
24700 V7=0
24800 GOTO 25100
24900 IF T=4 GOTO 19700
25000 IF T=10 GOTO 27800
25100 GOSUB 4300
25200 GOTO 24500
25300 C$(V0)=C$(V0)+X$
25400 T(V0)=T+T1
25500 REM ASSUME ORDINARY STRING (TEXT).
25600 GOSUB 4300
25700 IF T<>1 GOTO 26700
25800 T(V0)=4+T1
25900 REM ASSUME BINARY.
26000 IF X$="B" GOTO 26600
26100 T(V0)=5+T1
26200 REM ASSUME OCTAL.
26300 IF X$="O" GOTO 26600
26400 PRINT "NOT B OR O"
26500 GOTO 400
26600 GOSUB 4300
26700 IF T=4 GOTO 19700
26800 REM COMMA-> START NEW LIST.
26900 IF T<>6 GOTO 27300
27000 V0=V0+1
27100 V$(V0) = X$
27200 GOTO 21300
27300 IF T=10 GOTO 27800
27400 REM  RPAR.
27500 IF X$="""" GOTO 26600
27600 PRINT "NOT , OR )"
27700 GOTO 400
27800 GOSUB 4300
27900 IF T<>6 GOTO 28600
28000 IF V$(901)="" GOTO 27600
28100 V0=V0+1
28200 V$(V0)=V$(901)
28300 V$(901)=""
28400 T1=0
28500 GOTO 21300
28600 IF T=5 GOTO 28900
28700 PRINT "NOT ; AFTER )"
28800 GOTO 400
28900 REM PRINT V0" VALUES"
29000 REM ** PARSE STRUCTURE DCL.
29100 GOSUB 4300
29200 IF T<>12 GOTO 29800
29300 GOSUB 4300
29400 IF T<>5 GOTO 29300
29500 GOTO 29100
29600 REM ABOVE 5 LINES IGNORES PREPROCESSOR BS.
29700 GOSUB 4300
29800 IF T<>1 GOTO 30000
29900 IF X$="DCL" GOTO 30200
30000 PRINT "EXPECTED DCL MISSING"
30100 GOTO 400
30200 F=0
30300 REM  INIT BIT POINTER.
30400 H6=1
30500 REM  INIT FILLER COUNT.
30600 L8=0
30700 REM INIT LEVEL.
30800 GOSUB 4300
30900 A=-1
31000 REM NO ALIGNMENT DIRECTIVES.
31100 IF T=2 GOTO 31400
31200 PRINT "EXPECTED <INT> NOT FOUND"
31300 GOTO 400
31400 L0=VAL(X$)
31500 REM  SAVE STRUC LEVEL.
31600 IF L0=L8 GOTO 31700
31700 IF L0>=L8 GOTO 31900
31800 GOSUB 81100
31900 Z0=0
32000 REM INIT DIM SIZE.
32100 S0=0
32200 REM  INIT WIDTH.
32300 K0=0
32400 REM  INIT 'INIT' LENGTH.
32500 T2=0
32600 REM INIT DEFAULT TYPE.
32700 A0=36
32800 REM  INIT DEFAULT ALIGNMENT.
32900 I9=1
33000 REM INIT SIZE MULTIPLIER.
33100 GOSUB 4300
33200 IF T=1 GOTO 34000
33300 IF T=11 GOTO 33600
33400 PRINT "NOT ID OR *"
33500 GOTO 400
33600 REM  CHANGE NAME OF FILLER TO *N..N IS NUMBER OF FILLER ON LEVEL
33700 X$=STR$(H6)
33800 H6=H6+1
33900 X$="*"+SST$(X$,2)
34000 GOSUB 86800
34100 GOSUB 4300
34200 IF T=4 GOTO 50300
34300 IF T=12 GOTO 34100
34400 IF T=5 GOTO 50300
34500 IF T=9 GOTO 79000
34600 IF T=1 GOTO 34900
34700 PRINT "THAT'S NO ATTRIBUTE"
34800 GOTO 400
34900 IF X$<>"EPTR" GOTO 35300
35000 S0=36
35100 T2=1
35200 GOTO 34100
35300 IF X$<>"DCB" GOTO 35700
35400 S0=0
35500 T2=2
35600 GOTO 34100
35700 IF X$<>"PTR" GOTO 36100
35800 S0=36
35900 T2=3
36000 GOTO 34100
36100 IF X$<>"BASED" GOTO 37000
36200 S0=0
36300 GOSUB 4300
36400 IF T<>9 GOTO 34200
36500 GOSUB 4300
36600 GOSUB 4300
36700 IF T=10 GOTO 34100
36800 PRINT "EXPECTED ) MISSING"
36900 GOTO 400
37000 IF X$<>"CHAR" GOTO 37900
37100 GOSUB 13100
37200 IF E7=1 GOTO 400
37300 S0=9
37400 REM CALC SIZE OF THIS FIELD.
37500 T2=4
37600 A0=9
37700 REM  DEFAULT ALIGN.
37800 GOTO 34100
37900 IF X$<>"BIT" GOTO 38700
38000 GOSUB 13100
38100 IF E7=1 GOTO 400
38200 S0=1
38300 T2=5
38400 A0=1
38500 REM  DEFAULT ALIGN.
38600 GOTO 34100
38700 IF X$<>"VECTOR" AND X$<>"PFMT" GOTO 39300
38800 S0=1
38900 T2=5
39000 A0=1
39100 I9=72
39200 GOTO 34100
39300 IF X$<>"REDEF" GOTO 40500
39400 GOSUB 4300
39500 IF T=1 GOTO 39800
39600 PRINT "CAN'T REDEF TO THAT"
39700 GOTO 400
39800 FOR T=N0 TO 1 STEP -1
39900 IF X$=N$(T) GOTO 40300
40000 NEXT T
40100 PRINT "THAT'S NOT DEFINED"
40200 GOTO 400
40300 F=P(T)
40400 GOTO 34100
40500 IF X$="STCLASS" GOTO 34100
40600 IF X$<>"UBIN" GOTO 40900
40700 T2=6
40800 GOTO 41100
40900 IF X$<>"SBIN" GOTO 42700
41000 T2=7
41100 S0=1
41200 GOSUB 4300
41300 IF T<>9 GOTO 41700
41400 GOSUB 13300
41500 IF E7=1 GOTO 400
41600 GOTO 34100
41700 S0=36
41800 REM  DEFAULT IS 'WORD'.
41900 IF T<>1 GOTO 42700
42000 IF X$<>"HALF" GOTO 42300
42100 S0=18
42200 GOTO 34100
42300 IF X$="WORD" GOTO 34100
42400 IF X$<>"BYTE" GOTO 42700
42500 S0=9
42600 GOTO 34100
42700 REM ** END OF ATTRIBUTE: HAVE NEXT TOKEN.
42800 IF T=12 GOTO 34100
42900 IF T<>1 GOTO 50300
43000 IF X$="INIT" GOTO 45600
43100 IF X$<>"UNAL" GOTO 43400
43200 A=0
43300 GOTO 34100
43400 IF X$="WALIGNED" GOTO 44200
43500 IF X$<>"CALIGNED" GOTO 43800
43600 A=3
43700 GOTO 34100
43800 IF X$<>"HALIGNED" GOTO 44100
43900 A=4
44000 GOTO 34100
44100 IF X$<>"ALIGNED" GOTO 44400
44200 A=1
44300 GOTO 34100
44400 IF X$<>"DALIGNED" GOTO 44700
44500 A=2
44600 GOTO 34100
44700 IF X$<>"CHARTEXT" GOTO 45100
44800 GOSUB 4300
44900 IF T<>10 GOTO 44800
45000 GOTO 34100
45100 IF X$<>"LAST" GOTO 45400
45200 T=20
45300 GOTO 50300
45400 PRINT "DON'T KNOW ATTRIBUTE ";X$
45500 GOTO 34100
45600 REM ** COUNT INITIAL VALUES.
45700 GOSUB 4300
45800 P9=1
45900 REM INIT PAREN COUNT.
46000 IF T=9 GOTO 46300
46100 PRINT "NOT ( AFTER INIT"
46200 GOTO 400
46300 GOSUB 4300
46400 IF I0=0 GOTO 49100
46500 IF T<>1 GOTO 47500
46600 FOR I=1 TO Y0
46700 REM LOOK UP NAME.
46800 IF X$<>Y$(I) GOTO 47200
46900 IF I(I0)<>0 GOTO 47300
47000 I(I0)=I
47100 GOTO 46300
47200 NEXT I
47300 M$(I0)=M$(I0)+X$
47400 GOTO 46300
47500 IF T<>8 GOTO 47800
47600 M$(I0)=M$(I0)+"."
47700 GOTO 46300
47800 IF T<>2 GOTO 48400
47900 K0=K0+1
48000 REM  COUNT+1 FOR INTEGER.
48100 I(I0)=Y0+1
48200 M$(I0)=M$(I0)+X$
48300 GOTO 46300
48400 IF T<>3 GOTO 49100
48500 I(I0)=Y0+2
48600 M$(I0)=M$(I0)+"'"+X$+"'"
48700 Q9=LEN(X$)
48800 K0=K0+Q9
48900 REM  COUNT+STRING LENGTH.
49000 GOTO 46300
49100 IF T<>9 GOTO 49500
49200 P9=P9+1
49300 REM COUNT PARENS.
49400 GOTO 46300
49500 IF T<>10 GOTO 49900
49600 P9=P9-1
49700 IF P9>0 GOTO 46300
49800 GOTO 34100
49900 IF T<>-1 GOTO 46300
50000 M$(I0)=M$(I0)+X$
50100 GOTO 46300
50200 REM
50300 REM ** KNOW LENGTH OF ITEM.
50400 IF T2>.5 GOTO 50600
50500 A=0
50600 GOSUB 87300
50700 IF I9=0 GOTO 51000
50800 S0=S0*I9
50900 GOTO 51200
51000 IF K0=0 GOTO 51200
51100 S0=S0*K0
51200 IF I0=0 GOTO 53100
51300 REM  STAR NAME CHECK.
51400 S0=S0*(Z0+1)
51500 REM CALC SIZE INCLUDING DIMS.
51600 S(I0)=S0
51700 REM SET SIZE.
51800 P(I0)=F
51900 REM SET LOC.
52000 L(I0)=L0
52100 REM SET LEVEL.
52200 Z(I0)=Z0
52300 REM SET DIM.
52400 G(I0)=T2
52500 REM SAVE TYPE.
52600 IF I(I0)<>0 GOTO 52900
52700 IF T2=3 THEN I(I0)=1
52800 IF T2=5 AND I9=72 THEN I(I0)=7
52900 B(I0)=I0
53000 REM SAVE IX.
53100 F=F+S0
53200 REM INC LOC.
53300 L8=L0
53400 REM SAVE LEVEL.
53500 REM ** NEXT TOKEN MUST BE , OR ;
53600 IF T=4 GOTO 30800
53700 IF T=5 GOTO 54400
53800 IF T<>20 GOTO 54200
53900 GOSUB 4300
54000 IF T<>12 GOTO 30900
54100 GOTO 54600
54200 PRINT "BAD END OF DCL LINE"
54300 GOTO 400
54400 REM SKIP % MEND ;
54500 GOSUB 4300
54600 GOSUB 4300
54700 GOSUB 4300
54800 L0=1
54900 GOSUB 81100
55000 REM
55100 REM ** PUT NAME LIST IN SORTED ORDER.
55200 D=INT((SQR(2*N0+.25)-.5)*.5+.5)
55300 J=N0
55400 K=1
55500 M=1
55600 K1=D+1
55700 L1=LEN(N$(K))
55800 L2=LEN(N$(K1))
55900 IF L1<L2 GOTO 59700
56000 IF L1>L2 GOTO 56200
56100 IF CMP(N$(K),N$(K1))<=0 GOTO 59700
56200 X$=N$(K)
56300 N$(K)=N$(K1)
56400 N$(K1)=X$
56500 T=S(K)
56600 S(K)=S(K1)
56700 S(K1)=T
56800 T=P(K)
56900 P(K)=P(K1)
57000 P(K1)=T
57100 T=Z(K)
57200 Z(K)=Z(K1)
57300 Z(K1)=T
57400 T=L(K)
57500 L(K)=L(K1)
57600 L(K1)=T
57700 T=I(K)
57800 I(K)=I(K1)
57900 I(K1)=T
58000 X$=M$(K)
58100 M$(K)=M$(K1)
58200 M$(K1)=X$
58300 T=G(K)
58400 G(K)=G(K1)
58500 G(K1)=T
58600 T=B(K)
58700 B(K)=B(K1)
58800 B(K1)=T
58900 T=Q(K)
59000 Q(K)=Q(K1)
59100 Q(K1)=T
59200 T=E(K)
59300 E(K)=E(K1)
59400 E(K1)=T
59500 M=K
59600 REM SAVE SWAP IX.
59700 K=K+1
59800 K1=K1+1
59900 IF K1<=J GOTO 55700
60000 IF D=1 GOTO 60300
60100 D=D-1
60200 GOTO 55400
60300 J=M
60400 IF J>1 GOTO 55400
60500 REM ** ALL SORTED!
60600 REM ** ADJUST INTER-STRUCTURE POINTERS.
60700 FOR I=1 TO N0
60800 E0=0
60900 L0=0
61000 B0=0
61050 IF L(I)=1 THEN X0=I-1
61100 FOR J=1 TO N0
61200 IF B(J)=I THEN B0=J
61400 IF E(J)=I THEN E0=J
61600 IF Q(J)=I THEN L0=J
61800 NEXT J
61900 IF E0<>0 THEN E(E0)=-B0
62100 IF L0<>0 THEN Q(L0)=-B0
62300 NEXT I
62310 E$=SST$(F$,3,2)
62320 IF E$<>"T_" AND E$<>"P_" THEN V0=1
62400 K0=0
62500 M1=0
62600 REM ** LOCATE PARAMETER USE IN DCL.
62700 FOR I=1 TO V0
62750 IF T(I)>=100 GOTO 66200
62800 M=0
62900 FOR J=1 TO N0
63000 IF V$(I)<>M$(J) GOTO 64500
63100 M=1
63200 IF J(I)>0 GOTO 64100
63300 K0=K0+1
63400 J(I)=K0
63500 K=K0
63600 K(K)=0
64100 K(K)=K(K)+1
64200 K0=K0+1
64300 K(K0)=J
64400 A(J)=I
64500 NEXT J
64600 IF M=1 GOTO 66200
64700 IF T(I)>=100 GOTO 66200
64800 IF V$(I)="STCLASS" OR V$(I)="VECTOR" GOTO 65900
64900 T1=LEN(V$(I))
65000 REM FIND A MATCHING FPT ITEM
65100 FOR J=1 TO N0
65200 IF T1>LEN(N$(J)) GOTO 65700
65300 IF T1<LEN(N$(J))-1 GOTO 65700
65400 IF V$(I)<>SST$(N$(J),1,T1) GOTO 65700
65401 IF L(J)=1 GOTO 65900
65500 M$(J)=V$(I)
65600 GOTO 62800
65700 NEXT J
65800 PRINT "Option name '";V$(I);"' not used ... deleted"
65900 V$(I)="_______________________________________________________________"
66000 M1=M1+1
66100 REM COUNT UNUSED.
66200 NEXT I
66300 REM ** SET DEFAULT PARAMETER ASSOCIATIONS.
66400 M=0
66500 FOR I=V0 TO 1 STEP -1
66600 IF T(I)<100 GOTO 66900
66700 J(I)=M
66800 GOTO 68600
66900 M=J(I)
67000 IF M<=0 GOTO 68600
67100 O6=K(M)
67200 REM  GET # INITS.
67300 IF O6<.5 GOTO 68600
67400 O8=1
67500 O7=K(M+O8)
67600 REM  GET INITED FIELD IX.
67700 IF S(O7)>2.5 GOTO 68600
67800 IF I(O7)>.5 GOTO 68600
67900 O8=O8+1
68000 IF O8<=O6+.5 GOTO 67500
68100 REM * OPTION INITIALIZES 1 OR 2 BIT FIELD ONLY BY NAME.
68200 T(I)=14
68300 REM  MAKE DEFAULT BINARY
68400 C$(I)="1"
68500 REM  YES.
68600 NEXT I
68700 REM ** SORT VALUE VECTOR BY NAME.
68800 FOR I=1 TO V0
68900 B(I)=I
69000 NEXT I
69100 D=INT((SQR(2*V0+.25)-.5)*.5+.5)
69200 P9=V0
69300 I=1
69400 M=1
69500 I1=D+1
69600 L1=LEN(V$(I))
69700 L2=LEN(V$(I1))
69800 IF L1>L2 GOTO 70100
69900 IF L1<L2 GOTO 71700
70000 IF CMP(V$(I),V$(I1))<=0 GOTO 71700
70100 X$=V$(I)
70200 V$(I)=V$(I1)
70300 V$(I1)=X$
70400 T=B(I)
70500 B(I)=B(I1)
70600 B(I1)=T
70700 X$=C$(I)
70800 C$(I)=C$(I1)
70900 C$(I1)=X$
71000 T=T(I)
71100 T(I)=T(I1)
71200 T(I1)=T
71300 T=J(I)
71400 J(I)=J(I1)
71500 J(I1)=T
71600 M=I
71700 I=I+1
71800 I1=I1+1
71900 IF I1<=P9 GOTO 69600
72000 IF D=1 GOTO 72300
72100 D=D-1
72200 GOTO 69300
72300 P9=M
72400 IF P9>1 GOTO 69300
72500 V0=V0-M1
72550 M1=0
72560 V$(V0+1)="_"
72600 FOR I=1 TO V0
72610 IF V$(I)<>V$(I+1) OR T(I)<>T(I+1) GOTO 72680
72620 J(I)=-1
72630 J(I+1)=0
72640 GOTO 72700
72680 M1=M1+1
72690 IF M1=I GOTO 72700
72691 V$(M1)=V$(I)
72692 T(M1)=T(I)
72693 J(M1)=J(I)
72694 C$(M1)=C$(I)
72700 FOR J=1 TO N0
72800 IF B(I)=A(J) THEN A(J)=-M1
73000 NEXT J
73100 NEXT I
73110 V0=M1
73120 IF V8<O9 GOTO 73200
73130 PRINT# 3,"END;"
73140 PRINT# 3,"%EOD;"
73150 PRINT# 3,"FILER_FPT_INFO";SST$(STR$(O9/500),2);": PROC;"
73160 PRINT# 3,"%INCLUDE CP_6;"
73165 PRINT "========= New Compile Unit Started."
73170 O9=O9+500
73200 E$="_F"
73210 GOSUB 90000
73220 REM ** OUTPUT REST OF FPT INFORMATION.
73230 H$="3 *  SBIN HALF UNAL  INIT("
73240 PRINT# 3,"DCL 1 ";F$;"_FPT_INFO CONSTANT,"
73250 E$=","
73260 I8=0
73270 REM ; "...WRITING FPT INFO TABLE"
73280 FOR I=1 TO N0
73290 PRINT# 3," 2 *(0:7)SBIN HALF UNAL INIT(";
73300 PRINT# 3,SST$(STR$(P(I)),2);E$;
73310 PRINT# 3,SST$(STR$(S(I)),2);E$;
73320 X$=STR$(-Q(I)-1)
73330 IF SST$(X$,1,1)=" " THEN X$=SST$(X$,2)
73340 PRINT# 3,X$;E$;
73350 X$=STR$(-E(I)-1)
73360 IF SST$(X$,1,1)=" " THEN X$=SST$(X$,2)
73370 PRINT# 3,X$;E$;
73380 PRINT# 3,SST$(STR$(Z(I)),2);E$;
73390 PRINT# 3,SST$(STR$(I(I)),2);E$;
73400 X$=STR$(-A(I)-1)
73410 IF SST$(X$,1,1)=" " THEN X$=SST$(X$,2)
73420 PRINT# 3,X$;E$;
73430 IF I=N0 THEN E$=";"
73440 PRINT# 3,SST$(STR$(G(I)),2);")";E$
73450 NEXT I
73460 IF V0=0 GOTO 76900
73470 PRINT# 3,"%";F$;" (FPTN=";F$;"_FPT, STCLASS=CONSTANT);"
73480 E$="_O"
73490 MAT N$=V$
73500 N0=V0
73510 X0=0
73520 GOSUB 90000
73530 REM ** WRITE OUT OPTION INFO.
73540 PRINT# 3,"DCL 1 ";F$;"_OPT_INFO CONSTANT,"
73550 E$=","
73560 REM ; "...WRITING OPT INFO TABLE"
73570 FOR I=1 TO V0
73580 H$="2 *(0:1) SBIN HALF UNAL INIT(%(512*"+SST$(STR$(T(I)),2)+"+"
73590 X$=STR$(J(I)-1)
73600 IF SST$(X$,1,1)=" " THEN X$=SST$(X$,2)
73610 H$=H$+SST$(STR$(LEN(C$(I))),2)+"),"
73620 PRINT# 3,H$+X$+"),";
73630 IF I=V0 THEN E$=";"
73640 ON MOD(T(I),10)+1 GOTO 73650,73650,73670,73690,73730,73750
73650 PRINT# 3,"2 * SBIN UNAL INIT(0)";E$
73660 GOTO 73770
73670 PRINT# 3,"2 * SBIN UNAL INIT(";C$(I);")";E$
73680 GOTO 73770
73690 X$=C$(I)+"    "
73700 X$=SST$(X$,1,4)
73710 PRINT# 3,"2 * CHAR(4) INIT('";X$;"')";E$
73720 GOTO 73770
73730 PRINT# 3,"2 * BIT(36) INIT('";C$(I);"'B)";E$
73740 GOTO 73770
73750 PRINT# 3,"2 * BIT(36) INIT('";C$(I);"'O)";E$
73760 GOTO 73770
73770 NEXT I
73780 REM ; "...WRITING OPT USAGE VECTOR"
73790 H$=STR$(K0-1)
73800 H$="2 * (0:"+SST$(H$,2)+") SBIN HALF UNAL INIT("
73810 B1=-1
73820 PRINT# 3,"DCL 1 ";F$;"_FPT_USAGE CONSTANT,"
73830 K1=0
73840 FOR I=1 TO K0
73850 X=LEN(H$)
73860 K1=K1-1
73870 IF K1<0 GOTO 73900
73880 X$=STR$(K(I)-1)
73890 GOTO 73920
73900 K1=K(I)
73910 X$=STR$(K1)
73920 REM
73930 IF SST$(X$,1,1)=" " THEN X$=SST$(X$,2)
73940 IF X+5<=110 GOTO 73970
73950 PRINT# 3,H$
73960 H$=""
73970 H$=H$+X$+","
73980 B1=B1+1
73990 NEXT I
74000 X=LEN(H$)
74010 PRINT# 3,SST$(H$,1,X-1);");"
76900 PRINT# 4,"_";F$
77400 V0=0
77500 N0=0
77600 MAT L=ZER
77700 MAT Z=ZER
77800 MAT S=ZER
77900 MAT P=ZER
78000 MAT A=ZER
78100 MAT I=ZER
78200 MAT G=ZER
78300 MAT J=ZER
78400 MAT K=ZER
78500 MAT E=ZER
78600 MAT B=ZER
78700 MAT Q=ZER
78800 MAT T=ZER
78850 CLEAR STRING ARRAYS N$,V$
78900 GOTO 15800
79000 REM ** PARSE DIMENSIONS ( <INT> : <INT> ).
79100 GOSUB 4300
79200 IF T=2 GOTO 79500
79300 PRINT "DIM NOT ( <INT>"
79400 GOTO 400
79500 GOSUB 4300
79600 IF T=7 GOTO 79900
79700 PRINT "DIM NOT (<INT>:"
79800 GOTO 400
79900 GOSUB 4300
80000 IF T=2 GOTO 80400
80100 REM GOSUB 180
80200 REM PRINT "DIM NOT (<INT>:<INT>--ASSUMED 0"
80300 X$="0"
80400 Z0=VAL(X$)
80500 REM SAVE DIMENSION
80600 GOSUB 4300
80700 IF T=10 GOTO 34100
80800 GOSUB 800
80900 PRINT "DIM NOT (<INT>:<INT>)"
81000 GOTO 80600
81100 REM ** SUM UP SIZES OF LOWER LEVELS.
81200 L5=0
81300 I2=N0+1
81400 IF N0<=1 THEN RETURN
81500 REM  GET IX OF LAST ITEM.
81600 I2=I2-1
81700 REM GET IX OF PREVIOUS ITEM.
81800 IF L(I2)>L8 GOTO 81600
81900 IF L(I2)<L8 GOTO 82400
82000 E(I2)=L5
82100 REM SAVE IX OF PREVIOUS AT SAME LEV.
82200 L5=I2
82300 GOTO 81600
82400 S(I2)=(F-P(I2))*(Z(I2)+1)
82500 REM CALC SIZE.
82600 Q(I2)=L5
82700 REM SAVE IX TO LOWER LEV.
82800 L5=I2
82900 F=P(I2)+S(I2)
83000 REM  MOVE POINTER.
83100 IF L(I2)<=L0 THEN RETURN
83200 L8=L(I2)
83300 REM MORE LEVELS TO DO.
83400 GOTO 81600
83500 REM ** INITIALIZE.
83600 DIM V$(901),C$(900),T(900)
83700 REM NOTE V$(901) USED IN SPECIAL WAY!
83800 REM  V$-NAMES,C$-VALUE,T-TYPE
83900 DIM J(900),K(1000)
84000 REM  J = PTR TO K, K=DCL LIST
84100 V0=0
84200 REM VALUE TABLE LENGTH.
84300 DIM N$(900),L(900),Z(900),S(900),P(900),A(900)
84400 REM  N$-NAMES,L-LEVEL,Z-DIM,S-SIZE,P-POSITION
84500 REM  A=ASSOCIATED PARAMETER
84600 DIM M$(900),I(900),G(900),E(900),B(900),Q(900)
84700 REM  M$ = VALUE, I=VALUE TYPE (INIT FCN)
84800 REM  T=TYPE, E=LINK TO EVEN LEV, B =SEQ, Q=LINK TO LOWER
84900 DIM Y$(15)
85000 REM Y$ also used as temporary strings.
85100 Y$(1)="ADDR"
85200 Y$(2)="SIZEB"
85300 Y$(3)="SIZEC"
85400 Y$(4)="SIZEV"
85500 Y$(5)="SIZEW"
85600 Y$(6)="DCBNUM"
85700 Y$(7)="VECTOR"
85800 Y$(8)="LENGTHB"
85900 Y$(9)="LENGTHC"
86000 Y$(10)="LENGTHV"
86100 Y$(11)="LENGTHW"
86200 Y0=11
86300 N0=0
86400 REM SYMBOL TABLE LENGTH.
86500 GOSUB 1200
86600 GOSUB 9900
86700 RETURN
86800 REM ** ASSIGN ID VALUE TO NAME.
86900 N0=N0+1
87000 N$(N0)=X$
87100 I0=N0
87050 M$(N0)=""
87200 RETURN
87300 REM ** ALIGN BIT POINTER.
87400 REM A=-1:DEFAULT, 0:UNAL, 1:ALIGN, 2:DALIGN, 3:CALIGN, 4:HALIGN
87500 IF A<>0 GOTO 88000
87600 IF T2<>4 THEN RETURN
87700 A=A0
87800 REM UNAL CHAR ALIGN 9
87900 GOTO 89200
88000 IF A<>-1 GOTO 88400
88100 A=A0
88200 REM  USE DEFAULT IF NONE SPECIFIED.
88300 GOTO 89200
88400 IF A<>3 GOTO 88700
88500 A=9
88600 GOTO 89100
88700 IF A<>4 GOTO 89000
88800 A=18
88900 GOTO 89100
89000 A=A*36
89100 REM ALIGN TO WORD, DWORD, OR CHAR.
89200 F1=F/A
89300 F2=INT(F1+.0000001)
89400 F3=INT(A*(F1-F2+.0000001))
89500 REM REMAINDER IS # BITS.
89600 IF INT(F3+.0000001)=0 THEN RETURN
89700 F4=A-F3
89800 F=F+F4
89900 RETURN
90000 REM ** WRITE FPT NAME TABLES ***
90100 PRINT# 3,"DCL 1 ";F$;E$;"PTPTR_TBL CONSTANT SYMDEF,"
90200 PRINT# 3,"2 * PTR INIT(ADDR(";F$;E$;"PTNAM_TBL)),"
90300 PRINT# 3,"2 * PTR INIT(ADDR(";F$;E$;"PTNAM_LIX)),"
90400 PRINT# 3,"2 * PTR INIT(ADDR(";F$;E$;"PTNAM_IX)),"
90500 PRINT# 3,"2 * PTR INIT(ADDR(";F$;E$;"PTNAM_CONT)),"
90600 PRINT# 3,"2 *(0:1) SBIN HALF UNAL INIT(";SST$(STR$(N0),2);",";
90700 PRINT# 3,SST$(STR$(X0),2);"),"
90800 X$=F$+"_FPT"
90900 IF V0=0 THEN X$="NIL"
91000 IF E$="_F" THEN PRINT# 3,"2 * PTR INIT(ADDR(";X$;")),"
91100 PRINT# 3,"2 * PTR INIT(ADDR(";F$;E$;"PT_INFO)),"
91200 IF V0>0 THEN X$=F$+"_OPTPTR_TBL"
91300 IF E$="_O" THEN X$=F$+"_FPT_USAGE"
91400 PRINT# 3,"2 * PTR INIT(ADDR(";X$;"));"
91500 PRINT# 3,"DCL 1 ";F$;E$;"PTNAM_TBL(0:";SST$(STR$(N0-1),2);") CHAR(4) CONSTANT INIT("
91600 B1=1
91700 PRINT "...WRITING ";SST$(E$,2);"PT NAME TABLE";N0;" ENTRIES"
91800 FOR I=1 TO N0
91900 H$=N$(I)
92000 L=LEN(H$)
92100 IF L>4 GOTO 92400
92200 B(I)=0
92300 GOTO 92700
92400 B(I)=B1
92500 B1=B1+L-4
92600 H$=SST$(H$,1,4)
92700 H$="'"+H$+"'"
92800 IF I<N0 THEN H$=H$+","
92900 PRINT# 3,H$;
93000 NEXT I
93100 PRINT# 3,");"
93200 L1=LEN(N$(N0))
93300 PRINT# 3,"DCL 1 ";F$;E$;"PTNAM_LIX(0:";SST$(STR$(L1+1),2);") CONSTANT";
93400 PRINT# 3," SBIN HALF UNAL INIT(";SST$(STR$(L1),2);",";
93500 K=1
93600 REM ; "...WRITING FPT LIX TABLE"
93700 FOR I=1 TO N0
93800 L2=LEN(N$(I))
93900 IF L2<K GOTO 94500
94000 H$=STR$(I-1)
94100 IF I>0 THEN H$=SST$(H$,2)
94200 PRINT# 3,H$;",";
94300 K=K+1
94400 IF K<=L2 GOTO 93900
94500 NEXT I
94600 PRINT# 3,SST$(STR$(N0),2);");"
94700 PRINT# 3,"DCL 1 ";F$;E$;"PTNAM_IX(0:";SST$(STR$(N0-1),2);") SBIN HALF UNAL CONSTANT INIT("
94800 REM ; "...WRITING FPT IX TABLE"
94900 FOR I=1 TO N0
95000 H$=STR$(B(I)-1)
95100 IF SST$(H$,1,1)=" " THEN H$=SST$(H$,2)
95200 IF I<N0 THEN H$=H$+","
95300 PRINT# 3,H$;
95400 NEXT I
95500 PRINT# 3,");"
95600 PRINT# 3,"DCL 1 ";F$;E$;"PTNAM_CONT CONSTANT,"
95700 B1=B1-1
95800 H$=" 2 * CHAR(0) UNAL INIT('"
95900 IF B1>0 GOTO 96300
96000 REM ; "...MINIMAL FPT CONT TABLE"
96100 H$=H$+" "
96200 GOTO 97200
96300 REM ; "...WRITING FPT CONT TABLE"
96400 FOR I=1 TO N0
96500 L=LEN(N$(I))-4
96600 IF L<1 GOTO 97100
96700 IF LEN(H$)+L<=110 GOTO 97000
96800 PRINT# 3,H$+"'),"
96900 H$=" 2 * CHAR(0) UNAL INIT('"
97000 H$=H$+SST$(N$(I),5,L)
97100 NEXT I
97200 PRINT# 3,H$+"');"
97300 RETURN
97400 END
