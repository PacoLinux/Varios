VERSION E05

PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:1    
        1        1        /*M*    VEX$PARSE_STRING - TURN PARSE INPUT INTO ENCODED STRING FOR EDIT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$PARSE_STRING: PROC(P$,STR$) ALTRET;
        9        9        /**/
       10       10        /*F*     NAME:     VEX$PARSE_STRING
       11       11                 PURPOSE:  TO CONVERT THE  PARSE BLOCKS DESCRIBING A STRING
       12       12                           TO AN SSE_PARAM DESCRIBING THE SAME STRING.  */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$PARSE_STRING
       15       15                 PARAMETERS: P$ - POINTER TO FIRST PARSE BLOCK DESCRIBING THE
       16       16                                STRING.
       17       17                           STR$ - POINTER TO THE SSE_PARAM TO BE FILLED IN
       18       18                 DESCRIPTION: A STRING MAY TAKE ONE OF TWO FORMS, EITHER A SLASH
       19       19                           DELIMITED TEXT STRING OR A SERIES OF OCTAL NUMBERS
       20       20                           PRECEDED BY A NUMBER SIGN (#). IF THE STRING IS A
       21       21                           SLASHSTRING THEN THE TEXT POINTED TO BY THE PARSE
       22       22                           BLOCKS IS MOVED TO THE LOCATION POINTED TO BY
       23       23                           STR_TEXT$ IN THE PAGE RESERVED FOR TEXT. THE POINTER IN
       24       24                           SSE_PARAM IS THEN SET TO POINT TO THE TEXT AND A
       25       25                           NORMAL RETURN IS MADE.
       26       26                             IF THE STRING IS A SERIES OF OCTAL NUMBERS
       27       27                           THEN THE INPUT TEXT IS CONVERTED TO OCTAL BYTES WHICH
       28       28                           ARE PLACED IN THE TEXT PAGE AT THE LOCATION POINTED
       29       29                           TO BY STR_TEXT$. THE POINTER IN SSE_PARAM IS SET TO
       30       30                           POINT TO THIS TEXT STRING AND A NORMAL RETURN IS MADE.
       31       31                           VEX$PARSE_STRING WILL ONLY ALTRETURN IF THERE ARE LESS
       32       32                           OCTAL CHARACTERS THAN THE COUNT SAID THERE WERE.  */
       33       33        /**/
       34       34        /**********************************************************************/
       35       35        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       36       36        /**********************************************************************/
       37       37    1   DCL P$ PTR;                             /* POINTER TO PARSE BLOCKS            */
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:2    
       38       38    1   DCL STR$ PTR;                           /* POINTER TO SSE$PARAM               */
       39       39        /**/
       40       40        /*****************************************************************/
       41       41        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       42       42        /*****************************************************************/
       43       43    1   DCL BLK$ PTR;                           /* POINTS TO PARSE BLOCKS             */
       44       44    1   DCL TEMP$ PTR;                          /* ALSO POINTS TO BLOCKS              */
       45       45    1   DCL TEMP1$ PTR;
       46       46    1   DCL STR_PARAM$ PTR;
       47       47    1   DCL XXX UBIN(36);                       /* OCTAL CHARACTER                    */
       48       48    1   DCL I UBIN(36);
       49       49    1   DCL J UBIN WORD;
       50       50        /**/
       51       51        /**********************************************************************/
       52       52        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       53       53        /**********************************************************************/
       54       54    1   DCL 1 STR$BUF BASED ALIGNED,
       55       55    1         2 COUNT UBIN(9) UNAL,
       56       56    1         2 TEXT CHAR(255) UNAL,
       57       57    1         2 TEXTARRAY(0:254) REDEF TEXT CHAR(1) UNAL;
       58       58        /**/
       59       59    1   DCL 1 STR$PARAM BASED ALIGNED,
       60       60    1         2 COUNT UBIN WORD UNAL,
       61       61    1         2 STR(0:0),
       62       62    1           3 QM BIT(1) UNAL,
       63       63    1           3 * BIT(17) UNAL,
       64       64    1           3 QMCOUNT UBIN HALF UNAL,
       65       65    1           3 PTR$ PTR UNAL;
       66       66        %INCLUDE VE_SUBS_C;
       67      260        %INCLUDE XU_MACRO_C;
       68     3366        %INCLUDE XU_SUBS_C;
       69     3458        %PARSE$OUT (STCLASS = BASED);
       70     3503    1   DCL 1 SSE$PARAM BASED ALIGNED,          /*SSE TABLE ENTRY                     */
       71     3504    1         2 FLAGS,
       72     3505    1           3 CLMNFLAG BIT(1) UNAL,                      /* IF TRUE NEXT WORD IS CLMN#
       73     3506                                                                   ELSE PTR$ */
       74     3507    1           3 NOTFLAG BIT(1) UNAL,          /* LOG. OP. IS NOT                    */
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:3    
       75     3508    1           3 ANDFLAG BIT(1) UNAL,          /* LOG. OP. IS AND                    */
       76     3509    1           3 ORFLAG BIT(1) UNAL,           /* LOG. OP. IS OR                     */
       77     3510    1           3 EORFLAG BIT(1) UNAL,          /* LOG. OP. IS EOR*/
       78     3511    1           3 * BIT(13) UNAL,
       79     3512    1         2 J SBIN HALF UNAL,               /* OCCURANCE NUMBER                   */
       80     3513    1         2 PTR$ PTR UNAL;                  /* POINTER TO STRING                  */
       81     3514        /**/
       82     3515        /*****************************************************************/
       83     3516        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       84     3517        /*****************************************************************/
       85     3518    1   DCL STR_TEXT$ PTR SYMREF;               /* TEXT SEG. POINTER                  */
       86     3519        /**/
       87     3520    1   DCL VEX$STR_TEXT_INCR ENTRY(1) ALTRET;
       88     3521        %EJECT;
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:4    
       89     3522        /*****************************************************************************/
       90     3523        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       91     3524        /*****************************************************************************/
       92     3525    1           BLK$ = P$;
       93     3526    1           STR$ -> SSE$PARAM.FLAGS.CLMNFLAG = FALSE; /* CLEAR CLMN FLAG          */
       94     3527        /**/
       95     3528    1           STR_TEXT$ -> STR$PARAM.COUNT = BLK$ -> OUT$BLK.NSUBLKS;
       96     3529        /**/
       97     3530    1           STR_PARAM$ = STR_TEXT$;
       98     3531    1           STR$ -> SSE$PARAM.PTR$ = STR_PARAM$;
       99     3532    1           CALL VEX$STR_TEXT_INCR(SIZEW(STR$PARAM.COUNT)+
      100     3533    1             (SIZEW(STR$PARAM.STR(0))*STR_PARAM$->STR$PARAM.COUNT))
      101     3534    1             ALTRET (PS_ALTRET);
      102     3535        /**/
      103     3536    2           DO I = 0 TO STR_PARAM$ -> STR$PARAM.COUNT - 1; /* ALL STRINGS         */
      104     3537    2              TEMP$ = BLK$ -> OUT$BLK.SUBLK$(I);
      105     3538        /**/
      106     3539    3              IF (TEMP$ -> OUT$BLK.CODE = PC_TEXTSTRING) THEN DO; /* TEXT NOT ?  */
      107     3540    3                 TEMP$ = TEMP$ -> OUT$BLK.SUBLK$(0);
      108     3541    3                 STR_PARAM$ -> STR$PARAM.STR.QM(I) = FALSE;
      109     3542    4                 IF (TEMP$ -> OUT$BLK.CODE = PC_SLSTRING) THEN DO;
      110     3543    4                    STR_TEXT$ -> STR$BUF = TEMP$ -> OUT$BLK.SUBLK$(0) ->
      111     3544    4                      OUT$BLK.SUBLK$(0) -> STR$BUF;
      112     3545    4                    END;
      113     3546        /**/
      114     3547    4                 ELSE DO;                  /* #XXX                               */
      115     3548    4                    STR_TEXT$ -> STR$BUF.COUNT = TEMP$ -> OUT$BLK.NSUBLKS;
      116     3549    5                    DO J = 0 TO TEMP$ -> OUT$BLK.NSUBLKS-1;
      117     3550    5                       IF (TEMP$ -> OUT$BLK.SUBLK$(J) = ADDR(NIL)) THEN ALTRETURN;
      118     3551    5                       TEMP1$ = TEMP$ -> OUT$BLK.SUBLK$(J);
      119     3552    5                       XXX = ((TEMP1$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.CODE -
              3552                                PC_OCTOFFSET) * 64) +
      120     3553    5                         ((TEMP1$ -> OUT$BLK.SUBLK$(1) -> OUT$BLK.CODE - PC_OCTOFFSET)
              3553                                  * 8) +
      121     3554    5                         ((TEMP1$ -> OUT$BLK.SUBLK$(2) -> OUT$BLK.CODE - PC_OCTOFFSET))
              3554                                  ;
      122     3555    5                       STR_TEXT$ -> STR$BUF.TEXTARRAY(J) = BINASC(XXX);
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:5    
      123     3556    5                       END;
      124     3557    4                    END;
      125     3558        /**/
      126     3559    3                 STR_PARAM$ -> STR$PARAM.STR.PTR$(I) = STR_TEXT$;
      127     3560    3                 CALL VEX$STR_TEXT_INCR((STR_TEXT$ -> STR$BUF.COUNT+4)/4)
      128     3561    3                   ALTRET(PS_ALTRET);
      129     3562    3                 END;
      130     3563        /**/
      131     3564    3              ELSE DO;                     /* QUESTION MARK                      */
      132     3565    3                 STR_PARAM$ -> STR$PARAM.STR.QMCOUNT(I) = 0;
      133     3566    3                 STR_PARAM$ -> STR$PARAM.STR.QM(I) = TRUE;
      134     3567    4                 IF (TEMP$ -> OUT$BLK.NSUBLKS ~= 0) THEN DO; /* COUNT SPECIFIED  */
      135     3568    4                    TEMP$ = TEMP$ -> OUT$BLK.SUBLK$(0);
      136     3569    4                    CALL CHARBIN(XXX,SUBSTR(TEMP$ -> OUT$BLK.SUBLK$(0) ->
      137     3570    4                      STR$BUF.TEXT,0,TEMP$ -> OUT$BLK.SUBLK$(0) ->STR$BUF.COUNT));
      138     3571    4                    STR_PARAM$ -> STR$PARAM.STR.QMCOUNT(I) = XXX;
      139     3572    4                    END;
      140     3573    3                 END;
      141     3574    2              END;
      142     3575        /**/
      143     3576    1           RETURN;
      144     3577        /**/
      145     3578    1   PS_ALTRET:
      146     3579    1           ALTRETURN;
      147     3580    1   END;

PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:6    
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$PARSE_STRING.

   Procedure VEX$PARSE_STRING requires 156 words for executable code.
   Procedure VEX$PARSE_STRING requires 16 words of local(AUTO) storage.

    No errors detected in file VEX$PARSE_STRING.:E05TSI    .

PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:7    

 Object Unit name= VEX$PARSE_STRING                           File name= VEX$PARSE_STRING.:E05TOU
 UTS= JUL 30 '97 07:15:03.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   156    234  VEX$PARSE_STRING
    1  RoData even  none     2      2  VEX$PARSE_STRING

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  VEX$PARSE_STRING

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 VEX$STR_TEXT_INCR
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     STR_TEXT$                             B_VECTNIL
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:8    


        1        1        /*M*    VEX$PARSE_STRING - TURN PARSE INPUT INTO ENCODED STRING FOR EDIT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*/
        8        8        VEX$PARSE_STRING: PROC(P$,STR$) ALTRET;

      8  0 000000   000000 700200 xent  VEX$PARSE_S* TSX0  ! X66_AUTO_2
         0 000001   000020 000002                    ZERO    16,2

        9        9        /**/
       10       10        /*F*     NAME:     VEX$PARSE_STRING
       11       11                 PURPOSE:  TO CONVERT THE  PARSE BLOCKS DESCRIBING A STRING
       12       12                           TO AN SSE_PARAM DESCRIBING THE SAME STRING.  */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$PARSE_STRING
       15       15                 PARAMETERS: P$ - POINTER TO FIRST PARSE BLOCK DESCRIBING THE
       16       16                                STRING.
       17       17                           STR$ - POINTER TO THE SSE_PARAM TO BE FILLED IN
       18       18                 DESCRIPTION: A STRING MAY TAKE ONE OF TWO FORMS, EITHER A SLASH
       19       19                           DELIMITED TEXT STRING OR A SERIES OF OCTAL NUMBERS
       20       20                           PRECEDED BY A NUMBER SIGN (#). IF THE STRING IS A
       21       21                           SLASHSTRING THEN THE TEXT POINTED TO BY THE PARSE
       22       22                           BLOCKS IS MOVED TO THE LOCATION POINTED TO BY
       23       23                           STR_TEXT$ IN THE PAGE RESERVED FOR TEXT. THE POINTER IN
       24       24                           SSE_PARAM IS THEN SET TO POINT TO THE TEXT AND A
       25       25                           NORMAL RETURN IS MADE.
       26       26                             IF THE STRING IS A SERIES OF OCTAL NUMBERS
       27       27                           THEN THE INPUT TEXT IS CONVERTED TO OCTAL BYTES WHICH
       28       28                           ARE PLACED IN THE TEXT PAGE AT THE LOCATION POINTED
       29       29                           TO BY STR_TEXT$. THE POINTER IN SSE_PARAM IS SET TO
       30       30                           POINT TO THIS TEXT STRING AND A NORMAL RETURN IS MADE.
       31       31                           VEX$PARSE_STRING WILL ONLY ALTRETURN IF THERE ARE LESS
       32       32                           OCTAL CHARACTERS THAN THE COUNT SAID THERE WERE.  */
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:9    
       33       33        /**/
       34       34        /**********************************************************************/
       35       35        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       36       36        /**********************************************************************/
       37       37    1   DCL P$ PTR;                             /* POINTER TO PARSE BLOCKS            */
       38       38    1   DCL STR$ PTR;                           /* POINTER TO SSE$PARAM               */
       39       39        /**/
       40       40        /*****************************************************************/
       41       41        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       42       42        /*****************************************************************/
       43       43    1   DCL BLK$ PTR;                           /* POINTS TO PARSE BLOCKS             */
       44       44    1   DCL TEMP$ PTR;                          /* ALSO POINTS TO BLOCKS              */
       45       45    1   DCL TEMP1$ PTR;
       46       46    1   DCL STR_PARAM$ PTR;
       47       47    1   DCL XXX UBIN(36);                       /* OCTAL CHARACTER                    */
       48       48    1   DCL I UBIN(36);
       49       49    1   DCL J UBIN WORD;
       50       50        /**/
       51       51        /**********************************************************************/
       52       52        /*   BASED DATA   BASED DATA   BASED DATA   BASED DATA   BASED DATA   */
       53       53        /**********************************************************************/
       54       54    1   DCL 1 STR$BUF BASED ALIGNED,
       55       55    1         2 COUNT UBIN(9) UNAL,
       56       56    1         2 TEXT CHAR(255) UNAL,
       57       57    1         2 TEXTARRAY(0:254) REDEF TEXT CHAR(1) UNAL;
       58       58        /**/
       59       59    1   DCL 1 STR$PARAM BASED ALIGNED,
       60       60    1         2 COUNT UBIN WORD UNAL,
       61       61    1         2 STR(0:0),
       62       62    1           3 QM BIT(1) UNAL,
       63       63    1           3 * BIT(17) UNAL,
       64       64    1           3 QMCOUNT UBIN HALF UNAL,
       65       65    1           3 PTR$ PTR UNAL;
       66       66        %INCLUDE VE_SUBS_C;
       67      260        %INCLUDE XU_MACRO_C;
       68     3366        %INCLUDE XU_SUBS_C;
       69     3458        %PARSE$OUT (STCLASS = BASED);
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:10   
       70     3503    1   DCL 1 SSE$PARAM BASED ALIGNED,          /*SSE TABLE ENTRY                     */
       71     3504    1         2 FLAGS,
       72     3505    1           3 CLMNFLAG BIT(1) UNAL,                      /* IF TRUE NEXT WORD IS CLMN#
       73     3506                                                                   ELSE PTR$ */
       74     3507    1           3 NOTFLAG BIT(1) UNAL,          /* LOG. OP. IS NOT                    */
       75     3508    1           3 ANDFLAG BIT(1) UNAL,          /* LOG. OP. IS AND                    */
       76     3509    1           3 ORFLAG BIT(1) UNAL,           /* LOG. OP. IS OR                     */
       77     3510    1           3 EORFLAG BIT(1) UNAL,          /* LOG. OP. IS EOR*/
       78     3511    1           3 * BIT(13) UNAL,
       79     3512    1         2 J SBIN HALF UNAL,               /* OCCURANCE NUMBER                   */
       80     3513    1         2 PTR$ PTR UNAL;                  /* POINTER TO STRING                  */
       81     3514        /**/
       82     3515        /*****************************************************************/
       83     3516        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
       84     3517        /*****************************************************************/
       85     3518    1   DCL STR_TEXT$ PTR SYMREF;               /* TEXT SEG. POINTER                  */
       86     3519        /**/
       87     3520    1   DCL VEX$STR_TEXT_INCR ENTRY(1) ALTRET;
       88     3521        %EJECT;
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:11   
       89     3522        /*****************************************************************************/
       90     3523        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
       91     3524        /*****************************************************************************/
       92     3525    1           BLK$ = P$;

   3525  0 000002   200003 470500                    LDP0    @P$,,AUTO
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   200005 756100                    STQ     BLK$,,AUTO

       93     3526    1           STR$ -> SSE$PARAM.FLAGS.CLMNFLAG = FALSE; /* CLEAR CLMN FLAG          */

   3526  0 000005   200004 471500                    LDP1    @STR$,,AUTO
         0 000006   100000 473500                    LDP3    0,,PR1
         0 000007   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000010   300000 356100                    ANSQ    0,,PR3

       94     3527        /**/
       95     3528    1           STR_TEXT$ -> STR$PARAM.COUNT = BLK$ -> OUT$BLK.NSUBLKS;

   3528  0 000011   200005 473500                    LDP3    BLK$,,AUTO
         0 000012   300001 236100                    LDQ     1,,PR3
         0 000013   000022 772000                    QRL     18
         0 000014   000000 474400 xsym               LDP4    STR_TEXT$
         0 000015   400000 756100                    STQ     0,,PR4

       96     3529        /**/
       97     3530    1           STR_PARAM$ = STR_TEXT$;

   3530  0 000016   000000 236000 xsym               LDQ     STR_TEXT$
         0 000017   200010 756100                    STQ     STR_PARAM$,,AUTO

       98     3531    1           STR$ -> SSE$PARAM.PTR$ = STR_PARAM$;

   3531  0 000020   100000 474500                    LDP4    0,,PR1
         0 000021   400001 756100                    STQ     1,,PR4

       99     3532    1           CALL VEX$STR_TEXT_INCR(SIZEW(STR$PARAM.COUNT)+
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:12   

   3532  0 000022   200010 474500                    LDP4    STR_PARAM$,,AUTO
         0 000023   400000 235100                    LDA     0,,PR4
         0 000024   000001 735000                    ALS     1
         0 000025   000001 035007                    ADLA    1,DL
         0 000026   200014 755100                    STA     J+1,,AUTO
         0 000027   200014 635500                    EPPR5   J+1,,AUTO
         0 000030   200015 455500                    STP5    J+2,,AUTO
         0 000031   200015 630500                    EPPR0   J+2,,AUTO
         0 000032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000033   000000 701000 xent               TSX1    VEX$STR_TEXT_INCR
         0 000034   000233 702000 0                  TSX2    PS_ALTRET

      100     3533    1             (SIZEW(STR$PARAM.STR(0))*STR_PARAM$->STR$PARAM.COUNT))
      101     3534    1             ALTRET (PS_ALTRET);
      102     3535        /**/
      103     3536    2           DO I = 0 TO STR_PARAM$ -> STR$PARAM.COUNT - 1; /* ALL STRINGS         */

   3536  0 000035   200012 450100                    STZ     I,,AUTO
         0 000036   000226 710000 0                  TRA     s:3574+3

      104     3537    2              TEMP$ = BLK$ -> OUT$BLK.SUBLK$(I);

   3537  0 000037   200005 470500                    LDP0    BLK$,,AUTO
         0 000040   200012 720100                    LXL0    I,,AUTO
         0 000041   000003 236110                    LDQ     3,X0,PR0
         0 000042   200006 756100                    STQ     TEMP$,,AUTO

      105     3538        /**/
      106     3539    3              IF (TEMP$ -> OUT$BLK.CODE = PC_TEXTSTRING) THEN DO; /* TEXT NOT ?  */

   3539  0 000043   200006 471500                    LDP1    TEMP$,,AUTO
         0 000044   100000 721100                    LXL1    0,,PR1
         0 000045   000202 101003                    CMPX1   130,DU
         0 000046   000174 601000 0                  TNZ     s:3565

      107     3540    3                 TEMP$ = TEMP$ -> OUT$BLK.SUBLK$(0);
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:13   

   3540  0 000047   100003 236100                    LDQ     3,,PR1
         0 000050   200006 756100                    STQ     TEMP$,,AUTO

      108     3541    3                 STR_PARAM$ -> STR$PARAM.STR.QM(I) = FALSE;

   3541  0 000051   200012 235100                    LDA     I,,AUTO
         0 000052   000001 735000                    ALS     1
         0 000053   200010 471500                    LDP1    STR_PARAM$,,AUTO
         0 000054   000031 236000 xsym               LDQ     B_VECTNIL+25
         0 000055   100001 356105                    ANSQ    1,AL,PR1

      109     3542    4                 IF (TEMP$ -> OUT$BLK.CODE = PC_SLSTRING) THEN DO;

   3542  0 000056   200006 473500                    LDP3    TEMP$,,AUTO
         0 000057   300000 721100                    LXL1    0,,PR3
         0 000060   000157 101003                    CMPX1   111,DU
         0 000061   000071 601000 0                  TNZ     s:3548

      110     3543    4                    STR_TEXT$ -> STR$BUF = TEMP$ -> OUT$BLK.SUBLK$(0) ->

   3543  0 000062   300003 474500                    LDP4    3,,PR3
         0 000063   400003 475500                    LDP5    3,,PR4
         0 000064   000000 476400 xsym               LDP6    STR_TEXT$
         0 000065   000100 100500                    MLR     fill='000'O
         0 000066   500000 000400                    ADSC9   0,,PR5                   cn=0,n=256
         0 000067   600000 000400                    ADSC9   0,,PR6                   cn=0,n=256

      111     3544    4                      OUT$BLK.SUBLK$(0) -> STR$BUF;
      112     3545    4                    END;

   3545  0 000070   000152 710000 0                  TRA     s:3559

      113     3546        /**/
      114     3547    4                 ELSE DO;                  /* #XXX                               */

      115     3548    4                    STR_TEXT$ -> STR$BUF.COUNT = TEMP$ -> OUT$BLK.NSUBLKS;
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:14   

   3548  0 000071   000000 474400 xsym               LDP4    STR_TEXT$
         0 000072   300001 236100                    LDQ     1,,PR3
         0 000073   000011 736000                    QLS     9
         0 000074   400000 552140                    STBQ    0,'40'O,PR4

      116     3549    5                    DO J = 0 TO TEMP$ -> OUT$BLK.NSUBLKS-1;

   3549  0 000075   200013 450100                    STZ     J,,AUTO
         0 000076   000144 710000 0                  TRA     s:3556+2

      117     3550    5                       IF (TEMP$ -> OUT$BLK.SUBLK$(J) = ADDR(NIL)) THEN ALTRETURN;

   3550  0 000077   200006 470500                    LDP0    TEMP$,,AUTO
         0 000100   200013 720100                    LXL0    J,,AUTO
         0 000101   000003 236110                    LDQ     3,X0,PR0
         0 000102   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000103   000105 601000 0                  TNZ     s:3551

   3550  0 000104   000000 702200 xent               TSX2  ! X66_AALT

      118     3551    5                       TEMP1$ = TEMP$ -> OUT$BLK.SUBLK$(J);

   3551  0 000105   200007 756100                    STQ     TEMP1$,,AUTO

      119     3552    5                       XXX = ((TEMP1$ -> OUT$BLK.SUBLK$(0) -> OUT$BLK.CODE -
              3552                                PC_OCTOFFSET) * 64) +

   3552  0 000106   200007 471500                    LDP1    TEMP1$,,AUTO
         0 000107   100003 473500                    LDP3    3,,PR1
         0 000110   100004 474500                    LDP4    4,,PR1
         0 000111   400000 236100                    LDQ     0,,PR4
         0 000112   777777 376007                    ANQ     -1,DL
         0 000113   200014 756100                    STQ     J+1,,AUTO
         0 000114   300000 236100                    LDQ     0,,PR3
         0 000115   000003 736000                    QLS     3
         0 000116   000000 376000 1                  ANQ     0
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:15   
         0 000117   200014 036100                    ADLQ    J+1,,AUTO
         0 000120   100005 473500                    LDP3    5,,PR1
         0 000121   200015 756100                    STQ     J+2,,AUTO
         0 000122   300000 236100                    LDQ     0,,PR3
         0 000123   777777 376007                    ANQ     -1,DL
         0 000124   200016 756100                    STQ     J+3,,AUTO
         0 000125   200015 236100                    LDQ     J+2,,AUTO
         0 000126   000003 736000                    QLS     3
         0 000127   200016 036100                    ADLQ    J+3,,AUTO
         0 000130   001332 136007                    SBLQ    730,DL
         0 000131   200011 756100                    STQ     XXX,,AUTO

      120     3553    5                         ((TEMP1$ -> OUT$BLK.SUBLK$(1) -> OUT$BLK.CODE - PC_OCTOFFSET)
              3553                                  * 8) +
      121     3554    5                        ((TEMP1$ -> OUT$BLK.SUBLK$(2) -> OUT$BLK.CODE - PC_OCTOFFSET))
              3554                                  ;
      122     3555    5                       STR_TEXT$ -> STR$BUF.TEXTARRAY(J) = BINASC(XXX);

   3555  0 000132   000033 736000                    QLS     27
         0 000133   000001 276000 1                  ORQ     1
         0 000134   200014 756100                    STQ     J+1,,AUTO
         0 000135   000000 473400 xsym               LDP3    STR_TEXT$
         0 000136   200013 235100                    LDA     J,,AUTO
         0 000137   040105 100500                    MLR     fill='040'O
         0 000140   200014 000004                    ADSC9   J+1,,AUTO                cn=0,n=4
         0 000141   300000 200001                    ADSC9   0,A,PR3                  cn=1,n=1

      123     3556    5                       END;

   3556  0 000142   000001 035007                    ADLA    1,DL
         0 000143   200013 755100                    STA     J,,AUTO
         0 000144   200006 470500                    LDP0    TEMP$,,AUTO
         0 000145   000001 236100                    LDQ     1,,PR0
         0 000146   000022 772000                    QRL     18
         0 000147   200013 116100                    CMPQ    J,,AUTO
         0 000150   000152 600000 0                  TZE     s:3559
         0 000151   000077 603000 0                  TRC     s:3550
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:16   

      124     3557    4                    END;

      125     3558        /**/
      126     3559    3                 STR_PARAM$ -> STR$PARAM.STR.PTR$(I) = STR_TEXT$;

   3559  0 000152   200012 235100                    LDA     I,,AUTO
         0 000153   000001 735000                    ALS     1
         0 000154   000000 236000 xsym               LDQ     STR_TEXT$
         0 000155   200010 470500                    LDP0    STR_PARAM$,,AUTO
         0 000156   000002 756105                    STQ     2,AL,PR0

      127     3560    3                 CALL VEX$STR_TEXT_INCR((STR_TEXT$ -> STR$BUF.COUNT+4)/4)

   3560  0 000157   000000 471400 xsym               LDP1    STR_TEXT$
         0 000160   100000 236100                    LDQ     0,,PR1
         0 000161   000033 772000                    QRL     27
         0 000162   000004 036007                    ADLQ    4,DL
         0 000163   000002 772000                    QRL     2
         0 000164   200014 756100                    STQ     J+1,,AUTO
         0 000165   200014 633500                    EPPR3   J+1,,AUTO
         0 000166   200015 453500                    STP3    J+2,,AUTO
         0 000167   200015 630500                    EPPR0   J+2,,AUTO
         0 000170   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000171   000000 701000 xent               TSX1    VEX$STR_TEXT_INCR
         0 000172   000233 702000 0                  TSX2    PS_ALTRET

      128     3561    3                   ALTRET(PS_ALTRET);
      129     3562    3                 END;

   3562  0 000173   000223 710000 0                  TRA     s:3574

      130     3563        /**/
      131     3564    3              ELSE DO;                     /* QUESTION MARK                      */

      132     3565    3                 STR_PARAM$ -> STR$PARAM.STR.QMCOUNT(I) = 0;

PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:17   
   3565  0 000174   200012 235100                    LDA     I,,AUTO
         0 000175   000001 735000                    ALS     1
         0 000176   000000 222003                    LDX2    0,DU
         0 000177   200010 473500                    LDP3    STR_PARAM$,,AUTO
         0 000200   300001 442105                    SXL2    1,AL,PR3

      133     3566    3                 STR_PARAM$ -> STR$PARAM.STR.QM(I) = TRUE;

   3566  0 000201   400000 236003                    LDQ     -131072,DU
         0 000202   300001 256105                    ORSQ    1,AL,PR3

      134     3567    4                 IF (TEMP$ -> OUT$BLK.NSUBLKS ~= 0) THEN DO; /* COUNT SPECIFIED  */

   3567  0 000203   100001 221100                    LDX1    1,,PR1
         0 000204   000223 600000 0                  TZE     s:3574

      135     3568    4                    TEMP$ = TEMP$ -> OUT$BLK.SUBLK$(0);

   3568  0 000205   100003 236100                    LDQ     3,,PR1
         0 000206   200006 756100                    STQ     TEMP$,,AUTO

      136     3569    4                    CALL CHARBIN(XXX,SUBSTR(TEMP$ -> OUT$BLK.SUBLK$(0) ->

   3569  0 000207   200006 471500                    LDP1    TEMP$,,AUTO
         0 000210   100003 474500                    LDP4    3,,PR1
         0 000211   400000 236100                    LDQ     0,,PR4
         0 000212   000033 772000                    QRL     27
         0 000213   000000 621006                    EAX1    0,QL
         0 000214   000100 305540                    DTB
         0 000215   400000 230011                    NDSC9   0,,PR4                   cn=1,s=nosgn,sf=0,n=*X1
         0 000216   200014 000010                    NDSC9   J+1,,AUTO                cn=0,s=lsgnf,sf=0,n=8
         0 000217   200015 236100                    LDQ     J+2,,AUTO
         0 000220   200011 756100                    STQ     XXX,,AUTO

      137     3570    4                      STR$BUF.TEXT,0,TEMP$ -> OUT$BLK.SUBLK$(0) ->STR$BUF.COUNT));
      138     3571    4                    STR_PARAM$ -> STR$PARAM.STR.QMCOUNT(I) = XXX;

PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:18   
   3571  0 000221   000000 621006                    EAX1    0,QL
         0 000222   300001 441105                    SXL1    1,AL,PR3

      139     3572    4                    END;

      140     3573    3                 END;

      141     3574    2              END;

   3574  0 000223   200012 235100                    LDA     I,,AUTO
         0 000224   000001 035007                    ADLA    1,DL
         0 000225   200012 755100                    STA     I,,AUTO
         0 000226   200010 470500                    LDP0    STR_PARAM$,,AUTO
         0 000227   200012 236100                    LDQ     I,,AUTO
         0 000230   000000 116100                    CMPQ    0,,PR0
         0 000231   000037 602000 0                  TNC     s:3537

      142     3575        /**/
      143     3576    1           RETURN;

   3576  0 000232   000000 702200 xent               TSX2  ! X66_ARET

      144     3577        /**/
      145     3578    1   PS_ALTRET:
      146     3579    1           ALTRETURN;

   3579  0 000233   000000 702200 xent  PS_ALTRET    TSX2  ! X66_AALT
      147     3580    1   END;

PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:19   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure VEX$PARSE_STRING.
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:20   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @P$                        4-0-0/w PTR         r     1 @STR$
     5-0-0/w PTR         r     1 BLK$                      12-0-0/w UBIN        r     1 I
    13-0-0/w UBIN        r     1 J                         *0-0-0/w PTR         r     1 P$
    *0-0-0/w PTR         r     1 STR$                      10-0-0/w PTR         r     1 STR_PARAM$
     6-0-0/w PTR         r     1 TEMP$                      7-0-0/w PTR         r     1 TEMP1$
    11-0-0/w UBIN        r     1 XXX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 STR_TEXT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT$BLK                    0-0-0/w STRC(72)    r     1 SSE$PARAM
     0-0-0/w STRC(2304)  r     1 STR$BUF                    0-0-0/w STRC(108)   r     1 STR$PARAM


   Procedure VEX$PARSE_STRING requires 156 words for executable code.
   Procedure VEX$PARSE_STRING requires 16 words of local(AUTO) storage.

    No errors detected in file VEX$PARSE_STRING.:E05TSI    .
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:21   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:22   
          MINI XREF LISTING

BLK$
        43**DCL      3525<<ASSIGN   3528>>ASSIGN   3537>>ASSIGN
I
        48**DCL      3536<<DOINDEX  3537>>ASSIGN   3541>>ASSIGN   3559>>ASSIGN   3565>>ASSIGN   3566>>ASSIGN
      3571>>ASSIGN
J
        49**DCL      3549<<DOINDEX  3550>>IF       3551>>ASSIGN   3555>>ASSIGN
OUT$BLK.CODE
      3472**DCL      3539>>IF       3542>>IF       3552>>ASSIGN   3552>>ASSIGN   3552>>ASSIGN
OUT$BLK.NSUBLKS
      3476**DCL      3528>>ASSIGN   3548>>ASSIGN   3549>>DOINDEX  3567>>IF
OUT$BLK.SUBLK$
      3497**DCL      3537>>ASSIGN   3540>>ASSIGN   3543>>ASSIGN   3543>>ASSIGN   3550>>IF       3551>>ASSIGN
      3552>>ASSIGN   3552>>ASSIGN   3552>>ASSIGN   3568>>ASSIGN   3569>>CALLBLT  3569>>CALLBLT
P$
        37**DCL         8--PROC     3525>>ASSIGN
PS_ALTRET
      3579**LABEL    3532--CALLALT  3560--CALLALT
SSE$PARAM.FLAGS.CLMNFLAG
      3505**DCL      3526<<ASSIGN
SSE$PARAM.PTR$
      3513**DCL      3531<<ASSIGN
STR$
        38**DCL         8--PROC     3526>>ASSIGN   3531>>ASSIGN
STR$BUF
        54**DCL      3543<<ASSIGN   3543>>ASSIGN
STR$BUF.COUNT
        55**DCL      3548<<ASSIGN   3560>>CALL     3569>>CALLBLT
STR$BUF.TEXT
        56**DCL        57--REDEF    3569>>CALLBLT
STR$BUF.TEXTARRAY
        57**DCL      3555<<ASSIGN
PL6.E3A0      #001=VEX$PARSE_STRING File=VEX$PARSE_STRING.:E05TSI                WED 07/30/97 07:15 Page:23   
STR$PARAM.COUNT
        60**DCL      3528<<ASSIGN   3532>>CALL     3532--CALL     3536>>DOINDEX
STR$PARAM.STR
        61**DCL      3532--CALL
STR$PARAM.STR.PTR$
        65**DCL      3559<<ASSIGN
STR$PARAM.STR.QM
        62**DCL      3541<<ASSIGN   3566<<ASSIGN
STR$PARAM.STR.QMCOUNT
        64**DCL      3565<<ASSIGN   3571<<ASSIGN
STR_PARAM$
        46**DCL      3530<<ASSIGN   3531>>ASSIGN   3532>>CALL     3536>>DOINDEX  3541>>ASSIGN   3559>>ASSIGN
      3565>>ASSIGN   3566>>ASSIGN   3571>>ASSIGN
STR_TEXT$
      3518**DCL      3528>>ASSIGN   3530>>ASSIGN   3543>>ASSIGN   3548>>ASSIGN   3555>>ASSIGN   3559>>ASSIGN
      3560>>CALL
TEMP$
        44**DCL      3537<<ASSIGN   3539>>IF       3540<<ASSIGN   3540>>ASSIGN   3542>>IF       3543>>ASSIGN
      3548>>ASSIGN   3549>>DOINDEX  3550>>IF       3551>>ASSIGN   3567>>IF       3568<<ASSIGN   3568>>ASSIGN
      3569>>CALLBLT  3569>>CALLBLT
TEMP1$
        45**DCL      3551<<ASSIGN   3552>>ASSIGN   3552>>ASSIGN   3552>>ASSIGN
VEX$STR_TEXT_INCR
      3520**DCL-ENT  3532--CALL     3560--CALL
XXX
        47**DCL      3552<<ASSIGN   3555>>ASSIGN   3569<<CALLBLT  3571>>ASSIGN
