VERSION E05

PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:1    
        1        1        /*M* FILE BUFFER MANAGEMENT ROUTINES.                              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        /*D*     NAME: MMJ$GFBUF
        9        9        *        CALL: CALL MMJ$GFBUF (PSIZE , FBNO);
       10       10        *        INTERFACE: MMB$GPP,FMD$TRNC
       11       11        *        INPUT:    PSIZE - Size of the desired buffer in pages.(1-30)
       12       12        *        OUTPUT:   FBNO - Contains the buffer number (1-30) within
       13       13        *                            the FPOOL area of the user's page table.
       14       14        *        DESCRIPTION: This is called to allocate a file buffer of the
       15       15        *        desired size. If necessary, FMD$TRNC is called to release
       16       16        *        file buffers. Then the necessary pages are obtained, mapped
       17       17        *        in, and charged to the user (B$JIT.FBUC).
       18       18        */
       19       19        /*D*     NAME: MMJ$FFBUF
       20       20        *        CALL: CALL MMJ$FFBUF (PSIZE , FBNO);
       21       21        *        INTERFACE: MMB$FPP
       22       22        *        INPUT:    PSIZE - Size of the buffer in pages.(1-30)
       23       23        *                  FBNO - Contains the buffer number (1-30) within
       24       24        *                            the FPOOL area of the user's page table.
       25       25        *        DESCRIPTION: This is called to free a file buffer of the
       26       26        *        desired size.
       27       27        *        The page is freed, the buffer is unmapped, and FBUC is decremented.*/
       28       28        %EJECT;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:2    
       29       29        MMJ$GFBUF: PROC(PSIZE , FBNO);
       30       30    1   DCL PSIZE SBIN;                         /* # of pages in buffer               */
       31       31    1   DCL FBNO UBIN;                          /* Returned start page of buffer      */
       32       32    1   DCL FBNOS REDEF FBNO SBIN;
       33       33        /**/
       34       34    1   DCL MMB$GPP ENTRY (2) ALTRET;
       35       35    1   DCL MMB$FPP ENTRY(1) ALTRET;
       36       36    1   DCL HFC$ASSOCCLR ENTRY(3);
       37       37    1   DCL FMD$TRNC ENTRY;
       38       38    1   DCL SC_MM28 ENTRY CONV (2,0);
       39       39        /**/
       40       40        %INCLUDE MM_DATA_R;
       41      560        %INCLUDE HF_DATA_R;
       42      603    1   DCL TEMP1 SBIN;
       43      604    1   DCL I SBIN;
       44      605    1   DCL J SBIN;
       45      606    1   DCL 1 MAPCONST CONSTANT,
       46      607    1         2 RPN UBIN HALF HALIGNED INIT(0),
       47      608    1         2 SCTRL BIT(10) INIT(%SCFPOOL),
       48      609    1         2 * BIT(2) INIT('0'B),
       49      610    1         2 CTRL BIT(6) INIT(%(%PGINMEM|%PGWRITE|%PGIOM));
       50      611    1   DCL S_CUN UBIN SYMREF;
       51      612    1   DCL B$UPT$ PTR SYMREF READONLY;
       52      613    1   DCL B$PPUT$ PTR SYMREF READONLY;
       53      614    1   DCL B$JIT$ PTR SYMREF READONLY;
       54      615    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
       55      616    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       56      617        /**/
       57      618        %INCLUDE B$MAP;
       58      717        %INCLUDE M$JIT_C;
       59     1237        %INCLUDE B$USER;
       60     1453        %B$USERREFS;
       61     1457        /**/
       62     1458        %EJECT;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:3    
       63     1459        /*F*   NAME:   MMJ$GFBUF                                           */
       64     1460        /*F*   PURPOSE: To find and allocate a buffer for file management  */
       65     1461        /*,*           which is PSIZE pages in length, returning its start- */
       66     1462        /*,*           ing page number relative to the FPOOL buffer segment*/
       67     1463        /**/
       68     1464    2           DO TEMP1 = 0 TO %FMSEGSIZ;
       69     1465    3             DO I = 1 TO %FMSEGSIZ;
       70     1466    3               IF B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1) = MM_FPMC.RPN
       71     1467    4                 THEN DO;
       72     1468    4                     J = PSIZE - 1;
       73     1469    5                     DO WHILE (J ~= 0);
       74     1470    5                       IF B$UPT$ -> B$MAP.RPN (I + J + %FMSEGLO - 1) ~= MM_FPMC.RPN
       75     1471    6                         THEN DO;
       76     1472    6                             GOTO NXT;
       77     1473    6                           END;
       78     1474    5                       J = J - 1;
       79     1475    5                     END;
       80     1476                                           /* We found it ! (J = 0 as result of above)*/
       81     1477    4                     FBNO = I;
       82     1478    5                     DO UNTIL (J = PSIZE);
       83     1479    5                       B$JIT.PPC = B$JIT.PPC + 1;
       84     1480    5                       S$CU$ -> B$U.PCT = B$JIT.PPC;
       85     1481    5                       B$JIT.FBUC = B$JIT.FBUC + 1;
       86     1482    5                       IF B$JIT.FBUC > B$JIT.FBUL
       87     1483    5                         THEN
       88     1484    5                         CALL FMD$TRNC;
       89     1485    5   GETPG:              CALL MMB$GPP (TEMP1 , %USERWSQ) ALTRET (GETPG);
       90     1486    5                       B$UPT$ -> B$MAP (I + %FMSEGLO - 1 ) = MAPCONST;
       91     1487    5                       IF HW_WSQ0PT THEN
       92     1488    5                         B$UPT$->B$MAP.RPN(I+%FMSEGLO-1)=B$WSQ0PT$->B$MAP.RPN(TEMP1);
       93     1489    5                         ELSE
       94     1490    5                         B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1 ) = TEMP1;
       95     1491    5                       B$PPUT$ -> MM$PPUT.USER (TEMP1) = '1'B;
       96     1492    5                       B$PPUT$ -> MM$PPUT.USER# (TEMP1) = S_CUN;
       97     1493    5                       I = I + 1;
       98     1494    5                       J = J + 1;
       99     1495    5                     END;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:4    
      100     1496    4                     RETURN;
      101     1497    4                   END;
      102     1498    3   NXT:        ;
      103     1499    3             END;
      104     1500    2             CALL FMD$TRNC;
      105     1501    2           END;
      106     1502    1           CALL SC_MM28;
      107     1503
      108     1504        /*S*     SCREECH_CODE: MMJ-S$MM28                          */
      109     1505        /*S*     TYPE:     SUA                                     */
      110     1506        /*S*     MESSAGE:  Unable to TRUNC enough FPOOL'S          */
      111     1507
      112     1508        %EJECT;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:5    
      113     1509    1   MMJ$FFBUF: ENTRY (PSIZE , FBNO);
      114     1510
      115     1511    1           J = FBNO;
      116     1512    1           IF PSIZE = 0 THEN RETURN;
      117     1513    1           I = J + PSIZE;
      118     1514    2           DO UNTIL (J = I);
      119     1515    2             B$JIT.PPC = B$JIT.PPC - 1;
      120     1516    2             S$CU$ -> B$U.PCT = B$JIT.PPC;
      121     1517    2             B$JIT.FBUC = B$JIT.FBUC - 1;
      122     1518    2             IF HW_WSQ0PT THEN
      123     1519    2               TEMP1 = B$IPHYMAP$->MM$IPHY_MAP(B$UPT$->B$MAP.RPN(J+%FMSEGLO-1));
      124     1520    2               ELSE
      125     1521    2               TEMP1 = B$UPT$ -> B$MAP.RPN (J + %FMSEGLO - 1);
      126     1522    2             B$UPT$ -> B$MAP (J + %FMSEGLO - 1) = MM_FPMC;
      127     1523    2             J = J + 1;
      128     1524    2             CALL MMB$FPP (TEMP1);
      129     1525    2           END;
      130     1526    1           CALL HFC$ASSOCCLR(%USERWSQ,FBNOS+%FMSEGLO-1,PSIZE);
      131     1527    1           RETURN;
      132     1528    1   END MMJ$GFBUF;
      133     1529        %EOD;

PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:6    
--  Include file information  --

   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$GFBUF.

   Procedure MMJ$GFBUF requires 160 words for executable code.
   Procedure MMJ$GFBUF requires 12 words of local(AUTO) storage.

PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:7    

 Object Unit name= MMJ$GFBUF                                  File name= MMJ$FSEG.:E05TOU
 UTS= JUL 30 '97 03:21:36.88 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  MMJ$GFBUF
    1   Proc  even  none   160    240  MMJ$GFBUF
    2  RoData even  none     1      1  MMJ$GFBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  MMJ$GFBUF
     1    137                  yes      Std        2  MMJ$FFBUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 FMD$TRNC
 yes     yes           Std       2 MMB$GPP
         yes           Std       3 HFC$ASSOCCLR
 yes     yes           Std       1 MMB$FPP
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:8    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM28                          r    MM_BYP$                               MM_FPMC
     HW_WSQ0PT                             S_CUN                            r    B$UPT$
r    B$PPUT$                          r    B$JIT$                           r    B$WSQ0PT$
r    B$IPHYMAP$                            S$CU$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:9    


        1        1        /*M* FILE BUFFER MANAGEMENT ROUTINES.                              */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND */
        8        8        /*D*     NAME: MMJ$GFBUF
        9        9        *        CALL: CALL MMJ$GFBUF (PSIZE , FBNO);
       10       10        *        INTERFACE: MMB$GPP,FMD$TRNC
       11       11        *        INPUT:    PSIZE - Size of the desired buffer in pages.(1-30)
       12       12        *        OUTPUT:   FBNO - Contains the buffer number (1-30) within
       13       13        *                            the FPOOL area of the user's page table.
       14       14        *        DESCRIPTION: This is called to allocate a file buffer of the
       15       15        *        desired size. If necessary, FMD$TRNC is called to release
       16       16        *        file buffers. Then the necessary pages are obtained, mapped
       17       17        *        in, and charged to the user (B$JIT.FBUC).
       18       18        */
       19       19        /*D*     NAME: MMJ$FFBUF
       20       20        *        CALL: CALL MMJ$FFBUF (PSIZE , FBNO);
       21       21        *        INTERFACE: MMB$FPP
       22       22        *        INPUT:    PSIZE - Size of the buffer in pages.(1-30)
       23       23        *                  FBNO - Contains the buffer number (1-30) within
       24       24        *                            the FPOOL area of the user's page table.
       25       25        *        DESCRIPTION: This is called to free a file buffer of the
       26       26        *        desired size.
       27       27        *        The page is freed, the buffer is unmapped, and FBUC is decremented.*/
       28       28        %EJECT;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:10   
       29       29        MMJ$GFBUF: PROC(PSIZE , FBNO);

     29  1 000000   000000 700200 xent  MMJ$GFBUF    TSX0  ! X66_AUTO_2
         1 000001   000014 000002                    ZERO    12,2

       30       30    1   DCL PSIZE SBIN;                         /* # of pages in buffer               */
       31       31    1   DCL FBNO UBIN;                          /* Returned start page of buffer      */
       32       32    1   DCL FBNOS REDEF FBNO SBIN;
       33       33        /**/
       34       34    1   DCL MMB$GPP ENTRY (2) ALTRET;
       35       35    1   DCL MMB$FPP ENTRY(1) ALTRET;
       36       36    1   DCL HFC$ASSOCCLR ENTRY(3);
       37       37    1   DCL FMD$TRNC ENTRY;
       38       38    1   DCL SC_MM28 ENTRY CONV (2,0);
       39       39        /**/
       40       40        %INCLUDE MM_DATA_R;
       41      560        %INCLUDE HF_DATA_R;
       42      603    1   DCL TEMP1 SBIN;
       43      604    1   DCL I SBIN;
       44      605    1   DCL J SBIN;
       45      606    1   DCL 1 MAPCONST CONSTANT,
       46      607    1         2 RPN UBIN HALF HALIGNED INIT(0),
       47      608    1         2 SCTRL BIT(10) INIT(%SCFPOOL),
       48      609    1         2 * BIT(2) INIT('0'B),
       49      610    1         2 CTRL BIT(6) INIT(%(%PGINMEM|%PGWRITE|%PGIOM));
       50      611    1   DCL S_CUN UBIN SYMREF;
       51      612    1   DCL B$UPT$ PTR SYMREF READONLY;
       52      613    1   DCL B$PPUT$ PTR SYMREF READONLY;
       53      614    1   DCL B$JIT$ PTR SYMREF READONLY;
       54      615    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
       55      616    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       56      617        /**/
       57      618        %INCLUDE B$MAP;
       58      717        %INCLUDE M$JIT_C;
       59     1237        %INCLUDE B$USER;
       60     1453        %B$USERREFS;
       61     1457        /**/
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:11   
       62     1458        %EJECT;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:12   
       63     1459        /*F*   NAME:   MMJ$GFBUF                                           */
       64     1460        /*F*   PURPOSE: To find and allocate a buffer for file management  */
       65     1461        /*,*           which is PSIZE pages in length, returning its start- */
       66     1462        /*,*           ing page number relative to the FPOOL buffer segment*/
       67     1463        /**/
       68     1464    2           DO TEMP1 = 0 TO %FMSEGSIZ;

   1464  1 000002   200005 450100                    STZ     TEMP1,,AUTO

       69     1465    3             DO I = 1 TO %FMSEGSIZ;

   1465  1 000003   000001 235007                    LDA     1,DL
         1 000004   200006 755100                    STA     I,,AUTO

       70     1466    3               IF B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1) = MM_FPMC.RPN

   1466  1 000005   000000 470400 xsym               LDP0    B$UPT$
         1 000006   200006 720100                    LXL0    I,,AUTO
         1 000007   000017 221110                    LDX1    15,X0,PR0
         1 000010   000000 101000 xsym               CMPX1   MM_FPMC
         1 000011   000121 601000 1                  TNZ     NXT

       71     1467    4                 THEN DO;

       72     1468    4                     J = PSIZE - 1;

   1468  1 000012   200003 471500                    LDP1    @PSIZE,,AUTO
         1 000013   100000 235100                    LDA     0,,PR1
         1 000014   000001 135007                    SBLA    1,DL
         1 000015   200007 755100                    STA     J,,AUTO

       73     1469    5                     DO WHILE (J ~= 0);

   1469  1 000016   000031 600000 1                  TZE     s:1477

       74     1470    5                       IF B$UPT$ -> B$MAP.RPN (I + J + %FMSEGLO - 1) ~= MM_FPMC.RPN

PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:13   
   1470  1 000017   200006 236100                    LDQ     I,,AUTO
         1 000020   200007 036100                    ADLQ    J,,AUTO
         1 000021   000000 470400 xsym               LDP0    B$UPT$
         1 000022   000017 220106                    LDX0    15,QL,PR0
         1 000023   000000 100000 xsym               CMPX0   MM_FPMC
         1 000024   000026 600000 1                  TZE     s:1474

       75     1471    6                         THEN DO;

       76     1472    6                             GOTO NXT;

   1472  1 000025   000121 710000 1                  TRA     NXT

       77     1473    6                           END;
       78     1474    5                       J = J - 1;

   1474  1 000026   000001 336007                    LCQ     1,DL
         1 000027   200007 056100                    ASQ     J,,AUTO

       79     1475    5                     END;

   1475  1 000030   000017 601000 1                  TNZ     s:1470

       80     1476                                           /* We found it ! (J = 0 as result of above)*/
       81     1477    4                     FBNO = I;

   1477  1 000031   200006 235100                    LDA     I,,AUTO
         1 000032   200004 471500                    LDP1    @FBNO,,AUTO
         1 000033   100000 755100                    STA     0,,PR1

       82     1478    5                     DO UNTIL (J = PSIZE);

       83     1479    5                       B$JIT.PPC = B$JIT.PPC + 1;

   1479  1 000034   000000 470400 xsym               LDP0    B$JIT$
         1 000035   000207 720100                    LXL0    135,,PR0
         1 000036   000001 621010                    EAX1    1,X0
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:14   
         1 000037   000207 441100                    SXL1    135,,PR0

       84     1480    5                       S$CU$ -> B$U.PCT = B$JIT.PPC;

   1480  1 000040   000000 471400 xsym               LDP1    S$CU$
         1 000041   100010 741100                    STX1    8,,PR1

       85     1481    5                       B$JIT.FBUC = B$JIT.FBUC + 1;

   1481  1 000042   000205 220100                    LDX0    133,,PR0
         1 000043   000001 622010                    EAX2    1,X0
         1 000044   000205 742100                    STX2    133,,PR0

       86     1482    5                       IF B$JIT.FBUC > B$JIT.FBUL

   1482  1 000045   000205 720100                    LXL0    133,,PR0
         1 000046   000205 100100                    CMPX0   133,,PR0
         1 000047   000053 603000 1                  TRC     GETPG

       87     1483    5                         THEN
       88     1484    5                         CALL FMD$TRNC;

   1484  1 000050   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000051   000000 701000 xent               TSX1    FMD$TRNC
         1 000052   000000 011000                    NOP     0

       89     1485    5   GETPG:              CALL MMB$GPP (TEMP1 , %USERWSQ) ALTRET (GETPG);

   1485  1 000053   000000 236000 2     GETPG        LDQ     0
         1 000054   200011 756100                    STQ     J+2,,AUTO
         1 000055   200005 630500                    EPPR0   TEMP1,,AUTO
         1 000056   200010 450500                    STP0    J+1,,AUTO
         1 000057   200010 630500                    EPPR0   J+1,,AUTO
         1 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000061   000000 701000 xent               TSX1    MMB$GPP
         1 000062   000053 702000 1                  TSX2    GETPG

PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:15   
       90     1486    5                       B$UPT$ -> B$MAP (I + %FMSEGLO - 1 ) = MAPCONST;

   1486  1 000063   000000 236000 0                  LDQ     MAPCONST
         1 000064   000000 470400 xsym               LDP0    B$UPT$
         1 000065   200006 720100                    LXL0    I,,AUTO
         1 000066   000017 756110                    STQ     15,X0,PR0

       91     1487    5                       IF HW_WSQ0PT THEN

   1487  1 000067   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000070   000076 605000 1                  TPL     s:1490

       92     1488    5                         B$UPT$->B$MAP.RPN(I+%FMSEGLO-1)=B$WSQ0PT$->B$MAP.RPN(TEMP1);

   1488  1 000071   000000 471400 xsym               LDP1    B$WSQ0PT$
         1 000072   200005 721100                    LXL1    TEMP1,,AUTO
         1 000073   100000 222111                    LDX2    0,X1,PR1
         1 000074   000017 742110                    STX2    15,X0,PR0
         1 000075   000100 710000 1                  TRA     s:1491

       93     1489    5                         ELSE
       94     1490    5                         B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1 ) = TEMP1;

   1490  1 000076   200005 721100                    LXL1    TEMP1,,AUTO
         1 000077   000017 741110                    STX1    15,X0,PR0

       95     1491    5                       B$PPUT$ -> MM$PPUT.USER (TEMP1) = '1'B;

   1491  1 000100   000000 471400 xsym               LDP1    B$PPUT$
         1 000101   200005 721100                    LXL1    TEMP1,,AUTO
         1 000102   020000 236003                    LDQ     8192,DU
         1 000103   100000 256111                    ORSQ    0,X1,PR1

       96     1492    5                       B$PPUT$ -> MM$PPUT.USER# (TEMP1) = S_CUN;

   1492  1 000104   200005 721100                    LXL1    TEMP1,,AUTO
         1 000105   000000 236000 xsym               LDQ     S_CUN
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:16   
         1 000106   000022 736000                    QLS     18
         1 000107   100000 676111                    ERQ     0,X1,PR1
         1 000110   000777 376003                    ANQ     511,DU
         1 000111   100000 656111                    ERSQ    0,X1,PR1

       97     1493    5                       I = I + 1;

   1493  1 000112   200006 054100                    AOS     I,,AUTO

       98     1494    5                       J = J + 1;

   1494  1 000113   200007 054100                    AOS     J,,AUTO

       99     1495    5                     END;

   1495  1 000114   200003 473500                    LDP3    @PSIZE,,AUTO
         1 000115   200007 236100                    LDQ     J,,AUTO
         1 000116   300000 116100                    CMPQ    0,,PR3
         1 000117   000034 601000 1                  TNZ     s:1479

      100     1496    4                     RETURN;

   1496  1 000120   000000 702200 xent               TSX2  ! X66_ARET

   1494  1 000121                       NXT          null
      101     1497    4                   END;
      102     1498    3   NXT:        ;
      103     1499    3             END;

   1499  1 000121   200006 054100                    AOS     I,,AUTO
         1 000122   200006 235100                    LDA     I,,AUTO
         1 000123   000037 115007                    CMPA    31,DL
         1 000124   000005 604400 1                  TMOZ    s:1466

      104     1500    2             CALL FMD$TRNC;

   1500  1 000125   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:17   
         1 000126   000000 701000 xent               TSX1    FMD$TRNC
         1 000127   000000 011000                    NOP     0

      105     1501    2           END;

   1501  1 000130   200005 054100                    AOS     TEMP1,,AUTO
         1 000131   200005 235100                    LDA     TEMP1,,AUTO
         1 000132   000037 115007                    CMPA    31,DL
         1 000133   000003 604400 1                  TMOZ    s:1465

      106     1502    1           CALL SC_MM28;

   1502  1 000134   000000 713400 xsym               CLIMB   SC_MM28
         1 000135   000000 600000 xsid               climb   nvectors=         0
         1 000136   000141 710000 1                  TRA     s:1511

      107     1503
      108     1504        /*S*     SCREECH_CODE: MMJ-S$MM28                          */
      109     1505        /*S*     TYPE:     SUA                                     */
      110     1506        /*S*     MESSAGE:  Unable to TRUNC enough FPOOL'S          */
      111     1507
      112     1508        %EJECT;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:18   
      113     1509    1   MMJ$FFBUF: ENTRY (PSIZE , FBNO);

   1509  1 000137   000000 700200 xent  MMJ$FFBUF    TSX0  ! X66_AUTO_2
         1 000140   000014 000002                    ZERO    12,2

      114     1510
      115     1511    1           J = FBNO;

   1511  1 000141   200004 470500                    LDP0    @FBNO,,AUTO
         1 000142   000000 235100                    LDA     0,,PR0
         1 000143   200007 755100                    STA     J,,AUTO

      116     1512    1           IF PSIZE = 0 THEN RETURN;

   1512  1 000144   200003 471500                    LDP1    @PSIZE,,AUTO
         1 000145   100000 235100                    LDA     0,,PR1
         1 000146   000150 601000 1                  TNZ     s:1513

   1512  1 000147   000000 702200 xent               TSX2  ! X66_ARET

      117     1513    1           I = J + PSIZE;

   1513  1 000150   200007 236100                    LDQ     J,,AUTO
         1 000151   100000 036100                    ADLQ    0,,PR1
         1 000152   200006 756100                    STQ     I,,AUTO

      118     1514    2           DO UNTIL (J = I);

      119     1515    2             B$JIT.PPC = B$JIT.PPC - 1;

   1515  1 000153   000000 470400 xsym               LDP0    B$JIT$
         1 000154   000207 720100                    LXL0    135,,PR0
         1 000155   777777 621010                    EAX1    -1,X0
         1 000156   000207 441100                    SXL1    135,,PR0

      120     1516    2             S$CU$ -> B$U.PCT = B$JIT.PPC;

PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:19   
   1516  1 000157   000000 471400 xsym               LDP1    S$CU$
         1 000160   100010 741100                    STX1    8,,PR1

      121     1517    2             B$JIT.FBUC = B$JIT.FBUC - 1;

   1517  1 000161   000205 220100                    LDX0    133,,PR0
         1 000162   777777 622010                    EAX2    -1,X0
         1 000163   000205 742100                    STX2    133,,PR0

      122     1518    2             IF HW_WSQ0PT THEN

   1518  1 000164   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000165   000200 605000 1                  TPL     s:1521

      123     1519    2               TEMP1 = B$IPHYMAP$->MM$IPHY_MAP(B$UPT$->B$MAP.RPN(J+%FMSEGLO-1));

   1519  1 000166   000000 473400 xsym               LDP3    B$UPT$
         1 000167   200007 720100                    LXL0    J,,AUTO
         1 000170   300017 236110                    LDQ     15,X0,PR3
         1 000171   000022 772000                    QRL     18
         1 000172   000001 736000                    QLS     1
         1 000173   000000 474400 xsym               LDP4    B$IPHYMAP$
         1 000174   000100 101506                    MRL     fill='000'O
         1 000175   400000 000002                    ADSC9   0,Q,PR4                  cn=0,n=2
         1 000176   200005 000004                    ADSC9   TEMP1,,AUTO              cn=0,n=4
         1 000177   000205 710000 1                  TRA     s:1522

      124     1520    2               ELSE
      125     1521    2               TEMP1 = B$UPT$ -> B$MAP.RPN (J + %FMSEGLO - 1);

   1521  1 000200   000000 473400 xsym               LDP3    B$UPT$
         1 000201   200007 720100                    LXL0    J,,AUTO
         1 000202   300017 236110                    LDQ     15,X0,PR3
         1 000203   000022 772000                    QRL     18
         1 000204   200005 756100                    STQ     TEMP1,,AUTO

      126     1522    2             B$UPT$ -> B$MAP (J + %FMSEGLO - 1) = MM_FPMC;
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:20   

   1522  1 000205   000000 236000 xsym               LDQ     MM_FPMC
         1 000206   300017 756110                    STQ     15,X0,PR3

      127     1523    2             J = J + 1;

   1523  1 000207   200007 054100                    AOS     J,,AUTO

      128     1524    2             CALL MMB$FPP (TEMP1);

   1524  1 000210   200005 631500                    EPPR1   TEMP1,,AUTO
         1 000211   200010 451500                    STP1    J+1,,AUTO
         1 000212   200010 630500                    EPPR0   J+1,,AUTO
         1 000213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000214   000000 701000 xent               TSX1    MMB$FPP
         1 000215   000000 011000                    NOP     0

      129     1525    2           END;

   1525  1 000216   200007 236100                    LDQ     J,,AUTO
         1 000217   200006 116100                    CMPQ    I,,AUTO
         1 000220   000153 601000 1                  TNZ     s:1515

      130     1526    1           CALL HFC$ASSOCCLR(%USERWSQ,FBNOS+%FMSEGLO-1,PSIZE);

   1526  1 000221   200004 470500                    LDP0    @FBNO,,AUTO
         1 000222   000000 235100                    LDA     0,,PR0
         1 000223   000017 035007                    ADLA    15,DL
         1 000224   200010 755100                    STA     J+1,,AUTO
         1 000225   200003 236100                    LDQ     @PSIZE,,AUTO
         1 000226   200013 756100                    STQ     J+4,,AUTO
         1 000227   200010 631500                    EPPR1   J+1,,AUTO
         1 000230   200012 451500                    STP1    J+3,,AUTO
         1 000231   000000 236000 2                  LDQ     0
         1 000232   200011 756100                    STQ     J+2,,AUTO
         1 000233   200011 630500                    EPPR0   J+2,,AUTO
         1 000234   000021 631400 xsym               EPPR1   B_VECTNIL+17
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:21   
         1 000235   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 000236   000000 011000                    NOP     0

      131     1527    1           RETURN;

   1527  1 000237   000000 702200 xent               TSX2  ! X66_ARET

MAPCONST
 Sect OctLoc
   0     000   000000 002064                                                    ...4

(unnamed)
 Sect OctLoc
   2     000   000012 006000                                                    ....
      132     1528    1   END MMJ$GFBUF;
      133     1529        %EOD;

PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:22   
--  Include file information  --

   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$GFBUF.
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:23   

 **** Variables and constants ****

  ****  Section 000 RoData MMJ$GFBUF

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC        r     1 MAPCONST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FBNO                      3-0-0/w PTR         r     1 @PSIZE
    *0-0-0/w UBIN        r     1 FBNO                      *0-0-0/w SBIN        r     1 FBNOS
     6-0-0/w SBIN        r     1 I                          7-0-0/w SBIN        r     1 J
    *0-0-0/w SBIN        r     1 PSIZE                      5-0-0/w SBIN        r     1 TEMP1

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IPHYMAP$                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 B$WSQ0PT$                  0-0-0/w BIT         r     1 HW_WSQ0PT
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/b STRC        r     1 MM_FPMC
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(576)   r     1 B$U
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:24   
     0-0-0/h UBIN(18)    r     1 MM$IPHY_MAP(0:0)
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MMJ$GFBUF requires 160 words for executable code.
   Procedure MMJ$GFBUF requires 12 words of local(AUTO) storage.
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:26   
          MINI XREF LISTING

B$DO.ECCINFO
      1388**DCL      1389--REDEF
B$IPHYMAP$
       616**DCL      1519>>ASSIGN
B$JIT.ERR.MID
      1045**DCL      1045--REDEF
B$JIT.FBUC
      1133**DCL      1481<<ASSIGN   1481>>ASSIGN   1482>>IF       1517<<ASSIGN   1517>>ASSIGN
B$JIT.FBUL
      1133**DCL      1482>>IF
B$JIT.JRESPEAK
      1135**DCL      1136--REDEF
B$JIT.PPC
      1134**DCL      1479<<ASSIGN   1479>>ASSIGN   1480>>ASSIGN   1515<<ASSIGN   1515>>ASSIGN   1516>>ASSIGN
B$JIT$
       614**DCL      1039--IMP-PTR  1479>>ASSIGN   1479>>ASSIGN   1480>>ASSIGN   1481>>ASSIGN   1481>>ASSIGN
      1482>>IF       1482>>IF       1515>>ASSIGN   1515>>ASSIGN   1516>>ASSIGN   1517>>ASSIGN   1517>>ASSIGN
B$MAP
       659**DCL      1486<<ASSIGN   1522<<ASSIGN
B$MAP.RPN
       660**DCL      1466>>IF       1470>>IF       1488<<ASSIGN   1488>>ASSIGN   1490<<ASSIGN   1519>>ASSIGN
      1521>>ASSIGN
B$MAP.SCTRL
       661**DCL       662--REDEF
B$PPUT$
       613**DCL      1491>>ASSIGN   1492>>ASSIGN
B$U.MISC
      1367**DCL      1368--REDEF
B$U.PCT
      1351**DCL      1480<<ASSIGN   1516<<ASSIGN
B$UPT$
       612**DCL      1466>>IF       1470>>IF       1486>>ASSIGN   1488>>ASSIGN   1490>>ASSIGN   1519>>ASSIGN
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:27   
      1521>>ASSIGN   1522>>ASSIGN
B$USER.MISC
      1443**DCL      1444--REDEF
B$WSQ0PT$
       615**DCL      1488>>ASSIGN
FBNO
        31**DCL        29--PROC       32--REDEF    1477<<ASSIGN   1509--ENTRY    1511>>ASSIGN
FBNOS
        32**DCL      1526>>CALL
FMD$TRNC
        37**DCL-ENT  1484--CALL     1500--CALL
GETPG
      1485**LABEL    1485--CALLALT
HFC$ASSOCCLR
        36**DCL-ENT  1526--CALL
HW_WSQ0PT
       598**DCL      1487>>IF       1518>>IF
I
       604**DCL      1465<<DOINDEX  1466>>IF       1470>>IF       1477>>ASSIGN   1486>>ASSIGN   1488>>ASSIGN
      1490>>ASSIGN   1493<<ASSIGN   1493>>ASSIGN   1513<<ASSIGN   1514>>DOUNTIL
J
       605**DCL      1468<<ASSIGN   1469>>DOWHILE  1470>>IF       1474<<ASSIGN   1474>>ASSIGN   1478>>DOUNTIL
      1494<<ASSIGN   1494>>ASSIGN   1511<<ASSIGN   1513>>ASSIGN   1514>>DOUNTIL  1519>>ASSIGN   1521>>ASSIGN
      1522>>ASSIGN   1523<<ASSIGN   1523>>ASSIGN
MAPCONST
       606**DCL      1486>>ASSIGN
MM$DESC.BOUND
       511**DCL       512--REDEF
MM$DESC.FLGS
       512**DCL       512--REDEF
MM$IPHY_MAP
       715**DCL      1519>>ASSIGN
MM$PPUT.USER
       499**DCL      1491<<ASSIGN
MM$PPUT.USER#
       500**DCL       500--REDEF    1492<<ASSIGN
PL6.E3A0      #001=MMJ$GFBUF File=MMJ$FSEG.:E05TSI                               WED 07/30/97 03:21 Page:28   
MMB$FPP
        35**DCL-ENT  1524--CALL
MMB$GPP
        34**DCL-ENT  1485--CALL
MM_BYP$
       431**DCL       431--IMP-PTR
MM_FPMC
       437**DCL      1522>>ASSIGN
MM_FPMC.RPN
       437**DCL      1466>>IF       1470>>IF
NXT
      1494**LABEL    1472--GOTO
PSIZE
        30**DCL        29--PROC     1468>>ASSIGN   1478>>DOUNTIL  1509--ENTRY    1512>>IF       1513>>ASSIGN
      1526<>CALL
S$CU$
      1454**DCL      1480>>ASSIGN   1516>>ASSIGN
SC_MM28
        38**DCL-ENT  1502--CALL
S_CUN
       611**DCL      1492>>ASSIGN
TEMP1
       603**DCL      1464<<DOINDEX  1485<>CALL     1488>>ASSIGN   1490>>ASSIGN   1491>>ASSIGN   1492>>ASSIGN
      1519<<ASSIGN   1521<<ASSIGN   1524<>CALL

PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:29   
      134        1        /*T***********************************************************/
      135        2        /*T*                                                         */
      136        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      137        4        /*T*                                                         */
      138        5        /*T***********************************************************/
      139        6        /*D*     NAME: MMJ$GIOP
      140        7        *        CALL: CALL MMJ$GIOP (PPNO);
      141        8        *        INTERFACE: MMB$GPP
      142        9        *        OUTPUT:   PPNO - The physical page acquired for I/O cache.
      143       10        *        DESCRIPTION: This is called to get an I/O cache page.
      144       11        *        The page is obtained, marked as I/O cache page and MM_IOCC
      145       12        *        is incremented.     */
      146       13
      147       14        /*D*     NAME: MMJ$FIOP
      148       15        *        CALL: CALL MMJ$FIOP (PPNO);
      149       16        *        INTERFACE: MMB$FPP
      150       17        *        INPUT:    PPNO - The physical page to release.
      151       18        *        DESCRIPTION: This is called to free a page of the
      152       19        *        I/O cache. MM_IOCC is decremented.
      153       20        */
      154       21        %EJECT;
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:30   
      155       22        MMJ$GIOP: PROC (PPNO);
      156       23
      157       24    1   DCL PPNO UBIN;
      158       25    1   DCL B$PPUT$ PTR SYMREF READONLY;
      159       26
      160       27        %INCLUDE MM_DATA_R;
      161      547
      162      548    1   DCL MMB$GPP ENTRY (2) ALTRET;
      163      549    1   DCL MMB$FPP ENTRY (1) ALTRET;
      164      550    1   DCL MMA$LOCKBP ENTRY;
      165      551    1   DCL MMA$UNLOCKBP ENTRY;
      166      552    1   DCL SC_MM14 ENTRY CONV(2,0);
      167      553
      168      554    1   ALT:    CALL MMB$GPP (PPNO , %USERWSQ) ALTRET (ALT);
      169      555    1           B$PPUT$ -> MM$PPUT.IO (PPNO) = '1'B;
      170      556    1           CALL MMA$LOCKBP;
      171      557    1           MM_IOCC = MM_IOCC + 1;
      172      558    1           CALL MMA$UNLOCKBP;
      173      559    1           RETURN;
      174      560
      175      561        %EJECT;
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:31   
      176      562    1   MMJ$FIOP: ENTRY (PPNO);
      177      563
      178      564    1           CALL MMB$FPP (PPNO);
      179      565    1           CALL MMA$LOCKBP;
      180      566    1           MM_IOCC = MM_IOCC - 1;
      181      567    1           CALL MMA$UNLOCKBP;
      182      568    1           IF MM_IOCC < 0
      183      569    1             THEN
      184      570    1             CALL SC_MM14;
      185      571        /*S*     SCREECH_CODE: MMJ-S$MM14                          */
      186      572        /*S*     TYPE:     SNAP                                    */
      187      573        /*S*     MESSAGE: I/O cache page count has gone negative.  */
      188      574        /*S*     REMARKS: Page was probably obtained from MMB$GPP  */
      189      575
      190      576    1           RETURN;
      191      577    1   END MMJ$GIOP;
      192      578        %EOD;

PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:32   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$GIOP.

   Procedure MMJ$GIOP requires 41 words for executable code.
   Procedure MMJ$GIOP requires 6 words of local(AUTO) storage.

PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:33   

 Object Unit name= MMJ$GIOP                                   File name= MMJ$FSEG.:E05TOU
 UTS= JUL 30 '97 03:22:01.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    41     51  MMJ$GIOP
    1  RoData even  none     1      1  MMJ$GIOP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  MMJ$GIOP
     0     26                  yes      Std        1  MMJ$FIOP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 MMB$GPP
         yes           Std       0 MMA$UNLOCKBP
         yes           Std       0 MMA$LOCKBP
 yes     yes           Std       1 MMB$FPP
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:34   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM14                          r    B$PPUT$                               MM_IOCC
r    MM_BYP$                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:35   


      134        1        /*T***********************************************************/
      135        2        /*T*                                                         */
      136        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      137        4        /*T*                                                         */
      138        5        /*T***********************************************************/
      139        6        /*D*     NAME: MMJ$GIOP
      140        7        *        CALL: CALL MMJ$GIOP (PPNO);
      141        8        *        INTERFACE: MMB$GPP
      142        9        *        OUTPUT:   PPNO - The physical page acquired for I/O cache.
      143       10        *        DESCRIPTION: This is called to get an I/O cache page.
      144       11        *        The page is obtained, marked as I/O cache page and MM_IOCC
      145       12        *        is incremented.     */
      146       13
      147       14        /*D*     NAME: MMJ$FIOP
      148       15        *        CALL: CALL MMJ$FIOP (PPNO);
      149       16        *        INTERFACE: MMB$FPP
      150       17        *        INPUT:    PPNO - The physical page to release.
      151       18        *        DESCRIPTION: This is called to free a page of the
      152       19        *        I/O cache. MM_IOCC is decremented.
      153       20        */
      154       21        %EJECT;
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:36   
      155       22        MMJ$GIOP: PROC (PPNO);

     22  0 000000   000000 700200 xent  MMJ$GIOP     TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      156       23
      157       24    1   DCL PPNO UBIN;
      158       25    1   DCL B$PPUT$ PTR SYMREF READONLY;
      159       26
      160       27        %INCLUDE MM_DATA_R;
      161      547
      162      548    1   DCL MMB$GPP ENTRY (2) ALTRET;
      163      549    1   DCL MMB$FPP ENTRY (1) ALTRET;
      164      550    1   DCL MMA$LOCKBP ENTRY;
      165      551    1   DCL MMA$UNLOCKBP ENTRY;
      166      552    1   DCL SC_MM14 ENTRY CONV(2,0);
      167      553
      168      554    1   ALT:    CALL MMB$GPP (PPNO , %USERWSQ) ALTRET (ALT);

    554  0 000002   000000 236000 1     ALT          LDQ     0
         0 000003   200003 235100                    LDA     @PPNO,,AUTO
         0 000004   200004 757100                    STAQ    @PPNO+1,,AUTO
         0 000005   200004 630500                    EPPR0   @PPNO+1,,AUTO
         0 000006   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000007   000000 701000 xent               TSX1    MMB$GPP
         0 000010   000002 702000 0                  TSX2    ALT

      169      555    1           B$PPUT$ -> MM$PPUT.IO (PPNO) = '1'B;

    555  0 000011   200003 470500                    LDP0    @PPNO,,AUTO
         0 000012   000000 720100                    LXL0    0,,PR0
         0 000013   000000 471400 xsym               LDP1    B$PPUT$
         0 000014   010000 236003                    LDQ     4096,DU
         0 000015   100000 256110                    ORSQ    0,X0,PR1

      170      556    1           CALL MMA$LOCKBP;

PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:37   
    556  0 000016   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000017   000000 701000 xent               TSX1    MMA$LOCKBP
         0 000020   000000 011000                    NOP     0

      171      557    1           MM_IOCC = MM_IOCC + 1;

    557  0 000021   000000 054000 xsym               AOS     MM_IOCC

      172      558    1           CALL MMA$UNLOCKBP;

    558  0 000022   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000023   000000 701000 xent               TSX1    MMA$UNLOCKBP
         0 000024   000000 011000                    NOP     0

      173      559    1           RETURN;

    559  0 000025   000000 702200 xent               TSX2  ! X66_ARET

      174      560
      175      561        %EJECT;
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:38   
      176      562    1   MMJ$FIOP: ENTRY (PPNO);

    562  0 000026   000000 700200 xent  MMJ$FIOP     TSX0  ! X66_AUTO_1
         0 000027   000006 000001                    ZERO    6,1

      177      563
      178      564    1           CALL MMB$FPP (PPNO);

    564  0 000030   200003 630500                    EPPR0   @PPNO,,AUTO
         0 000031   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000032   000000 701000 xent               TSX1    MMB$FPP
         0 000033   000000 011000                    NOP     0

      179      565    1           CALL MMA$LOCKBP;

    565  0 000034   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000035   000000 701000 xent               TSX1    MMA$LOCKBP
         0 000036   000000 011000                    NOP     0

      180      566    1           MM_IOCC = MM_IOCC - 1;

    566  0 000037   000001 336007                    LCQ     1,DL
         0 000040   000000 056000 xsym               ASQ     MM_IOCC

      181      567    1           CALL MMA$UNLOCKBP;

    567  0 000041   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000042   000000 701000 xent               TSX1    MMA$UNLOCKBP
         0 000043   000000 011000                    NOP     0

      182      568    1           IF MM_IOCC < 0

    568  0 000044   000000 235000 xsym               LDA     MM_IOCC
         0 000045   000050 605000 0                  TPL     s:576

      183      569    1             THEN
      184      570    1             CALL SC_MM14;
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:39   

    570  0 000046   000000 713400 xsym               CLIMB   SC_MM14
         0 000047   000000 600000 xsid               climb   nvectors=         0

      185      571        /*S*     SCREECH_CODE: MMJ-S$MM14                          */
      186      572        /*S*     TYPE:     SNAP                                    */
      187      573        /*S*     MESSAGE: I/O cache page count has gone negative.  */
      188      574        /*S*     REMARKS: Page was probably obtained from MMB$GPP  */
      189      575
      190      576    1           RETURN;

    576  0 000050   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000012 006000                                                    ....
      191      577    1   END MMJ$GIOP;
      192      578        %EOD;

PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:40   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$GIOP.
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:41   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PPNO                     *0-0-0/w UBIN        r     1 PPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w SBIN        r     1 MM_IOCC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MMJ$GIOP requires 41 words for executable code.
   Procedure MMJ$GIOP requires 6 words of local(AUTO) storage.
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:42   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=MMJ$GIOP File=MMJ$FSEG.:E05TSI                                WED 07/30/97 03:22 Page:43   
          MINI XREF LISTING

ALT
       554**LABEL     554--CALLALT
B$PPUT$
        25**DCL       555>>ASSIGN
MM$DESC.BOUND
       498**DCL       499--REDEF
MM$DESC.FLGS
       499**DCL       499--REDEF
MM$PPUT.IO
       486**DCL       555<<ASSIGN
MM$PPUT.USER#
       487**DCL       487--REDEF
MMA$LOCKBP
       550**DCL-ENT   556--CALL      565--CALL
MMA$UNLOCKBP
       551**DCL-ENT   558--CALL      567--CALL
MMB$FPP
       549**DCL-ENT   564--CALL
MMB$GPP
       548**DCL-ENT   554--CALL
MM_BYP$
       418**DCL       418--IMP-PTR
MM_IOCC
       417**DCL       557<<ASSIGN    557>>ASSIGN    566<<ASSIGN    566>>ASSIGN    568>>IF
PPNO
        24**DCL        22--PROC      554<>CALL      555>>ASSIGN    562--ENTRY     564<>CALL
SC_MM14
       552**DCL-ENT   570--CALL

PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:44   
      193        1        /*T***********************************************************/
      194        2        /*T*                                                         */
      195        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      196        4        /*T*                                                         */
      197        5        /*T***********************************************************/
      198        6        /*D*     NAME: MMJ$FBTOIOP
      199        7        *        CALL: CALL MMJ$FBTOIOP (FBNO , PPNO);
      200        8        *        INPUT:    FBNO - The file buffer (1-30) to switch.
      201        9        *        OUTPUT:   PPNO - The physical page which was the file page.
      202       10        *        DESCRIPTION: This is called to change a file buffer page
      203       11        *        into an I/O cache page. The appropriate counts are maintained,
      204       12        *        and the page is removed from the map.    */
      205       13        /*D*     NAME: MMJ$FBTOIOPM
      206       14        *        CALL: CALL MMJ$FBTOIOPM (FBNO , PPNO);
      207       15        *        INPUT:    FBNO - The file buffer (1-30) to switch.
      208       16        *        OUTPUT:   PPNO - The physical page which was the file page.
      209       17        *        DESCRIPTION: This is called to change a file buffer page
      210       18        *        into an I/O cache page. The appropriate counts are maintained,
      211       19        *        and the page is left in the map.    */
      212       20        /*D*     NAME: MMJ$MAPIOP
      213       21        *        CALL: CALL MMJ$MAPIOP (FBNO , PPNO);
      214       22        *        INPUT:    PPNO - The physical page to map into an FPOOL.
      215       23        *        OUTPUT:   FBNO - The file buffer (1-30) obtained.
      216       24        *        DESCRIPTION: This is called to map a page of the
      217       25        *        I/O cache. A file buffer is obtained (FMD$TRNC if required),
      218       26        *        and the physical page is mapped into it.   */
      219       27        %EJECT;
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:45   
      220       28        MMJ$FBTOIOP: PROC (FBNO , PPNO);
      221       29
      222       30    1   DCL FBNO UBIN;
      223       31    1   DCL FBNOS REDEF FBNO SBIN;
      224       32    1   DCL PPNO UBIN;
      225       33    1   DCL I SBIN;
      226       34    1   DCL B$UPT$ PTR SYMREF READONLY;
      227       35    1   DCL B$PPUT$ PTR SYMREF READONLY;
      228       36    1   DCL B$JIT$ PTR SYMREF READONLY;
      229       37    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
      230       38    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
      231       39        %INCLUDE MM_DATA_R;
      232      559        %INCLUDE HF_DATA_R;
      233      602    1   DCL 1 MAPCONST CONSTANT,
      234      603    1         2 RPN UBIN HALF HALIGNED INIT(0),
      235      604    1         2 SCTRL BIT(10) INIT(%SCCVM),
      236      605    1         2 * BIT(2) INIT('0'B),
      237      606    1         2 CTRL BIT(6) INIT(%(%PGINMEM|%PGWRITE|%PGIOM));
      238      607
      239      608        %INCLUDE B$MAP;
      240      707        %INCLUDE B$USER;
      241      923        %B$USERREFS;
      242      927        %INCLUDE M$JIT_C;
      243     1447
      244     1448    1   DCL MMA$LOCKBP ENTRY;
      245     1449    1   DCL MMA$UNLOCKBP ENTRY;
      246     1450    1   DCL HFC$ASSOCCLR ENTRY(3);
      247     1451    1   DCL FMD$TRNC ENTRY;
      248     1452    1   DCL SC_MM28 ENTRY CONV(2,0);
      249     1453
      250     1454    1           CALL SWITCH;
      251     1455    1             B$UPT$ -> B$MAP (FBNOS + %FMSEGLO - 1) = MM_FPMC;
      252     1456    1           B$JIT.FBUC = B$JIT.FBUC - 1;
      253     1457    1           CALL HFC$ASSOCCLR(%USERWSQ,FBNOS+%FMSEGLO-1,1);
      254     1458    1           RETURN;
      255     1459        %EJECT;
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:46   
      256     1460    1   MMJ$MAPIOP: ENTRY (FBNO , PPNO);
      257     1461
      258     1462    1           B$JIT.FBUC = B$JIT.FBUC + 1;
      259     1463    1           IF B$JIT.FBUC > B$JIT.FBUL
      260     1464    2             THEN DO;
      261     1465    2                 CALL FMD$TRNC;
      262     1466    2               END;
      263     1467    2           DO I = 1 TO %FMSEGSIZ;
      264     1468    2             IF B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1) = MM_FPMC.RPN
      265     1469    3               THEN DO;
      266     1470    3                   FBNO = I;
      267     1471    3                   B$UPT$ -> B$MAP (I + %FMSEGLO - 1) = MAPCONST;
      268     1472    3                   IF HW_WSQ0PT THEN
      269     1473    3                     B$UPT$->B$MAP.RPN(I+%FMSEGLO-1)=B$WSQ0PT$->B$MAP.RPN(PPNO);
      270     1474    3                     ELSE
      271     1475    3                     B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1) = PPNO;
      272     1476    3                   RETURN;
      273     1477    3                 END;
      274     1478    2           END;
      275     1479    1           CALL SC_MM28;
      276     1480    1           RETURN;
      277     1481        %EJECT;
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:47   
      278     1482    1   MMJ$FBTOIOPM: ENTRY (FBNO , PPNO);
      279     1483
      280     1484    1           CALL SWITCH;
      281     1485    1             RETURN;
      282     1486
      283     1487    1             SWITCH: PROC;
      284     1488
      285     1489    2             CALL MMA$LOCKBP;
      286     1490    2             PPNO = B$UPT$ -> B$MAP.RPN (FBNOS + %FMSEGLO - 1);
      287     1491    2           B$UPT$ -> B$MAP (FBNOS + %FMSEGLO - 1) = MAPCONST;
      288     1492    2           B$UPT$ -> B$MAP.RPN (FBNOS + %FMSEGLO - 1) = PPNO;
      289     1493    2           MM_IOCC = MM_IOCC + 1;
      290     1494    2           IF HW_WSQ0PT THEN
      291     1495    2             PPNO=B$IPHYMAP$->MM$IPHY_MAP(PPNO);
      292     1496    2           B$PPUT$ -> MM$PPUT.USER (PPNO) = '0'B;
      293     1497    2           B$PPUT$ -> MM$PPUT.IO (PPNO) = '1'B;
      294     1498    2           CALL MMA$UNLOCKBP;
      295     1499    2           B$JIT.PPC = B$JIT.PPC - 1;
      296     1500    2           S$CU$ -> B$U.PCT = B$JIT.PPC;
      297     1501    2           RETURN;
      298     1502    2   END SWITCH;
      299     1503    1     END MMJ$FBTOIOP;
      300     1504          %EOD;

PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:48   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$FBTOIOP.

   Procedure MMJ$FBTOIOP requires 119 words for executable code.
   Procedure MMJ$FBTOIOP requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:49   

 Object Unit name= MMJ$FBTOIOP                                File name= MMJ$FSEG.:E05TOU
 UTS= JUL 30 '97 03:22:09.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      1      1  MMJ$FBTOIOP
    1   Proc  even  none   119    167  MMJ$FBTOIOP
    2  RoData even  none     3      3  MMJ$FBTOIOP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  MMJ$FBTOIOP
     1     33                  yes      Std        2  MMJ$MAPIOP
     1    106                  yes      Std        2  MMJ$FBTOIOPM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 HFC$ASSOCCLR
         yes           Std       0 FMD$TRNC
         yes           Std       0 MMA$LOCKBP
         yes           Std       0 MMA$UNLOCKBP
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:50   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM28                          r    B$UPT$                           r    B$PPUT$
r    B$JIT$                           r    B$WSQ0PT$                        r    B$IPHYMAP$
     MM_IOCC                          r    MM_BYP$                               MM_FPMC
     HW_WSQ0PT                             S$CU$                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID                             ISSID
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:51   


      193        1        /*T***********************************************************/
      194        2        /*T*                                                         */
      195        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      196        4        /*T*                                                         */
      197        5        /*T***********************************************************/
      198        6        /*D*     NAME: MMJ$FBTOIOP
      199        7        *        CALL: CALL MMJ$FBTOIOP (FBNO , PPNO);
      200        8        *        INPUT:    FBNO - The file buffer (1-30) to switch.
      201        9        *        OUTPUT:   PPNO - The physical page which was the file page.
      202       10        *        DESCRIPTION: This is called to change a file buffer page
      203       11        *        into an I/O cache page. The appropriate counts are maintained,
      204       12        *        and the page is removed from the map.    */
      205       13        /*D*     NAME: MMJ$FBTOIOPM
      206       14        *        CALL: CALL MMJ$FBTOIOPM (FBNO , PPNO);
      207       15        *        INPUT:    FBNO - The file buffer (1-30) to switch.
      208       16        *        OUTPUT:   PPNO - The physical page which was the file page.
      209       17        *        DESCRIPTION: This is called to change a file buffer page
      210       18        *        into an I/O cache page. The appropriate counts are maintained,
      211       19        *        and the page is left in the map.    */
      212       20        /*D*     NAME: MMJ$MAPIOP
      213       21        *        CALL: CALL MMJ$MAPIOP (FBNO , PPNO);
      214       22        *        INPUT:    PPNO - The physical page to map into an FPOOL.
      215       23        *        OUTPUT:   FBNO - The file buffer (1-30) obtained.
      216       24        *        DESCRIPTION: This is called to map a page of the
      217       25        *        I/O cache. A file buffer is obtained (FMD$TRNC if required),
      218       26        *        and the physical page is mapped into it.   */
      219       27        %EJECT;
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:52   
      220       28        MMJ$FBTOIOP: PROC (FBNO , PPNO);

     28  1 000000   000000 700200 xent  MMJ$FBTOIOP  TSX0  ! X66_AUTO_2
         1 000001   000014 000002                    ZERO    12,2

      221       29
      222       30    1   DCL FBNO UBIN;
      223       31    1   DCL FBNOS REDEF FBNO SBIN;
      224       32    1   DCL PPNO UBIN;
      225       33    1   DCL I SBIN;
      226       34    1   DCL B$UPT$ PTR SYMREF READONLY;
      227       35    1   DCL B$PPUT$ PTR SYMREF READONLY;
      228       36    1   DCL B$JIT$ PTR SYMREF READONLY;
      229       37    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
      230       38    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
      231       39        %INCLUDE MM_DATA_R;
      232      559        %INCLUDE HF_DATA_R;
      233      602    1   DCL 1 MAPCONST CONSTANT,
      234      603    1         2 RPN UBIN HALF HALIGNED INIT(0),
      235      604    1         2 SCTRL BIT(10) INIT(%SCCVM),
      236      605    1         2 * BIT(2) INIT('0'B),
      237      606    1         2 CTRL BIT(6) INIT(%(%PGINMEM|%PGWRITE|%PGIOM));
      238      607
      239      608        %INCLUDE B$MAP;
      240      707        %INCLUDE B$USER;
      241      923        %B$USERREFS;
      242      927        %INCLUDE M$JIT_C;
      243     1447
      244     1448    1   DCL MMA$LOCKBP ENTRY;
      245     1449    1   DCL MMA$UNLOCKBP ENTRY;
      246     1450    1   DCL HFC$ASSOCCLR ENTRY(3);
      247     1451    1   DCL FMD$TRNC ENTRY;
      248     1452    1   DCL SC_MM28 ENTRY CONV(2,0);
      249     1453
      250     1454    1           CALL SWITCH;

   1454  1 000002   000113 701000 1                  TSX1    SWITCH
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:53   
         1 000003   000000 011000                    NOP     0

      251     1455    1             B$UPT$ -> B$MAP (FBNOS + %FMSEGLO - 1) = MM_FPMC;

   1455  1 000004   200003 470500                    LDP0    @FBNO,,AUTO
         1 000005   000000 235100                    LDA     0,,PR0
         1 000006   000000 236000 xsym               LDQ     MM_FPMC
         1 000007   000000 471400 xsym               LDP1    B$UPT$
         1 000010   100017 756105                    STQ     15,AL,PR1

      252     1456    1           B$JIT.FBUC = B$JIT.FBUC - 1;

   1456  1 000011   000000 473400 xsym               LDP3    B$JIT$
         1 000012   300205 220100                    LDX0    133,,PR3
         1 000013   777777 621010                    EAX1    -1,X0
         1 000014   300205 741100                    STX1    133,,PR3

      253     1457    1           CALL HFC$ASSOCCLR(%USERWSQ,FBNOS+%FMSEGLO-1,1);

   1457  1 000015   000000 235100                    LDA     0,,PR0
         1 000016   000017 035007                    ADLA    15,DL
         1 000017   200010 755100                    STA     I+3,,AUTO
         1 000020   000000 236000 2                  LDQ     0
         1 000021   200013 756100                    STQ     I+6,,AUTO
         1 000022   200010 634500                    EPPR4   I+3,,AUTO
         1 000023   200012 454500                    STP4    I+5,,AUTO
         1 000024   000001 236000 2                  LDQ     1
         1 000025   200011 756100                    STQ     I+4,,AUTO
         1 000026   200011 630500                    EPPR0   I+4,,AUTO
         1 000027   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000030   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 000031   000000 011000                    NOP     0

      254     1458    1           RETURN;

   1458  1 000032   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:54   
      255     1459        %EJECT;
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:55   
      256     1460    1   MMJ$MAPIOP: ENTRY (FBNO , PPNO);

   1460  1 000033   000000 700200 xent  MMJ$MAPIOP   TSX0  ! X66_AUTO_2
         1 000034   000014 000002                    ZERO    12,2

      257     1461
      258     1462    1           B$JIT.FBUC = B$JIT.FBUC + 1;

   1462  1 000035   000000 470400 xsym               LDP0    B$JIT$
         1 000036   000205 220100                    LDX0    133,,PR0
         1 000037   000001 621010                    EAX1    1,X0
         1 000040   000205 741100                    STX1    133,,PR0

      259     1463    1           IF B$JIT.FBUC > B$JIT.FBUL

   1463  1 000041   000205 720100                    LXL0    133,,PR0
         1 000042   000205 100100                    CMPX0   133,,PR0
         1 000043   000047 603000 1                  TRC     s:1467

      260     1464    2             THEN DO;

      261     1465    2                 CALL FMD$TRNC;

   1465  1 000044   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000045   000000 701000 xent               TSX1    FMD$TRNC
         1 000046   000000 011000                    NOP     0

      262     1466    2               END;

      263     1467    2           DO I = 1 TO %FMSEGSIZ;

   1467  1 000047   000001 235007                    LDA     1,DL
         1 000050   200005 755100                    STA     I,,AUTO

      264     1468    2             IF B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1) = MM_FPMC.RPN

   1468  1 000051   000000 470400 xsym               LDP0    B$UPT$
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:56   
         1 000052   200005 720100                    LXL0    I,,AUTO
         1 000053   000017 221110                    LDX1    15,X0,PR0
         1 000054   000000 101000 xsym               CMPX1   MM_FPMC
         1 000055   000077 601000 1                  TNZ     s:1478

      265     1469    3               THEN DO;

      266     1470    3                   FBNO = I;

   1470  1 000056   200005 235100                    LDA     I,,AUTO
         1 000057   200003 471500                    LDP1    @FBNO,,AUTO
         1 000060   100000 755100                    STA     0,,PR1

      267     1471    3                   B$UPT$ -> B$MAP (I + %FMSEGLO - 1) = MAPCONST;

   1471  1 000061   000000 236000 0                  LDQ     MAPCONST
         1 000062   000017 756110                    STQ     15,X0,PR0

      268     1472    3                   IF HW_WSQ0PT THEN

   1472  1 000063   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000064   000073 605000 1                  TPL     s:1475

      269     1473    3                     B$UPT$->B$MAP.RPN(I+%FMSEGLO-1)=B$WSQ0PT$->B$MAP.RPN(PPNO);

   1473  1 000065   200004 473500                    LDP3    @PPNO,,AUTO
         1 000066   300000 721100                    LXL1    0,,PR3
         1 000067   000000 474400 xsym               LDP4    B$WSQ0PT$
         1 000070   400000 222111                    LDX2    0,X1,PR4
         1 000071   000017 742110                    STX2    15,X0,PR0
         1 000072   000076 710000 1                  TRA     s:1476

      270     1474    3                     ELSE
      271     1475    3                     B$UPT$ -> B$MAP.RPN (I + %FMSEGLO - 1) = PPNO;

   1475  1 000073   200004 473500                    LDP3    @PPNO,,AUTO
         1 000074   300000 721100                    LXL1    0,,PR3
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:57   
         1 000075   000017 741110                    STX1    15,X0,PR0

      272     1476    3                   RETURN;

   1476  1 000076   000000 702200 xent               TSX2  ! X66_ARET

      273     1477    3                 END;
      274     1478    2           END;

   1478  1 000077   200005 054100                    AOS     I,,AUTO
         1 000100   200005 235100                    LDA     I,,AUTO
         1 000101   000037 115007                    CMPA    31,DL
         1 000102   000051 604400 1                  TMOZ    s:1468

      275     1479    1           CALL SC_MM28;

   1479  1 000103   000000 713400 xsym               CLIMB   SC_MM28
         1 000104   000000 600000 xsid               climb   nvectors=         0

      276     1480    1           RETURN;

   1480  1 000105   000000 702200 xent               TSX2  ! X66_ARET

      277     1481        %EJECT;
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:58   
      278     1482    1   MMJ$FBTOIOPM: ENTRY (FBNO , PPNO);

   1482  1 000106   000000 700200 xent  MMJ$FBTOIOPM TSX0  ! X66_AUTO_2
         1 000107   000014 000002                    ZERO    12,2

      279     1483
      280     1484    1           CALL SWITCH;

   1484  1 000110   000113 701000 1                  TSX1    SWITCH
         1 000111   000000 011000                    NOP     0

      281     1485    1             RETURN;

   1485  1 000112   000000 702200 xent               TSX2  ! X66_ARET

      282     1486
      283     1487    1             SWITCH: PROC;

   1487  1 000113   200006 741300       SWITCH       STX1  ! I+1,,AUTO

      284     1488
      285     1489    2             CALL MMA$LOCKBP;

   1489  1 000114   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000115   000000 701000 xent               TSX1    MMA$LOCKBP
         1 000116   000000 011000                    NOP     0

      286     1490    2             PPNO = B$UPT$ -> B$MAP.RPN (FBNOS + %FMSEGLO - 1);

   1490  1 000117   200003 470500                    LDP0    @FBNO,,AUTO
         1 000120   000000 235100                    LDA     0,,PR0
         1 000121   000000 471400 xsym               LDP1    B$UPT$
         1 000122   100017 236105                    LDQ     15,AL,PR1
         1 000123   000022 772000                    QRL     18
         1 000124   200004 473500                    LDP3    @PPNO,,AUTO
         1 000125   300000 756100                    STQ     0,,PR3

PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:59   
      287     1491    2           B$UPT$ -> B$MAP (FBNOS + %FMSEGLO - 1) = MAPCONST;

   1491  1 000126   000000 235100                    LDA     0,,PR0
         1 000127   000000 236000 0                  LDQ     MAPCONST
         1 000130   100017 756105                    STQ     15,AL,PR1

      288     1492    2           B$UPT$ -> B$MAP.RPN (FBNOS + %FMSEGLO - 1) = PPNO;

   1492  1 000131   000000 235100                    LDA     0,,PR0
         1 000132   300000 720100                    LXL0    0,,PR3
         1 000133   100017 740105                    STX0    15,AL,PR1

      289     1493    2           MM_IOCC = MM_IOCC + 1;

   1493  1 000134   000000 054000 xsym               AOS     MM_IOCC

      290     1494    2           IF HW_WSQ0PT THEN

   1494  1 000135   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000136   000145 605000 1                  TPL     s:1496

      291     1495    2             PPNO=B$IPHYMAP$->MM$IPHY_MAP(PPNO);

   1495  1 000137   300000 235100                    LDA     0,,PR3
         1 000140   000001 735000                    ALS     1
         1 000141   000000 474400 xsym               LDP4    B$IPHYMAP$
         1 000142   000100 101505                    MRL     fill='000'O
         1 000143   400000 000002                    ADSC9   0,A,PR4                  cn=0,n=2
         1 000144   300000 000004                    ADSC9   0,,PR3                   cn=0,n=4

      292     1496    2           B$PPUT$ -> MM$PPUT.USER (PPNO) = '0'B;

   1496  1 000145   300000 720100                    LXL0    0,,PR3
         1 000146   000000 474400 xsym               LDP4    B$PPUT$
         1 000147   000002 236000 2                  LDQ     2
         1 000150   400000 356110                    ANSQ    0,X0,PR4

PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:60   
      293     1497    2           B$PPUT$ -> MM$PPUT.IO (PPNO) = '1'B;

   1497  1 000151   300000 720100                    LXL0    0,,PR3
         1 000152   010000 236003                    LDQ     4096,DU
         1 000153   400000 256110                    ORSQ    0,X0,PR4

      294     1498    2           CALL MMA$UNLOCKBP;

   1498  1 000154   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000155   000000 701000 xent               TSX1    MMA$UNLOCKBP
         1 000156   000000 011000                    NOP     0

      295     1499    2           B$JIT.PPC = B$JIT.PPC - 1;

   1499  1 000157   000000 470400 xsym               LDP0    B$JIT$
         1 000160   000207 720100                    LXL0    135,,PR0
         1 000161   777777 621010                    EAX1    -1,X0
         1 000162   000207 441100                    SXL1    135,,PR0

      296     1500    2           S$CU$ -> B$U.PCT = B$JIT.PPC;

   1500  1 000163   000000 471400 xsym               LDP1    S$CU$
         1 000164   100010 741100                    STX1    8,,PR1

      297     1501    2           RETURN;

   1501  1 000165   200006 221300                    LDX1  ! I+1,,AUTO
         1 000166   000001 702211                    TSX2  ! 1,X1

MAPCONST
 Sect OctLoc
   0     000   000000 001064                                                    ...4

(unnamed)
 Sect OctLoc
   2     000   000003 006000   000012 006000   757777 777777                    ............
      298     1502    2   END SWITCH;
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:61   
      299     1503    1     END MMJ$FBTOIOP;
      300     1504          %EOD;

PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:62   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$FBTOIOP.
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:63   

 **** Variables and constants ****

  ****  Section 000 RoData MMJ$FBTOIOP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC        r     1 MAPCONST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FBNO                      4-0-0/w PTR         r     1 @PPNO
    *0-0-0/w UBIN        r     1 FBNO                      *0-0-0/w SBIN        r     1 FBNOS
     5-0-0/w SBIN        r     1 I                         *0-0-0/w UBIN        r     1 PPNO

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IPHYMAP$                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 B$WSQ0PT$                  0-0-0/w BIT         r     1 HW_WSQ0PT
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/b STRC        r     1 MM_FPMC
     0-0-0/w SBIN        r     1 MM_IOCC                    0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(576)   r     1 B$U
     0-0-0/h UBIN(18)    r     1 MM$IPHY_MAP(0:0)
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:64   
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MMJ$FBTOIOP requires 119 words for executable code.
   Procedure MMJ$FBTOIOP requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:65   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:66   
          MINI XREF LISTING

B$DO.ECCINFO
       858**DCL       859--REDEF
B$IPHYMAP$
        38**DCL      1495>>ASSIGN
B$JIT.ERR.MID
      1255**DCL      1255--REDEF
B$JIT.FBUC
      1343**DCL      1456<<ASSIGN   1456>>ASSIGN   1462<<ASSIGN   1462>>ASSIGN   1463>>IF
B$JIT.FBUL
      1343**DCL      1463>>IF
B$JIT.JRESPEAK
      1345**DCL      1346--REDEF
B$JIT.PPC
      1344**DCL      1499<<ASSIGN   1499>>ASSIGN   1500>>ASSIGN
B$JIT$
        36**DCL      1249--IMP-PTR  1456>>ASSIGN   1456>>ASSIGN   1462>>ASSIGN   1462>>ASSIGN   1463>>IF
      1463>>IF       1499>>ASSIGN   1499>>ASSIGN   1500>>ASSIGN
B$MAP
       649**DCL      1455<<ASSIGN   1471<<ASSIGN   1491<<ASSIGN
B$MAP.RPN
       650**DCL      1468>>IF       1473<<ASSIGN   1473>>ASSIGN   1475<<ASSIGN   1490>>ASSIGN   1492<<ASSIGN
B$MAP.SCTRL
       651**DCL       652--REDEF
B$PPUT$
        35**DCL      1496>>ASSIGN   1497>>ASSIGN
B$U.MISC
       837**DCL       838--REDEF
B$U.PCT
       821**DCL      1500<<ASSIGN
B$UPT$
        34**DCL      1455>>ASSIGN   1468>>IF       1471>>ASSIGN   1473>>ASSIGN   1475>>ASSIGN   1490>>ASSIGN
      1491>>ASSIGN   1492>>ASSIGN
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:67   
B$USER.MISC
       913**DCL       914--REDEF
B$WSQ0PT$
        37**DCL      1473>>ASSIGN
FBNO
        30**DCL        28--PROC       31--REDEF    1460--ENTRY    1470<<ASSIGN   1482--ENTRY
FBNOS
        31**DCL      1455>>ASSIGN   1457>>CALL     1490>>ASSIGN   1491>>ASSIGN   1492>>ASSIGN
FMD$TRNC
      1451**DCL-ENT  1465--CALL
HFC$ASSOCCLR
      1450**DCL-ENT  1457--CALL
HW_WSQ0PT
       597**DCL      1472>>IF       1494>>IF
I
        33**DCL      1467<<DOINDEX  1468>>IF       1470>>ASSIGN   1471>>ASSIGN   1473>>ASSIGN   1475>>ASSIGN
MAPCONST
       602**DCL      1471>>ASSIGN   1491>>ASSIGN
MM$DESC.BOUND
       510**DCL       511--REDEF
MM$DESC.FLGS
       511**DCL       511--REDEF
MM$IPHY_MAP
       705**DCL      1495>>ASSIGN
MM$PPUT.IO
       498**DCL      1497<<ASSIGN
MM$PPUT.USER
       498**DCL      1496<<ASSIGN
MM$PPUT.USER#
       499**DCL       499--REDEF
MMA$LOCKBP
      1448**DCL-ENT  1489--CALL
MMA$UNLOCKBP
      1449**DCL-ENT  1498--CALL
MM_BYP$
       430**DCL       430--IMP-PTR
PL6.E3A0      #003=MMJ$FBTOIOP File=MMJ$FSEG.:E05TSI                             WED 07/30/97 03:22 Page:68   
MM_FPMC
       436**DCL      1455>>ASSIGN
MM_FPMC.RPN
       436**DCL      1468>>IF
MM_IOCC
       429**DCL      1493<<ASSIGN   1493>>ASSIGN
PPNO
        32**DCL        28--PROC     1460--ENTRY    1473>>ASSIGN   1475>>ASSIGN   1482--ENTRY    1490<<ASSIGN
      1492>>ASSIGN   1495<<ASSIGN   1495>>ASSIGN   1496>>ASSIGN   1497>>ASSIGN
S$CU$
       924**DCL      1500>>ASSIGN
SC_MM28
      1452**DCL-ENT  1479--CALL
SWITCH
      1487**PROC     1454--CALL     1484--CALL

PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:69   
      301        1        /*D*     NAME: MMJ$UNMAPIOP
      302        2        *        CALL: CALL MMJ$UNMAPIOP (FBNO);
      303        3        *        INPUT:    FBNO - The file buffer (1-30) to be unmapped.
      304        4        *        DESCRIPTION: This is called to unmap a page of the
      305        5        *        I/O cache.
      306        6        *        B$JIT.FBUC is maintained.   */
      307        7          %EJECT;
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:70   
      308        8          MMJ$UNMAPIOP: PROC (FBNO);
      309        9
      310       10    1   DCL FBNO UBIN;
      311       11    1   DCL FBNOS REDEF FBNO SBIN;
      312       12
      313       13    1   DCL B$JIT$ PTR SYMREF READONLY;
      314       14    1   DCL B$UPT$ PTR SYMREF READONLY;
      315       15
      316       16    1   DCL HFC$ASSOCCLR ENTRY(3);
      317       17
      318       18        %INCLUDE MM_DATA_R;
      319      538        %INCLUDE HF_DATA_R;
      320      581        %INCLUDE B$MAP;
      321      680        %INCLUDE M$JIT_C;
      322     1200
      323     1201    1           B$UPT$ -> B$MAP (FBNOS + %FMSEGLO - 1) = MM_FPMC;
      324     1202    1           B$JIT.FBUC = B$JIT.FBUC - 1;
      325     1203    1           CALL HFC$ASSOCCLR(%USERWSQ,FBNOS+%FMSEGLO-1,1);
      326     1204    1           END MMJ$UNMAPIOP;
      327     1205        %EOD;

PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:71   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$UNMAPIOP.

   Procedure MMJ$UNMAPIOP requires 25 words for executable code.
   Procedure MMJ$UNMAPIOP requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:72   

 Object Unit name= MMJ$UNMAPIOP                               File name= MMJ$FSEG.:E05TOU
 UTS= JUL 30 '97 03:22:30.20 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    25     31  MMJ$UNMAPIOP
    1  RoData even  none     2      2  MMJ$UNMAPIOP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  MMJ$UNMAPIOP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 HFC$ASSOCCLR
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                           r    B$UPT$                           r    MM_BYP$
     MM_FPMC                               B_VECTNIL
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:73   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:74   


      301        1        /*D*     NAME: MMJ$UNMAPIOP
      302        2        *        CALL: CALL MMJ$UNMAPIOP (FBNO);
      303        3        *        INPUT:    FBNO - The file buffer (1-30) to be unmapped.
      304        4        *        DESCRIPTION: This is called to unmap a page of the
      305        5        *        I/O cache.
      306        6        *        B$JIT.FBUC is maintained.   */
      307        7          %EJECT;
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:75   
      308        8          MMJ$UNMAPIOP: PROC (FBNO);

      8  0 000000   000000 700200 xent  MMJ$UNMAPIOP TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      309        9
      310       10    1   DCL FBNO UBIN;
      311       11    1   DCL FBNOS REDEF FBNO SBIN;
      312       12
      313       13    1   DCL B$JIT$ PTR SYMREF READONLY;
      314       14    1   DCL B$UPT$ PTR SYMREF READONLY;
      315       15
      316       16    1   DCL HFC$ASSOCCLR ENTRY(3);
      317       17
      318       18        %INCLUDE MM_DATA_R;
      319      538        %INCLUDE HF_DATA_R;
      320      581        %INCLUDE B$MAP;
      321      680        %INCLUDE M$JIT_C;
      322     1200
      323     1201    1           B$UPT$ -> B$MAP (FBNOS + %FMSEGLO - 1) = MM_FPMC;

   1201  0 000002   200003 470500                    LDP0    @FBNO,,AUTO
         0 000003   000000 235100                    LDA     0,,PR0
         0 000004   000000 236000 xsym               LDQ     MM_FPMC
         0 000005   000000 471400 xsym               LDP1    B$UPT$
         0 000006   100017 756105                    STQ     15,AL,PR1

      324     1202    1           B$JIT.FBUC = B$JIT.FBUC - 1;

   1202  0 000007   000000 473400 xsym               LDP3    B$JIT$
         0 000010   300205 220100                    LDX0    133,,PR3
         0 000011   777777 621010                    EAX1    -1,X0
         0 000012   300205 741100                    STX1    133,,PR3

      325     1203    1           CALL HFC$ASSOCCLR(%USERWSQ,FBNOS+%FMSEGLO-1,1);

   1203  0 000013   000000 235100                    LDA     0,,PR0
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:76   
         0 000014   000017 035007                    ADLA    15,DL
         0 000015   200004 755100                    STA     @FBNO+1,,AUTO
         0 000016   000000 236000 1                  LDQ     0
         0 000017   200007 756100                    STQ     @FBNO+4,,AUTO
         0 000020   200004 634500                    EPPR4   @FBNO+1,,AUTO
         0 000021   200006 454500                    STP4    @FBNO+3,,AUTO
         0 000022   000001 236000 1                  LDQ     1
         0 000023   200005 756100                    STQ     @FBNO+2,,AUTO
         0 000024   200005 630500                    EPPR0   @FBNO+2,,AUTO
         0 000025   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000026   000000 701000 xent               TSX1    HFC$ASSOCCLR
         0 000027   000000 011000                    NOP     0

      326     1204    1           END MMJ$UNMAPIOP;

   1204  0 000030   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000003 006000   000012 006000                                    ........
      327     1205        %EOD;

PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:77   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$UNMAPIOP.
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:78   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FBNO                     *0-0-0/w UBIN        r     1 FBNO
    *0-0-0/w SBIN        r     1 FBNOS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/b STRC        r     1 MM_FPMC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)


   Procedure MMJ$UNMAPIOP requires 25 words for executable code.
   Procedure MMJ$UNMAPIOP requires 8 words of local(AUTO) storage.
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:79   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=MMJ$UNMAPIOP File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:80   
          MINI XREF LISTING

B$JIT.ERR.MID
      1008**DCL      1008--REDEF
B$JIT.FBUC
      1096**DCL      1202<<ASSIGN   1202>>ASSIGN
B$JIT.JRESPEAK
      1098**DCL      1099--REDEF
B$JIT$
        13**DCL      1002--IMP-PTR  1202>>ASSIGN   1202>>ASSIGN
B$MAP
       622**DCL      1201<<ASSIGN
B$MAP.SCTRL
       624**DCL       625--REDEF
B$UPT$
        14**DCL      1201>>ASSIGN
FBNO
        10**DCL         8--PROC       11--REDEF
FBNOS
        11**DCL      1201>>ASSIGN   1203>>CALL
HFC$ASSOCCLR
        16**DCL-ENT  1203--CALL
MM$DESC.BOUND
       489**DCL       490--REDEF
MM$DESC.FLGS
       490**DCL       490--REDEF
MM$PPUT.USER#
       478**DCL       478--REDEF
MM_BYP$
       409**DCL       409--IMP-PTR
MM_FPMC
       415**DCL      1201>>ASSIGN

PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:81   
      328        1        /*T***********************************************************/
      329        2        /*T*                                                         */
      330        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      331        4        /*T*                                                         */
      332        5        /*T***********************************************************/
      333        6        /*F*    NAME:   MMJ$FPPCHAIN
      334        7                PURPOSE: To release all of the physical pages on a page
      335        8                        chain obtained for a shared data segment via
      336        9                        the MMH$SHARE_DS routine.   */
      337       10        MMJ$FPPCHAIN: PROC(HEAD,TAIL,COUNT);
      338       11    1   DCL HEAD UBIN;
      339       12    1   DCL TAIL UBIN;
      340       13    1   DCL COUNT SBIN;
      341       14        /**/
      342       15    1   DCL PPNO UBIN;
      343       16    1   DCL NXTPP UBIN;
      344       17    1   DCL CHK_COUNT SBIN;
      345       18        /**/
      346       19        %INCLUDE MM_DATA_R;
      347      539        /**/
      348      540    1   DCL B$PPUT$ PTR SYMREF;
      349      541    1   DCL MMB$FPP ENTRY(1) ALTRET;
      350      542    1   DCL SC_MM45 ENTRY CONV(2,0);
      351      543        /**/
      352      544        %SUB MM$PPUT = B$PPUT$->MM$PPUT;
      353      545        /**/
      354      546        %EJECT;
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:82   
      355      547        /**/
      356      548    1           CHK_COUNT = 0;
      357      549    1           PPNO = HEAD;
      358      550    2           DO WHILE (PPNO ~= 0);
      359      551    2             NXTPP = MM$PPUT.PPNO(PPNO);
      360      552    2             CALL MMB$FPP(PPNO);
      361      553    2             CHK_COUNT = CHK_COUNT + 1;
      362      554    2             PPNO = NXTPP;
      363      555    2           END;
      364      556    1           IF CHK_COUNT ~= COUNT THEN CALL SC_MM45;
      365      557        /*S*    SCREECH_CODE:   MMJ-S$MM45
      366      558                TYPE:   SNAP
      367      559                MESSAGE: The page chain count passed does not agree with the
      368      560                        actual length of the chain.                        */
      369      561    1           RETURN;
      370      562    1   END MMJ$FPPCHAIN;

PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:83   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$FPPCHAIN.

   Procedure MMJ$FPPCHAIN requires 29 words for executable code.
   Procedure MMJ$FPPCHAIN requires 12 words of local(AUTO) storage.

    No errors detected in file MMJ$FSEG.:E05TSI    .

PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:84   

 Object Unit name= MMJ$FPPCHAIN                               File name= MMJ$FSEG.:E05TOU
 UTS= JUL 30 '97 03:22:45.72 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    29     35  MMJ$FPPCHAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  MMJ$FPPCHAIN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 MMB$FPP
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_MM45                          r    MM_BYP$                               B$PPUT$
     B_VECTNIL
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:85   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ASLENTSID
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:86   


      328        1        /*T***********************************************************/
      329        2        /*T*                                                         */
      330        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      331        4        /*T*                                                         */
      332        5        /*T***********************************************************/
      333        6        /*F*    NAME:   MMJ$FPPCHAIN
      334        7                PURPOSE: To release all of the physical pages on a page
      335        8                        chain obtained for a shared data segment via
      336        9                        the MMH$SHARE_DS routine.   */
      337       10        MMJ$FPPCHAIN: PROC(HEAD,TAIL,COUNT);

     10  0 000000   000000 700200 xent  MMJ$FPPCHAIN TSX0  ! X66_AUTO_3
         0 000001   000014 000003                    ZERO    12,3

      338       11    1   DCL HEAD UBIN;
      339       12    1   DCL TAIL UBIN;
      340       13    1   DCL COUNT SBIN;
      341       14        /**/
      342       15    1   DCL PPNO UBIN;
      343       16    1   DCL NXTPP UBIN;
      344       17    1   DCL CHK_COUNT SBIN;
      345       18        /**/
      346       19        %INCLUDE MM_DATA_R;
      347      539        /**/
      348      540    1   DCL B$PPUT$ PTR SYMREF;
      349      541    1   DCL MMB$FPP ENTRY(1) ALTRET;
      350      542    1   DCL SC_MM45 ENTRY CONV(2,0);
      351      543        /**/
      352      544        %SUB MM$PPUT = B$PPUT$->MM$PPUT;
      353      545        /**/
      354      546        %EJECT;
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:87   
      355      547        /**/
      356      548    1           CHK_COUNT = 0;

    548  0 000002   200010 450100                    STZ     CHK_COUNT,,AUTO

      357      549    1           PPNO = HEAD;

    549  0 000003   200003 470500                    LDP0    @HEAD,,AUTO
         0 000004   000000 235100                    LDA     0,,PR0
         0 000005   200006 755100                    STA     PPNO,,AUTO

      358      550    2           DO WHILE (PPNO ~= 0);

    550  0 000006   000026 600000 0                  TZE     s:556

      359      551    2             NXTPP = MM$PPUT.PPNO(PPNO);

    551  0 000007   000000 470400 xsym               LDP0    B$PPUT$
         0 000010   200006 720100                    LXL0    PPNO,,AUTO
         0 000011   000000 236110                    LDQ     0,X0,PR0
         0 000012   777777 376007                    ANQ     -1,DL
         0 000013   200007 756100                    STQ     NXTPP,,AUTO

      360      552    2             CALL MMB$FPP(PPNO);

    552  0 000014   200006 631500                    EPPR1   PPNO,,AUTO
         0 000015   200012 451500                    STP1    CHK_COUNT+2,,AUTO
         0 000016   200012 630500                    EPPR0   CHK_COUNT+2,,AUTO
         0 000017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000020   000000 701000 xent               TSX1    MMB$FPP
         0 000021   000000 011000                    NOP     0

      361      553    2             CHK_COUNT = CHK_COUNT + 1;

    553  0 000022   200010 054100                    AOS     CHK_COUNT,,AUTO

      362      554    2             PPNO = NXTPP;
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:88   

    554  0 000023   200007 235100                    LDA     NXTPP,,AUTO
         0 000024   200006 755100                    STA     PPNO,,AUTO

      363      555    2           END;

    555  0 000025   000007 601000 0                  TNZ     s:551

      364      556    1           IF CHK_COUNT ~= COUNT THEN CALL SC_MM45;

    556  0 000026   200005 470500                    LDP0    @COUNT,,AUTO
         0 000027   200010 236100                    LDQ     CHK_COUNT,,AUTO
         0 000030   000000 116100                    CMPQ    0,,PR0
         0 000031   000034 600000 0                  TZE     s:561

    556  0 000032   000000 713400 xsym               CLIMB   SC_MM45
         0 000033   000000 600000 xsid               climb   nvectors=         0

      365      557        /*S*    SCREECH_CODE:   MMJ-S$MM45
      366      558                TYPE:   SNAP
      367      559                MESSAGE: The page chain count passed does not agree with the
      368      560                        actual length of the chain.                        */
      369      561    1           RETURN;

    561  0 000034   000000 702200 xent               TSX2  ! X66_ARET
      370      562    1   END MMJ$FPPCHAIN;

PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:89   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMJ$FPPCHAIN.
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:90   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @COUNT                     3-0-0/w PTR         r     1 @HEAD
     4-0-0/w PTR         r     1 @TAIL                     10-0-0/w SBIN        r     1 CHK_COUNT
    *0-0-0/w SBIN        r     1 COUNT                     *0-0-0/w UBIN        r     1 HEAD
     7-0-0/w UBIN        r     1 NXTPP                      6-0-0/w UBIN        r     1 PPNO
    *0-0-0/w UBIN        r     1 TAIL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 MM_BYP$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MMJ$FPPCHAIN requires 29 words for executable code.
   Procedure MMJ$FPPCHAIN requires 12 words of local(AUTO) storage.

    No errors detected in file MMJ$FSEG.:E05TSI    .
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:91   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=MMJ$FPPCHAIN File=MMJ$FSEG.:E05TSI                            WED 07/30/97 03:22 Page:92   
          MINI XREF LISTING

B$PPUT$
       540**DCL       551>>ASSIGN
CHK_COUNT
        17**DCL       548<<ASSIGN    553<<ASSIGN    553>>ASSIGN    556>>IF
COUNT
        13**DCL        10--PROC      556>>IF
HEAD
        11**DCL        10--PROC      549>>ASSIGN
MM$DESC.BOUND
       490**DCL       491--REDEF
MM$DESC.FLGS
       491**DCL       491--REDEF
MM$PPUT.PPNO
       479**DCL       551>>ASSIGN
MM$PPUT.USER#
       479**DCL       479--REDEF
MMB$FPP
       541**DCL-ENT   552--CALL
MM_BYP$
       410**DCL       410--IMP-PTR
NXTPP
        16**DCL       551<<ASSIGN    554>>ASSIGN
PPNO
        15**DCL       549<<ASSIGN    550>>DOWHILE   551>>ASSIGN    552<>CALL      554<<ASSIGN
SC_MM45
       542**DCL-ENT   556--CALL
TAIL
        12**DCL        10--PROC
