VERSION E05

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:1    
        1        1        /*M* DXB$CUSE - CHANGES XDELTA'A ACCESS ENVIRONMENT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D*  NAME:  DXB$CUSE
        9        9              DESCRIPTION:  DXB$CUSE RESETS THE ACCESS ENVIROMENT
       10       10                            TO THAT OF ENTRY TO XDELTA.
       11       11                            */
       12       12        /*D*  NAME:  DXB$USE
       13       13              DESCRIPTION:  DXB$USE ESTABLISHES THE ENVIRONMENT TO ACCESS
       14       14                            THE MONITOR (USE MON), REAL MEMORY (USE REAL),
       15       15                            MAPPED MEMORY (USE PT), AND USERS (USE USER).
       16       16                            IN DESIGNATING A USER (USE USER), THE DESIRED
       17       17                            LINKAGE SEGMENT IS ALSO DESIGNATED.
       18       18                            BREAKPOINTS MAY NOT BE PLANTED IF USE REAL OR USE PT
       19       19                            IS IN EFFECT.
       20       20                            */
       21       21        DXB$CUSE: PROC;
       22       22        %INCLUDE DD_SUBS_C;
       23      293        %INCLUDE DD_ERR_C;
       24      690        %INCLUDE DD$BASED;
       25     1993    1   DCL UPLL SBIN;
       26     1994    1   DCL 1 UPLLP REDEF UPLL,
       27     1995    1         2 PLL UBIN(26) UNAL,
       28     1996    1         2 WIRD UBIN(10) UNAL;
       29     1997    1   DCL WHERE$ PTR;
       30     1998    1   DCL APT SBIN;
       31     1999    1   DCL 1 USLPTR,
       32     2000    1         2 ADR UBIN(18) UNAL,
       33     2001    1         2 * UBIN(6) UNAL,
       34     2002    1         2 SEGID UBIN(12) UNAL;
       35     2003        %U$SE;
       36     2011        %U$SE(NAME=USE_REM,STCLASS=SYMREF);
       37     2019    1   DCL W$HERE PTR  BASED;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:2    
       38     2020    1   DCL BITS BIT(36) BASED ALIGNED;
       39     2021        %INCLUDE M$JIT_C;
       40     2228        %INCLUDE M_INFO_C;
       41     2368    1   DCL LS$(0:3) PTR SYMREF;
       42     2369    1   DCL MON_APT UBIN SYMREF;
       43     2370    1   DCL USE_ORIG$ PTR SYMREF;
       44     2371    1   DCL B$JIT$ PTR SYMREF;                  /* Someday, this may go away */
       45     2372    1   DCL USE$ PTR SYMREF;
       46     2373    1   DCL ULS$ PTR SYMREF;
       47     2374    1   DCL UJIT$ PTR SYMREF;
       48     2375    1   DCL UHJIT$ PTR SYMREF;
       49     2376    1   DCL MSL$ PTR SYMREF;
       50     2377    1   DCL UAS$ PTR SYMREF;
       51     2378    1   DCL UPS$ PTR SYMREF;
       52     2379    1   DCL MAP256$ PTR SYMREF;
       53     2380    1   DCL UIS$ PTR SYMREF;
       54     2381    1   DCL MLS$ PTR SYMREF;
       55     2382    1   DCL MJIT$ PTR SYMREF;
       56     2383    1   DCL MHJIT$ PTR SYMREF;
       57     2384    1   DCL SSAS$ PTR SYMREF;
       58     2385    1   DCL SSPS$ PTR SYMREF;
       59     2386    1   DCL SJIT$ PTR SYMREF;
       60     2387    1   DCL SHJIT$ PTR SYMREF;
       61     2388    1   DCL MIS$ PTR SYMREF;
       62     2389    1   DCL SSISR$ PTR SYMREF;
       63     2390    1   DCL SIS$ PTR SYMREF;
       64     2391    1   DCL DNAME$ PTR SYMREF;
       65     2392    1   DCL SCHEMA$ PTR SYMREF;
       66     2393    1   DCL ASDEF$ PTR SYMREF;
       67     2394    1   DCL AEDEF$ PTR SYMREF;
       68     2395    1   DCL ADNAME$ PTR SYMREF;
       69     2396    1   DCL ASCHEMA$ PTR SYMREF;
       70     2397    1   DCL D_SCHEMA$ PTR SYMREF;
       71     2398    1   DCL D_SDEF_END$ PTR SYMREF;
       72     2399    1   DCL D_EDEF_END$ PTR SYMREF;
       73     2400    1   DCL D_ASDEF_END$ PTR SYMREF;
       74     2401    1   DCL D_AEDEF_END$ PTR SYMREF;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:3    
       75     2402    1   DCL 1 D_XOU_NAME SYMREF,
       76     2403    1         2 SZ UBIN BYTE UNAL,
       77     2404    1         2 TXT CHAR(31) UNAL;
       78     2405    1   DCL 1 D_AXOU_NAME SYMREF,
       79     2406    1         2 SZ UBIN BYTE UNAL,
       80     2407    1         2 TXT CHAR(31) UNAL;
       81     2408    1   DCL D_ALTDOM UBIN SYMREF;
       82     2409    1   DCL D_SYMBOLS BIT(1) SYMREF;
       83     2410        %INCLUDE XUH_MACRO_C;
       84     2494        %INCLUDE DD_SD_M;
       85     3830        %S_D;
       86     5148        %INCLUDE B_STRINGS_C;
       87     5277    1   DCL DXC$XDELWSQ ENTRY(1);
       88     5278    1   DCL DXC$USERWSQ ENTRY(1);
       89     5279    1   DCL DXC$SET_WSR7 ENTRY(1);
       90     5280    1   DCL DXC$RESET_WSR7 ENTRY;
       91     5281    1   DCL DDS$SET_MX2X ENTRY ALTRET;
       92     5282    1   DCL DDS$SET_AX2X ENTRY ALTRET;
       93     5283    1   DCL DXA$GET_APT1 ENTRY(2);
       94     5284    1   DCL DXC$GETIS ENTRY(1);
       95     5285    1   DCL DDE$ERROR ENTRY;
       96     5286    1   DCL DXA$VERIFY_APT ENTRY(1) ALTRET;
       97     5287    1   DCL DXB$UNODE ENTRY(1);
       98     5288                                                /**/
       99     5289    1        U$SE = USE_ORIG$ -> U$SE;          /* Restore entry environment */
      100     5290                                                /**/
      101     5291    1   DXB$USE: ENTRY;                         /* General entry point */
      102     5292    1        USE_REM = U$SE;
      103     5293                                                /* RESTORE WSR7 TO ITS ORIGINAL STATE */
      104     5294    1        CALL DXC$RESET_WSR7;
      105     5295    1        D_SYMBOLS = '0'B;
      106     5296    1        S_D.OVERLAID = '0'B;
      107     5297                                                /* GET USE TYPE */
      108     5298    2        DO CASE( U$SE.TYPE );
      109     5299    2          CASE(USE_MON);                   /* USE MON */
      110     5300                       /* ESTABLISH WORKING POINTERS TO THE MAIN MONITOR SEGMENTS */
      111     5301    2             UIS$ = MIS$;                  /* INSTRUCTION SEGMENT */
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:4    
      112     5302    2             ULS$ = MLS$;                  /* LINKAGE SEGMENT */
      113     5303    2             UJIT$ = MJIT$;                /* JIT */
      114     5304    2             UHJIT$ = MHJIT$;              /* HJIT */
      115     5305    2             S_D.SL$ = MSL$;               /* SPECIAL LOCATIONS */
      116     5306    2             S_D.DNAME$ = DNAME$;
      117     5307    2             CALL DXB$UNODE(S_D.UNODE.USENODE);
      118     5308    2             S_D.XOU_NAME = D_XOU_NAME;
      119     5309    2             CALL DDS$SET_MX2X;
      120     5310    2             D_SCHEMA$ = SCHEMA$;
      121     5311    2             D_SYMBOLS = '1'B;
      122     5312    2             S_D.OVERLAID = '1'B;
      123     5313    2             CALL DXC$XDELWSQ(MON_APT);    /* LOAD MON PAGE TABLE IN %XDELWSQ FOR
      124     5314                                                MAPPED DISPLAYS */
      125     5315    2             CALL DXC$USERWSQ(U$SE.APT);   /* GET CORRECT USER PTA */
      126     5316    2             IF U$SE.LS = 1
      127     5317    2             THEN CALL DXC$SET_WSR7(%USERWSQ); /* SET WSR7 TO %USERWSQ FOR UU,MON */
      128     5318    2             IF S_D.EWSQ# = %MONWSQ AND USE_ORIG$ -> U$SE.APT = U$SE.APT /* %MONWSQ */
      129     5319    3             THEN DO;            /* ESTABLISH ARGUMENT AND PARAMETER STACK POINTERS
      130     5320                                      ONLY IF THE MONITOR WAS RUNNING  WITH THIS USER */
      131     5321    3                  UAS$ = SSAS$;
      132     5322    3                  UPS$ = SSPS$;
      133     5323    3                END;
      134     5324    3             ELSE DO;
      135     5325    3                  UAS$ = ADDR(NIL);
      136     5326    3                  UPS$ = ADDR(NIL);
      137     5327    3                END;
      138     5328    2          CASE (USE_REAL);                 /* USE REAL */
      139     5329    2             UIS$ = SSISR$;                /* POINT TO ISR FROM SAFE STORE */
      140     5330                                                /* NIL POINTERS FOR USE REAL */
      141     5331    2             ULS$  =   ADDR(NIL);
      142     5332    2             UJIT$ =   ADDR(NIL);
      143     5333    2             UHJIT$ =  ADDR(NIL);
      144     5334    2             S_D.SL$ = ADDR(NIL);
      145     5335                       /* ARG. AND PARAMETER STACKS NOT ACCESSIBLE FOR REAL AND PT */
      146     5336    2             UAS$ = ADDR(NIL);
      147     5337    2             UPS$ = ADDR(NIL);
      148     5338    2          CASE (USE_PT);                   /* USE PAGE TABLE */
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:5    
      149     5339    2             UIS$ = SSISR$;                /* POINT TO ISR FROM SAFE STORE */
      150     5340                                                /* NIL POINTERS FOR USE REAL */
      151     5341    2             ULS$  =   ADDR(NIL);
      152     5342    2             UJIT$ =   ADDR(NIL);
      153     5343    2             UHJIT$ =  ADDR(NIL);
      154     5344    2             S_D.SL$ = ADDR(NIL);
      155     5345                       /* ARG. AND PARAMETER STACKS NOT ACCESSIBLE FOR REAL AND PT */
      156     5346    2             UAS$ = ADDR(NIL);
      157     5347    2             UPS$ = ADDR(NIL);
      158     5348    2             CALL DXA$GET_APT1(S_D.EWSQ#,APT);
      159     5349    2             CALL DXC$XDELWSQ(U$SE.APT);   /* STORE ADDRESS OF PAGE TABLE IN
      160     5350                                                PAGE TABLE DIRECTORY (SLOT 2 FOR WSQ2)*/
      161     5351    2          CASE(USE_USER#,USE_USER@);       /* USE USER#, USE USER@ */
      162     5352                  /* STORE ADDRESS OF PAGE TABLE IN PAGE TABLE DIRECTORY FOR %XDELWSQ */
      163     5353    2             CALL DXC$XDELWSQ(U$SE.APT);
      164     5354                                           /* LOAD USER'S WSR (WSR7) WITH %XDELWSQ */
      165     5355    2             CALL DXC$SET_WSR7( %XDELWSQ ); /* %XDELWSQ */
      166     5356                                                /* SELECT SPECIFIED LINKAGE SEGMENT */
      167     5357    2             ULS$ = LS$(U$SE.LS-1);   /* SUBTRACT 1 TO KEEP BMAP AND PL6 IN SINK */
      168     5358                                                /* SET WORKING JIT POINTER TO USER */
      169     5359    2             UJIT$ = SJIT$;
      170     5360                                                /* SET WORKING HJIT POINTER TO USER */
      171     5361    2             UHJIT$ = SHJIT$;
      172     5362                            /* IF THE SPECIFIED USER IS THE CURRENT USER, THEN SET UP
      173     5363                            UAS$ (ARGUMENT STACK) AND UPS$ (PARAMETER  STACK)  */
      174     5364                            /* DETERMINE WHETHER THE USER SPECIFIED IN THE USE COMMAND
      175     5365                            IS THE CURRENT USE */
      176     5366    2             IF (S_D.EWSQ# ~= %MONWSQ) AND (USE_ORIG$->U$SE.APT = U$SE.APT)
              5366                      /* %MONWSQ */
      177     5367    3             THEN DO;
      178     5368                                                /* YES, THIS IS THE CURRENT USER */
      179     5369    3                  UPS$ = SSPS$;
      180     5370    3                  UAS$ = SSAS$;
      181     5371    3                END;
      182     5372    3             ELSE DO;
      183     5373                                                /* NO, THIS IS NOT THE CURRENT USER */
      184     5374    3                  UPS$ = ADDR(NIL);
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:6    
      185     5375    3                  UAS$ = ADDR(NIL);
      186     5376    3                END;
      187     5377                       /* GET THE ISR DESCRIPTOR OUT OF THE DESIGNATED LINKAGE SEGMENT
      188     5378                       AND STORE IN XDELTA'S LINKAGE SEGMENT.  */
      189     5379    2             CALL DXC$GETIS(ULS$);
      190     5380                            /* SET WORKING IS POINTER TO THE SELECTED IS DESCRIPTOR.  */
      191     5381    2             UIS$ = SIS$;
      192     5382                                                /* ESTABLISH SPECIAL LOCATIONS */
      193     5383                            /* IF THE USER LINKAGE SEGMENT IS DESIGNATED, THE SPECIAL
      194     5384                            LOCATIONS ARE WITHIN THE DATA ARE OF HIS ISR, POINTED
      195     5385                            TO BY THE POINTER IN THE SECOND WORD OF PROCEDURE.
      196     5386                            IF THE LINKAGE SEGMENT IS OTHER THAN THE USER, THE SPECIAL
      197     5387                            LOCATIONS BEGIN IN WORD TWO OF THE DESIGNATED ISR. */
      198     5388    2             IF U$SE.LS = LS_USER          /* CHECK FOR USER LS */
      199     5389    3             THEN DO;
      200     5390    3                  IF UJIT$ -> B$JIT.PCP = 0
      201     5391    4                  THEN DO;
      202     5392    4                       S_D.SL$ = PINCRW(UIS$, 2);
      203     5393    4                       S_D.SLP1$ = PINCRW(UIS$, 3);
      204     5394    4                       S_D.SL = 2;
      205     5395    4                       S_D.BYPASS = '0'B;
      206     5396    4                       S_D.BYPASS_SAVE = '0'B;
      207     5397    4                     END;
      208     5398    4                  ELSE DO;
      209     5399                                 /* USER LS.  PULL PAGE TABLE ADDRESS OUT OF PROCEDURE
      210     5400                                 LOWER LIMIT IN THE USER'S JIT.  THEN SET SPECIAL
      211     5401                                 LOCATION POINTER (SL$) TO THE POINTER IN SECOND WORD OF
      212     5402                                 PROCEDURE.  */
      213     5403    4                       UPLL = 1;      /* WANT WORD ONE OF USER'S FIRST PROC PAGE */
      214     5404    4                       UPLLP.PLL = UJIT$->B$JIT.PLL-%ISEGLO;
      215     5405    4                       WHERE$ = PINCRW(UIS$, UPLL);
      216     5406    4                       USLPTR = WHERE$ -> BITS;
      217     5407    4                       IF USLPTR.SEGID ~= BITBIN('6000'O)
      218     5408    5                       THEN DO;
      219     5409    5                            USLPTR = PINCRW(WHERE$, -1) -> BITS;
      220     5410    5                            IF USLPTR.SEGID ~= BITBIN('6000'O)
      221     5411    6                            THEN DO;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:7    
      222     5412    7                                 IF S_D.K$EEP.TYPE = KEEP_ALL THEN DO; /* KEEP_ALL */
      223     5413    7                                      S_D.ERROR = E@NOSL$; /* E@NOSL$ */
      224     5414    7                                      CALL DDE$ERROR;
      225     5415    7                                    END;
      226     5416    6                                 ELSE S_D.SL$ = ADDR(NIL);
      227     5417    6                               END;
      228     5418    5                          END;
      229     5419    4                       S_D.SL$ = PINCRW(UIS$, USLPTR.ADR + 5); /* + 5 FOR USER DELTA */
      230     5420    4                     END;
      231     5421    3                END;
      232     5422    3             ELSE DO;
      233     5423                       /* ICP,ASL, OR IDB LINKAGE SEGMENT.  SET SPECIAL LOCATION POINTER
      234     5424                       TO POINT TO WORD 2 OF THE IS.  */
      235     5425    3                  S_D.SL$ = PINCRW(UIS$,2);
      236     5426    3                END;
      237     5427    2             IF U$SE.LS = D_ALTDOM
      238     5428    3             THEN DO;                      /* We have schema for this, set it up */
      239     5429    3                  S_D.SDEF$ = ASDEF$;
      240     5430    3                  S_D.EDEF$ = AEDEF$;
      241     5431    3                  S_D.DNAME$ = ADNAME$;
      242     5432    3                  S_D.SDEF_END$ = D_ASDEF_END$;
      243     5433    3                  S_D.EDEF_END$ = D_AEDEF_END$;
      244     5434    3                  S_D.XOU_NAME = D_AXOU_NAME;
      245     5435    3                  CALL DDS$SET_AX2X;
      246     5436    3                  D_SCHEMA$ = ASCHEMA$;
      247     5437    3                  D_SYMBOLS = '1'B;
      248     5438    3                END;
      249     5439    2          CASE(ELSE);
      250     5440    2             S_D.ERROR = E@DELBUG;         /* E@DELBUG */
      251     5441    2             CALL DDE$ERROR;
      252     5442    2          END;
      253     5443    1        IF S_D.SL$ = ADDR(NIL)
      254     5444    2        THEN DO;
      255     5445    2             S_D.SLP1$ = ADDR(NIL);
      256     5446    2           END;
      257     5447    2        ELSE DO;
      258     5448    2             S_D.SLP1$ = PINCRW(S_D.SL$,1);
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:8    
      259     5449    2             S_D.SL = POFFW(S_D.SL$,UIS$);
      260     5450    2           END;
      261     5451    1        RETURN;
      262     5452    1   END DXB$CUSE;

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:9    
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DXB$CUSE.

   Procedure DXB$CUSE requires 290 words for executable code.
   Procedure DXB$CUSE requires 10 words of local(AUTO) storage.

    No errors detected in file DXB$CUSE.:E05TSI    .

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:10   

 Object Unit name= DXB$CUSE                                   File name= DXB$CUSE.:E05TOU
 UTS= JUL 29 '97 15:09:24.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   290    442  DXB$CUSE
    1  RoData even  none     5      5  DXB$CUSE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  DXB$CUSE
     0     10                  yes      Std        0  DXB$USE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       0 DXC$RESET_WSR7
         yes           Std       1 DXB$UNODE
 yes     yes           Std       0 DDS$SET_MX2X
         yes           Std       1 DXC$XDELWSQ
         yes           Std       1 DXC$USERWSQ
         yes           Std       1 DXC$SET_WSR7
         yes           Std       1 DXC$GETIS
         yes           Std       2 DXA$GET_APT1
         yes           Std       0 DDE$ERROR
 yes     yes           Std       0 DDS$SET_AX2X
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:11   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     USE_REM                               LS$                                   MON_APT
     USE_ORIG$                             B$JIT$                                USE$
     ULS$                                  UJIT$                                 UHJIT$
     MSL$                                  UAS$                                  UPS$
     UIS$                                  MLS$                                  MJIT$
     MHJIT$                                SSAS$                                 SSPS$
     SJIT$                                 SHJIT$                                MIS$
     SSISR$                                SIS$                                  DNAME$
     SCHEMA$                               ASDEF$                                AEDEF$
     ADNAME$                               ASCHEMA$                              D_SCHEMA$
     D_ASDEF_END$                          D_AEDEF_END$                          D_XOU_NAME
     D_AXOU_NAME                           D_ALTDOM                              D_SYMBOLS
r    S_D$                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:12   


        1        1        /*M* DXB$CUSE - CHANGES XDELTA'A ACCESS ENVIRONMENT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*D*  NAME:  DXB$CUSE
        9        9              DESCRIPTION:  DXB$CUSE RESETS THE ACCESS ENVIROMENT
       10       10                            TO THAT OF ENTRY TO XDELTA.
       11       11                            */
       12       12        /*D*  NAME:  DXB$USE
       13       13              DESCRIPTION:  DXB$USE ESTABLISHES THE ENVIRONMENT TO ACCESS
       14       14                            THE MONITOR (USE MON), REAL MEMORY (USE REAL),
       15       15                            MAPPED MEMORY (USE PT), AND USERS (USE USER).
       16       16                            IN DESIGNATING A USER (USE USER), THE DESIRED
       17       17                            LINKAGE SEGMENT IS ALSO DESIGNATED.
       18       18                            BREAKPOINTS MAY NOT BE PLANTED IF USE REAL OR USE PT
       19       19                            IS IN EFFECT.
       20       20                            */
       21       21        DXB$CUSE: PROC;

     21  0 000000   000000 700200 xent  DXB$CUSE     TSX0  ! X66_AUTO_0
         0 000001   000012 000000                    ZERO    10,0

       22       22        %INCLUDE DD_SUBS_C;
       23      293        %INCLUDE DD_ERR_C;
       24      690        %INCLUDE DD$BASED;
       25     1993    1   DCL UPLL SBIN;
       26     1994    1   DCL 1 UPLLP REDEF UPLL,
       27     1995    1         2 PLL UBIN(26) UNAL,
       28     1996    1         2 WIRD UBIN(10) UNAL;
       29     1997    1   DCL WHERE$ PTR;
       30     1998    1   DCL APT SBIN;
       31     1999    1   DCL 1 USLPTR,
       32     2000    1         2 ADR UBIN(18) UNAL,
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:13   
       33     2001    1         2 * UBIN(6) UNAL,
       34     2002    1         2 SEGID UBIN(12) UNAL;
       35     2003        %U$SE;
       36     2011        %U$SE(NAME=USE_REM,STCLASS=SYMREF);
       37     2019    1   DCL W$HERE PTR  BASED;
       38     2020    1   DCL BITS BIT(36) BASED ALIGNED;
       39     2021        %INCLUDE M$JIT_C;
       40     2228        %INCLUDE M_INFO_C;
       41     2368    1   DCL LS$(0:3) PTR SYMREF;
       42     2369    1   DCL MON_APT UBIN SYMREF;
       43     2370    1   DCL USE_ORIG$ PTR SYMREF;
       44     2371    1   DCL B$JIT$ PTR SYMREF;                  /* Someday, this may go away */
       45     2372    1   DCL USE$ PTR SYMREF;
       46     2373    1   DCL ULS$ PTR SYMREF;
       47     2374    1   DCL UJIT$ PTR SYMREF;
       48     2375    1   DCL UHJIT$ PTR SYMREF;
       49     2376    1   DCL MSL$ PTR SYMREF;
       50     2377    1   DCL UAS$ PTR SYMREF;
       51     2378    1   DCL UPS$ PTR SYMREF;
       52     2379    1   DCL MAP256$ PTR SYMREF;
       53     2380    1   DCL UIS$ PTR SYMREF;
       54     2381    1   DCL MLS$ PTR SYMREF;
       55     2382    1   DCL MJIT$ PTR SYMREF;
       56     2383    1   DCL MHJIT$ PTR SYMREF;
       57     2384    1   DCL SSAS$ PTR SYMREF;
       58     2385    1   DCL SSPS$ PTR SYMREF;
       59     2386    1   DCL SJIT$ PTR SYMREF;
       60     2387    1   DCL SHJIT$ PTR SYMREF;
       61     2388    1   DCL MIS$ PTR SYMREF;
       62     2389    1   DCL SSISR$ PTR SYMREF;
       63     2390    1   DCL SIS$ PTR SYMREF;
       64     2391    1   DCL DNAME$ PTR SYMREF;
       65     2392    1   DCL SCHEMA$ PTR SYMREF;
       66     2393    1   DCL ASDEF$ PTR SYMREF;
       67     2394    1   DCL AEDEF$ PTR SYMREF;
       68     2395    1   DCL ADNAME$ PTR SYMREF;
       69     2396    1   DCL ASCHEMA$ PTR SYMREF;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:14   
       70     2397    1   DCL D_SCHEMA$ PTR SYMREF;
       71     2398    1   DCL D_SDEF_END$ PTR SYMREF;
       72     2399    1   DCL D_EDEF_END$ PTR SYMREF;
       73     2400    1   DCL D_ASDEF_END$ PTR SYMREF;
       74     2401    1   DCL D_AEDEF_END$ PTR SYMREF;
       75     2402    1   DCL 1 D_XOU_NAME SYMREF,
       76     2403    1         2 SZ UBIN BYTE UNAL,
       77     2404    1         2 TXT CHAR(31) UNAL;
       78     2405    1   DCL 1 D_AXOU_NAME SYMREF,
       79     2406    1         2 SZ UBIN BYTE UNAL,
       80     2407    1         2 TXT CHAR(31) UNAL;
       81     2408    1   DCL D_ALTDOM UBIN SYMREF;
       82     2409    1   DCL D_SYMBOLS BIT(1) SYMREF;
       83     2410        %INCLUDE XUH_MACRO_C;
       84     2494        %INCLUDE DD_SD_M;
       85     3830        %S_D;
       86     5148        %INCLUDE B_STRINGS_C;
       87     5277    1   DCL DXC$XDELWSQ ENTRY(1);
       88     5278    1   DCL DXC$USERWSQ ENTRY(1);
       89     5279    1   DCL DXC$SET_WSR7 ENTRY(1);
       90     5280    1   DCL DXC$RESET_WSR7 ENTRY;
       91     5281    1   DCL DDS$SET_MX2X ENTRY ALTRET;
       92     5282    1   DCL DDS$SET_AX2X ENTRY ALTRET;
       93     5283    1   DCL DXA$GET_APT1 ENTRY(2);
       94     5284    1   DCL DXC$GETIS ENTRY(1);
       95     5285    1   DCL DDE$ERROR ENTRY;
       96     5286    1   DCL DXA$VERIFY_APT ENTRY(1) ALTRET;
       97     5287    1   DCL DXB$UNODE ENTRY(1);
       98     5288                                                /**/
       99     5289    1        U$SE = USE_ORIG$ -> U$SE;          /* Restore entry environment */

   5289  0 000002   000000 470400 xsym               LDP0    USE_ORIG$
         0 000003   000000 471400 xsym               LDP1    USE$
         0 000004   000100 100500                    MLR     fill='000'O
         0 000005   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20
         0 000006   100000 000024                    ADSC9   0,,PR1                   cn=0,n=20
         0 000007   000012 710000 0                  TRA     s:5292
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:15   

      100     5290                                                /**/
      101     5291    1   DXB$USE: ENTRY;                         /* General entry point */

   5291  0 000010   000000 700200 xent  DXB$USE      TSX0  ! X66_AUTO_0
         0 000011   000012 000000                    ZERO    10,0

      102     5292    1        USE_REM = U$SE;

   5292  0 000012   000000 470400 xsym               LDP0    USE$
         0 000013   000000 100500                    MLR     fill='000'O
         0 000014   000000 000024                    ADSC9   0,,PR0                   cn=0,n=20
         0 000015   000000 000024 xsym               ADSC9   USE_REM                  cn=0,n=20

      103     5293                                                /* RESTORE WSR7 TO ITS ORIGINAL STATE */
      104     5294    1        CALL DXC$RESET_WSR7;

   5294  0 000016   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000017   000000 701000 xent               TSX1    DXC$RESET_WSR7
         0 000020   000000 011000                    NOP     0

      105     5295    1        D_SYMBOLS = '0'B;

   5295  0 000021   000000 450000 xsym               STZ     D_SYMBOLS

      106     5296    1        S_D.OVERLAID = '0'B;

   5296  0 000022   000000 470400 xsym               LDP0    S_D$
         0 000023   004764 450100                    STZ     2548,,PR0

      107     5297                                                /* GET USE TYPE */
      108     5298    2        DO CASE( U$SE.TYPE );

   5298  0 000024   000000 471400 xsym               LDP1    USE$
         0 000025   100001 235100                    LDA     1,,PR1
         0 000026   000005 115007                    CMPA    5,DL
         0 000027   000031 602005 0                  TNC     s:5298+5,AL
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:16   
         0 000030   000414 710000 0                  TRA     s:5440
         0 000031   000036 710000 0                  TRA     s:5301
         0 000032   000143 710000 0                  TRA     s:5329
         0 000033   000155 710000 0                  TRA     s:5339
         0 000034   000207 710000 0                  TRA     s:5353
         0 000035   000207 710000 0                  TRA     s:5353

      109     5299    2          CASE(USE_MON);                   /* USE MON */

      110     5300                       /* ESTABLISH WORKING POINTERS TO THE MAIN MONITOR SEGMENTS */
      111     5301    2             UIS$ = MIS$;                  /* INSTRUCTION SEGMENT */

   5301  0 000036   000000 236000 xsym               LDQ     MIS$
         0 000037   000000 756000 xsym               STQ     UIS$

      112     5302    2             ULS$ = MLS$;                  /* LINKAGE SEGMENT */

   5302  0 000040   000000 236000 xsym               LDQ     MLS$
         0 000041   000000 756000 xsym               STQ     ULS$

      113     5303    2             UJIT$ = MJIT$;                /* JIT */

   5303  0 000042   000000 236000 xsym               LDQ     MJIT$
         0 000043   000000 756000 xsym               STQ     UJIT$

      114     5304    2             UHJIT$ = MHJIT$;              /* HJIT */

   5304  0 000044   000000 236000 xsym               LDQ     MHJIT$
         0 000045   000000 756000 xsym               STQ     UHJIT$

      115     5305    2             S_D.SL$ = MSL$;               /* SPECIAL LOCATIONS */

   5305  0 000046   000000 236000 xsym               LDQ     MSL$
         0 000047   000006 756100                    STQ     6,,PR0

      116     5306    2             S_D.DNAME$ = DNAME$;

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:17   
   5306  0 000050   000000 236000 xsym               LDQ     DNAME$
         0 000051   001041 756100                    STQ     545,,PR0

      117     5307    2             CALL DXB$UNODE(S_D.UNODE.USENODE);

   5307  0 000052   000000 236000 xsym               LDQ     S_D$
         0 000053   004760 036003                    ADLQ    2544,DU
         0 000054   200010 756100                    STQ     USLPTR+2,,AUTO
         0 000055   200010 630500                    EPPR0   USLPTR+2,,AUTO
         0 000056   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000057   000000 701000 xent               TSX1    DXB$UNODE
         0 000060   000000 011000                    NOP     0

      118     5308    2             S_D.XOU_NAME = D_XOU_NAME;

   5308  0 000061   000000 470400 xsym               LDP0    S_D$
         0 000062   000100 100400                    MLR     fill='000'O
         0 000063   000000 000040 xsym               ADSC9   D_XOU_NAME               cn=0,n=32
         0 000064   001021 000040                    ADSC9   529,,PR0                 cn=0,n=32

      119     5309    2             CALL DDS$SET_MX2X;

   5309  0 000065   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000066   000000 701000 xent               TSX1    DDS$SET_MX2X
         0 000067   000000 011000                    NOP     0

      120     5310    2             D_SCHEMA$ = SCHEMA$;

   5310  0 000070   000000 236000 xsym               LDQ     SCHEMA$
         0 000071   000000 756000 xsym               STQ     D_SCHEMA$

      121     5311    2             D_SYMBOLS = '1'B;

   5311  0 000072   400000 236003                    LDQ     -131072,DU
         0 000073   000000 756000 xsym               STQ     D_SYMBOLS

      122     5312    2             S_D.OVERLAID = '1'B;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:18   

   5312  0 000074   000000 470400 xsym               LDP0    S_D$
         0 000075   004764 756100                    STQ     2548,,PR0

      123     5313    2             CALL DXC$XDELWSQ(MON_APT);    /* LOAD MON PAGE TABLE IN %XDELWSQ FOR

   5313  0 000076   000000 630400 1                  EPPR0   0
         0 000077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000100   000000 701000 xent               TSX1    DXC$XDELWSQ
         0 000101   000000 011000                    NOP     0

      124     5314                                                MAPPED DISPLAYS */
      125     5315    2             CALL DXC$USERWSQ(U$SE.APT);   /* GET CORRECT USER PTA */

   5315  0 000102   000000 236000 xsym               LDQ     USE$
         0 000103   000003 036003                    ADLQ    3,DU
         0 000104   200010 756100                    STQ     USLPTR+2,,AUTO
         0 000105   200010 630500                    EPPR0   USLPTR+2,,AUTO
         0 000106   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000107   000000 701000 xent               TSX1    DXC$USERWSQ
         0 000110   000000 011000                    NOP     0

      126     5316    2             IF U$SE.LS = 1

   5316  0 000111   000000 470400 xsym               LDP0    USE$
         0 000112   000002 235100                    LDA     2,,PR0
         0 000113   000001 115007                    CMPA    1,DL
         0 000114   000121 601000 0                  TNZ     s:5318

      127     5317    2             THEN CALL DXC$SET_WSR7(%USERWSQ); /* SET WSR7 TO %USERWSQ FOR UU,MON */

   5317  0 000115   000001 630400 1                  EPPR0   1
         0 000116   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000117   000000 701000 xent               TSX1    DXC$SET_WSR7
         0 000120   000000 011000                    NOP     0

      128     5318    2             IF S_D.EWSQ# = %MONWSQ AND USE_ORIG$ -> U$SE.APT = U$SE.APT /* %MONWSQ */
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:19   

   5318  0 000121   000000 470400 xsym               LDP0    S_D$
         0 000122   000011 235100                    LDA     9,,PR0
         0 000123   000001 115007                    CMPA    1,DL
         0 000124   000137 601000 0                  TNZ     s:5325
         0 000125   000000 471400 xsym               LDP1    USE_ORIG$
         0 000126   000000 473400 xsym               LDP3    USE$
         0 000127   100003 236100                    LDQ     3,,PR1
         0 000130   300003 116100                    CMPQ    3,,PR3
         0 000131   000137 601000 0                  TNZ     s:5325

      129     5319    3             THEN DO;            /* ESTABLISH ARGUMENT AND PARAMETER STACK POINTERS

      130     5320                                      ONLY IF THE MONITOR WAS RUNNING  WITH THIS USER */
      131     5321    3                  UAS$ = SSAS$;

   5321  0 000132   000000 236000 xsym               LDQ     SSAS$
         0 000133   000000 756000 xsym               STQ     UAS$

      132     5322    3                  UPS$ = SSPS$;

   5322  0 000134   000000 236000 xsym               LDQ     SSPS$
         0 000135   000000 756000 xsym               STQ     UPS$

      133     5323    3                END;

   5323  0 000136   000421 710000 0                  TRA     s:5443

      134     5324    3             ELSE DO;

      135     5325    3                  UAS$ = ADDR(NIL);

   5325  0 000137   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000140   000000 756000 xsym               STQ     UAS$

      136     5326    3                  UPS$ = ADDR(NIL);

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:20   
   5326  0 000141   000000 756000 xsym               STQ     UPS$

      137     5327    3                END;

   5327  0 000142   000421 710000 0                  TRA     s:5443

      138     5328    2          CASE (USE_REAL);                 /* USE REAL */

      139     5329    2             UIS$ = SSISR$;                /* POINT TO ISR FROM SAFE STORE */

   5329  0 000143   000000 236000 xsym               LDQ     SSISR$
         0 000144   000000 756000 xsym               STQ     UIS$

      140     5330                                                /* NIL POINTERS FOR USE REAL */
      141     5331    2             ULS$  =   ADDR(NIL);

   5331  0 000145   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000146   000000 756000 xsym               STQ     ULS$

      142     5332    2             UJIT$ =   ADDR(NIL);

   5332  0 000147   000000 756000 xsym               STQ     UJIT$

      143     5333    2             UHJIT$ =  ADDR(NIL);

   5333  0 000150   000000 756000 xsym               STQ     UHJIT$

      144     5334    2             S_D.SL$ = ADDR(NIL);

   5334  0 000151   000006 756100                    STQ     6,,PR0

      145     5335                       /* ARG. AND PARAMETER STACKS NOT ACCESSIBLE FOR REAL AND PT */
      146     5336    2             UAS$ = ADDR(NIL);

   5336  0 000152   000000 756000 xsym               STQ     UAS$

      147     5337    2             UPS$ = ADDR(NIL);
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:21   

   5337  0 000153   000000 756000 xsym               STQ     UPS$
         0 000154   000421 710000 0                  TRA     s:5443

      148     5338    2          CASE (USE_PT);                   /* USE PAGE TABLE */

      149     5339    2             UIS$ = SSISR$;                /* POINT TO ISR FROM SAFE STORE */

   5339  0 000155   000000 236000 xsym               LDQ     SSISR$
         0 000156   000000 756000 xsym               STQ     UIS$

      150     5340                                                /* NIL POINTERS FOR USE REAL */
      151     5341    2             ULS$  =   ADDR(NIL);

   5341  0 000157   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000160   000000 756000 xsym               STQ     ULS$

      152     5342    2             UJIT$ =   ADDR(NIL);

   5342  0 000161   000000 756000 xsym               STQ     UJIT$

      153     5343    2             UHJIT$ =  ADDR(NIL);

   5343  0 000162   000000 756000 xsym               STQ     UHJIT$

      154     5344    2             S_D.SL$ = ADDR(NIL);

   5344  0 000163   000006 756100                    STQ     6,,PR0

      155     5345                       /* ARG. AND PARAMETER STACKS NOT ACCESSIBLE FOR REAL AND PT */
      156     5346    2             UAS$ = ADDR(NIL);

   5346  0 000164   000000 756000 xsym               STQ     UAS$

      157     5347    2             UPS$ = ADDR(NIL);

   5347  0 000165   000000 756000 xsym               STQ     UPS$
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:22   

      158     5348    2             CALL DXA$GET_APT1(S_D.EWSQ#,APT);

   5348  0 000166   200005 633500                    EPPR3   APT,,AUTO
         0 000167   200011 453500                    STP3    USLPTR+3,,AUTO
         0 000170   000000 236000 xsym               LDQ     S_D$
         0 000171   000011 036003                    ADLQ    9,DU
         0 000172   200010 756100                    STQ     USLPTR+2,,AUTO
         0 000173   200010 630500                    EPPR0   USLPTR+2,,AUTO
         0 000174   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000175   000000 701000 xent               TSX1    DXA$GET_APT1
         0 000176   000000 011000                    NOP     0

      159     5349    2             CALL DXC$XDELWSQ(U$SE.APT);   /* STORE ADDRESS OF PAGE TABLE IN

   5349  0 000177   000000 236000 xsym               LDQ     USE$
         0 000200   000003 036003                    ADLQ    3,DU
         0 000201   200010 756100                    STQ     USLPTR+2,,AUTO
         0 000202   200010 630500                    EPPR0   USLPTR+2,,AUTO
         0 000203   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000204   000000 701000 xent               TSX1    DXC$XDELWSQ
         0 000205   000000 011000                    NOP     0
         0 000206   000421 710000 0                  TRA     s:5443

      160     5350                                                PAGE TABLE DIRECTORY (SLOT 2 FOR WSQ2)*/
      161     5351    2          CASE(USE_USER#,USE_USER@);       /* USE USER#, USE USER@ */

      162     5352                  /* STORE ADDRESS OF PAGE TABLE IN PAGE TABLE DIRECTORY FOR %XDELWSQ */
      163     5353    2             CALL DXC$XDELWSQ(U$SE.APT);

   5353  0 000207   000000 236000 xsym               LDQ     USE$
         0 000210   000003 036003                    ADLQ    3,DU
         0 000211   200010 756100                    STQ     USLPTR+2,,AUTO
         0 000212   200010 630500                    EPPR0   USLPTR+2,,AUTO
         0 000213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000214   000000 701000 xent               TSX1    DXC$XDELWSQ
         0 000215   000000 011000                    NOP     0
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:23   

      164     5354                                           /* LOAD USER'S WSR (WSR7) WITH %XDELWSQ */
      165     5355    2             CALL DXC$SET_WSR7( %XDELWSQ ); /* %XDELWSQ */

   5355  0 000216   000002 630400 1                  EPPR0   2
         0 000217   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000220   000000 701000 xent               TSX1    DXC$SET_WSR7
         0 000221   000000 011000                    NOP     0

      166     5356                                                /* SELECT SPECIFIED LINKAGE SEGMENT */
      167     5357    2             ULS$ = LS$(U$SE.LS-1);   /* SUBTRACT 1 TO KEEP BMAP AND PL6 IN SINK */

   5357  0 000222   000000 470400 xsym               LDP0    USE$
         0 000223   000002 720100                    LXL0    2,,PR0
         0 000224   777777 236010 xsym               LDQ     LS$-1,X0
         0 000225   000000 756000 xsym               STQ     ULS$

      168     5358                                                /* SET WORKING JIT POINTER TO USER */
      169     5359    2             UJIT$ = SJIT$;

   5359  0 000226   000000 236000 xsym               LDQ     SJIT$
         0 000227   000000 756000 xsym               STQ     UJIT$

      170     5360                                                /* SET WORKING HJIT POINTER TO USER */
      171     5361    2             UHJIT$ = SHJIT$;

   5361  0 000230   000000 236000 xsym               LDQ     SHJIT$
         0 000231   000000 756000 xsym               STQ     UHJIT$

      172     5362                            /* IF THE SPECIFIED USER IS THE CURRENT USER, THEN SET UP
      173     5363                            UAS$ (ARGUMENT STACK) AND UPS$ (PARAMETER  STACK)  */
      174     5364                            /* DETERMINE WHETHER THE USER SPECIFIED IN THE USE COMMAND
      175     5365                            IS THE CURRENT USE */
      176     5366    2             IF (S_D.EWSQ# ~= %MONWSQ) AND (USE_ORIG$->U$SE.APT = U$SE.APT)
              5366                      /* %MONWSQ */

   5366  0 000232   000000 471400 xsym               LDP1    S_D$
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:24   
         0 000233   100011 235100                    LDA     9,,PR1
         0 000234   000001 115007                    CMPA    1,DL
         0 000235   000247 600000 0                  TZE     s:5374
         0 000236   000000 473400 xsym               LDP3    USE_ORIG$
         0 000237   300003 236100                    LDQ     3,,PR3
         0 000240   000003 116100                    CMPQ    3,,PR0
         0 000241   000247 601000 0                  TNZ     s:5374

      177     5367    3             THEN DO;

      178     5368                                                /* YES, THIS IS THE CURRENT USER */
      179     5369    3                  UPS$ = SSPS$;

   5369  0 000242   000000 236000 xsym               LDQ     SSPS$
         0 000243   000000 756000 xsym               STQ     UPS$

      180     5370    3                  UAS$ = SSAS$;

   5370  0 000244   000000 236000 xsym               LDQ     SSAS$
         0 000245   000000 756000 xsym               STQ     UAS$

      181     5371    3                END;

   5371  0 000246   000252 710000 0                  TRA     s:5379

      182     5372    3             ELSE DO;

      183     5373                                                /* NO, THIS IS NOT THE CURRENT USER */
      184     5374    3                  UPS$ = ADDR(NIL);

   5374  0 000247   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000250   000000 756000 xsym               STQ     UPS$

      185     5375    3                  UAS$ = ADDR(NIL);

   5375  0 000251   000000 756000 xsym               STQ     UAS$

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:25   
      186     5376    3                END;

      187     5377                       /* GET THE ISR DESCRIPTOR OUT OF THE DESIGNATED LINKAGE SEGMENT
      188     5378                       AND STORE IN XDELTA'S LINKAGE SEGMENT.  */
      189     5379    2             CALL DXC$GETIS(ULS$);

   5379  0 000252   000003 630400 1                  EPPR0   3
         0 000253   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000254   000000 701000 xent               TSX1    DXC$GETIS
         0 000255   000000 011000                    NOP     0

      190     5380                            /* SET WORKING IS POINTER TO THE SELECTED IS DESCRIPTOR.  */
      191     5381    2             UIS$ = SIS$;

   5381  0 000256   000000 236000 xsym               LDQ     SIS$
         0 000257   000000 756000 xsym               STQ     UIS$

      192     5382                                                /* ESTABLISH SPECIAL LOCATIONS */
      193     5383                            /* IF THE USER LINKAGE SEGMENT IS DESIGNATED, THE SPECIAL
      194     5384                            LOCATIONS ARE WITHIN THE DATA ARE OF HIS ISR, POINTED
      195     5385                            TO BY THE POINTER IN THE SECOND WORD OF PROCEDURE.
      196     5386                            IF THE LINKAGE SEGMENT IS OTHER THAN THE USER, THE SPECIAL
      197     5387                            LOCATIONS BEGIN IN WORD TWO OF THE DESIGNATED ISR. */
      198     5388    2             IF U$SE.LS = LS_USER          /* CHECK FOR USER LS */

   5388  0 000260   000000 470400 xsym               LDP0    USE$
         0 000261   000002 235100                    LDA     2,,PR0
         0 000262   000001 115007                    CMPA    1,DL
         0 000263   000357 601000 0                  TNZ     s:5425

      199     5389    3             THEN DO;

      200     5390    3                  IF UJIT$ -> B$JIT.PCP = 0

   5390  0 000264   000000 471400 xsym               LDP1    UJIT$
         0 000265   100201 220100                    LDX0    129,,PR1
         0 000266   000302 601000 0                  TNZ     s:5403
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:26   

      201     5391    4                  THEN DO;

      202     5392    4                       S_D.SL$ = PINCRW(UIS$, 2);

   5392  0 000267   000002 036003                    ADLQ    2,DU
         0 000270   000000 473400 xsym               LDP3    S_D$
         0 000271   300006 756100                    STQ     6,,PR3

      203     5393    4                       S_D.SLP1$ = PINCRW(UIS$, 3);

   5393  0 000272   000000 236000 xsym               LDQ     UIS$
         0 000273   000003 036003                    ADLQ    3,DU
         0 000274   300007 756100                    STQ     7,,PR3

      204     5394    4                       S_D.SL = 2;

   5394  0 000275   000002 235007                    LDA     2,DL
         0 000276   300010 755100                    STA     8,,PR3

      205     5395    4                       S_D.BYPASS = '0'B;

   5395  0 000277   301032 450100                    STZ     538,,PR3

      206     5396    4                       S_D.BYPASS_SAVE = '0'B;

   5396  0 000300   300074 450100                    STZ     60,,PR3

      207     5397    4                     END;

   5397  0 000301   000362 710000 0                  TRA     s:5427

      208     5398    4                  ELSE DO;

      209     5399                                 /* USER LS.  PULL PAGE TABLE ADDRESS OUT OF PROCEDURE
      210     5400                                 LOWER LIMIT IN THE USER'S JIT.  THEN SET SPECIAL
      211     5401                                 LOCATION POINTER (SL$) TO THE POINTER IN SECOND WORD OF
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:27   
      212     5402                                 PROCEDURE.  */
      213     5403    4                       UPLL = 1;      /* WANT WORD ONE OF USER'S FIRST PROC PAGE */

   5403  0 000302   000001 235007                    LDA     1,DL
         0 000303   200003 755100                    STA     UPLL,,AUTO

      214     5404    4                       UPLLP.PLL = UJIT$->B$JIT.PLL-%ISEGLO;

   5404  0 000304   100176 236100                    LDQ     126,,PR1
         0 000305   000022 772000                    QRL     18
         0 000306   000100 136007                    SBLQ    64,DL
         0 000307   000012 736000                    QLS     10
         0 000310   200003 676100                    ERQ     UPLL,,AUTO
         0 000311   000004 376000 1                  ANQ     4
         0 000312   200003 656100                    ERSQ    UPLL,,AUTO

      215     5405    4                       WHERE$ = PINCRW(UIS$, UPLL);

   5405  0 000313   200003 236100                    LDQ     UPLL,,AUTO
         0 000314   000022 736000                    QLS     18
         0 000315   000000 036000 xsym               ADLQ    UIS$
         0 000316   200004 756100                    STQ     WHERE$,,AUTO

      216     5406    4                       USLPTR = WHERE$ -> BITS;

   5406  0 000317   200004 473500                    LDP3    WHERE$,,AUTO
         0 000320   300000 236100                    LDQ     0,,PR3
         0 000321   200006 756100                    STQ     USLPTR,,AUTO

      217     5407    4                       IF USLPTR.SEGID ~= BITBIN('6000'O)

   5407  0 000322   200006 236100                    LDQ     USLPTR,,AUTO
         0 000323   007777 376007                    ANQ     4095,DL
         0 000324   006000 116007                    CMPQ    3072,DL
         0 000325   000350 600000 0                  TZE     s:5419

      218     5408    5                       THEN DO;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:28   

      219     5409    5                            USLPTR = PINCRW(WHERE$, -1) -> BITS;

   5409  0 000326   377777 236100                    LDQ     -1,,PR3
         0 000327   200006 756100                    STQ     USLPTR,,AUTO

      220     5410    5                            IF USLPTR.SEGID ~= BITBIN('6000'O)

   5410  0 000330   200006 236100                    LDQ     USLPTR,,AUTO
         0 000331   007777 376007                    ANQ     4095,DL
         0 000332   006000 116007                    CMPQ    3072,DL
         0 000333   000350 600000 0                  TZE     s:5419

      221     5411    6                            THEN DO;

      222     5412    7                                 IF S_D.K$EEP.TYPE = KEEP_ALL THEN DO; /* KEEP_ALL */

   5412  0 000334   000000 474400 xsym               LDP4    S_D$
         0 000335   404626 235100                    LDA     2454,,PR4
         0 000336   000001 115007                    CMPA    1,DL
         0 000337   000346 601000 0                  TNZ     s:5416

      223     5413    7                                      S_D.ERROR = E@NOSL$; /* E@NOSL$ */

   5413  0 000340   000153 235007                    LDA     107,DL
         0 000341   400013 755100                    STA     11,,PR4

      224     5414    7                                      CALL DDE$ERROR;

   5414  0 000342   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000343   000000 701000 xent               TSX1    DDE$ERROR
         0 000344   000000 011000                    NOP     0

      225     5415    7                                    END;

   5415  0 000345   000350 710000 0                  TRA     s:5419

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:29   
      226     5416    6                                 ELSE S_D.SL$ = ADDR(NIL);

   5416  0 000346   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000347   400006 756100                    STQ     6,,PR4

      227     5417    6                               END;

      228     5418    5                          END;

      229     5419    4                      S_D.SL$ = PINCRW(UIS$, USLPTR.ADR + 5); /* + 5 FOR USER DELTA */

   5419  0 000350   200006 236100                    LDQ     USLPTR,,AUTO
         0 000351   777777 376003                    ANQ     -1,DU
         0 000352   000005 036003                    ADLQ    5,DU
         0 000353   000000 036000 xsym               ADLQ    UIS$
         0 000354   000000 470400 xsym               LDP0    S_D$
         0 000355   000006 756100                    STQ     6,,PR0

      230     5420    4                     END;

      231     5421    3                END;

   5421  0 000356   000362 710000 0                  TRA     s:5427

      232     5422    3             ELSE DO;

      233     5423                       /* ICP,ASL, OR IDB LINKAGE SEGMENT.  SET SPECIAL LOCATION POINTER
      234     5424                       TO POINT TO WORD 2 OF THE IS.  */
      235     5425    3                  S_D.SL$ = PINCRW(UIS$,2);

   5425  0 000357   000002 036003                    ADLQ    2,DU
         0 000360   000000 471400 xsym               LDP1    S_D$
         0 000361   100006 756100                    STQ     6,,PR1

      236     5426    3                END;

      237     5427    2             IF U$SE.LS = D_ALTDOM
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:30   

   5427  0 000362   000000 470400 xsym               LDP0    USE$
         0 000363   000002 236100                    LDQ     2,,PR0
         0 000364   000000 116000 xsym               CMPQ    D_ALTDOM
         0 000365   000421 601000 0                  TNZ     s:5443

      238     5428    3             THEN DO;                      /* We have schema for this, set it up */

      239     5429    3                  S_D.SDEF$ = ASDEF$;

   5429  0 000366   000000 236000 xsym               LDQ     ASDEF$
         0 000367   000000 471400 xsym               LDP1    S_D$
         0 000370   101043 756100                    STQ     547,,PR1

      240     5430    3                  S_D.EDEF$ = AEDEF$;

   5430  0 000371   000000 236000 xsym               LDQ     AEDEF$
         0 000372   101042 756100                    STQ     546,,PR1

      241     5431    3                  S_D.DNAME$ = ADNAME$;

   5431  0 000373   000000 236000 xsym               LDQ     ADNAME$
         0 000374   101041 756100                    STQ     545,,PR1

      242     5432    3                  S_D.SDEF_END$ = D_ASDEF_END$;

   5432  0 000375   000000 236000 xsym               LDQ     D_ASDEF_END$
         0 000376   101045 756100                    STQ     549,,PR1

      243     5433    3                  S_D.EDEF_END$ = D_AEDEF_END$;

   5433  0 000377   000000 236000 xsym               LDQ     D_AEDEF_END$
         0 000400   101044 756100                    STQ     548,,PR1

      244     5434    3                  S_D.XOU_NAME = D_AXOU_NAME;

   5434  0 000401   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:31   
         0 000402   000000 000040 xsym               ADSC9   D_AXOU_NAME              cn=0,n=32
         0 000403   101021 000040                    ADSC9   529,,PR1                 cn=0,n=32

      245     5435    3                  CALL DDS$SET_AX2X;

   5435  0 000404   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000405   000000 701000 xent               TSX1    DDS$SET_AX2X
         0 000406   000000 011000                    NOP     0

      246     5436    3                  D_SCHEMA$ = ASCHEMA$;

   5436  0 000407   000000 236000 xsym               LDQ     ASCHEMA$
         0 000410   000000 756000 xsym               STQ     D_SCHEMA$

      247     5437    3                  D_SYMBOLS = '1'B;

   5437  0 000411   400000 236003                    LDQ     -131072,DU
         0 000412   000000 756000 xsym               STQ     D_SYMBOLS

      248     5438    3                END;

   5438  0 000413   000421 710000 0                  TRA     s:5443

      249     5439    2          CASE(ELSE);

      250     5440    2             S_D.ERROR = E@DELBUG;         /* E@DELBUG */

   5440  0 000414   000766 236007                    LDQ     502,DL
         0 000415   000013 756100                    STQ     11,,PR0

      251     5441    2             CALL DDE$ERROR;

   5441  0 000416   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000417   000000 701000 xent               TSX1    DDE$ERROR
         0 000420   000000 011000                    NOP     0

      252     5442    2          END;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:32   

      253     5443    1        IF S_D.SL$ = ADDR(NIL)

   5443  0 000421   000000 470400 xsym               LDP0    S_D$
         0 000422   000006 236100                    LDQ     6,,PR0
         0 000423   000001 116000 xsym               CMPQ    B_VECTNIL+1
         0 000424   000430 601000 0                  TNZ     s:5448

      254     5444    2        THEN DO;

      255     5445    2             S_D.SLP1$ = ADDR(NIL);

   5445  0 000425   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000426   000007 756100                    STQ     7,,PR0

      256     5446    2           END;

   5446  0 000427   000441 710000 0                  TRA     s:5451

      257     5447    2        ELSE DO;

      258     5448    2             S_D.SLP1$ = PINCRW(S_D.SL$,1);

   5448  0 000430   000001 036003                    ADLQ    1,DU
         0 000431   000007 756100                    STQ     7,,PR0

      259     5449    2             S_D.SL = POFFW(S_D.SL$,UIS$);

   5449  0 000432   000000 235000 xsym               LDA     UIS$
         0 000433   000022 771000                    ARL     18
         0 000434   200010 755100                    STA     USLPTR+2,,AUTO
         0 000435   000006 236100                    LDQ     6,,PR0
         0 000436   000022 772000                    QRL     18
         0 000437   200010 136100                    SBLQ    USLPTR+2,,AUTO
         0 000440   000010 756100                    STQ     8,,PR0

      260     5450    2           END;
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:33   

      261     5451    1        RETURN;

   5451  0 000441   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006000   000012 006000   000004 006000   000000 006000    ................
   1     004   777777 776000                                                    ....
      262     5452    1   END DXB$CUSE;

PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:34   
--  Include file information  --

   B_STRINGS_C.:E05TOU  is referenced.
   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   DD$BASED.:E05TOU  is referenced.
   DD_ERR_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DXB$CUSE.

   Procedure DXB$CUSE requires 290 words for executable code.
   Procedure DXB$CUSE requires 10 words of local(AUTO) storage.

    No errors detected in file DXB$CUSE.:E05TSI    .
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:36   
          MINI XREF LISTING

ADNAME$
      2395**DCL      5431>>ASSIGN
AEDEF$
      2394**DCL      5430>>ASSIGN
APT
      1998**DCL      5348<>CALL
ASCHEMA$
      2396**DCL      5436>>ASSIGN
ASDEF$
      2393**DCL      5429>>ASSIGN
B$JIT.ERR.MID
      2036**DCL      2036--REDEF
B$JIT.JRESPEAK
      2126**DCL      2127--REDEF
B$JIT.PCP
      2123**DCL      5390>>IF
B$JIT.PLL
      2122**DCL      5404>>ASSIGN
B$JIT$
      2371**DCL      2030--IMP-PTR
BITS
      2020**DCL      5406>>ASSIGN   5409>>ASSIGN
DDE$ERROR
      5285**DCL-ENT  5414--CALL     5441--CALL
DDS$SET_AX2X
      5282**DCL-ENT  5435--CALL
DDS$SET_MX2X
      5281**DCL-ENT  5309--CALL
DNAME$
      2391**DCL      5306>>ASSIGN
DXA$GET_APT1
      5283**DCL-ENT  5348--CALL
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:37   
DXB$UNODE
      5287**DCL-ENT  5307--CALL
DXC$GETIS
      5284**DCL-ENT  5379--CALL
DXC$RESET_WSR7
      5280**DCL-ENT  5294--CALL
DXC$SET_WSR7
      5279**DCL-ENT  5317--CALL     5355--CALL
DXC$USERWSQ
      5278**DCL-ENT  5315--CALL
DXC$XDELWSQ
      5277**DCL-ENT  5313--CALL     5349--CALL     5353--CALL
D_AEDEF_END$
      2401**DCL      5433>>ASSIGN
D_ALTDOM
      2408**DCL      5427>>IF
D_ASDEF_END$
      2400**DCL      5432>>ASSIGN
D_AXOU_NAME
      2405**DCL      5434>>ASSIGN
D_SCHEMA$
      2397**DCL      5310<<ASSIGN   5436<<ASSIGN
D_SYMBOLS
      2409**DCL      5295<<ASSIGN   5311<<ASSIGN   5437<<ASSIGN
D_XOU_NAME
      2402**DCL      5308>>ASSIGN
LS$
      2368**DCL      5357>>ASSIGN
MHJIT$
      2383**DCL      5304>>ASSIGN
MIS$
      2388**DCL      5301>>ASSIGN
MJIT$
      2382**DCL      5303>>ASSIGN
MLS$
      2381**DCL      5302>>ASSIGN
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:38   
MON_APT
      2369**DCL      5313<>CALL
MSL$
      2376**DCL      5305>>ASSIGN
SCHEMA$
      2392**DCL      5310>>ASSIGN
SHJIT$
      2387**DCL      5361>>ASSIGN
SIS$
      2390**DCL      5381>>ASSIGN
SJIT$
      2386**DCL      5359>>ASSIGN
SSAS$
      2384**DCL      5321>>ASSIGN   5370>>ASSIGN
SSISR$
      2389**DCL      5329>>ASSIGN   5339>>ASSIGN
SSPS$
      2385**DCL      5322>>ASSIGN   5369>>ASSIGN
S_D.BYPASS
      4262**DCL      5395<<ASSIGN
S_D.BYPASS_SAVE
      3970**DCL      5396<<ASSIGN
S_D.CURRENT_CHANNEL
      4782**DCL      4784--REDEF
S_D.DEBUGA
      3934**DCL      3936--REDEF
S_D.DNAME$
      4276**DCL      5306<<ASSIGN   5431<<ASSIGN
S_D.EDEF$
      4278**DCL      5430<<ASSIGN
S_D.EDEF_END$
      4282**DCL      5433<<ASSIGN
S_D.EIS
      4892**DCL      4921--REDEF
S_D.ERROR
      3863**DCL      5413<<ASSIGN   5440<<ASSIGN
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:39   
S_D.EWSQ#
      3859**DCL      5318>>IF       5348<>CALL     5366>>IF
S_D.HOST_MESSAGE_BUF_REMOTE
      4825**DCL      4826--REDEF    4840--REDEF
S_D.JDE
      4439**DCL      4440--REDEF
S_D.K$EEP.TYPE
      4312**DCL      5412>>IF
S_D.L$.VALUE
      3992**DCL      3998--REDEF    4006--REDEF    4009--REDEF    4012--REDEF    4015--REDEF
S_D.L$.VALUE.L
      3993**DCL      3994--REDEF    3995--REDEF
S_D.L6_MESSAGE_BUF
      4846**DCL      4848--REDEF
S_D.OUTPUT
      4812**DCL      4814--REDEF
S_D.OVERLAID
      4496**DCL      5296<<ASSIGN   5312<<ASSIGN
S_D.REMOTE_MSG.FNCC
      4831**DCL      4832--REDEF
S_D.REMOTE_MSG.STXC
      4827**DCL      4828--REDEF
S_D.REMOTE_MSG.SUBFNCC
      4835**DCL      4836--REDEF
S_D.SDEF$
      4280**DCL      5429<<ASSIGN
S_D.SDEF_END$
      4284**DCL      5432<<ASSIGN
S_D.SL
      3857**DCL      5394<<ASSIGN   5449<<ASSIGN
S_D.SL$
      3853**DCL      5305<<ASSIGN   5334<<ASSIGN   5344<<ASSIGN   5392<<ASSIGN   5416<<ASSIGN   5419<<ASSIGN
      5425<<ASSIGN   5443>>IF       5448>>ASSIGN   5449>>ASSIGN
S_D.SLP1$
      3855**DCL      5393<<ASSIGN   5445<<ASSIGN   5448<<ASSIGN
S_D.SV
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:40   
      3891**DCL      3912--REDEF
S_D.UNODE.USENODE
      4488**DCL      5307<>CALL
S_D.XOU_NAME
      4256**DCL      5308<<ASSIGN   5434<<ASSIGN
S_D$
      5143**DCL      3839--IMP-PTR  5296>>ASSIGN   5305>>ASSIGN   5306>>ASSIGN   5307>>CALL     5308>>ASSIGN
      5312>>ASSIGN   5318>>IF       5334>>ASSIGN   5344>>ASSIGN   5348>>CALL     5366>>IF       5392>>ASSIGN
      5393>>ASSIGN   5394>>ASSIGN   5395>>ASSIGN   5396>>ASSIGN   5412>>IF       5413>>ASSIGN   5416>>ASSIGN
      5419>>ASSIGN   5425>>ASSIGN   5429>>ASSIGN   5430>>ASSIGN   5431>>ASSIGN   5432>>ASSIGN   5433>>ASSIGN
      5434>>ASSIGN   5440>>ASSIGN   5443>>IF       5445>>ASSIGN   5448>>ASSIGN   5448>>ASSIGN   5449>>ASSIGN
      5449>>ASSIGN
U$SE
      2004**DCL      5289<<ASSIGN   5289>>ASSIGN   5292>>ASSIGN
U$SE.APT
      2008**DCL      5315<>CALL     5318>>IF       5318>>IF       5349<>CALL     5353<>CALL     5366>>IF
      5366>>IF
U$SE.LS
      2007**DCL      5316>>IF       5357>>ASSIGN   5388>>IF       5427>>IF
U$SE.TYPE
      2006**DCL      5298>>DOCASE
UAS$
      2377**DCL      5321<<ASSIGN   5325<<ASSIGN   5336<<ASSIGN   5346<<ASSIGN   5370<<ASSIGN   5375<<ASSIGN
UHJIT$
      2375**DCL      5304<<ASSIGN   5333<<ASSIGN   5343<<ASSIGN   5361<<ASSIGN
UIS$
      2380**DCL      5301<<ASSIGN   5329<<ASSIGN   5339<<ASSIGN   5381<<ASSIGN   5392>>ASSIGN   5393>>ASSIGN
      5405>>ASSIGN   5419>>ASSIGN   5425>>ASSIGN   5449>>ASSIGN
UJIT$
      2374**DCL      5303<<ASSIGN   5332<<ASSIGN   5342<<ASSIGN   5359<<ASSIGN   5390>>IF       5404>>ASSIGN
ULS$
      2373**DCL      5302<<ASSIGN   5331<<ASSIGN   5341<<ASSIGN   5357<<ASSIGN   5379<>CALL
UPLL
      1993**DCL      1994--REDEF    5403<<ASSIGN   5405>>ASSIGN
UPLLP.PLL
      1995**DCL      5404<<ASSIGN
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:41   
UPS$
      2378**DCL      5322<<ASSIGN   5326<<ASSIGN   5337<<ASSIGN   5347<<ASSIGN   5369<<ASSIGN   5374<<ASSIGN
USE$
      2372**DCL      2004--IMP-PTR  5289>>ASSIGN   5292>>ASSIGN   5298>>DOCASE   5315>>CALL     5316>>IF
      5318>>IF       5349>>CALL     5353>>CALL     5357>>ASSIGN   5366>>IF       5388>>IF       5427>>IF
USE_ORIG$
      2370**DCL      5289>>ASSIGN   5318>>IF       5366>>IF
USE_REM
      2012**DCL      5292<<ASSIGN
USLPTR
      1999**DCL      5406<<ASSIGN   5409<<ASSIGN
USLPTR.ADR
      2000**DCL      5419>>ASSIGN
USLPTR.SEGID
      2002**DCL      5407>>IF       5410>>IF
WHERE$
      1997**DCL      5405<<ASSIGN   5406>>ASSIGN   5409>>ASSIGN
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:42   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DXB$CUSE File=DXB$CUSE.:E05TSI                                TUE 07/29/97 15:09 Page:43   
              MINI UREF LISTING

DXA$VERIFY_APT    5286**DCL-ENT
DXB$CUSE      21**PROC
DXB$USE    5291**ENTRY
D_EDEF_END$    2399**DCL
D_SDEF_END$    2398**DCL
MAP256$    2379**DCL
W$HERE    2019**DCL
