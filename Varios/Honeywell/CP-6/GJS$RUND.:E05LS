VERSION E05

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:1    
        1        1        /*M* GJS$RUND   Rundown user               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=70     */
        8        8
        9        9        /*F* NAME: GJS$RUND
       10       10
       11       11             PURPOSE:  To run down the user.
       12       12
       13       13        */
       14       14
       15       15
       16       16        /*D* NAME: GJS$RUND
       17       17
       18       18             DESCRIPTION:
       19       19
       20       20        */
       21       21        GJS$RUND: PROC(PGS_RELEASED);
       22       22
       23       23        %INCLUDE G$BOBCAT_M;
       24       43        %INCLUDE G_SFILE_M;
       25      103        %INCLUDE G_ROS_M;
       26      185        %INCLUDE G_JIT_M;
       27      450        %INCLUDE G_HJIT_M;
       28      595 S      %INCLUDE GF_LCP6_M;
       29      596 S      %INCLUDE GH_LCP6_M;
       30      597 S      %INCLUDE GU_LCP6_M;
       31      598        %INCLUDE GH_GATE_M;
       32      639        %INCLUDE GH_SCHD_M;
       33      783        %INCLUDE GH_SCHD_E;
       34      879
       35      880        %INCLUDE GM_VIRTUAL_E;
       36     1090 S      %INCLUDE G_LCP6_E;
       37     1091        %INCLUDE AZ_SUBS_C;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:2    
       38     1160
       39     1161                                                /* Input parameter          */
       40     1162    1   DCL PGS_RELEASED UBIN;
       41     1163
       42     1164                                                /* Auto Storage             */
       43     1165    1   DCL ERROR BIT(32);
       44     1166    1   DCL I UBIN;
       45     1167    1   DCL J UBIN;
       46     1168    1   DCL ASDT_INDX UBIN;
       47     1169    1   DCL SEGS_64K UBIN;
       48     1170    1   DCL PGS_REMAINING UBIN;
       49     1171    1   DCL GMA_SEGX UBIN;
       50     1172    1   DCL GMA_#PGS UBIN;
       51     1173    1   DCL G$SFILE$ PTR;
       52     1174    1   DCL ROUTINE$ EPTR;
       53     1175    1   DCL FRS BIT(16);
       54     1176
       55     1177                                                /* External Data            */
       56     1178
       57     1179    1   DCL G$ASDT_USR$ PTR SYMREF READONLY;
       58     1180    1   DCL G$ASDT_MCL$ PTR SYMREF READONLY;
       59     1181    1   DCL G$BOBCAT$ PTR SYMREF READONLY;
       60     1182    1   DCL G$UHJIT$ PTR SYMREF READONLY;
       61     1183    1   DCL G$MHJIT$ PTR SYMREF READONLY;
       62     1184    1   DCL G$ROS$ PTR SYMREF READONLY;
       63     1185    1   DCL G$JIT$ PTR SYMREF READONLY;
       64     1186    1   DCL G$TSTACKU$ PTR SYMREF READONLY;
       65     1187    1   DCL G$TSA_USR$ PTR SYMREF READONLY;
       66     1188
       67     1189    1   DCL GJU_DB_DB SBIN SYMREF;
       68     1190    1   DCL GM_SHUF_HI UBIN SYMREF;
       69     1191    1   DCL GM_ROS_PGSZ UBIN SYMREF;
       70     1192    1   DCL G_BOOTTIME UBIN(32) SYMREF;
       71     1193
       72     1194    1   DCL GFR_PSUDO_CUR_SYS(0:7) SBIN SYMREF;
       73     1195    1   DCL GFR_PSUDO_CUR$(0:4) PTR SYMREF;
       74     1196
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:3    
       75     1197        %GATE (FPTN=GFR_RES_LOCK,STCLASS=SYMREF);
       76     1216
       77     1217                                                /* Internal Data            */
       78     1218        %EQU SEG# = 17;               /* Number of available data segs -1   */
       79     1219    1   DCL DS_ASDT_INDX(0:%SEG#) UBIN BYTE CONSTANT UNAL INIT(
       80     1220    1           %GM_USR_DS1#,
       81     1221    1           %GM_USR_DS2#,
       82     1222    1           %GM_CP_DS#,
       83     1223    1           %GM_LAUTO_DS#,
       84     1224    1           %GM_LAUTO_DS2#,
       85     1225    1           %GM_LAUTO_DS3#,
       86     1226    1           %GM_USR_DS3#,
       87     1227    1           %GM_USR_DS4#,
       88     1228    1           %GM_UAUTO_DS#,
       89     1229    1           %GM_DB_PROC#,
       90     1230    1           %GM_CP_PROC#,
       91     1231    1           %GM_ISR1#,
       92     1232    1           %GM_ISR2#,
       93     1233    1           %GM_ISR3#,
       94     1234    1           %GM_ISR4#,
       95     1235    1           %GM_ISR5#,
       96     1236    1           %GM_ISR6#,
       97     1237    1           %GM_ISR7#);
       98     1238
       99     1239        %G$STATUS_REG (FPTN=MON_STATUS_REG,
      100     1240                       LEVEL=%G_IL_USER#,
      101     1241                       RING=G_R_MON#,
      102     1242                       STCLASS=CONSTANT);
      103     1263
      104     1264                                                /* BASED Structures         */
      105     1265        %G$ASDT (FPTN=G$ASDT_USR,STCLASS="BASED(G$ASDT_USR$)");
      106     1294        %G$ASDT_MCL (FPTN=G$ASDT_MCL,STCLASS="BASED(G$ASDT_MCL$)");
      107     1988        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(G$SFILE$)");
      108     2025        %G$BOBCAT (STCLASS="BASED(G$BOBCAT$)");
      109     2038        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      110     5012        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
      111    11886        %G$USER (FPTN=G$U);
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:4    
      112    11897        %G$ROS (STCLASS="BASED(G$ROS$)",FULL=YES);
      113    12848        %G$JIT (STCLASS="BASED(G$JIT$)");
      114    13262        %G$ACC_HDR (FPTN=ACCT$MSG, LVL=1, LAST=NO);
      115    13284        %G$ACC (LVL=2);
      116    13422        %G$TSA (STCLASS="BASED(G$TSA_USR$)");
      117    13810        %G$DCBTABLE;
      118    13821        %M$DCB (DCBN=G$DCB,STCLASS=BASED);
      119    13872
      120    13873        %G$ECCB;
      121    13949
      122    13950    1   DCL G$PSUDO(0:7) SBIN BASED;
      123    13951    1   DCL G$UNITS(0:3) UBIN BASED;
      124    13952    1   DCL G$USRTIMES(0:2) UBIN(32) BASED;
      125    13953    1   DCL G$ALLTIMES(0:5) UBIN(32) BASED;
      126    13954                                                /* External Procedures      */
      127    13955    1   DCL GMA$REL ENTRY(2) ALTRET;
      128    13956    1   DCL GMA$UNSHARE ENTRY(1) ALTRET;
      129    13957    1   DCL GHI$UTS ENTRY(1);
      130    13958    1   DCL GHM$INTRELALL ENTRY ALTRET;
      131    13959    1   DCL GUS$RNDCLK ENTRY;
      132    13960    1   DCL GHS$DORUND ENTRY(1);
      133    13961    1   DCL GJI$INIT_USR ENTRY;
      134    13962    1   DCL GJS$CLOSE_SHARED ENTRY(1) ALTRET;
      135    13963    1   DCL KNA$CLOSE ENTRY(2) ALTRET;
      136    13964    1   DCL KNA$TRUNC ENTRY(2) ALTRET;
      137    13965    1   DCL KNB$WRITE ENTRY(4) ALTRET;
      138    13966    1   DCL KNH$CLOSE ENTRY ALTRET;
      139    13967
      140    13968                                                /* String Substitutions     */
      141    13969        %G$JIT_E;
      142    14031
      143    14032        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:5    
      144    14033    1      G$JIT.RUNFLAGS = %G_RUN_MON#;
      145    14034    1      CALL GHI$UTS(G$JIT.STOP);
      146    14035    1      G$JIT.STOP = G$JIT.STOP + G_BOOTTIME;
      147    14036    1      G$SFILE$ = G$BOBCAT.SFILE$;
      148    14037    1      PGS_RELEASED = 0;
      149    14038
      150    14039        /*D* Any interrupt levels that are still connected are disconnected.
      151    14040        */
      152    14041    1      CALL GHM$INTRELALL;
      153    14042
      154    14043
      155    14044        /*D*  Any outstanding wall clock timer request is canceled.  */
      156    14045
      157    14046    1      CALL GUS$RNDCLK;
      158    14047
      159    14048        /* GET A NEW QUANTUM   */
      160    14049
      161    14050        /* Temporarily put RNST in FRS so it is in the job step acct. records.
      162    14051        */
      163    14052    1      FRS = G$JIT.FRS;
      164    14053    1      G$JIT.FRS = G$JIT.RNST;
      165    14054
      166    14055        /*D* If a processor linked with the PROCACC option is exiting, the job
      167    14056             step times are moved from the user to the processor counters.
      168    14057        */
      169    14058    1      IF G$JIT.JUNK.PROCACCT
      170    14059    2      THEN DO;
      171    14060    2           G$JIT.PROC_EXTIME = G$JIT.USER_EXTIME;
      172    14061    2           G$JIT.PROC_SVTIME = G$JIT.USER_SVTIME;
      173    14062    2           G$JIT.PROC_MEMTIME = G$JIT.USER_MEMTIME;
      174    14063
      175    14064    2           ADDR(G$JIT.USER_EXTIME)->G$USRTIMES = '0'B;
      176    14065    2           END;
      177    14066
      178    14067        /*D* If a processor linked with the PROCSURCHG option is exiting,
      179    14068             a processor accounting record is written.
      180    14069        */
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:6    
      181    14070    1      IF G$JIT.JUNK.PROCSURCHG
      182    14071    2      THEN DO;
      183    14072    2           G$JIT.TYPE = %AZ$PROC;
      184    14073    2           CALL KNB$WRITE(G$JIT$,SIZEC(ACCT$MSG))
      185    14074    3           WHENALTRETURN DO;
      186    14075                                /*N* SYSLOGGING IS BUSY */
      187    14076    3                END;
      188    14077
      189    14078    2           END;
      190    14079
      191    14080        /*D* If job step accounting is in effect or
      192    14081             any of the STEPUNIT values have been set by an M$CHGUNIT
      193    14082             service request, a job step accounting record is written.
      194    14083        */
      195    14084    1      IF G$JIT.JUNK.STEPACCT OR (ADDR(G$JIT.STEPUNIT)->G$UNITS ~='0'B)
      196    14085    2      THEN DO;
      197    14086    2           G$JIT.TYPE = %AZ$STEP;
      198    14087    2           CALL KNB$WRITE(G$JIT$,SIZEC(ACCT$MSG))
      199    14088    3           WHENALTRETURN DO;
      200    14089                                /*N* SYSLOGGING IS BUSY */
      201    14090    3                END;
      202    14091
      203    14092    2           ADDR(G$JIT.STEPUNIT)->G$UNITS = '0'B;
      204    14093    2           END;
      205    14094
      206    14095        /*D* If a processor linked with the PROCACC option is exiting,
      207    14096             the total job processor time cells are updated.  Otherwise
      208    14097             the total job user time cells are updated.
      209    14098        */
      210    14099    1      IF G$JIT.JUNK.PROCACCT
      211    14100    2      THEN DO;
      212    14101    2           G$JIT.JPROC_EXTIME = G$JIT.JPROC_EXTIME + G$JIT.PROC_EXTIME;
      213    14102    2           G$JIT.JPROC_SVTIME = G$JIT.JPROC_SVTIME + G$JIT.PROC_SVTIME;
      214    14103    2           G$JIT.JPROC_MEMTIME = G$JIT.JPROC_MEMTIME + G$JIT.PROC_MEMTIME;
      215    14104    2           END;
      216    14105
      217    14106    2      ELSE DO;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:7    
      218    14107    2           G$JIT.JUSER_EXTIME = G$JIT.JUSER_EXTIME + G$JIT.USER_EXTIME;
      219    14108    2           G$JIT.JUSER_SVTIME = G$JIT.JUSER_SVTIME + G$JIT.USER_SVTIME;
      220    14109    2           G$JIT.JUSER_MEMTIME = G$JIT.JUSER_MEMTIME + G$JIT.USER_MEMTIME;
      221    14110    2           END;
      222    14111
      223    14112    1      ADDR(G$JIT.USER_EXTIME)->G$ALLTIMES = '0'B;
      224    14113
      225    14114        /*D* Any user DCBs that are open are closed.
      226    14115        */
      227    14116    1      ROUTINE$ = ENTADDR(KNA$CLOSE);
      228    14117    1      I=%G_FRST_USR_DCB#; J=G$ROS.NUMDCBS;
      229    14118    1      CALL CLOSE_OR_TRUNC;
      230    14119
      231    14120    1      ROUTINE$ = ENTADDR(KNA$TRUNC);
      232    14121    1      I=%G_M$DEBUG#; J=%G_M$DO#;
      233    14122    1      CALL CLOSE_OR_TRUNC;
      234    14123
      235    14124    1      IF NOT(G$JIT.JUNK.MLDTRC)
      236    14125    2      THEN DO;
      237    14126    2           ROUTINE$ = ENTADDR(KNA$CLOSE);
      238    14127    2           I=%G_M$HOST#; J=%G_M$DO#;
      239    14128    2           CALL CLOSE_OR_TRUNC;
      240    14129    2           END;
      241    14130        /*D* Any outstanding do-list entries are released.
      242    14131        */
      243    14132    1      CALL GHS$DORUND;
      244    14133
      245    14134        /*D* The user procedure is released by calling the RELEASE_SECT
      246    14135             internal subroutine.
      247    14136        */
      248    14137    1      IF (G$JIT.PCP ~= 0) OR (G$JIT.SPROC# ~= 0)
      249    14138    2      THEN DO;
      250    14139    2           J = G$JIT.SPROC#;
      251    14140    2           PGS_REMAINING = G$JIT.PCP;
      252    14141    2           ASDT_INDX = (G$JIT.PLL / 256) +15;
      253    14142    2           SEGS_64K = (G$JIT.PCP +255) / 256;
      254    14143
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:8    
      255    14144    2           CALL RELEASE_SECT;
      256    14145
      257    14146    2           G$JIT.SPROC# = 0;
      258    14147    2           G$JIT.PCP = 0;
      259    14148    2           END;
      260    14149
      261    14150        /*D* The library procedure is released in the same way.
      262    14151              as was the standard shared processor.
      263    14152        */
      264    14153    1      IF (G$JIT.PCL ~= 0) OR (G$JIT.SLIB# ~= 0)
      265    14154    2      THEN DO;
      266    14155    2           J = G$JIT.SLIB#;
      267    14156    2           PGS_REMAINING = G$JIT.PCL;
      268    14157    2           ASDT_INDX = (G$JIT.LLL / 256) +15;
      269    14158    2           IF J=0
      270    14159    2           THEN SEGS_64K = (G$JIT.PCL +255) / 256;
      271    14160    2           ELSE SEGS_64K = ( G_SFILE.PGSZ_PROC(J) +255) / 256;
      272    14161
      273    14162    2           CALL RELEASE_SECT;
      274    14163
      275    14164    2           G$JIT.SLIB# = 0;
      276    14165    2           G$JIT.PCL = 0;
      277    14166    2           END;
      278    14167
      279    14168        /*D* If the user is associated with a shared debugger, it also
      280    14169             is disassociated in the same manner.  The debuggers data segment
      281    14170             is also released.
      282    14171        */
      283    14172    1      IF (G$JIT.JUNK.MLDTRC = '0'B)
      284    14173    2      THEN DO;
      285    14174    2           CALL RUND_FD;
      286    14175    2           END /* Do if JIT.DB# ~=  */;
      287    14176
      288    14177        /*D*  Next the user's program data pages are released.
      289    14178        */
      290    14179    1      IF G$JIT.PCD ~= 0
      291    14180    2      THEN DO;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:9    
      292    14181    2           J = 0;
      293    14182    2           PGS_REMAINING = G$JIT.PCD;
      294    14183
      295    14184    2           SEGS_64K = (G$JIT.PCD + 255) / 256;
      296    14185    2           ASDT_INDX = (G$JIT.DLL /256) + 15;
      297    14186
      298    14187    2           CALL RELEASE_SECT;
      299    14188
      300    14189    2           G$JIT.PCD = 0;
      301    14190    2           END/* Do if JIT.PCD ~0 */;
      302    14191
      303    14192
      304    14193        /*D*  Release any AUTO and dynamic data segments the user may have
      305    14194              obtained, preserving the user data segment 4 if this is an M$LDTRC.
      306    14195        */
      307    14196    2      DO I=0 TO %SEG#;
      308    14197    2           GMA_SEGX = DS_ASDT_INDX(I);
      309    14198
      310    14199    2           IF GMA_SEGX=%GM_DB_PROC# AND G$JIT.JUNK.MLDTRC AND G$JIT.DB#~=0
      311    14200    2           THEN GOTO DONT_RELEASE;
      312    14201
      313    14202    2           IF (GMA_SEGX ~= %GM_USR_DS4#) OR (G$JIT.JUNK.MLDTRC = '0'B)
      314    14203    2             OR (G$JIT.FIRST_SEG(GMA_SEGX) = '0'B)
      315    14204    3           THEN DO;
      316    14205    3                IF (G$ASDT_USR.DESC.V(GMA_SEGX) = '1'B)
      317    14206    4                THEN DO;
      318    14207    4                     IF NOT(G$JIT.CVM_REAL(GMA_SEGX))
      319    14208    5                     THEN DO;
      320    14209    5                          IF G$UHJIT.SHRD_SEG(GMA_SEGX) ~= 0
      321    14210    6                          THEN DO;
      322    14211    6                               CALL GMA$UNSHARE(GMA_SEGX);
      323    14212    6                               END;
      324    14213
      325    14214    6                          ELSE DO;
      326    14215    6                               GMA_#PGS = G$ASDT_USR.DESC.SIZE(GMA_SEGX) +1;
      327    14216
      328    14217    6                               IF (G$ASDT_USR.DESC.BASE(GMA_SEGX) > GM_SHUF_HI)
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:10   
      329    14218    6                               THEN G$JIT.NSPC = G$JIT.NSPC - GMA_#PGS;
      330    14219    6                               ELSE G$JIT.PCDS = G$JIT.PCDS - GMA_#PGS;
      331    14220
      332    14221    6                               CALL GMA$REL(GMA_SEGX,GMA_#PGS)
      333    14222    7                               WHENRETURN DO;
      334    14223    7                                    PGS_RELEASED = PGS_RELEASED + GMA_#PGS;
      335    14224    7                                    END;
      336    14225
      337    14226    7                               WHENALTRETURN DO;
      338    14227
      339    14228    7                                    END;
      340    14229    6                               END/*do if not shared*/;
      341    14230    5                          END/*do if not CVM_REAL*/;
      342    14231
      343    14232    4                     ELSE G$JIT.CVM_REAL(GMA_SEGX) = '0'B;
      344    14233    4                     END/*do if valid segment*/;
      345    14234
      346    14235    3                G$ASDT_USR.DESC(GMA_SEGX) = '0'B;
      347    14236    3                G$JIT.FIRST_SEG(GMA_SEGX) = '0'B;
      348    14237    3                END/*DO if not DS4 with M$LDTRC*/;
      349    14238    2   DONT_RELEASE:
      350    14239    2           END/* DO I=0 to 11*/;
      351    14240
      352    14241
      353    14242        /*D*  Rundown the Read Only Segment to its initial state.
      354    14243              Begin by setting NUMDCBS to the minimum.
      355    14244        */
      356    14245    1      G$ROS.NUMDCBS = %G_LAST_RES_DCB#;
      357    14246
      358    14247        /*D*  Clear the pointers to all special DCBs.
      359    14248        */
      360    14249    2      DO I = %G_FRST_RES_DCB# TO %G_LAST_RES_DCB#;
      361    14250    2           G$ROS.DCBTABLE(I) = ADDR(NIL);
      362    14251    2           END;
      363    14252
      364    14253        /*D*  Release all but the minimum number of pages.
      365    14254        */
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:11   
      366    14255    1      IF G$JIT.PCROS > 0
      367    14256    2      THEN DO;
      368    14257    2           GMA_#PGS = G$JIT.PCROS;
      369    14258    2           CALL GMA$REL(%GM_ROS#,GMA_#PGS)
      370    14259    3           WHENRETURN DO;
      371    14260    3                G$JIT.PCROS = G$JIT.PCROS - GMA_#PGS;
      372    14261    3                PGS_RELEASED = PGS_RELEASED + GMA_#PGS;
      373    14262    3                END;
      374    14263
      375    14264    3           WHENALTRETURN DO;
      376    14265
      377    14266    3                END;
      378    14267    2           END;
      379    14268
      380    14269        /*D*  Reset the information in the available space header
      381    14270        */
      382    14271    1      G$ROS.AVAIL$ = ADDR(G$ROS.AVAIL_HDR);
      383    14272    1      G$ROS.AVAIL_HDR.NEXT$ = ADDR(NIL);
      384    14273    1      G$ROS.AVAIL_HDR.NWORDS = (%GM_PAGE_SZ * GM_ROS_PGSZ) - SIZEW(G$ROS);
      385    14274
      386    14275        /*D*  Reset the TCB header.
      387    14276        */
      388    14277    1      G$ROS.TCB.ALT$ = ADDR(NIL);
      389    14278    1      G$ROS.TCB.STK$ = ADDR(NIL);
      390    14279    1      G$ROS.TCB.CURRSZ = 0;
      391    14280    1      G$ROS.TCB.AVSZ = 0;
      392    14281
      393    14282        /*D*  Reset all the ECCBs.
      394    14283        */
      395    14284    1      G$ROS.U_ECCB$->G$ECCB = '0'B;
      396    14285    1      G$ROS.DB_ECCB$->G$ECCB = '0'B;
      397    14286    1      G$ROS.CP_ECCB$->G$ECCB = '0'B;
      398    14287
      399    14288        /*D* If any pseudo resources had been acquired for this user by job
      400    14289             step they are released.
      401    14290        */
      402    14291           %LOCK (G=GFR_RES_LOCK);
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:12   
      403    14298    2      DO I=0 TO 7;
      404    14299    2           IF G$JIT.CURSUDO(I) ~= 0
      405    14300    3           THEN DO;
      406    14301    3                GFR_PSUDO_CUR_SYS(I)
      407    14302    3                  = GFR_PSUDO_CUR_SYS(I)- G$JIT.CURSUDO(I);
      408    14303
      409    14304    3                GFR_PSUDO_CUR$(G$JIT.MODE)->G$PSUDO(I)
      410    14305    3                  = GFR_PSUDO_CUR$(G$JIT.MODE)->G$PSUDO(I) - G$JIT.CURSUDO(I);
      411    14306
      412    14307    3                G$JIT.CURSUDO(I) = 0;
      413    14308
      414    14309    3                IF G$JIT.PEAK_SUDO(I) > G$JIT.JPEAK_SUDO(I)
      415    14310    3                THEN G$JIT.JPEAK_SUDO(I) = G$JIT.PEAK_SUDO(I);
      416    14311    3                G$JIT.PEAK_SUDO(I) = 0;
      417    14312    3                END;
      418    14313
      419    14314    2           END;
      420    14315           %UNLOCK (G=GFR_RES_LOCK);
      421    14322
      422    14323        /*D*  The JIT memory delimiters are reset to their initial values.
      423    14324        */
      424    14325    1      G$JIT.DLL = %GM_FIRST_IS_VP;
      425    14326    1      G$JIT.DUL = %GM_FIRST_IS_VP-1;
      426    14327    1      G$JIT.PCD = 0;
      427    14328    1      G$JIT.PLL = %GM_FIRST_IS_VP;
      428    14329    1      G$JIT.PUL = %GM_FIRST_IS_VP-1;
      429    14330    1      G$JIT.PCP = 0;
      430    14331    1      G$JIT.LUL = %GM_FIRST_IS_VP-1;
      431    14332    1      G$JIT.LLL = %GM_FIRST_IS_VP;
      432    14333    1      G$JIT.PCL = 0;
      433    14334    1      G$JIT.DB_WRTSEGS = '0'B;
      434    14335
      435    14336    1      G$JIT.PRIV.ACTIVE = '0'B;
      436    14337    1      G$JIT.PRIV.PRC = '0'B;
      437    14338    1      G$JIT.MMFLGS.FREE_PPGS = '0'B;
      438    14339    1      G$JIT.RNST = '0000'X;
      439    14340    1      G$JIT.ERR = '0'B;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:13   
      440    14341    1      G$JIT.FD_ALTERR = '0'B;
      441    14342    1      G$JIT.FRS = FRS;
      442    14343    1      G$JIT.JUNK = %G_JJ_STEP#;
      443    14344
      444    14345        /*D* The job counters in the jit are incremented by the values for
      445    14346             this job step and the job step counters are reset to zero.
      446    14347        */
      447    14348    1      G$JIT.JMCLS = G$JIT.JMCLS + G$JIT.MCLS;
      448    14349    1      G$JIT.MCLS = 0;
      449    14350
      450    14351    1      G$JIT.JREADS_HOST = G$JIT.JREADS_HOST + G$JIT.READS_HOST;
      451    14352    1      G$JIT.JWRITES_HOST = G$JIT.JWRITES_HOST + G$JIT.WRITES_HOST;
      452    14353    1      G$JIT.JREADS_UC = G$JIT.JREADS_UC + G$JIT.READS_UC;
      453    14354    1      G$JIT.JWRITES_UC = G$JIT.JWRITES_UC + G$JIT.WRITES_UC;
      454    14355
      455    14356    1      G$JIT.READS_HOST = 0;
      456    14357    1      G$JIT.WRITES_HOST = 0;
      457    14358    1      G$JIT.READS_UC = 0;
      458    14359    1      G$JIT.WRITES_UC = 0;
      459    14360
      460    14361    1      IF G$JIT.PEAK_MEM > G$JIT.JPEAK_MEM
      461    14362    1      THEN G$JIT.JPEAK_MEM = G$JIT.PEAK_MEM;
      462    14363    1      G$JIT.PEAK_MEM = 0;
      463    14364
      464    14365    1      IF G$JIT.PEAK_LVLS > G$JIT.JPEAK_LVLS
      465    14366    1      THEN G$JIT.JPEAK_LVLS = G$JIT.PEAK_LVLS;
      466    14367    1      G$JIT.PEAK_LVLS = 0;
      467    14368
      468    14369
      469    14370        /*D* The TSA is re-initialized to cause entry to GJI$INIT_USR to
      470    14371             fetch the next run-unit.
      471    14372        */
      472    14373    1      G$TSA.P$$ = ENTADDR(GJI$INIT_USR);
      473    14374    1      G$TSA.Z.IS = 0;
      474    14375    1      G$TSA.S = MON_STATUS_REG;
      475    14376    1      G$TSA.ISA.REGS.T$ = G$TSTACKU$;
      476    14377
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:14   
      477    14378    1      RETURN;
      478    14379        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:15   
      479    14380
      480    14381        /*F*    NAME:  GJS$RUND_FD
      481    14382
      482    14383                PURPOSE: To disassociate the FD from the user.
      483    14384        */
      484    14385
      485    14386    1   GJS$RUND_FD: ENTRY(PGS_RELEASED);
      486    14387
      487    14388    1      PGS_RELEASED = 0;
      488    14389
      489    14390    1      CALL RUND_FD;
      490    14391    1      RETURN;
      491    14392        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:16   
      492    14393
      493    14394        /*I* NAME: RUND_FD
      494    14395
      495    14396                PURPOSE: To disassociate the FD from the user.
      496    14397        */
      497    14398
      498    14399    1   RUND_FD: PROC;
      499    14400    2      CALL KNA$CLOSE (%G_M$DEBUG#,I);
      500    14401
      501    14402    2      G$MHJIT.CU$->G$U.ASYNCH = (G$MHJIT.CU$->G$U.ASYNCH &~ %U_ALIBFD);
      502    14403    2      G$JIT.JUNK.ALIBFD = '0'B;
      503    14404    2      G$JIT.JUNK.UDELTA = '0'B;
      504    14405
      505    14406    2      J = G$JIT.DB#;
      506    14407    2      G$JIT.DB# = 0;
      507    14408    2      CALL GJS$CLOSE_SHARED(J);
      508    14409
      509    14410
      510    14411    2      IF GJU_DB_DB = 0
      511    14412    2      THEN G$ASDT_USR.DESC(%GM_DB_PROC#) = '0'B;
      512    14413    3      ELSE DO;
      513    14414    3           IF G$ASDT_USR.DESC.V(%GM_DB_PROC#) = '1'B
      514    14415    4           THEN DO;
      515    14416    4                GMA_SEGX = %GM_DB_PROC#;
      516    14417    4                GMA_#PGS = G$ASDT_USR.DESC.SIZE(%GM_DB_PROC#) +1;
      517    14418    4                CALL GMA$REL(GMA_SEGX,GMA_#PGS);
      518    14419    4                END /* Do if there is DB_PROC*/;
      519    14420    3           END/*do if GJU_DB_DB*/;
      520    14421
      521    14422
      522    14423    2      IF G$ASDT_USR.DESC.V(%GM_DB_DS#) = '1'B
      523    14424    3      THEN DO;
      524    14425    3           GMA_SEGX = %GM_DB_DS#;
      525    14426    3           GMA_#PGS = G$ASDT_USR.DESC.SIZE(%GM_DB_DS#) +1;
      526    14427    3           CALL GMA$REL(GMA_SEGX,GMA_#PGS)
      527    14428    4           WHENRETURN DO;
      528    14429    4                G$JIT.PCDDS = G$JIT.PCDDS - GMA_#PGS;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:17   
      529    14430    4                PGS_RELEASED = PGS_RELEASED + GMA_#PGS;
      530    14431    4                END;
      531    14432
      532    14433    4           WHENALTRETURN DO;
      533    14434    4                END;
      534    14435    3           END /* Do if there is DB_DS*/;
      535    14436
      536    14437    2      RETURN;
      537    14438    2   END RUND_FD;
      538    14439        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:18   
      539    14440        /*I* NAME: CLOSE_OR_TRUNC
      540    14441
      541    14442             PURPOSE: To call KNA$CLOSE or KNA$TRUNC
      542    14443             CALL:   I = 1st DCB#
      543    14444                     J = last DCB#
      544    14445                     ROUTINE$ = Address of appropriate routine
      545    14446        */
      546    14447
      547    14448    1   CLOSE_OR_TRUNC: PROC;
      548    14449
      549    14450    3      DO WHILE (I <= J);
      550    14451    3           IF G$ROS.DCBPTR$->G$DCBTABLE(I) ~= ADDR(NIL)
      551    14452    3           THEN IF G$ROS.DCBPTR$->G$DCBTABLE(I)->G$DCB.FCD
      552    14453    3                THEN IF G$ROS.DCBPTR$->G$DCBTABLE(I)->G$DCB.ORG = %G_ORG_CQ#
      553    14454    3                     THEN CALL KNH$CLOSE;
      554    14455    3                     ELSE CALL ROUTINE$(I,ERROR);
      555    14456    3           I = I+1;
      556    14457    3           END;
      557    14458
      558    14459    2   END CLOSE_OR_TRUNC;
      559    14460        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:19   
      560    14461
      561    14462        /*I* NAME: RELEASE_SECT
      562    14463
      563    14464             PURPOSE: To release a program section.
      564    14465             CALL:    J = Shared file index or zero
      565    14466                      PGS_REMAINING = # of pages to release
      566    14467                      ASDT_INDX = index to first segment to release
      567    14468                      SEGS_64K = number of segments to release
      568    14469
      569    14470                      CALL RELEASE_SECT;
      570    14471        */
      571    14472
      572    14473    1   RELEASE_SECT: PROC;
      573    14474        /*   If this is a call to release shared procedure, the
      574    14475             GJS$CLOSE_SHARED routine is called to disassociate it.
      575    14476
      576    14477             The descriptors for the processor's procedure segments are
      577    14478             reset to the NULL descriptor in ASDT_USR.
      578    14479        */
      579    14480    2      IF J ~= 0
      580    14481    3      THEN DO;
      581    14482    4           DO I=0 TO SEGS_64K-1;
      582    14483    4                CALL GMA$UNSHARE(ASDT_INDX+I);
      583    14484    4                END;
      584    14485
      585    14486    3           CALL GJS$CLOSE_SHARED(J);
      586    14487
      587    14488    3           IF NOT(G$JIT.MMFLGS.FREE_PPGS)
      588    14489    3           THEN PGS_RELEASED = PGS_RELEASED + G$JIT.PCP;
      589    14490    3           END;
      590    14491
      591    14492        /*    If this is not a call to release procedure, the
      592    14493              pages containing this program section are released by
      593    14494              calling GMA$REL.
      594    14495        */
      595    14496    3      ELSE DO;
      596    14497
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:20   
      597    14498    4           DO I=0 TO SEGS_64K-1;
      598    14499    4                IF PGS_REMAINING > 256
      599    14500    4                THEN GMA_#PGS = 256;
      600    14501    4                ELSE GMA_#PGS = PGS_REMAINING;
      601    14502
      602    14503    4                PGS_REMAINING = PGS_REMAINING - GMA_#PGS;
      603    14504
      604    14505    4                GMA_SEGX = ASDT_INDX + I;
      605    14506
      606    14507    4                CALL GMA$REL(GMA_SEGX,GMA_#PGS);
      607    14508    4                PGS_RELEASED = PGS_RELEASED + GMA_#PGS;
      608    14509
      609    14510    4                END/* Do 0 to segsz-1 */;
      610    14511    3           END;
      611    14512
      612    14513    2   END RELEASE_SECT;
      613    14514    1   END;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:21   
--  Include file information  --

   AZ_SUBS_C.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GJS$RUND.

   Procedure GJS$RUND requires 1290 words for executable code.
   Procedure GJS$RUND requires 26 words of local(AUTO) storage.

    No errors detected in file GJS$RUND.:E05TSI    .

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:22   

 Object Unit name= GJS$RUND                                   File name= GJS$RUND.:E05TOU
 UTS= JUL 29 '97 22:00:52.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     10      A  GJS$RUND
    1   Proc  even  none  1290    50A  GJS$RUND
    2  RoData even  none     3      3  GJS$RUND

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        1  GJS$RUND
     1    3A3                  yes      Std        1  GJS$RUND_FD
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:23   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 GHI$UTS
         yes           Std       0 GUS$RNDCLK
 yes     yes           Std       4 KNB$WRITE
 yes     yes           Std       1 GHH$UNLOCK
         yes           Std       1 GHS$DORUND
 yes     yes           Std       1 GMA$UNSHARE
 yes     yes           Std       1 GHH$LOCK
         yes           Std       0 GJI$INIT_USR
 yes     yes           Std       0 GHM$INTRELALL
 yes     yes           Std       2 KNA$TRUNC
 yes     yes           Std       2 GMA$REL
 yes     yes           Std       2 KNA$CLOSE
 yes     yes           Std       1 GJS$CLOSE_SHARED
 yes     yes           Std       0 KNH$CLOSE
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ASDT_USR$                      r    G$ASDT_MCL$                      r    G$BOBCAT$
r    G$UHJIT$                         r    G$MHJIT$                         r    G$ROS$
r    G$JIT$                           r    G$TSTACKU$                       r    G$TSA_USR$
     GJU_DB_DB                             GM_SHUF_HI                            GM_ROS_PGSZ
     G_BOOTTIME                            GFR_PSUDO_CUR_SYS                     GFR_PSUDO_CUR$
     GFR_RES_LOCK                     r    G$ROS$
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:24   


        1        1        /*M* GJS$RUND   Rundown user               */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0,CRM=70     */
        8        8
        9        9        /*F* NAME: GJS$RUND
       10       10
       11       11             PURPOSE:  To run down the user.
       12       12
       13       13        */
       14       14
       15       15
       16       16        /*D* NAME: GJS$RUND
       17       17
       18       18             DESCRIPTION:
       19       19
       20       20        */
       21       21        GJS$RUND: PROC(PGS_RELEASED);

     21   1 000000  D380 0000 0000  xent GJS$RUND        LNJ,B5   X6A_AUTO_1
          1 000003       001A 0001                       DC       26,1

       22       22
       23       23        %INCLUDE G$BOBCAT_M;
       24       43        %INCLUDE G_SFILE_M;
       25      103        %INCLUDE G_ROS_M;
       26      185        %INCLUDE G_JIT_M;
       27      450        %INCLUDE G_HJIT_M;
       28      595 S      %INCLUDE GF_LCP6_M;
       29      596 S      %INCLUDE GH_LCP6_M;
       30      597 S      %INCLUDE GU_LCP6_M;
       31      598        %INCLUDE GH_GATE_M;
       32      639        %INCLUDE GH_SCHD_M;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:25   
       33      783        %INCLUDE GH_SCHD_E;
       34      879
       35      880        %INCLUDE GM_VIRTUAL_E;
       36     1090 S      %INCLUDE G_LCP6_E;
       37     1091        %INCLUDE AZ_SUBS_C;
       38     1160
       39     1161                                                /* Input parameter          */
       40     1162    1   DCL PGS_RELEASED UBIN;
       41     1163
       42     1164                                                /* Auto Storage             */
       43     1165    1   DCL ERROR BIT(32);
       44     1166    1   DCL I UBIN;
       45     1167    1   DCL J UBIN;
       46     1168    1   DCL ASDT_INDX UBIN;
       47     1169    1   DCL SEGS_64K UBIN;
       48     1170    1   DCL PGS_REMAINING UBIN;
       49     1171    1   DCL GMA_SEGX UBIN;
       50     1172    1   DCL GMA_#PGS UBIN;
       51     1173    1   DCL G$SFILE$ PTR;
       52     1174    1   DCL ROUTINE$ EPTR;
       53     1175    1   DCL FRS BIT(16);
       54     1176
       55     1177                                                /* External Data            */
       56     1178
       57     1179    1   DCL G$ASDT_USR$ PTR SYMREF READONLY;
       58     1180    1   DCL G$ASDT_MCL$ PTR SYMREF READONLY;
       59     1181    1   DCL G$BOBCAT$ PTR SYMREF READONLY;
       60     1182    1   DCL G$UHJIT$ PTR SYMREF READONLY;
       61     1183    1   DCL G$MHJIT$ PTR SYMREF READONLY;
       62     1184    1   DCL G$ROS$ PTR SYMREF READONLY;
       63     1185    1   DCL G$JIT$ PTR SYMREF READONLY;
       64     1186    1   DCL G$TSTACKU$ PTR SYMREF READONLY;
       65     1187    1   DCL G$TSA_USR$ PTR SYMREF READONLY;
       66     1188
       67     1189    1   DCL GJU_DB_DB SBIN SYMREF;
       68     1190    1   DCL GM_SHUF_HI UBIN SYMREF;
       69     1191    1   DCL GM_ROS_PGSZ UBIN SYMREF;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:26   
       70     1192    1   DCL G_BOOTTIME UBIN(32) SYMREF;
       71     1193
       72     1194    1   DCL GFR_PSUDO_CUR_SYS(0:7) SBIN SYMREF;
       73     1195    1   DCL GFR_PSUDO_CUR$(0:4) PTR SYMREF;
       74     1196
       75     1197        %GATE (FPTN=GFR_RES_LOCK,STCLASS=SYMREF);
       76     1216
       77     1217                                                /* Internal Data            */
       78     1218        %EQU SEG# = 17;               /* Number of available data segs -1   */
       79     1219    1   DCL DS_ASDT_INDX(0:%SEG#) UBIN BYTE CONSTANT UNAL INIT(
       80     1220    1           %GM_USR_DS1#,
       81     1221    1           %GM_USR_DS2#,
       82     1222    1           %GM_CP_DS#,
       83     1223    1           %GM_LAUTO_DS#,
       84     1224    1           %GM_LAUTO_DS2#,
       85     1225    1           %GM_LAUTO_DS3#,
       86     1226    1           %GM_USR_DS3#,
       87     1227    1           %GM_USR_DS4#,
       88     1228    1           %GM_UAUTO_DS#,
       89     1229    1           %GM_DB_PROC#,
       90     1230    1           %GM_CP_PROC#,
       91     1231    1           %GM_ISR1#,
       92     1232    1           %GM_ISR2#,
       93     1233    1           %GM_ISR3#,
       94     1234    1           %GM_ISR4#,
       95     1235    1           %GM_ISR5#,
       96     1236    1           %GM_ISR6#,
       97     1237    1           %GM_ISR7#);
       98     1238
       99     1239        %G$STATUS_REG (FPTN=MON_STATUS_REG,
      100     1240                       LEVEL=%G_IL_USER#,
      101     1241                       RING=G_R_MON#,
      102     1242                       STCLASS=CONSTANT);
      103     1263
      104     1264                                                /* BASED Structures         */
      105     1265        %G$ASDT (FPTN=G$ASDT_USR,STCLASS="BASED(G$ASDT_USR$)");
      106     1294        %G$ASDT_MCL (FPTN=G$ASDT_MCL,STCLASS="BASED(G$ASDT_MCL$)");
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:27   
      107     1988        %G$SFILE (FPTN=G_SFILE,STCLASS="BASED(G$SFILE$)");
      108     2025        %G$BOBCAT (STCLASS="BASED(G$BOBCAT$)");
      109     2038        %G$UHJIT (STCLASS="BASED(G$UHJIT$)");
      110     5012        %G$MHJIT (STCLASS="BASED(G$MHJIT$)");
      111    11886        %G$USER (FPTN=G$U);
      112    11897        %G$ROS (STCLASS="BASED(G$ROS$)",FULL=YES);
      113    12848        %G$JIT (STCLASS="BASED(G$JIT$)");
      114    13262        %G$ACC_HDR (FPTN=ACCT$MSG, LVL=1, LAST=NO);
      115    13284        %G$ACC (LVL=2);
      116    13422        %G$TSA (STCLASS="BASED(G$TSA_USR$)");
      117    13810        %G$DCBTABLE;
      118    13821        %M$DCB (DCBN=G$DCB,STCLASS=BASED);
      119    13872
      120    13873        %G$ECCB;
      121    13949
      122    13950    1   DCL G$PSUDO(0:7) SBIN BASED;
      123    13951    1   DCL G$UNITS(0:3) UBIN BASED;
      124    13952    1   DCL G$USRTIMES(0:2) UBIN(32) BASED;
      125    13953    1   DCL G$ALLTIMES(0:5) UBIN(32) BASED;
      126    13954                                                /* External Procedures      */
      127    13955    1   DCL GMA$REL ENTRY(2) ALTRET;
      128    13956    1   DCL GMA$UNSHARE ENTRY(1) ALTRET;
      129    13957    1   DCL GHI$UTS ENTRY(1);
      130    13958    1   DCL GHM$INTRELALL ENTRY ALTRET;
      131    13959    1   DCL GUS$RNDCLK ENTRY;
      132    13960    1   DCL GHS$DORUND ENTRY(1);
      133    13961    1   DCL GJI$INIT_USR ENTRY;
      134    13962    1   DCL GJS$CLOSE_SHARED ENTRY(1) ALTRET;
      135    13963    1   DCL KNA$CLOSE ENTRY(2) ALTRET;
      136    13964    1   DCL KNA$TRUNC ENTRY(2) ALTRET;
      137    13965    1   DCL KNB$WRITE ENTRY(4) ALTRET;
      138    13966    1   DCL KNH$CLOSE ENTRY ALTRET;
      139    13967
      140    13968                                                /* String Substitutions     */
      141    13969        %G$JIT_E;
      142    14031
      143    14032        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:28   
      144    14033    1      G$JIT.RUNFLAGS = %G_RUN_MON#;

  14033   1 000005  E870 0100                            LDR,R6   256,IMO
          1 000007  6048                                 SOR,R6   8
          1 000008  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00000B  E7C6 0097                            STH,R6   151,B6

      145    14034    1      CALL GHI$UTS(G$JIT.STOP);

  14034   1 00000D  DBC6 0022                            LAB,B5   34,B6
          1 00000F  DFC7 0016                            STB,B5   FRS+3,AUTO
          1 000011  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 000013  CBF0 0100                            LAB,B4   256,IMO
          1 000015  E380 0000 0000  xent                 LNJ,B6   GHI$UTS
          1 000018       0001                            DC       s:14035,PREL

      146    14035    1      G$JIT.STOP = G$JIT.STOP + G_BOOTTIME;

  14035   1 000019  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00001C  8CC6 0022                            LDI      34,B6
          1 00001E  8400 0000 0000  xsym                 AID      G_BOOTTIME
          1 000021  8D46 0022                            SDI      34,B6

      147    14036    1      G$SFILE$ = G$BOBCAT.SFILE$;

  14036   1 000023  DC80 0000 0000  xsym                 LDB,B5   G$BOBCAT$
          1 000026  CCC5 001E                            LDB,B4   30,B5
          1 000028  CFC7 000F                            STB,B4   G$SFILE$,AUTO

      148    14037    1      PGS_RELEASED = 0;

  14037   1 00002A  BCC7 0004                            LDB,B3   @PGS_RELEASED,AUTO
          1 00002C  8703                                 CL       ,B3

      149    14038
      150    14039        /*D* Any interrupt levels that are still connected are disconnected.
      151    14040        */
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:29   
      152    14041    1      CALL GHM$INTRELALL;

  14041   1 00002D  CBF0 0000                            LAB,B4   0,IMO
          1 00002F  E380 0000 0000  xent                 LNJ,B6   GHM$INTRELALL
          1 000032       0001                            DC       s:14046,PREL

      153    14042
      154    14043
      155    14044        /*D*  Any outstanding wall clock timer request is canceled.  */
      156    14045
      157    14046    1      CALL GUS$RNDCLK;

  14046   1 000033  CBF0 0000                            LAB,B4   0,IMO
          1 000035  E380 0000 0000  xent                 LNJ,B6   GUS$RNDCLK
          1 000038       0001                            DC       s:14052,PREL

      158    14047
      159    14048        /* GET A NEW QUANTUM   */
      160    14049
      161    14050        /* Temporarily put RNST in FRS so it is in the job step acct. records.
      162    14051        */
      163    14052    1      FRS = G$JIT.FRS;

  14052   1 000039  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00003C  E846 003E                            LDR,R6   62,B6
          1 00003E  EF47 0013                            STR,R6   FRS,AUTO

      164    14053    1      G$JIT.FRS = G$JIT.RNST;

  14053   1 000040  E846 0096                            LDR,R6   150,B6
          1 000042  EF46 003E                            STR,R6   62,B6

      165    14054
      166    14055        /*D* If a processor linked with the PROCACC option is exiting, the job
      167    14056             step times are moved from the user to the processor counters.
      168    14057        */
      169    14058    1      IF G$JIT.JUNK.PROCACCT
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:30   

  14058   1 000044  82C6 0098                            LB,'0400'X        152,B6
  14058   1 000046       0400
          1 000047  0581 0013                            BBF      s:14070,PREL

      170    14059    2      THEN DO;

      171    14060    2           G$JIT.PROC_EXTIME = G$JIT.USER_EXTIME;

  14060   1 000049  8CC6 0024                            LDI      36,B6
          1 00004B  8D46 002A                            SDI      42,B6

      172    14061    2           G$JIT.PROC_SVTIME = G$JIT.USER_SVTIME;

  14061   1 00004D  8CC6 0026                            LDI      38,B6
          1 00004F  8D46 002C                            SDI      44,B6

      173    14062    2           G$JIT.PROC_MEMTIME = G$JIT.USER_MEMTIME;

  14062   1 000051  8CC6 0028                            LDI      40,B6
          1 000053  8D46 002E                            SDI      46,B6

      174    14063
      175    14064    2           ADDR(G$JIT.USER_EXTIME)->G$USRTIMES = '0'B;

  14064   1 000055  5C0C                                 LDV,R5   12
          1 000056  0021                                 ALR      ;
          1 000057       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000059       4006 0024                                ALPHANUM(36,B6,,R5,FILL)

      176    14065    2           END;

      177    14066
      178    14067        /*D* If a processor linked with the PROCSURCHG option is exiting,
      179    14068             a processor accounting record is written.
      180    14069        */
      181    14070    1      IF G$JIT.JUNK.PROCSURCHG
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:31   

  14070   1 00005B  437F                                 CSYNC    s:14064+5,SPREL
          1 00005C  82C6 0098                            LB,'0800'X        152,B6
          1 00005E       0800
          1 00005F  0581 0018                            BBF      s:14084,PREL

      182    14071    2      THEN DO;

      183    14072    2           G$JIT.TYPE = %AZ$PROC;

  14072   1 000061  6C05                                 LDV,R6   5
          1 000062  EAC6 0002                            SRM,R6,'00FF'X    2,B6
          1 000064       00FF

      184    14073    2           CALL KNB$WRITE(G$JIT$,SIZEC(ACCT$MSG))

  14073   1 000065  DBF0 00C8                            LAB,B5   200,IMO
          1 000067  DFC7 0018                            STB,B5   FRS+5,AUTO
          1 000069  CB80 0000 0000  xsym                 LAB,B4   G$JIT$
          1 00006C  CFC7 0016                            STB,B4   FRS+3,AUTO
          1 00006E  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 000070  CBF0 0200                            LAB,B4   512,IMO
          1 000072  E380 0000 0000  xent                 LNJ,B6   KNB$WRITE
          1 000075       0003                            DC       s:14084,PREL
          1 000076  0F81 0001                            B        s:14084,PREL

      185    14074    3           WHENALTRETURN DO;

      186    14075                                /*N* SYSLOGGING IS BUSY */
      187    14076    3                END;

      188    14077
      189    14078    2           END;

      190    14079
      191    14080        /*D* If job step accounting is in effect or
      192    14081             any of the STEPUNIT values have been set by an M$CHGUNIT
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:32   
      193    14082             service request, a job step accounting record is written.
      194    14083        */
      195    14084    1      IF G$JIT.JUNK.STEPACCT OR (ADDR(G$JIT.STEPUNIT)->G$UNITS ~='0'B)

  14084   1 000078  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00007B  82C6 0098                            LB,'2000'X        152,B6
          1 00007D       2000
          1 00007E  0501 000C                            BBT      s:14086,PREL
          1 000080  DB80 0000 0000  02                   LAB,B5   0
          1 000083  5C01                                 LDV,R5   1
          1 000084  0022                                 ACM      ;
          1 000085       4806 0038                                ALPHANUM(56,B6,,8,FILL),;
          1 000087       4005 0000                                ALPHANUM(0,B5,,R5,FILL)
          1 000089  5381 0021                            CBE      s:14099,PREL

      196    14085    2      THEN DO;

      197    14086    2           G$JIT.TYPE = %AZ$STEP;

  14086   1 00008B  6C04                                 LDV,R6   4
          1 00008C  EAC6 0002                            SRM,R6,'00FF'X    2,B6
          1 00008E       00FF

      198    14087    2           CALL KNB$WRITE(G$JIT$,SIZEC(ACCT$MSG))

  14087   1 00008F  DBF0 00C8                            LAB,B5   200,IMO
          1 000091  DFC7 0018                            STB,B5   FRS+5,AUTO
          1 000093  CB80 0000 0000  xsym                 LAB,B4   G$JIT$
          1 000096  CFC7 0016                            STB,B4   FRS+3,AUTO
          1 000098  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 00009A  CBF0 0200                            LAB,B4   512,IMO
          1 00009C  E380 0000 0000  xent                 LNJ,B6   KNB$WRITE
          1 00009F       0003                            DC       s:14092,PREL
          1 0000A0  0F81 0001                            B        s:14092,PREL

      199    14088    3           WHENALTRETURN DO;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:33   
      200    14089                                /*N* SYSLOGGING IS BUSY */
      201    14090    3                END;

      202    14091
      203    14092    2           ADDR(G$JIT.STEPUNIT)->G$UNITS = '0'B;

  14092   1 0000A2  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0000A5  5C08                                 LDV,R5   8
          1 0000A6  0021                                 ALR      ;
          1 0000A7       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0000A9       4006 0038                                ALPHANUM(56,B6,,R5,FILL)

      204    14093    2           END;

      205    14094
      206    14095        /*D* If a processor linked with the PROCACC option is exiting,
      207    14096             the total job processor time cells are updated.  Otherwise
      208    14097             the total job user time cells are updated.
      209    14098        */
      210    14099    1      IF G$JIT.JUNK.PROCACCT

  14099   1 0000AB  437F                                 CSYNC    s:14092+8,SPREL
          1 0000AC  82C6 0098                            LB,'0400'X        152,B6
          1 0000AE       0400
          1 0000AF  0581 0015                            BBF      s:14107,PREL

      211    14100    2      THEN DO;

      212    14101    2           G$JIT.JPROC_EXTIME = G$JIT.JPROC_EXTIME + G$JIT.PROC_EXTIME;

  14101   1 0000B1  8CC6 00C8                            LDI      200,B6
          1 0000B3  8446 002A                            AID      42,B6
          1 0000B5  8D46 00C8                            SDI      200,B6

      213    14102    2           G$JIT.JPROC_SVTIME = G$JIT.JPROC_SVTIME + G$JIT.PROC_SVTIME;

  14102   1 0000B7  8CC6 00CA                            LDI      202,B6
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:34   
          1 0000B9  8446 002C                            AID      44,B6
          1 0000BB  8D46 00CA                            SDI      202,B6

      214    14103    2           G$JIT.JPROC_MEMTIME = G$JIT.JPROC_MEMTIME + G$JIT.PROC_MEMTIME;

  14103   1 0000BD  8CC6 00CC                            LDI      204,B6
          1 0000BF  8446 002E                            AID      46,B6
          1 0000C1  8D46 00CC                            SDI      204,B6

      215    14104    2           END;

  14104   1 0000C3  0F81 0013                            B        s:14112,PREL

      216    14105
      217    14106    2      ELSE DO;

      218    14107    2           G$JIT.JUSER_EXTIME = G$JIT.JUSER_EXTIME + G$JIT.USER_EXTIME;

  14107   1 0000C5  8CC6 00C2                            LDI      194,B6
          1 0000C7  8446 0024                            AID      36,B6
          1 0000C9  8D46 00C2                            SDI      194,B6

      219    14108    2           G$JIT.JUSER_SVTIME = G$JIT.JUSER_SVTIME + G$JIT.USER_SVTIME;

  14108   1 0000CB  8CC6 00C4                            LDI      196,B6
          1 0000CD  8446 0026                            AID      38,B6
          1 0000CF  8D46 00C4                            SDI      196,B6

      220    14109    2           G$JIT.JUSER_MEMTIME = G$JIT.JUSER_MEMTIME + G$JIT.USER_MEMTIME;

  14109   1 0000D1  8CC6 00C6                            LDI      198,B6
          1 0000D3  8446 0028                            AID      40,B6
          1 0000D5  8D46 00C6                            SDI      198,B6

      221    14110    2           END;

      222    14111
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:35   
      223    14112    1      ADDR(G$JIT.USER_EXTIME)->G$ALLTIMES = '0'B;

  14112   1 0000D7  5C18                                 LDV,R5   24
          1 0000D8  0021                                 ALR      ;
          1 0000D9       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0000DB       4006 0024                                ALPHANUM(36,B6,,R5,FILL)

      224    14113
      225    14114        /*D* Any user DCBs that are open are closed.
      226    14115        */
      227    14116    1      ROUTINE$ = ENTADDR(KNA$CLOSE);

  14116   1 0000DD  DB80 0000 0000  xent                 LAB,B5   KNA$CLOSE
          1 0000E0  DFC7 0011                            STB,B5   ROUTINE$,AUTO

      228    14117    1      I=%G_FRST_USR_DCB#; J=G$ROS.NUMDCBS;

  14117   1 0000E2  6C0A                                 LDV,R6   10
          1 0000E3  EF47 0008                            STR,R6   I,AUTO

  14117   1 0000E5  CC80 0000 0000  xsym                 LDB,B4   G$ROS$
          1 0000E8  437F                                 CSYNC    s:14117+5,SPREL
          1 0000E9  C844 0014                            LDR,R4   20,B4
          1 0000EB  CF47 0009                            STR,R4   J,AUTO

      229    14118    1      CALL CLOSE_OR_TRUNC;

  14118   1 0000ED  E3C0 0360                            LNJ,B6   s:0,PREL
          1 0000EF       0001                            DC       s:14120,PREL

      230    14119
      231    14120    1      ROUTINE$ = ENTADDR(KNA$TRUNC);

  14120   1 0000F0  EB80 0000 0000  xent                 LAB,B6   KNA$TRUNC
          1 0000F3  EFC7 0011                            STB,B6   ROUTINE$,AUTO

      232    14121    1      I=%G_M$DEBUG#; J=%G_M$DO#;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:36   

  14121   1 0000F5  6C01                                 LDV,R6   1
          1 0000F6  EF47 0008                            STR,R6   I,AUTO

  14121   1 0000F8  5C05                                 LDV,R5   5
          1 0000F9  DF47 0009                            STR,R5   J,AUTO

      233    14122    1      CALL CLOSE_OR_TRUNC;

  14122   1 0000FB  E3C0 0352                            LNJ,B6   s:0,PREL
          1 0000FD       0001                            DC       s:14124,PREL

      234    14123
      235    14124    1      IF NOT(G$JIT.JUNK.MLDTRC)

  14124   1 0000FE  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000101  82C6 0098                            LB,'0001'X        152,B6
          1 000103       0001
          1 000104  0501 000F                            BBT      s:14132,PREL

      236    14125    2      THEN DO;

      237    14126    2           ROUTINE$ = ENTADDR(KNA$CLOSE);

  14126   1 000106  DB80 0000 0000  xent                 LAB,B5   KNA$CLOSE
          1 000109  DFC7 0011                            STB,B5   ROUTINE$,AUTO

      238    14127    2           I=%G_M$HOST#; J=%G_M$DO#;

  14127   1 00010B  6C04                                 LDV,R6   4
          1 00010C  EF47 0008                            STR,R6   I,AUTO

  14127   1 00010E  5C05                                 LDV,R5   5
          1 00010F  DF47 0009                            STR,R5   J,AUTO

      239    14128    2           CALL CLOSE_OR_TRUNC;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:37   
  14128   1 000111  E3C0 033C                            LNJ,B6   s:0,PREL
          1 000113       0001                            DC       s:14132,PREL

      240    14129    2           END;

      241    14130        /*D* Any outstanding do-list entries are released.
      242    14131        */
      243    14132    1      CALL GHS$DORUND;

  14132   1 000114  CBF0 0000                            LAB,B4   0,IMO
          1 000116  E380 0000 0000  xent                 LNJ,B6   GHS$DORUND
          1 000119       0001                            DC       s:14137,PREL

      244    14133
      245    14134        /*D* The user procedure is released by calling the RELEASE_SECT
      246    14135             internal subroutine.
      247    14136        */
      248    14137    1      IF (G$JIT.PCP ~= 0) OR (G$JIT.SPROC# ~= 0)

  14137   1 00011A  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00011D  E846 0081                            LDR,R6   129,B6
          1 00011F  6981 0005                            BNEZ,R6  s:14139,PREL
          1 000121  D2C6 008C                            LLH,R5   140,B6
          1 000123  5901 001C                            BEZ,R5   s:14153,PREL

      249    14138    2      THEN DO;

      250    14139    2           J = G$JIT.SPROC#;

  14139   1 000125  D2C6 008C                            LLH,R5   140,B6
          1 000127  DF47 0009                            STR,R5   J,AUTO

      251    14140    2           PGS_REMAINING = G$JIT.PCP;

  14140   1 000129  EF47 000C                            STR,R6   PGS_REMAINING,AUTO

      252    14141    2           ASDT_INDX = (G$JIT.PLL / 256) +15;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:38   

  14141   1 00012B  C846 007B                            LDR,R4   123,B6
          1 00012D  4048                                 SOR,R4   8
          1 00012E  4E0F                                 ADV,R4   15
          1 00012F  CF47 000A                            STR,R4   ASDT_INDX,AUTO

      253    14142    2           SEGS_64K = (G$JIT.PCP +255) / 256;

  14142   1 000131  EA70 00FF                            ADD,R6   255,IMO
          1 000133  6048                                 SOR,R6   8
          1 000134  EF47 000B                            STR,R6   SEGS_64K,AUTO

      254    14143
      255    14144    2           CALL RELEASE_SECT;

  14144   1 000136  E3C0 0358                            LNJ,B6   s:0,PREL
          1 000138       0001                            DC       s:14146,PREL

      256    14145
      257    14146    2           G$JIT.SPROC# = 0;

  14146   1 000139  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00013C  87C6 008C                            CLH      140,B6

      258    14147    2           G$JIT.PCP = 0;

  14147   1 00013E  8746 0081                            CL       129,B6

      259    14148    2           END;

      260    14149
      261    14150        /*D* The library procedure is released in the same way.
      262    14151              as was the standard shared processor.
      263    14152        */
      264    14153    1      IF (G$JIT.PCL ~= 0) OR (G$JIT.SLIB# ~= 0)

  14153   1 000140  E846 0082                            LDR,R6   130,B6
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:39   
          1 000142  6981 0006                            BNEZ,R6  s:14155,PREL
          1 000144  82C6 008C                            LB,'00FF'X        140,B6
          1 000146       00FF
          1 000147  0581 002E                            BBF      s:14172,PREL

      265    14154    2      THEN DO;

      266    14155    2           J = G$JIT.SLIB#;

  14155   1 000149  D846 008C                            LDR,R5   140,B6
          1 00014B  D570 00FF                            AND,R5   255,IMO
          1 00014D  DF47 0009                            STR,R5   J,AUTO

      267    14156    2           PGS_REMAINING = G$JIT.PCL;

  14156   1 00014F  EF47 000C                            STR,R6   PGS_REMAINING,AUTO

      268    14157    2           ASDT_INDX = (G$JIT.LLL / 256) +15;

  14157   1 000151  C846 007D                            LDR,R4   125,B6
          1 000153  4048                                 SOR,R4   8
          1 000154  4E0F                                 ADV,R4   15
          1 000155  CF47 000A                            STR,R4   ASDT_INDX,AUTO

      269    14158    2           IF J=0

  14158   1 000157  5981 0008                            BNEZ,R5  s:14160,PREL

      270    14159    2           THEN SEGS_64K = (G$JIT.PCL +255) / 256;

  14159   1 000159  EA70 00FF                            ADD,R6   255,IMO
          1 00015B  6048                                 SOR,R6   8
          1 00015C  EF47 000B                            STR,R6   SEGS_64K,AUTO
          1 00015E  0F81 000C                            B        s:14162,PREL

      271    14160    2           ELSE SEGS_64K = ( G_SFILE.PGSZ_PROC(J) +255) / 256;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:40   
  14160   1 000160  DCC7 000F                            LDB,B5   G$SFILE$,AUTO
          1 000162  B855                                 LDR,R3   R5
          1 000163  3F30                                 MLV,R3   48
          1 000164  3E27                                 ADV,R3   39
          1 000165  A835                                 LDR,R2   ,B5,R3
          1 000166  AA70 00FF                            ADD,R2   255,IMO
          1 000168  2048                                 SOR,R2   8
          1 000169  AF47 000B                            STR,R2   SEGS_64K,AUTO

      272    14161
      273    14162    2           CALL RELEASE_SECT;

  14162   1 00016B  E3C0 0323                            LNJ,B6   s:0,PREL
          1 00016D       0001                            DC       s:14164,PREL

      274    14163
      275    14164    2           G$JIT.SLIB# = 0;

  14164   1 00016E  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000171  8846 008C                            LBF,'00FF'X       140,B6
          1 000173       00FF

      276    14165    2           G$JIT.PCL = 0;

  14165   1 000174  8746 0082                            CL       130,B6

      277    14166    2           END;

      278    14167
      279    14168        /*D* If the user is associated with a shared debugger, it also
      280    14169             is disassociated in the same manner.  The debuggers data segment
      281    14170             is also released.
      282    14171        */
      283    14172    1      IF (G$JIT.JUNK.MLDTRC = '0'B)

  14172   1 000176  82C6 0098                            LB,'0001'X        152,B6
  14172   1 000178       0001
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:41   
          1 000179  0501 0004                            BBT      s:14179,PREL

      284    14173    2      THEN DO;

      285    14174    2           CALL RUND_FD;

  14174   1 00017B  E3C0 0235                            LNJ,B6   s:0,PREL
          1 00017D       0001                            DC       s:14179,PREL

      286    14175    2           END /* Do if JIT.DB# ~=  */;

      287    14176
      288    14177        /*D*  Next the user's program data pages are released.
      289    14178        */
      290    14179    1      IF G$JIT.PCD ~= 0

  14179   1 00017E  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000181  E846 0080                            LDR,R6   128,B6
          1 000183  6901 0018                            BEZ,R6   s:14196,PREL

      291    14180    2      THEN DO;

      292    14181    2           J = 0;

  14181   1 000185  8747 0009                            CL       J,AUTO

      293    14182    2           PGS_REMAINING = G$JIT.PCD;

  14182   1 000187  EF47 000C                            STR,R6   PGS_REMAINING,AUTO

      294    14183
      295    14184    2           SEGS_64K = (G$JIT.PCD + 255) / 256;

  14184   1 000189  EA70 00FF                            ADD,R6   255,IMO
          1 00018B  6048                                 SOR,R6   8
          1 00018C  EF47 000B                            STR,R6   SEGS_64K,AUTO

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:42   
      296    14185    2           ASDT_INDX = (G$JIT.DLL /256) + 15;

  14185   1 00018E  D846 0079                            LDR,R5   121,B6
          1 000190  5048                                 SOR,R5   8
          1 000191  5E0F                                 ADV,R5   15
          1 000192  DF47 000A                            STR,R5   ASDT_INDX,AUTO

      297    14186
      298    14187    2           CALL RELEASE_SECT;

  14187   1 000194  E3C0 02FA                            LNJ,B6   s:0,PREL
          1 000196       0001                            DC       s:14189,PREL

      299    14188
      300    14189    2           G$JIT.PCD = 0;

  14189   1 000197  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00019A  8746 0080                            CL       128,B6

      301    14190    2           END/* Do if JIT.PCD ~0 */;

      302    14191
      303    14192
      304    14193        /*D*  Release any AUTO and dynamic data segments the user may have
      305    14194              obtained, preserving the user data segment 4 if this is an M$LDTRC.
      306    14195        */
      307    14196    2      DO I=0 TO %SEG#;

  14196   1 00019C  8747 0008                            CL       I,AUTO

      308    14197    2           GMA_SEGX = DS_ASDT_INDX(I);

  14197   1 00019E  B847 0008                            LDR,R3   I,AUTO
          1 0001A0  E2B0 0000 0000  00                   LLH,R6   DS_ASDT_INDX,R3
          1 0001A3  EF47 000D                            STR,R6   GMA_SEGX,AUTO

      309    14198
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:43   
      310    14199    2           IF GMA_SEGX=%GM_DB_PROC# AND G$JIT.JUNK.MLDTRC AND G$JIT.DB#~=0

  14199   1 0001A5  6D17                                 CMV,R6   23
          1 0001A6  0981 000D                            BNE      s:14202,PREL
          1 0001A8  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0001AB  82C6 0098                            LB,'0001'X        152,B6
          1 0001AD       0001
          1 0001AE  0581 0005                            BBF      s:14202,PREL
          1 0001B0  D2C6 008D                            LLH,R5   141,B6
          1 0001B2  5981 0086                            BNEZ,R5  s:14237,PREL

      311    14200    2           THEN GOTO DONT_RELEASE;
      312    14201
      313    14202    2           IF (GMA_SEGX ~= %GM_USR_DS4#) OR (G$JIT.JUNK.MLDTRC = '0'B)

  14202   1 0001B4  6D1B                                 CMV,R6   27
          1 0001B5  0981 000F                            BNE      s:14205,PREL
          1 0001B7  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0001BA  82C6 0098                            LB,'0001'X        152,B6
          1 0001BC       0001
          1 0001BD  0581 0007                            BBF      s:14205,PREL
          1 0001BF  DBC6 0064                            LAB,B5   100,B6
          1 0001C1  A856                                 LDR,R2   R6
          1 0001C2  82A5                                 LB       ,B5,R2
          1 0001C3  0501 0075                            BBT      s:14237,PREL

      314    14203    2             OR (G$JIT.FIRST_SEG(GMA_SEGX) = '0'B)
      315    14204    3           THEN DO;

      316    14205    3                IF (G$ASDT_USR.DESC.V(GMA_SEGX) = '1'B)

  14205   1 0001C5  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_USR$
          1 0001C8  A856                                 LDR,R2   R6
          1 0001C9  2001                                 SOL,R2   1
          1 0001CA  89A6                                 CMZ      ,B6,R2
          1 0001CB  0881 0059                            BAGE     s:14235,PREL

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:44   
      317    14206    4                THEN DO;

      318    14207    4                     IF NOT(G$JIT.CVM_REAL(GMA_SEGX))

  14207   1 0001CD  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 0001D0  CBC5 00B6                            LAB,B4   182,B5
          1 0001D2  9856                                 LDR,R1   R6
          1 0001D3  8294                                 LB       ,B4,R1
          1 0001D4  0501 004D                            BBT      s:14232,PREL

      319    14208    5                     THEN DO;

      320    14209    5                          IF G$UHJIT.SHRD_SEG(GMA_SEGX) ~= 0

  14209   1 0001D6  CC80 0000 0000  xsym                 LDB,B4   G$UHJIT$
          1 0001D9  BBC4 0183                            LAB,B3   387,B4
          1 0001DB  D293                                 LLH,R5   ,B3,R1
          1 0001DC  5901 000F                            BEZ,R5   s:14215,PREL

      321    14210    6                          THEN DO;

      322    14211    6                               CALL GMA$UNSHARE(GMA_SEGX);

  14211   1 0001DE  BBC7 000D                            LAB,B3   GMA_SEGX,AUTO
          1 0001E0  BFC7 0016                            STB,B3   FRS+3,AUTO
          1 0001E2  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 0001E4  CBF0 0100                            LAB,B4   256,IMO
          1 0001E6  E380 0000 0000  xent                 LNJ,B6   GMA$UNSHARE
          1 0001E9       0001                            DC       s:14212,PREL

      323    14212    6                               END;

  14212   1 0001EA  0F81 003A                            B        s:14235,PREL

      324    14213
      325    14214    6                          ELSE DO;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:45   
      326    14215    6                               GMA_#PGS = G$ASDT_USR.DESC.SIZE(GMA_SEGX) +1;

  14215   1 0001EC  2E01                                 ADV,R2   1
          1 0001ED  D826                                 LDR,R5   ,B6,R2
          1 0001EE  D570 01FF                            AND,R5   511,IMO
          1 0001F0  5E01                                 ADV,R5   1
          1 0001F1  DF47 000E                            STR,R5   GMA_#PGS,AUTO

      327    14216
      328    14217    6                               IF (G$ASDT_USR.DESC.BASE(GMA_SEGX) > GM_SHUF_HI)

  14217   1 0001F3  1001                                 SOL,R1   1
          1 0001F4  C816                                 LDR,R4   ,B6,R1
          1 0001F5  C570 7FFF                            AND,R4   32767,IMO
          1 0001F7  C900 0000 0000  xsym                 CMR,R4   GM_SHUF_HI
          1 0001FA  0381 0008                            BLE      s:14219,PREL

      329    14218    6                               THEN G$JIT.NSPC = G$JIT.NSPC - GMA_#PGS;

  14218   1 0001FC  D245 0087                            SUB,R5   135,B5
          1 0001FE  8255                                 NEG      R5
          1 0001FF  DF45 0087                            STR,R5   135,B5
          1 000201  0F81 0006                            B        s:14221,PREL

      330    14219    6                               ELSE G$JIT.PCDS = G$JIT.PCDS - GMA_#PGS;

  14219   1 000203  D245 0083                            SUB,R5   131,B5
          1 000205  8255                                 NEG      R5
          1 000206  DF45 0083                            STR,R5   131,B5

      331    14220
      332    14221    6                               CALL GMA$REL(GMA_SEGX,GMA_#PGS)

  14221   1 000208  BBC7 000E                            LAB,B3   GMA_#PGS,AUTO
          1 00020A  BFC7 0018                            STB,B3   FRS+5,AUTO
          1 00020C  ABC7 000D                            LAB,B2   GMA_SEGX,AUTO
          1 00020E  AFC7 0016                            STB,B2   FRS+3,AUTO
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:46   
          1 000210  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 000212  CBF0 0200                            LAB,B4   512,IMO
          1 000214  E380 0000 0000  xent                 LNJ,B6   GMA$REL
          1 000217       0009                            DC       s:14230,PREL

      333    14222    7                               WHENRETURN DO;

      334    14223    7                                    PGS_RELEASED = PGS_RELEASED + GMA_#PGS;

  14223   1 000218  ECC7 0004                            LDB,B6   @PGS_RELEASED,AUTO
          1 00021A  E806                                 LDR,R6   ,B6
          1 00021B  EA47 000E                            ADD,R6   GMA_#PGS,AUTO
          1 00021D  EF06                                 STR,R6   ,B6

      335    14224    7                                    END;

  14224   1 00021E  0F81 0001                            B        s:14230,PREL

      336    14225
      337    14226    7                               WHENALTRETURN DO;

      338    14227
      339    14228    7                                    END;

      340    14229    6                               END/*do if not shared*/;

      341    14230    5                          END/*do if not CVM_REAL*/;

  14230   1 000220  0F81 0004                            B        s:14235,PREL

      342    14231
      343    14232    4                     ELSE G$JIT.CVM_REAL(GMA_SEGX) = '0'B;

  14232   1 000222  CBC5 00B6                            LAB,B4   182,B5
          1 000224  8814                                 LBF      ,B4,R1

      344    14233    4                     END/*do if valid segment*/;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:47   

      345    14234
      346    14235    3                G$ASDT_USR.DESC(GMA_SEGX) = '0'B;

  14235   1 000225  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_USR$
          1 000228  B847 000D                            LDR,R3   GMA_SEGX,AUTO
          1 00022A  3001                                 SOL,R3   1
          1 00022B  8736                                 CL       ,B6,R3
          1 00022C  B847 000D                            LDR,R3   GMA_SEGX,AUTO
          1 00022E  3001                                 SOL,R3   1
          1 00022F  3E01                                 ADV,R3   1
          1 000230  8736                                 CL       ,B6,R3

      347    14236    3                G$JIT.FIRST_SEG(GMA_SEGX) = '0'B;

  14236   1 000231  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 000234  CBC5 0064                            LAB,B4   100,B5
          1 000236  B847 000D                            LDR,R3   GMA_SEGX,AUTO
          1 000238  8834                                 LBF      ,B4,R3

      348    14237    3                END/*DO if not DS4 with M$LDTRC*/;

      349    14238    2   DONT_RELEASE:
      350    14239    2           END/* DO I=0 to 11*/;

  14239   1 000239  8AC7 0008            DONT_RELEASE    INC      I,AUTO
          1 00023B  E847 0008                            LDR,R6   I,AUTO
          1 00023D  6D11                                 CMV,R6   17
          1 00023E  0381 FF5F                            BLE      s:14197,PREL

      351    14240
      352    14241
      353    14242        /*D*  Rundown the Read Only Segment to its initial state.
      354    14243              Begin by setting NUMDCBS to the minimum.
      355    14244        */
      356    14245    1      G$ROS.NUMDCBS = %G_LAST_RES_DCB#;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:48   
  14245   1 000240  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000243  5C09                                 LDV,R5   9
          1 000244  DF46 0014                            STR,R5   20,B6

      357    14246
      358    14247        /*D*  Clear the pointers to all special DCBs.
      359    14248        */
      360    14249    2      DO I = %G_FRST_RES_DCB# TO %G_LAST_RES_DCB#;

  14249   1 000246  6C06                                 LDV,R6   6
          1 000247  EF47 0008                            STR,R6   I,AUTO

      361    14250    2           G$ROS.DCBTABLE(I) = ADDR(NIL);

  14250   1 000249  EB80 0000 0000                       LAB,B6   0
          1 00024C  DC80 0000 0000  xsym                 LDB,B5   G$ROS$
          1 00024F  CBC5 02D7                            LAB,B4   727,B5
          1 000251  B847 0008                            LDR,R3   I,AUTO
          1 000253  EFB4                                 STB,B6   ,B4,R3

      362    14251    2           END;

  14251   1 000254  8AC7 0008                            INC      I,AUTO
          1 000256  E847 0008                            LDR,R6   I,AUTO
          1 000258  6D09                                 CMV,R6   9
          1 000259  03F0                                 BLE      s:14250,SPREL

      363    14252
      364    14253        /*D*  Release all but the minimum number of pages.
      365    14254        */
      366    14255    1      IF G$JIT.PCROS > 0

  14255   1 00025A  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00025D  D846 0086                            LDR,R5   134,B6
          1 00025F  5901 0024                            BEZ,R5   s:14271,PREL

      367    14256    2      THEN DO;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:49   

      368    14257    2           GMA_#PGS = G$JIT.PCROS;

  14257   1 000261  DF47 000E                            STR,R5   GMA_#PGS,AUTO

      369    14258    2           CALL GMA$REL(%GM_ROS#,GMA_#PGS)

  14258   1 000263  CBF0 0001                            LAB,B4   1,IMO
          1 000265  BBC7 000E                            LAB,B3   GMA_#PGS,AUTO
          1 000267  BFC7 0018                            STB,B3   FRS+5,AUTO
          1 000269  CFC7 0016                            STB,B4   FRS+3,AUTO
          1 00026B  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 00026D  CBF0 0200                            LAB,B4   512,IMO
          1 00026F  E380 0000 0000  xent                 LNJ,B6   GMA$REL
          1 000272       0012                            DC       s:14271,PREL

      370    14259    3           WHENRETURN DO;

      371    14260    3                G$JIT.PCROS = G$JIT.PCROS - GMA_#PGS;

  14260   1 000273  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000276  E846 0086                            LDR,R6   134,B6
          1 000278  E247 000E                            SUB,R6   GMA_#PGS,AUTO
          1 00027A  EF46 0086                            STR,R6   134,B6

      372    14261    3                PGS_RELEASED = PGS_RELEASED + GMA_#PGS;

  14261   1 00027C  DCC7 0004                            LDB,B5   @PGS_RELEASED,AUTO
          1 00027E  D805                                 LDR,R5   ,B5
          1 00027F  DA47 000E                            ADD,R5   GMA_#PGS,AUTO
          1 000281  DF05                                 STR,R5   ,B5

      373    14262    3                END;

  14262   1 000282  0F81 0001                            B        s:14271,PREL

      374    14263
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:50   
      375    14264    3           WHENALTRETURN DO;

      376    14265
      377    14266    3                END;

      378    14267    2           END;

      379    14268
      380    14269        /*D*  Reset the information in the available space header
      381    14270        */
      382    14271    1      G$ROS.AVAIL$ = ADDR(G$ROS.AVAIL_HDR);

  14271   1 000284  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000287  DBC6 02EB                            LAB,B5   747,B6
          1 000289  DFC6 000A                            STB,B5   10,B6

      383    14272    1      G$ROS.AVAIL_HDR.NEXT$ = ADDR(NIL);

  14272   1 00028B  CB80 0000 0000                       LAB,B4   0
          1 00028E  CFC6 02EB                            STB,B4   747,B6

      384    14273    1      G$ROS.AVAIL_HDR.NWORDS = (%GM_PAGE_SZ * GM_ROS_PGSZ) - SIZEW(G$ROS);

  14273   1 000290  E800 0000 0000  xsym                 LDR,R6   GM_ROS_PGSZ
          1 000293  6008                                 SOL,R6   8
          1 000294  EA70 FD12                            ADD,R6   -750,IMO
          1 000296  EF46 02ED                            STR,R6   749,B6

      385    14274
      386    14275        /*D*  Reset the TCB header.
      387    14276        */
      388    14277    1      G$ROS.TCB.ALT$ = ADDR(NIL);

  14277   1 000298  BB80 0000 0000                       LAB,B3   0
          1 00029B  BFC6 0004                            STB,B3   4,B6

      389    14278    1      G$ROS.TCB.STK$ = ADDR(NIL);
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:51   

  14278   1 00029D  AB80 0000 0000                       LAB,B2   0
          1 0002A0  AFC6 0006                            STB,B2   6,B6

      390    14279    1      G$ROS.TCB.CURRSZ = 0;

  14279   1 0002A2  8746 0009                            CL       9,B6

      391    14280    1      G$ROS.TCB.AVSZ = 0;

  14280   1 0002A4  8746 0008                            CL       8,B6

      392    14281
      393    14282        /*D*  Reset all the ECCBs.
      394    14283        */
      395    14284    1      G$ROS.U_ECCB$->G$ECCB = '0'B;

  14284   1 0002A6  9CC6 000C                            LDB,B1   12,B6
          1 0002A8  5C1C                                 LDV,R5   28
          1 0002A9  0021                                 ALR      ;
          1 0002AA       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0002AC       4001 0000                                ALPHANUM(0,B1,,R5,FILL)

      396    14285    1      G$ROS.DB_ECCB$->G$ECCB = '0'B;

  14285   1 0002AE  437F                                 CSYNC    s:14284+7,SPREL
          1 0002AF  DCC6 000E                            LDB,B5   14,B6
          1 0002B1  0021                                 ALR      ;
          1 0002B2       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 0002B4       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      397    14286    1      G$ROS.CP_ECCB$->G$ECCB = '0'B;

  14286   1 0002B6  437F                                 CSYNC    s:14285+7,SPREL
          1 0002B7  DCC6 0010                            LDB,B5   16,B6
          1 0002B9  0021                                 ALR      ;
          1 0002BA       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:52   
          1 0002BC       4005 0000                                ALPHANUM(0,B5,,R5,FILL)

      398    14287
      399    14288        /*D* If any pseudo resources had been acquired for this user by job
      400    14289             step they are released.
      401    14290        */
      402    14291           %LOCK (G=GFR_RES_LOCK);

  14296   1 0002BE  BB80 0000 0001  02                   LAB,B3   +1
          1 0002C1  CBF0 0100                            LAB,B4   256,IMO
          1 0002C3  437F                                 CSYNC    s:14296+4,SPREL
          1 0002C4  E380 0000 0000  xent                 LNJ,B6   GHH$LOCK
          1 0002C7       0001                            DC       s:14298,PREL

      403    14298    2      DO I=0 TO 7;

  14298   1 0002C8  8747 0008                            CL       I,AUTO

      404    14299    2           IF G$JIT.CURSUDO(I) ~= 0

  14299   1 0002CA  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0002CD  DBC6 00A3                            LAB,B5   163,B6
          1 0002CF  B847 0008                            LDR,R3   I,AUTO
          1 0002D1  E2B5                                 LLH,R6   ,B5,R3
          1 0002D2  6901 002E                            BEZ,R6   s:14314,PREL

      405    14300    3           THEN DO;

      406    14301    3                GFR_PSUDO_CUR_SYS(I)

  14301   1 0002D4  DBC6 00A3                            LAB,B5   163,B6
          1 0002D6  E2B5                                 LLH,R6   ,B5,R3
          1 0002D7  E230 0000 0000  xsym                 SUB,R6   GFR_PSUDO_CUR_SYS,R3
          1 0002DA  8256                                 NEG      R6
          1 0002DB  EF30 0000 0000  xsym                 STR,R6   GFR_PSUDO_CUR_SYS,R3

      407    14302    3                  = GFR_PSUDO_CUR_SYS(I)- G$JIT.CURSUDO(I);
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:53   
      408    14303
      409    14304    3                GFR_PSUDO_CUR$(G$JIT.MODE)->G$PSUDO(I)

  14304   1 0002DE  A2C6 0004                            LLH,R2   4,B6
          1 0002E0  DCA0 0000 0000  xsym                 LDB,B5   GFR_PSUDO_CUR$,R2
          1 0002E3  CBC6 00A3                            LAB,B4   163,B6
          1 0002E5  D2B4                                 LLH,R5   ,B4,R3
          1 0002E6  D235                                 SUB,R5   ,B5,R3
          1 0002E7  8255                                 NEG      R5
          1 0002E8  DF35                                 STR,R5   ,B5,R3

      410    14305    3                  = GFR_PSUDO_CUR$(G$JIT.MODE)->G$PSUDO(I) - G$JIT.CURSUDO(I);
      411    14306
      412    14307    3                G$JIT.CURSUDO(I) = 0;

  14307   1 0002E9  DBC6 00A3                            LAB,B5   163,B6
          1 0002EB  B847 0008                            LDR,R3   I,AUTO
          1 0002ED  87B5                                 CLH      ,B5,R3

      413    14308
      414    14309    3                IF G$JIT.PEAK_SUDO(I) > G$JIT.JPEAK_SUDO(I)

  14309   1 0002EE  B847 0008                            LDR,R3   I,AUTO
          1 0002F0  3E60                                 ADV,R3   96
          1 0002F1  E2B6                                 LLH,R6   ,B6,R3
          1 0002F2  DBC6 00BC                            LAB,B5   188,B6
          1 0002F4  A847 0008                            LDR,R2   I,AUTO
          1 0002F6  D2A5                                 LLH,R5   ,B5,R2
          1 0002F7  E955                                 CMR,R6   R5
          1 0002F8  0A81 0004                            BALE     s:14311,PREL

      415    14310    3                THEN G$JIT.JPEAK_SUDO(I) = G$JIT.PEAK_SUDO(I);

  14310   1 0002FA  DBC6 00BC                            LAB,B5   188,B6
          1 0002FC  E7A5                                 STH,R6   ,B5,R2

      416    14311    3                G$JIT.PEAK_SUDO(I) = 0;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:54   

  14311   1 0002FD  B847 0008                            LDR,R3   I,AUTO
          1 0002FF  3E60                                 ADV,R3   96
          1 000300  87B6                                 CLH      ,B6,R3

      417    14312    3                END;

      418    14313
      419    14314    2           END;

  14314   1 000301  8AC7 0008                            INC      I,AUTO
          1 000303  E847 0008                            LDR,R6   I,AUTO
          1 000305  6D07                                 CMV,R6   7
          1 000306  03C4                                 BLE      s:14299,SPREL

      420    14315           %UNLOCK (G=GFR_RES_LOCK);

  14320   1 000307  BB80 0000 0001  02                   LAB,B3   +1
          1 00030A  CBF0 0100                            LAB,B4   256,IMO
          1 00030C  E380 0000 0000  xent                 LNJ,B6   GHH$UNLOCK
          1 00030F       0001                            DC       s:14325,PREL

      421    14322
      422    14323        /*D*  The JIT memory delimiters are reset to their initial values.
      423    14324        */
      424    14325    1      G$JIT.DLL = %GM_FIRST_IS_VP;

  14325   1 000310  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 000313  E870 0100                            LDR,R6   256,IMO
          1 000315  EF46 0079                            STR,R6   121,B6

      425    14326    1      G$JIT.DUL = %GM_FIRST_IS_VP-1;

  14326   1 000317  D870 00FF                            LDR,R5   255,IMO
          1 000319  DF46 007A                            STR,R5   122,B6

      426    14327    1      G$JIT.PCD = 0;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:55   

  14327   1 00031B  8746 0080                            CL       128,B6

      427    14328    1      G$JIT.PLL = %GM_FIRST_IS_VP;

  14328   1 00031D  EF46 007B                            STR,R6   123,B6

      428    14329    1      G$JIT.PUL = %GM_FIRST_IS_VP-1;

  14329   1 00031F  DF46 007C                            STR,R5   124,B6

      429    14330    1      G$JIT.PCP = 0;

  14330   1 000321  8746 0081                            CL       129,B6

      430    14331    1      G$JIT.LUL = %GM_FIRST_IS_VP-1;

  14331   1 000323  DF46 007E                            STR,R5   126,B6

      431    14332    1      G$JIT.LLL = %GM_FIRST_IS_VP;

  14332   1 000325  EF46 007D                            STR,R6   125,B6

      432    14333    1      G$JIT.PCL = 0;

  14333   1 000327  8746 0082                            CL       130,B6

      433    14334    1      G$JIT.DB_WRTSEGS = '0'B;

  14334   1 000329  8746 007F                            CL       127,B6

      434    14335
      435    14336    1      G$JIT.PRIV.ACTIVE = '0'B;

  14336   1 00032B  8746 008E                            CL       142,B6
          1 00032D  8746 008F                            CL       143,B6

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:56   
      436    14337    1      G$JIT.PRIV.PRC = '0'B;

  14337   1 00032F  8746 0092                            CL       146,B6
          1 000331  8746 0093                            CL       147,B6

      437    14338    1      G$JIT.MMFLGS.FREE_PPGS = '0'B;

  14338   1 000333  8846 0088                            LBF,'8000'X       136,B6
  14338   1 000335       8000

      438    14339    1      G$JIT.RNST = '0000'X;

  14339   1 000336  8746 0096                            CL       150,B6

      439    14340    1      G$JIT.ERR = '0'B;

  14340   1 000338  8746 003C                            CL       60,B6
          1 00033A  8746 003D                            CL       61,B6

      440    14341    1      G$JIT.FD_ALTERR = '0'B;

  14341   1 00033C  8746 00B4                            CL       180,B6
          1 00033E  8746 00B5                            CL       181,B6

      441    14342    1      G$JIT.FRS = FRS;

  14342   1 000340  C847 0013                            LDR,R4   FRS,AUTO
          1 000342  CF46 003E                            STR,R4   62,B6

      442    14343    1      G$JIT.JUNK = %G_JJ_STEP#;

  14343   1 000344  3C10                                 LDV,R3   16
          1 000345  BF46 0098                            STR,R3   152,B6

      443    14344
      444    14345        /*D* The job counters in the jit are incremented by the values for
      445    14346             this job step and the job step counters are reset to zero.
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:57   
      446    14347        */
      447    14348    1      G$JIT.JMCLS = G$JIT.JMCLS + G$JIT.MCLS;

  14348   1 000347  A846 014E                            LDR,R2   334,B6
          1 000349  AA46 0036                            ADD,R2   54,B6
          1 00034B  AF46 014E                            STR,R2   334,B6

      448    14349    1      G$JIT.MCLS = 0;

  14349   1 00034D  8746 0036                            CL       54,B6

      449    14350
      450    14351    1      G$JIT.JREADS_HOST = G$JIT.JREADS_HOST + G$JIT.READS_HOST;

  14351   1 00034F  8CC6 014F                            LDI      335,B6
          1 000351  8446 0040                            AID      64,B6
          1 000353  8D46 014F                            SDI      335,B6

      451    14352    1      G$JIT.JWRITES_HOST = G$JIT.JWRITES_HOST + G$JIT.WRITES_HOST;

  14352   1 000355  8CC6 0151                            LDI      337,B6
          1 000357  8446 0042                            AID      66,B6
          1 000359  8D46 0151                            SDI      337,B6

      452    14353    1      G$JIT.JREADS_UC = G$JIT.JREADS_UC + G$JIT.READS_UC;

  14353   1 00035B  8CC6 0153                            LDI      339,B6
          1 00035D  8446 0044                            AID      68,B6
          1 00035F  8D46 0153                            SDI      339,B6

      453    14354    1      G$JIT.JWRITES_UC = G$JIT.JWRITES_UC + G$JIT.WRITES_UC;

  14354   1 000361  8CC6 0155                            LDI      341,B6
          1 000363  8446 0046                            AID      70,B6
          1 000365  8D46 0155                            SDI      341,B6

      454    14355
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:58   
      455    14356    1      G$JIT.READS_HOST = 0;

  14356   1 000367  8746 0040                            CL       64,B6
          1 000369  8746 0041                            CL       65,B6

      456    14357    1      G$JIT.WRITES_HOST = 0;

  14357   1 00036B  8746 0042                            CL       66,B6
          1 00036D  8746 0043                            CL       67,B6

      457    14358    1      G$JIT.READS_UC = 0;

  14358   1 00036F  8746 0044                            CL       68,B6
          1 000371  8746 0045                            CL       69,B6

      458    14359    1      G$JIT.WRITES_UC = 0;

  14359   1 000373  8746 0046                            CL       70,B6
          1 000375  8746 0047                            CL       71,B6

      459    14360
      460    14361    1      IF G$JIT.PEAK_MEM > G$JIT.JPEAK_MEM

  14361   1 000377  9846 0034                            LDR,R1   52,B6
          1 000379  9946 00C0                            CMR,R1   192,B6
          1 00037B  0381 0003                            BLE      s:14363,PREL

      461    14362    1      THEN G$JIT.JPEAK_MEM = G$JIT.PEAK_MEM;

  14362   1 00037D  9F46 00C0                            STR,R1   192,B6

      462    14363    1      G$JIT.PEAK_MEM = 0;

  14363   1 00037F  8746 0034                            CL       52,B6

      463    14364
      464    14365    1      IF G$JIT.PEAK_LVLS > G$JIT.JPEAK_LVLS
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:59   

  14365   1 000381  9846 0035                            LDR,R1   53,B6
          1 000383  9946 00C1                            CMR,R1   193,B6
          1 000385  0381 0003                            BLE      s:14367,PREL

      465    14366    1      THEN G$JIT.JPEAK_LVLS = G$JIT.PEAK_LVLS;

  14366   1 000387  9F46 00C1                            STR,R1   193,B6

      466    14367    1      G$JIT.PEAK_LVLS = 0;

  14367   1 000389  8746 0035                            CL       53,B6

      467    14368
      468    14369
      469    14370        /*D* The TSA is re-initialized to cause entry to GJI$INIT_USR to
      470    14371             fetch the next run-unit.
      471    14372        */
      472    14373    1      G$TSA.P$$ = ENTADDR(GJI$INIT_USR);

  14373   1 00038B  DB80 0000 0000  xent                 LAB,B5   GJI$INIT_USR
          1 00038E  CC80 0000 0000  xsym                 LDB,B4   G$TSA_USR$
          1 000391  DFC4 0008                            STB,B5   8,B4

      473    14374    1      G$TSA.Z.IS = 0;

  14374   1 000393  8844 0005                            LBF,'000F'X       5,B4
  14374   1 000395       000F

      474    14375    1      G$TSA.S = MON_STATUS_REG;

  14375   1 000396  E800 0000 0009  00                   LDR,R6   MON_STATUS_REG
          1 000399  EF44 000C                            STR,R6   12,B4

      475    14376    1      G$TSA.ISA.REGS.T$ = G$TSTACKU$;

  14376   1 00039B  BC80 0000 0000  xsym                 LDB,B3   G$TSTACKU$
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:60   
          1 00039E  BFC4 0035                            STB,B3   53,B4

      476    14377
      477    14378    1      RETURN;

  14378   1 0003A0  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      478    14379        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:61   
      479    14380
      480    14381        /*F*    NAME:  GJS$RUND_FD
      481    14382
      482    14383                PURPOSE: To disassociate the FD from the user.
      483    14384        */
      484    14385
      485    14386    1   GJS$RUND_FD: ENTRY(PGS_RELEASED);

  14386   1 0003A3  D380 0000 0000  xent GJS$RUND_FD     LNJ,B5   X6A_AUTO_1
          1 0003A6       001A 0001                       DC       26,1

      486    14387
      487    14388    1      PGS_RELEASED = 0;

  14388   1 0003A8  ECC7 0004                            LDB,B6   @PGS_RELEASED,AUTO
          1 0003AA  8706                                 CL       ,B6

      488    14389
      489    14390    1      CALL RUND_FD;

  14390   1 0003AB  E3C0 0005                            LNJ,B6   s:0,PREL
          1 0003AD       0001                            DC       s:14391,PREL

      490    14391    1      RETURN;

  14391   1 0003AE  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      491    14392        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:62   
      492    14393
      493    14394        /*I* NAME: RUND_FD
      494    14395
      495    14396                PURPOSE: To disassociate the FD from the user.
      496    14397        */
      497    14398
      498    14399    1   RUND_FD: PROC;

  14399   1 0003B1  EFC7 0014            RUND_FD         STB,B6   FRS+1,AUTO

      499    14400    2      CALL KNA$CLOSE (%G_M$DEBUG#,I);

  14400   1 0003B3  DBF0 0001                            LAB,B5   1,IMO
          1 0003B5  CBC7 0008                            LAB,B4   I,AUTO
          1 0003B7  CFC7 0018                            STB,B4   FRS+5,AUTO
          1 0003B9  DFC7 0016                            STB,B5   FRS+3,AUTO
          1 0003BB  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 0003BD  CBF0 0200                            LAB,B4   512,IMO
          1 0003BF  E380 0000 0000  xent                 LNJ,B6   KNA$CLOSE
          1 0003C2       0001                            DC       s:14402,PREL

      500    14401
      501    14402    2      G$MHJIT.CU$->G$U.ASYNCH = (G$MHJIT.CU$->G$U.ASYNCH &~ %U_ALIBFD);

  14402   1 0003C3  EC80 0000 0000  xsym                 LDB,B6   G$MHJIT$
          1 0003C6  DCC6 0352                            LDB,B5   850,B6
          1 0003C8  E845 0001                            LDR,R6   1,B5
          1 0003CA  E570 F7FF                            AND,R6   -2049,IMO
          1 0003CC  EF45 0001                            STR,R6   1,B5

      502    14403    2      G$JIT.JUNK.ALIBFD = '0'B;

  14403   1 0003CE  DC80 0000 0000  xsym                 LDB,B5   G$JIT$
          1 0003D1  8845 0098                            LBF,'0020'X       152,B5
          1 0003D3       0020

      503    14404    2      G$JIT.JUNK.UDELTA = '0'B;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:63   

  14404   1 0003D4  8845 0098                            LBF,'0004'X       152,B5
  14404   1 0003D6       0004

      504    14405
      505    14406    2      J = G$JIT.DB#;

  14406   1 0003D7  E2C5 008D                            LLH,R6   141,B5
          1 0003D9  EF47 0009                            STR,R6   J,AUTO

      506    14407    2      G$JIT.DB# = 0;

  14407   1 0003DB  87C5 008D                            CLH      141,B5

      507    14408    2      CALL GJS$CLOSE_SHARED(J);

  14408   1 0003DD  CBC7 0009                            LAB,B4   J,AUTO
          1 0003DF  CFC7 0016                            STB,B4   FRS+3,AUTO
          1 0003E1  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 0003E3  CBF0 0100                            LAB,B4   256,IMO
          1 0003E5  E380 0000 0000  xent                 LNJ,B6   GJS$CLOSE_SHARED
          1 0003E8       0001                            DC       s:14411,PREL

      508    14409
      509    14410
      510    14411    2      IF GJU_DB_DB = 0

  14411   1 0003E9  E800 0000 0000  xsym                 LDR,R6   GJU_DB_DB
          1 0003EC  6981 000A                            BNEZ,R6  s:14414,PREL

      511    14412    2      THEN G$ASDT_USR.DESC(%GM_DB_PROC#) = '0'B;

  14412   1 0003EE  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_USR$
          1 0003F1  8746 002E                            CL       46,B6
          1 0003F3  8746 002F                            CL       47,B6
          1 0003F5  0F81 0022                            B        s:14423,PREL

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:64   
      512    14413    3      ELSE DO;

      513    14414    3           IF G$ASDT_USR.DESC.V(%GM_DB_PROC#) = '1'B

  14414   1 0003F7  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_USR$
          1 0003FA  89C6 002E                            CMZ      46,B6
          1 0003FC  0881 001B                            BAGE     s:14423,PREL

      514    14415    4           THEN DO;

      515    14416    4                GMA_SEGX = %GM_DB_PROC#;

  14416   1 0003FE  5C17                                 LDV,R5   23
          1 0003FF  DF47 000D                            STR,R5   GMA_SEGX,AUTO

      516    14417    4                GMA_#PGS = G$ASDT_USR.DESC.SIZE(%GM_DB_PROC#) +1;

  14417   1 000401  C846 002F                            LDR,R4   47,B6
          1 000403  C570 01FF                            AND,R4   511,IMO
          1 000405  4E01                                 ADV,R4   1
          1 000406  CF47 000E                            STR,R4   GMA_#PGS,AUTO

      517    14418    4                CALL GMA$REL(GMA_SEGX,GMA_#PGS);

  14418   1 000408  DBC7 000E                            LAB,B5   GMA_#PGS,AUTO
          1 00040A  DFC7 0018                            STB,B5   FRS+5,AUTO
          1 00040C  CBC7 000D                            LAB,B4   GMA_SEGX,AUTO
          1 00040E  CFC7 0016                            STB,B4   FRS+3,AUTO
          1 000410  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 000412  CBF0 0200                            LAB,B4   512,IMO
          1 000414  E380 0000 0000  xent                 LNJ,B6   GMA$REL
          1 000417       0001                            DC       s:14423,PREL

      518    14419    4                END /* Do if there is DB_PROC*/;

      519    14420    3           END/*do if GJU_DB_DB*/;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:65   
      520    14421
      521    14422
      522    14423    2      IF G$ASDT_USR.DESC.V(%GM_DB_DS#) = '1'B

  14423   1 000418  EC80 0000 0000  xsym                 LDB,B6   G$ASDT_USR$
          1 00041B  89C6 0004                            CMZ      4,B6
          1 00041D  0881 002C                            BAGE     s:14437,PREL

      523    14424    3      THEN DO;

      524    14425    3           GMA_SEGX = %GM_DB_DS#;

  14425   1 00041F  6C02                                 LDV,R6   2
          1 000420  EF47 000D                            STR,R6   GMA_SEGX,AUTO

      525    14426    3           GMA_#PGS = G$ASDT_USR.DESC.SIZE(%GM_DB_DS#) +1;

  14426   1 000422  D846 0005                            LDR,R5   5,B6
          1 000424  D570 01FF                            AND,R5   511,IMO
          1 000426  5E01                                 ADV,R5   1
          1 000427  DF47 000E                            STR,R5   GMA_#PGS,AUTO

      526    14427    3           CALL GMA$REL(GMA_SEGX,GMA_#PGS)

  14427   1 000429  DBC7 000E                            LAB,B5   GMA_#PGS,AUTO
          1 00042B  DFC7 0018                            STB,B5   FRS+5,AUTO
          1 00042D  CBC7 000D                            LAB,B4   GMA_SEGX,AUTO
          1 00042F  CFC7 0016                            STB,B4   FRS+3,AUTO
          1 000431  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 000433  CBF0 0200                            LAB,B4   512,IMO
          1 000435  E380 0000 0000  xent                 LNJ,B6   GMA$REL
          1 000438       0012                            DC       s:14437,PREL

      527    14428    4           WHENRETURN DO;

      528    14429    4                G$JIT.PCDDS = G$JIT.PCDDS - GMA_#PGS;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:66   
  14429   1 000439  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 00043C  E846 0084                            LDR,R6   132,B6
          1 00043E  E247 000E                            SUB,R6   GMA_#PGS,AUTO
          1 000440  EF46 0084                            STR,R6   132,B6

      529    14430    4                PGS_RELEASED = PGS_RELEASED + GMA_#PGS;

  14430   1 000442  DCC7 0004                            LDB,B5   @PGS_RELEASED,AUTO
          1 000444  D805                                 LDR,R5   ,B5
          1 000445  DA47 000E                            ADD,R5   GMA_#PGS,AUTO
          1 000447  DF05                                 STR,R5   ,B5

      530    14431    4                END;

  14431   1 000448  0F81 0001                            B        s:14437,PREL

      531    14432
      532    14433    4           WHENALTRETURN DO;

      533    14434    4                END;

      534    14435    3           END /* Do if there is DB_DS*/;

      535    14436
      536    14437    2      RETURN;

  14437   1 00044A  ECC7 0014                            LDB,B6   FRS+1,AUTO
          1 00044C  C3C6 0001                            LNJ,B4   1,B6

      537    14438    2   END RUND_FD;
      538    14439        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:67   
      539    14440        /*I* NAME: CLOSE_OR_TRUNC
      540    14441
      541    14442             PURPOSE: To call KNA$CLOSE or KNA$TRUNC
      542    14443             CALL:   I = 1st DCB#
      543    14444                     J = last DCB#
      544    14445                     ROUTINE$ = Address of appropriate routine
      545    14446        */
      546    14447
      547    14448    1   CLOSE_OR_TRUNC: PROC;

  14448   1 00044E  EFC7 0014            CLOSE_OR_TRUNC  STB,B6   FRS+1,AUTO

      548    14449
      549    14450    3      DO WHILE (I <= J);

  14450   1 000450  E847 0008                            LDR,R6   I,AUTO
          1 000452  E947 0009                            CMR,R6   J,AUTO
          1 000454  0301 0036                            BG       s:14459,PREL

      550    14451    3           IF G$ROS.DCBPTR$->G$DCBTABLE(I) ~= ADDR(NIL)

  14451   1 000456  EC80 0000 0000  xsym                 LDB,B6   G$ROS$
          1 000459  DC86                                 LDB,B5   ,B6
          1 00045A  B847 0008                            LDR,R3   I,AUTO
          1 00045C  8DB5                                 CMN      ,B5,R3
          1 00045D  0901 0026                            BE       s:14456,PREL

      551    14452    3           THEN IF G$ROS.DCBPTR$->G$DCBTABLE(I)->G$DCB.FCD

  14452   1 00045F  CCB5                                 LDB,B4   ,B5,R3
          1 000460  82C4 001F                            LB,'4000'X        31,B4
          1 000462       4000
          1 000463  0581 0020                            BBF      s:14456,PREL

      552    14453    3                THEN IF G$ROS.DCBPTR$->G$DCBTABLE(I)->G$DCB.ORG = %G_ORG_CQ#

  14453   1 000465  E844 001F                            LDR,R6   31,B4
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:68   
          1 000467  E570 00FF                            AND,R6   255,IMO
          1 000469  6D05                                 CMV,R6   5
          1 00046A  0981 0009                            BNE      s:14455,PREL

      553    14454    3                     THEN CALL KNH$CLOSE;

  14454   1 00046C  CBF0 0000                            LAB,B4   0,IMO
          1 00046E  E380 0000 0000  xent                 LNJ,B6   KNH$CLOSE
          1 000471       0001                            DC       s:14454+6,PREL
          1 000472  0F81 0011                            B        s:14456,PREL

      554    14455    3                     ELSE CALL ROUTINE$(I,ERROR);

  14455   1 000474  BBC7 0006                            LAB,B3   ERROR,AUTO
          1 000476  BFC7 0018                            STB,B3   FRS+5,AUTO
          1 000478  DBC7 0008                            LAB,B5   I,AUTO
          1 00047A  DFC7 0016                            STB,B5   FRS+3,AUTO
          1 00047C  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 00047E  9CC7 0011                            LDB,B1   ROUTINE$,AUTO
          1 000480  CBF0 0200                            LAB,B4   512,IMO
          1 000482  E381                                 LNJ,B6   ,B1
          1 000483       0001                            DC       s:14456,PREL

      555    14456    3           I = I+1;

  14456   1 000484  8AC7 0008                            INC      I,AUTO

      556    14457    3           END;

  14457   1 000486  E847 0008                            LDR,R6   I,AUTO
          1 000488  E947 0009                            CMR,R6   J,AUTO
          1 00048A  03CC                                 BLE      s:14451,SPREL

      557    14458
      558    14459    2   END CLOSE_OR_TRUNC;

  14459   1 00048B  ECC7 0014                            LDB,B6   FRS+1,AUTO
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:69   
          1 00048D  C3C6 0001                            LNJ,B4   1,B6

      559    14460        %EJECT;
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:70   
      560    14461
      561    14462        /*I* NAME: RELEASE_SECT
      562    14463
      563    14464             PURPOSE: To release a program section.
      564    14465             CALL:    J = Shared file index or zero
      565    14466                      PGS_REMAINING = # of pages to release
      566    14467                      ASDT_INDX = index to first segment to release
      567    14468                      SEGS_64K = number of segments to release
      568    14469
      569    14470                      CALL RELEASE_SECT;
      570    14471        */
      571    14472
      572    14473    1   RELEASE_SECT: PROC;

  14473   1 00048F  EFC7 0014            RELEASE_SECT    STB,B6   FRS+1,AUTO

      573    14474        /*   If this is a call to release shared procedure, the
      574    14475             GJS$CLOSE_SHARED routine is called to disassociate it.
      575    14476
      576    14477             The descriptors for the processor's procedure segments are
      577    14478             reset to the NULL descriptor in ASDT_USR.
      578    14479        */
      579    14480    2      IF J ~= 0

  14480   1 000491  E847 0009                            LDR,R6   J,AUTO
          1 000493  6901 0039                            BEZ,R6   s:14498,PREL

      580    14481    3      THEN DO;

      581    14482    4           DO I=0 TO SEGS_64K-1;

  14482   1 000495  8747 0008                            CL       I,AUTO
          1 000497  0F81 0015                            B        s:14484+2,PREL

      582    14483    4                CALL GMA$UNSHARE(ASDT_INDX+I);

  14483   1 000499  E847 000A                            LDR,R6   ASDT_INDX,AUTO
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:71   
          1 00049B  EA47 0008                            ADD,R6   I,AUTO
          1 00049D  EF47 0016                            STR,R6   FRS+3,AUTO
          1 00049F  EBC7 0016                            LAB,B6   FRS+3,AUTO
          1 0004A1  EFC7 0017                            STB,B6   FRS+4,AUTO
          1 0004A3  BBC7 0017                            LAB,B3   FRS+4,AUTO
          1 0004A5  CBF0 0100                            LAB,B4   256,IMO
          1 0004A7  E380 0000 0000  xent                 LNJ,B6   GMA$UNSHARE
          1 0004AA       0001                            DC       s:14484,PREL

      583    14484    4                END;

  14484   1 0004AB  8AC7 0008                            INC      I,AUTO
          1 0004AD  E847 0008                            LDR,R6   I,AUTO
          1 0004AF  E947 000B                            CMR,R6   SEGS_64K,AUTO
          1 0004B1  0268                                 BL       s:14483,SPREL

      584    14485
      585    14486    3           CALL GJS$CLOSE_SHARED(J);

  14486   1 0004B2  EBC7 0009                            LAB,B6   J,AUTO
          1 0004B4  EFC7 0016                            STB,B6   FRS+3,AUTO
          1 0004B6  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 0004B8  CBF0 0100                            LAB,B4   256,IMO
          1 0004BA  E380 0000 0000  xent                 LNJ,B6   GJS$CLOSE_SHARED
          1 0004BD       0001                            DC       s:14488,PREL

      586    14487
      587    14488    3           IF NOT(G$JIT.MMFLGS.FREE_PPGS)

  14488   1 0004BE  EC80 0000 0000  xsym                 LDB,B6   G$JIT$
          1 0004C1  89C6 0088                            CMZ      136,B6
          1 0004C3  0801 0042                            BAL      s:14513,PREL

      588    14489    3           THEN PGS_RELEASED = PGS_RELEASED + G$JIT.PCP;

  14489   1 0004C5  DCC7 0004                            LDB,B5   @PGS_RELEASED,AUTO
          1 0004C7  E805                                 LDR,R6   ,B5
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:72   
          1 0004C8  EA46 0081                            ADD,R6   129,B6
          1 0004CA  EF05                                 STR,R6   ,B5

      589    14490    3           END;

  14490   1 0004CB  0F81 003A                            B        s:14513,PREL

      590    14491
      591    14492        /*    If this is not a call to release procedure, the
      592    14493              pages containing this program section are released by
      593    14494              calling GMA$REL.
      594    14495        */
      595    14496    3      ELSE DO;

      596    14497
      597    14498    4           DO I=0 TO SEGS_64K-1;

  14498   1 0004CD  8747 0008                            CL       I,AUTO
          1 0004CF  0F81 0031                            B        s:14510+2,PREL

      598    14499    4                IF PGS_REMAINING > 256

  14499   1 0004D1  E847 000C                            LDR,R6   PGS_REMAINING,AUTO
          1 0004D3  E970 0100                            CMR,R6   256,IMO
          1 0004D5  0381 0007                            BLE      s:14501,PREL

      599    14500    4                THEN GMA_#PGS = 256;

  14500   1 0004D7  D870 0100                            LDR,R5   256,IMO
          1 0004D9  DF47 000E                            STR,R5   GMA_#PGS,AUTO
          1 0004DB  0F81 0003                            B        s:14503,PREL

      600    14501    4                ELSE GMA_#PGS = PGS_REMAINING;

  14501   1 0004DD  EF47 000E                            STR,R6   GMA_#PGS,AUTO

      601    14502
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:73   
      602    14503    4                PGS_REMAINING = PGS_REMAINING - GMA_#PGS;

  14503   1 0004DF  E247 000E                            SUB,R6   GMA_#PGS,AUTO
          1 0004E1  EF47 000C                            STR,R6   PGS_REMAINING,AUTO

      603    14504
      604    14505    4                GMA_SEGX = ASDT_INDX + I;

  14505   1 0004E3  D847 000A                            LDR,R5   ASDT_INDX,AUTO
          1 0004E5  DA47 0008                            ADD,R5   I,AUTO
          1 0004E7  DF47 000D                            STR,R5   GMA_SEGX,AUTO

      605    14506
      606    14507    4                CALL GMA$REL(GMA_SEGX,GMA_#PGS);

  14507   1 0004E9  EBC7 000E                            LAB,B6   GMA_#PGS,AUTO
          1 0004EB  EFC7 0018                            STB,B6   FRS+5,AUTO
          1 0004ED  DBC7 000D                            LAB,B5   GMA_SEGX,AUTO
          1 0004EF  DFC7 0016                            STB,B5   FRS+3,AUTO
          1 0004F1  BBC7 0016                            LAB,B3   FRS+3,AUTO
          1 0004F3  CBF0 0200                            LAB,B4   512,IMO
          1 0004F5  E380 0000 0000  xent                 LNJ,B6   GMA$REL
          1 0004F8       0001                            DC       s:14508,PREL

      607    14508    4                PGS_RELEASED = PGS_RELEASED + GMA_#PGS;

  14508   1 0004F9  ECC7 0004                            LDB,B6   @PGS_RELEASED,AUTO
          1 0004FB  E806                                 LDR,R6   ,B6
          1 0004FC  EA47 000E                            ADD,R6   GMA_#PGS,AUTO
          1 0004FE  EF06                                 STR,R6   ,B6

      608    14509
      609    14510    4                END/* Do 0 to segsz-1 */;

  14510   1 0004FF  8AC7 0008                            INC      I,AUTO
          1 000501  E847 0008                            LDR,R6   I,AUTO
          1 000503  E947 000B                            CMR,R6   SEGS_64K,AUTO
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:74   
          1 000505  024C                                 BL       s:14499,SPREL

      610    14511    3           END;

      611    14512
      612    14513    2   END RELEASE_SECT;

  14513   1 000506  ECC7 0014                            LDB,B6   FRS+1,AUTO
          1 000508  C3C6 0001                            LNJ,B4   1,B6
      613    14514    1   END;

PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:75   
--  Include file information  --

   AZ_SUBS_C.:E05TOU  is referenced.
   GM_VIRTUAL_E.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_GATE_M.:E05TOU  cannot be made into a system file and is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_ROS_M.:E05TOU  is referenced.
   G_SFILE_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   KI_CP6.:E05TOU  was found in the system file and is never referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is never referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GJS$RUND.
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:76   

 **** Variables and constants ****

  ****  Section 000 RoData GJS$RUND

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b UBIN(8)     r     1 DS_ASDT_INDX(0:17)
     9-0-0/w STRC(16)    r     1 MON_STATUS_REG

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PGS_RELEASED              A-0-0/w UBIN(16)    r     1 ASDT_INDX
     6-0-0/b BIT (32)    r     1 ERROR                     13-0-0/b BIT (16)    r     1 FRS
     F-0-0/w PTR         r     1 G$SFILE$                   E-0-0/w UBIN(16)    r     1 GMA_#PGS
     D-0-0/w UBIN(16)    r     1 GMA_SEGX                   8-0-0/w UBIN(16)    r     1 I
     9-0-0/w UBIN(16)    r     1 J                         *0-0-0/w UBIN(16)    r     1 PGS_RELEASED
     C-0-0/w UBIN(16)    r     1 PGS_REMAINING             11-0-0/w EPTR        r     1 ROUTINE$
     B-0-0/w UBIN(16)    r     1 SEGS_64K

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ASDT_MCL$                0-0-0/w PTR         r     1 G$ASDT_USR$
     0-0-0/w PTR         r     1 G$BOBCAT$                  0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$MHJIT$                   0-0-0/w PTR         r     1 G$ROS$
     0-0-0/w PTR         r     1 G$TSA_USR$                 0-0-0/w PTR         r     1 G$TSTACKU$
     0-0-0/w PTR         r     1 G$UHJIT$
     0-0-0/w PTR         r     1 GFR_PSUDO_CUR$(0:4)
     0-0-0/w SBIN(16)    r     1 GFR_PSUDO_CUR_SYS(0:7)
     0-0-0/w STRC(48)    r     1 GFR_RES_LOCK               0-0-0/w SBIN(16)    r     1 GJU_DB_DB
     0-0-0/w UBIN(16)    r     1 GM_ROS_PGSZ                0-0-0/w UBIN(16)    r     1 GM_SHUF_HI
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:77   
     0-0-0/w UBIN(32)    r     1 G_BOOTTIME

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1600)  r     1 ACCT$MSG
     0-0-0/w UBIN(32)    r     1 G$ALLTIMES(0:5)
     0-0-0/w STRC(32)    r     1 G$ASDT_USR(0:30)
     0-0-0/w STRC(1696)  r     1 G$BOBCAT                   0-0-0/w ASTR(808)   r     1 G$DCB
     0-0-0/w PTR         r     1 G$DCBTABLE(0:0)
     0-0-0/w STRC(224)   r     1 G$ECCB                     0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(27232) r     1 G$MHJIT
     0-0-0/w SBIN(16)    r     1 G$PSUDO(0:7)
     0-0-0/w STRC(12000) r     1 G$ROS                      0-0-0/w STRC(928)   r     1 G$TSA
     0-0-0/w STRC(384)   r     1 G$U                        0-0-0/w STRC(6480)  r     1 G$UHJIT
     0-0-0/w UBIN(16)    r     1 G$UNITS(0:3)
     0-0-0/w UBIN(32)    r     1 G$USRTIMES(0:2)
     0-0-0/w STRC(768)   r     1 G_SFILE(0:0)


   Procedure GJS$RUND requires 1290 words for executable code.
   Procedure GJS$RUND requires 26 words of local(AUTO) storage.

    No errors detected in file GJS$RUND.:E05TSI    .
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:78   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:79   
          MINI XREF LISTING

ACCT$MSG
     13276**DCL     14073--CALL    14087--CALL
ACCT$MSG.JSUNIT
     13325**DCL     13326--REDEF
ACCT$MSG.MCLS
     13324**DCL     13324--REDEF
ACCT$MSG.USER_EXTIME
     13317**DCL     13318--REDEF
ACCT$MSG.USER_MEMTIME
     13320**DCL     13320--REDEF
ACCT$MSG.USER_SVTIME
     13319**DCL     13319--REDEF
ASDT_INDX
      1168**DCL     14141<<ASSIGN  14157<<ASSIGN  14185<<ASSIGN  14483>>CALL    14505>>ASSIGN
CLOSE_OR_TRUNC
     14448**PROC    14118--CALL    14122--CALL    14128--CALL
DONT_RELEASE
     14239**LABEL   14200--GOTO
DS_ASDT_INDX
      1219**DCL     14197>>ASSIGN
ERROR
      1165**DCL     14455<>CALL
FRS
      1175**DCL     14052<<ASSIGN  14342>>ASSIGN
G$ALLTIMES
     13953**DCL     14112<<ASSIGN
G$ASDT_MCL$
      1180**DCL      1300--IMP-PTR
G$ASDT_USR.DESC
      1287**DCL     14235<<ASSIGN  14412<<ASSIGN
G$ASDT_USR.DESC.BASE
      1289**DCL     14217>>IF
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:80   
G$ASDT_USR.DESC.SIZE
      1291**DCL     14215>>ASSIGN  14417>>ASSIGN  14426>>ASSIGN
G$ASDT_USR.DESC.V
      1289**DCL     14205>>IF      14414>>IF      14423>>IF
G$ASDT_USR$
      1179**DCL      1270--IMP-PTR 14205>>IF      14215>>ASSIGN  14217>>IF      14235>>ASSIGN  14412>>ASSIGN
     14414>>IF      14417>>ASSIGN  14423>>IF      14426>>ASSIGN
G$BOBCAT.SFILE$
      2030**DCL     14036>>ASSIGN
G$BOBCAT$
      1181**DCL      2026--IMP-PTR 14036>>ASSIGN
G$DCB.DCBNAME.L
     13868**DCL     13868--IMP-SIZ
G$DCB.EOMCHAR
     13859**DCL     13859--REDEF   13860--REDEF
G$DCB.FCD
     13855**DCL     14452>>IF
G$DCB.FLDID
     13858**DCL     13858--REDEF
G$DCB.ORG
     13856**DCL     14453>>IF
G$DCB.RES
     13853**DCL     13854--REDEF
G$DCBTABLE
     13816**DCL     14451>>IF      14452>>IF      14453>>IF
G$ECCB
     13887**DCL     14284<<ASSIGN  14285<<ASSIGN  14286<<ASSIGN
G$ECCB.FLTFLG
     13916**DCL     13947--REDEF
G$JIT.CURSUDO
     13197**DCL     14299>>IF      14301>>ASSIGN  14304>>ASSIGN  14307<<ASSIGN
G$JIT.CVM_REAL
     13252**DCL     14207>>IF      14232<<ASSIGN
G$JIT.DB#
     13043**DCL     14199>>IF      14406>>ASSIGN  14407<<ASSIGN
G$JIT.DB_WRTSEGS
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:81   
     13036**DCL     14334<<ASSIGN
G$JIT.DLL
     13034**DCL     14185>>ASSIGN  14325<<ASSIGN
G$JIT.DUL
     13034**DCL     14326<<ASSIGN
G$JIT.ERR
     12950**DCL     14340<<ASSIGN
G$JIT.ERRLOG
     13192**DCL     13195--REDEF
G$JIT.FD_ALTERR
     13219**DCL     14341<<ASSIGN
G$JIT.FIRST_SEG
     13028**DCL     14202>>IF      14236<<ASSIGN
G$JIT.FRS
     13001**DCL     14052>>ASSIGN  14053<<ASSIGN  14342<<ASSIGN
G$JIT.JMCLS
     13257**DCL     14348<<ASSIGN  14348>>ASSIGN
G$JIT.JPEAK_LVLS
     13253**DCL     14365>>IF      14366<<ASSIGN
G$JIT.JPEAK_MEM
     13253**DCL     14361>>IF      14362<<ASSIGN
G$JIT.JPEAK_SUDO
     13252**DCL     14309>>IF      14310<<ASSIGN
G$JIT.JPROC_EXTIME
     13255**DCL     14101<<ASSIGN  14101>>ASSIGN
G$JIT.JPROC_MEMTIME
     13256**DCL     14103<<ASSIGN  14103>>ASSIGN
G$JIT.JPROC_SVTIME
     13256**DCL     14102<<ASSIGN  14102>>ASSIGN
G$JIT.JREADS_HOST
     13257**DCL     14351<<ASSIGN  14351>>ASSIGN
G$JIT.JREADS_UC
     13258**DCL     14353<<ASSIGN  14353>>ASSIGN
G$JIT.JSUNIT
     12931**DCL     12932--REDEF
G$JIT.JUNK
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:82   
     13178**DCL     14343<<ASSIGN
G$JIT.JUNK.ALIBFD
     13189**DCL     14403<<ASSIGN
G$JIT.JUNK.MLDTRC
     13191**DCL     14124>>IF      14172>>IF      14199>>IF      14202>>IF
G$JIT.JUNK.PROCACCT
     13184**DCL     14058>>IF      14099>>IF
G$JIT.JUNK.PROCSURCHG
     13183**DCL     14070>>IF
G$JIT.JUNK.STEPACCT
     13182**DCL     14084>>IF
G$JIT.JUNK.UDELTA
     13190**DCL     14404<<ASSIGN
G$JIT.JUSER_EXTIME
     13254**DCL     14107<<ASSIGN  14107>>ASSIGN
G$JIT.JUSER_MEMTIME
     13255**DCL     14109<<ASSIGN  14109>>ASSIGN
G$JIT.JUSER_SVTIME
     13254**DCL     14108<<ASSIGN  14108>>ASSIGN
G$JIT.JWRITES_HOST
     13258**DCL     14352<<ASSIGN  14352>>ASSIGN
G$JIT.JWRITES_UC
     13259**DCL     14354<<ASSIGN  14354>>ASSIGN
G$JIT.LLL
     13035**DCL     14157>>ASSIGN  14332<<ASSIGN
G$JIT.LUL
     13036**DCL     14331<<ASSIGN
G$JIT.MCLS
     12930**DCL     12930--REDEF   14348>>ASSIGN  14349<<ASSIGN
G$JIT.MMFLGS.FREE_PPGS
     13040**DCL     14338<<ASSIGN  14488>>IF
G$JIT.MODE
     12919**DCL     14304>>ASSIGN  14304>>ASSIGN
G$JIT.NSPC
     13039**DCL     14218<<ASSIGN  14218>>ASSIGN
G$JIT.PCD
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:83   
     13036**DCL     14179>>IF      14182>>ASSIGN  14184>>ASSIGN  14189<<ASSIGN  14327<<ASSIGN
G$JIT.PCDDS
     13038**DCL     14429<<ASSIGN  14429>>ASSIGN
G$JIT.PCDS
     13038**DCL     14219<<ASSIGN  14219>>ASSIGN
G$JIT.PCL
     13037**DCL     14153>>IF      14156>>ASSIGN  14159>>ASSIGN  14165<<ASSIGN  14333<<ASSIGN
G$JIT.PCP
     13037**DCL     14137>>IF      14140>>ASSIGN  14142>>ASSIGN  14147<<ASSIGN  14330<<ASSIGN  14489>>ASSIGN
G$JIT.PCROS
     13039**DCL     14255>>IF      14257>>ASSIGN  14260<<ASSIGN  14260>>ASSIGN
G$JIT.PEAK_LVLS
     12929**DCL     14365>>IF      14366>>ASSIGN  14367<<ASSIGN
G$JIT.PEAK_MEM
     12929**DCL     14361>>IF      14362>>ASSIGN  14363<<ASSIGN
G$JIT.PEAK_SUDO
     12928**DCL     14309>>IF      14310>>ASSIGN  14311<<ASSIGN
G$JIT.PLL
     13034**DCL     14141>>ASSIGN  14328<<ASSIGN
G$JIT.PRIV.ACTIVE
     13062**DCL     14336<<ASSIGN
G$JIT.PRIV.PRC
     13128**DCL     14337<<ASSIGN
G$JIT.PROC_EXTIME
     12927**DCL     14060<<ASSIGN  14101>>ASSIGN
G$JIT.PROC_MEMTIME
     12928**DCL     14062<<ASSIGN  14103>>ASSIGN
G$JIT.PROC_SVTIME
     12927**DCL     14061<<ASSIGN  14102>>ASSIGN
G$JIT.PUL
     13035**DCL     14329<<ASSIGN
G$JIT.READS_HOST
     13022**DCL     14351>>ASSIGN  14356<<ASSIGN
G$JIT.READS_UC
     13023**DCL     14353>>ASSIGN  14358<<ASSIGN
G$JIT.RNST
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:84   
     13162**DCL     14053>>ASSIGN  14339<<ASSIGN
G$JIT.RUNFLAGS
     13173**DCL     14033<<ASSIGN
G$JIT.SLIB#
     13042**DCL     14153>>IF      14155>>ASSIGN  14164<<ASSIGN
G$JIT.SPROC#
     13042**DCL     14137>>IF      14139>>ASSIGN  14146<<ASSIGN
G$JIT.STEPUNIT
     12932**DCL     14084--IF      14092--ASSIGN
G$JIT.STOP
     12923**DCL     14034<>CALL    14035<<ASSIGN  14035>>ASSIGN
G$JIT.TMRZ
     13199**DCL     13200--REDEF
G$JIT.TYPE
     12918**DCL     14072<<ASSIGN  14086<<ASSIGN
G$JIT.USER_EXTIME
     12923**DCL     12924--REDEF   14060>>ASSIGN  14064--ASSIGN  14107>>ASSIGN  14112--ASSIGN
G$JIT.USER_MEMTIME
     12926**DCL     12926--REDEF   14062>>ASSIGN  14109>>ASSIGN
G$JIT.USER_SVTIME
     12925**DCL     12925--REDEF   14061>>ASSIGN  14108>>ASSIGN
G$JIT.WRITES_HOST
     13023**DCL     14352>>ASSIGN  14357<<ASSIGN
G$JIT.WRITES_UC
     13024**DCL     14354>>ASSIGN  14359<<ASSIGN
G$JIT$
      1185**DCL     12862--IMP-PTR 14033>>ASSIGN  14034>>CALL    14035>>ASSIGN  14035>>ASSIGN  14052>>ASSIGN
     14053>>ASSIGN  14053>>ASSIGN  14058>>IF      14060>>ASSIGN  14060>>ASSIGN  14061>>ASSIGN  14061>>ASSIGN
     14062>>ASSIGN  14062>>ASSIGN  14064>>ASSIGN  14070>>IF      14072>>ASSIGN  14073<>CALL    14084>>IF
     14084>>IF      14086>>ASSIGN  14087<>CALL    14092>>ASSIGN  14099>>IF      14101>>ASSIGN  14101>>ASSIGN
     14101>>ASSIGN  14102>>ASSIGN  14102>>ASSIGN  14102>>ASSIGN  14103>>ASSIGN  14103>>ASSIGN  14103>>ASSIGN
     14107>>ASSIGN  14107>>ASSIGN  14107>>ASSIGN  14108>>ASSIGN  14108>>ASSIGN  14108>>ASSIGN  14109>>ASSIGN
     14109>>ASSIGN  14109>>ASSIGN  14112>>ASSIGN  14124>>IF      14137>>IF      14137>>IF      14139>>ASSIGN
     14140>>ASSIGN  14141>>ASSIGN  14142>>ASSIGN  14146>>ASSIGN  14147>>ASSIGN  14153>>IF      14153>>IF
     14155>>ASSIGN  14156>>ASSIGN  14157>>ASSIGN  14159>>ASSIGN  14164>>ASSIGN  14165>>ASSIGN  14172>>IF
     14179>>IF      14182>>ASSIGN  14184>>ASSIGN  14185>>ASSIGN  14189>>ASSIGN  14199>>IF      14199>>IF
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:85   
     14202>>IF      14202>>IF      14207>>IF      14218>>ASSIGN  14218>>ASSIGN  14219>>ASSIGN  14219>>ASSIGN
     14232>>ASSIGN  14236>>ASSIGN  14255>>IF      14257>>ASSIGN  14260>>ASSIGN  14260>>ASSIGN  14299>>IF
     14301>>ASSIGN  14304>>ASSIGN  14304>>ASSIGN  14304>>ASSIGN  14307>>ASSIGN  14309>>IF      14309>>IF
     14310>>ASSIGN  14310>>ASSIGN  14311>>ASSIGN  14325>>ASSIGN  14326>>ASSIGN  14327>>ASSIGN  14328>>ASSIGN
     14329>>ASSIGN  14330>>ASSIGN  14331>>ASSIGN  14332>>ASSIGN  14333>>ASSIGN  14334>>ASSIGN  14336>>ASSIGN
     14337>>ASSIGN  14338>>ASSIGN  14339>>ASSIGN  14340>>ASSIGN  14341>>ASSIGN  14342>>ASSIGN  14343>>ASSIGN
     14348>>ASSIGN  14348>>ASSIGN  14348>>ASSIGN  14349>>ASSIGN  14351>>ASSIGN  14351>>ASSIGN  14351>>ASSIGN
     14352>>ASSIGN  14352>>ASSIGN  14352>>ASSIGN  14353>>ASSIGN  14353>>ASSIGN  14353>>ASSIGN  14354>>ASSIGN
     14354>>ASSIGN  14354>>ASSIGN  14356>>ASSIGN  14357>>ASSIGN  14358>>ASSIGN  14359>>ASSIGN  14361>>IF
     14361>>IF      14362>>ASSIGN  14362>>ASSIGN  14363>>ASSIGN  14365>>IF      14365>>IF      14366>>ASSIGN
     14366>>ASSIGN  14367>>ASSIGN  14403>>ASSIGN  14404>>ASSIGN  14406>>ASSIGN  14407>>ASSIGN  14429>>ASSIGN
     14429>>ASSIGN  14488>>IF      14489>>ASSIGN
G$MHJIT.CU$
     11357**DCL     14402>>ASSIGN  14402>>ASSIGN
G$MHJIT.INTCON.HHJIT
     11491**DCL     11491--REDEF
G$MHJIT.INTCON.P$$
     11464**DCL     11464--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      8409**DCL      8409--REDEF
G$MHJIT.ISA_DBINH.P$$
      9623**DCL      9623--REDEF
G$MHJIT.ISA_IDLE.P$$
      6504**DCL      6504--REDEF
G$MHJIT.ISA_LVL10.P$$
      9926**DCL      9926--REDEF
G$MHJIT.ISA_LVL11.P$$
     10229**DCL     10229--REDEF
G$MHJIT.ISA_LVL12.P$$
     10532**DCL     10532--REDEF
G$MHJIT.ISA_LVL5.P$$
      8712**DCL      8712--REDEF
G$MHJIT.ISA_OV.P$$
      8106**DCL      8106--REDEF
G$MHJIT.ISA_PFS.P$$
      7777**DCL      7777--REDEF
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:86   
G$MHJIT.ISA_RT_CLOCK.P$$
     11139**DCL     11139--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      9016**DCL      9016--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      9320**DCL      9320--REDEF
G$MHJIT.ISA_SCHD.P$$
     10835**DCL     10835--REDEF
G$MHJIT.ISA_WDOG.P$$
      7885**DCL      7885--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      7107**DCL      7107--REDEF
G$MHJIT.TSA_DB.P$$
      6978**DCL      6978--REDEF    6979--REDEF
G$MHJIT.TSA_HND.ISA.P$$
     11685**DCL     11685--REDEF
G$MHJIT.TSA_HND.P$$
     11556**DCL     11556--REDEF   11557--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      6719**DCL      6719--REDEF
G$MHJIT.TSA_MON.P$$
      6590**DCL      6590--REDEF    6591--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      7495**DCL      7495--REDEF
G$MHJIT.TSA_OV.P$$
      7366**DCL      7366--REDEF    7367--REDEF
G$MHJIT$
      1183**DCL      5029--IMP-PTR 14402>>ASSIGN  14402>>ASSIGN
G$PSUDO
     13950**DCL     14304<<ASSIGN  14304>>ASSIGN
G$ROS
     11911**DCL     14273--ASSIGN
G$ROS.AUTO_DS$
     11920**DCL     11921--REDEF
G$ROS.AUTO_T$
     11921**DCL     11921--REDEF
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:87   
G$ROS.AVAIL$
     11918**DCL     14271<<ASSIGN
G$ROS.AVAIL_HDR
     12842**DCL     14271--ASSIGN
G$ROS.AVAIL_HDR.NEXT$
     12844**DCL     14272<<ASSIGN
G$ROS.AVAIL_HDR.NWORDS
     12844**DCL     14273<<ASSIGN
G$ROS.CP_ECCB.FLTFLG
     12535**DCL     12566--REDEF
G$ROS.CP_ECCB$
     11919**DCL     14286>>ASSIGN
G$ROS.DB_ECCB.FLTFLG
     12459**DCL     12490--REDEF
G$ROS.DB_ECCB$
     11918**DCL     14285>>ASSIGN
G$ROS.DCBPTR$
     11916**DCL     14451>>IF      14452>>IF      14453>>IF
G$ROS.DCBTABLE
     12824**DCL     14250<<ASSIGN
G$ROS.JIT.ERRLOG
     12270**DCL     12273--REDEF
G$ROS.JIT.JSUNIT
     12009**DCL     12010--REDEF
G$ROS.JIT.MCLS
     12008**DCL     12008--REDEF
G$ROS.JIT.TMRZ
     12277**DCL     12278--REDEF
G$ROS.JIT.USER_EXTIME
     12001**DCL     12002--REDEF
G$ROS.JIT.USER_MEMTIME
     12004**DCL     12004--REDEF
G$ROS.JIT.USER_SVTIME
     12003**DCL     12003--REDEF
G$ROS.M$DEBUG.EOMCHAR
     12606**DCL     12606--REDEF   12607--REDEF
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:88   
G$ROS.M$DEBUG.FLDID
     12605**DCL     12605--REDEF
G$ROS.M$DEBUG.RES
     12600**DCL     12601--REDEF
G$ROS.M$DO.EOMCHAR
     12811**DCL     12811--REDEF   12812--REDEF
G$ROS.M$DO.FLDID
     12810**DCL     12810--REDEF
G$ROS.M$DO.RES
     12805**DCL     12806--REDEF
G$ROS.M$HOST.EOMCHAR
     12760**DCL     12760--REDEF   12761--REDEF
G$ROS.M$HOST.FLDID
     12759**DCL     12759--REDEF
G$ROS.M$HOST.RES
     12754**DCL     12755--REDEF
G$ROS.M$LM.EOMCHAR
     12657**DCL     12657--REDEF   12658--REDEF
G$ROS.M$LM.FLDID
     12656**DCL     12656--REDEF
G$ROS.M$LM.RES
     12651**DCL     12652--REDEF
G$ROS.M$ME.EOMCHAR
     12709**DCL     12709--REDEF   12710--REDEF
G$ROS.M$ME.FLDID
     12708**DCL     12708--REDEF
G$ROS.M$ME.RES
     12703**DCL     12704--REDEF
G$ROS.NUMDCBS
     11920**DCL     14117>>ASSIGN  14245<<ASSIGN
G$ROS.TCB.ALT$
     11916**DCL     14277<<ASSIGN
G$ROS.TCB.AVSZ
     11917**DCL     14280<<ASSIGN
G$ROS.TCB.CURRSZ
     11917**DCL     14279<<ASSIGN
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:89   
G$ROS.TCB.STK$
     11917**DCL     14278<<ASSIGN
G$ROS.U_ECCB.FLTFLG
     12383**DCL     12414--REDEF
G$ROS.U_ECCB$
     11918**DCL     14284>>ASSIGN
G$ROS$
      1184**DCL     11911--IMP-PTR 14117>>ASSIGN  14245>>ASSIGN  14250>>ASSIGN  14271>>ASSIGN  14271>>ASSIGN
     14272>>ASSIGN  14273>>ASSIGN  14277>>ASSIGN  14278>>ASSIGN  14279>>ASSIGN  14280>>ASSIGN  14284>>ASSIGN
     14285>>ASSIGN  14286>>ASSIGN  14451>>IF      14452>>IF      14453>>IF
G$SFILE$
      1173**DCL      2002--IMP-PTR 14036<<ASSIGN  14160>>ASSIGN
G$TSA.ISA.P$$
     13610**DCL     13610--REDEF
G$TSA.ISA.REGS.T$
     13775**DCL     14376<<ASSIGN
G$TSA.P$$
     13481**DCL     13481--REDEF   13482--REDEF   14373<<ASSIGN
G$TSA.S
     13501**DCL     14375<<ASSIGN
G$TSA.Z.IS
     13480**DCL     14374<<ASSIGN
G$TSA_USR$
      1187**DCL     13449--IMP-PTR 14373>>ASSIGN  14374>>ASSIGN  14375>>ASSIGN  14376>>ASSIGN
G$TSTACKU$
      1186**DCL     14376>>ASSIGN
G$U.ASYNCH
     11892**DCL     14402<<ASSIGN  14402>>ASSIGN
G$U.MISC
     11892**DCL     11892--REDEF
G$UHJIT.ISA_USR
      3478**DCL      3773--REDEF
G$UHJIT.ISA_USR.P$$
      3553**DCL      3553--REDEF
G$UHJIT.SHRD_SEG
      5009**DCL     14209>>IF
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:90   
G$UHJIT.TSA_CP.ISA.P$$
      4760**DCL      4760--REDEF
G$UHJIT.TSA_CP.P$$
      4631**DCL      4631--REDEF    4632--REDEF
G$UHJIT.TSA_DB.ISA.P$$
      4372**DCL      4372--REDEF
G$UHJIT.TSA_DB.P$$
      4243**DCL      4243--REDEF    4244--REDEF
G$UHJIT.TSA_RTT.P$$
      5006**DCL      5006--REDEF    5007--REDEF
G$UHJIT.TSA_USR.ISA.P$$
      3962**DCL      3962--REDEF
G$UHJIT.TSA_USR.P$$
      3833**DCL      3833--REDEF    3834--REDEF
G$UHJIT$
      1182**DCL      2055--IMP-PTR 14209>>IF
G$UNITS
     13951**DCL     14084>>IF      14092<<ASSIGN
G$USRTIMES
     13952**DCL     14064<<ASSIGN
GFR_PSUDO_CUR$
      1195**DCL     14304>>ASSIGN  14304>>ASSIGN
GFR_PSUDO_CUR_SYS
      1194**DCL     14301<<ASSIGN  14301>>ASSIGN
GFR_RES_LOCK
      1209**DCL     14296<>CALL    14320<>CALL
GHH$LOCK
       638**DCL-ENT 14296--CALL
GHH$UNLOCK
       638**DCL-ENT 14320--CALL
GHI$UTS
     13957**DCL-ENT 14034--CALL
GHM$INTRELALL
     13958**DCL-ENT 14041--CALL
GHS$DORUND
     13960**DCL-ENT 14132--CALL
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:91   
GJI$INIT_USR
     13961**DCL-ENT 14373--ASSIGN
GJS$CLOSE_SHARED
     13962**DCL-ENT 14408--CALL    14486--CALL
GJU_DB_DB
      1189**DCL     14411>>IF
GMA$REL
     13955**DCL-ENT 14221--CALL    14258--CALL    14418--CALL    14427--CALL    14507--CALL
GMA$UNSHARE
     13956**DCL-ENT 14211--CALL    14483--CALL
GMA_#PGS
      1172**DCL     14215<<ASSIGN  14218>>ASSIGN  14219>>ASSIGN  14221<>CALL    14223>>ASSIGN  14257<<ASSIGN
     14258<>CALL    14260>>ASSIGN  14261>>ASSIGN  14417<<ASSIGN  14418<>CALL    14426<<ASSIGN  14427<>CALL
     14429>>ASSIGN  14430>>ASSIGN  14500<<ASSIGN  14501<<ASSIGN  14503>>ASSIGN  14507<>CALL    14508>>ASSIGN
GMA_SEGX
      1171**DCL     14197<<ASSIGN  14199>>IF      14202>>IF      14202>>IF      14205>>IF      14207>>IF
     14209>>IF      14211<>CALL    14215>>ASSIGN  14217>>IF      14221<>CALL    14232>>ASSIGN  14235>>ASSIGN
     14236>>ASSIGN  14416<<ASSIGN  14418<>CALL    14425<<ASSIGN  14427<>CALL    14505<<ASSIGN  14507<>CALL
GM_ROS_PGSZ
      1191**DCL     14273>>ASSIGN
GM_SHUF_HI
      1190**DCL     14217>>IF
GUS$RNDCLK
     13959**DCL-ENT 14046--CALL
G_BOOTTIME
      1192**DCL     14035>>ASSIGN
G_SFILE.LIB_WDSZ_DATA
      2020**DCL      2021--REDEF
G_SFILE.PGSZ_PROC
      2021**DCL     14160>>ASSIGN
I
      1166**DCL     14117<<ASSIGN  14121<<ASSIGN  14127<<ASSIGN  14196<<DOINDEX 14197>>ASSIGN  14249<<DOINDEX
     14250>>ASSIGN  14298<<DOINDEX 14299>>IF      14301>>ASSIGN  14301>>ASSIGN  14301>>ASSIGN  14304>>ASSIGN
     14304>>ASSIGN  14304>>ASSIGN  14307>>ASSIGN  14309>>IF      14309>>IF      14310>>ASSIGN  14310>>ASSIGN
     14311>>ASSIGN  14400<>CALL    14450>>DOWHILE 14451>>IF      14452>>IF      14453>>IF      14455<>CALL
     14456<<ASSIGN  14456>>ASSIGN  14482<<DOINDEX 14483>>CALL    14498<<DOINDEX 14505>>ASSIGN
PL6.E3A0      #001=GJS$RUND File=GJS$RUND.:E05TSI                                TUE 07/29/97 22:00 Page:92   
J
      1167**DCL     14117<<ASSIGN  14121<<ASSIGN  14127<<ASSIGN  14139<<ASSIGN  14155<<ASSIGN  14158>>IF
     14160>>ASSIGN  14181<<ASSIGN  14406<<ASSIGN  14408<>CALL    14450>>DOWHILE 14480>>IF      14486<>CALL
KNA$CLOSE
     13963**DCL-ENT 14116--ASSIGN  14126--ASSIGN  14400--CALL
KNA$TRUNC
     13964**DCL-ENT 14120--ASSIGN
KNB$WRITE
     13965**DCL-ENT 14073--CALL    14087--CALL
KNH$CLOSE
     13966**DCL-ENT 14454--CALL
MON_STATUS_REG
      1256**DCL     14375>>ASSIGN
PGS_RELEASED
      1162**DCL        21--PROC    14037<<ASSIGN  14223<<ASSIGN  14223>>ASSIGN  14261<<ASSIGN  14261>>ASSIGN
     14386--ENTRY   14388<<ASSIGN  14430<<ASSIGN  14430>>ASSIGN  14489<<ASSIGN  14489>>ASSIGN  14508<<ASSIGN
     14508>>ASSIGN
PGS_REMAINING
      1170**DCL     14140<<ASSIGN  14156<<ASSIGN  14182<<ASSIGN  14499>>IF      14501>>ASSIGN  14503<<ASSIGN
     14503>>ASSIGN
RELEASE_SECT
     14473**PROC    14144--CALL    14162--CALL    14187--CALL
ROUTINE$
      1174**DCL     14116<<ASSIGN  14120<<ASSIGN  14126<<ASSIGN  14455>>CALL
RUND_FD
     14399**PROC    14174--CALL    14390--CALL
SEGS_64K
      1169**DCL     14142<<ASSIGN  14159<<ASSIGN  14160<<ASSIGN  14184<<ASSIGN  14482>>DOINDEX 14498>>DOINDEX
