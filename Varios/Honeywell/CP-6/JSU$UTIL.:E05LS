VERSION E05

PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:1    
        1        1        /*M*   JSU$UTIL   Utility routines used in running down a user */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
        8        8                                                /**/
        9        9        /*F*   NAME:   JSU$RSTLMS                                          */
       10       10        /*F*   PURPOSE: To reset the JIT memory delimiters.                */
       11       11        JSU$RSTLMS: PROC;
       12       12
       13       13        %INCLUDE M$JIT_C;                       /* JIT DEFINITIONS USED BY RSTLMS     */
       14      533        %INCLUDE M_INFO_C;
       15      673
       16      674    1   DCL    B$JIT$ PTR SYMREF READONLY;
       17      675
       18      676        %SUB   B$JIT=B$JIT$->B$JIT;
       19      677
       20      678    1      B$JIT.PLL = %ISEGLO;
       21      679    1      B$JIT.DLL = %ISEGLO;
       22      680    1      B$JIT.DDLL = %ISEGLO;
       23      681    1      B$JIT.LLL = %ISEGHI;
       24      682    1      B$JIT.TDP = %ISEGLO;
       25      683    1      B$JIT.PUL = %ISEGLO-1;               /* UL < LL MEANS NONE ALLOCATED       */
       26      684    1      B$JIT.DUL = %ISEGLO-1;
       27      685    1      B$JIT.LUL = %ISEGHI-1;
       28      686    1      B$JIT.EUP = %ISEGHI;
       29      687    1      B$JIT.PCP = 0;
       30      688    1      B$JIT.PCD = 0;
       31      689    1      B$JIT.PCDD = 0;
       32      690    1      B$JIT.PCL = 0;
       33      691    1      RETURN;
       34      692    1   END JSU$RSTLMS;
       35      693
       36      694        %EOD;

PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:2    
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$RSTLMS.

   Procedure JSU$RSTLMS requires 22 words for executable code.
   Procedure JSU$RSTLMS requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:3    

 Object Unit name= JSU$RSTLMS                                 File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:49:58.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    22     26  JSU$RSTLMS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  JSU$RSTLMS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$
PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:4    


        1        1        /*M*   JSU$UTIL   Utility routines used in running down a user */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=3,IND=5,ENU=0,ECU=0   */
        8        8                                                /**/
        9        9        /*F*   NAME:   JSU$RSTLMS                                          */
       10       10        /*F*   PURPOSE: To reset the JIT memory delimiters.                */
       11       11        JSU$RSTLMS: PROC;

     11  0 000000   000000 700200 xent  JSU$RSTLMS   TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

       12       12
       13       13        %INCLUDE M$JIT_C;                       /* JIT DEFINITIONS USED BY RSTLMS     */
       14      533        %INCLUDE M_INFO_C;
       15      673
       16      674    1   DCL    B$JIT$ PTR SYMREF READONLY;
       17      675
       18      676        %SUB   B$JIT=B$JIT$->B$JIT;
       19      677
       20      678    1      B$JIT.PLL = %ISEGLO;

    678  0 000002   000100 220003                    LDX0    64,DU
         0 000003   000000 470400 xsym               LDP0    B$JIT$
         0 000004   000176 740100                    STX0    126,,PR0

       21      679    1      B$JIT.DLL = %ISEGLO;

    679  0 000005   000177 740100                    STX0    127,,PR0

       22      680    1      B$JIT.DDLL = %ISEGLO;

    680  0 000006   000200 740100                    STX0    128,,PR0
PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:5    

       23      681    1      B$JIT.LLL = %ISEGHI;

    681  0 000007   000477 221003                    LDX1    319,DU
         0 000010   000214 441100                    SXL1    140,,PR0

       24      682    1      B$JIT.TDP = %ISEGLO;

    682  0 000011   000204 740100                    STX0    132,,PR0

       25      683    1      B$JIT.PUL = %ISEGLO-1;               /* UL < LL MEANS NONE ALLOCATED       */

    683  0 000012   000077 222003                    LDX2    63,DU
         0 000013   000176 442100                    SXL2    126,,PR0

       26      684    1      B$JIT.DUL = %ISEGLO-1;

    684  0 000014   000177 442100                    SXL2    127,,PR0

       27      685    1      B$JIT.LUL = %ISEGHI-1;

    685  0 000015   000476 223003                    LDX3    318,DU
         0 000016   000215 743100                    STX3    141,,PR0

       28      686    1      B$JIT.EUP = %ISEGHI;

    686  0 000017   000204 441100                    SXL1    132,,PR0

       29      687    1      B$JIT.PCP = 0;

    687  0 000020   000000 224003                    LDX4    0,DU
         0 000021   000201 744100                    STX4    129,,PR0

       30      688    1      B$JIT.PCD = 0;

    688  0 000022   000201 444100                    SXL4    129,,PR0

PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:6    
       31      689    1      B$JIT.PCDD = 0;

    689  0 000023   000203 444100                    SXL4    131,,PR0

       32      690    1      B$JIT.PCL = 0;

    690  0 000024   000215 444100                    SXL4    141,,PR0

       33      691    1      RETURN;

    691  0 000025   000000 702200 xent               TSX2  ! X66_ARET
       34      692    1   END JSU$RSTLMS;
       35      693
       36      694        %EOD;

PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:7    
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$RSTLMS.
PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:8    

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT


   Procedure JSU$RSTLMS requires 22 words for executable code.
   Procedure JSU$RSTLMS requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:9    
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:10   
          MINI XREF LISTING

B$JIT.DDLL
       427**DCL       680<<ASSIGN
B$JIT.DLL
       427**DCL       679<<ASSIGN
B$JIT.DUL
       427**DCL       684<<ASSIGN
B$JIT.ERR.MID
       341**DCL       341--REDEF
B$JIT.EUP
       429**DCL       686<<ASSIGN
B$JIT.JRESPEAK
       431**DCL       432--REDEF
B$JIT.LLL
       433**DCL       681<<ASSIGN
B$JIT.LUL
       433**DCL       685<<ASSIGN
B$JIT.PCD
       428**DCL       688<<ASSIGN
B$JIT.PCDD
       429**DCL       689<<ASSIGN
B$JIT.PCL
       433**DCL       690<<ASSIGN
B$JIT.PCP
       428**DCL       687<<ASSIGN
B$JIT.PLL
       427**DCL       678<<ASSIGN
B$JIT.PUL
       427**DCL       683<<ASSIGN
B$JIT.TDP
       429**DCL       682<<ASSIGN
B$JIT$
       674**DCL       335--IMP-PTR   678>>ASSIGN    679>>ASSIGN    680>>ASSIGN    681>>ASSIGN    682>>ASSIGN
PL6.E3A0      #001=JSU$RSTLMS File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:49 Page:11   
       683>>ASSIGN    684>>ASSIGN    685>>ASSIGN    686>>ASSIGN    687>>ASSIGN    688>>ASSIGN    689>>ASSIGN
       690>>ASSIGN

PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:12   
       37        1        /*T***********************************************************/
       38        2        /*T*                                                         */
       39        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       40        4        /*T*                                                         */
       41        5        /*T***********************************************************/
       42        6        %PLIST;
       43        7
       44        8        /*F*   NAME:   JSU$RELFSEG                                         */
       45        9        /*F*   PURPOSE: To release all file management buffer pages.       */
       46       10        JSU$RELFSEG: PROC;
       47       11
       48       12        %INCLUDE M$JIT_C;                       /* JIT DEFINITIONS USED BY RSTLMS     */
       49      532        %INCLUDE B_STRINGS_C;                   /* SYSTEM-WIDE STRING SUBSTITUTIONS   */
       50      661        %INCLUDE B_SEGIDS_C;                    /* SEGID DEFINITIONS                  */
       51     1200        %INCLUDE M_INFO_C;
       52     1340
       53     1341    1   DCL    B$JIT$ PTR SYMREF READONLY;
       54     1342    1   DCL    MMG$SFVP ENTRY(5) ALTRET;        /* SEGMENT-RELATIVE FREE VIRTUAL PAGE */
       55     1343
       56     1344    1   DCL    NBUFS SBIN;
       57     1345
       58     1346    1      NBUFS = %FMSEGSIZ;
       59     1347    1      CALL MMG$SFVP(%USERWSQ,BITBIN(%BUFSID),%FMSEGSIZ-1,NBUFS,NBUFS)
       60     1348    1        ALTRET(XX);
       61     1349    1   XX: RETURN;
       62     1350    1   END JSU$RELFSEG;
       63     1351        %EOD;

PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:13   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$RELFSEG.

   Procedure JSU$RELFSEG requires 17 words for executable code.
   Procedure JSU$RELFSEG requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:14   

 Object Unit name= JSU$RELFSEG                                File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:50:05.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    17     21  JSU$RELFSEG
    1  RoData even  none     6      6  JSU$RELFSEG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  JSU$RELFSEG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       5 MMG$SFVP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                B_VECTNIL
PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:15   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:16   


       37        1        /*T***********************************************************/
       38        2        /*T*                                                         */
       39        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       40        4        /*T*                                                         */
       41        5        /*T***********************************************************/
       42        6        %PLIST;
       43        7
       44        8        /*F*   NAME:   JSU$RELFSEG                                         */
       45        9        /*F*   PURPOSE: To release all file management buffer pages.       */
       46       10        JSU$RELFSEG: PROC;

     10  0 000000   000000 700200 xent  JSU$RELFSEG  TSX0  ! X66_AUTO_0
         0 000001   000012 000000                    ZERO    10,0

       47       11
       48       12        %INCLUDE M$JIT_C;                       /* JIT DEFINITIONS USED BY RSTLMS     */
       49      532        %INCLUDE B_STRINGS_C;                   /* SYSTEM-WIDE STRING SUBSTITUTIONS   */
       50      661        %INCLUDE B_SEGIDS_C;                    /* SEGID DEFINITIONS                  */
       51     1200        %INCLUDE M_INFO_C;
       52     1340
       53     1341    1   DCL    B$JIT$ PTR SYMREF READONLY;
       54     1342    1   DCL    MMG$SFVP ENTRY(5) ALTRET;        /* SEGMENT-RELATIVE FREE VIRTUAL PAGE */
       55     1343
       56     1344    1   DCL    NBUFS SBIN;
       57     1345
       58     1346    1      NBUFS = %FMSEGSIZ;

   1346  0 000002   000037 235007                    LDA     31,DL
         0 000003   200003 755100                    STA     NBUFS,,AUTO

       59     1347    1      CALL MMG$SFVP(%USERWSQ,BITBIN(%BUFSID),%FMSEGSIZ-1,NBUFS,NBUFS)

   1347  0 000004   200003 630500                    EPPR0   NBUFS,,AUTO
         0 000005   200010 450500                    STP0    NBUFS+5,,AUTO
         0 000006   200003 631500                    EPPR1   NBUFS,,AUTO
         0 000007   200007 451500                    STP1    NBUFS+4,,AUTO
PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:17   
         0 000010   000002 236000 1                  LDQ     2
         0 000011   200006 756100                    STQ     NBUFS+3,,AUTO
         0 000012   000004 237000 1                  LDAQ    4
         0 000013   200004 757100                    STAQ    NBUFS+1,,AUTO
         0 000014   200004 630500                    EPPR0   NBUFS+1,,AUTO
         0 000015   000023 631400 xsym               EPPR1   B_VECTNIL+19
         0 000016   000000 701000 xent               TSX1    MMG$SFVP
         0 000017   000020 702000 0                  TSX2    XX

       60     1348    1        ALTRET(XX);
       61     1349    1   XX: RETURN;

   1349  0 000020   000000 702200 xent  XX           TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006002   000000 000036   000001 006000   000000 000000    ................
   1     004   000012 006000   000000 006000                                    ........
       62     1350    1   END JSU$RELFSEG;
       63     1351        %EOD;

PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:18   
--  Include file information  --

   M_INFO_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   M$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$RELFSEG.
PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:19   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w SBIN        r     1 NBUFS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$


   Procedure JSU$RELFSEG requires 17 words for executable code.
   Procedure JSU$RELFSEG requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:20   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=JSU$RELFSEG File=JSU$UTIL.:E05TSI                             TUE 07/29/97 23:50 Page:21   
          MINI XREF LISTING

B$JIT.ERR.MID
       340**DCL       340--REDEF
B$JIT.JRESPEAK
       430**DCL       431--REDEF
B$JIT$
      1341**DCL       334--IMP-PTR
MMG$SFVP
      1342**DCL-ENT  1347--CALL
NBUFS
      1344**DCL      1346<<ASSIGN   1347<>CALL     1347<>CALL
XX
      1349**LABEL    1347--CALLALT

PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:22   
       64        1        /*T***********************************************************/
       65        2        /*T*                                                         */
       66        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       67        4        /*T*                                                         */
       68        5        /*T***********************************************************/
       69        6        %PLIST;
       70        7
       71        8
       72        9        /*F*   NAME:   JSU$FDSEG                                           */
       73       10        /*F*   PURPOSE: To free all of the dynamic data segments for a WSQ.*/
       74       11        /* NOTE THAT THE HIGH-LEVEL MMH$FDS ROUTINE IS USED IN ORDER TO RESET */
       75       12        /* ALL LINKAGE SEGMENT DESCRIPTORS APPROPRIATELY AND TO FREE ALL      */
       76       13        /* NECESSARY PAGES.                                                   */
       77       14        JSU$FDSEG: PROC(EWSQ);
       78       15
       79       16    1   DCL EWSQ SBIN;                     /* EFFECTIVE WSQ TO FREE DATA SEGMENTS FOR */
       80       17
       81       18    1   DCL I SBIN;
       82       19    1   DCL ERR SBIN;
       83       20    1   DCL SID SBIN;
       84       21    1   DCL MMH$FDS ENTRY(4) ALTRET;
       85       22    1   DCL SSR$REG ENTRY(3) ALTRET;
       86       23    1   DCL B$JIT$ PTR SYMREF READONLY;
       87       24
       88       25        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
       89      564        %INCLUDE B_STRINGS_C;                   /* SYSTEM STRING DEFINITIONS          */
       90      693        %INCLUDE J$JIT_C;                       /* USED TO GET ACCESS TO JIT.JUNK     */
       91     1206        %INCLUDE SS_SCHED_C;
       92     1439        %INCLUDE B$USER;
       93     1655        %B$USERREFS;
       94     1659        %INCLUDE M_ERRORS_C;
       95     1723        /**/
       96     1724
       97     1725    1      SID = BITBIN(%DS8SID);               /* GET SBIN SEGID OF HIGH DATA SEG    */
       98     1726    1      I = 8;                     /* USE REVERSE LOOP TO MAKE MM'S JOB EASIER     */
       99     1727    2      DO WHILE (I > 0);
      100     1728        /* DON'T FREE USER'S COMMON DATASEG IF DOING M$LINK OR RETURN */
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:23   
      101     1729    2   RE_TRY: ;
      102     1730    2           IF NOT ( (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#) )
      103     1731    2             AND (I = 2) AND (EWSQ = %USERWSQ)   )
      104     1732    2           THEN CALL MMH$FDS(EWSQ,SID,256*1024,ERR) ALTRET(CHK_IO);
      105     1733    2   OK:     SID = SID - 1;                  /* NEXT LOWER DATA SEG                */
      106     1734    2           I = I - 1;
      107     1735    2           END;
      108     1736    1      RETURN;
      109     1737        /**/
      110     1738    1   CHK_IO: IF ERR ~= %E$IOACTIVE THEN GOTO OK;
      111     1739    2      DO WHILE (S$CU$->B$U.MF > 0);
      112     1740    2           CALL SSR$REG(%SS_QMF);
      113     1741    2           END;
      114     1742    1      GOTO RE_TRY;
      115     1743    1   END JSU$FDSEG;
      116     1744
      117     1745        %EOD;

PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:24   
--  Include file information  --

   M_ERRORS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   J$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSU$FDSEG.

   Procedure JSU$FDSEG requires 51 words for executable code.
   Procedure JSU$FDSEG requires 12 words of local(AUTO) storage.

PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:25   

 Object Unit name= JSU$FDSEG                                  File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:50:14.12 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    51     63  JSU$FDSEG
    1  RoData even  none     2      2  JSU$FDSEG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  JSU$FDSEG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 MMH$FDS
 yes     yes           Std       3 SSR$REG
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    B$JIT$                                S$CU$                                 B_VECTNIL
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:26   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:27   


       64        1        /*T***********************************************************/
       65        2        /*T*                                                         */
       66        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       67        4        /*T*                                                         */
       68        5        /*T***********************************************************/
       69        6        %PLIST;
       70        7
       71        8
       72        9        /*F*   NAME:   JSU$FDSEG                                           */
       73       10        /*F*   PURPOSE: To free all of the dynamic data segments for a WSQ.*/
       74       11        /* NOTE THAT THE HIGH-LEVEL MMH$FDS ROUTINE IS USED IN ORDER TO RESET */
       75       12        /* ALL LINKAGE SEGMENT DESCRIPTORS APPROPRIATELY AND TO FREE ALL      */
       76       13        /* NECESSARY PAGES.                                                   */
       77       14        JSU$FDSEG: PROC(EWSQ);

     14  0 000000   000000 700200 xent  JSU$FDSEG    TSX0  ! X66_AUTO_1
         0 000001   000014 000001                    ZERO    12,1

       78       15
       79       16    1   DCL EWSQ SBIN;                     /* EFFECTIVE WSQ TO FREE DATA SEGMENTS FOR */
       80       17
       81       18    1   DCL I SBIN;
       82       19    1   DCL ERR SBIN;
       83       20    1   DCL SID SBIN;
       84       21    1   DCL MMH$FDS ENTRY(4) ALTRET;
       85       22    1   DCL SSR$REG ENTRY(3) ALTRET;
       86       23    1   DCL B$JIT$ PTR SYMREF READONLY;
       87       24
       88       25        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
       89      564        %INCLUDE B_STRINGS_C;                   /* SYSTEM STRING DEFINITIONS          */
       90      693        %INCLUDE J$JIT_C;                       /* USED TO GET ACCESS TO JIT.JUNK     */
       91     1206        %INCLUDE SS_SCHED_C;
       92     1439        %INCLUDE B$USER;
       93     1655        %B$USERREFS;
       94     1659        %INCLUDE M_ERRORS_C;
       95     1723        /**/
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:28   
       96     1724
       97     1725    1      SID = BITBIN(%DS8SID);               /* GET SBIN SEGID OF HIGH DATA SEG    */

   1725  0 000002   006013 235007                    LDA     3083,DL
         0 000003   200006 755100                    STA     SID,,AUTO

       98     1726    1      I = 8;                     /* USE REVERSE LOOP TO MAKE MM'S JOB EASIER     */

   1726  0 000004   000010 236007                    LDQ     8,DL
         0 000005   200004 756100                    STQ     I,,AUTO

       99     1727    2      DO WHILE (I > 0);

   1727  0 000006   000042 604400 0                  TMOZ    s:1736

   1657  0 000007                       RE_TRY       null
      100     1728        /* DON'T FREE USER'S COMMON DATASEG IF DOING M$LINK OR RETURN */
      101     1729    2   RE_TRY: ;
      102     1730    2           IF NOT ( (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#) )

   1730  0 000007   000000 470400 xsym               LDP0    B$JIT$
         0 000010   000315 220100                    LDX0    205,,PR0
         0 000011   000003 360003                    ANX0    3,DU
         0 000012   000022 600000 0                  TZE     s:1732
         0 000013   200004 235100                    LDA     I,,AUTO
         0 000014   000002 115007                    CMPA    2,DL
         0 000015   000022 601000 0                  TNZ     s:1732
         0 000016   200003 471500                    LDP1    @EWSQ,,AUTO
         0 000017   100000 235100                    LDA     0,,PR1
         0 000020   000010 115007                    CMPA    8,DL
         0 000021   000036 600000 0                  TZE     OK

      103     1731    2             AND (I = 2) AND (EWSQ = %USERWSQ)   )
      104     1732    2           THEN CALL MMH$FDS(EWSQ,SID,256*1024,ERR) ALTRET(CHK_IO);

   1732  0 000022   200005 631500                    EPPR1   ERR,,AUTO
         0 000023   200013 451500                    STP1    SID+5,,AUTO
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:29   
         0 000024   000000 236000 1                  LDQ     0
         0 000025   200012 756100                    STQ     SID+4,,AUTO
         0 000026   200006 633500                    EPPR3   SID,,AUTO
         0 000027   200011 453500                    STP3    SID+3,,AUTO
         0 000030   200003 236100                    LDQ     @EWSQ,,AUTO
         0 000031   200010 756100                    STQ     SID+2,,AUTO
         0 000032   200010 630500                    EPPR0   SID+2,,AUTO
         0 000033   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000034   000000 701000 xent               TSX1    MMH$FDS
         0 000035   000043 702000 0                  TSX2    CHK_IO

      105     1733    2   OK:     SID = SID - 1;                  /* NEXT LOWER DATA SEG                */

   1733  0 000036   000001 336007       OK           LCQ     1,DL
         0 000037   200006 056100                    ASQ     SID,,AUTO

      106     1734    2           I = I - 1;

   1734  0 000040   200004 056100                    ASQ     I,,AUTO

      107     1735    2           END;

   1735  0 000041   000007 605400 0                  TPNZ    RE_TRY

      108     1736    1      RETURN;

   1736  0 000042   000000 702200 xent               TSX2  ! X66_ARET

      109     1737        /**/
      110     1738    1   CHK_IO: IF ERR ~= %E$IOACTIVE THEN GOTO OK;

   1738  0 000043   200005 235100       CHK_IO       LDA     ERR,,AUTO
         0 000044   001160 115007                    CMPA    624,DL
         0 000045   000036 601000 0                  TNZ     OK

      111     1739    2      DO WHILE (S$CU$->B$U.MF > 0);

PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:30   
   1739  0 000046   000000 470400 xsym               LDP0    S$CU$
         0 000047   000006 236100                    LDQ     6,,PR0
         0 000050   777000 316003                    CANQ    -512,DU
         0 000051   000062 600000 0                  TZE     s:1742

      112     1740    2           CALL SSR$REG(%SS_QMF);

   1740  0 000052   000001 630400 1                  EPPR0   1
         0 000053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000054   000000 701000 xent               TSX1    SSR$REG
         0 000055   000000 011000                    NOP     0

      113     1741    2           END;

   1741  0 000056   000000 470400 xsym               LDP0    S$CU$
         0 000057   000006 236100                    LDQ     6,,PR0
         0 000060   777000 316003                    CANQ    -512,DU
         0 000061   000052 601000 0                  TNZ     s:1740

      114     1742    1      GOTO RE_TRY;

   1742  0 000062   000007 710000 0                  TRA     RE_TRY

(unnamed)
 Sect OctLoc
   1     000   000017 006000   000005 006000                                    ........
      115     1743    1   END JSU$FDSEG;
      116     1744
      117     1745        %EOD;

PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:31   
--  Include file information  --

   M_ERRORS_C.:E05TOU  is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   J$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSU$FDSEG.
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:32   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @EWSQ                      5-0-0/w SBIN        r     1 ERR
    *0-0-0/w SBIN        r     1 EWSQ                       4-0-0/w SBIN        r     1 I
     6-0-0/w SBIN        r     1 SID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(576)   r     1 B$U


   Procedure JSU$FDSEG requires 51 words for executable code.
   Procedure JSU$FDSEG requires 12 words of local(AUTO) storage.
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:33   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:34   
          MINI XREF LISTING

B$DO.ECCINFO
      1590**DCL      1591--REDEF
B$JIT.ERR.MID
      1021**DCL      1021--REDEF
B$JIT.JUNK
      1137**DCL      1730>>IF
B$JIT$
        23**DCL      1015--IMP-PTR  1730>>IF
B$U.MF
      1545**DCL      1739>>DOWHILE
B$U.MISC
      1569**DCL      1570--REDEF
B$USER.MISC
      1645**DCL      1646--REDEF
CHK_IO
      1738**LABEL    1732--CALLALT
ERR
        19**DCL      1732<>CALL     1738>>IF
EWSQ
        16**DCL        14--PROC     1730>>IF       1732<>CALL
I
        18**DCL      1726<<ASSIGN   1727>>DOWHILE  1730>>IF       1734<<ASSIGN   1734>>ASSIGN
MMH$FDS
        21**DCL-ENT  1732--CALL
OK
      1733**LABEL    1738--GOTO
RE_TRY
      1657**LABEL    1742--GOTO
S$CU$
      1656**DCL      1739>>DOWHILE
SID
        20**DCL      1725<<ASSIGN   1732<>CALL     1733<<ASSIGN   1733>>ASSIGN
PL6.E3A0      #003=JSU$FDSEG File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:50 Page:35   
SSR$REG
        22**DCL-ENT  1740--CALL

PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:36   
      118        1        /*T***********************************************************/
      119        2        /*T*                                                         */
      120        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      121        4        /*T*                                                         */
      122        5        /*T***********************************************************/
      123        6
      124        7        /*F*   NAME:   JSU$RELMEM                                          */
      125        8        /*F*   PURPOSE: To free all pages from the instruction and data    */
      126        9        /*,*           segments.                                           */
      127       10        JSU$RELMEM: PROC(CPFREE);
      128       11    1   DCL CPFREE SBIN;                        /* IF = 0 DONT FREE CP DATA, ~=0 DO.  */
      129       12
      130       13        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
      131      552        %INCLUDE MM_DATA_R;
      132     1072        %INCLUDE B$MAP;                         /* BASED PAGE TABLE DEFINITION        */
      133     1171        %INCLUDE J$JIT_C;                       /* USED TO GET ACCESS TO JIT.JUNK     */
      134     1684    1   DCL B$UPT$ PTR SYMREF READONLY;
      135     1685    1   DCL B$JIT$ PTR SYMREF READONLY;
      136     1686
      137     1687    1   DCL JSU$FDSEG ENTRY(1);                 /* ROUTINE TO FREE DATA SEGMENTS      */
      138     1688    1   DCL JSU$CPDFREE ENTRY;                  /* ROUTINE TO FREE CP DATA SEGMENTS   */
      139     1689    1   DCL JSA$RUNDSPC ENTRY(2);
      140     1690    1   DCL MME$WFVP ENTRY(4) ALTRET;           /* WSQ-RELATIVE FREE VIRTUAL PAGE     */
      141     1691
      142     1692    1   DCL I SBIN;
      143     1693    1   DCL TEMP1 SBIN;
      144     1694
      145     1695        %SUB B$MAP=B$UPT$->B$MAP;
      146     1696
      147     1697
      148     1698    2      DO I = %ISEGLO TO %ISEGHI;           /* FREE ALL ISR PAGES                 */
      149     1699    2           IF (B$MAP.SCTRL(I) & %SCUSER)
      150     1700    2           THEN CALL MME$WFVP(%USERWSQ,I,TEMP1,TEMP1) ALTRET(A_OK);
      151     1701    2           ELSE B$UPT$->B$PAGE.WRD(I) = BITBIN(MM_FPMC);
      152     1702    2   A_OK:   ;
      153     1703    2           END;
      154     1704    1      CALL JSU$FDSEG(%USERWSQ);            /*RELEASE USER DATA SEGS              */
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:37   
      155     1705
      156     1706    1      IF (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#) )
      157     1707    1      THEN CALL JSU$FDSEG(%DBWSQ);
      158     1708    1      ELSE CALL JSA$RUNDSPC(%DBWSQ,1);
      159     1709
      160     1710    1      CALL JSA$RUNDSPC(%ASLWSQ,1);         /* Always rundown the ASL tcb         */
      161     1711    1      IF CPFREE ~= 0 THEN CALL JSA$RUNDSPC(%CPWSQ,1);
      162     1712                                      /* RELEASE CP DATA SEGS IF CALLED BY DELUSER    */
      163     1713    1   END JSU$RELMEM;
      164     1714
      165     1715        %EOD;

PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:38   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   J$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSU$RELMEM.

   Procedure JSU$RELMEM requires 59 words for executable code.
   Procedure JSU$RELMEM requires 10 words of local(AUTO) storage.

PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:39   

 Object Unit name= JSU$RELMEM                                 File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:50:25.92 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    59     73  JSU$RELMEM
    1  RoData even  none     8     10  JSU$RELMEM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  JSU$RELMEM

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       4 MME$WFVP
         yes           Std       1 JSU$FDSEG
         yes           Std       2 JSA$RUNDSPC
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    MM_BYP$                               MM_FPMC                          r    B$UPT$
r    B$JIT$                                B_VECTNIL
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:40   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:41   


      118        1        /*T***********************************************************/
      119        2        /*T*                                                         */
      120        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      121        4        /*T*                                                         */
      122        5        /*T***********************************************************/
      123        6
      124        7        /*F*   NAME:   JSU$RELMEM                                          */
      125        8        /*F*   PURPOSE: To free all pages from the instruction and data    */
      126        9        /*,*           segments.                                           */
      127       10        JSU$RELMEM: PROC(CPFREE);

     10  0 000000   000000 700200 xent  JSU$RELMEM   TSX0  ! X66_AUTO_1
         0 000001   000012 000001                    ZERO    10,1

      128       11    1   DCL CPFREE SBIN;                        /* IF = 0 DONT FREE CP DATA, ~=0 DO.  */
      129       12
      130       13        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
      131      552        %INCLUDE MM_DATA_R;
      132     1072        %INCLUDE B$MAP;                         /* BASED PAGE TABLE DEFINITION        */
      133     1171        %INCLUDE J$JIT_C;                       /* USED TO GET ACCESS TO JIT.JUNK     */
      134     1684    1   DCL B$UPT$ PTR SYMREF READONLY;
      135     1685    1   DCL B$JIT$ PTR SYMREF READONLY;
      136     1686
      137     1687    1   DCL JSU$FDSEG ENTRY(1);                 /* ROUTINE TO FREE DATA SEGMENTS      */
      138     1688    1   DCL JSU$CPDFREE ENTRY;                  /* ROUTINE TO FREE CP DATA SEGMENTS   */
      139     1689    1   DCL JSA$RUNDSPC ENTRY(2);
      140     1690    1   DCL MME$WFVP ENTRY(4) ALTRET;           /* WSQ-RELATIVE FREE VIRTUAL PAGE     */
      141     1691
      142     1692    1   DCL I SBIN;
      143     1693    1   DCL TEMP1 SBIN;
      144     1694
      145     1695        %SUB B$MAP=B$UPT$->B$MAP;
      146     1696
      147     1697
      148     1698    2      DO I = %ISEGLO TO %ISEGHI;           /* FREE ALL ISR PAGES                 */

PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:42   
   1698  0 000002   000100 235007                    LDA     64,DL
         0 000003   200004 755100                    STA     I,,AUTO

      149     1699    2           IF (B$MAP.SCTRL(I) & %SCUSER)

   1699  0 000004   000000 470400 xsym               LDP0    B$UPT$
         0 000005   200004 720100                    LXL0    I,,AUTO
         0 000006   000000 236110                    LDQ     0,X0,PR0
         0 000007   000022 736000                    QLS     18
         0 000010   777400 376003                    ANQ     -256,DU
         0 000011   000400 376003                    ANQ     256,DU
         0 000012   000030 600000 0                  TZE     s:1701

      150     1700    2           THEN CALL MME$WFVP(%USERWSQ,I,TEMP1,TEMP1) ALTRET(A_OK);

   1700  0 000013   200005 631500                    EPPR1   TEMP1,,AUTO
         0 000014   200011 451500                    STP1    TEMP1+4,,AUTO
         0 000015   200005 633500                    EPPR3   TEMP1,,AUTO
         0 000016   200010 453500                    STP3    TEMP1+3,,AUTO
         0 000017   200004 634500                    EPPR4   I,,AUTO
         0 000020   200007 454500                    STP4    TEMP1+2,,AUTO
         0 000021   000000 236000 1                  LDQ     0
         0 000022   200006 756100                    STQ     TEMP1+1,,AUTO
         0 000023   200006 630500                    EPPR0   TEMP1+1,,AUTO
         0 000024   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000025   000000 701000 xent               TSX1    MME$WFVP
         0 000026   000032 702000 0                  TSX2    A_OK
         0 000027   000032 710000 0                  TRA     A_OK

      151     1701    2           ELSE B$UPT$->B$PAGE.WRD(I) = BITBIN(MM_FPMC);

   1701  0 000030   000000 235000 xsym               LDA     MM_FPMC
         0 000031   000000 755110                    STA     0,X0,PR0

   1700  0 000032                       A_OK         null
      152     1702    2   A_OK:   ;
      153     1703    2           END;
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:43   

   1703  0 000032   200004 054100                    AOS     I,,AUTO
         0 000033   200004 235100                    LDA     I,,AUTO
         0 000034   000477 115007                    CMPA    319,DL
         0 000035   000004 604400 0                  TMOZ    s:1699

      154     1704    1      CALL JSU$FDSEG(%USERWSQ);            /*RELEASE USER DATA SEGS              */

   1704  0 000036   000000 630400 1                  EPPR0   0
         0 000037   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000040   000000 701000 xent               TSX1    JSU$FDSEG
         0 000041   000000 011000                    NOP     0

      155     1705
      156     1706    1      IF (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#) )

   1706  0 000042   000000 470400 xsym               LDP0    B$JIT$
         0 000043   000315 220100                    LDX0    205,,PR0
         0 000044   000003 360003                    ANX0    3,DU
         0 000045   000053 600000 0                  TZE     s:1708

      157     1707    1      THEN CALL JSU$FDSEG(%DBWSQ);

   1707  0 000046   000001 630400 1                  EPPR0   1
         0 000047   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000050   000000 701000 xent               TSX1    JSU$FDSEG
         0 000051   000000 011000                    NOP     0
         0 000052   000057 710000 0                  TRA     s:1710

      158     1708    1      ELSE CALL JSA$RUNDSPC(%DBWSQ,1);

   1708  0 000053   000002 630400 1                  EPPR0   2
         0 000054   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000055   000000 701000 xent               TSX1    JSA$RUNDSPC
         0 000056   000000 011000                    NOP     0

      159     1709
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:44   
      160     1710    1      CALL JSA$RUNDSPC(%ASLWSQ,1);         /* Always rundown the ASL tcb         */

   1710  0 000057   000004 630400 1                  EPPR0   4
         0 000060   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000061   000000 701000 xent               TSX1    JSA$RUNDSPC
         0 000062   000000 011000                    NOP     0

      161     1711    1      IF CPFREE ~= 0 THEN CALL JSA$RUNDSPC(%CPWSQ,1);

   1711  0 000063   200003 470500                    LDP0    @CPFREE,,AUTO
         0 000064   000000 235100                    LDA     0,,PR0
         0 000065   000072 600000 0                  TZE     s:1713

   1711  0 000066   000006 630400 1                  EPPR0   6
         0 000067   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000070   000000 701000 xent               TSX1    JSA$RUNDSPC
         0 000071   000000 011000                    NOP     0

      162     1712                                      /* RELEASE CP DATA SEGS IF CALLED BY DELUSER    */
      163     1713    1   END JSU$RELMEM;

   1713  0 000072   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000012 006000   000007 006000   000007 006000   000003 006000    ................
   1     004   000010 006000   000003 006000   000006 006000   000003 006000    ................
      164     1714
      165     1715        %EOD;

PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:45   
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   J$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure JSU$RELMEM.
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:46   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @CPFREE                   *0-0-0/w SBIN        r     1 CPFREE
     4-0-0/w SBIN        r     1 I                          5-0-0/w SBIN        r     1 TEMP1

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/b STRC        r     1 MM_FPMC

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/w STRC(36864) r     1 B$PAGE


   Procedure JSU$RELMEM requires 59 words for executable code.
   Procedure JSU$RELMEM requires 10 words of local(AUTO) storage.
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:47   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:48   
          MINI XREF LISTING

A_OK
      1700**LABEL    1700--CALLALT
B$JIT.ERR.MID
      1499**DCL      1499--REDEF
B$JIT.JUNK
      1615**DCL      1706>>IF
B$JIT$
      1685**DCL      1493--IMP-PTR  1706>>IF
B$MAP.SCTRL
      1115**DCL      1116--REDEF    1699>>IF
B$PAGE.WRD
      1165**DCL      1701<<ASSIGN
B$UPT$
      1684**DCL      1699>>IF       1701>>ASSIGN
CPFREE
        11**DCL        10--PROC     1711>>IF
I
      1692**DCL      1698<<DOINDEX  1699>>IF       1700<>CALL     1701>>ASSIGN
JSA$RUNDSPC
      1689**DCL-ENT  1708--CALL     1710--CALL     1711--CALL
JSU$FDSEG
      1687**DCL-ENT  1704--CALL     1707--CALL
MM$DESC.BOUND
      1023**DCL      1024--REDEF
MM$DESC.FLGS
      1024**DCL      1024--REDEF
MM$PPUT.USER#
      1012**DCL      1012--REDEF
MME$WFVP
      1690**DCL-ENT  1700--CALL
MM_BYP$
       943**DCL       943--IMP-PTR
PL6.E3A0      #004=JSU$RELMEM File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:49   
MM_FPMC
       949**DCL      1701>>ASSIGN
TEMP1
      1693**DCL      1700<>CALL     1700<>CALL

PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:50   
      166        1        /*T***********************************************************/
      167        2        /*T*                                                         */
      168        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      169        4        /*T*                                                         */
      170        5        /*T***********************************************************/
      171        6        %PLIST;
      172        7
      173        8        /*F*   NAME:   JSU$DECRUC                                          */
      174        9        /*F*   PURPOSE: To decrement the use counts for all of a user's    */
      175       10        /*,*           associated processors (including CP, if it is in    */
      176       11        /*,*           control.                                            */
      177       12        JSU$DECRUC: PROC;                  /* DECREMENT USE COUNTS FOR PROCESSORS     */
      178       13
      179       14        %INCLUDE B$P;
      180       98        %INCLUDE B$USER;                        /* USER TABLE DEFINITION              */
      181      314        %B$USERREFS;
      182      318        %INCLUDE HF_LOCK_C;
      183      332
      184      333        %INCLUDE J$JIT_C;
      185      846        %INCLUDE MM_DATA_R;
      186     1366    1   DCL B$JIT$ PTR SYMREF READONLY;
      187     1367    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      188     1368
      189     1369        %SUB B$U = S$CU$->B$U;
      190     1370    1   DCL P UBIN;
      191     1371    1   DCL P$ PTR;
      192     1372
      193     1373             %LOCK(G=J_PLOCK);
      194     1376    1      IF B$U.FLG & %U_CPIC
      195     1377    2      THEN DO;                             /* DO IF CP-IN-CONTROL                */
      196     1378    2           P = B$U.ACP;
      197     1379    2           CALL DEC;
      198     1380    2           END;
      199     1381    2      ELSE DO;
      200     1382    2           IF NOT (B$JIT.JUNK & %JJ_MLINKIP#)
      201     1383    3           THEN DO;
      202     1384    3                P = B$U.APR;
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:51   
      203     1385    3                CALL DEC;
      204     1386    3                P = B$U.APO;
      205     1387    3                CALL DEC;
      206     1388    3                END;
      207     1389    2           P = B$U.ASL;
      208     1390    2           CALL DEC;
      209     1391    2           P = B$U.ASP;
      210     1392    2           CALL DEC;
      211     1393        /* IF M$LINK-ING WITH A DEBUGGER, DONT DECREMENT ITS USE COUNT.    */
      212     1394    2           IF ((B$U.FLG & %U_DIC) AND NOT (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#))
              1394                    )
      213     1395    3           THEN DO;
      214     1396    3                P = B$U.DB;
      215     1397    3                CALL DEC;
      216     1398    3                END;
      217     1399    2           END;
      218     1400           %UNLOCK (G=J_PLOCK);
      219     1403    1      RETURN;
      220     1404
      221     1405    1   DEC: PROC;
      222     1406    2      IF P = 0 THEN RETURN;
      223     1407    2      P$ = ADDR (B$P$ -> B$P (P));
      224     1408    2      P$ -> B$P.UC (0) = P$ -> B$P.UC (0) -1;
      225     1409
      226     1410    2      IF P >= P_AUTO_START
      227     1411    2      THEN
      228     1412    2           IF P$ -> B$P.UC(0) = 0
      229     1413    2           THEN
      230     1414    3           DO;
      231     1415    3                MM$BYP.AUTOINUSE = MM$BYP.AUTOINUSE - P$ -> B$P.PPC(0);
      232     1416    3                MM$BYP.AUTOP = MM$BYP.AUTOP + P$ -> B$P.PPC(0);
      233     1417    3                END;
      234     1418    2      RETURN;
      235     1419    2   END DEC;
      236     1420    1   END JSU$DECRUC;
      237     1421
      238     1422        %EOD;
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:52   

PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:53   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   J$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$DECRUC.

   Procedure JSU$DECRUC requires 90 words for executable code.
   Procedure JSU$DECRUC requires 8 words of local(AUTO) storage.

PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:54   

 Object Unit name= JSU$DECRUC                                 File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:50:38.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      2      2  JSU$DECRUC
    1   Proc  even  none    90    132  JSU$DECRUC
    2  RoData even  none     1      1  JSU$DECRUC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        0  JSU$DECRUC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$LOCK
         yes           Std       1 HFC$UNLOCK
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:55   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     P_AUTO_START                          B$P$                                  S$CU$
r    MM_BYP$                          r    B$JIT$                                J_PLOCK
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:56   


      166        1        /*T***********************************************************/
      167        2        /*T*                                                         */
      168        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      169        4        /*T*                                                         */
      170        5        /*T***********************************************************/
      171        6        %PLIST;
      172        7
      173        8        /*F*   NAME:   JSU$DECRUC                                          */
      174        9        /*F*   PURPOSE: To decrement the use counts for all of a user's    */
      175       10        /*,*           associated processors (including CP, if it is in    */
      176       11        /*,*           control.                                            */
      177       12        JSU$DECRUC: PROC;                  /* DECREMENT USE COUNTS FOR PROCESSORS     */

     12  1 000000   000000 700200 xent  JSU$DECRUC   TSX0  ! X66_AUTO_0
         1 000001   000010 000000                    ZERO    8,0

      178       13
      179       14        %INCLUDE B$P;
      180       98        %INCLUDE B$USER;                        /* USER TABLE DEFINITION              */
      181      314        %B$USERREFS;
      182      318        %INCLUDE HF_LOCK_C;
      183      332
      184      333        %INCLUDE J$JIT_C;
      185      846        %INCLUDE MM_DATA_R;
      186     1366    1   DCL B$JIT$ PTR SYMREF READONLY;
      187     1367    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      188     1368
      189     1369        %SUB B$U = S$CU$->B$U;
      190     1370    1   DCL P UBIN;
      191     1371    1   DCL P$ PTR;
      192     1372
      193     1373             %LOCK(G=J_PLOCK);

   1374  1 000002   000000 630400 2                  EPPR0   0
         1 000003   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000004   000000 701000 xent               TSX1    HFC$LOCK
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:57   
         1 000005   000000 011000                    NOP     0

      194     1376    1      IF B$U.FLG & %U_CPIC

   1376  1 000006   000000 470400 xsym               LDP0    S$CU$
         1 000007   000000 236100                    LDQ     0,,PR0
         1 000010   000000 376000 0                  ANQ     0
         1 000011   000021 600000 1                  TZE     s:1382

      195     1377    2      THEN DO;                             /* DO IF CP-IN-CONTROL                */

      196     1378    2           P = B$U.ACP;

   1378  1 000012   000006 236100                    LDQ     6,,PR0
         1 000013   000022 772000                    QRL     18
         1 000014   000777 376007                    ANQ     511,DL
         1 000015   200003 756100                    STQ     P,,AUTO

      197     1379    2           CALL DEC;

   1379  1 000016   000101 701000 1                  TSX1    DEC
         1 000017   000000 011000                    NOP     0

      198     1380    2           END;

   1380  1 000020   000074 710000 1                  TRA     s:1401

      199     1381    2      ELSE DO;

      200     1382    2           IF NOT (B$JIT.JUNK & %JJ_MLINKIP#)

   1382  1 000021   000000 471400 xsym               LDP1    B$JIT$
         1 000022   100315 220100                    LDX0    205,,PR1
         1 000023   000001 360003                    ANX0    1,DU
         1 000024   000041 601000 1                  TNZ     s:1389

      201     1383    3           THEN DO;
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:58   

      202     1384    3                P = B$U.APR;

   1384  1 000025   000007 236100                    LDQ     7,,PR0
         1 000026   000030 772000                    QRL     24
         1 000027   200003 756100                    STQ     P,,AUTO

      203     1385    3                CALL DEC;

   1385  1 000030   000101 701000 1                  TSX1    DEC
         1 000031   000000 011000                    NOP     0

      204     1386    3                P = B$U.APO;

   1386  1 000032   000000 470400 xsym               LDP0    S$CU$
         1 000033   000007 236100                    LDQ     7,,PR0
         1 000034   000014 772000                    QRL     12
         1 000035   007777 376007                    ANQ     4095,DL
         1 000036   200003 756100                    STQ     P,,AUTO

      205     1387    3                CALL DEC;

   1387  1 000037   000101 701000 1                  TSX1    DEC
         1 000040   000000 011000                    NOP     0

      206     1388    3                END;

      207     1389    2           P = B$U.ASL;

   1389  1 000041   000000 470400 xsym               LDP0    S$CU$
         1 000042   000006 236100                    LDQ     6,,PR0
         1 000043   000777 376007                    ANQ     511,DL
         1 000044   200003 756100                    STQ     P,,AUTO

      208     1390    2           CALL DEC;

   1390  1 000045   000101 701000 1                  TSX1    DEC
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:59   
         1 000046   000000 011000                    NOP     0

      209     1391    2           P = B$U.ASP;

   1391  1 000047   000000 470400 xsym               LDP0    S$CU$
         1 000050   000007 236100                    LDQ     7,,PR0
         1 000051   000006 772000                    QRL     6
         1 000052   000077 376007                    ANQ     63,DL
         1 000053   200003 756100                    STQ     P,,AUTO

      210     1392    2           CALL DEC;

   1392  1 000054   000101 701000 1                  TSX1    DEC
         1 000055   000000 011000                    NOP     0

      211     1393        /* IF M$LINK-ING WITH A DEBUGGER, DONT DECREMENT ITS USE COUNT.    */
      212     1394    2          IF ((B$U.FLG & %U_DIC) AND NOT (B$JIT.JUNK & (%JJ_MLINKIP# | %JJ_LNKRETIP#))
              1394                    )

   1394  1 000056   000000 470400 xsym               LDP0    S$CU$
         1 000057   000000 236100                    LDQ     0,,PR0
         1 000060   000001 376000 0                  ANQ     1
         1 000061   000074 600000 1                  TZE     s:1401
         1 000062   000000 471400 xsym               LDP1    B$JIT$
         1 000063   100315 220100                    LDX0    205,,PR1
         1 000064   000003 360003                    ANX0    3,DU
         1 000065   000074 601000 1                  TNZ     s:1401

      213     1395    3           THEN DO;

      214     1396    3                P = B$U.DB;

   1396  1 000066   000006 236100                    LDQ     6,,PR0
         1 000067   000011 772000                    QRL     9
         1 000070   000777 376007                    ANQ     511,DL
         1 000071   200003 756100                    STQ     P,,AUTO

PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:60   
      215     1397    3                CALL DEC;

   1397  1 000072   000101 701000 1                  TSX1    DEC
         1 000073   000000 011000                    NOP     0

      216     1398    3                END;

      217     1399    2           END;

      218     1400           %UNLOCK (G=J_PLOCK);

   1401  1 000074   000000 630400 2                  EPPR0   0
         1 000075   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000076   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000077   000000 011000                    NOP     0

      219     1403    1      RETURN;

   1403  1 000100   000000 702200 xent               TSX2  ! X66_ARET

      220     1404
      221     1405    1   DEC: PROC;

   1405  1 000101   200006 741300       DEC          STX1  ! P$+2,,AUTO

      222     1406    2      IF P = 0 THEN RETURN;

   1406  1 000102   200003 235100                    LDA     P,,AUTO
         1 000103   000105 601000 1                  TNZ     s:1407

   1406  1 000104   000001 702211                    TSX2  ! 1,X1

      223     1407    2      P$ = ADDR (B$P$ -> B$P (P));

   1407  1 000105   200003 236100                    LDQ     P,,AUTO
         1 000106   000042 402003                    MPY     34,DU
         1 000107   000000 036000 xsym               ADLQ    B$P$
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:61   
         1 000110   200004 756100                    STQ     P$,,AUTO

      224     1408    2      P$ -> B$P.UC (0) = P$ -> B$P.UC (0) -1;

   1408  1 000111   200004 470500                    LDP0    P$,,AUTO
         1 000112   000001 336007                    LCQ     1,DL
         1 000113   000000 056100                    ASQ     0,,PR0

      225     1409
      226     1410    2      IF P >= P_AUTO_START

   1410  1 000114   200003 236100                    LDQ     P,,AUTO
         1 000115   000000 116000 xsym               CMPQ    P_AUTO_START
         1 000116   000130 602000 1                  TNC     s:1418

      227     1411    2      THEN
      228     1412    2           IF P$ -> B$P.UC(0) = 0

   1412  1 000117   000000 235100                    LDA     0,,PR0
         1 000120   000130 601000 1                  TNZ     s:1418

      229     1413    2           THEN
      230     1414    3           DO;

      231     1415    3                MM$BYP.AUTOINUSE = MM$BYP.AUTOINUSE - P$ -> B$P.PPC(0);

   1415  1 000121   000000 471400 xsym               LDP1    MM_BYP$
         1 000122   100015 236100                    LDQ     13,,PR1
         1 000123   000003 136100                    SBLQ    3,,PR0
         1 000124   100015 756100                    STQ     13,,PR1

      232     1416    3                MM$BYP.AUTOP = MM$BYP.AUTOP + P$ -> B$P.PPC(0);

   1416  1 000125   100014 236100                    LDQ     12,,PR1
         1 000126   000003 036100                    ADLQ    3,,PR0
         1 000127   100014 756100                    STQ     12,,PR1

PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:62   
      233     1417    3                END;

      234     1418    2      RETURN;

   1418  1 000130   200006 221300                    LDX1  ! P$+2,,AUTO
         1 000131   000001 702211                    TSX2  ! 1,X1

(unnamed)
 Sect OctLoc
   0     000   020000 000000   100000 000000                                    ....@...

(unnamed)
 Sect OctLoc
   2     000   000000 006000                                                    ....
      235     1419    2   END DEC;
      236     1420    1   END JSU$DECRUC;
      237     1421
      238     1422        %EOD;

PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:63   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   J$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$DECRUC.
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:64   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w UBIN        r     1 P                          4-0-0/w PTR         r     1 P$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$P$
     0-0-0/d BIT (72)    r     1 J_PLOCK                    0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w UBIN        r     1 P_AUTO_START               0-0-0/w PTR         r     1 S$CU$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d STRC(1224)  r     1 B$P(0:0)
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/w STRC(576)   r     1 MM$BYP


   Procedure JSU$DECRUC requires 90 words for executable code.
   Procedure JSU$DECRUC requires 8 words of local(AUTO) storage.
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:65   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:66   
          MINI XREF LISTING

B$DO.ECCINFO
       249**DCL       250--REDEF
B$JIT.ERR.MID
       661**DCL       661--REDEF
B$JIT.JUNK
       777**DCL      1382>>IF       1394>>IF
B$JIT$
      1366**DCL       655--IMP-PTR  1382>>IF       1394>>IF
B$P
        22**DCL      1407--ASSIGN
B$P.PPC
        26**DCL      1415>>ASSIGN   1416>>ASSIGN
B$P.UC
        23**DCL      1408<<ASSIGN   1408>>ASSIGN   1412>>IF
B$P$
        76**DCL      1407>>ASSIGN
B$U.ACP
       205**DCL      1378>>ASSIGN
B$U.APO
       209**DCL      1386>>ASSIGN
B$U.APR
       208**DCL      1384>>ASSIGN
B$U.ASL
       207**DCL      1389>>ASSIGN
B$U.ASP
       210**DCL      1391>>ASSIGN
B$U.DB
       206**DCL      1396>>ASSIGN
B$U.FLG
       115**DCL      1376>>IF       1394>>IF
B$U.MISC
       228**DCL       229--REDEF
PL6.E3A0      #005=JSU$DECRUC File=JSU$UTIL.:E05TSI                              TUE 07/29/97 23:50 Page:67   
B$USER.MISC
       304**DCL       305--REDEF
DEC
      1405**PROC     1379--CALL     1385--CALL     1387--CALL     1390--CALL     1392--CALL     1397--CALL
HFC$LOCK
       331**DCL-ENT  1374--CALL
HFC$UNLOCK
       331**DCL-ENT  1401--CALL
J_PLOCK
      1367**DCL      1374<>CALL     1401<>CALL
MM$BYP.AUTOINUSE
      1239**DCL      1415<<ASSIGN   1415>>ASSIGN
MM$BYP.AUTOP
      1239**DCL      1416<<ASSIGN   1416>>ASSIGN
MM$DESC.BOUND
      1317**DCL      1318--REDEF
MM$DESC.FLGS
      1318**DCL      1318--REDEF
MM$PPUT.USER#
      1306**DCL      1306--REDEF
MM_BYP$
      1237**DCL      1237--IMP-PTR  1415>>ASSIGN   1415>>ASSIGN   1416>>ASSIGN   1416>>ASSIGN
P
      1370**DCL      1378<<ASSIGN   1384<<ASSIGN   1386<<ASSIGN   1389<<ASSIGN   1391<<ASSIGN   1396<<ASSIGN
      1406>>IF       1407>>ASSIGN   1410>>IF
P$
      1371**DCL      1407<<ASSIGN   1408>>ASSIGN   1408>>ASSIGN   1412>>IF       1415>>ASSIGN   1416>>ASSIGN
P_AUTO_START
        71**DCL      1410>>IF
S$CU$
       315**DCL      1376>>IF       1378>>ASSIGN   1384>>ASSIGN   1386>>ASSIGN   1389>>ASSIGN   1391>>ASSIGN
      1394>>IF       1396>>ASSIGN

PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:68   
      239        1        /*T***********************************************************/
      240        2        /*T*                                                         */
      241        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      242        4        /*T*                                                         */
      243        5        /*T***********************************************************/
      244        6        /**/
      245        7        /*F*    NAME:   JSU$FREE_PROC
      246        8                PURPOSE: To get back physical memory pages when we're in a
      247        9                        bind by releasing the first standard shared processor
      248       10                        found with no users and no overlays.               */
      249       11        JSU$FREE_PROC: PROC ALTRET;
      250       12        /**/
      251       13        %INCLUDE B$P;
      252       97        %INCLUDE MM_DATA_R;
      253      617        /**/
      254      618    1   DCL PNUM SBIN;
      255      619    1   DCL OLDEST_SLOT UBIN;
      256      620    1   DCL OLDEST_TIME UBIN;
      257      621    1   DCL INIT_TIME REDEF OLDEST_TIME SBIN;
      258      622    1   DCL PPNO UBIN;
      259      623    1   DCL P$ PTR;
      260      624    1   DCL Q$ PTR;
      261      625    1   DCL NXTPP UBIN;
      262      626    1   DCL B$PPUT$ PTR SYMREF READONLY;
      263      627    1   DCL MMB$FPP ENTRY(1) ALTRET;
      264      628        /**/
      265      629        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
      266      630        /**/
      267      631        /*Called with J_PLOCK locked. */
      268      632    1      OLDEST_SLOT = 0;
      269      633    1      INIT_TIME = -1;
      270      634    2      DO PNUM = P_AUTO_START TO P_LAST_AUTO;
      271      635    2           P$ = ADDR (B$P$ -> B$P (PNUM));
      272      636    2           IF P$ -> B$P.UC(0) = 0 AND P$ -> B$P.PPC(0) ~= 0
      273      637    2           THEN IF OLDEST_TIME > P$ -> B$P.INSTDATE(0)
      274      638    3                THEN DO;
      275      639    3                     OLDEST_SLOT = PNUM;
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:69   
      276      640    3                     Q$ = P$;
      277      641    3                     OLDEST_TIME = P$ -> B$P.INSTDATE(0);
      278      642    3                     END;
      279      643    2           END;
      280      644    1      IF OLDEST_SLOT = 0
      281      645    1      THEN ALTRETURN;
      282      646    2      ELSE DO;
      283      647
      284      648    2           PPNO = Q$ -> B$P.HPP(0);
      285      649    3           DO WHILE (PPNO ~= 0);
      286      650    3                NXTPP = MM$PPUT.PPNO (PPNO);
      287      651    3                CALL MMB$FPP (PPNO);
      288      652    3                MM$BYP.AUTOP = MM$BYP.AUTOP - 1;
      289      653    3                PPNO = NXTPP;
      290      654    3                END;
      291      655    2           Q$ -> B$P.PPC(0) = 0;
      292      656    2           Q$ -> B$P.HPP(0) = 0;
      293      657    2           Q$ -> B$P.INSTDATE (0) = 1;     /* MAKE SLOT OLD                      */
      294      658    2           Q$ -> B$P.LIB_LNK (0) = 1;
      295      659    2           RETURN;
      296      660    2           END;
      297      661    1   END JSU$FREE_PROC;
      298      662        %EOD;

PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:70   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$FREE_PROC.

   Procedure JSU$FREE_PROC requires 63 words for executable code.
   Procedure JSU$FREE_PROC requires 12 words of local(AUTO) storage.

PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:71   

 Object Unit name= JSU$FREE_PROC                              File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:50:52.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    63     77  JSU$FREE_PROC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  JSU$FREE_PROC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 MMB$FPP
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     P_AUTO_START                          P_LAST_AUTO                           B$P$
r    MM_BYP$                          r    B$PPUT$                               B_VECTNIL
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:72   


      239        1        /*T***********************************************************/
      240        2        /*T*                                                         */
      241        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      242        4        /*T*                                                         */
      243        5        /*T***********************************************************/
      244        6        /**/
      245        7        /*F*    NAME:   JSU$FREE_PROC
      246        8                PURPOSE: To get back physical memory pages when we're in a
      247        9                        bind by releasing the first standard shared processor
      248       10                        found with no users and no overlays.               */
      249       11        JSU$FREE_PROC: PROC ALTRET;

     11  0 000000   000000 700200 xent  JSU$FREE_PR* TSX0  ! X66_AUTO_0
         0 000001   000014 000000                    ZERO    12,0

      250       12        /**/
      251       13        %INCLUDE B$P;
      252       97        %INCLUDE MM_DATA_R;
      253      617        /**/
      254      618    1   DCL PNUM SBIN;
      255      619    1   DCL OLDEST_SLOT UBIN;
      256      620    1   DCL OLDEST_TIME UBIN;
      257      621    1   DCL INIT_TIME REDEF OLDEST_TIME SBIN;
      258      622    1   DCL PPNO UBIN;
      259      623    1   DCL P$ PTR;
      260      624    1   DCL Q$ PTR;
      261      625    1   DCL NXTPP UBIN;
      262      626    1   DCL B$PPUT$ PTR SYMREF READONLY;
      263      627    1   DCL MMB$FPP ENTRY(1) ALTRET;
      264      628        /**/
      265      629        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
      266      630        /**/
      267      631        /*Called with J_PLOCK locked. */
      268      632    1      OLDEST_SLOT = 0;

    632  0 000002   200004 450100                    STZ     OLDEST_SLOT,,AUTO
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:73   

      269      633    1      INIT_TIME = -1;

    633  0 000003   000001 335007                    LCA     1,DL
         0 000004   200005 755100                    STA     OLDEST_TIME,,AUTO

      270      634    2      DO PNUM = P_AUTO_START TO P_LAST_AUTO;

    634  0 000005   000000 236000 xsym               LDQ     P_AUTO_START
         0 000006   200003 756100                    STQ     PNUM,,AUTO
         0 000007   000033 710000 0                  TRA     s:643+1

      271      635    2           P$ = ADDR (B$P$ -> B$P (PNUM));

    635  0 000010   200003 236100                    LDQ     PNUM,,AUTO
         0 000011   000042 402003                    MPY     34,DU
         0 000012   000000 036000 xsym               ADLQ    B$P$
         0 000013   200007 756100                    STQ     P$,,AUTO

      272      636    2           IF P$ -> B$P.UC(0) = 0 AND P$ -> B$P.PPC(0) ~= 0

    636  0 000014   200007 470500                    LDP0    P$,,AUTO
         0 000015   000000 235100                    LDA     0,,PR0
         0 000016   000032 601000 0                  TNZ     s:643
         0 000017   000003 235100                    LDA     3,,PR0
         0 000020   000032 600000 0                  TZE     s:643

      273      637    2           THEN IF OLDEST_TIME > P$ -> B$P.INSTDATE(0)

    637  0 000021   000005 236100                    LDQ     5,,PR0
         0 000022   200005 116100                    CMPQ    OLDEST_TIME,,AUTO
         0 000023   000032 603000 0                  TRC     s:643

      274      638    3                THEN DO;

      275      639    3                     OLDEST_SLOT = PNUM;

PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:74   
    639  0 000024   200003 235100                    LDA     PNUM,,AUTO
         0 000025   200004 755100                    STA     OLDEST_SLOT,,AUTO

      276      640    3                     Q$ = P$;

    640  0 000026   200007 236100                    LDQ     P$,,AUTO
         0 000027   200010 756100                    STQ     Q$,,AUTO

      277      641    3                     OLDEST_TIME = P$ -> B$P.INSTDATE(0);

    641  0 000030   000005 235100                    LDA     5,,PR0
         0 000031   200005 755100                    STA     OLDEST_TIME,,AUTO

      278      642    3                     END;

      279      643    2           END;

    643  0 000032   200003 054100                    AOS     PNUM,,AUTO
         0 000033   000000 236000 xsym               LDQ     P_LAST_AUTO
         0 000034   000010 604000 0                  TMI     s:635
         0 000035   200003 116100                    CMPQ    PNUM,,AUTO
         0 000036   000010 605000 0                  TPL     s:635

      280      644    1      IF OLDEST_SLOT = 0

    644  0 000037   200004 235100                    LDA     OLDEST_SLOT,,AUTO
         0 000040   000042 601000 0                  TNZ     s:648

      281      645    1      THEN ALTRETURN;

    645  0 000041   000000 702200 xent               TSX2  ! X66_AALT

      282      646    2      ELSE DO;

      283      647
      284      648    2           PPNO = Q$ -> B$P.HPP(0);

PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:75   
    648  0 000042   200010 470500                    LDP0    Q$,,AUTO
         0 000043   000002 235100                    LDA     2,,PR0
         0 000044   200006 755100                    STA     PPNO,,AUTO

      285      649    3           DO WHILE (PPNO ~= 0);

    649  0 000045   000067 600000 0                  TZE     s:655

      286      650    3                NXTPP = MM$PPUT.PPNO (PPNO);

    650  0 000046   000000 470400 xsym               LDP0    B$PPUT$
         0 000047   200006 720100                    LXL0    PPNO,,AUTO
         0 000050   000000 236110                    LDQ     0,X0,PR0
         0 000051   777777 376007                    ANQ     -1,DL
         0 000052   200011 756100                    STQ     NXTPP,,AUTO

      287      651    3                CALL MMB$FPP (PPNO);

    651  0 000053   200006 631500                    EPPR1   PPNO,,AUTO
         0 000054   200012 451500                    STP1    NXTPP+1,,AUTO
         0 000055   200012 630500                    EPPR0   NXTPP+1,,AUTO
         0 000056   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000057   000000 701000 xent               TSX1    MMB$FPP
         0 000060   000000 011000                    NOP     0

      288      652    3                MM$BYP.AUTOP = MM$BYP.AUTOP - 1;

    652  0 000061   000000 470400 xsym               LDP0    MM_BYP$
         0 000062   000001 336007                    LCQ     1,DL
         0 000063   000014 056100                    ASQ     12,,PR0

      289      653    3                PPNO = NXTPP;

    653  0 000064   200011 235100                    LDA     NXTPP,,AUTO
         0 000065   200006 755100                    STA     PPNO,,AUTO

      290      654    3                END;
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:76   

    654  0 000066   000046 601000 0                  TNZ     s:650

      291      655    2           Q$ -> B$P.PPC(0) = 0;

    655  0 000067   200010 470500                    LDP0    Q$,,AUTO
         0 000070   000003 450100                    STZ     3,,PR0

      292      656    2           Q$ -> B$P.HPP(0) = 0;

    656  0 000071   000002 450100                    STZ     2,,PR0

      293      657    2           Q$ -> B$P.INSTDATE (0) = 1;     /* MAKE SLOT OLD                      */

    657  0 000072   000001 235007                    LDA     1,DL
         0 000073   000005 755100                    STA     5,,PR0

      294      658    2           Q$ -> B$P.LIB_LNK (0) = 1;

    658  0 000074   000001 220003                    LDX0    1,DU
         0 000075   000022 740100                    STX0    18,,PR0

      295      659    2           RETURN;

    659  0 000076   000000 702200 xent               TSX2  ! X66_ARET
      296      660    2           END;
      297      661    1   END JSU$FREE_PROC;
      298      662        %EOD;

PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:77   
--  Include file information  --

   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$FREE_PROC.
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:78   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w SBIN        r     1 INIT_TIME                 11-0-0/w UBIN        r     1 NXTPP
     4-0-0/w UBIN        r     1 OLDEST_SLOT                5-0-0/w UBIN        r     1 OLDEST_TIME
     7-0-0/w PTR         r     1 P$                         3-0-0/w SBIN        r     1 PNUM
     6-0-0/w UBIN        r     1 PPNO                      10-0-0/w PTR         r     1 Q$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$P$                       0-0-0/w PTR         r     1 B$PPUT$
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/w UBIN        r     1 P_AUTO_START
     0-0-0/w UBIN        r     1 P_LAST_AUTO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/w STRC(576)   r     1 MM$BYP
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure JSU$FREE_PROC requires 63 words for executable code.
   Procedure JSU$FREE_PROC requires 12 words of local(AUTO) storage.
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:79   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:80   
          MINI XREF LISTING

B$P
        21**DCL       635--ASSIGN
B$P.HPP
        24**DCL       648>>ASSIGN    656<<ASSIGN
B$P.INSTDATE
        27**DCL       637>>IF        641>>ASSIGN    657<<ASSIGN
B$P.LIB_LNK
        32**DCL       658<<ASSIGN
B$P.PPC
        25**DCL       636>>IF        655<<ASSIGN
B$P.UC
        22**DCL       636>>IF
B$P$
        75**DCL       635>>ASSIGN
B$PPUT$
       626**DCL       650>>ASSIGN
INIT_TIME
       621**DCL       633<<ASSIGN
MM$BYP.AUTOP
       490**DCL       652<<ASSIGN    652>>ASSIGN
MM$DESC.BOUND
       568**DCL       569--REDEF
MM$DESC.FLGS
       569**DCL       569--REDEF
MM$PPUT.PPNO
       557**DCL       650>>ASSIGN
MM$PPUT.USER#
       557**DCL       557--REDEF
MMB$FPP
       627**DCL-ENT   651--CALL
MM_BYP$
       488**DCL       488--IMP-PTR   652>>ASSIGN    652>>ASSIGN
PL6.E3A0      #006=JSU$FREE_PROC File=JSU$UTIL.:E05TSI                           TUE 07/29/97 23:50 Page:81   
NXTPP
       625**DCL       650<<ASSIGN    653>>ASSIGN
OLDEST_SLOT
       619**DCL       632<<ASSIGN    639<<ASSIGN    644>>IF
OLDEST_TIME
       620**DCL       621--REDEF     637>>IF        641<<ASSIGN
P$
       623**DCL       635<<ASSIGN    636>>IF        636>>IF        637>>IF        640>>ASSIGN    641>>ASSIGN
PNUM
       618**DCL       634<<DOINDEX   635>>ASSIGN    639>>ASSIGN
PPNO
       622**DCL       648<<ASSIGN    649>>DOWHILE   650>>ASSIGN    651<>CALL      653<<ASSIGN
P_AUTO_START
        70**DCL       634>>DOINDEX
P_LAST_AUTO
        71**DCL       634>>DOINDEX
Q$
       624**DCL       640<<ASSIGN    648>>ASSIGN    655>>ASSIGN    656>>ASSIGN    657>>ASSIGN    658>>ASSIGN

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:82   
      299        1        /*T***********************************************************/
      300        2        /*T*                                                         */
      301        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      302        4        /*T*                                                         */
      303        5        /*T***********************************************************/
      304        6        /**/
      305        7        /*F*    NAME:   JSU$GRAB_OLD
      306        8                PURPOSE: To find and reposess the least recently used slot
      307        9                        in the auto-sharing portion of the shared processor
      308       10                        tables which has no current users.
      309       11                        It is entered with J_PLOCK locked and RETURNs with
      310       12                        it locked, but ALTRETURNS with it unlocked. */
      311       13        JSU$SP_GETFREE: PROC(SLOT) ALTRET;
      312       14        /**/
      313       15    1   DCL SLOT UBIN;
      314       16        /**/
      315       17        %INCLUDE B$P;
      316      101        %INCLUDE MM_DATA_R;
      317      621        %INCLUDE HF_LOCK_C;
      318      635        /**/
      319      636    1   DCL I SBIN;
      320      637    1   DCL P$ PTR;
      321      638    1   DCL Q$ PTR;
      322      639    1   DCL PNUM UBIN;
      323      640    1   DCL HIGH_LOOKUP UBIN;
      324      641    1   DCL OLDEST_INDEX UBIN;
      325      642    1   DCL OLDEST_SLOT UBIN;
      326      643    1   DCL OLDEST_TIME UBIN;
      327      644    1   DCL INIT_TIME REDEF OLDEST_TIME SBIN;
      328      645    1   DCL PPNO UBIN;
      329      646    1   DCL NXTPP UBIN;
      330      647
      331      648    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      332      649    1   DCL B$PPUT$ PTR SYMREF READONLY;
      333      650
      334      651    1   DCL MMB$FPP ENTRY(1) ALTRET;
      335      652    1   DCL FMR$SLIDE ENTRY(3);
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:83   
      336      653    1   DCL SSS$CACHE ENTRY;
      337      654    1   DCL SSS$CACHEBP ENTRY;
      338      655        /**/
      339      656        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
      340      657        %SUB B$LOOKUP=B$LOOKUP$->B$LOOKUP;
      341      658        /**/
      342      659    1      OLDEST_SLOT = 0;
      343      660    1      INIT_TIME = -1;
      344      661    1      OLDEST_INDEX = 0;
      345      662    2      DO PNUM = P_AUTO_START TO P_LAST_AUTO;
      346      663    2           P$ = ADDR (B$P$ -> B$P(PNUM));
      347      664    2           IF NOT(P$ -> B$P.FLGS(0) & %(%P_OVRLY|%P_STATS))
      348      665    3           THEN DO;
      349      666    3                IF P$ -> B$P.INSTDATE(0) = 0
      350      667    4                THEN DO;
      351      668    4                     IF PNUM > P_USED_AUTO
      352      669    4                     THEN P_USED_AUTO = PNUM;
      353      670    4                     SLOT = PNUM;
      354      671        /* RETURN WITH GATE LOCK TO PREVENT THE SLOT BEING STOLEN */
      355      672    4                     RETURN;
      356      673    4                     END;
      357      674    3                IF P$ -> B$P.UC(0) = 0
      358      675    3                THEN IF OLDEST_TIME > P$ -> B$P.INSTDATE(0)
      359      676    4                     THEN DO;
      360      677    4                          Q$ = P$;
      361      678    4                          OLDEST_SLOT = PNUM;
      362      679    4                          OLDEST_TIME = P$ -> B$P.INSTDATE(0);
      363      680    4                          END;
      364      681    3                END;
      365      682    2           END;
      366      683    1      IF OLDEST_SLOT = 0
      367      684    2      THEN DO;
      368      685                %UNLOCK (G=J_PLOCK);
      369      688    2           ALTRETURN;
      370      689    2           END;
      371      690    2      ELSE DO;
      372      691                       /* WE MUST NOW FIND THE RIGHT INDEX INTO THE LOOK UP TABLE     */
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:84   
      373      692    2           HIGH_LOOKUP = P_AUTO_START + B$LOOKUP (1) - 1;
      374      693    3           DO I = P_AUTO_START TO HIGH_LOOKUP;
      375      694    3                IF B$LOOKUP(I) = OLDEST_SLOT
      376      695    3                THEN
      377      696    4                DO;
      378      697    4                     OLDEST_INDEX = I;
      379      698    4                     I = HIGH_LOOKUP;
      380      699    4                     END;
      381      700    3                END;
      382      701    2           SLOT = OLDEST_SLOT;             /* RETURN THE SLOT                    */
      383      702
      384      703    2           PNUM = OLDEST_SLOT;             /* SET PNUM TO ROOT OF PROCESSOR      */
      385      704
      386      705    3           DO WHILE (Q$ ~= B$P$);          /* CLEAR ALL OVERLAYS                 */
      387      706    3                PPNO = Q$ -> B$P.HPP(0);
      388      707    3                IF Q$ -> B$P.PPC(0) ~= 0 THEN
      389      708    4                DO WHILE (PPNO ~= 0);
      390      709    4                     NXTPP = MM$PPUT.PPNO (PPNO);
      391      710    4                     CALL MMB$FPP (PPNO);
      392      711    4                     MM$BYP.AUTOP = MM$BYP.AUTOP - 1;
      393      712    4                     PPNO = NXTPP;
      394      713    4                     END;
      395      714    3                Q$ -> B$P.PPC(0) = 0;
      396      715    3                Q$ -> B$P.FLGS (0) = '0'B;
      397      716    3                Q$ -> B$P.HPP(0) = 0;
      398      717    3                Q$ -> B$P.INSTDATE(0) = 0;
      399      718    3                Q$ -> B$P.LIB_LNK(0) = 0;
      400      719    3                Q$ = ADDR (B$P$ -> B$P (Q$ -> B$P.LNK (0)));
      401      720    3                END;                       /* END CLEAR OVERLAYS                 */
      402      721    2           IF OLDEST_INDEX ~= 0            /* IT IS IN THE NAME TABLE            */
      403      722    3           THEN DO;
      404      723    3                CALL FMR$SLIDE(ADDR(B$LOOKUP(OLDEST_INDEX)),
      405      724    3                  -1,HIGH_LOOKUP - OLDEST_INDEX);
      406      725    3                B$LOOKUP (1) = B$LOOKUP (1) - 1;
      407      726    3                P_MAX_LOOKUP = B$LOOKUP (1);
      408      727                 /* N.B.: B$LOOKUP(1) is used as the actual working copy
      409      728                          of P_MAX_LOOKUP because of bypass cache.
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:85   
      410      729                          P_MAX_LOOKUP is also maintained for looking only.*/
      411      730    3                END;
      412      731        /* RETURNS WITH GATE LOCKED */
      413      732    2           RETURN;
      414      733    2           END;
      415      734
      416      735    1   END JSU$SP_GETFREE;
      417      736        /**/
      418      737        %EOD;

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:86   
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$SP_GETFREE.

   Procedure JSU$SP_GETFREE requires 148 words for executable code.
   Procedure JSU$SP_GETFREE requires 20 words of local(AUTO) storage.

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:87   

 Object Unit name= JSU$SP_GETFREE                             File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:51:00.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   148    224  JSU$SP_GETFREE
    1  RoData even  none     2      2  JSU$SP_GETFREE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  JSU$SP_GETFREE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 HFC$UNLOCK
 yes     yes           Std       1 MMB$FPP
         yes           Std       3 FMR$SLIDE
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:88   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     P_AUTO_START                          P_LAST_AUTO                           P_USED_AUTO
     P_MAX_LOOKUP                          B$P$                                  B$LOOKUP$
r    MM_BYP$                               J_PLOCK                          r    B$PPUT$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:89   


      299        1        /*T***********************************************************/
      300        2        /*T*                                                         */
      301        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      302        4        /*T*                                                         */
      303        5        /*T***********************************************************/
      304        6        /**/
      305        7        /*F*    NAME:   JSU$GRAB_OLD
      306        8                PURPOSE: To find and reposess the least recently used slot
      307        9                        in the auto-sharing portion of the shared processor
      308       10                        tables which has no current users.
      309       11                        It is entered with J_PLOCK locked and RETURNs with
      310       12                        it locked, but ALTRETURNS with it unlocked. */
      311       13        JSU$SP_GETFREE: PROC(SLOT) ALTRET;

     13  0 000000   000000 700200 xent  JSU$SP_GETF* TSX0  ! X66_AUTO_1
         0 000001   000024 000001                    ZERO    20,1

      312       14        /**/
      313       15    1   DCL SLOT UBIN;
      314       16        /**/
      315       17        %INCLUDE B$P;
      316      101        %INCLUDE MM_DATA_R;
      317      621        %INCLUDE HF_LOCK_C;
      318      635        /**/
      319      636    1   DCL I SBIN;
      320      637    1   DCL P$ PTR;
      321      638    1   DCL Q$ PTR;
      322      639    1   DCL PNUM UBIN;
      323      640    1   DCL HIGH_LOOKUP UBIN;
      324      641    1   DCL OLDEST_INDEX UBIN;
      325      642    1   DCL OLDEST_SLOT UBIN;
      326      643    1   DCL OLDEST_TIME UBIN;
      327      644    1   DCL INIT_TIME REDEF OLDEST_TIME SBIN;
      328      645    1   DCL PPNO UBIN;
      329      646    1   DCL NXTPP UBIN;
      330      647
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:90   
      331      648    1   DCL J_PLOCK SYMREF BIT(72) DALIGNED;
      332      649    1   DCL B$PPUT$ PTR SYMREF READONLY;
      333      650
      334      651    1   DCL MMB$FPP ENTRY(1) ALTRET;
      335      652    1   DCL FMR$SLIDE ENTRY(3);
      336      653    1   DCL SSS$CACHE ENTRY;
      337      654    1   DCL SSS$CACHEBP ENTRY;
      338      655        /**/
      339      656        %SUB MM$PPUT=B$PPUT$->MM$PPUT;
      340      657        %SUB B$LOOKUP=B$LOOKUP$->B$LOOKUP;
      341      658        /**/
      342      659    1      OLDEST_SLOT = 0;

    659  0 000002   200012 450100                    STZ     OLDEST_SLOT,,AUTO

      343      660    1      INIT_TIME = -1;

    660  0 000003   000001 335007                    LCA     1,DL
         0 000004   200013 755100                    STA     OLDEST_TIME,,AUTO

      344      661    1      OLDEST_INDEX = 0;

    661  0 000005   200011 450100                    STZ     OLDEST_INDEX,,AUTO

      345      662    2      DO PNUM = P_AUTO_START TO P_LAST_AUTO;

    662  0 000006   000000 236000 xsym               LDQ     P_AUTO_START
         0 000007   200007 756100                    STQ     PNUM,,AUTO
         0 000010   000052 710000 0                  TRA     s:682+3

      346      663    2           P$ = ADDR (B$P$ -> B$P(PNUM));

    663  0 000011   200007 236100                    LDQ     PNUM,,AUTO
         0 000012   000042 402003                    MPY     34,DU
         0 000013   000000 036000 xsym               ADLQ    B$P$
         0 000014   200005 756100                    STQ     P$,,AUTO

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:91   
      347      664    2           IF NOT(P$ -> B$P.FLGS(0) & %(%P_OVRLY|%P_STATS))

    664  0 000015   200005 470500                    LDP0    P$,,AUTO
         0 000016   000027 220100                    LDX0    23,,PR0
         0 000017   002100 360003                    ANX0    1088,DU
         0 000020   000047 601000 0                  TNZ     s:682

      348      665    3           THEN DO;

      349      666    3                IF P$ -> B$P.INSTDATE(0) = 0

    666  0 000021   000005 235100                    LDA     5,,PR0
         0 000022   000034 601000 0                  TNZ     s:674

      350      667    4                THEN DO;

      351      668    4                     IF PNUM > P_USED_AUTO

    668  0 000023   000000 236000 xsym               LDQ     P_USED_AUTO
         0 000024   200007 116100                    CMPQ    PNUM,,AUTO
         0 000025   000030 603000 0                  TRC     s:670

      352      669    4                     THEN P_USED_AUTO = PNUM;

    669  0 000026   200007 235100                    LDA     PNUM,,AUTO
         0 000027   000000 755000 xsym               STA     P_USED_AUTO

      353      670    4                     SLOT = PNUM;

    670  0 000030   200003 471500                    LDP1    @SLOT,,AUTO
         0 000031   200007 235100                    LDA     PNUM,,AUTO
         0 000032   100000 755100                    STA     0,,PR1

      354      671        /* RETURN WITH GATE LOCK TO PREVENT THE SLOT BEING STOLEN */
      355      672    4                     RETURN;

    672  0 000033   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:92   

      356      673    4                     END;
      357      674    3                IF P$ -> B$P.UC(0) = 0

    674  0 000034   000000 235100                    LDA     0,,PR0
         0 000035   000047 601000 0                  TNZ     s:682

      358      675    3                THEN IF OLDEST_TIME > P$ -> B$P.INSTDATE(0)

    675  0 000036   000005 236100                    LDQ     5,,PR0
         0 000037   200013 116100                    CMPQ    OLDEST_TIME,,AUTO
         0 000040   000047 603000 0                  TRC     s:682

      359      676    4                     THEN DO;

      360      677    4                          Q$ = P$;

    677  0 000041   200005 236100                    LDQ     P$,,AUTO
         0 000042   200006 756100                    STQ     Q$,,AUTO

      361      678    4                          OLDEST_SLOT = PNUM;

    678  0 000043   200007 235100                    LDA     PNUM,,AUTO
         0 000044   200012 755100                    STA     OLDEST_SLOT,,AUTO

      362      679    4                          OLDEST_TIME = P$ -> B$P.INSTDATE(0);

    679  0 000045   000005 235100                    LDA     5,,PR0
         0 000046   200013 755100                    STA     OLDEST_TIME,,AUTO

      363      680    4                          END;

      364      681    3                END;

      365      682    2           END;

    682  0 000047   200007 235100                    LDA     PNUM,,AUTO
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:93   
         0 000050   000001 035007                    ADLA    1,DL
         0 000051   200007 755100                    STA     PNUM,,AUTO
         0 000052   000000 236000 xsym               LDQ     P_LAST_AUTO
         0 000053   200007 116100                    CMPQ    PNUM,,AUTO
         0 000054   000011 603000 0                  TRC     s:663

      366      683    1      IF OLDEST_SLOT = 0

    683  0 000055   200012 235100                    LDA     OLDEST_SLOT,,AUTO
         0 000056   000064 601000 0                  TNZ     s:692

      367      684    2      THEN DO;

      368      685                %UNLOCK (G=J_PLOCK);

    686  0 000057   000000 630400 1                  EPPR0   0
         0 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000061   000000 701000 xent               TSX1    HFC$UNLOCK
         0 000062   000000 011000                    NOP     0

      369      688    2           ALTRETURN;

    688  0 000063   000000 702200 xent               TSX2  ! X66_AALT

      370      689    2           END;
      371      690    2      ELSE DO;

      372      691                       /* WE MUST NOW FIND THE RIGHT INDEX INTO THE LOOK UP TABLE     */
      373      692    2           HIGH_LOOKUP = P_AUTO_START + B$LOOKUP (1) - 1;

    692  0 000064   000000 470400 xsym               LDP0    B$LOOKUP$
         0 000065   000000 236000 xsym               LDQ     P_AUTO_START
         0 000066   000001 036100                    ADLQ    1,,PR0
         0 000067   000001 136007                    SBLQ    1,DL
         0 000070   200010 756100                    STQ     HIGH_LOOKUP,,AUTO

      374      693    3           DO I = P_AUTO_START TO HIGH_LOOKUP;
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:94   

    693  0 000071   000000 235000 xsym               LDA     P_AUTO_START
         0 000072   200004 755100                    STA     I,,AUTO
         0 000073   000106 710000 0                  TRA     s:700+1

      375      694    3                IF B$LOOKUP(I) = OLDEST_SLOT

    694  0 000074   000000 470400 xsym               LDP0    B$LOOKUP$
         0 000075   200004 720100                    LXL0    I,,AUTO
         0 000076   000000 236110                    LDQ     0,X0,PR0
         0 000077   200012 116100                    CMPQ    OLDEST_SLOT,,AUTO
         0 000100   000105 601000 0                  TNZ     s:700

      376      695    3                THEN
      377      696    4                DO;

      378      697    4                     OLDEST_INDEX = I;

    697  0 000101   200004 235100                    LDA     I,,AUTO
         0 000102   200011 755100                    STA     OLDEST_INDEX,,AUTO

      379      698    4                     I = HIGH_LOOKUP;

    698  0 000103   200010 235100                    LDA     HIGH_LOOKUP,,AUTO
         0 000104   200004 755100                    STA     I,,AUTO

      380      699    4                     END;

      381      700    3                END;

    700  0 000105   200004 054100                    AOS     I,,AUTO
         0 000106   200010 236100                    LDQ     HIGH_LOOKUP,,AUTO
         0 000107   000074 604000 0                  TMI     s:694
         0 000110   200004 116100                    CMPQ    I,,AUTO
         0 000111   000074 605000 0                  TPL     s:694

      382      701    2           SLOT = OLDEST_SLOT;             /* RETURN THE SLOT                    */
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:95   

    701  0 000112   200003 471500                    LDP1    @SLOT,,AUTO
         0 000113   200012 235100                    LDA     OLDEST_SLOT,,AUTO
         0 000114   100000 755100                    STA     0,,PR1

      383      702
      384      703    2           PNUM = OLDEST_SLOT;             /* SET PNUM TO ROOT OF PROCESSOR      */

    703  0 000115   200007 755100                    STA     PNUM,,AUTO

      385      704
      386      705    3           DO WHILE (Q$ ~= B$P$);          /* CLEAR ALL OVERLAYS                 */

    705  0 000116   200006 236100                    LDQ     Q$,,AUTO
         0 000117   000000 116000 xsym               CMPQ    B$P$
         0 000120   000171 600000 0                  TZE     s:721

      387      706    3                PPNO = Q$ -> B$P.HPP(0);

    706  0 000121   200006 470500                    LDP0    Q$,,AUTO
         0 000122   000002 235100                    LDA     2,,PR0
         0 000123   200014 755100                    STA     PPNO,,AUTO

      388      707    3                IF Q$ -> B$P.PPC(0) ~= 0 THEN

    707  0 000124   000003 235100                    LDA     3,,PR0
         0 000125   000151 600000 0                  TZE     s:714

      389      708    4                DO WHILE (PPNO ~= 0);

    708  0 000126   200014 236100                    LDQ     PPNO,,AUTO
         0 000127   000151 600000 0                  TZE     s:714

      390      709    4                     NXTPP = MM$PPUT.PPNO (PPNO);

    709  0 000130   000000 470400 xsym               LDP0    B$PPUT$
         0 000131   200014 720100                    LXL0    PPNO,,AUTO
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:96   
         0 000132   000000 236110                    LDQ     0,X0,PR0
         0 000133   777777 376007                    ANQ     -1,DL
         0 000134   200015 756100                    STQ     NXTPP,,AUTO

      391      710    4                     CALL MMB$FPP (PPNO);

    710  0 000135   200014 631500                    EPPR1   PPNO,,AUTO
         0 000136   200016 451500                    STP1    NXTPP+1,,AUTO
         0 000137   200016 630500                    EPPR0   NXTPP+1,,AUTO
         0 000140   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000141   000000 701000 xent               TSX1    MMB$FPP
         0 000142   000000 011000                    NOP     0

      392      711    4                     MM$BYP.AUTOP = MM$BYP.AUTOP - 1;

    711  0 000143   000000 470400 xsym               LDP0    MM_BYP$
         0 000144   000001 336007                    LCQ     1,DL
         0 000145   000014 056100                    ASQ     12,,PR0

      393      712    4                     PPNO = NXTPP;

    712  0 000146   200015 235100                    LDA     NXTPP,,AUTO
         0 000147   200014 755100                    STA     PPNO,,AUTO

      394      713    4                     END;

    713  0 000150   000130 601000 0                  TNZ     s:709

      395      714    3                Q$ -> B$P.PPC(0) = 0;

    714  0 000151   200006 470500                    LDP0    Q$,,AUTO
         0 000152   000003 450100                    STZ     3,,PR0

      396      715    3                Q$ -> B$P.FLGS (0) = '0'B;

    715  0 000153   000000 220003                    LDX0    0,DU
         0 000154   000027 740100                    STX0    23,,PR0
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:97   

      397      716    3                Q$ -> B$P.HPP(0) = 0;

    716  0 000155   000002 450100                    STZ     2,,PR0

      398      717    3                Q$ -> B$P.INSTDATE(0) = 0;

    717  0 000156   000005 450100                    STZ     5,,PR0

      399      718    3                Q$ -> B$P.LIB_LNK(0) = 0;

    718  0 000157   000000 221003                    LDX1    0,DU
         0 000160   000022 741100                    STX1    18,,PR0

      400      719    3                Q$ = ADDR (B$P$ -> B$P (Q$ -> B$P.LNK (0)));

    719  0 000161   000022 236100                    LDQ     18,,PR0
         0 000162   777777 376007                    ANQ     -1,DL
         0 000163   000021 402007                    MPY     17,DL
         0 000164   000023 736000                    QLS     19
         0 000165   000000 036000 xsym               ADLQ    B$P$
         0 000166   200006 756100                    STQ     Q$,,AUTO

      401      720    3                END;                       /* END CLEAR OVERLAYS                 */

    720  0 000167   000000 116000 xsym               CMPQ    B$P$
         0 000170   000121 601000 0                  TNZ     s:706

      402      721    2           IF OLDEST_INDEX ~= 0            /* IT IS IN THE NAME TABLE            */

    721  0 000171   200011 235100                    LDA     OLDEST_INDEX,,AUTO
         0 000172   000223 600000 0                  TZE     s:732

      403      722    3           THEN DO;

      404      723    3                CALL FMR$SLIDE(ADDR(B$LOOKUP(OLDEST_INDEX)),

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:98   
    723  0 000173   200010 236100                    LDQ     HIGH_LOOKUP,,AUTO
         0 000174   200011 136100                    SBLQ    OLDEST_INDEX,,AUTO
         0 000175   200017 756100                    STQ     NXTPP+2,,AUTO
         0 000176   200011 236100                    LDQ     OLDEST_INDEX,,AUTO
         0 000177   000022 736000                    QLS     18
         0 000200   000000 036000 xsym               ADLQ    B$LOOKUP$
         0 000201   200016 756100                    STQ     NXTPP+1,,AUTO
         0 000202   200017 235100                    LDA     NXTPP+2,,AUTO
         0 000203   200020 755100                    STA     NXTPP+3,,AUTO
         0 000204   200020 630500                    EPPR0   NXTPP+3,,AUTO
         0 000205   200023 450500                    STP0    NXTPP+6,,AUTO
         0 000206   000001 236000 1                  LDQ     1
         0 000207   200022 756100                    STQ     NXTPP+5,,AUTO
         0 000210   200016 631500                    EPPR1   NXTPP+1,,AUTO
         0 000211   200021 451500                    STP1    NXTPP+4,,AUTO
         0 000212   200021 630500                    EPPR0   NXTPP+4,,AUTO
         0 000213   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000214   000000 701000 xent               TSX1    FMR$SLIDE
         0 000215   000000 011000                    NOP     0

      405      724    3                  -1,HIGH_LOOKUP - OLDEST_INDEX);
      406      725    3                B$LOOKUP (1) = B$LOOKUP (1) - 1;

    725  0 000216   000000 470400 xsym               LDP0    B$LOOKUP$
         0 000217   000001 235100                    LDA     1,,PR0
         0 000220   000001 135007                    SBLA    1,DL
         0 000221   000001 755100                    STA     1,,PR0

      407      726    3                P_MAX_LOOKUP = B$LOOKUP (1);

    726  0 000222   000000 755000 xsym               STA     P_MAX_LOOKUP

      408      727                 /* N.B.: B$LOOKUP(1) is used as the actual working copy
      409      728                          of P_MAX_LOOKUP because of bypass cache.
      410      729                          P_MAX_LOOKUP is also maintained for looking only.*/
      411      730    3                END;

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:99   
      412      731        /* RETURNS WITH GATE LOCKED */
      413      732    2           RETURN;

    732  0 000223   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000000 006000   000027 006000                                    ........
      414      733    2           END;
      415      734
      416      735    1   END JSU$SP_GETFREE;
      417      736        /**/
      418      737        %EOD;

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:100  
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$P.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure JSU$SP_GETFREE.
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:101  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @SLOT                     10-0-0/w UBIN        r     1 HIGH_LOOKUP
     4-0-0/w SBIN        r     1 I                         13-0-0/w SBIN        r     1 INIT_TIME
    15-0-0/w UBIN        r     1 NXTPP                     11-0-0/w UBIN        r     1 OLDEST_INDEX
    12-0-0/w UBIN        r     1 OLDEST_SLOT               13-0-0/w UBIN        r     1 OLDEST_TIME
     5-0-0/w PTR         r     1 P$                         7-0-0/w UBIN        r     1 PNUM
    14-0-0/w UBIN        r     1 PPNO                       6-0-0/w PTR         r     1 Q$
    *0-0-0/w UBIN        r     1 SLOT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$LOOKUP$                  0-0-0/w PTR         r     1 B$P$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/d BIT (72)    r     1 J_PLOCK
     0-0-0/w PTR         r     1 MM_BYP$                    0-0-0/w UBIN        r     1 P_AUTO_START
     0-0-0/w UBIN        r     1 P_LAST_AUTO                0-0-0/w UBIN        r     1 P_MAX_LOOKUP
     0-0-0/w UBIN        r     1 P_USED_AUTO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w UBIN        r     1 B$LOOKUP(0:0)
     0-0-0/d STRC(1224)  r     1 B$P(0:0)                   0-0-0/w STRC(576)   r     1 MM$BYP
     0-0-0/w STRC        r     1 MM$PPUT(0:0)

PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:102  

   Procedure JSU$SP_GETFREE requires 148 words for executable code.
   Procedure JSU$SP_GETFREE requires 20 words of local(AUTO) storage.
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:103  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:104  
          MINI XREF LISTING

B$LOOKUP
        58**DCL       692>>ASSIGN    694>>IF        723--CALL      725<<ASSIGN    725>>ASSIGN    726>>ASSIGN
B$LOOKUP$
        80**DCL       692>>ASSIGN    694>>IF        723>>CALL      725>>ASSIGN    725>>ASSIGN    726>>ASSIGN
B$P
        25**DCL       663--ASSIGN    719--ASSIGN
B$P.FLGS
        46**DCL       664>>IF        715<<ASSIGN
B$P.HPP
        28**DCL       706>>ASSIGN    716<<ASSIGN
B$P.INSTDATE
        31**DCL       666>>IF        675>>IF        679>>ASSIGN    717<<ASSIGN
B$P.LIB_LNK
        36**DCL       718<<ASSIGN
B$P.LNK
        37**DCL       719>>ASSIGN
B$P.PPC
        29**DCL       707>>IF        714<<ASSIGN
B$P.UC
        26**DCL       674>>IF
B$P$
        79**DCL       663>>ASSIGN    705>>DOWHILE   719>>ASSIGN
B$PPUT$
       649**DCL       709>>ASSIGN
FMR$SLIDE
       652**DCL-ENT   723--CALL
HFC$UNLOCK
       634**DCL-ENT   686--CALL
HIGH_LOOKUP
       640**DCL       692<<ASSIGN    693>>DOINDEX   698>>ASSIGN    723>>CALL
I
       636**DCL       693<<DOINDEX   694>>IF        697>>ASSIGN    698<<ASSIGN
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:105  
INIT_TIME
       644**DCL       660<<ASSIGN
J_PLOCK
       648**DCL       686<>CALL
MM$BYP.AUTOP
       494**DCL       711<<ASSIGN    711>>ASSIGN
MM$DESC.BOUND
       572**DCL       573--REDEF
MM$DESC.FLGS
       573**DCL       573--REDEF
MM$PPUT.PPNO
       561**DCL       709>>ASSIGN
MM$PPUT.USER#
       561**DCL       561--REDEF
MMB$FPP
       651**DCL-ENT   710--CALL
MM_BYP$
       492**DCL       492--IMP-PTR   711>>ASSIGN    711>>ASSIGN
NXTPP
       646**DCL       709<<ASSIGN    712>>ASSIGN
OLDEST_INDEX
       641**DCL       661<<ASSIGN    697<<ASSIGN    721>>IF        723>>CALL      723>>CALL
OLDEST_SLOT
       642**DCL       659<<ASSIGN    678<<ASSIGN    683>>IF        694>>IF        701>>ASSIGN    703>>ASSIGN
OLDEST_TIME
       643**DCL       644--REDEF     675>>IF        679<<ASSIGN
P$
       637**DCL       663<<ASSIGN    664>>IF        666>>IF        674>>IF        675>>IF        677>>ASSIGN
       679>>ASSIGN
PNUM
       639**DCL       662<<DOINDEX   663>>ASSIGN    668>>IF        669>>ASSIGN    670>>ASSIGN    678>>ASSIGN
       703<<ASSIGN
PPNO
       645**DCL       706<<ASSIGN    708>>DOWHILE   709>>ASSIGN    710<>CALL      712<<ASSIGN
P_AUTO_START
        74**DCL       662>>DOINDEX   692>>ASSIGN    693>>DOINDEX
PL6.E3A0      #007=JSU$SP_GETFREE File=JSU$UTIL.:E05TSI                          TUE 07/29/97 23:51 Page:106  
P_LAST_AUTO
        75**DCL       662>>DOINDEX
P_MAX_LOOKUP
        78**DCL       726<<ASSIGN
P_USED_AUTO
        77**DCL       668>>IF        669<<ASSIGN
Q$
       638**DCL       677<<ASSIGN    705>>DOWHILE   706>>ASSIGN    707>>IF        714>>ASSIGN    715>>ASSIGN
       716>>ASSIGN    717>>ASSIGN    718>>ASSIGN    719<<ASSIGN    719>>ASSIGN
SLOT
        15**DCL        13--PROC      670<<ASSIGN    701<<ASSIGN

PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:107  
      419        1        /*T***********************************************************/
      420        2        /*T*                                                         */
      421        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      422        4        /*T*                                                         */
      423        5        /*T***********************************************************/
      424        6        /**/
      425        7        /*F*   NAME:    JSU$WSTAR.
      426        8               PURPOSE: To write an accounting record to the *S file.
      427        9        */
      428       10
      429       11        JSU$WSTAR: PROC(ACCT_TYP);
      430       12    1   DCL ACCT_TYP UBIN BYTE;
      431       13
      432       14    1   DCL LMDCB$ PTR;
      433       15
      434       16        %INCLUDE JS_CP6;
      435      434        %INCLUDE CP_6_SUBS;
      436      974        %INCLUDE F$DCB;
      437     1023
      438     1024        %INCLUDE U$JIT_C;
      439     1523    1   DCL B$JIT$ PTR SYMREF READONLY;
      440     1524        %SUB B$JIT=B$JIT$->B$JIT;
      441     1525        %FPT_ACCT (FPTN=FPT$ACCT,STCLASS=AUTO);
      442     1541        %FPT_ACCT (STCLASS=CONSTANT,STAROUT=YES);
      443     1557
      444     1558    1   DCL M$MACCT ENTRY(1) ALTRET;
      445     1559    1   DCL SC_WSTAR ENTRY CONV(2,0);
      446     1560
      447     1561    1   DCL M$LM DCB;
      448     1562        %EJECT;
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:108  
      449     1563
      450     1564    1      FPT$ACCT = FPT_ACCT;
      451     1565    1      FPT$ACCT.V_ = VECTOR(FPT$ACCT.V);
      452     1566    1      IF (ACCT_TYP = %PSTART#) OR (ACCT_TYP = %SSTART#)
      453     1567    2      THEN DO;
      454     1568    2           LMDCB$ = DCBADDR(DCBNUM(M$LM));
      455     1569    2           FPT$ACCT.PNAME_ = VECTOR(LMDCB$->F$DCB.NAME);
      456     1570    2           IF ACCT_TYP = %SSTART#
      457     1571    2           THEN B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_SSTART#);
      458     1572    2           END;
      459     1573    1      FPT$ACCT.V.TYP# = ACCT_TYP;
      460     1574
      461     1575    1      CALL M$MACCT(FPT$ACCT)
      462     1576    2      WHENALTRETURN DO;
      463     1577    2           CALL SC_WSTAR;
      464     1578    2           END;
      465     1579        /*S*  SCREECH_CODE: JSU-S$WSTAR
      466     1580              TYPE: SNAP
      467     1581              MESSAGE: Error writing accounting records to *S.
      468     1582        */
      469     1583
      470     1584    1      RETURN;
      471     1585
      472     1586    1   END JSU$WSTAR;

PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:109  
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   JS_CP6.:E05TOU  is referenced.
      No diagnostics issued in procedure JSU$WSTAR.

   Procedure JSU$WSTAR requires 45 words for executable code.
   Procedure JSU$WSTAR requires 20 words of local(AUTO) storage.

    No errors detected in file JSU$UTIL.:E05TSI    .

PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:110  

 Object Unit name= JSU$WSTAR                                  File name= JSU$UTIL.:E05TOU
 UTS= JUL 29 '97 23:51:12.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS     13     15  JSU$WSTAR
    1   DCB   even  none     0      0  M$LM
    2   Proc  even  none    45     55  JSU$WSTAR
    3  RoData even  none     3      3  JSU$WSTAR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  JSU$WSTAR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 M$MACCT
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     SC_WSTAR                         r    B$JIT$                                M$LM
     B_VECTNIL
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:111  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
     ASLENTSID
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:112  


      419        1        /*T***********************************************************/
      420        2        /*T*                                                         */
      421        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      422        4        /*T*                                                         */
      423        5        /*T***********************************************************/
      424        6        /**/
      425        7        /*F*   NAME:    JSU$WSTAR.
      426        8               PURPOSE: To write an accounting record to the *S file.
      427        9        */
      428       10
      429       11        JSU$WSTAR: PROC(ACCT_TYP);

     11  2 000000   000000 700200 xent  JSU$WSTAR    TSX0  ! X66_AUTO_1
         2 000001   000024 000001                    ZERO    20,1

      430       12    1   DCL ACCT_TYP UBIN BYTE;
      431       13
      432       14    1   DCL LMDCB$ PTR;
      433       15
      434       16        %INCLUDE JS_CP6;
      435      434        %INCLUDE CP_6_SUBS;
      436      974        %INCLUDE F$DCB;
      437     1023
      438     1024        %INCLUDE U$JIT_C;
      439     1523    1   DCL B$JIT$ PTR SYMREF READONLY;
      440     1524        %SUB B$JIT=B$JIT$->B$JIT;
      441     1525        %FPT_ACCT (FPTN=FPT$ACCT,STCLASS=AUTO);
      442     1541        %FPT_ACCT (STCLASS=CONSTANT,STAROUT=YES);
      443     1557
      444     1558    1   DCL M$MACCT ENTRY(1) ALTRET;
      445     1559    1   DCL SC_WSTAR ENTRY CONV(2,0);
      446     1560
      447     1561    1   DCL M$LM DCB;
      448     1562        %EJECT;
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:113  
      449     1563
      450     1564    1      FPT$ACCT = FPT_ACCT;

   1564  2 000002   000100 100400                    MLR     fill='000'O
         2 000003   000000 000060 0                  ADSC9   FPT_ACCT                 cn=0,n=48
         2 000004   200006 000060                    ADSC9   FPT$ACCT,,AUTO           cn=0,n=48

      451     1565    1      FPT$ACCT.V_ = VECTOR(FPT$ACCT.V);

   1565  2 000005   000000 235000 3                  LDA     0
         2 000006   200022 452500                    STP2    FPT$ACCT+12,,AUTO
         2 000007   200022 236100                    LDQ     FPT$ACCT+12,,AUTO
         2 000010   000020 036003                    ADLQ    16,DU
         2 000011   200006 757100                    STAQ    FPT$ACCT,,AUTO

      452     1566    1      IF (ACCT_TYP = %PSTART#) OR (ACCT_TYP = %SSTART#)

   1566  2 000012   200003 470500                    LDP0    @ACCT_TYP,,AUTO
         2 000013   000000 236100                    LDQ     0,,PR0
         2 000014   777000 376003                    ANQ     -512,DU
         2 000015   001000 116003                    CMPQ    512,DU
         2 000016   000021 600000 2                  TZE     s:1568
         2 000017   003000 116003                    CMPQ    1536,DU
         2 000020   000041 601000 2                  TNZ     s:1573

      453     1567    2      THEN DO;

      454     1568    2           LMDCB$ = DCBADDR(DCBNUM(M$LM));

   1568  2 000021   000000 236007 xsym               LDQ     M$LM,DL
         2 000022   000001 471400 3                  LDP1    1
         2 000023   100000 473500                    LDP3    0,,PR1
         2 000024   300000 236106                    LDQ     0,QL,PR3
         2 000025   200004 756100                    STQ     LMDCB$,,AUTO

      455     1569    2           FPT$ACCT.PNAME_ = VECTOR(LMDCB$->F$DCB.NAME);

PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:114  
   1569  2 000026   000002 235000 3                  LDA     2
         2 000027   000010 036003                    ADLQ    8,DU
         2 000030   200014 757100                    STAQ    FPT$ACCT+6,,AUTO

      456     1570    2           IF ACCT_TYP = %SSTART#

   1570  2 000031   000000 236100                    LDQ     0,,PR0
         2 000032   777000 376003                    ANQ     -512,DU
         2 000033   003000 116003                    CMPQ    1536,DU
         2 000034   000041 601000 2                  TNZ     s:1573

      457     1571    2           THEN B$JIT.CPFLAGS1 = (B$JIT.CPFLAGS1 | %CP_SSTART#);

   1571  2 000035   000000 474400 xsym               LDP4    B$JIT$
         2 000036   400143 236100                    LDQ     99,,PR4
         2 000037   000014 276000 0                  ORQ     FPT_ACCT+12
         2 000040   400143 756100                    STQ     99,,PR4

      458     1572    2           END;

      459     1573    1      FPT$ACCT.V.TYP# = ACCT_TYP;

   1573  2 000041   000000 236100                    LDQ     0,,PR0
         2 000042   200021 552140                    STBQ    FPT$ACCT+11,'40'O,AUTO

      460     1574
      461     1575    1      CALL M$MACCT(FPT$ACCT)

   1575  2 000043   200006 631500                    EPPR1   FPT$ACCT,,AUTO
         2 000044   200022 451500                    STP1    FPT$ACCT+12,,AUTO
         2 000045   200022 630500                    EPPR0   FPT$ACCT+12,,AUTO
         2 000046   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000047   000000 701000 xent               TSX1    M$MACCT
         2 000050   000052 702000 2                  TSX2    s:1577
         2 000051   000054 710000 2                  TRA     s:1584

      462     1576    2      WHENALTRETURN DO;
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:115  

      463     1577    2           CALL SC_WSTAR;

   1577  2 000052   000000 713400 xsym               CLIMB   SC_WSTAR
         2 000053   000000 600000 xsid               climb   nvectors=         0

      464     1578    2           END;

      465     1579        /*S*  SCREECH_CODE: JSU-S$WSTAR
      466     1580              TYPE: SNAP
      467     1581              MESSAGE: Error writing accounting records to *S.
      468     1582        */
      469     1583
      470     1584    1      RETURN;

   1584  2 000054   000000 702200 xent               TSX2  ! X66_ARET

FPT_ACCT
 Sect OctLoc
   0     000   000001 777640   000012 006000   000000 177640   000000 006014    ................
   0     004   000000 177640   000000 006014   000000 177640   000000 006014    ................
   0     010   000000 177640   000000 006014   000000 000000   005400 000000    ................

(unnamed)
 Sect OctLoc
   0     014   010000 000000                                                    ....

(unnamed)
 Sect OctLoc
   3     000   000001 777640   000000 006003   000007 777640                    ............
      471     1585
      472     1586    1   END JSU$WSTAR;

PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:116  
--  Include file information  --

   B$JIT_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   JS_CP6.:E05TOU  is referenced.
      No diagnostics issued in procedure JSU$WSTAR.
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:117  

 **** Variables and constants ****

  ****  Section 000 RoData JSU$WSTAR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(432)   r     1 FPT_ACCT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @ACCT_TYP                 *0-0-0/w UBIN(9)     r     1 ACCT_TYP
     6-0-0/d STRC(432)   r     1 FPT$ACCT                   4-0-0/w PTR         r     1 LMDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0N  NULL        r     1 M$LM


   Procedure JSU$WSTAR requires 45 words for executable code.
   Procedure JSU$WSTAR requires 20 words of local(AUTO) storage.
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:118  

    No errors detected in file JSU$UTIL.:E05TSI    .
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:119  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:120  
          MINI XREF LISTING

ACCT_TYP
        12**DCL        11--PROC     1566>>IF       1566>>IF       1570>>IF       1573>>ASSIGN
B$JIT.CPFLAGS1
      1440**DCL      1571<<ASSIGN   1571>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      1445**DCL      1445--REDEF
B$JIT.ERR.MID
      1352**DCL      1352--REDEF
B$JIT$
      1523**DCL      1346--IMP-PTR  1571>>ASSIGN   1571>>ASSIGN
F$DCB.ACTPOS
      1000**DCL      1000--REDEF
F$DCB.ARS
       975**DCL       975--REDEF
F$DCB.ATTR
       993**DCL       994--REDEF
F$DCB.BORROW
      1008**DCL      1008--REDEF    1008--REDEF    1008--REDEF
F$DCB.DCBNAME.L
      1022**DCL      1022--IMP-SIZ
F$DCB.EOMCHAR
       979**DCL       979--REDEF
F$DCB.FLDID
      1003**DCL      1003--REDEF
F$DCB.FORM$
       997**DCL       997--REDEF
F$DCB.FSECT
      1013**DCL      1013--REDEF
F$DCB.FSN
       990**DCL       990--REDEF     990--REDEF     991--REDEF
F$DCB.HEADER$
       996**DCL       996--REDEF
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:121  
F$DCB.IXTNSIZE
       994**DCL       994--REDEF
F$DCB.LASTSTA$
       984**DCL       984--REDEF
F$DCB.LVL
      1009**DCL      1009--REDEF
F$DCB.NAME
       984**DCL      1569--ASSIGN
F$DCB.NAME.C
       984**DCL       984--REDEF
F$DCB.NOEOF
      1005**DCL      1005--REDEF
F$DCB.NRECS
       995**DCL       995--REDEF
F$DCB.NRECX
      1014**DCL      1014--REDEF
F$DCB.OHDR
      1006**DCL      1006--REDEF
F$DCB.ORG
       989**DCL       989--REDEF
F$DCB.PRECNO
      1012**DCL      1012--REDEF
F$DCB.RCSZ
      1017**DCL      1017--REDEF
F$DCB.RES
       985**DCL       985--REDEF
F$DCB.SETX
       997**DCL       997--REDEF
F$DCB.TAB$
       996**DCL       997--REDEF
F$DCB.TDA
      1011**DCL      1011--REDEF
F$DCB.WSN
       986**DCL       986--REDEF
FPT$ACCT
      1536**DCL      1564<<ASSIGN   1575<>CALL
PL6.E3A0      #008=JSU$WSTAR File=JSU$UTIL.:E05TSI                               TUE 07/29/97 23:51 Page:122  
FPT$ACCT.PNAME_
      1537**DCL      1569<<ASSIGN
FPT$ACCT.V
      1538**DCL      1565--ASSIGN
FPT$ACCT.V.TYP#
      1538**DCL      1573<<ASSIGN
FPT$ACCT.V_
      1536**DCL      1565<<ASSIGN
FPT_ACCT
      1552**DCL      1564>>ASSIGN
FPT_ACCT.V
      1554**DCL      1552--DCLINIT
LMDCB$
        14**DCL      1568<<ASSIGN   1569>>ASSIGN
M$LM
      1561**DCL      1568--ASSIGN
M$MACCT
      1558**DCL-ENT  1575--CALL
SC_WSTAR
      1559**DCL-ENT  1577--CALL
