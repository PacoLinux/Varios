/*M*   E - TOOL REMEMBERS LAST EDIT FILE NAME.               */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
E:      PROC MAIN;
/*  INCLUDES  */
%INCLUDE CP_6;
%INCLUDE XU_MACRO_C;
%INCLUDE XU_SUBS_C;
%INCLUDE E_C61;
%INCLUDE B$JIT;
/* ENTRYS */
DCL XUR$ERRMSG ENTRY(7) ALTRET;
/* MACROS */
%FPT_CMDVAR(FPTN=FETCH_VAR,VALUE=FID,FUN=FETCH,NAME=CNAME);
%FPT_CMDVAR(FPTN=FETCH_ED,VALUE=ED,FUN=FETCH,NAME=ENAME);
%FPT_CMDVAR(FPTN=STORE_VAR,VALUE=FID,FUN=STORE,NAME=CNAME);
%FPT_CMDVAR(FPTN=STORE_ED,VALUE=ED,FUN=STORE,NAME=ENAME);
%FPT_ERRMSG(FPTN=D_ERR,STCLASS=STATIC,BUF=WORK_SPACE,OUTDCB1=M$DO);
%FPT_LINK(FPTN=LINK_EDIT,CP_CMD=CALLTO);
%P_PCB(R=EDT,W=WORK_SPACE,WSZ=1024);
%VLP_NAME(FPTN=FID,LEN=49);
%VLP_NAME(FPTN=ED,LEN=49);
%VLP_NAME(FPTN=EDIT);
%VLP_NAME(FPTN=CALLTO,LEN=256);
%VLP_NAME(FPTN=CNAME,NAME='FILENAME');
%VLP_NAME(FPTN=ENAME,NAME='EDITOR');
%PARSE$OUT(STCLASS=BASED);
%PARSE$SYM(STCLASS=BASED);
%B$TCB;
%B$ALT;
/*DCL*/
DCL CODE# SBIN;
DCL EDT UBIN SYMREF;
DCL B$TCB$ PTR SYMREF;
DCL M$DO DCB;
DCL B$JIT$ PTR SYMREF;
DCL X$PARSE ENTRY(1) ALTRET;
DCL CCBUFFER CHAR(256) STATIC;
DCL N UBIN(9) STATIC;
DCL WORK_SPACE(0:1023)UBIN WORD STATIC;
DCL FILENAME CHAR(49) STATIC;
DCL J SBIN;
DCL 1 ERRCODE ALIGNED,
     2 FCG BIT(12),
     2 MODID BIT(6),
     2 MON BIT(1),
     2 CODE UBIN(14) UNAL,
     2 SEV UBIN(3) UNAL;
/*******************************
********************************
*******************************/
    P_PCB.TEXT$=ADDR(B$JIT.CCBUF);
    P_PCB.NCHARS=B$JIT.CCARS;
      CALL X$PARSE(P_PCB)
      WHENALTRETURN DO;
         D_ERR.CODE_=VECTOR(P_PCB.ERROR);
         CALL M$ERRMSG(D_ERR);
         CALL M$ERR;
      END;
    CCBUFFER=' ';
      IF (B$JIT.CCARS - B$JIT.CCDISP) = 0     /* IF NO OPTION GIVEN */
      THEN DO;
        CALL M$CMDVAR(FETCH_ED) WHENRETURN DO;
            EDIT.NAME# = ED.NAME#;
            EDIT.L# = ED.L#;
          END;
          WHENALTRETURN DO;
            ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
            CALL XUR$ERRMSG(ERRCODE);
            EDIT.NAME# = 'EDIT';
            EDIT.L# = 4;
          END;
          CALL INSERT(CCBUFFER,0,256,EDIT.NAME#);
          J=EDIT.L#;
          IF P_PCB.OUT$->OUT$BLK.NSUBLKS = 1   /* IF NO FID GIVEN */
          THEN DO;
            CALL M$CMDVAR(FETCH_VAR);
          END;
          ELSE DO;     /* FID GIVEN */
            FID.L# = P_PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$SYM.COUNT;
            FID.NAME# = P_PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$SYM.TEXT;
              CALL M$CMDVAR(STORE_VAR);
           END;
      END;    /* END IF NO OPTION GIVEN */
      ELSE DO;     /* OPTION GIVEN */
        IF P_PCB.OUT$->OUT$BLK.NSUBLKS = 2   /* NO FID GIVEN */
        THEN DO;
          CODE#=P_PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$BLK.CODE;
          DO CASE(CODE#);
            CASE(%EDIT);
              EDIT.NAME#='EDIT';
              EDIT.L#=4;
 
             CASE(%SIXEDIT);
               EDIT.NAME#='6EDIT';
               EDIT.L#=5;
          END;
          ED.NAME# = EDIT.NAME#;     /* save editor for stores */
          ED.L# = EDIT.L#;
          CALL M$CMDVAR(STORE_ED);   /* store editor given */
          CALL INSERT(CCBUFFER,0,256,EDIT.NAME#);
          J = EDIT.L#;
            CALL M$CMDVAR(FETCH_VAR)     /* fetch fid */
              WHENALTRETURN DO;          /* if no fid found */
                ERRCODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
                CALL XUR$ERRMSG(ERRCODE);
                CALL M$EXIT;
              END;     /* whenaltreturn */
        END;    /* NO FID GIVEN */
        ELSE DO;      /* FID GIVEN */
          CODE#=P_PCB.OUT$->OUT$BLK.SUBLK$(2)->OUT$BLK.CODE;
          DO CASE(CODE#);
            CASE(%EDIT);
              EDIT.NAME#='EDIT';
              EDIT.L#=4;
            CASE(%SIXEDIT);
              EDIT.NAME#='6EDIT';
              EDIT.L#=5;
          END;
          ED.NAME# = EDIT.NAME#;    /* save editor for stores */
          ED.L# = EDIT.L#;
          CALL M$CMDVAR(STORE_ED);  /* store editor */
          CALL INSERT(CCBUFFER,0,256,EDIT.NAME#);
          J = EDIT.L#;
            FID.L# = P_PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$SYM.COUNT;
            FID.NAME# = P_PCB.OUT$->OUT$BLK.SUBLK$(1)->OUT$SYM.TEXT;
              CALL M$CMDVAR(STORE_VAR);
        END;    /* FID GIVEN */
      END;   /* OPTION GIVEN */
      FILENAME = FID.NAME#;
      N = FID.L#;
        CALL INSERT(CCBUFFER,J+1,256-(J+1),FILENAME);
          CALLTO.L# = N+(J+1);
          CALLTO.NAME# = CCBUFFER;
      CALL M$LINK(LINK_EDIT);    /* LINK TO EDITOR */
      CALL M$EXIT;
END E;
