
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:1    
        1        1        /*M*     ZIG$DDS1      I-D-S/II       DBACS DIRECTIVE PARSER. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$DDS1           ZIG$DDS1
        9        9        PURPOSE: TO PARSE THE DBACS DIRECTIVE AND SET SWITCHES
       10       10            ACCORDING TO WHICH DIRECTIVE WAS GIVEN AND WHAT OPTIONS
       11       11            WERE USED.
       12       12        */
       13       13        ZIG$DDS1:
       14       14            PROC ;
       15       15    1   DCL LIST_STRING CHAR (128) EXT;
       16       16    1   DCL DBASE2(0:4159) UBIN (36) AUTO;
       17       17    1   DCL ONLINE BIT (1) EXT;
       18       18    1   DCL LAST_COUNT UBIN (36) SYMREF;
       19       19    1   DCL NUM_CHAR_READ UBIN (36) EXT;
       20       20    1   DCL X$PARSE ENTRY(1) ALTRET;
       21       21    1   DCL DBACS UBIN(36) SYMREF; /* Root of the syntax tree. */
       22       22    1   DCL COMPRD ENTRY;
       23       23    1   DCL ABORT ENTRY;
       24       24    1   DCL LINE CHAR (4000) EXT;
       25       25    1   DCL EOFFLG UBIN (36) EXT;
       26       26    1   DCL NCS UBIN (36) EXT;
       27       27        /*       If we didn't use this record then don't read another */
       28       28    1   DCL UNWIND_VAL BIT (72) STATIC SYMDEF;
       29       29    1   DCL STATUS UBIN (36) EXT;
       30       30    1   DCL B$JIT$ PTR SYMREF;
       31       31         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:2    
       32       32    1   DCL ZIG$DDS2 ENTRY; /* Reader */
       33       33    1   DCL ZIG$DDS3 ENTRY(1); /*  Read resword or syntax error */
       34       34    1   DCL ZIG$DDS4 ENTRY (1); /* Set flags for dbacs directive */
       35       35    1   DCL LIST ENTRY (1);
       36       36    1   DCL ZIG$DDER ENTRY (1); /* Put out error */
       37       37    1   DCL LINE_COUNT UBIN (36) EXT;
       38       38    1   DCL NEW_LINE BIT (1) EXT INIT ('1'B);
       39       39         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:3    
       40       40         %INCLUDE XU_MACRO_C;
       41     3146        %INCLUDE ZI_ERRORS_SUBS;
       42     3666         %INCLUDE B$JIT;
       43     3956         %P_PCB(NAME = PCB_DBACS,T = LINE, R = DBACS,
       44     3957         WSZ=2048, U$ = ZIG$DDS3,STCLASS =
       45     3958         "STATIC SYMDEF",C_LD='/*',C_TL='*/',C=YES);
       46     4157         %PARSE$OUT(NAME=OUT$BLK,
       47     4158         STCLASS = BASED);
       48     4203         %PARSE$SYM(NAME=SYM$BLK,
       49     4204         STCLASS = BASED);
       50     4242         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:4    
       51     4243        /*******
       52     4244            Here starts the program.
       53     4245        *******/
       54     4246    1   START_PARSE: STATUS = 1;
       55     4247        /******
       56     4248                 Set status to indicate that we don't have a correct
       57     4249                 dbacs directive jet.
       58     4250        *******/
       59     4251    1       REMEMBER SYNTAX_ERROR IN UNWIND_VAL;
       60     4252    1       PCB_DBACS.WORK$=ADDR(DBASE2);
       61     4253    1       CALL X$PARSE(PCB_DBACS) ALTRET(PARSE_ERROR);/* Call syntax parser */
       62     4254    1       CALL ZIG$DDS4(PCB_DBACS.OUT$ -> OUT$BLK);/* Set flags for dbacs directive */
       63     4255    1       STATUS = 0;
       64     4256        /*********
       65     4257                 The syntax is correct so set status to 0 and return
       66     4258        *********/
       67     4259    1       RETURN;
       68     4260         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:5    
       69     4261        /*
       70     4262            Handle the internal parsing errors.
       71     4263        */
       72     4264    1   PARSE_ERROR:
       73     4265    1       LIST_STRING = '  ';CALL LIST (LIST_STRING);
       74     4266    2       DO CASE (PCB_DBACS.ERROR.CODE);
       75     4267    2       CASE (E$SYNERR,E$NULLROOT,E$BADNODE,E$WKOVERFLOW,
       76     4268    2          E$SMALLWORK,E$NULLU$$);
       77     4269    2           CALL ZIG$DDER (PCB_DBACS.ERROR.CODE);/* Put out error */
       78     4270    2       CASE (ELSE);
       79     4271    2           CALL ZIG$DDER (E$UNKN_ERR); /* Put out error */
       80     4272    2           END;
       81     4273    1       CALL ABORT;
       82     4274        /*                                                        */
       83     4275        /*E*     ERROR:    ZIG-E$SYNERR-C
       84     4276                 MESSAGE:  Syntax error.
       85     4277        */
       86     4278        /*E*     ERROR:    ZIG-E$NULLROOT-C
       87     4279                 MESSAGE:  Missing tree.
       88     4280        */
       89     4281        /*E*     ERROR:    ZIG-E$BADNODE-C
       90     4282                 MESSAGE:  Illegal node.
       91     4283        */
       92     4284        /*E*     ERROR:    ZIG-E$WKOVERFLOW-C
       93     4285                 MESSAGE:  Workspace overflow.
       94     4286        */
       95     4287        /*E*     ERROR:    ZIG-E$SMALLWORK-C
       96     4288                 MESSAGE:  Insufficient work area.
       97     4289        */
       98     4290        /*E*     ERROR:    ZIG-E$NULLU$$-C
       99     4291                 MESSAGE:  Missing U$$ routine.
      100     4292        */
      101     4293        /*E*     ERROR:    ZIG-E$UNKN_ERR-C
      102     4294                 MESSAGE:  Unknown error from X$PARSE.
      103     4295        */
      104     4296         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:6    
      105     4297        /*******
      106     4298                 The directive had a syntax error so
      107     4299                 if the user is online then let him retype the last
      108     4300                 line and restart the syntax checking else return to exec.
      109     4301        ******/
      110     4302    1   SYNTAX_ERROR:
      111     4303    1       IF ONLINE & EOFFLG = 0
      112     4304    2       THEN DO;
      113     4305    2           LIST_STRING = 'INPUT LAST LINE AGAIN (RETURN = START NEW DIRECTIVE)';
      114     4306    2           CALL LIST (LIST_STRING);
      115     4307    2           PCB_DBACS.NCHARS=LAST_COUNT;
      116     4308    2           NEW_LINE = '0'B; /* TELL S2 THAT THIS IS A OLD LINE */
      117     4309    2           CALL ZIG$DDS2; /* Reader */
      118     4310    2           NEW_LINE = '1'B; /* RESET THINGS */
      119     4311    2           IF NUM_CHAR_READ <= 1
      120     4312    2           THEN RETURN;
      121     4313    2           GOTO START_PARSE;
      122     4314    2           END;
      123     4315    1       ELSE RETURN;
      124     4316    1   END ZIG$DDS1;

PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:7    
--  Include file information  --

   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   XU_MACRO_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$DDS1.

   Procedure ZIG$DDS1 requires 82 words for executable code.
   Procedure ZIG$DDS1 requires 4166 words of local(AUTO) storage.

    No errors detected in file ZIG$DDS1.:ZIC0TSI    .

PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:8    

 Object Unit name= ZIG$DDS1                                   File name= ZIG$DDS1.:ZIC0TOU
 UTS= SEP 05 '97 11:47:54.92 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  LblCom even  none    32     40  LIST_STRING
    1  LblCom even  none     1      1  ONLINE
    2  LblCom even  none     1      1  NUM_CHAR_READ
    3  LblCom even  none  1000   1750  LINE
    4  LblCom even  none     1      1  EOFFLG
    5  LblCom even  none     1      1  NCS
    6   Data  even  none    16     20  ZIG$DDS1
    7  LblCom even  none     1      1  STATUS
    8  LblCom even  none     1      1  LINE_COUNT
    9  LblCom even  none     1      1  NEW_LINE
   10  RoData even  UTS     14     16  ZIG$DDS1
   11   Proc  even  none    82    122  ZIG$DDS1
   12  RoData even  none     7      7  ZIG$DDS1

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    11      0   yes            yes      Std        0  ZIG$DDS1

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    6      0  UNWIND_VAL                         6      2  PCB_DBACS
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:9    

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 ZIG$DDS3
 yes     yes           Std       1 X$PARSE
         yes           Std       1 ZIG$DDS4
         yes           Std       1 LIST
         yes           Std       1 ZIG$DDER
         yes           Std       0 ABORT
         yes           Std       0 ZIG$DDS2
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     LAST_COUNT                            DBACS                                 B$JIT$

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:10   


        1        1        /*M*     ZIG$DDS1      I-D-S/II       DBACS DIRECTIVE PARSER. */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME:    ZIG$DDS1           ZIG$DDS1
        9        9        PURPOSE: TO PARSE THE DBACS DIRECTIVE AND SET SWITCHES
       10       10            ACCORDING TO WHICH DIRECTIVE WAS GIVEN AND WHAT OPTIONS
       11       11            WERE USED.
       12       12        */
       13       13        ZIG$DDS1:
       14       14            PROC ;

     14 11 000000   000000 700200 xent  ZIG$DDS1     TSX0  ! X66_AUTO_0
        11 000001   010106 000000                    ZERO    4166,0

       15       15    1   DCL LIST_STRING CHAR (128) EXT;
       16       16    1   DCL DBASE2(0:4159) UBIN (36) AUTO;
       17       17    1   DCL ONLINE BIT (1) EXT;
       18       18    1   DCL LAST_COUNT UBIN (36) SYMREF;
       19       19    1   DCL NUM_CHAR_READ UBIN (36) EXT;
       20       20    1   DCL X$PARSE ENTRY(1) ALTRET;
       21       21    1   DCL DBACS UBIN(36) SYMREF; /* Root of the syntax tree. */
       22       22    1   DCL COMPRD ENTRY;
       23       23    1   DCL ABORT ENTRY;
       24       24    1   DCL LINE CHAR (4000) EXT;
       25       25    1   DCL EOFFLG UBIN (36) EXT;
       26       26    1   DCL NCS UBIN (36) EXT;
       27       27        /*       If we didn't use this record then don't read another */
       28       28    1   DCL UNWIND_VAL BIT (72) STATIC SYMDEF;
       29       29    1   DCL STATUS UBIN (36) EXT;
       30       30    1   DCL B$JIT$ PTR SYMREF;
       31       31         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:11   
       32       32    1   DCL ZIG$DDS2 ENTRY; /* Reader */
       33       33    1   DCL ZIG$DDS3 ENTRY(1); /*  Read resword or syntax error */
       34       34    1   DCL ZIG$DDS4 ENTRY (1); /* Set flags for dbacs directive */
       35       35    1   DCL LIST ENTRY (1);
       36       36    1   DCL ZIG$DDER ENTRY (1); /* Put out error */
       37       37    1   DCL LINE_COUNT UBIN (36) EXT;
       38       38    1   DCL NEW_LINE BIT (1) EXT INIT ('1'B);
       39       39         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:12   
       40       40         %INCLUDE XU_MACRO_C;
       41     3146        %INCLUDE ZI_ERRORS_SUBS;
       42     3666         %INCLUDE B$JIT;
       43     3956         %P_PCB(NAME = PCB_DBACS,T = LINE, R = DBACS,
       44     3957         WSZ=2048, U$ = ZIG$DDS3,STCLASS =
       45     3958         "STATIC SYMDEF",C_LD='/*',C_TL='*/',C=YES);
       46     4157         %PARSE$OUT(NAME=OUT$BLK,
       47     4158         STCLASS = BASED);
       48     4203         %PARSE$SYM(NAME=SYM$BLK,
       49     4204         STCLASS = BASED);
       50     4242         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:13   
       51     4243        /*******
       52     4244            Here starts the program.
       53     4245        *******/
       54     4246    1   START_PARSE: STATUS = 1;

   4246 11 000002   000001 235007       START_PARSE  LDA     1,DL
        11 000003   000000 755000 7                  STA     STATUS

       55     4247        /******
       56     4248                 Set status to indicate that we don't have a correct
       57     4249                 dbacs directive jet.
       58     4250        *******/
       59     4251    1       REMEMBER SYNTAX_ERROR IN UNWIND_VAL;

   4251 11 000004   000063 635000 11                 EAA     SYNTAX_ERROR
        11 000005   000000 452400 6                  STP2    UNWIND_VAL
        11 000006   000001 755000 6                  STA     UNWIND_VAL+1

       60     4252    1       PCB_DBACS.WORK$=ADDR(DBASE2);

   4252 11 000007   200003 630500                    EPPR0   DBASE2,,AUTO
        11 000010   000004 450400 6                  STP0    PCB_DBACS+2

       61     4253    1       CALL X$PARSE(PCB_DBACS) ALTRET(PARSE_ERROR);/* Call syntax parser */

   4253 11 000011   000001 630400 12                 EPPR0   1
        11 000012   000000 631400 12                 EPPR1   0
        11 000013   000000 701000 xent               TSX1    X$PARSE
        11 000014   000023 702000 11                 TSX2    PARSE_ERROR

       62     4254    1       CALL ZIG$DDS4(PCB_DBACS.OUT$ -> OUT$BLK);/* Set flags for dbacs directive */

   4254 11 000015   000005 630400 6                  EPPR0   PCB_DBACS+3
        11 000016   000000 631400 12                 EPPR1   0
        11 000017   000000 701000 xent               TSX1    ZIG$DDS4
        11 000020   000000 011000                    NOP     0

PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:14   
       63     4255    1       STATUS = 0;

   4255 11 000021   000000 450000 7                  STZ     STATUS

       64     4256        /*********
       65     4257                 The syntax is correct so set status to 0 and return
       66     4258        *********/
       67     4259    1       RETURN;

   4259 11 000022   000000 702200 xent               TSX2  ! X66_ARET

       68     4260         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:15   
       69     4261        /*
       70     4262            Handle the internal parsing errors.
       71     4263        */
       72     4264    1   PARSE_ERROR:
       73     4265    1       LIST_STRING = '  ';CALL LIST (LIST_STRING);

   4265 11 000023   040000 100400       PARSE_ERROR  MLR     fill='040'O
        11 000024   000000 000002 10                 ADSC9   0                        cn=0,n=2
        11 000025   000000 000200 0                  ADSC9   LIST_STRING              cn=0,n=128

   4265 11 000026   000002 630400 12                 EPPR0   2
        11 000027   000000 631400 12                 EPPR1   0
        11 000030   000000 701000 xent               TSX1    LIST
        11 000031   000000 011000                    NOP     0

       74     4266    2       DO CASE (PCB_DBACS.ERROR.CODE);

   4266 11 000032   000010 236000 6                  LDQ     PCB_DBACS+6
        11 000033   000003 772000                    QRL     3
        11 000034   037777 376007                    ANQ     16383,DL
        11 000035   000007 116007                    CMPQ    7,DL
        11 000036   000040 602006 11                 TNC     s:4266+6,QL
        11 000037   000054 710000 11                 TRA     s:4271
        11 000040   000054 710000 11                 TRA     s:4271
        11 000041   000047 710000 11                 TRA     s:4269
        11 000042   000047 710000 11                 TRA     s:4269
        11 000043   000047 710000 11                 TRA     s:4269
        11 000044   000047 710000 11                 TRA     s:4269
        11 000045   000047 710000 11                 TRA     s:4269
        11 000046   000047 710000 11                 TRA     s:4269

       75     4267    2       CASE (E$SYNERR,E$NULLROOT,E$BADNODE,E$WKOVERFLOW,

       76     4268    2          E$SMALLWORK,E$NULLU$$);
       77     4269    2           CALL ZIG$DDER (PCB_DBACS.ERROR.CODE);/* Put out error */

   4269 11 000047   000003 630400 12                 EPPR0   3
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:16   
        11 000050   000000 631400 12                 EPPR1   0
        11 000051   000000 701000 xent               TSX1    ZIG$DDER
        11 000052   000000 011000                    NOP     0
        11 000053   000060 710000 11                 TRA     s:4273

       78     4270    2       CASE (ELSE);

       79     4271    2           CALL ZIG$DDER (E$UNKN_ERR); /* Put out error */

   4271 11 000054   000005 630400 12                 EPPR0   5
        11 000055   000000 631400 12                 EPPR1   0
        11 000056   000000 701000 xent               TSX1    ZIG$DDER
        11 000057   000000 011000                    NOP     0

       80     4272    2           END;

       81     4273    1       CALL ABORT;

   4273 11 000060   000006 631400 12                 EPPR1   6
        11 000061   000000 701000 xent               TSX1    ABORT
        11 000062   000000 011000                    NOP     0

       82     4274        /*                                                        */
       83     4275        /*E*     ERROR:    ZIG-E$SYNERR-C
       84     4276                 MESSAGE:  Syntax error.
       85     4277        */
       86     4278        /*E*     ERROR:    ZIG-E$NULLROOT-C
       87     4279                 MESSAGE:  Missing tree.
       88     4280        */
       89     4281        /*E*     ERROR:    ZIG-E$BADNODE-C
       90     4282                 MESSAGE:  Illegal node.
       91     4283        */
       92     4284        /*E*     ERROR:    ZIG-E$WKOVERFLOW-C
       93     4285                 MESSAGE:  Workspace overflow.
       94     4286        */
       95     4287        /*E*     ERROR:    ZIG-E$SMALLWORK-C
       96     4288                 MESSAGE:  Insufficient work area.
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:17   
       97     4289        */
       98     4290        /*E*     ERROR:    ZIG-E$NULLU$$-C
       99     4291                 MESSAGE:  Missing U$$ routine.
      100     4292        */
      101     4293        /*E*     ERROR:    ZIG-E$UNKN_ERR-C
      102     4294                 MESSAGE:  Unknown error from X$PARSE.
      103     4295        */
      104     4296         %EJECT;
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:18   
      105     4297        /*******
      106     4298                 The directive had a syntax error so
      107     4299                 if the user is online then let him retype the last
      108     4300                 line and restart the syntax checking else return to exec.
      109     4301        ******/
      110     4302    1   SYNTAX_ERROR:
      111     4303    1       IF ONLINE & EOFFLG = 0

   4303 11 000063   400000 220003       SYNTAX_ERROR LDX0    -131072,DU
        11 000064   000000 235000 4                  LDA     EOFFLG
        11 000065   000067 600000 11                 TZE     SYNTAX_ERROR+4
        11 000066   000000 220003                    LDX0    0,DU
        11 000067   000000 236000 1                  LDQ     ONLINE
        11 000070   400000 376003                    ANQ     -131072,DU
        11 000071   210104 756100                    STQ     DBASE2+4161,,AUTO
        11 000072   000000 636010                    EAQ     0,X0
        11 000073   210104 376100                    ANQ     DBASE2+4161,,AUTO
        11 000074   000121 600000 11                 TZE     s:4315

      112     4304    2       THEN DO;

      113     4305    2           LIST_STRING = 'INPUT LAST LINE AGAIN (RETURN = START NEW DIRECTIVE)';

   4305 11 000075   040000 100400                    MLR     fill='040'O
        11 000076   000001 000064 10                 ADSC9   1                        cn=0,n=52
        11 000077   000000 000200 0                  ADSC9   LIST_STRING              cn=0,n=128

      114     4306    2           CALL LIST (LIST_STRING);

   4306 11 000100   000002 630400 12                 EPPR0   2
        11 000101   000000 631400 12                 EPPR1   0
        11 000102   000000 701000 xent               TSX1    LIST
        11 000103   000000 011000                    NOP     0

      115     4307    2           PCB_DBACS.NCHARS=LAST_COUNT;

   4307 11 000104   000000 235000 xsym               LDA     LAST_COUNT
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:19   
        11 000105   000013 755000 6                  STA     PCB_DBACS+9

      116     4308    2           NEW_LINE = '0'B; /* TELL S2 THAT THIS IS A OLD LINE */

   4308 11 000106   000000 450000 9                  STZ     NEW_LINE

      117     4309    2           CALL ZIG$DDS2; /* Reader */

   4309 11 000107   000006 631400 12                 EPPR1   6
        11 000110   000000 701000 xent               TSX1    ZIG$DDS2
        11 000111   000000 011000                    NOP     0

      118     4310    2           NEW_LINE = '1'B; /* RESET THINGS */

   4310 11 000112   400000 236003                    LDQ     -131072,DU
        11 000113   000000 756000 9                  STQ     NEW_LINE

      119     4311    2           IF NUM_CHAR_READ <= 1

   4311 11 000114   000000 235000 2                  LDA     NUM_CHAR_READ
        11 000115   000002 115007                    CMPA    2,DL
        11 000116   000120 603000 11                 TRC     s:4313

      120     4312    2           THEN RETURN;

   4312 11 000117   000000 702200 xent               TSX2  ! X66_ARET

      121     4313    2           GOTO START_PARSE;

   4313 11 000120   000002 710000 11                 TRA     START_PARSE

      122     4314    2           END;
      123     4315    1       ELSE RETURN;

   4315 11 000121   000000 702200 xent               TSX2  ! X66_ARET

LIST_STRING
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:20   
 Sect OctLoc
   0     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

LINE
 Sect OctLoc
   3     000   ****** ******   ****** ******   ****** ******   ****** ******    ................

PCB_DBACS
 Sect OctLoc
   6     002   000000 006000   000000 006000   000000 006014   000000 006014    ................
   6     006   000000 000000   004000 600000   000000 000000   057052 052057    ............/**/
   6     012   000000 040000   000000 000000   000000 000000   000000 006014    .. .............
   6     016   000000 006014   000000 000000                                    ........

NEW_LINE
 Sect OctLoc
   9     000   4***** ******                                                    ....

(unnamed)
 Sect OctLoc
  10     000   040040 040040   111116 120125   124040 114101   123124 040114        INPUT LAST L
  10     004   111116 105040   101107 101111   116040 050122   105124 125122    INE AGAIN (RETUR
  10     010   116040 075040   123124 101122   124040 116105   127040 104111    N = START NEW DI
  10     014   122105 103124   111126 105051                                    RECTIVE)

(unnamed)
 Sect OctLoc
  12     000   000001 000000   000002 006000   000000 006000   000010 416000    ................
  12     004   000000 023416   000004 006000   000000 000000                    ............
      124     4316    1   END ZIG$DDS1;

PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:21   
--  Include file information  --

   B$JIT.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   XU_MACRO_C.:LIB_E05  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ZIG$DDS1.

   Procedure ZIG$DDS1 requires 82 words for executable code.
   Procedure ZIG$DDS1 requires 4166 words of local(AUTO) storage.

    No errors detected in file ZIG$DDS1.:ZIC0TSI    .
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:22   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:23   
          MINI XREF LISTING

ABORT
        23**DCL-ENT  4273--CALL
B$JIT.CPFLAGS1.SLEAZE
      3774**DCL      3774--REDEF
B$JIT.ERR.MID
      3681**DCL      3681--REDEF
B$JIT.JRESPEAK
      3842**DCL      3843--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      3951**DCL      3951--REDEF    3952--REDEF
B$JIT.PNR
      3855**DCL      3855--REDEF
B$JIT.TSLINE
      3949**DCL      3950--REDEF
B$JIT$
        30**DCL      3675--IMP-PTR
DBACS
        21**DCL      3981--DCLINIT
DBASE2
        16**DCL      4252--ASSIGN
EOFFLG
        25**DCL      4303>>IF
LAST_COUNT
        18**DCL      4307>>ASSIGN
LINE
        24**DCL      3977--DCLINIT
LIST
        35**DCL-ENT  4265--CALL     4306--CALL
LIST_STRING
        15**DCL      4265<<ASSIGN   4265<>CALL     4305<<ASSIGN   4306<>CALL
NEW_LINE
        38**DCL      4308<<ASSIGN   4310<<ASSIGN
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:24   
NUM_CHAR_READ
        19**DCL      4311>>IF
ONLINE
        17**DCL      4303>>IF
OUT$BLK
      4164**DCL      4254<>CALL
PARSE_ERROR
      4265**LABEL    4253--CALLALT
PCB_DBACS
      3976**DCL      4253<>CALL
PCB_DBACS.ERROR.CODE
      4088**DCL      4266>>DOCASE   4269<>CALL
PCB_DBACS.NCHARS
      4123**DCL      4307<<ASSIGN
PCB_DBACS.OUT$
      3989**DCL      4254>>CALL
PCB_DBACS.WORK$
      3985**DCL      4252<<ASSIGN
START_PARSE
      4246**LABEL    4313--GOTO
STATUS
        29**DCL      4246<<ASSIGN   4255<<ASSIGN
SYM$BLK.COUNT
      4234**DCL      4237--IMP-SIZ
SYNTAX_ERROR
      4303**LABEL    4251--REMEMBR
UNWIND_VAL
        28**DCL      4251<<REMEMBR
X$PARSE
        20**DCL-ENT  4253--CALL
ZIG$DDER
        36**DCL-ENT  4269--CALL     4271--CALL
ZIG$DDS2
        32**DCL-ENT  4309--CALL
ZIG$DDS3
        33**DCL-ENT  3994--DCLINIT
PL6.E3A0      #001=ZIG$DDS1 File=ZIG$DDS1.:ZIC0TSI                               FRI 09/05/97 11:47 Page:25   
ZIG$DDS4
        34**DCL-ENT  4254--CALL
