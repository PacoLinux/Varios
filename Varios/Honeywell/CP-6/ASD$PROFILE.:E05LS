VERSION E05

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:1    
        1        1        /*M*  ASD$PROFILE -- PROCS. TO HANDLE PROFILE FOR SUPER.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9
       10       10        ASD$PROFILE: PROC ;
       11       11
       12       12        %SET LISTSUB = '1'B ;
       13       13        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:2    
       14       14        /********************************************************************/
       15       15        /*   Include files   include files   include files   include files   */
       16       16        /*********************************************************************/
       17       17
       18       18        %INCLUDE           AS_ENTRIES_M ;
       19     1068        %INCLUDE           AS_SUPER_C ;
       20     1503        %INCLUDE           AS_SUBS_C ;
       21     2917        %INCLUDE           AS_MAC_C ;
       22     2997        %INCLUDE           AS_SSUBS_C ;
       23     3089        %INCLUDE           CP_6 ;
       24     3170        %INCLUDE           CP_6_SUBS ;
       25     3710        %INCLUDE           KV_PRMID_E ;
       26     3884        %INCLUDE           AS_PERR_C ;
       27     4486        %INCLUDE           B_ERRORS_C ;
       28     5613        %INCLUDE           B$TABLES_C;   /* For pname xlations */
       29     5721             %B$XL_UPPER_UR;
       30     5725        %INCLUDE           AS_FUNKEY_DEFS_C;
       31     5830             %AS_FUNKEY_DEFS;
       32     5846        %INCLUDE           KV$INPFNC;
       33     6405        %INCLUDE           KL_SUPER_C ;
       34     9307        %INCLUDE           XU_MACRO_C ;
       35    12413        %INCLUDE           XU_FORMAT_C ;
       36    12575        %INCLUDE           XG_PROFILE_C ;
       37    13129        %INCLUDE           XG_SUBS_C ;
       38    13623        %INCLUDE           AS_SUPER_R ;
       39    16639        %KV_INPFNCKEY_E;
       40    16901        %KV_INPFNC_E;
       41    16915
       42    16916
       43    16917        /********************************************************************/
       44    16918        /*   Symref data     symref data     symref data     symref data     */
       45    16919        /*********************************************************************/
       46    16920
       47    16921
       48    16922        /********************************************************************/
       49    16923        /*   Static data     static data     static data     static data     */
       50    16924        /*********************************************************************/
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:3    
       51    16925
       52    16926    1   DCL MORE BIT(1) STATIC ;
       53    16927    1   DCL YES_NO_FLG BIT(2) STATIC ;
       54    16928    1   DCL YES_NO BIT(1) STATIC ;
       55    16929    1   DCL P_TYPE UBIN WORD STATIC;
       56    16930        %KL_PHDR (  NAME = PRO_HDR ,
       57    16931                    STCLASS = STATIC ) ;
       58    16972    1   DCL PRO_BUF CHAR(1024 /* AS_PRO_BUF_SIZEC */) BASED (DSEG1$);
       59    16973    1   DCL 1 PRO_KEY ALIGNED STATIC ,
       60    16974    1          2 CNT UBIN BYTE UNAL INIT(0) ,
       61    16975    1          2 TEXT CHAR(11) UNAL INIT(' ') ;
       62    16976    1   DCL 1 PRO_KEY_OLD ALIGNED STATIC ,
       63    16977    1          2 CNT UBIN BYTE UNAL INIT(0) ,
       64    16978    1          2 TEXT CHAR(11) UNAL INIT(' ') ;
       65    16979    1   DCL GRA_BUF CHAR(1024 /* AS_PRO_BUF_SIZEC */) BASED (DSEG2$);
       66    16980    1   DCL 1 GRA_KEY_OLD ALIGNED STATIC ,
       67    16981    1          2 CNT UBIN BYTE UNAL INIT(11) ,
       68    16982    1          2 TEXT CHAR(11) UNAL INIT('GRAPHICFILE') ;
       69    16983    1   DCL GRA$ PTR STATIC INIT ( ADDR(NIL) ) ;
       70    16984    1   DCL PHDR$ PTR STATIC INIT( ADDR(NIL) ) ;
       71    16985    1   DCL TCTL$ PTR STATIC INIT( ADDR(NIL) ) ;
       72    16986    1   DCL TATR$ PTR STATIC INIT( ADDR(NIL) ) ;
       73    16987    1   DCL PLTN$ PTR STATIC INIT( ADDR(NIL) ) ;
       74    16988    1   DCL DTABS$ PTR STATIC INIT( ADDR(NIL) ) ;
       75    16989    1   DCL TCCHR$ PTR STATIC INIT( ADDR(NIL) ) ;
       76    16990    1   DCL FUNKEY$ PTR STATIC INIT( ADDR(NIL) ) ;
       77    16991    1   DCL SETUP_CHR$ PTR STATIC INIT( ADDR(NIL) ) ;
       78    16992    1   DCL TRMD$ PTR STATIC INIT( ADDR(NIL) ) ;
       79    16993    1   DCL PNM$ PTR STATIC INIT( ADDR(NIL) ) ;
       80    16994    1   DCL LINK$ PTR STATIC INIT( ADDR(NIL) ) ;
       81    16995    1   DCL VIRCIR$ PTR STATIC INIT( ADDR(NIL) ) ;
       82    16996    1   DCL T3270$ PTR STATIC INIT(ADDR(NIL));
       83    16997    1   DCL ABSGRPRND$(0:7) PTR STATIC INIT( ADDR(NIL)*0 );
       84    16998    1   DCL KL_ABSGRPRND$ PTR STATIC;
       85    16999    1   DCL T_TAB(0:31) UBIN BYTE UNAL STATIC INIT(0*0) ;
       86    17000
       87    17001        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:4    
       88    17002        /********************************************************************/
       89    17003        /*   Constant        constant        constant        constant       */
       90    17004        /********************************************************************/
       91    17005        %KL_CCHR ( NAME    = KL_CCHR ,
       92    17006                   STCLASS = CONSTANT) ;
       93    17147        /********************************************************************/
       94    17148        /*   Vlps            vlps            vlps            vlps           */
       95    17149        /********************************************************************/
       96    17150
       97    17151        %VLP_TRMCTL ( FPTN = VLP_TRMCTL ,
       98    17152                      STCLASS = STATIC ) ;
       99    17192        %VLP_NAME ( FPTN = VLP$PNAME ,
      100    17193                    STCLASS="BASED UNAL",
      101    17194                    LEN = VLP$PNAME.L# ) ;
      102    17221        %VLP_TRMCTL ( FPTN = VLP$TRMCTRL ,
      103    17222                      ALGN = UNAL ,
      104    17223                      STCLASS = BASED ) ;
      105    17263        %VLP_TRMATTR (  FPTN = VLP$TRMATTR ,
      106    17264                        ALGN = UNAL ,
      107    17265                        STCLASS = BASED ) ;
      108    17303        %VLP_PLATEN ( FPTN = VLP$PLATEN ,
      109    17304                      ALGN = UNAL ,
      110    17305                      STCLASS = BASED ) ;
      111    17327        %VLP_TAB (  FPTN = VLP$TAB ,
      112    17328                    STCLASS="BASED")  ;
      113    17342        %KL_CCHR ( NAME = KL$CCHR ,
      114    17343                  STCLASS="BASED UNAL") ;
      115    17484        %KL_TRMD ( NAME = KL$TRMD ,
      116    17485                  STCLASS ="BASED UNAL") ;
      117    17647        %KL_DADR ( NAME = KL$DADR ,
      118    17648                  STCLASS="BASED UNAL") ;
      119    17696        %KL_LINK( NAME = KL$LINK ,
      120    17697                  STCLASS="BASED") ;
      121    17793        %KL_VIRCIR( NAME = KL$VIRCIR ,
      122    17794                  STCLASS="BASED") ;
      123    18003        %KL_3270 ( NAME = KL$3270,
      124    18004                   STCLASS = BASED UNAL );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:5    
      125    18029        %KL_ABSGRPRND( NAME = KL$ABSGRPRND,
      126    18030                      STCLASS = "BASED(KL_ABSGRPRND$) UNAL" );
      127    18065        %AS_FUNKEY (NAME = KL$FUNKEY,
      128    18066                    STCLASS = "BASED (FUNKEY$) UNAL") ;
      129    18137
      130    18138        %KL_SETUP_CHR (NAME = KL$SETUP_CHR,
      131    18139                    STCLASS = "BASED (SETUP_CHR$) UNAL") ;
      132    18155
      133    18156
      134    18157        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:6    
      135    18158        /********************************************************************/
      136    18159        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      137    18160        /*********************************************************************/
      138    18161
      139    18162    1   DCL X$PARSE ENTRY(1) ALTRET ;
      140    18163        %ASH$ERROR ;
      141    18166        %ASB$SET_PROMPT ;
      142    18169        %ASH$WARN ;
      143    18172        %ASD$READ_PRO ;
      144    18175        %ASD$WRITE_PRO ;
      145    18178        %ASB$READ_SI ;
      146    18181        %ASD$HEX2OCT ;
      147    18184        %ASD$R2HUSECS ;
      148    18187        %ASH$HELP ;
      149    18190        %ASH$QUEST ;
      150    18193        %ASH$DQUEST ;
      151    18196        %ASD$BUILD_$ASYNC ;
      152    18199        %ASD$BUILD_$RBTD ;
      153    18202        %ASD$BUILD_$RBT ;
      154    18205        %ASD$BUILD_$LINK ;
      155    18208        %ASD$BUILD_$VIRCIR ;
      156    18211        %ASD$BUILD_$URP ;
      157    18214        %ASD$BUILD_$3270 ;
      158    18217        %ASD$BUILD_$POLLVIP ;
      159    18220        %ASD$BUILD_$GRA ;
      160    18223        %ASD$GR_WRITE_PRO ;
      161    18226        %ASD$GR_READ_PRO ;
      162    18229        %ASB$GETSEG ;
      163    18232
      164    18233        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:7    
      165    18234        /********************************************************************/
      166    18235        /*   Local based     local based     local based     local based     */
      167    18236        /*********************************************************************/
      168    18237
      169    18238    1   DCL B$TCB$ PTR SYMREF;
      170    18239        %KV_PRMID_E ;
      171    18395        %B$ALT;
      172    18403        %B$TCB;
      173    18406
      174    18407              %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      175    18408                          NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      176    18453              %PARSE$SYM (  NAME=OUT$SYM ,
      177    18454                            STCLASS="BASED(BLK$)") ;
      178    18492                  %KL_PHDR ( NAME = PRO$HDR  ,
      179    18493                          STCLASS = BASED ) ;
      180    18534        %XG$PROFILE (  PRON = GRA$REC ,
      181    18535                       STCLASS = BASED) ;
      182    18957    1   DCL 1 PP$STRCT BASED( PP$ ) UNAL ,
      183    18958    1          2 TYPE UBIN BYTE UNAL ,
      184    18959    1          2 SIZE UBIN BYTE UNAL ;
      185    18960    1   DCL 1 PP$BIG_STRCT BASED( PP$ ) UNAL ,
      186    18961    1          2 BIG  UBIN BYTE UNAL ,
      187    18962    1          2 TYPE UBIN BYTE UNAL ,
      188    18963    1          2 SIZE ,
      189    18964    1             3 *   UBIN(1)    UNAL ,
      190    18965    1             3 T   UBIN(8)    UNAL ,
      191    18966    1             3 *   UBIN(1)    UNAL ,
      192    18967    1             3 B   UBIN(8)    UNAL ;
      193    18968
      194    18969    1   DCL 1 SPLIT$STRCT BASED( SPLIT$ ) UNAL ,
      195    18970    1          2 * UBIN(1) UNAL ,
      196    18971    1          2 T UBIN(8) UNAL ,
      197    18972    1          2 * UBIN(1) UNAL ,
      198    18973    1          2 B UBIN(8) UNAL ;
      199    18974    1   DCL MOV$STRG CHAR(1) BASED(P$) UNAL ;
      200    18975              %KL$UBWORD(  NAME = KL$UBWORD ,
      201    18976                          STCLASS = AUTO ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:8    
      202    18986
      203    18987        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:9    
      204    18988        /********************************************************************/
      205    18989        /*   Auto data       auto data       auto data       auto data       */
      206    18990        /*********************************************************************/
      207    18991
      208    18992    1   DCL BLK$ PTR ;
      209    18993    1   DCL PP$ PTR ;
      210    18994    1   DCL CCHRSZ$ PTR STATIC ;
      211    18995    1   DCL FUNKEYSZ$ PTR STATIC ;
      212    18996    1   DCL P_ARS STATIC UBIN WORD ;
      213    18997    1   DCL PP_END$ PTR STATIC ;
      214    18998    1   DCL G_ARS UBIN WORD ;
      215    18999    1   DCL PTROPT$ PTR ;
      216    19000    1   DCL PP_SIZE UBIN WORD ;
      217    19001    1   DCL PP_TYPE UBIN WORD ;
      218    19002    1   DCL EXTWID UBIN WORD ;
      219    19003    1   DCL I UBIN WORD ;
      220    19004    1   DCL J UBIN WORD ;
      221    19005    1   DCL K UBIN WORD ;
      222    19006    1   DCL L UBIN WORD ;
      223    19007    1   DCL OP UBIN WORD ;
      224    19008    1   DCL VAL UBIN WORD ;
      225    19009    1   DCL 1 SPLIT_VAL REDEF VAL,
      226    19010    1          2 * UBIN(20) UNAL ,
      227    19011    1          2 T UBIN(8) UNAL ,
      228    19012    1          2 B UBIN(8) UNAL ;
      229    19013    1   DCL VAL_TWO(0:17) REDEF VAL BIT(2) ;
      230    19014    1   DCL VAL_FOUR(0:8) REDEF VAL BIT(4) ;
      231    19015    1   DCL VAL_SIX(0:5) REDEF VAL BIT(6) ;
      232    19016    1   DCL ARS UBIN WORD ;
      233    19017    1   DCL XPNAME CHAR (11); /* The xlated pro name goes here */
      234    19018    1   DCL CREATE BIT(1) ;
      235    19019    1   DCL FROM BIT(1) ;
      236    19020    1   DCL GR_FLAG BIT(1) ;
      237    19021    1   DCL PTR$ PTR ;
      238    19022    1   DCL OP_CODE UBIN WORD ;
      239    19023    1   DCL SPLIT$ PTR ;
      240    19024    1   DCL SUBS UBIN WORD ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:10   
      241    19025    1   DCL TXTC$ PTR ;
      242    19026    1   DCL P$ PTR ;
      243    19027    1   DCL 1 SPLIT ,
      244    19028    1          2 * UBIN(1) UNAL ,
      245    19029    1          2 T UBIN(8) UNAL ,
      246    19030    1          2 * UBIN(1) UNAL ,
      247    19031    1          2 B UBIN(8) UNAL ;
      248    19032    1   DCL HEX(0:255) UBIN BYTE UNAL;
      249    19033    1   DCL HEX_V UBIN BYTE;
      250    19034    1   DCL 1 OPTION,
      251    19035    1          2 COUNT UBIN BYTE UNAL,
      252    19036    1          2 TEXT CHAR(31) UNAL;
      253    19037    1   DCL 1 PROFILE_TYPE,
      254    19038    1          2 COUNT UBIN BYTE UNAL,
      255    19039    1          2 TEXT CHAR(10) UNAL;
      256    19040    1   DCL PRO_TYPE BIT(9);
      257    19041
      258    19042        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:11   
      259    19043        /********************************************************************/
      260    19044        /*   Procedure       procedure       procedure       procedure       */
      261    19045        /*********************************************************************/
      262    19046
      263    19047        /*
      264    19048            ***            Begin procedure                    ***
      265    19049        */
      266    19050    1   IF NOT DSEG_FLG
      267    19051    1   THEN
      268    19052    1      CALL ASB$GETSEG
      269    19053    2      WHENALTRETURN DO;
      270    19054              %SCREAM( ERR#=%E$GETSEGERR, LEVEL=ERROR, MID='D') ;
      271    19069    2         RETURN ;
      272    19070    2         END;  /*  Whenaltreturn  */
      273    19071                                                              /**/
      274    19072    1   P_PCB.ROOT$ = ADDR(PROFILE_CMD) ;
      275    19073    1   CALL X$PARSE(P_PCB) ALTRET (PROFILE_ERR) ;
      276    19074    1   NODE$ = P_PCB.OUT$ ;
      277    19075
      278    19076                                                              /* Create or modify? */
      279    19077    1   IF P$NODE.CODE = 35 /* CR_PROFILE */ THEN
      280    19078    1      CREATE = AS_TRUE ;
      281    19079    1   ELSE
      282    19080    1      CREATE = AS_FALSE ;
      283    19081    1   PRO_KEY.TEXT = AS_BLANK ;
      284    19082    1   PRO_KEY_OLD.TEXT = AS_BLANK ;
      285    19083
      286    19084    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
      287    19085    1   PRO_KEY.CNT = OUT$SYM.COUNT ;
      288    19086                                                              /*  Test length of key  */
      289    19087    2   IF PRO_KEY.CNT > 11 THEN DO;
      290    19088        /*E*  ERROR:    ASD-E$PNAMETOOLONG-C
      291    19089              MESSAGE:  PROFILE name too long.
      292    19090              MESSAGE1: PROFILE name can be at most 11 characters long.
      293    19091        */
      294    19092           %SCREAM( ERR#=E$PNAMETOOLONG, LEVEL=ERROR, MID='D');
      295    19107    2      RETURN ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:12   
      296    19108    2      END ;   /*  Then do  */
      297    19109
      298    19110    1   CALL XLATE (XPNAME, B$XL_UPPER_UR, SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT));
      299    19111    1   IF (SUBSTR (XPNAME, 0, OUT$SYM.COUNT) =
      300    19112    1        SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT) )
      301    19113    2   THEN DO; /* The pro name is all uppercase and okay, use it. */
      302    19114    2      PRO_KEY.TEXT = OUT$SYM.TEXT;
      303    19115    2      END;
      304    19116    2   ELSE DO; /* The pname was affected by xlation use xlated 1 */
      305    19117    2      PRO_KEY.TEXT = XPNAME;
      306    19118        /*E* ERROR:    ASD-E$PNAMEXLATED-C
      307    19119             MESSAGE:  A profile name must be specified in all uppercase.
      308    19120                          The one you specified has been translated.
      309    19121             MESSAGE1: Your profile name had lower case letters which have
      310    19122                          been converted to uppercase before being used.
      311    19123        */
      312    19124           %SCREAM (ERR#=E$PNAMEXLATED, LEVEL=WARN, MID='D');
      313    19139    2      END;
      314    19140    1   IF ( (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = '3270') OR
      315    19141    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'LINK') OR
      316    19142    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'RBTD') OR
      317    19143    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'SYNC') OR
      318    19144    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'ASYNC') OR
      319    19145    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'VIRTUAL') OR
      320    19146    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'RBT') OR
      321    19147    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'POLLVIP') OR
      322    19148    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'URP') )
      323    19149    2   THEN DO;
      324    19150        /*E*     ERROR: ASD-E$NOPNAMEOFTYPE-C
      325    19151                 MESSAGE0: A profile name cannot be the same as a profile type.
      326    19152                 MESSAGE1: You tried to create a profile with a name of:
      327    19153                           'URP', 'RBT', '3270', 'LINK', 'RBTD', 'SYNC',
      328    19154                           'ASYNC', 'VIRTUAL' (for Virtual Circuits), or
      329    19155                           'POLLVIP (for Polled Vip).
      330    19156                 MESSAGE2: You can't do that!
      331    19157                 MESSAGE3: Change the name!
      332    19158        */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:13   
      333    19159           %SCREAM (ERR# = E$NOPNAMEOFTYPE, LEVEL = ERROR, MID = 'D');
      334    19174    2      RETURN;
      335    19175    2      END;
      336    19176                                                              /* Check existence */
      337    19177    1   CALL ASD$READ_PRO( PRO_KEY, PRO_BUF, P_ARS )
      338    19178    2   WHENRETURN DO;
      339    19179    3      IF CREATE THEN DO;
      340    19180        /*E*  ERROR:    ASD-E$CREATEEXIST-C
      341    19181              MESSAGE: %%U1 %already exists.
      342    19182              MESSAGE1: You cannot CREATE a profile that exists.
      343    19183        */
      344    19184    3         AS_FIELD1 = PRO_KEY ;
      345    19185              %SCREAM( ERR#=E$CREATEEXIST, LEVEL=ERROR, MID='D');
      346    19200    3         RETURN ;
      347    19201    3         END ; /* Then do  */
      348    19202    2      END;   /*  Whenreturn from ASD$READ_PRO  */
      349    19203    2   WHENALTRETURN DO;
      350    19204    3      IF NOT CREATE THEN DO;
      351    19205        /*E*  ERROR:    ASD-E$MPNOEXIST-C
      352    19206              MESSAGE0: %%U1 %does not exist. Switching to CREATE mode.
      353    19207        */
      354    19208    3         AS_FIELD1 = PRO_KEY ;
      355    19209              %SCREAM( ERR#=E$MPNOEXIST, LEVEL=WARN, MID='D');
      356    19224    3         CREATE = AS_TRUE ;
      357    19225    3         END; /*  If not create  */
      358    19226    2      END;   /*  Whenaltreturn from ASD$READ_PRO  */
      359    19227                                                              /* Chk for from or type */
      360    19228    1   SUBS = P$NODE.SUBNODES ;
      361    19229    1   FROM = AS_FALSE ;
      362    19230    1   P_TYPE = 0 ;
      363    19231    2   DO I = 1 TO SUBS-1 ;
      364    19232    2      CODE = P$NODE.SUBLK$(I) -> P$NODE.CODE ;
      365    19233    3      DO CASE( CODE ) ;
      366    19234
      367    19235    3         CASE( 41/*  PRO_NAME_2  */ ) ;
      368    19236    3            FROM = AS_TRUE ;
      369    19237    3            BLK$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(0) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:14   
      370    19238    3            I = SUBS ;
      371    19239
      372    19240    3         CASE( 1 /* ASYNC_ */ ) ;
      373    19241    3            P_TYPE = %KLTY_TTY# ;
      374    19242    3            I = SUBS ;
      375    19243
      376    19244    3         CASE( 2 /* RBTD_ */ ) ;
      377    19245    3            P_TYPE = %KLTY_SDEV# ;
      378    19246    3            I = SUBS ;
      379    19247
      380    19248    3         CASE( 3 /* RBT | SYNC */ ) ;
      381    19249    3            P_TYPE = %KLTY_STRM# ;
      382    19250    3            I = SUBS ;
      383    19251
      384    19252    3         CASE( 4 /* LINK */ );
      385    19253    3            P_TYPE = %KLTY_LINK# ;
      386    19254    3            I = SUBS ;
      387    19255
      388    19256    3         CASE( 5 /* URP */ );
      389    19257    3            P_TYPE = %KLTY_URP# ;
      390    19258    3            I = SUBS ;
      391    19259
      392    19260    3         CASE( 6 /* 3270 */ );
      393    19261    3            P_TYPE = %KLTY_LINEDEV#;
      394    19262    3            I = SUBS ;
      395    19263
      396    19264    3         CASE( 7 /* VIRCIR */ );
      397    19265    3            P_TYPE = %KLTY_VIRCIR#;
      398    19266    3            I = SUBS ;
      399    19267
      400    19268    3         CASE( 8 /* POLLED VIP */);
      401    19269    3            P_TYPE = %KLTY_HIP_DEV#;
      402    19270    3            I = SUBS ;
      403    19271    3         END ; /* Do case */
      404    19272    2      END ; /* Do i */
      405    19273    2   IF CREATE AND ( ~FROM AND P_TYPE=0 ) THEN DO;
      406    19274        /*E*  ERROR:    ASD-E$NOPTYPE-C
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:15   
      407    19275              MESSAGE0: Can't CREATE profiles without TYPE or FROM specified.
      408    19276              MESSAGE1: You must specify either profile TYPE or FROM pname.
      409    19277              MESSAGE2:   where:
      410    19278                                TYPE is     A[SYNC]
      411    19279                                            U[RP]
      412    19280                                            S[YNC]
      413    19281                                            RBT
      414    19282                                            RBTD
      415    19283                                            3[270]
      416    19284                                            L[INK]
      417    19285                                            V[IRTUAL] C[IRCUIT]
      418    19286                                            P[OLLED] V[IP]
      419    19287
      420    19288                                pname is  the name of an existing profile.
      421    19289        */
      422    19290           %SCREAM( ERR#=E$NOPTYPE, LEVEL=ERROR, MID='D');
      423    19305    2      RETURN ;
      424    19306    2      END ; /* Then do */
      425    19307
      426    19308    2   IF FROM THEN DO;
      427    19309    2      PRO_KEY_OLD.CNT = OUT$SYM.COUNT ;
      428    19310                                                              /*  Test length of key.   */
      429    19311    3      IF PRO_KEY_OLD.CNT > 11 THEN DO;
      430    19312              %SCREAM( ERR#=E$PNAMETOOLONG, LEVEL=ERROR, MID='D');
      431    19327    3         RETURN ;
      432    19328    3         END ; /*  Then do  */
      433    19329
      434    19330    2      CALL XLATE (XPNAME, B$XL_UPPER_UR, SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT));
      435    19331    2      IF (SUBSTR (XPNAME, 0, OUT$SYM.COUNT) =
      436    19332    2           SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT) )
      437    19333    3      THEN DO; /* The pro name is all uppercase and okay, use it. */
      438    19334    3         PRO_KEY_OLD.TEXT = OUT$SYM.TEXT;
      439    19335    3         END;
      440    19336    3      ELSE DO; /* The pname was affected by xlation use xlated 1 */
      441    19337    3         PRO_KEY_OLD.TEXT = XPNAME;
      442    19338        /*E* ERROR:    ASD-E$FROMPNAMEXLATED-C
      443    19339             MESSAGE:  A FROM profile name must be specified in all uppercase.
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:16   
      444    19340                          The profile name for FROM has been translated.
      445    19341             MESSAGE1: Your FROM profile name had lower case letters which
      446    19342                          have been converted to uppercase before being used.
      447    19343        */
      448    19344              %SCREAM (ERR#=E$FROMPNAMEXLATED, LEVEL=WARN, MID='D');
      449    19359    3         END;
      450    19360    2      CALL ASD$READ_PRO( PRO_KEY_OLD, PRO_BUF, P_ARS ) ALTRET(F_READ_ERR);
      451    19361    2      END ; /* Then do */
      452    19362    1   ELSE
      453    19363    2      IF CREATE THEN DO;
      454    19364                                                  /* Pick up defaults */
      455    19365    3         DO CASE( P_TYPE ) ;
      456    19366
      457    19367    3            CASE( %KLTY_TTY# );
      458    19368    3               PRO_KEY_OLD.CNT = 6 ;
      459    19369    3               PRO_KEY_OLD.TEXT = '$ASYNC' ;
      460    19370
      461    19371    3            CASE( %KLTY_SDEV# ) ;
      462    19372    3               PRO_KEY_OLD.CNT = 5 ;
      463    19373    3               PRO_KEY_OLD.TEXT = '$RBTD' ;
      464    19374
      465    19375    3            CASE( %KLTY_STRM# ) ;
      466    19376    3               PRO_KEY_OLD.CNT = 4 ;
      467    19377    3               PRO_KEY_OLD.TEXT = '$RBT' ;
      468    19378
      469    19379    3            CASE( %KLTY_LINK# ) ;
      470    19380    3               PRO_KEY_OLD.CNT = 5 ;
      471    19381    3               PRO_KEY_OLD.TEXT = '$LINK' ;
      472    19382
      473    19383    3            CASE( %KLTY_URP# ) ;
      474    19384    3               PRO_KEY_OLD.CNT = 4 ;
      475    19385    3               PRO_KEY_OLD.TEXT = '$URP' ;
      476    19386
      477    19387    3            CASE( %KLTY_LINEDEV# );
      478    19388    3               PRO_KEY_OLD.CNT = 5;
      479    19389    3               PRO_KEY_OLD.TEXT = '$3270';
      480    19390
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:17   
      481    19391    3            CASE( %KLTY_VIRCIR# );
      482    19392    3               PRO_KEY_OLD.CNT = 7;
      483    19393    3               PRO_KEY_OLD.TEXT = '$VIRCIR';
      484    19394
      485    19395    3            CASE( %KLTY_HIP_DEV# );
      486    19396    3               PRO_KEY_OLD.CNT = 8 ;
      487    19397    3               PRO_KEY_OLD.TEXT = '$POLLVIP';
      488    19398    3            CASE( ELSE ) ;
      489    19399        /*E*  ERROR:    ASD-E$BADPROTYPE-C
      490    19400              MESSAGE0: Illegal profile type.
      491    19401        */
      492    19402                    %SCREAM( ERR#=E$BADPROTYPE, LEVEL=ERROR, MID='F');
      493    19417    3               RETURN ;
      494    19418
      495    19419    3            END ; /* Do case( P_TYPE ) */
      496    19420    2         CALL ASD$READ_PRO(PRO_KEY_OLD, PRO_BUF, P_ARS) ALTRET(F_READ_ERR);
      497    19421    2         END ; /* Then do */
      498    19422
      499    19423    2   DO WHILE( '0'B );
      500    19424    2   F_READ_ERR: ;
      501    19425    3      IF FROM THEN DO;
      502    19426        /*E*  ERROR:    ASD-E$PNNOEXIST-C
      503    19427              MESSAGE:  %%U1 %does not exist.
      504    19428        */
      505    19429    3         AS_FIELD1 = PRO_KEY_OLD ;
      506    19430              %SCREAM( ERR#=E$PNNOEXIST, LEVEL=ERROR, MID='D');
      507    19445    3         RETURN ;
      508    19446    3         END;
      509    19447    2      ELSE
      510    19448    3      DO CASE( P_TYPE ) ;
      511    19449    3         CASE( %KLTY_TTY# );
      512    19450    3            CALL ASD$BUILD_$ASYNC( PRO_BUF, P_ARS );
      513    19451    3         CASE( %KLTY_SDEV# ) ;
      514    19452    3            CALL ASD$BUILD_$RBTD( PRO_BUF, P_ARS );
      515    19453    3         CASE( %KLTY_STRM# ) ;
      516    19454    3            CALL ASD$BUILD_$RBT( PRO_BUF, P_ARS );
      517    19455    3         CASE( %KLTY_LINK# ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:18   
      518    19456    3            CALL ASD$BUILD_$LINK( PRO_BUF, P_ARS );
      519    19457    3         CASE( %KLTY_URP# ) ;
      520    19458    3            CALL ASD$BUILD_$URP( PRO_BUF, P_ARS );
      521    19459    3         CASE( %KLTY_LINEDEV# );
      522    19460    3            CALL ASD$BUILD_$3270( PRO_BUF, P_ARS );
      523    19461    3         CASE( %KLTY_VIRCIR# );
      524    19462    3            CALL ASD$BUILD_$VIRCIR( PRO_BUF, P_ARS );
      525    19463    3         CASE( %KLTY_HIP_DEV# );
      526    19464    3            CALL ASD$BUILD_$POLLVIP( PRO_BUF, P_ARS );
      527    19465    3         END;
      528    19466    2      END;
      529    19467
      530    19468    1   PP$ = DSEG1$;
      531    19469    1   PHDR$ = PP$ ;
      532    19470    1   PP_END$ = PINCRC( PP$, P_ARS ) ;
      533    19471    1   PP$ = PINCRW( PP$, SIZEW( PRO_HDR ) ) ;
      534    19472                                                              /*  Find all vlps.   */
      535    19473    1   PNM$ = ADDR(NIL) ;
      536    19474    1   TCTL$ = ADDR(NIL) ;
      537    19475    1   TATR$ = ADDR(NIL) ;
      538    19476    1   PLTN$ = ADDR(NIL) ;
      539    19477    1   DTABS$ = ADDR(NIL) ;
      540    19478    1   TCCHR$ = ADDR(NIL) ;
      541    19479    1   FUNKEY$ = ADDR(NIL) ;
      542    19480    1   SETUP_CHR$ = ADDR(NIL) ;
      543    19481    1   TRMD$ = ADDR(NIL) ;
      544    19482    1   LINK$ = ADDR(NIL);
      545    19483    1   T3270$ = ADDR(NIL);
      546    19484    1   CCHRSZ$ = ADDR(NIL);
      547    19485    1   FUNKEYSZ$ = ADDR(NIL);
      548    19486    1   VIRCIR$ = ADDR(NIL);
      549    19487    2   DO I = 0 TO SIZEW(ABSGRPRND$) - 1;
      550    19488    2      ABSGRPRND$(I) = ADDR(NIL);
      551    19489    2      END;
      552    19490    1   IF PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK THEN
      553    19491    1      IF CREATE THEN
      554    19492    1         CALL ASD$GR_READ_PRO( PRO_KEY_OLD, GRA_BUF, G_ARS ) ALTRET( GR_READ_ERR) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:19   
      555    19493    1      ELSE
      556    19494    1         CALL ASD$GR_READ_PRO( PRO_KEY, GRA_BUF, G_ARS ) ALTRET( GR_READ_ERR) ;
      557    19495    2   ELSE DO ;
      558    19496    2   GR_AGAIN: ;
      559    19497    2      CALL ASD$GR_READ_PRO( GRA_KEY_OLD, GRA_BUF, G_ARS ) ALTRET( GR_READ_ERR_CR ) ;
      560    19498    2      END ;
      561    19499    2   DO WHILE( '0'B ) ;
      562    19500    2   GR_READ_ERR: ;
      563    19501        /*E* ERROR:   ASD-E$GRNOTEXIST-C
      564    19502             MESSAGE: GRAPHICS are allowed, but no graphics are defined.
      565    19503             MESSAGE1: Default graphics record is being used.
      566    19504        */
      567    19505           %SCREAM( ERR#=E$GRNOTEXIST, LEVEL=ERROR, MID='D') ;
      568    19520    2      GOTO GR_AGAIN ;
      569    19521    2      END ;              /*  Of do while  */
      570    19522    2   DO WHILE( '0'B ) ;
      571    19523    2   GR_READ_ERR_CR: ;
      572    19524    2      CALL ASD$BUILD_$GRA( PRO_BUF, P_ARS );
      573    19525    2      GOTO GR_AGAIN ;
      574    19526    2      END;
      575    19527    1   GRA$ = DSEG2$ ;
      576    19528    2   DO WHILE ( PP$ < PP_END$ ) ;
      577    19529    3      IF PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN DO;
      578    19530    3         PP_TYPE = PP$BIG_STRCT.TYPE;
      579    19531    3         PP_SIZE = PP$BIG_STRCT.SIZE.T * 256 + PP$BIG_STRCT.SIZE.B;
      580    19532    3         END;   /*  One fep word for size and type  */
      581    19533    3      ELSE DO;
      582    19534    3         PP_TYPE = PP$STRCT.TYPE ;
      583    19535    3         PP_SIZE = PP$STRCT.SIZE ;
      584    19536    3         END;   /*  One byte for type and size  */
      585    19537
      586    19538    2      IF PP_TYPE = %KV_PRMID_CTRCHR THEN
      587    19539    2         CCHRSZ$ = PP$ ;
      588    19540    2      IF PP_TYPE = %KV_PRMID_KEYDEFS THEN
      589    19541    2         FUNKEYSZ$ = PP$ ;
      590    19542
      591    19543    2      IF PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:20   
      592    19544    2         PP$ = PINCRC( PP$, 4 ) ;
      593    19545    2      ELSE
      594    19546    2         PP$ = PINCRC( PP$, 2 ) ;
      595    19547
      596    19548    3      DO CASE( PP_TYPE ) ;
      597    19549
      598    19550    3         CASE( %KV_PRMID_PROFILE  ) ;
      599    19551    3            PNM$ = PP$ ;
      600    19552
      601    19553    3         CASE( %KV_PRMID_TRMCTL ) ;
      602    19554    3            TCTL$ = PP$ ;
      603    19555
      604    19556    3         CASE( %KV_PRMID_TRMATTR ) ;
      605    19557    3            TATR$ = PP$ ;
      606    19558
      607    19559    3         CASE( %KV_PRMID_PLATEN ) ;
      608    19560    3            PLTN$ = PP$ ;
      609    19561
      610    19562    3         CASE( %KV_PRMID_TRMTAB ) ;
      611    19563    3            DTABS$ = PP$ ;
      612    19564
      613    19565    3         CASE( %KV_PRMID_CTRCHR ) ;
      614    19566    3            TCCHR$ = PP$ ;
      615    19567
      616    19568    3         CASE( %KL_PRMID_TRMD  ) ;
      617    19569    3            TRMD$ = PP$ ;
      618    19570
      619    19571    3         CASE( %KV_PRMID_KEYDEFS ) ;
      620    19572    3            FUNKEY$ = PP$ ;
      621    19573
      622    19574    3         CASE( %KV_PRMID_SETUP_CHR ) ;
      623    19575    3            SETUP_CHR$ = PINCRC (PP$, -2);
      624    19576
      625    19577    3         CASE( %KL_PRMID_LINK  );
      626    19578    3            LINK$ = PP$;
      627    19579
      628    19580    3         CASE( %KL_PRMID_VIRCIR  );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:21   
      629    19581    3            VIRCIR$ = PP$;
      630    19582
      631    19583    3         CASE( %KV_PRMID_3270 );
      632    19584    3            T3270$ = PP$ ;
      633    19585    3            IF PHDR$->PRO$HDR.TTYP=%KLTY_TTY# AND (T3270$->KL$3270&'1'B)
      634    19586    3            THEN PHDR$->PRO$HDR.TTYP=%KLTY_LINEDEV#;
      635    19587
      636    19588    3         CASE( %KV_PRMID_ABSGRPRND );
      637    19589    3            ABSGRPRND$(PP$->KL$ABSGRPRND.ID#) = PP$;
      638    19590
      639    19591
      640    19592    3         END ; /*  Do case  */
      641    19593
      642    19594    2      I = PP_SIZE + (MOD (PP_SIZE, 2)); /* Force i to be even */
      643    19595    2      PP$ = PINCRC ( PP$, I ) ;
      644    19596
      645    19597    2      END ; /*  Do while  */
      646    19598
      647    19599    1   IF P_TYPE = 0 THEN
      648    19600    1      P_TYPE = PHDR$ -> PRO$HDR.TTYP ;
      649    19601    2   ELSE IF P_TYPE ~= PHDR$ -> PRO$HDR.TTYP THEN DO;
      650    19602        /*E*  ERROR:    ASD-E$UNMATCHEDPTYPE-C
      651    19603              MESSAGE0: Profile type given does not match profile type.
      652    19604        */
      653    19605              %SCREAM( ERR#=E$UNMATCHEDPTYPE, LEVEL=ERROR, MID='D');
      654    19620    2         RETURN ;
      655    19621    2         END ;
      656    19622                                                              /* Do options */
      657    19623    1   CALL PRO_OPTS ;
      658    19624    2   DO CASE( P_TYPE );
      659    19625    2      CASE( %KLTY_TTY#, %KLTY_SDEV#, %KLTY_URP#, %KLTY_LINEDEV#);
      660    19626                                                              /*   Set up header.   */
      661    19627                                                            /*   Check for extra width.   */
      662    19628    2         IF PLTN$ -> VLP$PLATEN.EXTWID# = AS_TRUE THEN
      663    19629    2            EXTWID = 1;
      664    19630    2         ELSE
      665    19631    2            EXTWID = 0;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:22   
      666    19632    2         PHDR$ -> PRO$HDR.WIDTH = PLTN$ -> VLP$PLATEN.WIDTH# + ( 254*EXTWID ) ;
      667    19633    2         PHDR$ -> PRO$HDR.LINES = PLTN$ -> VLP$PLATEN.LENGTH# ;
      668    19634    2         PHDR$ -> PRO$HDR.ATTR.TRUOVRPRT = TATR$ -> VLP$TRMATTR.TRUOVRPRT# ;
      669    19635    2         PHDR$ -> PRO$HDR.ATTR.APL = TATR$ -> VLP$TRMATTR.APL# ;
      670    19636    2         PHDR$ -> PRO$HDR.ATTR.BIN = TATR$ -> VLP$TRMATTR.BIN# ;
      671    19637    2         PHDR$ -> PRO$HDR.ATTR.LCASE = TATR$ -> VLP$TRMATTR.LOWERCASEPRINTS# ;
      672    19638    2         PHDR$ -> PRO$HDR.ATTR.UPPERCASE = AS_TRUE;
      673    19639    2         IF TATR$ -> VLP$TRMATTR.PRINTTYPE# THEN
      674    19640    2            PHDR$ -> PRO$HDR.DDEV.LP = AS_TRUE ;
      675    19641    2         ELSE
      676    19642    2            PHDR$ -> PRO$HDR.DDEV.LP = AS_FALSE ;
      677    19643    2         IF TATR$ -> VLP$TRMATTR.TTYTYPE# THEN
      678    19644    2            PHDR$ -> PRO$HDR.DDEV.IC = AS_TRUE ;
      679    19645    2         ELSE
      680    19646    2            PHDR$ -> PRO$HDR.DDEV.IC = AS_FALSE ;
      681    19647    2         IF ( TATR$ -> VLP$TRMATTR.PRINTTYPE# = '0'B ) AND
      682    19648    2              ( TATR$ -> VLP$TRMATTR.TTYTYPE# = '0'B)
      683    19649    2         THEN
      684    19650    2            PHDR$ -> PRO$HDR.DDEV.CP = AS_TRUE ;
      685    19651    2         ELSE
      686    19652    2            PHDR$ -> PRO$HDR.DDEV.CP = AS_FALSE ;
      687    19653    2      END ; /* Do case */
      688    19654
      689    19655    1   IF CREATE OR FROM THEN PHDR$->PRO$HDR.IMP# = 0;
      690    19656
      691    19657                                                              /*   Move profile name   */
      692    19658    1   PNM$ -> VLP$PNAME.L# = 11;
      693    19659    1   PNM$ -> VLP$PNAME.NAME# = ' ';
      694    19660    1   PNM$ -> VLP$PNAME.L# = PRO_KEY.CNT ;
      695    19661    1   PNM$ -> VLP$PNAME = PRO_KEY ;
      696    19662    1   P_ARS = P_ARS - 1 ;
      697    19663    1   CALL ASD$WRITE_PRO( PRO_KEY, PRO_BUF, P_ARS ) ;
      698    19664    2   IF PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK THEN DO ;
      699    19665    2      G_ARS = G_ARS - 1 ;
      700    19666    2      CALL ASD$GR_WRITE_PRO( PRO_KEY, GRA_BUF, G_ARS ) ;
      701    19667    2      END ;
      702    19668    1   RETURN ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:23   
      703    19669        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:24   
      704    19670
      705    19671    1   PROFILE_ERR: ;
      706    19672    1   CALL ASH$ERROR( P_PCB.ERROR );
      707    19673    1   RETURN ;
      708    19674
      709    19675        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:25   
      710    19676
      711    19677    1   PRO_OPTS: ENTRY ;
      712    19678
      713    19679        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:26   
      714    19680        /********************************************************************/
      715    19681        /*   Procedure       procedure       procedure       procedure       */
      716    19682        /*********************************************************************/
      717    19683
      718    19684        /*
      719    19685            ***            Begin procedure                    ***
      720    19686        */
      721    19687    2   DO CASE( P_TYPE );
      722    19688    2      CASE( %KLTY_TTY# );
      723    19689    2         PRO_TYPE = ASL_ASYNC_TYP;
      724    19690    2         PROFILE_TYPE.COUNT = 5;
      725    19691    2         PROFILE_TYPE.TEXT  = 'ASYNC';
      726    19692    2      CASE( %KLTY_SDEV# );
      727    19693    2         PRO_TYPE = ASL_RBTD_TYP;
      728    19694    2         PROFILE_TYPE.COUNT = 4;
      729    19695    2         PROFILE_TYPE.TEXT  = 'RBTD';
      730    19696    2      CASE( %KLTY_STRM# );
      731    19697    2         PRO_TYPE = ASL_RBT_TYP;
      732    19698    2         PROFILE_TYPE.COUNT = 8;
      733    19699    2         PROFILE_TYPE.TEXT  = 'SYNC/RBT';
      734    19700    2      CASE( %KLTY_LINK# );
      735    19701    2         PRO_TYPE = ASL_LINK_TYP;
      736    19702    2         PROFILE_TYPE.COUNT = 4;
      737    19703    2         PROFILE_TYPE.TEXT  = 'LINK';
      738    19704    2      CASE( %KLTY_URP# );
      739    19705    2         PRO_TYPE = ASL_URP_TYP;
      740    19706    2         PROFILE_TYPE.COUNT = 3;
      741    19707    2         PROFILE_TYPE.TEXT  = 'URP';
      742    19708    2      CASE( %KLTY_LINEDEV# );
      743    19709    2         PRO_TYPE = ASL_3270_TYP;
      744    19710    2         PROFILE_TYPE.COUNT = 4;
      745    19711    2         PROFILE_TYPE.TEXT  = '3270';
      746    19712    2      CASE( %KLTY_VIRCIR# );
      747    19713    2         PRO_TYPE = ASL_VIRCIR_TYP;
      748    19714    2         PROFILE_TYPE.COUNT = 6;
      749    19715    2         PROFILE_TYPE.TEXT  = 'VIRCIR';
      750    19716    2      CASE( %KLTY_HIP_DEV# );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:27   
      751    19717    2         PRO_TYPE = ASL_POLLVIP_TYP;
      752    19718    2         PROFILE_TYPE.COUNT = 7;
      753    19719    2         PROFILE_TYPE.TEXT  = 'POLLVIP';
      754    19720    2      END;
      755    19721    1   MORE = AS_TRUE ;
      756    19722    1   GR_FLAG = '0'B ;
      757    19723
      758    19724    1   PRO_OPTS_LOOP: ;
      759    19725    2   DO WHILE ( MORE ) ;
      760    19726
      761    19727                                                              /*  Set prompt  */
      762    19728    2      CALL ASB$SET_PROMPT ( %PROMPT_OPT ) ;
      763    19729    2      P_PCB.ROOT$ = ADDR( PRO_OPTS_LIST ) ;
      764    19730    2      CALL ASB$READ_SI( IN_BUF, ARS ) ;
      765    19731    2      P_PCB.NCHARS = ARS ;
      766    19732    2      CALL X$PARSE( P_PCB ) ALTRET( OPTS_ERR ) ;
      767    19733
      768    19734    2      NODE$ = P_PCB.OUT$ ;
      769    19735    2      I = P$NODE.SUBNODES ;
      770    19736
      771    19737    3      DO J = 0 TO I-1 ;
      772    19738    3         PTR$ = P$NODE.SUBLK$(J) ;
      773    19739    3         CODE = PTR$ -> P$NODE.CODE ;
      774    19740
      775    19741    4         DO CASE ( CODE ) ;
      776    19742
      777    19743    4            CASE ( 282 /* L_PRO_EOL */ ) ;
      778    19744
      779    19745
      780    19746    4            CASE ( 302 /* HELP_VAL */ ) ;
      781    19747    4               CALL ASH$HELP;
      782    19748
      783    19749    4            CASE ( 301 /* QUESTION_VAL */ ) ;
      784    19750    4               CALL ASH$QUEST;
      785    19751
      786    19752    4            CASE ( 300 /* DQUESTION_VAL */ ) ;
      787    19753    4               CALL ASH$DQUEST ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:28   
      788    19754
      789    19755    4            CASE ( 280 /* L_PRO_END */ ,
      790    19756    4                    283 /* L_PRO_BLANK */ ) ;
      791    19757    4               RETURN ;
      792    19758                                                              /*   Check to see if
      793    19759                                                                   options are legal.   */
      794    19760    4            CASE (  ELSE );
      795    19761    4               OPTION.TEXT = ASL_PRO_OPT_TBL.HDR(CODE);
      796    19762    4               CALL INDEX( K, '  ', OPTION.TEXT );
      797    19763    4               OPTION.COUNT = K;
      798    19764    5               IF (PRO_TYPE & ASL_PRO_OPT_TBL.TYP(CODE)) ~= PRO_TYPE THEN DO;
      799    19765        /*E*  ERROR:    ASD-E$ILLEGALPROOPT-C
      800    19766              MESSAGE:  %U1 is an illegal option for %U2 type profiles.
      801    19767        */
      802    19768    5                  AS_FIELD1 = OPTION;
      803    19769    5                  AS_FIELD2 = PROFILE_TYPE;
      804    19770                       %SCREAM( ERR#=E$ILLEGALPROOPT, LEVEL=ERROR, MID='D');
      805    19785    5                  GOTO NEXT_PRO_OPT ;
      806    19786    5                  END ;   /*  Then do   */
      807    19787    4            END;
      808    19788
      809    19789    4         IF PTR$ -> P$NODE.SUBNODES = 0 THEN DO;
      810    19790    4            OP_CODE = 1   /*  YES_VAL  */ ;
      811    19791    4            YES_NO_FLG = AS_TRUE;
      812    19792    4            YES_NO = AS_TRUE;
      813    19793    4            END;
      814    19794    4         ELSE DO;
      815    19795    4            BLK$ = PTR$ -> P$NODE.SUBLK$(0) ;
      816    19796    4            OP_CODE = BLK$ -> P$NODE.CODE ;
      817    19797    4            IF OP_CODE=7 /* DC */  OR OP_CODE=0 /* TRY */
      818    19798    4            THEN YES_NO_FLG='01'B;
      819    19799    5            ELSE IF OP_CODE=1   /*  YES_VAL  */ THEN DO ;
      820    19800    5                  YES_NO_FLG = '1'B ;
      821    19801    5                  YES_NO = '1'B ;
      822    19802    5                  END;
      823    19803    5               ELSE DO ;
      824    19804    5                  YES_NO = '0'B ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:29   
      825    19805    5                  YES_NO_FLG='0'B;
      826    19806    5                  END;
      827    19807    4            END ;   /*  Else do  */
      828    19808
      829    19809    4         DO CASE ( CODE ) ;
      830    19810
      831    19811    4            CASE (  41 /* TABSIM */ ) ;
      832    19812    4               TCTL$ -> VLP$TRMCTRL.TABSIM# = YES_NO_FLG;
      833    19813
      834    19814    4            CASE (  40 /* TABRELATIVE */ ) ;
      835    19815    4               TCTL$ -> VLP$TRMCTRL.TABRELATIVE# = YES_NO_FLG;
      836    19816
      837    19817    4            CASE (  39 /* SPACEINSERT */ ) ;
      838    19818    4               TCTL$ -> VLP$TRMCTRL.SPACEINSERT# = YES_NO_FLG;
      839    19819
      840    19820    4            CASE (  37 /* SENDBKSPACE */ ) ;
      841    19821    4               TCTL$ -> VLP$TRMCTRL.SENDBKSPACE# = YES_NO_FLG;
      842    19822
      843    19823    4            CASE (  15 /* DISPINPUT */ ) ;
      844    19824    4               TCTL$ -> VLP$TRMCTRL.DISPINPUT# = YES_NO_FLG;
      845    19825
      846    19826    4            CASE (  30 /* PARITYCHECK */ ) ;
      847    19827    4               TCTL$ -> VLP$TRMCTRL.PARITYCHECK# = YES_NO_FLG;
      848    19828
      849    19829    4            CASE (  28 /* OUTDISCARDPUT */ ) ;
      850    19830    4               TCTL$ -> VLP$TRMCTRL.OUTPUTDISCARD# = YES_NO_FLG;
      851    19831
      852    19832    4            CASE (  167 /* PARKCURSOR */ ) ;
      853    19833    4               TCTL$ -> VLP$TRMCTRL.PARKCURSOR# = YES_NO_FLG;
      854    19834
      855    19835    4            CASE (  213 /* L_CURSORREAD */ ) ;
      856    19836    4               TCTL$ -> VLP$TRMCTRL.CURSORREAD# = YES_NO_FLG;
      857    19837
      858    19838    4            CASE (  214 /* L_AUTOCURSOR */ ) ;
      859    19839    4               TCTL$ -> VLP$TRMCTRL.AUTOCURSOR# = YES_NO_FLG;
      860    19840
      861    19841    4            CASE (  215 /* L_KEEPTYPAHD */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:30   
      862    19842    4               TCTL$ -> VLP$TRMCTRL.KEEPTYPAHD# = YES_NO_FLG;
      863    19843
      864    19844    4            CASE (  45 /* UPPERCASE */ ) ;
      865    19845    4               TCTL$ -> VLP$TRMCTRL.UPPERCASE# = YES_NO_FLG;
      866    19846
      867    19847    4            CASE (  22 /* LOWERCASE */ ) ;
      868    19848    4               TCTL$ -> VLP$TRMCTRL.LOWERCASE# = YES_NO_FLG;
      869    19849
      870    19850    4            CASE (  18 /* HALFDUXPAPERTAPE */ ) ;
      871    19851    4               TCTL$ -> VLP$TRMCTRL.HALFDUXPAPERTAPE# = YES_NO_FLG;
      872    19852
      873    19853    4            CASE (  17 /* FULLDUXPAPERTAPE */ ) ;
      874    19854    4               TCTL$ -> VLP$TRMCTRL.FULLDUXPAPERTAPE# = YES_NO_FLG;
      875    19855
      876    19856    4            CASE (  0 /* ACTONTRN */ ) ;
      877    19857    4               TCTL$ -> VLP$TRMCTRL.ACTONTRN# = YES_NO_FLG;
      878    19858
      879    19859    4            CASE (  2 /* APLLCNRM */ ) ;
      880    19860    4               TCTL$ -> VLP$TRMCTRL.APLLCNRM# = YES_NO_FLG;
      881    19861
      882    19862    4            CASE (  35 /* RETYPOVR */ ) ;
      883    19863    4               TCTL$ -> VLP$TRMCTRL.RETYPOVR# = YES_NO_FLG;
      884    19864
      885    19865    4            CASE (  16 /* EDITOVR */ ) ;
      886    19866    4               TCTL$ -> VLP$TRMCTRL.EDITOVR# = YES_NO_FLG;
      887    19867
      888    19868    4            CASE (  36 /* SCROLL */ ) ;
      889    19869    4               TCTL$ -> VLP$TRMCTRL.SCROLL# = YES_NO_FLG;
      890    19870
      891    19871    4            CASE (  29 /* PAGEHALT */ ) ;
      892    19872    4               TCTL$ -> VLP$TRMCTRL.PAGEHALT# = YES_NO_FLG;
      893    19873
      894    19874    4            CASE (  31 /* PRINTHALT */ ) ;
      895    19875    4               TCTL$ -> VLP$TRMCTRL.PRINTHALT# = YES_NO_FLG;
      896    19876
      897    19877    4            CASE (  34 /* RELPAGE */ ) ;
      898    19878    4               TCTL$ -> VLP$TRMCTRL.RELPAGE# = YES_NO_FLG;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:31   
      899    19879
      900    19880    4            CASE (  38 /* SIMPERF */ ) ;
      901    19881    4               TCTL$ -> VLP$TRMCTRL.SIMPERF# = YES_NO_FLG;
      902    19882
      903    19883    4            CASE (  42 /* TRUNCATE */ ) ;
      904    19884    4               TCTL$ -> VLP$TRMCTRL.TRUNCATE# = YES_NO_FLG;
      905    19885
      906    19886    4            CASE ( 164 /* WRAPPAGE */ ) ;
      907    19887    4               TCTL$ -> VLP$TRMCTRL.WRAPPAGE# = YES_NO_FLG;
      908    19888
      909    19889    4            CASE (  25 /* NOOPTMIZ */ ) ;
      910    19890    4               TCTL$ -> VLP$TRMCTRL.NOOPTMIZ# = YES_NO_FLG;
      911    19891
      912    19892    4            CASE (  58 /* SINPUTSZ */ ) ;
      913    19893    4               IF (OP_CODE = 7 /* DC */) THEN
      914    19894    4                  TCTL$ -> VLP$TRMCTRL.SINPUTSZ# = 255;
      915    19895    4               ELSE
      916    19896    5               DO;
      917    19897    5                  CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
      918    19898    5                  TCTL$ -> VLP$TRMCTRL.SINPUTSZ# = VAL ;
      919    19899    5                  END; /*  Else  */
      920    19900
      921    19901    4            CASE (  46 /* AWIDTH */ ) ;
      922    19902    4               IF (OP_CODE = 7 /* DC */) THEN
      923    19903    5               DO;
      924    19904    5                  TATR$ -> VLP$TRMATTR.WIDTH# = 255;
      925    19905    5                  TATR$ -> VLP$TRMATTR.EXTWID# = AS_FALSE ;
      926    19906    5                  END; /*  If OP_CODE  */
      927    19907    4               ELSE
      928    19908    5               DO;
      929    19909    5                  CALL GET_DEC_VAL( 508 ) ALTRET( NEXT_PRO_OPT );
      930    19910    5                  IF (VAL > 254) THEN
      931    19911    6                  DO;
      932    19912    6                     VAL = VAL - 254 ;
      933    19913    6                     TATR$ -> VLP$TRMATTR.EXTWID# = AS_TRUE ;
      934    19914    6                     END ; /*  Then do  */
      935    19915    5                  ELSE
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:32   
      936    19916    5                     TATR$ -> VLP$TRMATTR.EXTWID# = AS_FALSE ;
      937    19917    5                  TATR$ -> VLP$TRMATTR.WIDTH# = VAL ;
      938    19918    5                  END; /*  Else  */
      939    19919
      940    19920    4            CASE ( 52 /* HEIGHT */ ) ;
      941    19921    4               IF (OP_CODE = 7 /* DC */) THEN
      942    19922    4                  TATR$ -> VLP$TRMATTR.HEIGHT# = 255;
      943    19923    4               ELSE
      944    19924    5               DO;
      945    19925    5                  CALL GET_DEC_VAL ( 999 ) ALTRET( NEXT_PRO_OPT );
      946    19926    5                  TATR$ -> VLP$TRMATTR.HEIGHT# = VAL ;
      947    19927    5                  END; /*  Else  */
      948    19928
      949    19929    4            CASE (  33 /* PROGDTAB */ ) ;
      950    19930    4               TATR$ -> VLP$TRMATTR.PROGDTAB# = YES_NO_FLG;
      951    19931
      952    19932    4            CASE (  26 /* OPDTAB */ ) ;
      953    19933    4               TATR$ -> VLP$TRMATTR.OPDTAB# = YES_NO_FLG;
      954    19934
      955    19935    4            CASE (  14 /* DEVSCROLL */ ) ;
      956    19936    4               TATR$ -> VLP$TRMATTR.DEVSCROLL# = YES_NO_FLG;
      957    19937    4            CASE (  216 /* L_FF_INCCR    */ ) ;
      958    19938    4               TATR$ -> VLP$TRMATTR.FF_INCCR# = YES_NO_FLG;
      959    19939
      960    19940    4            CASE (  217 /* L_MICROFPL   */ ) ;
      961    19941    4               TATR$ -> VLP$TRMATTR.MICROFPL# = YES_NO_FLG;
      962    19942
      963    19943    4               TATR$ -> VLP$TRMATTR.CURSORUP# = YES_NO_FLG;
      964    19944
      965    19945    4            CASE (  11 /* DEVICECR */ ) ;
      966    19946    4               TATR$ -> VLP$TRMATTR.DEVICECR# = YES_NO_FLG;
      967    19947
      968    19948    4            CASE (  12 /* DEVICELF */ ) ;
      969    19949    4               TATR$ -> VLP$TRMATTR.DEVICELF# = YES_NO_FLG;
      970    19950
      971    19951    4            CASE (  10 /* DEVICEBS */ ) ;
      972    19952    4               TATR$ -> VLP$TRMATTR.DEVICEBS# = YES_NO_FLG;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:33   
      973    19953
      974    19954    4            CASE (  3 /* AUTONL */ ) ;
      975    19955    4               TATR$ -> VLP$TRMATTR.AUTONL# = YES_NO_FLG;
      976    19956
      977    19957    4            CASE (  6 /* CRISNL */ ) ;
      978    19958    4               TATR$ -> VLP$TRMATTR.CRISNL# = YES_NO_FLG;
      979    19959
      980    19960    4            CASE (  21 /* LFISNL */ ) ;
      981    19961    4               TATR$ -> VLP$TRMATTR.LFISNL# = YES_NO_FLG;
      982    19962
      983    19963    4            CASE (  5 /* BLANKERASES */ ) ;
      984    19964    4               TATR$ -> VLP$TRMATTR.BLANKERASES# = YES_NO_FLG;
      985    19965
      986    19966    4            CASE (  13 /* DEVPOSOPTS */ ) ;
      987    19967    4               TATR$ -> VLP$TRMATTR.DEVPOSOPTS# = YES_NO_FLG;
      988    19968
      989    19969    4            CASE (  43 /* TRUOVRPRT */ ) ;
      990    19970    4               TATR$ -> VLP$TRMATTR.TRUOVRPRT# = YES_NO_FLG;
      991    19971
      992    19972    4            CASE (  1 /* APL */ ) ;
      993    19973    4               TATR$ -> VLP$TRMATTR.APL# = YES_NO_FLG;
      994    19974
      995    19975    4            CASE (  4 /* BIN */ ) ;
      996    19976    4               TATR$ -> VLP$TRMATTR.BIN# = YES_NO_FLG;
      997    19977
      998    19978    4            CASE (  23 /* LOWERCASEPRINTS */ ) ;
      999    19979    4               TATR$ -> VLP$TRMATTR.LOWERCASEPRINTS# = YES_NO_FLG;
     1000    19980
     1001    19981    4            CASE (  165 /* LIMBOCLM */ ) ;
     1002    19982    4               TATR$ -> VLP$TRMATTR.LIMBOCLM# = YES_NO_FLG;
     1003    19983
     1004    19984    4            CASE (  166 /* LOCALECHO */ ) ;
     1005    19985    4               TATR$ -> VLP$TRMATTR.LOCALECHO# = YES_NO_FLG;
     1006    19986
     1007    19987    4            CASE (  85 /* PARITY */ ) ;
     1008    19988    5               DO CASE(OP_CODE) ;
     1009    19989    5                  CASE( 0 /* NONE */,
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:34   
     1010    19990    5                    1 /* ODD */,
     1011    19991    5                    2 /* EVEN */,
     1012    19992    5                    3 /* ONE */,
     1013    19993    5                    4 /* ZERO */,
     1014    19994    5                    7 /* DC */) ;
     1015    19995    5                     TATR$ -> VLP$TRMATTR.PARITY# = OP_CODE ;
     1016    19996    5                  CASE( ELSE ) ;
     1017    19997        /*E*  ERROR:    ASD-E$PARITYERR-C
     1018    19998              MESSAGE:  Illegal keyword.
     1019    19999              MESSAGE1: PARITY can be:
     1020    20000                          1)  NONE
     1021    20001                          2)  ODD
     1022    20002                          3)  EVEN
     1023    20003                          4)  ONE
     1024    20004                          5)  ZERO
     1025    20005                          6)  DC
     1026    20006        */
     1027    20007                          %SCREAM( ERR#=E$PARITYERR, LEVEL=ERROR, MID='D');
     1028    20022    5                  END ; /* Do case */
     1029    20023
     1030    20024    4            CASE (  19 /* INPUT */ ) ;
     1031    20025    4               PHDR$ -> PRO$HDR.IO.INPUT = YES_NO_FLG;
     1032    20026    4               TATR$ -> VLP$TRMATTR.INPUT# = YES_NO_FLG;
     1033    20027
     1034    20028    4            CASE (  27 /* OUTPUT */ ) ;
     1035    20029    4               PHDR$ -> PRO$HDR.IO.OUTPUT = YES_NO_FLG;
     1036    20030    4               TATR$ -> VLP$TRMATTR.OUTPUT# = YES_NO_FLG;
     1037    20031
     1038    20032    4            CASE (  32 /* PRINTTYPE */ ) ;
     1039    20033    4               TATR$ -> VLP$TRMATTR.PRINTTYPE# = YES_NO_FLG;
     1040    20034
     1041    20035    4            CASE (  44 /* TTYTYPE */ ) ;
     1042    20036    4               TATR$ -> VLP$TRMATTR.TTYTYPE# = YES_NO_FLG;
     1043    20037
     1044    20038    4            CASE ( 56 /* MINREC */ ) ;
     1045    20039    4               IF (OP_CODE = 7 /* DC */) THEN
     1046    20040    4                  TATR$ -> VLP$TRMATTR.MINREC# = 255;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:35   
     1047    20041    4               ELSE
     1048    20042    5               DO;
     1049    20043    5                  CALL GET_DEC_VAL ( 255 ) ALTRET( NEXT_PRO_OPT );
     1050    20044    5                  TATR$ -> VLP$TRMATTR.MINREC# = VAL ;
     1051    20045    5                  END; /*  Else  */
     1052    20046
     1053    20047    4            CASE ( 59 /* SPEED */ ) ;
     1054    20048    4               TATR$ -> VLP$TRMATTR.SPEED# = OP_CODE ;
     1055    20049
     1056    20050    4            CASE ( 79 /* CHARSETNAME */ ) ;
     1057    20051    5               IF OUT$SYM.COUNT > 8 THEN DO;
     1058    20052        /*E*  ERROR:    ASD-E$CHARSETTOOBIG-C
     1059    20053              MESSAGE:  CHARACTER SET NAME too long.
     1060    20054              MESSAGE1: CHARACTER SET NAME can be at most 8 characters long.
     1061    20055        */
     1062    20056                       %SCREAM( ERR#=E$CHARSETTOOBIG, LEVEL=ERROR, MID='D');
     1063    20071    5                  END ;    /*  Then do  */
     1064    20072    5               ELSE DO;
     1065    20073    5                  TATR$ -> VLP$TRMATTR.CHARSETNAME# = OUT$SYM.TEXT ;
     1066    20074
     1067    20075    5                  IF TATR$ -> VLP$TRMATTR.CHARSETNAME# = AS_BLANK THEN
     1068    20076    5                     TATR$ -> VLP$TRMATTR.CHARSETNAME# = 'NONE';
     1069    20077    5                  END;
     1070    20078
     1071    20079    4            CASE ( 78 /* FCNTBL */ ) ;
     1072    20080    4               IF OP_CODE = 7   /*  NONE_VAL  */ THEN
     1073    20081    4                  TATR$ -> VLP$TRMATTR.FCNTBL# = AS_BLANK;
     1074    20082    4               ELSE
     1075    20083    5                  IF OUT$SYM.COUNT > 8 THEN DO;
     1076    20084        /*E*  ERROR:    ASD-E$FCNTBLTOOBIG-C
     1077    20085              MESSAGE:  FCNTBL too long.
     1078    20086              MESSAGE1: FCNTBL can be at most 8 characters long.
     1079    20087        */
     1080    20088                          %SCREAM( ERR#=E$FCNTBLTOOBIG, LEVEL=ERROR, MID='D');
     1081    20103    5                     END ; /*  Then do  */
     1082    20104    4                  ELSE
     1083    20105    4                     TATR$ -> VLP$TRMATTR.FCNTBL# = OUT$SYM.TEXT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:36   
     1084    20106
     1085    20107    4            CASE ( 55 /* PWIDTH */ ) ;
     1086    20108    4               IF (OP_CODE = 7 /* DC */) THEN
     1087    20109    5               DO;
     1088    20110    5                  PLTN$ -> VLP$PLATEN.WIDTH# = 255;
     1089    20111    5                  PLTN$ -> VLP$PLATEN.EXTWID# = AS_FALSE ;
     1090    20112    5                  END; /*  If OP_CODE  */
     1091    20113    4               ELSE
     1092    20114    5               DO;
     1093    20115    5                  CALL GET_DEC_VAL( 999 ) ALTRET( NEXT_PRO_OPT );
     1094    20116    5                  IF (VAL = 255) THEN
     1095    20117    6                  DO;
     1096    20118    6                     PLTN$ -> VLP$PLATEN.WIDTH# = 255;
     1097    20119    6                     PLTN$ -> VLP$PLATEN.EXTWID# = AS_FALSE ;
     1098    20120    6                     END; /*  If val = 255  */
     1099    20121    5                  ELSE
     1100    20122    6                  DO;
     1101    20123    7                     IF VAL > 254 THEN DO;
     1102    20124    7                        VAL = VAL - 254 ;
     1103    20125    7                        PLTN$ -> VLP$PLATEN.EXTWID# = AS_TRUE ;
     1104    20126    7                        END ; /*  Then do  */
     1105    20127    6                     ELSE
     1106    20128    6                        PLTN$ -> VLP$PLATEN.EXTWID# = AS_FALSE ;
     1107    20129    6                     PLTN$ -> VLP$PLATEN.WIDTH# = VAL ;
     1108    20130    6                     END; /*  Else  */
     1109    20131    5                  END; /*  Else  */
     1110    20132
     1111    20133    4            CASE ( 53 /* LENGTH */ ) ;
     1112    20134    4               IF (OP_CODE = 7 /* DC */) THEN
     1113    20135    4                  PLTN$ -> VLP$PLATEN.LENGTH# = 255;
     1114    20136    4               ELSE
     1115    20137    5               DO;
     1116    20138    5                  CALL GET_DEC_VAL ( 555 ) ALTRET( NEXT_PRO_OPT );
     1117    20139    5                  PLTN$ -> VLP$PLATEN.LENGTH# = VAL ;
     1118    20140    5                  END; /*  Else  */
     1119    20141
     1120    20142    4            CASE ( 54 /* LIMBO */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:37   
     1121    20143    4               IF (OP_CODE = 7 /* DC */) THEN
     1122    20144    4                  PLTN$ -> VLP$PLATEN.LIMBO# = 255;
     1123    20145    4               ELSE
     1124    20146    5               DO;
     1125    20147    5                  CALL GET_DEC_VAL ( 444 ) ALTRET( NEXT_PRO_OPT );
     1126    20148    5                  PLTN$ -> VLP$PLATEN.LIMBO# = VAL ;
     1127    20149    5                  END; /*  Else  */
     1128    20150
     1129    20151    4            CASE ( 51 /* FIRSTLINE */ ) ;
     1130    20152    4               IF (OP_CODE = 7 /* DC */) THEN
     1131    20153    4                  PLTN$ -> VLP$PLATEN.FIRSTLINE# = 255;
     1132    20154    4               ELSE
     1133    20155    5               DO;
     1134    20156    5                  CALL GET_DEC_VAL ( 333 ) ALTRET( NEXT_PRO_OPT );
     1135    20157    5                  PLTN$ -> VLP$PLATEN.FIRSTLINE# = VAL ;
     1136    20158    5                  END; /*  Else  */
     1137    20159
     1138    20160    4            CASE ( 218 /* TABS */ ) ;
     1139    20161    4               T_TAB = '0'B ;
     1140    20162    5               DO K = 0  TO PTR$ -> P$NODE.SUBNODES-1 ;
     1141    20163
     1142    20164    5                  BLK$ = PTR$ -> P$NODE.SUBLK$(K) ;
     1143    20165    5                  CALL GET_DEC_VAL ( 255 ) ALTRET( NEXT_PRO_OPT );
     1144    20166    5                  T_TAB(K) = VAL ;
     1145    20167    6                  IF K > 0 THEN DO;
     1146    20168    7                     IF T_TAB(K) <= T_TAB(K-1) THEN DO;
     1147    20169        /*E*  ERROR:    ASD-E$TABSNOTINCREASING-C
     1148    20170              MESSAGE:  TABS are not increasing in value.
     1149    20171        */
     1150    20172                             %SCREAM( ERR#=E$TABSNOTINCREASING, LEVEL=ERROR, MID='D');
     1151    20187    7                        GOTO NEXT_PRO_OPT ;
     1152    20188    7                        END ; /*  If T_TAB(K)  */
     1153    20189    6                     END ;           /*  If k > 0  */
     1154    20190    5                  END ;                   /*  Do k = 0  */
     1155    20191    4               DTABS$ -> VLP$TAB = T_TAB ;
     1156    20192                                                              /* Control character */
     1157    20193    4            CASE ( 50 /* DVCOTPBFRSIZ */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:38   
     1158    20194    4               IF PRO_TYPE = ASL_3270_TYP
     1159    20195    5               THEN DO;
     1160    20196    5                  CALL GET_DEC_VAL (4096) ALTRET (NEXT_PRO_OPT);
     1161    20197    5                  KL$UBWORD.REPLACE = SPLIT;
     1162    20198    5                  T3270$-> KL$3270.DVCBFRSIZ = KL$UBWORD.NUM ;
     1163    20199    5                  END;
     1164    20200    5               ELSE DO;
     1165    20201    5                  CALL GET_DEC_VAL ( %XG_DEFAULT_MAX_NDC# ) ALTRET (NEXT_PRO_OPT);
     1166    20202    5                  KL$UBWORD.REPLACE = SPLIT;
     1167    20203    5                  TCCHR$ -> KL$CCHR.DVCOTPBFRSIZ = KL$UBWORD.NUM ;
     1168    20204    5                  END;
     1169    20205
     1170    20206    4            CASE ( 83 /* DVCFLWCTRALG */ ) ;
     1171    20207    4               TATR$ -> VLP$TRMATTR.DVCFLWCTRALG# = OP_CODE;
     1172    20208
     1173    20209    4            CASE( 84 /* HPA_ALG */ ) ;
     1174    20210    4               TCCHR$ -> KL$CCHR.HPA_ALG = OP_CODE;
     1175    20211
     1176    20212    4            CASE( 82 /* CUP_ALG */ ) ;
     1177    20213    4               TCCHR$ -> KL$CCHR.CUP_ALG = OP_CODE;
     1178    20214
     1179    20215    4            CASE( 87 /* CUP_BIS */ ) ;
     1180    20216    5               IF OP_CODE = 22 /* HEX */ THEN DO;
     1181    20217    5                  CALL GET_HEX_VAL( 1 ) ALTRET( NEXT_PRO_OPT );
     1182    20218    5                  TCCHR$ -> KL$CCHR.CUP_BIS = HEX_V;
     1183    20219    5                  END ; /* Then do */
     1184    20220    5               ELSE DO;
     1185    20221    5                  CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1186    20222    5                  TCCHR$ -> KL$CCHR.CUP_BIS = VAL ;
     1187    20223    5                  END ; /* Else do */
     1188    20224
     1189    20225    4            CASE( 7 /* CUP_CLMFRS */ ) ;
     1190    20226    4               TCCHR$ -> KL$CCHR.CUP_CLMFRS = YES_NO;
     1191    20227
     1192    20228    4            CASE( 8 /* CUP_CMP */ ) ;
     1193    20229    4               TCCHR$ -> KL$CCHR.CUP_CMP = YES_NO;
     1194    20230
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:39   
     1195    20231    4            CASE( 101 /* ICH_CHR */ ) ;
     1196    20232    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1197    20233    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ICH_CHR) ;
     1198    20234    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1199    20235
     1200    20236    4            CASE( 94 /* DCH_CHR */ ) ;
     1201    20237    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1202    20238    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DCH_CHR);
     1203    20239    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1204    20240
     1205    20241    4            CASE( 102 /* RSTINSMOD_CHR */ ) ;
     1206    20242    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1207    20243    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.RSTINSMOD_CHR);
     1208    20244    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1209    20245
     1210    20246    4            CASE( 92 /* CUP_CHR */ ) ;
     1211    20247    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1212    20248    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUP_CHR);
     1213    20249    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1214    20250
     1215    20251    4            CASE( 95 /* ED0_CHR */ ) ;
     1216    20252    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1217    20253    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ED0_CHR);
     1218    20254    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1219    20255
     1220    20256    4            CASE( 97 /* EL0_CHR */ ) ;
     1221    20257    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1222    20258    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.EL0_CHR);
     1223    20259    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1224    20260
     1225    20261    4            CASE( 89 /* CUB_CHR */ ) ;
     1226    20262    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1227    20263    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUB_CHR);
     1228    20264    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1229    20265
     1230    20266    4            CASE( 91 /* CUF_CHR */ ) ;
     1231    20267    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:40   
     1232    20268    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUF_CHR);
     1233    20269    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1234    20270
     1235    20271    4            CASE( 93 /* CUU_CHR */ ) ;
     1236    20272    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1237    20273    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUU_CHR);
     1238    20274    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1239    20275
     1240    20276    4            CASE( 90 /* CUD_CHR */ ) ;
     1241    20277    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1242    20278    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUD_CHR);
     1243    20279    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1244    20280
     1245    20281    4            CASE( 96 /* ED2_CHR */ ) ;
     1246    20282    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1247    20283    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ED2_CHR);
     1248    20284    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1249    20285
     1250    20286    4            CASE( 99 /* HOM_CHR */ ) ;
     1251    20287    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1252    20288    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.HOM_CHR);
     1253    20289    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1254    20290
     1255    20291    4            CASE( 100 /* HTS_CHR */ ) ;
     1256    20292    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1257    20293    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.HTS_CHR);
     1258    20294    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1259    20295
     1260    20296    4            CASE( 104 /* TBC3_CHR */ ) ;
     1261    20297    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1262    20298    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.TBC3_CHR);
     1263    20299    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1264    20300
     1265    20301    4            CASE( 103 /* SETFRMLNG_CHR */ ) ;
     1266    20302    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1267    20303    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.SETFRMLNG_CHR);
     1268    20304    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:41   
     1269    20305
     1270    20306    4            CASE( 98 /* FRMFED_CHR */ ) ;
     1271    20307    4               IF PRO_TYPE = ASL_3270_TYP
     1272    20308    5               THEN DO;
     1273    20309    5                  IF OP_CODE = 2   /*  NO_VAL  */
     1274    20310    6                  THEN DO;
     1275    20311    6                     T3270$ -> KL$3270.FRMFED = AS_FALSE;
     1276    20312    6                     END;
     1277    20313    6                  ELSE DO;
     1278    20314    6                     T3270$-> KL$3270.FRMFED = AS_TRUE;
     1279    20315    6                     END;
     1280    20316    5                  END;
     1281    20317    5               ELSE DO;
     1282    20318    5                  IF (OP_CODE = 1   /*  YES_VAL  */ OR
     1283    20319    5                       OP_CODE = 2   /*  NO_VAL  */ )
     1284    20320    6                  THEN DO;
     1285    20321        /*E*  ERROR:   ASD-E$NOYESNOFORNOT3270-C
     1286    20322              MESSAGE: YES or NO can only be specified for 3270 type profiles.
     1287    20323              MESSAGE1: You specified a profile type other than 3270, and
     1288    20324                       tried to set a form feed character with other than hex.
     1289    20325        */
     1290    20326                          %SCREAM (ERR#=E$NOYESNOFORNOT3270, LEVEL=ERROR,MID='D');
     1291    20341    6                     END;
     1292    20342    6                  ELSE DO;
     1293    20343    6                     CALL GET_HEX_VAL (255) ALTRET (NEXT_PRO_OPT);
     1294    20344    6                     PTROPT$ = ADDR (TCCHR$->KL$CCHR.FRMFED_CHR);
     1295    20345    6                     CALL PLACE_OPT (PTROPT$) ALTRET(NEXT_PRO_OPT);
     1296    20346    6                     END;
     1297    20347    5                  END;
     1298    20348
     1299    20349    4            CASE ( 180 /* L_MSGLIN_CHR */ ) ;
     1300    20350    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1301    20351    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.MSGLIN_CHR#);
     1302    20352    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1303    20353
     1304    20354
     1305    20355    4            CASE( 61 /* TMNALG_AFTCR */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:42   
     1306    20356    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1307    20357    4               TCCHR$ -> KL$CCHR.TMNALG_AFTCR = VAL ;
     1308    20358
     1309    20359    4            CASE( 65 /* TMNALG_BFRCR */ ) ;
     1310    20360    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1311    20361    4               TCCHR$ -> KL$CCHR.TMNALG_BFRCR = VAL ;
     1312    20362
     1313    20363    4            CASE( 64 /* TMNALG_AFTLF */ ) ;
     1314    20364    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1315    20365    4               TCCHR$ -> KL$CCHR.TMNALG_AFTLF = VAL ;
     1316    20366
     1317    20367    4            CASE( 66 /* TMNALG_BFRLF */ ) ;
     1318    20368    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1319    20369    4               TCCHR$ -> KL$CCHR.TMNALG_BFRLF = VAL ;
     1320    20370
     1321    20371    4            CASE( 63 /* TMNALG_AFTHT */ ) ;
     1322    20372    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1323    20373    4               TCCHR$ -> KL$CCHR.TMNALG_AFTHT = VAL ;
     1324    20374
     1325    20375    4            CASE( 60 /* TMNALG_AFTCUP */ ) ;
     1326    20376    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1327    20377    4               TCCHR$ -> KL$CCHR.TMNALG_AFTCUP = VAL ;
     1328    20378
     1329    20379    4            CASE( 62 /* TMNALG_AFTHPA */ ) ;
     1330    20380    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1331    20381    4               TCCHR$ -> KL$CCHR.TMNALG_AFTHPA = VAL ;
     1332    20382
     1333    20383    4            CASE( 162 /* TMNALG_FILCHR */ ) ;
     1334    20384    4               CALL GET_HEX_VAL (1) ALTRET( NEXT_PRO_OPT );
     1335    20385    4               TCCHR$ -> KL$CCHR.TMNALG_FILCHR = HEX_V;
     1336    20386
     1337    20387    4            CASE( 69 /* TIMAFTCTRFNC */ );
     1338    20388    4               CALL GET_TA(TCCHR$->KL$CCHR.CTRFNCTIM) ALTRET( NEXT_PRO_OPT);
     1339    20389
     1340    20390    4            CASE( 67 /* BS_TIM */ ) ;
     1341    20391    4               CALL GET_TA( TCCHR$->KL$CCHR.BS_TIM ) ALTRET( NEXT_PRO_OPT );
     1342    20392
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:43   
     1343    20393    4            CASE( 68 /* ERSTIM */ ) ;
     1344    20394    4               CALL GET_TA( TCCHR$->KL$CCHR.ERSTIM ) ALTRET(NEXT_PRO_OPT);
     1345    20395
     1346    20396    4            CASE( 70 /* TMNALG_PRM1 */ ) ;
     1347    20397    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM1) ALTRET(NEXT_PRO_OPT);
     1348    20398
     1349    20399    4            CASE( 71 /* TMNALG_PRM2 */ ) ;
     1350    20400    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM2) ALTRET(NEXT_PRO_OPT);
     1351    20401
     1352    20402    4            CASE( 72 /* TMNALG_PRM3 */ ) ;
     1353    20403    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM3) ALTRET(NEXT_PRO_OPT);
     1354    20404
     1355    20405    4            CASE( 73 /* TMNALG_PRM4 */ ) ;
     1356    20406    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM4) ALTRET(NEXT_PRO_OPT);
     1357    20407
     1358    20408    4            CASE( 74 /* TMNALG_PRM5 */ ) ;
     1359    20409    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM5) ALTRET(NEXT_PRO_OPT);
     1360    20410
     1361    20411    4            CASE( 75 /* TMNALG_PRM6 */ ) ;
     1362    20412    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM6) ALTRET(NEXT_PRO_OPT);
     1363    20413
     1364    20414    4            CASE( 76 /* TMNALG_PRM7 */ ) ;
     1365    20415    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM7) ALTRET(NEXT_PRO_OPT);
     1366    20416
     1367    20417    4            CASE( 77 /* TMNALG_PRM8 */ ) ;
     1368    20418    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM8) ALTRET(NEXT_PRO_OPT);
     1369    20419
     1370    20420    4            CASE( 86 /* PROTYP */ ) ;
     1371    20421
     1372    20422    4               TRMD$ -> KL$TRMD.PROTYP# = OP_CODE ;
     1373    20423
     1374    20424    4            CASE( 48 /* BLKRECS */ ) ;
     1375    20425    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1376    20426    4               TRMD$ -> KL$TRMD.BLKRECS# = VAL ;
     1377    20427
     1378    20428    4            CASE( 47 /* BLKBYTES */ ) ;
     1379    20429    4               CALL GET_DEC_VAL( %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:44   
     1380    20430    4               KL$UBWORD.REPLACE = SPLIT;
     1381    20431    4               TRMD$ -> KL$TRMD.BLKBYTES# = KL$UBWORD.NUM ;
     1382    20432
     1383    20433    4            CASE( 57 /* RETRYS */ ) ;
     1384    20434    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1385    20435    4               TRMD$ -> KL$TRMD.RETRYS# = VAL ;
     1386    20436
     1387    20437    4            CASE( 49 /* DELAYS */ ) ;
     1388    20438    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );
     1389    20439    4               TRMD$ -> KL$TRMD.DELAYS# = VAL ;
     1390    20440
     1391    20441    4            CASE( 212 /* L_CALL_DELAY */ ) ;
     1392    20442    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1393    20443    4               VIRCIR$ -> KL$VIRCIR.CDLY# = VAL;
     1394    20444
     1395    20445    4            CASE( 24 /* MULSTRM */ ) ;
     1396    20446    4               TRMD$ -> KL$TRMD.MULSTRM# = YES_NO_FLG;
     1397    20447
     1398    20448    4            CASE( 108 /* COMPRESSION */ );
     1399    20449    5               DO CASE( OP_CODE );
     1400    20450    5                  CASE( 1   /*  YES_VAL  */ );
     1401    20451    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_YES# ;
     1402    20452    5                  CASE( 2   /*  NO_VAL  */ );
     1403    20453    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_NO# ;
     1404    20454    5                  CASE( 3 /* LINE_VAL */ );
     1405    20455    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_LINE# ;
     1406    20456    5                  CASE( 4 /* BLANKS_VAL */ );
     1407    20457    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_BLANKS# ;
     1408    20458    5                  END;
     1409    20459
     1410    20460    4            CASE( 107 /* INTERVAL */ );
     1411    20461    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1412    20462    4               TRMD$ -> KL$TRMD.INTERVAL# = VAL;
     1413    20463
     1414    20464    4            CASE(  80 /* EMCHR */ ) ;
     1415    20465    4               CALL GET_HEX_VAL( 1 ) ALTRET( NEXT_PRO_OPT );
     1416    20466    4               TRMD$ -> KL$TRMD.EMCHR# =  HEX_V ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:45   
     1417    20467
     1418    20468    4            CASE(  81 /* IRSCHR */ ) ;
     1419    20469    4               CALL GET_HEX_VAL( 1 ) ALTRET( NEXT_PRO_OPT );
     1420    20470    4               TRMD$ -> KL$TRMD.IRSCHR# = HEX_V ;
     1421    20471
     1422    20472    4            CASE(  88 /* LSTRECCTN */ ) ;
     1423    20473    4               TRMD$ -> KL$TRMD.LSTRECCTN# = YES_NO;
     1424    20474
     1425    20475    4            CASE(  105 /* ERRDUPBLK */ ) ;
     1426    20476    4               TRMD$ -> KL$TRMD.ERRDUPBLK# = YES_NO;
     1427    20477
     1428    20478    4            CASE(  106 /* RRR */ ) ;
     1429    20479    4               TRMD$ -> KL$TRMD.RRR# = YES_NO;
     1430    20480
     1431    20481    4            CASE(  113 /* SLC */ ) ;
     1432    20482    4               TRMD$ -> KL$TRMD.SLC# = YES_NO;
     1433    20483
     1434    20484    4            CASE(  116 /* SLCALLBLK */ ) ;
     1435    20485    4               TRMD$ -> KL$TRMD.SLCALLBLK# = YES_NO;
     1436    20486
     1437    20487    4            CASE(  117 /* PADSIGNON */ ) ;
     1438    20488    4               TRMD$ -> KL$TRMD.PADSIGNON# = YES_NO;
     1439    20489
     1440    20490    4            CASE( 109 /* TIMEOUT*/ );
     1441    20491    4               CALL GET_DEC_VAL ( 255, 1 ) ALTRET( NEXT_PRO_OPT );
     1442    20492    4               LINK$ -> KL$LINK.TMT# = VAL;
     1443    20493
     1444    20494    4            CASE( 110 /* RETRANSMISSIONS */ );
     1445    20495    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1446    20496    4               LINK$ -> KL$LINK.RTR# = VAL;
     1447    20497
     1448    20498    4            CASE( 111 /* WINDOW */ );
     1449    20499
     1450    20500    4               IF LINK$ -> KL$LINK.EXTSEQ# THEN
     1451    20501    4                  CALL GET_DEC_VAL( 127, 1 ) ALTRET( NEXT_PRO_OPT );
     1452    20502    4               ELSE
     1453    20503    4                  CALL GET_DEC_VAL( 7, 1 ) ALTRET( NEXT_PRO_OPT );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:46   
     1454    20504    4               LINK$ -> KL$LINK.WND# = VAL;
     1455    20505
     1456    20506    4            CASE( 112 /* FRAME */ );
     1457    20507    4               LINK$ -> KL$LINK.FRMSIZ# = OP_CODE;
     1458    20508
     1459    20509    4            CASE( 114 /* CALLS */ );
     1460    20510    4               LINK$ -> KL$LINK.CLS# = OP_CODE;
     1461    20511
     1462    20512    4            CASE( 115 /* REVERSE */ );
     1463    20513    4               IF P_TYPE = %KLTY_VIRCIR#
     1464    20514    4               THEN VIRCIR$ -> KL$VIRCIR.RVR# = OP_CODE;
     1465    20515    4               ELSE LINK$ -> KL$LINK.RVR# = YES_NO;
     1466    20516
     1467    20517    4            CASE( 118 /* MAXWINDOW */ ) ;
     1468    20518
     1469    20519    4               IF LINK$ -> KL$LINK.EXTSEQ# THEN
     1470    20520    4                  CALL GET_DEC_VAL( 127 ) ALTRET( NEXT_PRO_OPT ) ;
     1471    20521    4               ELSE
     1472    20522    4                  CALL GET_DEC_VAL( 7 ) ALTRET( NEXT_PRO_OPT ) ;
     1473    20523    4               LINK$ -> KL$LINK.MAXWND# = VAL ;
     1474    20524
     1475    20525    4            CASE( 119 /* RESPDELAY */ ) ;
     1476    20526    5               IF P_TYPE = %KLTY_VIRCIR# THEN DO;
     1477    20527    5                  IF VIRCIR$ -> KL$VIRCIR.EXTSEQ# THEN
     1478    20528    5                     CALL GET_DEC_VAL( 127, 1 ) ALTRET( NEXT_PRO_OPT ) ;
     1479    20529    5                  ELSE
     1480    20530    5                     CALL GET_DEC_VAL( 7, 1 ) ALTRET( NEXT_PRO_OPT ) ;
     1481    20531    5                  VIRCIR$ -> KL$VIRCIR.RSPDLY# = VAL;
     1482    20532    5                  END;   /*  Profile type is vircir  */
     1483    20533    5               ELSE DO;
     1484    20534    5                  IF LINK$ -> KL$LINK.EXTSEQ# THEN
     1485    20535    5                     CALL GET_DEC_VAL( 127, 1 ) ALTRET( NEXT_PRO_OPT ) ;
     1486    20536    5                  ELSE
     1487    20537    5                     CALL GET_DEC_VAL( 7, 1 ) ALTRET( NEXT_PRO_OPT ) ;
     1488    20538    5                  LINK$ -> KL$LINK.RSPDLY# = VAL ;
     1489    20539    5                  END;   /*  Profile type is link  */
     1490    20540
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:47   
     1491    20541
     1492    20542    4            CASE ( 211 /* L_CALL_RETRYS */ );
     1493    20543
     1494    20544    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );
     1495    20545    4               VIRCIR$ -> KL$VIRCIR.CRTR# = VAL ;
     1496    20546
     1497    20547    4            CASE ( 210 /* L_CALL_TIM */ );
     1498    20548
     1499    20549    4               CALL GET_DEC_VAL( 255, 3 ) ALTRET( NEXT_PRO_OPT );
     1500    20550    4               VIRCIR$ -> KL$VIRCIR.CTMT# = VAL ;
     1501    20551
     1502    20552    4            CASE ( 200 /* L_CHA_INFO */ ) ;
     1503    20553
     1504    20554    4               IF P_TYPE = %KLTY_LINK# THEN
     1505    20555    4                  LINK$ -> KL$LINK.CHARGE# = YES_NO ;
     1506    20556    4               ELSE
     1507    20557    4                  VIRCIR$ -> KL$VIRCIR.CHARGE# = YES_NO ;
     1508    20558
     1509    20559    4            CASE ( 205 /* L_CLEAR_RETRYS */ );
     1510    20560
     1511    20561    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );
     1512    20562    4               VIRCIR$ -> KL$VIRCIR.CLRRET# = VAL ;
     1513    20563
     1514    20564    4            CASE ( 204 /* L_CLEAR_TIM */ );
     1515    20565
     1516    20566    4               CALL GET_DEC_VAL( 255, 3 ) ALTRET( NEXT_PRO_OPT );
     1517    20567    4               VIRCIR$ -> KL$VIRCIR.CLRTIM# = VAL ;
     1518    20568
     1519    20569    4            CASE ( 207 /* L_DATA_RETRYS */ );
     1520    20570
     1521    20571    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );
     1522    20572    4               VIRCIR$ -> KL$VIRCIR.DATRET# = VAL ;
     1523    20573
     1524    20574    4            CASE ( 206 /* L_DATA_TIM */ );
     1525    20575
     1526    20576    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1527    20577    4               VIRCIR$ -> KL$VIRCIR.DATTIM# = VAL ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:48   
     1528    20578
     1529    20579    4            CASE ( 176 /* FAST SELECT ACCEPT */ ) ;
     1530    20580
     1531    20581    4               LINK$ -> KL$LINK.FSA# = YES_NO ;
     1532    20582
     1533    20583    4            CASE ( 209 /* L_IDLE_TIM */ ) ;
     1534    20584
     1535    20585    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1536    20586    4               IF P_TYPE = %KLTY_LINK# THEN
     1537    20587    4                  LINK$ -> KL$LINK.IDLTIM# = VAL ;
     1538    20588    4               ELSE
     1539    20589    4                  VIRCIR$ -> KL$VIRCIR.IDLTIM# = VAL ;
     1540    20590
     1541    20591    4            CASE ( 208 /* L_INT_TIM */ );
     1542    20592
     1543    20593    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1544    20594    4               VIRCIR$ -> KL$VIRCIR.INTTIM# = VAL ;
     1545    20595
     1546    20596    4            CASE ( 203 /* L_RESET_RETRYS */ );
     1547    20597
     1548    20598    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );
     1549    20599    4               VIRCIR$ -> KL$VIRCIR.RESRET# = VAL ;
     1550    20600
     1551    20601    4            CASE ( 202 /* L_RESET_TIM */ );
     1552    20602
     1553    20603    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1554    20604    4               VIRCIR$ -> KL$VIRCIR.RESTIM# = VAL ;
     1555    20605
     1556    20606    4            CASE ( 121 /* RESTART_RETRYS */ );
     1557    20607
     1558    20608    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );
     1559    20609    4               LINK$ -> KL$LINK.RESRTY# = VAL ;
     1560    20610
     1561    20611    4            CASE ( 120 /* RESTART_TIM */ );
     1562    20612
     1563    20613    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1564    20614    4               LINK$ -> KL$LINK.RESTIM# = VAL ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:49   
     1565    20615
     1566    20616    4            CASE ( 201 /* L_TRANS_DEL */ );
     1567    20617
     1568    20618    4               CALL GET_DEC_VAL( 65535 ) ALTRET( NEXT_PRO_OPT );
     1569    20619    4               VIRCIR$ -> KL$VIRCIR.TRADEL = SPLIT ;
     1570    20620
     1571    20621    4            CASE ( 199 /* L_EXT_SEQ */ ) ;
     1572    20622
     1573    20623    5               IF P_TYPE = %KLTY_LINK# THEN DO;
     1574    20624    5                  LINK$ -> KL$LINK.EXTSEQ# = YES_NO ;
     1575    20625    6                  IF ~YES_NO THEN DO;
     1576    20626    7                     IF LINK$ -> KL$LINK.WND# > 7 THEN DO;
     1577    20627    7                        LINK$ -> KL$LINK.WND# = 7;
     1578    20628        /*E* ERROR: ASD-E$LINKWNDMOD-0
     1579    20629             MESSAGE: Window modified to 7.
     1580    20630             MESSAGE1: The links WINDOW was greater than 7 which is only
     1581    20631                       allowed if EXTENDED SEQUENCE is set.
     1582    20632        */
     1583    20633                             %SCREAM (ERR#=%E$LINKWNDMOD, LEVEL=WARN, MID='D');
     1584    20648    7                        END; /*  modify LINK.WND# */
     1585    20649    7                     IF LINK$ -> KL$LINK.MAXWND# > 7 THEN DO;
     1586    20650    7                        LINK$ -> KL$LINK.MAXWND# = 7;
     1587    20651        /*E* ERROR: ASD-E$LINKMAXWNDMOD-0
     1588    20652             MESSAGE: Max window modified to 7.
     1589    20653             MESSAGE1: The links MAX WINDOW was greater than 7 which is only
     1590    20654                       allowed if EXTENDED SEQUENCE is set.
     1591    20655        */
     1592    20656                             %SCREAM (ERR#=%E$LINKMAXWNDMOD, LEVEL=WARN, MID='D');
     1593    20671    7                        END; /*  modify LINK.MAXWND# */
     1594    20672    7                     IF LINK$ -> KL$LINK.RSPDLY# > 7 THEN DO;
     1595    20673    7                        LINK$ -> KL$LINK.RSPDLY# = 7;
     1596    20674        /*E* ERROR: ASD-E$LINKRSPDLYMOD-0
     1597    20675             MESSAGE: Response delay modified to 7.
     1598    20676             MESSAGE1: The links RESPONSE DELAY was greater than 7 which
     1599    20677                       is only allowed if EXTENDED SEQUENCE is set.
     1600    20678        */
     1601    20679                             %SCREAM (ERR#=%E$LINKRSPDLYMOD, LEVEL=WARN, MID='D');
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:50   
     1602    20694    7                        END; /*  modify LINK.RSPDLY# */
     1603    20695    6                     END; /*  Extended sequence was reset */
     1604    20696    5                  END; /*  profile is type link */
     1605    20697    5               ELSE DO; /*  Profile type is vircir  */
     1606    20698    5                  VIRCIR$ -> KL$VIRCIR.EXTSEQ# = YES_NO ;
     1607    20699    6                  IF ~YES_NO THEN DO;
     1608    20700    7                     IF VIRCIR$ -> KL$VIRCIR.RCVWND# > 7 THEN DO;
     1609    20701    7                        VIRCIR$ -> KL$VIRCIR.RCVWND# = 7;
     1610    20702        /*E* ERROR: ASD-E$VCRECWNDMOD-0
     1611    20703             MESSAGE: Window modified to 7.
     1612    20704             MESSAGE1: The links WINDOW was greater than 7 which is only
     1613    20705                       allowed if EXTENDED SEQUENCE is set.
     1614    20706        */
     1615    20707                             %SCREAM (ERR#=%E$VCRECWNDMOD, LEVEL=WARN, MID='D');
     1616    20722    7                        END; /*  modify VIRCIR.RCVWND# */
     1617    20723    7                     IF VIRCIR$ -> KL$VIRCIR.SNDWND# > 7 THEN DO;
     1618    20724    7                        VIRCIR$ -> KL$VIRCIR.SNDWND# = 7;
     1619    20725        /*E* ERROR: ASD-E$VCSNDWNDMOD-0
     1620    20726             MESSAGE: Max window modified to 7.
     1621    20727             MESSAGE1: The links MAX WINDOW was greater than 7 which is only
     1622    20728                       allowed if EXTENDED SEQUENCE is set.
     1623    20729        */
     1624    20730                             %SCREAM (ERR#=%E$VCSNDWNDMOD, LEVEL=WARN, MID='D');
     1625    20745    7                        END; /*  modify VIRCIR.SNDWND# */
     1626    20746    7                     IF VIRCIR$ -> KL$VIRCIR.RSPDLY# > 7 THEN DO;
     1627    20747    7                        VIRCIR$ -> KL$VIRCIR.RSPDLY# = 7;
     1628    20748        /*E* ERROR: ASD-E$VCRSPDLYMOD-0
     1629    20749             MESSAGE: Response delay modified to 7.
     1630    20750             MESSAGE1: The links RESPONSE DELAY was greater than 7 which
     1631    20751                       is only allowed if EXTENDED SEQUENCE is set.
     1632    20752        */
     1633    20753                             %SCREAM (ERR#=%E$VCRSPDLYMOD, LEVEL=WARN, MID='D');
     1634    20768    7                        END; /*  modify VIRCIR.RSPDLY# */
     1635    20769    6                     END; /*  Extended sequence was reset */
     1636    20770    5                  END; /*  profile is type vc */
     1637    20771    4            CASE( 169 /* RECEIVE SIZE */ ) ;
     1638    20772    4               VIRCIR$ -> KL$VIRCIR.RCVSIZ# = OP_CODE;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:51   
     1639    20773
     1640    20774    4            CASE( 170 /* RECEIVE THROUGHPUT */ ) ;
     1641    20775    4               VIRCIR$ -> KL$VIRCIR.RCVTHR# = OP_CODE ;
     1642    20776
     1643    20777    4            CASE( 171 /* RECEIVE WINDOW */ ) ;
     1644    20778
     1645    20779    4               IF VIRCIR$ -> KL$VIRCIR.EXTSEQ# THEN
     1646    20780    4                  CALL GET_DEC_VAL( 127 ) ALTRET( NEXT_PRO_OPT );
     1647    20781    4               ELSE
     1648    20782    4                  CALL GET_DEC_VAL( 7 ) ALTRET( NEXT_PRO_OPT );
     1649    20783    4               VIRCIR$ -> KL$VIRCIR.RCVWND# = VAL ;
     1650    20784
     1651    20785    4            CASE( 172 /* RESPOND TO COMPLETE */ ) ;
     1652    20786    4               VIRCIR$ -> KL$VIRCIR.RSPTOCMP# = YES_NO;
     1653    20787
     1654    20788    4            CASE( 173 /* SEND SIZE */ ) ;
     1655    20789    4               VIRCIR$ -> KL$VIRCIR.SNDSIZ# = OP_CODE ;
     1656    20790
     1657    20791    4            CASE( 174 /* SEND THROUGHPUT */ ) ;
     1658    20792    4               VIRCIR$ -> KL$VIRCIR.SNDTHR# = OP_CODE ;
     1659    20793
     1660    20794    4            CASE( 175 /* SEND WINDOW */ ) ;
     1661    20795
     1662    20796    4               IF VIRCIR$ -> KL$VIRCIR.EXTSEQ# THEN
     1663    20797    4                  CALL GET_DEC_VAL( 127 ) ALTRET( NEXT_PRO_OPT );
     1664    20798    4               ELSE
     1665    20799    4                  CALL GET_DEC_VAL( 7 ) ALTRET( NEXT_PRO_OPT );
     1666    20800    4               VIRCIR$ -> KL$VIRCIR.SNDWND# = VAL ;
     1667    20801
     1668    20802    4            CASE( 177 /* RESPONSE TIMER */ ) ;
     1669    20803    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1670    20804    4               VIRCIR$ -> KL$VIRCIR.RSPTMR# = VAL ;
     1671    20805
     1672    20806
     1673    20807    4            CASE( 122 /* MAXATRS */ ) ;
     1674    20808    4               IF (OP_CODE = 7 /* DC */) THEN
     1675    20809    4                  TATR$ -> VLP$TRMATTR.MAXATRS# = 255;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:52   
     1676    20810    4               ELSE
     1677    20811    5               DO;
     1678    20812    5                  CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1679    20813    5                  TATR$ -> VLP$TRMATTR.MAXATRS# = VAL;
     1680    20814    5                  END; /*  Else  */
     1681    20815
     1682    20816    4            CASE( 123 /* ATRSCRNPOS */ ) ;
     1683    20817    4               TATR$ -> VLP$TRMATTR.ATRSCRNPOS# = YES_NO_FLG;
     1684    20818
     1685    20819    4            CASE( 124 /* SGR_ALG */ ) ;
     1686    20820    4               TCCHR$ -> KL$CCHR.SGR_ALG# = OP_CODE;
     1687    20821    4               IF OP_CODE = 1 /* ANS */ THEN CALL INITIALIZE_SGR;
     1688    20822
     1689    20823    4            CASE( 125 /* DAQ_ALG */ ) ;
     1690    20824    4               TCCHR$ -> KL$CCHR.DAQ_ALG# = OP_CODE;
     1691    20825    4               IF OP_CODE = 1 /* ANS */ THEN CALL INITIALIZE_DAQ;
     1692    20826
     1693    20827    4            CASE( 126 /* SGRINTRO_CHR */ ) ;
     1694    20828    4               CALL GET_SGR_OPT( 255 ) ALTRET( NEXT_PRO_OPT );
     1695    20829    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.SGRINTRO_CHR#);
     1696    20830    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1697    20831
     1698    20832    4            CASE( 127 /* DAQINTRO_CHR */ ) ;
     1699    20833    4               CALL GET_DAQ_OPT( 255 ) ALTRET( NEXT_PRO_OPT );
     1700    20834    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DAQINTRO_CHR#);
     1701    20835    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1702    20836
     1703    20837    4            CASE( 128 /* SGRINCDAQ */ ) ;
     1704    20838    4               CALL GET_SGR_OPT ALTRET( NEXT_PRO_OPT );
     1705    20839    4               CALL GET_DAQ_OPT ALTRET( NEXT_PRO_OPT );
     1706    20840    4               TCCHR$ -> KL$CCHR.SGRINCDAQ# = YES_NO;
     1707    20841
     1708    20842    4            CASE( 129 /* DFLTPRTMODE */ ) ;
     1709    20843    4               TCCHR$ -> KL$CCHR.DFLTPRTMODE# = YES_NO;
     1710    20844
     1711    20845    4            CASE( 130 /* DCLFLD_ALG */ ) ;
     1712    20846    4               TCCHR$ -> KL$CCHR.DCLFLD_ALG# = OP_CODE;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:53   
     1713    20847    5               IF OP_CODE = 1 /* ANS */ THEN DO;
     1714    20848    5                  TCCHR$ -> KL$CCHR.SGR_ALG# = 1 /* ANS */;
     1715    20849    5                  CALL INITIALIZE_SGR;
     1716    20850    5                  TCCHR$ -> KL$CCHR.DAQ_ALG# = 1 /* ANS */;
     1717    20851    5                  CALL INITIALIZE_DAQ;
     1718    20852    5                  END;
     1719    20853
     1720    20854    4            CASE( 131 /* DCLFRM_CHR */ ) ;
     1721    20855    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1722    20856    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DCLFRM_CHR#);
     1723    20857    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1724    20858
     1725    20859    4            CASE( 132 /* ENDDCLFRM_CHR */ ) ;
     1726    20860    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1727    20861    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ENDDCLFRM_CHR#);
     1728    20862    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1729    20863
     1730    20864    4            CASE( 133 /* RESTORE_DFLTSCRN_CHR */ ) ;
     1731    20865    4               CALL GET_SGR_OPT( 255 ) ALTRET( NEXT_PRO_OPT );
     1732    20866    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.RESTORE_DFLTSCRN_CHR#);
     1733    20867    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1734    20868
     1735    20869    4            CASE( 134 /* SGRHDN_CHR */ ) ;
     1736    20870    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1737    20871    4               TCCHR$ -> KL$CCHR.SGRHDN_CHR# = HEX_V;
     1738    20872
     1739    20873    4            CASE( 135 /* SGRINCINT_CHR */ ) ;
     1740    20874    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1741    20875    4               TCCHR$ -> KL$CCHR.SGRINCINT_CHR# = HEX_V;
     1742    20876
     1743    20877    4            CASE( 136 /* SGRDCRINT_CHR */ ) ;
     1744    20878    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1745    20879    4               TCCHR$ -> KL$CCHR.SGRDCRINT_CHR# = HEX_V;
     1746    20880
     1747    20881    4            CASE( 137 /* SGRUNDSCR_CHR */ ) ;
     1748    20882    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1749    20883    4               TCCHR$ -> KL$CCHR.SGRUNDSCR_CHR# = HEX_V;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:54   
     1750    20884
     1751    20885    4            CASE( 138 /* SGRSLWBLN_CHR */ ) ;
     1752    20886    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1753    20887    4               TCCHR$ -> KL$CCHR.SGRSLWBLN_CHR# = HEX_V;
     1754    20888
     1755    20889    4            CASE( 139 /* SGRFSTBLN_CHR */ ) ;
     1756    20890    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1757    20891    4               TCCHR$ -> KL$CCHR.SGRFSTBLN_CHR# = HEX_V;
     1758    20892
     1759    20893    4            CASE( 140 /* SGRRVRVID_CHR */ ) ;
     1760    20894    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1761    20895    4               TCCHR$ -> KL$CCHR.SGRRVRVID_CHR# = HEX_V;
     1762    20896
     1763    20897    4            CASE( 141 /* SGRPRT_CHR */ ) ;
     1764    20898    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1765    20899    4               TCCHR$ -> KL$CCHR.SGRPRT_CHR# = HEX_V;
     1766    20900    4               IF HEX_V ~= 0 THEN
     1767    20901    5                  IF NOT TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;
     1768    20902        /*E*  ERROR:  ASD-E$SGRINCDAQ_NO-C
     1769    20903              MESSAGE: Warning:  SGRINCDAQ = NO
     1770    20904              MESSAGE1: %U1 assumes that SGRINCDAQ = YES
     1771    20905        */
     1772    20906    5                     AS_FIELD1 = OPTION;
     1773    20907                          %SCREAM( ERR#=E$SGRINCDAQ_NO,MID='D',LEVEL=WARN );
     1774    20922    5                     END;
     1775    20923
     1776    20924    4            CASE( 142 /* SGRINP_CHR */ ) ;
     1777    20925    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1778    20926    4               TCCHR$ -> KL$CCHR.SGRINP_CHR# = HEX_V;
     1779    20927    4               IF HEX_V ~= 0 THEN
     1780    20928    5                  IF NOT TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;
     1781    20929    5                     AS_FIELD1 = OPTION;
     1782    20930                          %SCREAM( ERR#=E$SGRINCDAQ_NO, LEVEL=WARN, MID='D' );
     1783    20945    5                     END;
     1784    20946
     1785    20947    4            CASE( 143 /* SGRPRTGRD_CHR */ ) ;
     1786    20948    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:55   
     1787    20949    4               TCCHR$ -> KL$CCHR.SGRPRTGRD_CHR# = HEX_V;
     1788    20950    4               IF HEX_V ~= 0 THEN
     1789    20951    5                  IF NOT TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;
     1790    20952    5                     AS_FIELD1 = OPTION;
     1791    20953                          %SCREAM( ERR#=E$SGRINCDAQ_NO, LEVEL=WARN, MID='D' );
     1792    20968    5                     END;
     1793    20969
     1794    20970    4            CASE( 144 /* DAQPRT_CHR */ ) ;
     1795    20971    4               CALL GET_DAQ_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1796    20972    4               TCCHR$ -> KL$CCHR.DAQPRT_CHR# = HEX_V;
     1797    20973    5               IF TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;
     1798    20974        /*E*  ERROR:  ASD-E$SGRINCDAQ_YES-C
     1799    20975              MESSAGE: Warning:  SGRINCDAQ = YES
     1800    20976              MESSAGE1: %U1 assumes that SGRINCDAQ = NO
     1801    20977        */
     1802    20978    5                  AS_FIELD1 = OPTION;
     1803    20979                       %SCREAM( ERR#=E$SGRINCDAQ_YES,MID='D',LEVEL=WARN );
     1804    20994    5                  END;
     1805    20995
     1806    20996    4            CASE( 145 /* DAQINP_CHR */ ) ;
     1807    20997    4               CALL GET_DAQ_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1808    20998    5               IF TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;
     1809    20999    5                  AS_FIELD1 = OPTION;
     1810    21000                       %SCREAM( ERR#=E$SGRINCDAQ_YES, LEVEL=WARN, MID='D' );
     1811    21015    5                  END;
     1812    21016    4               TCCHR$ -> KL$CCHR.DAQINP_CHR# = HEX_V;
     1813    21017
     1814    21018    4            CASE( 146 /* DAQPRTGRD_CHR */ ) ;
     1815    21019    4               CALL GET_DAQ_OPT( 1 ) ALTRET( NEXT_PRO_OPT );
     1816    21020    4               TCCHR$ -> KL$CCHR.DAQPRTGRD_CHR# = HEX_V;
     1817    21021    5               IF TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;
     1818    21022    5                  AS_FIELD1 = OPTION;
     1819    21023                       %SCREAM( ERR#=E$SGRINCDAQ_YES, LEVEL=WARN, MID='D' );
     1820    21038    5                  END;
     1821    21039
     1822    21040    4            CASE( 147 /* DLTALLFLDS_CHR */ ) ;
     1823    21041    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:56   
     1824    21042    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DLTALLFLDS_CHR#);
     1825    21043    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1826    21044
     1827    21045    4            CASE( 148 /* INSLIN_CHR */ ) ;
     1828    21046    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1829    21047    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.INSLIN_CHR#);
     1830    21048    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1831    21049
     1832    21050    4            CASE( 149 /* DLTLIN_CHR */ ) ;
     1833    21051    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1834    21052    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DLTLIN_CHR#);
     1835    21053    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     1836    21054
     1837    21055    4            CASE( 150 /* ERASEFLD_CHR */ ) ;
     1838    21056    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1839    21057    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ERASEFLD_CHR#);
     1840    21058    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1841    21059
     1842    21060    4            CASE( 151 /* DLTFLD_CHR */ ) ;
     1843    21061    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1844    21062    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DLTFLD_CHR#);
     1845    21063    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1846    21064
     1847    21065    4            CASE( 152 /* FLDTRM */ );
     1848    21066    4               TATR$ -> VLP$TRMATTR.NO_FLDTRM# = YES_NO_FLG;
     1849    21067
     1850    21068    4            CASE( 153 /* EWALT */ );
     1851    21069    4               T3270$ -> KL$3270.EWALT# = YES_NO_FLG;
     1852    21070
     1853    21071    4            CASE( 154 /* SIOPT */ );
     1854    21072    4               T3270$ -> KL$3270.SIOPT# = YES_NO_FLG;
     1855    21073
     1856    21074    4            CASE( 155 /* ABSGRPRND_NULL */,
     1857    21075    4                    156 /* ABSGRPRND_HIDDEN */,
     1858    21076    4                    157 /* ABSGRPRND_EMPHASIS */,
     1859    21077    4                    158 /* ABSGRPRND_INPUT */,
     1860    21078    4                    159 /* ABSGRPRND_OUTPUT */,
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:57   
     1861    21079    4                    160 /* ABSGRPRND_ERROR */,
     1862    21080    4                    161 /* ABSGRPRND_WARNING */ );
     1863    21081
     1864    21082    4               KL_ABSGRPRND$ = ABSGRPRND$(CODE-155 /* ABSGRPRND_NULL */+1);
     1865    21083    4               KL$ABSGRPRND.FLAGS = AS_FALSE;
     1866    21084    5               IF OP_CODE ~= 1 /* P_ABSGRPND_NONE */ THEN DO;
     1867    21085    5                  PTR$ = PTR$ -> P$NODE.SUBLK$(0);
     1868    21086    6                  DO K = 0 TO PTR$->P$NODE.SUBNODES-1;
     1869    21087    7                     DO CASE(PTR$->P$NODE.SUBLK$(K)->P$NODE.CODE);
     1870    21088    7                        CASE( 1 /* P_ABSGRPND_HDN     */ );
     1871    21089    7                           KL$ABSGRPRND.FLAGS.HDN#    = AS_TRUE;
     1872    21090    7                        CASE( 2 /* P_ABSGRPND_INCINT */ );
     1873    21091    7                           KL$ABSGRPRND.FLAGS.INCINT# = AS_TRUE;
     1874    21092    7                        CASE( 3 /* P_ABSGRPND_DCRINT */ );
     1875    21093    7                           KL$ABSGRPRND.FLAGS.DCRINT# = AS_TRUE;
     1876    21094    7                        CASE( 4 /* P_ABSGRPND_UNDSCR */ );
     1877    21095    7                           KL$ABSGRPRND.FLAGS.UNDSCR# = AS_TRUE;
     1878    21096    7                        CASE( 5 /* P_ABSGRPND_SLWBLN */ );
     1879    21097    7                           KL$ABSGRPRND.FLAGS.SLWBLN# = AS_TRUE;
     1880    21098    7                        CASE( 6 /* P_ABSGRPND_FSTBLN */ );
     1881    21099    7                           KL$ABSGRPRND.FLAGS.FSTBLN# = AS_TRUE;
     1882    21100    7                        CASE( 7 /* P_ABSGRPND_RVRVID */ );
     1883    21101    7                           KL$ABSGRPRND.FLAGS.RVRVID# = AS_TRUE;
     1884    21102    7                        END;
     1885    21103    6                     END;
     1886    21104    5                  END;
     1887    21105
     1888    21106    4            CASE( 163 /* SPCBFRPRT */ );
     1889    21107    4               TATR$ -> VLP$TRMATTR.SPCBFRPRT# = YES_NO_FLG;
     1890    21108
     1891    21109    4            CASE( 178 /* L_EXTSRD_CHR */ ) ;
     1892    21110    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     1893    21111    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.EXTSRD_CHR#);
     1894    21112    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;
     1895    21113
     1896    21114    4            CASE( 219 /* L_GR_FPRG */ ) ;
     1897    21115    5               IF OUT$SYM.COUNT > 64 THEN DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:58   
     1898    21116        /*E*   ERROR:    ASD-E$FPRGTOOLONG-C
     1899    21117               MESSAGE:  GR_FPRG too long.
     1900    21118               MESSAGE1: GR_FPRG can be at most 64 characters long.
     1901    21119        */
     1902    21120                       %SCREAM( ERR#=E$FPRGTOOLONG, LEVEL=ERROR, MID='D');
     1903    21135    5                  END ;
     1904    21136    4               ELSE
     1905    21137    4                  PHDR$ -> PRO$HDR.GR_FPRG = OUT$SYM.TEXT ;
     1906    21138
     1907    21139    4            CASE( 220 /* L_GR_GLBLCOLORS */ ) ;
     1908    21140    4               CALL GRA_OPT_PROC( 1, 999999999 ) ALTRET( NEXT_PRO_OPT ) ;
     1909    21141    4               GRA$ -> GRA$REC.GLOBAL_COLORS = VAL ;
     1910    21142
     1911    21143    4            CASE( 221 /* L_GR_GLBLINTENSITIES */ ) ;
     1912    21144    4               CALL GRA_OPT_PROC( 1, 999999999 ) ALTRET( NEXT_PRO_OPT);
     1913    21145    4               GRA$ -> GRA$REC.GLOBAL_INTENSITIES = VAL ;
     1914    21146
     1915    21147    4            CASE( 222 /* L_GR_MAXPICK */ ) ;
     1916    21148    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT) ;
     1917    21149    4               GRA$ -> GRA$REC.MAX_PICK_ID = VAL ;
     1918    21150
     1919    21151    4            CASE( 223 /* L_GR_XSPACE */ ) ;
     1920    21152    4               CALL GRA_OPT_PROC( 0, 4095 ) ALTRET( NEXT_PRO_OPT );
     1921    21153    4               GRA$ -> GRA$REC.X_PER_CM = VAL ;
     1922    21154
     1923    21155    4            CASE( 224 /* L_GR_YSPACE */ ) ;
     1924    21156    4               CALL GRA_OPT_PROC( 0, 4095 ) ALTRET( NEXT_PRO_OPT ) ;
     1925    21157    4               GRA$ -> GRA$REC.Y_PER_CM = VAL ;
     1926    21158
     1927    21159    4            CASE( 225 /* L_GR_ZSPACE */ ) ;
     1928    21160    4               CALL GRA_OPT_PROC( 0, 4095 ) ALTRET( NEXT_PRO_OPT ) ;
     1929    21161    4               GRA$ -> GRA$REC.Z_PER_CM = VAL ;
     1930    21162
     1931    21163    4            CASE( 226 /* L_GR_NDCWSPACE */ ) ;
     1932    21164    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);
     1933    21165    4               GRA$ -> GRA$REC.NDC_WIDTH_ADDR_SPACE = VAL ;
     1934    21166
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:59   
     1935    21167    4            CASE( 227 /* L_GR_NDCHSPACE */ ) ;
     1936    21168    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);
     1937    21169    4               GRA$ -> GRA$REC.NDC_HEIGHT_ADDR_SPACE = VAL ;
     1938    21170
     1939    21171    4            CASE( 228 /* L_GR_NDCDSPACE */ ) ;
     1940    21172    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);
     1941    21173    4               GRA$ -> GRA$REC.NDC_DEPTH_ADDR_SPACE = VAL ;
     1942    21174
     1943    21175    4            CASE( 231 /* L_GR_NDCWCHARS */ ) ;
     1944    21176    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET (NEXT_PRO_OPT);
     1945    21177    4               GRA$ -> GRA$REC.NDC_WIDTH_CHAR_POS = VAL ;
     1946    21178
     1947    21179    4            CASE( 230 /* L_GR_NDCHCHARS */ ) ;
     1948    21180    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);
     1949    21181    4               GRA$ -> GRA$REC.NDC_HEIGHT_CHAR_POS = VAL ;
     1950    21182
     1951    21183    4            CASE( 229 /* L_GR_NDCDCHARS */ ) ;
     1952    21184    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);
     1953    21185    4               GRA$ -> GRA$REC.NDC_DEPTH_CHAR_POS = VAL ;
     1954    21186
     1955    21187    4            CASE( 232 /* L_GR_WIDTHUSE */ ) ;
     1956    21188    4               CALL GRA_OPT_PROC( 0, 999999 ) ALTRET( NEXT_PRO_OPT);
     1957    21189    4               GRA$ -> GRA$REC.WIDTH_USABLE = VAL ;
     1958    21190
     1959    21191    4            CASE( 233 /* L_GR_HEIGHTUSE */ ) ;
     1960    21192    4               CALL GRA_OPT_PROC( 0, 999999 ) ALTRET( NEXT_PRO_OPT);
     1961    21193    4               GRA$ -> GRA$REC.HEIGHT_USABLE = VAL ;
     1962    21194
     1963    21195    4            CASE( 234 /* L_GR_DEPTHUSE */ ) ;
     1964    21196    4               CALL GRA_OPT_PROC( 0, 999999 ) ALTRET( NEXT_PRO_OPT);
     1965    21197    4               GRA$ -> GRA$REC.DEPTH_USABLE = VAL ;
     1966    21198
     1967    21199    4            CASE( 237 /* L_GR_NDCWCURRENT */ ) ;
     1968    21200    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     1969    21201    4               GRA$ -> GRA$REC.NDC_WIDTH_CURRENT = VAL ;
     1970    21202
     1971    21203    4            CASE( 236 /* L_GR_NDCHCURRENT */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:60   
     1972    21204    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     1973    21205    4               GRA$ -> GRA$REC.NDC_HEIGHT_CURRENT = VAL ;
     1974    21206
     1975    21207    4            CASE( 235 /* L_GR_NDCDCURRENT */ ) ;
     1976    21208    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     1977    21209    4               GRA$ -> GRA$REC.NDC_DEPTH_CURRENT = VAL ;
     1978    21210
     1979    21211    4            CASE( 238 /* L_GR_MINLINEWIDTH */ ) ;
     1980    21212    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     1981    21213    4               GRA$ -> GRA$REC.MINIMUM_LINEWIDTH = VAL ;
     1982    21214
     1983    21215    4            CASE( 239 /* L_GR_MAXLINEWIDTH */ ) ;
     1984    21216    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     1985    21217    4               GRA$ -> GRA$REC.MAXIMUM_LINEWIDTH = VAL ;
     1986    21218
     1987    21219    4            CASE( 240 /* L_GR_MINCHSIZE */ ) ;
     1988    21220    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     1989    21221    4               GRA$ -> GRA$REC.MIN_CHAR_SIZE = VAL ;
     1990    21222
     1991    21223    4            CASE( 241 /* L_GR_MAXCHSIZE */ ) ;
     1992    21224    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     1993    21225    4               GRA$ -> GRA$REC.MAX_CHAR_SIZE = VAL ;
     1994    21226
     1995    21227    4            CASE( 242 /* L_GR_ESCAPE */ ) ;
     1996    21228    4               CALL GRA_OPT_PROC( 0, 32767 ) ALTRET( NEXT_PRO_OPT);
     1997    21229    4               IF (SUBSTR(PTR$->P$NODE.SUBLK$(1)->OUT$SYM.TEXT,0,1)
     1998    21230    5                    = 'H') THEN DO;
     1999    21231    5                  OP = 1;
     2000    21232    5                  END;
     2001    21233    4               ELSE IF (SUBSTR(PTR$->P$NODE.SUBLK$(1)->OUT$SYM.TEXT,0,1)
     2002    21234    5                       = 'S') THEN DO;
     2003    21235    5                     OP = 2;
     2004    21236    5                     END;
     2005    21237    4                  ELSE OP = 0;
     2006    21238    4               IF (OP=0 OR OP=1 OR OP=2)
     2007    21239    5               THEN DO;
     2008    21240    5                  CALL PUT_GR_ESCAPE;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:61   
     2009    21241    5                  END;
     2010    21242    5               ELSE DO;
     2011    21243                             /* We have an error */
     2012    21244    5                  END;
     2013    21245
     2014    21246    4            CASE( 243 /* L_GR_VIEWSURFACE */ ) ;
     2015    21247    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2016    21248    4               GRA$ -> GRA$REC.VIEW_SURFACE = VAL ;
     2017    21249
     2018    21250    4            CASE( 244 /* L_GR_POLYGONFILL */ ) ;
     2019    21251    4               BLK$ = PTR$ -> P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);
     2020    21252    5               DO CASE( OP_CODE ) ;
     2021    21253    5                  CASE( 1 /* GR_P_PLAIN */ ) ;
     2022    21254    5                     CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT)
             21254                              ;
     2023    21255    5                     GRA$ -> GRA$REC.POLYGON_FILL.PLAIN = VAL ;
     2024    21256
     2025    21257    5                  CASE( 2 /* GR_P_SHADED */ ) ;
     2026    21258    5                     CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT)
             21258                              ;
     2027    21259    5                     GRA$ -> GRA$REC.POLYGON_FILL.SHADED = VAL ;
     2028    21260
     2029    21261    5                  CASE( 3 /* GR_P_PATTERNED */ ) ;
     2030    21262    5                     CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT)
             21262                              ;
     2031    21263    5                     GRA$ -> GRA$REC.POLYGON_FILL.PATTERNED = VAL ;
     2032    21264    5                  END ; /* Of case( OP_CODE )  */
     2033    21265    4            CASE( 247 /* L_GR_XPIXMAX */ ) ;
     2034    21266    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2035    21267    4               GRA$ -> GRA$REC.PIX_ARRAY_MAXX = VAL ;
     2036    21268
     2037    21269    4            CASE( 248 /* L_GR_YPIXMAX */ ) ;
     2038    21270    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2039    21271    4               GRA$ -> GRA$REC.PIX_ARRAY_MAXY = VAL ;
     2040    21272
     2041    21273    4            CASE( 249 /* L_GR_COLRTABSIZE */ ) ;
     2042    21274    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:62   
     2043    21275    4               GRA$ -> GRA$REC.COLOR_TAB_SIZE = VAL ;
     2044    21276
     2045    21277    4            CASE( 250 /* L_GR_INTNTABSIZE */ ) ;
     2046    21278    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2047    21279    4               GRA$ -> GRA$REC.INTENSITY_TAB_SIZE = VAL ;
     2048    21280
     2049    21281    4            CASE( 251 /* L_GR_LINESTYLEHWCOUNT */ ) ;
     2050    21282    4               CALL GRA_OPT_PROC( 1, 9 ) ALTRET( NEXT_PRO_OPT);
     2051    21283    4               GRA$ -> GRA$REC.LINESTYLE_HARDWARE_COUNT = VAL ;
     2052    21284
     2053    21285    4            CASE( 277 /* L_GR_LINESTYLESWCOUNT */ ) ;
     2054    21286    4               CALL GRA_OPT_PROC( 0, 9991 ) ALTRET( NEXT_PRO_OPT);
     2055    21287    4               GRA$ -> GRA$REC.LINESTYLE_SOFTWARE_COUNT = VAL ;
     2056    21288
     2057    21289    4            CASE( 252 /* L_GR_LINEWCOUNT */ ) ;
     2058    21290    4               CALL GRA_OPT_PROC( 1, %XG_DEFAULT_MAX_NDC# ) ALTRET(NEXT_PRO_OPT);
     2059    21291    4               GRA$ -> GRA$REC.LINEWIDTH_COUNT = VAL ;
     2060    21292
     2061    21293    4            CASE( 253 /* L_GR_FONTCOUNT */ ) ;
     2062    21294    4               CALL GRA_OPT_PROC( 1, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2063    21295    4               GRA$ -> GRA$REC.FONT_COUNT = VAL ;
     2064    21296
     2065    21297    4            CASE( 254 /* L_GR_PENHWCOUNT */ ) ;
     2066    21298    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2067    21299    4               GRA$ -> GRA$REC.PEN_HARDWARE_COUNT = VAL ;
     2068    21300
     2069    21301    4            CASE( 278 /* L_GR_PENSWCOUNT */ ) ;
     2070    21302    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2071    21303    4               GRA$ -> GRA$REC.PEN_SOFTWARE_COUNT = VAL ;
     2072    21304
     2073    21305    4            CASE( 255 /* L_GR_CHSIZECOUNT */ ) ;
     2074    21306    4               CALL GRA_OPT_PROC( 1, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2075    21307    4               GRA$ -> GRA$REC.CHAR_SIZE_COUNT = VAL ;
     2076    21308
     2077    21309    4            CASE( 256 /* L_GR_MARKERHWCOUNT */ ) ;
     2078    21310    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2079    21311    4               GRA$ -> GRA$REC.MARKER_HARDWARE_COUNT = VAL ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:63   
     2080    21312
     2081    21313    4            CASE( 258 /* L_GR_MARKERSWCOUNT */ ) ;
     2082    21314    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);
     2083    21315    4               GRA$ -> GRA$REC.MARKER_SOFTWARE_COUNT = VAL ;
     2084    21316
     2085    21317    4            CASE( 257 /* L_GR_LINEWSUPPORT */ ) ;
     2086    21318    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);
     2087    21319    4               GRA$ -> GRA$REC.LINEWIDTH_SUPPORT = VAL_FOUR(8) ;
     2088    21320
     2089    21321    4            CASE( 259 /* L_GR_INTNSUPPORT */ ) ;
     2090    21322    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);
     2091    21323    4               GRA$ -> GRA$REC.INTENSITY_SUPPORT = VAL_FOUR(8) ;
     2092    21324
     2093    21325    4            CASE( 260 /* L_GR_CHSIZESUPPORT */ ) ;
     2094    21326    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);
     2095    21327    4               GRA$ -> GRA$REC.CHARSIZE_SUPPORT = VAL_FOUR(8) ;
     2096    21328
     2097    21329    4            CASE( 261 /* L_GR_HIGHLTSUPPORT */ ) ;
     2098    21330    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);
     2099    21331    4               GRA$ -> GRA$REC.HIGHLIGHT_SUPPORT = VAL_FOUR(8) ;
     2100    21332
     2101    21333    4            CASE( 262 /* L_GR_OUTLEVEL */ ) ;
     2102    21334    4               CALL GRA_OPT_PROC( 0, 5 ) ALTRET( NEXT_PRO_OPT);
     2103    21335    4               GRA$ -> GRA$REC.OUTPUT_LEVEL = VAL_SIX(5) ;
     2104    21336
     2105    21337    4            CASE( 263 /* L_GR_BATCHMODE */ ) ;
     2106    21338    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);
     2107    21339    4               GRA$ -> GRA$REC.BATCH_MODE = VAL_FOUR(8) ;
     2108    21340
     2109    21341    4            CASE( 264 /* L_GR_HIDDENLEVEL */ ) ;
     2110    21342    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);
     2111    21343    4               GRA$ -> GRA$REC.HIDDEN_SURFACE_LEVEL = VAL_FOUR(8) ;
     2112    21344
     2113    21345    4            CASE( 265 /* L_GR_DIMLEVEL */ ) ;
     2114    21346    4               CALL GRA_OPT_PROC( 2, 3 ) ALTRET( NEXT_PRO_OPT);
     2115    21347    4               GRA$ -> GRA$REC.DIMENSION_LEVEL = VAL_TWO(17) ;
     2116    21348
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:64   
     2117    21349    4            CASE( 266 /* L_GR_VIEWTYPE */ ) ;
     2118    21350    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);
     2119    21351    4               GRA$ -> GRA$REC.VIEW_SURFACE_TYPE = VAL_FOUR(8) ;
     2120    21352
     2121    21353    4            CASE( 267 /* L_GR_PIXELTYPE */ ) ;
     2122    21354    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);
     2123    21355    4               GRA$ -> GRA$REC.PIXEL_TYPE = VAL_FOUR(8) ;
     2124    21356
     2125    21357    4            CASE( 268 /* L_GR_EDGETYPE */ ) ;
     2126    21358    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);
     2127    21359    4               GRA$ -> GRA$REC.EDGE_TYPE = VAL_FOUR(8) ;
     2128    21360
     2129    21361    4            CASE( 269 /* L_GR_COLRTABTYPE */ ) ;
     2130    21362    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);
     2131    21363    4               GRA$ -> GRA$REC.COLOR_TABLE_TYPE = VAL_FOUR(8) ;
     2132    21364
     2133    21365    4            CASE( 270 /* L_GR_BKGRNDTYPE */ ) ;
     2134    21366    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);
     2135    21367    4               GRA$ -> GRA$REC.BACKGROUND_TYPE = VAL_TWO(17) ;
     2136    21368
     2137    21369    4            CASE( 271 /* L_GR_DEVTYPE */ ) ;
     2138    21370    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);
     2139    21371    4               GRA$ -> GRA$REC.DEVICE_TYPE = VAL_TWO(17) ;
     2140    21372
     2141    21373    4            CASE( 272 /* L_GR_IMAGETRANS */ ) ;
     2142    21374    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);
     2143    21375    4               GRA$ -> GRA$REC.IMAGE_TRANSF = VAL_FOUR(8) ;
     2144    21376
     2145    21377    4            CASE( 273 /* L_GR_COLRMODEL */ ) ;
     2146    21378    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);
     2147    21379    4               GRA$ -> GRA$REC.COLOR_MODEL = VAL_TWO(17) ;
     2148    21380
     2149    21381    4            CASE( 274 /* L_GR_BKGRNDCOLOR */ ) ;
     2150    21382    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);
     2151    21383    4               GRA$ -> GRA$REC.BACKGROUND_COLOR = VAL_TWO(17) ;
     2152    21384
     2153    21385    4            CASE( 275 /* L_GR_COLRACTION */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:65   
     2154    21386    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);
     2155    21387    4               GRA$ -> GRA$REC.COLOR_ACTION = VAL_FOUR(8) ;
     2156    21388
     2157    21389    4            CASE( 276 /* L_GR_INTNACTION */ ) ;
     2158    21390    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);
     2159    21391    4               GRA$ -> GRA$REC.INTENSITY_ACTION = VAL_FOUR(8) ;
     2160    21392    4            CASE ( 181 /* L_ENDMSGLIN_CHR */ ) ;
     2161    21393    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );
     2162    21394    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ENDMSGLIN_CHR#);
     2163    21395    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);
     2164    21396
     2165    21397    4            CASE ( 182 /* L_SPCDLTFLD */ );
     2166    21398    4               TCCHR$->KL$CCHR.SPCDLTFLD# = YES_NO;
     2167    21399
     2168    21400    4            CASE ( 198 /* L_RGNSCROLL */ );
     2169    21401    4               TCCHR$->KL$CCHR.RGNSCROLL# = YES_NO;
     2170    21402
     2171    21403    4            CASE ( 183 /* L_EL0DLTFLD */ );
     2172    21404    4               TCCHR$->KL$CCHR.EL0DLTFLD# = YES_NO;
     2173    21405
     2174    21406    4            CASE ( 184 /* L_ED0DLTFLD */ );
     2175    21407    4               TCCHR$->KL$CCHR.ED0DLTFLD# = YES_NO;
     2176    21408
     2177    21409    4            CASE ( 185 /* L_ED2DLTFLD */ );
     2178    21410    4               TCCHR$->KL$CCHR.ED2DLTFLD# = YES_NO;
     2179    21411
     2180    21412    4            CASE ( 186 /* L_ICHRQRDCH */ );
     2181    21413    4               TCCHR$->KL$CCHR.ICHRQRDCH# = YES_NO;
     2182    21414
     2183    21415    4            CASE ( 187 /* L_ILNRQRDLN */ );
     2184    21416    4               TCCHR$->KL$CCHR.ILNRQRDLN# = YES_NO;
     2185    21417
     2186    21418    4            CASE ( 188 /* L_FRSCLMFLD */ );
     2187    21419    4               TCCHR$->KL$CCHR.FRSCLMFLD# = YES_NO;
     2188    21420
     2189    21421    4            CASE ( 189 /* L_MSGHALT */ );
     2190    21422    4               TCTL$->VLP$TRMCTRL.MSGHALT# = YES_NO_FLG;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:66   
     2191    21423
     2192    21424    4            CASE ( 190 /* L_MSGLINE */ );
     2193    21425    4               TCTL$->VLP$TRMCTRL.MSGLINE# = YES_NO_FLG;
     2194    21426
     2195    21427    4            CASE ( 191 /* L_INSERTMODE */ );
     2196    21428    4               TCTL$->VLP$TRMCTRL.INSERTMODE# = YES_NO_FLG;
     2197    21429
     2198    21430    4            CASE ( 192 /* L_HSCROLL */ );
     2199    21431    4               TCTL$->VLP$TRMCTRL.HSCROLL# = YES_NO_FLG;
     2200    21432
     2201    21433    4            CASE ( 193 /* L_WORDWRAPCLM */ );
     2202    21434    4               IF (OP_CODE = 7 /* DC */) THEN
     2203    21435    4                  TCTL$ -> VLP$TRMCTRL.WORDWRAPCLM# = 255;
     2204    21436    4               ELSE
     2205    21437    5               DO;
     2206    21438    5                  CALL GET_DEC_VAL (255) ALTRET (NEXT_PRO_OPT);
     2207    21439    5                  TCTL$->VLP$TRMCTRL.WORDWRAPCLM# = VAL;
     2208    21440    5                  END; /*  Else  */
     2209    21441
     2210    21442    4            CASE ( 194 /* L_AUTOTABCLM */ );
     2211    21443    4               IF (OP_CODE = 7 /* DC */) THEN
     2212    21444    4                  TCTL$ -> VLP$TRMCTRL.AUTOTABCLM# = 255;
     2213    21445    4               ELSE
     2214    21446    5               DO;
     2215    21447    5                  CALL GET_DEC_VAL (255) ALTRET (NEXT_PRO_OPT);
     2216    21448    5                  TCTL$->VLP$TRMCTRL.AUTOTABCLM# = VAL;
     2217    21449    5                  END; /*  Else  */
     2218    21450
     2219    21451    4            CASE ( 279 /* L_FUNCTION_KEY */ );
     2220    21452    4               CALL DO_FUNKEY_DEFS ALTRET (NEXT_PRO_OPT);
     2221    21453    4               GOTO PRO_OPTS_LOOP;
     2222    21454
     2223    21455    4            CASE ( 195 /* L_SETUP_CHR */ );
     2224    21456    4               CALL DO_SETUP_CHR ALTRET (NEXT_PRO_OPT);
     2225    21457
     2226    21458    4            CASE ( 196 /* DCHMOVFLD */ );
     2227    21459    4               TATR$->VLP$TRMATTR.DCHMOVFLD# = YES_NO_FLG;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:67   
     2228    21460
     2229    21461    4            CASE ( 197 /* DSPHEIGHT */ );
     2230    21462    4               IF (OP_CODE = 7 /* DC */) THEN
     2231    21463    4                  TATR$ -> VLP$TRMATTR.DSPHEIGHT# = 255;
     2232    21464    4               ELSE
     2233    21465    5               DO;
     2234    21466    5                  CALL GET_DEC_VAL (255, 0) ALTRET (NEXT_PRO_OPT);
     2235    21467    5                  TATR$->VLP$TRMATTR.DSPHEIGHT# = VAL;
     2236    21468    5                  END; /*  Else  */
     2237    21469
     2238    21470    4            CASE ( 179 /* FF_FLUSH */ );
     2239    21471    4               TATR$->VLP$TRMATTR.FF_FLUSH# = YES_NO_FLG;
     2240    21472
     2241    21473
     2242    21474    4            END ; /*  Do case(code )  */
     2243    21475    3   NEXT_PRO_OPT: ;
     2244    21476    3         END ;   /*  Do i = 0  */
     2245    21477
     2246    21478
     2247    21479    3      DO WHILE( '0'B );
     2248    21480    3   OPTS_ERR: CALL ASH$ERROR( P_PCB.ERROR );
     2249    21481    3         END;
     2250    21482    2      END ;       /*  Do while( more )  */
     2251    21483
     2252    21484    1   RETURN;
     2253    21485        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:68   
     2254    21486    1   GET_DEC_VAL: PROC( MAX_VAL, MIN_VAL ) ALTRET;
     2255    21487
     2256    21488    2   DCL MAX_VAL UBIN WORD ;
     2257    21489    2   DCL MIN_VAL UBIN WORD ;
     2258    21490
     2259    21491
     2260    21492
     2261    21493    2   CALL CHARBIN( VAL, OUT$SYM.TEXT );
     2262    21494    3   IF VAL > MAX_VAL THEN DO;
     2263    21495        /*E*  ERROR:  ASD-E$DEC_VALUE_TOO_BIG-C
     2264    21496              MESSAGE: %U1 value too large.
     2265    21497              MESSAGE1: %U1 can be at most %U2.
     2266    21498        */
     2267    21499    3      AS_FIELD1 = OPTION;
     2268    21500           %NUMBER( NUM2=MAX_VAL );
             21516    3         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MAX_VAL );
     2269    21530           %SCREAM( ERR#=E$DEC_VALUE_TOO_BIG, LEVEL=ERROR, MID='D' );
     2270    21545    3      ALTRETURN;
     2271    21546    3      END;
     2272    21547    2   IF ( ADDR(MIN_VAL) ~= ADDR(NIL) )
     2273    21548    3   THEN DO;
     2274    21549    3      IF VAL < MIN_VAL
     2275    21550    4      THEN DO;
     2276    21551        /*    ERROR:   ASD-E$GR_VAL_TOO_SMALL-C
     2277    21552              MESSAGE: %U1 value too small.
     2278    21553              MESSAGE1: %U1 can be at least %U2.
     2279    21554                       This error message is a *E* in GRA_OPT_PROC, it is
     2280    21555                       included here only for reference.
     2281    21556        */
     2282    21557    4         AS_FIELD1 = OPTION ;
     2283    21558              %NUMBER( NUM2 = MIN_VAL ) ;
             21574    4         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MIN_VAL );
     2284    21588              %SCREAM( ERR#=E$GR_VAL_TOO_SMALL, LEVEL=ERROR, MID='D') ;
     2285    21603    4         ALTRETURN ;
     2286    21604    4         END ;
     2287    21605    3      END;
     2288    21606
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:69   
     2289    21607    2   SPLIT = '0'B;
     2290    21608    2   SPLIT.T = SPLIT_VAL.T;
     2291    21609    2   SPLIT.B = SPLIT_VAL.B;
     2292    21610
     2293    21611
     2294    21612    2   END GET_DEC_VAL ;
     2295    21613        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:70   
     2296    21614    1   GET_HEX_VAL: PROC( NUM_HEX ) ALTRET;
     2297    21615
     2298    21616    2   DCL NUM_HEX UBIN WORD ;
     2299    21617    2   DCL NUM_FOUND  UBIN WORD;
     2300    21618    2   DCL PLUS BIT(1);
     2301    21619    2   DCL START   UBIN;
     2302    21620    2   DCL FINISH  UBIN;
     2303    21621
     2304    21622    2   VAL=0; HEX_V=0; SPLIT='0'B; HEX='0'B;
     2305    21623    2   NUM_FOUND = 0;
     2306    21624    2   IF PTR$->P$NODE.SUBNODES > 1 THEN
     2307    21625    2      IF PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 7   /*  NONE_VAL  */ THEN RETURN;
     2308    21626    3      ELSE DO;
     2309    21627    3         IF PTR$->P$NODE.SUBLK$(1)->P$NODE.CODE = 7   /*  NONE_VAL  */ THEN RETURN;
     2310    21628    3         PLUS = (PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 0 /* PLUS_VAL */);
     2311    21629    3         END; /*  Else  */
     2312    21630    2   SUBS = PTR$ -> P$NODE.SUBNODES ;
     2313    21631    2   IF PLUS THEN SUBS = SUBS - 1;
     2314    21632    3   IF SUBS > NUM_HEX THEN DO;
     2315    21633        /*E*  ERROR:  ASD-E$TOO_MANY_HEX-C
     2316    21634              MESSAGE: Too many hex. values for %U1.
     2317    21635              MESSAGE1: %U1 can have at most %U2 hexadecimal values.
     2318    21636        */
     2319    21637    3      AS_FIELD1 = OPTION;
     2320    21638           %NUMBER( NUM1=NUM_HEX );
             21646    3         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, NUM_HEX );
     2321    21668           %SCREAM( ERR#=E$TOO_MANY_HEX, LEVEL=ERROR, MID='D' );
     2322    21683    3      ALTRETURN;
     2323    21684    3      END;
     2324    21685    3   IF NUM_HEX = 1 THEN DO;
     2325    21686    3      BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0);
     2326    21687    3      CALL ASD$HEX2OCT( OUT$SYM, VAL ) ALTRET( HEX_ERR );
     2327    21688    3      HEX_V = VAL;
     2328    21689    3      SPLIT.T = SPLIT_VAL.T;
     2329    21690    3      SPLIT.B = SPLIT_VAL.B;
     2330    21691    3      END;
     2331    21692    3   ELSE DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:71   
     2332    21693    4      IF PLUS THEN DO;
     2333    21694    4         START = 2;
     2334    21695    4         FINISH = SUBS+1;
     2335    21696    4         END;   /*  Plus  */
     2336    21697    4      ELSE DO;
     2337    21698    4         START = 1;
     2338    21699    4         FINISH = SUBS;
     2339    21700    4         END;   /*  Not plus  */
     2340    21701    3      NUM_FOUND = 0;
     2341    21702    4      DO K = START TO FINISH;
     2342    21703    4         IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %22 /* HEX */ THEN
     2343    21704    5         DO;
     2344    21705    5            BLK$ = PTR$ -> P$NODE.SUBLK$(K-1) -> P$NODE.SUBLK$(0) ;
     2345    21706    5            CALL ASD$HEX2OCT( OUT$SYM, VAL ) ALTRET( HEX_ERR );
     2346    21707    5            NUM_FOUND = NUM_FOUND + 1;
     2347    21708    5            HEX(NUM_FOUND) = VAL;
     2348    21709    5            END;
     2349    21710    4         ELSE IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %24 /* STRING */ THEN
     2350    21711    5            DO;
     2351    21712    5               BLK$ = PTR$ -> P$NODE.SUBLK$(K-1);
     2352    21713    6               DO L=0 TO OUT$SYM.COUNT-1;
     2353    21714    6                  NUM_FOUND = NUM_FOUND + 1;
     2354    21715    6                  HEX(NUM_FOUND) = ASCBIN (SUBSTR (OUT$SYM.TEXT,L,1));
     2355    21716    6                  END; /*  Do for each character  */
     2356    21717    5               END; /*  Else if  */
     2357    21718    5            ELSE DO;
     2358    21719        /*  Error - the parser accepted something that i am not expecting  */
     2359    21720    5               END;
     2360    21721    4         END;  /*  Do k  */
     2361    21722    3      HEX(0) = NUM_FOUND;
     2362    21723    3      END;  /*   NUM_HEX ~= 1  */
     2363    21724    2   RETURN;
     2364    21725
     2365    21726    2   HEX_ERR:
     2366    21727        /*E*  ERROR:  ASD-E$ILLEGALHEX-C
     2367    21728              MESSAGE: Illegal HEX character in "%U1"
     2368    21729              MESSAGE1: Hexidecimal characters are 0-9 and A-F
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:72   
     2369    21730        */
     2370    21731    2   AS_FIELD1.COUNT = OUT$SYM.COUNT;
     2371    21732    2   AS_FIELD1.TEXT  = OUT$SYM.TEXT;
     2372    21733        %SCREAM( ERR#=E$ILLEGALHEX, MID='D', LEVEL=ERROR );
     2373    21748    2   ALTRETURN;
     2374    21749
     2375    21750    2   END GET_HEX_VAL;
     2376    21751        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:73   
     2377    21752    1   GET_TA: PROC( SPLIT_STRUCT ) ALTRET;
     2378    21753
     2379    21754    2   DCL 1 SPLIT_STRUCT UNAL,
     2380    21755    2          2 * BIT(1) UNAL,
     2381    21756    2          2 T UBIN(8) UNAL,
     2382    21757    2          2 * BIT(1) UNAL,
     2383    21758    2          2 B UBIN(8) UNAL;
     2384    21759
     2385    21760
     2386    21761    2   CALL ASD$R2HUSECS( BLK$, VAL ) ALTRET( ALT );
     2387    21762    3   IF VAL > 65534 THEN DO;
     2388    21763        /*E*  ERROR:    ASD-E$TATOOBIG-C
     2389    21764              MESSAGE0: %U1 value too big.
     2390    21765              MESSAGE1: %U1 can be at most 6553.4.
     2391    21766        */
     2392    21767    3      AS_FIELD1 = OPTION;
     2393    21768           %SCREAM( ERR#=E$TATOOBIG, LEVEL=ERROR, MID='D');
     2394    21783    3   ALT: ALTRETURN;
     2395    21784    3      END ; /* Then do */
     2396    21785
     2397    21786    2   SPLIT_STRUCT = '0'B;
     2398    21787    2   SPLIT_STRUCT.T = SPLIT_VAL.T;
     2399    21788    2   SPLIT_STRUCT.B = SPLIT_VAL.B;
     2400    21789
     2401    21790    2   END GET_TA;
     2402    21791        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:74   
     2403    21792    1   INITIALIZE_SGR: PROC;
     2404    21793
     2405    21794
     2406    21795    2   HEX(0) = 1 ;
     2407    21796    2   HEX(1) = BITBIN ('033'O) ;      /* Esc  */
     2408    21797    2   PTROPT$ = ADDR(TCCHR$->KL$CCHR.SGRINTRO_CHR#) ;
     2409    21798    2   CALL PLACE_OPT (PTROPT$) ;
     2410    21799    2   TCCHR$ -> KL$CCHR.SGRINCDAQ# = AS_FALSE;                /* No  */
     2411    21800    2   HEX(0) = 3 ;
     2412    21801    2   HEX(1) = BITBIN('033'O) ;     /*  Esc */
     2413    21802    2   HEX(2) = ASCBIN ('0') ;
     2414    21803    2   HEX(3) = ASCBIN ('O') ;
     2415    21804    2   PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.RESTORE_DFLTSCRN_CHR#);
     2416    21805    2   CALL PLACE_OPT (PTROPT$) ;
     2417    21806    2   TCCHR$ -> KL$CCHR.SGRINCINT_CHR# = ASCBIN('1');
     2418    21807    2   TCCHR$ -> KL$CCHR.SGRDCRINT_CHR# = ASCBIN('2');
     2419    21808    2   TCCHR$ -> KL$CCHR.SGRUNDSCR_CHR# = ASCBIN('4');
     2420    21809    2   TCCHR$ -> KL$CCHR.SGRSLWBLN_CHR# = ASCBIN('5');
     2421    21810    2   TCCHR$ -> KL$CCHR.SGRFSTBLN_CHR# = ASCBIN('6');
     2422    21811    2   TCCHR$ -> KL$CCHR.SGRRVRVID_CHR# = ASCBIN('7');
     2423    21812
     2424    21813    2   END INITIALIZE_SGR;
     2425    21814        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:75   
     2426    21815    1   INITIALIZE_DAQ: PROC;
     2427    21816
     2428    21817    2   HEX(0) = 1 ;
     2429    21818    2   HEX(1) = BITBIN('033'O) ;    /* Esc */
     2430    21819    2   PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DAQINTRO_CHR#);
     2431    21820    2   CALL PLACE_OPT (PTROPT$) ;
     2432    21821    2   TCCHR$ -> KL$CCHR.SGRINCDAQ# = AS_FALSE;                  /* No  */
     2433    21822    2   TCCHR$ -> KL$CCHR.DAQPRT_CHR# = ASCBIN('8');
     2434    21823    2   TCCHR$ -> KL$CCHR.DAQINP_CHR# = ASCBIN('0');
     2435    21824    2   TCCHR$ -> KL$CCHR.DAQPRTGRD_CHR# = ASCBIN('1');
     2436    21825
     2437    21826    2   END INITIALIZE_DAQ;
     2438    21827        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:76   
     2439    21828    1   GET_SGR_OPT: PROC( NUM_HEXS ) ALTRET;
     2440    21829
     2441    21830    2   DCL NUM_HEXS UBIN WORD;
     2442    21831
     2443    21832    3   IF TCCHR$->KL$CCHR.SGR_ALG# = 1 /* ANS */ THEN DO;
     2444    21833    4      IF CODE ~= 134 /* SGRHDN_CHR */ THEN DO;
     2445    21834        /*E*  ERROR:  ASD-E$SGR_OPT_NOT_ALLOWED-C
     2446    21835              MESSAGE: %U1 cannot be specified when SGR_ALG = ANS.
     2447    21836        */
     2448    21837    4         AS_FIELD1 = OPTION;
     2449    21838              %SCREAM( ERR#=E$SGR_OPT_NOT_ALLOWED, MID='D',LEVEL=ERROR);
     2450    21853    4         ALTRETURN;
     2451    21854    4         END;
     2452    21855    3      END;
     2453    21856    2   IF ADDR(NUM_HEXS) ~= ADDR(NIL) THEN
     2454    21857    2      CALL GET_HEX_VAL( NUM_HEXS ) ALTRET( ALT );
     2455    21858    2   RETURN;
     2456    21859
     2457    21860    2   ALT: ALTRETURN;
     2458    21861
     2459    21862    2   END GET_SGR_OPT;
     2460    21863        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:77   
     2461    21864    1   GET_DAQ_OPT: PROC( NUM_HEXS ) ALTRET;
     2462    21865
     2463    21866    2   DCL NUM_HEXS UBIN WORD;
     2464    21867
     2465    21868    3   IF TCCHR$->KL$CCHR.DAQ_ALG# = 1 /* ANS */ THEN DO;
     2466    21869        /*E*  ERROR:  ASD-E$DAQ_OPT_NOT_ALLOWED-C
     2467    21870              MESSAGE: %U1 cannot be specified when DAQ_ALG = ANS.
     2468    21871        */
     2469    21872    3      AS_FIELD1 = OPTION;
     2470    21873           %SCREAM( ERR#=E$DAQ_OPT_NOT_ALLOWED, MID='D',LEVEL=ERROR);
     2471    21888    3      ALTRETURN;
     2472    21889    3      END;
     2473    21890    2   IF ADDR(NUM_HEXS) ~= ADDR(NIL) THEN
     2474    21891    2      CALL GET_HEX_VAL( NUM_HEXS ) ALTRET( ALT );
     2475    21892    2   RETURN;
     2476    21893
     2477    21894    2   ALT: ALTRETURN;
     2478    21895
     2479    21896    2   END GET_DAQ_OPT;
     2480    21897
     2481    21898        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:78   
     2482    21899    1   PLACE_OPT: PROC ( PTROPT$ ) ALTRET ;
     2483    21900
     2484    21901    2   DCL PTROPT$ PTR ;
     2485    21902
     2486    21903    2   DCL PTRBGN$ PTR ;
     2487    21904    2   DCL NUM UBIN BYTE UNAL ;
     2488    21905    2   DCL NUM# SBIN WORD UNAL ;
     2489    21906    2   DCL CMP_VAL UBIN WORD UNAL ;
     2490    21907    2   DCL CMPE$ PTR ;
     2491    21908    2   DCL BUFINDX UBIN BYTE UNAL ;
     2492    21909    2   DCL MORE SBIN WORD UNAL ;
     2493    21910    2   DCL I UBIN WORD UNAL ;
     2494    21911    2   DCL J UBIN WORD UNAL ;
     2495    21912    2   DCL K UBIN WORD UNAL ;
     2496    21913    2   DCL BASED_BYTE BASED UBIN BYTE CALIGNED;
     2497    21914    2   DCL SIZE  UBIN;
     2498    21915    2   DCL SAVEIDX  UBIN;
     2499    21916
     2500    21917    2   IF HEX(0) = 0 AND PTROPT$->BASED_BYTE = 0 THEN RETURN;
     2501    21918    2   PTRBGN$ = ADDR(TCCHR$->KL$CCHR.CCHR_ARY(0));
     2502    21919    2   NUM = POFFC (PTROPT$,PTRBGN$);
     2503    21920    2   CMPE$ = ADDR( TCCHR$ -> KL$CCHR.TXT_CHR) ;
     2504    21921    2   CMP_VAL = POFFC( CMPE$, PTRBGN$ ) + 1 ;
     2505    21922    2   IF TCCHR$ -> KL$CCHR.CCHR_ARY(NUM) = 0 THEN
     2506    21923    3   DO;                       /*  Find next index */
     2507    21924    3      NUM# = NUM;
     2508    21925    4      DO WHILE TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = 0 AND
     2509    21926    4           NUM# < CMP_VAL ;
     2510    21927    4         NUM# = NUM# + 1 ;
     2511    21928    4         END;
     2512    21929    3      IF NUM# < CMP_VAL THEN
     2513    21930    3         BUFINDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM#) ;
     2514    21931    4      ELSE DO ;             /* Find index before this new one */
     2515    21932    4         NUM# = NUM ;
     2516    21933    5         DO WHILE TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = 0  AND
     2517    21934    5              NUM# >= 0 ;
     2518    21935    5            NUM# = NUM# - 1 ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:79   
     2519    21936    5            END ;
     2520    21937    4         IF NUM# < 0
     2521    21938    4         THEN               /* First control character */
     2522    21939    4            BUFINDX = 1 ;
     2523    21940    5         ELSE DO ;
     2524    21941    5            BUFINDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM#) ;
     2525    21942    5            BUFINDX = BUFINDX + TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) + 1;
     2526    21943    5            END ;
     2527    21944    4         END;
     2528    21945    3      SAVEIDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM);
     2529    21946    3      TCCHR$->KL$CCHR.CCHR_ARY(NUM) = BUFINDX ;
     2530    21947    3      MORE = HEX(0) + 1 ;
     2531    21948    3      END ;        /*  End of num = 0 */
     2532    21949    3   ELSE DO ;
     2533    21950    3      BUFINDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM) ;
     2534    21951    3      IF HEX(0) = TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) THEN
     2535    21952    4      DO ;
     2536    21953    5         DO I = 1 TO HEX(0) ;
     2537    21954    5            TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX + 1) = HEX(I) ;
     2538    21955    5            BUFINDX = BUFINDX + 1 ;
     2539    21956    5            END ;
     2540    21957    4         RETURN ;
     2541    21958    4         END ;
     2542    21959    3      SAVEIDX = BUFINDX ;
     2543    21960    3      MORE = HEX(0) - TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX)  ;
     2544    21961    3      IF HEX(0) = 0 THEN
     2545    21962    3         MORE = MORE - 1;
     2546    21963    3      END ;        /*  End of num ~= 0 */
     2547    21964    2   IF CCHRSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN
     2548    21965    2      SIZE = CCHRSZ$->PP$BIG_STRCT.SIZE.T * 256 + CCHRSZ$->PP$BIG_STRCT.SIZE.B + MORE;
     2549    21966    2   ELSE
     2550    21967    2      SIZE = CCHRSZ$->PP$STRCT.SIZE + MORE;
     2551    21968
     2552    21969    3   IF MORE > 0 THEN DO;
     2553    21970    4      IF SIZE > SIZEC(KL_CCHR)+255 THEN DO;
     2554    21971    4         I = SIZE - LENGTHC(KL_CCHR) - 255;
     2555    21972              %NUMBER ( NUM1 = I);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:80   
             21980    4         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, I );
     2556    22002              %NUMBER ( NUM2 = SIZE);
             22018    4         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, SIZE );
     2557    22032        /*E* ERROR: ASD-E$CCHR_TOO_LARGE-C
     2558    22033             MESSAGE: This control sequence is too large.
     2559    22034             MESSAGE1: %U1 bytes too many.
     2560    22035             MESSAGE2: It will increase the control char structure to %U2 bytes.
     2561    22036             MESSAGE3: The profile record will not be changed.
     2562    22037        */
     2563    22038              %SCREAM (ERR# = %E$CCHR_TOO_LARGE, LEVEL = ERROR, MID='D');
     2564    22053    4         IF SAVEIDX = 0 THEN
     2565    22054    4            TCCHR$->KL$CCHR.CCHR_ARY(NUM) = 0;
     2566    22055    4         RETURN;
     2567    22056    4         END;  /*  Control char structure too big  */
     2568    22057    3      IF CCHRSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL AND
     2569    22058    3           SIZE > 256 THEN
     2570    22059    3         I = 2;
     2571    22060    3      ELSE
     2572    22061    3         I = 0;
     2573    22062    3      I = I + P_ARS + MORE;
     2574    22063    4      IF ( I > 1024 /* AS_PRO_BUF_SIZEC */) THEN DO;
     2575    22064        /* The new stuff won't fit in the record, error */
     2576    22065        /*E* ERROR:     ASD-E$EXCEED_PRO_SIZE-C
     2577    22066             MESSAGE: Profile update not done, it makes the record too large.
     2578    22067             MESSAGE1: %U1 bytes too many.
     2579    22068             MESSAGE2: You are making a modification to the profile record
     2580    22069                       which expands its size greater than (1024) the allowed max.
     2581    22070        */
     2582    22071    4         I = I - 1024;
     2583    22072              %NUMBER ( NUM1 = I );
             22080    4         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, I );
     2584    22102              %SCREAM (ERR#=E$EXCEED_PRO_SIZE, LEVEL=ERROR, MID='D');
     2585    22117    4         IF SAVEIDX = 0 THEN
     2586    22118    4            TCCHR$->KL$CCHR.CCHR_ARY(NUM) = 0;
     2587    22119    4         RETURN;
     2588    22120    4         END; /* Error for max size exceedment */
     2589    22121    3      END; /*  More > 0  */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:81   
     2590    22122                                           /*  Adjust CCHR_ARY  */
     2591    22123    2   NUM# = NUM + 1 ;
     2592    22124    3   DO WHILE NUM# < CMP_VAL ;
     2593    22125    3      IF NOT (TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = 0) THEN
     2594    22126    3         TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = TCCHR$->KL$CCHR.CCHR_ARY(NUM#) + MORE ;
     2595    22127    3      NUM# = NUM# + 1 ;
     2596    22128    3      END ;
     2597    22129    2   IF HEX(0) = 0 THEN
     2598    22130    2      PTROPT$ -> BASED_BYTE = 0;
     2599    22131                                           /* Adjust TXT_CHRA  */
     2600    22132    2   PTRBGN$ = ADDR(TCCHR$->KL$CCHR.TXT_CHR) ;
     2601    22133    2   NUM# = POFFC(PP_END$,PTRBGN$) ;
     2602    22134    2   J = 0 ;
     2603    22135    2   IF MORE > 0 THEN
     2604    22136    3   DO I = NUM# DOWNTO BUFINDX ;
     2605    22137    3      J = I + MORE ;
     2606    22138    3      TCCHR$->KL$CCHR.TXT_CHRA(J) = TCCHR$->KL$CCHR.TXT_CHRA(I) ;
     2607    22139    3      END ;
     2608    22140    3   ELSE DO ;
     2609    22141    3      K = BUFINDX + TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) + 1 ;
     2610    22142    4      DO I = K TO NUM# ;
     2611    22143    4         J = I + MORE ;
     2612    22144    4         TCCHR$->KL$CCHR.TXT_CHRA(J) = TCCHR$->KL$CCHR.TXT_CHRA(I) ;
     2613    22145    4         END;
     2614    22146    3      END ;
     2615    22147                                        /*  Place TXT_CHRA  */
     2616    22148    2   IF HEX(0) ~= 0 THEN
     2617    22149    2      TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) = HEX(0) ;
     2618    22150    3   DO I = 1 TO HEX(0) ;
     2619    22151    3      BUFINDX = BUFINDX + 1 ;
     2620    22152    3      TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) = HEX(I) ;
     2621    22153    3      END ;
     2622    22154    3   IF SIZE > 255 THEN DO;    /*  Need the big header (4 bytes)  */
     2623    22155    4      IF CCHRSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */
     2624    22156    4         DSEG3$ -> KL$CCHR = TCCHR$ -> KL$CCHR;
     2625    22157    5         DO I = 1 TO SIZE;
     2626    22158    5            DSEG3$->KL$CCHR.TXT_UBIN(I) = TCCHR$->KL$CCHR.TXT_UBIN(I);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:82   
     2627    22159    5            END;   /*  Do i  */
     2628    22160    4         CCHRSZ$->PP$BIG_STRCT.BIG = %KV_PRMID_BIGTL;
     2629    22161    4         CCHRSZ$->PP$BIG_STRCT.TYPE = %KV_PRMID_CTRCHR;
     2630    22162    4         TCCHR$ = PINCRC (TCCHR$, 2);
     2631    22163    4         TCCHR$ -> KL$CCHR = DSEG3$ -> KL$CCHR;
     2632    22164    5         DO I = 1 TO SIZE;
     2633    22165    5            TCCHR$->KL$CCHR.TXT_UBIN(I) = DSEG3$->KL$CCHR.TXT_UBIN(I);
     2634    22166    5            END;   /*  Do i  */
     2635    22167    4         P_ARS = P_ARS + 2;
     2636    22168    4         PP_END$ = PINCRC (PP_END$, 2);
     2637    22169    4         END;   /*  No big header  */
     2638    22170    3      CCHRSZ$->PP$BIG_STRCT.SIZE.T = SIZE / 256;
     2639    22171    3      CCHRSZ$->PP$BIG_STRCT.SIZE.B = MOD ( SIZE, 256 );
     2640    22172    3      END;  /*  Need big header  */
     2641    22173    3   ELSE DO;  /*  Need small header  */
     2642    22174    4      IF CCHRSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */
     2643    22175    4         CMPE$ = PINCRC (CCHRSZ$,2);
     2644    22176    4         CMPE$ -> KL$CCHR = TCCHR$ -> KL$CCHR;
     2645    22177    5         DO I = 1 TO SIZE;
     2646    22178    5            CMPE$->KL$CCHR.TXT_UBIN(I) = TCCHR$->KL$CCHR.TXT_UBIN(I);
     2647    22179    5            END;   /*  Do i  */
     2648    22180    4         TCCHR$ = PINCRC (TCCHR$, -2);
     2649    22181    4         CCHRSZ$->PP$STRCT.TYPE = %KV_PRMID_CTRCHR;
     2650    22182    4         P_ARS = P_ARS - 2;
     2651    22183    4         PP_END$ = PINCRC (PP_END$, -2);
     2652    22184    4         END;   /*  No small header  */
     2653    22185    3      CCHRSZ$->PP$STRCT.SIZE = SIZE;
     2654    22186    3      END;  /*  Need small header  */
     2655    22187    2   P_ARS = P_ARS + MORE ;
     2656    22188    2   PP_END$ = PINCRC (PP_END$, MORE) ;
     2657    22189
     2658    22190    2   RETURN ;
     2659    22191    2   END PLACE_OPT ;
     2660    22192        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:83   
     2661    22193    1   GRA_OPT_PROC: PROC ( MN, MX ) ALTRET ;
     2662    22194
     2663    22195    2   DCL MN UBIN WORD ;
     2664    22196    2   DCL MX UBIN WORD ;
     2665    22197
     2666    22198    2   CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;
     2667    22199    3   IF VAL > MX THEN DO ;
     2668    22200        /*E*  ERROR:   ASD-E$GR_VAL_TOO_BIG-C
     2669    22201              MESSAGE: %U1 value too large.
     2670    22202              MESSAGE1: %U1 can be at most %U2.
     2671    22203        */
     2672    22204    3      AS_FIELD1 = OPTION ;
     2673    22205           %NUMBER( NUM2 = MX ) ;
             22221    3         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MX );
     2674    22235           %SCREAM( ERR#=E$GR_VAL_TOO_BIG, LEVEL=ERROR, MID='D') ;
     2675    22250    3      ALTRETURN ;
     2676    22251    3      END ;
     2677    22252    3   IF VAL < MN THEN DO ;
     2678    22253        /*E*  ERROR:   ASD-E$GR_VAL_TOO_SMALL-C
     2679    22254              MESSAGE: %U1 value too small.
     2680    22255              MESSAGE1: %U1 can be at least %U2.
     2681    22256        */
     2682    22257    3      AS_FIELD1 = OPTION ;
     2683    22258           %NUMBER( NUM2 = MN ) ;
             22274    3         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MN );
     2684    22288           %SCREAM( ERR#=E$GR_VAL_TOO_SMALL, LEVEL=ERROR, MID='D') ;
     2685    22303    3      ALTRETURN ;
     2686    22304    3      END ;
     2687    22305    2   IF NOT( PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK ) THEN
     2688    22306    2      PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK = '1'B ;
     2689    22307    3   IF NOT( GR_FLAG ) THEN DO ;
     2690    22308    3      IF PHDR$ -> PRO$HDR.GR_FPRG = ' ' THEN
     2691    22309        /*E* ERROR:    ASD-E$GR_FPRG_NIL-C
     2692    22310             MESSAGE:  GR_FPRG is NIL.
     2693    22311        */
     2694    22312              %SCREAM( ERR#=E$GR_FPRG_NIL, LEVEL=ERROR, MID='D');
     2695    22327    3      GR_FLAG = '1'B ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:84   
     2696    22328    3      END;
     2697    22329    2   RETURN ;
     2698    22330
     2699    22331    2   END GRA_OPT_PROC ;
     2700    22332        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:85   
     2701    22333    1   PUT_GR_ESCAPE: PROC;
     2702    22334
     2703    22335    2   IF (OP = 0)
     2704    22336    3   THEN DO; /* This function is unsupported, remove it from the array */
     2705    22337    3      IF (GRA$->GRA$REC.NUM_ESCAPES = 0)
     2706    22338    4      THEN DO;
     2707    22339        /*E* ERROR: ASD-E$ESCFCN_NOT_SUPPORTED-C
     2708    22340             MESSAGE0: That escape function was never supported.
     2709    22341             MESSAGE1: The named function was never specified as 'HARDWARE' or
     2710    22342                       'SOFTWARE', and hence was never supported.
     2711    22343        */
     2712    22344              %SCREAM (ERR#=E$ESCFCN_NOT_SUPPORTED, LEVEL=WARN, MID='D');
     2713    22359    4         RETURN;
     2714    22360    4         END;
     2715    22361    4      DO L = 0 TO GRA$->GRA$REC.NUM_ESCAPES-1;
     2716    22362    4         IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) = VAL)
     2717    22363    5         THEN DO; /* Found the one to remove */
     2718    22364    5            IF (L = GRA$->GRA$REC.NUM_ESCAPES - 1) /* 0 based count */
     2719    22365    6            THEN DO; /* Remove the last one! */
     2720    22366    6               GRA$->GRA$REC.GR_ESCAPES(GRA$->GRA$REC.NUM_ESCAPES-1) = '0'B;
     2721    22367    6               GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES - 1;
     2722    22368    6               RETURN;
     2723    22369    6               END;
     2724    22370    6            DO OP = (L + 1) TO (GRA$->GRA$REC.NUM_ESCAPES - 1);
     2725    22371    6               GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (OP - 1) =
     2726    22372    6                    GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (OP);
     2727    22373    6               GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (OP - 1) =
     2728    22374    6                    GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (OP);
     2729    22375    6               END;
     2730    22376    5            GRA$->GRA$REC.GR_ESCAPES(GRA$->GRA$REC.NUM_ESCAPES-1) = '0'B;
     2731    22377    5            GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES - 1;
     2732    22378    5            RETURN;
     2733    22379    5            END;
     2734    22380    4         END;
     2735    22381    3      IF (L = GRA$->GRA$REC.NUM_ESCAPES)
     2736    22382    4      THEN DO; /* We never deleted the item - an error condition */
     2737    22383              %SCREAM (ERR#=E$ESCFCN_NOT_SUPPORTED, LEVEL=WARN, MID='D');
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:86   
     2738    22398    4         RETURN;
     2739    22399    4         END;
     2740    22400    3      END; /* Unsupporting of an escape function */
     2741    22401
     2742    22402        /* Insert a new function if we are here */
     2743    22403    2   IF (GRA$->GRA$REC.NUM_ESCAPES = 62) /* count from zero */
     2744    22404    3   THEN DO;
     2745    22405        /*E* ERROR: ASD-E$MAX_NUM_ESCAPES-C
     2746    22406           MESSAGE: The maximum number of graphic escape function is already defined.
     2747    22407           MESSAGE1: To add this one, another must be 'UNSUPPORTED' to open a space.
     2748    22408           MESSAGE2: The maximum number of supported graphic escape functions is 63.
     2749    22409        */
     2750    22410           %SCREAM (ERR#=E$MAX_NUM_ESCAPES, LEVEL=ERROR, MID='D');
     2751    22425    3      RETURN;
     2752    22426    3      END;
     2753    22427
     2754    22428    2   IF (GRA$->GRA$REC.NUM_ESCAPES = 0)
     2755    22429    3   THEN DO; /* Special case to insert the first element */
     2756    22430    3      GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES + 1;
     2757    22431    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (0) = VAL;
     2758    22432    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (0) = OP;
     2759    22433    3      RETURN;
     2760    22434    3      END;
     2761    22435
     2762    22436    2   IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (GRA$->GRA$REC.NUM_ESCAPES - 1)
     2763    22437    2        < VAL)
     2764    22438    3   THEN DO; /* Special case to go fast for ascending order insertion */
     2765    22439    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (GRA$->GRA$REC.NUM_ESCAPES) = VAL;
     2766    22440    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (GRA$->GRA$REC.NUM_ESCAPES) = OP;
     2767    22441    3      GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES + 1;
     2768    22442    3      RETURN;
     2769    22443    3      END;
     2770    22444
     2771    22445        /* We have to insert this element, and keep the list ordered */
     2772    22446    3   DO L = 0 TO (GRA$->GRA$REC.NUM_ESCAPES - 1);
     2773    22447    3      IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) = VAL)
     2774    22448    4      THEN DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:87   
     2775    22449    4         GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (L) = OP;
     2776    22450    4         RETURN;
     2777    22451    4         END;
     2778    22452    3      IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) > VAL)
     2779    22453    4      THEN DO;
     2780    22454    5         DO K = GRA$->GRA$REC.NUM_ESCAPES DOWNTO (L+1);
     2781    22455    5            GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (K) =
     2782    22456    5                 GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (K - 1);
     2783    22457    5            GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (K) =
     2784    22458    5                 GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (K - 1);
     2785    22459    5            END;
     2786    22460    4         GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) = VAL;
     2787    22461    4         GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (L) = OP;
     2788    22462    4         GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES + 1;
     2789    22463    4         RETURN;
     2790    22464    4         END;
     2791    22465    3      END; /* Do loop for insertion */
     2792    22466    2   RETURN;
     2793    22467    2   END PUT_GR_ESCAPE;
     2794    22468        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:88   
     2795    22469    1   DO_FUNKEY_DEFS: PROC ALTRET;
     2796    22470        /* This routine is the driver for handling (function) key definitions.
     2797    22471           It sets the prompt, does the reading and parsing of input, and
     2798    22472           handles removing and adding of key definitions.  It calls
     2799    22473           FIGURE_BYTE2, FIND_FKEY, MAYBE_REMOVE_INTRO, ADD_INTRO,
     2800    22474           REMOVE_THIS_FUNKEY, ADD_ANOTHER_FUNKEY, and PUT_IN_FUNKEY.  It
     2801    22475           also keeps room for one key definition even if none are defined.
     2802    22476           It keeps the intro list pared to only intros that are currently
     2803    22477           used.  If a key is defined, just its intro and character being
     2804    22478           introduced are updated.  Someday the list of keys should be sorted.
     2805    22479        */
     2806    22480
     2807    22481        /*  Auto data  */
     2808    22482
     2809    22483    2   DCL BYTE2 UBIN WORD ALIGNED;
     2810    22484    2   DCL CODE UBIN WORD ALIGNED;
     2811    22485    2   DCL CONTINUE BIT (1) ALIGNED;
     2812    22486    2   DCL FKEY UBIN WORD ALIGNED;
     2813    22487    2   DCL FUNKEY_DEF_SIZE UBIN STATIC INIT (SIZEC (KL$FUNKEY.FCNKEY(0)));
     2814    22488    2   DCL I UBIN WORD ALIGNED;
     2815    22489    2   DCL IDENT UBIN ALIGNED;
     2816    22490    2   DCL INTRO_NUM UBIN WORD ALIGNED;
     2817    22491    2   DCL K UBIN WORD ALIGNED;
     2818    22492    2   DCL MORE BIT (1) ALIGNED;
     2819    22493    2   DCL NUM_NODES UBIN WORD ALIGNED;
     2820    22494    2   DCL POSITION UBIN WORD ALIGNED;
     2821    22495    2   DCL VAL1  SBIN ALIGNED;
     2822    22496    2   DCL VAL2  SBIN ALIGNED;
     2823    22497    2   DCL ACTION_FLG BIT(1) ALIGNED; /* '1'b if add, '0'b if del */
     2824    22498
     2825    22499    2   MORE = '1'B;
     2826    22500    2   CALL ASB$SET_PROMPT ( %PROMPT_SUB );
     2827    22501    2   P_PCB.ROOT$ = ADDR (FUNKEY_CMD);
     2828    22502    2   FUNC_OPTS_LOOP: ;
     2829    22503    3   DO WHILE (MORE);
     2830    22504    3      CALL ASB$READ_SI (IN_BUF, ARS);
     2831    22505    3      P_PCB.NCHARS = ARS;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:89   
     2832    22506    3      CALL X$PARSE (P_PCB)
     2833    22507    4      WHENALTRETURN DO;
     2834    22508    4         CALL ASH$ERROR (P_PCB.ERROR);
     2835    22509    4         GOTO FUNC_OPTS_LOOP;
     2836    22510    4         END;
     2837    22511
     2838    22512    4      DO K = 0 TO P_PCB.OUT$->P$NODE.SUBNODES - 1;
     2839    22513    4         NODE$ = P_PCB.OUT$->P$NODE.SUBLK$(K) ;
     2840    22514    4         NUM_NODES = P$NODE.SUBNODES ;
     2841    22515
     2842    22516    4         IF (NUM_NODES > 0)
     2843    22517    5         THEN DO;
     2844    22518    5            BLK$ = P$NODE.SUBLK$(0);
     2845    22519    5            IF (OUT$SYM.CODE = %F_HEX_CHAR)
     2846    22520    6            THEN DO;
     2847    22521    6               BLK$ = P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);
     2848    22522    6               CALL ASD$HEX2OCT (OUT$SYM, FKEY);
     2849    22523    6               END;
     2850    22524    5            ELSE IF (OUT$SYM.CODE = %F_SINGLE_CHAR)
     2851    22525    6               THEN DO;
     2852    22526    6                  FKEY = ASCBIN (OUT$SYM.TEXT);
     2853    22527    6                  END;
     2854    22528    6               ELSE DO;
     2855    22529    6                  IF (OUT$SYM.CODE = %KV_INPFNCKEY_BREAK)
     2856    22530    7                  THEN DO;
     2857    22531    7                     FKEY = 1; /* Special for break */
     2858    22532    7                     END;
     2859    22533    7                  ELSE DO;
     2860    22534    7                     FKEY = OUT$SYM.CODE;
     2861    22535    7                     END;
     2862    22536    6                  END;
     2863    22537    5            END;
     2864    22538
     2865    22539    4         CODE = P$NODE.CODE ;
     2866    22540
     2867    22541    5         DO CASE ( CODE ) ;
     2868    22542
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:90   
     2869    22543    5            CASE ( 300 /* DQUESTION_VAL */ ) ;
     2870    22544    5               CALL ASH$DQUEST;
     2871    22545
     2872    22546    5            CASE ( 301 /* QUESTION_VAL */ ) ;
     2873    22547    5               CALL ASH$QUEST;
     2874    22548
     2875    22549    5            CASE ( 302 /* HELP_VAL */ ) ;
     2876    22550    5               CALL ASH$HELP ;
     2877    22551
     2878    22552    5            CASE ( %F_END ,
     2879    22553    5                    %F_BLANK_LINE ) ;
     2880    22554    5               MORE = '0'B;
     2881    22555
     2882    22556    5            CASE ( %FUNKEY_REM);
     2883    22557    5               IF (KL$FUNKEY.NUM_DEFS ~= 0) THEN
     2884    22558    6               DO;
     2885    22559    6                  IF (P$NODE.SUBLK$(0)->P$NODE.CODE = %FUNKEY_REM_ALL)
     2886    22560    7                  THEN DO; /* Remove all defs */
     2887    22561    8                     DO I = KL$FUNKEY.NUM_DEFS - 1 DOWNTO 1; /* Never del all */
     2888    22562    8                        CALL MAYBE_REMOVE_INTRO (I);
     2889    22563    8                        CALL REMOVE_THIS_FUNKEY (I);
     2890    22564    8                        END;
     2891    22565    7                     KL$FUNKEY.NUM_DEFS = 1; /* Fake out remove code */
     2892    22566    7                     CALL MAYBE_REMOVE_INTRO (0);
     2893    22567    7                     KL$FUNKEY.NUM_DEFS = 0; /* Logically remove last */
     2894    22568    7                     END;
     2895    22569    7                  ELSE DO;
     2896    22570    7                     ACTION_FLG = '0'B;
     2897    22571    7                     CALL FIGURE_BYTE2 ALTRET (FUNC_OPTS_LOOP);
     2898    22572    7                     I = 1;
     2899    22573    7                     CONTINUE = AS_TRUE;
     2900    22574    8                     DO WHILE CONTINUE;
     2901    22575    8                        CALL FIND_FKEY
     2902    22576    9                        WHENRETURN DO; /* Found the one to delete */
     2903    22577    9                           I = 2;
     2904    22578    9                           CALL MAYBE_REMOVE_INTRO (POSITION);
     2905    22579    9                           IF (KL$FUNKEY.NUM_DEFS = 1) THEN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:91   
     2906    22580    9                              KL$FUNKEY.NUM_DEFS = 0;
     2907    22581    9                           ELSE
     2908    22582    9                              CALL REMOVE_THIS_FUNKEY (POSITION);
     2909    22583    9                           END;
     2910    22584    9                        WHENALTRETURN DO;
     2911    22585    9                           IF (I = 1) THEN
     2912    22586           /*E*  ERROR: ASD-E$FUNKEY_NOT_DEFT-C
     2913    22587                 MESSAGE0: That key definition doesn't exist.
     2914    22588                 MESSAGE1: You tried to remove an undefined key.
     2915    22589                 MESSAGE2: A key must be defined before it can be removed.
     2916    22590           */
     2917    22591                                   %SCREAM (ERR#=E$FUNKEY_NOT_DEFT, LEVEL=ERROR, MID ='D');
     2918    22606    9                           CONTINUE = AS_FALSE;
     2919    22607    9                           END;
     2920    22608    8                        END; /*  Do while continue */
     2921    22609    7                     END;
     2922    22610    6                  END;
     2923    22611
     2924    22612    5            CASE ( %FUNKEY_DEF);
     2925    22613
     2926    22614    5               INTRO_NUM = %KV_INPFNCTYP_SPCCHR; /* Default-no introducer */
     2927    22615    5               ACTION_FLG = '1'B;
     2928    22616    5               CALL FIGURE_BYTE2
     2929    22617    6               WHENRETURN DO;   /* from FIGURE_BYTE2 */
     2930    22618    6                  CALL GET_IDENTIFIER;
     2931    22619    6                  CALL GET_INTRODUCER;
     2932    22620    6                  CALL FIND_FUNCTION_KEY
     2933    22621    7                  WHENRETURN DO;    /* from FIND_FUNCTION_KEY */
     2934    22622                                         /* replace the function key
     2935    22623                                            at position.  No current function
     2936    22624                                            keys defined is treated here as
     2937    22625                                            a special case.  */
     2938    22626    7                     CALL MAYBE_REMOVE_INTRO (POSITION);
     2939    22627    7                     CALL ADD_INTRO   /* returns in INTRO_NUM the
     2940    22628                                              index of the header introducer
     2941    22629                                              where this current definition
     2942    22630                                              was put.  INTRO_NUM will be
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:92   
     2943    22631                                              set to 0, 1, or 2, where 2
     2944    22632                                              means this function key does
     2945    22633                                              not use an introducer.  */
     2946    22634    8                     WHENRETURN DO;   /* from ADD_INTRO */
     2947    22635    8                        CALL PUT_IN_FUNKEY (POSITION);
     2948    22636    8                        IF (KL$FUNKEY.NUM_DEFS = 0) THEN
     2949    22637    8                           KL$FUNKEY.NUM_DEFS = 1;
     2950    22638    8                        END;          /* return from ADD_INTRO */
     2951    22639    8                     WHENALTRETURN DO;  /* from ADD_INTRO */
     2952    22640    8                        END;           /* altreturn from ADD_INTRO */
     2953    22641    7                     END; /* return from FIND_FUNCTION_KEY */
     2954    22642    7                  WHENALTRETURN DO;   /* from FIND_FUNCTION_KEY */
     2955    22643    7                     I = 0;
     2956    22644    7                     IF FUNKEYSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL THEN
     2957    22645    7                        IF FUNKEYSZ$->PP$STRCT.SIZE + FUNKEY_DEF_SIZE > 256 THEN
     2958    22646                            /* We will need a big header for this add */
     2959    22647                            /* That will increase the profile an additional 2 bytes  */
     2960    22648    7                           I = 2;
     2961    22649    7                     IF ((P_ARS + FUNKEY_DEF_SIZE + I) > 1024 /* AS_PRO_BUF_SIZEC */)
     2962    22650    8                     THEN DO;    /* profile rec size exceeded */
     2963    22651           /*E*  ERROR:    ASD-E$PROSIZE_MAXED_OUT-C
     2964    22652                 MESSAGE: Profile has reached maximum size, key definition ignored.
     2965    22653                 MESSAGE1: The addition of this definition would cause the
     2966    22654                           profile to exceed its maximum size allowance.
     2967    22655                 MESSAGE2: The maximum size for a profile is 1024 characters.
     2968    22656                           This key definition adds %U1 characters to the profile.
     2969    22657                           Adding this key definition would exceed the profiles
     2970    22658                           maximum size allowance.
     2971    22659           */
     2972    22660    8                        I = I + FUNKEY_DEF_SIZE;
     2973    22661                             %NUMBER ( NUM1 = I);
             22669    8         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, I );
     2974    22691                             %SCREAM (ERR#=E$PROSIZE_MAXED_OUT, LEVEL=ERROR, MID='D');
     2975    22706    8                        END; /* if profile rec size exceeded */
     2976    22707    8                     ELSE DO;   /* profile rec size not exceeded */
     2977    22708    8                        CALL ADD_INTRO
     2978    22709    9                        WHENRETURN DO;  /* from ADD_INTRO */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:93   
     2979    22710    9                           CALL ADD_ANOTHER_FUNKEY;
     2980    22711    9                           CALL PUT_IN_FUNKEY (KL$FUNKEY.NUM_DEFS - 1);
     2981    22712    9                           END;         /* return from ADD_INTRO */
     2982    22713    9                        WHENALTRETURN DO;  /* from ADD_INTRO */
     2983    22714    9                           END;            /* altreturn from ADD_INTRO */
     2984    22715    8                        END;   /* profile rec size not exceeded */
     2985    22716    7                     END; /* altreturn of FIND_FUNCTION_KEY */
     2986    22717    6                  END; /* return from FIGURE_BYTE2 */
     2987    22718    5            CASE ( ELSE );
     2988    22719    5            END; /* Do case */
     2989    22720    4         END; /* Do i = 0 to #COMMANDS */
     2990    22721    3      END; /* Do while (more) */
     2991    22722    2   RETURN;
     2992    22723        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:94   
     2993    22724    2   FIND_FKEY: PROC ALTRET;
     2994    22725        /* FIND_FKEY goes through all the key defs looking to see if the one
     2995    22726           being defined has been so in the past, if it has been- the external
     2996    22727           variable position is set with the keys position in the array and
     2997    22728           the routine returns.  If the key doesn't exist, the routine will
     2998    22729           altreturn.  It checks the key value (BYTE3) and type (BYTE2).
     2999    22730        */
     3000    22731    3   DCL I UBIN;
     3001    22732    3   IF (KL$FUNKEY.NUM_DEFS = 0)
     3002    22733    4   THEN DO;
     3003    22734    4      ALTRETURN;
     3004    22735    4      END;
     3005    22736
     3006    22737    4   DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;
     3007    22738    4      IF (KL$FUNKEY.FCNKEY.FCN_BYTE3(I) = FKEY)
     3008    22739    5      THEN DO;
     3009    22740    5         POSITION = I;
     3010    22741    5         RETURN;
     3011    22742    5         END;
     3012    22743    4      END;
     3013    22744    3   ALTRETURN;
     3014    22745    3   END FIND_FKEY;
     3015    22746        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:95   
     3016    22747    2   REMOVE_THIS_FUNKEY: PROC (POS);
     3017    22748        /* REMOVE_THIS_FUNKEY removes the word corresponding to the key
     3018    22749           definition being deleted.  The rest of the record after the deleted
     3019    22750           def is shifted left by the size of a key definition, and all
     3020    22751           pointers which indicate various parts of the profile record are
     3021    22752           tested and updated as necessary due to this shift.
     3022    22753           The actual size of the profile record is adjusted along with the
     3023    22754           size of the block containing the key definitions.
     3024    22755        */
     3025    22756    3   DCL POS UBIN WORD;
     3026    22757    3   DCL BEGIN$ PTR;
     3027    22758    3   DCL NUM_CHARS SBIN;
     3028    22759    3   DCL SIZE  UBIN;
     3029    22760
     3030    22761    3   BEGIN$ = ADDR (KL$FUNKEY.FCNKEY.FCN_BYTE0 (POS));
     3031    22762    3   NUM_CHARS = FUNKEY_DEF_SIZE;
     3032    22763        /* Now release the space and have the pointers adjusted */
     3033    22764
     3034    22765    3   CALL SHRINK (BEGIN$, NUM_CHARS);
     3035    22766
     3036    22767    3   KL$FUNKEY.NUM_DEFS = KL$FUNKEY.NUM_DEFS - 1;
     3037    22768
     3038    22769    3   IF FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN
     3039    22770    3      SIZE = FUNKEYSZ$->PP$BIG_STRCT.SIZE.T * 256 + FUNKEYSZ$->PP$BIG_STRCT.SIZE.B -
             22770               FUNKEY_DEF_SIZE;
     3040    22771    3   ELSE
     3041    22772    3      SIZE = FUNKEYSZ$->PP$STRCT.SIZE - FUNKEY_DEF_SIZE;
     3042    22773
     3043    22774    4   IF SIZE > 255 THEN DO;    /*  Need the big header (4 bytes)  */
     3044    22775        /*  But since we are deleting a function key, we must already have one  */
     3045    22776    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.T = SIZE / 256;
     3046    22777    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.B = MOD ( SIZE, 256 );
     3047    22778    4      END;  /*  Need big header  */
     3048    22779    4   ELSE DO;  /*  Need small header  */
     3049    22780    5      IF FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */
     3050    22781        /*  So we must shrink the profile record by 2 bytes */
     3051    22782    5         NUM_CHARS = 2;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:96   
     3052    22783    5         BEGIN$ = FUNKEYSZ$;
     3053    22784    5         CALL SHRINK ( BEGIN$, NUM_CHARS );
     3054    22785    5         FUNKEYSZ$ = BEGIN$;
     3055    22786    5         FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_KEYDEFS;
     3056    22787    5         END;   /*  No small header  */
     3057    22788    4      FUNKEYSZ$->PP$STRCT.SIZE = SIZE;
     3058    22789    4      END;  /*  Need small header  */
     3059    22790
     3060    22791    3   RETURN;
     3061    22792    3   END REMOVE_THIS_FUNKEY;
     3062    22793        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:97   
     3063    22794    2   ADD_ANOTHER_FUNKEY: PROC;
     3064    22795        /* ADD_ANOTHER_FUNKEY will add space for another function key
     3065    22796           definition to the end of the function key block in the profile.
     3066    22797           The profile data after that point is all shifted right, and the
     3067    22798           size of the total profile record is updated along with the size of
     3068    22799           this particular block.
     3069    22800        */
     3070    22801    3   DCL BEGIN$ PTR;
     3071    22802    3   DCL NUM_CHARS SBIN;
     3072    22803    3   DCL SIZE  UBIN;
     3073    22804
     3074    22805    3   BEGIN$ = ADDR (KL$FUNKEY.FCNKEY (KL$FUNKEY.NUM_DEFS));
     3075    22806    3   NUM_CHARS = FUNKEY_DEF_SIZE;
     3076    22807
     3077    22808        /* Now get the space we need and adjust the pointers. */
     3078    22809
     3079    22810    3   CALL ENLARGE (BEGIN$, NUM_CHARS);
     3080    22811
     3081    22812    3   KL$FUNKEY.NUM_DEFS = KL$FUNKEY.NUM_DEFS + 1;
     3082    22813
     3083    22814    3   IF FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN
     3084    22815    3      SIZE = FUNKEYSZ$->PP$BIG_STRCT.SIZE.T * 256 + FUNKEYSZ$->PP$BIG_STRCT.SIZE.B +
             22815               FUNKEY_DEF_SIZE;
     3085    22816    3   ELSE
     3086    22817    3      SIZE = FUNKEYSZ$->PP$STRCT.SIZE + FUNKEY_DEF_SIZE;
     3087    22818
     3088    22819    4   IF SIZE > 255 THEN DO;    /*  Need the big header (4 bytes)  */
     3089    22820    5      IF FUNKEYSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */
     3090    22821        /*  Since we are adding a FUNCTION_KEY, we need to enlarge the profile
     3091    22822            by 2 bytes  */
     3092    22823    5         NUM_CHARS = 2;
     3093    22824    5         BEGIN$ = FUNKEYSZ$;
     3094    22825    5         CALL ENLARGE ( BEGIN$, NUM_CHARS );
     3095    22826    5         FUNKEYSZ$ = BEGIN$;
     3096    22827    5         FUNKEYSZ$->PP$BIG_STRCT.TYPE = %KV_PRMID_KEYDEFS;
     3097    22828    5         FUNKEYSZ$->PP$BIG_STRCT.BIG = %KV_PRMID_BIGTL;
     3098    22829    5         END;   /*  No big header  */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:98   
     3099    22830    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.T = SIZE / 256;
     3100    22831    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.B = MOD ( SIZE, 256 );
     3101    22832    4      END;  /*  Need big header  */
     3102    22833    4   ELSE DO;  /*  Need small header  */
     3103    22834        /*  Since we are adding, we must already have one */
     3104    22835    4      FUNKEYSZ$->PP$STRCT.SIZE = SIZE;
     3105    22836    4      END;  /*  Need small header  */
     3106    22837
     3107    22838    3   RETURN;
     3108    22839    3   END ADD_ANOTHER_FUNKEY;
     3109    22840        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:99   
     3110    22841    2   ADD_INTRO: PROC ALTRET;
     3111    22842        /* This routine 1- checks if the new introducer already exists, if
     3112    22843           it does then return.  It it doesn't, then can it be added to the
     3113    22844           list?  if yes then it is and return if not then altreturn.
     3114    22845           In any return case the value INTRO_NUM is set to indicate if the
     3115    22846           new introducer is #1 or #2, (0 or 1 respectively).
     3116    22847           If the current definition doesn't have an introducer, this
     3117    22848           routine just returns.
     3118    22849        */
     3119    22850
     3120    22851    3   IF (NUM_NODES = 2) THEN
     3121    22852    3      RETURN;
     3122    22853
     3123    22854    3   IF (KL$FUNKEY.INTRO1.CHR1 = VAL1) AND
     3124    22855    3        (KL$FUNKEY.INTRO1.CHR2 = VAL2)
     3125    22856    4   THEN DO;
     3126    22857    4      INTRO_NUM = %KV_INPFNCTYP_PRMESC;
     3127    22858    4      RETURN;
     3128    22859    4      END;
     3129    22860
     3130    22861    3   IF (KL$FUNKEY.INTRO2.CHR1 = VAL1) AND
     3131    22862    3        (KL$FUNKEY.INTRO2.CHR2 = VAL2)
     3132    22863    4   THEN DO;
     3133    22864    4      INTRO_NUM = %KV_INPFNCTYP_SCNESC;
     3134    22865    4      RETURN;
     3135    22866    4      END;
     3136    22867
     3137    22868    3   IF (KL$FUNKEY.INTRO1.CHR1 = -1)
     3138    22869    4   THEN DO;
     3139    22870    4      INTRO_NUM = %KV_INPFNCTYP_PRMESC;
     3140    22871    4      KL$FUNKEY.INTRO1.CHR1 = VAL1;
     3141    22872    4      KL$FUNKEY.INTRO1.CHR2 = VAL2;
     3142    22873    4      RETURN;
     3143    22874    4      END;
     3144    22875
     3145    22876    3   IF (KL$FUNKEY.INTRO2.CHR1 = -1)
     3146    22877    4   THEN DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:100  
     3147    22878    4      INTRO_NUM = %KV_INPFNCTYP_SCNESC;
     3148    22879    4      KL$FUNKEY.INTRO2.CHR1 = VAL1;
     3149    22880    4      KL$FUNKEY.INTRO2.CHR2 = VAL2;
     3150    22881    4      RETURN;
     3151    22882    4      END;
     3152    22883
     3153    22884
     3154    22885           /*E*  ERROR:    ASD-E$NO_MORE_FUNKEY_INTROS-C
     3155    22886                 MESSAGE0: There is no more room for another introducer sequence.
     3156    22887                 MESSAGE1: 2 different introducer sequences (or keys) have
     3157    22888                           already been defined.  This key is not being defined.
     3158    22889                 MESSAGE2: At most 2 different introducer keys or sequences can
     3159    22890                           be defined.  Keys needing a third introducer are not
     3160    22891                           defined.
     3161    22892           */
     3162    22893        %SCREAM (ERR#=E$NO_MORE_FUNKEY_INTROS, LEVEL=ERROR, MID='D');
     3163    22908    3   ALTRETURN;
     3164    22909    3   END ADD_INTRO;
     3165    22910        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:101  
     3166    22911    2   PUT_IN_FUNKEY: PROC (POS);
     3167    22912    3   DCL POS UBIN;
     3168    22913        /* This routine adds the data to the word at pos in the KL$FUNKEY
     3169    22914           struct.  It sets the intro sequence, character, function type,
     3170    22915           and the sub for the key.
     3171    22916        */
     3172    22917
     3173    22918    3   KL$FUNKEY.FCNKEY.FCN_BYTE0 (POS) = INTRO_NUM;
     3174    22919
     3175    22920    3   KL$FUNKEY.FCNKEY.FCN_BYTE1 (POS) = IDENT;
     3176    22921
     3177    22922    3   KL$FUNKEY.FCNKEY.FCN_BYTE2 (POS) = BYTE2;
     3178    22923
     3179    22924    3   KL$FUNKEY.FCNKEY.FCN_BYTE3 (POS) = FKEY;
     3180    22925    3   RETURN;
     3181    22926    3   END PUT_IN_FUNKEY;
     3182    22927        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:102  
     3183    22928    2   MAYBE_REMOVE_INTRO: PROC (POS);
     3184    22929    3   DCL POS UBIN;
     3185    22930         /* This routine will remove an introducer if no other function keys
     3186    22931              refer to it.
     3187    22932         */
     3188    22933    3   DCL I UBIN;
     3189    22934    3   DCL VAL UBIN;
     3190    22935    3   DCL DELET BIT (1) ALIGNED;
     3191    22936
     3192    22937    3   IF ((KL$FUNKEY.NUM_DEFS = 1) AND
     3193    22938    3        (POS = 0) )
     3194    22939    4   THEN DO;
     3195    22940    4      KL$FUNKEY.INTRO1_CHRS = -1;
     3196    22941    4      KL$FUNKEY.INTRO2_CHRS = -1;
     3197    22942    4      END;
     3198    22943    4   ELSE DO;
     3199    22944    4      VAL = KL$FUNKEY.FCNKEY.FCN_BYTE0 (POS);
     3200    22945    4      DELET = '1'B;
     3201    22946    5      DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;
     3202    22947    5         IF ( (KL$FUNKEY.FCNKEY.FCN_BYTE0 (I) = VAL) AND
     3203    22948    5              (POS ~= I) )
     3204    22949    6         THEN DO;
     3205    22950    6            DELET = '0'B;
     3206    22951    6            I = 999;   /* Set big to exit do i loop */
     3207    22952    6            END;
     3208    22953    5         END; /* Do i */
     3209    22954    4      IF DELET
     3210    22955    5      THEN DO;
     3211    22956    5         VAL = VAL + 1;   /* Now val is the # of the introducer */
     3212    22957    5         IF VAL = 1
     3213    22958    6         THEN DO;
     3214    22959    6            KL$FUNKEY.INTRO1_CHRS = -1;
     3215    22960    6            END;
     3216    22961    5         ELSE IF VAL = 2
     3217    22962    6            THEN DO;
     3218    22963    6               KL$FUNKEY.INTRO2_CHRS = -1;
     3219    22964    6               END;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:103  
     3220    22965    5         END;
     3221    22966    4      END;
     3222    22967    3   RETURN;
     3223    22968    3   END MAYBE_REMOVE_INTRO;
     3224    22969        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:104  
     3225    22970    2   FIGURE_BYTE2: PROC ALTRET;
     3226    22971        /* FIGURE_BYTE2 determines if the key being defined is a line function,
     3227    22972           function key, or single (special) character and sets BYTE2 accordingly.
     3228    22973           This routine will altreturn if a key modifier is given and not allowed.
     3229    22974        */
     3230    22975    3   DCL I UBIN WORD ALIGNED;
     3231    22976    3   DCL MODIFIER UBIN WORD ALIGNED;
     3232    22977    3   DCL MODIFIED_FLG BIT(1) UNAL;
     3233    22978    3   DCL DUPE_CHR_IDX UBIN WORD ALIGNED;
     3234    22979
     3235    22980    3   MODIFIED_FLG = AS_TRUE;
     3236    22981
     3237    22982    3   IF (P$NODE.SUBLK$(0)->P$NODE.CODE = %KV_INPFNCKEY_BREAK)
     3238    22983    4   THEN DO;
     3239    22984    4      BYTE2 = %KV_INPFNCTYP_CTR;
     3240    22985    4      END;
     3241    22986    3   ELSE IF ( (P$NODE.SUBLK$(0)->P$NODE.CODE ~= %F_SINGLE_CHAR) AND
     3242    22987    3           (P$NODE.SUBLK$(0)->P$NODE.CODE ~= %F_HEX_CHAR) )
     3243    22988    4      THEN DO;
     3244    22989    4         BYTE2 = %KV_INPFNCTYP_FNCKEY;
     3245    22990    4         IF (FKEY = %KV_INPFNCKEY_IGNORE)
     3246    22991    5         THEN DO; /* This is the ignore sequence special byte2 of -1 */
     3247    22992    5            BYTE2 = 511; /* 511 is a -1 for a single byte. */
     3248    22993    5            END;
     3249    22994    4         END;
     3250    22995    4      ELSE DO;
     3251    22996    4         BYTE2 = %KV_INPFNCTYP_SPCCHR;
     3252    22997    4         END;
     3253    22998
     3254    22999    4   DO I = 0 TO NUM_NODES - 1;
     3255    23000    4      BLK$ = P$NODE.SUBLK$ (I);
     3256    23001    4      IF (OUT$SYM.CODE = %FUNKEY_MODIFIER)
     3257    23002    5      THEN DO;  /* A special modifier was specified. */
     3258    23003    5         MODIFIED_FLG = AS_FALSE;
     3259    23004    5         CALL CHARBIN (MODIFIER, OUT$SYM.TEXT);
     3260    23005    5         IF (BYTE2 = %KV_INPFNCTYP_FNCKEY)
     3261    23006    6         THEN DO; /* This is a function key, add the modifier */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:105  
     3262    23007    6            BYTE2 = MODIFIER + %KV_FCNKEY_MODIFIER_BASE;
     3263    23008    6            END;
     3264    23009    5         ELSE IF (BYTE2 = %KV_INPFNCTYP_SPCCHR)
     3265    23010    6            THEN DO; /* This is a single character, add the modifier */
     3266    23011    6               BYTE2 = MODIFIER + %KV_SPCCHR_MODIFIER_BASE;
     3267    23012    6               END;
     3268    23013    6            ELSE DO;
     3269    23014           /*E* ERROR:   ASD-E$MOD_NOT_ALLOWED-C
     3270    23015               MESSAGE0: Modifiers aren't permitted for line functions, or ignore sequences.
     3271    23016                MESSAGE1: This definition has not been performed due to an error.
     3272    23017           */
     3273    23018                    %SCREAM (ERR#=E$MOD_NOT_ALLOWED, LEVEL=ERROR, MID='D');
     3274    23033    6               ALTRETURN;
     3275    23034    6               END;
     3276    23035    5         END; /* The do if there is a modifier */
     3277    23036    4      END; /* Do i */
     3278    23037
     3279    23038    4   IF ACTION_FLG THEN DO;
     3280    23039    4      CALL GET_IDENTIFIER;
     3281    23040    4      CALL GET_INTRODUCER;
     3282    23041    4      BLK$ = P$NODE.SUBLK$(NUM_NODES-1)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);
     3283    23042    4      DUPE_CHR_IDX = 0;
     3284    23043    5      DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;
     3285    23044    6         IF KL$FUNKEY.FCNKEY.FCN_BYTE1(I) = IDENT THEN DO;
     3286    23045    7            DO SELECT (KL$FUNKEY.FCNKEY.FCN_BYTE0(I));
     3287    23046    7               SELECT (0);
     3288    23047    7               IF ((VAL1 = KL$FUNKEY.INTRO1.CHR1) AND
     3289    23048    7                    (VAL2 = KL$FUNKEY.INTRO1.CHR2)) THEN
     3290    23049    8               DO;
     3291    23050    8                  CALL CHECK_MODIFIERS (MODIFIED_FLG,I)
     3292    23051    9                  WHENRETURN DO;
     3293    23052    9                     EXIT;
     3294    23053    9                     END;
     3295    23054    8                  END;
     3296    23055
     3297    23056    7               SELECT (1);
     3298    23057    7               IF ((VAL1 = KL$FUNKEY.INTRO2.CHR1) AND
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:106  
     3299    23058    7                    (VAL2 = KL$FUNKEY.INTRO2.CHR2)) THEN
     3300    23059    8               DO;
     3301    23060    8                  CALL CHECK_MODIFIERS (MODIFIED_FLG,I)
     3302    23061    9                  WHENRETURN DO;
     3303    23062    9                     EXIT;
     3304    23063    9                     END;
     3305    23064    8                  END;
     3306    23065
     3307    23066    7               SELECT (2);
     3308    23067    7               IF ((VAL1 = -1) AND (VAL2 = -1)) THEN
     3309    23068    8               DO;
     3310    23069    8                  END;
     3311    23070
     3312    23071    7               END;
     3313    23072    6            END;
     3314    23073
     3315    23074    5         END;
     3316    23075    4      END; /* If ACTION_FLG = '1'b */
     3317    23076    3   RETURN;
     3318    23077    3   END FIGURE_BYTE2;
     3319    23078        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:107  
     3320    23079    2   CHECK_MODIFIERS: PROC (MODIFIER_SPECIFIED,I) ALTRET;
     3321    23080    3   DCL MODIFIER_SPECIFIED BIT(1);
     3322    23081    3   DCL I UBIN;
     3323    23082
     3324    23083        /* If a modifier has been specified for the current definition,
     3325    23084           check KL$FUNKEY.FCNKEY.FCN_BYTE2(I) to see if a modifier has
     3326    23085           been defined. If not, replace it with appropriate MODIFIER_BASE,
     3327    23086           otherwise leave it alone.
     3328    23087
     3329    23088           If there is not a modifier for the current definition, then
     3330    23089           global var BYTE2 might have to get the MODIFIER_BASE.           */
     3331    23090
     3332    23091    3   DCL MOD_VALU UBIN WORD ALIGNED;
     3333    23092
     3334    23093    3   MOD_VALU = KL$FUNKEY.FCNKEY.FCN_BYTE2(I);
     3335    23094
     3336    23095    4   IF ~MODIFIER_SPECIFIED THEN DO;
     3337    23096    5      IF MOD_VALU = %KV_INPFNCTYP_FNCKEY THEN DO;
     3338    23097    5         KL$FUNKEY.FCNKEY.FCN_BYTE2(I) = %KV_FCNKEY_MODIFIER_BASE;
     3339    23098    5         GOTO RETURN_LABEL;
     3340    23099    5         END;
     3341    23100    5      ELSE DO;
     3342    23101    6         IF MOD_VALU = %KV_INPFNCTYP_SPCCHR THEN DO;
     3343    23102    6            KL$FUNKEY.FCNKEY.FCN_BYTE2(I) = %KV_SPCCHR_MODIFIER_BASE;
     3344    23103    6            GOTO RETURN_LABEL;
     3345    23104    6            END;
     3346    23105    5         END;
     3347    23106    4      END;
     3348    23107    4   ELSE DO; /* no modifier was specified for the current definition */
     3349    23108    4      IF ((MOD_VALU >= %KV_FCNKEY_MODIFIER_BASE) AND
     3350    23109    5           (MOD_VALU < %KV_SPCCHR_MODIFIER_BASE)) THEN DO;
     3351    23110    6         IF MOD_VALU - %KV_FCNKEY_MODIFIER_BASE > 0 THEN DO;
     3352    23111    6            BYTE2 = %KV_FCNKEY_MODIFIER_BASE;
     3353    23112    6            GOTO RETURN_LABEL;
     3354    23113    6            END;
     3355    23114    5         END;
     3356    23115    5      ELSE IF (MOD_VALU >= %KV_SPCCHR_MODIFIER_BASE) THEN DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:108  
     3357    23116    6            IF MOD_VALU - %KV_SPCCHR_MODIFIER_BASE > 0 THEN DO;
     3358    23117    6               BYTE2 = %KV_SPCCHR_MODIFIER_BASE;
     3359    23118    6               GOTO RETURN_LABEL;
     3360    23119    6               END;
     3361    23120    5            END;
     3362    23121    4      END;
     3363    23122
     3364    23123    3   ALTRET_LABEL:
     3365    23124    3   ALTRETURN;
     3366    23125
     3367    23126    3   RETURN_LABEL:
     3368    23127    3   RETURN;
     3369    23128
     3370    23129    3   END CHECK_MODIFIERS;
     3371    23130        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:109  
     3372    23131    2   GET_IDENTIFIER: PROC;
     3373    23132        /*
     3374    23133        GET_IDENTIFIER puts the current definition's identifier character
     3375    23134           into the global variable ident.
     3376    23135        */
     3377    23136
     3378    23137    3   BLK$ = P$NODE.SUBLK$(NUM_NODES-1)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);
     3379    23138    3   CALL ASD$HEX2OCT (OUT$SYM, IDENT);
     3380    23139
     3381    23140    3   END GET_IDENTIFIER;
     3382    23141        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:110  
     3383    23142    2   GET_INTRODUCER: PROC;
     3384    23143        /*
     3385    23144           GET_INTRODUCER puts the current definitions introducer into
     3386    23145           the global variables, VAL1, and VAL2.
     3387    23146        */
     3388    23147
     3389    23148    3   IF (NUM_NODES = 2) THEN
     3390    23149    4   DO;
     3391    23150    4      VAL1 = -1;
     3392    23151    4      VAL2 = -1;
     3393    23152    4      RETURN;
     3394    23153    4      END;  /* NUM_NODES = 2 */
     3395    23154
     3396    23155    3   BLK$ = P$NODE.SUBLK$(1)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);
     3397    23156    3   CALL ASD$HEX2OCT (OUT$SYM, VAL1);
     3398    23157
     3399    23158    3   IF (NUM_NODES >= 4)
     3400    23159    4   THEN DO;
     3401    23160    4      IF (P$NODE.SUBLK$(2)->OUT$SYM.CODE = %FUNKEY_INTRO2)
     3402    23161    5      THEN DO;
     3403    23162    5         BLK$ = P$NODE.SUBLK$(2)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);
     3404    23163    5         CALL ASD$HEX2OCT (OUT$SYM, VAL2);
     3405    23164    5         END;
     3406    23165    5      ELSE DO;
     3407    23166    5         VAL2 = -1;
     3408    23167    5         END;
     3409    23168    4      END;
     3410    23169    4   ELSE DO;
     3411    23170    4      VAL2 = -1;
     3412    23171    4      END;
     3413    23172    3   END GET_INTRODUCER;
     3414    23173        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:111  
     3415    23174    2   FIND_FUNCTION_KEY: PROC ALTRET;
     3416    23175        /* FIND_FUNCTION_KEY goes through all the key defs looking to see
     3417    23176           if the one being defined has been so in the past. If it has been,
     3418    23177           the external variable position is set with the keys position in
     3419    23178           the array and the routine returns.  If the key doesn't exist, the
     3420    23179           routine will altreturn, unless there are no keys defined.
     3421    23180           The routine checks the introducer, the modifier, and the
     3422    23181           identifier,i.e. the stuff on the right side of the defintion,
     3423    23182           for equality with what is stored in the table.
     3424    23183        */
     3425    23184    3   DCL I UBIN;
     3426    23185
     3427    23186    3   IF (KL$FUNKEY.NUM_DEFS > 0) THEN
     3428    23187    4   DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;  /*  search function key table */
     3429    23188    4      IF ((KL$FUNKEY.FCNKEY.FCN_BYTE1 (I) = IDENT) AND
     3430    23189    4           (KL$FUNKEY.FCNKEY.FCN_BYTE2 (I) = BYTE2) ) THEN
     3431    23190                                             /* function keys almost equal */
     3432    23191    5      DO CASE (KL$FUNKEY.FCNKEY.FCN_BYTE0 (I));
     3433    23192
     3434    23193    5         CASE(0);
     3435    23194    5            IF ((VAL1 = KL$FUNKEY.INTRO1.CHR1) AND
     3436    23195    5                 (VAL2 = KL$FUNKEY.INTRO1.CHR2)) THEN
     3437    23196    6            DO;
     3438    23197    6               POSITION = I;
     3439    23198    6               RETURN;
     3440    23199    6               END;  /* introducer 1 */
     3441    23200
     3442    23201    5         CASE(1);
     3443    23202    5            IF ((VAL1 = KL$FUNKEY.INTRO2.CHR1) AND
     3444    23203    5                 (VAL2 = KL$FUNKEY.INTRO2.CHR2)) THEN
     3445    23204    6            DO;
     3446    23205    6               POSITION = I;
     3447    23206    6               RETURN;
     3448    23207    6               END;  /* introducer 2 */
     3449    23208
     3450    23209    5         CASE(2);
     3451    23210    5            IF ((VAL1 = -1) AND (VAL2 = -1)) THEN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:112  
     3452    23211    6            DO;
     3453    23212    6               POSITION = I;
     3454    23213    6               RETURN;
     3455    23214    6               END;  /* no introducer */
     3456    23215
     3457    23216    5         END;  /*  do case  */
     3458    23217    4      END;  /* if definitions are almost equal */
     3459    23218                    /* search table */
     3460    23219    3   ELSE  /* NUM_DEFS = 0 */
     3461    23220    4   DO;
     3462    23221    4      POSITION = 0;
     3463    23222    4      RETURN;
     3464    23223    4      END; /* NUM_DEFS = 0 */
     3465    23224    3   ALTRETURN;
     3466    23225
     3467    23226    3   END FIND_FUNCTION_KEY;
     3468    23227
     3469    23228    2   END DO_FUNKEY_DEFS;
     3470    23229        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:113  
     3471    23230
     3472    23231        /* DO_SETUP_CHR is the routine which handles the SETUP_CHR option for
     3473    23232           profiles.  It will convert the input string to values and alter
     3474    23233           the space for the array accordingly.  This routine uses the
     3475    23234           enlarge and shrink pointers routine to alter the indicator pointers
     3476    23235           after altering the space of the record.  Those 2 routines adjust
     3477    23236           all the pointers for all the different portions of the profile.
     3478    23237           This routine also uses the open and close space routines to create
     3479    23238           or delete room in the profile record for the new entry.
     3480    23239        */
     3481    23240    1   DO_SETUP_CHR: PROC ALTRET;
     3482    23241    2   DCL J UBIN;
     3483    23242    2   DCL BEGIN$ PTR;
     3484    23243    2   DCL NUM_CHARS SBIN;
     3485    23244    2   DCL PLUS      BIT (1);
     3486    23245
     3487    23246    2   IF PTR$->P$NODE.SUBNODES > 1 THEN
     3488    23247    2      PLUS = (PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 0 /* PLUS_VAL */);
     3489    23248    2   CALL GET_HEX_VAL (255)
     3490    23249    3   WHENRETURN DO;
     3491    23250    3      END;
     3492    23251    3   WHENALTRETURN DO;
     3493    23252    3      ALTRETURN;
     3494    23253    3      END;
     3495    23254
     3496    23255    2   IF (HEX(0) = 0)
     3497    23256    3   THEN DO;  /* None value- collapse all old space and set count to 0 */
     3498    23257    3      IF (KL$SETUP_CHR.SIZE > 0)
     3499    23258    4      THEN DO;  /* Remove all the entries */
     3500    23259    4         BEGIN$ = ADDR (KL$SETUP_CHR.CHRS.NUM (1) );
     3501    23260    4         NUM_CHARS = KL$SETUP_CHR.SIZE; /* Get rid of all of them. */
     3502    23261
     3503    23262                 /* Now collapse space and adjust the pointers. */
     3504    23263    4         CALL SHRINK (BEGIN$, NUM_CHARS);
     3505    23264
     3506    23265    4         KL$SETUP_CHR.SIZE = 0;
     3507    23266    4         END;  /* Of do to remove something */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:114  
     3508    23267    4      ELSE DO;
     3509    23268    4         KL$SETUP_CHR.SIZE = 0;
     3510    23269    4         END;
     3511    23270    3      END; /* Of removing a block */
     3512    23271    3   ELSE DO; /* We have to add new setup chars */
     3513    23272    4      IF NOT PLUS THEN DO;
     3514    23273    4         IF (HEX (0) = KL$SETUP_CHR.SIZE)
     3515    23274    5         THEN DO; /* Putting in the same length, no MUCKING... */
     3516    23275    6            DO J = 0 TO HEX (0);
     3517    23276    6               KL$SETUP_CHR.CHRS.NUM (J) = HEX (J); /* HEX(0) = count */
     3518    23277    6               END;
     3519    23278    5            END; /*  HEX(0) = .SIZE  */
     3520    23279    5         ELSE DO;
     3521    23280    5            IF (HEX (0) < KL$SETUP_CHR.SIZE)
     3522    23281    6            THEN DO; /* New length is less than old */
     3523    23282    6               BEGIN$ = PINCRC (SETUP_CHR$,HEX(0)+2+MOD(HEX(0),2));
     3524    23283    6               NUM_CHARS = (KL$SETUP_CHR.SIZE+MOD(KL$SETUP_CHR.SIZE,2)) - (HEX(0)+MOD(
             23283                        HEX(0),2));
     3525    23284
     3526    23285                 /* Now collapse space and adjust the pointers. */
     3527    23286    6               CALL SHRINK (BEGIN$, NUM_CHARS);
     3528    23287
     3529    23288
     3530    23289    6               END; /*  HEX(0) < .SIZE  */
     3531    23290    5            ELSE IF (HEX (0) > KL$SETUP_CHR.SIZE)
     3532    23291    6               THEN DO; /* Have to add more space to the block */
     3533    23292
     3534    23293    6                  BEGIN$ = ADDR (KL$SETUP_CHR.CHRS.NUM(0));
     3535    23294    6                  NUM_CHARS = (HEX(0)+MOD(HEX(0),2)) - (KL$SETUP_CHR.SIZE+MOD(
             23294                           KL$SETUP_CHR.SIZE,2));
     3536    23295
     3537    23296                 /* Now get more space and adjust the pointers. */
     3538    23297    6                  CALL ENLARGE (BEGIN$, NUM_CHARS);
     3539    23298
     3540    23299    6                  END; /*  HEX(0) > .SIZE  */
     3541    23300    6            DO J = 0 TO HEX (0);
     3542    23301    6               KL$SETUP_CHR.CHRS.NUM (J) = HEX (J); /* HEX(0) = count */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:115  
     3543    23302    6               END;  /*  Do j  */
     3544    23303    5            END; /*  Else  (HEX(0) ~= .SIZE  */
     3545    23304    4         END; /*  Not plus  */
     3546    23305    4      ELSE DO;    /*  Plus found  */
     3547    23306        /*  This means we have to add the input list to the current SETUP_CHR
     3548    23307            the one tricky part about this is in how many characters do we
     3549    23308            enlarge the SETUP_CHR space by?  since we must by definition
     3550    23309            use even numbers of bytes for pieces of a profile, we may or
     3551    23310            may not have an extra byte in the current SETUP_CHR.  And then
     3552    23311            we may or may not need an extra byte for the new stuff.
     3553    23312            So, KL$SETUP_CHR.SIZE + HEX(0) must be even.
     3554    23313        */
     3555    23314    5         IF HEX(0)+KL$SETUP_CHR.SIZE > 255 THEN DO;
     3556    23315        /*E* ERROR: ASD-E$SETUPCHRSIZERR-0
     3557    23316             MESSAGE: SETUP_CHR cannot exceed 255 bytes in length.
     3558    23317             MESSAGE1: The last operation would cause the length of SETUP_CHR to
     3559    23318                       exceed the maximum of 255 bytes and so will not be performed.
     3560    23319        */
     3561    23320                 %SCREAM (ERR#=E$SETUPCHRSIZERR, LEVEL=ERROR, MID='D');
     3562    23335    5            ALTRETURN;
     3563    23336    5            END;
     3564    23337              /* Start expanding from the end of the current SETUP_CHR  */
     3565    23338    4         BEGIN$ = PINCRC ( SETUP_CHR$,KL$SETUP_CHR.SIZE+2+MOD(KL$SETUP_CHR.SIZE,2));
     3566    23339    4         NUM_CHARS = HEX(0);
     3567    23340    4         NUM_CHARS = NUM_CHARS - MOD (KL$SETUP_CHR.SIZE,2);
     3568    23341    4         NUM_CHARS = NUM_CHARS + MOD (NUM_CHARS,2);
     3569    23342    4         CALL ENLARGE (BEGIN$, NUM_CHARS);
     3570    23343    5         DO J = 1 TO HEX(0);
     3571    23344    5            KL$SETUP_CHR.CHRS.NUM (KL$SETUP_CHR.SIZE+J) = HEX(J);
     3572    23345    5            END;   /*  Do j  */
     3573    23346    4         KL$SETUP_CHR.SIZE = KL$SETUP_CHR.SIZE + HEX(0);
     3574    23347    4         END;   /*  Plus found  */
     3575    23348    3      END;  /*  HEX(0) ~= 0  */
     3576    23349    2   IF MOD (KL$SETUP_CHR.SIZE,2) = 1 THEN
     3577    23350    2      KL$SETUP_CHR.CHRS.NUM(KL$SETUP_CHR.SIZE+1) = 0;
     3578    23351    2   RETURN;
     3579    23352    2   END DO_SETUP_CHR;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:116  
     3580    23353        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:117  
     3581    23354        /* Shrink is the routine called when space needs to be removed
     3582    23355           from the profile record.  It will adjust all the individual
     3583    23356           pointers of the profile so they point to the correct areas.  The
     3584    23357           enlarge routine is used
     3585    23358           to create more room.
     3586    23359        */
     3587    23360    1   SHRINK: PROC (BEGIN$, CHARS);
     3588    23361    2   DCL CHARS SBIN;
     3589    23362    2   DCL BEGIN$ PTR;
     3590    23363    2   DCL NUM_CHARS SBIN;
     3591    23364    2   DCL I UBIN;
     3592    23365    2   DCL SHRINK_FLG BIT (1) ALIGNED;
     3593    23366
     3594    23367    2   NUM_CHARS = - (CHARS);  /* Shrink- make the size negative. */
     3595    23368    2   SHRINK_FLG = '1'B;
     3596    23369    2   GOTO COMMON;
     3597    23370
     3598    23371    2   ENLARGE: ENTRY (BEGIN$, CHARS);
     3599    23372    2   NUM_CHARS = CHARS;
     3600    23373    2   SHRINK_FLG = '0'B;
     3601    23374
     3602    23375    2   COMMON: ;
     3603    23376    2   NUM_CHARS = NUM_CHARS + (MOD (NUM_CHARS, 2)); /* Always use even increments*/
     3604    23377    2   CHARS = CHARS + (MOD (CHARS, 2)); /* Always use even increments*/
     3605    23378
     3606    23379    2   PP_END$ = PINCRC (PP_END$, NUM_CHARS);
     3607    23380
     3608    23381    2   IF (PNM$ >= BEGIN$) THEN PNM$ = PINCRC (PNM$, NUM_CHARS);
     3609    23382    2   IF (TCTL$ >= BEGIN$) THEN TCTL$ = PINCRC (TCTL$, NUM_CHARS);
     3610    23383    2   IF (TATR$ >= BEGIN$) THEN TATR$ = PINCRC (TATR$, NUM_CHARS);
     3611    23384    2   IF (PLTN$ >= BEGIN$) THEN PLTN$ = PINCRC (PLTN$, NUM_CHARS);
     3612    23385    2   IF (DTABS$ >= BEGIN$) THEN DTABS$ = PINCRC (DTABS$, NUM_CHARS);
     3613    23386    2   IF (TCCHR$ >= BEGIN$) THEN TCCHR$ = PINCRC (TCCHR$, NUM_CHARS);
     3614    23387    2   IF (FUNKEY$ >= BEGIN$) THEN FUNKEY$ = PINCRC (FUNKEY$, NUM_CHARS);
     3615    23388    2   IF (SETUP_CHR$ >= BEGIN$) THEN SETUP_CHR$ = PINCRC (SETUP_CHR$, NUM_CHARS);
     3616    23389    2   IF (TRMD$ >= BEGIN$) THEN TRMD$ = PINCRC (TRMD$, NUM_CHARS);
     3617    23390    2   IF (LINK$ >= BEGIN$) THEN LINK$ = PINCRC (LINK$, NUM_CHARS);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:118  
     3618    23391    2   IF (T3270$ >= BEGIN$) THEN T3270$ = PINCRC (T3270$, NUM_CHARS);
     3619    23392    2   IF (CCHRSZ$ >= BEGIN$) THEN CCHRSZ$ = PINCRC (CCHRSZ$, NUM_CHARS);
     3620    23393    2   IF (FUNKEYSZ$ >= BEGIN$) THEN FUNKEYSZ$ = PINCRC (FUNKEYSZ$, NUM_CHARS);
     3621    23394    2   IF (VIRCIR$ >= BEGIN$) THEN VIRCIR$ = PINCRC (VIRCIR$, NUM_CHARS);
     3622    23395
     3623    23396    3   DO I = 0 TO SIZEW (ABSGRPRND$) - 1; /* Ptrs are 1 word so this works*/
     3624    23397    3      IF (ABSGRPRND$ (I) >= BEGIN$)
     3625    23398    3      THEN ABSGRPRND$ (I) = PINCRC (ABSGRPRND$ (I), NUM_CHARS);
     3626    23399    3      END;
     3627    23400
     3628    23401        /* Now that the pointers have all been mucked with, lets get the
     3629    23402           space we need so everything will work correctly!
     3630    23403        */
     3631    23404
     3632    23405    2   IF SHRINK_FLG
     3633    23406    3   THEN DO;
     3634    23407    3      CALL CLOSE_SPACE (BEGIN$, CHARS);
     3635    23408    3      P_ARS = P_ARS - CHARS;
     3636    23409    3      END;
     3637    23410    3   ELSE DO;
     3638    23411    3      CALL OPEN_SPACE (BEGIN$, CHARS);
     3639    23412    3      P_ARS = P_ARS + CHARS;
     3640    23413    3      END;
     3641    23414    2   RETURN;
     3642    23415    2   END SHRINK;
     3643    23416        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:119  
     3644    23417        /* OPEN_SPACE is a routine to open a space in the middle of a profile
     3645    23418           record.  It is passed 2 params, a pointer for where the space is
     3646    23419           opened after, and a value of the number of characters to open up.
     3647    23420           CLOSE_SPACE is an entry that works exactly the opposite of open.
     3648    23421           The space is closed from immediately after the pointer.
     3649    23422           Both these routines are called *ONLY* from _SHRINK_ or _ENLARGE_.*/
     3650    23423    1   OPEN_SPACE: PROC (BEGIN$, AMOUNT);
     3651    23424    2   DCL BEGIN$ PTR;
     3652    23425    2   DCL AMOUNT SBIN;
     3653    23426
     3654    23427    2   DCL TO$ PTR;
     3655    23428    2   DCL FROM$ PTR;
     3656    23429    2   DCL MOVE_SIZE UBIN;
     3657    23430    2   DCL I UBIN;
     3658    23431    2   DCL PINC_INC SBIN;
     3659    23432    2   DCL BASED_BYTE SBIN (9) UNAL BASED;
     3660    23433
     3661    23434    2   FROM$ = PINCRC (PP_END$, -1);
     3662    23435    2   TO$ = PINCRC (FROM$, AMOUNT);
     3663    23436    2   PINC_INC = - 1;
     3664    23437    2   GOTO COMMON;
     3665    23438
     3666    23439        /* Now the close space ROUTINE........ *******************/
     3667    23440    2   CLOSE_SPACE: ENTRY (BEGIN$, AMOUNT);
     3668    23441    2   FROM$ = PINCRC (BEGIN$, AMOUNT);
     3669    23442    2   TO$ = BEGIN$;
     3670    23443    2   PINC_INC = 1;
     3671    23444
     3672    23445    2   COMMON: ;
     3673    23446    2   MOVE_SIZE = POFFC (PP_END$, BEGIN$) - 1; /* END$ is after last char */
     3674    23447
     3675    23448    3   DO I = 0 TO MOVE_SIZE;
     3676    23449    3      TO$ -> BASED_BYTE = FROM$ -> BASED_BYTE;
     3677    23450    3      TO$ = PINCRC (TO$, PINC_INC);
     3678    23451    3      FROM$ = PINCRC (FROM$, PINC_INC);
     3679    23452    3      END;
     3680    23453
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:120  
     3681    23454    2   RETURN;
     3682    23455    2   END OPEN_SPACE;
     3683    23456    1   END ASD$PROFILE;
     3684    23457        %EOD;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:121  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XG_SUBS_C.:E05TOU  is referenced.
   XG_PROFILE_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   AS_FUNKEY_DEFS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_SSUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASD$PROFILE.

   Procedure ASD$PROFILE requires 7386 words for executable code.
   Procedure ASD$PROFILE requires 152 words of local(AUTO) storage.

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:122  

 Object Unit name= ASD$PROFILE                                File name= ASD$PROFILE.:E05TOU
 UTS= JUL 29 '97 09:46:09.52 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    73    111  ASD$PROFILE
    3  RoData even  UTS     96    140  ASD$PROFILE
    4   Proc  even  none  7386  16332  ASD$PROFILE
    5  RoData even  none   144    220  ASD$PROFILE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASD$PROFILE
     4   1672                  yes      Std        0  PRO_OPTS
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:123  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       2 ASD$BUILD_$RBTD
         yes           Std       2 ASD$BUILD_$GRA
 yes     yes           Std       3 ASD$GR_WRITE_PRO
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       2 ASD$BUILD_$POLLVIP
         yes           Std       2 ASB$READ_SI
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       3 ASD$READ_PRO
         yes           Std       2 ASD$BUILD_$ASYNC
         yes           Std       2 ASD$BUILD_$RBT
         yes           Std       2 ASD$BUILD_$LINK
         yes           Std       2 ASD$BUILD_$URP
         yes           Std       2 ASD$BUILD_$3270
 yes     yes           Std       3 ASD$WRITE_PRO
         yes           Std       0 ASH$HELP
         yes           Std       2 ASD$BUILD_$VIRCIR
 yes     yes           Std       3 ASD$GR_READ_PRO
         yes           Std       0 ASH$QUEST
         yes           Std       2 ASH$WARN
 yes     yes           Std       3 ASB$SET_PROMPT
 yes     yes           Std       1 X$PARSE
         yes           Std       0 ASH$DQUEST
         yes           Std       4 ASB$BINCHAR
 yes     yes           Std       2 ASD$HEX2OCT
 yes     yes           Std       2 ASD$R2HUSECS
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:124  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$XL_UPPER_UR$                        PROFILE_CMD
     PRO_OPTS_LIST                         FUNKEY_CMD                       r    ASL_POLLVIP_TYP
r    ASL_VIRCIR_TYP                   r    ASL_RBT_TYP                      r    ASL_RBTD_TYP
r    ASL_ASYNC_TYP                    r    ASL_LINK_TYP                     r    ASL_URP_TYP
r    ASL_3270_TYP                     r    ASL_PRO_OPT_TBL                  r    AS_BLANK
r    AS_TRUE                          r    AS_FALSE                         r    AS_MODE
r    AS_FE_MODE                            M$LO                                  IN_BUF
     NODE$                                 CODE                                  ERR_CODE
     AS_FIELD1                             AS_FIELD2                             REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          DSEG_FLG
     DSEG1$                                DSEG2$                                DSEG3$
     P_PCB                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:125  


        1        1        /*M*  ASD$PROFILE -- PROCS. TO HANDLE PROFILE FOR SUPER.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9
       10       10        ASD$PROFILE: PROC ;

     10  4 000000   000000 700200 xent  ASD$PROFILE  TSX0  ! X66_AUTO_0
         4 000001   000230 000000                    ZERO    152,0

       11       11
       12       12        %SET LISTSUB = '1'B ;
       13       13        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:126  
       14       14        /********************************************************************/
       15       15        /*   Include files   include files   include files   include files   */
       16       16        /*********************************************************************/
       17       17
       18       18        %INCLUDE           AS_ENTRIES_M ;
       19     1068        %INCLUDE           AS_SUPER_C ;
       20     1503        %INCLUDE           AS_SUBS_C ;
       21     2917        %INCLUDE           AS_MAC_C ;
       22     2997        %INCLUDE           AS_SSUBS_C ;
       23     3089        %INCLUDE           CP_6 ;
       24     3170        %INCLUDE           CP_6_SUBS ;
       25     3710        %INCLUDE           KV_PRMID_E ;
       26     3884        %INCLUDE           AS_PERR_C ;
       27     4486        %INCLUDE           B_ERRORS_C ;
       28     5613        %INCLUDE           B$TABLES_C;   /* For pname xlations */
       29     5721             %B$XL_UPPER_UR;
       30     5725        %INCLUDE           AS_FUNKEY_DEFS_C;
       31     5830             %AS_FUNKEY_DEFS;
       32     5846        %INCLUDE           KV$INPFNC;
       33     6405        %INCLUDE           KL_SUPER_C ;
       34     9307        %INCLUDE           XU_MACRO_C ;
       35    12413        %INCLUDE           XU_FORMAT_C ;
       36    12575        %INCLUDE           XG_PROFILE_C ;
       37    13129        %INCLUDE           XG_SUBS_C ;
       38    13623        %INCLUDE           AS_SUPER_R ;
       39    16639        %KV_INPFNCKEY_E;
       40    16901        %KV_INPFNC_E;
       41    16915
       42    16916
       43    16917        /********************************************************************/
       44    16918        /*   Symref data     symref data     symref data     symref data     */
       45    16919        /*********************************************************************/
       46    16920
       47    16921
       48    16922        /********************************************************************/
       49    16923        /*   Static data     static data     static data     static data     */
       50    16924        /*********************************************************************/
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:127  
       51    16925
       52    16926    1   DCL MORE BIT(1) STATIC ;
       53    16927    1   DCL YES_NO_FLG BIT(2) STATIC ;
       54    16928    1   DCL YES_NO BIT(1) STATIC ;
       55    16929    1   DCL P_TYPE UBIN WORD STATIC;
       56    16930        %KL_PHDR (  NAME = PRO_HDR ,
       57    16931                    STCLASS = STATIC ) ;
       58    16972    1   DCL PRO_BUF CHAR(1024 /* AS_PRO_BUF_SIZEC */) BASED (DSEG1$);
       59    16973    1   DCL 1 PRO_KEY ALIGNED STATIC ,
       60    16974    1          2 CNT UBIN BYTE UNAL INIT(0) ,
       61    16975    1          2 TEXT CHAR(11) UNAL INIT(' ') ;
       62    16976    1   DCL 1 PRO_KEY_OLD ALIGNED STATIC ,
       63    16977    1          2 CNT UBIN BYTE UNAL INIT(0) ,
       64    16978    1          2 TEXT CHAR(11) UNAL INIT(' ') ;
       65    16979    1   DCL GRA_BUF CHAR(1024 /* AS_PRO_BUF_SIZEC */) BASED (DSEG2$);
       66    16980    1   DCL 1 GRA_KEY_OLD ALIGNED STATIC ,
       67    16981    1          2 CNT UBIN BYTE UNAL INIT(11) ,
       68    16982    1          2 TEXT CHAR(11) UNAL INIT('GRAPHICFILE') ;
       69    16983    1   DCL GRA$ PTR STATIC INIT ( ADDR(NIL) ) ;
       70    16984    1   DCL PHDR$ PTR STATIC INIT( ADDR(NIL) ) ;
       71    16985    1   DCL TCTL$ PTR STATIC INIT( ADDR(NIL) ) ;
       72    16986    1   DCL TATR$ PTR STATIC INIT( ADDR(NIL) ) ;
       73    16987    1   DCL PLTN$ PTR STATIC INIT( ADDR(NIL) ) ;
       74    16988    1   DCL DTABS$ PTR STATIC INIT( ADDR(NIL) ) ;
       75    16989    1   DCL TCCHR$ PTR STATIC INIT( ADDR(NIL) ) ;
       76    16990    1   DCL FUNKEY$ PTR STATIC INIT( ADDR(NIL) ) ;
       77    16991    1   DCL SETUP_CHR$ PTR STATIC INIT( ADDR(NIL) ) ;
       78    16992    1   DCL TRMD$ PTR STATIC INIT( ADDR(NIL) ) ;
       79    16993    1   DCL PNM$ PTR STATIC INIT( ADDR(NIL) ) ;
       80    16994    1   DCL LINK$ PTR STATIC INIT( ADDR(NIL) ) ;
       81    16995    1   DCL VIRCIR$ PTR STATIC INIT( ADDR(NIL) ) ;
       82    16996    1   DCL T3270$ PTR STATIC INIT(ADDR(NIL));
       83    16997    1   DCL ABSGRPRND$(0:7) PTR STATIC INIT( ADDR(NIL)*0 );
       84    16998    1   DCL KL_ABSGRPRND$ PTR STATIC;
       85    16999    1   DCL T_TAB(0:31) UBIN BYTE UNAL STATIC INIT(0*0) ;
       86    17000
       87    17001        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:128  
       88    17002        /********************************************************************/
       89    17003        /*   Constant        constant        constant        constant       */
       90    17004        /********************************************************************/
       91    17005        %KL_CCHR ( NAME    = KL_CCHR ,
       92    17006                   STCLASS = CONSTANT) ;
       93    17147        /********************************************************************/
       94    17148        /*   Vlps            vlps            vlps            vlps           */
       95    17149        /********************************************************************/
       96    17150
       97    17151        %VLP_TRMCTL ( FPTN = VLP_TRMCTL ,
       98    17152                      STCLASS = STATIC ) ;
       99    17192        %VLP_NAME ( FPTN = VLP$PNAME ,
      100    17193                    STCLASS="BASED UNAL",
      101    17194                    LEN = VLP$PNAME.L# ) ;
      102    17221        %VLP_TRMCTL ( FPTN = VLP$TRMCTRL ,
      103    17222                      ALGN = UNAL ,
      104    17223                      STCLASS = BASED ) ;
      105    17263        %VLP_TRMATTR (  FPTN = VLP$TRMATTR ,
      106    17264                        ALGN = UNAL ,
      107    17265                        STCLASS = BASED ) ;
      108    17303        %VLP_PLATEN ( FPTN = VLP$PLATEN ,
      109    17304                      ALGN = UNAL ,
      110    17305                      STCLASS = BASED ) ;
      111    17327        %VLP_TAB (  FPTN = VLP$TAB ,
      112    17328                    STCLASS="BASED")  ;
      113    17342        %KL_CCHR ( NAME = KL$CCHR ,
      114    17343                  STCLASS="BASED UNAL") ;
      115    17484        %KL_TRMD ( NAME = KL$TRMD ,
      116    17485                  STCLASS ="BASED UNAL") ;
      117    17647        %KL_DADR ( NAME = KL$DADR ,
      118    17648                  STCLASS="BASED UNAL") ;
      119    17696        %KL_LINK( NAME = KL$LINK ,
      120    17697                  STCLASS="BASED") ;
      121    17793        %KL_VIRCIR( NAME = KL$VIRCIR ,
      122    17794                  STCLASS="BASED") ;
      123    18003        %KL_3270 ( NAME = KL$3270,
      124    18004                   STCLASS = BASED UNAL );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:129  
      125    18029        %KL_ABSGRPRND( NAME = KL$ABSGRPRND,
      126    18030                      STCLASS = "BASED(KL_ABSGRPRND$) UNAL" );
      127    18065        %AS_FUNKEY (NAME = KL$FUNKEY,
      128    18066                    STCLASS = "BASED (FUNKEY$) UNAL") ;
      129    18137
      130    18138        %KL_SETUP_CHR (NAME = KL$SETUP_CHR,
      131    18139                    STCLASS = "BASED (SETUP_CHR$) UNAL") ;
      132    18155
      133    18156
      134    18157        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:130  
      135    18158        /********************************************************************/
      136    18159        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      137    18160        /*********************************************************************/
      138    18161
      139    18162    1   DCL X$PARSE ENTRY(1) ALTRET ;
      140    18163        %ASH$ERROR ;
      141    18166        %ASB$SET_PROMPT ;
      142    18169        %ASH$WARN ;
      143    18172        %ASD$READ_PRO ;
      144    18175        %ASD$WRITE_PRO ;
      145    18178        %ASB$READ_SI ;
      146    18181        %ASD$HEX2OCT ;
      147    18184        %ASD$R2HUSECS ;
      148    18187        %ASH$HELP ;
      149    18190        %ASH$QUEST ;
      150    18193        %ASH$DQUEST ;
      151    18196        %ASD$BUILD_$ASYNC ;
      152    18199        %ASD$BUILD_$RBTD ;
      153    18202        %ASD$BUILD_$RBT ;
      154    18205        %ASD$BUILD_$LINK ;
      155    18208        %ASD$BUILD_$VIRCIR ;
      156    18211        %ASD$BUILD_$URP ;
      157    18214        %ASD$BUILD_$3270 ;
      158    18217        %ASD$BUILD_$POLLVIP ;
      159    18220        %ASD$BUILD_$GRA ;
      160    18223        %ASD$GR_WRITE_PRO ;
      161    18226        %ASD$GR_READ_PRO ;
      162    18229        %ASB$GETSEG ;
      163    18232
      164    18233        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:131  
      165    18234        /********************************************************************/
      166    18235        /*   Local based     local based     local based     local based     */
      167    18236        /*********************************************************************/
      168    18237
      169    18238    1   DCL B$TCB$ PTR SYMREF;
      170    18239        %KV_PRMID_E ;
      171    18395        %B$ALT;
      172    18403        %B$TCB;
      173    18406
      174    18407              %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      175    18408                          NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      176    18453              %PARSE$SYM (  NAME=OUT$SYM ,
      177    18454                            STCLASS="BASED(BLK$)") ;
      178    18492                  %KL_PHDR ( NAME = PRO$HDR  ,
      179    18493                          STCLASS = BASED ) ;
      180    18534        %XG$PROFILE (  PRON = GRA$REC ,
      181    18535                       STCLASS = BASED) ;
      182    18957    1   DCL 1 PP$STRCT BASED( PP$ ) UNAL ,
      183    18958    1          2 TYPE UBIN BYTE UNAL ,
      184    18959    1          2 SIZE UBIN BYTE UNAL ;
      185    18960    1   DCL 1 PP$BIG_STRCT BASED( PP$ ) UNAL ,
      186    18961    1          2 BIG  UBIN BYTE UNAL ,
      187    18962    1          2 TYPE UBIN BYTE UNAL ,
      188    18963    1          2 SIZE ,
      189    18964    1             3 *   UBIN(1)    UNAL ,
      190    18965    1             3 T   UBIN(8)    UNAL ,
      191    18966    1             3 *   UBIN(1)    UNAL ,
      192    18967    1             3 B   UBIN(8)    UNAL ;
      193    18968
      194    18969    1   DCL 1 SPLIT$STRCT BASED( SPLIT$ ) UNAL ,
      195    18970    1          2 * UBIN(1) UNAL ,
      196    18971    1          2 T UBIN(8) UNAL ,
      197    18972    1          2 * UBIN(1) UNAL ,
      198    18973    1          2 B UBIN(8) UNAL ;
      199    18974    1   DCL MOV$STRG CHAR(1) BASED(P$) UNAL ;
      200    18975              %KL$UBWORD(  NAME = KL$UBWORD ,
      201    18976                          STCLASS = AUTO ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:132  
      202    18986
      203    18987        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:133  
      204    18988        /********************************************************************/
      205    18989        /*   Auto data       auto data       auto data       auto data       */
      206    18990        /*********************************************************************/
      207    18991
      208    18992    1   DCL BLK$ PTR ;
      209    18993    1   DCL PP$ PTR ;
      210    18994    1   DCL CCHRSZ$ PTR STATIC ;
      211    18995    1   DCL FUNKEYSZ$ PTR STATIC ;
      212    18996    1   DCL P_ARS STATIC UBIN WORD ;
      213    18997    1   DCL PP_END$ PTR STATIC ;
      214    18998    1   DCL G_ARS UBIN WORD ;
      215    18999    1   DCL PTROPT$ PTR ;
      216    19000    1   DCL PP_SIZE UBIN WORD ;
      217    19001    1   DCL PP_TYPE UBIN WORD ;
      218    19002    1   DCL EXTWID UBIN WORD ;
      219    19003    1   DCL I UBIN WORD ;
      220    19004    1   DCL J UBIN WORD ;
      221    19005    1   DCL K UBIN WORD ;
      222    19006    1   DCL L UBIN WORD ;
      223    19007    1   DCL OP UBIN WORD ;
      224    19008    1   DCL VAL UBIN WORD ;
      225    19009    1   DCL 1 SPLIT_VAL REDEF VAL,
      226    19010    1          2 * UBIN(20) UNAL ,
      227    19011    1          2 T UBIN(8) UNAL ,
      228    19012    1          2 B UBIN(8) UNAL ;
      229    19013    1   DCL VAL_TWO(0:17) REDEF VAL BIT(2) ;
      230    19014    1   DCL VAL_FOUR(0:8) REDEF VAL BIT(4) ;
      231    19015    1   DCL VAL_SIX(0:5) REDEF VAL BIT(6) ;
      232    19016    1   DCL ARS UBIN WORD ;
      233    19017    1   DCL XPNAME CHAR (11); /* The xlated pro name goes here */
      234    19018    1   DCL CREATE BIT(1) ;
      235    19019    1   DCL FROM BIT(1) ;
      236    19020    1   DCL GR_FLAG BIT(1) ;
      237    19021    1   DCL PTR$ PTR ;
      238    19022    1   DCL OP_CODE UBIN WORD ;
      239    19023    1   DCL SPLIT$ PTR ;
      240    19024    1   DCL SUBS UBIN WORD ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:134  
      241    19025    1   DCL TXTC$ PTR ;
      242    19026    1   DCL P$ PTR ;
      243    19027    1   DCL 1 SPLIT ,
      244    19028    1          2 * UBIN(1) UNAL ,
      245    19029    1          2 T UBIN(8) UNAL ,
      246    19030    1          2 * UBIN(1) UNAL ,
      247    19031    1          2 B UBIN(8) UNAL ;
      248    19032    1   DCL HEX(0:255) UBIN BYTE UNAL;
      249    19033    1   DCL HEX_V UBIN BYTE;
      250    19034    1   DCL 1 OPTION,
      251    19035    1          2 COUNT UBIN BYTE UNAL,
      252    19036    1          2 TEXT CHAR(31) UNAL;
      253    19037    1   DCL 1 PROFILE_TYPE,
      254    19038    1          2 COUNT UBIN BYTE UNAL,
      255    19039    1          2 TEXT CHAR(10) UNAL;
      256    19040    1   DCL PRO_TYPE BIT(9);
      257    19041
      258    19042        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:135  
      259    19043        /********************************************************************/
      260    19044        /*   Procedure       procedure       procedure       procedure       */
      261    19045        /*********************************************************************/
      262    19046
      263    19047        /*
      264    19048            ***            Begin procedure                    ***
      265    19049        */
      266    19050    1   IF NOT DSEG_FLG

  19050  4 000002   000000 234000 xsym               SZN     DSEG_FLG
         4 000003   000015 604000 4                  TMI     s:19072

      267    19051    1   THEN
      268    19052    1      CALL ASB$GETSEG

  19052  4 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000005   000000 701000 xent               TSX1    ASB$GETSEG
         4 000006   000010 702000 4                  TSX2    s:19066
         4 000007   000015 710000 4                  TRA     s:19072

      269    19053    2      WHENALTRETURN DO;

      270    19054              %SCREAM( ERR#=%E$GETSEGERR, LEVEL=ERROR, MID='D') ;

  19066  4 000010   000000 630400 5                  EPPR0   0
         4 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000012   000000 701000 xent               TSX1    ASH$ERROR
         4 000013   000000 011000                    NOP     0

      271    19069    2         RETURN ;

  19069  4 000014   000000 702200 xent               TSX2  ! X66_ARET

      272    19070    2         END;  /*  Whenaltreturn  */
      273    19071                                                              /**/
      274    19072    1   P_PCB.ROOT$ = ADDR(PROFILE_CMD) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:136  
  19072  4 000015   000001 236000 5                  LDQ     1
         4 000016   000001 756000 xsym               STQ     P_PCB+1

      275    19073    1   CALL X$PARSE(P_PCB) ALTRET (PROFILE_ERR) ;

  19073  4 000017   000002 630400 5                  EPPR0   2
         4 000020   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000021   000000 701000 xent               TSX1    X$PARSE
         4 000022   001665 702000 4                  TSX2    PROFILE_ERR

      276    19074    1   NODE$ = P_PCB.OUT$ ;

  19074  4 000023   000003 236000 xsym               LDQ     P_PCB+3
         4 000024   000000 756000 xsym               STQ     NODE$

      277    19075
      278    19076                                                              /* Create or modify? */
      279    19077    1   IF P$NODE.CODE = 35 /* CR_PROFILE */ THEN

  19077  4 000025   000000 470400 xsym               LDP0    NODE$
         4 000026   000000 720100                    LXL0    0,,PR0
         4 000027   000043 100003                    CMPX0   35,DU
         4 000030   000035 601000 4                  TNZ     s:19080

      280    19078    1      CREATE = AS_TRUE ;

  19078  4 000031   000000 236000 xsym               LDQ     AS_TRUE
         4 000032   400000 376003                    ANQ     -131072,DU
         4 000033   200025 756100                    STQ     CREATE,,AUTO
         4 000034   000040 710000 4                  TRA     s:19081

      281    19079    1   ELSE
      282    19080    1      CREATE = AS_FALSE ;

  19080  4 000035   000000 236000 xsym               LDQ     AS_FALSE
         4 000036   400000 376003                    ANQ     -131072,DU
         4 000037   200025 756100                    STQ     CREATE,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:137  

      283    19081    1   PRO_KEY.TEXT = AS_BLANK ;

  19081  4 000040   040000 100400                    MLR     fill='040'O
         4 000041   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000042   000030 200013 2                  ADSC9   PRO_KEY                  cn=1,n=11

      284    19082    1   PRO_KEY_OLD.TEXT = AS_BLANK ;

  19082  4 000043   040000 100400                    MLR     fill='040'O
         4 000044   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000045   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11

      285    19083
      286    19084    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  19084  4 000046   000003 471500                    LDP1    3,,PR0
         4 000047   100003 236100                    LDQ     3,,PR1
         4 000050   200004 756100                    STQ     BLK$,,AUTO

      287    19085    1   PRO_KEY.CNT = OUT$SYM.COUNT ;

  19085  4 000051   200004 471500                    LDP1    BLK$,,AUTO
         4 000052   100004 236100                    LDQ     4,,PR1
         4 000053   000030 552040 2                  STBQ    PRO_KEY,'40'O

      288    19086                                                              /*  Test length of key  */
      289    19087    2   IF PRO_KEY.CNT > 11 THEN DO;

  19087  4 000054   000030 236000 2                  LDQ     PRO_KEY
         4 000055   777000 376003                    ANQ     -512,DU
         4 000056   014000 116003                    CMPQ    6144,DU
         4 000057   000065 602000 4                  TNC     s:19110

      290    19088        /*E*  ERROR:    ASD-E$PNAMETOOLONG-C
      291    19089              MESSAGE:  PROFILE name too long.
      292    19090              MESSAGE1: PROFILE name can be at most 11 characters long.
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:138  
      293    19091        */
      294    19092           %SCREAM( ERR#=E$PNAMETOOLONG, LEVEL=ERROR, MID='D');

  19104  4 000060   000003 630400 5                  EPPR0   3
         4 000061   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000062   000000 701000 xent               TSX1    ASH$ERROR
         4 000063   000000 011000                    NOP     0

      295    19107    2      RETURN ;

  19107  4 000064   000000 702200 xent               TSX2  ! X66_ARET

      296    19108    2      END ;   /*  Then do  */
      297    19109
      298    19110    1   CALL XLATE (XPNAME, B$XL_UPPER_UR, SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT));

  19110  4 000065   100004 236100                    LDQ     4,,PR1
         4 000066   000033 772000                    QRL     27
         4 000067   000000 620006                    EAX0    0,QL
         4 000070   000000 473400 xsym               LDP3    B$XL_UPPER_UR$
         4 000071   040100 160540                    MVT     fill='040'O
         4 000072   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000073   200022 000013                    ADSC9   XPNAME,,AUTO             cn=0,n=11
         4 000074   300000 000100                    ARG     0,,PR3

      299    19111    1   IF (SUBSTR (XPNAME, 0, OUT$SYM.COUNT) =

  19111  4 000075   100004 236100                    LDQ     4,,PR1
         4 000076   000033 772000                    QRL     27
         4 000077   000000 620006                    EAX0    0,QL
         4 000100   100004 236100                    LDQ     4,,PR1
         4 000101   000033 772000                    QRL     27
         4 000102   000000 621006                    EAX1    0,QL
         4 000103   040140 106540                    CMPC    fill='040'O
         4 000104   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000105   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         4 000106   000116 601000 4                  TNZ     s:19117
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:139  

      300    19112    1        SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT) )
      301    19113    2   THEN DO; /* The pro name is all uppercase and okay, use it. */

      302    19114    2      PRO_KEY.TEXT = OUT$SYM.TEXT;

  19114  4 000107   100004 236100                    LDQ     4,,PR1
         4 000110   000033 772000                    QRL     27
         4 000111   000000 620006                    EAX0    0,QL
         4 000112   040000 100540                    MLR     fill='040'O
         4 000113   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000114   000030 200013 2                  ADSC9   PRO_KEY                  cn=1,n=11

      303    19115    2      END;

  19115  4 000115   000125 710000 4                  TRA     s:19140

      304    19116    2   ELSE DO; /* The pname was affected by xlation use xlated 1 */

      305    19117    2      PRO_KEY.TEXT = XPNAME;

  19117  4 000116   040000 100500                    MLR     fill='040'O
         4 000117   200022 000013                    ADSC9   XPNAME,,AUTO             cn=0,n=11
         4 000120   000030 200013 2                  ADSC9   PRO_KEY                  cn=1,n=11

      306    19118        /*E* ERROR:    ASD-E$PNAMEXLATED-C
      307    19119             MESSAGE:  A profile name must be specified in all uppercase.
      308    19120                          The one you specified has been translated.
      309    19121             MESSAGE1: Your profile name had lower case letters which have
      310    19122                          been converted to uppercase before being used.
      311    19123        */
      312    19124           %SCREAM (ERR#=E$PNAMEXLATED, LEVEL=WARN, MID='D');

  19134  4 000121   000004 630400 5                  EPPR0   4
         4 000122   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000123   000000 701000 xent               TSX1    ASH$WARN
         4 000124   000000 011000                    NOP     0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:140  

      313    19139    2      END;

      314    19140    1   IF ( (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = '3270') OR

  19140  4 000125   000030 236000 2                  LDQ     PRO_KEY
         4 000126   000033 772000                    QRL     27
         4 000127   000000 620006                    EAX0    0,QL
         4 000130   040000 106540                    CMPC    fill='040'O
         4 000131   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000132   000030 000004 3                  ADSC9   KL_CCHR+24               cn=0,n=4
         4 000133   000224 600000 4                  TZE     s:19171
         4 000134   000030 236000 2                  LDQ     PRO_KEY
         4 000135   000033 772000                    QRL     27
         4 000136   000000 620006                    EAX0    0,QL
         4 000137   040000 106540                    CMPC    fill='040'O
         4 000140   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000141   000031 000004 3                  ADSC9   KL_CCHR+25               cn=0,n=4
         4 000142   000224 600000 4                  TZE     s:19171
         4 000143   000030 236000 2                  LDQ     PRO_KEY
         4 000144   000033 772000                    QRL     27
         4 000145   000000 620006                    EAX0    0,QL
         4 000146   040000 106540                    CMPC    fill='040'O
         4 000147   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000150   000032 000004 3                  ADSC9   KL_CCHR+26               cn=0,n=4
         4 000151   000224 600000 4                  TZE     s:19171
         4 000152   000030 236000 2                  LDQ     PRO_KEY
         4 000153   000033 772000                    QRL     27
         4 000154   000000 620006                    EAX0    0,QL
         4 000155   040000 106540                    CMPC    fill='040'O
         4 000156   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000157   000033 000004 3                  ADSC9   KL_CCHR+27               cn=0,n=4
         4 000160   000224 600000 4                  TZE     s:19171
         4 000161   000030 236000 2                  LDQ     PRO_KEY
         4 000162   000033 772000                    QRL     27
         4 000163   000000 620006                    EAX0    0,QL
         4 000164   040000 106540                    CMPC    fill='040'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:141  
         4 000165   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000166   000034 000005 3                  ADSC9   KL_CCHR+28               cn=0,n=5
         4 000167   000224 600000 4                  TZE     s:19171
         4 000170   000030 236000 2                  LDQ     PRO_KEY
         4 000171   000033 772000                    QRL     27
         4 000172   000000 620006                    EAX0    0,QL
         4 000173   040000 106540                    CMPC    fill='040'O
         4 000174   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000175   000036 000007 3                  ADSC9   KL_CCHR+30               cn=0,n=7
         4 000176   000224 600000 4                  TZE     s:19171
         4 000177   000030 236000 2                  LDQ     PRO_KEY
         4 000200   000033 772000                    QRL     27
         4 000201   000000 620006                    EAX0    0,QL
         4 000202   040000 106540                    CMPC    fill='040'O
         4 000203   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000204   000032 000003 3                  ADSC9   KL_CCHR+26               cn=0,n=3
         4 000205   000224 600000 4                  TZE     s:19171
         4 000206   000030 236000 2                  LDQ     PRO_KEY
         4 000207   000033 772000                    QRL     27
         4 000210   000000 620006                    EAX0    0,QL
         4 000211   040000 106540                    CMPC    fill='040'O
         4 000212   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000213   000040 000007 3                  ADSC9   KL_CCHR+32               cn=0,n=7
         4 000214   000224 600000 4                  TZE     s:19171
         4 000215   000030 236000 2                  LDQ     PRO_KEY
         4 000216   000033 772000                    QRL     27
         4 000217   000000 620006                    EAX0    0,QL
         4 000220   040000 106540                    CMPC    fill='040'O
         4 000221   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000222   000042 000003 3                  ADSC9   KL_CCHR+34               cn=0,n=3
         4 000223   000231 601000 4                  TNZ     s:19177

      315    19141    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'LINK') OR
      316    19142    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'RBTD') OR
      317    19143    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'SYNC') OR
      318    19144    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'ASYNC') OR
      319    19145    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'VIRTUAL') OR
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:142  
      320    19146    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'RBT') OR
      321    19147    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'POLLVIP') OR
      322    19148    1        (SUBSTR (XPNAME, 0, PRO_KEY.CNT) = 'URP') )
      323    19149    2   THEN DO;

      324    19150        /*E*     ERROR: ASD-E$NOPNAMEOFTYPE-C
      325    19151                 MESSAGE0: A profile name cannot be the same as a profile type.
      326    19152                 MESSAGE1: You tried to create a profile with a name of:
      327    19153                           'URP', 'RBT', '3270', 'LINK', 'RBTD', 'SYNC',
      328    19154                           'ASYNC', 'VIRTUAL' (for Virtual Circuits), or
      329    19155                           'POLLVIP (for Polled Vip).
      330    19156                 MESSAGE2: You can't do that!
      331    19157                 MESSAGE3: Change the name!
      332    19158        */
      333    19159           %SCREAM (ERR# = E$NOPNAMEOFTYPE, LEVEL = ERROR, MID = 'D');

  19171  4 000224   000005 630400 5                  EPPR0   5
         4 000225   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000226   000000 701000 xent               TSX1    ASH$ERROR
         4 000227   000000 011000                    NOP     0

      334    19174    2      RETURN;

  19174  4 000230   000000 702200 xent               TSX2  ! X66_ARET

      335    19175    2      END;
      336    19176                                                              /* Check existence */
      337    19177    1   CALL ASD$READ_PRO( PRO_KEY, PRO_BUF, P_ARS )

  19177  4 000231   000006 236000 5                  LDQ     6
         4 000232   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 000233   000000 236000 xsym               LDQ     DSEG1$
         4 000234   000007 235000 5                  LDA     7
         4 000235   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 000236   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 000237   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000240   000000 701000 xent               TSX1    ASD$READ_PRO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:143  
         4 000241   000255 702000 4                  TSX2    s:19204

      338    19178    2   WHENRETURN DO;

      339    19179    3      IF CREATE THEN DO;

  19179  4 000242   200025 234100                    SZN     CREATE,,AUTO
         4 000243   000254 605000 4                  TPL     s:19200+1

      340    19180        /*E*  ERROR:    ASD-E$CREATEEXIST-C
      341    19181              MESSAGE: %%U1 %already exists.
      342    19182              MESSAGE1: You cannot CREATE a profile that exists.
      343    19183        */
      344    19184    3         AS_FIELD1 = PRO_KEY ;

  19184  4 000244   000000 100400                    MLR     fill='000'O
         4 000245   000030 000014 2                  ADSC9   PRO_KEY                  cn=0,n=12
         4 000246   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      345    19185              %SCREAM( ERR#=E$CREATEEXIST, LEVEL=ERROR, MID='D');

  19197  4 000247   000010 630400 5                  EPPR0   8
         4 000250   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000251   000000 701000 xent               TSX1    ASH$ERROR
         4 000252   000000 011000                    NOP     0

      346    19200    3         RETURN ;

  19200  4 000253   000000 702200 xent               TSX2  ! X66_ARET
         4 000254   000271 710000 4                  TRA     s:19228

      347    19201    3         END ; /* Then do  */
      348    19202    2      END;   /*  Whenreturn from ASD$READ_PRO  */
      349    19203    2   WHENALTRETURN DO;

      350    19204    3      IF NOT CREATE THEN DO;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:144  
  19204  4 000255   200025 234100                    SZN     CREATE,,AUTO
         4 000256   000271 604000 4                  TMI     s:19228

      351    19205        /*E*  ERROR:    ASD-E$MPNOEXIST-C
      352    19206              MESSAGE0: %%U1 %does not exist. Switching to CREATE mode.
      353    19207        */
      354    19208    3         AS_FIELD1 = PRO_KEY ;

  19208  4 000257   000000 100400                    MLR     fill='000'O
         4 000260   000030 000014 2                  ADSC9   PRO_KEY                  cn=0,n=12
         4 000261   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      355    19209              %SCREAM( ERR#=E$MPNOEXIST, LEVEL=WARN, MID='D');

  19219  4 000262   000011 630400 5                  EPPR0   9
         4 000263   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000264   000000 701000 xent               TSX1    ASH$WARN
         4 000265   000000 011000                    NOP     0

      356    19224    3         CREATE = AS_TRUE ;

  19224  4 000266   000000 236000 xsym               LDQ     AS_TRUE
         4 000267   400000 376003                    ANQ     -131072,DU
         4 000270   200025 756100                    STQ     CREATE,,AUTO

      357    19225    3         END; /*  If not create  */

      358    19226    2      END;   /*  Whenaltreturn from ASD$READ_PRO  */

      359    19227                                                              /* Chk for from or type */
      360    19228    1   SUBS = P$NODE.SUBNODES ;

  19228  4 000271   000000 470400 xsym               LDP0    NODE$
         4 000272   000001 236100                    LDQ     1,,PR0
         4 000273   000022 772000                    QRL     18
         4 000274   200033 756100                    STQ     SUBS,,AUTO

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:145  
      361    19229    1   FROM = AS_FALSE ;

  19229  4 000275   000000 236000 xsym               LDQ     AS_FALSE
         4 000276   400000 376003                    ANQ     -131072,DU
         4 000277   200026 756100                    STQ     FROM,,AUTO

      362    19230    1   P_TYPE = 0 ;

  19230  4 000300   000003 450000 2                  STZ     P_TYPE

      363    19231    2   DO I = 1 TO SUBS-1 ;

  19231  4 000301   000001 235007                    LDA     1,DL
         4 000302   200013 755100                    STA     I,,AUTO
         4 000303   000452 710000 4                  TRA     s:19272+3

      364    19232    2      CODE = P$NODE.SUBLK$(I) -> P$NODE.CODE ;

  19232  4 000304   000000 470400 xsym               LDP0    NODE$
         4 000305   200013 720100                    LXL0    I,,AUTO
         4 000306   000003 471510                    LDP1    3,X0,PR0
         4 000307   100000 236100                    LDQ     0,,PR1
         4 000310   777777 376007                    ANQ     -1,DL
         4 000311   000000 756000 xsym               STQ     CODE

      365    19233    3      DO CASE( CODE ) ;

  19233  4 000312   000052 116007                    CMPQ    42,DL
         4 000313   000315 602006 4                  TNC     s:19233+3,QL
         4 000314   000447 710000 4                  TRA     s:19272
         4 000315   000447 710000 4                  TRA     s:19272
         4 000316   000400 710000 4                  TRA     s:19241
         4 000317   000405 710000 4                  TRA     s:19245
         4 000320   000412 710000 4                  TRA     s:19249
         4 000321   000417 710000 4                  TRA     s:19253
         4 000322   000424 710000 4                  TRA     s:19257
         4 000323   000431 710000 4                  TRA     s:19261
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:146  
         4 000324   000436 710000 4                  TRA     s:19265
         4 000325   000443 710000 4                  TRA     s:19269
         4 000326   000447 710000 4                  TRA     s:19272
         4 000327   000447 710000 4                  TRA     s:19272
         4 000330   000447 710000 4                  TRA     s:19272
         4 000331   000447 710000 4                  TRA     s:19272
         4 000332   000447 710000 4                  TRA     s:19272
         4 000333   000447 710000 4                  TRA     s:19272
         4 000334   000447 710000 4                  TRA     s:19272
         4 000335   000447 710000 4                  TRA     s:19272
         4 000336   000447 710000 4                  TRA     s:19272
         4 000337   000447 710000 4                  TRA     s:19272
         4 000340   000447 710000 4                  TRA     s:19272
         4 000341   000447 710000 4                  TRA     s:19272
         4 000342   000447 710000 4                  TRA     s:19272
         4 000343   000447 710000 4                  TRA     s:19272
         4 000344   000447 710000 4                  TRA     s:19272
         4 000345   000447 710000 4                  TRA     s:19272
         4 000346   000447 710000 4                  TRA     s:19272
         4 000347   000447 710000 4                  TRA     s:19272
         4 000350   000447 710000 4                  TRA     s:19272
         4 000351   000447 710000 4                  TRA     s:19272
         4 000352   000447 710000 4                  TRA     s:19272
         4 000353   000447 710000 4                  TRA     s:19272
         4 000354   000447 710000 4                  TRA     s:19272
         4 000355   000447 710000 4                  TRA     s:19272
         4 000356   000447 710000 4                  TRA     s:19272
         4 000357   000447 710000 4                  TRA     s:19272
         4 000360   000447 710000 4                  TRA     s:19272
         4 000361   000447 710000 4                  TRA     s:19272
         4 000362   000447 710000 4                  TRA     s:19272
         4 000363   000447 710000 4                  TRA     s:19272
         4 000364   000447 710000 4                  TRA     s:19272
         4 000365   000447 710000 4                  TRA     s:19272
         4 000366   000367 710000 4                  TRA     s:19236

      366    19234
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:147  
      367    19235    3         CASE( 41/*  PRO_NAME_2  */ ) ;

      368    19236    3            FROM = AS_TRUE ;

  19236  4 000367   000000 236000 xsym               LDQ     AS_TRUE
         4 000370   400000 376003                    ANQ     -131072,DU
         4 000371   200026 756100                    STQ     FROM,,AUTO

      369    19237    3            BLK$ = P$NODE.SUBLK$(I) -> P$NODE.SUBLK$(0) ;

  19237  4 000372   000003 471510                    LDP1    3,X0,PR0
         4 000373   100003 236100                    LDQ     3,,PR1
         4 000374   200004 756100                    STQ     BLK$,,AUTO

      370    19238    3            I = SUBS ;

  19238  4 000375   200033 235100                    LDA     SUBS,,AUTO
         4 000376   200013 755100                    STA     I,,AUTO
         4 000377   000447 710000 4                  TRA     s:19272

      371    19239
      372    19240    3         CASE( 1 /* ASYNC_ */ ) ;

      373    19241    3            P_TYPE = %KLTY_TTY# ;

  19241  4 000400   000002 235007                    LDA     2,DL
         4 000401   000003 755000 2                  STA     P_TYPE

      374    19242    3            I = SUBS ;

  19242  4 000402   200033 235100                    LDA     SUBS,,AUTO
         4 000403   200013 755100                    STA     I,,AUTO
         4 000404   000447 710000 4                  TRA     s:19272

      375    19243
      376    19244    3         CASE( 2 /* RBTD_ */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:148  
      377    19245    3            P_TYPE = %KLTY_SDEV# ;

  19245  4 000405   000001 235007                    LDA     1,DL
         4 000406   000003 755000 2                  STA     P_TYPE

      378    19246    3            I = SUBS ;

  19246  4 000407   200033 235100                    LDA     SUBS,,AUTO
         4 000410   200013 755100                    STA     I,,AUTO
         4 000411   000447 710000 4                  TRA     s:19272

      379    19247
      380    19248    3         CASE( 3 /* RBT | SYNC */ ) ;

      381    19249    3            P_TYPE = %KLTY_STRM# ;

  19249  4 000412   000003 235007                    LDA     3,DL
         4 000413   000003 755000 2                  STA     P_TYPE

      382    19250    3            I = SUBS ;

  19250  4 000414   200033 235100                    LDA     SUBS,,AUTO
         4 000415   200013 755100                    STA     I,,AUTO
         4 000416   000447 710000 4                  TRA     s:19272

      383    19251
      384    19252    3         CASE( 4 /* LINK */ );

      385    19253    3            P_TYPE = %KLTY_LINK# ;

  19253  4 000417   000004 235007                    LDA     4,DL
         4 000420   000003 755000 2                  STA     P_TYPE

      386    19254    3            I = SUBS ;

  19254  4 000421   200033 235100                    LDA     SUBS,,AUTO
         4 000422   200013 755100                    STA     I,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:149  
         4 000423   000447 710000 4                  TRA     s:19272

      387    19255
      388    19256    3         CASE( 5 /* URP */ );

      389    19257    3            P_TYPE = %KLTY_URP# ;

  19257  4 000424   000006 235007                    LDA     6,DL
         4 000425   000003 755000 2                  STA     P_TYPE

      390    19258    3            I = SUBS ;

  19258  4 000426   200033 235100                    LDA     SUBS,,AUTO
         4 000427   200013 755100                    STA     I,,AUTO
         4 000430   000447 710000 4                  TRA     s:19272

      391    19259
      392    19260    3         CASE( 6 /* 3270 */ );

      393    19261    3            P_TYPE = %KLTY_LINEDEV#;

  19261  4 000431   000012 235007                    LDA     10,DL
         4 000432   000003 755000 2                  STA     P_TYPE

      394    19262    3            I = SUBS ;

  19262  4 000433   200033 235100                    LDA     SUBS,,AUTO
         4 000434   200013 755100                    STA     I,,AUTO
         4 000435   000447 710000 4                  TRA     s:19272

      395    19263
      396    19264    3         CASE( 7 /* VIRCIR */ );

      397    19265    3            P_TYPE = %KLTY_VIRCIR#;

  19265  4 000436   000010 235007                    LDA     8,DL
         4 000437   000003 755000 2                  STA     P_TYPE
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:150  

      398    19266    3            I = SUBS ;

  19266  4 000440   200033 235100                    LDA     SUBS,,AUTO
         4 000441   200013 755100                    STA     I,,AUTO
         4 000442   000447 710000 4                  TRA     s:19272

      399    19267
      400    19268    3         CASE( 8 /* POLLED VIP */);

      401    19269    3            P_TYPE = %KLTY_HIP_DEV#;

  19269  4 000443   000016 235007                    LDA     14,DL
         4 000444   000003 755000 2                  STA     P_TYPE

      402    19270    3            I = SUBS ;

  19270  4 000445   200033 235100                    LDA     SUBS,,AUTO
         4 000446   200013 755100                    STA     I,,AUTO

      403    19271    3         END ; /* Do case */

      404    19272    2      END ; /* Do i */

  19272  4 000447   200013 235100                    LDA     I,,AUTO
         4 000450   000001 035007                    ADLA    1,DL
         4 000451   200013 755100                    STA     I,,AUTO
         4 000452   200013 236100                    LDQ     I,,AUTO
         4 000453   200033 116100                    CMPQ    SUBS,,AUTO
         4 000454   000304 602000 4                  TNC     s:19232

      405    19273    2   IF CREATE AND ( ~FROM AND P_TYPE=0 ) THEN DO;

  19273  4 000455   200025 234100                    SZN     CREATE,,AUTO
         4 000456   000472 605000 4                  TPL     s:19308
         4 000457   200026 236100                    LDQ     FROM,,AUTO
         4 000460   400000 376003                    ANQ     -131072,DU
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:151  
         4 000461   400000 676003                    ERQ     -131072,DU
         4 000462   000472 600000 4                  TZE     s:19308
         4 000463   000003 236000 2                  LDQ     P_TYPE
         4 000464   000472 601000 4                  TNZ     s:19308

      406    19274        /*E*  ERROR:    ASD-E$NOPTYPE-C
      407    19275              MESSAGE0: Can't CREATE profiles without TYPE or FROM specified.
      408    19276              MESSAGE1: You must specify either profile TYPE or FROM pname.
      409    19277              MESSAGE2:   where:
      410    19278                                TYPE is     A[SYNC]
      411    19279                                            U[RP]
      412    19280                                            S[YNC]
      413    19281                                            RBT
      414    19282                                            RBTD
      415    19283                                            3[270]
      416    19284                                            L[INK]
      417    19285                                            V[IRTUAL] C[IRCUIT]
      418    19286                                            P[OLLED] V[IP]
      419    19287
      420    19288                                pname is  the name of an existing profile.
      421    19289        */
      422    19290           %SCREAM( ERR#=E$NOPTYPE, LEVEL=ERROR, MID='D');

  19302  4 000465   000012 630400 5                  EPPR0   10
         4 000466   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000467   000000 701000 xent               TSX1    ASH$ERROR
         4 000470   000000 011000                    NOP     0

      423    19305    2      RETURN ;

  19305  4 000471   000000 702200 xent               TSX2  ! X66_ARET

      424    19306    2      END ; /* Then do */
      425    19307
      426    19308    2   IF FROM THEN DO;

  19308  4 000472   200026 234100                    SZN     FROM,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:152  
         4 000473   000562 605000 4                  TPL     s:19363

      427    19309    2      PRO_KEY_OLD.CNT = OUT$SYM.COUNT ;

  19309  4 000474   200004 471500                    LDP1    BLK$,,AUTO
         4 000475   100004 236100                    LDQ     4,,PR1
         4 000476   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      428    19310                                                              /*  Test length of key.   */
      429    19311    3      IF PRO_KEY_OLD.CNT > 11 THEN DO;

  19311  4 000477   000033 236000 2                  LDQ     PRO_KEY_OLD
         4 000500   777000 376003                    ANQ     -512,DU
         4 000501   014000 116003                    CMPQ    6144,DU
         4 000502   000510 602000 4                  TNC     s:19330

      430    19312              %SCREAM( ERR#=E$PNAMETOOLONG, LEVEL=ERROR, MID='D');

  19324  4 000503   000003 630400 5                  EPPR0   3
         4 000504   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000505   000000 701000 xent               TSX1    ASH$ERROR
         4 000506   000000 011000                    NOP     0

      431    19327    3         RETURN ;

  19327  4 000507   000000 702200 xent               TSX2  ! X66_ARET

      432    19328    3         END ; /*  Then do  */
      433    19329
      434    19330    2      CALL XLATE (XPNAME, B$XL_UPPER_UR, SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT));

  19330  4 000510   100004 236100                    LDQ     4,,PR1
         4 000511   000033 772000                    QRL     27
         4 000512   000000 620006                    EAX0    0,QL
         4 000513   000000 473400 xsym               LDP3    B$XL_UPPER_UR$
         4 000514   040100 160540                    MVT     fill='040'O
         4 000515   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:153  
         4 000516   200022 000013                    ADSC9   XPNAME,,AUTO             cn=0,n=11
         4 000517   300000 000100                    ARG     0,,PR3

      435    19331    2      IF (SUBSTR (XPNAME, 0, OUT$SYM.COUNT) =

  19331  4 000520   100004 236100                    LDQ     4,,PR1
         4 000521   000033 772000                    QRL     27
         4 000522   000000 620006                    EAX0    0,QL
         4 000523   100004 236100                    LDQ     4,,PR1
         4 000524   000033 772000                    QRL     27
         4 000525   000000 621006                    EAX1    0,QL
         4 000526   040140 106540                    CMPC    fill='040'O
         4 000527   200022 000010                    ADSC9   XPNAME,,AUTO             cn=0,n=*X0
         4 000530   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         4 000531   000541 601000 4                  TNZ     s:19337

      436    19332    2           SUBSTR (OUT$SYM.TEXT, 0, OUT$SYM.COUNT) )
      437    19333    3      THEN DO; /* The pro name is all uppercase and okay, use it. */

      438    19334    3         PRO_KEY_OLD.TEXT = OUT$SYM.TEXT;

  19334  4 000532   100004 236100                    LDQ     4,,PR1
         4 000533   000033 772000                    QRL     27
         4 000534   000000 620006                    EAX0    0,QL
         4 000535   040000 100540                    MLR     fill='040'O
         4 000536   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000537   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11

      439    19335    3         END;

  19335  4 000540   000550 710000 4                  TRA     s:19360

      440    19336    3      ELSE DO; /* The pname was affected by xlation use xlated 1 */

      441    19337    3         PRO_KEY_OLD.TEXT = XPNAME;

  19337  4 000541   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:154  
         4 000542   200022 000013                    ADSC9   XPNAME,,AUTO             cn=0,n=11
         4 000543   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11

      442    19338        /*E* ERROR:    ASD-E$FROMPNAMEXLATED-C
      443    19339             MESSAGE:  A FROM profile name must be specified in all uppercase.
      444    19340                          The profile name for FROM has been translated.
      445    19341             MESSAGE1: Your FROM profile name had lower case letters which
      446    19342                          have been converted to uppercase before being used.
      447    19343        */
      448    19344              %SCREAM (ERR#=E$FROMPNAMEXLATED, LEVEL=WARN, MID='D');

  19354  4 000544   000013 630400 5                  EPPR0   11
         4 000545   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000546   000000 701000 xent               TSX1    ASH$WARN
         4 000547   000000 011000                    NOP     0

      449    19359    3         END;

      450    19360    2      CALL ASD$READ_PRO( PRO_KEY_OLD, PRO_BUF, P_ARS ) ALTRET(F_READ_ERR);

  19360  4 000550   000006 236000 5                  LDQ     6
         4 000551   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 000552   000000 236000 xsym               LDQ     DSEG1$
         4 000553   000014 235000 5                  LDA     12
         4 000554   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 000555   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 000556   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000557   000000 701000 xent               TSX1    ASD$READ_PRO
         4 000560   000706 702000 4                  TSX2    F_READ_ERR

      451    19361    2      END ; /* Then do */

  19361  4 000561   000705 710000 4                  TRA     s:19423

      452    19362    1   ELSE
      453    19363    2      IF CREATE THEN DO;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:155  
  19363  4 000562   200025 234100                    SZN     CREATE,,AUTO
         4 000563   000705 605000 4                  TPL     s:19423

      454    19364                                                  /* Pick up defaults */
      455    19365    3         DO CASE( P_TYPE ) ;

  19365  4 000564   000003 236000 2                  LDQ     P_TYPE
         4 000565   000017 116007                    CMPQ    15,DL
         4 000566   000570 602006 4                  TNC     s:19365+4,QL
         4 000567   000667 710000 4                  TRA     s:19414
         4 000570   000667 710000 4                  TRA     s:19414
         4 000571   000615 710000 4                  TRA     s:19372
         4 000572   000607 710000 4                  TRA     s:19368
         4 000573   000623 710000 4                  TRA     s:19376
         4 000574   000631 710000 4                  TRA     s:19380
         4 000575   000667 710000 4                  TRA     s:19414
         4 000576   000637 710000 4                  TRA     s:19384
         4 000577   000667 710000 4                  TRA     s:19414
         4 000600   000653 710000 4                  TRA     s:19392
         4 000601   000667 710000 4                  TRA     s:19414
         4 000602   000645 710000 4                  TRA     s:19388
         4 000603   000667 710000 4                  TRA     s:19414
         4 000604   000667 710000 4                  TRA     s:19414
         4 000605   000667 710000 4                  TRA     s:19414
         4 000606   000661 710000 4                  TRA     s:19396

      456    19366
      457    19367    3            CASE( %KLTY_TTY# );

      458    19368    3               PRO_KEY_OLD.CNT = 6 ;

  19368  4 000607   006000 236003                    LDQ     3072,DU
         4 000610   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      459    19369    3               PRO_KEY_OLD.TEXT = '$ASYNC' ;

  19369  4 000611   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:156  
         4 000612   000050 000006 3                  ADSC9   KL_CCHR+40               cn=0,n=6
         4 000613   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000614   000674 710000 4                  TRA     s:19420

      460    19370
      461    19371    3            CASE( %KLTY_SDEV# ) ;

      462    19372    3               PRO_KEY_OLD.CNT = 5 ;

  19372  4 000615   005000 236003                    LDQ     2560,DU
         4 000616   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      463    19373    3               PRO_KEY_OLD.TEXT = '$RBTD' ;

  19373  4 000617   040000 100400                    MLR     fill='040'O
         4 000620   000052 000005 3                  ADSC9   KL_CCHR+42               cn=0,n=5
         4 000621   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000622   000674 710000 4                  TRA     s:19420

      464    19374
      465    19375    3            CASE( %KLTY_STRM# ) ;

      466    19376    3               PRO_KEY_OLD.CNT = 4 ;

  19376  4 000623   004000 236003                    LDQ     2048,DU
         4 000624   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      467    19377    3               PRO_KEY_OLD.TEXT = '$RBT' ;

  19377  4 000625   040000 100400                    MLR     fill='040'O
         4 000626   000052 000004 3                  ADSC9   KL_CCHR+42               cn=0,n=4
         4 000627   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000630   000674 710000 4                  TRA     s:19420

      468    19378
      469    19379    3            CASE( %KLTY_LINK# ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:157  
      470    19380    3               PRO_KEY_OLD.CNT = 5 ;

  19380  4 000631   005000 236003                    LDQ     2560,DU
         4 000632   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      471    19381    3               PRO_KEY_OLD.TEXT = '$LINK' ;

  19381  4 000633   040000 100400                    MLR     fill='040'O
         4 000634   000054 000005 3                  ADSC9   KL_CCHR+44               cn=0,n=5
         4 000635   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000636   000674 710000 4                  TRA     s:19420

      472    19382
      473    19383    3            CASE( %KLTY_URP# ) ;

      474    19384    3               PRO_KEY_OLD.CNT = 4 ;

  19384  4 000637   004000 236003                    LDQ     2048,DU
         4 000640   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      475    19385    3               PRO_KEY_OLD.TEXT = '$URP' ;

  19385  4 000641   040000 100400                    MLR     fill='040'O
         4 000642   000056 000004 3                  ADSC9   KL_CCHR+46               cn=0,n=4
         4 000643   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000644   000674 710000 4                  TRA     s:19420

      476    19386
      477    19387    3            CASE( %KLTY_LINEDEV# );

      478    19388    3               PRO_KEY_OLD.CNT = 5;

  19388  4 000645   005000 236003                    LDQ     2560,DU
         4 000646   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      479    19389    3               PRO_KEY_OLD.TEXT = '$3270';

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:158  
  19389  4 000647   040000 100400                    MLR     fill='040'O
         4 000650   000057 000005 3                  ADSC9   KL_CCHR+47               cn=0,n=5
         4 000651   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000652   000674 710000 4                  TRA     s:19420

      480    19390
      481    19391    3            CASE( %KLTY_VIRCIR# );

      482    19392    3               PRO_KEY_OLD.CNT = 7;

  19392  4 000653   007000 236003                    LDQ     3584,DU
         4 000654   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      483    19393    3               PRO_KEY_OLD.TEXT = '$VIRCIR';

  19393  4 000655   040000 100400                    MLR     fill='040'O
         4 000656   000061 000007 3                  ADSC9   KL_CCHR+49               cn=0,n=7
         4 000657   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000660   000674 710000 4                  TRA     s:19420

      484    19394
      485    19395    3            CASE( %KLTY_HIP_DEV# );

      486    19396    3               PRO_KEY_OLD.CNT = 8 ;

  19396  4 000661   010000 236003                    LDQ     4096,DU
         4 000662   000033 552040 2                  STBQ    PRO_KEY_OLD,'40'O

      487    19397    3               PRO_KEY_OLD.TEXT = '$POLLVIP';

  19397  4 000663   040000 100400                    MLR     fill='040'O
         4 000664   000063 000010 3                  ADSC9   KL_CCHR+51               cn=0,n=8
         4 000665   000033 200013 2                  ADSC9   PRO_KEY_OLD              cn=1,n=11
         4 000666   000674 710000 4                  TRA     s:19420

      488    19398    3            CASE( ELSE ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:159  
      489    19399        /*E*  ERROR:    ASD-E$BADPROTYPE-C
      490    19400              MESSAGE0: Illegal profile type.
      491    19401        */
      492    19402                    %SCREAM( ERR#=E$BADPROTYPE, LEVEL=ERROR, MID='F');

  19414  4 000667   000015 630400 5                  EPPR0   13
         4 000670   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000671   000000 701000 xent               TSX1    ASH$ERROR
         4 000672   000000 011000                    NOP     0

      493    19417    3               RETURN ;

  19417  4 000673   000000 702200 xent               TSX2  ! X66_ARET

      494    19418
      495    19419    3            END ; /* Do case( P_TYPE ) */

      496    19420    2         CALL ASD$READ_PRO(PRO_KEY_OLD, PRO_BUF, P_ARS) ALTRET(F_READ_ERR);

  19420  4 000674   000006 236000 5                  LDQ     6
         4 000675   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 000676   000000 236000 xsym               LDQ     DSEG1$
         4 000677   000014 235000 5                  LDA     12
         4 000700   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 000701   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 000702   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000703   000000 701000 xent               TSX1    ASD$READ_PRO
         4 000704   000706 702000 4                  TSX2    F_READ_ERR

      497    19421    2         END ; /* Then do */

      498    19422
      499    19423    2   DO WHILE( '0'B );

  19423  4 000705   001042 710000 4                  TRA     s:19468

  19423  4 000706                       F_READ_ERR   null
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:160  
      500    19424    2   F_READ_ERR: ;
      501    19425    3      IF FROM THEN DO;

  19425  4 000706   200026 234100                    SZN     FROM,,AUTO
         4 000707   000720 605000 4                  TPL     s:19448

      502    19426        /*E*  ERROR:    ASD-E$PNNOEXIST-C
      503    19427              MESSAGE:  %%U1 %does not exist.
      504    19428        */
      505    19429    3         AS_FIELD1 = PRO_KEY_OLD ;

  19429  4 000710   000000 100400                    MLR     fill='000'O
         4 000711   000033 000014 2                  ADSC9   PRO_KEY_OLD              cn=0,n=12
         4 000712   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      506    19430              %SCREAM( ERR#=E$PNNOEXIST, LEVEL=ERROR, MID='D');

  19442  4 000713   000016 630400 5                  EPPR0   14
         4 000714   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000715   000000 701000 xent               TSX1    ASH$ERROR
         4 000716   000000 011000                    NOP     0

      507    19445    3         RETURN ;

  19445  4 000717   000000 702200 xent               TSX2  ! X66_ARET

      508    19446    3         END;
      509    19447    2      ELSE
      510    19448    3      DO CASE( P_TYPE ) ;

  19448  4 000720   000003 235000 2                  LDA     P_TYPE
         4 000721   000017 115007                    CMPA    15,DL
         4 000722   000724 602005 4                  TNC     s:19448+4,AL
         4 000723   001042 710000 4                  TRA     s:19468
         4 000724   001042 710000 4                  TRA     s:19468
         4 000725   000753 710000 4                  TRA     s:19452
         4 000726   000743 710000 4                  TRA     s:19450
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:161  
         4 000727   000763 710000 4                  TRA     s:19454
         4 000730   000773 710000 4                  TRA     s:19456
         4 000731   001042 710000 4                  TRA     s:19468
         4 000732   001003 710000 4                  TRA     s:19458
         4 000733   001042 710000 4                  TRA     s:19468
         4 000734   001023 710000 4                  TRA     s:19462
         4 000735   001042 710000 4                  TRA     s:19468
         4 000736   001013 710000 4                  TRA     s:19460
         4 000737   001042 710000 4                  TRA     s:19468
         4 000740   001042 710000 4                  TRA     s:19468
         4 000741   001042 710000 4                  TRA     s:19468
         4 000742   001033 710000 4                  TRA     s:19464

      511    19449    3         CASE( %KLTY_TTY# );

      512    19450    3            CALL ASD$BUILD_$ASYNC( PRO_BUF, P_ARS );

  19450  4 000743   000006 236000 5                  LDQ     6
         4 000744   000000 235000 xsym               LDA     DSEG1$
         4 000745   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 000746   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 000747   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000750   000000 701000 xent               TSX1    ASD$BUILD_$ASYNC
         4 000751   000000 011000                    NOP     0
         4 000752   001042 710000 4                  TRA     s:19468

      513    19451    3         CASE( %KLTY_SDEV# ) ;

      514    19452    3            CALL ASD$BUILD_$RBTD( PRO_BUF, P_ARS );

  19452  4 000753   000006 236000 5                  LDQ     6
         4 000754   000000 235000 xsym               LDA     DSEG1$
         4 000755   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 000756   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 000757   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000760   000000 701000 xent               TSX1    ASD$BUILD_$RBTD
         4 000761   000000 011000                    NOP     0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:162  
         4 000762   001042 710000 4                  TRA     s:19468

      515    19453    3         CASE( %KLTY_STRM# ) ;

      516    19454    3            CALL ASD$BUILD_$RBT( PRO_BUF, P_ARS );

  19454  4 000763   000006 236000 5                  LDQ     6
         4 000764   000000 235000 xsym               LDA     DSEG1$
         4 000765   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 000766   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 000767   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000770   000000 701000 xent               TSX1    ASD$BUILD_$RBT
         4 000771   000000 011000                    NOP     0
         4 000772   001042 710000 4                  TRA     s:19468

      517    19455    3         CASE( %KLTY_LINK# ) ;

      518    19456    3            CALL ASD$BUILD_$LINK( PRO_BUF, P_ARS );

  19456  4 000773   000006 236000 5                  LDQ     6
         4 000774   000000 235000 xsym               LDA     DSEG1$
         4 000775   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 000776   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 000777   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001000   000000 701000 xent               TSX1    ASD$BUILD_$LINK
         4 001001   000000 011000                    NOP     0
         4 001002   001042 710000 4                  TRA     s:19468

      519    19457    3         CASE( %KLTY_URP# ) ;

      520    19458    3            CALL ASD$BUILD_$URP( PRO_BUF, P_ARS );

  19458  4 001003   000006 236000 5                  LDQ     6
         4 001004   000000 235000 xsym               LDA     DSEG1$
         4 001005   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001006   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001007   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:163  
         4 001010   000000 701000 xent               TSX1    ASD$BUILD_$URP
         4 001011   000000 011000                    NOP     0
         4 001012   001042 710000 4                  TRA     s:19468

      521    19459    3         CASE( %KLTY_LINEDEV# );

      522    19460    3            CALL ASD$BUILD_$3270( PRO_BUF, P_ARS );

  19460  4 001013   000006 236000 5                  LDQ     6
         4 001014   000000 235000 xsym               LDA     DSEG1$
         4 001015   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001016   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001017   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001020   000000 701000 xent               TSX1    ASD$BUILD_$3270
         4 001021   000000 011000                    NOP     0
         4 001022   001042 710000 4                  TRA     s:19468

      523    19461    3         CASE( %KLTY_VIRCIR# );

      524    19462    3            CALL ASD$BUILD_$VIRCIR( PRO_BUF, P_ARS );

  19462  4 001023   000006 236000 5                  LDQ     6
         4 001024   000000 235000 xsym               LDA     DSEG1$
         4 001025   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001026   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001027   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001030   000000 701000 xent               TSX1    ASD$BUILD_$VIRCIR
         4 001031   000000 011000                    NOP     0
         4 001032   001042 710000 4                  TRA     s:19468

      525    19463    3         CASE( %KLTY_HIP_DEV# );

      526    19464    3            CALL ASD$BUILD_$POLLVIP( PRO_BUF, P_ARS );

  19464  4 001033   000006 236000 5                  LDQ     6
         4 001034   000000 235000 xsym               LDA     DSEG1$
         4 001035   200220 757100                    STAQ    PINC_INC+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:164  
         4 001036   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001037   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001040   000000 701000 xent               TSX1    ASD$BUILD_$POLLVIP
         4 001041   000000 011000                    NOP     0

      527    19465    3         END;

      528    19466    2      END;

      529    19467
      530    19468    1   PP$ = DSEG1$;

  19468  4 001042   000000 236000 xsym               LDQ     DSEG1$
         4 001043   200005 756100                    STQ     PP$,,AUTO

      531    19469    1   PHDR$ = PP$ ;

  19469  4 001044   000042 756000 2                  STQ     PHDR$

      532    19470    1   PP_END$ = PINCRC( PP$, P_ARS ) ;

  19470  4 001045   000106 236000 2                  LDQ     P_ARS
         4 001046   000020 736000                    QLS     16
         4 001047   200005 036100                    ADLQ    PP$,,AUTO
         4 001050   000107 756000 2                  STQ     PP_END$

      533    19471    1   PP$ = PINCRW( PP$, SIZEW( PRO_HDR ) ) ;

  19471  4 001051   200005 236100                    LDQ     PP$,,AUTO
         4 001052   000024 036003                    ADLQ    20,DU
         4 001053   200005 756100                    STQ     PP$,,AUTO

      534    19472                                                              /*  Find all vlps.   */
      535    19473    1   PNM$ = ADDR(NIL) ;

  19473  4 001054   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001055   000053 756000 2                  STQ     PNM$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:165  

      536    19474    1   TCTL$ = ADDR(NIL) ;

  19474  4 001056   000043 756000 2                  STQ     TCTL$

      537    19475    1   TATR$ = ADDR(NIL) ;

  19475  4 001057   000044 756000 2                  STQ     TATR$

      538    19476    1   PLTN$ = ADDR(NIL) ;

  19476  4 001060   000045 756000 2                  STQ     PLTN$

      539    19477    1   DTABS$ = ADDR(NIL) ;

  19477  4 001061   000046 756000 2                  STQ     DTABS$

      540    19478    1   TCCHR$ = ADDR(NIL) ;

  19478  4 001062   000047 756000 2                  STQ     TCCHR$

      541    19479    1   FUNKEY$ = ADDR(NIL) ;

  19479  4 001063   000050 756000 2                  STQ     FUNKEY$

      542    19480    1   SETUP_CHR$ = ADDR(NIL) ;

  19480  4 001064   000051 756000 2                  STQ     SETUP_CHR$

      543    19481    1   TRMD$ = ADDR(NIL) ;

  19481  4 001065   000052 756000 2                  STQ     TRMD$

      544    19482    1   LINK$ = ADDR(NIL);

  19482  4 001066   000054 756000 2                  STQ     LINK$

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:166  
      545    19483    1   T3270$ = ADDR(NIL);

  19483  4 001067   000056 756000 2                  STQ     T3270$

      546    19484    1   CCHRSZ$ = ADDR(NIL);

  19484  4 001070   000104 756000 2                  STQ     CCHRSZ$

      547    19485    1   FUNKEYSZ$ = ADDR(NIL);

  19485  4 001071   000105 756000 2                  STQ     FUNKEYSZ$

      548    19486    1   VIRCIR$ = ADDR(NIL);

  19486  4 001072   000055 756000 2                  STQ     VIRCIR$

      549    19487    2   DO I = 0 TO SIZEW(ABSGRPRND$) - 1;

  19487  4 001073   200013 450100                    STZ     I,,AUTO
         4 001074   001103 710000 4                  TRA     s:19489+3

      550    19488    2      ABSGRPRND$(I) = ADDR(NIL);

  19488  4 001075   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 001076   200013 720100                    LXL0    I,,AUTO
         4 001077   000057 756010 2                  STQ     ABSGRPRND$,X0

      551    19489    2      END;

  19489  4 001100   200013 235100                    LDA     I,,AUTO
         4 001101   000001 035007                    ADLA    1,DL
         4 001102   200013 755100                    STA     I,,AUTO
         4 001103   200013 235100                    LDA     I,,AUTO
         4 001104   000010 115007                    CMPA    8,DL
         4 001105   001075 602000 4                  TNC     s:19488

      552    19490    1   IF PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK THEN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:167  

  19490  4 001106   000042 470400 2                  LDP0    PHDR$
         4 001107   000000 066500                    CMPB    filb='0'B
         4 001110   000001 630001                    BDSC    1,,PR0                   by=3,bit=3,n=1
         4 001111   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001112   001141 600000 4                  TZE     GR_AGAIN

      553    19491    1      IF CREATE THEN

  19491  4 001113   200025 234100                    SZN     CREATE,,AUTO
         4 001114   001127 605000 4                  TPL     s:19494

      554    19492    1         CALL ASD$GR_READ_PRO( PRO_KEY_OLD, GRA_BUF, G_ARS ) ALTRET( GR_READ_ERR) ;

  19492  4 001115   200006 631500                    EPPR1   G_ARS,,AUTO
         4 001116   200222 451500                    STP1    PINC_INC+3,,AUTO
         4 001117   000000 236000 xsym               LDQ     DSEG2$
         4 001120   000014 235000 5                  LDA     12
         4 001121   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001122   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001123   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001124   000000 701000 xent               TSX1    ASD$GR_READ_PRO
         4 001125   001153 702000 4                  TSX2    GR_READ_ERR
         4 001126   001152 710000 4                  TRA     s:19499

      555    19493    1      ELSE
      556    19494    1         CALL ASD$GR_READ_PRO( PRO_KEY, GRA_BUF, G_ARS ) ALTRET( GR_READ_ERR) ;

  19494  4 001127   200006 631500                    EPPR1   G_ARS,,AUTO
         4 001130   200222 451500                    STP1    PINC_INC+3,,AUTO
         4 001131   000000 236000 xsym               LDQ     DSEG2$
         4 001132   000007 235000 5                  LDA     7
         4 001133   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001134   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001135   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001136   000000 701000 xent               TSX1    ASD$GR_READ_PRO
         4 001137   001153 702000 4                  TSX2    GR_READ_ERR
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:168  
         4 001140   001152 710000 4                  TRA     s:19499

      557    19495    2   ELSE DO ;

  19494  4 001141                       GR_AGAIN     null
      558    19496    2   GR_AGAIN: ;
      559    19497    2      CALL ASD$GR_READ_PRO( GRA_KEY_OLD, GRA_BUF, G_ARS ) ALTRET( GR_READ_ERR_CR ) ;

  19497  4 001141   200006 630500                    EPPR0   G_ARS,,AUTO
         4 001142   200222 450500                    STP0    PINC_INC+3,,AUTO
         4 001143   000000 236000 xsym               LDQ     DSEG2$
         4 001144   000017 235000 5                  LDA     15
         4 001145   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001146   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001147   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001150   000000 701000 xent               TSX1    ASD$GR_READ_PRO
         4 001151   001161 702000 4                  TSX2    GR_READ_ERR_CR

      560    19498    2      END ;

      561    19499    2   DO WHILE( '0'B ) ;

  19499  4 001152   001160 710000 4                  TRA     s:19522

  19497  4 001153                       GR_READ_ERR  null
      562    19500    2   GR_READ_ERR: ;
      563    19501        /*E* ERROR:   ASD-E$GRNOTEXIST-C
      564    19502             MESSAGE: GRAPHICS are allowed, but no graphics are defined.
      565    19503             MESSAGE1: Default graphics record is being used.
      566    19504        */
      567    19505           %SCREAM( ERR#=E$GRNOTEXIST, LEVEL=ERROR, MID='D') ;

  19517  4 001153   000020 630400 5                  EPPR0   16
         4 001154   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001155   000000 701000 xent               TSX1    ASH$ERROR
         4 001156   000000 011000                    NOP     0

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:169  
      568    19520    2      GOTO GR_AGAIN ;

  19520  4 001157   001141 710000 4                  TRA     GR_AGAIN

      569    19521    2      END ;              /*  Of do while  */

      570    19522    2   DO WHILE( '0'B ) ;

  19522  4 001160   001171 710000 4                  TRA     s:19527

  19520  4 001161                       GR_READ_ERR* null
      571    19523    2   GR_READ_ERR_CR: ;
      572    19524    2      CALL ASD$BUILD_$GRA( PRO_BUF, P_ARS );

  19524  4 001161   000006 236000 5                  LDQ     6
         4 001162   000000 235000 xsym               LDA     DSEG1$
         4 001163   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001164   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001165   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001166   000000 701000 xent               TSX1    ASD$BUILD_$GRA
         4 001167   000000 011000                    NOP     0

      573    19525    2      GOTO GR_AGAIN ;

  19525  4 001170   001141 710000 4                  TRA     GR_AGAIN

      574    19526    2      END;

      575    19527    1   GRA$ = DSEG2$ ;

  19527  4 001171   000000 236000 xsym               LDQ     DSEG2$
         4 001172   000041 756000 2                  STQ     GRA$

      576    19528    2   DO WHILE ( PP$ < PP_END$ ) ;

  19528  4 001173   200005 236100                    LDQ     PP$,,AUTO
         4 001174   000107 116000 2                  CMPQ    PP_END$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:170  
         4 001175   001410 603000 4                  TRC     s:19599

      577    19529    3      IF PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN DO;

  19529  4 001176   200005 470500                    LDP0    PP$,,AUTO
         4 001177   003100 061500                    CSR     bolr='003'O
         4 001200   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 001201   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 001202   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 001203   000377 116007                    CMPQ    255,DL
         4 001204   001223 601000 4                  TNZ     s:19534

      578    19530    3         PP_TYPE = PP$BIG_STRCT.TYPE;

  19530  4 001205   003100 061500                    CSR     bolr='003'O
         4 001206   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 001207   200011 000044                    BDSC    PP_TYPE,,AUTO            by=0,bit=0,n=36

      579    19531    3         PP_SIZE = PP$BIG_STRCT.SIZE.T * 256 + PP$BIG_STRCT.SIZE.B;

  19531  4 001210   003100 061500                    CSR     bolr='003'O
         4 001211   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8
         4 001212   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 001213   003100 061500                    CSR     bolr='003'O
         4 001214   000000 410010                    BDSC    0,,PR0                   by=2,bit=1,n=8
         4 001215   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 001216   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 001217   000010 736000                    QLS     8
         4 001220   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 001221   200010 756100                    STQ     PP_SIZE,,AUTO

      580    19532    3         END;   /*  One fep word for size and type  */

  19532  4 001222   001231 710000 4                  TRA     s:19538

      581    19533    3      ELSE DO;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:171  
      582    19534    3         PP_TYPE = PP$STRCT.TYPE ;

  19534  4 001223   003100 061500                    CSR     bolr='003'O
         4 001224   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 001225   200011 000044                    BDSC    PP_TYPE,,AUTO            by=0,bit=0,n=36

      583    19535    3         PP_SIZE = PP$STRCT.SIZE ;

  19535  4 001226   003100 061500                    CSR     bolr='003'O
         4 001227   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 001230   200010 000044                    BDSC    PP_SIZE,,AUTO            by=0,bit=0,n=36

      584    19536    3         END;   /*  One byte for type and size  */

      585    19537
      586    19538    2      IF PP_TYPE = %KV_PRMID_CTRCHR THEN

  19538  4 001231   200011 235100                    LDA     PP_TYPE,,AUTO
         4 001232   000017 115007                    CMPA    15,DL
         4 001233   001236 601000 4                  TNZ     s:19540

      587    19539    2         CCHRSZ$ = PP$ ;

  19539  4 001234   200005 236100                    LDQ     PP$,,AUTO
         4 001235   000104 756000 2                  STQ     CCHRSZ$

      588    19540    2      IF PP_TYPE = %KV_PRMID_KEYDEFS THEN

  19540  4 001236   000030 115007                    CMPA    24,DL
         4 001237   001242 601000 4                  TNZ     s:19543

      589    19541    2         FUNKEYSZ$ = PP$ ;

  19541  4 001240   200005 236100                    LDQ     PP$,,AUTO
         4 001241   000105 756000 2                  STQ     FUNKEYSZ$

      590    19542
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:172  
      591    19543    2      IF PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN

  19543  4 001242   003100 061500                    CSR     bolr='003'O
         4 001243   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 001244   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 001245   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 001246   000377 116007                    CMPQ    255,DL
         4 001247   001254 601000 4                  TNZ     s:19546

      592    19544    2         PP$ = PINCRC( PP$, 4 ) ;

  19544  4 001250   200005 236100                    LDQ     PP$,,AUTO
         4 001251   000001 036003                    ADLQ    1,DU
         4 001252   200005 756100                    STQ     PP$,,AUTO
         4 001253   001257 710000 4                  TRA     s:19548

      593    19545    2      ELSE
      594    19546    2         PP$ = PINCRC( PP$, 2 ) ;

  19546  4 001254   200005 236100                    LDQ     PP$,,AUTO
         4 001255   400000 036007                    ADLQ    -131072,DL
         4 001256   200005 756100                    STQ     PP$,,AUTO

      595    19547
      596    19548    3      DO CASE( PP_TYPE ) ;

  19548  4 001257   000035 115007                    CMPA    29,DL
         4 001260   001262 602005 4                  TNC     s:19548+3,AL
         4 001261   001377 710000 4                  TRA     s:19594
         4 001262   001377 710000 4                  TRA     s:19594
         4 001263   001377 710000 4                  TRA     s:19594
         4 001264   001377 710000 4                  TRA     s:19594
         4 001265   001317 710000 4                  TRA     s:19551
         4 001266   001321 710000 4                  TRA     s:19554
         4 001267   001377 710000 4                  TRA     s:19594
         4 001270   001377 710000 4                  TRA     s:19594
         4 001271   001323 710000 4                  TRA     s:19557
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:173  
         4 001272   001325 710000 4                  TRA     s:19560
         4 001273   001327 710000 4                  TRA     s:19563
         4 001274   001377 710000 4                  TRA     s:19594
         4 001275   001377 710000 4                  TRA     s:19594
         4 001276   001377 710000 4                  TRA     s:19594
         4 001277   001333 710000 4                  TRA     s:19569
         4 001300   001377 710000 4                  TRA     s:19594
         4 001301   001331 710000 4                  TRA     s:19566
         4 001302   001377 710000 4                  TRA     s:19594
         4 001303   001377 710000 4                  TRA     s:19594
         4 001304   001377 710000 4                  TRA     s:19594
         4 001305   001377 710000 4                  TRA     s:19594
         4 001306   001377 710000 4                  TRA     s:19594
         4 001307   001377 710000 4                  TRA     s:19594
         4 001310   001377 710000 4                  TRA     s:19594
         4 001311   001342 710000 4                  TRA     s:19578
         4 001312   001335 710000 4                  TRA     s:19572
         4 001313   001346 710000 4                  TRA     s:19584
         4 001314   001371 710000 4                  TRA     s:19589
         4 001315   001344 710000 4                  TRA     s:19581
         4 001316   001337 710000 4                  TRA     s:19575

      597    19549
      598    19550    3         CASE( %KV_PRMID_PROFILE  ) ;

      599    19551    3            PNM$ = PP$ ;

  19551  4 001317   000053 756000 2                  STQ     PNM$
         4 001320   001377 710000 4                  TRA     s:19594

      600    19552
      601    19553    3         CASE( %KV_PRMID_TRMCTL ) ;

      602    19554    3            TCTL$ = PP$ ;

  19554  4 001321   000043 756000 2                  STQ     TCTL$
         4 001322   001377 710000 4                  TRA     s:19594
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:174  

      603    19555
      604    19556    3         CASE( %KV_PRMID_TRMATTR ) ;

      605    19557    3            TATR$ = PP$ ;

  19557  4 001323   000044 756000 2                  STQ     TATR$
         4 001324   001377 710000 4                  TRA     s:19594

      606    19558
      607    19559    3         CASE( %KV_PRMID_PLATEN ) ;

      608    19560    3            PLTN$ = PP$ ;

  19560  4 001325   000045 756000 2                  STQ     PLTN$
         4 001326   001377 710000 4                  TRA     s:19594

      609    19561
      610    19562    3         CASE( %KV_PRMID_TRMTAB ) ;

      611    19563    3            DTABS$ = PP$ ;

  19563  4 001327   000046 756000 2                  STQ     DTABS$
         4 001330   001377 710000 4                  TRA     s:19594

      612    19564
      613    19565    3         CASE( %KV_PRMID_CTRCHR ) ;

      614    19566    3            TCCHR$ = PP$ ;

  19566  4 001331   000047 756000 2                  STQ     TCCHR$
         4 001332   001377 710000 4                  TRA     s:19594

      615    19567
      616    19568    3         CASE( %KL_PRMID_TRMD  ) ;

      617    19569    3            TRMD$ = PP$ ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:175  

  19569  4 001333   000052 756000 2                  STQ     TRMD$
         4 001334   001377 710000 4                  TRA     s:19594

      618    19570
      619    19571    3         CASE( %KV_PRMID_KEYDEFS ) ;

      620    19572    3            FUNKEY$ = PP$ ;

  19572  4 001335   000050 756000 2                  STQ     FUNKEY$
         4 001336   001377 710000 4                  TRA     s:19594

      621    19573
      622    19574    3         CASE( %KV_PRMID_SETUP_CHR ) ;

      623    19575    3            SETUP_CHR$ = PINCRC (PP$, -2);

  19575  4 001337   000021 036000 5                  ADLQ    17
         4 001340   000051 756000 2                  STQ     SETUP_CHR$
         4 001341   001377 710000 4                  TRA     s:19594

      624    19576
      625    19577    3         CASE( %KL_PRMID_LINK  );

      626    19578    3            LINK$ = PP$;

  19578  4 001342   000054 756000 2                  STQ     LINK$
         4 001343   001377 710000 4                  TRA     s:19594

      627    19579
      628    19580    3         CASE( %KL_PRMID_VIRCIR  );

      629    19581    3            VIRCIR$ = PP$;

  19581  4 001344   000055 756000 2                  STQ     VIRCIR$
         4 001345   001377 710000 4                  TRA     s:19594

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:176  
      630    19582
      631    19583    3         CASE( %KV_PRMID_3270 );

      632    19584    3            T3270$ = PP$ ;

  19584  4 001346   000056 756000 2                  STQ     T3270$

      633    19585    3            IF PHDR$->PRO$HDR.TTYP=%KLTY_TTY# AND (T3270$->KL$3270&'1'B)

  19585  4 001347   000042 470400 2                  LDP0    PHDR$
         4 001350   000100 101500                    MRL     fill='000'O
         4 001351   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001352   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 001353   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 001354   000002 116007                    CMPQ    2,DL
         4 001355   001377 601000 4                  TNZ     s:19594
         4 001356   000056 471400 2                  LDP1    T3270$
         4 001357   003100 060500                    CSL     bolr='003'O
         4 001360   100000 000044                    BDSC    0,,PR1                   by=0,bit=0,n=36
         4 001361   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 001362   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 001363   400000 376003                    ANQ     -131072,DU
         4 001364   001377 600000 4                  TZE     s:19594

      634    19586    3            THEN PHDR$->PRO$HDR.TTYP=%KLTY_LINEDEV#;

  19586  4 001365   000100 101400                    MRL     fill='000'O
         4 001366   000014 000004 xsym               ADSC9   B_VECTNIL+12             cn=0,n=4
         4 001367   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001370   001377 710000 4                  TRA     s:19594

      635    19587
      636    19588    3         CASE( %KV_PRMID_ABSGRPRND );

      637    19589    3            ABSGRPRND$(PP$->KL$ABSGRPRND.ID#) = PP$;

  19589  4 001371   200005 470500                    LDP0    PP$,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:177  
         4 001372   003100 061500                    CSR     bolr='003'O
         4 001373   000000 020007                    BDSC    0,,PR0                   by=0,bit=2,n=7
         4 001374   200220 000022                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=18
         4 001375   200220 220100                    LDX0    PINC_INC+1,,AUTO
         4 001376   000057 756010 2                  STQ     ABSGRPRND$,X0

      638    19590
      639    19591
      640    19592    3         END ; /*  Do case  */

      641    19593
      642    19594    2      I = PP_SIZE + (MOD (PP_SIZE, 2)); /* Force i to be even */

  19594  4 001377   200010 236100                    LDQ     PP_SIZE,,AUTO
         4 001400   000001 376007                    ANQ     1,DL
         4 001401   200010 036100                    ADLQ    PP_SIZE,,AUTO
         4 001402   200013 756100                    STQ     I,,AUTO

      643    19595    2      PP$ = PINCRC ( PP$, I ) ;

  19595  4 001403   000020 736000                    QLS     16
         4 001404   200005 036100                    ADLQ    PP$,,AUTO
         4 001405   200005 756100                    STQ     PP$,,AUTO

      644    19596
      645    19597    2      END ; /*  Do while  */

  19597  4 001406   000107 116000 2                  CMPQ    PP_END$
         4 001407   001176 602000 4                  TNC     s:19529

      646    19598
      647    19599    1   IF P_TYPE = 0 THEN

  19599  4 001410   000003 235000 2                  LDA     P_TYPE
         4 001411   001417 601000 4                  TNZ     s:19601

      648    19600    1      P_TYPE = PHDR$ -> PRO$HDR.TTYP ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:178  

  19600  4 001412   000042 470400 2                  LDP0    PHDR$
         4 001413   000000 101500                    MRL     fill='000'O
         4 001414   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001415   000003 000004 2                  ADSC9   P_TYPE                   cn=0,n=4
         4 001416   001433 710000 4                  TRA     s:19623

      649    19601    2   ELSE IF P_TYPE ~= PHDR$ -> PRO$HDR.TTYP THEN DO;

  19601  4 001417   000042 470400 2                  LDP0    PHDR$
         4 001420   000100 101500                    MRL     fill='000'O
         4 001421   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001422   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 001423   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 001424   000003 116000 2                  CMPQ    P_TYPE
         4 001425   001433 600000 4                  TZE     s:19623

      650    19602        /*E*  ERROR:    ASD-E$UNMATCHEDPTYPE-C
      651    19603              MESSAGE0: Profile type given does not match profile type.
      652    19604        */
      653    19605              %SCREAM( ERR#=E$UNMATCHEDPTYPE, LEVEL=ERROR, MID='D');

  19617  4 001426   000022 630400 5                  EPPR0   18
         4 001427   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001430   000000 701000 xent               TSX1    ASH$ERROR
         4 001431   000000 011000                    NOP     0

      654    19620    2         RETURN ;

  19620  4 001432   000000 702200 xent               TSX2  ! X66_ARET

      655    19621    2         END ;
      656    19622                                                              /* Do options */
      657    19623    1   CALL PRO_OPTS ;

  19623  4 001433   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001434   001672 701000 4                  TSX1    s:19677
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:179  
         4 001435   000000 011000                    NOP     0

      658    19624    2   DO CASE( P_TYPE );

  19624  4 001436   000003 235000 2                  LDA     P_TYPE
         4 001437   000013 115007                    CMPA    11,DL
         4 001440   001442 602005 4                  TNC     s:19624+4,AL
         4 001441   001571 710000 4                  TRA     s:19655
         4 001442   001571 710000 4                  TRA     s:19655
         4 001443   001455 710000 4                  TRA     s:19628
         4 001444   001455 710000 4                  TRA     s:19628
         4 001445   001571 710000 4                  TRA     s:19655
         4 001446   001571 710000 4                  TRA     s:19655
         4 001447   001571 710000 4                  TRA     s:19655
         4 001450   001455 710000 4                  TRA     s:19628
         4 001451   001571 710000 4                  TRA     s:19655
         4 001452   001571 710000 4                  TRA     s:19655
         4 001453   001571 710000 4                  TRA     s:19655
         4 001454   001455 710000 4                  TRA     s:19628

      659    19625    2      CASE( %KLTY_TTY#, %KLTY_SDEV#, %KLTY_URP#, %KLTY_LINEDEV#);

      660    19626                                                              /*   Set up header.   */
      661    19627                                                            /*   Check for extra width.  */
      662    19628    2         IF PLTN$ -> VLP$PLATEN.EXTWID# = AS_TRUE THEN

  19628  4 001455   000045 470400 2                  LDP0    PLTN$
         4 001456   000000 066500                    CMPB    filb='0'B
         4 001457   000001 100001                    BDSC    1,,PR0                   by=0,bit=8,n=1
         4 001460   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 001461   001465 601000 4                  TNZ     s:19631

      663    19629    2            EXTWID = 1;

  19629  4 001462   000001 236007                    LDQ     1,DL
         4 001463   200012 756100                    STQ     EXTWID,,AUTO
         4 001464   001466 710000 4                  TRA     s:19632
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:180  

      664    19630    2         ELSE
      665    19631    2            EXTWID = 0;

  19631  4 001465   200012 450100                    STZ     EXTWID,,AUTO

      666    19632    2         PHDR$ -> PRO$HDR.WIDTH = PLTN$ -> VLP$PLATEN.WIDTH# + ( 254*EXTWID ) ;

  19632  4 001466   003100 061500                    CSR     bolr='003'O
         4 001467   000000 010010                    BDSC    0,,PR0                   by=0,bit=1,n=8
         4 001470   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 001471   200012 236100                    LDQ     EXTWID,,AUTO
         4 001472   000376 402007                    MPY     254,DL
         4 001473   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 001474   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 001475   000042 471400 2                  LDP1    PHDR$
         4 001476   000100 101500                    MRL     fill='000'O
         4 001477   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 001500   100000 200001                    ADSC9   0,,PR1                   cn=1,n=1

      667    19633    2         PHDR$ -> PRO$HDR.LINES = PLTN$ -> VLP$PLATEN.LENGTH# ;

  19633  4 001501   003100 061500                    CSR     bolr='003'O
         4 001502   000000 210010                    BDSC    0,,PR0                   by=1,bit=1,n=8
         4 001503   100000 400022                    BDSC    0,,PR1                   by=2,bit=0,n=18

      668    19634    2         PHDR$ -> PRO$HDR.ATTR.TRUOVRPRT = TATR$ -> VLP$TRMATTR.TRUOVRPRT# ;

  19634  4 001504   000044 473400 2                  LDP3    TATR$
         4 001505   003100 060500                    CSL     bolr='003'O
         4 001506   300000 610001                    BDSC    0,,PR3                   by=3,bit=1,n=1
         4 001507   100001 250001                    BDSC    1,,PR1                   by=1,bit=5,n=1

      669    19635    2         PHDR$ -> PRO$HDR.ATTR.APL = TATR$ -> VLP$TRMATTR.APL# ;

  19635  4 001510   003100 060500                    CSL     bolr='003'O
         4 001511   300000 630001                    BDSC    0,,PR3                   by=3,bit=3,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:181  
         4 001512   100001 260001                    BDSC    1,,PR1                   by=1,bit=6,n=1

      670    19636    2         PHDR$ -> PRO$HDR.ATTR.BIN = TATR$ -> VLP$TRMATTR.BIN# ;

  19636  4 001513   003100 060500                    CSL     bolr='003'O
         4 001514   300000 650001                    BDSC    0,,PR3                   by=3,bit=5,n=1
         4 001515   100001 270001                    BDSC    1,,PR1                   by=1,bit=7,n=1

      671    19637    2         PHDR$ -> PRO$HDR.ATTR.LCASE = TATR$ -> VLP$TRMATTR.LOWERCASEPRINTS# ;

  19637  4 001516   003100 060500                    CSL     bolr='003'O
         4 001517   300000 670001                    BDSC    0,,PR3                   by=3,bit=7,n=1
         4 001520   100001 300001                    BDSC    1,,PR1                   by=1,bit=8,n=1

      672    19638    2         PHDR$ -> PRO$HDR.ATTR.UPPERCASE = AS_TRUE;

  19638  4 001521   003100 060400                    CSL     bolr='003'O
         4 001522   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 001523   100001 230001                    BDSC    1,,PR1                   by=1,bit=3,n=1

      673    19639    2         IF TATR$ -> VLP$TRMATTR.PRINTTYPE# THEN

  19639  4 001524   000000 066500                    CMPB    filb='0'B
         4 001525   300001 250002                    BDSC    1,,PR3                   by=1,bit=5,n=2
         4 001526   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001527   001534 600000 4                  TZE     s:19642

      674    19640    2            PHDR$ -> PRO$HDR.DDEV.LP = AS_TRUE ;

  19640  4 001530   003100 060400                    CSL     bolr='003'O
         4 001531   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 001532   100001 600001                    BDSC    1,,PR1                   by=3,bit=0,n=1
         4 001533   001537 710000 4                  TRA     s:19643

      675    19641    2         ELSE
      676    19642    2            PHDR$ -> PRO$HDR.DDEV.LP = AS_FALSE ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:182  
  19642  4 001534   003100 060400                    CSL     bolr='003'O
         4 001535   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 001536   100001 600001                    BDSC    1,,PR1                   by=3,bit=0,n=1

      677    19643    2         IF TATR$ -> VLP$TRMATTR.TTYTYPE# THEN

  19643  4 001537   000000 066500                    CMPB    filb='0'B
         4 001540   300001 270002                    BDSC    1,,PR3                   by=1,bit=7,n=2
         4 001541   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001542   001547 600000 4                  TZE     s:19646

      678    19644    2            PHDR$ -> PRO$HDR.DDEV.IC = AS_TRUE ;

  19644  4 001543   003100 060400                    CSL     bolr='003'O
         4 001544   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 001545   100001 620001                    BDSC    1,,PR1                   by=3,bit=2,n=1
         4 001546   001552 710000 4                  TRA     s:19647

      679    19645    2         ELSE
      680    19646    2            PHDR$ -> PRO$HDR.DDEV.IC = AS_FALSE ;

  19646  4 001547   003100 060400                    CSL     bolr='003'O
         4 001550   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 001551   100001 620001                    BDSC    1,,PR1                   by=3,bit=2,n=1

      681    19647    2         IF ( TATR$ -> VLP$TRMATTR.PRINTTYPE# = '0'B ) AND

  19647  4 001552   000000 066500                    CMPB    filb='0'B
         4 001553   300001 250002                    BDSC    1,,PR3                   by=1,bit=5,n=2
         4 001554   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001555   001566 601000 4                  TNZ     s:19652
         4 001556   000000 066500                    CMPB    filb='0'B
         4 001557   300001 270002                    BDSC    1,,PR3                   by=1,bit=7,n=2
         4 001560   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001561   001566 601000 4                  TNZ     s:19652

      682    19648    2              ( TATR$ -> VLP$TRMATTR.TTYTYPE# = '0'B)
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:183  
      683    19649    2         THEN
      684    19650    2            PHDR$ -> PRO$HDR.DDEV.CP = AS_TRUE ;

  19650  4 001562   003100 060400                    CSL     bolr='003'O
         4 001563   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 001564   100001 610001                    BDSC    1,,PR1                   by=3,bit=1,n=1
         4 001565   001571 710000 4                  TRA     s:19655

      685    19651    2         ELSE
      686    19652    2            PHDR$ -> PRO$HDR.DDEV.CP = AS_FALSE ;

  19652  4 001566   003100 060400                    CSL     bolr='003'O
         4 001567   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 001570   100001 610001                    BDSC    1,,PR1                   by=3,bit=1,n=1

      687    19653    2      END ; /* Do case */

      688    19654
      689    19655    1   IF CREATE OR FROM THEN PHDR$->PRO$HDR.IMP# = 0;

  19655  4 001571   200025 234100                    SZN     CREATE,,AUTO
         4 001572   001575 604000 4                  TMI     s:19655+4
         4 001573   200026 234100                    SZN     FROM,,AUTO
         4 001574   001601 605000 4                  TPL     s:19658

  19655  4 001575   000042 470400 2                  LDP0    PHDR$
         4 001576   003100 061400                    CSR     bolr='003'O
         4 001577   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         4 001600   000001 420007                    BDSC    1,,PR0                   by=2,bit=2,n=7

      690    19656
      691    19657                                                              /*   Move profile name   */
      692    19658    1   PNM$ -> VLP$PNAME.L# = 11;

  19658  4 001601   000053 470400 2                  LDP0    PNM$
         4 001602   000100 101400                    MRL     fill='000'O
         4 001603   000015 000004 xsym               ADSC9   B_VECTNIL+13             cn=0,n=4
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:184  
         4 001604   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      693    19659    1   PNM$ -> VLP$PNAME.NAME# = ' ';

  19659  4 001605   000100 101500                    MRL     fill='000'O
         4 001606   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001607   200220 000002                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=2
         4 001610   200220 220100                    LDX0    PINC_INC+1,,AUTO
         4 001611   040140 100400                    MLR     fill='040'O
         4 001612   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 001613   000000 200010                    ADSC9   0,,PR0                   cn=1,n=*X0

      694    19660    1   PNM$ -> VLP$PNAME.L# = PRO_KEY.CNT ;

  19660  4 001614   000100 100400                    MLR     fill='000'O
         4 001615   000030 000001 2                  ADSC9   PRO_KEY                  cn=0,n=1
         4 001616   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      695    19661    1   PNM$ -> VLP$PNAME = PRO_KEY ;

  19661  4 001617   000100 101500                    MRL     fill='000'O
         4 001620   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 001621   200220 000002                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=2
         4 001622   200220 220100                    LDX0    PINC_INC+1,,AUTO
         4 001623   000001 621010                    EAX1    1,X0
         4 001624   000140 100400                    MLR     fill='000'O
         4 001625   000030 000014 2                  ADSC9   PRO_KEY                  cn=0,n=12
         4 001626   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1

      696    19662    1   P_ARS = P_ARS - 1 ;

  19662  4 001627   000106 235000 2                  LDA     P_ARS
         4 001630   000001 135007                    SBLA    1,DL
         4 001631   000106 755000 2                  STA     P_ARS

      697    19663    1   CALL ASD$WRITE_PRO( PRO_KEY, PRO_BUF, P_ARS ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:185  
  19663  4 001632   000006 236000 5                  LDQ     6
         4 001633   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 001634   000000 236000 xsym               LDQ     DSEG1$
         4 001635   000007 235000 5                  LDA     7
         4 001636   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001637   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001640   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001641   000000 701000 xent               TSX1    ASD$WRITE_PRO
         4 001642   000000 011000                    NOP     0

      698    19664    2   IF PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK THEN DO ;

  19664  4 001643   000042 470400 2                  LDP0    PHDR$
         4 001644   000000 066500                    CMPB    filb='0'B
         4 001645   000001 630001                    BDSC    1,,PR0                   by=3,bit=3,n=1
         4 001646   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 001647   001664 600000 4                  TZE     s:19668

      699    19665    2      G_ARS = G_ARS - 1 ;

  19665  4 001650   200006 235100                    LDA     G_ARS,,AUTO
         4 001651   000001 135007                    SBLA    1,DL
         4 001652   200006 755100                    STA     G_ARS,,AUTO

      700    19666    2      CALL ASD$GR_WRITE_PRO( PRO_KEY, GRA_BUF, G_ARS ) ;

  19666  4 001653   200006 631500                    EPPR1   G_ARS,,AUTO
         4 001654   200222 451500                    STP1    PINC_INC+3,,AUTO
         4 001655   000000 236000 xsym               LDQ     DSEG2$
         4 001656   000007 235000 5                  LDA     7
         4 001657   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 001660   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 001661   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 001662   000000 701000 xent               TSX1    ASD$GR_WRITE_PRO
         4 001663   000000 011000                    NOP     0

      701    19667    2      END ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:186  

      702    19668    1   RETURN ;

  19668  4 001664   000000 702200 xent               TSX2  ! X66_ARET

  19664  4 001665                       PROFILE_ERR  null
      703    19669        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:187  
      704    19670
      705    19671    1   PROFILE_ERR: ;
      706    19672    1   CALL ASH$ERROR( P_PCB.ERROR );

  19672  4 001665   000023 630400 5                  EPPR0   19
         4 001666   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001667   000000 701000 xent               TSX1    ASH$ERROR
         4 001670   000000 011000                    NOP     0

      707    19673    1   RETURN ;

  19673  4 001671   000000 702200 xent               TSX2  ! X66_ARET

      708    19674
      709    19675        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:188  
      710    19676
      711    19677    1   PRO_OPTS: ENTRY ;

  19677  4 001672   000000 700200 xent  PRO_OPTS     TSX0  ! X66_AUTO_0
         4 001673   000230 000000                    ZERO    152,0

      712    19678
      713    19679        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:189  
      714    19680        /********************************************************************/
      715    19681        /*   Procedure       procedure       procedure       procedure       */
      716    19682        /*********************************************************************/
      717    19683
      718    19684        /*
      719    19685            ***            Begin procedure                    ***
      720    19686        */
      721    19687    2   DO CASE( P_TYPE );

  19687  4 001674   000003 235000 2                  LDA     P_TYPE
         4 001675   000017 115007                    CMPA    15,DL
         4 001676   001700 602005 4                  TNC     s:19687+4,AL
         4 001677   002026 710000 4                  TRA     s:19721
         4 001700   002026 710000 4                  TRA     s:19721
         4 001701   001730 710000 4                  TRA     s:19693
         4 001702   001717 710000 4                  TRA     s:19689
         4 001703   001741 710000 4                  TRA     s:19697
         4 001704   001752 710000 4                  TRA     s:19701
         4 001705   002026 710000 4                  TRA     s:19721
         4 001706   001763 710000 4                  TRA     s:19705
         4 001707   002026 710000 4                  TRA     s:19721
         4 001710   002005 710000 4                  TRA     s:19713
         4 001711   002026 710000 4                  TRA     s:19721
         4 001712   001774 710000 4                  TRA     s:19709
         4 001713   002026 710000 4                  TRA     s:19721
         4 001714   002026 710000 4                  TRA     s:19721
         4 001715   002026 710000 4                  TRA     s:19721
         4 001716   002016 710000 4                  TRA     s:19717

      722    19688    2      CASE( %KLTY_TTY# );

      723    19689    2         PRO_TYPE = ASL_ASYNC_TYP;

  19689  4 001717   000000 236000 xsym               LDQ     ASL_ASYNC_TYP
         4 001720   777000 376003                    ANQ     -512,DU
         4 001721   200153 756100                    STQ     PRO_TYPE,,AUTO

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:190  
      724    19690    2         PROFILE_TYPE.COUNT = 5;

  19690  4 001722   005000 236003                    LDQ     2560,DU
         4 001723   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      725    19691    2         PROFILE_TYPE.TEXT  = 'ASYNC';

  19691  4 001724   040100 100400                    MLR     fill='040'O
         4 001725   000034 000005 3                  ADSC9   KL_CCHR+28               cn=0,n=5
         4 001726   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10
         4 001727   002026 710000 4                  TRA     s:19721

      726    19692    2      CASE( %KLTY_SDEV# );

      727    19693    2         PRO_TYPE = ASL_RBTD_TYP;

  19693  4 001730   000000 236000 xsym               LDQ     ASL_RBTD_TYP
         4 001731   777000 376003                    ANQ     -512,DU
         4 001732   200153 756100                    STQ     PRO_TYPE,,AUTO

      728    19694    2         PROFILE_TYPE.COUNT = 4;

  19694  4 001733   004000 236003                    LDQ     2048,DU
         4 001734   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      729    19695    2         PROFILE_TYPE.TEXT  = 'RBTD';

  19695  4 001735   040100 100400                    MLR     fill='040'O
         4 001736   000032 000004 3                  ADSC9   KL_CCHR+26               cn=0,n=4
         4 001737   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10
         4 001740   002026 710000 4                  TRA     s:19721

      730    19696    2      CASE( %KLTY_STRM# );

      731    19697    2         PRO_TYPE = ASL_RBT_TYP;

  19697  4 001741   000000 236000 xsym               LDQ     ASL_RBT_TYP
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:191  
         4 001742   777000 376003                    ANQ     -512,DU
         4 001743   200153 756100                    STQ     PRO_TYPE,,AUTO

      732    19698    2         PROFILE_TYPE.COUNT = 8;

  19698  4 001744   010000 236003                    LDQ     4096,DU
         4 001745   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      733    19699    2         PROFILE_TYPE.TEXT  = 'SYNC/RBT';

  19699  4 001746   040100 100400                    MLR     fill='040'O
         4 001747   000071 000010 3                  ADSC9   KL_CCHR+57               cn=0,n=8
         4 001750   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10
         4 001751   002026 710000 4                  TRA     s:19721

      734    19700    2      CASE( %KLTY_LINK# );

      735    19701    2         PRO_TYPE = ASL_LINK_TYP;

  19701  4 001752   000000 236000 xsym               LDQ     ASL_LINK_TYP
         4 001753   777000 376003                    ANQ     -512,DU
         4 001754   200153 756100                    STQ     PRO_TYPE,,AUTO

      736    19702    2         PROFILE_TYPE.COUNT = 4;

  19702  4 001755   004000 236003                    LDQ     2048,DU
         4 001756   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      737    19703    2         PROFILE_TYPE.TEXT  = 'LINK';

  19703  4 001757   040100 100400                    MLR     fill='040'O
         4 001760   000031 000004 3                  ADSC9   KL_CCHR+25               cn=0,n=4
         4 001761   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10
         4 001762   002026 710000 4                  TRA     s:19721

      738    19704    2      CASE( %KLTY_URP# );

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:192  
      739    19705    2         PRO_TYPE = ASL_URP_TYP;

  19705  4 001763   000000 236000 xsym               LDQ     ASL_URP_TYP
         4 001764   777000 376003                    ANQ     -512,DU
         4 001765   200153 756100                    STQ     PRO_TYPE,,AUTO

      740    19706    2         PROFILE_TYPE.COUNT = 3;

  19706  4 001766   003000 236003                    LDQ     1536,DU
         4 001767   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      741    19707    2         PROFILE_TYPE.TEXT  = 'URP';

  19707  4 001770   040100 100400                    MLR     fill='040'O
         4 001771   000042 000003 3                  ADSC9   KL_CCHR+34               cn=0,n=3
         4 001772   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10
         4 001773   002026 710000 4                  TRA     s:19721

      742    19708    2      CASE( %KLTY_LINEDEV# );

      743    19709    2         PRO_TYPE = ASL_3270_TYP;

  19709  4 001774   000000 236000 xsym               LDQ     ASL_3270_TYP
         4 001775   777000 376003                    ANQ     -512,DU
         4 001776   200153 756100                    STQ     PRO_TYPE,,AUTO

      744    19710    2         PROFILE_TYPE.COUNT = 4;

  19710  4 001777   004000 236003                    LDQ     2048,DU
         4 002000   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      745    19711    2         PROFILE_TYPE.TEXT  = '3270';

  19711  4 002001   040100 100400                    MLR     fill='040'O
         4 002002   000030 000004 3                  ADSC9   KL_CCHR+24               cn=0,n=4
         4 002003   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10
         4 002004   002026 710000 4                  TRA     s:19721
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:193  

      746    19712    2      CASE( %KLTY_VIRCIR# );

      747    19713    2         PRO_TYPE = ASL_VIRCIR_TYP;

  19713  4 002005   000000 236000 xsym               LDQ     ASL_VIRCIR_TYP
         4 002006   777000 376003                    ANQ     -512,DU
         4 002007   200153 756100                    STQ     PRO_TYPE,,AUTO

      748    19714    2         PROFILE_TYPE.COUNT = 6;

  19714  4 002010   006000 236003                    LDQ     3072,DU
         4 002011   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      749    19715    2         PROFILE_TYPE.TEXT  = 'VIRCIR';

  19715  4 002012   040100 100400                    MLR     fill='040'O
         4 002013   000073 000006 3                  ADSC9   KL_CCHR+59               cn=0,n=6
         4 002014   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10
         4 002015   002026 710000 4                  TRA     s:19721

      750    19716    2      CASE( %KLTY_HIP_DEV# );

      751    19717    2         PRO_TYPE = ASL_POLLVIP_TYP;

  19717  4 002016   000000 236000 xsym               LDQ     ASL_POLLVIP_TYP
         4 002017   777000 376003                    ANQ     -512,DU
         4 002020   200153 756100                    STQ     PRO_TYPE,,AUTO

      752    19718    2         PROFILE_TYPE.COUNT = 7;

  19718  4 002021   007000 236003                    LDQ     3584,DU
         4 002022   200150 552140                    STBQ    PROFILE_TYPE,'40'O,AUTO

      753    19719    2         PROFILE_TYPE.TEXT  = 'POLLVIP';

  19719  4 002023   040100 100400                    MLR     fill='040'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:194  
         4 002024   000040 000007 3                  ADSC9   KL_CCHR+32               cn=0,n=7
         4 002025   200150 200012                    ADSC9   PROFILE_TYPE,,AUTO       cn=1,n=10

      754    19720    2      END;

      755    19721    1   MORE = AS_TRUE ;

  19721  4 002026   000000 236000 xsym               LDQ     AS_TRUE
         4 002027   400000 376003                    ANQ     -131072,DU
         4 002030   000000 756000 2                  STQ     MORE

      756    19722    1   GR_FLAG = '0'B ;

  19722  4 002031   200027 450100                    STZ     GR_FLAG,,AUTO

  19722  4 002032                       PRO_OPTS_LO* null
      757    19723
      758    19724    1   PRO_OPTS_LOOP: ;
      759    19725    2   DO WHILE ( MORE ) ;

  19725  4 002032   000000 234000 2                  SZN     MORE
         4 002033   010660 605000 4                  TPL     s:21484

      760    19726
      761    19727                                                              /*  Set prompt  */
      762    19728    2      CALL ASB$SET_PROMPT ( %PROMPT_OPT ) ;

  19728  4 002034   000024 630400 5                  EPPR0   20
         4 002035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002036   000000 701000 xent               TSX1    ASB$SET_PROMPT
         4 002037   000000 011000                    NOP     0

      763    19729    2      P_PCB.ROOT$ = ADDR( PRO_OPTS_LIST ) ;

  19729  4 002040   000025 236000 5                  LDQ     21
         4 002041   000001 756000 xsym               STQ     P_PCB+1

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:195  
      764    19730    2      CALL ASB$READ_SI( IN_BUF, ARS ) ;

  19730  4 002042   200021 630500                    EPPR0   ARS,,AUTO
         4 002043   200221 450500                    STP0    PINC_INC+2,,AUTO
         4 002044   000026 236000 5                  LDQ     22
         4 002045   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 002046   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 002047   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 002050   000000 701000 xent               TSX1    ASB$READ_SI
         4 002051   000000 011000                    NOP     0

      765    19731    2      P_PCB.NCHARS = ARS ;

  19731  4 002052   200021 235100                    LDA     ARS,,AUTO
         4 002053   000011 755000 xsym               STA     P_PCB+9

      766    19732    2      CALL X$PARSE( P_PCB ) ALTRET( OPTS_ERR ) ;

  19732  4 002054   000002 630400 5                  EPPR0   2
         4 002055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002056   000000 701000 xent               TSX1    X$PARSE
         4 002057   010652 702000 4                  TSX2    OPTS_ERR

      767    19733
      768    19734    2      NODE$ = P_PCB.OUT$ ;

  19734  4 002060   000003 236000 xsym               LDQ     P_PCB+3
         4 002061   000000 756000 xsym               STQ     NODE$

      769    19735    2      I = P$NODE.SUBNODES ;

  19735  4 002062   000000 470400 xsym               LDP0    NODE$
         4 002063   000001 236100                    LDQ     1,,PR0
         4 002064   000022 772000                    QRL     18
         4 002065   200013 756100                    STQ     I,,AUTO

      770    19736
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:196  
      771    19737    3      DO J = 0 TO I-1 ;

  19737  4 002066   200014 450100                    STZ     J,,AUTO
         4 002067   010646 710000 4                  TRA     NEXT_PRO_OPT+3

      772    19738    3         PTR$ = P$NODE.SUBLK$(J) ;

  19738  4 002070   000000 470400 xsym               LDP0    NODE$
         4 002071   200014 720100                    LXL0    J,,AUTO
         4 002072   000003 236110                    LDQ     3,X0,PR0
         4 002073   200030 756100                    STQ     PTR$,,AUTO

      773    19739    3         CODE = PTR$ -> P$NODE.CODE ;

  19739  4 002074   200030 471500                    LDP1    PTR$,,AUTO
         4 002075   100000 236100                    LDQ     0,,PR1
         4 002076   777777 376007                    ANQ     -1,DL
         4 002077   000000 756000 xsym               STQ     CODE

      774    19740
      775    19741    4         DO CASE ( CODE ) ;

  19741  4 002100   000430 136007                    SBLQ    280,DL
         4 002101   000027 116007                    CMPQ    23,DL
         4 002102   002104 602006 4                  TNC     s:19741+4,QL
         4 002103   002150 710000 4                  TRA     s:19761
         4 002104   002147 710000 4                  TRA     s:19757
         4 002105   002150 710000 4                  TRA     s:19761
         4 002106   002217 710000 4                  TRA     s:19789
         4 002107   002147 710000 4                  TRA     s:19757
         4 002110   002150 710000 4                  TRA     s:19761
         4 002111   002150 710000 4                  TRA     s:19761
         4 002112   002150 710000 4                  TRA     s:19761
         4 002113   002150 710000 4                  TRA     s:19761
         4 002114   002150 710000 4                  TRA     s:19761
         4 002115   002150 710000 4                  TRA     s:19761
         4 002116   002150 710000 4                  TRA     s:19761
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:197  
         4 002117   002150 710000 4                  TRA     s:19761
         4 002120   002150 710000 4                  TRA     s:19761
         4 002121   002150 710000 4                  TRA     s:19761
         4 002122   002150 710000 4                  TRA     s:19761
         4 002123   002150 710000 4                  TRA     s:19761
         4 002124   002150 710000 4                  TRA     s:19761
         4 002125   002150 710000 4                  TRA     s:19761
         4 002126   002150 710000 4                  TRA     s:19761
         4 002127   002150 710000 4                  TRA     s:19761
         4 002130   002143 710000 4                  TRA     s:19753
         4 002131   002137 710000 4                  TRA     s:19750
         4 002132   002133 710000 4                  TRA     s:19747

      776    19742
      777    19743    4            CASE ( 282 /* L_PRO_EOL */ ) ;

      778    19744
      779    19745
      780    19746    4            CASE ( 302 /* HELP_VAL */ ) ;

      781    19747    4               CALL ASH$HELP;

  19747  4 002133   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 002134   000000 701000 xent               TSX1    ASH$HELP
         4 002135   000000 011000                    NOP     0
         4 002136   002217 710000 4                  TRA     s:19789

      782    19748
      783    19749    4            CASE ( 301 /* QUESTION_VAL */ ) ;

      784    19750    4               CALL ASH$QUEST;

  19750  4 002137   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 002140   000000 701000 xent               TSX1    ASH$QUEST
         4 002141   000000 011000                    NOP     0
         4 002142   002217 710000 4                  TRA     s:19789

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:198  
      785    19751
      786    19752    4            CASE ( 300 /* DQUESTION_VAL */ ) ;

      787    19753    4               CALL ASH$DQUEST ;

  19753  4 002143   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 002144   000000 701000 xent               TSX1    ASH$DQUEST
         4 002145   000000 011000                    NOP     0
         4 002146   002217 710000 4                  TRA     s:19789

      788    19754
      789    19755    4            CASE ( 280 /* L_PRO_END */ ,

      790    19756    4                    283 /* L_PRO_BLANK */ ) ;
      791    19757    4               RETURN ;

  19757  4 002147   000000 702200 xent               TSX2  ! X66_ARET

      792    19758                                                              /*   Check to see if
      793    19759                                                                   options are legal.   */
      794    19760    4            CASE (  ELSE );

      795    19761    4               OPTION.TEXT = ASL_PRO_OPT_TBL.HDR(CODE);

  19761  4 002150   000000 235000 xsym               LDA     CODE
         4 002151   000005 735000                    ALS     5
         4 002152   040100 100405                    MLR     fill='040'O
         4 002153   000000 200024 xsym               ADSC9   ASL_PRO_OPT_TBL,A        cn=1,n=20
         4 002154   200140 200037                    ADSC9   OPTION,,AUTO             cn=1,n=31

      796    19762    4               CALL INDEX( K, '  ', OPTION.TEXT );

  19762  4 002155   000000 120500                    SCD
         4 002156   200140 200037                    ADSC9   OPTION,,AUTO             cn=1,n=31
         4 002157   000075 000002 3                  ADSC9   KL_CCHR+61               cn=0,n=2
         4 002160   200015 000100                    ARG     K,,AUTO
         4 002161   002163 607000 4                  TTF     s:19763
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:199  
         4 002162   200015 054100                    AOS     K,,AUTO

      797    19763    4               OPTION.COUNT = K;

  19763  4 002163   200015 236100                    LDQ     K,,AUTO
         4 002164   000033 736000                    QLS     27
         4 002165   200140 552140                    STBQ    OPTION,'40'O,AUTO

      798    19764    5               IF (PRO_TYPE & ASL_PRO_OPT_TBL.TYP(CODE)) ~= PRO_TYPE THEN DO;

  19764  4 002166   000000 236000 xsym               LDQ     CODE
         4 002167   000003 736000                    QLS     3
         4 002170   000005 236006 xsym               LDQ     ASL_PRO_OPT_TBL+5,QL
         4 002171   000011 736000                    QLS     9
         4 002172   777000 376003                    ANQ     -512,DU
         4 002173   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 002174   200153 236100                    LDQ     PRO_TYPE,,AUTO
         4 002175   777000 376003                    ANQ     -512,DU
         4 002176   200220 376100                    ANQ     PINC_INC+1,,AUTO
         4 002177   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 002200   000100 106500                    CMPC    fill='000'O
         4 002201   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 002202   200153 000001                    ADSC9   PRO_TYPE,,AUTO           cn=0,n=1
         4 002203   002217 600000 4                  TZE     s:19789

      799    19765        /*E*  ERROR:    ASD-E$ILLEGALPROOPT-C
      800    19766              MESSAGE:  %U1 is an illegal option for %U2 type profiles.
      801    19767        */
      802    19768    5                  AS_FIELD1 = OPTION;

  19768  4 002204   000000 100500                    MLR     fill='000'O
         4 002205   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 002206   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

      803    19769    5                  AS_FIELD2 = PROFILE_TYPE;

  19769  4 002207   000000 100500                    MLR     fill='000'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:200  
         4 002210   200150 000013                    ADSC9   PROFILE_TYPE,,AUTO       cn=0,n=11
         4 002211   000000 000051 xsym               ADSC9   AS_FIELD2                cn=0,n=41

      804    19770                       %SCREAM( ERR#=E$ILLEGALPROOPT, LEVEL=ERROR, MID='D');

  19782  4 002212   000027 630400 5                  EPPR0   23
         4 002213   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 002214   000000 701000 xent               TSX1    ASH$ERROR
         4 002215   000000 011000                    NOP     0

      805    19785    5                  GOTO NEXT_PRO_OPT ;

  19785  4 002216   010643 710000 4                  TRA     NEXT_PRO_OPT

      806    19786    5                  END ;   /*  Then do   */
      807    19787    4            END;

      808    19788
      809    19789    4         IF PTR$ -> P$NODE.SUBNODES = 0 THEN DO;

  19789  4 002217   200030 470500                    LDP0    PTR$,,AUTO
         4 002220   000001 220100                    LDX0    1,,PR0
         4 002221   002231 601000 4                  TNZ     s:19795

      810    19790    4            OP_CODE = 1   /*  YES_VAL  */ ;

  19790  4 002222   000001 235007                    LDA     1,DL
         4 002223   200031 755100                    STA     OP_CODE,,AUTO

      811    19791    4            YES_NO_FLG = AS_TRUE;

  19791  4 002224   000000 236000 xsym               LDQ     AS_TRUE
         4 002225   400000 376003                    ANQ     -131072,DU
         4 002226   000001 756000 2                  STQ     YES_NO_FLG

      812    19792    4            YES_NO = AS_TRUE;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:201  
  19792  4 002227   000002 756000 2                  STQ     YES_NO

      813    19793    4            END;

  19793  4 002230   002256 710000 4                  TRA     s:19809

      814    19794    4         ELSE DO;

      815    19795    4            BLK$ = PTR$ -> P$NODE.SUBLK$(0) ;

  19795  4 002231   000003 236100                    LDQ     3,,PR0
         4 002232   200004 756100                    STQ     BLK$,,AUTO

      816    19796    4            OP_CODE = BLK$ -> P$NODE.CODE ;

  19796  4 002233   200004 471500                    LDP1    BLK$,,AUTO
         4 002234   100000 236100                    LDQ     0,,PR1
         4 002235   777777 376007                    ANQ     -1,DL
         4 002236   200031 756100                    STQ     OP_CODE,,AUTO

      817    19797    4            IF OP_CODE=7 /* DC */  OR OP_CODE=0 /* TRY */

  19797  4 002237   000007 116007                    CMPQ    7,DL
         4 002240   002243 600000 4                  TZE     s:19798
         4 002241   000000 116003                    CMPQ    0,DU
         4 002242   002246 601000 4                  TNZ     s:19799

      818    19798    4            THEN YES_NO_FLG='01'B;

  19798  4 002243   200000 236003                    LDQ     65536,DU
         4 002244   000001 756000 2                  STQ     YES_NO_FLG
         4 002245   002256 710000 4                  TRA     s:19809

      819    19799    5            ELSE IF OP_CODE=1   /*  YES_VAL  */ THEN DO ;

  19799  4 002246   000001 116007                    CMPQ    1,DL
         4 002247   002254 601000 4                  TNZ     s:19804
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:202  

      820    19800    5                  YES_NO_FLG = '1'B ;

  19800  4 002250   400000 236003                    LDQ     -131072,DU
         4 002251   000001 756000 2                  STQ     YES_NO_FLG

      821    19801    5                  YES_NO = '1'B ;

  19801  4 002252   000002 756000 2                  STQ     YES_NO

      822    19802    5                  END;

  19802  4 002253   002256 710000 4                  TRA     s:19809

      823    19803    5               ELSE DO ;

      824    19804    5                  YES_NO = '0'B ;

  19804  4 002254   000002 450000 2                  STZ     YES_NO

      825    19805    5                  YES_NO_FLG='0'B;

  19805  4 002255   000001 450000 2                  STZ     YES_NO_FLG

      826    19806    5                  END;

      827    19807    4            END ;   /*  Else do  */

      828    19808
      829    19809    4         DO CASE ( CODE ) ;

  19809  4 002256   000000 235000 xsym               LDA     CODE
         4 002257   000430 115007                    CMPA    280,DL
         4 002260   002262 602005 4                  TNC     s:19809+4,AL
         4 002261   010643 710000 4                  TRA     NEXT_PRO_OPT
         4 002262   003025 710000 4                  TRA     s:19857
         4 002263   003343 710000 4                  TRA     s:19973
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:203  
         4 002264   003032 710000 4                  TRA     s:19860
         4 002265   003305 710000 4                  TRA     s:19955
         4 002266   003350 710000 4                  TRA     s:19976
         4 002267   003324 710000 4                  TRA     s:19964
         4 002270   003312 710000 4                  TRA     s:19958
         4 002271   004121 710000 4                  TRA     s:20226
         4 002272   004126 710000 4                  TRA     s:20229
         4 002273   010643 710000 4                  TRA     NEXT_PRO_OPT
         4 002274   003300 710000 4                  TRA     s:19952
         4 002275   003266 710000 4                  TRA     s:19946
         4 002276   003273 710000 4                  TRA     s:19949
         4 002277   003331 710000 4                  TRA     s:19967
         4 002300   003244 710000 4                  TRA     s:19936
         4 002301   002736 710000 4                  TRA     s:19824
         4 002302   003044 710000 4                  TRA     s:19866
         4 002303   003020 710000 4                  TRA     s:19854
         4 002304   003013 710000 4                  TRA     s:19851
         4 002305   003422 710000 4                  TRA     s:20025
         4 002306   010643 710000 4                  TRA     NEXT_PRO_OPT
         4 002307   003317 710000 4                  TRA     s:19961
         4 002310   003006 710000 4                  TRA     s:19848
         4 002311   003355 710000 4                  TRA     s:19979
         4 002312   005030 710000 4                  TRA     s:20446
         4 002313   003114 710000 4                  TRA     s:19890
         4 002314   003237 710000 4                  TRA     s:19933
         4 002315   003433 710000 4                  TRA     s:20029
         4 002316   002750 710000 4                  TRA     s:19830
         4 002317   003056 710000 4                  TRA     s:19872
         4 002320   002743 710000 4                  TRA     s:19827
         4 002321   003063 710000 4                  TRA     s:19875
         4 002322   003444 710000 4                  TRA     s:20033
         4 002323   003232 710000 4                  TRA     s:19930
         4 002324   003070 710000 4                  TRA     s:19878
         4 002325   003037 710000 4                  TRA     s:19863
         4 002326   003051 710000 4                  TRA     s:19869
         4 002327   002731 710000 4                  TRA     s:19821
         4 002330   003075 710000 4                  TRA     s:19881
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:204  
         4 002331   002724 710000 4                  TRA     s:19818
         4 002332   002717 710000 4                  TRA     s:19815
         4 002333   002712 710000 4                  TRA     s:19812
         4 002334   003102 710000 4                  TRA     s:19884
         4 002335   003336 710000 4                  TRA     s:19970
         4 002336   003451 710000 4                  TRA     s:20036
         4 002337   003001 710000 4                  TRA     s:19845
         4 002340   003144 710000 4                  TRA     s:19902
         4 002341   004752 710000 4                  TRA     s:20429
         4 002342   004737 710000 4                  TRA     s:20425
         4 002343   005002 710000 4                  TRA     s:20438
         4 002344   004015 710000 4                  TRA     s:20194
         4 002345   003713 710000 4                  TRA     s:20152
         4 002346   003207 710000 4                  TRA     s:19921
         4 002347   003645 710000 4                  TRA     s:20134
         4 002350   003670 710000 4                  TRA     s:20143
         4 002351   003571 710000 4                  TRA     s:20108
         4 002352   003456 710000 4                  TRA     s:20039
         4 002353   004767 710000 4                  TRA     s:20434
         4 002354   003121 710000 4                  TRA     s:19893
         4 002355   003501 710000 4                  TRA     s:20048
         4 002356   004571 710000 4                  TRA     s:20376
         4 002357   004502 710000 4                  TRA     s:20356
         4 002360   004604 710000 4                  TRA     s:20380
         4 002361   004556 710000 4                  TRA     s:20372
         4 002362   004530 710000 4                  TRA     s:20364
         4 002363   004515 710000 4                  TRA     s:20360
         4 002364   004543 710000 4                  TRA     s:20368
         4 002365   004636 710000 4                  TRA     s:20391
         4 002366   004644 710000 4                  TRA     s:20394
         4 002367   004630 710000 4                  TRA     s:20388
         4 002370   004652 710000 4                  TRA     s:20397
         4 002371   004660 710000 4                  TRA     s:20400
         4 002372   004666 710000 4                  TRA     s:20403
         4 002373   004674 710000 4                  TRA     s:20406
         4 002374   004702 710000 4                  TRA     s:20409
         4 002375   004710 710000 4                  TRA     s:20412
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:205  
         4 002376   004716 710000 4                  TRA     s:20415
         4 002377   004724 710000 4                  TRA     s:20418
         4 002400   003537 710000 4                  TRA     s:20080
         4 002401   003506 710000 4                  TRA     s:20051
         4 002402   005105 710000 4                  TRA     s:20465
         4 002403   005116 710000 4                  TRA     s:20469
         4 002404   004065 710000 4                  TRA     s:20213
         4 002405   004053 710000 4                  TRA     s:20207
         4 002406   004060 710000 4                  TRA     s:20210
         4 002407   003374 710000 4                  TRA     s:19988
         4 002410   004732 710000 4                  TRA     s:20422
         4 002411   004072 710000 4                  TRA     s:20216
         4 002412   005127 710000 4                  TRA     s:20473
         4 002413   004243 710000 4                  TRA     s:20262
         4 002414   004307 710000 4                  TRA     s:20277
         4 002415   004257 710000 4                  TRA     s:20267
         4 002416   004177 710000 4                  TRA     s:20247
         4 002417   004273 710000 4                  TRA     s:20272
         4 002420   004147 710000 4                  TRA     s:20237
         4 002421   004213 710000 4                  TRA     s:20252
         4 002422   004323 710000 4                  TRA     s:20282
         4 002423   004227 710000 4                  TRA     s:20257
         4 002424   004417 710000 4                  TRA     s:20307
         4 002425   004337 710000 4                  TRA     s:20287
         4 002426   004353 710000 4                  TRA     s:20292
         4 002427   004133 710000 4                  TRA     s:20232
         4 002430   004163 710000 4                  TRA     s:20242
         4 002431   004403 710000 4                  TRA     s:20302
         4 002432   004367 710000 4                  TRA     s:20297
         4 002433   005134 710000 4                  TRA     s:20476
         4 002434   005141 710000 4                  TRA     s:20479
         4 002435   005072 710000 4                  TRA     s:20461
         4 002436   005035 710000 4                  TRA     s:20449
         4 002437   005165 710000 4                  TRA     s:20491
         4 002440   005200 710000 4                  TRA     s:20495
         4 002441   005213 710000 4                  TRA     s:20500
         4 002442   005242 710000 4                  TRA     s:20507
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:206  
         4 002443   005146 710000 4                  TRA     s:20482
         4 002444   005247 710000 4                  TRA     s:20510
         4 002445   005254 710000 4                  TRA     s:20513
         4 002446   005153 710000 4                  TRA     s:20485
         4 002447   005160 710000 4                  TRA     s:20488
         4 002450   005271 710000 4                  TRA     s:20519
         4 002451   005320 710000 4                  TRA     s:20526
         4 002452   005624 710000 4                  TRA     s:20613
         4 002453   005611 710000 4                  TRA     s:20608
         4 002454   006143 710000 4                  TRA     s:20808
         4 002455   006166 710000 4                  TRA     s:20817
         4 002456   006173 710000 4                  TRA     s:20820
         4 002457   006205 710000 4                  TRA     s:20824
         4 002460   006217 710000 4                  TRA     s:20828
         4 002461   006233 710000 4                  TRA     s:20833
         4 002462   006247 710000 4                  TRA     s:20838
         4 002463   006264 710000 4                  TRA     s:20843
         4 002464   006271 710000 4                  TRA     s:20846
         4 002465   006314 710000 4                  TRA     s:20855
         4 002466   006330 710000 4                  TRA     s:20860
         4 002467   006344 710000 4                  TRA     s:20865
         4 002470   006360 710000 4                  TRA     s:20870
         4 002471   006371 710000 4                  TRA     s:20874
         4 002472   006402 710000 4                  TRA     s:20878
         4 002473   006413 710000 4                  TRA     s:20882
         4 002474   006424 710000 4                  TRA     s:20886
         4 002475   006435 710000 4                  TRA     s:20890
         4 002476   006446 710000 4                  TRA     s:20894
         4 002477   006457 710000 4                  TRA     s:20898
         4 002500   006506 710000 4                  TRA     s:20925
         4 002501   006535 710000 4                  TRA     s:20948
         4 002502   006564 710000 4                  TRA     s:20971
         4 002503   006610 710000 4                  TRA     s:20997
         4 002504   006635 710000 4                  TRA     s:21019
         4 002505   006661 710000 4                  TRA     s:21041
         4 002506   006675 710000 4                  TRA     s:21046
         4 002507   006711 710000 4                  TRA     s:21051
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:207  
         4 002510   006725 710000 4                  TRA     s:21056
         4 002511   006741 710000 4                  TRA     s:21061
         4 002512   006755 710000 4                  TRA     s:21066
         4 002513   006762 710000 4                  TRA     s:21069
         4 002514   006767 710000 4                  TRA     s:21072
         4 002515   006774 710000 4                  TRA     s:21082
         4 002516   006774 710000 4                  TRA     s:21082
         4 002517   006774 710000 4                  TRA     s:21082
         4 002520   006774 710000 4                  TRA     s:21082
         4 002521   006774 710000 4                  TRA     s:21082
         4 002522   006774 710000 4                  TRA     s:21082
         4 002523   006774 710000 4                  TRA     s:21082
         4 002524   004617 710000 4                  TRA     s:20384
         4 002525   007104 710000 4                  TRA     s:21107
         4 002526   003107 710000 4                  TRA     s:19887
         4 002527   003362 710000 4                  TRA     s:19982
         4 002530   003367 710000 4                  TRA     s:19985
         4 002531   002755 710000 4                  TRA     s:19833
         4 002532   010643 710000 4                  TRA     NEXT_PRO_OPT
         4 002533   006021 710000 4                  TRA     s:20772
         4 002534   006026 710000 4                  TRA     s:20775
         4 002535   006033 710000 4                  TRA     s:20779
         4 002536   006062 710000 4                  TRA     s:20786
         4 002537   006067 710000 4                  TRA     s:20789
         4 002540   006074 710000 4                  TRA     s:20792
         4 002541   006101 710000 4                  TRA     s:20796
         4 002542   005520 710000 4                  TRA     s:20581
         4 002543   006130 710000 4                  TRA     s:20803
         4 002544   007111 710000 4                  TRA     s:21110
         4 002545   010637 710000 4                  TRA     s:21471
         4 002546   004466 710000 4                  TRA     s:20350
         4 002547   010423 710000 4                  TRA     s:21393
         4 002550   010437 710000 4                  TRA     s:21398
         4 002551   010451 710000 4                  TRA     s:21404
         4 002552   010456 710000 4                  TRA     s:21407
         4 002553   010463 710000 4                  TRA     s:21410
         4 002554   010470 710000 4                  TRA     s:21413
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:208  
         4 002555   010475 710000 4                  TRA     s:21416
         4 002556   010502 710000 4                  TRA     s:21419
         4 002557   010507 710000 4                  TRA     s:21422
         4 002560   010514 710000 4                  TRA     s:21425
         4 002561   010521 710000 4                  TRA     s:21428
         4 002562   010526 710000 4                  TRA     s:21431
         4 002563   010533 710000 4                  TRA     s:21434
         4 002564   010556 710000 4                  TRA     s:21443
         4 002565   010604 710000 4                  TRA     s:21456
         4 002566   010607 710000 4                  TRA     s:21459
         4 002567   010614 710000 4                  TRA     s:21462
         4 002570   010444 710000 4                  TRA     s:21401
         4 002571   005652 710000 4                  TRA     s:20623
         4 002572   005427 710000 4                  TRA     s:20554
         4 002573   005637 710000 4                  TRA     s:20618
         4 002574   005576 710000 4                  TRA     s:20603
         4 002575   005563 710000 4                  TRA     s:20598
         4 002576   005457 710000 4                  TRA     s:20566
         4 002577   005444 710000 4                  TRA     s:20561
         4 002600   005505 710000 4                  TRA     s:20576
         4 002601   005472 710000 4                  TRA     s:20571
         4 002602   005550 710000 4                  TRA     s:20593
         4 002603   005525 710000 4                  TRA     s:20585
         4 002604   005414 710000 4                  TRA     s:20549
         4 002605   005401 710000 4                  TRA     s:20544
         4 002606   005015 710000 4                  TRA     s:20442
         4 002607   002762 710000 4                  TRA     s:19836
         4 002610   002767 710000 4                  TRA     s:19839
         4 002611   002774 710000 4                  TRA     s:19842
         4 002612   003251 710000 4                  TRA     s:19938
         4 002613   003256 710000 4                  TRA     s:19941
         4 002614   003736 710000 4                  TRA     s:20161
         4 002615   007125 710000 4                  TRA     s:21115
         4 002616   007147 710000 4                  TRA     s:21140
         4 002617   007161 710000 4                  TRA     s:21144
         4 002620   007173 710000 4                  TRA     s:21148
         4 002621   007205 710000 4                  TRA     s:21152
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:209  
         4 002622   007217 710000 4                  TRA     s:21156
         4 002623   007231 710000 4                  TRA     s:21160
         4 002624   007243 710000 4                  TRA     s:21164
         4 002625   007255 710000 4                  TRA     s:21168
         4 002626   007267 710000 4                  TRA     s:21172
         4 002627   007325 710000 4                  TRA     s:21184
         4 002630   007313 710000 4                  TRA     s:21180
         4 002631   007301 710000 4                  TRA     s:21176
         4 002632   007337 710000 4                  TRA     s:21188
         4 002633   007351 710000 4                  TRA     s:21192
         4 002634   007363 710000 4                  TRA     s:21196
         4 002635   007421 710000 4                  TRA     s:21208
         4 002636   007407 710000 4                  TRA     s:21204
         4 002637   007375 710000 4                  TRA     s:21200
         4 002640   007433 710000 4                  TRA     s:21212
         4 002641   007445 710000 4                  TRA     s:21216
         4 002642   007457 710000 4                  TRA     s:21220
         4 002643   007471 710000 4                  TRA     s:21224
         4 002644   007503 710000 4                  TRA     s:21228
         4 002645   007550 710000 4                  TRA     s:21247
         4 002646   007562 710000 4                  TRA     s:21251
         4 002647   010643 710000 4                  TRA     NEXT_PRO_OPT
         4 002650   010643 710000 4                  TRA     NEXT_PRO_OPT
         4 002651   007633 710000 4                  TRA     s:21266
         4 002652   007645 710000 4                  TRA     s:21270
         4 002653   007657 710000 4                  TRA     s:21274
         4 002654   007671 710000 4                  TRA     s:21278
         4 002655   007703 710000 4                  TRA     s:21282
         4 002656   007727 710000 4                  TRA     s:21290
         4 002657   007741 710000 4                  TRA     s:21294
         4 002660   007753 710000 4                  TRA     s:21298
         4 002661   007777 710000 4                  TRA     s:21306
         4 002662   010011 710000 4                  TRA     s:21310
         4 002663   010035 710000 4                  TRA     s:21318
         4 002664   010023 710000 4                  TRA     s:21314
         4 002665   010052 710000 4                  TRA     s:21322
         4 002666   010067 710000 4                  TRA     s:21326
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:210  
         4 002667   010104 710000 4                  TRA     s:21330
         4 002670   010121 710000 4                  TRA     s:21334
         4 002671   010136 710000 4                  TRA     s:21338
         4 002672   010153 710000 4                  TRA     s:21342
         4 002673   010170 710000 4                  TRA     s:21346
         4 002674   010205 710000 4                  TRA     s:21350
         4 002675   010221 710000 4                  TRA     s:21354
         4 002676   010236 710000 4                  TRA     s:21358
         4 002677   010253 710000 4                  TRA     s:21362
         4 002700   010270 710000 4                  TRA     s:21366
         4 002701   010305 710000 4                  TRA     s:21370
         4 002702   010322 710000 4                  TRA     s:21374
         4 002703   010337 710000 4                  TRA     s:21378
         4 002704   010354 710000 4                  TRA     s:21382
         4 002705   010371 710000 4                  TRA     s:21386
         4 002706   010406 710000 4                  TRA     s:21390
         4 002707   007715 710000 4                  TRA     s:21286
         4 002710   007765 710000 4                  TRA     s:21302
         4 002711   010601 710000 4                  TRA     s:21452

      830    19810
      831    19811    4            CASE (  41 /* TABSIM */ ) ;

      832    19812    4               TCTL$ -> VLP$TRMCTRL.TABSIM# = YES_NO_FLG;

  19812  4 002712   000043 471400 2                  LDP1    TCTL$
         4 002713   003100 060400                    CSL     bolr='003'O
         4 002714   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002715   100000 010002                    BDSC    0,,PR1                   by=0,bit=1,n=2
         4 002716   010643 710000 4                  TRA     NEXT_PRO_OPT

      833    19813
      834    19814    4            CASE (  40 /* TABRELATIVE */ ) ;

      835    19815    4               TCTL$ -> VLP$TRMCTRL.TABRELATIVE# = YES_NO_FLG;

  19815  4 002717   000043 471400 2                  LDP1    TCTL$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:211  
         4 002720   003100 060400                    CSL     bolr='003'O
         4 002721   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002722   100000 030002                    BDSC    0,,PR1                   by=0,bit=3,n=2
         4 002723   010643 710000 4                  TRA     NEXT_PRO_OPT

      836    19816
      837    19817    4            CASE (  39 /* SPACEINSERT */ ) ;

      838    19818    4               TCTL$ -> VLP$TRMCTRL.SPACEINSERT# = YES_NO_FLG;

  19818  4 002724   000043 471400 2                  LDP1    TCTL$
         4 002725   003100 060400                    CSL     bolr='003'O
         4 002726   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002727   100000 050002                    BDSC    0,,PR1                   by=0,bit=5,n=2
         4 002730   010643 710000 4                  TRA     NEXT_PRO_OPT

      839    19819
      840    19820    4            CASE (  37 /* SENDBKSPACE */ ) ;

      841    19821    4               TCTL$ -> VLP$TRMCTRL.SENDBKSPACE# = YES_NO_FLG;

  19821  4 002731   000043 471400 2                  LDP1    TCTL$
         4 002732   003100 060400                    CSL     bolr='003'O
         4 002733   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002734   100000 070002                    BDSC    0,,PR1                   by=0,bit=7,n=2
         4 002735   010643 710000 4                  TRA     NEXT_PRO_OPT

      842    19822
      843    19823    4            CASE (  15 /* DISPINPUT */ ) ;

      844    19824    4               TCTL$ -> VLP$TRMCTRL.DISPINPUT# = YES_NO_FLG;

  19824  4 002736   000043 471400 2                  LDP1    TCTL$
         4 002737   003100 060400                    CSL     bolr='003'O
         4 002740   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002741   100000 210002                    BDSC    0,,PR1                   by=1,bit=1,n=2
         4 002742   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:212  

      845    19825
      846    19826    4            CASE (  30 /* PARITYCHECK */ ) ;

      847    19827    4               TCTL$ -> VLP$TRMCTRL.PARITYCHECK# = YES_NO_FLG;

  19827  4 002743   000043 471400 2                  LDP1    TCTL$
         4 002744   003100 060400                    CSL     bolr='003'O
         4 002745   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002746   100000 230002                    BDSC    0,,PR1                   by=1,bit=3,n=2
         4 002747   010643 710000 4                  TRA     NEXT_PRO_OPT

      848    19828
      849    19829    4            CASE (  28 /* OUTDISCARDPUT */ ) ;

      850    19830    4               TCTL$ -> VLP$TRMCTRL.OUTPUTDISCARD# = YES_NO_FLG;

  19830  4 002750   000043 471400 2                  LDP1    TCTL$
         4 002751   003100 060400                    CSL     bolr='003'O
         4 002752   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002753   100000 270002                    BDSC    0,,PR1                   by=1,bit=7,n=2
         4 002754   010643 710000 4                  TRA     NEXT_PRO_OPT

      851    19831
      852    19832    4            CASE (  167 /* PARKCURSOR */ ) ;

      853    19833    4               TCTL$ -> VLP$TRMCTRL.PARKCURSOR# = YES_NO_FLG;

  19833  4 002755   000043 471400 2                  LDP1    TCTL$
         4 002756   003100 060400                    CSL     bolr='003'O
         4 002757   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002760   100003 410002                    BDSC    3,,PR1                   by=2,bit=1,n=2
         4 002761   010643 710000 4                  TRA     NEXT_PRO_OPT

      854    19834
      855    19835    4            CASE (  213 /* L_CURSORREAD */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:213  
      856    19836    4               TCTL$ -> VLP$TRMCTRL.CURSORREAD# = YES_NO_FLG;

  19836  4 002762   000043 471400 2                  LDP1    TCTL$
         4 002763   003100 060400                    CSL     bolr='003'O
         4 002764   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002765   100003 430002                    BDSC    3,,PR1                   by=2,bit=3,n=2
         4 002766   010643 710000 4                  TRA     NEXT_PRO_OPT

      857    19837
      858    19838    4            CASE (  214 /* L_AUTOCURSOR */ ) ;

      859    19839    4               TCTL$ -> VLP$TRMCTRL.AUTOCURSOR# = YES_NO_FLG;

  19839  4 002767   000043 471400 2                  LDP1    TCTL$
         4 002770   003100 060400                    CSL     bolr='003'O
         4 002771   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002772   100003 470002                    BDSC    3,,PR1                   by=2,bit=7,n=2
         4 002773   010643 710000 4                  TRA     NEXT_PRO_OPT

      860    19840
      861    19841    4            CASE (  215 /* L_KEEPTYPAHD */ ) ;

      862    19842    4               TCTL$ -> VLP$TRMCTRL.KEEPTYPAHD# = YES_NO_FLG;

  19842  4 002774   000043 471400 2                  LDP1    TCTL$
         4 002775   003100 060400                    CSL     bolr='003'O
         4 002776   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 002777   100003 450002                    BDSC    3,,PR1                   by=2,bit=5,n=2
         4 003000   010643 710000 4                  TRA     NEXT_PRO_OPT

      863    19843
      864    19844    4            CASE (  45 /* UPPERCASE */ ) ;

      865    19845    4               TCTL$ -> VLP$TRMCTRL.UPPERCASE# = YES_NO_FLG;

  19845  4 003001   000043 471400 2                  LDP1    TCTL$
         4 003002   003100 060400                    CSL     bolr='003'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:214  
         4 003003   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003004   100000 410002                    BDSC    0,,PR1                   by=2,bit=1,n=2
         4 003005   010643 710000 4                  TRA     NEXT_PRO_OPT

      866    19846
      867    19847    4            CASE (  22 /* LOWERCASE */ ) ;

      868    19848    4               TCTL$ -> VLP$TRMCTRL.LOWERCASE# = YES_NO_FLG;

  19848  4 003006   000043 471400 2                  LDP1    TCTL$
         4 003007   003100 060400                    CSL     bolr='003'O
         4 003010   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003011   100000 430002                    BDSC    0,,PR1                   by=2,bit=3,n=2
         4 003012   010643 710000 4                  TRA     NEXT_PRO_OPT

      869    19849
      870    19850    4            CASE (  18 /* HALFDUXPAPERTAPE */ ) ;

      871    19851    4               TCTL$ -> VLP$TRMCTRL.HALFDUXPAPERTAPE# = YES_NO_FLG;

  19851  4 003013   000043 471400 2                  LDP1    TCTL$
         4 003014   003100 060400                    CSL     bolr='003'O
         4 003015   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003016   100000 470002                    BDSC    0,,PR1                   by=2,bit=7,n=2
         4 003017   010643 710000 4                  TRA     NEXT_PRO_OPT

      872    19852
      873    19853    4            CASE (  17 /* FULLDUXPAPERTAPE */ ) ;

      874    19854    4               TCTL$ -> VLP$TRMCTRL.FULLDUXPAPERTAPE# = YES_NO_FLG;

  19854  4 003020   000043 471400 2                  LDP1    TCTL$
         4 003021   003100 060400                    CSL     bolr='003'O
         4 003022   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003023   100000 450002                    BDSC    0,,PR1                   by=2,bit=5,n=2
         4 003024   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:215  
      875    19855
      876    19856    4            CASE (  0 /* ACTONTRN */ ) ;

      877    19857    4               TCTL$ -> VLP$TRMCTRL.ACTONTRN# = YES_NO_FLG;

  19857  4 003025   000043 471400 2                  LDP1    TCTL$
         4 003026   003100 060400                    CSL     bolr='003'O
         4 003027   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003030   100000 610002                    BDSC    0,,PR1                   by=3,bit=1,n=2
         4 003031   010643 710000 4                  TRA     NEXT_PRO_OPT

      878    19858
      879    19859    4            CASE (  2 /* APLLCNRM */ ) ;

      880    19860    4               TCTL$ -> VLP$TRMCTRL.APLLCNRM# = YES_NO_FLG;

  19860  4 003032   000043 471400 2                  LDP1    TCTL$
         4 003033   003100 060400                    CSL     bolr='003'O
         4 003034   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003035   100000 630002                    BDSC    0,,PR1                   by=3,bit=3,n=2
         4 003036   010643 710000 4                  TRA     NEXT_PRO_OPT

      881    19861
      882    19862    4            CASE (  35 /* RETYPOVR */ ) ;

      883    19863    4               TCTL$ -> VLP$TRMCTRL.RETYPOVR# = YES_NO_FLG;

  19863  4 003037   000043 471400 2                  LDP1    TCTL$
         4 003040   003100 060400                    CSL     bolr='003'O
         4 003041   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003042   100000 650002                    BDSC    0,,PR1                   by=3,bit=5,n=2
         4 003043   010643 710000 4                  TRA     NEXT_PRO_OPT

      884    19864
      885    19865    4            CASE (  16 /* EDITOVR */ ) ;

      886    19866    4               TCTL$ -> VLP$TRMCTRL.EDITOVR# = YES_NO_FLG;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:216  

  19866  4 003044   000043 471400 2                  LDP1    TCTL$
         4 003045   003100 060400                    CSL     bolr='003'O
         4 003046   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003047   100000 670002                    BDSC    0,,PR1                   by=3,bit=7,n=2
         4 003050   010643 710000 4                  TRA     NEXT_PRO_OPT

      887    19867
      888    19868    4            CASE (  36 /* SCROLL */ ) ;

      889    19869    4               TCTL$ -> VLP$TRMCTRL.SCROLL# = YES_NO_FLG;

  19869  4 003051   000043 471400 2                  LDP1    TCTL$
         4 003052   003100 060400                    CSL     bolr='003'O
         4 003053   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003054   100001 010002                    BDSC    1,,PR1                   by=0,bit=1,n=2
         4 003055   010643 710000 4                  TRA     NEXT_PRO_OPT

      890    19870
      891    19871    4            CASE (  29 /* PAGEHALT */ ) ;

      892    19872    4               TCTL$ -> VLP$TRMCTRL.PAGEHALT# = YES_NO_FLG;

  19872  4 003056   000043 471400 2                  LDP1    TCTL$
         4 003057   003100 060400                    CSL     bolr='003'O
         4 003060   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003061   100001 030002                    BDSC    1,,PR1                   by=0,bit=3,n=2
         4 003062   010643 710000 4                  TRA     NEXT_PRO_OPT

      893    19873
      894    19874    4            CASE (  31 /* PRINTHALT */ ) ;

      895    19875    4               TCTL$ -> VLP$TRMCTRL.PRINTHALT# = YES_NO_FLG;

  19875  4 003063   000043 471400 2                  LDP1    TCTL$
         4 003064   003100 060400                    CSL     bolr='003'O
         4 003065   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:217  
         4 003066   100001 050002                    BDSC    1,,PR1                   by=0,bit=5,n=2
         4 003067   010643 710000 4                  TRA     NEXT_PRO_OPT

      896    19876
      897    19877    4            CASE (  34 /* RELPAGE */ ) ;

      898    19878    4               TCTL$ -> VLP$TRMCTRL.RELPAGE# = YES_NO_FLG;

  19878  4 003070   000043 471400 2                  LDP1    TCTL$
         4 003071   003100 060400                    CSL     bolr='003'O
         4 003072   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003073   100001 070002                    BDSC    1,,PR1                   by=0,bit=7,n=2
         4 003074   010643 710000 4                  TRA     NEXT_PRO_OPT

      899    19879
      900    19880    4            CASE (  38 /* SIMPERF */ ) ;

      901    19881    4               TCTL$ -> VLP$TRMCTRL.SIMPERF# = YES_NO_FLG;

  19881  4 003075   000043 471400 2                  LDP1    TCTL$
         4 003076   003100 060400                    CSL     bolr='003'O
         4 003077   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003100   100001 210002                    BDSC    1,,PR1                   by=1,bit=1,n=2
         4 003101   010643 710000 4                  TRA     NEXT_PRO_OPT

      902    19882
      903    19883    4            CASE (  42 /* TRUNCATE */ ) ;

      904    19884    4               TCTL$ -> VLP$TRMCTRL.TRUNCATE# = YES_NO_FLG;

  19884  4 003102   000043 471400 2                  LDP1    TCTL$
         4 003103   003100 060400                    CSL     bolr='003'O
         4 003104   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003105   100001 230002                    BDSC    1,,PR1                   by=1,bit=3,n=2
         4 003106   010643 710000 4                  TRA     NEXT_PRO_OPT

      905    19885
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:218  
      906    19886    4            CASE ( 164 /* WRAPPAGE */ ) ;

      907    19887    4               TCTL$ -> VLP$TRMCTRL.WRAPPAGE# = YES_NO_FLG;

  19887  4 003107   000043 471400 2                  LDP1    TCTL$
         4 003110   003100 060400                    CSL     bolr='003'O
         4 003111   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003112   100001 270002                    BDSC    1,,PR1                   by=1,bit=7,n=2
         4 003113   010643 710000 4                  TRA     NEXT_PRO_OPT

      908    19888
      909    19889    4            CASE (  25 /* NOOPTMIZ */ ) ;

      910    19890    4               TCTL$ -> VLP$TRMCTRL.NOOPTMIZ# = YES_NO_FLG;

  19890  4 003114   000043 471400 2                  LDP1    TCTL$
         4 003115   003100 060400                    CSL     bolr='003'O
         4 003116   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003117   100001 250002                    BDSC    1,,PR1                   by=1,bit=5,n=2
         4 003120   010643 710000 4                  TRA     NEXT_PRO_OPT

      911    19891
      912    19892    4            CASE (  58 /* SINPUTSZ */ ) ;

      913    19893    4               IF (OP_CODE = 7 /* DC */) THEN

  19893  4 003121   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003122   000007 116007                    CMPQ    7,DL
         4 003123   003131 601000 4                  TNZ     s:19897

      914    19894    4                  TCTL$ -> VLP$TRMCTRL.SINPUTSZ# = 255;

  19894  4 003124   000043 471400 2                  LDP1    TCTL$
         4 003125   003100 061400                    CSR     bolr='003'O
         4 003126   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003127   100001 410010                    BDSC    1,,PR1                   by=2,bit=1,n=8
         4 003130   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:219  

      915    19895    4               ELSE
      916    19896    5               DO;

      917    19897    5                  CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  19897  4 003131   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003132   200156 756100                    STQ     J+1,,AUTO
         4 003133   000031 236000 5                  LDQ     25
         4 003134   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003135   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003136   010643 702000 4                  TSX2    NEXT_PRO_OPT

      918    19898    5                  TCTL$ -> VLP$TRMCTRL.SINPUTSZ# = VAL ;

  19898  4 003137   000043 470400 2                  LDP0    TCTL$
         4 003140   003100 061500                    CSR     bolr='003'O
         4 003141   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 003142   000001 410010                    BDSC    1,,PR0                   by=2,bit=1,n=8

      919    19899    5                  END; /*  Else  */

  19899  4 003143   010643 710000 4                  TRA     NEXT_PRO_OPT

      920    19900
      921    19901    4            CASE (  46 /* AWIDTH */ ) ;

      922    19902    4               IF (OP_CODE = 7 /* DC */) THEN

  19902  4 003144   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003145   000007 116007                    CMPQ    7,DL
         4 003146   003157 601000 4                  TNZ     s:19909

      923    19903    5               DO;

      924    19904    5                  TATR$ -> VLP$TRMATTR.WIDTH# = 255;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:220  
  19904  4 003147   000044 471400 2                  LDP1    TATR$
         4 003150   003100 061400                    CSR     bolr='003'O
         4 003151   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003152   100001 610010                    BDSC    1,,PR1                   by=3,bit=1,n=8

      925    19905    5                  TATR$ -> VLP$TRMATTR.EXTWID# = AS_FALSE ;

  19905  4 003153   003100 060400                    CSL     bolr='003'O
         4 003154   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 003155   100001 050001                    BDSC    1,,PR1                   by=0,bit=5,n=1

      926    19906    5                  END; /*  If OP_CODE  */

  19906  4 003156   010643 710000 4                  TRA     NEXT_PRO_OPT

      927    19907    4               ELSE
      928    19908    5               DO;

      929    19909    5                  CALL GET_DEC_VAL( 508 ) ALTRET( NEXT_PRO_OPT );

  19909  4 003157   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003160   200156 756100                    STQ     J+1,,AUTO
         4 003161   000033 236000 5                  LDQ     27
         4 003162   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003163   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003164   010643 702000 4                  TSX2    NEXT_PRO_OPT

      930    19910    5                  IF (VAL > 254) THEN

  19910  4 003165   200020 235100                    LDA     VAL,,AUTO
         4 003166   000377 115007                    CMPA    255,DL
         4 003167   003177 602000 4                  TNC     s:19916

      931    19911    6                  DO;

      932    19912    6                     VAL = VAL - 254 ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:221  
  19912  4 003170   000376 135007                    SBLA    254,DL
         4 003171   200020 755100                    STA     VAL,,AUTO

      933    19913    6                     TATR$ -> VLP$TRMATTR.EXTWID# = AS_TRUE ;

  19913  4 003172   000044 470400 2                  LDP0    TATR$
         4 003173   003100 060400                    CSL     bolr='003'O
         4 003174   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 003175   000001 050001                    BDSC    1,,PR0                   by=0,bit=5,n=1

      934    19914    6                     END ; /*  Then do  */

  19914  4 003176   003203 710000 4                  TRA     s:19917

      935    19915    5                  ELSE
      936    19916    5                     TATR$ -> VLP$TRMATTR.EXTWID# = AS_FALSE ;

  19916  4 003177   000044 470400 2                  LDP0    TATR$
         4 003200   003100 060400                    CSL     bolr='003'O
         4 003201   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 003202   000001 050001                    BDSC    1,,PR0                   by=0,bit=5,n=1

      937    19917    5                  TATR$ -> VLP$TRMATTR.WIDTH# = VAL ;

  19917  4 003203   003100 061500                    CSR     bolr='003'O
         4 003204   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 003205   000001 610010                    BDSC    1,,PR0                   by=3,bit=1,n=8

      938    19918    5                  END; /*  Else  */

  19918  4 003206   010643 710000 4                  TRA     NEXT_PRO_OPT

      939    19919
      940    19920    4            CASE ( 52 /* HEIGHT */ ) ;

      941    19921    4               IF (OP_CODE = 7 /* DC */) THEN

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:222  
  19921  4 003207   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003210   000007 116007                    CMPQ    7,DL
         4 003211   003217 601000 4                  TNZ     s:19925

      942    19922    4                  TATR$ -> VLP$TRMATTR.HEIGHT# = 255;

  19922  4 003212   000044 471400 2                  LDP1    TATR$
         4 003213   003100 061400                    CSR     bolr='003'O
         4 003214   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003215   100002 010010                    BDSC    2,,PR1                   by=0,bit=1,n=8
         4 003216   010643 710000 4                  TRA     NEXT_PRO_OPT

      943    19923    4               ELSE
      944    19924    5               DO;

      945    19925    5                  CALL GET_DEC_VAL ( 999 ) ALTRET( NEXT_PRO_OPT );

  19925  4 003217   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003220   200156 756100                    STQ     J+1,,AUTO
         4 003221   000035 236000 5                  LDQ     29
         4 003222   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003223   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003224   010643 702000 4                  TSX2    NEXT_PRO_OPT

      946    19926    5                  TATR$ -> VLP$TRMATTR.HEIGHT# = VAL ;

  19926  4 003225   000044 470400 2                  LDP0    TATR$
         4 003226   003100 061500                    CSR     bolr='003'O
         4 003227   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 003230   000002 010010                    BDSC    2,,PR0                   by=0,bit=1,n=8

      947    19927    5                  END; /*  Else  */

  19927  4 003231   010643 710000 4                  TRA     NEXT_PRO_OPT

      948    19928
      949    19929    4            CASE (  33 /* PROGDTAB */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:223  

      950    19930    4               TATR$ -> VLP$TRMATTR.PROGDTAB# = YES_NO_FLG;

  19930  4 003232   000044 471400 2                  LDP1    TATR$
         4 003233   003100 060400                    CSL     bolr='003'O
         4 003234   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003235   100000 010002                    BDSC    0,,PR1                   by=0,bit=1,n=2
         4 003236   010643 710000 4                  TRA     NEXT_PRO_OPT

      951    19931
      952    19932    4            CASE (  26 /* OPDTAB */ ) ;

      953    19933    4               TATR$ -> VLP$TRMATTR.OPDTAB# = YES_NO_FLG;

  19933  4 003237   000044 471400 2                  LDP1    TATR$
         4 003240   003100 060400                    CSL     bolr='003'O
         4 003241   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003242   100000 030002                    BDSC    0,,PR1                   by=0,bit=3,n=2
         4 003243   010643 710000 4                  TRA     NEXT_PRO_OPT

      954    19934
      955    19935    4            CASE (  14 /* DEVSCROLL */ ) ;

      956    19936    4               TATR$ -> VLP$TRMATTR.DEVSCROLL# = YES_NO_FLG;

  19936  4 003244   000044 471400 2                  LDP1    TATR$
         4 003245   003100 060400                    CSL     bolr='003'O
         4 003246   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003247   100000 050002                    BDSC    0,,PR1                   by=0,bit=5,n=2
         4 003250   010643 710000 4                  TRA     NEXT_PRO_OPT

      957    19937    4            CASE (  216 /* L_FF_INCCR    */ ) ;

      958    19938    4               TATR$ -> VLP$TRMATTR.FF_INCCR# = YES_NO_FLG;

  19938  4 003251   000044 471400 2                  LDP1    TATR$
         4 003252   003100 060400                    CSL     bolr='003'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:224  
         4 003253   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003254   100007 410002                    BDSC    7,,PR1                   by=2,bit=1,n=2
         4 003255   010643 710000 4                  TRA     NEXT_PRO_OPT

      959    19939
      960    19940    4            CASE (  217 /* L_MICROFPL   */ ) ;

      961    19941    4               TATR$ -> VLP$TRMATTR.MICROFPL# = YES_NO_FLG;

  19941  4 003256   000044 471400 2                  LDP1    TATR$
         4 003257   003100 060400                    CSL     bolr='003'O
         4 003260   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003261   100002 630002                    BDSC    2,,PR1                   by=3,bit=3,n=2

      962    19942
      963    19943    4               TATR$ -> VLP$TRMATTR.CURSORUP# = YES_NO_FLG;

  19943  4 003262   003100 060400                    CSL     bolr='003'O
         4 003263   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003264   100000 070002                    BDSC    0,,PR1                   by=0,bit=7,n=2
         4 003265   010643 710000 4                  TRA     NEXT_PRO_OPT

      964    19944
      965    19945    4            CASE (  11 /* DEVICECR */ ) ;

      966    19946    4               TATR$ -> VLP$TRMATTR.DEVICECR# = YES_NO_FLG;

  19946  4 003266   000044 471400 2                  LDP1    TATR$
         4 003267   003100 060400                    CSL     bolr='003'O
         4 003270   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003271   100000 210002                    BDSC    0,,PR1                   by=1,bit=1,n=2
         4 003272   010643 710000 4                  TRA     NEXT_PRO_OPT

      967    19947
      968    19948    4            CASE (  12 /* DEVICELF */ ) ;

      969    19949    4               TATR$ -> VLP$TRMATTR.DEVICELF# = YES_NO_FLG;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:225  

  19949  4 003273   000044 471400 2                  LDP1    TATR$
         4 003274   003100 060400                    CSL     bolr='003'O
         4 003275   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003276   100000 230002                    BDSC    0,,PR1                   by=1,bit=3,n=2
         4 003277   010643 710000 4                  TRA     NEXT_PRO_OPT

      970    19950
      971    19951    4            CASE (  10 /* DEVICEBS */ ) ;

      972    19952    4               TATR$ -> VLP$TRMATTR.DEVICEBS# = YES_NO_FLG;

  19952  4 003300   000044 471400 2                  LDP1    TATR$
         4 003301   003100 060400                    CSL     bolr='003'O
         4 003302   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003303   100000 250002                    BDSC    0,,PR1                   by=1,bit=5,n=2
         4 003304   010643 710000 4                  TRA     NEXT_PRO_OPT

      973    19953
      974    19954    4            CASE (  3 /* AUTONL */ ) ;

      975    19955    4               TATR$ -> VLP$TRMATTR.AUTONL# = YES_NO_FLG;

  19955  4 003305   000044 471400 2                  LDP1    TATR$
         4 003306   003100 060400                    CSL     bolr='003'O
         4 003307   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003310   100000 270002                    BDSC    0,,PR1                   by=1,bit=7,n=2
         4 003311   010643 710000 4                  TRA     NEXT_PRO_OPT

      976    19956
      977    19957    4            CASE (  6 /* CRISNL */ ) ;

      978    19958    4               TATR$ -> VLP$TRMATTR.CRISNL# = YES_NO_FLG;

  19958  4 003312   000044 471400 2                  LDP1    TATR$
         4 003313   003100 060400                    CSL     bolr='003'O
         4 003314   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:226  
         4 003315   100000 410002                    BDSC    0,,PR1                   by=2,bit=1,n=2
         4 003316   010643 710000 4                  TRA     NEXT_PRO_OPT

      979    19959
      980    19960    4            CASE (  21 /* LFISNL */ ) ;

      981    19961    4               TATR$ -> VLP$TRMATTR.LFISNL# = YES_NO_FLG;

  19961  4 003317   000044 471400 2                  LDP1    TATR$
         4 003320   003100 060400                    CSL     bolr='003'O
         4 003321   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003322   100000 430002                    BDSC    0,,PR1                   by=2,bit=3,n=2
         4 003323   010643 710000 4                  TRA     NEXT_PRO_OPT

      982    19962
      983    19963    4            CASE (  5 /* BLANKERASES */ ) ;

      984    19964    4               TATR$ -> VLP$TRMATTR.BLANKERASES# = YES_NO_FLG;

  19964  4 003324   000044 471400 2                  LDP1    TATR$
         4 003325   003100 060400                    CSL     bolr='003'O
         4 003326   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003327   100000 450002                    BDSC    0,,PR1                   by=2,bit=5,n=2
         4 003330   010643 710000 4                  TRA     NEXT_PRO_OPT

      985    19965
      986    19966    4            CASE (  13 /* DEVPOSOPTS */ ) ;

      987    19967    4               TATR$ -> VLP$TRMATTR.DEVPOSOPTS# = YES_NO_FLG;

  19967  4 003331   000044 471400 2                  LDP1    TATR$
         4 003332   003100 060400                    CSL     bolr='003'O
         4 003333   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003334   100000 470002                    BDSC    0,,PR1                   by=2,bit=7,n=2
         4 003335   010643 710000 4                  TRA     NEXT_PRO_OPT

      988    19968
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:227  
      989    19969    4            CASE (  43 /* TRUOVRPRT */ ) ;

      990    19970    4               TATR$ -> VLP$TRMATTR.TRUOVRPRT# = YES_NO_FLG;

  19970  4 003336   000044 471400 2                  LDP1    TATR$
         4 003337   003100 060400                    CSL     bolr='003'O
         4 003340   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003341   100000 610002                    BDSC    0,,PR1                   by=3,bit=1,n=2
         4 003342   010643 710000 4                  TRA     NEXT_PRO_OPT

      991    19971
      992    19972    4            CASE (  1 /* APL */ ) ;

      993    19973    4               TATR$ -> VLP$TRMATTR.APL# = YES_NO_FLG;

  19973  4 003343   000044 471400 2                  LDP1    TATR$
         4 003344   003100 060400                    CSL     bolr='003'O
         4 003345   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003346   100000 630002                    BDSC    0,,PR1                   by=3,bit=3,n=2
         4 003347   010643 710000 4                  TRA     NEXT_PRO_OPT

      994    19974
      995    19975    4            CASE (  4 /* BIN */ ) ;

      996    19976    4               TATR$ -> VLP$TRMATTR.BIN# = YES_NO_FLG;

  19976  4 003350   000044 471400 2                  LDP1    TATR$
         4 003351   003100 060400                    CSL     bolr='003'O
         4 003352   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003353   100000 650002                    BDSC    0,,PR1                   by=3,bit=5,n=2
         4 003354   010643 710000 4                  TRA     NEXT_PRO_OPT

      997    19977
      998    19978    4            CASE (  23 /* LOWERCASEPRINTS */ ) ;

      999    19979    4               TATR$ -> VLP$TRMATTR.LOWERCASEPRINTS# = YES_NO_FLG;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:228  
  19979  4 003355   000044 471400 2                  LDP1    TATR$
         4 003356   003100 060400                    CSL     bolr='003'O
         4 003357   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003360   100000 670002                    BDSC    0,,PR1                   by=3,bit=7,n=2
         4 003361   010643 710000 4                  TRA     NEXT_PRO_OPT

     1000    19980
     1001    19981    4            CASE (  165 /* LIMBOCLM */ ) ;

     1002    19982    4               TATR$ -> VLP$TRMATTR.LIMBOCLM# = YES_NO_FLG;

  19982  4 003362   000044 471400 2                  LDP1    TATR$
         4 003363   003100 060400                    CSL     bolr='003'O
         4 003364   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003365   100001 010002                    BDSC    1,,PR1                   by=0,bit=1,n=2
         4 003366   010643 710000 4                  TRA     NEXT_PRO_OPT

     1003    19983
     1004    19984    4            CASE (  166 /* LOCALECHO */ ) ;

     1005    19985    4               TATR$ -> VLP$TRMATTR.LOCALECHO# = YES_NO_FLG;

  19985  4 003367   000044 471400 2                  LDP1    TATR$
         4 003370   003100 060400                    CSL     bolr='003'O
         4 003371   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003372   100001 030002                    BDSC    1,,PR1                   by=0,bit=3,n=2
         4 003373   010643 710000 4                  TRA     NEXT_PRO_OPT

     1006    19986
     1007    19987    4            CASE (  85 /* PARITY */ ) ;

     1008    19988    5               DO CASE(OP_CODE) ;

  19988  4 003374   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003375   000010 116007                    CMPQ    8,DL
         4 003376   003400 602006 4                  TNC     s:19988+4,QL
         4 003377   003415 710000 4                  TRA     s:20019
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:229  
         4 003400   003410 710000 4                  TRA     s:19995
         4 003401   003410 710000 4                  TRA     s:19995
         4 003402   003410 710000 4                  TRA     s:19995
         4 003403   003410 710000 4                  TRA     s:19995
         4 003404   003410 710000 4                  TRA     s:19995
         4 003405   003415 710000 4                  TRA     s:20019
         4 003406   003415 710000 4                  TRA     s:20019
         4 003407   003410 710000 4                  TRA     s:19995

     1009    19989    5                  CASE( 0 /* NONE */,

     1010    19990    5                    1 /* ODD */,
     1011    19991    5                    2 /* EVEN */,
     1012    19992    5                    3 /* ONE */,
     1013    19993    5                    4 /* ZERO */,
     1014    19994    5                    7 /* DC */) ;
     1015    19995    5                     TATR$ -> VLP$TRMATTR.PARITY# = OP_CODE ;

  19995  4 003410   000044 471400 2                  LDP1    TATR$
         4 003411   003100 061500                    CSR     bolr='003'O
         4 003412   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 003413   100001 060003                    BDSC    1,,PR1                   by=0,bit=6,n=3
         4 003414   010643 710000 4                  TRA     NEXT_PRO_OPT

     1016    19996    5                  CASE( ELSE ) ;

     1017    19997        /*E*  ERROR:    ASD-E$PARITYERR-C
     1018    19998              MESSAGE:  Illegal keyword.
     1019    19999              MESSAGE1: PARITY can be:
     1020    20000                          1)  NONE
     1021    20001                          2)  ODD
     1022    20002                          3)  EVEN
     1023    20003                          4)  ONE
     1024    20004                          5)  ZERO
     1025    20005                          6)  DC
     1026    20006        */
     1027    20007                          %SCREAM( ERR#=E$PARITYERR, LEVEL=ERROR, MID='D');
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:230  

  20019  4 003415   000036 630400 5                  EPPR0   30
         4 003416   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003417   000000 701000 xent               TSX1    ASH$ERROR
         4 003420   000000 011000                    NOP     0

     1028    20022    5                  END ; /* Do case */

  20022  4 003421   010643 710000 4                  TRA     NEXT_PRO_OPT

     1029    20023
     1030    20024    4            CASE (  19 /* INPUT */ ) ;

     1031    20025    4               PHDR$ -> PRO$HDR.IO.INPUT = YES_NO_FLG;

  20025  4 003422   000042 471400 2                  LDP1    PHDR$
         4 003423   003100 060400                    CSL     bolr='003'O
         4 003424   000001 000001 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=1
         4 003425   100001 400001                    BDSC    1,,PR1                   by=2,bit=0,n=1

     1032    20026    4               TATR$ -> VLP$TRMATTR.INPUT# = YES_NO_FLG;

  20026  4 003426   000044 473400 2                  LDP3    TATR$
         4 003427   003100 060400                    CSL     bolr='003'O
         4 003430   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003431   300001 210002                    BDSC    1,,PR3                   by=1,bit=1,n=2
         4 003432   010643 710000 4                  TRA     NEXT_PRO_OPT

     1033    20027
     1034    20028    4            CASE (  27 /* OUTPUT */ ) ;

     1035    20029    4               PHDR$ -> PRO$HDR.IO.OUTPUT = YES_NO_FLG;

  20029  4 003433   000042 471400 2                  LDP1    PHDR$
         4 003434   003100 060400                    CSL     bolr='003'O
         4 003435   000001 000001 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=1
         4 003436   100001 410001                    BDSC    1,,PR1                   by=2,bit=1,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:231  

     1036    20030    4               TATR$ -> VLP$TRMATTR.OUTPUT# = YES_NO_FLG;

  20030  4 003437   000044 473400 2                  LDP3    TATR$
         4 003440   003100 060400                    CSL     bolr='003'O
         4 003441   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003442   300001 230002                    BDSC    1,,PR3                   by=1,bit=3,n=2
         4 003443   010643 710000 4                  TRA     NEXT_PRO_OPT

     1037    20031
     1038    20032    4            CASE (  32 /* PRINTTYPE */ ) ;

     1039    20033    4               TATR$ -> VLP$TRMATTR.PRINTTYPE# = YES_NO_FLG;

  20033  4 003444   000044 471400 2                  LDP1    TATR$
         4 003445   003100 060400                    CSL     bolr='003'O
         4 003446   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003447   100001 250002                    BDSC    1,,PR1                   by=1,bit=5,n=2
         4 003450   010643 710000 4                  TRA     NEXT_PRO_OPT

     1040    20034
     1041    20035    4            CASE (  44 /* TTYTYPE */ ) ;

     1042    20036    4               TATR$ -> VLP$TRMATTR.TTYTYPE# = YES_NO_FLG;

  20036  4 003451   000044 471400 2                  LDP1    TATR$
         4 003452   003100 060400                    CSL     bolr='003'O
         4 003453   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 003454   100001 270002                    BDSC    1,,PR1                   by=1,bit=7,n=2
         4 003455   010643 710000 4                  TRA     NEXT_PRO_OPT

     1043    20037
     1044    20038    4            CASE ( 56 /* MINREC */ ) ;

     1045    20039    4               IF (OP_CODE = 7 /* DC */) THEN

  20039  4 003456   200031 236100                    LDQ     OP_CODE,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:232  
         4 003457   000007 116007                    CMPQ    7,DL
         4 003460   003466 601000 4                  TNZ     s:20043

     1046    20040    4                  TATR$ -> VLP$TRMATTR.MINREC# = 255;

  20040  4 003461   000044 471400 2                  LDP1    TATR$
         4 003462   003100 061400                    CSR     bolr='003'O
         4 003463   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003464   100002 210010                    BDSC    2,,PR1                   by=1,bit=1,n=8
         4 003465   010643 710000 4                  TRA     NEXT_PRO_OPT

     1047    20041    4               ELSE
     1048    20042    5               DO;

     1049    20043    5                  CALL GET_DEC_VAL ( 255 ) ALTRET( NEXT_PRO_OPT );

  20043  4 003466   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003467   200156 756100                    STQ     J+1,,AUTO
         4 003470   000031 236000 5                  LDQ     25
         4 003471   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003472   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003473   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1050    20044    5                  TATR$ -> VLP$TRMATTR.MINREC# = VAL ;

  20044  4 003474   000044 470400 2                  LDP0    TATR$
         4 003475   003100 061500                    CSR     bolr='003'O
         4 003476   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 003477   000002 210010                    BDSC    2,,PR0                   by=1,bit=1,n=8

     1051    20045    5                  END; /*  Else  */

  20045  4 003500   010643 710000 4                  TRA     NEXT_PRO_OPT

     1052    20046
     1053    20047    4            CASE ( 59 /* SPEED */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:233  
     1054    20048    4               TATR$ -> VLP$TRMATTR.SPEED# = OP_CODE ;

  20048  4 003501   000044 471400 2                  LDP1    TATR$
         4 003502   003100 061500                    CSR     bolr='003'O
         4 003503   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 003504   100002 410010                    BDSC    2,,PR1                   by=2,bit=1,n=8
         4 003505   010643 710000 4                  TRA     NEXT_PRO_OPT

     1055    20049
     1056    20050    4            CASE ( 79 /* CHARSETNAME */ ) ;

     1057    20051    5               IF OUT$SYM.COUNT > 8 THEN DO;

  20051  4 003506   200004 471500                    LDP1    BLK$,,AUTO
         4 003507   100004 236100                    LDQ     4,,PR1
         4 003510   777000 376003                    ANQ     -512,DU
         4 003511   011000 116003                    CMPQ    4608,DU
         4 003512   003520 602000 4                  TNC     s:20073

     1058    20052        /*E*  ERROR:    ASD-E$CHARSETTOOBIG-C
     1059    20053              MESSAGE:  CHARACTER SET NAME too long.
     1060    20054              MESSAGE1: CHARACTER SET NAME can be at most 8 characters long.
     1061    20055        */
     1062    20056                       %SCREAM( ERR#=E$CHARSETTOOBIG, LEVEL=ERROR, MID='D');

  20068  4 003513   000037 630400 5                  EPPR0   31
         4 003514   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003515   000000 701000 xent               TSX1    ASH$ERROR
         4 003516   000000 011000                    NOP     0

     1063    20071    5                  END ;    /*  Then do  */

  20071  4 003517   010643 710000 4                  TRA     NEXT_PRO_OPT

     1064    20072    5               ELSE DO;

     1065    20073    5                  TATR$ -> VLP$TRMATTR.CHARSETNAME# = OUT$SYM.TEXT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:234  

  20073  4 003520   100004 236100                    LDQ     4,,PR1
         4 003521   000033 772000                    QRL     27
         4 003522   000000 620006                    EAX0    0,QL
         4 003523   000044 473400 2                  LDP3    TATR$
         4 003524   040100 100540                    MLR     fill='040'O
         4 003525   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 003526   300003 000010                    ADSC9   3,,PR3                   cn=0,n=8

     1066    20074
     1067    20075    5                  IF TATR$ -> VLP$TRMATTR.CHARSETNAME# = AS_BLANK THEN

  20075  4 003527   040000 106500                    CMPC    fill='040'O
         4 003530   300003 000010                    ADSC9   3,,PR3                   cn=0,n=8
         4 003531   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 003532   010643 601000 4                  TNZ     NEXT_PRO_OPT

     1068    20076    5                     TATR$ -> VLP$TRMATTR.CHARSETNAME# = 'NONE';

  20076  4 003533   040100 100400                    MLR     fill='040'O
         4 003534   000101 000004 3                  ADSC9   KL_CCHR+65               cn=0,n=4
         4 003535   300003 000010                    ADSC9   3,,PR3                   cn=0,n=8

     1069    20077    5                  END;

  20077  4 003536   010643 710000 4                  TRA     NEXT_PRO_OPT

     1070    20078
     1071    20079    4            CASE ( 78 /* FCNTBL */ ) ;

     1072    20080    4               IF OP_CODE = 7   /*  NONE_VAL  */ THEN

  20080  4 003537   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003540   000007 116007                    CMPQ    7,DL
         4 003541   003547 601000 4                  TNZ     s:20083

     1073    20081    4                  TATR$ -> VLP$TRMATTR.FCNTBL# = AS_BLANK;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:235  

  20081  4 003542   000044 471400 2                  LDP1    TATR$
         4 003543   040100 100400                    MLR     fill='040'O
         4 003544   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 003545   100005 000010                    ADSC9   5,,PR1                   cn=0,n=8
         4 003546   010643 710000 4                  TRA     NEXT_PRO_OPT

     1074    20082    4               ELSE
     1075    20083    5                  IF OUT$SYM.COUNT > 8 THEN DO;

  20083  4 003547   200004 471500                    LDP1    BLK$,,AUTO
         4 003550   100004 236100                    LDQ     4,,PR1
         4 003551   777000 376003                    ANQ     -512,DU
         4 003552   011000 116003                    CMPQ    4608,DU
         4 003553   003561 602000 4                  TNC     s:20105

     1076    20084        /*E*  ERROR:    ASD-E$FCNTBLTOOBIG-C
     1077    20085              MESSAGE:  FCNTBL too long.
     1078    20086              MESSAGE1: FCNTBL can be at most 8 characters long.
     1079    20087        */
     1080    20088                          %SCREAM( ERR#=E$FCNTBLTOOBIG, LEVEL=ERROR, MID='D');

  20100  4 003554   000040 630400 5                  EPPR0   32
         4 003555   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003556   000000 701000 xent               TSX1    ASH$ERROR
         4 003557   000000 011000                    NOP     0

     1081    20103    5                     END ; /*  Then do  */

  20103  4 003560   010643 710000 4                  TRA     NEXT_PRO_OPT

     1082    20104    4                  ELSE
     1083    20105    4                     TATR$ -> VLP$TRMATTR.FCNTBL# = OUT$SYM.TEXT ;

  20105  4 003561   100004 236100                    LDQ     4,,PR1
         4 003562   000033 772000                    QRL     27
         4 003563   000000 620006                    EAX0    0,QL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:236  
         4 003564   000044 473400 2                  LDP3    TATR$
         4 003565   040100 100540                    MLR     fill='040'O
         4 003566   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 003567   300005 000010                    ADSC9   5,,PR3                   cn=0,n=8
         4 003570   010643 710000 4                  TRA     NEXT_PRO_OPT

     1084    20106
     1085    20107    4            CASE ( 55 /* PWIDTH */ ) ;

     1086    20108    4               IF (OP_CODE = 7 /* DC */) THEN

  20108  4 003571   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003572   000007 116007                    CMPQ    7,DL
         4 003573   003604 601000 4                  TNZ     s:20115

     1087    20109    5               DO;

     1088    20110    5                  PLTN$ -> VLP$PLATEN.WIDTH# = 255;

  20110  4 003574   000045 471400 2                  LDP1    PLTN$
         4 003575   003100 061400                    CSR     bolr='003'O
         4 003576   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003577   100000 010010                    BDSC    0,,PR1                   by=0,bit=1,n=8

     1089    20111    5                  PLTN$ -> VLP$PLATEN.EXTWID# = AS_FALSE ;

  20111  4 003600   003100 060400                    CSL     bolr='003'O
         4 003601   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 003602   100001 100001                    BDSC    1,,PR1                   by=0,bit=8,n=1

     1090    20112    5                  END; /*  If OP_CODE  */

  20112  4 003603   010643 710000 4                  TRA     NEXT_PRO_OPT

     1091    20113    4               ELSE
     1092    20114    5               DO;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:237  
     1093    20115    5                  CALL GET_DEC_VAL( 999 ) ALTRET( NEXT_PRO_OPT );

  20115  4 003604   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003605   200156 756100                    STQ     J+1,,AUTO
         4 003606   000035 236000 5                  LDQ     29
         4 003607   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003610   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003611   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1094    20116    5                  IF (VAL = 255) THEN

  20116  4 003612   200020 235100                    LDA     VAL,,AUTO
         4 003613   000377 115007                    CMPA    255,DL
         4 003614   003625 601000 4                  TNZ     s:20123

     1095    20117    6                  DO;

     1096    20118    6                     PLTN$ -> VLP$PLATEN.WIDTH# = 255;

  20118  4 003615   000045 470400 2                  LDP0    PLTN$
         4 003616   003100 061400                    CSR     bolr='003'O
         4 003617   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003620   000000 010010                    BDSC    0,,PR0                   by=0,bit=1,n=8

     1097    20119    6                     PLTN$ -> VLP$PLATEN.EXTWID# = AS_FALSE ;

  20119  4 003621   003100 060400                    CSL     bolr='003'O
         4 003622   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 003623   000001 100001                    BDSC    1,,PR0                   by=0,bit=8,n=1

     1098    20120    6                     END; /*  If val = 255  */

  20120  4 003624   010643 710000 4                  TRA     NEXT_PRO_OPT

     1099    20121    5                  ELSE
     1100    20122    6                  DO;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:238  
     1101    20123    7                     IF VAL > 254 THEN DO;

  20123  4 003625   003635 602000 4                  TNC     s:20128

     1102    20124    7                        VAL = VAL - 254 ;

  20124  4 003626   000376 135007                    SBLA    254,DL
         4 003627   200020 755100                    STA     VAL,,AUTO

     1103    20125    7                        PLTN$ -> VLP$PLATEN.EXTWID# = AS_TRUE ;

  20125  4 003630   000045 470400 2                  LDP0    PLTN$
         4 003631   003100 060400                    CSL     bolr='003'O
         4 003632   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 003633   000001 100001                    BDSC    1,,PR0                   by=0,bit=8,n=1

     1104    20126    7                        END ; /*  Then do  */

  20126  4 003634   003641 710000 4                  TRA     s:20129

     1105    20127    6                     ELSE
     1106    20128    6                        PLTN$ -> VLP$PLATEN.EXTWID# = AS_FALSE ;

  20128  4 003635   000045 470400 2                  LDP0    PLTN$
         4 003636   003100 060400                    CSL     bolr='003'O
         4 003637   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 003640   000001 100001                    BDSC    1,,PR0                   by=0,bit=8,n=1

     1107    20129    6                     PLTN$ -> VLP$PLATEN.WIDTH# = VAL ;

  20129  4 003641   003100 061500                    CSR     bolr='003'O
         4 003642   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 003643   000000 010010                    BDSC    0,,PR0                   by=0,bit=1,n=8

     1108    20130    6                     END; /*  Else  */

     1109    20131    5                  END; /*  Else  */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:239  

  20131  4 003644   010643 710000 4                  TRA     NEXT_PRO_OPT

     1110    20132
     1111    20133    4            CASE ( 53 /* LENGTH */ ) ;

     1112    20134    4               IF (OP_CODE = 7 /* DC */) THEN

  20134  4 003645   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003646   000007 116007                    CMPQ    7,DL
         4 003647   003655 601000 4                  TNZ     s:20138

     1113    20135    4                  PLTN$ -> VLP$PLATEN.LENGTH# = 255;

  20135  4 003650   000045 471400 2                  LDP1    PLTN$
         4 003651   003100 061400                    CSR     bolr='003'O
         4 003652   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003653   100000 210010                    BDSC    0,,PR1                   by=1,bit=1,n=8
         4 003654   010643 710000 4                  TRA     NEXT_PRO_OPT

     1114    20136    4               ELSE
     1115    20137    5               DO;

     1116    20138    5                  CALL GET_DEC_VAL ( 555 ) ALTRET( NEXT_PRO_OPT );

  20138  4 003655   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003656   200156 756100                    STQ     J+1,,AUTO
         4 003657   000042 236000 5                  LDQ     34
         4 003660   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003661   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003662   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1117    20139    5                  PLTN$ -> VLP$PLATEN.LENGTH# = VAL ;

  20139  4 003663   000045 470400 2                  LDP0    PLTN$
         4 003664   003100 061500                    CSR     bolr='003'O
         4 003665   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:240  
         4 003666   000000 210010                    BDSC    0,,PR0                   by=1,bit=1,n=8

     1118    20140    5                  END; /*  Else  */

  20140  4 003667   010643 710000 4                  TRA     NEXT_PRO_OPT

     1119    20141
     1120    20142    4            CASE ( 54 /* LIMBO */ ) ;

     1121    20143    4               IF (OP_CODE = 7 /* DC */) THEN

  20143  4 003670   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003671   000007 116007                    CMPQ    7,DL
         4 003672   003700 601000 4                  TNZ     s:20147

     1122    20144    4                  PLTN$ -> VLP$PLATEN.LIMBO# = 255;

  20144  4 003673   000045 471400 2                  LDP1    PLTN$
         4 003674   003100 061400                    CSR     bolr='003'O
         4 003675   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003676   100000 410010                    BDSC    0,,PR1                   by=2,bit=1,n=8
         4 003677   010643 710000 4                  TRA     NEXT_PRO_OPT

     1123    20145    4               ELSE
     1124    20146    5               DO;

     1125    20147    5                  CALL GET_DEC_VAL ( 444 ) ALTRET( NEXT_PRO_OPT );

  20147  4 003700   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003701   200156 756100                    STQ     J+1,,AUTO
         4 003702   000044 236000 5                  LDQ     36
         4 003703   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003704   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003705   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1126    20148    5                  PLTN$ -> VLP$PLATEN.LIMBO# = VAL ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:241  
  20148  4 003706   000045 470400 2                  LDP0    PLTN$
         4 003707   003100 061500                    CSR     bolr='003'O
         4 003710   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 003711   000000 410010                    BDSC    0,,PR0                   by=2,bit=1,n=8

     1127    20149    5                  END; /*  Else  */

  20149  4 003712   010643 710000 4                  TRA     NEXT_PRO_OPT

     1128    20150
     1129    20151    4            CASE ( 51 /* FIRSTLINE */ ) ;

     1130    20152    4               IF (OP_CODE = 7 /* DC */) THEN

  20152  4 003713   200031 236100                    LDQ     OP_CODE,,AUTO
         4 003714   000007 116007                    CMPQ    7,DL
         4 003715   003723 601000 4                  TNZ     s:20156

     1131    20153    4                  PLTN$ -> VLP$PLATEN.FIRSTLINE# = 255;

  20153  4 003716   000045 471400 2                  LDP1    PLTN$
         4 003717   003100 061400                    CSR     bolr='003'O
         4 003720   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 003721   100000 610010                    BDSC    0,,PR1                   by=3,bit=1,n=8
         4 003722   010643 710000 4                  TRA     NEXT_PRO_OPT

     1132    20154    4               ELSE
     1133    20155    5               DO;

     1134    20156    5                  CALL GET_DEC_VAL ( 333 ) ALTRET( NEXT_PRO_OPT );

  20156  4 003723   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 003724   200156 756100                    STQ     J+1,,AUTO
         4 003725   000046 236000 5                  LDQ     38
         4 003726   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003727   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003730   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:242  

     1135    20157    5                  PLTN$ -> VLP$PLATEN.FIRSTLINE# = VAL ;

  20157  4 003731   000045 470400 2                  LDP0    PLTN$
         4 003732   003100 061500                    CSR     bolr='003'O
         4 003733   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 003734   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8

     1136    20158    5                  END; /*  Else  */

  20158  4 003735   010643 710000 4                  TRA     NEXT_PRO_OPT

     1137    20159
     1138    20160    4            CASE ( 218 /* TABS */ ) ;

     1139    20161    4               T_TAB = '0'B ;

  20161  4 003736   000000 100400                    MLR     fill='000'O
         4 003737   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 003740   000070 000040 2                  ADSC9   T_TAB                    cn=0,n=32

     1140    20162    5               DO K = 0  TO PTR$ -> P$NODE.SUBNODES-1 ;

  20162  4 003741   200015 450100                    STZ     K,,AUTO
         4 003742   004002 710000 4                  TRA     s:20190+2

     1141    20163
     1142    20164    5                  BLK$ = PTR$ -> P$NODE.SUBLK$(K) ;

  20164  4 003743   200030 470500                    LDP0    PTR$,,AUTO
         4 003744   200015 720100                    LXL0    K,,AUTO
         4 003745   000003 236110                    LDQ     3,X0,PR0
         4 003746   200004 756100                    STQ     BLK$,,AUTO

     1143    20165    5                  CALL GET_DEC_VAL ( 255 ) ALTRET( NEXT_PRO_OPT );

  20165  4 003747   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:243  
         4 003750   200156 756100                    STQ     J+1,,AUTO
         4 003751   000031 236000 5                  LDQ     25
         4 003752   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 003753   010661 701000 4                  TSX1    GET_DEC_VAL
         4 003754   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1144    20166    5                  T_TAB(K) = VAL ;

  20166  4 003755   200015 235100                    LDA     K,,AUTO
         4 003756   000005 101500                    MRL     fill='000'O
         4 003757   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 003760   000070 000001 2                  ADSC9   T_TAB,A                  cn=0,n=1

     1145    20167    6                  IF K > 0 THEN DO;

  20167  4 003761   004000 600000 4                  TZE     s:20190

     1146    20168    7                     IF T_TAB(K) <= T_TAB(K-1) THEN DO;

  20168  4 003762   000100 101405                    MRL     fill='000'O
         4 003763   000070 000001 2                  ADSC9   T_TAB,A                  cn=0,n=1
         4 003764   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 003765   000100 101405                    MRL     fill='000'O
         4 003766   000067 600001 2                  ADSC9   KL_ABSGRPRND$,A          cn=3,n=1
         4 003767   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 003770   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 003771   200220 116100                    CMPQ    PINC_INC+1,,AUTO
         4 003772   004000 604000 4                  TMI     s:20190

     1147    20169        /*E*  ERROR:    ASD-E$TABSNOTINCREASING-C
     1148    20170              MESSAGE:  TABS are not increasing in value.
     1149    20171        */
     1150    20172                             %SCREAM( ERR#=E$TABSNOTINCREASING, LEVEL=ERROR, MID='D');

  20184  4 003773   000047 630400 5                  EPPR0   39
         4 003774   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 003775   000000 701000 xent               TSX1    ASH$ERROR
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:244  
         4 003776   000000 011000                    NOP     0

     1151    20187    7                        GOTO NEXT_PRO_OPT ;

  20187  4 003777   010643 710000 4                  TRA     NEXT_PRO_OPT

     1152    20188    7                        END ; /*  If T_TAB(K)  */
     1153    20189    6                     END ;           /*  If k > 0  */
     1154    20190    5                  END ;                   /*  Do k = 0  */

  20190  4 004000   000001 035007                    ADLA    1,DL
         4 004001   200015 755100                    STA     K,,AUTO
         4 004002   200030 470500                    LDP0    PTR$,,AUTO
         4 004003   000001 236100                    LDQ     1,,PR0
         4 004004   000022 772000                    QRL     18
         4 004005   200015 116100                    CMPQ    K,,AUTO
         4 004006   004010 600000 4                  TZE     s:20191
         4 004007   003743 603000 4                  TRC     s:20164

     1155    20191    4               DTABS$ -> VLP$TAB = T_TAB ;

  20191  4 004010   000046 471400 2                  LDP1    DTABS$
         4 004011   000100 100400                    MLR     fill='000'O
         4 004012   000070 000040 2                  ADSC9   T_TAB                    cn=0,n=32
         4 004013   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
         4 004014   010643 710000 4                  TRA     NEXT_PRO_OPT

     1156    20192                                                              /* Control character */
     1157    20193    4            CASE ( 50 /* DVCOTPBFRSIZ */ ) ;

     1158    20194    4               IF PRO_TYPE = ASL_3270_TYP

  20194  4 004015   200153 236100                    LDQ     PRO_TYPE,,AUTO
         4 004016   000000 676000 xsym               ERQ     ASL_3270_TYP
         4 004017   777000 376003                    ANQ     -512,DU
         4 004020   004036 601000 4                  TNZ     s:20201

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:245  
     1159    20195    5               THEN DO;

     1160    20196    5                  CALL GET_DEC_VAL (4096) ALTRET (NEXT_PRO_OPT);

  20196  4 004021   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004022   200156 756100                    STQ     J+1,,AUTO
         4 004023   000051 236000 5                  LDQ     41
         4 004024   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004025   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004026   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1161    20197    5                  KL$UBWORD.REPLACE = SPLIT;

  20197  4 004027   200036 220100                    LDX0    SPLIT,,AUTO
         4 004030   200003 440100                    SXL0    KL$UBWORD,,AUTO

     1162    20198    5                  T3270$-> KL$3270.DVCBFRSIZ = KL$UBWORD.NUM ;

  20198  4 004031   000056 470400 2                  LDP0    T3270$
         4 004032   003100 060500                    CSL     bolr='003'O
         4 004033   200003 400022                    BDSC    KL$UBWORD,,AUTO          by=2,bit=0,n=18
         4 004034   000000 400022                    BDSC    0,,PR0                   by=2,bit=0,n=18

     1163    20199    5                  END;

  20199  4 004035   010643 710000 4                  TRA     NEXT_PRO_OPT

     1164    20200    5               ELSE DO;

     1165    20201    5                  CALL GET_DEC_VAL ( %XG_DEFAULT_MAX_NDC# ) ALTRET (NEXT_PRO_OPT);

  20201  4 004036   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004037   200156 756100                    STQ     J+1,,AUTO
         4 004040   000053 236000 5                  LDQ     43
         4 004041   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004042   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004043   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:246  

     1166    20202    5                  KL$UBWORD.REPLACE = SPLIT;

  20202  4 004044   200036 220100                    LDX0    SPLIT,,AUTO
         4 004045   200003 440100                    SXL0    KL$UBWORD,,AUTO

     1167    20203    5                  TCCHR$ -> KL$CCHR.DVCOTPBFRSIZ = KL$UBWORD.NUM ;

  20203  4 004046   000047 470400 2                  LDP0    TCCHR$
         4 004047   000100 100500                    MLR     fill='000'O
         4 004050   200003 400002                    ADSC9   KL$UBWORD,,AUTO          cn=2,n=2
         4 004051   000007 400002                    ADSC9   7,,PR0                   cn=2,n=2

     1168    20204    5                  END;

  20204  4 004052   010643 710000 4                  TRA     NEXT_PRO_OPT

     1169    20205
     1170    20206    4            CASE ( 83 /* DVCFLWCTRALG */ ) ;

     1171    20207    4               TATR$ -> VLP$TRMATTR.DVCFLWCTRALG# = OP_CODE;

  20207  4 004053   000044 471400 2                  LDP1    TATR$
         4 004054   003100 061500                    CSR     bolr='003'O
         4 004055   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 004056   100002 660003                    BDSC    2,,PR1                   by=3,bit=6,n=3
         4 004057   010643 710000 4                  TRA     NEXT_PRO_OPT

     1172    20208
     1173    20209    4            CASE( 84 /* HPA_ALG */ ) ;

     1174    20210    4               TCCHR$ -> KL$CCHR.HPA_ALG = OP_CODE;

  20210  4 004060   000047 471400 2                  LDP1    TCCHR$
         4 004061   000100 101500                    MRL     fill='000'O
         4 004062   200031 000004                    ADSC9   OP_CODE,,AUTO            cn=0,n=4
         4 004063   100010 200001                    ADSC9   8,,PR1                   cn=1,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:247  
         4 004064   010643 710000 4                  TRA     NEXT_PRO_OPT

     1175    20211
     1176    20212    4            CASE( 82 /* CUP_ALG */ ) ;

     1177    20213    4               TCCHR$ -> KL$CCHR.CUP_ALG = OP_CODE;

  20213  4 004065   000047 471400 2                  LDP1    TCCHR$
         4 004066   000100 101500                    MRL     fill='000'O
         4 004067   200031 000004                    ADSC9   OP_CODE,,AUTO            cn=0,n=4
         4 004070   100010 400001                    ADSC9   8,,PR1                   cn=2,n=1
         4 004071   010643 710000 4                  TRA     NEXT_PRO_OPT

     1178    20214
     1179    20215    4            CASE( 87 /* CUP_BIS */ ) ;

     1180    20216    5               IF OP_CODE = 22 /* HEX */ THEN DO;

  20216  4 004072   200031 236100                    LDQ     OP_CODE,,AUTO
         4 004073   000026 116007                    CMPQ    22,DL
         4 004074   004106 601000 4                  TNZ     s:20221

     1181    20217    5                  CALL GET_HEX_VAL( 1 ) ALTRET( NEXT_PRO_OPT );

  20217  4 004075   000024 236000 5                  LDQ     20
         4 004076   200163 756100                    STQ     IDENT+1,,AUTO
         4 004077   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004100   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1182    20218    5                  TCCHR$ -> KL$CCHR.CUP_BIS = HEX_V;

  20218  4 004101   000047 470400 2                  LDP0    TCCHR$
         4 004102   000100 100500                    MLR     fill='000'O
         4 004103   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 004104   000010 600001                    ADSC9   8,,PR0                   cn=3,n=1

     1183    20219    5                  END ; /* Then do */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:248  

  20219  4 004105   010643 710000 4                  TRA     NEXT_PRO_OPT

     1184    20220    5               ELSE DO;

     1185    20221    5                  CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20221  4 004106   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004107   200156 756100                    STQ     J+1,,AUTO
         4 004110   000031 236000 5                  LDQ     25
         4 004111   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004112   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004113   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1186    20222    5                  TCCHR$ -> KL$CCHR.CUP_BIS = VAL ;

  20222  4 004114   000047 470400 2                  LDP0    TCCHR$
         4 004115   000100 101500                    MRL     fill='000'O
         4 004116   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 004117   000010 600001                    ADSC9   8,,PR0                   cn=3,n=1

     1187    20223    5                  END ; /* Else do */

  20223  4 004120   010643 710000 4                  TRA     NEXT_PRO_OPT

     1188    20224
     1189    20225    4            CASE( 7 /* CUP_CLMFRS */ ) ;

     1190    20226    4               TCCHR$ -> KL$CCHR.CUP_CLMFRS = YES_NO;

  20226  4 004121   000047 471400 2                  LDP1    TCCHR$
         4 004122   003100 060400                    CSL     bolr='003'O
         4 004123   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 004124   100011 010001                    BDSC    9,,PR1                   by=0,bit=1,n=1
         4 004125   010643 710000 4                  TRA     NEXT_PRO_OPT

     1191    20227
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:249  
     1192    20228    4            CASE( 8 /* CUP_CMP */ ) ;

     1193    20229    4               TCCHR$ -> KL$CCHR.CUP_CMP = YES_NO;

  20229  4 004126   000047 471400 2                  LDP1    TCCHR$
         4 004127   003100 060400                    CSL     bolr='003'O
         4 004130   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 004131   100011 020001                    BDSC    9,,PR1                   by=0,bit=2,n=1
         4 004132   010643 710000 4                  TRA     NEXT_PRO_OPT

     1194    20230
     1195    20231    4            CASE( 101 /* ICH_CHR */ ) ;

     1196    20232    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20232  4 004133   000031 236000 5                  LDQ     25
         4 004134   200163 756100                    STQ     IDENT+1,,AUTO
         4 004135   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004136   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1197    20233    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ICH_CHR) ;

  20233  4 004137   000047 236000 2                  LDQ     TCCHR$
         4 004140   000054 036000 5                  ADLQ    44
         4 004141   200007 756100                    STQ     PTROPT$,,AUTO

     1198    20234    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20234  4 004142   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004143   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004144   011522 701000 4                  TSX1    PLACE_OPT
         4 004145   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004146   010643 710000 4                  TRA     NEXT_PRO_OPT

     1199    20235
     1200    20236    4            CASE( 94 /* DCH_CHR */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:250  
     1201    20237    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20237  4 004147   000031 236000 5                  LDQ     25
         4 004150   200163 756100                    STQ     IDENT+1,,AUTO
         4 004151   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004152   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1202    20238    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DCH_CHR);

  20238  4 004153   000047 236000 2                  LDQ     TCCHR$
         4 004154   000055 036000 5                  ADLQ    45
         4 004155   200007 756100                    STQ     PTROPT$,,AUTO

     1203    20239    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  20239  4 004156   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004157   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004160   011522 701000 4                  TSX1    PLACE_OPT
         4 004161   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004162   010643 710000 4                  TRA     NEXT_PRO_OPT

     1204    20240
     1205    20241    4            CASE( 102 /* RSTINSMOD_CHR */ ) ;

     1206    20242    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20242  4 004163   000031 236000 5                  LDQ     25
         4 004164   200163 756100                    STQ     IDENT+1,,AUTO
         4 004165   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004166   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1207    20243    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.RSTINSMOD_CHR);

  20243  4 004167   000047 236000 2                  LDQ     TCCHR$
         4 004170   000016 036003                    ADLQ    14,DU
         4 004171   200007 756100                    STQ     PTROPT$,,AUTO

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:251  
     1208    20244    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  20244  4 004172   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004173   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004174   011522 701000 4                  TSX1    PLACE_OPT
         4 004175   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004176   010643 710000 4                  TRA     NEXT_PRO_OPT

     1209    20245
     1210    20246    4            CASE( 92 /* CUP_CHR */ ) ;

     1211    20247    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20247  4 004177   000031 236000 5                  LDQ     25
         4 004200   200163 756100                    STQ     IDENT+1,,AUTO
         4 004201   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004202   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1212    20248    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUP_CHR);

  20248  4 004203   000047 236000 2                  LDQ     TCCHR$
         4 004204   000056 036000 5                  ADLQ    46
         4 004205   200007 756100                    STQ     PTROPT$,,AUTO

     1213    20249    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20249  4 004206   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004207   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004210   011522 701000 4                  TSX1    PLACE_OPT
         4 004211   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004212   010643 710000 4                  TRA     NEXT_PRO_OPT

     1214    20250
     1215    20251    4            CASE( 95 /* ED0_CHR */ ) ;

     1216    20252    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:252  
  20252  4 004213   000031 236000 5                  LDQ     25
         4 004214   200163 756100                    STQ     IDENT+1,,AUTO
         4 004215   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004216   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1217    20253    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ED0_CHR);

  20253  4 004217   000047 236000 2                  LDQ     TCCHR$
         4 004220   000057 036000 5                  ADLQ    47
         4 004221   200007 756100                    STQ     PTROPT$,,AUTO

     1218    20254    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20254  4 004222   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004223   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004224   011522 701000 4                  TSX1    PLACE_OPT
         4 004225   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004226   010643 710000 4                  TRA     NEXT_PRO_OPT

     1219    20255
     1220    20256    4            CASE( 97 /* EL0_CHR */ ) ;

     1221    20257    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20257  4 004227   000031 236000 5                  LDQ     25
         4 004230   200163 756100                    STQ     IDENT+1,,AUTO
         4 004231   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004232   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1222    20258    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.EL0_CHR);

  20258  4 004233   000047 236000 2                  LDQ     TCCHR$
         4 004234   000060 036000 5                  ADLQ    48
         4 004235   200007 756100                    STQ     PTROPT$,,AUTO

     1223    20259    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:253  
  20259  4 004236   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004237   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004240   011522 701000 4                  TSX1    PLACE_OPT
         4 004241   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004242   010643 710000 4                  TRA     NEXT_PRO_OPT

     1224    20260
     1225    20261    4            CASE( 89 /* CUB_CHR */ ) ;

     1226    20262    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20262  4 004243   000031 236000 5                  LDQ     25
         4 004244   200163 756100                    STQ     IDENT+1,,AUTO
         4 004245   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004246   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1227    20263    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUB_CHR);

  20263  4 004247   000047 236000 2                  LDQ     TCCHR$
         4 004250   000017 036003                    ADLQ    15,DU
         4 004251   200007 756100                    STQ     PTROPT$,,AUTO

     1228    20264    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20264  4 004252   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004253   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004254   011522 701000 4                  TSX1    PLACE_OPT
         4 004255   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004256   010643 710000 4                  TRA     NEXT_PRO_OPT

     1229    20265
     1230    20266    4            CASE( 91 /* CUF_CHR */ ) ;

     1231    20267    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20267  4 004257   000031 236000 5                  LDQ     25
         4 004260   200163 756100                    STQ     IDENT+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:254  
         4 004261   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004262   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1232    20268    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUF_CHR);

  20268  4 004263   000047 236000 2                  LDQ     TCCHR$
         4 004264   000061 036000 5                  ADLQ    49
         4 004265   200007 756100                    STQ     PTROPT$,,AUTO

     1233    20269    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  20269  4 004266   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004267   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004270   011522 701000 4                  TSX1    PLACE_OPT
         4 004271   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004272   010643 710000 4                  TRA     NEXT_PRO_OPT

     1234    20270
     1235    20271    4            CASE( 93 /* CUU_CHR */ ) ;

     1236    20272    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20272  4 004273   000031 236000 5                  LDQ     25
         4 004274   200163 756100                    STQ     IDENT+1,,AUTO
         4 004275   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004276   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1237    20273    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUU_CHR);

  20273  4 004277   000047 236000 2                  LDQ     TCCHR$
         4 004300   000062 036000 5                  ADLQ    50
         4 004301   200007 756100                    STQ     PTROPT$,,AUTO

     1238    20274    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20274  4 004302   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004303   200157 450500                    STP0    BEGIN$+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:255  
         4 004304   011522 701000 4                  TSX1    PLACE_OPT
         4 004305   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004306   010643 710000 4                  TRA     NEXT_PRO_OPT

     1239    20275
     1240    20276    4            CASE( 90 /* CUD_CHR */ ) ;

     1241    20277    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20277  4 004307   000031 236000 5                  LDQ     25
         4 004310   200163 756100                    STQ     IDENT+1,,AUTO
         4 004311   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004312   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1242    20278    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.CUD_CHR);

  20278  4 004313   000047 236000 2                  LDQ     TCCHR$
         4 004314   000063 036000 5                  ADLQ    51
         4 004315   200007 756100                    STQ     PTROPT$,,AUTO

     1243    20279    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20279  4 004316   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004317   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004320   011522 701000 4                  TSX1    PLACE_OPT
         4 004321   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004322   010643 710000 4                  TRA     NEXT_PRO_OPT

     1244    20280
     1245    20281    4            CASE( 96 /* ED2_CHR */ ) ;

     1246    20282    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20282  4 004323   000031 236000 5                  LDQ     25
         4 004324   200163 756100                    STQ     IDENT+1,,AUTO
         4 004325   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004326   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:256  

     1247    20283    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ED2_CHR);

  20283  4 004327   000047 236000 2                  LDQ     TCCHR$
         4 004330   000020 036003                    ADLQ    16,DU
         4 004331   200007 756100                    STQ     PTROPT$,,AUTO

     1248    20284    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20284  4 004332   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004333   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004334   011522 701000 4                  TSX1    PLACE_OPT
         4 004335   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004336   010643 710000 4                  TRA     NEXT_PRO_OPT

     1249    20285
     1250    20286    4            CASE( 99 /* HOM_CHR */ ) ;

     1251    20287    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20287  4 004337   000031 236000 5                  LDQ     25
         4 004340   200163 756100                    STQ     IDENT+1,,AUTO
         4 004341   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004342   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1252    20288    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.HOM_CHR);

  20288  4 004343   000047 236000 2                  LDQ     TCCHR$
         4 004344   000064 036000 5                  ADLQ    52
         4 004345   200007 756100                    STQ     PTROPT$,,AUTO

     1253    20289    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20289  4 004346   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004347   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004350   011522 701000 4                  TSX1    PLACE_OPT
         4 004351   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:257  
         4 004352   010643 710000 4                  TRA     NEXT_PRO_OPT

     1254    20290
     1255    20291    4            CASE( 100 /* HTS_CHR */ ) ;

     1256    20292    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20292  4 004353   000031 236000 5                  LDQ     25
         4 004354   200163 756100                    STQ     IDENT+1,,AUTO
         4 004355   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004356   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1257    20293    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.HTS_CHR);

  20293  4 004357   000047 236000 2                  LDQ     TCCHR$
         4 004360   000065 036000 5                  ADLQ    53
         4 004361   200007 756100                    STQ     PTROPT$,,AUTO

     1258    20294    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20294  4 004362   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004363   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004364   011522 701000 4                  TSX1    PLACE_OPT
         4 004365   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004366   010643 710000 4                  TRA     NEXT_PRO_OPT

     1259    20295
     1260    20296    4            CASE( 104 /* TBC3_CHR */ ) ;

     1261    20297    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20297  4 004367   000031 236000 5                  LDQ     25
         4 004370   200163 756100                    STQ     IDENT+1,,AUTO
         4 004371   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004372   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1262    20298    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.TBC3_CHR);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:258  

  20298  4 004373   000047 236000 2                  LDQ     TCCHR$
         4 004374   000066 036000 5                  ADLQ    54
         4 004375   200007 756100                    STQ     PTROPT$,,AUTO

     1263    20299    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20299  4 004376   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004377   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004400   011522 701000 4                  TSX1    PLACE_OPT
         4 004401   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004402   010643 710000 4                  TRA     NEXT_PRO_OPT

     1264    20300
     1265    20301    4            CASE( 103 /* SETFRMLNG_CHR */ ) ;

     1266    20302    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20302  4 004403   000031 236000 5                  LDQ     25
         4 004404   200163 756100                    STQ     IDENT+1,,AUTO
         4 004405   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004406   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1267    20303    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.SETFRMLNG_CHR);

  20303  4 004407   000047 236000 2                  LDQ     TCCHR$
         4 004410   000021 036003                    ADLQ    17,DU
         4 004411   200007 756100                    STQ     PTROPT$,,AUTO

     1268    20304    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20304  4 004412   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004413   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004414   011522 701000 4                  TSX1    PLACE_OPT
         4 004415   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004416   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:259  
     1269    20305
     1270    20306    4            CASE( 98 /* FRMFED_CHR */ ) ;

     1271    20307    4               IF PRO_TYPE = ASL_3270_TYP

  20307  4 004417   200153 236100                    LDQ     PRO_TYPE,,AUTO
         4 004420   000000 676000 xsym               ERQ     ASL_3270_TYP
         4 004421   777000 376003                    ANQ     -512,DU
         4 004422   004440 601000 4                  TNZ     s:20318

     1272    20308    5               THEN DO;

     1273    20309    5                  IF OP_CODE = 2   /*  NO_VAL  */

  20309  4 004423   200031 236100                    LDQ     OP_CODE,,AUTO
         4 004424   000002 116007                    CMPQ    2,DL
         4 004425   004433 601000 4                  TNZ     s:20314

     1274    20310    6                  THEN DO;

     1275    20311    6                     T3270$ -> KL$3270.FRMFED = AS_FALSE;

  20311  4 004426   000056 471400 2                  LDP1    T3270$
         4 004427   003100 060400                    CSL     bolr='003'O
         4 004430   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 004431   100000 040001                    BDSC    0,,PR1                   by=0,bit=4,n=1

     1276    20312    6                     END;

  20312  4 004432   010643 710000 4                  TRA     NEXT_PRO_OPT

     1277    20313    6                  ELSE DO;

     1278    20314    6                     T3270$-> KL$3270.FRMFED = AS_TRUE;

  20314  4 004433   000056 471400 2                  LDP1    T3270$
         4 004434   003100 060400                    CSL     bolr='003'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:260  
         4 004435   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 004436   100000 040001                    BDSC    0,,PR1                   by=0,bit=4,n=1

     1279    20315    6                     END;

     1280    20316    5                  END;

  20316  4 004437   010643 710000 4                  TRA     NEXT_PRO_OPT

     1281    20317    5               ELSE DO;

     1282    20318    5                  IF (OP_CODE = 1   /*  YES_VAL  */ OR

  20318  4 004440   200031 236100                    LDQ     OP_CODE,,AUTO
         4 004441   000001 116007                    CMPQ    1,DL
         4 004442   004445 600000 4                  TZE     s:20338
         4 004443   000002 116007                    CMPQ    2,DL
         4 004444   004452 601000 4                  TNZ     s:20343

     1283    20319    5                       OP_CODE = 2   /*  NO_VAL  */ )
     1284    20320    6                  THEN DO;

     1285    20321        /*E*  ERROR:   ASD-E$NOYESNOFORNOT3270-C
     1286    20322              MESSAGE: YES or NO can only be specified for 3270 type profiles.
     1287    20323              MESSAGE1: You specified a profile type other than 3270, and
     1288    20324                       tried to set a form feed character with other than hex.
     1289    20325        */
     1290    20326                          %SCREAM (ERR#=E$NOYESNOFORNOT3270, LEVEL=ERROR,MID='D');

  20338  4 004445   000067 630400 5                  EPPR0   55
         4 004446   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 004447   000000 701000 xent               TSX1    ASH$ERROR
         4 004450   000000 011000                    NOP     0

     1291    20341    6                     END;

  20341  4 004451   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:261  

     1292    20342    6                  ELSE DO;

     1293    20343    6                     CALL GET_HEX_VAL (255) ALTRET (NEXT_PRO_OPT);

  20343  4 004452   000031 236000 5                  LDQ     25
         4 004453   200163 756100                    STQ     IDENT+1,,AUTO
         4 004454   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004455   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1294    20344    6                     PTROPT$ = ADDR (TCCHR$->KL$CCHR.FRMFED_CHR);

  20344  4 004456   000047 236000 2                  LDQ     TCCHR$
         4 004457   000070 036000 5                  ADLQ    56
         4 004460   200007 756100                    STQ     PTROPT$,,AUTO

     1295    20345    6                     CALL PLACE_OPT (PTROPT$) ALTRET(NEXT_PRO_OPT);

  20345  4 004461   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004462   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004463   011522 701000 4                  TSX1    PLACE_OPT
         4 004464   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1296    20346    6                     END;

     1297    20347    5                  END;

  20347  4 004465   010643 710000 4                  TRA     NEXT_PRO_OPT

     1298    20348
     1299    20349    4            CASE ( 180 /* L_MSGLIN_CHR */ ) ;

     1300    20350    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20350  4 004466   000031 236000 5                  LDQ     25
         4 004467   200163 756100                    STQ     IDENT+1,,AUTO
         4 004470   010767 701000 4                  TSX1    GET_HEX_VAL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:262  
         4 004471   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1301    20351    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.MSGLIN_CHR#);

  20351  4 004472   000047 236000 2                  LDQ     TCCHR$
         4 004473   000071 036000 5                  ADLQ    57
         4 004474   200007 756100                    STQ     PTROPT$,,AUTO

     1302    20352    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20352  4 004475   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 004476   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 004477   011522 701000 4                  TSX1    PLACE_OPT
         4 004500   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004501   010643 710000 4                  TRA     NEXT_PRO_OPT

     1303    20353
     1304    20354
     1305    20355    4            CASE( 61 /* TMNALG_AFTCR */ ) ;

     1306    20356    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20356  4 004502   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004503   200156 756100                    STQ     J+1,,AUTO
         4 004504   000073 236000 5                  LDQ     59
         4 004505   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004506   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004507   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1307    20357    4               TCCHR$ -> KL$CCHR.TMNALG_AFTCR = VAL ;

  20357  4 004510   000047 470400 2                  LDP0    TCCHR$
         4 004511   000100 101500                    MRL     fill='000'O
         4 004512   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 004513   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
         4 004514   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:263  
     1308    20358
     1309    20359    4            CASE( 65 /* TMNALG_BFRCR */ ) ;

     1310    20360    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20360  4 004515   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004516   200156 756100                    STQ     J+1,,AUTO
         4 004517   000073 236000 5                  LDQ     59
         4 004520   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004521   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004522   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1311    20361    4               TCCHR$ -> KL$CCHR.TMNALG_BFRCR = VAL ;

  20361  4 004523   000047 470400 2                  LDP0    TCCHR$
         4 004524   000100 101500                    MRL     fill='000'O
         4 004525   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 004526   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         4 004527   010643 710000 4                  TRA     NEXT_PRO_OPT

     1312    20362
     1313    20363    4            CASE( 64 /* TMNALG_AFTLF */ ) ;

     1314    20364    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20364  4 004530   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004531   200156 756100                    STQ     J+1,,AUTO
         4 004532   000073 236000 5                  LDQ     59
         4 004533   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004534   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004535   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1315    20365    4               TCCHR$ -> KL$CCHR.TMNALG_AFTLF = VAL ;

  20365  4 004536   000047 470400 2                  LDP0    TCCHR$
         4 004537   000100 101500                    MRL     fill='000'O
         4 004540   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:264  
         4 004541   000000 400001                    ADSC9   0,,PR0                   cn=2,n=1
         4 004542   010643 710000 4                  TRA     NEXT_PRO_OPT

     1316    20366
     1317    20367    4            CASE( 66 /* TMNALG_BFRLF */ ) ;

     1318    20368    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20368  4 004543   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004544   200156 756100                    STQ     J+1,,AUTO
         4 004545   000073 236000 5                  LDQ     59
         4 004546   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004547   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004550   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1319    20369    4               TCCHR$ -> KL$CCHR.TMNALG_BFRLF = VAL ;

  20369  4 004551   000047 470400 2                  LDP0    TCCHR$
         4 004552   000100 101500                    MRL     fill='000'O
         4 004553   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 004554   000000 600001                    ADSC9   0,,PR0                   cn=3,n=1
         4 004555   010643 710000 4                  TRA     NEXT_PRO_OPT

     1320    20370
     1321    20371    4            CASE( 63 /* TMNALG_AFTHT */ ) ;

     1322    20372    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20372  4 004556   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004557   200156 756100                    STQ     J+1,,AUTO
         4 004560   000073 236000 5                  LDQ     59
         4 004561   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004562   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004563   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1323    20373    4               TCCHR$ -> KL$CCHR.TMNALG_AFTHT = VAL ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:265  
  20373  4 004564   000047 470400 2                  LDP0    TCCHR$
         4 004565   000100 101500                    MRL     fill='000'O
         4 004566   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 004567   000001 000001                    ADSC9   1,,PR0                   cn=0,n=1
         4 004570   010643 710000 4                  TRA     NEXT_PRO_OPT

     1324    20374
     1325    20375    4            CASE( 60 /* TMNALG_AFTCUP */ ) ;

     1326    20376    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20376  4 004571   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004572   200156 756100                    STQ     J+1,,AUTO
         4 004573   000073 236000 5                  LDQ     59
         4 004574   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004575   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004576   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1327    20377    4               TCCHR$ -> KL$CCHR.TMNALG_AFTCUP = VAL ;

  20377  4 004577   000047 470400 2                  LDP0    TCCHR$
         4 004600   000100 101500                    MRL     fill='000'O
         4 004601   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 004602   000001 200001                    ADSC9   1,,PR0                   cn=1,n=1
         4 004603   010643 710000 4                  TRA     NEXT_PRO_OPT

     1328    20378
     1329    20379    4            CASE( 62 /* TMNALG_AFTHPA */ ) ;

     1330    20380    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20380  4 004604   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004605   200156 756100                    STQ     J+1,,AUTO
         4 004606   000073 236000 5                  LDQ     59
         4 004607   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004610   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004611   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:266  

     1331    20381    4               TCCHR$ -> KL$CCHR.TMNALG_AFTHPA = VAL ;

  20381  4 004612   000047 470400 2                  LDP0    TCCHR$
         4 004613   000100 101500                    MRL     fill='000'O
         4 004614   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 004615   000001 400001                    ADSC9   1,,PR0                   cn=2,n=1
         4 004616   010643 710000 4                  TRA     NEXT_PRO_OPT

     1332    20382
     1333    20383    4            CASE( 162 /* TMNALG_FILCHR */ ) ;

     1334    20384    4               CALL GET_HEX_VAL (1) ALTRET( NEXT_PRO_OPT );

  20384  4 004617   000024 236000 5                  LDQ     20
         4 004620   200163 756100                    STQ     IDENT+1,,AUTO
         4 004621   010767 701000 4                  TSX1    GET_HEX_VAL
         4 004622   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1335    20385    4               TCCHR$ -> KL$CCHR.TMNALG_FILCHR = HEX_V;

  20385  4 004623   000047 470400 2                  LDP0    TCCHR$
         4 004624   000100 100500                    MLR     fill='000'O
         4 004625   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 004626   000001 600001                    ADSC9   1,,PR0                   cn=3,n=1
         4 004627   010643 710000 4                  TRA     NEXT_PRO_OPT

     1336    20386
     1337    20387    4            CASE( 69 /* TIMAFTCTRFNC */ );

     1338    20388    4               CALL GET_TA(TCCHR$->KL$CCHR.CTRFNCTIM) ALTRET( NEXT_PRO_OPT);

  20388  4 004630   000047 236000 2                  LDQ     TCCHR$
         4 004631   000002 036003                    ADLQ    2,DU
         4 004632   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004633   011251 701000 4                  TSX1    GET_TA
         4 004634   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:267  
         4 004635   010643 710000 4                  TRA     NEXT_PRO_OPT

     1339    20389
     1340    20390    4            CASE( 67 /* BS_TIM */ ) ;

     1341    20391    4               CALL GET_TA( TCCHR$->KL$CCHR.BS_TIM ) ALTRET( NEXT_PRO_OPT );

  20391  4 004636   000047 236000 2                  LDQ     TCCHR$
         4 004637   000074 036000 5                  ADLQ    60
         4 004640   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004641   011251 701000 4                  TSX1    GET_TA
         4 004642   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004643   010643 710000 4                  TRA     NEXT_PRO_OPT

     1342    20392
     1343    20393    4            CASE( 68 /* ERSTIM */ ) ;

     1344    20394    4               CALL GET_TA( TCCHR$->KL$CCHR.ERSTIM ) ALTRET(NEXT_PRO_OPT);

  20394  4 004644   000047 236000 2                  LDQ     TCCHR$
         4 004645   000003 036003                    ADLQ    3,DU
         4 004646   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004647   011251 701000 4                  TSX1    GET_TA
         4 004650   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004651   010643 710000 4                  TRA     NEXT_PRO_OPT

     1345    20395
     1346    20396    4            CASE( 70 /* TMNALG_PRM1 */ ) ;

     1347    20397    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM1) ALTRET(NEXT_PRO_OPT);

  20397  4 004652   000047 236000 2                  LDQ     TCCHR$
         4 004653   000075 036000 5                  ADLQ    61
         4 004654   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004655   011251 701000 4                  TSX1    GET_TA
         4 004656   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004657   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:268  

     1348    20398
     1349    20399    4            CASE( 71 /* TMNALG_PRM2 */ ) ;

     1350    20400    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM2) ALTRET(NEXT_PRO_OPT);

  20400  4 004660   000047 236000 2                  LDQ     TCCHR$
         4 004661   000004 036003                    ADLQ    4,DU
         4 004662   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004663   011251 701000 4                  TSX1    GET_TA
         4 004664   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004665   010643 710000 4                  TRA     NEXT_PRO_OPT

     1351    20401
     1352    20402    4            CASE( 72 /* TMNALG_PRM3 */ ) ;

     1353    20403    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM3) ALTRET(NEXT_PRO_OPT);

  20403  4 004666   000047 236000 2                  LDQ     TCCHR$
         4 004667   000076 036000 5                  ADLQ    62
         4 004670   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004671   011251 701000 4                  TSX1    GET_TA
         4 004672   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004673   010643 710000 4                  TRA     NEXT_PRO_OPT

     1354    20404
     1355    20405    4            CASE( 73 /* TMNALG_PRM4 */ ) ;

     1356    20406    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM4) ALTRET(NEXT_PRO_OPT);

  20406  4 004674   000047 236000 2                  LDQ     TCCHR$
         4 004675   000005 036003                    ADLQ    5,DU
         4 004676   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004677   011251 701000 4                  TSX1    GET_TA
         4 004700   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004701   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:269  
     1357    20407
     1358    20408    4            CASE( 74 /* TMNALG_PRM5 */ ) ;

     1359    20409    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM5) ALTRET(NEXT_PRO_OPT);

  20409  4 004702   000047 236000 2                  LDQ     TCCHR$
         4 004703   000077 036000 5                  ADLQ    63
         4 004704   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004705   011251 701000 4                  TSX1    GET_TA
         4 004706   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004707   010643 710000 4                  TRA     NEXT_PRO_OPT

     1360    20410
     1361    20411    4            CASE( 75 /* TMNALG_PRM6 */ ) ;

     1362    20412    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM6) ALTRET(NEXT_PRO_OPT);

  20412  4 004710   000047 236000 2                  LDQ     TCCHR$
         4 004711   000006 036003                    ADLQ    6,DU
         4 004712   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004713   011251 701000 4                  TSX1    GET_TA
         4 004714   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004715   010643 710000 4                  TRA     NEXT_PRO_OPT

     1363    20413
     1364    20414    4            CASE( 76 /* TMNALG_PRM7 */ ) ;

     1365    20415    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM7) ALTRET(NEXT_PRO_OPT);

  20415  4 004716   000047 236000 2                  LDQ     TCCHR$
         4 004717   000100 036000 5                  ADLQ    64
         4 004720   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004721   011251 701000 4                  TSX1    GET_TA
         4 004722   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004723   010643 710000 4                  TRA     NEXT_PRO_OPT

     1366    20416
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:270  
     1367    20417    4            CASE( 77 /* TMNALG_PRM8 */ ) ;

     1368    20418    4               CALL GET_TA(TCCHR$->KL$CCHR.TMNALG_PRM8) ALTRET(NEXT_PRO_OPT);

  20418  4 004724   000047 236000 2                  LDQ     TCCHR$
         4 004725   000007 036003                    ADLQ    7,DU
         4 004726   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004727   011251 701000 4                  TSX1    GET_TA
         4 004730   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 004731   010643 710000 4                  TRA     NEXT_PRO_OPT

     1369    20419
     1370    20420    4            CASE( 86 /* PROTYP */ ) ;

     1371    20421
     1372    20422    4               TRMD$ -> KL$TRMD.PROTYP# = OP_CODE ;

  20422  4 004732   000052 471400 2                  LDP1    TRMD$
         4 004733   003100 061500                    CSR     bolr='003'O
         4 004734   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 004735   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9
         4 004736   010643 710000 4                  TRA     NEXT_PRO_OPT

     1373    20423
     1374    20424    4            CASE( 48 /* BLKRECS */ ) ;

     1375    20425    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20425  4 004737   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004740   200156 756100                    STQ     J+1,,AUTO
         4 004741   000073 236000 5                  LDQ     59
         4 004742   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004743   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004744   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1376    20426    4               TRMD$ -> KL$TRMD.BLKRECS# = VAL ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:271  
  20426  4 004745   000052 470400 2                  LDP0    TRMD$
         4 004746   003100 061500                    CSR     bolr='003'O
         4 004747   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 004750   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 004751   010643 710000 4                  TRA     NEXT_PRO_OPT

     1377    20427
     1378    20428    4            CASE( 47 /* BLKBYTES */ ) ;

     1379    20429    4               CALL GET_DEC_VAL( %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT );

  20429  4 004752   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 004753   200156 756100                    STQ     J+1,,AUTO
         4 004754   000053 236000 5                  LDQ     43
         4 004755   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004756   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004757   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1380    20430    4               KL$UBWORD.REPLACE = SPLIT;

  20430  4 004760   200036 220100                    LDX0    SPLIT,,AUTO
         4 004761   200003 440100                    SXL0    KL$UBWORD,,AUTO

     1381    20431    4               TRMD$ -> KL$TRMD.BLKBYTES# = KL$UBWORD.NUM ;

  20431  4 004762   000052 470400 2                  LDP0    TRMD$
         4 004763   003100 060500                    CSL     bolr='003'O
         4 004764   200003 400022                    BDSC    KL$UBWORD,,AUTO          by=2,bit=0,n=18
         4 004765   000000 400022                    BDSC    0,,PR0                   by=2,bit=0,n=18
         4 004766   010643 710000 4                  TRA     NEXT_PRO_OPT

     1382    20432
     1383    20433    4            CASE( 57 /* RETRYS */ ) ;

     1384    20434    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20434  4 004767   000001 236000 xsym               LDQ     B_VECTNIL+1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:272  
         4 004770   200156 756100                    STQ     J+1,,AUTO
         4 004771   000073 236000 5                  LDQ     59
         4 004772   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 004773   010661 701000 4                  TSX1    GET_DEC_VAL
         4 004774   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1385    20435    4               TRMD$ -> KL$TRMD.RETRYS# = VAL ;

  20435  4 004775   000052 470400 2                  LDP0    TRMD$
         4 004776   003100 061500                    CSR     bolr='003'O
         4 004777   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 005000   000001 000011                    BDSC    1,,PR0                   by=0,bit=0,n=9
         4 005001   010643 710000 4                  TRA     NEXT_PRO_OPT

     1386    20436
     1387    20437    4            CASE( 49 /* DELAYS */ ) ;

     1388    20438    4               CALL GET_DEC_VAL( 511 ) ALTRET( NEXT_PRO_OPT );

  20438  4 005002   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005003   200156 756100                    STQ     J+1,,AUTO
         4 005004   000073 236000 5                  LDQ     59
         4 005005   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005006   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005007   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1389    20439    4               TRMD$ -> KL$TRMD.DELAYS# = VAL ;

  20439  4 005010   000052 470400 2                  LDP0    TRMD$
         4 005011   003100 061500                    CSR     bolr='003'O
         4 005012   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 005013   000001 200011                    BDSC    1,,PR0                   by=1,bit=0,n=9
         4 005014   010643 710000 4                  TRA     NEXT_PRO_OPT

     1390    20440
     1391    20441    4            CASE( 212 /* L_CALL_DELAY */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:273  
     1392    20442    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20442  4 005015   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005016   200156 756100                    STQ     J+1,,AUTO
         4 005017   000031 236000 5                  LDQ     25
         4 005020   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005021   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005022   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1393    20443    4               VIRCIR$ -> KL$VIRCIR.CDLY# = VAL;

  20443  4 005023   000055 470400 2                  LDP0    VIRCIR$
         4 005024   000100 101500                    MRL     fill='000'O
         4 005025   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005026   000002 400001                    ADSC9   2,,PR0                   cn=2,n=1
         4 005027   010643 710000 4                  TRA     NEXT_PRO_OPT

     1394    20444
     1395    20445    4            CASE( 24 /* MULSTRM */ ) ;

     1396    20446    4               TRMD$ -> KL$TRMD.MULSTRM# = YES_NO_FLG;

  20446  4 005030   000052 471400 2                  LDP1    TRMD$
         4 005031   003100 060400                    CSL     bolr='003'O
         4 005032   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 005033   100001 410002                    BDSC    1,,PR1                   by=2,bit=1,n=2
         4 005034   010643 710000 4                  TRA     NEXT_PRO_OPT

     1397    20447
     1398    20448    4            CASE( 108 /* COMPRESSION */ );

     1399    20449    5               DO CASE( OP_CODE );

  20449  4 005035   200031 236100                    LDQ     OP_CODE,,AUTO
         4 005036   000005 116007                    CMPQ    5,DL
         4 005037   005041 602006 4                  TNC     s:20449+4,QL
         4 005040   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:274  
         4 005041   005071 710000 4                  TRA     s:20458
         4 005042   005046 710000 4                  TRA     s:20451
         4 005043   005053 710000 4                  TRA     s:20453
         4 005044   005060 710000 4                  TRA     s:20455
         4 005045   005065 710000 4                  TRA     s:20457

     1400    20450    5                  CASE( 1   /*  YES_VAL  */ );

     1401    20451    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_YES# ;

  20451  4 005046   000052 471400 2                  LDP1    TRMD$
         4 005047   003100 061400                    CSR     bolr='003'O
         4 005050   000003 000044 xsym               BDSC    B_VECTNIL+3              by=0,bit=0,n=36
         4 005051   100002 230006                    BDSC    2,,PR1                   by=1,bit=3,n=6
         4 005052   010643 710000 4                  TRA     NEXT_PRO_OPT

     1402    20452    5                  CASE( 2   /*  NO_VAL  */ );

     1403    20453    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_NO# ;

  20453  4 005053   000052 471400 2                  LDP1    TRMD$
         4 005054   003100 061400                    CSR     bolr='003'O
         4 005055   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         4 005056   100002 230006                    BDSC    2,,PR1                   by=1,bit=3,n=6
         4 005057   010643 710000 4                  TRA     NEXT_PRO_OPT

     1404    20454    5                  CASE( 3 /* LINE_VAL */ );

     1405    20455    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_LINE# ;

  20455  4 005060   000052 471400 2                  LDP1    TRMD$
         4 005061   003100 061400                    CSR     bolr='003'O
         4 005062   000004 000044 xsym               BDSC    B_VECTNIL+4              by=0,bit=0,n=36
         4 005063   100002 230006                    BDSC    2,,PR1                   by=1,bit=3,n=6
         4 005064   010643 710000 4                  TRA     NEXT_PRO_OPT

     1406    20456    5                  CASE( 4 /* BLANKS_VAL */ );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:275  

     1407    20457    5                     TRMD$ -> KL$TRMD.COMPRESS# = %KLCO_BLANKS# ;

  20457  4 005065   000052 471400 2                  LDP1    TRMD$
         4 005066   003100 061400                    CSR     bolr='003'O
         4 005067   000005 000044 xsym               BDSC    B_VECTNIL+5              by=0,bit=0,n=36
         4 005070   100002 230006                    BDSC    2,,PR1                   by=1,bit=3,n=6

     1408    20458    5                  END;

  20458  4 005071   010643 710000 4                  TRA     NEXT_PRO_OPT

     1409    20459
     1410    20460    4            CASE( 107 /* INTERVAL */ );

     1411    20461    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20461  4 005072   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005073   200156 756100                    STQ     J+1,,AUTO
         4 005074   000031 236000 5                  LDQ     25
         4 005075   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005076   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005077   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1412    20462    4               TRMD$ -> KL$TRMD.INTERVAL# = VAL;

  20462  4 005100   000052 470400 2                  LDP0    TRMD$
         4 005101   003100 061500                    CSR     bolr='003'O
         4 005102   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 005103   000002 000011                    BDSC    2,,PR0                   by=0,bit=0,n=9
         4 005104   010643 710000 4                  TRA     NEXT_PRO_OPT

     1413    20463
     1414    20464    4            CASE(  80 /* EMCHR */ ) ;

     1415    20465    4               CALL GET_HEX_VAL( 1 ) ALTRET( NEXT_PRO_OPT );

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:276  
  20465  4 005105   000024 236000 5                  LDQ     20
         4 005106   200163 756100                    STQ     IDENT+1,,AUTO
         4 005107   010767 701000 4                  TSX1    GET_HEX_VAL
         4 005110   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1416    20466    4               TRMD$ -> KL$TRMD.EMCHR# =  HEX_V ;

  20466  4 005111   000052 470400 2                  LDP0    TRMD$
         4 005112   003100 060500                    CSL     bolr='003'O
         4 005113   200137 000011                    BDSC    HEX_V,,AUTO              by=0,bit=0,n=9
         4 005114   000002 400011                    BDSC    2,,PR0                   by=2,bit=0,n=9
         4 005115   010643 710000 4                  TRA     NEXT_PRO_OPT

     1417    20467
     1418    20468    4            CASE(  81 /* IRSCHR */ ) ;

     1419    20469    4               CALL GET_HEX_VAL( 1 ) ALTRET( NEXT_PRO_OPT );

  20469  4 005116   000024 236000 5                  LDQ     20
         4 005117   200163 756100                    STQ     IDENT+1,,AUTO
         4 005120   010767 701000 4                  TSX1    GET_HEX_VAL
         4 005121   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1420    20470    4               TRMD$ -> KL$TRMD.IRSCHR# = HEX_V ;

  20470  4 005122   000052 470400 2                  LDP0    TRMD$
         4 005123   003100 060500                    CSL     bolr='003'O
         4 005124   200137 000011                    BDSC    HEX_V,,AUTO              by=0,bit=0,n=9
         4 005125   000002 600011                    BDSC    2,,PR0                   by=3,bit=0,n=9
         4 005126   010643 710000 4                  TRA     NEXT_PRO_OPT

     1421    20471
     1422    20472    4            CASE(  88 /* LSTRECCTN */ ) ;

     1423    20473    4               TRMD$ -> KL$TRMD.LSTRECCTN# = YES_NO;

  20473  4 005127   000052 471400 2                  LDP1    TRMD$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:277  
         4 005130   003100 060400                    CSL     bolr='003'O
         4 005131   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005132   100003 010001                    BDSC    3,,PR1                   by=0,bit=1,n=1
         4 005133   010643 710000 4                  TRA     NEXT_PRO_OPT

     1424    20474
     1425    20475    4            CASE(  105 /* ERRDUPBLK */ ) ;

     1426    20476    4               TRMD$ -> KL$TRMD.ERRDUPBLK# = YES_NO;

  20476  4 005134   000052 471400 2                  LDP1    TRMD$
         4 005135   003100 060400                    CSL     bolr='003'O
         4 005136   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005137   100003 020001                    BDSC    3,,PR1                   by=0,bit=2,n=1
         4 005140   010643 710000 4                  TRA     NEXT_PRO_OPT

     1427    20477
     1428    20478    4            CASE(  106 /* RRR */ ) ;

     1429    20479    4               TRMD$ -> KL$TRMD.RRR# = YES_NO;

  20479  4 005141   000052 471400 2                  LDP1    TRMD$
         4 005142   003100 060400                    CSL     bolr='003'O
         4 005143   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005144   100003 030001                    BDSC    3,,PR1                   by=0,bit=3,n=1
         4 005145   010643 710000 4                  TRA     NEXT_PRO_OPT

     1430    20480
     1431    20481    4            CASE(  113 /* SLC */ ) ;

     1432    20482    4               TRMD$ -> KL$TRMD.SLC# = YES_NO;

  20482  4 005146   000052 471400 2                  LDP1    TRMD$
         4 005147   003100 060400                    CSL     bolr='003'O
         4 005150   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005151   100003 040001                    BDSC    3,,PR1                   by=0,bit=4,n=1
         4 005152   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:278  

     1433    20483
     1434    20484    4            CASE(  116 /* SLCALLBLK */ ) ;

     1435    20485    4               TRMD$ -> KL$TRMD.SLCALLBLK# = YES_NO;

  20485  4 005153   000052 471400 2                  LDP1    TRMD$
         4 005154   003100 060400                    CSL     bolr='003'O
         4 005155   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005156   100003 050001                    BDSC    3,,PR1                   by=0,bit=5,n=1
         4 005157   010643 710000 4                  TRA     NEXT_PRO_OPT

     1436    20486
     1437    20487    4            CASE(  117 /* PADSIGNON */ ) ;

     1438    20488    4               TRMD$ -> KL$TRMD.PADSIGNON# = YES_NO;

  20488  4 005160   000052 471400 2                  LDP1    TRMD$
         4 005161   003100 060400                    CSL     bolr='003'O
         4 005162   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005163   100003 060001                    BDSC    3,,PR1                   by=0,bit=6,n=1
         4 005164   010643 710000 4                  TRA     NEXT_PRO_OPT

     1439    20489
     1440    20490    4            CASE( 109 /* TIMEOUT*/ );

     1441    20491    4               CALL GET_DEC_VAL ( 255, 1 ) ALTRET( NEXT_PRO_OPT );

  20491  4 005165   000024 236000 5                  LDQ     20
         4 005166   200156 756100                    STQ     J+1,,AUTO
         4 005167   000031 236000 5                  LDQ     25
         4 005170   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005171   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005172   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1442    20492    4               LINK$ -> KL$LINK.TMT# = VAL;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:279  
  20492  4 005173   000054 470400 2                  LDP0    LINK$
         4 005174   000100 101500                    MRL     fill='000'O
         4 005175   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005176   000001 000001                    ADSC9   1,,PR0                   cn=0,n=1
         4 005177   010643 710000 4                  TRA     NEXT_PRO_OPT

     1443    20493
     1444    20494    4            CASE( 110 /* RETRANSMISSIONS */ );

     1445    20495    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20495  4 005200   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005201   200156 756100                    STQ     J+1,,AUTO
         4 005202   000031 236000 5                  LDQ     25
         4 005203   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005204   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005205   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1446    20496    4               LINK$ -> KL$LINK.RTR# = VAL;

  20496  4 005206   000054 470400 2                  LDP0    LINK$
         4 005207   000100 101500                    MRL     fill='000'O
         4 005210   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005211   000000 600001                    ADSC9   0,,PR0                   cn=3,n=1
         4 005212   010643 710000 4                  TRA     NEXT_PRO_OPT

     1447    20497
     1448    20498    4            CASE( 111 /* WINDOW */ );

     1449    20499
     1450    20500    4               IF LINK$ -> KL$LINK.EXTSEQ# THEN

  20500  4 005213   000054 471400 2                  LDP1    LINK$
         4 005214   000000 066500                    CMPB    filb='0'B
         4 005215   100000 410001                    BDSC    0,,PR1                   by=2,bit=1,n=1
         4 005216   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 005217   005227 600000 4                  TZE     s:20503
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:280  

     1451    20501    4                  CALL GET_DEC_VAL( 127, 1 ) ALTRET( NEXT_PRO_OPT );

  20501  4 005220   000024 236000 5                  LDQ     20
         4 005221   200156 756100                    STQ     J+1,,AUTO
         4 005222   000102 236000 5                  LDQ     66
         4 005223   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005224   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005225   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 005226   005235 710000 4                  TRA     s:20504

     1452    20502    4               ELSE
     1453    20503    4                  CALL GET_DEC_VAL( 7, 1 ) ALTRET( NEXT_PRO_OPT );

  20503  4 005227   000024 236000 5                  LDQ     20
         4 005230   200156 756100                    STQ     J+1,,AUTO
         4 005231   000103 236000 5                  LDQ     67
         4 005232   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005233   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005234   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1454    20504    4               LINK$ -> KL$LINK.WND# = VAL;

  20504  4 005235   000054 470400 2                  LDP0    LINK$
         4 005236   000100 101500                    MRL     fill='000'O
         4 005237   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005240   000001 200001                    ADSC9   1,,PR0                   cn=1,n=1
         4 005241   010643 710000 4                  TRA     NEXT_PRO_OPT

     1455    20505
     1456    20506    4            CASE( 112 /* FRAME */ );

     1457    20507    4               LINK$ -> KL$LINK.FRMSIZ# = OP_CODE;

  20507  4 005242   000054 471400 2                  LDP1    LINK$
         4 005243   003100 061500                    CSR     bolr='003'O
         4 005244   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:281  
         4 005245   100000 030004                    BDSC    0,,PR1                   by=0,bit=3,n=4
         4 005246   010643 710000 4                  TRA     NEXT_PRO_OPT

     1458    20508
     1459    20509    4            CASE( 114 /* CALLS */ );

     1460    20510    4               LINK$ -> KL$LINK.CLS# = OP_CODE;

  20510  4 005247   000054 471400 2                  LDP1    LINK$
         4 005250   003100 061500                    CSR     bolr='003'O
         4 005251   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 005252   100000 010002                    BDSC    0,,PR1                   by=0,bit=1,n=2
         4 005253   010643 710000 4                  TRA     NEXT_PRO_OPT

     1461    20511
     1462    20512    4            CASE( 115 /* REVERSE */ );

     1463    20513    4               IF P_TYPE = %KLTY_VIRCIR#

  20513  4 005254   000003 236000 2                  LDQ     P_TYPE
         4 005255   000010 116007                    CMPQ    8,DL
         4 005256   005264 601000 4                  TNZ     s:20515

     1464    20514    4               THEN VIRCIR$ -> KL$VIRCIR.RVR# = OP_CODE;

  20514  4 005257   000055 471400 2                  LDP1    VIRCIR$
         4 005260   003100 061500                    CSR     bolr='003'O
         4 005261   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 005262   100004 610002                    BDSC    4,,PR1                   by=3,bit=1,n=2
         4 005263   010643 710000 4                  TRA     NEXT_PRO_OPT

     1465    20515    4               ELSE LINK$ -> KL$LINK.RVR# = YES_NO;

  20515  4 005264   000054 471400 2                  LDP1    LINK$
         4 005265   003100 060400                    CSL     bolr='003'O
         4 005266   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005267   100000 070001                    BDSC    0,,PR1                   by=0,bit=7,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:282  
         4 005270   010643 710000 4                  TRA     NEXT_PRO_OPT

     1466    20516
     1467    20517    4            CASE( 118 /* MAXWINDOW */ ) ;

     1468    20518
     1469    20519    4               IF LINK$ -> KL$LINK.EXTSEQ# THEN

  20519  4 005271   000054 471400 2                  LDP1    LINK$
         4 005272   000000 066500                    CMPB    filb='0'B
         4 005273   100000 410001                    BDSC    0,,PR1                   by=2,bit=1,n=1
         4 005274   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 005275   005305 600000 4                  TZE     s:20522

     1470    20520    4                  CALL GET_DEC_VAL( 127 ) ALTRET( NEXT_PRO_OPT ) ;

  20520  4 005276   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005277   200156 756100                    STQ     J+1,,AUTO
         4 005300   000102 236000 5                  LDQ     66
         4 005301   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005302   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005303   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 005304   005313 710000 4                  TRA     s:20523

     1471    20521    4               ELSE
     1472    20522    4                  CALL GET_DEC_VAL( 7 ) ALTRET( NEXT_PRO_OPT ) ;

  20522  4 005305   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005306   200156 756100                    STQ     J+1,,AUTO
         4 005307   000103 236000 5                  LDQ     67
         4 005310   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005311   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005312   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1473    20523    4               LINK$ -> KL$LINK.MAXWND# = VAL ;

  20523  4 005313   000054 470400 2                  LDP0    LINK$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:283  
         4 005314   003100 061500                    CSR     bolr='003'O
         4 005315   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 005316   000000 420007                    BDSC    0,,PR0                   by=2,bit=2,n=7
         4 005317   010643 710000 4                  TRA     NEXT_PRO_OPT

     1474    20524
     1475    20525    4            CASE( 119 /* RESPDELAY */ ) ;

     1476    20526    5               IF P_TYPE = %KLTY_VIRCIR# THEN DO;

  20526  4 005320   000003 236000 2                  LDQ     P_TYPE
         4 005321   000010 116007                    CMPQ    8,DL
         4 005322   005352 601000 4                  TNZ     s:20534

     1477    20527    5                  IF VIRCIR$ -> KL$VIRCIR.EXTSEQ# THEN

  20527  4 005323   000055 471400 2                  LDP1    VIRCIR$
         4 005324   000000 066500                    CMPB    filb='0'B
         4 005325   100004 010001                    BDSC    4,,PR1                   by=0,bit=1,n=1
         4 005326   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 005327   005337 600000 4                  TZE     s:20530

     1478    20528    5                     CALL GET_DEC_VAL( 127, 1 ) ALTRET( NEXT_PRO_OPT ) ;

  20528  4 005330   000024 236000 5                  LDQ     20
         4 005331   200156 756100                    STQ     J+1,,AUTO
         4 005332   000102 236000 5                  LDQ     66
         4 005333   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005334   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005335   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 005336   005345 710000 4                  TRA     s:20531

     1479    20529    5                  ELSE
     1480    20530    5                     CALL GET_DEC_VAL( 7, 1 ) ALTRET( NEXT_PRO_OPT ) ;

  20530  4 005337   000024 236000 5                  LDQ     20
         4 005340   200156 756100                    STQ     J+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:284  
         4 005341   000103 236000 5                  LDQ     67
         4 005342   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005343   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005344   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1481    20531    5                  VIRCIR$ -> KL$VIRCIR.RSPDLY# = VAL;

  20531  4 005345   000055 470400 2                  LDP0    VIRCIR$
         4 005346   003100 061500                    CSR     bolr='003'O
         4 005347   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 005350   000004 020007                    BDSC    4,,PR0                   by=0,bit=2,n=7

     1482    20532    5                  END;   /*  Profile type is vircir  */

  20532  4 005351   010643 710000 4                  TRA     NEXT_PRO_OPT

     1483    20533    5               ELSE DO;

     1484    20534    5                  IF LINK$ -> KL$LINK.EXTSEQ# THEN

  20534  4 005352   000054 471400 2                  LDP1    LINK$
         4 005353   000000 066500                    CMPB    filb='0'B
         4 005354   100000 410001                    BDSC    0,,PR1                   by=2,bit=1,n=1
         4 005355   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 005356   005366 600000 4                  TZE     s:20537

     1485    20535    5                     CALL GET_DEC_VAL( 127, 1 ) ALTRET( NEXT_PRO_OPT ) ;

  20535  4 005357   000024 236000 5                  LDQ     20
         4 005360   200156 756100                    STQ     J+1,,AUTO
         4 005361   000102 236000 5                  LDQ     66
         4 005362   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005363   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005364   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 005365   005374 710000 4                  TRA     s:20538

     1486    20536    5                  ELSE
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:285  
     1487    20537    5                     CALL GET_DEC_VAL( 7, 1 ) ALTRET( NEXT_PRO_OPT ) ;

  20537  4 005366   000024 236000 5                  LDQ     20
         4 005367   200156 756100                    STQ     J+1,,AUTO
         4 005370   000103 236000 5                  LDQ     67
         4 005371   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005372   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005373   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1488    20538    5                  LINK$ -> KL$LINK.RSPDLY# = VAL ;

  20538  4 005374   000054 470400 2                  LDP0    LINK$
         4 005375   003100 061500                    CSR     bolr='003'O
         4 005376   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 005377   000000 220007                    BDSC    0,,PR0                   by=1,bit=2,n=7

     1489    20539    5                  END;   /*  Profile type is link  */

  20539  4 005400   010643 710000 4                  TRA     NEXT_PRO_OPT

     1490    20540
     1491    20541
     1492    20542    4            CASE ( 211 /* L_CALL_RETRYS */ );

     1493    20543
     1494    20544    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );

  20544  4 005401   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005402   200156 756100                    STQ     J+1,,AUTO
         4 005403   000104 236000 5                  LDQ     68
         4 005404   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005405   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005406   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1495    20545    4               VIRCIR$ -> KL$VIRCIR.CRTR# = VAL ;

  20545  4 005407   000055 470400 2                  LDP0    VIRCIR$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:286  
         4 005410   000100 101500                    MRL     fill='000'O
         4 005411   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005412   000002 600001                    ADSC9   2,,PR0                   cn=3,n=1
         4 005413   010643 710000 4                  TRA     NEXT_PRO_OPT

     1496    20546
     1497    20547    4            CASE ( 210 /* L_CALL_TIM */ );

     1498    20548
     1499    20549    4               CALL GET_DEC_VAL( 255, 3 ) ALTRET( NEXT_PRO_OPT );

  20549  4 005414   000105 236000 5                  LDQ     69
         4 005415   200156 756100                    STQ     J+1,,AUTO
         4 005416   000031 236000 5                  LDQ     25
         4 005417   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005420   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005421   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1500    20550    4               VIRCIR$ -> KL$VIRCIR.CTMT# = VAL ;

  20550  4 005422   000055 470400 2                  LDP0    VIRCIR$
         4 005423   000100 101500                    MRL     fill='000'O
         4 005424   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005425   000003 000001                    ADSC9   3,,PR0                   cn=0,n=1
         4 005426   010643 710000 4                  TRA     NEXT_PRO_OPT

     1501    20551
     1502    20552    4            CASE ( 200 /* L_CHA_INFO */ ) ;

     1503    20553
     1504    20554    4               IF P_TYPE = %KLTY_LINK# THEN

  20554  4 005427   000003 236000 2                  LDQ     P_TYPE
         4 005430   000004 116007                    CMPQ    4,DL
         4 005431   005437 601000 4                  TNZ     s:20557

     1505    20555    4                  LINK$ -> KL$LINK.CHARGE# = YES_NO ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:287  

  20555  4 005432   000054 471400 2                  LDP1    LINK$
         4 005433   003100 060400                    CSL     bolr='003'O
         4 005434   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005435   100000 210001                    BDSC    0,,PR1                   by=1,bit=1,n=1
         4 005436   010643 710000 4                  TRA     NEXT_PRO_OPT

     1506    20556    4               ELSE
     1507    20557    4                  VIRCIR$ -> KL$VIRCIR.CHARGE# = YES_NO ;

  20557  4 005437   000055 471400 2                  LDP1    VIRCIR$
         4 005440   003100 060400                    CSL     bolr='003'O
         4 005441   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005442   100004 410001                    BDSC    4,,PR1                   by=2,bit=1,n=1
         4 005443   010643 710000 4                  TRA     NEXT_PRO_OPT

     1508    20558
     1509    20559    4            CASE ( 205 /* L_CLEAR_RETRYS */ );

     1510    20560
     1511    20561    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );

  20561  4 005444   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005445   200156 756100                    STQ     J+1,,AUTO
         4 005446   000104 236000 5                  LDQ     68
         4 005447   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005450   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005451   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1512    20562    4               VIRCIR$ -> KL$VIRCIR.CLRRET# = VAL ;

  20562  4 005452   000055 470400 2                  LDP0    VIRCIR$
         4 005453   000100 101500                    MRL     fill='000'O
         4 005454   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005455   000001 200001                    ADSC9   1,,PR0                   cn=1,n=1
         4 005456   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:288  
     1513    20563
     1514    20564    4            CASE ( 204 /* L_CLEAR_TIM */ );

     1515    20565
     1516    20566    4               CALL GET_DEC_VAL( 255, 3 ) ALTRET( NEXT_PRO_OPT );

  20566  4 005457   000105 236000 5                  LDQ     69
         4 005460   200156 756100                    STQ     J+1,,AUTO
         4 005461   000031 236000 5                  LDQ     25
         4 005462   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005463   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005464   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1517    20567    4               VIRCIR$ -> KL$VIRCIR.CLRTIM# = VAL ;

  20567  4 005465   000055 470400 2                  LDP0    VIRCIR$
         4 005466   000100 101500                    MRL     fill='000'O
         4 005467   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005470   000001 000001                    ADSC9   1,,PR0                   cn=0,n=1
         4 005471   010643 710000 4                  TRA     NEXT_PRO_OPT

     1518    20568
     1519    20569    4            CASE ( 207 /* L_DATA_RETRYS */ );

     1520    20570
     1521    20571    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );

  20571  4 005472   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005473   200156 756100                    STQ     J+1,,AUTO
         4 005474   000104 236000 5                  LDQ     68
         4 005475   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005476   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005477   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1522    20572    4               VIRCIR$ -> KL$VIRCIR.DATRET# = VAL ;

  20572  4 005500   000055 470400 2                  LDP0    VIRCIR$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:289  
         4 005501   000100 101500                    MRL     fill='000'O
         4 005502   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005503   000001 600001                    ADSC9   1,,PR0                   cn=3,n=1
         4 005504   010643 710000 4                  TRA     NEXT_PRO_OPT

     1523    20573
     1524    20574    4            CASE ( 206 /* L_DATA_TIM */ );

     1525    20575
     1526    20576    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20576  4 005505   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005506   200156 756100                    STQ     J+1,,AUTO
         4 005507   000031 236000 5                  LDQ     25
         4 005510   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005511   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005512   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1527    20577    4               VIRCIR$ -> KL$VIRCIR.DATTIM# = VAL ;

  20577  4 005513   000055 470400 2                  LDP0    VIRCIR$
         4 005514   000100 101500                    MRL     fill='000'O
         4 005515   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005516   000001 400001                    ADSC9   1,,PR0                   cn=2,n=1
         4 005517   010643 710000 4                  TRA     NEXT_PRO_OPT

     1528    20578
     1529    20579    4            CASE ( 176 /* FAST SELECT ACCEPT */ ) ;

     1530    20580
     1531    20581    4               LINK$ -> KL$LINK.FSA# = YES_NO ;

  20581  4 005520   000054 471400 2                  LDP1    LINK$
         4 005521   003100 060400                    CSL     bolr='003'O
         4 005522   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005523   100000 100001                    BDSC    0,,PR1                   by=0,bit=8,n=1
         4 005524   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:290  

     1532    20582
     1533    20583    4            CASE ( 209 /* L_IDLE_TIM */ ) ;

     1534    20584
     1535    20585    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20585  4 005525   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005526   200156 756100                    STQ     J+1,,AUTO
         4 005527   000031 236000 5                  LDQ     25
         4 005530   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005531   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005532   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1536    20586    4               IF P_TYPE = %KLTY_LINK# THEN

  20586  4 005533   000003 235000 2                  LDA     P_TYPE
         4 005534   000004 115007                    CMPA    4,DL
         4 005535   005543 601000 4                  TNZ     s:20589

     1537    20587    4                  LINK$ -> KL$LINK.IDLTIM# = VAL ;

  20587  4 005536   000054 470400 2                  LDP0    LINK$
         4 005537   000100 101500                    MRL     fill='000'O
         4 005540   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005541   000002 000001                    ADSC9   2,,PR0                   cn=0,n=1
         4 005542   010643 710000 4                  TRA     NEXT_PRO_OPT

     1538    20588    4               ELSE
     1539    20589    4                  VIRCIR$ -> KL$VIRCIR.IDLTIM# = VAL ;

  20589  4 005543   000055 470400 2                  LDP0    VIRCIR$
         4 005544   000100 101500                    MRL     fill='000'O
         4 005545   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005546   000002 200001                    ADSC9   2,,PR0                   cn=1,n=1
         4 005547   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:291  
     1540    20590
     1541    20591    4            CASE ( 208 /* L_INT_TIM */ );

     1542    20592
     1543    20593    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20593  4 005550   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005551   200156 756100                    STQ     J+1,,AUTO
         4 005552   000031 236000 5                  LDQ     25
         4 005553   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005554   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005555   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1544    20594    4               VIRCIR$ -> KL$VIRCIR.INTTIM# = VAL ;

  20594  4 005556   000055 470400 2                  LDP0    VIRCIR$
         4 005557   000100 101500                    MRL     fill='000'O
         4 005560   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005561   000002 000001                    ADSC9   2,,PR0                   cn=0,n=1
         4 005562   010643 710000 4                  TRA     NEXT_PRO_OPT

     1545    20595
     1546    20596    4            CASE ( 203 /* L_RESET_RETRYS */ );

     1547    20597
     1548    20598    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );

  20598  4 005563   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005564   200156 756100                    STQ     J+1,,AUTO
         4 005565   000104 236000 5                  LDQ     68
         4 005566   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005567   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005570   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1549    20599    4               VIRCIR$ -> KL$VIRCIR.RESRET# = VAL ;

  20599  4 005571   000055 470400 2                  LDP0    VIRCIR$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:292  
         4 005572   000100 101500                    MRL     fill='000'O
         4 005573   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005574   000000 600001                    ADSC9   0,,PR0                   cn=3,n=1
         4 005575   010643 710000 4                  TRA     NEXT_PRO_OPT

     1550    20600
     1551    20601    4            CASE ( 202 /* L_RESET_TIM */ );

     1552    20602
     1553    20603    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20603  4 005576   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005577   200156 756100                    STQ     J+1,,AUTO
         4 005600   000031 236000 5                  LDQ     25
         4 005601   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005602   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005603   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1554    20604    4               VIRCIR$ -> KL$VIRCIR.RESTIM# = VAL ;

  20604  4 005604   000055 470400 2                  LDP0    VIRCIR$
         4 005605   000100 101500                    MRL     fill='000'O
         4 005606   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005607   000000 400001                    ADSC9   0,,PR0                   cn=2,n=1
         4 005610   010643 710000 4                  TRA     NEXT_PRO_OPT

     1555    20605
     1556    20606    4            CASE ( 121 /* RESTART_RETRYS */ );

     1557    20607
     1558    20608    4               CALL GET_DEC_VAL( 10 ) ALTRET( NEXT_PRO_OPT );

  20608  4 005611   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005612   200156 756100                    STQ     J+1,,AUTO
         4 005613   000104 236000 5                  LDQ     68
         4 005614   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005615   010661 701000 4                  TSX1    GET_DEC_VAL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:293  
         4 005616   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1559    20609    4               LINK$ -> KL$LINK.RESRTY# = VAL ;

  20609  4 005617   000054 470400 2                  LDP0    LINK$
         4 005620   000100 101500                    MRL     fill='000'O
         4 005621   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005622   000001 600001                    ADSC9   1,,PR0                   cn=3,n=1
         4 005623   010643 710000 4                  TRA     NEXT_PRO_OPT

     1560    20610
     1561    20611    4            CASE ( 120 /* RESTART_TIM */ );

     1562    20612
     1563    20613    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20613  4 005624   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005625   200156 756100                    STQ     J+1,,AUTO
         4 005626   000031 236000 5                  LDQ     25
         4 005627   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005630   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005631   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1564    20614    4               LINK$ -> KL$LINK.RESTIM# = VAL ;

  20614  4 005632   000054 470400 2                  LDP0    LINK$
         4 005633   000100 101500                    MRL     fill='000'O
         4 005634   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 005635   000001 400001                    ADSC9   1,,PR0                   cn=2,n=1
         4 005636   010643 710000 4                  TRA     NEXT_PRO_OPT

     1565    20615
     1566    20616    4            CASE ( 201 /* L_TRANS_DEL */ );

     1567    20617
     1568    20618    4               CALL GET_DEC_VAL( 65535 ) ALTRET( NEXT_PRO_OPT );

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:294  
  20618  4 005637   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 005640   200156 756100                    STQ     J+1,,AUTO
         4 005641   000107 236000 5                  LDQ     71
         4 005642   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 005643   010661 701000 4                  TSX1    GET_DEC_VAL
         4 005644   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1569    20619    4               VIRCIR$ -> KL$VIRCIR.TRADEL = SPLIT ;

  20619  4 005645   000055 470400 2                  LDP0    VIRCIR$
         4 005646   000100 100500                    MLR     fill='000'O
         4 005647   200036 000002                    ADSC9   SPLIT,,AUTO              cn=0,n=2
         4 005650   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         4 005651   010643 710000 4                  TRA     NEXT_PRO_OPT

     1570    20620
     1571    20621    4            CASE ( 199 /* L_EXT_SEQ */ ) ;

     1572    20622
     1573    20623    5               IF P_TYPE = %KLTY_LINK# THEN DO;

  20623  4 005652   000003 236000 2                  LDQ     P_TYPE
         4 005653   000004 116007                    CMPQ    4,DL
         4 005654   005737 601000 4                  TNZ     s:20698

     1574    20624    5                  LINK$ -> KL$LINK.EXTSEQ# = YES_NO ;

  20624  4 005655   000054 471400 2                  LDP1    LINK$
         4 005656   003100 060400                    CSL     bolr='003'O
         4 005657   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005660   100000 410001                    BDSC    0,,PR1                   by=2,bit=1,n=1

     1575    20625    6                  IF ~YES_NO THEN DO;

  20625  4 005661   000002 236000 2                  LDQ     YES_NO
         4 005662   400000 376003                    ANQ     -131072,DU
         4 005663   400000 676003                    ERQ     -131072,DU
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:295  
         4 005664   010643 600000 4                  TZE     NEXT_PRO_OPT

     1576    20626    7                     IF LINK$ -> KL$LINK.WND# > 7 THEN DO;

  20626  4 005665   000100 101500                    MRL     fill='000'O
         4 005666   100001 200001                    ADSC9   1,,PR1                   cn=1,n=1
         4 005667   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 005670   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 005671   000010 116007                    CMPQ    8,DL
         4 005672   005702 604000 4                  TMI     s:20649

     1577    20627    7                        LINK$ -> KL$LINK.WND# = 7;

  20627  4 005673   000100 101400                    MRL     fill='000'O
         4 005674   000011 000004 xsym               ADSC9   B_VECTNIL+9              cn=0,n=4
         4 005675   100001 200001                    ADSC9   1,,PR1                   cn=1,n=1

     1578    20628        /*E* ERROR: ASD-E$LINKWNDMOD-0
     1579    20629             MESSAGE: Window modified to 7.
     1580    20630             MESSAGE1: The links WINDOW was greater than 7 which is only
     1581    20631                       allowed if EXTENDED SEQUENCE is set.
     1582    20632        */
     1583    20633                             %SCREAM (ERR#=%E$LINKWNDMOD, LEVEL=WARN, MID='D');

  20643  4 005676   000110 630400 5                  EPPR0   72
         4 005677   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 005700   000000 701000 xent               TSX1    ASH$WARN
         4 005701   000000 011000                    NOP     0

     1584    20648    7                        END; /*  modify LINK.WND# */

     1585    20649    7                     IF LINK$ -> KL$LINK.MAXWND# > 7 THEN DO;

  20649  4 005702   000054 470400 2                  LDP0    LINK$
         4 005703   003100 061500                    CSR     bolr='003'O
         4 005704   000000 420007                    BDSC    0,,PR0                   by=2,bit=2,n=7
         4 005705   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:296  
         4 005706   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 005707   000010 116007                    CMPQ    8,DL
         4 005710   005720 604000 4                  TMI     s:20672

     1586    20650    7                        LINK$ -> KL$LINK.MAXWND# = 7;

  20650  4 005711   003100 061400                    CSR     bolr='003'O
         4 005712   000011 000044 xsym               BDSC    B_VECTNIL+9              by=0,bit=0,n=36
         4 005713   000000 420007                    BDSC    0,,PR0                   by=2,bit=2,n=7

     1587    20651        /*E* ERROR: ASD-E$LINKMAXWNDMOD-0
     1588    20652             MESSAGE: Max window modified to 7.
     1589    20653             MESSAGE1: The links MAX WINDOW was greater than 7 which is only
     1590    20654                       allowed if EXTENDED SEQUENCE is set.
     1591    20655        */
     1592    20656                             %SCREAM (ERR#=%E$LINKMAXWNDMOD, LEVEL=WARN, MID='D');

  20666  4 005714   000111 630400 5                  EPPR0   73
         4 005715   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 005716   000000 701000 xent               TSX1    ASH$WARN
         4 005717   000000 011000                    NOP     0

     1593    20671    7                        END; /*  modify LINK.MAXWND# */

     1594    20672    7                     IF LINK$ -> KL$LINK.RSPDLY# > 7 THEN DO;

  20672  4 005720   000054 470400 2                  LDP0    LINK$
         4 005721   003100 061500                    CSR     bolr='003'O
         4 005722   000000 220007                    BDSC    0,,PR0                   by=1,bit=2,n=7
         4 005723   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 005724   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 005725   000010 116007                    CMPQ    8,DL
         4 005726   010643 604000 4                  TMI     NEXT_PRO_OPT

     1595    20673    7                        LINK$ -> KL$LINK.RSPDLY# = 7;

  20673  4 005727   003100 061400                    CSR     bolr='003'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:297  
         4 005730   000011 000044 xsym               BDSC    B_VECTNIL+9              by=0,bit=0,n=36
         4 005731   000000 220007                    BDSC    0,,PR0                   by=1,bit=2,n=7

     1596    20674        /*E* ERROR: ASD-E$LINKRSPDLYMOD-0
     1597    20675             MESSAGE: Response delay modified to 7.
     1598    20676             MESSAGE1: The links RESPONSE DELAY was greater than 7 which
     1599    20677                       is only allowed if EXTENDED SEQUENCE is set.
     1600    20678        */
     1601    20679                             %SCREAM (ERR#=%E$LINKRSPDLYMOD, LEVEL=WARN, MID='D');

  20689  4 005732   000112 630400 5                  EPPR0   74
         4 005733   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 005734   000000 701000 xent               TSX1    ASH$WARN
         4 005735   000000 011000                    NOP     0

     1602    20694    7                        END; /*  modify LINK.RSPDLY# */

     1603    20695    6                     END; /*  Extended sequence was reset */

     1604    20696    5                  END; /*  profile is type link */

  20696  4 005736   010643 710000 4                  TRA     NEXT_PRO_OPT

     1605    20697    5               ELSE DO; /*  Profile type is vircir  */

     1606    20698    5                  VIRCIR$ -> KL$VIRCIR.EXTSEQ# = YES_NO ;

  20698  4 005737   000055 471400 2                  LDP1    VIRCIR$
         4 005740   003100 060400                    CSL     bolr='003'O
         4 005741   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 005742   100004 010001                    BDSC    4,,PR1                   by=0,bit=1,n=1

     1607    20699    6                  IF ~YES_NO THEN DO;

  20699  4 005743   000002 236000 2                  LDQ     YES_NO
         4 005744   400000 376003                    ANQ     -131072,DU
         4 005745   400000 676003                    ERQ     -131072,DU
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:298  
         4 005746   010643 600000 4                  TZE     NEXT_PRO_OPT

     1608    20700    7                     IF VIRCIR$ -> KL$VIRCIR.RCVWND# > 7 THEN DO;

  20700  4 005747   003100 061500                    CSR     bolr='003'O
         4 005750   100003 620007                    BDSC    3,,PR1                   by=3,bit=2,n=7
         4 005751   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 005752   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 005753   000010 116007                    CMPQ    8,DL
         4 005754   005764 604000 4                  TMI     s:20723

     1609    20701    7                        VIRCIR$ -> KL$VIRCIR.RCVWND# = 7;

  20701  4 005755   003100 061400                    CSR     bolr='003'O
         4 005756   000011 000044 xsym               BDSC    B_VECTNIL+9              by=0,bit=0,n=36
         4 005757   100003 620007                    BDSC    3,,PR1                   by=3,bit=2,n=7

     1610    20702        /*E* ERROR: ASD-E$VCRECWNDMOD-0
     1611    20703             MESSAGE: Window modified to 7.
     1612    20704             MESSAGE1: The links WINDOW was greater than 7 which is only
     1613    20705                       allowed if EXTENDED SEQUENCE is set.
     1614    20706        */
     1615    20707                             %SCREAM (ERR#=%E$VCRECWNDMOD, LEVEL=WARN, MID='D');

  20717  4 005760   000113 630400 5                  EPPR0   75
         4 005761   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 005762   000000 701000 xent               TSX1    ASH$WARN
         4 005763   000000 011000                    NOP     0

     1616    20722    7                        END; /*  modify VIRCIR.RCVWND# */

     1617    20723    7                     IF VIRCIR$ -> KL$VIRCIR.SNDWND# > 7 THEN DO;

  20723  4 005764   000055 470400 2                  LDP0    VIRCIR$
         4 005765   003100 061500                    CSR     bolr='003'O
         4 005766   000004 420007                    BDSC    4,,PR0                   by=2,bit=2,n=7
         4 005767   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:299  
         4 005770   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 005771   000010 116007                    CMPQ    8,DL
         4 005772   006002 604000 4                  TMI     s:20746

     1618    20724    7                        VIRCIR$ -> KL$VIRCIR.SNDWND# = 7;

  20724  4 005773   003100 061400                    CSR     bolr='003'O
         4 005774   000011 000044 xsym               BDSC    B_VECTNIL+9              by=0,bit=0,n=36
         4 005775   000004 420007                    BDSC    4,,PR0                   by=2,bit=2,n=7

     1619    20725        /*E* ERROR: ASD-E$VCSNDWNDMOD-0
     1620    20726             MESSAGE: Max window modified to 7.
     1621    20727             MESSAGE1: The links MAX WINDOW was greater than 7 which is only
     1622    20728                       allowed if EXTENDED SEQUENCE is set.
     1623    20729        */
     1624    20730                             %SCREAM (ERR#=%E$VCSNDWNDMOD, LEVEL=WARN, MID='D');

  20740  4 005776   000114 630400 5                  EPPR0   76
         4 005777   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 006000   000000 701000 xent               TSX1    ASH$WARN
         4 006001   000000 011000                    NOP     0

     1625    20745    7                        END; /*  modify VIRCIR.SNDWND# */

     1626    20746    7                     IF VIRCIR$ -> KL$VIRCIR.RSPDLY# > 7 THEN DO;

  20746  4 006002   000055 470400 2                  LDP0    VIRCIR$
         4 006003   003100 061500                    CSR     bolr='003'O
         4 006004   000004 020007                    BDSC    4,,PR0                   by=0,bit=2,n=7
         4 006005   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 006006   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 006007   000010 116007                    CMPQ    8,DL
         4 006010   010643 604000 4                  TMI     NEXT_PRO_OPT

     1627    20747    7                        VIRCIR$ -> KL$VIRCIR.RSPDLY# = 7;

  20747  4 006011   003100 061400                    CSR     bolr='003'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:300  
         4 006012   000011 000044 xsym               BDSC    B_VECTNIL+9              by=0,bit=0,n=36
         4 006013   000004 020007                    BDSC    4,,PR0                   by=0,bit=2,n=7

     1628    20748        /*E* ERROR: ASD-E$VCRSPDLYMOD-0
     1629    20749             MESSAGE: Response delay modified to 7.
     1630    20750             MESSAGE1: The links RESPONSE DELAY was greater than 7 which
     1631    20751                       is only allowed if EXTENDED SEQUENCE is set.
     1632    20752        */
     1633    20753                             %SCREAM (ERR#=%E$VCRSPDLYMOD, LEVEL=WARN, MID='D');

  20763  4 006014   000115 630400 5                  EPPR0   77
         4 006015   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 006016   000000 701000 xent               TSX1    ASH$WARN
         4 006017   000000 011000                    NOP     0

     1634    20768    7                        END; /*  modify VIRCIR.RSPDLY# */

     1635    20769    6                     END; /*  Extended sequence was reset */

     1636    20770    5                  END; /*  profile is type vc */

  20770  4 006020   010643 710000 4                  TRA     NEXT_PRO_OPT

     1637    20771    4            CASE( 169 /* RECEIVE SIZE */ ) ;

     1638    20772    4               VIRCIR$ -> KL$VIRCIR.RCVSIZ# = OP_CODE;

  20772  4 006021   000055 471400 2                  LDP1    VIRCIR$
         4 006022   003100 061500                    CSR     bolr='003'O
         4 006023   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 006024   100003 410004                    BDSC    3,,PR1                   by=2,bit=1,n=4
         4 006025   010643 710000 4                  TRA     NEXT_PRO_OPT

     1639    20773
     1640    20774    4            CASE( 170 /* RECEIVE THROUGHPUT */ ) ;

     1641    20775    4               VIRCIR$ -> KL$VIRCIR.RCVTHR# = OP_CODE ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:301  

  20775  4 006026   000055 471400 2                  LDP1    VIRCIR$
         4 006027   003100 061500                    CSR     bolr='003'O
         4 006030   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 006031   100003 450004                    BDSC    3,,PR1                   by=2,bit=5,n=4
         4 006032   010643 710000 4                  TRA     NEXT_PRO_OPT

     1642    20776
     1643    20777    4            CASE( 171 /* RECEIVE WINDOW */ ) ;

     1644    20778
     1645    20779    4               IF VIRCIR$ -> KL$VIRCIR.EXTSEQ# THEN

  20779  4 006033   000055 471400 2                  LDP1    VIRCIR$
         4 006034   000000 066500                    CMPB    filb='0'B
         4 006035   100004 010001                    BDSC    4,,PR1                   by=0,bit=1,n=1
         4 006036   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006037   006047 600000 4                  TZE     s:20782

     1646    20780    4                  CALL GET_DEC_VAL( 127 ) ALTRET( NEXT_PRO_OPT );

  20780  4 006040   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006041   200156 756100                    STQ     J+1,,AUTO
         4 006042   000102 236000 5                  LDQ     66
         4 006043   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006044   010661 701000 4                  TSX1    GET_DEC_VAL
         4 006045   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006046   006055 710000 4                  TRA     s:20783

     1647    20781    4               ELSE
     1648    20782    4                  CALL GET_DEC_VAL( 7 ) ALTRET( NEXT_PRO_OPT );

  20782  4 006047   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006050   200156 756100                    STQ     J+1,,AUTO
         4 006051   000103 236000 5                  LDQ     67
         4 006052   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006053   010661 701000 4                  TSX1    GET_DEC_VAL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:302  
         4 006054   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1649    20783    4               VIRCIR$ -> KL$VIRCIR.RCVWND# = VAL ;

  20783  4 006055   000055 470400 2                  LDP0    VIRCIR$
         4 006056   003100 061500                    CSR     bolr='003'O
         4 006057   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 006060   000003 620007                    BDSC    3,,PR0                   by=3,bit=2,n=7
         4 006061   010643 710000 4                  TRA     NEXT_PRO_OPT

     1650    20784
     1651    20785    4            CASE( 172 /* RESPOND TO COMPLETE */ ) ;

     1652    20786    4               VIRCIR$ -> KL$VIRCIR.RSPTOCMP# = YES_NO;

  20786  4 006062   000055 471400 2                  LDP1    VIRCIR$
         4 006063   003100 060400                    CSL     bolr='003'O
         4 006064   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 006065   100003 610001                    BDSC    3,,PR1                   by=3,bit=1,n=1
         4 006066   010643 710000 4                  TRA     NEXT_PRO_OPT

     1653    20787
     1654    20788    4            CASE( 173 /* SEND SIZE */ ) ;

     1655    20789    4               VIRCIR$ -> KL$VIRCIR.SNDSIZ# = OP_CODE ;

  20789  4 006067   000055 471400 2                  LDP1    VIRCIR$
         4 006070   003100 061500                    CSR     bolr='003'O
         4 006071   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 006072   100004 250004                    BDSC    4,,PR1                   by=1,bit=5,n=4
         4 006073   010643 710000 4                  TRA     NEXT_PRO_OPT

     1656    20790
     1657    20791    4            CASE( 174 /* SEND THROUGHPUT */ ) ;

     1658    20792    4               VIRCIR$ -> KL$VIRCIR.SNDTHR# = OP_CODE ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:303  
  20792  4 006074   000055 471400 2                  LDP1    VIRCIR$
         4 006075   003100 061500                    CSR     bolr='003'O
         4 006076   200031 000044                    BDSC    OP_CODE,,AUTO            by=0,bit=0,n=36
         4 006077   100004 210004                    BDSC    4,,PR1                   by=1,bit=1,n=4
         4 006100   010643 710000 4                  TRA     NEXT_PRO_OPT

     1659    20793
     1660    20794    4            CASE( 175 /* SEND WINDOW */ ) ;

     1661    20795
     1662    20796    4               IF VIRCIR$ -> KL$VIRCIR.EXTSEQ# THEN

  20796  4 006101   000055 471400 2                  LDP1    VIRCIR$
         4 006102   000000 066500                    CMPB    filb='0'B
         4 006103   100004 010001                    BDSC    4,,PR1                   by=0,bit=1,n=1
         4 006104   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006105   006115 600000 4                  TZE     s:20799

     1663    20797    4                  CALL GET_DEC_VAL( 127 ) ALTRET( NEXT_PRO_OPT );

  20797  4 006106   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006107   200156 756100                    STQ     J+1,,AUTO
         4 006110   000102 236000 5                  LDQ     66
         4 006111   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006112   010661 701000 4                  TSX1    GET_DEC_VAL
         4 006113   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006114   006123 710000 4                  TRA     s:20800

     1664    20798    4               ELSE
     1665    20799    4                  CALL GET_DEC_VAL( 7 ) ALTRET( NEXT_PRO_OPT );

  20799  4 006115   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006116   200156 756100                    STQ     J+1,,AUTO
         4 006117   000103 236000 5                  LDQ     67
         4 006120   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006121   010661 701000 4                  TSX1    GET_DEC_VAL
         4 006122   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:304  

     1666    20800    4               VIRCIR$ -> KL$VIRCIR.SNDWND# = VAL ;

  20800  4 006123   000055 470400 2                  LDP0    VIRCIR$
         4 006124   003100 061500                    CSR     bolr='003'O
         4 006125   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 006126   000004 420007                    BDSC    4,,PR0                   by=2,bit=2,n=7
         4 006127   010643 710000 4                  TRA     NEXT_PRO_OPT

     1667    20801
     1668    20802    4            CASE( 177 /* RESPONSE TIMER */ ) ;

     1669    20803    4               CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20803  4 006130   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006131   200156 756100                    STQ     J+1,,AUTO
         4 006132   000031 236000 5                  LDQ     25
         4 006133   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006134   010661 701000 4                  TSX1    GET_DEC_VAL
         4 006135   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1670    20804    4               VIRCIR$ -> KL$VIRCIR.RSPTMR# = VAL ;

  20804  4 006136   000055 470400 2                  LDP0    VIRCIR$
         4 006137   000100 101500                    MRL     fill='000'O
         4 006140   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 006141   000003 200001                    ADSC9   3,,PR0                   cn=1,n=1
         4 006142   010643 710000 4                  TRA     NEXT_PRO_OPT

     1671    20805
     1672    20806
     1673    20807    4            CASE( 122 /* MAXATRS */ ) ;

     1674    20808    4               IF (OP_CODE = 7 /* DC */) THEN

  20808  4 006143   200031 236100                    LDQ     OP_CODE,,AUTO
         4 006144   000007 116007                    CMPQ    7,DL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:305  
         4 006145   006153 601000 4                  TNZ     s:20812

     1675    20809    4                  TATR$ -> VLP$TRMATTR.MAXATRS# = 255;

  20809  4 006146   000044 471400 2                  LDP1    TATR$
         4 006147   000100 101400                    MRL     fill='000'O
         4 006150   000030 000004 5                  ADSC9   24                       cn=0,n=4
         4 006151   100007 000001                    ADSC9   7,,PR1                   cn=0,n=1
         4 006152   010643 710000 4                  TRA     NEXT_PRO_OPT

     1676    20810    4               ELSE
     1677    20811    5               DO;

     1678    20812    5                  CALL GET_DEC_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20812  4 006153   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006154   200156 756100                    STQ     J+1,,AUTO
         4 006155   000031 236000 5                  LDQ     25
         4 006156   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006157   010661 701000 4                  TSX1    GET_DEC_VAL
         4 006160   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1679    20813    5                  TATR$ -> VLP$TRMATTR.MAXATRS# = VAL;

  20813  4 006161   000044 470400 2                  LDP0    TATR$
         4 006162   000100 101500                    MRL     fill='000'O
         4 006163   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 006164   000007 000001                    ADSC9   7,,PR0                   cn=0,n=1

     1680    20814    5                  END; /*  Else  */

  20814  4 006165   010643 710000 4                  TRA     NEXT_PRO_OPT

     1681    20815
     1682    20816    4            CASE( 123 /* ATRSCRNPOS */ ) ;

     1683    20817    4               TATR$ -> VLP$TRMATTR.ATRSCRNPOS# = YES_NO_FLG;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:306  

  20817  4 006166   000044 471400 2                  LDP1    TATR$
         4 006167   003100 060400                    CSL     bolr='003'O
         4 006170   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 006171   100001 430002                    BDSC    1,,PR1                   by=2,bit=3,n=2
         4 006172   010643 710000 4                  TRA     NEXT_PRO_OPT

     1684    20818
     1685    20819    4            CASE( 124 /* SGR_ALG */ ) ;

     1686    20820    4               TCCHR$ -> KL$CCHR.SGR_ALG# = OP_CODE;

  20820  4 006173   000047 471400 2                  LDP1    TCCHR$
         4 006174   000100 101500                    MRL     fill='000'O
         4 006175   200031 000004                    ADSC9   OP_CODE,,AUTO            cn=0,n=4
         4 006176   100011 400001                    ADSC9   9,,PR1                   cn=2,n=1

     1687    20821    4               IF OP_CODE = 1 /* ANS */ THEN CALL INITIALIZE_SGR;

  20821  4 006177   200031 236100                    LDQ     OP_CODE,,AUTO
         4 006200   000001 116007                    CMPQ    1,DL
         4 006201   010643 601000 4                  TNZ     NEXT_PRO_OPT

  20821  4 006202   011312 701000 4                  TSX1    INITIALIZE_SGR
         4 006203   000000 011000                    NOP     0
         4 006204   010643 710000 4                  TRA     NEXT_PRO_OPT

     1688    20822
     1689    20823    4            CASE( 125 /* DAQ_ALG */ ) ;

     1690    20824    4               TCCHR$ -> KL$CCHR.DAQ_ALG# = OP_CODE;

  20824  4 006205   000047 471400 2                  LDP1    TCCHR$
         4 006206   000100 101500                    MRL     fill='000'O
         4 006207   200031 000004                    ADSC9   OP_CODE,,AUTO            cn=0,n=4
         4 006210   100011 600001                    ADSC9   9,,PR1                   cn=3,n=1

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:307  
     1691    20825    4               IF OP_CODE = 1 /* ANS */ THEN CALL INITIALIZE_DAQ;

  20825  4 006211   200031 236100                    LDQ     OP_CODE,,AUTO
         4 006212   000001 116007                    CMPQ    1,DL
         4 006213   010643 601000 4                  TNZ     NEXT_PRO_OPT

  20825  4 006214   011376 701000 4                  TSX1    INITIALIZE_DAQ
         4 006215   000000 011000                    NOP     0
         4 006216   010643 710000 4                  TRA     NEXT_PRO_OPT

     1692    20826
     1693    20827    4            CASE( 126 /* SGRINTRO_CHR */ ) ;

     1694    20828    4               CALL GET_SGR_OPT( 255 ) ALTRET( NEXT_PRO_OPT );

  20828  4 006217   000031 236000 5                  LDQ     25
         4 006220   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006221   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006222   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1695    20829    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.SGRINTRO_CHR#);

  20829  4 006223   000047 236000 2                  LDQ     TCCHR$
         4 006224   000116 036000 5                  ADLQ    78
         4 006225   200007 756100                    STQ     PTROPT$,,AUTO

     1696    20830    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  20830  4 006226   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006227   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006230   011522 701000 4                  TSX1    PLACE_OPT
         4 006231   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006232   010643 710000 4                  TRA     NEXT_PRO_OPT

     1697    20831
     1698    20832    4            CASE( 127 /* DAQINTRO_CHR */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:308  
     1699    20833    4               CALL GET_DAQ_OPT( 255 ) ALTRET( NEXT_PRO_OPT );

  20833  4 006233   000031 236000 5                  LDQ     25
         4 006234   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006235   011467 701000 4                  TSX1    GET_DAQ_OPT
         4 006236   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1700    20834    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DAQINTRO_CHR#);

  20834  4 006237   000047 236000 2                  LDQ     TCCHR$
         4 006240   000117 036000 5                  ADLQ    79
         4 006241   200007 756100                    STQ     PTROPT$,,AUTO

     1701    20835    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  20835  4 006242   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006243   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006244   011522 701000 4                  TSX1    PLACE_OPT
         4 006245   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006246   010643 710000 4                  TRA     NEXT_PRO_OPT

     1702    20836
     1703    20837    4            CASE( 128 /* SGRINCDAQ */ ) ;

     1704    20838    4               CALL GET_SGR_OPT ALTRET( NEXT_PRO_OPT );

  20838  4 006247   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006250   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006251   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006252   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1705    20839    4               CALL GET_DAQ_OPT ALTRET( NEXT_PRO_OPT );

  20839  4 006253   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 006254   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006255   011467 701000 4                  TSX1    GET_DAQ_OPT
         4 006256   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:309  

     1706    20840    4               TCCHR$ -> KL$CCHR.SGRINCDAQ# = YES_NO;

  20840  4 006257   000047 470400 2                  LDP0    TCCHR$
         4 006260   003100 060400                    CSL     bolr='003'O
         4 006261   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 006262   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1
         4 006263   010643 710000 4                  TRA     NEXT_PRO_OPT

     1707    20841
     1708    20842    4            CASE( 129 /* DFLTPRTMODE */ ) ;

     1709    20843    4               TCCHR$ -> KL$CCHR.DFLTPRTMODE# = YES_NO;

  20843  4 006264   000047 471400 2                  LDP1    TCCHR$
         4 006265   003100 060400                    CSL     bolr='003'O
         4 006266   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 006267   100011 060001                    BDSC    9,,PR1                   by=0,bit=6,n=1
         4 006270   010643 710000 4                  TRA     NEXT_PRO_OPT

     1710    20844
     1711    20845    4            CASE( 130 /* DCLFLD_ALG */ ) ;

     1712    20846    4               TCCHR$ -> KL$CCHR.DCLFLD_ALG# = OP_CODE;

  20846  4 006271   000047 471400 2                  LDP1    TCCHR$
         4 006272   000100 101500                    MRL     fill='000'O
         4 006273   200031 000004                    ADSC9   OP_CODE,,AUTO            cn=0,n=4
         4 006274   100012 000001                    ADSC9   10,,PR1                  cn=0,n=1

     1713    20847    5               IF OP_CODE = 1 /* ANS */ THEN DO;

  20847  4 006275   200031 236100                    LDQ     OP_CODE,,AUTO
         4 006276   000001 116007                    CMPQ    1,DL
         4 006277   010643 601000 4                  TNZ     NEXT_PRO_OPT

     1714    20848    5                  TCCHR$ -> KL$CCHR.SGR_ALG# = 1 /* ANS */;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:310  

  20848  4 006300   000100 101400                    MRL     fill='000'O
         4 006301   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         4 006302   100011 400001                    ADSC9   9,,PR1                   cn=2,n=1

     1715    20849    5                  CALL INITIALIZE_SGR;

  20849  4 006303   011312 701000 4                  TSX1    INITIALIZE_SGR
         4 006304   000000 011000                    NOP     0

     1716    20850    5                  TCCHR$ -> KL$CCHR.DAQ_ALG# = 1 /* ANS */;

  20850  4 006305   000047 470400 2                  LDP0    TCCHR$
         4 006306   000100 101400                    MRL     fill='000'O
         4 006307   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         4 006310   000011 600001                    ADSC9   9,,PR0                   cn=3,n=1

     1717    20851    5                  CALL INITIALIZE_DAQ;

  20851  4 006311   011376 701000 4                  TSX1    INITIALIZE_DAQ
         4 006312   000000 011000                    NOP     0

     1718    20852    5                  END;

  20852  4 006313   010643 710000 4                  TRA     NEXT_PRO_OPT

     1719    20853
     1720    20854    4            CASE( 131 /* DCLFRM_CHR */ ) ;

     1721    20855    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20855  4 006314   000031 236000 5                  LDQ     25
         4 006315   200163 756100                    STQ     IDENT+1,,AUTO
         4 006316   010767 701000 4                  TSX1    GET_HEX_VAL
         4 006317   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1722    20856    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DCLFRM_CHR#);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:311  

  20856  4 006320   000047 236000 2                  LDQ     TCCHR$
         4 006321   000022 036003                    ADLQ    18,DU
         4 006322   200007 756100                    STQ     PTROPT$,,AUTO

     1723    20857    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  20857  4 006323   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006324   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006325   011522 701000 4                  TSX1    PLACE_OPT
         4 006326   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006327   010643 710000 4                  TRA     NEXT_PRO_OPT

     1724    20858
     1725    20859    4            CASE( 132 /* ENDDCLFRM_CHR */ ) ;

     1726    20860    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  20860  4 006330   000031 236000 5                  LDQ     25
         4 006331   200163 756100                    STQ     IDENT+1,,AUTO
         4 006332   010767 701000 4                  TSX1    GET_HEX_VAL
         4 006333   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1727    20861    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ENDDCLFRM_CHR#);

  20861  4 006334   000047 236000 2                  LDQ     TCCHR$
         4 006335   000120 036000 5                  ADLQ    80
         4 006336   200007 756100                    STQ     PTROPT$,,AUTO

     1728    20862    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  20862  4 006337   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006340   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006341   011522 701000 4                  TSX1    PLACE_OPT
         4 006342   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006343   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:312  
     1729    20863
     1730    20864    4            CASE( 133 /* RESTORE_DFLTSCRN_CHR */ ) ;

     1731    20865    4               CALL GET_SGR_OPT( 255 ) ALTRET( NEXT_PRO_OPT );

  20865  4 006344   000031 236000 5                  LDQ     25
         4 006345   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006346   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006347   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1732    20866    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.RESTORE_DFLTSCRN_CHR#);

  20866  4 006350   000047 236000 2                  LDQ     TCCHR$
         4 006351   000121 036000 5                  ADLQ    81
         4 006352   200007 756100                    STQ     PTROPT$,,AUTO

     1733    20867    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  20867  4 006353   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006354   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006355   011522 701000 4                  TSX1    PLACE_OPT
         4 006356   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006357   010643 710000 4                  TRA     NEXT_PRO_OPT

     1734    20868
     1735    20869    4            CASE( 134 /* SGRHDN_CHR */ ) ;

     1736    20870    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20870  4 006360   000024 236000 5                  LDQ     20
         4 006361   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006362   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006363   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1737    20871    4               TCCHR$ -> KL$CCHR.SGRHDN_CHR# = HEX_V;

  20871  4 006364   000047 470400 2                  LDP0    TCCHR$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:313  
         4 006365   000100 100500                    MLR     fill='000'O
         4 006366   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006367   000012 200001                    ADSC9   10,,PR0                  cn=1,n=1
         4 006370   010643 710000 4                  TRA     NEXT_PRO_OPT

     1738    20872
     1739    20873    4            CASE( 135 /* SGRINCINT_CHR */ ) ;

     1740    20874    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20874  4 006371   000024 236000 5                  LDQ     20
         4 006372   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006373   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006374   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1741    20875    4               TCCHR$ -> KL$CCHR.SGRINCINT_CHR# = HEX_V;

  20875  4 006375   000047 470400 2                  LDP0    TCCHR$
         4 006376   000100 100500                    MLR     fill='000'O
         4 006377   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006400   000012 400001                    ADSC9   10,,PR0                  cn=2,n=1
         4 006401   010643 710000 4                  TRA     NEXT_PRO_OPT

     1742    20876
     1743    20877    4            CASE( 136 /* SGRDCRINT_CHR */ ) ;

     1744    20878    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20878  4 006402   000024 236000 5                  LDQ     20
         4 006403   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006404   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006405   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1745    20879    4               TCCHR$ -> KL$CCHR.SGRDCRINT_CHR# = HEX_V;

  20879  4 006406   000047 470400 2                  LDP0    TCCHR$
         4 006407   000100 100500                    MLR     fill='000'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:314  
         4 006410   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006411   000012 600001                    ADSC9   10,,PR0                  cn=3,n=1
         4 006412   010643 710000 4                  TRA     NEXT_PRO_OPT

     1746    20880
     1747    20881    4            CASE( 137 /* SGRUNDSCR_CHR */ ) ;

     1748    20882    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20882  4 006413   000024 236000 5                  LDQ     20
         4 006414   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006415   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006416   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1749    20883    4               TCCHR$ -> KL$CCHR.SGRUNDSCR_CHR# = HEX_V;

  20883  4 006417   000047 470400 2                  LDP0    TCCHR$
         4 006420   000100 100500                    MLR     fill='000'O
         4 006421   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006422   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1
         4 006423   010643 710000 4                  TRA     NEXT_PRO_OPT

     1750    20884
     1751    20885    4            CASE( 138 /* SGRSLWBLN_CHR */ ) ;

     1752    20886    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20886  4 006424   000024 236000 5                  LDQ     20
         4 006425   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006426   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006427   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1753    20887    4               TCCHR$ -> KL$CCHR.SGRSLWBLN_CHR# = HEX_V;

  20887  4 006430   000047 470400 2                  LDP0    TCCHR$
         4 006431   000100 100500                    MLR     fill='000'O
         4 006432   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:315  
         4 006433   000013 200001                    ADSC9   11,,PR0                  cn=1,n=1
         4 006434   010643 710000 4                  TRA     NEXT_PRO_OPT

     1754    20888
     1755    20889    4            CASE( 139 /* SGRFSTBLN_CHR */ ) ;

     1756    20890    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20890  4 006435   000024 236000 5                  LDQ     20
         4 006436   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006437   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006440   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1757    20891    4               TCCHR$ -> KL$CCHR.SGRFSTBLN_CHR# = HEX_V;

  20891  4 006441   000047 470400 2                  LDP0    TCCHR$
         4 006442   000100 100500                    MLR     fill='000'O
         4 006443   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006444   000013 400001                    ADSC9   11,,PR0                  cn=2,n=1
         4 006445   010643 710000 4                  TRA     NEXT_PRO_OPT

     1758    20892
     1759    20893    4            CASE( 140 /* SGRRVRVID_CHR */ ) ;

     1760    20894    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20894  4 006446   000024 236000 5                  LDQ     20
         4 006447   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006450   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006451   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1761    20895    4               TCCHR$ -> KL$CCHR.SGRRVRVID_CHR# = HEX_V;

  20895  4 006452   000047 470400 2                  LDP0    TCCHR$
         4 006453   000100 100500                    MLR     fill='000'O
         4 006454   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006455   000013 600001                    ADSC9   11,,PR0                  cn=3,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:316  
         4 006456   010643 710000 4                  TRA     NEXT_PRO_OPT

     1762    20896
     1763    20897    4            CASE( 141 /* SGRPRT_CHR */ ) ;

     1764    20898    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20898  4 006457   000024 236000 5                  LDQ     20
         4 006460   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006461   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006462   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1765    20899    4               TCCHR$ -> KL$CCHR.SGRPRT_CHR# = HEX_V;

  20899  4 006463   000047 470400 2                  LDP0    TCCHR$
         4 006464   000100 100500                    MLR     fill='000'O
         4 006465   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006466   000014 000001                    ADSC9   12,,PR0                  cn=0,n=1

     1766    20900    4               IF HEX_V ~= 0 THEN

  20900  4 006467   200137 236100                    LDQ     HEX_V,,AUTO
         4 006470   777000 316003                    CANQ    -512,DU
         4 006471   010643 600000 4                  TZE     NEXT_PRO_OPT

     1767    20901    5                  IF NOT TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;

  20901  4 006472   000000 066500                    CMPB    filb='0'B
         4 006473   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1
         4 006474   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006475   010643 601000 4                  TNZ     NEXT_PRO_OPT

     1768    20902        /*E*  ERROR:  ASD-E$SGRINCDAQ_NO-C
     1769    20903              MESSAGE: Warning:  SGRINCDAQ = NO
     1770    20904              MESSAGE1: %U1 assumes that SGRINCDAQ = YES
     1771    20905        */
     1772    20906    5                     AS_FIELD1 = OPTION;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:317  

  20906  4 006476   000000 100500                    MLR     fill='000'O
         4 006477   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 006500   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1773    20907                          %SCREAM( ERR#=E$SGRINCDAQ_NO,MID='D',LEVEL=WARN );

  20917  4 006501   000122 630400 5                  EPPR0   82
         4 006502   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 006503   000000 701000 xent               TSX1    ASH$WARN
         4 006504   000000 011000                    NOP     0

     1774    20922    5                     END;

  20922  4 006505   010643 710000 4                  TRA     NEXT_PRO_OPT

     1775    20923
     1776    20924    4            CASE( 142 /* SGRINP_CHR */ ) ;

     1777    20925    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20925  4 006506   000024 236000 5                  LDQ     20
         4 006507   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006510   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006511   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1778    20926    4               TCCHR$ -> KL$CCHR.SGRINP_CHR# = HEX_V;

  20926  4 006512   000047 470400 2                  LDP0    TCCHR$
         4 006513   000100 100500                    MLR     fill='000'O
         4 006514   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006515   000014 200001                    ADSC9   12,,PR0                  cn=1,n=1

     1779    20927    4               IF HEX_V ~= 0 THEN

  20927  4 006516   200137 236100                    LDQ     HEX_V,,AUTO
         4 006517   777000 316003                    CANQ    -512,DU
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:318  
         4 006520   010643 600000 4                  TZE     NEXT_PRO_OPT

     1780    20928    5                  IF NOT TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;

  20928  4 006521   000000 066500                    CMPB    filb='0'B
         4 006522   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1
         4 006523   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006524   010643 601000 4                  TNZ     NEXT_PRO_OPT

     1781    20929    5                     AS_FIELD1 = OPTION;

  20929  4 006525   000000 100500                    MLR     fill='000'O
         4 006526   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 006527   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1782    20930                          %SCREAM( ERR#=E$SGRINCDAQ_NO, LEVEL=WARN, MID='D' );

  20940  4 006530   000122 630400 5                  EPPR0   82
         4 006531   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 006532   000000 701000 xent               TSX1    ASH$WARN
         4 006533   000000 011000                    NOP     0

     1783    20945    5                     END;

  20945  4 006534   010643 710000 4                  TRA     NEXT_PRO_OPT

     1784    20946
     1785    20947    4            CASE( 143 /* SGRPRTGRD_CHR */ ) ;

     1786    20948    4               CALL GET_SGR_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20948  4 006535   000024 236000 5                  LDQ     20
         4 006536   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006537   011431 701000 4                  TSX1    GET_SGR_OPT
         4 006540   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1787    20949    4               TCCHR$ -> KL$CCHR.SGRPRTGRD_CHR# = HEX_V;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:319  

  20949  4 006541   000047 470400 2                  LDP0    TCCHR$
         4 006542   000100 100500                    MLR     fill='000'O
         4 006543   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006544   000014 400001                    ADSC9   12,,PR0                  cn=2,n=1

     1788    20950    4               IF HEX_V ~= 0 THEN

  20950  4 006545   200137 236100                    LDQ     HEX_V,,AUTO
         4 006546   777000 316003                    CANQ    -512,DU
         4 006547   010643 600000 4                  TZE     NEXT_PRO_OPT

     1789    20951    5                  IF NOT TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;

  20951  4 006550   000000 066500                    CMPB    filb='0'B
         4 006551   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1
         4 006552   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006553   010643 601000 4                  TNZ     NEXT_PRO_OPT

     1790    20952    5                     AS_FIELD1 = OPTION;

  20952  4 006554   000000 100500                    MLR     fill='000'O
         4 006555   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 006556   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1791    20953                          %SCREAM( ERR#=E$SGRINCDAQ_NO, LEVEL=WARN, MID='D' );

  20963  4 006557   000122 630400 5                  EPPR0   82
         4 006560   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 006561   000000 701000 xent               TSX1    ASH$WARN
         4 006562   000000 011000                    NOP     0

     1792    20968    5                     END;

  20968  4 006563   010643 710000 4                  TRA     NEXT_PRO_OPT

     1793    20969
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:320  
     1794    20970    4            CASE( 144 /* DAQPRT_CHR */ ) ;

     1795    20971    4               CALL GET_DAQ_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20971  4 006564   000024 236000 5                  LDQ     20
         4 006565   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006566   011467 701000 4                  TSX1    GET_DAQ_OPT
         4 006567   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1796    20972    4               TCCHR$ -> KL$CCHR.DAQPRT_CHR# = HEX_V;

  20972  4 006570   000047 470400 2                  LDP0    TCCHR$
         4 006571   000100 100500                    MLR     fill='000'O
         4 006572   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006573   000014 600001                    ADSC9   12,,PR0                  cn=3,n=1

     1797    20973    5               IF TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;

  20973  4 006574   000000 066500                    CMPB    filb='0'B
         4 006575   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1
         4 006576   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006577   010643 600000 4                  TZE     NEXT_PRO_OPT

     1798    20974        /*E*  ERROR:  ASD-E$SGRINCDAQ_YES-C
     1799    20975              MESSAGE: Warning:  SGRINCDAQ = YES
     1800    20976              MESSAGE1: %U1 assumes that SGRINCDAQ = NO
     1801    20977        */
     1802    20978    5                  AS_FIELD1 = OPTION;

  20978  4 006600   000000 100500                    MLR     fill='000'O
         4 006601   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 006602   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1803    20979                       %SCREAM( ERR#=E$SGRINCDAQ_YES,MID='D',LEVEL=WARN );

  20989  4 006603   000123 630400 5                  EPPR0   83
         4 006604   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:321  
         4 006605   000000 701000 xent               TSX1    ASH$WARN
         4 006606   000000 011000                    NOP     0

     1804    20994    5                  END;

  20994  4 006607   010643 710000 4                  TRA     NEXT_PRO_OPT

     1805    20995
     1806    20996    4            CASE( 145 /* DAQINP_CHR */ ) ;

     1807    20997    4               CALL GET_DAQ_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  20997  4 006610   000024 236000 5                  LDQ     20
         4 006611   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006612   011467 701000 4                  TSX1    GET_DAQ_OPT
         4 006613   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1808    20998    5               IF TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;

  20998  4 006614   000047 470400 2                  LDP0    TCCHR$
         4 006615   000000 066500                    CMPB    filb='0'B
         4 006616   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1
         4 006617   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006620   006630 600000 4                  TZE     s:21016

     1809    20999    5                  AS_FIELD1 = OPTION;

  20999  4 006621   000000 100500                    MLR     fill='000'O
         4 006622   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 006623   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1810    21000                       %SCREAM( ERR#=E$SGRINCDAQ_YES, LEVEL=WARN, MID='D' );

  21010  4 006624   000123 630400 5                  EPPR0   83
         4 006625   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 006626   000000 701000 xent               TSX1    ASH$WARN
         4 006627   000000 011000                    NOP     0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:322  

     1811    21015    5                  END;

     1812    21016    4               TCCHR$ -> KL$CCHR.DAQINP_CHR# = HEX_V;

  21016  4 006630   000047 470400 2                  LDP0    TCCHR$
         4 006631   000100 100500                    MLR     fill='000'O
         4 006632   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006633   000015 000001                    ADSC9   13,,PR0                  cn=0,n=1
         4 006634   010643 710000 4                  TRA     NEXT_PRO_OPT

     1813    21017
     1814    21018    4            CASE( 146 /* DAQPRTGRD_CHR */ ) ;

     1815    21019    4               CALL GET_DAQ_OPT( 1 ) ALTRET( NEXT_PRO_OPT );

  21019  4 006635   000024 236000 5                  LDQ     20
         4 006636   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 006637   011467 701000 4                  TSX1    GET_DAQ_OPT
         4 006640   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1816    21020    4               TCCHR$ -> KL$CCHR.DAQPRTGRD_CHR# = HEX_V;

  21020  4 006641   000047 470400 2                  LDP0    TCCHR$
         4 006642   000100 100500                    MLR     fill='000'O
         4 006643   200137 000001                    ADSC9   HEX_V,,AUTO              cn=0,n=1
         4 006644   000015 200001                    ADSC9   13,,PR0                  cn=1,n=1

     1817    21021    5               IF TCCHR$->KL$CCHR.SGRINCDAQ# THEN DO;

  21021  4 006645   000000 066500                    CMPB    filb='0'B
         4 006646   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1
         4 006647   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 006650   010643 600000 4                  TZE     NEXT_PRO_OPT

     1818    21022    5                  AS_FIELD1 = OPTION;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:323  
  21022  4 006651   000000 100500                    MLR     fill='000'O
         4 006652   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 006653   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1819    21023                       %SCREAM( ERR#=E$SGRINCDAQ_YES, LEVEL=WARN, MID='D' );

  21033  4 006654   000123 630400 5                  EPPR0   83
         4 006655   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 006656   000000 701000 xent               TSX1    ASH$WARN
         4 006657   000000 011000                    NOP     0

     1820    21038    5                  END;

  21038  4 006660   010643 710000 4                  TRA     NEXT_PRO_OPT

     1821    21039
     1822    21040    4            CASE( 147 /* DLTALLFLDS_CHR */ ) ;

     1823    21041    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  21041  4 006661   000031 236000 5                  LDQ     25
         4 006662   200163 756100                    STQ     IDENT+1,,AUTO
         4 006663   010767 701000 4                  TSX1    GET_HEX_VAL
         4 006664   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1824    21042    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DLTALLFLDS_CHR#);

  21042  4 006665   000047 236000 2                  LDQ     TCCHR$
         4 006666   000124 036000 5                  ADLQ    84
         4 006667   200007 756100                    STQ     PTROPT$,,AUTO

     1825    21043    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  21043  4 006670   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006671   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006672   011522 701000 4                  TSX1    PLACE_OPT
         4 006673   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:324  
         4 006674   010643 710000 4                  TRA     NEXT_PRO_OPT

     1826    21044
     1827    21045    4            CASE( 148 /* INSLIN_CHR */ ) ;

     1828    21046    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  21046  4 006675   000031 236000 5                  LDQ     25
         4 006676   200163 756100                    STQ     IDENT+1,,AUTO
         4 006677   010767 701000 4                  TSX1    GET_HEX_VAL
         4 006700   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1829    21047    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.INSLIN_CHR#);

  21047  4 006701   000047 236000 2                  LDQ     TCCHR$
         4 006702   000023 036003                    ADLQ    19,DU
         4 006703   200007 756100                    STQ     PTROPT$,,AUTO

     1830    21048    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  21048  4 006704   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006705   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006706   011522 701000 4                  TSX1    PLACE_OPT
         4 006707   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006710   010643 710000 4                  TRA     NEXT_PRO_OPT

     1831    21049
     1832    21050    4            CASE( 149 /* DLTLIN_CHR */ ) ;

     1833    21051    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  21051  4 006711   000031 236000 5                  LDQ     25
         4 006712   200163 756100                    STQ     IDENT+1,,AUTO
         4 006713   010767 701000 4                  TSX1    GET_HEX_VAL
         4 006714   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1834    21052    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DLTLIN_CHR#);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:325  

  21052  4 006715   000047 236000 2                  LDQ     TCCHR$
         4 006716   000125 036000 5                  ADLQ    85
         4 006717   200007 756100                    STQ     PTROPT$,,AUTO

     1835    21053    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  21053  4 006720   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006721   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006722   011522 701000 4                  TSX1    PLACE_OPT
         4 006723   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006724   010643 710000 4                  TRA     NEXT_PRO_OPT

     1836    21054
     1837    21055    4            CASE( 150 /* ERASEFLD_CHR */ ) ;

     1838    21056    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  21056  4 006725   000031 236000 5                  LDQ     25
         4 006726   200163 756100                    STQ     IDENT+1,,AUTO
         4 006727   010767 701000 4                  TSX1    GET_HEX_VAL
         4 006730   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1839    21057    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ERASEFLD_CHR#);

  21057  4 006731   000047 236000 2                  LDQ     TCCHR$
         4 006732   000126 036000 5                  ADLQ    86
         4 006733   200007 756100                    STQ     PTROPT$,,AUTO

     1840    21058    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  21058  4 006734   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006735   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006736   011522 701000 4                  TSX1    PLACE_OPT
         4 006737   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006740   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:326  
     1841    21059
     1842    21060    4            CASE( 151 /* DLTFLD_CHR */ ) ;

     1843    21061    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  21061  4 006741   000031 236000 5                  LDQ     25
         4 006742   200163 756100                    STQ     IDENT+1,,AUTO
         4 006743   010767 701000 4                  TSX1    GET_HEX_VAL
         4 006744   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1844    21062    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DLTFLD_CHR#);

  21062  4 006745   000047 236000 2                  LDQ     TCCHR$
         4 006746   000127 036000 5                  ADLQ    87
         4 006747   200007 756100                    STQ     PTROPT$,,AUTO

     1845    21063    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  21063  4 006750   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 006751   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 006752   011522 701000 4                  TSX1    PLACE_OPT
         4 006753   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 006754   010643 710000 4                  TRA     NEXT_PRO_OPT

     1846    21064
     1847    21065    4            CASE( 152 /* FLDTRM */ );

     1848    21066    4               TATR$ -> VLP$TRMATTR.NO_FLDTRM# = YES_NO_FLG;

  21066  4 006755   000044 471400 2                  LDP1    TATR$
         4 006756   003100 060400                    CSL     bolr='003'O
         4 006757   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 006760   100001 450002                    BDSC    1,,PR1                   by=2,bit=5,n=2
         4 006761   010643 710000 4                  TRA     NEXT_PRO_OPT

     1849    21067
     1850    21068    4            CASE( 153 /* EWALT */ );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:327  

     1851    21069    4               T3270$ -> KL$3270.EWALT# = YES_NO_FLG;

  21069  4 006762   000056 471400 2                  LDP1    T3270$
         4 006763   003100 060400                    CSL     bolr='003'O
         4 006764   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 006765   100000 050002                    BDSC    0,,PR1                   by=0,bit=5,n=2
         4 006766   010643 710000 4                  TRA     NEXT_PRO_OPT

     1852    21070
     1853    21071    4            CASE( 154 /* SIOPT */ );

     1854    21072    4               T3270$ -> KL$3270.SIOPT# = YES_NO_FLG;

  21072  4 006767   000056 471400 2                  LDP1    T3270$
         4 006770   003100 060400                    CSL     bolr='003'O
         4 006771   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 006772   100000 070002                    BDSC    0,,PR1                   by=0,bit=7,n=2
         4 006773   010643 710000 4                  TRA     NEXT_PRO_OPT

     1855    21073
     1856    21074    4            CASE( 155 /* ABSGRPRND_NULL */,

     1857    21075    4                    156 /* ABSGRPRND_HIDDEN */,
     1858    21076    4                    157 /* ABSGRPRND_EMPHASIS */,
     1859    21077    4                    158 /* ABSGRPRND_INPUT */,
     1860    21078    4                    159 /* ABSGRPRND_OUTPUT */,
     1861    21079    4                    160 /* ABSGRPRND_ERROR */,
     1862    21080    4                    161 /* ABSGRPRND_WARNING */ );
     1863    21081
     1864    21082    4               KL_ABSGRPRND$ = ABSGRPRND$(CODE-155 /* ABSGRPRND_NULL */+1);

  21082  4 006774   777625 236005 2                  LDQ     FUNKEY_DEF_SIZE-179,AL
         4 006775   000067 756000 2                  STQ     KL_ABSGRPRND$

     1865    21083    4               KL$ABSGRPRND.FLAGS = AS_FALSE;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:328  
  21083  4 006776   000067 471400 2                  LDP1    KL_ABSGRPRND$
         4 006777   003100 060400                    CSL     bolr='003'O
         4 007000   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 007001   100000 410010                    BDSC    0,,PR1                   by=2,bit=1,n=8

     1866    21084    5               IF OP_CODE ~= 1 /* P_ABSGRPND_NONE */ THEN DO;

  21084  4 007002   200031 235100                    LDA     OP_CODE,,AUTO
         4 007003   000001 115007                    CMPA    1,DL
         4 007004   010643 600000 4                  TZE     NEXT_PRO_OPT

     1867    21085    5                  PTR$ = PTR$ -> P$NODE.SUBLK$(0);

  21085  4 007005   000003 236100                    LDQ     3,,PR0
         4 007006   200030 756100                    STQ     PTR$,,AUTO

     1868    21086    6                  DO K = 0 TO PTR$->P$NODE.SUBNODES-1;

  21086  4 007007   200015 450100                    STZ     K,,AUTO
         4 007010   007075 710000 4                  TRA     s:21103+3

     1869    21087    7                     DO CASE(PTR$->P$NODE.SUBLK$(K)->P$NODE.CODE);

  21087  4 007011   200030 470500                    LDP0    PTR$,,AUTO
         4 007012   200015 720100                    LXL0    K,,AUTO
         4 007013   000003 471510                    LDP1    3,X0,PR0
         4 007014   100000 721100                    LXL1    0,,PR1
         4 007015   000010 101003                    CMPX1   8,DU
         4 007016   007020 602011 4                  TNC     s:21087+7,X1
         4 007017   007072 710000 4                  TRA     s:21103
         4 007020   007072 710000 4                  TRA     s:21103
         4 007021   007030 710000 4                  TRA     s:21089
         4 007022   007035 710000 4                  TRA     s:21091
         4 007023   007042 710000 4                  TRA     s:21093
         4 007024   007047 710000 4                  TRA     s:21095
         4 007025   007054 710000 4                  TRA     s:21097
         4 007026   007061 710000 4                  TRA     s:21099
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:329  
         4 007027   007066 710000 4                  TRA     s:21101

     1870    21088    7                        CASE( 1 /* P_ABSGRPND_HDN     */ );

     1871    21089    7                           KL$ABSGRPRND.FLAGS.HDN#    = AS_TRUE;

  21089  4 007030   000067 473400 2                  LDP3    KL_ABSGRPRND$
         4 007031   003100 060400                    CSL     bolr='003'O
         4 007032   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 007033   300000 420001                    BDSC    0,,PR3                   by=2,bit=2,n=1
         4 007034   007072 710000 4                  TRA     s:21103

     1872    21090    7                        CASE( 2 /* P_ABSGRPND_INCINT */ );

     1873    21091    7                           KL$ABSGRPRND.FLAGS.INCINT# = AS_TRUE;

  21091  4 007035   000067 473400 2                  LDP3    KL_ABSGRPRND$
         4 007036   003100 060400                    CSL     bolr='003'O
         4 007037   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 007040   300000 430001                    BDSC    0,,PR3                   by=2,bit=3,n=1
         4 007041   007072 710000 4                  TRA     s:21103

     1874    21092    7                        CASE( 3 /* P_ABSGRPND_DCRINT */ );

     1875    21093    7                           KL$ABSGRPRND.FLAGS.DCRINT# = AS_TRUE;

  21093  4 007042   000067 473400 2                  LDP3    KL_ABSGRPRND$
         4 007043   003100 060400                    CSL     bolr='003'O
         4 007044   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 007045   300000 440001                    BDSC    0,,PR3                   by=2,bit=4,n=1
         4 007046   007072 710000 4                  TRA     s:21103

     1876    21094    7                        CASE( 4 /* P_ABSGRPND_UNDSCR */ );

     1877    21095    7                           KL$ABSGRPRND.FLAGS.UNDSCR# = AS_TRUE;

  21095  4 007047   000067 473400 2                  LDP3    KL_ABSGRPRND$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:330  
         4 007050   003100 060400                    CSL     bolr='003'O
         4 007051   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 007052   300000 450001                    BDSC    0,,PR3                   by=2,bit=5,n=1
         4 007053   007072 710000 4                  TRA     s:21103

     1878    21096    7                        CASE( 5 /* P_ABSGRPND_SLWBLN */ );

     1879    21097    7                           KL$ABSGRPRND.FLAGS.SLWBLN# = AS_TRUE;

  21097  4 007054   000067 473400 2                  LDP3    KL_ABSGRPRND$
         4 007055   003100 060400                    CSL     bolr='003'O
         4 007056   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 007057   300000 460001                    BDSC    0,,PR3                   by=2,bit=6,n=1
         4 007060   007072 710000 4                  TRA     s:21103

     1880    21098    7                        CASE( 6 /* P_ABSGRPND_FSTBLN */ );

     1881    21099    7                           KL$ABSGRPRND.FLAGS.FSTBLN# = AS_TRUE;

  21099  4 007061   000067 473400 2                  LDP3    KL_ABSGRPRND$
         4 007062   003100 060400                    CSL     bolr='003'O
         4 007063   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 007064   300000 470001                    BDSC    0,,PR3                   by=2,bit=7,n=1
         4 007065   007072 710000 4                  TRA     s:21103

     1882    21100    7                        CASE( 7 /* P_ABSGRPND_RVRVID */ );

     1883    21101    7                           KL$ABSGRPRND.FLAGS.RVRVID# = AS_TRUE;

  21101  4 007066   000067 473400 2                  LDP3    KL_ABSGRPRND$
         4 007067   003100 060400                    CSL     bolr='003'O
         4 007070   000000 000001 xsym               BDSC    AS_TRUE                  by=0,bit=0,n=1
         4 007071   300000 500001                    BDSC    0,,PR3                   by=2,bit=8,n=1

     1884    21102    7                        END;

     1885    21103    6                     END;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:331  

  21103  4 007072   200015 235100                    LDA     K,,AUTO
         4 007073   000001 035007                    ADLA    1,DL
         4 007074   200015 755100                    STA     K,,AUTO
         4 007075   200030 470500                    LDP0    PTR$,,AUTO
         4 007076   000001 236100                    LDQ     1,,PR0
         4 007077   000022 772000                    QRL     18
         4 007100   200015 116100                    CMPQ    K,,AUTO
         4 007101   007103 600000 4                  TZE     s:21104
         4 007102   007011 603000 4                  TRC     s:21087

     1886    21104    5                  END;

  21104  4 007103   010643 710000 4                  TRA     NEXT_PRO_OPT

     1887    21105
     1888    21106    4            CASE( 163 /* SPCBFRPRT */ );

     1889    21107    4               TATR$ -> VLP$TRMATTR.SPCBFRPRT# = YES_NO_FLG;

  21107  4 007104   000044 471400 2                  LDP1    TATR$
         4 007105   003100 060400                    CSL     bolr='003'O
         4 007106   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 007107   100001 410002                    BDSC    1,,PR1                   by=2,bit=1,n=2
         4 007110   010643 710000 4                  TRA     NEXT_PRO_OPT

     1890    21108
     1891    21109    4            CASE( 178 /* L_EXTSRD_CHR */ ) ;

     1892    21110    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  21110  4 007111   000031 236000 5                  LDQ     25
         4 007112   200163 756100                    STQ     IDENT+1,,AUTO
         4 007113   010767 701000 4                  TSX1    GET_HEX_VAL
         4 007114   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1893    21111    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.EXTSRD_CHR#);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:332  

  21111  4 007115   000047 236000 2                  LDQ     TCCHR$
         4 007116   000130 036000 5                  ADLQ    88
         4 007117   200007 756100                    STQ     PTROPT$,,AUTO

     1894    21112    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT) ;

  21112  4 007120   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 007121   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 007122   011522 701000 4                  TSX1    PLACE_OPT
         4 007123   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 007124   010643 710000 4                  TRA     NEXT_PRO_OPT

     1895    21113
     1896    21114    4            CASE( 219 /* L_GR_FPRG */ ) ;

     1897    21115    5               IF OUT$SYM.COUNT > 64 THEN DO;

  21115  4 007125   200004 471500                    LDP1    BLK$,,AUTO
         4 007126   100004 236100                    LDQ     4,,PR1
         4 007127   777000 376003                    ANQ     -512,DU
         4 007130   101000 116003                    CMPQ    33280,DU
         4 007131   007137 602000 4                  TNC     s:21137

     1898    21116        /*E*   ERROR:    ASD-E$FPRGTOOLONG-C
     1899    21117               MESSAGE:  GR_FPRG too long.
     1900    21118               MESSAGE1: GR_FPRG can be at most 64 characters long.
     1901    21119        */
     1902    21120                       %SCREAM( ERR#=E$FPRGTOOLONG, LEVEL=ERROR, MID='D');

  21132  4 007132   000131 630400 5                  EPPR0   89
         4 007133   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 007134   000000 701000 xent               TSX1    ASH$ERROR
         4 007135   000000 011000                    NOP     0

     1903    21135    5                  END ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:333  
  21135  4 007136   010643 710000 4                  TRA     NEXT_PRO_OPT

     1904    21136    4               ELSE
     1905    21137    4                  PHDR$ -> PRO$HDR.GR_FPRG = OUT$SYM.TEXT ;

  21137  4 007137   100004 236100                    LDQ     4,,PR1
         4 007140   000033 772000                    QRL     27
         4 007141   000000 620006                    EAX0    0,QL
         4 007142   000042 473400 2                  LDP3    PHDR$
         4 007143   040100 100540                    MLR     fill='040'O
         4 007144   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 007145   300002 000100                    ADSC9   2,,PR3                   cn=0,n=64
         4 007146   010643 710000 4                  TRA     NEXT_PRO_OPT

     1906    21138
     1907    21139    4            CASE( 220 /* L_GR_GLBLCOLORS */ ) ;

     1908    21140    4               CALL GRA_OPT_PROC( 1, 999999999 ) ALTRET( NEXT_PRO_OPT ) ;

  21140  4 007147   000133 236000 5                  LDQ     91
         4 007150   200156 756100                    STQ     J+1,,AUTO
         4 007151   000024 236000 5                  LDQ     20
         4 007152   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007153   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007154   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1909    21141    4               GRA$ -> GRA$REC.GLOBAL_COLORS = VAL ;

  21141  4 007155   000041 470400 2                  LDP0    GRA$
         4 007156   200020 235100                    LDA     VAL,,AUTO
         4 007157   000000 755100                    STA     0,,PR0
         4 007160   010643 710000 4                  TRA     NEXT_PRO_OPT

     1910    21142
     1911    21143    4            CASE( 221 /* L_GR_GLBLINTENSITIES */ ) ;

     1912    21144    4               CALL GRA_OPT_PROC( 1, 999999999 ) ALTRET( NEXT_PRO_OPT);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:334  

  21144  4 007161   000133 236000 5                  LDQ     91
         4 007162   200156 756100                    STQ     J+1,,AUTO
         4 007163   000024 236000 5                  LDQ     20
         4 007164   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007165   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007166   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1913    21145    4               GRA$ -> GRA$REC.GLOBAL_INTENSITIES = VAL ;

  21145  4 007167   000041 470400 2                  LDP0    GRA$
         4 007170   200020 235100                    LDA     VAL,,AUTO
         4 007171   000001 755100                    STA     1,,PR0
         4 007172   010643 710000 4                  TRA     NEXT_PRO_OPT

     1914    21146
     1915    21147    4            CASE( 222 /* L_GR_MAXPICK */ ) ;

     1916    21148    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT) ;

  21148  4 007173   000053 236000 5                  LDQ     43
         4 007174   200156 756100                    STQ     J+1,,AUTO
         4 007175   000134 236000 5                  LDQ     92
         4 007176   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007177   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007200   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1917    21149    4               GRA$ -> GRA$REC.MAX_PICK_ID = VAL ;

  21149  4 007201   000041 470400 2                  LDP0    GRA$
         4 007202   200020 235100                    LDA     VAL,,AUTO
         4 007203   000002 755100                    STA     2,,PR0
         4 007204   010643 710000 4                  TRA     NEXT_PRO_OPT

     1918    21150
     1919    21151    4            CASE( 223 /* L_GR_XSPACE */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:335  
     1920    21152    4               CALL GRA_OPT_PROC( 0, 4095 ) ALTRET( NEXT_PRO_OPT );

  21152  4 007205   000136 236000 5                  LDQ     94
         4 007206   200156 756100                    STQ     J+1,,AUTO
         4 007207   000134 236000 5                  LDQ     92
         4 007210   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007211   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007212   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1921    21153    4               GRA$ -> GRA$REC.X_PER_CM = VAL ;

  21153  4 007213   000041 470400 2                  LDP0    GRA$
         4 007214   200020 235100                    LDA     VAL,,AUTO
         4 007215   000003 755100                    STA     3,,PR0
         4 007216   010643 710000 4                  TRA     NEXT_PRO_OPT

     1922    21154
     1923    21155    4            CASE( 224 /* L_GR_YSPACE */ ) ;

     1924    21156    4               CALL GRA_OPT_PROC( 0, 4095 ) ALTRET( NEXT_PRO_OPT ) ;

  21156  4 007217   000136 236000 5                  LDQ     94
         4 007220   200156 756100                    STQ     J+1,,AUTO
         4 007221   000134 236000 5                  LDQ     92
         4 007222   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007223   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007224   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1925    21157    4               GRA$ -> GRA$REC.Y_PER_CM = VAL ;

  21157  4 007225   000041 470400 2                  LDP0    GRA$
         4 007226   200020 235100                    LDA     VAL,,AUTO
         4 007227   000004 755100                    STA     4,,PR0
         4 007230   010643 710000 4                  TRA     NEXT_PRO_OPT

     1926    21158
     1927    21159    4            CASE( 225 /* L_GR_ZSPACE */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:336  

     1928    21160    4               CALL GRA_OPT_PROC( 0, 4095 ) ALTRET( NEXT_PRO_OPT ) ;

  21160  4 007231   000136 236000 5                  LDQ     94
         4 007232   200156 756100                    STQ     J+1,,AUTO
         4 007233   000134 236000 5                  LDQ     92
         4 007234   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007235   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007236   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1929    21161    4               GRA$ -> GRA$REC.Z_PER_CM = VAL ;

  21161  4 007237   000041 470400 2                  LDP0    GRA$
         4 007240   200020 235100                    LDA     VAL,,AUTO
         4 007241   000005 755100                    STA     5,,PR0
         4 007242   010643 710000 4                  TRA     NEXT_PRO_OPT

     1930    21162
     1931    21163    4            CASE( 226 /* L_GR_NDCWSPACE */ ) ;

     1932    21164    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);

  21164  4 007243   000133 236000 5                  LDQ     91
         4 007244   200156 756100                    STQ     J+1,,AUTO
         4 007245   000134 236000 5                  LDQ     92
         4 007246   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007247   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007250   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1933    21165    4               GRA$ -> GRA$REC.NDC_WIDTH_ADDR_SPACE = VAL ;

  21165  4 007251   000041 470400 2                  LDP0    GRA$
         4 007252   200020 235100                    LDA     VAL,,AUTO
         4 007253   000006 755100                    STA     6,,PR0
         4 007254   010643 710000 4                  TRA     NEXT_PRO_OPT

     1934    21166
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:337  
     1935    21167    4            CASE( 227 /* L_GR_NDCHSPACE */ ) ;

     1936    21168    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);

  21168  4 007255   000133 236000 5                  LDQ     91
         4 007256   200156 756100                    STQ     J+1,,AUTO
         4 007257   000134 236000 5                  LDQ     92
         4 007260   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007261   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007262   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1937    21169    4               GRA$ -> GRA$REC.NDC_HEIGHT_ADDR_SPACE = VAL ;

  21169  4 007263   000041 470400 2                  LDP0    GRA$
         4 007264   200020 235100                    LDA     VAL,,AUTO
         4 007265   000007 755100                    STA     7,,PR0
         4 007266   010643 710000 4                  TRA     NEXT_PRO_OPT

     1938    21170
     1939    21171    4            CASE( 228 /* L_GR_NDCDSPACE */ ) ;

     1940    21172    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);

  21172  4 007267   000133 236000 5                  LDQ     91
         4 007270   200156 756100                    STQ     J+1,,AUTO
         4 007271   000134 236000 5                  LDQ     92
         4 007272   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007273   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007274   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1941    21173    4               GRA$ -> GRA$REC.NDC_DEPTH_ADDR_SPACE = VAL ;

  21173  4 007275   000041 470400 2                  LDP0    GRA$
         4 007276   200020 235100                    LDA     VAL,,AUTO
         4 007277   000010 755100                    STA     8,,PR0
         4 007300   010643 710000 4                  TRA     NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:338  
     1942    21174
     1943    21175    4            CASE( 231 /* L_GR_NDCWCHARS */ ) ;

     1944    21176    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET (NEXT_PRO_OPT);

  21176  4 007301   000133 236000 5                  LDQ     91
         4 007302   200156 756100                    STQ     J+1,,AUTO
         4 007303   000134 236000 5                  LDQ     92
         4 007304   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007305   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007306   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1945    21177    4               GRA$ -> GRA$REC.NDC_WIDTH_CHAR_POS = VAL ;

  21177  4 007307   000041 470400 2                  LDP0    GRA$
         4 007310   200020 235100                    LDA     VAL,,AUTO
         4 007311   000011 755100                    STA     9,,PR0
         4 007312   010643 710000 4                  TRA     NEXT_PRO_OPT

     1946    21178
     1947    21179    4            CASE( 230 /* L_GR_NDCHCHARS */ ) ;

     1948    21180    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);

  21180  4 007313   000133 236000 5                  LDQ     91
         4 007314   200156 756100                    STQ     J+1,,AUTO
         4 007315   000134 236000 5                  LDQ     92
         4 007316   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007317   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007320   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1949    21181    4               GRA$ -> GRA$REC.NDC_HEIGHT_CHAR_POS = VAL ;

  21181  4 007321   000041 470400 2                  LDP0    GRA$
         4 007322   200020 235100                    LDA     VAL,,AUTO
         4 007323   000012 755100                    STA     10,,PR0
         4 007324   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:339  

     1950    21182
     1951    21183    4            CASE( 229 /* L_GR_NDCDCHARS */ ) ;

     1952    21184    4               CALL GRA_OPT_PROC( 0, 999999999 ) ALTRET( NEXT_PRO_OPT);

  21184  4 007325   000133 236000 5                  LDQ     91
         4 007326   200156 756100                    STQ     J+1,,AUTO
         4 007327   000134 236000 5                  LDQ     92
         4 007330   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007331   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007332   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1953    21185    4               GRA$ -> GRA$REC.NDC_DEPTH_CHAR_POS = VAL ;

  21185  4 007333   000041 470400 2                  LDP0    GRA$
         4 007334   200020 235100                    LDA     VAL,,AUTO
         4 007335   000013 755100                    STA     11,,PR0
         4 007336   010643 710000 4                  TRA     NEXT_PRO_OPT

     1954    21186
     1955    21187    4            CASE( 232 /* L_GR_WIDTHUSE */ ) ;

     1956    21188    4               CALL GRA_OPT_PROC( 0, 999999 ) ALTRET( NEXT_PRO_OPT);

  21188  4 007337   000140 236000 5                  LDQ     96
         4 007340   200156 756100                    STQ     J+1,,AUTO
         4 007341   000134 236000 5                  LDQ     92
         4 007342   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007343   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007344   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1957    21189    4               GRA$ -> GRA$REC.WIDTH_USABLE = VAL ;

  21189  4 007345   000041 470400 2                  LDP0    GRA$
         4 007346   200020 235100                    LDA     VAL,,AUTO
         4 007347   000014 755100                    STA     12,,PR0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:340  
         4 007350   010643 710000 4                  TRA     NEXT_PRO_OPT

     1958    21190
     1959    21191    4            CASE( 233 /* L_GR_HEIGHTUSE */ ) ;

     1960    21192    4               CALL GRA_OPT_PROC( 0, 999999 ) ALTRET( NEXT_PRO_OPT);

  21192  4 007351   000140 236000 5                  LDQ     96
         4 007352   200156 756100                    STQ     J+1,,AUTO
         4 007353   000134 236000 5                  LDQ     92
         4 007354   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007355   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007356   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1961    21193    4               GRA$ -> GRA$REC.HEIGHT_USABLE = VAL ;

  21193  4 007357   000041 470400 2                  LDP0    GRA$
         4 007360   200020 235100                    LDA     VAL,,AUTO
         4 007361   000015 755100                    STA     13,,PR0
         4 007362   010643 710000 4                  TRA     NEXT_PRO_OPT

     1962    21194
     1963    21195    4            CASE( 234 /* L_GR_DEPTHUSE */ ) ;

     1964    21196    4               CALL GRA_OPT_PROC( 0, 999999 ) ALTRET( NEXT_PRO_OPT);

  21196  4 007363   000140 236000 5                  LDQ     96
         4 007364   200156 756100                    STQ     J+1,,AUTO
         4 007365   000134 236000 5                  LDQ     92
         4 007366   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007367   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007370   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1965    21197    4               GRA$ -> GRA$REC.DEPTH_USABLE = VAL ;

  21197  4 007371   000041 470400 2                  LDP0    GRA$
         4 007372   200020 235100                    LDA     VAL,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:341  
         4 007373   000016 755100                    STA     14,,PR0
         4 007374   010643 710000 4                  TRA     NEXT_PRO_OPT

     1966    21198
     1967    21199    4            CASE( 237 /* L_GR_NDCWCURRENT */ ) ;

     1968    21200    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21200  4 007375   000053 236000 5                  LDQ     43
         4 007376   200156 756100                    STQ     J+1,,AUTO
         4 007377   000134 236000 5                  LDQ     92
         4 007400   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007401   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007402   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1969    21201    4               GRA$ -> GRA$REC.NDC_WIDTH_CURRENT = VAL ;

  21201  4 007403   200020 720100                    LXL0    VAL,,AUTO
         4 007404   000041 470400 2                  LDP0    GRA$
         4 007405   000017 740100                    STX0    15,,PR0
         4 007406   010643 710000 4                  TRA     NEXT_PRO_OPT

     1970    21202
     1971    21203    4            CASE( 236 /* L_GR_NDCHCURRENT */ ) ;

     1972    21204    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21204  4 007407   000053 236000 5                  LDQ     43
         4 007410   200156 756100                    STQ     J+1,,AUTO
         4 007411   000134 236000 5                  LDQ     92
         4 007412   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007413   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007414   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1973    21205    4               GRA$ -> GRA$REC.NDC_HEIGHT_CURRENT = VAL ;

  21205  4 007415   200020 720100                    LXL0    VAL,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:342  
         4 007416   000041 470400 2                  LDP0    GRA$
         4 007417   000017 440100                    SXL0    15,,PR0
         4 007420   010643 710000 4                  TRA     NEXT_PRO_OPT

     1974    21206
     1975    21207    4            CASE( 235 /* L_GR_NDCDCURRENT */ ) ;

     1976    21208    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21208  4 007421   000053 236000 5                  LDQ     43
         4 007422   200156 756100                    STQ     J+1,,AUTO
         4 007423   000134 236000 5                  LDQ     92
         4 007424   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007425   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007426   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1977    21209    4               GRA$ -> GRA$REC.NDC_DEPTH_CURRENT = VAL ;

  21209  4 007427   200020 720100                    LXL0    VAL,,AUTO
         4 007430   000041 470400 2                  LDP0    GRA$
         4 007431   000020 740100                    STX0    16,,PR0
         4 007432   010643 710000 4                  TRA     NEXT_PRO_OPT

     1978    21210
     1979    21211    4            CASE( 238 /* L_GR_MINLINEWIDTH */ ) ;

     1980    21212    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21212  4 007433   000053 236000 5                  LDQ     43
         4 007434   200156 756100                    STQ     J+1,,AUTO
         4 007435   000134 236000 5                  LDQ     92
         4 007436   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007437   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007440   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1981    21213    4               GRA$ -> GRA$REC.MINIMUM_LINEWIDTH = VAL ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:343  
  21213  4 007441   200020 720100                    LXL0    VAL,,AUTO
         4 007442   000041 470400 2                  LDP0    GRA$
         4 007443   000020 440100                    SXL0    16,,PR0
         4 007444   010643 710000 4                  TRA     NEXT_PRO_OPT

     1982    21214
     1983    21215    4            CASE( 239 /* L_GR_MAXLINEWIDTH */ ) ;

     1984    21216    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21216  4 007445   000053 236000 5                  LDQ     43
         4 007446   200156 756100                    STQ     J+1,,AUTO
         4 007447   000134 236000 5                  LDQ     92
         4 007450   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007451   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007452   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1985    21217    4               GRA$ -> GRA$REC.MAXIMUM_LINEWIDTH = VAL ;

  21217  4 007453   200020 720100                    LXL0    VAL,,AUTO
         4 007454   000041 470400 2                  LDP0    GRA$
         4 007455   000021 740100                    STX0    17,,PR0
         4 007456   010643 710000 4                  TRA     NEXT_PRO_OPT

     1986    21218
     1987    21219    4            CASE( 240 /* L_GR_MINCHSIZE */ ) ;

     1988    21220    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21220  4 007457   000053 236000 5                  LDQ     43
         4 007460   200156 756100                    STQ     J+1,,AUTO
         4 007461   000134 236000 5                  LDQ     92
         4 007462   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007463   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007464   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1989    21221    4               GRA$ -> GRA$REC.MIN_CHAR_SIZE = VAL ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:344  

  21221  4 007465   200020 720100                    LXL0    VAL,,AUTO
         4 007466   000041 470400 2                  LDP0    GRA$
         4 007467   000021 440100                    SXL0    17,,PR0
         4 007470   010643 710000 4                  TRA     NEXT_PRO_OPT

     1990    21222
     1991    21223    4            CASE( 241 /* L_GR_MAXCHSIZE */ ) ;

     1992    21224    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21224  4 007471   000053 236000 5                  LDQ     43
         4 007472   200156 756100                    STQ     J+1,,AUTO
         4 007473   000134 236000 5                  LDQ     92
         4 007474   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007475   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007476   010643 702000 4                  TSX2    NEXT_PRO_OPT

     1993    21225    4               GRA$ -> GRA$REC.MAX_CHAR_SIZE = VAL ;

  21225  4 007477   200020 720100                    LXL0    VAL,,AUTO
         4 007500   000041 470400 2                  LDP0    GRA$
         4 007501   000022 740100                    STX0    18,,PR0
         4 007502   010643 710000 4                  TRA     NEXT_PRO_OPT

     1994    21226
     1995    21227    4            CASE( 242 /* L_GR_ESCAPE */ ) ;

     1996    21228    4               CALL GRA_OPT_PROC( 0, 32767 ) ALTRET( NEXT_PRO_OPT);

  21228  4 007503   000053 236000 5                  LDQ     43
         4 007504   200156 756100                    STQ     J+1,,AUTO
         4 007505   000134 236000 5                  LDQ     92
         4 007506   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007507   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007510   010643 702000 4                  TSX2    NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:345  
     1997    21229    4               IF (SUBSTR(PTR$->P$NODE.SUBLK$(1)->OUT$SYM.TEXT,0,1)

  21229  4 007511   200030 470500                    LDP0    PTR$,,AUTO
         4 007512   000004 471500                    LDP1    4,,PR0
         4 007513   100004 236100                    LDQ     4,,PR1
         4 007514   000033 772000                    QRL     27
         4 007515   100004 236100                    LDQ     4,,PR1
         4 007516   000777 376003                    ANQ     511,DU
         4 007517   000110 116003                    CMPQ    72,DU
         4 007520   007524 601000 4                  TNZ     s:21233

     1998    21230    5                    = 'H') THEN DO;

     1999    21231    5                  OP = 1;

  21231  4 007521   000001 235007                    LDA     1,DL
         4 007522   200017 755100                    STA     OP,,AUTO

     2000    21232    5                  END;

  21232  4 007523   007536 710000 4                  TRA     s:21238

     2001    21233    4               ELSE IF (SUBSTR(PTR$->P$NODE.SUBLK$(1)->OUT$SYM.TEXT,0,1)

  21233  4 007524   100004 236100                    LDQ     4,,PR1
         4 007525   000033 772000                    QRL     27
         4 007526   100004 236100                    LDQ     4,,PR1
         4 007527   000777 376003                    ANQ     511,DU
         4 007530   000123 116003                    CMPQ    83,DU
         4 007531   007535 601000 4                  TNZ     s:21237

     2002    21234    5                       = 'S') THEN DO;

     2003    21235    5                     OP = 2;

  21235  4 007532   000002 235007                    LDA     2,DL
         4 007533   200017 755100                    STA     OP,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:346  

     2004    21236    5                     END;

  21236  4 007534   007536 710000 4                  TRA     s:21238

     2005    21237    4                  ELSE OP = 0;

  21237  4 007535   200017 450100                    STZ     OP,,AUTO

     2006    21238    4               IF (OP=0 OR OP=1 OR OP=2)

  21238  4 007536   200017 235100                    LDA     OP,,AUTO
         4 007537   007544 600000 4                  TZE     s:21240
         4 007540   000001 115007                    CMPA    1,DL
         4 007541   007544 600000 4                  TZE     s:21240
         4 007542   000002 115007                    CMPA    2,DL
         4 007543   007547 601000 4                  TNZ     s:21244

     2007    21239    5               THEN DO;

     2008    21240    5                  CALL PUT_GR_ESCAPE;

  21240  4 007544   012666 701000 4                  TSX1    PUT_GR_ESCAPE
         4 007545   000000 011000                    NOP     0

     2009    21241    5                  END;

  21241  4 007546   010643 710000 4                  TRA     NEXT_PRO_OPT

     2010    21242    5               ELSE DO;

     2011    21243                             /* We have an error */
     2012    21244    5                  END;

  21244  4 007547   010643 710000 4                  TRA     NEXT_PRO_OPT

     2013    21245
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:347  
     2014    21246    4            CASE( 243 /* L_GR_VIEWSURFACE */ ) ;

     2015    21247    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21247  4 007550   000053 236000 5                  LDQ     43
         4 007551   200156 756100                    STQ     J+1,,AUTO
         4 007552   000134 236000 5                  LDQ     92
         4 007553   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007554   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007555   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2016    21248    4               GRA$ -> GRA$REC.VIEW_SURFACE = VAL ;

  21248  4 007556   200020 720100                    LXL0    VAL,,AUTO
         4 007557   000041 470400 2                  LDP0    GRA$
         4 007560   000022 440100                    SXL0    18,,PR0
         4 007561   010643 710000 4                  TRA     NEXT_PRO_OPT

     2017    21249
     2018    21250    4            CASE( 244 /* L_GR_POLYGONFILL */ ) ;

     2019    21251    4               BLK$ = PTR$ -> P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);

  21251  4 007562   000003 471500                    LDP1    3,,PR0
         4 007563   100003 236100                    LDQ     3,,PR1
         4 007564   200004 756100                    STQ     BLK$,,AUTO

     2020    21252    5               DO CASE( OP_CODE ) ;

  21252  4 007565   200031 235100                    LDA     OP_CODE,,AUTO
         4 007566   000004 115007                    CMPA    4,DL
         4 007567   007571 602005 4                  TNC     s:21252+4,AL
         4 007570   010643 710000 4                  TRA     NEXT_PRO_OPT
         4 007571   007632 710000 4                  TRA     s:21264
         4 007572   007575 710000 4                  TRA     s:21254
         4 007573   007607 710000 4                  TRA     s:21258
         4 007574   007621 710000 4                  TRA     s:21262
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:348  

     2021    21253    5                  CASE( 1 /* GR_P_PLAIN */ ) ;

     2022    21254    5                    CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT)
             21254                              ;

  21254  4 007575   000053 236000 5                  LDQ     43
         4 007576   200156 756100                    STQ     J+1,,AUTO
         4 007577   000134 236000 5                  LDQ     92
         4 007600   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007601   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007602   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2023    21255    5                     GRA$ -> GRA$REC.POLYGON_FILL.PLAIN = VAL ;

  21255  4 007603   200020 720100                    LXL0    VAL,,AUTO
         4 007604   000041 470400 2                  LDP0    GRA$
         4 007605   000023 740100                    STX0    19,,PR0
         4 007606   010643 710000 4                  TRA     NEXT_PRO_OPT

     2024    21256
     2025    21257    5                  CASE( 2 /* GR_P_SHADED */ ) ;

     2026    21258    5                    CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT)
             21258                              ;

  21258  4 007607   000053 236000 5                  LDQ     43
         4 007610   200156 756100                    STQ     J+1,,AUTO
         4 007611   000134 236000 5                  LDQ     92
         4 007612   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007613   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007614   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2027    21259    5                     GRA$ -> GRA$REC.POLYGON_FILL.SHADED = VAL ;

  21259  4 007615   200020 720100                    LXL0    VAL,,AUTO
         4 007616   000041 470400 2                  LDP0    GRA$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:349  
         4 007617   000023 440100                    SXL0    19,,PR0
         4 007620   010643 710000 4                  TRA     NEXT_PRO_OPT

     2028    21260
     2029    21261    5                  CASE( 3 /* GR_P_PATTERNED */ ) ;

     2030    21262    5                    CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT)
             21262                              ;

  21262  4 007621   000053 236000 5                  LDQ     43
         4 007622   200156 756100                    STQ     J+1,,AUTO
         4 007623   000134 236000 5                  LDQ     92
         4 007624   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007625   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007626   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2031    21263    5                     GRA$ -> GRA$REC.POLYGON_FILL.PATTERNED = VAL ;

  21263  4 007627   200020 720100                    LXL0    VAL,,AUTO
         4 007630   000041 470400 2                  LDP0    GRA$
         4 007631   000024 740100                    STX0    20,,PR0

     2032    21264    5                  END ; /* Of case( OP_CODE )  */

  21264  4 007632   010643 710000 4                  TRA     NEXT_PRO_OPT

     2033    21265    4            CASE( 247 /* L_GR_XPIXMAX */ ) ;

     2034    21266    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21266  4 007633   000053 236000 5                  LDQ     43
         4 007634   200156 756100                    STQ     J+1,,AUTO
         4 007635   000134 236000 5                  LDQ     92
         4 007636   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007637   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007640   010643 702000 4                  TSX2    NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:350  
     2035    21267    4               GRA$ -> GRA$REC.PIX_ARRAY_MAXX = VAL ;

  21267  4 007641   200020 720100                    LXL0    VAL,,AUTO
         4 007642   000041 470400 2                  LDP0    GRA$
         4 007643   000024 440100                    SXL0    20,,PR0
         4 007644   010643 710000 4                  TRA     NEXT_PRO_OPT

     2036    21268
     2037    21269    4            CASE( 248 /* L_GR_YPIXMAX */ ) ;

     2038    21270    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21270  4 007645   000053 236000 5                  LDQ     43
         4 007646   200156 756100                    STQ     J+1,,AUTO
         4 007647   000134 236000 5                  LDQ     92
         4 007650   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007651   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007652   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2039    21271    4               GRA$ -> GRA$REC.PIX_ARRAY_MAXY = VAL ;

  21271  4 007653   200020 720100                    LXL0    VAL,,AUTO
         4 007654   000041 470400 2                  LDP0    GRA$
         4 007655   000025 740100                    STX0    21,,PR0
         4 007656   010643 710000 4                  TRA     NEXT_PRO_OPT

     2040    21272
     2041    21273    4            CASE( 249 /* L_GR_COLRTABSIZE */ ) ;

     2042    21274    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21274  4 007657   000053 236000 5                  LDQ     43
         4 007660   200156 756100                    STQ     J+1,,AUTO
         4 007661   000134 236000 5                  LDQ     92
         4 007662   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007663   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007664   010643 702000 4                  TSX2    NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:351  

     2043    21275    4               GRA$ -> GRA$REC.COLOR_TAB_SIZE = VAL ;

  21275  4 007665   200020 720100                    LXL0    VAL,,AUTO
         4 007666   000041 470400 2                  LDP0    GRA$
         4 007667   000025 440100                    SXL0    21,,PR0
         4 007670   010643 710000 4                  TRA     NEXT_PRO_OPT

     2044    21276
     2045    21277    4            CASE( 250 /* L_GR_INTNTABSIZE */ ) ;

     2046    21278    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21278  4 007671   000053 236000 5                  LDQ     43
         4 007672   200156 756100                    STQ     J+1,,AUTO
         4 007673   000134 236000 5                  LDQ     92
         4 007674   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007675   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007676   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2047    21279    4               GRA$ -> GRA$REC.INTENSITY_TAB_SIZE = VAL ;

  21279  4 007677   200020 720100                    LXL0    VAL,,AUTO
         4 007700   000041 470400 2                  LDP0    GRA$
         4 007701   000026 740100                    STX0    22,,PR0
         4 007702   010643 710000 4                  TRA     NEXT_PRO_OPT

     2048    21280
     2049    21281    4            CASE( 251 /* L_GR_LINESTYLEHWCOUNT */ ) ;

     2050    21282    4               CALL GRA_OPT_PROC( 1, 9 ) ALTRET( NEXT_PRO_OPT);

  21282  4 007703   000141 236000 5                  LDQ     97
         4 007704   200156 756100                    STQ     J+1,,AUTO
         4 007705   000024 236000 5                  LDQ     20
         4 007706   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007707   012552 701000 4                  TSX1    GRA_OPT_PROC
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:352  
         4 007710   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2051    21283    4               GRA$ -> GRA$REC.LINESTYLE_HARDWARE_COUNT = VAL ;

  21283  4 007711   200020 720100                    LXL0    VAL,,AUTO
         4 007712   000041 470400 2                  LDP0    GRA$
         4 007713   000026 440100                    SXL0    22,,PR0
         4 007714   010643 710000 4                  TRA     NEXT_PRO_OPT

     2052    21284
     2053    21285    4            CASE( 277 /* L_GR_LINESTYLESWCOUNT */ ) ;

     2054    21286    4               CALL GRA_OPT_PROC( 0, 9991 ) ALTRET( NEXT_PRO_OPT);

  21286  4 007715   000143 236000 5                  LDQ     99
         4 007716   200156 756100                    STQ     J+1,,AUTO
         4 007717   000134 236000 5                  LDQ     92
         4 007720   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007721   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007722   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2055    21287    4               GRA$ -> GRA$REC.LINESTYLE_SOFTWARE_COUNT = VAL ;

  21287  4 007723   200020 720100                    LXL0    VAL,,AUTO
         4 007724   000041 470400 2                  LDP0    GRA$
         4 007725   000027 740100                    STX0    23,,PR0
         4 007726   010643 710000 4                  TRA     NEXT_PRO_OPT

     2056    21288
     2057    21289    4            CASE( 252 /* L_GR_LINEWCOUNT */ ) ;

     2058    21290    4               CALL GRA_OPT_PROC( 1, %XG_DEFAULT_MAX_NDC# ) ALTRET(NEXT_PRO_OPT);

  21290  4 007727   000053 236000 5                  LDQ     43
         4 007730   200156 756100                    STQ     J+1,,AUTO
         4 007731   000024 236000 5                  LDQ     20
         4 007732   200155 756100                    STQ     PRO_TYPE+2,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:353  
         4 007733   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007734   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2059    21291    4               GRA$ -> GRA$REC.LINEWIDTH_COUNT = VAL ;

  21291  4 007735   200020 720100                    LXL0    VAL,,AUTO
         4 007736   000041 470400 2                  LDP0    GRA$
         4 007737   000027 440100                    SXL0    23,,PR0
         4 007740   010643 710000 4                  TRA     NEXT_PRO_OPT

     2060    21292
     2061    21293    4            CASE( 253 /* L_GR_FONTCOUNT */ ) ;

     2062    21294    4               CALL GRA_OPT_PROC( 1, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21294  4 007741   000053 236000 5                  LDQ     43
         4 007742   200156 756100                    STQ     J+1,,AUTO
         4 007743   000024 236000 5                  LDQ     20
         4 007744   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007745   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007746   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2063    21295    4               GRA$ -> GRA$REC.FONT_COUNT = VAL ;

  21295  4 007747   200020 720100                    LXL0    VAL,,AUTO
         4 007750   000041 470400 2                  LDP0    GRA$
         4 007751   000030 740100                    STX0    24,,PR0
         4 007752   010643 710000 4                  TRA     NEXT_PRO_OPT

     2064    21296
     2065    21297    4            CASE( 254 /* L_GR_PENHWCOUNT */ ) ;

     2066    21298    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21298  4 007753   000053 236000 5                  LDQ     43
         4 007754   200156 756100                    STQ     J+1,,AUTO
         4 007755   000134 236000 5                  LDQ     92
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:354  
         4 007756   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007757   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007760   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2067    21299    4               GRA$ -> GRA$REC.PEN_HARDWARE_COUNT = VAL ;

  21299  4 007761   200020 720100                    LXL0    VAL,,AUTO
         4 007762   000041 470400 2                  LDP0    GRA$
         4 007763   000030 440100                    SXL0    24,,PR0
         4 007764   010643 710000 4                  TRA     NEXT_PRO_OPT

     2068    21300
     2069    21301    4            CASE( 278 /* L_GR_PENSWCOUNT */ ) ;

     2070    21302    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21302  4 007765   000053 236000 5                  LDQ     43
         4 007766   200156 756100                    STQ     J+1,,AUTO
         4 007767   000134 236000 5                  LDQ     92
         4 007770   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 007771   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 007772   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2071    21303    4               GRA$ -> GRA$REC.PEN_SOFTWARE_COUNT = VAL ;

  21303  4 007773   200020 720100                    LXL0    VAL,,AUTO
         4 007774   000041 470400 2                  LDP0    GRA$
         4 007775   000031 740100                    STX0    25,,PR0
         4 007776   010643 710000 4                  TRA     NEXT_PRO_OPT

     2072    21304
     2073    21305    4            CASE( 255 /* L_GR_CHSIZECOUNT */ ) ;

     2074    21306    4               CALL GRA_OPT_PROC( 1, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21306  4 007777   000053 236000 5                  LDQ     43
         4 010000   200156 756100                    STQ     J+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:355  
         4 010001   000024 236000 5                  LDQ     20
         4 010002   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010003   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010004   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2075    21307    4               GRA$ -> GRA$REC.CHAR_SIZE_COUNT = VAL ;

  21307  4 010005   200020 720100                    LXL0    VAL,,AUTO
         4 010006   000041 470400 2                  LDP0    GRA$
         4 010007   000031 440100                    SXL0    25,,PR0
         4 010010   010643 710000 4                  TRA     NEXT_PRO_OPT

     2076    21308
     2077    21309    4            CASE( 256 /* L_GR_MARKERHWCOUNT */ ) ;

     2078    21310    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21310  4 010011   000053 236000 5                  LDQ     43
         4 010012   200156 756100                    STQ     J+1,,AUTO
         4 010013   000134 236000 5                  LDQ     92
         4 010014   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010015   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010016   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2079    21311    4               GRA$ -> GRA$REC.MARKER_HARDWARE_COUNT = VAL ;

  21311  4 010017   200020 720100                    LXL0    VAL,,AUTO
         4 010020   000041 470400 2                  LDP0    GRA$
         4 010021   000032 740100                    STX0    26,,PR0
         4 010022   010643 710000 4                  TRA     NEXT_PRO_OPT

     2080    21312
     2081    21313    4            CASE( 258 /* L_GR_MARKERSWCOUNT */ ) ;

     2082    21314    4               CALL GRA_OPT_PROC( 0, %XG_DEFAULT_MAX_NDC# ) ALTRET( NEXT_PRO_OPT);

  21314  4 010023   000053 236000 5                  LDQ     43
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:356  
         4 010024   200156 756100                    STQ     J+1,,AUTO
         4 010025   000134 236000 5                  LDQ     92
         4 010026   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010027   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010030   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2083    21315    4               GRA$ -> GRA$REC.MARKER_SOFTWARE_COUNT = VAL ;

  21315  4 010031   200020 720100                    LXL0    VAL,,AUTO
         4 010032   000041 470400 2                  LDP0    GRA$
         4 010033   000032 440100                    SXL0    26,,PR0
         4 010034   010643 710000 4                  TRA     NEXT_PRO_OPT

     2084    21316
     2085    21317    4            CASE( 257 /* L_GR_LINEWSUPPORT */ ) ;

     2086    21318    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);

  21318  4 010035   000105 236000 5                  LDQ     69
         4 010036   200156 756100                    STQ     J+1,,AUTO
         4 010037   000134 236000 5                  LDQ     92
         4 010040   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010041   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010042   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2087    21319    4               GRA$ -> GRA$REC.LINEWIDTH_SUPPORT = VAL_FOUR(8) ;

  21319  4 010043   000041 470400 2                  LDP0    GRA$
         4 010044   200020 236100                    LDQ     VAL,,AUTO
         4 010045   000040 736000                    QLS     32
         4 010046   000033 676100                    ERQ     27,,PR0
         4 010047   740000 376003                    ANQ     -16384,DU
         4 010050   000033 656100                    ERSQ    27,,PR0
         4 010051   010643 710000 4                  TRA     NEXT_PRO_OPT

     2088    21320
     2089    21321    4            CASE( 259 /* L_GR_INTNSUPPORT */ ) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:357  

     2090    21322    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);

  21322  4 010052   000105 236000 5                  LDQ     69
         4 010053   200156 756100                    STQ     J+1,,AUTO
         4 010054   000134 236000 5                  LDQ     92
         4 010055   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010056   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010057   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2091    21323    4               GRA$ -> GRA$REC.INTENSITY_SUPPORT = VAL_FOUR(8) ;

  21323  4 010060   000041 470400 2                  LDP0    GRA$
         4 010061   200020 236100                    LDQ     VAL,,AUTO
         4 010062   000030 736000                    QLS     24
         4 010063   000033 676100                    ERQ     27,,PR0
         4 010064   001700 376003                    ANQ     960,DU
         4 010065   000033 656100                    ERSQ    27,,PR0
         4 010066   010643 710000 4                  TRA     NEXT_PRO_OPT

     2092    21324
     2093    21325    4            CASE( 260 /* L_GR_CHSIZESUPPORT */ ) ;

     2094    21326    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);

  21326  4 010067   000105 236000 5                  LDQ     69
         4 010070   200156 756100                    STQ     J+1,,AUTO
         4 010071   000134 236000 5                  LDQ     92
         4 010072   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010073   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010074   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2095    21327    4               GRA$ -> GRA$REC.CHARSIZE_SUPPORT = VAL_FOUR(8) ;

  21327  4 010075   000041 470400 2                  LDP0    GRA$
         4 010076   200020 236100                    LDQ     VAL,,AUTO
         4 010077   000034 736000                    QLS     28
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:358  
         4 010100   000033 676100                    ERQ     27,,PR0
         4 010101   036000 376003                    ANQ     15360,DU
         4 010102   000033 656100                    ERSQ    27,,PR0
         4 010103   010643 710000 4                  TRA     NEXT_PRO_OPT

     2096    21328
     2097    21329    4            CASE( 261 /* L_GR_HIGHLTSUPPORT */ ) ;

     2098    21330    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);

  21330  4 010104   000105 236000 5                  LDQ     69
         4 010105   200156 756100                    STQ     J+1,,AUTO
         4 010106   000134 236000 5                  LDQ     92
         4 010107   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010110   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010111   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2099    21331    4               GRA$ -> GRA$REC.HIGHLIGHT_SUPPORT = VAL_FOUR(8) ;

  21331  4 010112   000041 470400 2                  LDP0    GRA$
         4 010113   200020 236100                    LDQ     VAL,,AUTO
         4 010114   000024 736000                    QLS     20
         4 010115   000033 676100                    ERQ     27,,PR0
         4 010116   000074 376003                    ANQ     60,DU
         4 010117   000033 656100                    ERSQ    27,,PR0
         4 010120   010643 710000 4                  TRA     NEXT_PRO_OPT

     2100    21332
     2101    21333    4            CASE( 262 /* L_GR_OUTLEVEL */ ) ;

     2102    21334    4               CALL GRA_OPT_PROC( 0, 5 ) ALTRET( NEXT_PRO_OPT);

  21334  4 010121   000144 236000 5                  LDQ     100
         4 010122   200156 756100                    STQ     J+1,,AUTO
         4 010123   000134 236000 5                  LDQ     92
         4 010124   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010125   012552 701000 4                  TSX1    GRA_OPT_PROC
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:359  
         4 010126   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2103    21335    4               GRA$ -> GRA$REC.OUTPUT_LEVEL = VAL_SIX(5) ;

  21335  4 010127   000041 470400 2                  LDP0    GRA$
         4 010130   200020 236100                    LDQ     VAL,,AUTO
         4 010131   000016 736000                    QLS     14
         4 010132   000033 676100                    ERQ     27,,PR0
         4 010133   000145 376000 5                  ANQ     101
         4 010134   000033 656100                    ERSQ    27,,PR0
         4 010135   010643 710000 4                  TRA     NEXT_PRO_OPT

     2104    21336
     2105    21337    4            CASE( 263 /* L_GR_BATCHMODE */ ) ;

     2106    21338    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);

  21338  4 010136   000146 236000 5                  LDQ     102
         4 010137   200156 756100                    STQ     J+1,,AUTO
         4 010140   000134 236000 5                  LDQ     92
         4 010141   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010142   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010143   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2107    21339    4               GRA$ -> GRA$REC.BATCH_MODE = VAL_FOUR(8) ;

  21339  4 010144   000041 470400 2                  LDP0    GRA$
         4 010145   200020 236100                    LDQ     VAL,,AUTO
         4 010146   000012 736000                    QLS     10
         4 010147   000033 676100                    ERQ     27,,PR0
         4 010150   036000 376007                    ANQ     15360,DL
         4 010151   000033 656100                    ERSQ    27,,PR0
         4 010152   010643 710000 4                  TRA     NEXT_PRO_OPT

     2108    21340
     2109    21341    4            CASE( 264 /* L_GR_HIDDENLEVEL */ ) ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:360  
     2110    21342    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);

  21342  4 010153   000146 236000 5                  LDQ     102
         4 010154   200156 756100                    STQ     J+1,,AUTO
         4 010155   000134 236000 5                  LDQ     92
         4 010156   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010157   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010160   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2111    21343    4               GRA$ -> GRA$REC.HIDDEN_SURFACE_LEVEL = VAL_FOUR(8) ;

  21343  4 010161   000041 470400 2                  LDP0    GRA$
         4 010162   200020 236100                    LDQ     VAL,,AUTO
         4 010163   000006 736000                    QLS     6
         4 010164   000033 676100                    ERQ     27,,PR0
         4 010165   001700 376007                    ANQ     960,DL
         4 010166   000033 656100                    ERSQ    27,,PR0
         4 010167   010643 710000 4                  TRA     NEXT_PRO_OPT

     2112    21344
     2113    21345    4            CASE( 265 /* L_GR_DIMLEVEL */ ) ;

     2114    21346    4               CALL GRA_OPT_PROC( 2, 3 ) ALTRET( NEXT_PRO_OPT);

  21346  4 010170   000105 236000 5                  LDQ     69
         4 010171   200156 756100                    STQ     J+1,,AUTO
         4 010172   000147 236000 5                  LDQ     103
         4 010173   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010174   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010175   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2115    21347    4               GRA$ -> GRA$REC.DIMENSION_LEVEL = VAL_TWO(17) ;

  21347  4 010176   000041 470400 2                  LDP0    GRA$
         4 010177   200020 236100                    LDQ     VAL,,AUTO
         4 010200   000004 736000                    QLS     4
         4 010201   000033 676100                    ERQ     27,,PR0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:361  
         4 010202   000060 376007                    ANQ     48,DL
         4 010203   000033 656100                    ERSQ    27,,PR0
         4 010204   010643 710000 4                  TRA     NEXT_PRO_OPT

     2116    21348
     2117    21349    4            CASE( 266 /* L_GR_VIEWTYPE */ ) ;

     2118    21350    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);

  21350  4 010205   000146 236000 5                  LDQ     102
         4 010206   200156 756100                    STQ     J+1,,AUTO
         4 010207   000134 236000 5                  LDQ     92
         4 010210   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010211   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010212   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2119    21351    4               GRA$ -> GRA$REC.VIEW_SURFACE_TYPE = VAL_FOUR(8) ;

  21351  4 010213   000041 470400 2                  LDP0    GRA$
         4 010214   200020 236100                    LDQ     VAL,,AUTO
         4 010215   000033 676100                    ERQ     27,,PR0
         4 010216   000017 376007                    ANQ     15,DL
         4 010217   000033 656100                    ERSQ    27,,PR0
         4 010220   010643 710000 4                  TRA     NEXT_PRO_OPT

     2120    21352
     2121    21353    4            CASE( 267 /* L_GR_PIXELTYPE */ ) ;

     2122    21354    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);

  21354  4 010221   000105 236000 5                  LDQ     69
         4 010222   200156 756100                    STQ     J+1,,AUTO
         4 010223   000134 236000 5                  LDQ     92
         4 010224   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010225   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010226   010643 702000 4                  TSX2    NEXT_PRO_OPT

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:362  
     2123    21355    4               GRA$ -> GRA$REC.PIXEL_TYPE = VAL_FOUR(8) ;

  21355  4 010227   000041 470400 2                  LDP0    GRA$
         4 010230   200020 236100                    LDQ     VAL,,AUTO
         4 010231   000040 736000                    QLS     32
         4 010232   000034 676100                    ERQ     28,,PR0
         4 010233   740000 376003                    ANQ     -16384,DU
         4 010234   000034 656100                    ERSQ    28,,PR0
         4 010235   010643 710000 4                  TRA     NEXT_PRO_OPT

     2124    21356
     2125    21357    4            CASE( 268 /* L_GR_EDGETYPE */ ) ;

     2126    21358    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);

  21358  4 010236   000146 236000 5                  LDQ     102
         4 010237   200156 756100                    STQ     J+1,,AUTO
         4 010240   000134 236000 5                  LDQ     92
         4 010241   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010242   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010243   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2127    21359    4               GRA$ -> GRA$REC.EDGE_TYPE = VAL_FOUR(8) ;

  21359  4 010244   000041 470400 2                  LDP0    GRA$
         4 010245   200020 236100                    LDQ     VAL,,AUTO
         4 010246   000034 736000                    QLS     28
         4 010247   000034 676100                    ERQ     28,,PR0
         4 010250   036000 376003                    ANQ     15360,DU
         4 010251   000034 656100                    ERSQ    28,,PR0
         4 010252   010643 710000 4                  TRA     NEXT_PRO_OPT

     2128    21360
     2129    21361    4            CASE( 269 /* L_GR_COLRTABTYPE */ ) ;

     2130    21362    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:363  
  21362  4 010253   000146 236000 5                  LDQ     102
         4 010254   200156 756100                    STQ     J+1,,AUTO
         4 010255   000134 236000 5                  LDQ     92
         4 010256   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010257   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010260   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2131    21363    4               GRA$ -> GRA$REC.COLOR_TABLE_TYPE = VAL_FOUR(8) ;

  21363  4 010261   000041 470400 2                  LDP0    GRA$
         4 010262   200020 236100                    LDQ     VAL,,AUTO
         4 010263   000030 736000                    QLS     24
         4 010264   000034 676100                    ERQ     28,,PR0
         4 010265   001700 376003                    ANQ     960,DU
         4 010266   000034 656100                    ERSQ    28,,PR0
         4 010267   010643 710000 4                  TRA     NEXT_PRO_OPT

     2132    21364
     2133    21365    4            CASE( 270 /* L_GR_BKGRNDTYPE */ ) ;

     2134    21366    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);

  21366  4 010270   000147 236000 5                  LDQ     103
         4 010271   200156 756100                    STQ     J+1,,AUTO
         4 010272   000134 236000 5                  LDQ     92
         4 010273   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010274   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010275   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2135    21367    4               GRA$ -> GRA$REC.BACKGROUND_TYPE = VAL_TWO(17) ;

  21367  4 010276   000041 470400 2                  LDP0    GRA$
         4 010277   200020 236100                    LDQ     VAL,,AUTO
         4 010300   000026 736000                    QLS     22
         4 010301   000034 676100                    ERQ     28,,PR0
         4 010302   000060 376003                    ANQ     48,DU
         4 010303   000034 656100                    ERSQ    28,,PR0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:364  
         4 010304   010643 710000 4                  TRA     NEXT_PRO_OPT

     2136    21368
     2137    21369    4            CASE( 271 /* L_GR_DEVTYPE */ ) ;

     2138    21370    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);

  21370  4 010305   000147 236000 5                  LDQ     103
         4 010306   200156 756100                    STQ     J+1,,AUTO
         4 010307   000134 236000 5                  LDQ     92
         4 010310   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010311   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010312   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2139    21371    4               GRA$ -> GRA$REC.DEVICE_TYPE = VAL_TWO(17) ;

  21371  4 010313   000041 470400 2                  LDP0    GRA$
         4 010314   200020 236100                    LDQ     VAL,,AUTO
         4 010315   000024 736000                    QLS     20
         4 010316   000034 676100                    ERQ     28,,PR0
         4 010317   000014 376003                    ANQ     12,DU
         4 010320   000034 656100                    ERSQ    28,,PR0
         4 010321   010643 710000 4                  TRA     NEXT_PRO_OPT

     2140    21372
     2141    21373    4            CASE( 272 /* L_GR_IMAGETRANS */ ) ;

     2142    21374    4               CALL GRA_OPT_PROC( 0, 4 ) ALTRET( NEXT_PRO_OPT);

  21374  4 010322   000146 236000 5                  LDQ     102
         4 010323   200156 756100                    STQ     J+1,,AUTO
         4 010324   000134 236000 5                  LDQ     92
         4 010325   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010326   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010327   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2143    21375    4               GRA$ -> GRA$REC.IMAGE_TRANSF = VAL_FOUR(8) ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:365  

  21375  4 010330   000041 470400 2                  LDP0    GRA$
         4 010331   200020 236100                    LDQ     VAL,,AUTO
         4 010332   000020 736000                    QLS     16
         4 010333   000034 676100                    ERQ     28,,PR0
         4 010334   000150 376000 5                  ANQ     104
         4 010335   000034 656100                    ERSQ    28,,PR0
         4 010336   010643 710000 4                  TRA     NEXT_PRO_OPT

     2144    21376
     2145    21377    4            CASE( 273 /* L_GR_COLRMODEL */ ) ;

     2146    21378    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);

  21378  4 010337   000147 236000 5                  LDQ     103
         4 010340   200156 756100                    STQ     J+1,,AUTO
         4 010341   000134 236000 5                  LDQ     92
         4 010342   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010343   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010344   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2147    21379    4               GRA$ -> GRA$REC.COLOR_MODEL = VAL_TWO(17) ;

  21379  4 010345   000041 470400 2                  LDP0    GRA$
         4 010346   200020 236100                    LDQ     VAL,,AUTO
         4 010347   000016 736000                    QLS     14
         4 010350   000034 676100                    ERQ     28,,PR0
         4 010351   140000 376007                    ANQ     49152,DL
         4 010352   000034 656100                    ERSQ    28,,PR0
         4 010353   010643 710000 4                  TRA     NEXT_PRO_OPT

     2148    21380
     2149    21381    4            CASE( 274 /* L_GR_BKGRNDCOLOR */ ) ;

     2150    21382    4               CALL GRA_OPT_PROC( 0, 2 ) ALTRET( NEXT_PRO_OPT);

  21382  4 010354   000147 236000 5                  LDQ     103
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:366  
         4 010355   200156 756100                    STQ     J+1,,AUTO
         4 010356   000134 236000 5                  LDQ     92
         4 010357   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010360   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010361   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2151    21383    4               GRA$ -> GRA$REC.BACKGROUND_COLOR = VAL_TWO(17) ;

  21383  4 010362   000041 470400 2                  LDP0    GRA$
         4 010363   200020 236100                    LDQ     VAL,,AUTO
         4 010364   000014 736000                    QLS     12
         4 010365   000034 676100                    ERQ     28,,PR0
         4 010366   030000 376007                    ANQ     12288,DL
         4 010367   000034 656100                    ERSQ    28,,PR0
         4 010370   010643 710000 4                  TRA     NEXT_PRO_OPT

     2152    21384
     2153    21385    4            CASE( 275 /* L_GR_COLRACTION */ ) ;

     2154    21386    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);

  21386  4 010371   000105 236000 5                  LDQ     69
         4 010372   200156 756100                    STQ     J+1,,AUTO
         4 010373   000134 236000 5                  LDQ     92
         4 010374   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010375   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010376   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2155    21387    4               GRA$ -> GRA$REC.COLOR_ACTION = VAL_FOUR(8) ;

  21387  4 010377   000041 470400 2                  LDP0    GRA$
         4 010400   200020 236100                    LDQ     VAL,,AUTO
         4 010401   000010 736000                    QLS     8
         4 010402   000034 676100                    ERQ     28,,PR0
         4 010403   007400 376007                    ANQ     3840,DL
         4 010404   000034 656100                    ERSQ    28,,PR0
         4 010405   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:367  

     2156    21388
     2157    21389    4            CASE( 276 /* L_GR_INTNACTION */ ) ;

     2158    21390    4               CALL GRA_OPT_PROC( 0, 3 ) ALTRET( NEXT_PRO_OPT);

  21390  4 010406   000105 236000 5                  LDQ     69
         4 010407   200156 756100                    STQ     J+1,,AUTO
         4 010410   000134 236000 5                  LDQ     92
         4 010411   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010412   012552 701000 4                  TSX1    GRA_OPT_PROC
         4 010413   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2159    21391    4               GRA$ -> GRA$REC.INTENSITY_ACTION = VAL_FOUR(8) ;

  21391  4 010414   000041 470400 2                  LDP0    GRA$
         4 010415   200020 236100                    LDQ     VAL,,AUTO
         4 010416   000004 736000                    QLS     4
         4 010417   000034 676100                    ERQ     28,,PR0
         4 010420   000360 376007                    ANQ     240,DL
         4 010421   000034 656100                    ERSQ    28,,PR0
         4 010422   010643 710000 4                  TRA     NEXT_PRO_OPT

     2160    21392    4            CASE ( 181 /* L_ENDMSGLIN_CHR */ ) ;

     2161    21393    4               CALL GET_HEX_VAL( 255 ) ALTRET( NEXT_PRO_OPT );

  21393  4 010423   000031 236000 5                  LDQ     25
         4 010424   200163 756100                    STQ     IDENT+1,,AUTO
         4 010425   010767 701000 4                  TSX1    GET_HEX_VAL
         4 010426   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2162    21394    4               PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.ENDMSGLIN_CHR#);

  21394  4 010427   000047 236000 2                  LDQ     TCCHR$
         4 010430   000024 036003                    ADLQ    20,DU
         4 010431   200007 756100                    STQ     PTROPT$,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:368  

     2163    21395    4               CALL PLACE_OPT (PTROPT$) ALTRET (NEXT_PRO_OPT);

  21395  4 010432   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 010433   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 010434   011522 701000 4                  TSX1    PLACE_OPT
         4 010435   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 010436   010643 710000 4                  TRA     NEXT_PRO_OPT

     2164    21396
     2165    21397    4            CASE ( 182 /* L_SPCDLTFLD */ );

     2166    21398    4               TCCHR$->KL$CCHR.SPCDLTFLD# = YES_NO;

  21398  4 010437   000047 471400 2                  LDP1    TCCHR$
         4 010440   003100 060400                    CSL     bolr='003'O
         4 010441   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010442   100011 100001                    BDSC    9,,PR1                   by=0,bit=8,n=1
         4 010443   010643 710000 4                  TRA     NEXT_PRO_OPT

     2167    21399
     2168    21400    4            CASE ( 198 /* L_RGNSCROLL */ );

     2169    21401    4               TCCHR$->KL$CCHR.RGNSCROLL# = YES_NO;

  21401  4 010444   000047 471400 2                  LDP1    TCCHR$
         4 010445   003100 060400                    CSL     bolr='003'O
         4 010446   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010447   100011 250001                    BDSC    9,,PR1                   by=1,bit=5,n=1
         4 010450   010643 710000 4                  TRA     NEXT_PRO_OPT

     2170    21402
     2171    21403    4            CASE ( 183 /* L_EL0DLTFLD */ );

     2172    21404    4               TCCHR$->KL$CCHR.EL0DLTFLD# = YES_NO;

  21404  4 010451   000047 471400 2                  LDP1    TCCHR$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:369  
         4 010452   003100 060400                    CSL     bolr='003'O
         4 010453   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010454   100011 260001                    BDSC    9,,PR1                   by=1,bit=6,n=1
         4 010455   010643 710000 4                  TRA     NEXT_PRO_OPT

     2173    21405
     2174    21406    4            CASE ( 184 /* L_ED0DLTFLD */ );

     2175    21407    4               TCCHR$->KL$CCHR.ED0DLTFLD# = YES_NO;

  21407  4 010456   000047 471400 2                  LDP1    TCCHR$
         4 010457   003100 060400                    CSL     bolr='003'O
         4 010460   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010461   100011 270001                    BDSC    9,,PR1                   by=1,bit=7,n=1
         4 010462   010643 710000 4                  TRA     NEXT_PRO_OPT

     2176    21408
     2177    21409    4            CASE ( 185 /* L_ED2DLTFLD */ );

     2178    21410    4               TCCHR$->KL$CCHR.ED2DLTFLD# = YES_NO;

  21410  4 010463   000047 471400 2                  LDP1    TCCHR$
         4 010464   003100 060400                    CSL     bolr='003'O
         4 010465   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010466   100011 300001                    BDSC    9,,PR1                   by=1,bit=8,n=1
         4 010467   010643 710000 4                  TRA     NEXT_PRO_OPT

     2179    21411
     2180    21412    4            CASE ( 186 /* L_ICHRQRDCH */ );

     2181    21413    4               TCCHR$->KL$CCHR.ICHRQRDCH# = YES_NO;

  21413  4 010470   000047 471400 2                  LDP1    TCCHR$
         4 010471   003100 060400                    CSL     bolr='003'O
         4 010472   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010473   100011 030001                    BDSC    9,,PR1                   by=0,bit=3,n=1
         4 010474   010643 710000 4                  TRA     NEXT_PRO_OPT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:370  

     2182    21414
     2183    21415    4            CASE ( 187 /* L_ILNRQRDLN */ );

     2184    21416    4               TCCHR$->KL$CCHR.ILNRQRDLN# = YES_NO;

  21416  4 010475   000047 471400 2                  LDP1    TCCHR$
         4 010476   003100 060400                    CSL     bolr='003'O
         4 010477   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010500   100011 040001                    BDSC    9,,PR1                   by=0,bit=4,n=1
         4 010501   010643 710000 4                  TRA     NEXT_PRO_OPT

     2185    21417
     2186    21418    4            CASE ( 188 /* L_FRSCLMFLD */ );

     2187    21419    4               TCCHR$->KL$CCHR.FRSCLMFLD# = YES_NO;

  21419  4 010502   000047 471400 2                  LDP1    TCCHR$
         4 010503   003100 060400                    CSL     bolr='003'O
         4 010504   000002 000001 2                  BDSC    YES_NO                   by=0,bit=0,n=1
         4 010505   100011 070001                    BDSC    9,,PR1                   by=0,bit=7,n=1
         4 010506   010643 710000 4                  TRA     NEXT_PRO_OPT

     2188    21420
     2189    21421    4            CASE ( 189 /* L_MSGHALT */ );

     2190    21422    4               TCTL$->VLP$TRMCTRL.MSGHALT# = YES_NO_FLG;

  21422  4 010507   000043 471400 2                  LDP1    TCTL$
         4 010510   003100 060400                    CSL     bolr='003'O
         4 010511   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 010512   100002 050002                    BDSC    2,,PR1                   by=0,bit=5,n=2
         4 010513   010643 710000 4                  TRA     NEXT_PRO_OPT

     2191    21423
     2192    21424    4            CASE ( 190 /* L_MSGLINE */ );

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:371  
     2193    21425    4               TCTL$->VLP$TRMCTRL.MSGLINE# = YES_NO_FLG;

  21425  4 010514   000043 471400 2                  LDP1    TCTL$
         4 010515   003100 060400                    CSL     bolr='003'O
         4 010516   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 010517   100002 210002                    BDSC    2,,PR1                   by=1,bit=1,n=2
         4 010520   010643 710000 4                  TRA     NEXT_PRO_OPT

     2194    21426
     2195    21427    4            CASE ( 191 /* L_INSERTMODE */ );

     2196    21428    4               TCTL$->VLP$TRMCTRL.INSERTMODE# = YES_NO_FLG;

  21428  4 010521   000043 471400 2                  LDP1    TCTL$
         4 010522   003100 060400                    CSL     bolr='003'O
         4 010523   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 010524   100002 030002                    BDSC    2,,PR1                   by=0,bit=3,n=2
         4 010525   010643 710000 4                  TRA     NEXT_PRO_OPT

     2197    21429
     2198    21430    4            CASE ( 192 /* L_HSCROLL */ );

     2199    21431    4               TCTL$->VLP$TRMCTRL.HSCROLL# = YES_NO_FLG;

  21431  4 010526   000043 471400 2                  LDP1    TCTL$
         4 010527   003100 060400                    CSL     bolr='003'O
         4 010530   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 010531   100002 010002                    BDSC    2,,PR1                   by=0,bit=1,n=2
         4 010532   010643 710000 4                  TRA     NEXT_PRO_OPT

     2200    21432
     2201    21433    4            CASE ( 193 /* L_WORDWRAPCLM */ );

     2202    21434    4               IF (OP_CODE = 7 /* DC */) THEN

  21434  4 010533   200031 236100                    LDQ     OP_CODE,,AUTO
         4 010534   000007 116007                    CMPQ    7,DL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:372  
         4 010535   010543 601000 4                  TNZ     s:21438

     2203    21435    4                  TCTL$ -> VLP$TRMCTRL.WORDWRAPCLM# = 255;

  21435  4 010536   000043 471400 2                  LDP1    TCTL$
         4 010537   003100 061400                    CSR     bolr='003'O
         4 010540   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 010541   100002 400011                    BDSC    2,,PR1                   by=2,bit=0,n=9
         4 010542   010643 710000 4                  TRA     NEXT_PRO_OPT

     2204    21436    4               ELSE
     2205    21437    5               DO;

     2206    21438    5                  CALL GET_DEC_VAL (255) ALTRET (NEXT_PRO_OPT);

  21438  4 010543   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 010544   200156 756100                    STQ     J+1,,AUTO
         4 010545   000031 236000 5                  LDQ     25
         4 010546   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010547   010661 701000 4                  TSX1    GET_DEC_VAL
         4 010550   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2207    21439    5                  TCTL$->VLP$TRMCTRL.WORDWRAPCLM# = VAL;

  21439  4 010551   000043 470400 2                  LDP0    TCTL$
         4 010552   003100 061500                    CSR     bolr='003'O
         4 010553   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 010554   000002 400011                    BDSC    2,,PR0                   by=2,bit=0,n=9

     2208    21440    5                  END; /*  Else  */

  21440  4 010555   010643 710000 4                  TRA     NEXT_PRO_OPT

     2209    21441
     2210    21442    4            CASE ( 194 /* L_AUTOTABCLM */ );

     2211    21443    4               IF (OP_CODE = 7 /* DC */) THEN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:373  

  21443  4 010556   200031 236100                    LDQ     OP_CODE,,AUTO
         4 010557   000007 116007                    CMPQ    7,DL
         4 010560   010566 601000 4                  TNZ     s:21447

     2212    21444    4                  TCTL$ -> VLP$TRMCTRL.AUTOTABCLM# = 255;

  21444  4 010561   000043 471400 2                  LDP1    TCTL$
         4 010562   003100 061400                    CSR     bolr='003'O
         4 010563   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 010564   100002 600011                    BDSC    2,,PR1                   by=3,bit=0,n=9
         4 010565   010643 710000 4                  TRA     NEXT_PRO_OPT

     2213    21445    4               ELSE
     2214    21446    5               DO;

     2215    21447    5                  CALL GET_DEC_VAL (255) ALTRET (NEXT_PRO_OPT);

  21447  4 010566   000001 236000 xsym               LDQ     B_VECTNIL+1
         4 010567   200156 756100                    STQ     J+1,,AUTO
         4 010570   000031 236000 5                  LDQ     25
         4 010571   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010572   010661 701000 4                  TSX1    GET_DEC_VAL
         4 010573   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2216    21448    5                  TCTL$->VLP$TRMCTRL.AUTOTABCLM# = VAL;

  21448  4 010574   000043 470400 2                  LDP0    TCTL$
         4 010575   003100 061500                    CSR     bolr='003'O
         4 010576   200020 000044                    BDSC    VAL,,AUTO                by=0,bit=0,n=36
         4 010577   000002 600011                    BDSC    2,,PR0                   by=3,bit=0,n=9

     2217    21449    5                  END; /*  Else  */

  21449  4 010600   010643 710000 4                  TRA     NEXT_PRO_OPT

     2218    21450
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:374  
     2219    21451    4            CASE ( 279 /* L_FUNCTION_KEY */ );

     2220    21452    4               CALL DO_FUNKEY_DEFS ALTRET (NEXT_PRO_OPT);

  21452  4 010601   013132 701000 4                  TSX1    DO_FUNKEY_DEFS
         4 010602   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2221    21453    4               GOTO PRO_OPTS_LOOP;

  21453  4 010603   002032 710000 4                  TRA     PRO_OPTS_LOOP

     2222    21454
     2223    21455    4            CASE ( 195 /* L_SETUP_CHR */ );

     2224    21456    4               CALL DO_SETUP_CHR ALTRET (NEXT_PRO_OPT);

  21456  4 010604   015331 701000 4                  TSX1    DO_SETUP_CHR
         4 010605   010643 702000 4                  TSX2    NEXT_PRO_OPT
         4 010606   010643 710000 4                  TRA     NEXT_PRO_OPT

     2225    21457
     2226    21458    4            CASE ( 196 /* DCHMOVFLD */ );

     2227    21459    4               TATR$->VLP$TRMATTR.DCHMOVFLD# = YES_NO_FLG;

  21459  4 010607   000044 471400 2                  LDP1    TATR$
         4 010610   003100 060400                    CSL     bolr='003'O
         4 010611   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 010612   100001 470002                    BDSC    1,,PR1                   by=2,bit=7,n=2
         4 010613   010643 710000 4                  TRA     NEXT_PRO_OPT

     2228    21460
     2229    21461    4            CASE ( 197 /* DSPHEIGHT */ );

     2230    21462    4               IF (OP_CODE = 7 /* DC */) THEN

  21462  4 010614   200031 236100                    LDQ     OP_CODE,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:375  
         4 010615   000007 116007                    CMPQ    7,DL
         4 010616   010624 601000 4                  TNZ     s:21466

     2231    21463    4                  TATR$ -> VLP$TRMATTR.DSPHEIGHT# = 255;

  21463  4 010617   000044 471400 2                  LDP1    TATR$
         4 010620   000100 101400                    MRL     fill='000'O
         4 010621   000030 000004 5                  ADSC9   24                       cn=0,n=4
         4 010622   100007 200001                    ADSC9   7,,PR1                   cn=1,n=1
         4 010623   010643 710000 4                  TRA     NEXT_PRO_OPT

     2232    21464    4               ELSE
     2233    21465    5               DO;

     2234    21466    5                  CALL GET_DEC_VAL (255, 0) ALTRET (NEXT_PRO_OPT);

  21466  4 010624   000134 236000 5                  LDQ     92
         4 010625   200156 756100                    STQ     J+1,,AUTO
         4 010626   000031 236000 5                  LDQ     25
         4 010627   200155 756100                    STQ     PRO_TYPE+2,,AUTO
         4 010630   010661 701000 4                  TSX1    GET_DEC_VAL
         4 010631   010643 702000 4                  TSX2    NEXT_PRO_OPT

     2235    21467    5                  TATR$->VLP$TRMATTR.DSPHEIGHT# = VAL;

  21467  4 010632   000044 470400 2                  LDP0    TATR$
         4 010633   000100 101500                    MRL     fill='000'O
         4 010634   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 010635   000007 200001                    ADSC9   7,,PR0                   cn=1,n=1

     2236    21468    5                  END; /*  Else  */

  21468  4 010636   010643 710000 4                  TRA     NEXT_PRO_OPT

     2237    21469
     2238    21470    4            CASE ( 179 /* FF_FLUSH */ );

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:376  
     2239    21471    4               TATR$->VLP$TRMATTR.FF_FLUSH# = YES_NO_FLG;

  21471  4 010637   000044 471400 2                  LDP1    TATR$
         4 010640   003100 060400                    CSL     bolr='003'O
         4 010641   000001 000002 2                  BDSC    YES_NO_FLG               by=0,bit=0,n=2
         4 010642   100002 610002                    BDSC    2,,PR1                   by=3,bit=1,n=2

     2240    21472
     2241    21473
     2242    21474    4            END ; /*  Do case(code )  */

  21466  4 010643                       NEXT_PRO_OPT null
     2243    21475    3   NEXT_PRO_OPT: ;
     2244    21476    3         END ;   /*  Do i = 0  */

  21476  4 010643   200014 235100                    LDA     J,,AUTO
         4 010644   000001 035007                    ADLA    1,DL
         4 010645   200014 755100                    STA     J,,AUTO
         4 010646   200014 236100                    LDQ     J,,AUTO
         4 010647   200013 116100                    CMPQ    I,,AUTO
         4 010650   002070 602000 4                  TNC     s:19738

     2245    21477
     2246    21478
     2247    21479    3      DO WHILE( '0'B );

  21479  4 010651   010656 710000 4                  TRA     s:21482

     2248    21480    3   OPTS_ERR: CALL ASH$ERROR( P_PCB.ERROR );

  21480  4 010652   000023 630400 5     OPTS_ERR     EPPR0   19
         4 010653   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 010654   000000 701000 xent               TSX1    ASH$ERROR
         4 010655   000000 011000                    NOP     0

     2249    21481    3         END;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:377  
     2250    21482    2      END ;       /*  Do while( more )  */

  21482  4 010656   000000 234000 2                  SZN     MORE
         4 010657   002034 604000 4                  TMI     s:19728

     2251    21483
     2252    21484    1   RETURN;

  21484  4 010660   000000 702200 xent               TSX2  ! X66_ARET

     2253    21485        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:378  
     2254    21486    1   GET_DEC_VAL: PROC( MAX_VAL, MIN_VAL ) ALTRET;

  21486  4 010661   200154 741300       GET_DEC_VAL  STX1  ! PRO_TYPE+1,,AUTO

     2255    21487
     2256    21488    2   DCL MAX_VAL UBIN WORD ;
     2257    21489    2   DCL MIN_VAL UBIN WORD ;
     2258    21490
     2259    21491
     2260    21492
     2261    21493    2   CALL CHARBIN( VAL, OUT$SYM.TEXT );

  21493  4 010662   200004 470500                    LDP0    BLK$,,AUTO
         4 010663   000004 236100                    LDQ     4,,PR0
         4 010664   000033 772000                    QRL     27
         4 010665   000000 620006                    EAX0    0,QL
         4 010666   000100 305540                    DTB
         4 010667   000004 230010                    NDSC9   4,,PR0                   cn=1,s=nosgn,sf=0,n=*X0
         4 010670   200220 000010                    NDSC9   PINC_INC+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         4 010671   200221 235100                    LDA     PINC_INC+2,,AUTO
         4 010672   200020 755100                    STA     VAL,,AUTO

     2262    21494    3   IF VAL > MAX_VAL THEN DO;

  21494  4 010673   200155 471500                    LDP1    @MAX_VAL,,AUTO
         4 010674   100000 236100                    LDQ     0,,PR1
         4 010675   200020 116100                    CMPQ    VAL,,AUTO
         4 010676   010721 603000 4                  TRC     s:21547

     2263    21495        /*E*  ERROR:  ASD-E$DEC_VALUE_TOO_BIG-C
     2264    21496              MESSAGE: %U1 value too large.
     2265    21497              MESSAGE1: %U1 can be at most %U2.
     2266    21498        */
     2267    21499    3      AS_FIELD1 = OPTION;

  21499  4 010677   000000 100500                    MLR     fill='000'O
         4 010700   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:379  
         4 010701   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     2268    21500           %NUMBER( NUM2=MAX_VAL );
             21516    3         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MAX_VAL );

  21516  4 010702   200155 236100                    LDQ     @MAX_VAL,,AUTO
         4 010703   000152 235000 5                  LDA     106
         4 010704   200222 757100                    STAQ    PINC_INC+3,,AUTO
         4 010705   000154 237000 5                  LDAQ    108
         4 010706   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 010707   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 010710   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 010711   000000 701000 xent               TSX1    ASB$BINCHAR
         4 010712   000000 011000                    NOP     0

     2269    21530           %SCREAM( ERR#=E$DEC_VALUE_TOO_BIG, LEVEL=ERROR, MID='D' );

  21542  4 010713   000156 630400 5                  EPPR0   110
         4 010714   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 010715   000000 701000 xent               TSX1    ASH$ERROR
         4 010716   000000 011000                    NOP     0

     2270    21545    3      ALTRETURN;

  21545  4 010717   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 010720   000000 702211                    TSX2  ! 0,X1

     2271    21546    3      END;
     2272    21547    2   IF ( ADDR(MIN_VAL) ~= ADDR(NIL) )

  21547  4 010721   200156 236100                    LDQ     @MIN_VAL,,AUTO
         4 010722   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 010723   010752 600000 4                  TZE     s:21607

     2273    21548    3   THEN DO;

     2274    21549    3      IF VAL < MIN_VAL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:380  

  21549  4 010724   200156 473500                    LDP3    @MIN_VAL,,AUTO
         4 010725   200020 236100                    LDQ     VAL,,AUTO
         4 010726   300000 116100                    CMPQ    0,,PR3
         4 010727   010752 603000 4                  TRC     s:21607

     2275    21550    4      THEN DO;

     2276    21551        /*    ERROR:   ASD-E$GR_VAL_TOO_SMALL-C
     2277    21552              MESSAGE: %U1 value too small.
     2278    21553              MESSAGE1: %U1 can be at least %U2.
     2279    21554                       This error message is a *E* in GRA_OPT_PROC, it is
     2280    21555                       included here only for reference.
     2281    21556        */
     2282    21557    4         AS_FIELD1 = OPTION ;

  21557  4 010730   000000 100500                    MLR     fill='000'O
         4 010731   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 010732   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     2283    21558              %NUMBER( NUM2 = MIN_VAL ) ;
             21574    4         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MIN_VAL );

  21574  4 010733   200156 236100                    LDQ     @MIN_VAL,,AUTO
         4 010734   000152 235000 5                  LDA     106
         4 010735   200222 757100                    STAQ    PINC_INC+3,,AUTO
         4 010736   000154 237000 5                  LDAQ    108
         4 010737   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 010740   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 010741   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 010742   000000 701000 xent               TSX1    ASB$BINCHAR
         4 010743   000000 011000                    NOP     0

     2284    21588              %SCREAM( ERR#=E$GR_VAL_TOO_SMALL, LEVEL=ERROR, MID='D') ;

  21600  4 010744   000157 630400 5                  EPPR0   111
         4 010745   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:381  
         4 010746   000000 701000 xent               TSX1    ASH$ERROR
         4 010747   000000 011000                    NOP     0

     2285    21603    4         ALTRETURN ;

  21603  4 010750   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 010751   000000 702211                    TSX2  ! 0,X1

     2286    21604    4         END ;
     2287    21605    3      END;
     2288    21606
     2289    21607    2   SPLIT = '0'B;

  21607  4 010752   000000 220003                    LDX0    0,DU
         4 010753   200036 740100                    STX0    SPLIT,,AUTO

     2290    21608    2   SPLIT.T = SPLIT_VAL.T;

  21608  4 010754   200020 236100                    LDQ     VAL,,AUTO
         4 010755   000023 736000                    QLS     19
         4 010756   200036 676100                    ERQ     SPLIT,,AUTO
         4 010757   377000 376003                    ANQ     130560,DU
         4 010760   200036 656100                    ERSQ    SPLIT,,AUTO

     2291    21609    2   SPLIT.B = SPLIT_VAL.B;

  21609  4 010761   200020 236100                    LDQ     VAL,,AUTO
         4 010762   000022 736000                    QLS     18
         4 010763   200036 676100                    ERQ     SPLIT,,AUTO
         4 010764   000377 376003                    ANQ     255,DU
         4 010765   200036 656100                    ERSQ    SPLIT,,AUTO

     2292    21610
     2293    21611
     2294    21612    2   END GET_DEC_VAL ;

  21612  4 010766   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:382  

     2295    21613        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:383  
     2296    21614    1   GET_HEX_VAL: PROC( NUM_HEX ) ALTRET;

  21614  4 010767   200162 741300       GET_HEX_VAL  STX1  ! I+1,,AUTO

     2297    21615
     2298    21616    2   DCL NUM_HEX UBIN WORD ;
     2299    21617    2   DCL NUM_FOUND  UBIN WORD;
     2300    21618    2   DCL PLUS BIT(1);
     2301    21619    2   DCL START   UBIN;
     2302    21620    2   DCL FINISH  UBIN;
     2303    21621
     2304    21622    2   VAL=0; HEX_V=0; SPLIT='0'B; HEX='0'B;

  21622  4 010770   200020 450100                    STZ     VAL,,AUTO

  21622  4 010771   200137 450100                    STZ     HEX_V,,AUTO

  21622  4 010772   000000 220003                    LDX0    0,DU
         4 010773   200036 740100                    STX0    SPLIT,,AUTO

  21622  4 010774   000100 100400                    MLR     fill='000'O
         4 010775   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         4 010776   200037 000400                    ADSC9   HEX,,AUTO                cn=0,n=256

     2305    21623    2   NUM_FOUND = 0;

  21623  4 010777   200164 450100                    STZ     NUM_FOUND,,AUTO

     2306    21624    2   IF PTR$->P$NODE.SUBNODES > 1 THEN

  21624  4 011000   200030 470500                    LDP0    PTR$,,AUTO
         4 011001   000001 222100                    LDX2    1,,PR0
         4 011002   000002 102003                    CMPX2   2,DU
         4 011003   011024 602000 4                  TNC     s:21630

     2307    21625    2      IF PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 7   /*  NONE_VAL  */ THEN RETURN;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:384  
  21625  4 011004   000003 471500                    LDP1    3,,PR0
         4 011005   100000 723100                    LXL3    0,,PR1
         4 011006   000007 103003                    CMPX3   7,DU
         4 011007   011011 601000 4                  TNZ     s:21627

  21625  4 011010   000001 702211                    TSX2  ! 1,X1

     2308    21626    3      ELSE DO;

     2309    21627    3         IF PTR$->P$NODE.SUBLK$(1)->P$NODE.CODE = 7   /*  NONE_VAL  */ THEN RETURN;

  21627  4 011011   000004 473500                    LDP3    4,,PR0
         4 011012   300000 724100                    LXL4    0,,PR3
         4 011013   000007 104003                    CMPX4   7,DU
         4 011014   011016 601000 4                  TNZ     s:21628

  21627  4 011015   000001 702211                    TSX2  ! 1,X1

     2310    21628    3         PLUS = (PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 0 /* PLUS_VAL */);

  21628  4 011016   400000 225003                    LDX5    -131072,DU
         4 011017   000000 103003                    CMPX3   0,DU
         4 011020   011022 600000 4                  TZE     s:21628+4
         4 011021   000000 225003                    LDX5    0,DU
         4 011022   000000 636015                    EAQ     0,X5
         4 011023   200165 756100                    STQ     PLUS,,AUTO

     2311    21629    3         END; /*  Else  */

     2312    21630    2   SUBS = PTR$ -> P$NODE.SUBNODES ;

  21630  4 011024   000001 236100                    LDQ     1,,PR0
         4 011025   000022 772000                    QRL     18
         4 011026   200033 756100                    STQ     SUBS,,AUTO

     2313    21631    2   IF PLUS THEN SUBS = SUBS - 1;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:385  
  21631  4 011027   200165 234100                    SZN     PLUS,,AUTO
         4 011030   011033 605000 4                  TPL     s:21632

  21631  4 011031   000001 136007                    SBLQ    1,DL
         4 011032   200033 756100                    STQ     SUBS,,AUTO

     2314    21632    3   IF SUBS > NUM_HEX THEN DO;

  21632  4 011033   200163 471500                    LDP1    @NUM_HEX,,AUTO
         4 011034   100000 116100                    CMPQ    0,,PR1
         4 011035   011061 602000 4                  TNC     s:21685
         4 011036   011061 600000 4                  TZE     s:21685

     2315    21633        /*E*  ERROR:  ASD-E$TOO_MANY_HEX-C
     2316    21634              MESSAGE: Too many hex. values for %U1.
     2317    21635              MESSAGE1: %U1 can have at most %U2 hexadecimal values.
     2318    21636        */
     2319    21637    3      AS_FIELD1 = OPTION;

  21637  4 011037   000000 100500                    MLR     fill='000'O
         4 011040   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 011041   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     2320    21638           %NUMBER( NUM1=NUM_HEX );
             21646    3         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, NUM_HEX );

  21646  4 011042   200163 236100                    LDQ     @NUM_HEX,,AUTO
         4 011043   000160 235000 5                  LDA     112
         4 011044   200222 757100                    STAQ    PINC_INC+3,,AUTO
         4 011045   000162 237000 5                  LDAQ    114
         4 011046   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 011047   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 011050   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 011051   000000 701000 xent               TSX1    ASB$BINCHAR
         4 011052   000000 011000                    NOP     0

     2321    21668           %SCREAM( ERR#=E$TOO_MANY_HEX, LEVEL=ERROR, MID='D' );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:386  

  21680  4 011053   000164 630400 5                  EPPR0   116
         4 011054   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 011055   000000 701000 xent               TSX1    ASH$ERROR
         4 011056   000000 011000                    NOP     0

     2322    21683    3      ALTRETURN;

  21683  4 011057   200162 221300                    LDX1  ! I+1,,AUTO
         4 011060   000000 702211                    TSX2  ! 0,X1

     2323    21684    3      END;
     2324    21685    3   IF NUM_HEX = 1 THEN DO;

  21685  4 011061   100000 235100                    LDA     0,,PR1
         4 011062   000001 115007                    CMPA    1,DL
         4 011063   011114 601000 4                  TNZ     s:21693

     2325    21686    3      BLK$ = PTR$ -> P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0);

  21686  4 011064   000003 473500                    LDP3    3,,PR0
         4 011065   300003 236100                    LDQ     3,,PR3
         4 011066   200004 756100                    STQ     BLK$,,AUTO

     2326    21687    3      CALL ASD$HEX2OCT( OUT$SYM, VAL ) ALTRET( HEX_ERR );

  21687  4 011067   200020 633500                    EPPR3   VAL,,AUTO
         4 011070   200221 453500                    STP3    PINC_INC+2,,AUTO
         4 011071   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 011072   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 011073   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 011074   000000 701000 xent               TSX1    ASD$HEX2OCT
         4 011075   011232 702000 4                  TSX2    HEX_ERR

     2327    21688    3      HEX_V = VAL;

  21688  4 011076   200020 235100                    LDA     VAL,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:387  
         4 011077   000033 735000                    ALS     27
         4 011100   200137 755100                    STA     HEX_V,,AUTO

     2328    21689    3      SPLIT.T = SPLIT_VAL.T;

  21689  4 011101   200020 236100                    LDQ     VAL,,AUTO
         4 011102   000023 736000                    QLS     19
         4 011103   200036 676100                    ERQ     SPLIT,,AUTO
         4 011104   377000 376003                    ANQ     130560,DU
         4 011105   200036 656100                    ERSQ    SPLIT,,AUTO

     2329    21690    3      SPLIT.B = SPLIT_VAL.B;

  21690  4 011106   200020 236100                    LDQ     VAL,,AUTO
         4 011107   000022 736000                    QLS     18
         4 011110   200036 676100                    ERQ     SPLIT,,AUTO
         4 011111   000377 376003                    ANQ     255,DU
         4 011112   200036 656100                    ERSQ    SPLIT,,AUTO

     2330    21691    3      END;

  21691  4 011113   011230 710000 4                  TRA     s:21724

     2331    21692    3   ELSE DO;

     2332    21693    4      IF PLUS THEN DO;

  21693  4 011114   200165 234100                    SZN     PLUS,,AUTO
         4 011115   011123 605000 4                  TPL     s:21698

     2333    21694    4         START = 2;

  21694  4 011116   000002 235007                    LDA     2,DL
         4 011117   200166 755100                    STA     START,,AUTO

     2334    21695    4         FINISH = SUBS+1;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:388  
  21695  4 011120   000001 036007                    ADLQ    1,DL
         4 011121   200167 756100                    STQ     FINISH,,AUTO

     2335    21696    4         END;   /*  Plus  */

  21696  4 011122   011126 710000 4                  TRA     s:21701

     2336    21697    4      ELSE DO;

     2337    21698    4         START = 1;

  21698  4 011123   000001 235007                    LDA     1,DL
         4 011124   200166 755100                    STA     START,,AUTO

     2338    21699    4         FINISH = SUBS;

  21699  4 011125   200167 756100                    STQ     FINISH,,AUTO

     2339    21700    4         END;   /*  Not plus  */

     2340    21701    3      NUM_FOUND = 0;

  21701  4 011126   200164 450100                    STZ     NUM_FOUND,,AUTO

     2341    21702    4      DO K = START TO FINISH;

  21702  4 011127   200015 755100                    STA     K,,AUTO
         4 011130   011222 710000 4                  TRA     s:21721+3

     2342    21703    4         IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %22 /* HEX */ THEN

  21703  4 011131   200030 470500                    LDP0    PTR$,,AUTO
         4 011132   200015 720100                    LXL0    K,,AUTO
         4 011133   000002 471510                    LDP1    2,X0,PR0
         4 011134   100000 721100                    LXL1    0,,PR1
         4 011135   000026 101003                    CMPX1   22,DU
         4 011136   011157 601000 4                  TNZ     s:21710
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:389  

     2343    21704    5         DO;

     2344    21705    5            BLK$ = PTR$ -> P$NODE.SUBLK$(K-1) -> P$NODE.SUBLK$(0) ;

  21705  4 011137   100003 236100                    LDQ     3,,PR1
         4 011140   200004 756100                    STQ     BLK$,,AUTO

     2345    21706    5            CALL ASD$HEX2OCT( OUT$SYM, VAL ) ALTRET( HEX_ERR );

  21706  4 011141   200020 631500                    EPPR1   VAL,,AUTO
         4 011142   200221 451500                    STP1    PINC_INC+2,,AUTO
         4 011143   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 011144   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 011145   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 011146   000000 701000 xent               TSX1    ASD$HEX2OCT
         4 011147   011232 702000 4                  TSX2    HEX_ERR

     2346    21707    5            NUM_FOUND = NUM_FOUND + 1;

  21707  4 011150   200164 235100                    LDA     NUM_FOUND,,AUTO
         4 011151   000001 035007                    ADLA    1,DL
         4 011152   200164 755100                    STA     NUM_FOUND,,AUTO

     2347    21708    5            HEX(NUM_FOUND) = VAL;

  21708  4 011153   000105 101500                    MRL     fill='000'O
         4 011154   200020 000004                    ADSC9   VAL,,AUTO                cn=0,n=4
         4 011155   200037 000001                    ADSC9   HEX,A,AUTO               cn=0,n=1

     2348    21709    5            END;

  21709  4 011156   011217 710000 4                  TRA     s:21721

     2349    21710    4         ELSE IF PTR$->P$NODE.SUBLK$(K-1)->P$NODE.CODE = %24 /* STRING */ THEN

  21710  4 011157   000030 101003                    CMPX1   24,DU
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:390  
         4 011160   011217 601000 4                  TNZ     s:21721

     2350    21711    5            DO;

     2351    21712    5               BLK$ = PTR$ -> P$NODE.SUBLK$(K-1);

  21712  4 011161   000002 236110                    LDQ     2,X0,PR0
         4 011162   200004 756100                    STQ     BLK$,,AUTO

     2352    21713    6               DO L=0 TO OUT$SYM.COUNT-1;

  21713  4 011163   200016 450100                    STZ     L,,AUTO
         4 011164   011210 710000 4                  TRA     s:21716+3

     2353    21714    6                  NUM_FOUND = NUM_FOUND + 1;

  21714  4 011165   200164 235100                    LDA     NUM_FOUND,,AUTO
         4 011166   000001 035007                    ADLA    1,DL
         4 011167   200164 755100                    STA     NUM_FOUND,,AUTO

     2354    21715    6                  HEX(NUM_FOUND) = ASCBIN (SUBSTR (OUT$SYM.TEXT,L,1));

  21715  4 011170   200004 470500                    LDP0    BLK$,,AUTO
         4 011171   000004 236100                    LDQ     4,,PR0
         4 011172   000033 772000                    QRL     27
         4 011173   200016 235100                    LDA     L,,AUTO
         4 011174   000100 101505                    MRL     fill='000'O
         4 011175   000004 200001                    ADSC9   4,A,PR0                  cn=1,n=1
         4 011176   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011177   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011200   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 011201   200164 235100                    LDA     NUM_FOUND,,AUTO
         4 011202   000105 101500                    MRL     fill='000'O
         4 011203   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 011204   200037 000001                    ADSC9   HEX,A,AUTO               cn=0,n=1

     2355    21716    6                  END; /*  Do for each character  */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:391  

  21716  4 011205   200016 236100                    LDQ     L,,AUTO
         4 011206   000001 036007                    ADLQ    1,DL
         4 011207   200016 756100                    STQ     L,,AUTO
         4 011210   200004 470500                    LDP0    BLK$,,AUTO
         4 011211   000004 236100                    LDQ     4,,PR0
         4 011212   000033 772000                    QRL     27
         4 011213   200016 116100                    CMPQ    L,,AUTO
         4 011214   011216 600000 4                  TZE     s:21717
         4 011215   011165 603000 4                  TRC     s:21714

     2356    21717    5               END; /*  Else if  */

  21717  4 011216   011217 710000 4                  TRA     s:21721

     2357    21718    5            ELSE DO;

     2358    21719        /*  Error - the parser accepted something that i am not expecting  */
     2359    21720    5               END;

     2360    21721    4         END;  /*  Do k  */

  21721  4 011217   200015 235100                    LDA     K,,AUTO
         4 011220   000001 035007                    ADLA    1,DL
         4 011221   200015 755100                    STA     K,,AUTO
         4 011222   200167 236100                    LDQ     FINISH,,AUTO
         4 011223   200015 116100                    CMPQ    K,,AUTO
         4 011224   011131 603000 4                  TRC     s:21703

     2361    21722    3      HEX(0) = NUM_FOUND;

  21722  4 011225   200164 236100                    LDQ     NUM_FOUND,,AUTO
         4 011226   000033 736000                    QLS     27
         4 011227   200037 552140                    STBQ    HEX,'40'O,AUTO

     2362    21723    3      END;  /*   NUM_HEX ~= 1  */

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:392  
     2363    21724    2   RETURN;

  21724  4 011230   200162 221300                    LDX1  ! I+1,,AUTO
         4 011231   000001 702211                    TSX2  ! 1,X1

     2364    21725
     2365    21726    2   HEX_ERR:
     2366    21727        /*E*  ERROR:  ASD-E$ILLEGALHEX-C
     2367    21728              MESSAGE: Illegal HEX character in "%U1"
     2368    21729              MESSAGE1: Hexidecimal characters are 0-9 and A-F
     2369    21730        */
     2370    21731    2   AS_FIELD1.COUNT = OUT$SYM.COUNT;

  21731  4 011232   200004 470500       HEX_ERR      LDP0    BLK$,,AUTO
         4 011233   000004 236100                    LDQ     4,,PR0
         4 011234   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     2371    21732    2   AS_FIELD1.TEXT  = OUT$SYM.TEXT;

  21732  4 011235   000004 236100                    LDQ     4,,PR0
         4 011236   000033 772000                    QRL     27
         4 011237   000000 620006                    EAX0    0,QL
         4 011240   040000 100540                    MLR     fill='040'O
         4 011241   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 011242   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     2372    21733        %SCREAM( ERR#=E$ILLEGALHEX, MID='D', LEVEL=ERROR );

  21745  4 011243   000165 630400 5                  EPPR0   117
         4 011244   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 011245   000000 701000 xent               TSX1    ASH$ERROR
         4 011246   000000 011000                    NOP     0

     2373    21748    2   ALTRETURN;

  21748  4 011247   200162 221300                    LDX1  ! I+1,,AUTO
         4 011250   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:393  

     2374    21749
     2375    21750    2   END GET_HEX_VAL;
     2376    21751        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:394  
     2377    21752    1   GET_TA: PROC( SPLIT_STRUCT ) ALTRET;

  21752  4 011251   200154 741300       GET_TA       STX1  ! PRO_TYPE+1,,AUTO

     2378    21753
     2379    21754    2   DCL 1 SPLIT_STRUCT UNAL,
     2380    21755    2          2 * BIT(1) UNAL,
     2381    21756    2          2 T UBIN(8) UNAL,
     2382    21757    2          2 * BIT(1) UNAL,
     2383    21758    2          2 B UBIN(8) UNAL;
     2384    21759
     2385    21760
     2386    21761    2   CALL ASD$R2HUSECS( BLK$, VAL ) ALTRET( ALT );

  21761  4 011252   200020 630500                    EPPR0   VAL,,AUTO
         4 011253   200221 450500                    STP0    PINC_INC+2,,AUTO
         4 011254   200004 631500                    EPPR1   BLK$,,AUTO
         4 011255   200220 451500                    STP1    PINC_INC+1,,AUTO
         4 011256   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 011257   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 011260   000000 701000 xent               TSX1    ASD$R2HUSECS
         4 011261   011274 702000 4                  TSX2    ALT

     2387    21762    3   IF VAL > 65534 THEN DO;

  21762  4 011262   200020 235100                    LDA     VAL,,AUTO
         4 011263   177777 115007                    CMPA    65535,DL
         4 011264   011276 602000 4                  TNC     s:21786

     2388    21763        /*E*  ERROR:    ASD-E$TATOOBIG-C
     2389    21764              MESSAGE0: %U1 value too big.
     2390    21765              MESSAGE1: %U1 can be at most 6553.4.
     2391    21766        */
     2392    21767    3      AS_FIELD1 = OPTION;

  21767  4 011265   000000 100500                    MLR     fill='000'O
         4 011266   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:395  
         4 011267   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     2393    21768           %SCREAM( ERR#=E$TATOOBIG, LEVEL=ERROR, MID='D');

  21780  4 011270   000166 630400 5                  EPPR0   118
         4 011271   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 011272   000000 701000 xent               TSX1    ASH$ERROR
         4 011273   000000 011000                    NOP     0

     2394    21783    3   ALT: ALTRETURN;

  21783  4 011274   200154 221300       ALT          LDX1  ! PRO_TYPE+1,,AUTO
         4 011275   000000 702211                    TSX2  ! 0,X1

     2395    21784    3      END ; /* Then do */
     2396    21785
     2397    21786    2   SPLIT_STRUCT = '0'B;

  21786  4 011276   200155 470500                    LDP0    @SPLIT_STRUCT,,AUTO
         4 011277   003100 060400                    CSL     bolr='003'O
         4 011300   000002 000011 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=9
         4 011301   000000 000022                    BDSC    0,,PR0                   by=0,bit=0,n=18

     2398    21787    2   SPLIT_STRUCT.T = SPLIT_VAL.T;

  21787  4 011302   003100 060500                    CSL     bolr='003'O
         4 011303   200020 420010                    BDSC    VAL,,AUTO                by=2,bit=2,n=8
         4 011304   000000 010010                    BDSC    0,,PR0                   by=0,bit=1,n=8

     2399    21788    2   SPLIT_STRUCT.B = SPLIT_VAL.B;

  21788  4 011305   003100 060500                    CSL     bolr='003'O
         4 011306   200020 610010                    BDSC    VAL,,AUTO                by=3,bit=1,n=8
         4 011307   000000 210010                    BDSC    0,,PR0                   by=1,bit=1,n=8

     2400    21789
     2401    21790    2   END GET_TA;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:396  

  21790  4 011310   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 011311   000001 702211                    TSX2  ! 1,X1

     2402    21791        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:397  
     2403    21792    1   INITIALIZE_SGR: PROC;

  21792  4 011312   200154 741300       INITIALIZE_* STX1  ! PRO_TYPE+1,,AUTO

     2404    21793
     2405    21794
     2406    21795    2   HEX(0) = 1 ;

  21795  4 011313   001000 236003                    LDQ     512,DU
         4 011314   200037 552140                    STBQ    HEX,'40'O,AUTO

     2407    21796    2   HEX(1) = BITBIN ('033'O) ;      /* Esc  */

  21796  4 011315   000033 236003                    LDQ     27,DU
         4 011316   200037 552120                    STBQ    HEX,'20'O,AUTO

     2408    21797    2   PTROPT$ = ADDR(TCCHR$->KL$CCHR.SGRINTRO_CHR#) ;

  21797  4 011317   000047 236000 2                  LDQ     TCCHR$
         4 011320   000116 036000 5                  ADLQ    78
         4 011321   200007 756100                    STQ     PTROPT$,,AUTO

     2409    21798    2   CALL PLACE_OPT (PTROPT$) ;

  21798  4 011322   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 011323   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 011324   011522 701000 4                  TSX1    PLACE_OPT
         4 011325   000000 011000                    NOP     0

     2410    21799    2   TCCHR$ -> KL$CCHR.SGRINCDAQ# = AS_FALSE;                /* No  */

  21799  4 011326   000047 470400 2                  LDP0    TCCHR$
         4 011327   003100 060400                    CSL     bolr='003'O
         4 011330   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 011331   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1

     2411    21800    2   HEX(0) = 3 ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:398  

  21800  4 011332   003000 236003                    LDQ     1536,DU
         4 011333   200037 552140                    STBQ    HEX,'40'O,AUTO

     2412    21801    2   HEX(1) = BITBIN('033'O) ;     /*  Esc */

  21801  4 011334   000033 236003                    LDQ     27,DU
         4 011335   200037 552120                    STBQ    HEX,'20'O,AUTO

     2413    21802    2   HEX(2) = ASCBIN ('0') ;

  21802  4 011336   060000 236007                    LDQ     24576,DL
         4 011337   200037 552110                    STBQ    HEX,'10'O,AUTO

     2414    21803    2   HEX(3) = ASCBIN ('O') ;

  21803  4 011340   000117 236007                    LDQ     79,DL
         4 011341   200037 552104                    STBQ    HEX,'04'O,AUTO

     2415    21804    2   PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.RESTORE_DFLTSCRN_CHR#);

  21804  4 011342   000047 236000 2                  LDQ     TCCHR$
         4 011343   000121 036000 5                  ADLQ    81
         4 011344   200007 756100                    STQ     PTROPT$,,AUTO

     2416    21805    2   CALL PLACE_OPT (PTROPT$) ;

  21805  4 011345   200007 631500                    EPPR1   PTROPT$,,AUTO
         4 011346   200157 451500                    STP1    BEGIN$+1,,AUTO
         4 011347   011522 701000 4                  TSX1    PLACE_OPT
         4 011350   000000 011000                    NOP     0

     2417    21806    2   TCCHR$ -> KL$CCHR.SGRINCINT_CHR# = ASCBIN('1');

  21806  4 011351   000047 470400 2                  LDP0    TCCHR$
         4 011352   000100 101400                    MRL     fill='000'O
         4 011353   000167 000004 5                  ADSC9   119                      cn=0,n=4
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:399  
         4 011354   000012 400001                    ADSC9   10,,PR0                  cn=2,n=1

     2418    21807    2   TCCHR$ -> KL$CCHR.SGRDCRINT_CHR# = ASCBIN('2');

  21807  4 011355   000100 101400                    MRL     fill='000'O
         4 011356   000170 000004 5                  ADSC9   120                      cn=0,n=4
         4 011357   000012 600001                    ADSC9   10,,PR0                  cn=3,n=1

     2419    21808    2   TCCHR$ -> KL$CCHR.SGRUNDSCR_CHR# = ASCBIN('4');

  21808  4 011360   000100 101400                    MRL     fill='000'O
         4 011361   000171 000004 5                  ADSC9   121                      cn=0,n=4
         4 011362   000013 000001                    ADSC9   11,,PR0                  cn=0,n=1

     2420    21809    2   TCCHR$ -> KL$CCHR.SGRSLWBLN_CHR# = ASCBIN('5');

  21809  4 011363   000100 101400                    MRL     fill='000'O
         4 011364   000172 000004 5                  ADSC9   122                      cn=0,n=4
         4 011365   000013 200001                    ADSC9   11,,PR0                  cn=1,n=1

     2421    21810    2   TCCHR$ -> KL$CCHR.SGRFSTBLN_CHR# = ASCBIN('6');

  21810  4 011366   000100 101400                    MRL     fill='000'O
         4 011367   000173 000004 5                  ADSC9   123                      cn=0,n=4
         4 011370   000013 400001                    ADSC9   11,,PR0                  cn=2,n=1

     2422    21811    2   TCCHR$ -> KL$CCHR.SGRRVRVID_CHR# = ASCBIN('7');

  21811  4 011371   000100 101400                    MRL     fill='000'O
         4 011372   000174 000004 5                  ADSC9   124                      cn=0,n=4
         4 011373   000013 600001                    ADSC9   11,,PR0                  cn=3,n=1

     2423    21812
     2424    21813    2   END INITIALIZE_SGR;

  21813  4 011374   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 011375   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:400  

     2425    21814        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:401  
     2426    21815    1   INITIALIZE_DAQ: PROC;

  21815  4 011376   200154 741300       INITIALIZE_* STX1  ! PRO_TYPE+1,,AUTO

     2427    21816
     2428    21817    2   HEX(0) = 1 ;

  21817  4 011377   001000 236003                    LDQ     512,DU
         4 011400   200037 552140                    STBQ    HEX,'40'O,AUTO

     2429    21818    2   HEX(1) = BITBIN('033'O) ;    /* Esc */

  21818  4 011401   000033 236003                    LDQ     27,DU
         4 011402   200037 552120                    STBQ    HEX,'20'O,AUTO

     2430    21819    2   PTROPT$ = ADDR(TCCHR$ -> KL$CCHR.DAQINTRO_CHR#);

  21819  4 011403   000047 236000 2                  LDQ     TCCHR$
         4 011404   000117 036000 5                  ADLQ    79
         4 011405   200007 756100                    STQ     PTROPT$,,AUTO

     2431    21820    2   CALL PLACE_OPT (PTROPT$) ;

  21820  4 011406   200007 630500                    EPPR0   PTROPT$,,AUTO
         4 011407   200157 450500                    STP0    BEGIN$+1,,AUTO
         4 011410   011522 701000 4                  TSX1    PLACE_OPT
         4 011411   000000 011000                    NOP     0

     2432    21821    2   TCCHR$ -> KL$CCHR.SGRINCDAQ# = AS_FALSE;                  /* No  */

  21821  4 011412   000047 470400 2                  LDP0    TCCHR$
         4 011413   003100 060400                    CSL     bolr='003'O
         4 011414   000000 000001 xsym               BDSC    AS_FALSE                 by=0,bit=0,n=1
         4 011415   000011 050001                    BDSC    9,,PR0                   by=0,bit=5,n=1

     2433    21822    2   TCCHR$ -> KL$CCHR.DAQPRT_CHR# = ASCBIN('8');

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:402  
  21822  4 011416   000100 101400                    MRL     fill='000'O
         4 011417   000175 000004 5                  ADSC9   125                      cn=0,n=4
         4 011420   000014 600001                    ADSC9   12,,PR0                  cn=3,n=1

     2434    21823    2   TCCHR$ -> KL$CCHR.DAQINP_CHR# = ASCBIN('0');

  21823  4 011421   000100 101400                    MRL     fill='000'O
         4 011422   000176 000004 5                  ADSC9   126                      cn=0,n=4
         4 011423   000015 000001                    ADSC9   13,,PR0                  cn=0,n=1

     2435    21824    2   TCCHR$ -> KL$CCHR.DAQPRTGRD_CHR# = ASCBIN('1');

  21824  4 011424   000100 101400                    MRL     fill='000'O
         4 011425   000167 000004 5                  ADSC9   119                      cn=0,n=4
         4 011426   000015 200001                    ADSC9   13,,PR0                  cn=1,n=1

     2436    21825
     2437    21826    2   END INITIALIZE_DAQ;

  21826  4 011427   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 011430   000001 702211                    TSX2  ! 1,X1

     2438    21827        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:403  
     2439    21828    1   GET_SGR_OPT: PROC( NUM_HEXS ) ALTRET;

  21828  4 011431   200154 741300       GET_SGR_OPT  STX1  ! PRO_TYPE+1,,AUTO

     2440    21829
     2441    21830    2   DCL NUM_HEXS UBIN WORD;
     2442    21831
     2443    21832    3   IF TCCHR$->KL$CCHR.SGR_ALG# = 1 /* ANS */ THEN DO;

  21832  4 011432   000047 470400 2                  LDP0    TCCHR$
         4 011433   000100 101500                    MRL     fill='000'O
         4 011434   000011 400001                    ADSC9   9,,PR0                   cn=2,n=1
         4 011435   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011436   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011437   000001 116007                    CMPQ    1,DL
         4 011440   011455 601000 4                  TNZ     s:21856

     2444    21833    4      IF CODE ~= 134 /* SGRHDN_CHR */ THEN DO;

  21833  4 011441   000000 235000 xsym               LDA     CODE
         4 011442   000206 115007                    CMPA    134,DL
         4 011443   011455 600000 4                  TZE     s:21856

     2445    21834        /*E*  ERROR:  ASD-E$SGR_OPT_NOT_ALLOWED-C
     2446    21835              MESSAGE: %U1 cannot be specified when SGR_ALG = ANS.
     2447    21836        */
     2448    21837    4         AS_FIELD1 = OPTION;

  21837  4 011444   000000 100500                    MLR     fill='000'O
         4 011445   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 011446   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     2449    21838              %SCREAM( ERR#=E$SGR_OPT_NOT_ALLOWED, MID='D',LEVEL=ERROR);

  21850  4 011447   000177 630400 5                  EPPR0   127
         4 011450   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 011451   000000 701000 xent               TSX1    ASH$ERROR
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:404  
         4 011452   000000 011000                    NOP     0

     2450    21853    4         ALTRETURN;

  21853  4 011453   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 011454   000000 702211                    TSX2  ! 0,X1

     2451    21854    4         END;
     2452    21855    3      END;
     2453    21856    2   IF ADDR(NUM_HEXS) ~= ADDR(NIL) THEN

  21856  4 011455   200155 236100                    LDQ     @NUM_HEXS,,AUTO
         4 011456   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 011457   011463 600000 4                  TZE     s:21858

     2454    21857    2      CALL GET_HEX_VAL( NUM_HEXS ) ALTRET( ALT );

  21857  4 011460   200163 756100                    STQ     @NUM_HEX,,AUTO
         4 011461   010767 701000 4                  TSX1    GET_HEX_VAL
         4 011462   011465 702000 4                  TSX2    ALT

     2455    21858    2   RETURN;

  21858  4 011463   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 011464   000001 702211                    TSX2  ! 1,X1

     2456    21859
     2457    21860    2   ALT: ALTRETURN;

  21860  4 011465   200154 221300       ALT          LDX1  ! PRO_TYPE+1,,AUTO
         4 011466   000000 702211                    TSX2  ! 0,X1

     2458    21861
     2459    21862    2   END GET_SGR_OPT;
     2460    21863        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:405  
     2461    21864    1   GET_DAQ_OPT: PROC( NUM_HEXS ) ALTRET;

  21864  4 011467   200154 741300       GET_DAQ_OPT  STX1  ! PRO_TYPE+1,,AUTO

     2462    21865
     2463    21866    2   DCL NUM_HEXS UBIN WORD;
     2464    21867
     2465    21868    3   IF TCCHR$->KL$CCHR.DAQ_ALG# = 1 /* ANS */ THEN DO;

  21868  4 011470   000047 470400 2                  LDP0    TCCHR$
         4 011471   000100 101500                    MRL     fill='000'O
         4 011472   000011 600001                    ADSC9   9,,PR0                   cn=3,n=1
         4 011473   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011474   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011475   000001 116007                    CMPQ    1,DL
         4 011476   011510 601000 4                  TNZ     s:21890

     2466    21869        /*E*  ERROR:  ASD-E$DAQ_OPT_NOT_ALLOWED-C
     2467    21870              MESSAGE: %U1 cannot be specified when DAQ_ALG = ANS.
     2468    21871        */
     2469    21872    3      AS_FIELD1 = OPTION;

  21872  4 011477   000000 100500                    MLR     fill='000'O
         4 011500   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 011501   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     2470    21873           %SCREAM( ERR#=E$DAQ_OPT_NOT_ALLOWED, MID='D',LEVEL=ERROR);

  21885  4 011502   000200 630400 5                  EPPR0   128
         4 011503   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 011504   000000 701000 xent               TSX1    ASH$ERROR
         4 011505   000000 011000                    NOP     0

     2471    21888    3      ALTRETURN;

  21888  4 011506   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 011507   000000 702211                    TSX2  ! 0,X1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:406  

     2472    21889    3      END;
     2473    21890    2   IF ADDR(NUM_HEXS) ~= ADDR(NIL) THEN

  21890  4 011510   200155 236100                    LDQ     @NUM_HEXS,,AUTO
         4 011511   000001 116000 xsym               CMPQ    B_VECTNIL+1
         4 011512   011516 600000 4                  TZE     s:21892

     2474    21891    2      CALL GET_HEX_VAL( NUM_HEXS ) ALTRET( ALT );

  21891  4 011513   200163 756100                    STQ     @NUM_HEX,,AUTO
         4 011514   010767 701000 4                  TSX1    GET_HEX_VAL
         4 011515   011520 702000 4                  TSX2    ALT

     2475    21892    2   RETURN;

  21892  4 011516   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 011517   000001 702211                    TSX2  ! 1,X1

     2476    21893
     2477    21894    2   ALT: ALTRETURN;

  21894  4 011520   200154 221300       ALT          LDX1  ! PRO_TYPE+1,,AUTO
         4 011521   000000 702211                    TSX2  ! 0,X1

     2478    21895
     2479    21896    2   END GET_DAQ_OPT;
     2480    21897
     2481    21898        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:407  
     2482    21899    1   PLACE_OPT: PROC ( PTROPT$ ) ALTRET ;

  21899  4 011522   200156 741300       PLACE_OPT    STX1  ! @MIN_VAL,,AUTO

     2483    21900
     2484    21901    2   DCL PTROPT$ PTR ;
     2485    21902
     2486    21903    2   DCL PTRBGN$ PTR ;
     2487    21904    2   DCL NUM UBIN BYTE UNAL ;
     2488    21905    2   DCL NUM# SBIN WORD UNAL ;
     2489    21906    2   DCL CMP_VAL UBIN WORD UNAL ;
     2490    21907    2   DCL CMPE$ PTR ;
     2491    21908    2   DCL BUFINDX UBIN BYTE UNAL ;
     2492    21909    2   DCL MORE SBIN WORD UNAL ;
     2493    21910    2   DCL I UBIN WORD UNAL ;
     2494    21911    2   DCL J UBIN WORD UNAL ;
     2495    21912    2   DCL K UBIN WORD UNAL ;
     2496    21913    2   DCL BASED_BYTE BASED UBIN BYTE CALIGNED;
     2497    21914    2   DCL SIZE  UBIN;
     2498    21915    2   DCL SAVEIDX  UBIN;
     2499    21916
     2500    21917    2   IF HEX(0) = 0 AND PTROPT$->BASED_BYTE = 0 THEN RETURN;

  21917  4 011523   200037 236100                    LDQ     HEX,,AUTO
         4 011524   777000 316003                    CANQ    -512,DU
         4 011525   011537 601000 4                  TNZ     s:21918
         4 011526   200157 470500                    LDP0    @PTROPT$,,AUTO
         4 011527   000000 471500                    LDP1    0,,PR0
         4 011530   000100 101500                    MRL     fill='000'O
         4 011531   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         4 011532   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011533   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011534   000000 116003                    CMPQ    0,DU
         4 011535   011537 601000 4                  TNZ     s:21918

  21917  4 011536   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:408  
     2501    21918    2   PTRBGN$ = ADDR(TCCHR$->KL$CCHR.CCHR_ARY(0));

  21918  4 011537   000047 236000 2                  LDQ     TCCHR$
         4 011540   000054 036000 5                  ADLQ    44
         4 011541   200160 756100                    STQ     PTRBGN$,,AUTO

     2502    21919    2   NUM = POFFC (PTROPT$,PTRBGN$);

  21919  4 011542   200160 236100                    LDQ     PTRBGN$,,AUTO
         4 011543   000020 772000                    QRL     16
         4 011544   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 011545   200157 470500                    LDP0    @PTROPT$,,AUTO
         4 011546   000000 236100                    LDQ     0,,PR0
         4 011547   000020 772000                    QRL     16
         4 011550   200220 136100                    SBLQ    PINC_INC+1,,AUTO
         4 011551   000033 736000                    QLS     27
         4 011552   200161 756100                    STQ     NUM,,AUTO

     2503    21920    2   CMPE$ = ADDR( TCCHR$ -> KL$CCHR.TXT_CHR) ;

  21920  4 011553   000047 236000 2                  LDQ     TCCHR$
         4 011554   000130 036000 5                  ADLQ    88
         4 011555   200164 756100                    STQ     CMPE$,,AUTO

     2504    21921    2   CMP_VAL = POFFC( CMPE$, PTRBGN$ ) + 1 ;

  21921  4 011556   200160 236100                    LDQ     PTRBGN$,,AUTO
         4 011557   000020 772000                    QRL     16
         4 011560   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 011561   200164 236100                    LDQ     CMPE$,,AUTO
         4 011562   000020 772000                    QRL     16
         4 011563   200220 136100                    SBLQ    PINC_INC+1,,AUTO
         4 011564   000001 036007                    ADLQ    1,DL
         4 011565   200163 756100                    STQ     CMP_VAL,,AUTO

     2505    21922    2   IF TCCHR$ -> KL$CCHR.CCHR_ARY(NUM) = 0 THEN

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:409  
  21922  4 011566   200161 236100                    LDQ     NUM,,AUTO
         4 011567   000033 772000                    QRL     27
         4 011570   000047 471400 2                  LDP1    TCCHR$
         4 011571   000100 101506                    MRL     fill='000'O
         4 011572   100015 400001                    ADSC9   13,Q,PR1                 cn=2,n=1
         4 011573   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011574   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011575   000000 116003                    CMPQ    0,DU
         4 011576   011706 601000 4                  TNZ     s:21950

     2506    21923    3   DO;                       /*  Find next index */

     2507    21924    3      NUM# = NUM;

  21924  4 011577   200161 236100                    LDQ     NUM,,AUTO
         4 011600   000033 772000                    QRL     27
         4 011601   200162 756100                    STQ     NUM#,,AUTO

     2508    21925    4      DO WHILE TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = 0 AND

  21925  4 011602   011604 710000 4                  TRA     s:21928

     2509    21926    4           NUM# < CMP_VAL ;
     2510    21927    4         NUM# = NUM# + 1 ;

  21927  4 011603   200162 054100                    AOS     NUM#,,AUTO

     2511    21928    4         END;

  21928  4 011604   000047 470400 2                  LDP0    TCCHR$
         4 011605   200162 235100                    LDA     NUM#,,AUTO
         4 011606   000100 101505                    MRL     fill='000'O
         4 011607   000015 400001                    ADSC9   13,A,PR0                 cn=2,n=1
         4 011610   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011611   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011612   000000 116003                    CMPQ    0,DU
         4 011613   011620 601000 4                  TNZ     s:21929
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:410  
         4 011614   200162 236100                    LDQ     NUM#,,AUTO
         4 011615   011603 604000 4                  TMI     s:21927
         4 011616   200163 116100                    CMPQ    CMP_VAL,,AUTO
         4 011617   011603 602000 4                  TNC     s:21927

     2512    21929    3      IF NUM# < CMP_VAL THEN

  21929  4 011620   200162 236100                    LDQ     NUM#,,AUTO
         4 011621   011624 604000 4                  TMI     s:21930
         4 011622   200163 116100                    CMPQ    CMP_VAL,,AUTO
         4 011623   011630 603000 4                  TRC     s:21932

     2513    21930    3         BUFINDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM#) ;

  21930  4 011624   000100 100506                    MLR     fill='000'O
         4 011625   000015 400001                    ADSC9   13,Q,PR0                 cn=2,n=1
         4 011626   200165 000001                    ADSC9   BUFINDX,,AUTO            cn=0,n=1
         4 011627   011671 710000 4                  TRA     s:21945

     2514    21931    4      ELSE DO ;             /* Find index before this new one */

     2515    21932    4         NUM# = NUM ;

  21932  4 011630   200161 236100                    LDQ     NUM,,AUTO
         4 011631   000033 772000                    QRL     27
         4 011632   200162 756100                    STQ     NUM#,,AUTO

     2516    21933    5         DO WHILE TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = 0  AND

  21933  4 011633   011636 710000 4                  TRA     s:21936

     2517    21934    5              NUM# >= 0 ;
     2518    21935    5            NUM# = NUM# - 1 ;

  21935  4 011634   000001 336007                    LCQ     1,DL
         4 011635   200162 056100                    ASQ     NUM#,,AUTO

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:411  
     2519    21936    5            END ;

  21936  4 011636   000047 470400 2                  LDP0    TCCHR$
         4 011637   200162 235100                    LDA     NUM#,,AUTO
         4 011640   000100 101505                    MRL     fill='000'O
         4 011641   000015 400001                    ADSC9   13,A,PR0                 cn=2,n=1
         4 011642   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011643   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011644   000000 116003                    CMPQ    0,DU
         4 011645   011650 601000 4                  TNZ     s:21937
         4 011646   000000 115003                    CMPA    0,DU
         4 011647   011634 605000 4                  TPL     s:21935

     2520    21937    4         IF NUM# < 0

  21937  4 011650   000000 115003                    CMPA    0,DU
         4 011651   011655 605000 4                  TPL     s:21941

     2521    21938    4         THEN               /* First control character */
     2522    21939    4            BUFINDX = 1 ;

  21939  4 011652   001000 236003                    LDQ     512,DU
         4 011653   200165 756100                    STQ     BUFINDX,,AUTO
         4 011654   011671 710000 4                  TRA     s:21945

     2523    21940    5         ELSE DO ;

     2524    21941    5            BUFINDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM#) ;

  21941  4 011655   000100 100505                    MLR     fill='000'O
         4 011656   000015 400001                    ADSC9   13,A,PR0                 cn=2,n=1
         4 011657   200165 000001                    ADSC9   BUFINDX,,AUTO            cn=0,n=1

     2525    21942    5            BUFINDX = BUFINDX + TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) + 1;

  21942  4 011660   200165 236100                    LDQ     BUFINDX,,AUTO
         4 011661   000033 772000                    QRL     27
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:412  
         4 011662   000100 101506                    MRL     fill='000'O
         4 011663   000024 400001                    ADSC9   20,Q,PR0                 cn=2,n=1
         4 011664   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011665   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 011666   000001 036007                    ADLQ    1,DL
         4 011667   000033 736000                    QLS     27
         4 011670   200165 756100                    STQ     BUFINDX,,AUTO

     2526    21943    5            END ;

     2527    21944    4         END;

     2528    21945    3      SAVEIDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM);

  21945  4 011671   200161 236100                    LDQ     NUM,,AUTO
         4 011672   000033 772000                    QRL     27
         4 011673   000100 101506                    MRL     fill='000'O
         4 011674   000015 400001                    ADSC9   13,Q,PR0                 cn=2,n=1
         4 011675   200173 000004                    ADSC9   SAVEIDX,,AUTO            cn=0,n=4

     2529    21946    3      TCCHR$->KL$CCHR.CCHR_ARY(NUM) = BUFINDX ;

  21946  4 011676   000106 100500                    MLR     fill='000'O
         4 011677   200165 000001                    ADSC9   BUFINDX,,AUTO            cn=0,n=1
         4 011700   000015 400001                    ADSC9   13,Q,PR0                 cn=2,n=1

     2530    21947    3      MORE = HEX(0) + 1 ;

  21947  4 011701   200037 236100                    LDQ     HEX,,AUTO
         4 011702   000033 772000                    QRL     27
         4 011703   000001 036007                    ADLQ    1,DL
         4 011704   200166 756100                    STQ     MORE,,AUTO

     2531    21948    3      END ;        /*  End of num = 0 */

  21948  4 011705   011771 710000 4                  TRA     s:21964

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:413  
     2532    21949    3   ELSE DO ;

     2533    21950    3      BUFINDX = TCCHR$->KL$CCHR.CCHR_ARY(NUM) ;

  21950  4 011706   200161 236100                    LDQ     NUM,,AUTO
         4 011707   000033 772000                    QRL     27
         4 011710   000100 100506                    MLR     fill='000'O
         4 011711   100015 400001                    ADSC9   13,Q,PR1                 cn=2,n=1
         4 011712   200165 000001                    ADSC9   BUFINDX,,AUTO            cn=0,n=1

     2534    21951    3      IF HEX(0) = TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) THEN

  21951  4 011713   200165 236100                    LDQ     BUFINDX,,AUTO
         4 011714   000033 772000                    QRL     27
         4 011715   000100 101506                    MRL     fill='000'O
         4 011716   100024 400001                    ADSC9   20,Q,PR1                 cn=2,n=1
         4 011717   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011720   200037 236100                    LDQ     HEX,,AUTO
         4 011721   000033 772000                    QRL     27
         4 011722   200220 116100                    CMPQ    PINC_INC+1,,AUTO
         4 011723   011752 601000 4                  TNZ     s:21959

     2535    21952    4      DO ;

     2536    21953    5         DO I = 1 TO HEX(0) ;

  21953  4 011724   000001 235007                    LDA     1,DL
         4 011725   200167 755100                    STA     I,,AUTO
         4 011726   011744 710000 4                  TRA     s:21956+3

     2537    21954    5            TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX + 1) = HEX(I) ;

  21954  4 011727   200165 236100                    LDQ     BUFINDX,,AUTO
         4 011730   000033 772000                    QRL     27
         4 011731   200167 235100                    LDA     I,,AUTO
         4 011732   000047 470400 2                  LDP0    TCCHR$
         4 011733   000106 100505                    MLR     fill='000'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:414  
         4 011734   200037 000001                    ADSC9   HEX,A,AUTO               cn=0,n=1
         4 011735   000024 600001                    ADSC9   20,Q,PR0                 cn=3,n=1

     2538    21955    5            BUFINDX = BUFINDX + 1 ;

  21955  4 011736   200165 236100                    LDQ     BUFINDX,,AUTO
         4 011737   001000 036003                    ADLQ    512,DU
         4 011740   200165 552140                    STBQ    BUFINDX,'40'O,AUTO

     2539    21956    5            END ;

  21956  4 011741   200167 235100                    LDA     I,,AUTO
         4 011742   000001 035007                    ADLA    1,DL
         4 011743   200167 755100                    STA     I,,AUTO
         4 011744   200037 236100                    LDQ     HEX,,AUTO
         4 011745   000033 772000                    QRL     27
         4 011746   200167 116100                    CMPQ    I,,AUTO
         4 011747   011727 603000 4                  TRC     s:21954

     2540    21957    4         RETURN ;

  21957  4 011750   200156 221300                    LDX1  ! @MIN_VAL,,AUTO
         4 011751   000001 702211                    TSX2  ! 1,X1

     2541    21958    4         END ;
     2542    21959    3      SAVEIDX = BUFINDX ;

  21959  4 011752   200165 236100                    LDQ     BUFINDX,,AUTO
         4 011753   000033 772000                    QRL     27
         4 011754   200173 756100                    STQ     SAVEIDX,,AUTO

     2543    21960    3      MORE = HEX(0) - TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX)  ;

  21960  4 011755   000100 101506                    MRL     fill='000'O
         4 011756   100024 400001                    ADSC9   20,Q,PR1                 cn=2,n=1
         4 011757   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 011760   200037 236100                    LDQ     HEX,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:415  
         4 011761   000033 772000                    QRL     27
         4 011762   200220 136100                    SBLQ    PINC_INC+1,,AUTO
         4 011763   200166 756100                    STQ     MORE,,AUTO

     2544    21961    3      IF HEX(0) = 0 THEN

  21961  4 011764   200037 236100                    LDQ     HEX,,AUTO
         4 011765   777000 316003                    CANQ    -512,DU
         4 011766   011771 601000 4                  TNZ     s:21964

     2545    21962    3         MORE = MORE - 1;

  21962  4 011767   000001 336007                    LCQ     1,DL
         4 011770   200166 056100                    ASQ     MORE,,AUTO

     2546    21963    3      END ;        /*  End of num ~= 0 */

     2547    21964    2   IF CCHRSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN

  21964  4 011771   000104 470400 2                  LDP0    CCHRSZ$
         4 011772   003100 061500                    CSR     bolr='003'O
         4 011773   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 011774   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 011775   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 011776   000377 116007                    CMPQ    255,DL
         4 011777   012014 601000 4                  TNZ     s:21967

     2548    21965    2      SIZE = CCHRSZ$->PP$BIG_STRCT.SIZE.T * 256 + CCHRSZ$->PP$BIG_STRCT.SIZE.B + MORE;

  21965  4 012000   003100 061500                    CSR     bolr='003'O
         4 012001   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8
         4 012002   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 012003   003100 061500                    CSR     bolr='003'O
         4 012004   000000 410010                    BDSC    0,,PR0                   by=2,bit=1,n=8
         4 012005   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 012006   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 012007   000010 736000                    QLS     8
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:416  
         4 012010   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 012011   200166 036100                    ADLQ    MORE,,AUTO
         4 012012   200172 756100                    STQ     SIZE,,AUTO
         4 012013   012022 710000 4                  TRA     s:21969

     2549    21966    2   ELSE
     2550    21967    2      SIZE = CCHRSZ$->PP$STRCT.SIZE + MORE;

  21967  4 012014   003100 061500                    CSR     bolr='003'O
         4 012015   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 012016   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 012017   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 012020   200166 036100                    ADLQ    MORE,,AUTO
         4 012021   200172 756100                    STQ     SIZE,,AUTO

     2551    21968
     2552    21969    3   IF MORE > 0 THEN DO;

  21969  4 012022   200166 235100                    LDA     MORE,,AUTO
         4 012023   012147 604400 4                  TMOZ    s:22123

     2553    21970    4      IF SIZE > SIZEC(KL_CCHR)+255 THEN DO;

  21970  4 012024   000523 116007                    CMPQ    339,DL
         4 012025   012072 602000 4                  TNC     s:22057

     2554    21971    4         I = SIZE - LENGTHC(KL_CCHR) - 255;

  21971  4 012026   000522 136007                    SBLQ    338,DL
         4 012027   200167 756100                    STQ     I,,AUTO

     2555    21972              %NUMBER ( NUM1 = I);
             21980    4         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, I );

  21980  4 012030   200167 631500                    EPPR1   I,,AUTO
         4 012031   200223 451500                    STP1    PINC_INC+4,,AUTO
         4 012032   000160 236000 5                  LDQ     112
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:417  
         4 012033   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 012034   000162 237000 5                  LDAQ    114
         4 012035   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 012036   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 012037   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 012040   000000 701000 xent               TSX1    ASB$BINCHAR
         4 012041   000000 011000                    NOP     0

     2556    22002              %NUMBER ( NUM2 = SIZE);
             22018    4         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, SIZE );

  22018  4 012042   200172 630500                    EPPR0   SIZE,,AUTO
         4 012043   200223 450500                    STP0    PINC_INC+4,,AUTO
         4 012044   000152 236000 5                  LDQ     106
         4 012045   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 012046   000154 237000 5                  LDAQ    108
         4 012047   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 012050   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 012051   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 012052   000000 701000 xent               TSX1    ASB$BINCHAR
         4 012053   000000 011000                    NOP     0

     2557    22032        /*E* ERROR: ASD-E$CCHR_TOO_LARGE-C
     2558    22033             MESSAGE: This control sequence is too large.
     2559    22034             MESSAGE1: %U1 bytes too many.
     2560    22035             MESSAGE2: It will increase the control char structure to %U2 bytes.
     2561    22036             MESSAGE3: The profile record will not be changed.
     2562    22037        */
     2563    22038              %SCREAM (ERR# = %E$CCHR_TOO_LARGE, LEVEL = ERROR, MID='D');

  22050  4 012054   000201 630400 5                  EPPR0   129
         4 012055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 012056   000000 701000 xent               TSX1    ASH$ERROR
         4 012057   000000 011000                    NOP     0

     2564    22053    4         IF SAVEIDX = 0 THEN

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:418  
  22053  4 012060   200173 235100                    LDA     SAVEIDX,,AUTO
         4 012061   012070 601000 4                  TNZ     s:22055

     2565    22054    4            TCCHR$->KL$CCHR.CCHR_ARY(NUM) = 0;

  22054  4 012062   200161 236100                    LDQ     NUM,,AUTO
         4 012063   000033 772000                    QRL     27
         4 012064   000047 470400 2                  LDP0    TCCHR$
         4 012065   000106 101400                    MRL     fill='000'O
         4 012066   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         4 012067   000015 400001                    ADSC9   13,Q,PR0                 cn=2,n=1

     2566    22055    4         RETURN;

  22055  4 012070   200156 221300                    LDX1  ! @MIN_VAL,,AUTO
         4 012071   000001 702211                    TSX2  ! 1,X1

     2567    22056    4         END;  /*  Control char structure too big  */
     2568    22057    3      IF CCHRSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL AND

  22057  4 012072   003100 061500                    CSR     bolr='003'O
         4 012073   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 012074   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 012075   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 012076   000377 116007                    CMPQ    255,DL
         4 012077   012106 600000 4                  TZE     s:22061
         4 012100   200172 235100                    LDA     SIZE,,AUTO
         4 012101   000401 115007                    CMPA    257,DL
         4 012102   012106 602000 4                  TNC     s:22061

     2569    22058    3           SIZE > 256 THEN
     2570    22059    3         I = 2;

  22059  4 012103   000002 236007                    LDQ     2,DL
         4 012104   200167 756100                    STQ     I,,AUTO
         4 012105   012107 710000 4                  TRA     s:22062

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:419  
     2571    22060    3      ELSE
     2572    22061    3         I = 0;

  22061  4 012106   200167 450100                    STZ     I,,AUTO

     2573    22062    3      I = I + P_ARS + MORE;

  22062  4 012107   200167 236100                    LDQ     I,,AUTO
         4 012110   000106 036000 2                  ADLQ    P_ARS
         4 012111   200166 036100                    ADLQ    MORE,,AUTO
         4 012112   200167 756100                    STQ     I,,AUTO

     2574    22063    4      IF ( I > 1024 /* AS_PRO_BUF_SIZEC */) THEN DO;

  22063  4 012113   002001 116007                    CMPQ    1025,DL
         4 012114   012147 602000 4                  TNC     s:22123

     2575    22064        /* The new stuff won't fit in the record, error */
     2576    22065        /*E* ERROR:     ASD-E$EXCEED_PRO_SIZE-C
     2577    22066             MESSAGE: Profile update not done, it makes the record too large.
     2578    22067             MESSAGE1: %U1 bytes too many.
     2579    22068             MESSAGE2: You are making a modification to the profile record
     2580    22069                       which expands its size greater than (1024) the allowed max.
     2581    22070        */
     2582    22071    4         I = I - 1024;

  22071  4 012115   002000 136007                    SBLQ    1024,DL
         4 012116   200167 756100                    STQ     I,,AUTO

     2583    22072              %NUMBER ( NUM1 = I );
             22080    4         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, I );

  22080  4 012117   200167 631500                    EPPR1   I,,AUTO
         4 012120   200223 451500                    STP1    PINC_INC+4,,AUTO
         4 012121   000160 236000 5                  LDQ     112
         4 012122   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 012123   000162 237000 5                  LDAQ    114
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:420  
         4 012124   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 012125   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 012126   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 012127   000000 701000 xent               TSX1    ASB$BINCHAR
         4 012130   000000 011000                    NOP     0

     2584    22102              %SCREAM (ERR#=E$EXCEED_PRO_SIZE, LEVEL=ERROR, MID='D');

  22114  4 012131   000202 630400 5                  EPPR0   130
         4 012132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 012133   000000 701000 xent               TSX1    ASH$ERROR
         4 012134   000000 011000                    NOP     0

     2585    22117    4         IF SAVEIDX = 0 THEN

  22117  4 012135   200173 235100                    LDA     SAVEIDX,,AUTO
         4 012136   012145 601000 4                  TNZ     s:22119

     2586    22118    4            TCCHR$->KL$CCHR.CCHR_ARY(NUM) = 0;

  22118  4 012137   200161 236100                    LDQ     NUM,,AUTO
         4 012140   000033 772000                    QRL     27
         4 012141   000047 470400 2                  LDP0    TCCHR$
         4 012142   000106 101400                    MRL     fill='000'O
         4 012143   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         4 012144   000015 400001                    ADSC9   13,Q,PR0                 cn=2,n=1

     2587    22119    4         RETURN;

  22119  4 012145   200156 221300                    LDX1  ! @MIN_VAL,,AUTO
         4 012146   000001 702211                    TSX2  ! 1,X1

     2588    22120    4         END; /* Error for max size exceedment */
     2589    22121    3      END; /*  More > 0  */
     2590    22122                                           /*  Adjust CCHR_ARY  */
     2591    22123    2   NUM# = NUM + 1 ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:421  
  22123  4 012147   200161 236100                    LDQ     NUM,,AUTO
         4 012150   000033 772000                    QRL     27
         4 012151   000001 036007                    ADLQ    1,DL
         4 012152   200162 756100                    STQ     NUM#,,AUTO

     2592    22124    3   DO WHILE NUM# < CMP_VAL ;

  22124  4 012153   012156 604000 4                  TMI     s:22125
         4 012154   200163 116100                    CMPQ    CMP_VAL,,AUTO
         4 012155   012204 603000 4                  TRC     s:22129

     2593    22125    3      IF NOT (TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = 0) THEN

  22125  4 012156   000047 470400 2                  LDP0    TCCHR$
         4 012157   200162 235100                    LDA     NUM#,,AUTO
         4 012160   000100 101505                    MRL     fill='000'O
         4 012161   000015 400001                    ADSC9   13,A,PR0                 cn=2,n=1
         4 012162   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 012163   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 012164   000000 116003                    CMPQ    0,DU
         4 012165   012177 600000 4                  TZE     s:22127

     2594    22126    3         TCCHR$->KL$CCHR.CCHR_ARY(NUM#) = TCCHR$->KL$CCHR.CCHR_ARY(NUM#) + MORE ;

  22126  4 012166   000100 101505                    MRL     fill='000'O
         4 012167   000015 400001                    ADSC9   13,A,PR0                 cn=2,n=1
         4 012170   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 012171   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 012172   200166 036100                    ADLQ    MORE,,AUTO
         4 012173   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 012174   000105 101500                    MRL     fill='000'O
         4 012175   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 012176   000015 400001                    ADSC9   13,A,PR0                 cn=2,n=1

     2595    22127    3      NUM# = NUM# + 1 ;

  22127  4 012177   200162 054100                    AOS     NUM#,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:422  

     2596    22128    3      END ;

  22128  4 012200   200162 236100                    LDQ     NUM#,,AUTO
         4 012201   012156 604000 4                  TMI     s:22125
         4 012202   200163 116100                    CMPQ    CMP_VAL,,AUTO
         4 012203   012156 602000 4                  TNC     s:22125

     2597    22129    2   IF HEX(0) = 0 THEN

  22129  4 012204   200037 236100                    LDQ     HEX,,AUTO
         4 012205   777000 316003                    CANQ    -512,DU
         4 012206   012214 601000 4                  TNZ     s:22132

     2598    22130    2      PTROPT$ -> BASED_BYTE = 0;

  22130  4 012207   200157 470500                    LDP0    @PTROPT$,,AUTO
         4 012210   000000 471500                    LDP1    0,,PR0
         4 012211   000100 101400                    MRL     fill='000'O
         4 012212   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         4 012213   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     2599    22131                                           /* Adjust TXT_CHRA  */
     2600    22132    2   PTRBGN$ = ADDR(TCCHR$->KL$CCHR.TXT_CHR) ;

  22132  4 012214   000047 236000 2                  LDQ     TCCHR$
         4 012215   000130 036000 5                  ADLQ    88
         4 012216   200160 756100                    STQ     PTRBGN$,,AUTO

     2601    22133    2   NUM# = POFFC(PP_END$,PTRBGN$) ;

  22133  4 012217   200160 236100                    LDQ     PTRBGN$,,AUTO
         4 012220   000020 772000                    QRL     16
         4 012221   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 012222   000107 236000 2                  LDQ     PP_END$
         4 012223   000020 772000                    QRL     16
         4 012224   200220 136100                    SBLQ    PINC_INC+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:423  
         4 012225   200162 756100                    STQ     NUM#,,AUTO

     2602    22134    2   J = 0 ;

  22134  4 012226   200170 450100                    STZ     J,,AUTO

     2603    22135    2   IF MORE > 0 THEN

  22135  4 012227   200166 235100                    LDA     MORE,,AUTO
         4 012230   012254 604400 4                  TMOZ    s:22141

     2604    22136    3   DO I = NUM# DOWNTO BUFINDX ;

  22136  4 012231   200167 756100                    STQ     I,,AUTO
         4 012232   012246 710000 4                  TRA     s:22139+3

     2605    22137    3      J = I + MORE ;

  22137  4 012233   200167 236100                    LDQ     I,,AUTO
         4 012234   200166 036100                    ADLQ    MORE,,AUTO
         4 012235   200170 756100                    STQ     J,,AUTO

     2606    22138    3      TCCHR$->KL$CCHR.TXT_CHRA(J) = TCCHR$->KL$CCHR.TXT_CHRA(I) ;

  22138  4 012236   000047 470400 2                  LDP0    TCCHR$
         4 012237   200167 235100                    LDA     I,,AUTO
         4 012240   040106 100505                    MLR     fill='040'O
         4 012241   000024 400001                    ADSC9   20,A,PR0                 cn=2,n=1
         4 012242   000024 400001                    ADSC9   20,Q,PR0                 cn=2,n=1

     2607    22139    3      END ;

  22139  4 012243   200167 235100                    LDA     I,,AUTO
         4 012244   000001 135007                    SBLA    1,DL
         4 012245   200167 755100                    STA     I,,AUTO
         4 012246   200165 236100                    LDQ     BUFINDX,,AUTO
         4 012247   000033 772000                    QRL     27
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:424  
         4 012250   200167 116100                    CMPQ    I,,AUTO
         4 012251   012233 602000 4                  TNC     s:22137
         4 012252   012233 600000 4                  TZE     s:22137
         4 012253   012306 710000 4                  TRA     s:22148

     2608    22140    3   ELSE DO ;

     2609    22141    3      K = BUFINDX + TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) + 1 ;

  22141  4 012254   200165 236100                    LDQ     BUFINDX,,AUTO
         4 012255   000033 772000                    QRL     27
         4 012256   000047 470400 2                  LDP0    TCCHR$
         4 012257   000100 101506                    MRL     fill='000'O
         4 012260   000024 400001                    ADSC9   20,Q,PR0                 cn=2,n=1
         4 012261   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 012262   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 012263   000001 036007                    ADLQ    1,DL
         4 012264   200171 756100                    STQ     K,,AUTO

     2610    22142    4      DO I = K TO NUM# ;

  22142  4 012265   200167 756100                    STQ     I,,AUTO
         4 012266   012302 710000 4                  TRA     s:22145+3

     2611    22143    4         J = I + MORE ;

  22143  4 012267   200167 236100                    LDQ     I,,AUTO
         4 012270   200166 036100                    ADLQ    MORE,,AUTO
         4 012271   200170 756100                    STQ     J,,AUTO

     2612    22144    4         TCCHR$->KL$CCHR.TXT_CHRA(J) = TCCHR$->KL$CCHR.TXT_CHRA(I) ;

  22144  4 012272   000047 470400 2                  LDP0    TCCHR$
         4 012273   200167 235100                    LDA     I,,AUTO
         4 012274   040106 100505                    MLR     fill='040'O
         4 012275   000024 400001                    ADSC9   20,A,PR0                 cn=2,n=1
         4 012276   000024 400001                    ADSC9   20,Q,PR0                 cn=2,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:425  

     2613    22145    4         END;

  22145  4 012277   200167 235100                    LDA     I,,AUTO
         4 012300   000001 035007                    ADLA    1,DL
         4 012301   200167 755100                    STA     I,,AUTO
         4 012302   200167 236100                    LDQ     I,,AUTO
         4 012303   012306 604000 4                  TMI     s:22148
         4 012304   200162 116100                    CMPQ    NUM#,,AUTO
         4 012305   012267 604400 4                  TMOZ    s:22143

     2614    22146    3      END ;

     2615    22147                                        /*  Place TXT_CHRA  */
     2616    22148    2   IF HEX(0) ~= 0 THEN

  22148  4 012306   200037 236100                    LDQ     HEX,,AUTO
         4 012307   777000 316003                    CANQ    -512,DU
         4 012310   012317 600000 4                  TZE     s:22150

     2617    22149    2      TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) = HEX(0) ;

  22149  4 012311   200165 236100                    LDQ     BUFINDX,,AUTO
         4 012312   000033 772000                    QRL     27
         4 012313   000047 470400 2                  LDP0    TCCHR$
         4 012314   000106 100500                    MLR     fill='000'O
         4 012315   200037 000001                    ADSC9   HEX,,AUTO                cn=0,n=1
         4 012316   000024 400001                    ADSC9   20,Q,PR0                 cn=2,n=1

     2618    22150    3   DO I = 1 TO HEX(0) ;

  22150  4 012317   000001 235007                    LDA     1,DL
         4 012320   200167 755100                    STA     I,,AUTO
         4 012321   012337 710000 4                  TRA     s:22153+3

     2619    22151    3      BUFINDX = BUFINDX + 1 ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:426  
  22151  4 012322   200165 236100                    LDQ     BUFINDX,,AUTO
         4 012323   001000 036003                    ADLQ    512,DU
         4 012324   200165 552140                    STBQ    BUFINDX,'40'O,AUTO

     2620    22152    3      TCCHR$->KL$CCHR.TXT_UBIN(BUFINDX) = HEX(I) ;

  22152  4 012325   200165 236100                    LDQ     BUFINDX,,AUTO
         4 012326   000033 772000                    QRL     27
         4 012327   200167 235100                    LDA     I,,AUTO
         4 012330   000047 470400 2                  LDP0    TCCHR$
         4 012331   000106 100505                    MLR     fill='000'O
         4 012332   200037 000001                    ADSC9   HEX,A,AUTO               cn=0,n=1
         4 012333   000024 400001                    ADSC9   20,Q,PR0                 cn=2,n=1

     2621    22153    3      END ;

  22153  4 012334   200167 235100                    LDA     I,,AUTO
         4 012335   000001 035007                    ADLA    1,DL
         4 012336   200167 755100                    STA     I,,AUTO
         4 012337   200037 236100                    LDQ     HEX,,AUTO
         4 012340   000033 772000                    QRL     27
         4 012341   200167 116100                    CMPQ    I,,AUTO
         4 012342   012322 603000 4                  TRC     s:22151

     2622    22154    3   IF SIZE > 255 THEN DO;    /*  Need the big header (4 bytes)  */

  22154  4 012343   200172 235100                    LDA     SIZE,,AUTO
         4 012344   000400 115007                    CMPA    256,DL
         4 012345   012463 602000 4                  TNC     s:22174

     2623    22155    4      IF CCHRSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */

  22155  4 012346   000104 470400 2                  LDP0    CCHRSZ$
         4 012347   003100 061500                    CSR     bolr='003'O
         4 012350   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 012351   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 012352   200220 236100                    LDQ     PINC_INC+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:427  
         4 012353   000377 116007                    CMPQ    255,DL
         4 012354   012445 600000 4                  TZE     s:22170

     2624    22156    4         DSEG3$ -> KL$CCHR = TCCHR$ -> KL$CCHR;

  22156  4 012355   000047 471400 2                  LDP1    TCCHR$
         4 012356   000000 473400 xsym               LDP3    DSEG3$
         4 012357   000100 100500                    MLR     fill='000'O
         4 012360   100000 000123                    ADSC9   0,,PR1                   cn=0,n=83
         4 012361   300000 000123                    ADSC9   0,,PR3                   cn=0,n=83

     2625    22157    5         DO I = 1 TO SIZE;

  22157  4 012362   000001 235007                    LDA     1,DL
         4 012363   200167 755100                    STA     I,,AUTO
         4 012364   012376 710000 4                  TRA     s:22159+3

     2626    22158    5            DSEG3$->KL$CCHR.TXT_UBIN(I) = TCCHR$->KL$CCHR.TXT_UBIN(I);

  22158  4 012365   000047 470400 2                  LDP0    TCCHR$
         4 012366   200167 235100                    LDA     I,,AUTO
         4 012367   000000 471400 xsym               LDP1    DSEG3$
         4 012370   000105 100505                    MLR     fill='000'O
         4 012371   000024 400001                    ADSC9   20,A,PR0                 cn=2,n=1
         4 012372   100024 400001                    ADSC9   20,A,PR1                 cn=2,n=1

     2627    22159    5            END;   /*  Do i  */

  22159  4 012373   200167 235100                    LDA     I,,AUTO
         4 012374   000001 035007                    ADLA    1,DL
         4 012375   200167 755100                    STA     I,,AUTO
         4 012376   200172 236100                    LDQ     SIZE,,AUTO
         4 012377   200167 116100                    CMPQ    I,,AUTO
         4 012400   012365 603000 4                  TRC     s:22158

     2628    22160    4         CCHRSZ$->PP$BIG_STRCT.BIG = %KV_PRMID_BIGTL;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:428  
  22160  4 012401   000104 470400 2                  LDP0    CCHRSZ$
         4 012402   003100 061400                    CSR     bolr='003'O
         4 012403   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
         4 012404   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9

     2629    22161    4         CCHRSZ$->PP$BIG_STRCT.TYPE = %KV_PRMID_CTRCHR;

  22161  4 012405   003100 061400                    CSR     bolr='003'O
         4 012406   000203 000044 5                  BDSC    131                      by=0,bit=0,n=36
         4 012407   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9

     2630    22162    4         TCCHR$ = PINCRC (TCCHR$, 2);

  22162  4 012410   000047 236000 2                  LDQ     TCCHR$
         4 012411   400000 036007                    ADLQ    -131072,DL
         4 012412   000047 756000 2                  STQ     TCCHR$

     2631    22163    4         TCCHR$ -> KL$CCHR = DSEG3$ -> KL$CCHR;

  22163  4 012413   000000 471400 xsym               LDP1    DSEG3$
         4 012414   000047 473400 2                  LDP3    TCCHR$
         4 012415   000100 100500                    MLR     fill='000'O
         4 012416   100000 000123                    ADSC9   0,,PR1                   cn=0,n=83
         4 012417   300000 000123                    ADSC9   0,,PR3                   cn=0,n=83

     2632    22164    5         DO I = 1 TO SIZE;

  22164  4 012420   000001 235007                    LDA     1,DL
         4 012421   200167 755100                    STA     I,,AUTO
         4 012422   012434 710000 4                  TRA     s:22166+3

     2633    22165    5            TCCHR$->KL$CCHR.TXT_UBIN(I) = DSEG3$->KL$CCHR.TXT_UBIN(I);

  22165  4 012423   000000 470400 xsym               LDP0    DSEG3$
         4 012424   200167 235100                    LDA     I,,AUTO
         4 012425   000047 471400 2                  LDP1    TCCHR$
         4 012426   000105 100505                    MLR     fill='000'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:429  
         4 012427   000024 400001                    ADSC9   20,A,PR0                 cn=2,n=1
         4 012430   100024 400001                    ADSC9   20,A,PR1                 cn=2,n=1

     2634    22166    5            END;   /*  Do i  */

  22166  4 012431   200167 235100                    LDA     I,,AUTO
         4 012432   000001 035007                    ADLA    1,DL
         4 012433   200167 755100                    STA     I,,AUTO
         4 012434   200172 236100                    LDQ     SIZE,,AUTO
         4 012435   200167 116100                    CMPQ    I,,AUTO
         4 012436   012423 603000 4                  TRC     s:22165

     2635    22167    4         P_ARS = P_ARS + 2;

  22167  4 012437   000106 235000 2                  LDA     P_ARS
         4 012440   000002 035007                    ADLA    2,DL
         4 012441   000106 755000 2                  STA     P_ARS

     2636    22168    4         PP_END$ = PINCRC (PP_END$, 2);

  22168  4 012442   000107 236000 2                  LDQ     PP_END$
         4 012443   400000 036007                    ADLQ    -131072,DL
         4 012444   000107 756000 2                  STQ     PP_END$

     2637    22169    4         END;   /*  No big header  */

     2638    22170    3      CCHRSZ$->PP$BIG_STRCT.SIZE.T = SIZE / 256;

  22170  4 012445   200172 236100                    LDQ     SIZE,,AUTO
         4 012446   000010 772000                    QRL     8
         4 012447   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 012450   000104 470400 2                  LDP0    CCHRSZ$
         4 012451   003100 061500                    CSR     bolr='003'O
         4 012452   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 012453   000000 410010                    BDSC    0,,PR0                   by=2,bit=1,n=8

     2639    22171    3      CCHRSZ$->PP$BIG_STRCT.SIZE.B = MOD ( SIZE, 256 );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:430  

  22171  4 012454   200172 236100                    LDQ     SIZE,,AUTO
         4 012455   000377 376007                    ANQ     255,DL
         4 012456   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 012457   003100 061500                    CSR     bolr='003'O
         4 012460   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 012461   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8

     2640    22172    3      END;  /*  Need big header  */

  22172  4 012462   012541 710000 4                  TRA     s:22187

     2641    22173    3   ELSE DO;  /*  Need small header  */

     2642    22174    4      IF CCHRSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */

  22174  4 012463   000104 470400 2                  LDP0    CCHRSZ$
         4 012464   003100 061500                    CSR     bolr='003'O
         4 012465   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 012466   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 012467   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 012470   000377 116007                    CMPQ    255,DL
         4 012471   012536 601000 4                  TNZ     s:22185

     2643    22175    4         CMPE$ = PINCRC (CCHRSZ$,2);

  22175  4 012472   000104 236000 2                  LDQ     CCHRSZ$
         4 012473   400000 036007                    ADLQ    -131072,DL
         4 012474   200164 756100                    STQ     CMPE$,,AUTO

     2644    22176    4         CMPE$ -> KL$CCHR = TCCHR$ -> KL$CCHR;

  22176  4 012475   000047 471400 2                  LDP1    TCCHR$
         4 012476   200164 473500                    LDP3    CMPE$,,AUTO
         4 012477   000100 100500                    MLR     fill='000'O
         4 012500   100000 000123                    ADSC9   0,,PR1                   cn=0,n=83
         4 012501   300000 000123                    ADSC9   0,,PR3                   cn=0,n=83
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:431  

     2645    22177    5         DO I = 1 TO SIZE;

  22177  4 012502   000001 235007                    LDA     1,DL
         4 012503   200167 755100                    STA     I,,AUTO
         4 012504   012516 710000 4                  TRA     s:22179+3

     2646    22178    5            CMPE$->KL$CCHR.TXT_UBIN(I) = TCCHR$->KL$CCHR.TXT_UBIN(I);

  22178  4 012505   000047 470400 2                  LDP0    TCCHR$
         4 012506   200167 235100                    LDA     I,,AUTO
         4 012507   200164 471500                    LDP1    CMPE$,,AUTO
         4 012510   000105 100505                    MLR     fill='000'O
         4 012511   000024 400001                    ADSC9   20,A,PR0                 cn=2,n=1
         4 012512   100024 400001                    ADSC9   20,A,PR1                 cn=2,n=1

     2647    22179    5            END;   /*  Do i  */

  22179  4 012513   200167 235100                    LDA     I,,AUTO
         4 012514   000001 035007                    ADLA    1,DL
         4 012515   200167 755100                    STA     I,,AUTO
         4 012516   200172 236100                    LDQ     SIZE,,AUTO
         4 012517   200167 116100                    CMPQ    I,,AUTO
         4 012520   012505 603000 4                  TRC     s:22178

     2648    22180    4         TCCHR$ = PINCRC (TCCHR$, -2);

  22180  4 012521   000047 236000 2                  LDQ     TCCHR$
         4 012522   000021 036000 5                  ADLQ    17
         4 012523   000047 756000 2                  STQ     TCCHR$

     2649    22181    4         CCHRSZ$->PP$STRCT.TYPE = %KV_PRMID_CTRCHR;

  22181  4 012524   000104 470400 2                  LDP0    CCHRSZ$
         4 012525   003100 061400                    CSR     bolr='003'O
         4 012526   000203 000044 5                  BDSC    131                      by=0,bit=0,n=36
         4 012527   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:432  

     2650    22182    4         P_ARS = P_ARS - 2;

  22182  4 012530   000106 235000 2                  LDA     P_ARS
         4 012531   000002 135007                    SBLA    2,DL
         4 012532   000106 755000 2                  STA     P_ARS

     2651    22183    4         PP_END$ = PINCRC (PP_END$, -2);

  22183  4 012533   000107 236000 2                  LDQ     PP_END$
         4 012534   000021 036000 5                  ADLQ    17
         4 012535   000107 756000 2                  STQ     PP_END$

     2652    22184    4         END;   /*  No small header  */

     2653    22185    3      CCHRSZ$->PP$STRCT.SIZE = SIZE;

  22185  4 012536   003100 061500                    CSR     bolr='003'O
         4 012537   200172 000044                    BDSC    SIZE,,AUTO               by=0,bit=0,n=36
         4 012540   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9

     2654    22186    3      END;  /*  Need small header  */

     2655    22187    2   P_ARS = P_ARS + MORE ;

  22187  4 012541   000106 236000 2                  LDQ     P_ARS
         4 012542   200166 036100                    ADLQ    MORE,,AUTO
         4 012543   000106 756000 2                  STQ     P_ARS

     2656    22188    2   PP_END$ = PINCRC (PP_END$, MORE) ;

  22188  4 012544   200166 236100                    LDQ     MORE,,AUTO
         4 012545   000020 736000                    QLS     16
         4 012546   000107 036000 2                  ADLQ    PP_END$
         4 012547   000107 756000 2                  STQ     PP_END$

     2657    22189
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:433  
     2658    22190    2   RETURN ;

  22190  4 012550   200156 221300                    LDX1  ! @MIN_VAL,,AUTO
         4 012551   000001 702211                    TSX2  ! 1,X1

     2659    22191    2   END PLACE_OPT ;
     2660    22192        %EJECT ;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:434  
     2661    22193    1   GRA_OPT_PROC: PROC ( MN, MX ) ALTRET ;

  22193  4 012552   200154 741300       GRA_OPT_PROC STX1  ! PRO_TYPE+1,,AUTO

     2662    22194
     2663    22195    2   DCL MN UBIN WORD ;
     2664    22196    2   DCL MX UBIN WORD ;
     2665    22197
     2666    22198    2   CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;

  22198  4 012553   200004 470500                    LDP0    BLK$,,AUTO
         4 012554   000004 236100                    LDQ     4,,PR0
         4 012555   000033 772000                    QRL     27
         4 012556   000000 620006                    EAX0    0,QL
         4 012557   000100 305540                    DTB
         4 012560   000004 230010                    NDSC9   4,,PR0                   cn=1,s=nosgn,sf=0,n=*X0
         4 012561   200220 000010                    NDSC9   PINC_INC+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         4 012562   200221 235100                    LDA     PINC_INC+2,,AUTO
         4 012563   200020 755100                    STA     VAL,,AUTO

     2667    22199    3   IF VAL > MX THEN DO ;

  22199  4 012564   200156 471500                    LDP1    @MX,,AUTO
         4 012565   100000 236100                    LDQ     0,,PR1
         4 012566   200020 116100                    CMPQ    VAL,,AUTO
         4 012567   012612 603000 4                  TRC     s:22252

     2668    22200        /*E*  ERROR:   ASD-E$GR_VAL_TOO_BIG-C
     2669    22201              MESSAGE: %U1 value too large.
     2670    22202              MESSAGE1: %U1 can be at most %U2.
     2671    22203        */
     2672    22204    3      AS_FIELD1 = OPTION ;

  22204  4 012570   000000 100500                    MLR     fill='000'O
         4 012571   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 012572   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:435  
     2673    22205           %NUMBER( NUM2 = MX ) ;
             22221    3         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MX );

  22221  4 012573   200156 236100                    LDQ     @MX,,AUTO
         4 012574   000152 235000 5                  LDA     106
         4 012575   200222 757100                    STAQ    PINC_INC+3,,AUTO
         4 012576   000154 237000 5                  LDAQ    108
         4 012577   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 012600   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 012601   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 012602   000000 701000 xent               TSX1    ASB$BINCHAR
         4 012603   000000 011000                    NOP     0

     2674    22235           %SCREAM( ERR#=E$GR_VAL_TOO_BIG, LEVEL=ERROR, MID='D') ;

  22247  4 012604   000204 630400 5                  EPPR0   132
         4 012605   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 012606   000000 701000 xent               TSX1    ASH$ERROR
         4 012607   000000 011000                    NOP     0

     2675    22250    3      ALTRETURN ;

  22250  4 012610   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 012611   000000 702211                    TSX2  ! 0,X1

     2676    22251    3      END ;
     2677    22252    3   IF VAL < MN THEN DO ;

  22252  4 012612   200155 473500                    LDP3    @MN,,AUTO
         4 012613   200020 236100                    LDQ     VAL,,AUTO
         4 012614   300000 116100                    CMPQ    0,,PR3
         4 012615   012640 603000 4                  TRC     s:22305

     2678    22253        /*E*  ERROR:   ASD-E$GR_VAL_TOO_SMALL-C
     2679    22254              MESSAGE: %U1 value too small.
     2680    22255              MESSAGE1: %U1 can be at least %U2.
     2681    22256        */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:436  
     2682    22257    3      AS_FIELD1 = OPTION ;

  22257  4 012616   000000 100500                    MLR     fill='000'O
         4 012617   200140 000040                    ADSC9   OPTION,,AUTO             cn=0,n=32
         4 012620   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     2683    22258           %NUMBER( NUM2 = MN ) ;
             22274    3         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, MN );

  22274  4 012621   200155 236100                    LDQ     @MN,,AUTO
         4 012622   000152 235000 5                  LDA     106
         4 012623   200222 757100                    STAQ    PINC_INC+3,,AUTO
         4 012624   000154 237000 5                  LDAQ    108
         4 012625   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 012626   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 012627   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 012630   000000 701000 xent               TSX1    ASB$BINCHAR
         4 012631   000000 011000                    NOP     0

     2684    22288           %SCREAM( ERR#=E$GR_VAL_TOO_SMALL, LEVEL=ERROR, MID='D') ;

  22300  4 012632   000157 630400 5                  EPPR0   111
         4 012633   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 012634   000000 701000 xent               TSX1    ASH$ERROR
         4 012635   000000 011000                    NOP     0

     2685    22303    3      ALTRETURN ;

  22303  4 012636   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 012637   000000 702211                    TSX2  ! 0,X1

     2686    22304    3      END ;
     2687    22305    2   IF NOT( PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK ) THEN

  22305  4 012640   000042 474400 2                  LDP4    PHDR$
         4 012641   000000 066500                    CMPB    filb='0'B
         4 012642   400001 630001                    BDSC    1,,PR4                   by=3,bit=3,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:437  
         4 012643   000002 000022 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=18
         4 012644   012650 601000 4                  TNZ     s:22307

     2688    22306    2      PHDR$ -> PRO$HDR.DDEV.GRAPHICS_OK = '1'B ;

  22306  4 012645   003100 060400                    CSL     bolr='003'O
         4 012646   000030 000001 xsym               BDSC    B_VECTNIL+24             by=0,bit=0,n=1
         4 012647   400001 630001                    BDSC    1,,PR4                   by=3,bit=3,n=1

     2689    22307    3   IF NOT( GR_FLAG ) THEN DO ;

  22307  4 012650   200027 234100                    SZN     GR_FLAG,,AUTO
         4 012651   012664 604000 4                  TMI     s:22329

     2690    22308    3      IF PHDR$ -> PRO$HDR.GR_FPRG = ' ' THEN

  22308  4 012652   040000 106500                    CMPC    fill='040'O
         4 012653   400002 000100                    ADSC9   2,,PR4                   cn=0,n=64
         4 012654   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 012655   012662 601000 4                  TNZ     s:22327

     2691    22309        /*E* ERROR:    ASD-E$GR_FPRG_NIL-C
     2692    22310             MESSAGE:  GR_FPRG is NIL.
     2693    22311        */
     2694    22312              %SCREAM( ERR#=E$GR_FPRG_NIL, LEVEL=ERROR, MID='D');

  22324  4 012656   000205 630400 5                  EPPR0   133
         4 012657   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 012660   000000 701000 xent               TSX1    ASH$ERROR
         4 012661   000000 011000                    NOP     0

     2695    22327    3      GR_FLAG = '1'B ;

  22327  4 012662   400000 236003                    LDQ     -131072,DU
         4 012663   200027 756100                    STQ     GR_FLAG,,AUTO

     2696    22328    3      END;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:438  

     2697    22329    2   RETURN ;

  22329  4 012664   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 012665   000001 702211                    TSX2  ! 1,X1

     2698    22330
     2699    22331    2   END GRA_OPT_PROC ;
     2700    22332        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:439  
     2701    22333    1   PUT_GR_ESCAPE: PROC;

  22333  4 012666   200154 741300       PUT_GR_ESCA* STX1  ! PRO_TYPE+1,,AUTO

     2702    22334
     2703    22335    2   IF (OP = 0)

  22335  4 012667   200017 235100                    LDA     OP,,AUTO
         4 012670   012774 601000 4                  TNZ     s:22403

     2704    22336    3   THEN DO; /* This function is unsupported, remove it from the array */

     2705    22337    3      IF (GRA$->GRA$REC.NUM_ESCAPES = 0)

  22337  4 012671   000041 470400 2                  LDP0    GRA$
         4 012672   000045 235100                    LDA     37,,PR0
         4 012673   012702 601000 4                  TNZ     s:22361

     2706    22338    4      THEN DO;

     2707    22339        /*E* ERROR: ASD-E$ESCFCN_NOT_SUPPORTED-C
     2708    22340             MESSAGE0: That escape function was never supported.
     2709    22341             MESSAGE1: The named function was never specified as 'HARDWARE' or
     2710    22342                       'SOFTWARE', and hence was never supported.
     2711    22343        */
     2712    22344              %SCREAM (ERR#=E$ESCFCN_NOT_SUPPORTED, LEVEL=WARN, MID='D');

  22354  4 012674   000206 630400 5                  EPPR0   134
         4 012675   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 012676   000000 701000 xent               TSX1    ASH$WARN
         4 012677   000000 011000                    NOP     0

     2713    22359    4         RETURN;

  22359  4 012700   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 012701   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:440  
     2714    22360    4         END;
     2715    22361    4      DO L = 0 TO GRA$->GRA$REC.NUM_ESCAPES-1;

  22361  4 012702   200016 450100                    STZ     L,,AUTO
         4 012703   012762 710000 4                  TRA     s:22380+3

     2716    22362    4         IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) = VAL)

  22362  4 012704   000041 470400 2                  LDP0    GRA$
         4 012705   200016 720100                    LXL0    L,,AUTO
         4 012706   000046 236110                    LDQ     38,X0,PR0
         4 012707   000022 772000                    QRL     18
         4 012710   200020 116100                    CMPQ    VAL,,AUTO
         4 012711   012757 601000 4                  TNZ     s:22380

     2717    22363    5         THEN DO; /* Found the one to remove */

     2718    22364    5            IF (L = GRA$->GRA$REC.NUM_ESCAPES - 1) /* 0 based count */

  22364  4 012712   000045 236100                    LDQ     37,,PR0
         4 012713   000001 136007                    SBLQ    1,DL
         4 012714   012726 604000 4                  TMI     s:22370
         4 012715   200016 116100                    CMPQ    L,,AUTO
         4 012716   012726 601000 4                  TNZ     s:22370

     2719    22365    6            THEN DO; /* Remove the last one! */

     2720    22366    6               GRA$->GRA$REC.GR_ESCAPES(GRA$->GRA$REC.NUM_ESCAPES-1) = '0'B;

  22366  4 012717   000045 721100                    LXL1    37,,PR0
         4 012720   000045 450111                    STZ     37,X1,PR0

     2721    22367    6               GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES - 1;

  22367  4 012721   000045 235100                    LDA     37,,PR0
         4 012722   000001 135007                    SBLA    1,DL
         4 012723   000045 755100                    STA     37,,PR0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:441  

     2722    22368    6               RETURN;

  22368  4 012724   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 012725   000001 702211                    TSX2  ! 1,X1

     2723    22369    6               END;
     2724    22370    6            DO OP = (L + 1) TO (GRA$->GRA$REC.NUM_ESCAPES - 1);

  22370  4 012726   200016 235100                    LDA     L,,AUTO
         4 012727   000001 035007                    ADLA    1,DL
         4 012730   200017 755100                    STA     OP,,AUTO
         4 012731   012745 710000 4                  TRA     s:22375+3

     2725    22371    6               GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (OP - 1) =

  22371  4 012732   000041 470400 2                  LDP0    GRA$
         4 012733   200017 720100                    LXL0    OP,,AUTO
         4 012734   000046 221110                    LDX1    38,X0,PR0
         4 012735   000045 741110                    STX1    37,X0,PR0

     2726    22372    6                    GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (OP);
     2727    22373    6               GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (OP - 1) =

  22373  4 012736   000046 236110                    LDQ     38,X0,PR0
         4 012737   000045 676110                    ERQ     37,X0,PR0
         4 012740   777000 376007                    ANQ     -512,DL
         4 012741   000045 656110                    ERSQ    37,X0,PR0

     2728    22374    6                    GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (OP);
     2729    22375    6               END;

  22375  4 012742   200017 235100                    LDA     OP,,AUTO
         4 012743   000001 035007                    ADLA    1,DL
         4 012744   200017 755100                    STA     OP,,AUTO
         4 012745   200017 236100                    LDQ     OP,,AUTO
         4 012746   000045 116100                    CMPQ    37,,PR0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:442  
         4 012747   012732 602000 4                  TNC     s:22371

     2730    22376    5            GRA$->GRA$REC.GR_ESCAPES(GRA$->GRA$REC.NUM_ESCAPES-1) = '0'B;

  22376  4 012750   000045 720100                    LXL0    37,,PR0
         4 012751   000045 450110                    STZ     37,X0,PR0

     2731    22377    5            GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES - 1;

  22377  4 012752   000045 235100                    LDA     37,,PR0
         4 012753   000001 135007                    SBLA    1,DL
         4 012754   000045 755100                    STA     37,,PR0

     2732    22378    5            RETURN;

  22378  4 012755   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 012756   000001 702211                    TSX2  ! 1,X1

     2733    22379    5            END;
     2734    22380    4         END;

  22380  4 012757   200016 235100                    LDA     L,,AUTO
         4 012760   000001 035007                    ADLA    1,DL
         4 012761   200016 755100                    STA     L,,AUTO
         4 012762   200016 236100                    LDQ     L,,AUTO
         4 012763   000045 116100                    CMPQ    37,,PR0
         4 012764   012704 602000 4                  TNC     s:22362

     2735    22381    3      IF (L = GRA$->GRA$REC.NUM_ESCAPES)

  22381  4 012765   012774 601000 4                  TNZ     s:22403

     2736    22382    4      THEN DO; /* We never deleted the item - an error condition */

     2737    22383              %SCREAM (ERR#=E$ESCFCN_NOT_SUPPORTED, LEVEL=WARN, MID='D');

  22393  4 012766   000206 630400 5                  EPPR0   134
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:443  
         4 012767   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 012770   000000 701000 xent               TSX1    ASH$WARN
         4 012771   000000 011000                    NOP     0

     2738    22398    4         RETURN;

  22398  4 012772   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 012773   000001 702211                    TSX2  ! 1,X1

     2739    22399    4         END;
     2740    22400    3      END; /* Unsupporting of an escape function */
     2741    22401
     2742    22402        /* Insert a new function if we are here */
     2743    22403    2   IF (GRA$->GRA$REC.NUM_ESCAPES = 62) /* count from zero */

  22403  4 012774   000041 470400 2                  LDP0    GRA$
         4 012775   000045 235100                    LDA     37,,PR0
         4 012776   000076 115007                    CMPA    62,DL
         4 012777   013006 601000 4                  TNZ     s:22428

     2744    22404    3   THEN DO;

     2745    22405        /*E* ERROR: ASD-E$MAX_NUM_ESCAPES-C
     2746    22406           MESSAGE: The maximum number of graphic escape function is already defined.
     2747    22407           MESSAGE1: To add this one, another must be 'UNSUPPORTED' to open a space.
     2748    22408           MESSAGE2: The maximum number of supported graphic escape functions is 63.
     2749    22409        */
     2750    22410           %SCREAM (ERR#=E$MAX_NUM_ESCAPES, LEVEL=ERROR, MID='D');

  22422  4 013000   000207 630400 5                  EPPR0   135
         4 013001   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 013002   000000 701000 xent               TSX1    ASH$ERROR
         4 013003   000000 011000                    NOP     0

     2751    22425    3      RETURN;

  22425  4 013004   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:444  
         4 013005   000001 702211                    TSX2  ! 1,X1

     2752    22426    3      END;
     2753    22427
     2754    22428    2   IF (GRA$->GRA$REC.NUM_ESCAPES = 0)

  22428  4 013006   000000 115003                    CMPA    0,DU
         4 013007   013021 601000 4                  TNZ     s:22436

     2755    22429    3   THEN DO; /* Special case to insert the first element */

     2756    22430    3      GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES + 1;

  22430  4 013010   000001 035007                    ADLA    1,DL
         4 013011   000045 755100                    STA     37,,PR0

     2757    22431    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (0) = VAL;

  22431  4 013012   200020 720100                    LXL0    VAL,,AUTO
         4 013013   000046 740100                    STX0    38,,PR0

     2758    22432    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (0) = OP;

  22432  4 013014   200017 236100                    LDQ     OP,,AUTO
         4 013015   000011 736000                    QLS     9
         4 013016   000046 552110                    STBQ    38,'10'O,PR0

     2759    22433    3      RETURN;

  22433  4 013017   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 013020   000001 702211                    TSX2  ! 1,X1

     2760    22434    3      END;
     2761    22435
     2762    22436    2   IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (GRA$->GRA$REC.NUM_ESCAPES - 1)

  22436  4 013021   000045 720100                    LXL0    37,,PR0
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:445  
         4 013022   000045 236110                    LDQ     37,X0,PR0
         4 013023   000022 772000                    QRL     18
         4 013024   200020 116100                    CMPQ    VAL,,AUTO
         4 013025   013043 603000 4                  TRC     s:22446

     2763    22437    2        < VAL)
     2764    22438    3   THEN DO; /* Special case to go fast for ascending order insertion */

     2765    22439    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (GRA$->GRA$REC.NUM_ESCAPES) = VAL;

  22439  4 013026   200020 721100                    LXL1    VAL,,AUTO
         4 013027   000046 741110                    STX1    38,X0,PR0

     2766    22440    3      GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (GRA$->GRA$REC.NUM_ESCAPES) = OP;

  22440  4 013030   000045 720100                    LXL0    37,,PR0
         4 013031   200017 236100                    LDQ     OP,,AUTO
         4 013032   000011 736000                    QLS     9
         4 013033   000046 676110                    ERQ     38,X0,PR0
         4 013034   777000 376007                    ANQ     -512,DL
         4 013035   000046 656110                    ERSQ    38,X0,PR0

     2767    22441    3      GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES + 1;

  22441  4 013036   000045 235100                    LDA     37,,PR0
         4 013037   000001 035007                    ADLA    1,DL
         4 013040   000045 755100                    STA     37,,PR0

     2768    22442    3      RETURN;

  22442  4 013041   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 013042   000001 702211                    TSX2  ! 1,X1

     2769    22443    3      END;
     2770    22444
     2771    22445        /* We have to insert this element, and keep the list ordered */
     2772    22446    3   DO L = 0 TO (GRA$->GRA$REC.NUM_ESCAPES - 1);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:446  

  22446  4 013043   200016 450100                    STZ     L,,AUTO
         4 013044   013125 710000 4                  TRA     s:22465+3

     2773    22447    3      IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) = VAL)

  22447  4 013045   000041 470400 2                  LDP0    GRA$
         4 013046   200016 720100                    LXL0    L,,AUTO
         4 013047   000046 236110                    LDQ     38,X0,PR0
         4 013050   000022 772000                    QRL     18
         4 013051   200020 116100                    CMPQ    VAL,,AUTO
         4 013052   013062 601000 4                  TNZ     s:22452

     2774    22448    4      THEN DO;

     2775    22449    4         GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (L) = OP;

  22449  4 013053   200017 236100                    LDQ     OP,,AUTO
         4 013054   000011 736000                    QLS     9
         4 013055   000046 676110                    ERQ     38,X0,PR0
         4 013056   777000 376007                    ANQ     -512,DL
         4 013057   000046 656110                    ERSQ    38,X0,PR0

     2776    22450    4         RETURN;

  22450  4 013060   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 013061   000001 702211                    TSX2  ! 1,X1

     2777    22451    4         END;
     2778    22452    3      IF (GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) > VAL)

  22452  4 013062   013122 602000 4                  TNC     s:22465
         4 013063   013122 600000 4                  TZE     s:22465

     2779    22453    4      THEN DO;

     2780    22454    5         DO K = GRA$->GRA$REC.NUM_ESCAPES DOWNTO (L+1);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:447  

  22454  4 013064   000045 235100                    LDA     37,,PR0
         4 013065   200015 755100                    STA     K,,AUTO
         4 013066   013102 710000 4                  TRA     s:22459+3

     2781    22455    5            GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (K) =

  22455  4 013067   000041 470400 2                  LDP0    GRA$
         4 013070   200015 720100                    LXL0    K,,AUTO
         4 013071   000045 221110                    LDX1    37,X0,PR0
         4 013072   000046 741110                    STX1    38,X0,PR0

     2782    22456    5                 GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (K - 1);
     2783    22457    5            GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (K) =

  22457  4 013073   000045 236110                    LDQ     37,X0,PR0
         4 013074   000046 676110                    ERQ     38,X0,PR0
         4 013075   777000 376007                    ANQ     -512,DL
         4 013076   000046 656110                    ERSQ    38,X0,PR0

     2784    22458    5                 GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (K - 1);
     2785    22459    5            END;

  22459  4 013077   200015 235100                    LDA     K,,AUTO
         4 013100   000001 135007                    SBLA    1,DL
         4 013101   200015 755100                    STA     K,,AUTO
         4 013102   200016 236100                    LDQ     L,,AUTO
         4 013103   200015 116100                    CMPQ    K,,AUTO
         4 013104   013067 602000 4                  TNC     s:22455

     2786    22460    4         GRA$->GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION (L) = VAL;

  22460  4 013105   200020 720100                    LXL0    VAL,,AUTO
         4 013106   000046 740106                    STX0    38,QL,PR0

     2787    22461    4         GRA$->GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT (L) = OP;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:448  
  22461  4 013107   200016 720100                    LXL0    L,,AUTO
         4 013110   200017 236100                    LDQ     OP,,AUTO
         4 013111   000011 736000                    QLS     9
         4 013112   000046 676110                    ERQ     38,X0,PR0
         4 013113   777000 376007                    ANQ     -512,DL
         4 013114   000046 656110                    ERSQ    38,X0,PR0

     2788    22462    4         GRA$->GRA$REC.NUM_ESCAPES = GRA$->GRA$REC.NUM_ESCAPES + 1;

  22462  4 013115   000045 235100                    LDA     37,,PR0
         4 013116   000001 035007                    ADLA    1,DL
         4 013117   000045 755100                    STA     37,,PR0

     2789    22463    4         RETURN;

  22463  4 013120   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 013121   000001 702211                    TSX2  ! 1,X1

     2790    22464    4         END;
     2791    22465    3      END; /* Do loop for insertion */

  22465  4 013122   200016 235100                    LDA     L,,AUTO
         4 013123   000001 035007                    ADLA    1,DL
         4 013124   200016 755100                    STA     L,,AUTO
         4 013125   200016 236100                    LDQ     L,,AUTO
         4 013126   000045 116100                    CMPQ    37,,PR0
         4 013127   013045 602000 4                  TNC     s:22447

     2792    22466    2   RETURN;

  22466  4 013130   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 013131   000001 702211                    TSX2  ! 1,X1

     2793    22467    2   END PUT_GR_ESCAPE;
     2794    22468        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:449  
     2795    22469    1   DO_FUNKEY_DEFS: PROC ALTRET;

  22469  4 013132   200154 741300       DO_FUNKEY_D* STX1  ! PRO_TYPE+1,,AUTO

     2796    22470        /* This routine is the driver for handling (function) key definitions.
     2797    22471           It sets the prompt, does the reading and parsing of input, and
     2798    22472           handles removing and adding of key definitions.  It calls
     2799    22473           FIGURE_BYTE2, FIND_FKEY, MAYBE_REMOVE_INTRO, ADD_INTRO,
     2800    22474           REMOVE_THIS_FUNKEY, ADD_ANOTHER_FUNKEY, and PUT_IN_FUNKEY.  It
     2801    22475           also keeps room for one key definition even if none are defined.
     2802    22476           It keeps the intro list pared to only intros that are currently
     2803    22477           used.  If a key is defined, just its intro and character being
     2804    22478           introduced are updated.  Someday the list of keys should be sorted.
     2805    22479        */
     2806    22480
     2807    22481        /*  Auto data  */
     2808    22482
     2809    22483    2   DCL BYTE2 UBIN WORD ALIGNED;
     2810    22484    2   DCL CODE UBIN WORD ALIGNED;
     2811    22485    2   DCL CONTINUE BIT (1) ALIGNED;
     2812    22486    2   DCL FKEY UBIN WORD ALIGNED;
     2813    22487    2   DCL FUNKEY_DEF_SIZE UBIN STATIC INIT (SIZEC (KL$FUNKEY.FCNKEY(0)));
     2814    22488    2   DCL I UBIN WORD ALIGNED;
     2815    22489    2   DCL IDENT UBIN ALIGNED;
     2816    22490    2   DCL INTRO_NUM UBIN WORD ALIGNED;
     2817    22491    2   DCL K UBIN WORD ALIGNED;
     2818    22492    2   DCL MORE BIT (1) ALIGNED;
     2819    22493    2   DCL NUM_NODES UBIN WORD ALIGNED;
     2820    22494    2   DCL POSITION UBIN WORD ALIGNED;
     2821    22495    2   DCL VAL1  SBIN ALIGNED;
     2822    22496    2   DCL VAL2  SBIN ALIGNED;
     2823    22497    2   DCL ACTION_FLG BIT(1) ALIGNED; /* '1'b if add, '0'b if del */
     2824    22498
     2825    22499    2   MORE = '1'B;

  22499  4 013133   400000 236003                    LDQ     -131072,DU
         4 013134   200165 756100                    STQ     MORE,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:450  

     2826    22500    2   CALL ASB$SET_PROMPT ( %PROMPT_SUB );

  22500  4 013135   000147 630400 5                  EPPR0   103
         4 013136   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 013137   000000 701000 xent               TSX1    ASB$SET_PROMPT
         4 013140   000000 011000                    NOP     0

     2827    22501    2   P_PCB.ROOT$ = ADDR (FUNKEY_CMD);

  22501  4 013141   000210 236000 5                  LDQ     136
         4 013142   000001 756000 xsym               STQ     P_PCB+1

  22501  4 013143                       FUNC_OPTS_L* null
     2828    22502    2   FUNC_OPTS_LOOP: ;
     2829    22503    3   DO WHILE (MORE);

  22503  4 013143   200165 234100                    SZN     MORE,,AUTO
         4 013144   013661 605000 4                  TPL     s:22722

     2830    22504    3      CALL ASB$READ_SI (IN_BUF, ARS);

  22504  4 013145   200021 630500                    EPPR0   ARS,,AUTO
         4 013146   200221 450500                    STP0    PINC_INC+2,,AUTO
         4 013147   000026 236000 5                  LDQ     22
         4 013150   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 013151   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 013152   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 013153   000000 701000 xent               TSX1    ASB$READ_SI
         4 013154   000000 011000                    NOP     0

     2831    22505    3      P_PCB.NCHARS = ARS;

  22505  4 013155   200021 235100                    LDA     ARS,,AUTO
         4 013156   000011 755000 xsym               STA     P_PCB+9

     2832    22506    3      CALL X$PARSE (P_PCB)
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:451  

  22506  4 013157   000002 630400 5                  EPPR0   2
         4 013160   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 013161   000000 701000 xent               TSX1    X$PARSE
         4 013162   013164 702000 4                  TSX2    s:22508
         4 013163   013171 710000 4                  TRA     s:22512

     2833    22507    4      WHENALTRETURN DO;

     2834    22508    4         CALL ASH$ERROR (P_PCB.ERROR);

  22508  4 013164   000023 630400 5                  EPPR0   19
         4 013165   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 013166   000000 701000 xent               TSX1    ASH$ERROR
         4 013167   000000 011000                    NOP     0

     2835    22509    4         GOTO FUNC_OPTS_LOOP;

  22509  4 013170   013143 710000 4                  TRA     FUNC_OPTS_LOOP

     2836    22510    4         END;
     2837    22511
     2838    22512    4      DO K = 0 TO P_PCB.OUT$->P$NODE.SUBNODES - 1;

  22512  4 013171   200164 450100                    STZ     K,,AUTO
         4 013172   013651 710000 4                  TRA     s:22720+3

     2839    22513    4         NODE$ = P_PCB.OUT$->P$NODE.SUBLK$(K) ;

  22513  4 013173   000003 470400 xsym               LDP0    P_PCB+3
         4 013174   200164 720100                    LXL0    K,,AUTO
         4 013175   000003 236110                    LDQ     3,X0,PR0
         4 013176   000000 756000 xsym               STQ     NODE$

     2840    22514    4         NUM_NODES = P$NODE.SUBNODES ;

  22514  4 013177   000000 471400 xsym               LDP1    NODE$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:452  
         4 013200   100001 236100                    LDQ     1,,PR1
         4 013201   000022 772000                    QRL     18
         4 013202   200166 756100                    STQ     NUM_NODES,,AUTO

     2841    22515
     2842    22516    4         IF (NUM_NODES > 0)

  22516  4 013203   013247 600000 4                  TZE     s:22539

     2843    22517    5         THEN DO;

     2844    22518    5            BLK$ = P$NODE.SUBLK$(0);

  22518  4 013204   100003 236100                    LDQ     3,,PR1
         4 013205   200004 756100                    STQ     BLK$,,AUTO

     2845    22519    5            IF (OUT$SYM.CODE = %F_HEX_CHAR)

  22519  4 013206   200004 473500                    LDP3    BLK$,,AUTO
         4 013207   300000 721100                    LXL1    0,,PR3
         4 013210   000416 101003                    CMPX1   270,DU
         4 013211   013226 601000 4                  TNZ     s:22524

     2846    22520    6            THEN DO;

     2847    22521    6               BLK$ = P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);

  22521  4 013212   100003 474500                    LDP4    3,,PR1
         4 013213   400003 475500                    LDP5    3,,PR4
         4 013214   500003 236100                    LDQ     3,,PR5
         4 013215   200004 756100                    STQ     BLK$,,AUTO

     2848    22522    6               CALL ASD$HEX2OCT (OUT$SYM, FKEY);

  22522  4 013216   200160 633500                    EPPR3   FKEY,,AUTO
         4 013217   200221 453500                    STP3    PINC_INC+2,,AUTO
         4 013220   200220 756100                    STQ     PINC_INC+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:453  
         4 013221   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 013222   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 013223   000000 701000 xent               TSX1    ASD$HEX2OCT
         4 013224   000000 011000                    NOP     0

     2849    22523    6               END;

  22523  4 013225   013247 710000 4                  TRA     s:22539

     2850    22524    5            ELSE IF (OUT$SYM.CODE = %F_SINGLE_CHAR)

  22524  4 013226   000413 101003                    CMPX1   267,DU
         4 013227   013237 601000 4                  TNZ     s:22529

     2851    22525    6               THEN DO;

     2852    22526    6                  FKEY = ASCBIN (OUT$SYM.TEXT);

  22526  4 013230   300004 236100                    LDQ     4,,PR3
         4 013231   000033 772000                    QRL     27
         4 013232   300004 236100                    LDQ     4,,PR3
         4 013233   000022 772000                    QRL     18
         4 013234   000777 376007                    ANQ     511,DL
         4 013235   200160 756100                    STQ     FKEY,,AUTO

     2853    22527    6                  END;

  22527  4 013236   013247 710000 4                  TRA     s:22539

     2854    22528    6               ELSE DO;

     2855    22529    6                  IF (OUT$SYM.CODE = %KV_INPFNCKEY_BREAK)

  22529  4 013237   000401 101003                    CMPX1   257,DU
         4 013240   013244 601000 4                  TNZ     s:22534

     2856    22530    7                  THEN DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:454  

     2857    22531    7                     FKEY = 1; /* Special for break */

  22531  4 013241   000001 235007                    LDA     1,DL
         4 013242   200160 755100                    STA     FKEY,,AUTO

     2858    22532    7                     END;

  22532  4 013243   013247 710000 4                  TRA     s:22539

     2859    22533    7                  ELSE DO;

     2860    22534    7                     FKEY = OUT$SYM.CODE;

  22534  4 013244   300000 236100                    LDQ     0,,PR3
         4 013245   777777 376007                    ANQ     -1,DL
         4 013246   200160 756100                    STQ     FKEY,,AUTO

     2861    22535    7                     END;

     2862    22536    6                  END;

     2863    22537    5            END;

     2864    22538
     2865    22539    4         CODE = P$NODE.CODE ;

  22539  4 013247   000000 470400 xsym               LDP0    NODE$
         4 013250   000000 236100                    LDQ     0,,PR0
         4 013251   777777 376007                    ANQ     -1,DL
         4 013252   200156 756100                    STQ     CODE,,AUTO

     2866    22540
     2867    22541    5         DO CASE ( CODE ) ;

  22541  4 013253   000401 136007                    SBLQ    257,DL
         4 013254   000056 116007                    CMPQ    46,DL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:455  
         4 013255   013257 602006 4                  TNC     s:22541+4,QL
         4 013256   013646 710000 4                  TRA     s:22720
         4 013257   013351 710000 4                  TRA     s:22554
         4 013260   013646 710000 4                  TRA     s:22720
         4 013261   013646 710000 4                  TRA     s:22720
         4 013262   013351 710000 4                  TRA     s:22554
         4 013263   013646 710000 4                  TRA     s:22720
         4 013264   013511 710000 4                  TRA     s:22614
         4 013265   013353 710000 4                  TRA     s:22557
         4 013266   013646 710000 4                  TRA     s:22720
         4 013267   013646 710000 4                  TRA     s:22720
         4 013270   013646 710000 4                  TRA     s:22720
         4 013271   013646 710000 4                  TRA     s:22720
         4 013272   013646 710000 4                  TRA     s:22720
         4 013273   013646 710000 4                  TRA     s:22720
         4 013274   013646 710000 4                  TRA     s:22720
         4 013275   013646 710000 4                  TRA     s:22720
         4 013276   013646 710000 4                  TRA     s:22720
         4 013277   013646 710000 4                  TRA     s:22720
         4 013300   013646 710000 4                  TRA     s:22720
         4 013301   013646 710000 4                  TRA     s:22720
         4 013302   013646 710000 4                  TRA     s:22720
         4 013303   013646 710000 4                  TRA     s:22720
         4 013304   013646 710000 4                  TRA     s:22720
         4 013305   013646 710000 4                  TRA     s:22720
         4 013306   013646 710000 4                  TRA     s:22720
         4 013307   013646 710000 4                  TRA     s:22720
         4 013310   013646 710000 4                  TRA     s:22720
         4 013311   013646 710000 4                  TRA     s:22720
         4 013312   013646 710000 4                  TRA     s:22720
         4 013313   013646 710000 4                  TRA     s:22720
         4 013314   013646 710000 4                  TRA     s:22720
         4 013315   013646 710000 4                  TRA     s:22720
         4 013316   013646 710000 4                  TRA     s:22720
         4 013317   013646 710000 4                  TRA     s:22720
         4 013320   013646 710000 4                  TRA     s:22720
         4 013321   013646 710000 4                  TRA     s:22720
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:456  
         4 013322   013646 710000 4                  TRA     s:22720
         4 013323   013646 710000 4                  TRA     s:22720
         4 013324   013646 710000 4                  TRA     s:22720
         4 013325   013646 710000 4                  TRA     s:22720
         4 013326   013646 710000 4                  TRA     s:22720
         4 013327   013646 710000 4                  TRA     s:22720
         4 013330   013646 710000 4                  TRA     s:22720
         4 013331   013646 710000 4                  TRA     s:22720
         4 013332   013335 710000 4                  TRA     s:22544
         4 013333   013341 710000 4                  TRA     s:22547
         4 013334   013345 710000 4                  TRA     s:22550

     2868    22542
     2869    22543    5            CASE ( 300 /* DQUESTION_VAL */ ) ;

     2870    22544    5               CALL ASH$DQUEST;

  22544  4 013335   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 013336   000000 701000 xent               TSX1    ASH$DQUEST
         4 013337   000000 011000                    NOP     0
         4 013340   013646 710000 4                  TRA     s:22720

     2871    22545
     2872    22546    5            CASE ( 301 /* QUESTION_VAL */ ) ;

     2873    22547    5               CALL ASH$QUEST;

  22547  4 013341   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 013342   000000 701000 xent               TSX1    ASH$QUEST
         4 013343   000000 011000                    NOP     0
         4 013344   013646 710000 4                  TRA     s:22720

     2874    22548
     2875    22549    5            CASE ( 302 /* HELP_VAL */ ) ;

     2876    22550    5               CALL ASH$HELP ;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:457  
  22550  4 013345   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 013346   000000 701000 xent               TSX1    ASH$HELP
         4 013347   000000 011000                    NOP     0
         4 013350   013646 710000 4                  TRA     s:22720

     2877    22551
     2878    22552    5            CASE ( %F_END ,

     2879    22553    5                    %F_BLANK_LINE ) ;
     2880    22554    5               MORE = '0'B;

  22554  4 013351   200165 450100                    STZ     MORE,,AUTO
         4 013352   013646 710000 4                  TRA     s:22720

     2881    22555
     2882    22556    5            CASE ( %FUNKEY_REM);

     2883    22557    5               IF (KL$FUNKEY.NUM_DEFS ~= 0) THEN

  22557  4 013353   000050 471400 2                  LDP1    FUNKEY$
         4 013354   000100 100500                    MLR     fill='000'O
         4 013355   100002 400002                    ADSC9   2,,PR1                   cn=2,n=2
         4 013356   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013357   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013360   000022 732000                    QRS     18
         4 013361   000000 116003                    CMPQ    0,DU
         4 013362   013646 600000 4                  TZE     s:22720

     2884    22558    6               DO;

     2885    22559    6                  IF (P$NODE.SUBLK$(0)->P$NODE.CODE = %FUNKEY_REM_ALL)

  22559  4 013363   000003 473500                    LDP3    3,,PR0
         4 013364   300000 720100                    LXL0    0,,PR3
         4 013365   000415 100003                    CMPX0   269,DU
         4 013366   013431 601000 4                  TNZ     s:22570

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:458  
     2886    22560    7                  THEN DO; /* Remove all defs */

     2887    22561    8                     DO I = KL$FUNKEY.NUM_DEFS - 1 DOWNTO 1; /* Never del all */

  22561  4 013367   000100 100500                    MLR     fill='000'O
         4 013370   100002 400002                    ADSC9   2,,PR1                   cn=2,n=2
         4 013371   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013372   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013373   000022 732000                    QRS     18
         4 013374   000001 136007                    SBLQ    1,DL
         4 013375   200161 756100                    STQ     I,,AUTO
         4 013376   013412 710000 4                  TRA     s:22564+3

     2888    22562    8                        CALL MAYBE_REMOVE_INTRO (I);

  22562  4 013377   200161 630500                    EPPR0   I,,AUTO
         4 013400   200175 450500                    STP0    SAVEIDX+2,,AUTO
         4 013401   014405 701000 4                  TSX1    MAYBE_REMOVE_INTRO
         4 013402   000000 011000                    NOP     0

     2889    22563    8                        CALL REMOVE_THIS_FUNKEY (I);

  22563  4 013403   200161 630500                    EPPR0   I,,AUTO
         4 013404   200175 450500                    STP0    SAVEIDX+2,,AUTO
         4 013405   013732 701000 4                  TSX1    REMOVE_THIS_FUNKEY
         4 013406   000000 011000                    NOP     0

     2890    22564    8                        END;

  22564  4 013407   200161 235100                    LDA     I,,AUTO
         4 013410   000001 135007                    SBLA    1,DL
         4 013411   200161 755100                    STA     I,,AUTO
         4 013412   200161 235100                    LDA     I,,AUTO
         4 013413   013377 601000 4                  TNZ     s:22562

     2891    22565    7                     KL$FUNKEY.NUM_DEFS = 1; /* Fake out remove code */

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:459  
  22565  4 013414   000050 470400 2                  LDP0    FUNKEY$
         4 013415   000100 101400                    MRL     fill='000'O
         4 013416   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
         4 013417   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2

     2892    22566    7                     CALL MAYBE_REMOVE_INTRO (0);

  22566  4 013420   000134 236000 5                  LDQ     92
         4 013421   200175 756100                    STQ     SAVEIDX+2,,AUTO
         4 013422   014405 701000 4                  TSX1    MAYBE_REMOVE_INTRO
         4 013423   000000 011000                    NOP     0

     2893    22567    7                     KL$FUNKEY.NUM_DEFS = 0; /* Logically remove last */

  22567  4 013424   000050 470400 2                  LDP0    FUNKEY$
         4 013425   000100 101400                    MRL     fill='000'O
         4 013426   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         4 013427   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2

     2894    22568    7                     END;

  22568  4 013430   013646 710000 4                  TRA     s:22720

     2895    22569    7                  ELSE DO;

     2896    22570    7                     ACTION_FLG = '0'B;

  22570  4 013431   200172 450100                    STZ     ACTION_FLG,,AUTO

     2897    22571    7                     CALL FIGURE_BYTE2 ALTRET (FUNC_OPTS_LOOP);

  22571  4 013432   014520 701000 4                  TSX1    FIGURE_BYTE2
         4 013433   013143 702000 4                  TSX2    FUNC_OPTS_LOOP

     2898    22572    7                     I = 1;

  22572  4 013434   000001 235007                    LDA     1,DL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:460  
         4 013435   200161 755100                    STA     I,,AUTO

     2899    22573    7                     CONTINUE = AS_TRUE;

  22573  4 013436   000000 236000 xsym               LDQ     AS_TRUE
         4 013437   400000 376003                    ANQ     -131072,DU
         4 013440   200157 756100                    STQ     CONTINUE,,AUTO

     2900    22574    8                     DO WHILE CONTINUE;

  22574  4 013441   200157 234100                    SZN     CONTINUE,,AUTO
         4 013442   013646 605000 4                  TPL     s:22720

     2901    22575    8                        CALL FIND_FKEY

  22575  4 013443   013663 701000 4                  TSX1    FIND_FKEY
         4 013444   013474 702000 4                  TSX2    s:22585

     2902    22576    9                        WHENRETURN DO; /* Found the one to delete */

     2903    22577    9                           I = 2;

  22577  4 013445   000002 235007                    LDA     2,DL
         4 013446   200161 755100                    STA     I,,AUTO

     2904    22578    9                           CALL MAYBE_REMOVE_INTRO (POSITION);

  22578  4 013447   200167 630500                    EPPR0   POSITION,,AUTO
         4 013450   200175 450500                    STP0    SAVEIDX+2,,AUTO
         4 013451   014405 701000 4                  TSX1    MAYBE_REMOVE_INTRO
         4 013452   000000 011000                    NOP     0

     2905    22579    9                           IF (KL$FUNKEY.NUM_DEFS = 1) THEN

  22579  4 013453   000050 470400 2                  LDP0    FUNKEY$
         4 013454   000100 100500                    MLR     fill='000'O
         4 013455   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:461  
         4 013456   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013457   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013460   000022 732000                    QRS     18
         4 013461   000001 116007                    CMPQ    1,DL
         4 013462   013467 601000 4                  TNZ     s:22582

     2906    22580    9                              KL$FUNKEY.NUM_DEFS = 0;

  22580  4 013463   000100 101400                    MRL     fill='000'O
         4 013464   000002 000004 xsym               ADSC9   B_VECTNIL+2              cn=0,n=4
         4 013465   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 013466   013473 710000 4                  TRA     s:22583

     2907    22581    9                           ELSE
     2908    22582    9                              CALL REMOVE_THIS_FUNKEY (POSITION);

  22582  4 013467   200167 631500                    EPPR1   POSITION,,AUTO
         4 013470   200175 451500                    STP1    SAVEIDX+2,,AUTO
         4 013471   013732 701000 4                  TSX1    REMOVE_THIS_FUNKEY
         4 013472   000000 011000                    NOP     0

     2909    22583    9                           END;

  22583  4 013473   013506 710000 4                  TRA     s:22608

     2910    22584    9                        WHENALTRETURN DO;

     2911    22585    9                           IF (I = 1) THEN

  22585  4 013474   200161 235100                    LDA     I,,AUTO
         4 013475   000001 115007                    CMPA    1,DL
         4 013476   013503 601000 4                  TNZ     s:22606

     2912    22586           /*E*  ERROR: ASD-E$FUNKEY_NOT_DEFT-C
     2913    22587                 MESSAGE0: That key definition doesn't exist.
     2914    22588                 MESSAGE1: You tried to remove an undefined key.
     2915    22589                 MESSAGE2: A key must be defined before it can be removed.
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:462  
     2916    22590           */
     2917    22591                                   %SCREAM (ERR#=E$FUNKEY_NOT_DEFT, LEVEL=ERROR, MID ='D');

  22603  4 013477   000211 630400 5                  EPPR0   137
         4 013500   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 013501   000000 701000 xent               TSX1    ASH$ERROR
         4 013502   000000 011000                    NOP     0

     2918    22606    9                           CONTINUE = AS_FALSE;

  22606  4 013503   000000 236000 xsym               LDQ     AS_FALSE
         4 013504   400000 376003                    ANQ     -131072,DU
         4 013505   200157 756100                    STQ     CONTINUE,,AUTO

     2919    22607    9                           END;

     2920    22608    8                        END; /*  Do while continue */

  22608  4 013506   200157 234100                    SZN     CONTINUE,,AUTO
         4 013507   013443 604000 4                  TMI     s:22575

     2921    22609    7                     END;

     2922    22610    6                  END;

  22610  4 013510   013646 710000 4                  TRA     s:22720

     2923    22611
     2924    22612    5            CASE ( %FUNKEY_DEF);

     2925    22613
     2926    22614    5               INTRO_NUM = %KV_INPFNCTYP_SPCCHR; /* Default-no introducer */

  22614  4 013511   000002 235007                    LDA     2,DL
         4 013512   200163 755100                    STA     INTRO_NUM,,AUTO

     2927    22615    5               ACTION_FLG = '1'B;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:463  

  22615  4 013513   400000 236003                    LDQ     -131072,DU
         4 013514   200172 756100                    STQ     ACTION_FLG,,AUTO

     2928    22616    5               CALL FIGURE_BYTE2

  22616  4 013515   014520 701000 4                  TSX1    FIGURE_BYTE2
         4 013516   013645 702000 4                  TSX2    s:22717

     2929    22617    6               WHENRETURN DO;   /* from FIGURE_BYTE2 */

     2930    22618    6                  CALL GET_IDENTIFIER;

  22618  4 013517   015070 701000 4                  TSX1    GET_IDENTIFIER
         4 013520   000000 011000                    NOP     0

     2931    22619    6                  CALL GET_INTRODUCER;

  22619  4 013521   015110 701000 4                  TSX1    GET_INTRODUCER
         4 013522   000000 011000                    NOP     0

     2932    22620    6                  CALL FIND_FUNCTION_KEY

  22620  4 013523   015166 701000 4                  TSX1    FIND_FUNCTION_KEY
         4 013524   013554 702000 4                  TSX2    s:22643

     2933    22621    7                  WHENRETURN DO;    /* from FIND_FUNCTION_KEY */

     2934    22622                                         /* replace the function key
     2935    22623                                            at position.  No current function
     2936    22624                                            keys defined is treated here as
     2937    22625                                            a special case.  */
     2938    22626    7                     CALL MAYBE_REMOVE_INTRO (POSITION);

  22626  4 013525   200167 630500                    EPPR0   POSITION,,AUTO
         4 013526   200175 450500                    STP0    SAVEIDX+2,,AUTO
         4 013527   014405 701000 4                  TSX1    MAYBE_REMOVE_INTRO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:464  
         4 013530   000000 011000                    NOP     0

     2939    22627    7                     CALL ADD_INTRO   /* returns in INTRO_NUM the

  22627  4 013531   014236 701000 4                  TSX1    ADD_INTRO
         4 013532   013553 702000 4                  TSX2    s:22641

     2940    22628                                              index of the header introducer
     2941    22629                                              where this current definition
     2942    22630                                              was put.  INTRO_NUM will be
     2943    22631                                              set to 0, 1, or 2, where 2
     2944    22632                                              means this function key does
     2945    22633                                              not use an introducer.  */
     2946    22634    8                     WHENRETURN DO;   /* from ADD_INTRO */

     2947    22635    8                        CALL PUT_IN_FUNKEY (POSITION);

  22635  4 013533   200167 630500                    EPPR0   POSITION,,AUTO
         4 013534   200175 450500                    STP0    SAVEIDX+2,,AUTO
         4 013535   014354 701000 4                  TSX1    PUT_IN_FUNKEY
         4 013536   000000 011000                    NOP     0

     2948    22636    8                        IF (KL$FUNKEY.NUM_DEFS = 0) THEN

  22636  4 013537   000050 470400 2                  LDP0    FUNKEY$
         4 013540   000100 100500                    MLR     fill='000'O
         4 013541   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 013542   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013543   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013544   000022 732000                    QRS     18
         4 013545   000000 116003                    CMPQ    0,DU
         4 013546   013552 601000 4                  TNZ     s:22638

     2949    22637    8                           KL$FUNKEY.NUM_DEFS = 1;

  22637  4 013547   000100 101400                    MRL     fill='000'O
         4 013550   000003 000004 xsym               ADSC9   B_VECTNIL+3              cn=0,n=4
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:465  
         4 013551   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2

     2950    22638    8                        END;          /* return from ADD_INTRO */

  22638  4 013552   013553 710000 4                  TRA     s:22641

     2951    22639    8                     WHENALTRETURN DO;  /* from ADD_INTRO */

     2952    22640    8                        END;           /* altreturn from ADD_INTRO */

     2953    22641    7                     END; /* return from FIND_FUNCTION_KEY */

  22641  4 013553   013645 710000 4                  TRA     s:22717

     2954    22642    7                  WHENALTRETURN DO;   /* from FIND_FUNCTION_KEY */

     2955    22643    7                     I = 0;

  22643  4 013554   200161 450100                    STZ     I,,AUTO

     2956    22644    7                     IF FUNKEYSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL THEN

  22644  4 013555   000105 470400 2                  LDP0    FUNKEYSZ$
         4 013556   003100 061500                    CSR     bolr='003'O
         4 013557   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 013560   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 013561   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013562   000377 116007                    CMPQ    255,DL
         4 013563   013575 600000 4                  TZE     s:22649

     2957    22645    7                        IF FUNKEYSZ$->PP$STRCT.SIZE + FUNKEY_DEF_SIZE > 256 THEN

  22645  4 013564   003100 061500                    CSR     bolr='003'O
         4 013565   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 013566   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 013567   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013570   000110 036000 2                  ADLQ    FUNKEY_DEF_SIZE
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:466  
         4 013571   000401 116007                    CMPQ    257,DL
         4 013572   013575 602000 4                  TNC     s:22649

     2958    22646                            /* We will need a big header for this add */
     2959    22647                            /* That will increase the profile an additional 2 bytes  */
     2960    22648    7                           I = 2;

  22648  4 013573   000002 235007                    LDA     2,DL
         4 013574   200161 755100                    STA     I,,AUTO

     2961    22649    7                     IF ((P_ARS + FUNKEY_DEF_SIZE + I) > 1024 /* AS_PRO_BUF_SIZEC */)

  22649  4 013575   000106 236000 2                  LDQ     P_ARS
         4 013576   000110 036000 2                  ADLQ    FUNKEY_DEF_SIZE
         4 013577   200161 036100                    ADLQ    I,,AUTO
         4 013600   002001 116007                    CMPQ    1025,DL
         4 013601   013624 602000 4                  TNC     s:22708

     2962    22650    8                     THEN DO;    /* profile rec size exceeded */

     2963    22651           /*E*  ERROR:    ASD-E$PROSIZE_MAXED_OUT-C
     2964    22652                 MESSAGE: Profile has reached maximum size, key definition ignored.
     2965    22653                 MESSAGE1: The addition of this definition would cause the
     2966    22654                           profile to exceed its maximum size allowance.
     2967    22655                 MESSAGE2: The maximum size for a profile is 1024 characters.
     2968    22656                           This key definition adds %U1 characters to the profile.
     2969    22657                           Adding this key definition would exceed the profiles
     2970    22658                           maximum size allowance.
     2971    22659           */
     2972    22660    8                        I = I + FUNKEY_DEF_SIZE;

  22660  4 013602   200161 236100                    LDQ     I,,AUTO
         4 013603   000110 036000 2                  ADLQ    FUNKEY_DEF_SIZE
         4 013604   200161 756100                    STQ     I,,AUTO

     2973    22661                             %NUMBER ( NUM1 = I);
             22669    8         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, I );
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:467  

  22669  4 013605   200161 631500                    EPPR1   I,,AUTO
         4 013606   200223 451500                    STP1    PINC_INC+4,,AUTO
         4 013607   000160 236000 5                  LDQ     112
         4 013610   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 013611   000162 237000 5                  LDAQ    114
         4 013612   200220 757100                    STAQ    PINC_INC+1,,AUTO
         4 013613   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 013614   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 013615   000000 701000 xent               TSX1    ASB$BINCHAR
         4 013616   000000 011000                    NOP     0

     2974    22691                             %SCREAM (ERR#=E$PROSIZE_MAXED_OUT, LEVEL=ERROR, MID='D');

  22703  4 013617   000212 630400 5                  EPPR0   138
         4 013620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 013621   000000 701000 xent               TSX1    ASH$ERROR
         4 013622   000000 011000                    NOP     0

     2975    22706    8                        END; /* if profile rec size exceeded */

  22706  4 013623   013645 710000 4                  TRA     s:22717

     2976    22707    8                     ELSE DO;   /* profile rec size not exceeded */

     2977    22708    8                        CALL ADD_INTRO

  22708  4 013624   014236 701000 4                  TSX1    ADD_INTRO
         4 013625   013645 702000 4                  TSX2    s:22717

     2978    22709    9                        WHENRETURN DO;  /* from ADD_INTRO */

     2979    22710    9                           CALL ADD_ANOTHER_FUNKEY;

  22710  4 013626   014071 701000 4                  TSX1    ADD_ANOTHER_FUNKEY
         4 013627   000000 011000                    NOP     0

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:468  
     2980    22711    9                           CALL PUT_IN_FUNKEY (KL$FUNKEY.NUM_DEFS - 1);

  22711  4 013630   000050 470400 2                  LDP0    FUNKEY$
         4 013631   000100 100500                    MLR     fill='000'O
         4 013632   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 013633   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013634   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013635   000022 732000                    QRS     18
         4 013636   000001 136007                    SBLQ    1,DL
         4 013637   200226 756100                    STQ     PINC_INC+7,,AUTO
         4 013640   200226 631500                    EPPR1   PINC_INC+7,,AUTO
         4 013641   200175 451500                    STP1    SAVEIDX+2,,AUTO
         4 013642   014354 701000 4                  TSX1    PUT_IN_FUNKEY
         4 013643   000000 011000                    NOP     0

     2981    22712    9                           END;         /* return from ADD_INTRO */

  22712  4 013644   013645 710000 4                  TRA     s:22717

     2982    22713    9                        WHENALTRETURN DO;  /* from ADD_INTRO */

     2983    22714    9                           END;            /* altreturn from ADD_INTRO */

     2984    22715    8                        END;   /* profile rec size not exceeded */

     2985    22716    7                     END; /* altreturn of FIND_FUNCTION_KEY */

     2986    22717    6                  END; /* return from FIGURE_BYTE2 */

  22717  4 013645   013646 710000 4                  TRA     s:22720

     2987    22718    5            CASE ( ELSE );

     2988    22719    5            END; /* Do case */

     2989    22720    4         END; /* Do i = 0 to #COMMANDS */

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:469  
  22720  4 013646   200164 235100                    LDA     K,,AUTO
         4 013647   000001 035007                    ADLA    1,DL
         4 013650   200164 755100                    STA     K,,AUTO
         4 013651   000003 470400 xsym               LDP0    P_PCB+3
         4 013652   000001 236100                    LDQ     1,,PR0
         4 013653   000022 772000                    QRL     18
         4 013654   200164 116100                    CMPQ    K,,AUTO
         4 013655   013657 600000 4                  TZE     s:22721
         4 013656   013173 603000 4                  TRC     s:22513

     2990    22721    3      END; /* Do while (more) */

  22721  4 013657   200165 234100                    SZN     MORE,,AUTO
         4 013660   013145 604000 4                  TMI     s:22504

     2991    22722    2   RETURN;

  22722  4 013661   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 013662   000001 702211                    TSX2  ! 1,X1

     2992    22723        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:470  
     2993    22724    2   FIND_FKEY: PROC ALTRET;

  22724  4 013663   200174 741300       FIND_FKEY    STX1  ! SAVEIDX+1,,AUTO

     2994    22725        /* FIND_FKEY goes through all the key defs looking to see if the one
     2995    22726           being defined has been so in the past, if it has been- the external
     2996    22727           variable position is set with the keys position in the array and
     2997    22728           the routine returns.  If the key doesn't exist, the routine will
     2998    22729           altreturn.  It checks the key value (BYTE3) and type (BYTE2).
     2999    22730        */
     3000    22731    3   DCL I UBIN;
     3001    22732    3   IF (KL$FUNKEY.NUM_DEFS = 0)

  22732  4 013664   000050 470400 2                  LDP0    FUNKEY$
         4 013665   000100 100500                    MLR     fill='000'O
         4 013666   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 013667   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013670   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013671   000022 732000                    QRS     18
         4 013672   000000 116003                    CMPQ    0,DU
         4 013673   013675 601000 4                  TNZ     s:22737

     3002    22733    4   THEN DO;

     3003    22734    4      ALTRETURN;

  22734  4 013674   000000 702211                    TSX2  ! 0,X1

     3004    22735    4      END;
     3005    22736
     3006    22737    4   DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;

  22737  4 013675   200175 450100                    STZ     I,,AUTO
         4 013676   013717 710000 4                  TRA     s:22743+3

     3007    22738    4      IF (KL$FUNKEY.FCNKEY.FCN_BYTE3(I) = FKEY)

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:471  
  22738  4 013677   200175 235100                    LDA     I,,AUTO
         4 013700   000002 735000                    ALS     2
         4 013701   000050 470400 2                  LDP0    FUNKEY$
         4 013702   000100 101505                    MRL     fill='000'O
         4 013703   000003 600001                    ADSC9   3,A,PR0                  cn=3,n=1
         4 013704   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013705   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013706   200160 116100                    CMPQ    FKEY,,AUTO
         4 013707   013714 601000 4                  TNZ     s:22743

     3008    22739    5      THEN DO;

     3009    22740    5         POSITION = I;

  22740  4 013710   200175 236100                    LDQ     I,,AUTO
         4 013711   200167 756100                    STQ     POSITION,,AUTO

     3010    22741    5         RETURN;

  22741  4 013712   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 013713   000001 702211                    TSX2  ! 1,X1

     3011    22742    5         END;
     3012    22743    4      END;

  22743  4 013714   200175 235100                    LDA     I,,AUTO
         4 013715   000001 035007                    ADLA    1,DL
         4 013716   200175 755100                    STA     I,,AUTO
         4 013717   000100 100500                    MLR     fill='000'O
         4 013720   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 013721   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013722   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013723   000022 732000                    QRS     18
         4 013724   013730 604000 4                  TMI     s:22744
         4 013725   200175 116100                    CMPQ    I,,AUTO
         4 013726   013730 600000 4                  TZE     s:22744
         4 013727   013677 603000 4                  TRC     s:22738
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:472  

     3013    22744    3   ALTRETURN;

  22744  4 013730   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 013731   000000 702211                    TSX2  ! 0,X1

     3014    22745    3   END FIND_FKEY;
     3015    22746        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:473  
     3016    22747    2   REMOVE_THIS_FUNKEY: PROC (POS);

  22747  4 013732   200174 741300       REMOVE_THIS* STX1  ! SAVEIDX+1,,AUTO

     3017    22748        /* REMOVE_THIS_FUNKEY removes the word corresponding to the key
     3018    22749           definition being deleted.  The rest of the record after the deleted
     3019    22750           def is shifted left by the size of a key definition, and all
     3020    22751           pointers which indicate various parts of the profile record are
     3021    22752           tested and updated as necessary due to this shift.
     3022    22753           The actual size of the profile record is adjusted along with the
     3023    22754           size of the block containing the key definitions.
     3024    22755        */
     3025    22756    3   DCL POS UBIN WORD;
     3026    22757    3   DCL BEGIN$ PTR;
     3027    22758    3   DCL NUM_CHARS SBIN;
     3028    22759    3   DCL SIZE  UBIN;
     3029    22760
     3030    22761    3   BEGIN$ = ADDR (KL$FUNKEY.FCNKEY.FCN_BYTE0 (POS));

  22761  4 013733   200175 470500                    LDP0    @POS,,AUTO
         4 013734   000000 235100                    LDA     0,,PR0
         4 013735   000002 735000                    ALS     2
         4 013736   000044 733000                    LRS     36
         4 013737   000020 736000                    QLS     16
         4 013740   000003 036003                    ADLQ    3,DU
         4 013741   000050 036000 2                  ADLQ    FUNKEY$
         4 013742   200176 756100                    STQ     BEGIN$,,AUTO

     3031    22762    3   NUM_CHARS = FUNKEY_DEF_SIZE;

  22762  4 013743   000110 235000 2                  LDA     FUNKEY_DEF_SIZE
         4 013744   200177 755100                    STA     NUM_CHARS,,AUTO

     3032    22763        /* Now release the space and have the pointers adjusted */
     3033    22764
     3034    22765    3   CALL SHRINK (BEGIN$, NUM_CHARS);

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:474  
  22765  4 013745   200177 631500                    EPPR1   NUM_CHARS,,AUTO
         4 013746   200204 451500                    STP1    @BEGIN$+1,,AUTO
         4 013747   200176 633500                    EPPR3   BEGIN$,,AUTO
         4 013750   200203 453500                    STP3    DUPE_CHR_IDX+3,,AUTO
         4 013751   015763 701000 4                  TSX1    SHRINK
         4 013752   000000 011000                    NOP     0

     3035    22766
     3036    22767    3   KL$FUNKEY.NUM_DEFS = KL$FUNKEY.NUM_DEFS - 1;

  22767  4 013753   000050 470400 2                  LDP0    FUNKEY$
         4 013754   000100 100500                    MLR     fill='000'O
         4 013755   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 013756   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 013757   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 013760   000022 732000                    QRS     18
         4 013761   000001 136007                    SBLQ    1,DL
         4 013762   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 013763   000100 101500                    MRL     fill='000'O
         4 013764   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 013765   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2

     3037    22768
     3038    22769    3   IF FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN

  22769  4 013766   000105 471400 2                  LDP1    FUNKEYSZ$
         4 013767   003100 061500                    CSR     bolr='003'O
         4 013770   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9
         4 013771   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 013772   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 013773   000377 116007                    CMPQ    255,DL
         4 013774   014011 601000 4                  TNZ     s:22772

     3039    22770    3      SIZE = FUNKEYSZ$->PP$BIG_STRCT.SIZE.T * 256 + FUNKEYSZ$->PP$BIG_STRCT.SIZE.B -
             22770               FUNKEY_DEF_SIZE;

  22770  4 013775   003100 061500                    CSR     bolr='003'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:475  
         4 013776   100000 610010                    BDSC    0,,PR1                   by=3,bit=1,n=8
         4 013777   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014000   003100 061500                    CSR     bolr='003'O
         4 014001   100000 410010                    BDSC    0,,PR1                   by=2,bit=1,n=8
         4 014002   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 014003   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014004   000010 736000                    QLS     8
         4 014005   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 014006   000110 136000 2                  SBLQ    FUNKEY_DEF_SIZE
         4 014007   200200 756100                    STQ     SIZE,,AUTO
         4 014010   014017 710000 4                  TRA     s:22774

     3040    22771    3   ELSE
     3041    22772    3      SIZE = FUNKEYSZ$->PP$STRCT.SIZE - FUNKEY_DEF_SIZE;

  22772  4 014011   003100 061500                    CSR     bolr='003'O
         4 014012   100000 200011                    BDSC    0,,PR1                   by=1,bit=0,n=9
         4 014013   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014014   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014015   000110 136000 2                  SBLQ    FUNKEY_DEF_SIZE
         4 014016   200200 756100                    STQ     SIZE,,AUTO

     3042    22773
     3043    22774    4   IF SIZE > 255 THEN DO;    /*  Need the big header (4 bytes)  */

  22774  4 014017   000400 116007                    CMPQ    256,DL
         4 014020   014035 602000 4                  TNC     s:22780

     3044    22775        /*  But since we are deleting a function key, we must already have one  */
     3045    22776    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.T = SIZE / 256;

  22776  4 014021   000010 772000                    QRL     8
         4 014022   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 014023   003100 061500                    CSR     bolr='003'O
         4 014024   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014025   100000 410010                    BDSC    0,,PR1                   by=2,bit=1,n=8

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:476  
     3046    22777    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.B = MOD ( SIZE, 256 );

  22777  4 014026   200200 236100                    LDQ     SIZE,,AUTO
         4 014027   000377 376007                    ANQ     255,DL
         4 014030   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 014031   003100 061500                    CSR     bolr='003'O
         4 014032   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014033   100000 610010                    BDSC    0,,PR1                   by=3,bit=1,n=8

     3047    22778    4      END;  /*  Need big header  */

  22778  4 014034   014067 710000 4                  TRA     s:22791

     3048    22779    4   ELSE DO;  /*  Need small header  */

     3049    22780    5      IF FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */

  22780  4 014035   003100 061500                    CSR     bolr='003'O
         4 014036   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9
         4 014037   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014040   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014041   000377 116007                    CMPQ    255,DL
         4 014042   014063 601000 4                  TNZ     s:22788

     3050    22781        /*  So we must shrink the profile record by 2 bytes */
     3051    22782    5         NUM_CHARS = 2;

  22782  4 014043   000002 235007                    LDA     2,DL
         4 014044   200177 755100                    STA     NUM_CHARS,,AUTO

     3052    22783    5         BEGIN$ = FUNKEYSZ$;

  22783  4 014045   000105 236000 2                  LDQ     FUNKEYSZ$
         4 014046   200176 756100                    STQ     BEGIN$,,AUTO

     3053    22784    5         CALL SHRINK ( BEGIN$, NUM_CHARS );

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:477  
  22784  4 014047   200177 633500                    EPPR3   NUM_CHARS,,AUTO
         4 014050   200204 453500                    STP3    @BEGIN$+1,,AUTO
         4 014051   200176 634500                    EPPR4   BEGIN$,,AUTO
         4 014052   200203 454500                    STP4    DUPE_CHR_IDX+3,,AUTO
         4 014053   015763 701000 4                  TSX1    SHRINK
         4 014054   000000 011000                    NOP     0

     3054    22785    5         FUNKEYSZ$ = BEGIN$;

  22785  4 014055   200176 236100                    LDQ     BEGIN$,,AUTO
         4 014056   000105 756000 2                  STQ     FUNKEYSZ$

     3055    22786    5         FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_KEYDEFS;

  22786  4 014057   000105 470400 2                  LDP0    FUNKEYSZ$
         4 014060   003100 061400                    CSR     bolr='003'O
         4 014061   000213 000044 5                  BDSC    139                      by=0,bit=0,n=36
         4 014062   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9

     3056    22787    5         END;   /*  No small header  */

     3057    22788    4      FUNKEYSZ$->PP$STRCT.SIZE = SIZE;

  22788  4 014063   000105 470400 2                  LDP0    FUNKEYSZ$
         4 014064   003100 061500                    CSR     bolr='003'O
         4 014065   200200 000044                    BDSC    SIZE,,AUTO               by=0,bit=0,n=36
         4 014066   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9

     3058    22789    4      END;  /*  Need small header  */

     3059    22790
     3060    22791    3   RETURN;

  22791  4 014067   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014070   000001 702211                    TSX2  ! 1,X1

     3061    22792    3   END REMOVE_THIS_FUNKEY;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:478  
     3062    22793        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:479  
     3063    22794    2   ADD_ANOTHER_FUNKEY: PROC;

  22794  4 014071   200174 741300       ADD_ANOTHER* STX1  ! SAVEIDX+1,,AUTO

     3064    22795        /* ADD_ANOTHER_FUNKEY will add space for another function key
     3065    22796           definition to the end of the function key block in the profile.
     3066    22797           The profile data after that point is all shifted right, and the
     3067    22798           size of the total profile record is updated along with the size of
     3068    22799           this particular block.
     3069    22800        */
     3070    22801    3   DCL BEGIN$ PTR;
     3071    22802    3   DCL NUM_CHARS SBIN;
     3072    22803    3   DCL SIZE  UBIN;
     3073    22804
     3074    22805    3   BEGIN$ = ADDR (KL$FUNKEY.FCNKEY (KL$FUNKEY.NUM_DEFS));

  22805  4 014072   000050 470400 2                  LDP0    FUNKEY$
         4 014073   000100 100500                    MLR     fill='000'O
         4 014074   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 014075   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014076   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014077   000022 732000                    QRS     18
         4 014100   000022 736000                    QLS     18
         4 014101   000003 036003                    ADLQ    3,DU
         4 014102   000050 036000 2                  ADLQ    FUNKEY$
         4 014103   200175 756100                    STQ     BEGIN$,,AUTO

     3075    22806    3   NUM_CHARS = FUNKEY_DEF_SIZE;

  22806  4 014104   000110 235000 2                  LDA     FUNKEY_DEF_SIZE
         4 014105   200176 755100                    STA     NUM_CHARS,,AUTO

     3076    22807
     3077    22808        /* Now get the space we need and adjust the pointers. */
     3078    22809
     3079    22810    3   CALL ENLARGE (BEGIN$, NUM_CHARS);

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:480  
  22810  4 014106   200176 631500                    EPPR1   NUM_CHARS,,AUTO
         4 014107   200204 451500                    STP1    @BEGIN$+1,,AUTO
         4 014110   200175 633500                    EPPR3   BEGIN$,,AUTO
         4 014111   200203 453500                    STP3    DUPE_CHR_IDX+3,,AUTO
         4 014112   015773 701000 4                  TSX1    ENLARGE
         4 014113   000000 011000                    NOP     0

     3080    22811
     3081    22812    3   KL$FUNKEY.NUM_DEFS = KL$FUNKEY.NUM_DEFS + 1;

  22812  4 014114   000050 470400 2                  LDP0    FUNKEY$
         4 014115   000100 100500                    MLR     fill='000'O
         4 014116   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 014117   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 014120   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014121   000022 732000                    QRS     18
         4 014122   000001 036007                    ADLQ    1,DL
         4 014123   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 014124   000100 101500                    MRL     fill='000'O
         4 014125   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014126   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2

     3082    22813
     3083    22814    3   IF FUNKEYSZ$->PP$STRCT.TYPE = %KV_PRMID_BIGTL THEN

  22814  4 014127   000105 471400 2                  LDP1    FUNKEYSZ$
         4 014130   003100 061500                    CSR     bolr='003'O
         4 014131   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9
         4 014132   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014133   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014134   000377 116007                    CMPQ    255,DL
         4 014135   014152 601000 4                  TNZ     s:22817

     3084    22815    3      SIZE = FUNKEYSZ$->PP$BIG_STRCT.SIZE.T * 256 + FUNKEYSZ$->PP$BIG_STRCT.SIZE.B +
             22815               FUNKEY_DEF_SIZE;

  22815  4 014136   003100 061500                    CSR     bolr='003'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:481  
         4 014137   100000 610010                    BDSC    0,,PR1                   by=3,bit=1,n=8
         4 014140   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014141   003100 061500                    CSR     bolr='003'O
         4 014142   100000 410010                    BDSC    0,,PR1                   by=2,bit=1,n=8
         4 014143   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 014144   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014145   000010 736000                    QLS     8
         4 014146   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 014147   000110 036000 2                  ADLQ    FUNKEY_DEF_SIZE
         4 014150   200177 756100                    STQ     SIZE,,AUTO
         4 014151   014160 710000 4                  TRA     s:22819

     3085    22816    3   ELSE
     3086    22817    3      SIZE = FUNKEYSZ$->PP$STRCT.SIZE + FUNKEY_DEF_SIZE;

  22817  4 014152   003100 061500                    CSR     bolr='003'O
         4 014153   100000 200011                    BDSC    0,,PR1                   by=1,bit=0,n=9
         4 014154   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014155   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014156   000110 036000 2                  ADLQ    FUNKEY_DEF_SIZE
         4 014157   200177 756100                    STQ     SIZE,,AUTO

     3087    22818
     3088    22819    4   IF SIZE > 255 THEN DO;    /*  Need the big header (4 bytes)  */

  22819  4 014160   000400 116007                    CMPQ    256,DL
         4 014161   014231 602000 4                  TNC     s:22835

     3089    22820    5      IF FUNKEYSZ$->PP$STRCT.TYPE ~= %KV_PRMID_BIGTL THEN DO;  /* Don't have it  */

  22820  4 014162   003100 061500                    CSR     bolr='003'O
         4 014163   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9
         4 014164   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014165   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014166   000377 116007                    CMPQ    255,DL
         4 014167   014213 600000 4                  TZE     s:22830

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:482  
     3090    22821        /*  Since we are adding a FUNCTION_KEY, we need to enlarge the profile
     3091    22822            by 2 bytes  */
     3092    22823    5         NUM_CHARS = 2;

  22823  4 014170   000002 235007                    LDA     2,DL
         4 014171   200176 755100                    STA     NUM_CHARS,,AUTO

     3093    22824    5         BEGIN$ = FUNKEYSZ$;

  22824  4 014172   000105 236000 2                  LDQ     FUNKEYSZ$
         4 014173   200175 756100                    STQ     BEGIN$,,AUTO

     3094    22825    5         CALL ENLARGE ( BEGIN$, NUM_CHARS );

  22825  4 014174   200176 633500                    EPPR3   NUM_CHARS,,AUTO
         4 014175   200204 453500                    STP3    @BEGIN$+1,,AUTO
         4 014176   200175 634500                    EPPR4   BEGIN$,,AUTO
         4 014177   200203 454500                    STP4    DUPE_CHR_IDX+3,,AUTO
         4 014200   015773 701000 4                  TSX1    ENLARGE
         4 014201   000000 011000                    NOP     0

     3095    22826    5         FUNKEYSZ$ = BEGIN$;

  22826  4 014202   200175 236100                    LDQ     BEGIN$,,AUTO
         4 014203   000105 756000 2                  STQ     FUNKEYSZ$

     3096    22827    5         FUNKEYSZ$->PP$BIG_STRCT.TYPE = %KV_PRMID_KEYDEFS;

  22827  4 014204   000105 470400 2                  LDP0    FUNKEYSZ$
         4 014205   003100 061400                    CSR     bolr='003'O
         4 014206   000213 000044 5                  BDSC    139                      by=0,bit=0,n=36
         4 014207   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9

     3097    22828    5         FUNKEYSZ$->PP$BIG_STRCT.BIG = %KV_PRMID_BIGTL;

  22828  4 014210   003100 061400                    CSR     bolr='003'O
         4 014211   000030 000044 5                  BDSC    24                       by=0,bit=0,n=36
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:483  
         4 014212   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9

     3098    22829    5         END;   /*  No big header  */

     3099    22830    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.T = SIZE / 256;

  22830  4 014213   200177 236100                    LDQ     SIZE,,AUTO
         4 014214   000010 772000                    QRL     8
         4 014215   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 014216   000105 470400 2                  LDP0    FUNKEYSZ$
         4 014217   003100 061500                    CSR     bolr='003'O
         4 014220   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014221   000000 410010                    BDSC    0,,PR0                   by=2,bit=1,n=8

     3100    22831    4      FUNKEYSZ$->PP$BIG_STRCT.SIZE.B = MOD ( SIZE, 256 );

  22831  4 014222   200177 236100                    LDQ     SIZE,,AUTO
         4 014223   000377 376007                    ANQ     255,DL
         4 014224   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 014225   003100 061500                    CSR     bolr='003'O
         4 014226   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 014227   000000 610010                    BDSC    0,,PR0                   by=3,bit=1,n=8

     3101    22832    4      END;  /*  Need big header  */

  22832  4 014230   014234 710000 4                  TRA     s:22838

     3102    22833    4   ELSE DO;  /*  Need small header  */

     3103    22834        /*  Since we are adding, we must already have one */
     3104    22835    4      FUNKEYSZ$->PP$STRCT.SIZE = SIZE;

  22835  4 014231   003100 061500                    CSR     bolr='003'O
         4 014232   200177 000044                    BDSC    SIZE,,AUTO               by=0,bit=0,n=36
         4 014233   100000 200011                    BDSC    0,,PR1                   by=1,bit=0,n=9

     3105    22836    4      END;  /*  Need small header  */
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:484  

     3106    22837
     3107    22838    3   RETURN;

  22838  4 014234   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014235   000001 702211                    TSX2  ! 1,X1

     3108    22839    3   END ADD_ANOTHER_FUNKEY;
     3109    22840        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:485  
     3110    22841    2   ADD_INTRO: PROC ALTRET;

  22841  4 014236   200174 741300       ADD_INTRO    STX1  ! SAVEIDX+1,,AUTO

     3111    22842        /* This routine 1- checks if the new introducer already exists, if
     3112    22843           it does then return.  It it doesn't, then can it be added to the
     3113    22844           list?  if yes then it is and return if not then altreturn.
     3114    22845           In any return case the value INTRO_NUM is set to indicate if the
     3115    22846           new introducer is #1 or #2, (0 or 1 respectively).
     3116    22847           If the current definition doesn't have an introducer, this
     3117    22848           routine just returns.
     3118    22849        */
     3119    22850
     3120    22851    3   IF (NUM_NODES = 2) THEN

  22851  4 014237   200166 235100                    LDA     NUM_NODES,,AUTO
         4 014240   000002 115007                    CMPA    2,DL
         4 014241   014243 601000 4                  TNZ     s:22854

     3121    22852    3      RETURN;

  22852  4 014242   000001 702211                    TSX2  ! 1,X1

     3122    22853
     3123    22854    3   IF (KL$FUNKEY.INTRO1.CHR1 = VAL1) AND

  22854  4 014243   000050 470400 2                  LDP0    FUNKEY$
         4 014244   000100 100500                    MLR     fill='000'O
         4 014245   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         4 014246   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014247   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014250   000022 732000                    QRS     18
         4 014251   200170 116100                    CMPQ    VAL1,,AUTO
         4 014252   014264 601000 4                  TNZ     s:22861
         4 014253   000100 100500                    MLR     fill='000'O
         4 014254   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         4 014255   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:486  
         4 014256   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014257   000022 732000                    QRS     18
         4 014260   200171 116100                    CMPQ    VAL2,,AUTO
         4 014261   014264 601000 4                  TNZ     s:22861

     3124    22855    3        (KL$FUNKEY.INTRO1.CHR2 = VAL2)
     3125    22856    4   THEN DO;

     3126    22857    4      INTRO_NUM = %KV_INPFNCTYP_PRMESC;

  22857  4 014262   200163 450100                    STZ     INTRO_NUM,,AUTO

     3127    22858    4      RETURN;

  22858  4 014263   000001 702211                    TSX2  ! 1,X1

     3128    22859    4      END;
     3129    22860
     3130    22861    3   IF (KL$FUNKEY.INTRO2.CHR1 = VAL1) AND

  22861  4 014264   000100 100500                    MLR     fill='000'O
         4 014265   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         4 014266   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014267   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014270   000022 732000                    QRS     18
         4 014271   200170 116100                    CMPQ    VAL1,,AUTO
         4 014272   014305 601000 4                  TNZ     s:22868
         4 014273   000100 100500                    MLR     fill='000'O
         4 014274   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2
         4 014275   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 014276   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014277   000022 732000                    QRS     18
         4 014300   200171 116100                    CMPQ    VAL2,,AUTO
         4 014301   014305 601000 4                  TNZ     s:22868

     3131    22862    3        (KL$FUNKEY.INTRO2.CHR2 = VAL2)
     3132    22863    4   THEN DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:487  

     3133    22864    4      INTRO_NUM = %KV_INPFNCTYP_SCNESC;

  22864  4 014302   000001 236007                    LDQ     1,DL
         4 014303   200163 756100                    STQ     INTRO_NUM,,AUTO

     3134    22865    4      RETURN;

  22865  4 014304   000001 702211                    TSX2  ! 1,X1

     3135    22866    4      END;
     3136    22867
     3137    22868    3   IF (KL$FUNKEY.INTRO1.CHR1 = -1)

  22868  4 014305   000100 100500                    MLR     fill='000'O
         4 014306   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         4 014307   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014310   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014311   000022 732000                    QRS     18
         4 014312   000027 116000 xsym               CMPQ    B_VECTNIL+23
         4 014313   014325 601000 4                  TNZ     s:22876

     3138    22869    4   THEN DO;

     3139    22870    4      INTRO_NUM = %KV_INPFNCTYP_PRMESC;

  22870  4 014314   200163 450100                    STZ     INTRO_NUM,,AUTO

     3140    22871    4      KL$FUNKEY.INTRO1.CHR1 = VAL1;

  22871  4 014315   000100 101500                    MRL     fill='000'O
         4 014316   200170 000004                    ADSC9   VAL1,,AUTO               cn=0,n=4
         4 014317   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2

     3141    22872    4      KL$FUNKEY.INTRO1.CHR2 = VAL2;

  22872  4 014320   000100 101500                    MRL     fill='000'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:488  
         4 014321   200171 000004                    ADSC9   VAL2,,AUTO               cn=0,n=4
         4 014322   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2

     3142    22873    4      RETURN;

  22873  4 014323   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014324   000001 702211                    TSX2  ! 1,X1

     3143    22874    4      END;
     3144    22875
     3145    22876    3   IF (KL$FUNKEY.INTRO2.CHR1 = -1)

  22876  4 014325   000100 100500                    MLR     fill='000'O
         4 014326   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         4 014327   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014330   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014331   000022 732000                    QRS     18
         4 014332   000027 116000 xsym               CMPQ    B_VECTNIL+23
         4 014333   014346 601000 4                  TNZ     s:22905

     3146    22877    4   THEN DO;

     3147    22878    4      INTRO_NUM = %KV_INPFNCTYP_SCNESC;

  22878  4 014334   000001 236007                    LDQ     1,DL
         4 014335   200163 756100                    STQ     INTRO_NUM,,AUTO

     3148    22879    4      KL$FUNKEY.INTRO2.CHR1 = VAL1;

  22879  4 014336   000100 101500                    MRL     fill='000'O
         4 014337   200170 000004                    ADSC9   VAL1,,AUTO               cn=0,n=4
         4 014340   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2

     3149    22880    4      KL$FUNKEY.INTRO2.CHR2 = VAL2;

  22880  4 014341   000100 101500                    MRL     fill='000'O
         4 014342   200171 000004                    ADSC9   VAL2,,AUTO               cn=0,n=4
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:489  
         4 014343   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2

     3150    22881    4      RETURN;

  22881  4 014344   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014345   000001 702211                    TSX2  ! 1,X1

     3151    22882    4      END;
     3152    22883
     3153    22884
     3154    22885           /*E*  ERROR:    ASD-E$NO_MORE_FUNKEY_INTROS-C
     3155    22886                 MESSAGE0: There is no more room for another introducer sequence.
     3156    22887                 MESSAGE1: 2 different introducer sequences (or keys) have
     3157    22888                           already been defined.  This key is not being defined.
     3158    22889                 MESSAGE2: At most 2 different introducer keys or sequences can
     3159    22890                           be defined.  Keys needing a third introducer are not
     3160    22891                           defined.
     3161    22892           */
     3162    22893        %SCREAM (ERR#=E$NO_MORE_FUNKEY_INTROS, LEVEL=ERROR, MID='D');

  22905  4 014346   000214 630400 5                  EPPR0   140
         4 014347   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 014350   000000 701000 xent               TSX1    ASH$ERROR
         4 014351   000000 011000                    NOP     0

     3163    22908    3   ALTRETURN;

  22908  4 014352   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014353   000000 702211                    TSX2  ! 0,X1

     3164    22909    3   END ADD_INTRO;
     3165    22910        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:490  
     3166    22911    2   PUT_IN_FUNKEY: PROC (POS);

  22911  4 014354   200174 741300       PUT_IN_FUNK* STX1  ! SAVEIDX+1,,AUTO

     3167    22912    3   DCL POS UBIN;
     3168    22913        /* This routine adds the data to the word at pos in the KL$FUNKEY
     3169    22914           struct.  It sets the intro sequence, character, function type,
     3170    22915           and the sub for the key.
     3171    22916        */
     3172    22917
     3173    22918    3   KL$FUNKEY.FCNKEY.FCN_BYTE0 (POS) = INTRO_NUM;

  22918  4 014355   200175 470500                    LDP0    @POS,,AUTO
         4 014356   000000 235100                    LDA     0,,PR0
         4 014357   000002 735000                    ALS     2
         4 014360   000050 471400 2                  LDP1    FUNKEY$
         4 014361   000105 101500                    MRL     fill='000'O
         4 014362   200163 000004                    ADSC9   INTRO_NUM,,AUTO          cn=0,n=4
         4 014363   100003 000001                    ADSC9   3,A,PR1                  cn=0,n=1

     3174    22919
     3175    22920    3   KL$FUNKEY.FCNKEY.FCN_BYTE1 (POS) = IDENT;

  22920  4 014364   000000 235100                    LDA     0,,PR0
         4 014365   000002 735000                    ALS     2
         4 014366   000105 101500                    MRL     fill='000'O
         4 014367   200162 000004                    ADSC9   IDENT,,AUTO              cn=0,n=4
         4 014370   100003 200001                    ADSC9   3,A,PR1                  cn=1,n=1

     3176    22921
     3177    22922    3   KL$FUNKEY.FCNKEY.FCN_BYTE2 (POS) = BYTE2;

  22922  4 014371   000000 235100                    LDA     0,,PR0
         4 014372   000002 735000                    ALS     2
         4 014373   000105 101500                    MRL     fill='000'O
         4 014374   200155 000004                    ADSC9   BYTE2,,AUTO              cn=0,n=4
         4 014375   100003 400001                    ADSC9   3,A,PR1                  cn=2,n=1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:491  

     3178    22923
     3179    22924    3   KL$FUNKEY.FCNKEY.FCN_BYTE3 (POS) = FKEY;

  22924  4 014376   000000 235100                    LDA     0,,PR0
         4 014377   000002 735000                    ALS     2
         4 014400   000105 101500                    MRL     fill='000'O
         4 014401   200160 000004                    ADSC9   FKEY,,AUTO               cn=0,n=4
         4 014402   100003 600001                    ADSC9   3,A,PR1                  cn=3,n=1

     3180    22925    3   RETURN;

  22925  4 014403   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014404   000001 702211                    TSX2  ! 1,X1

     3181    22926    3   END PUT_IN_FUNKEY;
     3182    22927        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:492  
     3183    22928    2   MAYBE_REMOVE_INTRO: PROC (POS);

  22928  4 014405   200174 741300       MAYBE_REMOV* STX1  ! SAVEIDX+1,,AUTO

     3184    22929    3   DCL POS UBIN;
     3185    22930         /* This routine will remove an introducer if no other function keys
     3186    22931              refer to it.
     3187    22932         */
     3188    22933    3   DCL I UBIN;
     3189    22934    3   DCL VAL UBIN;
     3190    22935    3   DCL DELET BIT (1) ALIGNED;
     3191    22936
     3192    22937    3   IF ((KL$FUNKEY.NUM_DEFS = 1) AND

  22937  4 014406   000050 470400 2                  LDP0    FUNKEY$
         4 014407   000100 100500                    MLR     fill='000'O
         4 014410   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 014411   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014412   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014413   000022 732000                    QRS     18
         4 014414   000001 116007                    CMPQ    1,DL
         4 014415   014430 601000 4                  TNZ     s:22944
         4 014416   200175 471500                    LDP1    @POS,,AUTO
         4 014417   100000 235100                    LDA     0,,PR1
         4 014420   014430 601000 4                  TNZ     s:22944

     3193    22938    3        (POS = 0) )
     3194    22939    4   THEN DO;

     3195    22940    4      KL$FUNKEY.INTRO1_CHRS = -1;

  22940  4 014421   000100 100400                    MLR     fill='000'O
         4 014422   000027 000004 xsym               ADSC9   B_VECTNIL+23             cn=0,n=4
         4 014423   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     3196    22941    4      KL$FUNKEY.INTRO2_CHRS = -1;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:493  
  22941  4 014424   000100 100400                    MLR     fill='000'O
         4 014425   000027 000004 xsym               ADSC9   B_VECTNIL+23             cn=0,n=4
         4 014426   000001 000004                    ADSC9   1,,PR0                   cn=0,n=4

     3197    22942    4      END;

  22942  4 014427   014516 710000 4                  TRA     s:22967

     3198    22943    4   ELSE DO;

     3199    22944    4      VAL = KL$FUNKEY.FCNKEY.FCN_BYTE0 (POS);

  22944  4 014430   200175 471500                    LDP1    @POS,,AUTO
         4 014431   100000 235100                    LDA     0,,PR1
         4 014432   000002 735000                    ALS     2
         4 014433   000100 101505                    MRL     fill='000'O
         4 014434   000003 000001                    ADSC9   3,A,PR0                  cn=0,n=1
         4 014435   200177 000004                    ADSC9   VAL,,AUTO                cn=0,n=4

     3200    22945    4      DELET = '1'B;

  22945  4 014436   400000 236003                    LDQ     -131072,DU
         4 014437   200200 756100                    STQ     DELET,,AUTO

     3201    22946    5      DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;

  22946  4 014440   200176 450100                    STZ     I,,AUTO
         4 014441   014465 710000 4                  TRA     s:22953+3

     3202    22947    5         IF ( (KL$FUNKEY.FCNKEY.FCN_BYTE0 (I) = VAL) AND

  22947  4 014442   200176 235100                    LDA     I,,AUTO
         4 014443   000002 735000                    ALS     2
         4 014444   000050 470400 2                  LDP0    FUNKEY$
         4 014445   000100 101505                    MRL     fill='000'O
         4 014446   000003 000001                    ADSC9   3,A,PR0                  cn=0,n=1
         4 014447   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:494  
         4 014450   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014451   200177 116100                    CMPQ    VAL,,AUTO
         4 014452   014462 601000 4                  TNZ     s:22953
         4 014453   200175 471500                    LDP1    @POS,,AUTO
         4 014454   100000 236100                    LDQ     0,,PR1
         4 014455   200176 116100                    CMPQ    I,,AUTO
         4 014456   014462 600000 4                  TZE     s:22953

     3203    22948    5              (POS ~= I) )
     3204    22949    6         THEN DO;

     3205    22950    6            DELET = '0'B;

  22950  4 014457   200200 450100                    STZ     DELET,,AUTO

     3206    22951    6            I = 999;   /* Set big to exit do i loop */

  22951  4 014460   001747 235007                    LDA     999,DL
         4 014461   200176 755100                    STA     I,,AUTO

     3207    22952    6            END;

     3208    22953    5         END; /* Do i */

  22953  4 014462   200176 235100                    LDA     I,,AUTO
         4 014463   000001 035007                    ADLA    1,DL
         4 014464   200176 755100                    STA     I,,AUTO
         4 014465   000100 100500                    MLR     fill='000'O
         4 014466   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 014467   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014470   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014471   000022 732000                    QRS     18
         4 014472   014476 604000 4                  TMI     s:22954
         4 014473   200176 116100                    CMPQ    I,,AUTO
         4 014474   014476 600000 4                  TZE     s:22954
         4 014475   014442 603000 4                  TRC     s:22947

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:495  
     3209    22954    4      IF DELET

  22954  4 014476   200200 234100                    SZN     DELET,,AUTO
         4 014477   014516 605000 4                  TPL     s:22967

     3210    22955    5      THEN DO;

     3211    22956    5         VAL = VAL + 1;   /* Now val is the # of the introducer */

  22956  4 014500   200177 235100                    LDA     VAL,,AUTO
         4 014501   000001 035007                    ADLA    1,DL
         4 014502   200177 755100                    STA     VAL,,AUTO

     3212    22957    5         IF VAL = 1

  22957  4 014503   000001 115007                    CMPA    1,DL
         4 014504   014511 601000 4                  TNZ     s:22961

     3213    22958    6         THEN DO;

     3214    22959    6            KL$FUNKEY.INTRO1_CHRS = -1;

  22959  4 014505   000100 100400                    MLR     fill='000'O
         4 014506   000027 000004 xsym               ADSC9   B_VECTNIL+23             cn=0,n=4
         4 014507   000000 000004                    ADSC9   0,,PR0                   cn=0,n=4

     3215    22960    6            END;

  22960  4 014510   014516 710000 4                  TRA     s:22967

     3216    22961    5         ELSE IF VAL = 2

  22961  4 014511   000002 115007                    CMPA    2,DL
         4 014512   014516 601000 4                  TNZ     s:22967

     3217    22962    6            THEN DO;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:496  
     3218    22963    6               KL$FUNKEY.INTRO2_CHRS = -1;

  22963  4 014513   000100 100400                    MLR     fill='000'O
         4 014514   000027 000004 xsym               ADSC9   B_VECTNIL+23             cn=0,n=4
         4 014515   000001 000004                    ADSC9   1,,PR0                   cn=0,n=4

     3219    22964    6               END;

     3220    22965    5         END;

     3221    22966    4      END;

     3222    22967    3   RETURN;

  22967  4 014516   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014517   000001 702211                    TSX2  ! 1,X1

     3223    22968    3   END MAYBE_REMOVE_INTRO;
     3224    22969        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:497  
     3225    22970    2   FIGURE_BYTE2: PROC ALTRET;

  22970  4 014520   200174 741300       FIGURE_BYTE2 STX1  ! SAVEIDX+1,,AUTO

     3226    22971        /* FIGURE_BYTE2 determines if the key being defined is a line function,
     3227    22972           function key, or single (special) character and sets BYTE2 accordingly.
     3228    22973           This routine will altreturn if a key modifier is given and not allowed.
     3229    22974        */
     3230    22975    3   DCL I UBIN WORD ALIGNED;
     3231    22976    3   DCL MODIFIER UBIN WORD ALIGNED;
     3232    22977    3   DCL MODIFIED_FLG BIT(1) UNAL;
     3233    22978    3   DCL DUPE_CHR_IDX UBIN WORD ALIGNED;
     3234    22979
     3235    22980    3   MODIFIED_FLG = AS_TRUE;

  22980  4 014521   000000 236000 xsym               LDQ     AS_TRUE
         4 014522   400000 376003                    ANQ     -131072,DU
         4 014523   200177 756100                    STQ     MODIFIED_FLG,,AUTO

     3236    22981
     3237    22982    3   IF (P$NODE.SUBLK$(0)->P$NODE.CODE = %KV_INPFNCKEY_BREAK)

  22982  4 014524   000000 470400 xsym               LDP0    NODE$
         4 014525   000003 471500                    LDP1    3,,PR0
         4 014526   100000 720100                    LXL0    0,,PR1
         4 014527   000401 100003                    CMPX0   257,DU
         4 014530   014534 601000 4                  TNZ     s:22986

     3238    22983    4   THEN DO;

     3239    22984    4      BYTE2 = %KV_INPFNCTYP_CTR;

  22984  4 014531   000003 235007                    LDA     3,DL
         4 014532   200155 755100                    STA     BYTE2,,AUTO

     3240    22985    4      END;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:498  
  22985  4 014533   014552 710000 4                  TRA     s:22999

     3241    22986    3   ELSE IF ( (P$NODE.SUBLK$(0)->P$NODE.CODE ~= %F_SINGLE_CHAR) AND

  22986  4 014534   000413 100003                    CMPX0   267,DU
         4 014535   014550 600000 4                  TZE     s:22996
         4 014536   000416 100003                    CMPX0   270,DU
         4 014537   014550 600000 4                  TZE     s:22996

     3242    22987    3           (P$NODE.SUBLK$(0)->P$NODE.CODE ~= %F_HEX_CHAR) )
     3243    22988    4      THEN DO;

     3244    22989    4         BYTE2 = %KV_INPFNCTYP_FNCKEY;

  22989  4 014540   000004 235007                    LDA     4,DL
         4 014541   200155 755100                    STA     BYTE2,,AUTO

     3245    22990    4         IF (FKEY = %KV_INPFNCKEY_IGNORE)

  22990  4 014542   200160 235100                    LDA     FKEY,,AUTO
         4 014543   000777 115007                    CMPA    511,DL
         4 014544   014552 601000 4                  TNZ     s:22999

     3246    22991    5         THEN DO; /* This is the ignore sequence special byte2 of -1 */

     3247    22992    5            BYTE2 = 511; /* 511 is a -1 for a single byte. */

  22992  4 014545   000777 235007                    LDA     511,DL
         4 014546   200155 755100                    STA     BYTE2,,AUTO

     3248    22993    5            END;

     3249    22994    4         END;

  22994  4 014547   014552 710000 4                  TRA     s:22999

     3250    22995    4      ELSE DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:499  

     3251    22996    4         BYTE2 = %KV_INPFNCTYP_SPCCHR;

  22996  4 014550   000002 235007                    LDA     2,DL
         4 014551   200155 755100                    STA     BYTE2,,AUTO

     3252    22997    4         END;

     3253    22998
     3254    22999    4   DO I = 0 TO NUM_NODES - 1;

  22999  4 014552   200175 450100                    STZ     I,,AUTO
         4 014553   014623 710000 4                  TRA     s:23036+3

     3255    23000    4      BLK$ = P$NODE.SUBLK$ (I);

  23000  4 014554   000000 470400 xsym               LDP0    NODE$
         4 014555   200175 720100                    LXL0    I,,AUTO
         4 014556   000003 236110                    LDQ     3,X0,PR0
         4 014557   200004 756100                    STQ     BLK$,,AUTO

     3256    23001    4      IF (OUT$SYM.CODE = %FUNKEY_MODIFIER)

  23001  4 014560   200004 471500                    LDP1    BLK$,,AUTO
         4 014561   100000 721100                    LXL1    0,,PR1
         4 014562   000414 101003                    CMPX1   268,DU
         4 014563   014620 601000 4                  TNZ     s:23036

     3257    23002    5      THEN DO;  /* A special modifier was specified. */

     3258    23003    5         MODIFIED_FLG = AS_FALSE;

  23003  4 014564   000000 236000 xsym               LDQ     AS_FALSE
         4 014565   400000 376003                    ANQ     -131072,DU
         4 014566   200177 756100                    STQ     MODIFIED_FLG,,AUTO

     3259    23004    5         CALL CHARBIN (MODIFIER, OUT$SYM.TEXT);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:500  

  23004  4 014567   100004 236100                    LDQ     4,,PR1
         4 014570   000033 772000                    QRL     27
         4 014571   000000 621006                    EAX1    0,QL
         4 014572   000100 305540                    DTB
         4 014573   100004 230011                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X1
         4 014574   200220 000010                    NDSC9   PINC_INC+1,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         4 014575   200221 235100                    LDA     PINC_INC+2,,AUTO
         4 014576   200176 755100                    STA     MODIFIER,,AUTO

     3260    23005    5         IF (BYTE2 = %KV_INPFNCTYP_FNCKEY)

  23005  4 014577   200155 236100                    LDQ     BYTE2,,AUTO
         4 014600   000004 116007                    CMPQ    4,DL
         4 014601   014605 601000 4                  TNZ     s:23009

     3261    23006    6         THEN DO; /* This is a function key, add the modifier */

     3262    23007    6            BYTE2 = MODIFIER + %KV_FCNKEY_MODIFIER_BASE;

  23007  4 014602   000012 035007                    ADLA    10,DL
         4 014603   200155 755100                    STA     BYTE2,,AUTO

     3263    23008    6            END;

  23008  4 014604   014620 710000 4                  TRA     s:23036

     3264    23009    5         ELSE IF (BYTE2 = %KV_INPFNCTYP_SPCCHR)

  23009  4 014605   000002 116007                    CMPQ    2,DL
         4 014606   014612 601000 4                  TNZ     s:23030

     3265    23010    6            THEN DO; /* This is a single character, add the modifier */

     3266    23011    6               BYTE2 = MODIFIER + %KV_SPCCHR_MODIFIER_BASE;

  23011  4 014607   000200 035007                    ADLA    128,DL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:501  
         4 014610   200155 755100                    STA     BYTE2,,AUTO

     3267    23012    6               END;

  23012  4 014611   014620 710000 4                  TRA     s:23036

     3268    23013    6            ELSE DO;

     3269    23014           /*E* ERROR:   ASD-E$MOD_NOT_ALLOWED-C
     3270    23015              MESSAGE0: Modifiers aren't permitted for line functions, or ignore sequences.
     3271    23016                MESSAGE1: This definition has not been performed due to an error.
     3272    23017           */
     3273    23018                    %SCREAM (ERR#=E$MOD_NOT_ALLOWED, LEVEL=ERROR, MID='D');

  23030  4 014612   000215 630400 5                  EPPR0   141
         4 014613   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 014614   000000 701000 xent               TSX1    ASH$ERROR
         4 014615   000000 011000                    NOP     0

     3274    23033    6               ALTRETURN;

  23033  4 014616   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 014617   000000 702211                    TSX2  ! 0,X1

     3275    23034    6               END;
     3276    23035    5         END; /* The do if there is a modifier */
     3277    23036    4      END; /* Do i */

  23036  4 014620   200175 235100                    LDA     I,,AUTO
         4 014621   000001 035007                    ADLA    1,DL
         4 014622   200175 755100                    STA     I,,AUTO
         4 014623   200175 236100                    LDQ     I,,AUTO
         4 014624   200166 116100                    CMPQ    NUM_NODES,,AUTO
         4 014625   014554 602000 4                  TNC     s:23000

     3278    23037
     3279    23038    4   IF ACTION_FLG THEN DO;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:502  

  23038  4 014626   200172 234100                    SZN     ACTION_FLG,,AUTO
         4 014627   015002 605000 4                  TPL     s:23076

     3280    23039    4      CALL GET_IDENTIFIER;

  23039  4 014630   015070 701000 4                  TSX1    GET_IDENTIFIER
         4 014631   000000 011000                    NOP     0

     3281    23040    4      CALL GET_INTRODUCER;

  23040  4 014632   015110 701000 4                  TSX1    GET_INTRODUCER
         4 014633   000000 011000                    NOP     0

     3282    23041    4      BLK$ = P$NODE.SUBLK$(NUM_NODES-1)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);

  23041  4 014634   000000 470400 xsym               LDP0    NODE$
         4 014635   200166 720100                    LXL0    NUM_NODES,,AUTO
         4 014636   000002 471510                    LDP1    2,X0,PR0
         4 014637   100003 473500                    LDP3    3,,PR1
         4 014640   300003 236100                    LDQ     3,,PR3
         4 014641   200004 756100                    STQ     BLK$,,AUTO

     3283    23042    4      DUPE_CHR_IDX = 0;

  23042  4 014642   200200 450100                    STZ     DUPE_CHR_IDX,,AUTO

     3284    23043    5      DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;

  23043  4 014643   200175 450100                    STZ     I,,AUTO
         4 014644   014770 710000 4                  TRA     s:23074+3

     3285    23044    6         IF KL$FUNKEY.FCNKEY.FCN_BYTE1(I) = IDENT THEN DO;

  23044  4 014645   200175 235100                    LDA     I,,AUTO
         4 014646   000002 735000                    ALS     2
         4 014647   000050 470400 2                  LDP0    FUNKEY$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:503  
         4 014650   000100 101505                    MRL     fill='000'O
         4 014651   000003 200001                    ADSC9   3,A,PR0                  cn=1,n=1
         4 014652   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014653   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014654   200162 116100                    CMPQ    IDENT,,AUTO
         4 014655   014765 601000 4                  TNZ     s:23074

     3286    23045    7            DO SELECT (KL$FUNKEY.FCNKEY.FCN_BYTE0(I));

  23045  4 014656   000100 101505                    MRL     fill='000'O
         4 014657   000003 000001                    ADSC9   3,A,PR0                  cn=0,n=1
         4 014660   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014661   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014662   000001 116007                    CMPQ    1,DL
         4 014663   014674 602000 4                  TNC     s:23045+14
         4 014664   014731 600000 4                  TZE     s:23057
         4 014665   000100 101505                    MRL     fill='000'O
         4 014666   000003 000001                    ADSC9   3,A,PR0                  cn=0,n=1
         4 014667   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 014670   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014671   000002 116007                    CMPQ    2,DL
         4 014672   014765 601000 4                  TNZ     s:23074
         4 014673   014757 710000 4                  TRA     s:23067
         4 014674   000100 101505                    MRL     fill='000'O
         4 014675   000003 000001                    ADSC9   3,A,PR0                  cn=0,n=1
         4 014676   200222 000004                    ADSC9   PINC_INC+3,,AUTO         cn=0,n=4
         4 014677   200222 236100                    LDQ     PINC_INC+3,,AUTO
         4 014700   000000 116003                    CMPQ    0,DU
         4 014701   014703 600000 4                  TZE     s:23047
         4 014702   014765 710000 4                  TRA     s:23074

     3287    23046    7               SELECT (0);

     3288    23047    7               IF ((VAL1 = KL$FUNKEY.INTRO1.CHR1) AND

  23047  4 014703   000100 100500                    MLR     fill='000'O
         4 014704   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:504  
         4 014705   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014706   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014707   000022 732000                    QRS     18
         4 014710   200170 116100                    CMPQ    VAL1,,AUTO
         4 014711   014765 601000 4                  TNZ     s:23074
         4 014712   000100 100500                    MLR     fill='000'O
         4 014713   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         4 014714   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 014715   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014716   000022 732000                    QRS     18
         4 014717   200171 116100                    CMPQ    VAL2,,AUTO
         4 014720   014765 601000 4                  TNZ     s:23074

     3289    23048    7                    (VAL2 = KL$FUNKEY.INTRO1.CHR2)) THEN
     3290    23049    8               DO;

     3291    23050    8                  CALL CHECK_MODIFIERS (MODIFIED_FLG,I)

  23050  4 014721   200175 631500                    EPPR1   I,,AUTO
         4 014722   200204 451500                    STP1    @BEGIN$+1,,AUTO
         4 014723   200177 633500                    EPPR3   MODIFIED_FLG,,AUTO
         4 014724   200203 453500                    STP3    DUPE_CHR_IDX+3,,AUTO
         4 014725   015004 701000 4                  TSX1    CHECK_MODIFIERS
         4 014726   014730 702000 4                  TSX2    s:23054

     3292    23051    9                  WHENRETURN DO;

     3293    23052    9                     EXIT;

  23052  4 014727   014730 710000 4                  TRA     s:23054

     3294    23053    9                     END;
     3295    23054    8                  END;

  23054  4 014730   014765 710000 4                  TRA     s:23074

     3296    23055
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:505  
     3297    23056    7               SELECT (1);

     3298    23057    7               IF ((VAL1 = KL$FUNKEY.INTRO2.CHR1) AND

  23057  4 014731   000100 100500                    MLR     fill='000'O
         4 014732   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         4 014733   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014734   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 014735   000022 732000                    QRS     18
         4 014736   200170 116100                    CMPQ    VAL1,,AUTO
         4 014737   014765 601000 4                  TNZ     s:23074
         4 014740   000100 100500                    MLR     fill='000'O
         4 014741   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2
         4 014742   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 014743   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 014744   000022 732000                    QRS     18
         4 014745   200171 116100                    CMPQ    VAL2,,AUTO
         4 014746   014765 601000 4                  TNZ     s:23074

     3299    23058    7                    (VAL2 = KL$FUNKEY.INTRO2.CHR2)) THEN
     3300    23059    8               DO;

     3301    23060    8                  CALL CHECK_MODIFIERS (MODIFIED_FLG,I)

  23060  4 014747   200175 631500                    EPPR1   I,,AUTO
         4 014750   200204 451500                    STP1    @BEGIN$+1,,AUTO
         4 014751   200177 633500                    EPPR3   MODIFIED_FLG,,AUTO
         4 014752   200203 453500                    STP3    DUPE_CHR_IDX+3,,AUTO
         4 014753   015004 701000 4                  TSX1    CHECK_MODIFIERS
         4 014754   014756 702000 4                  TSX2    s:23064

     3302    23061    9                  WHENRETURN DO;

     3303    23062    9                     EXIT;

  23062  4 014755   014756 710000 4                  TRA     s:23064

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:506  
     3304    23063    9                     END;
     3305    23064    8                  END;

  23064  4 014756   014765 710000 4                  TRA     s:23074

     3306    23065
     3307    23066    7               SELECT (2);

     3308    23067    7               IF ((VAL1 = -1) AND (VAL2 = -1)) THEN

  23067  4 014757   200170 235100                    LDA     VAL1,,AUTO
         4 014760   000027 115000 xsym               CMPA    B_VECTNIL+23
         4 014761   014765 601000 4                  TNZ     s:23074
         4 014762   200171 235100                    LDA     VAL2,,AUTO
         4 014763   000027 115000 xsym               CMPA    B_VECTNIL+23
         4 014764   014765 601000 4                  TNZ     s:23074

     3309    23068    8               DO;

     3310    23069    8                  END;

     3311    23070
     3312    23071    7               END;

     3313    23072    6            END;

     3314    23073
     3315    23074    5         END;

  23074  4 014765   200175 235100                    LDA     I,,AUTO
         4 014766   000001 035007                    ADLA    1,DL
         4 014767   200175 755100                    STA     I,,AUTO
         4 014770   000050 470400 2                  LDP0    FUNKEY$
         4 014771   000100 100500                    MLR     fill='000'O
         4 014772   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 014773   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 014774   200220 236100                    LDQ     PINC_INC+1,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:507  
         4 014775   000022 732000                    QRS     18
         4 014776   015002 604000 4                  TMI     s:23076
         4 014777   200175 116100                    CMPQ    I,,AUTO
         4 015000   015002 600000 4                  TZE     s:23076
         4 015001   014645 603000 4                  TRC     s:23044

     3316    23075    4      END; /* If ACTION_FLG = '1'b */

     3317    23076    3   RETURN;

  23076  4 015002   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 015003   000001 702211                    TSX2  ! 1,X1

     3318    23077    3   END FIGURE_BYTE2;
     3319    23078        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:508  
     3320    23079    2   CHECK_MODIFIERS: PROC (MODIFIER_SPECIFIED,I) ALTRET;

  23079  4 015004   200202 741300       CHECK_MODIF* STX1  ! DUPE_CHR_IDX+2,,AUTO

     3321    23080    3   DCL MODIFIER_SPECIFIED BIT(1);
     3322    23081    3   DCL I UBIN;
     3323    23082
     3324    23083        /* If a modifier has been specified for the current definition,
     3325    23084           check KL$FUNKEY.FCNKEY.FCN_BYTE2(I) to see if a modifier has
     3326    23085           been defined. If not, replace it with appropriate MODIFIER_BASE,
     3327    23086           otherwise leave it alone.
     3328    23087
     3329    23088           If there is not a modifier for the current definition, then
     3330    23089           global var BYTE2 might have to get the MODIFIER_BASE.           */
     3331    23090
     3332    23091    3   DCL MOD_VALU UBIN WORD ALIGNED;
     3333    23092
     3334    23093    3   MOD_VALU = KL$FUNKEY.FCNKEY.FCN_BYTE2(I);

  23093  4 015005   200204 470500                    LDP0    @I,,AUTO
         4 015006   000000 235100                    LDA     0,,PR0
         4 015007   000002 735000                    ALS     2
         4 015010   000050 471400 2                  LDP1    FUNKEY$
         4 015011   000100 101505                    MRL     fill='000'O
         4 015012   100003 400001                    ADSC9   3,A,PR1                  cn=2,n=1
         4 015013   200205 000004                    ADSC9   MOD_VALU,,AUTO           cn=0,n=4

     3335    23094
     3336    23095    4   IF ~MODIFIER_SPECIFIED THEN DO;

  23095  4 015014   200203 473500                    LDP3    @MODIFIER_SPECIFIED,,AUTO
         4 015015   003100 060500                    CSL     bolr='003'O
         4 015016   300000 000001                    BDSC    0,,PR3                   by=0,bit=0,n=1
         4 015017   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015020   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015021   400000 676003                    ERQ     -131072,DU
         4 015022   015044 600000 4                  TZE     s:23108
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:509  

     3337    23096    5      IF MOD_VALU = %KV_INPFNCTYP_FNCKEY THEN DO;

  23096  4 015023   200205 235100                    LDA     MOD_VALU,,AUTO
         4 015024   000004 115007                    CMPA    4,DL
         4 015025   015034 601000 4                  TNZ     s:23101

     3338    23097    5         KL$FUNKEY.FCNKEY.FCN_BYTE2(I) = %KV_FCNKEY_MODIFIER_BASE;

  23097  4 015026   000000 235100                    LDA     0,,PR0
         4 015027   000002 735000                    ALS     2
         4 015030   000105 101400                    MRL     fill='000'O
         4 015031   000014 000004 xsym               ADSC9   B_VECTNIL+12             cn=0,n=4
         4 015032   100003 400001                    ADSC9   3,A,PR1                  cn=2,n=1

     3339    23098    5         GOTO RETURN_LABEL;

  23098  4 015033   015066 710000 4                  TRA     RETURN_LABEL

     3340    23099    5         END;
     3341    23100    5      ELSE DO;

     3342    23101    6         IF MOD_VALU = %KV_INPFNCTYP_SPCCHR THEN DO;

  23101  4 015034   000002 115007                    CMPA    2,DL
         4 015035   015065 601000 4                  TNZ     ALTRET_LABEL

     3343    23102    6            KL$FUNKEY.FCNKEY.FCN_BYTE2(I) = %KV_SPCCHR_MODIFIER_BASE;

  23102  4 015036   000000 235100                    LDA     0,,PR0
         4 015037   000002 735000                    ALS     2
         4 015040   000105 101400                    MRL     fill='000'O
         4 015041   000216 000004 5                  ADSC9   142                      cn=0,n=4
         4 015042   100003 400001                    ADSC9   3,A,PR1                  cn=2,n=1

     3344    23103    6            GOTO RETURN_LABEL;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:510  
  23103  4 015043   015066 710000 4                  TRA     RETURN_LABEL

     3345    23104    6            END;
     3346    23105    5         END;
     3347    23106    4      END;
     3348    23107    4   ELSE DO; /* no modifier was specified for the current definition */

     3349    23108    4      IF ((MOD_VALU >= %KV_FCNKEY_MODIFIER_BASE) AND

  23108  4 015044   200205 235100                    LDA     MOD_VALU,,AUTO
         4 015045   000012 115007                    CMPA    10,DL
         4 015046   015056 602000 4                  TNC     s:23115
         4 015047   000200 115007                    CMPA    128,DL
         4 015050   015056 603000 4                  TRC     s:23115

     3350    23109    5           (MOD_VALU < %KV_SPCCHR_MODIFIER_BASE)) THEN DO;

     3351    23110    6         IF MOD_VALU - %KV_FCNKEY_MODIFIER_BASE > 0 THEN DO;

  23110  4 015051   000013 115007                    CMPA    11,DL
         4 015052   015065 602000 4                  TNC     ALTRET_LABEL

     3352    23111    6            BYTE2 = %KV_FCNKEY_MODIFIER_BASE;

  23111  4 015053   000012 236007                    LDQ     10,DL
         4 015054   200155 756100                    STQ     BYTE2,,AUTO

     3353    23112    6            GOTO RETURN_LABEL;

  23112  4 015055   015066 710000 4                  TRA     RETURN_LABEL

     3354    23113    6            END;
     3355    23114    5         END;
     3356    23115    5      ELSE IF (MOD_VALU >= %KV_SPCCHR_MODIFIER_BASE) THEN DO;

  23115  4 015056   000200 115007                    CMPA    128,DL
         4 015057   015065 602000 4                  TNC     ALTRET_LABEL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:511  

     3357    23116    6            IF MOD_VALU - %KV_SPCCHR_MODIFIER_BASE > 0 THEN DO;

  23116  4 015060   000201 115007                    CMPA    129,DL
         4 015061   015065 602000 4                  TNC     ALTRET_LABEL

     3358    23117    6               BYTE2 = %KV_SPCCHR_MODIFIER_BASE;

  23117  4 015062   000200 236007                    LDQ     128,DL
         4 015063   200155 756100                    STQ     BYTE2,,AUTO

     3359    23118    6               GOTO RETURN_LABEL;

  23118  4 015064   015066 710000 4                  TRA     RETURN_LABEL

     3360    23119    6               END;
     3361    23120    5            END;
     3362    23121    4      END;
     3363    23122
     3364    23123    3   ALTRET_LABEL:
     3365    23124    3   ALTRETURN;

  23124  4 015065   000000 702211       ALTRET_LABEL TSX2  ! 0,X1

     3366    23125
     3367    23126    3   RETURN_LABEL:
     3368    23127    3   RETURN;

  23127  4 015066   200202 221300       RETURN_LABEL LDX1  ! DUPE_CHR_IDX+2,,AUTO
         4 015067   000001 702211                    TSX2  ! 1,X1

     3369    23128
     3370    23129    3   END CHECK_MODIFIERS;
     3371    23130        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:512  
     3372    23131    2   GET_IDENTIFIER: PROC;

  23131  4 015070   200202 741300       GET_IDENTIF* STX1  ! DUPE_CHR_IDX+2,,AUTO

     3373    23132        /*
     3374    23133        GET_IDENTIFIER puts the current definition's identifier character
     3375    23134           into the global variable ident.
     3376    23135        */
     3377    23136
     3378    23137    3   BLK$ = P$NODE.SUBLK$(NUM_NODES-1)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);

  23137  4 015071   000000 470400 xsym               LDP0    NODE$
         4 015072   200166 720100                    LXL0    NUM_NODES,,AUTO
         4 015073   000002 471510                    LDP1    2,X0,PR0
         4 015074   100003 473500                    LDP3    3,,PR1
         4 015075   300003 236100                    LDQ     3,,PR3
         4 015076   200004 756100                    STQ     BLK$,,AUTO

     3379    23138    3   CALL ASD$HEX2OCT (OUT$SYM, IDENT);

  23138  4 015077   200162 631500                    EPPR1   IDENT,,AUTO
         4 015100   200221 451500                    STP1    PINC_INC+2,,AUTO
         4 015101   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 015102   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 015103   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 015104   000000 701000 xent               TSX1    ASD$HEX2OCT
         4 015105   000000 011000                    NOP     0

     3380    23139
     3381    23140    3   END GET_IDENTIFIER;

  23140  4 015106   200202 221300                    LDX1  ! DUPE_CHR_IDX+2,,AUTO
         4 015107   000001 702211                    TSX2  ! 1,X1

     3382    23141        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:513  
     3383    23142    2   GET_INTRODUCER: PROC;

  23142  4 015110   200202 741300       GET_INTRODU* STX1  ! DUPE_CHR_IDX+2,,AUTO

     3384    23143        /*
     3385    23144           GET_INTRODUCER puts the current definitions introducer into
     3386    23145           the global variables, VAL1, and VAL2.
     3387    23146        */
     3388    23147
     3389    23148    3   IF (NUM_NODES = 2) THEN

  23148  4 015111   200166 235100                    LDA     NUM_NODES,,AUTO
         4 015112   000002 115007                    CMPA    2,DL
         4 015113   015120 601000 4                  TNZ     s:23155

     3390    23149    4   DO;

     3391    23150    4      VAL1 = -1;

  23150  4 015114   000001 336007                    LCQ     1,DL
         4 015115   200170 756100                    STQ     VAL1,,AUTO

     3392    23151    4      VAL2 = -1;

  23151  4 015116   200171 756100                    STQ     VAL2,,AUTO

     3393    23152    4      RETURN;

  23152  4 015117   000001 702211                    TSX2  ! 1,X1

     3394    23153    4      END;  /* NUM_NODES = 2 */
     3395    23154
     3396    23155    3   BLK$ = P$NODE.SUBLK$(1)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);

  23155  4 015120   000000 470400 xsym               LDP0    NODE$
         4 015121   000004 471500                    LDP1    4,,PR0
         4 015122   100003 473500                    LDP3    3,,PR1
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:514  
         4 015123   300003 236100                    LDQ     3,,PR3
         4 015124   200004 756100                    STQ     BLK$,,AUTO

     3397    23156    3   CALL ASD$HEX2OCT (OUT$SYM, VAL1);

  23156  4 015125   200170 631500                    EPPR1   VAL1,,AUTO
         4 015126   200221 451500                    STP1    PINC_INC+2,,AUTO
         4 015127   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 015130   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 015131   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 015132   000000 701000 xent               TSX1    ASD$HEX2OCT
         4 015133   000000 011000                    NOP     0

     3398    23157
     3399    23158    3   IF (NUM_NODES >= 4)

  23158  4 015134   200166 235100                    LDA     NUM_NODES,,AUTO
         4 015135   000004 115007                    CMPA    4,DL
         4 015136   015162 602000 4                  TNC     s:23170

     3400    23159    4   THEN DO;

     3401    23160    4      IF (P$NODE.SUBLK$(2)->OUT$SYM.CODE = %FUNKEY_INTRO2)

  23160  4 015137   000000 470400 xsym               LDP0    NODE$
         4 015140   000005 471500                    LDP1    5,,PR0
         4 015141   100000 720100                    LXL0    0,,PR1
         4 015142   000411 100003                    CMPX0   265,DU
         4 015143   015157 601000 4                  TNZ     s:23166

     3402    23161    5      THEN DO;

     3403    23162    5         BLK$ = P$NODE.SUBLK$(2)->P$NODE.SUBLK$(0)->P$NODE.SUBLK$(0);

  23162  4 015144   100003 473500                    LDP3    3,,PR1
         4 015145   300003 236100                    LDQ     3,,PR3
         4 015146   200004 756100                    STQ     BLK$,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:515  

     3404    23163    5         CALL ASD$HEX2OCT (OUT$SYM, VAL2);

  23163  4 015147   200171 633500                    EPPR3   VAL2,,AUTO
         4 015150   200221 453500                    STP3    PINC_INC+2,,AUTO
         4 015151   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 015152   200220 630500                    EPPR0   PINC_INC+1,,AUTO
         4 015153   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 015154   000000 701000 xent               TSX1    ASD$HEX2OCT
         4 015155   000000 011000                    NOP     0

     3405    23164    5         END;

  23164  4 015156   015164 710000 4                  TRA     s:23172

     3406    23165    5      ELSE DO;

     3407    23166    5         VAL2 = -1;

  23166  4 015157   000001 336007                    LCQ     1,DL
         4 015160   200171 756100                    STQ     VAL2,,AUTO

     3408    23167    5         END;

     3409    23168    4      END;

  23168  4 015161   015164 710000 4                  TRA     s:23172

     3410    23169    4   ELSE DO;

     3411    23170    4      VAL2 = -1;

  23170  4 015162   000001 336007                    LCQ     1,DL
         4 015163   200171 756100                    STQ     VAL2,,AUTO

     3412    23171    4      END;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:516  
     3413    23172    3   END GET_INTRODUCER;

  23172  4 015164   200202 221300                    LDX1  ! DUPE_CHR_IDX+2,,AUTO
         4 015165   000001 702211                    TSX2  ! 1,X1

     3414    23173        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:517  
     3415    23174    2   FIND_FUNCTION_KEY: PROC ALTRET;

  23174  4 015166   200174 741300       FIND_FUNCTI* STX1  ! SAVEIDX+1,,AUTO

     3416    23175        /* FIND_FUNCTION_KEY goes through all the key defs looking to see
     3417    23176           if the one being defined has been so in the past. If it has been,
     3418    23177           the external variable position is set with the keys position in
     3419    23178           the array and the routine returns.  If the key doesn't exist, the
     3420    23179           routine will altreturn, unless there are no keys defined.
     3421    23180           The routine checks the introducer, the modifier, and the
     3422    23181           identifier,i.e. the stuff on the right side of the defintion,
     3423    23182           for equality with what is stored in the table.
     3424    23183        */
     3425    23184    3   DCL I UBIN;
     3426    23185
     3427    23186    3   IF (KL$FUNKEY.NUM_DEFS > 0) THEN

  23186  4 015167   000050 470400 2                  LDP0    FUNKEY$
         4 015170   000100 100500                    MLR     fill='000'O
         4 015171   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 015172   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 015173   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015174   000022 732000                    QRS     18
         4 015175   000000 116003                    CMPQ    0,DU
         4 015176   015325 604400 4                  TMOZ    s:23221

     3428    23187    4   DO I = 0 TO KL$FUNKEY.NUM_DEFS - 1;  /*  search function key table */

  23187  4 015177   200175 450100                    STZ     I,,AUTO
         4 015200   015313 710000 4                  TRA     s:23217+3

     3429    23188    4      IF ((KL$FUNKEY.FCNKEY.FCN_BYTE1 (I) = IDENT) AND

  23188  4 015201   200175 235100                    LDA     I,,AUTO
         4 015202   000002 735000                    ALS     2
         4 015203   000050 470400 2                  LDP0    FUNKEY$
         4 015204   000100 101505                    MRL     fill='000'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:518  
         4 015205   000003 200001                    ADSC9   3,A,PR0                  cn=1,n=1
         4 015206   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 015207   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015210   200162 116100                    CMPQ    IDENT,,AUTO
         4 015211   015310 601000 4                  TNZ     s:23217
         4 015212   000100 101505                    MRL     fill='000'O
         4 015213   000003 400001                    ADSC9   3,A,PR0                  cn=2,n=1
         4 015214   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 015215   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 015216   200155 116100                    CMPQ    BYTE2,,AUTO
         4 015217   015310 601000 4                  TNZ     s:23217

     3430    23189    4           (KL$FUNKEY.FCNKEY.FCN_BYTE2 (I) = BYTE2) ) THEN
     3431    23190                                             /* function keys almost equal */
     3432    23191    5      DO CASE (KL$FUNKEY.FCNKEY.FCN_BYTE0 (I));

  23191  4 015220   000100 101505                    MRL     fill='000'O
         4 015221   000003 000001                    ADSC9   3,A,PR0                  cn=0,n=1
         4 015222   200220 000002                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=2
         4 015223   200220 220100                    LDX0    PINC_INC+1,,AUTO
         4 015224   000003 100003                    CMPX0   3,DU
         4 015225   015227 602010 4                  TNC     s:23191+7,X0
         4 015226   015310 710000 4                  TRA     s:23217
         4 015227   015232 710000 4                  TRA     s:23194
         4 015230   015254 710000 4                  TRA     s:23202
         4 015231   015276 710000 4                  TRA     s:23210

     3433    23192
     3434    23193    5         CASE(0);

     3435    23194    5            IF ((VAL1 = KL$FUNKEY.INTRO1.CHR1) AND

  23194  4 015232   000100 100500                    MLR     fill='000'O
         4 015233   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         4 015234   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 015235   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015236   000022 732000                    QRS     18
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:519  
         4 015237   200170 116100                    CMPQ    VAL1,,AUTO
         4 015240   015310 601000 4                  TNZ     s:23217
         4 015241   000100 100500                    MLR     fill='000'O
         4 015242   000000 400002                    ADSC9   0,,PR0                   cn=2,n=2
         4 015243   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 015244   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 015245   000022 732000                    QRS     18
         4 015246   200171 116100                    CMPQ    VAL2,,AUTO
         4 015247   015310 601000 4                  TNZ     s:23217

     3436    23195    5                 (VAL2 = KL$FUNKEY.INTRO1.CHR2)) THEN
     3437    23196    6            DO;

     3438    23197    6               POSITION = I;

  23197  4 015250   200175 236100                    LDQ     I,,AUTO
         4 015251   200167 756100                    STQ     POSITION,,AUTO

     3439    23198    6               RETURN;

  23198  4 015252   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 015253   000001 702211                    TSX2  ! 1,X1

     3440    23199    6               END;  /* introducer 1 */
     3441    23200
     3442    23201    5         CASE(1);

     3443    23202    5            IF ((VAL1 = KL$FUNKEY.INTRO2.CHR1) AND

  23202  4 015254   000100 100500                    MLR     fill='000'O
         4 015255   000001 000002                    ADSC9   1,,PR0                   cn=0,n=2
         4 015256   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 015257   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015260   000022 732000                    QRS     18
         4 015261   200170 116100                    CMPQ    VAL1,,AUTO
         4 015262   015310 601000 4                  TNZ     s:23217
         4 015263   000100 100500                    MLR     fill='000'O
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:520  
         4 015264   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2
         4 015265   200221 000004                    ADSC9   PINC_INC+2,,AUTO         cn=0,n=4
         4 015266   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 015267   000022 732000                    QRS     18
         4 015270   200171 116100                    CMPQ    VAL2,,AUTO
         4 015271   015310 601000 4                  TNZ     s:23217

     3444    23203    5                 (VAL2 = KL$FUNKEY.INTRO2.CHR2)) THEN
     3445    23204    6            DO;

     3446    23205    6               POSITION = I;

  23205  4 015272   200175 236100                    LDQ     I,,AUTO
         4 015273   200167 756100                    STQ     POSITION,,AUTO

     3447    23206    6               RETURN;

  23206  4 015274   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 015275   000001 702211                    TSX2  ! 1,X1

     3448    23207    6               END;  /* introducer 2 */
     3449    23208
     3450    23209    5         CASE(2);

     3451    23210    5            IF ((VAL1 = -1) AND (VAL2 = -1)) THEN

  23210  4 015276   200170 236100                    LDQ     VAL1,,AUTO
         4 015277   000027 116000 xsym               CMPQ    B_VECTNIL+23
         4 015300   015310 601000 4                  TNZ     s:23217
         4 015301   200171 235100                    LDA     VAL2,,AUTO
         4 015302   000027 115000 xsym               CMPA    B_VECTNIL+23
         4 015303   015310 601000 4                  TNZ     s:23217

     3452    23211    6            DO;

     3453    23212    6               POSITION = I;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:521  
  23212  4 015304   200175 235100                    LDA     I,,AUTO
         4 015305   200167 755100                    STA     POSITION,,AUTO

     3454    23213    6               RETURN;

  23213  4 015306   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 015307   000001 702211                    TSX2  ! 1,X1

     3455    23214    6               END;  /* no introducer */
     3456    23215
     3457    23216    5         END;  /*  do case  */

     3458    23217    4      END;  /* if definitions are almost equal */

  23217  4 015310   200175 235100                    LDA     I,,AUTO
         4 015311   000001 035007                    ADLA    1,DL
         4 015312   200175 755100                    STA     I,,AUTO
         4 015313   000100 100500                    MLR     fill='000'O
         4 015314   000002 400002                    ADSC9   2,,PR0                   cn=2,n=2
         4 015315   200220 000004                    ADSC9   PINC_INC+1,,AUTO         cn=0,n=4
         4 015316   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015317   000022 732000                    QRS     18
         4 015320   015324 604000 4                  TMI     s:23217+12
         4 015321   200175 116100                    CMPQ    I,,AUTO
         4 015322   015324 600000 4                  TZE     s:23217+12
         4 015323   015201 603000 4                  TRC     s:23188
         4 015324   015327 710000 4                  TRA     s:23224

     3459    23218                    /* search table */
     3460    23219    3   ELSE  /* NUM_DEFS = 0 */
     3461    23220    4   DO;

     3462    23221    4      POSITION = 0;

  23221  4 015325   200167 450100                    STZ     POSITION,,AUTO

     3463    23222    4      RETURN;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:522  

  23222  4 015326   000001 702211                    TSX2  ! 1,X1

     3464    23223    4      END; /* NUM_DEFS = 0 */
     3465    23224    3   ALTRETURN;

  23224  4 015327   200174 221300                    LDX1  ! SAVEIDX+1,,AUTO
         4 015330   000000 702211                    TSX2  ! 0,X1

     3466    23225
     3467    23226    3   END FIND_FUNCTION_KEY;
     3468    23227
     3469    23228    2   END DO_FUNKEY_DEFS;
     3470    23229        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:523  
     3471    23230
     3472    23231        /* DO_SETUP_CHR is the routine which handles the SETUP_CHR option for
     3473    23232           profiles.  It will convert the input string to values and alter
     3474    23233           the space for the array accordingly.  This routine uses the
     3475    23234           enlarge and shrink pointers routine to alter the indicator pointers
     3476    23235           after altering the space of the record.  Those 2 routines adjust
     3477    23236           all the pointers for all the different portions of the profile.
     3478    23237           This routine also uses the open and close space routines to create
     3479    23238           or delete room in the profile record for the new entry.
     3480    23239        */
     3481    23240    1   DO_SETUP_CHR: PROC ALTRET;

  23240  4 015331   200154 741300       DO_SETUP_CHR STX1  ! PRO_TYPE+1,,AUTO

     3482    23241    2   DCL J UBIN;
     3483    23242    2   DCL BEGIN$ PTR;
     3484    23243    2   DCL NUM_CHARS SBIN;
     3485    23244    2   DCL PLUS      BIT (1);
     3486    23245
     3487    23246    2   IF PTR$->P$NODE.SUBNODES > 1 THEN

  23246  4 015332   200030 470500                    LDP0    PTR$,,AUTO
         4 015333   000001 220100                    LDX0    1,,PR0
         4 015334   000002 100003                    CMPX0   2,DU
         4 015335   015345 602000 4                  TNC     s:23248

     3488    23247    2      PLUS = (PTR$->P$NODE.SUBLK$(0)->P$NODE.CODE = 0 /* PLUS_VAL */);

  23247  4 015336   000003 471500                    LDP1    3,,PR0
         4 015337   400000 222003                    LDX2    -131072,DU
         4 015340   100000 723100                    LXL3    0,,PR1
         4 015341   015343 600000 4                  TZE     s:23247+5
         4 015342   000000 222003                    LDX2    0,DU
         4 015343   000000 636012                    EAQ     0,X2
         4 015344   200160 756100                    STQ     PLUS,,AUTO

     3489    23248    2   CALL GET_HEX_VAL (255)
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:524  

  23248  4 015345   000031 236000 5                  LDQ     25
         4 015346   200163 756100                    STQ     INTRO_NUM,,AUTO
         4 015347   010767 701000 4                  TSX1    GET_HEX_VAL
         4 015350   015352 702000 4                  TSX2    s:23252

     3490    23249    3   WHENRETURN DO;

     3491    23250    3      END;

  23250  4 015351   015354 710000 4                  TRA     s:23255

     3492    23251    3   WHENALTRETURN DO;

     3493    23252    3      ALTRETURN;

  23252  4 015352   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 015353   000000 702211                    TSX2  ! 0,X1

     3494    23253    3      END;
     3495    23254
     3496    23255    2   IF (HEX(0) = 0)

  23255  4 015354   200037 236100                    LDQ     HEX,,AUTO
         4 015355   777000 316003                    CANQ    -512,DU
         4 015356   015413 601000 4                  TNZ     s:23272

     3497    23256    3   THEN DO;  /* None value- collapse all old space and set count to 0 */

     3498    23257    3      IF (KL$SETUP_CHR.SIZE > 0)

  23257  4 015357   000051 470400 2                  LDP0    SETUP_CHR$
         4 015360   003100 061500                    CSR     bolr='003'O
         4 015361   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015362   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015363   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015364   000000 116003                    CMPQ    0,DU
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:525  
         4 015365   015407 600000 4                  TZE     s:23268

     3499    23258    4      THEN DO;  /* Remove all the entries */

     3500    23259    4         BEGIN$ = ADDR (KL$SETUP_CHR.CHRS.NUM (1) );

  23259  4 015366   000051 236000 2                  LDQ     SETUP_CHR$
         4 015367   400000 036007                    ADLQ    -131072,DL
         4 015370   200156 756100                    STQ     BEGIN$,,AUTO

     3501    23260    4         NUM_CHARS = KL$SETUP_CHR.SIZE; /* Get rid of all of them. */

  23260  4 015371   003100 061500                    CSR     bolr='003'O
         4 015372   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015373   200157 000044                    BDSC    NUM_CHARS,,AUTO          by=0,bit=0,n=36

     3502    23261
     3503    23262                 /* Now collapse space and adjust the pointers. */
     3504    23263    4         CALL SHRINK (BEGIN$, NUM_CHARS);

  23263  4 015374   200157 631500                    EPPR1   NUM_CHARS,,AUTO
         4 015375   200204 451500                    STP1    @I,,AUTO
         4 015376   200156 633500                    EPPR3   BEGIN$,,AUTO
         4 015377   200203 453500                    STP3    @MODIFIER_SPECIFIED,,AUTO
         4 015400   015763 701000 4                  TSX1    SHRINK
         4 015401   000000 011000                    NOP     0

     3505    23264
     3506    23265    4         KL$SETUP_CHR.SIZE = 0;

  23265  4 015402   000051 470400 2                  LDP0    SETUP_CHR$
         4 015403   003100 061400                    CSR     bolr='003'O
         4 015404   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         4 015405   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9

     3507    23266    4         END;  /* Of do to remove something */

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:526  
  23266  4 015406   015741 710000 4                  TRA     s:23349

     3508    23267    4      ELSE DO;

     3509    23268    4         KL$SETUP_CHR.SIZE = 0;

  23268  4 015407   003100 061400                    CSR     bolr='003'O
         4 015410   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         4 015411   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9

     3510    23269    4         END;

     3511    23270    3      END; /* Of removing a block */

  23270  4 015412   015741 710000 4                  TRA     s:23349

     3512    23271    3   ELSE DO; /* We have to add new setup chars */

     3513    23272    4      IF NOT PLUS THEN DO;

  23272  4 015413   200160 234100                    SZN     PLUS,,AUTO
         4 015414   015612 604000 4                  TMI     s:23314

     3514    23273    4         IF (HEX (0) = KL$SETUP_CHR.SIZE)

  23273  4 015415   000051 470400 2                  LDP0    SETUP_CHR$
         4 015416   003100 061500                    CSR     bolr='003'O
         4 015417   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015420   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015421   200037 236100                    LDQ     HEX,,AUTO
         4 015422   000033 772000                    QRL     27
         4 015423   200220 116100                    CMPQ    PINC_INC+1,,AUTO
         4 015424   015445 601000 4                  TNZ     s:23280

     3515    23274    5         THEN DO; /* Putting in the same length, no MUCKING... */

     3516    23275    6            DO J = 0 TO HEX (0);
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:527  

  23275  4 015425   200155 450100                    STZ     J,,AUTO
         4 015426   015440 710000 4                  TRA     s:23277+3

     3517    23276    6               KL$SETUP_CHR.CHRS.NUM (J) = HEX (J); /* HEX(0) = count */

  23276  4 015427   200155 236100                    LDQ     J,,AUTO
         4 015430   000011 402007                    MPY     9,DL
         4 015431   000051 470400 2                  LDP0    SETUP_CHR$
         4 015432   003106 060506                    CSL     bolr='003'O
         4 015433   200037 000011                    BDSC    HEX,Q,AUTO               by=0,bit=0,n=9
         4 015434   000000 200011                    BDSC    0,Q,PR0                  by=1,bit=0,n=9

     3518    23277    6               END;

  23277  4 015435   200155 235100                    LDA     J,,AUTO
         4 015436   000001 035007                    ADLA    1,DL
         4 015437   200155 755100                    STA     J,,AUTO
         4 015440   200037 236100                    LDQ     HEX,,AUTO
         4 015441   000033 772000                    QRL     27
         4 015442   200155 116100                    CMPQ    J,,AUTO
         4 015443   015427 603000 4                  TRC     s:23276

     3519    23278    5            END; /*  HEX(0) = .SIZE  */

  23278  4 015444   015741 710000 4                  TRA     s:23349

     3520    23279    5         ELSE DO;

     3521    23280    5            IF (HEX (0) < KL$SETUP_CHR.SIZE)

  23280  4 015445   003100 061500                    CSR     bolr='003'O
         4 015446   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015447   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015450   200220 116100                    CMPQ    PINC_INC+1,,AUTO
         4 015451   015523 605000 4                  TPL     s:23290

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:528  
     3522    23281    6            THEN DO; /* New length is less than old */

     3523    23282    6               BEGIN$ = PINCRC (SETUP_CHR$,HEX(0)+2+MOD(HEX(0),2));

  23282  4 015452   000001 376007                    ANQ     1,DL
         4 015453   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 015454   200037 236100                    LDQ     HEX,,AUTO
         4 015455   000033 772000                    QRL     27
         4 015456   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 015457   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015460   200221 036100                    ADLQ    PINC_INC+2,,AUTO
         4 015461   000020 736000                    QLS     16
         4 015462   400000 036007                    ADLQ    -131072,DL
         4 015463   000051 036000 2                  ADLQ    SETUP_CHR$
         4 015464   200156 756100                    STQ     BEGIN$,,AUTO

     3524    23283    6               NUM_CHARS = (KL$SETUP_CHR.SIZE+MOD(KL$SETUP_CHR.SIZE,2)) - (HEX(0)+MOD(
             23283                        HEX(0),2));

  23283  4 015465   003100 061500                    CSR     bolr='003'O
         4 015466   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015467   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015470   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015471   000001 376007                    ANQ     1,DL
         4 015472   003100 061500                    CSR     bolr='003'O
         4 015473   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015474   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 015475   200221 036100                    ADLQ    PINC_INC+2,,AUTO
         4 015476   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 015477   200037 236100                    LDQ     HEX,,AUTO
         4 015500   000033 772000                    QRL     27
         4 015501   000001 376007                    ANQ     1,DL
         4 015502   200223 756100                    STQ     PINC_INC+4,,AUTO
         4 015503   200037 236100                    LDQ     HEX,,AUTO
         4 015504   000033 772000                    QRL     27
         4 015505   200224 756100                    STQ     PINC_INC+5,,AUTO
         4 015506   200223 236100                    LDQ     PINC_INC+4,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:529  
         4 015507   200224 036100                    ADLQ    PINC_INC+5,,AUTO
         4 015510   200225 756100                    STQ     PINC_INC+6,,AUTO
         4 015511   200222 236100                    LDQ     PINC_INC+3,,AUTO
         4 015512   200225 136100                    SBLQ    PINC_INC+6,,AUTO
         4 015513   200157 756100                    STQ     NUM_CHARS,,AUTO

     3525    23284
     3526    23285                 /* Now collapse space and adjust the pointers. */
     3527    23286    6               CALL SHRINK (BEGIN$, NUM_CHARS);

  23286  4 015514   200157 631500                    EPPR1   NUM_CHARS,,AUTO
         4 015515   200204 451500                    STP1    @I,,AUTO
         4 015516   200156 633500                    EPPR3   BEGIN$,,AUTO
         4 015517   200203 453500                    STP3    @MODIFIER_SPECIFIED,,AUTO
         4 015520   015763 701000 4                  TSX1    SHRINK
         4 015521   000000 011000                    NOP     0

     3528    23287
     3529    23288
     3530    23289    6               END; /*  HEX(0) < .SIZE  */

  23289  4 015522   015572 710000 4                  TRA     s:23300

     3531    23290    5            ELSE IF (HEX (0) > KL$SETUP_CHR.SIZE)

  23290  4 015523   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 015524   003100 061500                    CSR     bolr='003'O
         4 015525   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015526   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 015527   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 015530   200220 116100                    CMPQ    PINC_INC+1,,AUTO
         4 015531   015572 605000 4                  TPL     s:23300

     3532    23291    6               THEN DO; /* Have to add more space to the block */

     3533    23292
     3534    23293    6                  BEGIN$ = ADDR (KL$SETUP_CHR.CHRS.NUM(0));
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:530  

  23293  4 015532   000051 236000 2                  LDQ     SETUP_CHR$
         4 015533   200000 036007                    ADLQ    65536,DL
         4 015534   200156 756100                    STQ     BEGIN$,,AUTO

     3535    23294    6                  NUM_CHARS = (HEX(0)+MOD(HEX(0),2)) - (KL$SETUP_CHR.SIZE+MOD(
             23294                           KL$SETUP_CHR.SIZE,2));

  23294  4 015535   200037 236100                    LDQ     HEX,,AUTO
         4 015536   000033 772000                    QRL     27
         4 015537   000001 376007                    ANQ     1,DL
         4 015540   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 015541   200037 236100                    LDQ     HEX,,AUTO
         4 015542   000033 772000                    QRL     27
         4 015543   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 015544   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015545   200221 036100                    ADLQ    PINC_INC+2,,AUTO
         4 015546   003100 061500                    CSR     bolr='003'O
         4 015547   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015550   200222 000044                    BDSC    PINC_INC+3,,AUTO         by=0,bit=0,n=36
         4 015551   200223 756100                    STQ     PINC_INC+4,,AUTO
         4 015552   200222 236100                    LDQ     PINC_INC+3,,AUTO
         4 015553   000001 376007                    ANQ     1,DL
         4 015554   003100 061500                    CSR     bolr='003'O
         4 015555   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015556   200224 000044                    BDSC    PINC_INC+5,,AUTO         by=0,bit=0,n=36
         4 015557   200224 036100                    ADLQ    PINC_INC+5,,AUTO
         4 015560   200225 756100                    STQ     PINC_INC+6,,AUTO
         4 015561   200223 236100                    LDQ     PINC_INC+4,,AUTO
         4 015562   200225 136100                    SBLQ    PINC_INC+6,,AUTO
         4 015563   200157 756100                    STQ     NUM_CHARS,,AUTO

     3536    23295
     3537    23296                 /* Now get more space and adjust the pointers. */
     3538    23297    6                  CALL ENLARGE (BEGIN$, NUM_CHARS);

  23297  4 015564   200157 631500                    EPPR1   NUM_CHARS,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:531  
         4 015565   200204 451500                    STP1    @I,,AUTO
         4 015566   200156 633500                    EPPR3   BEGIN$,,AUTO
         4 015567   200203 453500                    STP3    @MODIFIER_SPECIFIED,,AUTO
         4 015570   015773 701000 4                  TSX1    ENLARGE
         4 015571   000000 011000                    NOP     0

     3539    23298
     3540    23299    6                  END; /*  HEX(0) > .SIZE  */

     3541    23300    6            DO J = 0 TO HEX (0);

  23300  4 015572   200155 450100                    STZ     J,,AUTO
         4 015573   015605 710000 4                  TRA     s:23302+3

     3542    23301    6               KL$SETUP_CHR.CHRS.NUM (J) = HEX (J); /* HEX(0) = count */

  23301  4 015574   200155 236100                    LDQ     J,,AUTO
         4 015575   000011 402007                    MPY     9,DL
         4 015576   000051 470400 2                  LDP0    SETUP_CHR$
         4 015577   003106 060506                    CSL     bolr='003'O
         4 015600   200037 000011                    BDSC    HEX,Q,AUTO               by=0,bit=0,n=9
         4 015601   000000 200011                    BDSC    0,Q,PR0                  by=1,bit=0,n=9

     3543    23302    6               END;  /*  Do j  */

  23302  4 015602   200155 235100                    LDA     J,,AUTO
         4 015603   000001 035007                    ADLA    1,DL
         4 015604   200155 755100                    STA     J,,AUTO
         4 015605   200037 236100                    LDQ     HEX,,AUTO
         4 015606   000033 772000                    QRL     27
         4 015607   200155 116100                    CMPQ    J,,AUTO
         4 015610   015574 603000 4                  TRC     s:23301

     3544    23303    5            END; /*  Else  (HEX(0) ~= .SIZE  */

     3545    23304    4         END; /*  Not plus  */

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:532  
  23304  4 015611   015741 710000 4                  TRA     s:23349

     3546    23305    4      ELSE DO;    /*  Plus found  */

     3547    23306        /*  This means we have to add the input list to the current SETUP_CHR
     3548    23307            the one tricky part about this is in how many characters do we
     3549    23308            enlarge the SETUP_CHR space by?  since we must by definition
     3550    23309            use even numbers of bytes for pieces of a profile, we may or
     3551    23310            may not have an extra byte in the current SETUP_CHR.  And then
     3552    23311            we may or may not need an extra byte for the new stuff.
     3553    23312            So, KL$SETUP_CHR.SIZE + HEX(0) must be even.
     3554    23313        */
     3555    23314    5         IF HEX(0)+KL$SETUP_CHR.SIZE > 255 THEN DO;

  23314  4 015612   000051 470400 2                  LDP0    SETUP_CHR$
         4 015613   003100 061500                    CSR     bolr='003'O
         4 015614   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015615   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015616   200037 236100                    LDQ     HEX,,AUTO
         4 015617   000033 772000                    QRL     27
         4 015620   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 015621   000400 116007                    CMPQ    256,DL
         4 015622   015631 602000 4                  TNC     s:23338

     3556    23315        /*E* ERROR: ASD-E$SETUPCHRSIZERR-0
     3557    23316             MESSAGE: SETUP_CHR cannot exceed 255 bytes in length.
     3558    23317             MESSAGE1: The last operation would cause the length of SETUP_CHR to
     3559    23318                       exceed the maximum of 255 bytes and so will not be performed.
     3560    23319        */
     3561    23320                 %SCREAM (ERR#=E$SETUPCHRSIZERR, LEVEL=ERROR, MID='D');

  23332  4 015623   000217 630400 5                  EPPR0   143
         4 015624   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 015625   000000 701000 xent               TSX1    ASH$ERROR
         4 015626   000000 011000                    NOP     0

     3562    23335    5            ALTRETURN;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:533  

  23335  4 015627   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 015630   000000 702211                    TSX2  ! 0,X1

     3563    23336    5            END;
     3564    23337              /* Start expanding from the end of the current SETUP_CHR  */
     3565    23338    4         BEGIN$ = PINCRC ( SETUP_CHR$,KL$SETUP_CHR.SIZE+2+MOD(KL$SETUP_CHR.SIZE,2));

  23338  4 015631   003100 061500                    CSR     bolr='003'O
         4 015632   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015633   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015634   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015635   000001 376007                    ANQ     1,DL
         4 015636   003100 061500                    CSR     bolr='003'O
         4 015637   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015640   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 015641   200221 036100                    ADLQ    PINC_INC+2,,AUTO
         4 015642   000020 736000                    QLS     16
         4 015643   400000 036007                    ADLQ    -131072,DL
         4 015644   000051 036000 2                  ADLQ    SETUP_CHR$
         4 015645   200156 756100                    STQ     BEGIN$,,AUTO

     3566    23339    4         NUM_CHARS = HEX(0);

  23339  4 015646   200037 236100                    LDQ     HEX,,AUTO
         4 015647   000033 772000                    QRL     27
         4 015650   200157 756100                    STQ     NUM_CHARS,,AUTO

     3567    23340    4         NUM_CHARS = NUM_CHARS - MOD (KL$SETUP_CHR.SIZE,2);

  23340  4 015651   003100 061500                    CSR     bolr='003'O
         4 015652   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015653   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015654   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015655   000001 376007                    ANQ     1,DL
         4 015656   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 015657   200157 236100                    LDQ     NUM_CHARS,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:534  
         4 015660   200221 136100                    SBLQ    PINC_INC+2,,AUTO
         4 015661   200157 756100                    STQ     NUM_CHARS,,AUTO

     3568    23341    4         NUM_CHARS = NUM_CHARS + MOD (NUM_CHARS,2);

  23341  4 015662   000002 506007                    DIV     2,DL
         4 015663   000044 733000                    LRS     36
         4 015664   200157 036100                    ADLQ    NUM_CHARS,,AUTO
         4 015665   200157 756100                    STQ     NUM_CHARS,,AUTO

     3569    23342    4         CALL ENLARGE (BEGIN$, NUM_CHARS);

  23342  4 015666   200157 631500                    EPPR1   NUM_CHARS,,AUTO
         4 015667   200204 451500                    STP1    @I,,AUTO
         4 015670   200156 633500                    EPPR3   BEGIN$,,AUTO
         4 015671   200203 453500                    STP3    @MODIFIER_SPECIFIED,,AUTO
         4 015672   015773 701000 4                  TSX1    ENLARGE
         4 015673   000000 011000                    NOP     0

     3570    23343    5         DO J = 1 TO HEX(0);

  23343  4 015674   000001 235007                    LDA     1,DL
         4 015675   200155 755100                    STA     J,,AUTO
         4 015676   015722 710000 4                  TRA     s:23345+3

     3571    23344    5            KL$SETUP_CHR.CHRS.NUM (KL$SETUP_CHR.SIZE+J) = HEX(J);

  23344  4 015677   000051 470400 2                  LDP0    SETUP_CHR$
         4 015700   003100 061500                    CSR     bolr='003'O
         4 015701   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015702   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015703   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015704   200155 036100                    ADLQ    J,,AUTO
         4 015705   200221 756100                    STQ     PINC_INC+2,,AUTO
         4 015706   200155 236100                    LDQ     J,,AUTO
         4 015707   000011 402007                    MPY     9,DL
         4 015710   200222 756100                    STQ     PINC_INC+3,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:535  
         4 015711   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 015712   000011 402007                    MPY     9,DL
         4 015713   200222 235100                    LDA     PINC_INC+3,,AUTO
         4 015714   003106 060505                    CSL     bolr='003'O
         4 015715   200037 000011                    BDSC    HEX,A,AUTO               by=0,bit=0,n=9
         4 015716   000000 200011                    BDSC    0,Q,PR0                  by=1,bit=0,n=9

     3572    23345    5            END;   /*  Do j  */

  23345  4 015717   200155 235100                    LDA     J,,AUTO
         4 015720   000001 035007                    ADLA    1,DL
         4 015721   200155 755100                    STA     J,,AUTO
         4 015722   200037 236100                    LDQ     HEX,,AUTO
         4 015723   000033 772000                    QRL     27
         4 015724   200155 116100                    CMPQ    J,,AUTO
         4 015725   015677 603000 4                  TRC     s:23344

     3573    23346    4         KL$SETUP_CHR.SIZE = KL$SETUP_CHR.SIZE + HEX(0);

  23346  4 015726   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 015727   000051 470400 2                  LDP0    SETUP_CHR$
         4 015730   003100 061500                    CSR     bolr='003'O
         4 015731   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015732   200221 000044                    BDSC    PINC_INC+2,,AUTO         by=0,bit=0,n=36
         4 015733   200221 236100                    LDQ     PINC_INC+2,,AUTO
         4 015734   200220 036100                    ADLQ    PINC_INC+1,,AUTO
         4 015735   200222 756100                    STQ     PINC_INC+3,,AUTO
         4 015736   003100 061500                    CSR     bolr='003'O
         4 015737   200222 000044                    BDSC    PINC_INC+3,,AUTO         by=0,bit=0,n=36
         4 015740   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9

     3574    23347    4         END;   /*  Plus found  */

     3575    23348    3      END;  /*  HEX(0) ~= 0  */

     3576    23349    2   IF MOD (KL$SETUP_CHR.SIZE,2) = 1 THEN

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:536  
  23349  4 015741   000051 470400 2                  LDP0    SETUP_CHR$
         4 015742   003100 061500                    CSR     bolr='003'O
         4 015743   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015744   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015745   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015746   000001 376007                    ANQ     1,DL
         4 015747   000001 116007                    CMPQ    1,DL
         4 015750   015761 601000 4                  TNZ     s:23351

     3577    23350    2      KL$SETUP_CHR.CHRS.NUM(KL$SETUP_CHR.SIZE+1) = 0;

  23350  4 015751   003100 061500                    CSR     bolr='003'O
         4 015752   000000 200011                    BDSC    0,,PR0                   by=1,bit=0,n=9
         4 015753   200220 000044                    BDSC    PINC_INC+1,,AUTO         by=0,bit=0,n=36
         4 015754   200220 236100                    LDQ     PINC_INC+1,,AUTO
         4 015755   000011 402007                    MPY     9,DL
         4 015756   003106 061400                    CSR     bolr='003'O
         4 015757   000002 000044 xsym               BDSC    B_VECTNIL+2              by=0,bit=0,n=36
         4 015760   000000 400011                    BDSC    0,Q,PR0                  by=2,bit=0,n=9

     3578    23351    2   RETURN;

  23351  4 015761   200154 221300                    LDX1  ! PRO_TYPE+1,,AUTO
         4 015762   000001 702211                    TSX2  ! 1,X1

     3579    23352    2   END DO_SETUP_CHR;
     3580    23353        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:537  
     3581    23354        /* Shrink is the routine called when space needs to be removed
     3582    23355           from the profile record.  It will adjust all the individual
     3583    23356           pointers of the profile so they point to the correct areas.  The
     3584    23357           enlarge routine is used
     3585    23358           to create more room.
     3586    23359        */
     3587    23360    1   SHRINK: PROC (BEGIN$, CHARS);

  23360  4 015763   200202 741300       SHRINK       STX1  ! DUPE_CHR_IDX+2,,AUTO

     3588    23361    2   DCL CHARS SBIN;
     3589    23362    2   DCL BEGIN$ PTR;
     3590    23363    2   DCL NUM_CHARS SBIN;
     3591    23364    2   DCL I UBIN;
     3592    23365    2   DCL SHRINK_FLG BIT (1) ALIGNED;
     3593    23366
     3594    23367    2   NUM_CHARS = - (CHARS);  /* Shrink- make the size negative. */

  23367  4 015764   200204 470500                    LDP0    @CHARS,,AUTO
         4 015765   000000 235100                    LDA     0,,PR0
         4 015766   000000 531000                    NEG     0
         4 015767   200205 755100                    STA     NUM_CHARS,,AUTO

     3595    23368    2   SHRINK_FLG = '1'B;

  23368  4 015770   400000 236003                    LDQ     -131072,DU
         4 015771   200207 756100                    STQ     SHRINK_FLG,,AUTO

     3596    23369    2   GOTO COMMON;

  23369  4 015772   016000 710000 4                  TRA     COMMON

     3597    23370
     3598    23371    2   ENLARGE: ENTRY (BEGIN$, CHARS);

  23371  4 015773   200202 741300       ENLARGE      STX1  ! DUPE_CHR_IDX+2,,AUTO

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:538  
     3599    23372    2   NUM_CHARS = CHARS;

  23372  4 015774   200204 470500                    LDP0    @CHARS,,AUTO
         4 015775   000000 235100                    LDA     0,,PR0
         4 015776   200205 755100                    STA     NUM_CHARS,,AUTO

     3600    23373    2   SHRINK_FLG = '0'B;

  23373  4 015777   200207 450100                    STZ     SHRINK_FLG,,AUTO

  23373  4 016000                       COMMON       null
     3601    23374
     3602    23375    2   COMMON: ;
     3603    23376    2   NUM_CHARS = NUM_CHARS + (MOD (NUM_CHARS, 2)); /* Always use even increments*/

  23376  4 016000   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016001   000002 506007                    DIV     2,DL
         4 016002   000044 733000                    LRS     36
         4 016003   200205 036100                    ADLQ    NUM_CHARS,,AUTO
         4 016004   200205 756100                    STQ     NUM_CHARS,,AUTO

     3604    23377    2   CHARS = CHARS + (MOD (CHARS, 2)); /* Always use even increments*/

  23377  4 016005   000000 236100                    LDQ     0,,PR0
         4 016006   000002 506007                    DIV     2,DL
         4 016007   000044 733000                    LRS     36
         4 016010   000000 036100                    ADLQ    0,,PR0
         4 016011   000000 756100                    STQ     0,,PR0

     3605    23378
     3606    23379    2   PP_END$ = PINCRC (PP_END$, NUM_CHARS);

  23379  4 016012   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016013   000020 736000                    QLS     16
         4 016014   000107 036000 2                  ADLQ    PP_END$
         4 016015   000107 756000 2                  STQ     PP_END$

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:539  
     3607    23380
     3608    23381    2   IF (PNM$ >= BEGIN$) THEN PNM$ = PINCRC (PNM$, NUM_CHARS);

  23381  4 016016   200203 471500                    LDP1    @BEGIN$,,AUTO
         4 016017   000053 236000 2                  LDQ     PNM$
         4 016020   100000 116100                    CMPQ    0,,PR1
         4 016021   016026 602000 4                  TNC     s:23382

  23381  4 016022   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016023   000020 736000                    QLS     16
         4 016024   000053 036000 2                  ADLQ    PNM$
         4 016025   000053 756000 2                  STQ     PNM$

     3609    23382    2   IF (TCTL$ >= BEGIN$) THEN TCTL$ = PINCRC (TCTL$, NUM_CHARS);

  23382  4 016026   000043 236000 2                  LDQ     TCTL$
         4 016027   100000 116100                    CMPQ    0,,PR1
         4 016030   016035 602000 4                  TNC     s:23383

  23382  4 016031   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016032   000020 736000                    QLS     16
         4 016033   000043 036000 2                  ADLQ    TCTL$
         4 016034   000043 756000 2                  STQ     TCTL$

     3610    23383    2   IF (TATR$ >= BEGIN$) THEN TATR$ = PINCRC (TATR$, NUM_CHARS);

  23383  4 016035   000044 236000 2                  LDQ     TATR$
         4 016036   100000 116100                    CMPQ    0,,PR1
         4 016037   016044 602000 4                  TNC     s:23384

  23383  4 016040   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016041   000020 736000                    QLS     16
         4 016042   000044 036000 2                  ADLQ    TATR$
         4 016043   000044 756000 2                  STQ     TATR$

     3611    23384    2   IF (PLTN$ >= BEGIN$) THEN PLTN$ = PINCRC (PLTN$, NUM_CHARS);

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:540  
  23384  4 016044   000045 236000 2                  LDQ     PLTN$
         4 016045   100000 116100                    CMPQ    0,,PR1
         4 016046   016053 602000 4                  TNC     s:23385

  23384  4 016047   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016050   000020 736000                    QLS     16
         4 016051   000045 036000 2                  ADLQ    PLTN$
         4 016052   000045 756000 2                  STQ     PLTN$

     3612    23385    2   IF (DTABS$ >= BEGIN$) THEN DTABS$ = PINCRC (DTABS$, NUM_CHARS);

  23385  4 016053   000046 236000 2                  LDQ     DTABS$
         4 016054   100000 116100                    CMPQ    0,,PR1
         4 016055   016062 602000 4                  TNC     s:23386

  23385  4 016056   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016057   000020 736000                    QLS     16
         4 016060   000046 036000 2                  ADLQ    DTABS$
         4 016061   000046 756000 2                  STQ     DTABS$

     3613    23386    2   IF (TCCHR$ >= BEGIN$) THEN TCCHR$ = PINCRC (TCCHR$, NUM_CHARS);

  23386  4 016062   000047 236000 2                  LDQ     TCCHR$
         4 016063   100000 116100                    CMPQ    0,,PR1
         4 016064   016071 602000 4                  TNC     s:23387

  23386  4 016065   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016066   000020 736000                    QLS     16
         4 016067   000047 036000 2                  ADLQ    TCCHR$
         4 016070   000047 756000 2                  STQ     TCCHR$

     3614    23387    2   IF (FUNKEY$ >= BEGIN$) THEN FUNKEY$ = PINCRC (FUNKEY$, NUM_CHARS);

  23387  4 016071   000050 236000 2                  LDQ     FUNKEY$
         4 016072   100000 116100                    CMPQ    0,,PR1
         4 016073   016100 602000 4                  TNC     s:23388

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:541  
  23387  4 016074   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016075   000020 736000                    QLS     16
         4 016076   000050 036000 2                  ADLQ    FUNKEY$
         4 016077   000050 756000 2                  STQ     FUNKEY$

     3615    23388    2   IF (SETUP_CHR$ >= BEGIN$) THEN SETUP_CHR$ = PINCRC (SETUP_CHR$, NUM_CHARS);

  23388  4 016100   000051 236000 2                  LDQ     SETUP_CHR$
         4 016101   100000 116100                    CMPQ    0,,PR1
         4 016102   016107 602000 4                  TNC     s:23389

  23388  4 016103   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016104   000020 736000                    QLS     16
         4 016105   000051 036000 2                  ADLQ    SETUP_CHR$
         4 016106   000051 756000 2                  STQ     SETUP_CHR$

     3616    23389    2   IF (TRMD$ >= BEGIN$) THEN TRMD$ = PINCRC (TRMD$, NUM_CHARS);

  23389  4 016107   000052 236000 2                  LDQ     TRMD$
         4 016110   100000 116100                    CMPQ    0,,PR1
         4 016111   016116 602000 4                  TNC     s:23390

  23389  4 016112   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016113   000020 736000                    QLS     16
         4 016114   000052 036000 2                  ADLQ    TRMD$
         4 016115   000052 756000 2                  STQ     TRMD$

     3617    23390    2   IF (LINK$ >= BEGIN$) THEN LINK$ = PINCRC (LINK$, NUM_CHARS);

  23390  4 016116   000054 236000 2                  LDQ     LINK$
         4 016117   100000 116100                    CMPQ    0,,PR1
         4 016120   016125 602000 4                  TNC     s:23391

  23390  4 016121   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016122   000020 736000                    QLS     16
         4 016123   000054 036000 2                  ADLQ    LINK$
         4 016124   000054 756000 2                  STQ     LINK$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:542  

     3618    23391    2   IF (T3270$ >= BEGIN$) THEN T3270$ = PINCRC (T3270$, NUM_CHARS);

  23391  4 016125   000056 236000 2                  LDQ     T3270$
         4 016126   100000 116100                    CMPQ    0,,PR1
         4 016127   016134 602000 4                  TNC     s:23392

  23391  4 016130   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016131   000020 736000                    QLS     16
         4 016132   000056 036000 2                  ADLQ    T3270$
         4 016133   000056 756000 2                  STQ     T3270$

     3619    23392    2   IF (CCHRSZ$ >= BEGIN$) THEN CCHRSZ$ = PINCRC (CCHRSZ$, NUM_CHARS);

  23392  4 016134   000104 236000 2                  LDQ     CCHRSZ$
         4 016135   100000 116100                    CMPQ    0,,PR1
         4 016136   016143 602000 4                  TNC     s:23393

  23392  4 016137   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016140   000020 736000                    QLS     16
         4 016141   000104 036000 2                  ADLQ    CCHRSZ$
         4 016142   000104 756000 2                  STQ     CCHRSZ$

     3620    23393    2   IF (FUNKEYSZ$ >= BEGIN$) THEN FUNKEYSZ$ = PINCRC (FUNKEYSZ$, NUM_CHARS);

  23393  4 016143   000105 236000 2                  LDQ     FUNKEYSZ$
         4 016144   100000 116100                    CMPQ    0,,PR1
         4 016145   016152 602000 4                  TNC     s:23394

  23393  4 016146   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016147   000020 736000                    QLS     16
         4 016150   000105 036000 2                  ADLQ    FUNKEYSZ$
         4 016151   000105 756000 2                  STQ     FUNKEYSZ$

     3621    23394    2   IF (VIRCIR$ >= BEGIN$) THEN VIRCIR$ = PINCRC (VIRCIR$, NUM_CHARS);

  23394  4 016152   000055 236000 2                  LDQ     VIRCIR$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:543  
         4 016153   100000 116100                    CMPQ    0,,PR1
         4 016154   016161 602000 4                  TNC     s:23396

  23394  4 016155   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016156   000020 736000                    QLS     16
         4 016157   000055 036000 2                  ADLQ    VIRCIR$
         4 016160   000055 756000 2                  STQ     VIRCIR$

     3622    23395
     3623    23396    3   DO I = 0 TO SIZEW (ABSGRPRND$) - 1; /* Ptrs are 1 word so this works*/

  23396  4 016161   200206 450100                    STZ     I,,AUTO
         4 016162   016203 710000 4                  TRA     s:23399+3

     3624    23397    3      IF (ABSGRPRND$ (I) >= BEGIN$)

  23397  4 016163   200203 470500                    LDP0    @BEGIN$,,AUTO
         4 016164   200206 720100                    LXL0    I,,AUTO
         4 016165   000057 236010 2                  LDQ     ABSGRPRND$,X0
         4 016166   000000 116100                    CMPQ    0,,PR0
         4 016167   016200 602000 4                  TNC     s:23399

     3625    23398    3      THEN ABSGRPRND$ (I) = PINCRC (ABSGRPRND$ (I), NUM_CHARS);

  23398  4 016170   000057 471410 2                  LDP1    ABSGRPRND$,X0
         4 016171   200205 236100                    LDQ     NUM_CHARS,,AUTO
         4 016172   000011 402007                    MPY     9,DL
         4 016173   000000 116003                    CMPQ    0,DU
         4 016174   016176 605000 4                  TPL     s:23398+6
         4 016175   000044 036003                    ADLQ    36,DU
         4 016176   100000 503506                    ABD     0,QL,PR1
         4 016177   000057 451410 2                  STP1    ABSGRPRND$,X0

     3626    23399    3      END;

  23399  4 016200   200206 235100                    LDA     I,,AUTO
         4 016201   000001 035007                    ADLA    1,DL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:544  
         4 016202   200206 755100                    STA     I,,AUTO
         4 016203   200206 235100                    LDA     I,,AUTO
         4 016204   000010 115007                    CMPA    8,DL
         4 016205   016163 602000 4                  TNC     s:23397

     3627    23400
     3628    23401        /* Now that the pointers have all been mucked with, lets get the
     3629    23402           space we need so everything will work correctly!
     3630    23403        */
     3631    23404
     3632    23405    2   IF SHRINK_FLG

  23405  4 016206   200207 234100                    SZN     SHRINK_FLG,,AUTO
         4 016207   016223 605000 4                  TPL     s:23411

     3633    23406    3   THEN DO;

     3634    23407    3      CALL CLOSE_SPACE (BEGIN$, CHARS);

  23407  4 016210   200204 236100                    LDQ     @CHARS,,AUTO
         4 016211   200212 756100                    STQ     @BEGIN$+1,,AUTO
         4 016212   200203 236100                    LDQ     @BEGIN$,,AUTO
         4 016213   200211 756100                    STQ     SHRINK_FLG+2,,AUTO
         4 016214   016253 701000 4                  TSX1    CLOSE_SPACE
         4 016215   000000 011000                    NOP     0

     3635    23408    3      P_ARS = P_ARS - CHARS;

  23408  4 016216   200204 470500                    LDP0    @CHARS,,AUTO
         4 016217   000106 236000 2                  LDQ     P_ARS
         4 016220   000000 136100                    SBLQ    0,,PR0
         4 016221   000106 756000 2                  STQ     P_ARS

     3636    23409    3      END;

  23409  4 016222   016235 710000 4                  TRA     s:23414

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:545  
     3637    23410    3   ELSE DO;

     3638    23411    3      CALL OPEN_SPACE (BEGIN$, CHARS);

  23411  4 016223   200204 236100                    LDQ     @CHARS,,AUTO
         4 016224   200212 756100                    STQ     @BEGIN$+1,,AUTO
         4 016225   200203 236100                    LDQ     @BEGIN$,,AUTO
         4 016226   200211 756100                    STQ     SHRINK_FLG+2,,AUTO
         4 016227   016237 701000 4                  TSX1    OPEN_SPACE
         4 016230   000000 011000                    NOP     0

     3639    23412    3      P_ARS = P_ARS + CHARS;

  23412  4 016231   200204 470500                    LDP0    @CHARS,,AUTO
         4 016232   000106 236000 2                  LDQ     P_ARS
         4 016233   000000 036100                    ADLQ    0,,PR0
         4 016234   000106 756000 2                  STQ     P_ARS

     3640    23413    3      END;

     3641    23414    2   RETURN;

  23414  4 016235   200202 221300                    LDX1  ! DUPE_CHR_IDX+2,,AUTO
         4 016236   000001 702211                    TSX2  ! 1,X1

     3642    23415    2   END SHRINK;
     3643    23416        %EJECT;
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:546  
     3644    23417        /* OPEN_SPACE is a routine to open a space in the middle of a profile
     3645    23418           record.  It is passed 2 params, a pointer for where the space is
     3646    23419           opened after, and a value of the number of characters to open up.
     3647    23420           CLOSE_SPACE is an entry that works exactly the opposite of open.
     3648    23421           The space is closed from immediately after the pointer.
     3649    23422           Both these routines are called *ONLY* from _SHRINK_ or _ENLARGE_.*/
     3650    23423    1   OPEN_SPACE: PROC (BEGIN$, AMOUNT);

  23423  4 016237   200210 741300       OPEN_SPACE   STX1  ! SHRINK_FLG+1,,AUTO

     3651    23424    2   DCL BEGIN$ PTR;
     3652    23425    2   DCL AMOUNT SBIN;
     3653    23426
     3654    23427    2   DCL TO$ PTR;
     3655    23428    2   DCL FROM$ PTR;
     3656    23429    2   DCL MOVE_SIZE UBIN;
     3657    23430    2   DCL I UBIN;
     3658    23431    2   DCL PINC_INC SBIN;
     3659    23432    2   DCL BASED_BYTE SBIN (9) UNAL BASED;
     3660    23433
     3661    23434    2   FROM$ = PINCRC (PP_END$, -1);

  23434  4 016240   000107 236000 2                  LDQ     PP_END$
         4 016241   000034 036000 xsym               ADLQ    B_VECTNIL+28
         4 016242   200214 756100                    STQ     FROM$,,AUTO

     3662    23435    2   TO$ = PINCRC (FROM$, AMOUNT);

  23435  4 016243   200212 470500                    LDP0    @AMOUNT,,AUTO
         4 016244   000000 236100                    LDQ     0,,PR0
         4 016245   000020 736000                    QLS     16
         4 016246   200214 036100                    ADLQ    FROM$,,AUTO
         4 016247   200213 756100                    STQ     TO$,,AUTO

     3663    23436    2   PINC_INC = - 1;

  23436  4 016250   000001 335007                    LCA     1,DL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:547  
         4 016251   200217 755100                    STA     PINC_INC,,AUTO

     3664    23437    2   GOTO COMMON;

  23437  4 016252   016272 710000 4                  TRA     COMMON

     3665    23438
     3666    23439        /* Now the close space ROUTINE........ *******************/
     3667    23440    2   CLOSE_SPACE: ENTRY (BEGIN$, AMOUNT);

  23440  4 016253   200210 741300       CLOSE_SPACE  STX1  ! SHRINK_FLG+1,,AUTO

     3668    23441    2   FROM$ = PINCRC (BEGIN$, AMOUNT);

  23441  4 016254   200212 470500                    LDP0    @AMOUNT,,AUTO
         4 016255   000000 236100                    LDQ     0,,PR0
         4 016256   200211 471500                    LDP1    @BEGIN$,,AUTO
         4 016257   100000 473500                    LDP3    0,,PR1
         4 016260   000011 402007                    MPY     9,DL
         4 016261   000000 116003                    CMPQ    0,DU
         4 016262   016264 605000 4                  TPL     s:23441+8
         4 016263   000044 036003                    ADLQ    36,DU
         4 016264   300000 503506                    ABD     0,QL,PR3
         4 016265   200214 453500                    STP3    FROM$,,AUTO

     3669    23442    2   TO$ = BEGIN$;

  23442  4 016266   100000 236100                    LDQ     0,,PR1
         4 016267   200213 756100                    STQ     TO$,,AUTO

     3670    23443    2   PINC_INC = 1;

  23443  4 016270   000001 235007                    LDA     1,DL
         4 016271   200217 755100                    STA     PINC_INC,,AUTO

  23443  4 016272                       COMMON       null
     3671    23444
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:548  
     3672    23445    2   COMMON: ;
     3673    23446    2   MOVE_SIZE = POFFC (PP_END$, BEGIN$) - 1; /* END$ is after last char */

  23446  4 016272   200211 471500                    LDP1    @BEGIN$,,AUTO
         4 016273   100000 236100                    LDQ     0,,PR1
         4 016274   000020 772000                    QRL     16
         4 016275   200220 756100                    STQ     PINC_INC+1,,AUTO
         4 016276   000107 236000 2                  LDQ     PP_END$
         4 016277   000020 772000                    QRL     16
         4 016300   200220 136100                    SBLQ    PINC_INC+1,,AUTO
         4 016301   000001 136007                    SBLQ    1,DL
         4 016302   200215 756100                    STQ     MOVE_SIZE,,AUTO

     3674    23447
     3675    23448    3   DO I = 0 TO MOVE_SIZE;

  23448  4 016303   200216 450100                    STZ     I,,AUTO
         4 016304   016325 710000 4                  TRA     s:23452+3

     3676    23449    3      TO$ -> BASED_BYTE = FROM$ -> BASED_BYTE;

  23449  4 016305   200214 470500                    LDP0    FROM$,,AUTO
         4 016306   200213 471500                    LDP1    TO$,,AUTO
         4 016307   003100 060500                    CSL     bolr='003'O
         4 016310   000000 000011                    BDSC    0,,PR0                   by=0,bit=0,n=9
         4 016311   100000 000011                    BDSC    0,,PR1                   by=0,bit=0,n=9

     3677    23450    3      TO$ = PINCRC (TO$, PINC_INC);

  23450  4 016312   200217 236100                    LDQ     PINC_INC,,AUTO
         4 016313   000020 736000                    QLS     16
         4 016314   200213 036100                    ADLQ    TO$,,AUTO
         4 016315   200213 756100                    STQ     TO$,,AUTO

     3678    23451    3      FROM$ = PINCRC (FROM$, PINC_INC);

  23451  4 016316   200217 236100                    LDQ     PINC_INC,,AUTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:549  
         4 016317   000020 736000                    QLS     16
         4 016320   200214 036100                    ADLQ    FROM$,,AUTO
         4 016321   200214 756100                    STQ     FROM$,,AUTO

     3679    23452    3      END;

  23452  4 016322   200216 235100                    LDA     I,,AUTO
         4 016323   000001 035007                    ADLA    1,DL
         4 016324   200216 755100                    STA     I,,AUTO
         4 016325   200215 236100                    LDQ     MOVE_SIZE,,AUTO
         4 016326   200216 116100                    CMPQ    I,,AUTO
         4 016327   016305 603000 4                  TRC     s:23449

     3680    23453
     3681    23454    2   RETURN;

  23454  4 016330   200210 221300                    LDX1  ! SHRINK_FLG+1,,AUTO
         4 016331   000001 702211                    TSX2  ! 1,X1
     3682    23455    2   END OPEN_SPACE;
     3683    23456    1   END ASD$PROFILE;
     3684    23457        %EOD;

PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:550  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XG_SUBS_C.:E05TOU  is referenced.
   XG_PROFILE_C.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KV$INPFNC.:E05TOU  is referenced.
   AS_FUNKEY_DEFS_C.:E05TOU  is referenced.
   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   KV_PRMID_E.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   AS_SSUBS_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASD$PROFILE.
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:551  

 **** Variables and constants ****

  ****  Section 002  Data  ASD$PROFILE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    57-0-0/w PTR         r     1 ABSGRPRND$(0:7)
   104-0-0/w PTR         r     1 CCHRSZ$                   46-0-0/w PTR         r     1 DTABS$
    50-0-0/w PTR         r     1 FUNKEY$                  105-0-0/w PTR         r     1 FUNKEYSZ$
   110-0-0/w UBIN        r     1 FUNKEY_DEF_SIZE           41-0-0/w PTR         r     1 GRA$
    36-0-0/w STRC(108)   r     1 GRA_KEY_OLD               67-0-0/w PTR         r     1 KL_ABSGRPRND$
    54-0-0/w PTR         r     1 LINK$                      0-0-0/b BIT         r     1 MORE
    42-0-0/w PTR         r     1 PHDR$                     45-0-0/w PTR         r     1 PLTN$
    53-0-0/w PTR         r     1 PNM$                     107-0-0/w PTR         r     1 PP_END$
     4-0-0/c STRC(720)   r     1 PRO_HDR                   30-0-0/w STRC(108)   r     1 PRO_KEY
    33-0-0/w STRC(108)   r     1 PRO_KEY_OLD              106-0-0/w UBIN        r     1 P_ARS
     3-0-0/w UBIN        r     1 P_TYPE                    51-0-0/w PTR         r     1 SETUP_CHR$
    56-0-0/w PTR         r     1 T3270$                    44-0-0/w PTR         r     1 TATR$
    47-0-0/w PTR         r     1 TCCHR$                    43-0-0/w PTR         r     1 TCTL$
    52-0-0/w PTR         r     1 TRMD$                     70-0-0/b UBIN(9)     r     1 T_TAB(0:31)
    55-0-0/w PTR         r     1 VIRCIR$                    2-0-0/b BIT         r     1 YES_NO
     1-0-0/b BIT (2)     r     1 YES_NO_FLG

  ****  Section 003 RoData ASD$PROFILE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c STRC(747)   r     1 KL_CCHR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   212-0-0/w PTR         r     1 @AMOUNT                  203-0-0/w PTR         r     1 @BEGIN$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:552  
   211-0-0/w PTR         r     1 @BEGIN$                  204-0-0/w PTR         r     1 @CHARS
   204-0-0/w PTR         r     1 @I                       155-0-0/w PTR         r     1 @MAX_VAL
   156-0-0/w PTR         r     1 @MIN_VAL                 155-0-0/w PTR         r     1 @MN
   203-0-0/w PTR         r     1 @MODIFIER_SPECIFIED      156-0-0/w PTR         r     1 @MX
   163-0-0/w PTR         r     1 @NUM_HEX                 155-0-0/w PTR         r     1 @NUM_HEXS
   155-0-0/w PTR         r     1 @NUM_HEXS                175-0-0/w PTR         r     1 @POS
   175-0-0/w PTR         r     1 @POS                     175-0-0/w PTR         r     1 @POS
   157-0-0/w PTR         r     1 @PTROPT$                 155-0-0/w PTR         r     1 @SPLIT_STRUCT
   172-0-0/w BIT         r     1 ACTION_FLG                *0-0-0/w SBIN        r     1 AMOUNT
    21-0-0/w UBIN        r     1 ARS                      176-0-0/w PTR         r     1 BEGIN$
   175-0-0/w PTR         r     1 BEGIN$                   156-0-0/w PTR         r     1 BEGIN$
    *0-0-0/w PTR         r     1 BEGIN$                    *0-0-0/w PTR         r     1 BEGIN$
     4-0-0/w PTR         r     1 BLK$                     165-0-0/b UBIN(9)     r     1 BUFINDX
   155-0-0/w UBIN        r     1 BYTE2                     *0-0-0/w SBIN        r     1 CHARS
   164-0-0/w PTR         r     1 CMPE$                    163-0-0/b UBIN        r     1 CMP_VAL
   156-0-0/w UBIN        r     1 CODE                     157-0-0/w BIT         r     1 CONTINUE
    25-0-0/b BIT         r     1 CREATE                   200-0-0/w BIT         r     1 DELET
   200-0-0/w UBIN        r     1 DUPE_CHR_IDX              12-0-0/w UBIN        r     1 EXTWID
   167-0-0/w UBIN        r     1 FINISH                   160-0-0/w UBIN        r     1 FKEY
    26-0-0/b BIT         r     1 FROM                     214-0-0/w PTR         r     1 FROM$
    27-0-0/b BIT         r     1 GR_FLAG                    6-0-0/w UBIN        r     1 G_ARS
    37-0-0/b UBIN(9)     r     1 HEX(0:255)               137-0-0/w UBIN(9)     r     1 HEX_V
    13-0-0/w UBIN        r     1 I                        167-0-0/b UBIN        r     1 I
   161-0-0/w UBIN        r     1 I                        175-0-0/w UBIN        r     1 I
   176-0-0/w UBIN        r     1 I                        175-0-0/w UBIN        r     1 I
    *0-0-0/w UBIN        r     1 I                        175-0-0/w UBIN        r     1 I
   206-0-0/w UBIN        r     1 I                        216-0-0/w UBIN        r     1 I
   162-0-0/w UBIN        r     1 IDENT                    163-0-0/w UBIN        r     1 INTRO_NUM
    14-0-0/w UBIN        r     1 J                        170-0-0/b UBIN        r     1 J
   155-0-0/w UBIN        r     1 J                         15-0-0/w UBIN        r     1 K
   171-0-0/b UBIN        r     1 K                        164-0-0/w UBIN        r     1 K
     3-0-0/w STRC        r     1 KL$UBWORD                 16-0-0/w UBIN        r     1 L
    *0-0-0/w UBIN        r     1 MAX_VAL                   *0-0-0/w UBIN        r     1 MIN_VAL
    *0-0-0/w UBIN        r     1 MN                       177-0-0/b BIT         r     1 MODIFIED_FLG
   176-0-0/w UBIN        r     1 MODIFIER                  *0-0-0/b BIT         r     1 MODIFIER_SPECIFIED
   205-0-0/w UBIN        r     1 MOD_VALU                 166-0-0/b SBIN        r     1 MORE
   165-0-0/w BIT         r     1 MORE                     215-0-0/w UBIN        r     1 MOVE_SIZE
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:553  
    *0-0-0/w UBIN        r     1 MX                       161-0-0/b UBIN(9)     r     1 NUM
   162-0-0/b SBIN        r     1 NUM#                     177-0-0/w SBIN        r     1 NUM_CHARS
   176-0-0/w SBIN        r     1 NUM_CHARS                157-0-0/w SBIN        r     1 NUM_CHARS
   205-0-0/w SBIN        r     1 NUM_CHARS                164-0-0/w UBIN        r     1 NUM_FOUND
    *0-0-0/w UBIN        r     1 NUM_HEX                   *0-0-0/w UBIN        r     1 NUM_HEXS
    *0-0-0/w UBIN        r     1 NUM_HEXS                 166-0-0/w UBIN        r     1 NUM_NODES
    17-0-0/w UBIN        r     1 OP                       140-0-0/c STRC(288)   r     1 OPTION
    31-0-0/w UBIN        r     1 OP_CODE                   35-0-0/w PTR         r     1 P$
   217-0-0/w SBIN        r     1 PINC_INC                 165-0-0/b BIT         r     1 PLUS
   160-0-0/b BIT         r     1 PLUS                      *0-0-0/w UBIN        r     1 POS
    *0-0-0/w UBIN        r     1 POS                       *0-0-0/w UBIN        r     1 POS
   167-0-0/w UBIN        r     1 POSITION                   5-0-0/w PTR         r     1 PP$
    10-0-0/w UBIN        r     1 PP_SIZE                   11-0-0/w UBIN        r     1 PP_TYPE
   150-0-0/c STRC(99)    r     1 PROFILE_TYPE             153-0-0/b BIT (9)     r     1 PRO_TYPE
    30-0-0/w PTR         r     1 PTR$                     160-0-0/w PTR         r     1 PTRBGN$
     7-0-0/w PTR         r     1 PTROPT$                   *0-0-0/w PTR         r     1 PTROPT$
   173-0-0/w UBIN        r     1 SAVEIDX                  207-0-0/w BIT         r     1 SHRINK_FLG
   172-0-0/w UBIN        r     1 SIZE                     200-0-0/w UBIN        r     1 SIZE
   177-0-0/w UBIN        r     1 SIZE                      36-0-0/b STRC(18)    r     1 SPLIT
    32-0-0/w PTR         r     1 SPLIT$                    *0-0-0/b STRC(18)    r     1 SPLIT_STRUCT
    20-0-0/w STRC        r     1 SPLIT_VAL                166-0-0/w UBIN        r     1 START
    33-0-0/w UBIN        r     1 SUBS                     213-0-0/w PTR         r     1 TO$
    20-0-0/w UBIN        r     1 VAL                      177-0-0/w UBIN        r     1 VAL
   170-0-0/w SBIN        r     1 VAL1                     171-0-0/w SBIN        r     1 VAL2
    20-0-0/w BIT (4)     r     1 VAL_FOUR(0:8)
    20-0-0/w BIT (6)     r     1 VAL_SIX(0:5)
    20-0-0/w BIT (2)     r     1 VAL_TWO(0:17)             22-0-0/c CHAR(11)    r     1 XPNAME

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT (9)     r     1 ASL_3270_TYP               0-0-0/w BIT (9)     r     1 ASL_ASYNC_TYP
     0-0-0/w BIT (9)     r     1 ASL_LINK_TYP               0-0-0/w BIT (9)     r     1 ASL_POLLVIP_TYP
     0-0-0/c STRC(288)   r     1 ASL_PRO_OPT_TBL(0:8191)
     0-0-0/w BIT (9)     r     1 ASL_RBTD_TYP               0-0-0/w BIT (9)     r     1 ASL_RBT_TYP
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:554  
     0-0-0/w BIT (9)     r     1 ASL_URP_TYP                0-0-0/w BIT (9)     r     1 ASL_VIRCIR_TYP
     0-0-0/c CHAR        r     1 AS_BLANK                   0-0-0/b BIT         r     1 AS_FALSE
     0-0-0/w STRC(369)   r     1 AS_FIELD1                  0-0-0/w STRC(369)   r     1 AS_FIELD2
     0-0-0/b BIT         r     1 AS_TRUE                    0-0-0/w PTR         r     1 B$XL_UPPER_UR$
     0-0-0/w UBIN        r     1 CODE                       0-0-0/w PTR         r     1 DSEG1$
     0-0-0/w PTR         r     1 DSEG2$                     0-0-0/w PTR         r     1 DSEG3$
     0-0-0/b BIT         r     1 DSEG_FLG                   0-0-0/w UBIN        r     1 FUNKEY_CMD
     0-0-0/c CHAR(255)   r     1 IN_BUF                     0-0-0/w PTR         r     1 NODE$
     0-0-0/w UBIN        r     1 PROFILE_CMD                0-0-0/w UBIN        r     1 PRO_OPTS_LIST
     0-0-0/w STRC(504)   r     1 P_PCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(4608)  r     1 B$XL_UPPER_UR              0-0-0/c UBIN(9)     r     1 BASED_BYTE
     0-0-0/b SBIN(9)     r     1 BASED_BYTE                 0-0-0/w STRC(1404)  r     1 GRA$REC
     0-0-0/c CHAR(1024)  r     1 GRA_BUF                    0-0-0/b STRC        r     1 KL$3270
     0-0-0/b STRC        r     1 KL$ABSGRPRND               0-0-0/c STRC(747)   r     1 KL$CCHR
     0-0-0/c STRC(144)   r     1 KL$FUNKEY                  0-0-0/c STRC(90)    r     1 KL$LINK
     0-0-0/b STRC(18)    r     1 KL$SETUP_CHR               0-0-0/b STRC(126)   r     1 KL$TRMD
     0-0-0/c STRC(180)   r     1 KL$VIRCIR                  0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/w STRC(144)   r     1 P$NODE                     0-0-0/b STRC        r     1 PP$BIG_STRCT
     0-0-0/b STRC(18)    r     1 PP$STRCT                   0-0-0/c STRC(720)   r     1 PRO$HDR
     0-0-0/c CHAR(1024)  r     1 PRO_BUF                    0-0-0/b STRC(144)   r     1 VLP$PLATEN
     0-0-0/c ASTR(9)     r     1 VLP$PNAME                  0-0-0/w STRC(288)   r     1 VLP$TAB
     0-0-0/c STRC(360)   r     1 VLP$TRMATTR                0-0-0/b STRC(144)   r     1 VLP$TRMCTRL


   Procedure ASD$PROFILE requires 7386 words for executable code.
   Procedure ASD$PROFILE requires 152 words of local(AUTO) storage.
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:555  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:556  
          MINI XREF LISTING

ABSGRPRND$
     16997**DCL     19487--DOINDEX 19488<<ASSIGN  19589<<ASSIGN  21082>>ASSIGN  23396--DOINDEX 23397>>IF
     23398<<ASSIGN  23398>>ASSIGN
ACTION_FLG IN PROCEDURE DO_FUNKEY_DEFS
     22497**DCL     22570<<ASSIGN  22615<<ASSIGN  23038>>IF
ADD_ANOTHER_FUNKEY IN PROCEDURE DO_FUNKEY_DEFS
     22794**PROC    22710--CALL
ADD_INTRO IN PROCEDURE DO_FUNKEY_DEFS
     22841**PROC    22627--CALL    22708--CALL
ALT IN PROCEDURE GET_DAQ_OPT
     21894**LABEL   21891--CALLALT
ALT IN PROCEDURE GET_SGR_OPT
     21860**LABEL   21857--CALLALT
ALT IN PROCEDURE GET_TA
     21783**LABEL   21761--CALLALT
AMOUNT IN PROCEDURE OPEN_SPACE
     23425**DCL     23423--PROC    23435>>ASSIGN  23440--ENTRY   23441>>ASSIGN
ARS
     19016**DCL     19730<>CALL    19731>>ASSIGN  22504<>CALL    22505>>ASSIGN
ASA_BRKS_LOC
     13787**DCL     13787--REDEF
ASB$BINCHAR
      2995**DCL-ENT 21516--CALL    21574--CALL    21646--CALL    21980--CALL    22018--CALL    22080--CALL
     22221--CALL    22274--CALL    22669--CALL
ASB$GETSEG
     18230**DCL-ENT 19052--CALL
ASB$READ_SI
     18179**DCL-ENT 19730--CALL    22504--CALL
ASB$SET_PROMPT
     18167**DCL-ENT 19728--CALL    22500--CALL
ASD$BUILD_$3270
     18215**DCL-ENT 19460--CALL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:557  
ASD$BUILD_$ASYNC
     18197**DCL-ENT 19450--CALL
ASD$BUILD_$GRA
     18221**DCL-ENT 19524--CALL
ASD$BUILD_$LINK
     18206**DCL-ENT 19456--CALL
ASD$BUILD_$POLLVIP
     18218**DCL-ENT 19464--CALL
ASD$BUILD_$RBT
     18203**DCL-ENT 19454--CALL
ASD$BUILD_$RBTD
     18200**DCL-ENT 19452--CALL
ASD$BUILD_$URP
     18212**DCL-ENT 19458--CALL
ASD$BUILD_$VIRCIR
     18209**DCL-ENT 19462--CALL
ASD$GR_READ_PRO
     18227**DCL-ENT 19492--CALL    19494--CALL    19497--CALL
ASD$GR_WRITE_PRO
     18224**DCL-ENT 19666--CALL
ASD$HEX2OCT
     18182**DCL-ENT 21687--CALL    21706--CALL    22522--CALL    23138--CALL    23156--CALL    23163--CALL
ASD$R2HUSECS
     18185**DCL-ENT 21761--CALL
ASD$READ_PRO
     18173**DCL-ENT 19177--CALL    19360--CALL    19420--CALL
ASD$WRITE_PRO
     18176**DCL-ENT 19663--CALL
ASH$DQUEST
     18194**DCL-ENT 19753--CALL    22544--CALL
ASH$ERROR
     18164**DCL-ENT 19066--CALL    19104--CALL    19171--CALL    19197--CALL    19302--CALL    19324--CALL
     19414--CALL    19442--CALL    19517--CALL    19617--CALL    19672--CALL    19782--CALL    20019--CALL
     20068--CALL    20100--CALL    20184--CALL    20338--CALL    21132--CALL    21480--CALL    21542--CALL
     21600--CALL    21680--CALL    21745--CALL    21780--CALL    21850--CALL    21885--CALL    22050--CALL
     22114--CALL    22247--CALL    22300--CALL    22324--CALL    22422--CALL    22508--CALL    22603--CALL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:558  
     22703--CALL    22905--CALL    23030--CALL    23332--CALL
ASH$HELP
     18188**DCL-ENT 19747--CALL    22550--CALL
ASH$QUEST
     18191**DCL-ENT 19750--CALL    22547--CALL
ASH$WARN
     18170**DCL-ENT 19134--CALL    19219--CALL    19354--CALL    20643--CALL    20666--CALL    20689--CALL
     20717--CALL    20740--CALL    20763--CALL    20917--CALL    20940--CALL    20963--CALL    20989--CALL
     21010--CALL    21033--CALL    22354--CALL    22393--CALL
ASL_3270_TYP
     13645**DCL     19709>>ASSIGN  20194>>IF      20307>>IF
ASL_ASYNC_TYP
     13644**DCL     19689>>ASSIGN
ASL_LINK_TYP
     13644**DCL     19701>>ASSIGN
ASL_POLLVIP_TYP
     13643**DCL     19717>>ASSIGN
ASL_PRO_OPT_TBL.HDR
     13646**DCL     19761>>ASSIGN
ASL_PRO_OPT_TBL.TYP
     13646**DCL     19764>>IF
ASL_RBTD_TYP
     13644**DCL     19693>>ASSIGN
ASL_RBT_TYP
     13643**DCL     19697>>ASSIGN
ASL_URP_TYP
     13645**DCL     19705>>ASSIGN
ASL_VIRCIR_TYP
     13643**DCL     19713>>ASSIGN
AS_BLANK
     13647**DCL     19081>>ASSIGN  19082>>ASSIGN  20075>>IF      20081>>ASSIGN
AS_DEFAULT.BANNER_PERM
     14480**DCL     14481--REDEF
AS_DEFAULT.BUDGET.MACCT
     14385**DCL     14389--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:559  
     14398**DCL     14401--REDEF
AS_DEFAULT.BUDGET.PACCUM
     14381**DCL     14383--REDEF
AS_DEFAULT.BUDGET.PMAXC
     14376**DCL     14378--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     14496**DCL     14497--REDEF   14498--REDEF
AS_DEFAULT_DREC.PASSWORD
     15750**DCL     15754--REDEF
AS_DEFAULT_DREC.RENAME
     15773**DCL     15774--REDEF
AS_DFLT.BANNER_PERM
     14302**DCL     14303--REDEF
AS_DFLT.BUDGET.MACCT
     14207**DCL     14211--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     14220**DCL     14223--REDEF
AS_DFLT.BUDGET.PACCUM
     14203**DCL     14205--REDEF
AS_DFLT.BUDGET.PMAXC
     14198**DCL     14200--REDEF
AS_DFLT.SETUP_CHRA.TXT
     14318**DCL     14319--REDEF   14320--REDEF
AS_FALSE
     13647**DCL     19080>>ASSIGN  19229>>ASSIGN  19642>>ASSIGN  19646>>ASSIGN  19652>>ASSIGN  19905>>ASSIGN
     19916>>ASSIGN  20111>>ASSIGN  20119>>ASSIGN  20128>>ASSIGN  20311>>ASSIGN  21083>>ASSIGN  21799>>ASSIGN
     21821>>ASSIGN  22606>>ASSIGN  23003>>ASSIGN
AS_FE_MODE
     13653**DCL     13654--REDEF
AS_FIELD1
     13783**DCL     19184<<ASSIGN  19208<<ASSIGN  19429<<ASSIGN  19768<<ASSIGN  20906<<ASSIGN  20929<<ASSIGN
     20952<<ASSIGN  20978<<ASSIGN  20999<<ASSIGN  21022<<ASSIGN  21499<<ASSIGN  21557<<ASSIGN  21637<<ASSIGN
     21767<<ASSIGN  21837<<ASSIGN  21872<<ASSIGN  22204<<ASSIGN  22257<<ASSIGN
AS_FIELD1.COUNT
     13784**DCL     21731<<ASSIGN
AS_FIELD1.TEXT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:560  
     13784**DCL     21646<>CALL    21732<<ASSIGN  21980<>CALL    22080<>CALL    22669<>CALL
AS_FIELD2
     13784**DCL     19769<<ASSIGN
AS_FIELD2.TEXT
     13784**DCL     21516<>CALL    21574<>CALL    22018<>CALL    22221<>CALL    22274<>CALL
AS_MODE
     13650**DCL     13652--REDEF
AS_MOD_USER.ACCESS
     16515**DCL     16516--REDEF
AS_MOD_USER.BANNER
     16502**DCL     16503--REDEF
AS_MOD_USER.BANNER_PERM
     16504**DCL     16505--REDEF
AS_MOD_USER.BILL
     16510**DCL     16511--REDEF
AS_MOD_USER.CPROC
     16506**DCL     16507--REDEF
AS_MOD_USER.FEBILL
     16586**DCL     16587--REDEF
AS_MOD_USER.FECXTMEM
     16603**DCL     16604--REDEF
AS_MOD_USER.FEMINTS
     16588**DCL     16589--REDEF
AS_MOD_USER.FEMMEM
     16599**DCL     16600--REDEF
AS_MOD_USER.FEMTIME
     16597**DCL     16598--REDEF
AS_MOD_USER.FEPPRIV
     16594**DCL     16596--REDEF
AS_MOD_USER.FEPRIV
     16591**DCL     16593--REDEF
AS_MOD_USER.FORCE_BIT
     16500**DCL     16501--REDEF
AS_MOD_USER.KEY
     16582**DCL     16584--REDEF
AS_MOD_USER.LASTCPROC
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:561  
     16508**DCL     16509--REDEF
AS_MOD_USER.LIMITS.DO_
     16556**DCL     16557--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     16572**DCL     16573--REDEF
AS_MOD_USER.LIMITS.LO
     16552**DCL     16553--REDEF
AS_MOD_USER.LIMITS.MEM
     16548**DCL     16549--REDEF
AS_MOD_USER.LIMITS.MPRIO
     16576**DCL     16577--REDEF
AS_MOD_USER.LIMITS.PDIS
     16564**DCL     16565--REDEF
AS_MOD_USER.LIMITS.PO
     16560**DCL     16561--REDEF
AS_MOD_USER.LIMITS.TDIS
     16568**DCL     16569--REDEF
AS_MOD_USER.LIMITS.TIME
     16544**DCL     16545--REDEF
AS_MOD_USER.MAXENQ
     16525**DCL     16526--REDEF
AS_MOD_USER.PERM_BIT
     16498**DCL     16499--REDEF
AS_MOD_USER.PPRIV
     16520**DCL     16522--REDEF
AS_MOD_USER.PRIOB
     16527**DCL     16528--REDEF
AS_MOD_USER.PRIV
     16517**DCL     16519--REDEF
AS_MOD_USER.QUAN
     16523**DCL     16524--REDEF
AS_MOD_USER.SETUP
     16496**DCL     16497--REDEF
AS_PROJECT.BANNER_PERM
     14836**DCL     14837--REDEF
AS_PROJECT.BUDGET.MACCT
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:562  
     14741**DCL     14745--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     14754**DCL     14757--REDEF
AS_PROJECT.BUDGET.PACCUM
     14737**DCL     14739--REDEF
AS_PROJECT.BUDGET.PMAXC
     14732**DCL     14734--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     14852**DCL     14853--REDEF   14854--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     15014**DCL     15015--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     14919**DCL     14923--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     14932**DCL     14935--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     14915**DCL     14917--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     14910**DCL     14912--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     15030**DCL     15031--REDEF   15032--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     16236**DCL     16240--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     16259**DCL     16260--REDEF
AS_PROJECT_DREC.PASSWORD
     16074**DCL     16078--REDEF
AS_PROJECT_DREC.RENAME
     16097**DCL     16098--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     14658**DCL     14659--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     14563**DCL     14567--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     14576**DCL     14579--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:563  
     14559**DCL     14561--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     14554**DCL     14556--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     14674**DCL     14675--REDEF   14676--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     15912**DCL     15916--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     15935**DCL     15936--REDEF
AS_TRUE
     13647**DCL     19078>>ASSIGN  19224>>ASSIGN  19236>>ASSIGN  19628>>IF      19638>>ASSIGN  19640>>ASSIGN
     19644>>ASSIGN  19650>>ASSIGN  19721>>ASSIGN  19791>>ASSIGN  19792>>ASSIGN  19913>>ASSIGN  20125>>ASSIGN
     20314>>ASSIGN  21089>>ASSIGN  21091>>ASSIGN  21093>>ASSIGN  21095>>ASSIGN  21097>>ASSIGN  21099>>ASSIGN
     21101>>ASSIGN  22573>>ASSIGN  22980>>ASSIGN
AS_USERS.BANNER_PERM
     14124**DCL     14125--REDEF
AS_USERS.BUDGET.MACCT
     14029**DCL     14033--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     14042**DCL     14045--REDEF
AS_USERS.BUDGET.PACCUM
     14025**DCL     14027--REDEF
AS_USERS.BUDGET.PMAXC
     14020**DCL     14022--REDEF
AS_USERS.SETUP_CHRA.TXT
     14140**DCL     14141--REDEF   14142--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     15192**DCL     15193--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     15097**DCL     15101--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     15110**DCL     15113--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     15093**DCL     15095--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     15088**DCL     15090--REDEF
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:564  
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     15208**DCL     15209--REDEF   15210--REDEF
B$ALT.CODE
     18397**DCL     18397--REDEF   18398--REDEF   18398--REDEF
B$ALT.ERR.ERR#
     18399**DCL     18399--REDEF
B$ALT.EVID
     18398**DCL     18398--REDEF   18398--REDEF
B$XL_UPPER_UR
      5723**DCL     19110>>CALLBLT 19330>>CALLBLT
B$XL_UPPER_UR$
      5722**DCL      5723--IMP-PTR 19110>>CALLBLT 19330>>CALLBLT
BASED_BYTE IN PROCEDURE OPEN_SPACE
     23432**DCL     23449<<ASSIGN  23449>>ASSIGN
BASED_BYTE IN PROCEDURE PLACE_OPT
     21913**DCL     21917>>IF      22130<<ASSIGN
BEGIN$ IN PROCEDURE ADD_ANOTHER_FUNKEY
     22801**DCL     22805<<ASSIGN  22810<>CALL    22824<<ASSIGN  22825<>CALL    22826>>ASSIGN
BEGIN$ IN PROCEDURE DO_SETUP_CHR
     23242**DCL     23259<<ASSIGN  23263<>CALL    23282<<ASSIGN  23286<>CALL    23293<<ASSIGN  23297<>CALL
     23338<<ASSIGN  23342<>CALL
BEGIN$ IN PROCEDURE OPEN_SPACE
     23424**DCL     23423--PROC    23440--ENTRY   23441>>ASSIGN  23442>>ASSIGN  23446>>ASSIGN
BEGIN$ IN PROCEDURE REMOVE_THIS_FUNKEY
     22757**DCL     22761<<ASSIGN  22765<>CALL    22783<<ASSIGN  22784<>CALL    22785>>ASSIGN
BEGIN$ IN PROCEDURE SHRINK
     23362**DCL     23360--PROC    23371--ENTRY   23381>>IF      23382>>IF      23383>>IF      23384>>IF
     23385>>IF      23386>>IF      23387>>IF      23388>>IF      23389>>IF      23390>>IF      23391>>IF
     23392>>IF      23393>>IF      23394>>IF      23397>>IF      23407<>CALL    23411<>CALL
BLK$
     18992**DCL     18461--IMP-PTR 19084<<ASSIGN  19085>>ASSIGN  19110>>CALLBLT 19110>>CALLBLT 19110>>CALLBLT
     19111>>IF      19111>>IF      19111>>IF      19111>>IF      19114>>ASSIGN  19114>>ASSIGN  19237<<ASSIGN
     19309>>ASSIGN  19330>>CALLBLT 19330>>CALLBLT 19330>>CALLBLT 19331>>IF      19331>>IF      19331>>IF
     19331>>IF      19334>>ASSIGN  19334>>ASSIGN  19795<<ASSIGN  19796>>ASSIGN  20051>>IF      20073>>ASSIGN
     20073>>ASSIGN  20083>>IF      20105>>ASSIGN  20105>>ASSIGN  20164<<ASSIGN  21115>>IF      21137>>ASSIGN
     21137>>ASSIGN  21251<<ASSIGN  21493>>CALLBLT 21493>>CALLBLT 21686<<ASSIGN  21687>>CALL    21687>>CALL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:565  
     21705<<ASSIGN  21706>>CALL    21706>>CALL    21712<<ASSIGN  21713>>DOINDEX 21715>>ASSIGN  21715>>ASSIGN
     21731>>ASSIGN  21732>>ASSIGN  21732>>ASSIGN  21761<>CALL    22198>>CALLBLT 22198>>CALLBLT 22518<<ASSIGN
     22519>>IF      22521<<ASSIGN  22522>>CALL    22522>>CALL    22524>>IF      22526>>ASSIGN  22526>>ASSIGN
     22529>>IF      22534>>ASSIGN  23000<<ASSIGN  23001>>IF      23004>>CALLBLT 23004>>CALLBLT 23041<<ASSIGN
     23137<<ASSIGN  23138>>CALL    23138>>CALL    23155<<ASSIGN  23156>>CALL    23156>>CALL    23162<<ASSIGN
     23163>>CALL    23163>>CALL
BUFINDX IN PROCEDURE PLACE_OPT
     21908**DCL     21930<<ASSIGN  21939<<ASSIGN  21941<<ASSIGN  21942<<ASSIGN  21942>>ASSIGN  21942>>ASSIGN
     21946>>ASSIGN  21950<<ASSIGN  21951>>IF      21954>>ASSIGN  21955<<ASSIGN  21955>>ASSIGN  21959>>ASSIGN
     21960>>ASSIGN  22136>>DOINDEX 22141>>ASSIGN  22141>>ASSIGN  22149>>ASSIGN  22151<<ASSIGN  22151>>ASSIGN
     22152>>ASSIGN
BYTE2 IN PROCEDURE DO_FUNKEY_DEFS
     22483**DCL     22922>>ASSIGN  22984<<ASSIGN  22989<<ASSIGN  22992<<ASSIGN  22996<<ASSIGN  23005>>IF
     23007<<ASSIGN  23009>>IF      23011<<ASSIGN  23111<<ASSIGN  23117<<ASSIGN  23188>>IF
CCHRSZ$
     18994**DCL     19484<<ASSIGN  19539<<ASSIGN  21964>>IF      21965>>ASSIGN  21965>>ASSIGN  21967>>ASSIGN
     22057>>IF      22155>>IF      22160>>ASSIGN  22161>>ASSIGN  22170>>ASSIGN  22171>>ASSIGN  22174>>IF
     22175>>ASSIGN  22181>>ASSIGN  22185>>ASSIGN  23392>>IF      23392<<ASSIGN  23392>>ASSIGN
CHARS IN PROCEDURE SHRINK
     23361**DCL     23360--PROC    23367>>ASSIGN  23371--ENTRY   23372>>ASSIGN  23377<<ASSIGN  23377>>ASSIGN
     23377>>ASSIGN  23407<>CALL    23408>>ASSIGN  23411<>CALL    23412>>ASSIGN
CHECK_MODIFIERS IN PROCEDURE DO_FUNKEY_DEFS
     23079**PROC    23050--CALL    23060--CALL
CLOSE_SPACE IN PROCEDURE OPEN_SPACE
     23440**ENTRY   23407--CALL
CMPE$ IN PROCEDURE PLACE_OPT
     21907**DCL     21920<<ASSIGN  21921>>ASSIGN  22175<<ASSIGN  22176>>ASSIGN  22178>>ASSIGN
CMP_VAL IN PROCEDURE PLACE_OPT
     21906**DCL     21921<<ASSIGN  21925>>DOWHILE 21929>>IF      22124>>DOWHILE
CODE
     13780**DCL     19232<<ASSIGN  19233>>DOCASE  19739<<ASSIGN  19741>>DOCASE  19761>>ASSIGN  19764>>IF
     19809>>DOCASE  21082>>ASSIGN  21833>>IF
CODE IN PROCEDURE DO_FUNKEY_DEFS
     22484**DCL     22539<<ASSIGN  22541>>DOCASE
COMMON IN PROCEDURE OPEN_SPACE
     23443**LABEL   23437--GOTO
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:566  
COMMON IN PROCEDURE SHRINK
     23373**LABEL   23369--GOTO
CONTINUE IN PROCEDURE DO_FUNKEY_DEFS
     22485**DCL     22573<<ASSIGN  22574>>DOWHILE 22606<<ASSIGN
CREATE
     19018**DCL     19078<<ASSIGN  19080<<ASSIGN  19179>>IF      19204>>IF      19224<<ASSIGN  19273>>IF
     19363>>IF      19491>>IF      19655>>IF
DELET IN PROCEDURE MAYBE_REMOVE_INTRO
     22935**DCL     22945<<ASSIGN  22950<<ASSIGN  22954>>IF
DO_FUNKEY_DEFS
     22469**PROC    21452--CALL
DO_SETUP_CHR
     23240**PROC    21456--CALL
DSEG1$
     13788**DCL     16972--IMP-PTR 19177>>CALL    19360>>CALL    19420>>CALL    19450>>CALL    19452>>CALL
     19454>>CALL    19456>>CALL    19458>>CALL    19460>>CALL    19462>>CALL    19464>>CALL    19468>>ASSIGN
     19524>>CALL    19663>>CALL
DSEG2$
     13789**DCL     16979--IMP-PTR 19492>>CALL    19494>>CALL    19497>>CALL    19527>>ASSIGN  19666>>CALL
DSEG3$
     13789**DCL     22156>>ASSIGN  22158>>ASSIGN  22163>>ASSIGN  22165>>ASSIGN
DSEG_FLG
     13788**DCL     19050>>IF
DTABS$
     16988**DCL     19477<<ASSIGN  19563<<ASSIGN  20191>>ASSIGN  23385>>IF      23385<<ASSIGN  23385>>ASSIGN
DUPE_CHR_IDX IN PROCEDURE FIGURE_BYTE2
     22978**DCL     23042<<ASSIGN
ENLARGE IN PROCEDURE SHRINK
     23371**ENTRY   22810--CALL    22825--CALL    23297--CALL    23342--CALL
ERR_CODE
     13782**DCL     13783--REDEF
EXTWID
     19002**DCL     19629<<ASSIGN  19631<<ASSIGN  19632>>ASSIGN
FIGURE_BYTE2 IN PROCEDURE DO_FUNKEY_DEFS
     22970**PROC    22571--CALL    22616--CALL
FIND_FKEY IN PROCEDURE DO_FUNKEY_DEFS
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:567  
     22724**PROC    22575--CALL
FIND_FUNCTION_KEY IN PROCEDURE DO_FUNKEY_DEFS
     23174**PROC    22620--CALL
FINISH IN PROCEDURE GET_HEX_VAL
     21620**DCL     21695<<ASSIGN  21699<<ASSIGN  21702>>DOINDEX
FKEY IN PROCEDURE DO_FUNKEY_DEFS
     22486**DCL     22522<>CALL    22526<<ASSIGN  22531<<ASSIGN  22534<<ASSIGN  22738>>IF      22924>>ASSIGN
     22990>>IF
FROM
     19019**DCL     19229<<ASSIGN  19236<<ASSIGN  19273>>IF      19308>>IF      19425>>IF      19655>>IF
FROM$ IN PROCEDURE OPEN_SPACE
     23428**DCL     23434<<ASSIGN  23435>>ASSIGN  23441<<ASSIGN  23449>>ASSIGN  23451<<ASSIGN  23451>>ASSIGN
FUNC_OPTS_LOOP IN PROCEDURE DO_FUNKEY_DEFS
     22501**LABEL   22509--GOTO    22571--CALLALT
FUNKEY$
     16990**DCL     18081--IMP-PTR 19479<<ASSIGN  19572<<ASSIGN  22557>>IF      22561>>DOINDEX 22565>>ASSIGN
     22567>>ASSIGN  22579>>IF      22580>>ASSIGN  22636>>IF      22637>>ASSIGN  22711>>CALL    22732>>IF
     22737>>DOINDEX 22738>>IF      22761>>ASSIGN  22767>>ASSIGN  22767>>ASSIGN  22805>>ASSIGN  22805>>ASSIGN
     22812>>ASSIGN  22812>>ASSIGN  22854>>IF      22854>>IF      22861>>IF      22861>>IF      22868>>IF
     22871>>ASSIGN  22872>>ASSIGN  22876>>IF      22879>>ASSIGN  22880>>ASSIGN  22918>>ASSIGN  22920>>ASSIGN
     22922>>ASSIGN  22924>>ASSIGN  22937>>IF      22940>>ASSIGN  22941>>ASSIGN  22944>>ASSIGN  22946>>DOINDEX
     22947>>IF      22959>>ASSIGN  22963>>ASSIGN  23043>>DOINDEX 23044>>IF      23045>>DOSELCT 23047>>IF
     23047>>IF      23057>>IF      23057>>IF      23093>>ASSIGN  23097>>ASSIGN  23102>>ASSIGN  23186>>IF
     23187>>DOINDEX 23188>>IF      23188>>IF      23191>>DOCASE  23194>>IF      23194>>IF      23202>>IF
     23202>>IF      23387>>IF      23387<<ASSIGN  23387>>ASSIGN
FUNKEYSZ$
     18995**DCL     19485<<ASSIGN  19541<<ASSIGN  22644>>IF      22645>>IF      22769>>IF      22770>>ASSIGN
     22770>>ASSIGN  22772>>ASSIGN  22776>>ASSIGN  22777>>ASSIGN  22780>>IF      22783>>ASSIGN  22785<<ASSIGN
     22786>>ASSIGN  22788>>ASSIGN  22814>>IF      22815>>ASSIGN  22815>>ASSIGN  22817>>ASSIGN  22820>>IF
     22824>>ASSIGN  22826<<ASSIGN  22827>>ASSIGN  22828>>ASSIGN  22830>>ASSIGN  22831>>ASSIGN  22835>>ASSIGN
     23393>>IF      23393<<ASSIGN  23393>>ASSIGN
FUNKEY_CMD
     13642**DCL     22501--ASSIGN
FUNKEY_DEF_SIZE IN PROCEDURE DO_FUNKEY_DEFS
     22487**DCL     22645>>IF      22649>>IF      22660>>ASSIGN  22762>>ASSIGN  22770>>ASSIGN  22772>>ASSIGN
     22806>>ASSIGN  22815>>ASSIGN  22817>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:568  
F_READ_ERR
     19423**LABEL   19360--CALLALT 19420--CALLALT
GET_DAQ_OPT
     21864**PROC    20833--CALL    20839--CALL    20971--CALL    20997--CALL    21019--CALL
GET_DEC_VAL
     21486**PROC    19897--CALL    19909--CALL    19925--CALL    20043--CALL    20115--CALL    20138--CALL
     20147--CALL    20156--CALL    20165--CALL    20196--CALL    20201--CALL    20221--CALL    20356--CALL
     20360--CALL    20364--CALL    20368--CALL    20372--CALL    20376--CALL    20380--CALL    20425--CALL
     20429--CALL    20434--CALL    20438--CALL    20442--CALL    20461--CALL    20491--CALL    20495--CALL
     20501--CALL    20503--CALL    20520--CALL    20522--CALL    20528--CALL    20530--CALL    20535--CALL
     20537--CALL    20544--CALL    20549--CALL    20561--CALL    20566--CALL    20571--CALL    20576--CALL
     20585--CALL    20593--CALL    20598--CALL    20603--CALL    20608--CALL    20613--CALL    20618--CALL
     20780--CALL    20782--CALL    20797--CALL    20799--CALL    20803--CALL    20812--CALL    21438--CALL
     21447--CALL    21466--CALL
GET_HEX_VAL
     21614**PROC    20217--CALL    20232--CALL    20237--CALL    20242--CALL    20247--CALL    20252--CALL
     20257--CALL    20262--CALL    20267--CALL    20272--CALL    20277--CALL    20282--CALL    20287--CALL
     20292--CALL    20297--CALL    20302--CALL    20343--CALL    20350--CALL    20384--CALL    20465--CALL
     20469--CALL    20855--CALL    20860--CALL    21041--CALL    21046--CALL    21051--CALL    21056--CALL
     21061--CALL    21110--CALL    21393--CALL    21857--CALL    21891--CALL    23248--CALL
GET_IDENTIFIER IN PROCEDURE DO_FUNKEY_DEFS
     23131**PROC    22618--CALL    23039--CALL
GET_INTRODUCER IN PROCEDURE DO_FUNKEY_DEFS
     23142**PROC    22619--CALL    23040--CALL
GET_SGR_OPT
     21828**PROC    20828--CALL    20838--CALL    20865--CALL    20870--CALL    20874--CALL    20878--CALL
     20882--CALL    20886--CALL    20890--CALL    20894--CALL    20898--CALL    20925--CALL    20948--CALL
GET_TA
     21752**PROC    20388--CALL    20391--CALL    20394--CALL    20397--CALL    20400--CALL    20403--CALL
     20406--CALL    20409--CALL    20412--CALL    20415--CALL    20418--CALL
GRA$
     16983**DCL     19527<<ASSIGN  21141>>ASSIGN  21145>>ASSIGN  21149>>ASSIGN  21153>>ASSIGN  21157>>ASSIGN
     21161>>ASSIGN  21165>>ASSIGN  21169>>ASSIGN  21173>>ASSIGN  21177>>ASSIGN  21181>>ASSIGN  21185>>ASSIGN
     21189>>ASSIGN  21193>>ASSIGN  21197>>ASSIGN  21201>>ASSIGN  21205>>ASSIGN  21209>>ASSIGN  21213>>ASSIGN
     21217>>ASSIGN  21221>>ASSIGN  21225>>ASSIGN  21248>>ASSIGN  21255>>ASSIGN  21259>>ASSIGN  21263>>ASSIGN
     21267>>ASSIGN  21271>>ASSIGN  21275>>ASSIGN  21279>>ASSIGN  21283>>ASSIGN  21287>>ASSIGN  21291>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:569  
     21295>>ASSIGN  21299>>ASSIGN  21303>>ASSIGN  21307>>ASSIGN  21311>>ASSIGN  21315>>ASSIGN  21319>>ASSIGN
     21323>>ASSIGN  21327>>ASSIGN  21331>>ASSIGN  21335>>ASSIGN  21339>>ASSIGN  21343>>ASSIGN  21347>>ASSIGN
     21351>>ASSIGN  21355>>ASSIGN  21359>>ASSIGN  21363>>ASSIGN  21367>>ASSIGN  21371>>ASSIGN  21375>>ASSIGN
     21379>>ASSIGN  21383>>ASSIGN  21387>>ASSIGN  21391>>ASSIGN  22337>>IF      22361>>DOINDEX 22362>>IF
     22364>>IF      22366>>ASSIGN  22366>>ASSIGN  22367>>ASSIGN  22367>>ASSIGN  22370>>DOINDEX 22371>>ASSIGN
     22371>>ASSIGN  22373>>ASSIGN  22373>>ASSIGN  22376>>ASSIGN  22376>>ASSIGN  22377>>ASSIGN  22377>>ASSIGN
     22381>>IF      22403>>IF      22428>>IF      22430>>ASSIGN  22430>>ASSIGN  22431>>ASSIGN  22432>>ASSIGN
     22436>>IF      22436>>IF      22439>>ASSIGN  22439>>ASSIGN  22440>>ASSIGN  22440>>ASSIGN  22441>>ASSIGN
     22441>>ASSIGN  22446>>DOINDEX 22447>>IF      22449>>ASSIGN  22452>>IF      22454>>DOINDEX 22455>>ASSIGN
     22455>>ASSIGN  22457>>ASSIGN  22457>>ASSIGN  22460>>ASSIGN  22461>>ASSIGN  22462>>ASSIGN  22462>>ASSIGN
GRA$REC.BACKGROUND_COLOR
     18906**DCL     21383<<ASSIGN
GRA$REC.BACKGROUND_TYPE
     18881**DCL     21367<<ASSIGN
GRA$REC.BATCH_MODE
     18828**DCL     21339<<ASSIGN
GRA$REC.CHARSIZE_SUPPORT
     18794**DCL     21327<<ASSIGN
GRA$REC.CHAR_SIZE_COUNT
     18755**DCL     21307<<ASSIGN
GRA$REC.COLOR_ACTION
     18912**DCL     21387<<ASSIGN
GRA$REC.COLOR_MODEL
     18901**DCL     21379<<ASSIGN
GRA$REC.COLOR_TABLE_TYPE
     18874**DCL     21363<<ASSIGN
GRA$REC.COLOR_TAB_SIZE
     18706**DCL     21275<<ASSIGN
GRA$REC.DEPTH_USABLE
     18620**DCL     21197<<ASSIGN
GRA$REC.DEVICE_TYPE
     18886**DCL     21371<<ASSIGN
GRA$REC.DIMENSION_LEVEL
     18845**DCL     21347<<ASSIGN
GRA$REC.EDGE_TYPE
     18866**DCL     21359<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:570  
GRA$REC.FONT_COUNT
     18736**DCL     21295<<ASSIGN
GRA$REC.GLOBAL_COLORS
     18550**DCL     21141<<ASSIGN
GRA$REC.GLOBAL_INTENSITIES
     18555**DCL     21145<<ASSIGN
GRA$REC.GR_ESCAPES
     18942**DCL     22366<<ASSIGN  22376<<ASSIGN
GRA$REC.GR_ESCAPES.ESCAPE_FUNCTION
     18943**DCL     22362>>IF      22371<<ASSIGN  22371>>ASSIGN  22431<<ASSIGN  22436>>IF      22439<<ASSIGN
     22447>>IF      22452>>IF      22455<<ASSIGN  22455>>ASSIGN  22460<<ASSIGN
GRA$REC.GR_ESCAPES.ESCAPE_SUPPORT
     18948**DCL     22373<<ASSIGN  22373>>ASSIGN  22432<<ASSIGN  22440<<ASSIGN  22449<<ASSIGN  22457<<ASSIGN
     22457>>ASSIGN  22461<<ASSIGN
GRA$REC.HEIGHT_USABLE
     18615**DCL     21193<<ASSIGN
GRA$REC.HIDDEN_SURFACE_LEVEL
     18836**DCL     21343<<ASSIGN
GRA$REC.HIGHLIGHT_SUPPORT
     18809**DCL     21331<<ASSIGN
GRA$REC.IMAGE_TRANSF
     18891**DCL     21375<<ASSIGN
GRA$REC.INTENSITY_ACTION
     18919**DCL     21391<<ASSIGN
GRA$REC.INTENSITY_SUPPORT
     18801**DCL     21323<<ASSIGN
GRA$REC.INTENSITY_TAB_SIZE
     18712**DCL     21279<<ASSIGN
GRA$REC.LINESTYLE_HARDWARE_COUNT
     18719**DCL     21283<<ASSIGN
GRA$REC.LINESTYLE_SOFTWARE_COUNT
     18725**DCL     21287<<ASSIGN
GRA$REC.LINEWIDTH_COUNT
     18731**DCL     21291<<ASSIGN
GRA$REC.LINEWIDTH_SUPPORT
     18786**DCL     21319<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:571  
GRA$REC.MARKER_HARDWARE_COUNT
     18760**DCL     21311<<ASSIGN
GRA$REC.MARKER_SOFTWARE_COUNT
     18779**DCL     21315<<ASSIGN
GRA$REC.MAXIMUM_LINEWIDTH
     18645**DCL     21217<<ASSIGN
GRA$REC.MAX_CHAR_SIZE
     18661**DCL     21225<<ASSIGN
GRA$REC.MAX_PICK_ID
     18560**DCL     21149<<ASSIGN
GRA$REC.MINIMUM_LINEWIDTH
     18637**DCL     21213<<ASSIGN
GRA$REC.MIN_CHAR_SIZE
     18653**DCL     21221<<ASSIGN
GRA$REC.NDC_DEPTH_ADDR_SPACE
     18590**DCL     21173<<ASSIGN
GRA$REC.NDC_DEPTH_CHAR_POS
     18605**DCL     21185<<ASSIGN
GRA$REC.NDC_DEPTH_CURRENT
     18633**DCL     21209<<ASSIGN
GRA$REC.NDC_HEIGHT_ADDR_SPACE
     18585**DCL     21169<<ASSIGN
GRA$REC.NDC_HEIGHT_CHAR_POS
     18600**DCL     21181<<ASSIGN
GRA$REC.NDC_HEIGHT_CURRENT
     18629**DCL     21205<<ASSIGN
GRA$REC.NDC_WIDTH_ADDR_SPACE
     18580**DCL     21165<<ASSIGN
GRA$REC.NDC_WIDTH_CHAR_POS
     18595**DCL     21177<<ASSIGN
GRA$REC.NDC_WIDTH_CURRENT
     18625**DCL     21201<<ASSIGN
GRA$REC.NUM_ESCAPES
     18935**DCL     22337>>IF      22361>>DOINDEX 22364>>IF      22366>>ASSIGN  22367<<ASSIGN  22367>>ASSIGN
     22370>>DOINDEX 22376>>ASSIGN  22377<<ASSIGN  22377>>ASSIGN  22381>>IF      22403>>IF      22428>>IF
     22430<<ASSIGN  22430>>ASSIGN  22436>>IF      22439>>ASSIGN  22440>>ASSIGN  22441<<ASSIGN  22441>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:572  
     22446>>DOINDEX 22454>>DOINDEX 22462<<ASSIGN  22462>>ASSIGN
GRA$REC.OUTPUT_LEVEL
     18819**DCL     21335<<ASSIGN
GRA$REC.PEN_HARDWARE_COUNT
     18741**DCL     21299<<ASSIGN
GRA$REC.PEN_SOFTWARE_COUNT
     18748**DCL     21303<<ASSIGN
GRA$REC.PIXEL_TYPE
     18858**DCL     21355<<ASSIGN
GRA$REC.PIX_ARRAY_MAXX
     18696**DCL     21267<<ASSIGN
GRA$REC.PIX_ARRAY_MAXY
     18701**DCL     21271<<ASSIGN
GRA$REC.POLYGON_FILL.PATTERNED
     18691**DCL     21263<<ASSIGN
GRA$REC.POLYGON_FILL.PLAIN
     18681**DCL     21255<<ASSIGN
GRA$REC.POLYGON_FILL.SHADED
     18686**DCL     21259<<ASSIGN
GRA$REC.VIEW_SURFACE
     18669**DCL     21248<<ASSIGN
GRA$REC.VIEW_SURFACE_TYPE
     18851**DCL     21351<<ASSIGN
GRA$REC.WIDTH_USABLE
     18610**DCL     21189<<ASSIGN
GRA$REC.X_PER_CM
     18565**DCL     21153<<ASSIGN
GRA$REC.Y_PER_CM
     18570**DCL     21157<<ASSIGN
GRA$REC.Z_PER_CM
     18575**DCL     21161<<ASSIGN
GRA_BUF
     16979**DCL     19492<>CALL    19494<>CALL    19497<>CALL    19666<>CALL
GRA_KEY_OLD
     16980**DCL     19497<>CALL
GRA_OPT_PROC
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:573  
     22193**PROC    21140--CALL    21144--CALL    21148--CALL    21152--CALL    21156--CALL    21160--CALL
     21164--CALL    21168--CALL    21172--CALL    21176--CALL    21180--CALL    21184--CALL    21188--CALL
     21192--CALL    21196--CALL    21200--CALL    21204--CALL    21208--CALL    21212--CALL    21216--CALL
     21220--CALL    21224--CALL    21228--CALL    21247--CALL    21254--CALL    21258--CALL    21262--CALL
     21266--CALL    21270--CALL    21274--CALL    21278--CALL    21282--CALL    21286--CALL    21290--CALL
     21294--CALL    21298--CALL    21302--CALL    21306--CALL    21310--CALL    21314--CALL    21318--CALL
     21322--CALL    21326--CALL    21330--CALL    21334--CALL    21338--CALL    21342--CALL    21346--CALL
     21350--CALL    21354--CALL    21358--CALL    21362--CALL    21366--CALL    21370--CALL    21374--CALL
     21378--CALL    21382--CALL    21386--CALL    21390--CALL
GR_AGAIN
     19494**LABEL   19520--GOTO    19525--GOTO
GR_FLAG
     19020**DCL     19722<<ASSIGN  22307>>IF      22327<<ASSIGN
GR_READ_ERR
     19497**LABEL   19492--CALLALT 19494--CALLALT
GR_READ_ERR_CR
     19520**LABEL   19497--CALLALT
G_ARS
     18998**DCL     19492<>CALL    19494<>CALL    19497<>CALL    19665<<ASSIGN  19665>>ASSIGN  19666<>CALL
HEX
     19032**DCL     21622<<ASSIGN  21708<<ASSIGN  21715<<ASSIGN  21722<<ASSIGN  21795<<ASSIGN  21796<<ASSIGN
     21800<<ASSIGN  21801<<ASSIGN  21802<<ASSIGN  21803<<ASSIGN  21817<<ASSIGN  21818<<ASSIGN  21917>>IF
     21947>>ASSIGN  21951>>IF      21953>>DOINDEX 21954>>ASSIGN  21960>>ASSIGN  21961>>IF      22129>>IF
     22148>>IF      22149>>ASSIGN  22150>>DOINDEX 22152>>ASSIGN  23255>>IF      23273>>IF      23275>>DOINDEX
     23276>>ASSIGN  23280>>IF      23282>>ASSIGN  23282>>ASSIGN  23283>>ASSIGN  23283>>ASSIGN  23290>>IF
     23294>>ASSIGN  23294>>ASSIGN  23300>>DOINDEX 23301>>ASSIGN  23314>>IF      23339>>ASSIGN  23343>>DOINDEX
     23344>>ASSIGN  23346>>ASSIGN
HEX_ERR IN PROCEDURE GET_HEX_VAL
     21731**LABEL   21687--CALLALT 21706--CALLALT
HEX_V
     19033**DCL     20218>>ASSIGN  20385>>ASSIGN  20466>>ASSIGN  20470>>ASSIGN  20871>>ASSIGN  20875>>ASSIGN
     20879>>ASSIGN  20883>>ASSIGN  20887>>ASSIGN  20891>>ASSIGN  20895>>ASSIGN  20899>>ASSIGN  20900>>IF
     20926>>ASSIGN  20927>>IF      20949>>ASSIGN  20950>>IF      20972>>ASSIGN  21016>>ASSIGN  21020>>ASSIGN
     21622<<ASSIGN  21688<<ASSIGN
I
     19003**DCL     19231<<DOINDEX 19232>>ASSIGN  19237>>ASSIGN  19238<<ASSIGN  19242<<ASSIGN  19246<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:574  
     19250<<ASSIGN  19254<<ASSIGN  19258<<ASSIGN  19262<<ASSIGN  19266<<ASSIGN  19270<<ASSIGN  19487<<DOINDEX
     19488>>ASSIGN  19594<<ASSIGN  19595>>ASSIGN  19735<<ASSIGN  19737>>DOINDEX
I IN PROCEDURE CHECK_MODIFIERS
     23081**DCL     23079--PROC    23093>>ASSIGN  23097>>ASSIGN  23102>>ASSIGN
I IN PROCEDURE DO_FUNKEY_DEFS
     22488**DCL     22561<<DOINDEX 22562<>CALL    22563<>CALL    22572<<ASSIGN  22577<<ASSIGN  22585>>IF
     22643<<ASSIGN  22648<<ASSIGN  22649>>IF      22660<<ASSIGN  22660>>ASSIGN  22669<>CALL
I IN PROCEDURE FIGURE_BYTE2
     22975**DCL     22999<<DOINDEX 23000>>ASSIGN  23043<<DOINDEX 23044>>IF      23045>>DOSELCT 23050<>CALL
     23060<>CALL
I IN PROCEDURE FIND_FKEY
     22731**DCL     22737<<DOINDEX 22738>>IF      22740>>ASSIGN
I IN PROCEDURE FIND_FUNCTION_KEY
     23184**DCL     23187<<DOINDEX 23188>>IF      23188>>IF      23191>>DOCASE  23197>>ASSIGN  23205>>ASSIGN
     23212>>ASSIGN
I IN PROCEDURE MAYBE_REMOVE_INTRO
     22933**DCL     22946<<DOINDEX 22947>>IF      22947>>IF      22951<<ASSIGN
I IN PROCEDURE OPEN_SPACE
     23430**DCL     23448<<DOINDEX
I IN PROCEDURE PLACE_OPT
     21910**DCL     21953<<DOINDEX 21954>>ASSIGN  21971<<ASSIGN  21980<>CALL    22059<<ASSIGN  22061<<ASSIGN
     22062<<ASSIGN  22062>>ASSIGN  22063>>IF      22071<<ASSIGN  22071>>ASSIGN  22080<>CALL    22136<<DOINDEX
     22137>>ASSIGN  22138>>ASSIGN  22142<<DOINDEX 22143>>ASSIGN  22144>>ASSIGN  22150<<DOINDEX 22152>>ASSIGN
     22157<<DOINDEX 22158>>ASSIGN  22158>>ASSIGN  22164<<DOINDEX 22165>>ASSIGN  22165>>ASSIGN  22177<<DOINDEX
     22178>>ASSIGN  22178>>ASSIGN
I IN PROCEDURE SHRINK
     23364**DCL     23396<<DOINDEX 23397>>IF      23398>>ASSIGN  23398>>ASSIGN
IDENT IN PROCEDURE DO_FUNKEY_DEFS
     22489**DCL     22920>>ASSIGN  23044>>IF      23138<>CALL    23188>>IF
INITIALIZE_DAQ
     21815**PROC    20825--CALL    20851--CALL
INITIALIZE_SGR
     21792**PROC    20821--CALL    20849--CALL
INTRO_NUM IN PROCEDURE DO_FUNKEY_DEFS
     22490**DCL     22614<<ASSIGN  22857<<ASSIGN  22864<<ASSIGN  22870<<ASSIGN  22878<<ASSIGN  22918>>ASSIGN
IN_BUF
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:575  
     13778**DCL     19730<>CALL    22504<>CALL
J
     19004**DCL     19737<<DOINDEX 19738>>ASSIGN
J IN PROCEDURE DO_SETUP_CHR
     23241**DCL     23275<<DOINDEX 23276>>ASSIGN  23276>>ASSIGN  23300<<DOINDEX 23301>>ASSIGN  23301>>ASSIGN
     23343<<DOINDEX 23344>>ASSIGN  23344>>ASSIGN
J IN PROCEDURE PLACE_OPT
     21911**DCL     22134<<ASSIGN  22137<<ASSIGN  22138>>ASSIGN  22143<<ASSIGN  22144>>ASSIGN
K
     19005**DCL     19762<<CALLBLT 19763>>ASSIGN  20162<<DOINDEX 20164>>ASSIGN  20166>>ASSIGN  20167>>IF
     20168>>IF      20168>>IF      21086<<DOINDEX 21087>>DOCASE  21702<<DOINDEX 21703>>IF      21705>>ASSIGN
     21710>>IF      21712>>ASSIGN  22454<<DOINDEX 22455>>ASSIGN  22455>>ASSIGN  22457>>ASSIGN  22457>>ASSIGN
K IN PROCEDURE DO_FUNKEY_DEFS
     22491**DCL     22512<<DOINDEX 22513>>ASSIGN
K IN PROCEDURE PLACE_OPT
     21912**DCL     22141<<ASSIGN  22142>>DOINDEX
KL$3270
     18018**DCL     19585>>IF
KL$3270.DVCBFRSIZ
     18027**DCL     20198<<ASSIGN
KL$3270.EWALT#
     18024**DCL     21069<<ASSIGN
KL$3270.FRMFED
     18023**DCL     20311<<ASSIGN  20314<<ASSIGN
KL$3270.SIOPT#
     18025**DCL     21072<<ASSIGN
KL$ABSGRPRND.FLAGS
     18054**DCL     21083<<ASSIGN
KL$ABSGRPRND.FLAGS.DCRINT#
     18058**DCL     21093<<ASSIGN
KL$ABSGRPRND.FLAGS.FSTBLN#
     18061**DCL     21099<<ASSIGN
KL$ABSGRPRND.FLAGS.HDN#
     18056**DCL     21089<<ASSIGN
KL$ABSGRPRND.FLAGS.INCINT#
     18057**DCL     21091<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:576  
KL$ABSGRPRND.FLAGS.RVRVID#
     18062**DCL     21101<<ASSIGN
KL$ABSGRPRND.FLAGS.SLWBLN#
     18060**DCL     21097<<ASSIGN
KL$ABSGRPRND.FLAGS.UNDSCR#
     18059**DCL     21095<<ASSIGN
KL$ABSGRPRND.ID#
     18049**DCL     19589>>ASSIGN
KL$CCHR
     17357**DCL     22156<<ASSIGN  22156>>ASSIGN  22163<<ASSIGN  22163>>ASSIGN  22176<<ASSIGN  22176>>ASSIGN
KL$CCHR.BS_TIM
     17375**DCL     20391<>CALL
KL$CCHR.CCHR_ARY
     17440**DCL     17441--REDEF   21918--ASSIGN  21922>>IF      21925>>DOWHILE 21930>>ASSIGN  21933>>DOWHILE
     21941>>ASSIGN  21945>>ASSIGN  21946<<ASSIGN  21950>>ASSIGN  22054<<ASSIGN  22118<<ASSIGN  22125>>IF
     22126<<ASSIGN  22126>>ASSIGN
KL$CCHR.CTRFNCTIM
     17373**DCL     20388<>CALL
KL$CCHR.CUB_CHR
     17447**DCL     20263--ASSIGN
KL$CCHR.CUD_CHR
     17450**DCL     20278--ASSIGN
KL$CCHR.CUF_CHR
     17448**DCL     20268--ASSIGN
KL$CCHR.CUP_ALG
     17398**DCL     20213<<ASSIGN
KL$CCHR.CUP_BIS
     17399**DCL     20218<<ASSIGN  20222<<ASSIGN
KL$CCHR.CUP_CHR
     17444**DCL     20248--ASSIGN
KL$CCHR.CUP_CLMFRS
     17403**DCL     20226<<ASSIGN
KL$CCHR.CUP_CMP
     17404**DCL     20229<<ASSIGN
KL$CCHR.CUU_CHR
     17449**DCL     20273--ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:577  
KL$CCHR.DAQINP_CHR#
     17430**DCL     21016<<ASSIGN  21823<<ASSIGN
KL$CCHR.DAQINTRO_CHR#
     17458**DCL     20834--ASSIGN  21819--ASSIGN
KL$CCHR.DAQPRTGRD_CHR#
     17431**DCL     21020<<ASSIGN  21824<<ASSIGN
KL$CCHR.DAQPRT_CHR#
     17429**DCL     20972<<ASSIGN  21822<<ASSIGN
KL$CCHR.DAQ_ALG#
     17417**DCL     20824<<ASSIGN  20850<<ASSIGN  21868>>IF
KL$CCHR.DCH_CHR
     17442**DCL     20238--ASSIGN
KL$CCHR.DCLFLD_ALG#
     17418**DCL     20846<<ASSIGN
KL$CCHR.DCLFRM_CHR#
     17459**DCL     20856--ASSIGN
KL$CCHR.DFLTPRTMODE#
     17408**DCL     20843<<ASSIGN
KL$CCHR.DLTALLFLDS_CHR#
     17462**DCL     21042--ASSIGN
KL$CCHR.DLTFLD_CHR#
     17468**DCL     21062--ASSIGN
KL$CCHR.DLTLIN_CHR#
     17464**DCL     21052--ASSIGN
KL$CCHR.DVCOTPBFRSIZ
     17395**DCL     20203<<ASSIGN
KL$CCHR.ED0DLTFLD#
     17414**DCL     21407<<ASSIGN
KL$CCHR.ED0_CHR
     17445**DCL     20253--ASSIGN
KL$CCHR.ED2DLTFLD#
     17415**DCL     21410<<ASSIGN
KL$CCHR.ED2_CHR
     17451**DCL     20283--ASSIGN
KL$CCHR.EL0DLTFLD#
     17413**DCL     21404<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:578  
KL$CCHR.EL0_CHR
     17446**DCL     20258--ASSIGN
KL$CCHR.ENDDCLFRM_CHR#
     17460**DCL     20861--ASSIGN
KL$CCHR.ENDMSGLIN_CHR#
     17467**DCL     21394--ASSIGN
KL$CCHR.ERASEFLD_CHR#
     17465**DCL     21057--ASSIGN
KL$CCHR.ERSTIM
     17377**DCL     20394<>CALL
KL$CCHR.EXTSRD_CHR#
     17469**DCL     17470--REDEF   17471--REDEF   17472--REDEF   21111--ASSIGN
KL$CCHR.FRMFED_CHR
     17456**DCL     20344--ASSIGN
KL$CCHR.FRSCLMFLD#
     17409**DCL     21419<<ASSIGN
KL$CCHR.HOM_CHR
     17452**DCL     20288--ASSIGN
KL$CCHR.HPA_ALG
     17397**DCL     20210<<ASSIGN
KL$CCHR.HTS_CHR
     17453**DCL     20293--ASSIGN
KL$CCHR.ICHRQRDCH#
     17405**DCL     21413<<ASSIGN
KL$CCHR.ICH_CHR
     17441**DCL     20233--ASSIGN
KL$CCHR.ILNRQRDLN#
     17406**DCL     21416<<ASSIGN
KL$CCHR.INSLIN_CHR#
     17463**DCL     21047--ASSIGN
KL$CCHR.MSGLIN_CHR#
     17466**DCL     20351--ASSIGN
KL$CCHR.RESTORE_DFLTSCRN_CHR#
     17461**DCL     20866--ASSIGN  21804--ASSIGN
KL$CCHR.RGNSCROLL#
     17412**DCL     21401<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:579  
KL$CCHR.RSTINSMOD_CHR
     17443**DCL     20243--ASSIGN
KL$CCHR.SETFRMLNG_CHR
     17455**DCL     20303--ASSIGN
KL$CCHR.SGRDCRINT_CHR#
     17421**DCL     20879<<ASSIGN  21807<<ASSIGN
KL$CCHR.SGRFSTBLN_CHR#
     17424**DCL     20891<<ASSIGN  21810<<ASSIGN
KL$CCHR.SGRHDN_CHR#
     17419**DCL     20871<<ASSIGN
KL$CCHR.SGRINCDAQ#
     17407**DCL     20840<<ASSIGN  20901>>IF      20928>>IF      20951>>IF      20973>>IF      20998>>IF
     21021>>IF      21799<<ASSIGN  21821<<ASSIGN
KL$CCHR.SGRINCINT_CHR#
     17420**DCL     20875<<ASSIGN  21806<<ASSIGN
KL$CCHR.SGRINP_CHR#
     17427**DCL     20926<<ASSIGN
KL$CCHR.SGRINTRO_CHR#
     17457**DCL     20829--ASSIGN  21797--ASSIGN
KL$CCHR.SGRPRTGRD_CHR#
     17428**DCL     20949<<ASSIGN
KL$CCHR.SGRPRT_CHR#
     17426**DCL     20899<<ASSIGN
KL$CCHR.SGRRVRVID_CHR#
     17425**DCL     20895<<ASSIGN  21811<<ASSIGN
KL$CCHR.SGRSLWBLN_CHR#
     17423**DCL     20887<<ASSIGN  21809<<ASSIGN
KL$CCHR.SGRUNDSCR_CHR#
     17422**DCL     20883<<ASSIGN  21808<<ASSIGN
KL$CCHR.SGR_ALG#
     17416**DCL     20820<<ASSIGN  20848<<ASSIGN  21832>>IF
KL$CCHR.SPCDLTFLD#
     17410**DCL     21398<<ASSIGN
KL$CCHR.TBC3_CHR
     17454**DCL     20298--ASSIGN
KL$CCHR.TMNALG_AFTCR
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:580  
     17364**DCL     20357<<ASSIGN
KL$CCHR.TMNALG_AFTCUP
     17369**DCL     20377<<ASSIGN
KL$CCHR.TMNALG_AFTHPA
     17370**DCL     20381<<ASSIGN
KL$CCHR.TMNALG_AFTHT
     17368**DCL     20373<<ASSIGN
KL$CCHR.TMNALG_AFTLF
     17366**DCL     20365<<ASSIGN
KL$CCHR.TMNALG_BFRCR
     17365**DCL     20361<<ASSIGN
KL$CCHR.TMNALG_BFRLF
     17367**DCL     20369<<ASSIGN
KL$CCHR.TMNALG_FILCHR
     17371**DCL     20385<<ASSIGN
KL$CCHR.TMNALG_PRM1
     17379**DCL     20397<>CALL
KL$CCHR.TMNALG_PRM2
     17381**DCL     20400<>CALL
KL$CCHR.TMNALG_PRM3
     17383**DCL     20403<>CALL
KL$CCHR.TMNALG_PRM4
     17385**DCL     20406<>CALL
KL$CCHR.TMNALG_PRM5
     17387**DCL     20409<>CALL
KL$CCHR.TMNALG_PRM6
     17389**DCL     20412<>CALL
KL$CCHR.TMNALG_PRM7
     17391**DCL     20415<>CALL
KL$CCHR.TMNALG_PRM8
     17393**DCL     20418<>CALL
KL$CCHR.TXT_CHR
     17470**DCL     21920--ASSIGN  22132--ASSIGN
KL$CCHR.TXT_CHRA
     17471**DCL     22138<<ASSIGN  22138>>ASSIGN  22144<<ASSIGN  22144>>ASSIGN
KL$CCHR.TXT_UBIN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:581  
     17472**DCL     21942>>ASSIGN  21951>>IF      21954<<ASSIGN  21960>>ASSIGN  22141>>ASSIGN  22149<<ASSIGN
     22152<<ASSIGN  22158<<ASSIGN  22158>>ASSIGN  22165<<ASSIGN  22165>>ASSIGN  22178<<ASSIGN  22178>>ASSIGN
KL$FUNKEY.FCNKEY
     18125**DCL     18130--REDEF   18133--REDEF   18134--REDEF   18135--REDEF   22487--DCLINIT 22805--ASSIGN
KL$FUNKEY.FCNKEY.FCN_BYTE0
     18126**DCL     22761--ASSIGN  22918<<ASSIGN  22944>>ASSIGN  22947>>IF      23045>>DOSELCT 23191>>DOCASE
KL$FUNKEY.FCNKEY.FCN_BYTE1
     18127**DCL     22920<<ASSIGN  23044>>IF      23188>>IF
KL$FUNKEY.FCNKEY.FCN_BYTE2
     18128**DCL     22922<<ASSIGN  23093>>ASSIGN  23097<<ASSIGN  23102<<ASSIGN  23188>>IF
KL$FUNKEY.FCNKEY.FCN_BYTE3
     18129**DCL     22738>>IF      22924<<ASSIGN
KL$FUNKEY.INTRO1
     18093**DCL     18096--REDEF
KL$FUNKEY.INTRO1.CHR1
     18094**DCL     22854>>IF      22868>>IF      22871<<ASSIGN  23047>>IF      23194>>IF
KL$FUNKEY.INTRO1.CHR2
     18095**DCL     22854>>IF      22872<<ASSIGN  23047>>IF      23194>>IF
KL$FUNKEY.INTRO1_CHRS
     18096**DCL     22940<<ASSIGN  22959<<ASSIGN
KL$FUNKEY.INTRO2
     18097**DCL     18100--REDEF
KL$FUNKEY.INTRO2.CHR1
     18098**DCL     22861>>IF      22876>>IF      22879<<ASSIGN  23057>>IF      23202>>IF
KL$FUNKEY.INTRO2.CHR2
     18099**DCL     22861>>IF      22880<<ASSIGN  23057>>IF      23202>>IF
KL$FUNKEY.INTRO2_CHRS
     18100**DCL     22941<<ASSIGN  22963<<ASSIGN
KL$FUNKEY.NUM_DEFS
     18124**DCL     22557>>IF      22561>>DOINDEX 22565<<ASSIGN  22567<<ASSIGN  22579>>IF      22580<<ASSIGN
     22636>>IF      22637<<ASSIGN  22711>>CALL    22732>>IF      22737>>DOINDEX 22767<<ASSIGN  22767>>ASSIGN
     22805>>ASSIGN  22812<<ASSIGN  22812>>ASSIGN  22937>>IF      22946>>DOINDEX 23043>>DOINDEX 23186>>IF
     23187>>DOINDEX
KL$LINK.CHARGE#
     17753**DCL     20555<<ASSIGN
KL$LINK.CLS#
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:582  
     17718**DCL     20510<<ASSIGN
KL$LINK.EXTSEQ#
     17766**DCL     20500>>IF      20519>>IF      20534>>IF      20624<<ASSIGN
KL$LINK.FRMSIZ#
     17729**DCL     20507<<ASSIGN
KL$LINK.FSA#
     17746**DCL     20581<<ASSIGN
KL$LINK.IDLTIM#
     17790**DCL     20587<<ASSIGN
KL$LINK.MAXWND#
     17770**DCL     20523<<ASSIGN  20649>>IF      20650<<ASSIGN
KL$LINK.RESRTY#
     17789**DCL     20609<<ASSIGN
KL$LINK.RESTIM#
     17788**DCL     20614<<ASSIGN
KL$LINK.RSPDLY#
     17758**DCL     20538<<ASSIGN  20672>>IF      20673<<ASSIGN
KL$LINK.RTR#
     17775**DCL     20496<<ASSIGN
KL$LINK.RVR#
     17742**DCL     20515<<ASSIGN
KL$LINK.TMT#
     17779**DCL     20492<<ASSIGN
KL$LINK.WND#
     17784**DCL     20504<<ASSIGN  20626>>IF      20627<<ASSIGN
KL$SETUP_CHR.CHRS.NUM
     18152**DCL     23259--ASSIGN  23276<<ASSIGN  23293--ASSIGN  23301<<ASSIGN  23344<<ASSIGN  23350<<ASSIGN
KL$SETUP_CHR.SIZE
     18150**DCL     18151--REDEF   23257>>IF      23260>>ASSIGN  23265<<ASSIGN  23268<<ASSIGN  23273>>IF
     23280>>IF      23283>>ASSIGN  23283>>ASSIGN  23290>>IF      23294>>ASSIGN  23294>>ASSIGN  23314>>IF
     23338>>ASSIGN  23338>>ASSIGN  23340>>ASSIGN  23344>>ASSIGN  23346<<ASSIGN  23346>>ASSIGN  23349>>IF
     23350>>ASSIGN
KL$TRMD.BLKBYTES#
     17521**DCL     20431<<ASSIGN
KL$TRMD.BLKRECS#
     17516**DCL     20426<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:583  
KL$TRMD.COMPRESS#
     17556**DCL     20451<<ASSIGN  20453<<ASSIGN  20455<<ASSIGN  20457<<ASSIGN
KL$TRMD.DELAYS#
     17530**DCL     20439<<ASSIGN
KL$TRMD.EMCHR#
     17567**DCL     20466<<ASSIGN
KL$TRMD.ERRDUPBLK#
     17594**DCL     20476<<ASSIGN
KL$TRMD.INTERVAL#
     17551**DCL     20462<<ASSIGN
KL$TRMD.IRSCHR#
     17574**DCL     20470<<ASSIGN
KL$TRMD.LSTRECCTN#
     17584**DCL     20473<<ASSIGN
KL$TRMD.MULSTRM#
     17538**DCL     20446<<ASSIGN
KL$TRMD.PADSIGNON#
     17637**DCL     20488<<ASSIGN
KL$TRMD.PROTYP#
     17503**DCL     20422<<ASSIGN
KL$TRMD.RETRYS#
     17526**DCL     20435<<ASSIGN
KL$TRMD.RRR#
     17603**DCL     20479<<ASSIGN
KL$TRMD.SLC#
     17622**DCL     20482<<ASSIGN
KL$TRMD.SLCALLBLK#
     17630**DCL     20485<<ASSIGN
KL$UBWORD.NUM
     18979**DCL     18980--REDEF   20198>>ASSIGN  20203>>ASSIGN  20431>>ASSIGN
KL$UBWORD.REPLACE
     18980**DCL     20197<<ASSIGN  20202<<ASSIGN  20430<<ASSIGN
KL$VIRCIR.CDLY#
     17864**DCL     20443<<ASSIGN
KL$VIRCIR.CHARGE#
     17979**DCL     20557<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:584  
KL$VIRCIR.CLRRET#
     17839**DCL     20562<<ASSIGN
KL$VIRCIR.CLRTIM#
     17834**DCL     20567<<ASSIGN
KL$VIRCIR.CRTR#
     17869**DCL     20545<<ASSIGN
KL$VIRCIR.CTMT#
     17874**DCL     20550<<ASSIGN
KL$VIRCIR.DATRET#
     17849**DCL     20572<<ASSIGN
KL$VIRCIR.DATTIM#
     17844**DCL     20577<<ASSIGN
KL$VIRCIR.EXTSEQ#
     17932**DCL     20527>>IF      20698<<ASSIGN  20779>>IF      20796>>IF
KL$VIRCIR.IDLTIM#
     17859**DCL     20589<<ASSIGN
KL$VIRCIR.INTTIM#
     17854**DCL     20594<<ASSIGN
KL$VIRCIR.RCVSIZ#
     17887**DCL     20772<<ASSIGN
KL$VIRCIR.RCVTHR#
     17900**DCL     20775<<ASSIGN
KL$VIRCIR.RCVWND#
     17925**DCL     20700>>IF      20701<<ASSIGN  20783<<ASSIGN
KL$VIRCIR.RESRET#
     17829**DCL     20599<<ASSIGN
KL$VIRCIR.RESTIM#
     17824**DCL     20604<<ASSIGN
KL$VIRCIR.RSPDLY#
     17936**DCL     20531<<ASSIGN  20746>>IF      20747<<ASSIGN
KL$VIRCIR.RSPTMR#
     17879**DCL     20804<<ASSIGN
KL$VIRCIR.RSPTOCMP#
     17921**DCL     20786<<ASSIGN
KL$VIRCIR.RVR#
     17991**DCL     20514<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:585  
KL$VIRCIR.SNDSIZ#
     17963**DCL     20789<<ASSIGN
KL$VIRCIR.SNDTHR#
     17944**DCL     20792<<ASSIGN
KL$VIRCIR.SNDWND#
     17984**DCL     20723>>IF      20724<<ASSIGN  20800<<ASSIGN
KL$VIRCIR.TRADEL
     17812**DCL     20619<<ASSIGN
KL_ABSGRPRND$
     16998**DCL     18044--IMP-PTR 21082<<ASSIGN  21083>>ASSIGN  21089>>ASSIGN  21091>>ASSIGN  21093>>ASSIGN
     21095>>ASSIGN  21097>>ASSIGN  21099>>ASSIGN  21101>>ASSIGN
KL_CCHR
     17020**DCL     21970--IF      21971--ASSIGN
KL_CCHR.CCHR_ARY
     17103**DCL     17104--REDEF
KL_CCHR.EXTSRD_CHR#
     17132**DCL     17133--REDEF   17134--REDEF   17135--REDEF
KL_DEFAULT.PASSWORD
     16398**DCL     16402--REDEF
KL_DEFAULT.RENAME
     16421**DCL     16422--REDEF
KL_DFLT.PASSWORD
     15588**DCL     15592--REDEF
KL_DFLT.RENAME
     15611**DCL     15612--REDEF
KL_DREC.PASSWORD
     15426**DCL     15430--REDEF
KL_DREC.RENAME
     15449**DCL     15450--REDEF
KL_DREC_CNT.PASSWORD
     15313**DCL     15317--REDEF
KL_DREC_CNT.RENAME
     15336**DCL     15337--REDEF
L
     19006**DCL     21713<<DOINDEX 21715>>ASSIGN  22361<<DOINDEX 22362>>IF      22364>>IF      22370>>DOINDEX
     22381>>IF      22446<<DOINDEX 22447>>IF      22449>>ASSIGN  22452>>IF      22454>>DOINDEX 22460>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:586  
     22461>>ASSIGN
LINK$
     16994**DCL     19482<<ASSIGN  19578<<ASSIGN  20492>>ASSIGN  20496>>ASSIGN  20500>>IF      20504>>ASSIGN
     20507>>ASSIGN  20510>>ASSIGN  20515>>ASSIGN  20519>>IF      20523>>ASSIGN  20534>>IF      20538>>ASSIGN
     20555>>ASSIGN  20581>>ASSIGN  20587>>ASSIGN  20609>>ASSIGN  20614>>ASSIGN  20624>>ASSIGN  20626>>IF
     20627>>ASSIGN  20649>>IF      20650>>ASSIGN  20672>>IF      20673>>ASSIGN  23390>>IF      23390<<ASSIGN
     23390>>ASSIGN
MAX_VAL IN PROCEDURE GET_DEC_VAL
     21488**DCL     21486--PROC    21494>>IF      21516<>CALL
MAYBE_REMOVE_INTRO IN PROCEDURE DO_FUNKEY_DEFS
     22928**PROC    22562--CALL    22566--CALL    22578--CALL    22626--CALL
MIN_VAL IN PROCEDURE GET_DEC_VAL
     21489**DCL     21486--PROC    21547--IF      21549>>IF      21574<>CALL
MN IN PROCEDURE GRA_OPT_PROC
     22195**DCL     22193--PROC    22252>>IF      22274<>CALL
MODIFIED_FLG IN PROCEDURE FIGURE_BYTE2
     22977**DCL     22980<<ASSIGN  23003<<ASSIGN  23050<>CALL    23060<>CALL
MODIFIER IN PROCEDURE FIGURE_BYTE2
     22976**DCL     23004<<CALLBLT 23007>>ASSIGN  23011>>ASSIGN
MODIFIER_SPECIFIED IN PROCEDURE CHECK_MODIFIERS
     23080**DCL     23079--PROC    23095>>IF
MOD_VALU IN PROCEDURE CHECK_MODIFIERS
     23091**DCL     23093<<ASSIGN  23096>>IF      23101>>IF      23108>>IF      23108>>IF      23110>>IF
     23115>>IF      23116>>IF
MORE
     16926**DCL     19721<<ASSIGN  19725>>DOWHILE
MORE IN PROCEDURE DO_FUNKEY_DEFS
     22492**DCL     22499<<ASSIGN  22503>>DOWHILE 22554<<ASSIGN
MORE IN PROCEDURE PLACE_OPT
     21909**DCL     21947<<ASSIGN  21960<<ASSIGN  21962<<ASSIGN  21962>>ASSIGN  21965>>ASSIGN  21967>>ASSIGN
     21969>>IF      22062>>ASSIGN  22126>>ASSIGN  22135>>IF      22137>>ASSIGN  22143>>ASSIGN  22187>>ASSIGN
     22188>>ASSIGN
MOVE_SIZE IN PROCEDURE OPEN_SPACE
     23429**DCL     23446<<ASSIGN  23448>>DOINDEX
MX IN PROCEDURE GRA_OPT_PROC
     22196**DCL     22193--PROC    22199>>IF      22221<>CALL
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:587  
NEXT_PRO_OPT
     21466**LABEL   19785--GOTO    19897--CALLALT 19909--CALLALT 19925--CALLALT 20043--CALLALT 20115--CALLALT
     20138--CALLALT 20147--CALLALT 20156--CALLALT 20165--CALLALT 20187--GOTO    20196--CALLALT 20201--CALLALT
     20217--CALLALT 20221--CALLALT 20232--CALLALT 20234--CALLALT 20237--CALLALT 20239--CALLALT 20242--CALLALT
     20244--CALLALT 20247--CALLALT 20249--CALLALT 20252--CALLALT 20254--CALLALT 20257--CALLALT 20259--CALLALT
     20262--CALLALT 20264--CALLALT 20267--CALLALT 20269--CALLALT 20272--CALLALT 20274--CALLALT 20277--CALLALT
     20279--CALLALT 20282--CALLALT 20284--CALLALT 20287--CALLALT 20289--CALLALT 20292--CALLALT 20294--CALLALT
     20297--CALLALT 20299--CALLALT 20302--CALLALT 20304--CALLALT 20343--CALLALT 20345--CALLALT 20350--CALLALT
     20352--CALLALT 20356--CALLALT 20360--CALLALT 20364--CALLALT 20368--CALLALT 20372--CALLALT 20376--CALLALT
     20380--CALLALT 20384--CALLALT 20388--CALLALT 20391--CALLALT 20394--CALLALT 20397--CALLALT 20400--CALLALT
     20403--CALLALT 20406--CALLALT 20409--CALLALT 20412--CALLALT 20415--CALLALT 20418--CALLALT 20425--CALLALT
     20429--CALLALT 20434--CALLALT 20438--CALLALT 20442--CALLALT 20461--CALLALT 20465--CALLALT 20469--CALLALT
     20491--CALLALT 20495--CALLALT 20501--CALLALT 20503--CALLALT 20520--CALLALT 20522--CALLALT 20528--CALLALT
     20530--CALLALT 20535--CALLALT 20537--CALLALT 20544--CALLALT 20549--CALLALT 20561--CALLALT 20566--CALLALT
     20571--CALLALT 20576--CALLALT 20585--CALLALT 20593--CALLALT 20598--CALLALT 20603--CALLALT 20608--CALLALT
     20613--CALLALT 20618--CALLALT 20780--CALLALT 20782--CALLALT 20797--CALLALT 20799--CALLALT 20803--CALLALT
     20812--CALLALT 20828--CALLALT 20830--CALLALT 20833--CALLALT 20835--CALLALT 20838--CALLALT 20839--CALLALT
     20855--CALLALT 20857--CALLALT 20860--CALLALT 20862--CALLALT 20865--CALLALT 20867--CALLALT 20870--CALLALT
     20874--CALLALT 20878--CALLALT 20882--CALLALT 20886--CALLALT 20890--CALLALT 20894--CALLALT 20898--CALLALT
     20925--CALLALT 20948--CALLALT 20971--CALLALT 20997--CALLALT 21019--CALLALT 21041--CALLALT 21043--CALLALT
     21046--CALLALT 21048--CALLALT 21051--CALLALT 21053--CALLALT 21056--CALLALT 21058--CALLALT 21061--CALLALT
     21063--CALLALT 21110--CALLALT 21112--CALLALT 21140--CALLALT 21144--CALLALT 21148--CALLALT 21152--CALLALT
     21156--CALLALT 21160--CALLALT 21164--CALLALT 21168--CALLALT 21172--CALLALT 21176--CALLALT 21180--CALLALT
     21184--CALLALT 21188--CALLALT 21192--CALLALT 21196--CALLALT 21200--CALLALT 21204--CALLALT 21208--CALLALT
     21212--CALLALT 21216--CALLALT 21220--CALLALT 21224--CALLALT 21228--CALLALT 21247--CALLALT 21254--CALLALT
     21258--CALLALT 21262--CALLALT 21266--CALLALT 21270--CALLALT 21274--CALLALT 21278--CALLALT 21282--CALLALT
     21286--CALLALT 21290--CALLALT 21294--CALLALT 21298--CALLALT 21302--CALLALT 21306--CALLALT 21310--CALLALT
     21314--CALLALT 21318--CALLALT 21322--CALLALT 21326--CALLALT 21330--CALLALT 21334--CALLALT 21338--CALLALT
     21342--CALLALT 21346--CALLALT 21350--CALLALT 21354--CALLALT 21358--CALLALT 21362--CALLALT 21366--CALLALT
     21370--CALLALT 21374--CALLALT 21378--CALLALT 21382--CALLALT 21386--CALLALT 21390--CALLALT 21393--CALLALT
     21395--CALLALT 21438--CALLALT 21447--CALLALT 21452--CALLALT 21456--CALLALT 21466--CALLALT
NODE$
     13780**DCL     18414--IMP-PTR 19074<<ASSIGN  19077>>IF      19084>>ASSIGN  19228>>ASSIGN  19232>>ASSIGN
     19237>>ASSIGN  19734<<ASSIGN  19735>>ASSIGN  19738>>ASSIGN  22513<<ASSIGN  22514>>ASSIGN  22518>>ASSIGN
     22521>>ASSIGN  22539>>ASSIGN  22559>>IF      22982>>IF      22986>>IF      22986>>IF      23000>>ASSIGN
     23041>>ASSIGN  23137>>ASSIGN  23155>>ASSIGN  23160>>IF      23162>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:588  
NUM IN PROCEDURE PLACE_OPT
     21904**DCL     21919<<ASSIGN  21922>>IF      21924>>ASSIGN  21932>>ASSIGN  21945>>ASSIGN  21946>>ASSIGN
     21950>>ASSIGN  22054>>ASSIGN  22118>>ASSIGN  22123>>ASSIGN
NUM# IN PROCEDURE PLACE_OPT
     21905**DCL     21924<<ASSIGN  21925>>DOWHILE 21925>>DOWHILE 21927<<ASSIGN  21927>>ASSIGN  21929>>IF
     21930>>ASSIGN  21932<<ASSIGN  21933>>DOWHILE 21933>>DOWHILE 21935<<ASSIGN  21935>>ASSIGN  21937>>IF
     21941>>ASSIGN  22123<<ASSIGN  22124>>DOWHILE 22125>>IF      22126>>ASSIGN  22126>>ASSIGN  22127<<ASSIGN
     22127>>ASSIGN  22133<<ASSIGN  22136>>DOINDEX 22142>>DOINDEX
NUM_CHARS IN PROCEDURE ADD_ANOTHER_FUNKEY
     22802**DCL     22806<<ASSIGN  22810<>CALL    22823<<ASSIGN  22825<>CALL
NUM_CHARS IN PROCEDURE DO_SETUP_CHR
     23243**DCL     23260<<ASSIGN  23263<>CALL    23283<<ASSIGN  23286<>CALL    23294<<ASSIGN  23297<>CALL
     23339<<ASSIGN  23340<<ASSIGN  23340>>ASSIGN  23341<<ASSIGN  23341>>ASSIGN  23341>>ASSIGN  23342<>CALL
NUM_CHARS IN PROCEDURE REMOVE_THIS_FUNKEY
     22758**DCL     22762<<ASSIGN  22765<>CALL    22782<<ASSIGN  22784<>CALL
NUM_CHARS IN PROCEDURE SHRINK
     23363**DCL     23367<<ASSIGN  23372<<ASSIGN  23376<<ASSIGN  23376>>ASSIGN  23376>>ASSIGN  23379>>ASSIGN
     23381>>ASSIGN  23382>>ASSIGN  23383>>ASSIGN  23384>>ASSIGN  23385>>ASSIGN  23386>>ASSIGN  23387>>ASSIGN
     23388>>ASSIGN  23389>>ASSIGN  23390>>ASSIGN  23391>>ASSIGN  23392>>ASSIGN  23393>>ASSIGN  23394>>ASSIGN
     23398>>ASSIGN
NUM_FOUND IN PROCEDURE GET_HEX_VAL
     21617**DCL     21623<<ASSIGN  21701<<ASSIGN  21707<<ASSIGN  21707>>ASSIGN  21708>>ASSIGN  21714<<ASSIGN
     21714>>ASSIGN  21715>>ASSIGN  21722>>ASSIGN
NUM_HEX IN PROCEDURE GET_HEX_VAL
     21616**DCL     21614--PROC    21632>>IF      21646<>CALL    21685>>IF
NUM_HEXS IN PROCEDURE GET_DAQ_OPT
     21866**DCL     21864--PROC    21890--IF      21891<>CALL
NUM_HEXS IN PROCEDURE GET_SGR_OPT
     21830**DCL     21828--PROC    21856--IF      21857<>CALL
NUM_NODES IN PROCEDURE DO_FUNKEY_DEFS
     22493**DCL     22514<<ASSIGN  22516>>IF      22851>>IF      22999>>DOINDEX 23041>>ASSIGN  23137>>ASSIGN
     23148>>IF      23158>>IF
OP
     19007**DCL     21231<<ASSIGN  21235<<ASSIGN  21237<<ASSIGN  21238>>IF      21238>>IF      21238>>IF
     22335>>IF      22370<<DOINDEX 22371>>ASSIGN  22371>>ASSIGN  22373>>ASSIGN  22373>>ASSIGN  22432>>ASSIGN
     22440>>ASSIGN  22449>>ASSIGN  22461>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:589  
OPEN_SPACE
     23423**PROC    23411--CALL
OPTION
     19034**DCL     19768>>ASSIGN  20906>>ASSIGN  20929>>ASSIGN  20952>>ASSIGN  20978>>ASSIGN  20999>>ASSIGN
     21022>>ASSIGN  21499>>ASSIGN  21557>>ASSIGN  21637>>ASSIGN  21767>>ASSIGN  21837>>ASSIGN  21872>>ASSIGN
     22204>>ASSIGN  22257>>ASSIGN
OPTION.COUNT
     19035**DCL     19763<<ASSIGN
OPTION.TEXT
     19036**DCL     19761<<ASSIGN  19762>>CALLBLT
OPTS_ERR
     21480**LABEL   19732--CALLALT
OP_CODE
     19022**DCL     19790<<ASSIGN  19796<<ASSIGN  19797>>IF      19797>>IF      19799>>IF      19893>>IF
     19902>>IF      19921>>IF      19988>>DOCASE  19995>>ASSIGN  20039>>IF      20048>>ASSIGN  20080>>IF
     20108>>IF      20134>>IF      20143>>IF      20152>>IF      20207>>ASSIGN  20210>>ASSIGN  20213>>ASSIGN
     20216>>IF      20309>>IF      20318>>IF      20318>>IF      20422>>ASSIGN  20449>>DOCASE  20507>>ASSIGN
     20510>>ASSIGN  20514>>ASSIGN  20772>>ASSIGN  20775>>ASSIGN  20789>>ASSIGN  20792>>ASSIGN  20808>>IF
     20820>>ASSIGN  20821>>IF      20824>>ASSIGN  20825>>IF      20846>>ASSIGN  20847>>IF      21084>>IF
     21252>>DOCASE  21434>>IF      21443>>IF      21462>>IF
OUT$SYM
     18461**DCL     21687<>CALL    21706<>CALL    22522<>CALL    23138<>CALL    23156<>CALL    23163<>CALL
OUT$SYM.CODE
     18467**DCL     22519>>IF      22524>>IF      22529>>IF      22534>>ASSIGN  23001>>IF      23160>>IF
OUT$SYM.COUNT
     18484**DCL     18487--IMP-SIZ 19085>>ASSIGN  19110>>CALLBLT 19110>>CALLBLT 19111>>IF      19111>>IF
     19111>>IF      19114>>ASSIGN  19309>>ASSIGN  19330>>CALLBLT 19330>>CALLBLT 19331>>IF      19331>>IF
     19331>>IF      19334>>ASSIGN  20051>>IF      20073>>ASSIGN  20083>>IF      20105>>ASSIGN  21115>>IF
     21137>>ASSIGN  21229>>IF      21233>>IF      21493>>CALLBLT 21687>>CALL    21706>>CALL    21713>>DOINDEX
     21715>>ASSIGN  21731>>ASSIGN  21732>>ASSIGN  22198>>CALLBLT 22522>>CALL    22526>>ASSIGN  23004>>CALLBLT
     23138>>CALL    23156>>CALL    23163>>CALL
OUT$SYM.TEXT
     18487**DCL     19110>>CALLBLT 19111>>IF      19114>>ASSIGN  19330>>CALLBLT 19331>>IF      19334>>ASSIGN
     20073>>ASSIGN  20105>>ASSIGN  21137>>ASSIGN  21229>>IF      21233>>IF      21493>>CALLBLT 21715>>ASSIGN
     21732>>ASSIGN  22198>>CALLBLT 22526>>ASSIGN  23004>>CALLBLT
P$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:590  
     19026**DCL     18974--IMP-PTR
P$NODE.CODE
     18422**DCL     19077>>IF      19232>>ASSIGN  19739>>ASSIGN  19796>>ASSIGN  21087>>DOCASE  21625>>IF
     21627>>IF      21628>>ASSIGN  21703>>IF      21710>>IF      22539>>ASSIGN  22559>>IF      22982>>IF
     22986>>IF      22986>>IF      23247>>ASSIGN
P$NODE.SUBLK$
     18447**DCL     19084>>ASSIGN  19084>>ASSIGN  19232>>ASSIGN  19237>>ASSIGN  19237>>ASSIGN  19738>>ASSIGN
     19795>>ASSIGN  20164>>ASSIGN  21085>>ASSIGN  21087>>DOCASE  21229>>IF      21229>>IF      21233>>IF
     21233>>IF      21251>>ASSIGN  21251>>ASSIGN  21625>>IF      21627>>IF      21628>>ASSIGN  21686>>ASSIGN
     21686>>ASSIGN  21703>>IF      21705>>ASSIGN  21705>>ASSIGN  21710>>IF      21712>>ASSIGN  22513>>ASSIGN
     22518>>ASSIGN  22521>>ASSIGN  22521>>ASSIGN  22521>>ASSIGN  22559>>IF      22982>>IF      22986>>IF
     22986>>IF      23000>>ASSIGN  23041>>ASSIGN  23041>>ASSIGN  23041>>ASSIGN  23137>>ASSIGN  23137>>ASSIGN
     23137>>ASSIGN  23155>>ASSIGN  23155>>ASSIGN  23155>>ASSIGN  23160>>IF      23162>>ASSIGN  23162>>ASSIGN
     23162>>ASSIGN  23247>>ASSIGN
P$NODE.SUBNODES
     18426**DCL     19228>>ASSIGN  19735>>ASSIGN  19789>>IF      20162>>DOINDEX 21086>>DOINDEX 21624>>IF
     21630>>ASSIGN  22512>>DOINDEX 22514>>ASSIGN  23246>>IF
PHDR$
     16984**DCL     19469<<ASSIGN  19490>>IF      19585>>IF      19586>>ASSIGN  19600>>ASSIGN  19601>>IF
     19632>>ASSIGN  19633>>ASSIGN  19634>>ASSIGN  19635>>ASSIGN  19636>>ASSIGN  19637>>ASSIGN  19638>>ASSIGN
     19640>>ASSIGN  19642>>ASSIGN  19644>>ASSIGN  19646>>ASSIGN  19650>>ASSIGN  19652>>ASSIGN  19655>>ASSIGN
     19664>>IF      20025>>ASSIGN  20029>>ASSIGN  21137>>ASSIGN  22305>>IF      22306>>ASSIGN  22308>>IF
PINC_INC IN PROCEDURE OPEN_SPACE
     23431**DCL     23436<<ASSIGN  23443<<ASSIGN  23450>>ASSIGN  23451>>ASSIGN
PLACE_OPT
     21899**PROC    20234--CALL    20239--CALL    20244--CALL    20249--CALL    20254--CALL    20259--CALL
     20264--CALL    20269--CALL    20274--CALL    20279--CALL    20284--CALL    20289--CALL    20294--CALL
     20299--CALL    20304--CALL    20345--CALL    20352--CALL    20830--CALL    20835--CALL    20857--CALL
     20862--CALL    20867--CALL    21043--CALL    21048--CALL    21053--CALL    21058--CALL    21063--CALL
     21112--CALL    21395--CALL    21798--CALL    21805--CALL    21820--CALL
PLTN$
     16987**DCL     19476<<ASSIGN  19560<<ASSIGN  19628>>IF      19632>>ASSIGN  19633>>ASSIGN  20110>>ASSIGN
     20111>>ASSIGN  20118>>ASSIGN  20119>>ASSIGN  20125>>ASSIGN  20128>>ASSIGN  20129>>ASSIGN  20135>>ASSIGN
     20139>>ASSIGN  20144>>ASSIGN  20148>>ASSIGN  20153>>ASSIGN  20157>>ASSIGN  23384>>IF      23384<<ASSIGN
     23384>>ASSIGN
PLUS IN PROCEDURE DO_SETUP_CHR
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:591  
     23244**DCL     23247<<ASSIGN  23272>>IF
PLUS IN PROCEDURE GET_HEX_VAL
     21618**DCL     21628<<ASSIGN  21631>>IF      21693>>IF
PNM$
     16993**DCL     19473<<ASSIGN  19551<<ASSIGN  19658>>ASSIGN  19659>>ASSIGN  19659>>ASSIGN  19660>>ASSIGN
     19661>>ASSIGN  19661>>ASSIGN  23381>>IF      23381<<ASSIGN  23381>>ASSIGN
POS IN PROCEDURE MAYBE_REMOVE_INTRO
     22929**DCL     22928--PROC    22937>>IF      22944>>ASSIGN  22947>>IF
POS IN PROCEDURE PUT_IN_FUNKEY
     22912**DCL     22911--PROC    22918>>ASSIGN  22920>>ASSIGN  22922>>ASSIGN  22924>>ASSIGN
POS IN PROCEDURE REMOVE_THIS_FUNKEY
     22756**DCL     22747--PROC    22761>>ASSIGN
POSITION IN PROCEDURE DO_FUNKEY_DEFS
     22494**DCL     22578<>CALL    22582<>CALL    22626<>CALL    22635<>CALL    22740<<ASSIGN  23197<<ASSIGN
     23205<<ASSIGN  23212<<ASSIGN  23221<<ASSIGN
PP$
     18993**DCL     18957--IMP-PTR 18960--IMP-PTR 19468<<ASSIGN  19469>>ASSIGN  19470>>ASSIGN  19471<<ASSIGN
     19471>>ASSIGN  19528>>DOWHILE 19529>>IF      19530>>ASSIGN  19531>>ASSIGN  19531>>ASSIGN  19534>>ASSIGN
     19535>>ASSIGN  19539>>ASSIGN  19541>>ASSIGN  19543>>IF      19544<<ASSIGN  19544>>ASSIGN  19546<<ASSIGN
     19546>>ASSIGN  19551>>ASSIGN  19554>>ASSIGN  19557>>ASSIGN  19560>>ASSIGN  19563>>ASSIGN  19566>>ASSIGN
     19569>>ASSIGN  19572>>ASSIGN  19575>>ASSIGN  19578>>ASSIGN  19581>>ASSIGN  19584>>ASSIGN  19589>>ASSIGN
     19589>>ASSIGN  19595<<ASSIGN  19595>>ASSIGN
PP$BIG_STRCT.BIG
     18961**DCL     22160<<ASSIGN  22828<<ASSIGN
PP$BIG_STRCT.SIZE.B
     18967**DCL     19531>>ASSIGN  21965>>ASSIGN  22171<<ASSIGN  22770>>ASSIGN  22777<<ASSIGN  22815>>ASSIGN
     22831<<ASSIGN
PP$BIG_STRCT.SIZE.T
     18965**DCL     19531>>ASSIGN  21965>>ASSIGN  22170<<ASSIGN  22770>>ASSIGN  22776<<ASSIGN  22815>>ASSIGN
     22830<<ASSIGN
PP$BIG_STRCT.TYPE
     18962**DCL     19530>>ASSIGN  22161<<ASSIGN  22827<<ASSIGN
PP$STRCT.SIZE
     18959**DCL     19535>>ASSIGN  21967>>ASSIGN  22185<<ASSIGN  22645>>IF      22772>>ASSIGN  22788<<ASSIGN
     22817>>ASSIGN  22835<<ASSIGN
PP$STRCT.TYPE
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:592  
     18958**DCL     19529>>IF      19534>>ASSIGN  19543>>IF      21964>>IF      22057>>IF      22155>>IF
     22174>>IF      22181<<ASSIGN  22644>>IF      22769>>IF      22780>>IF      22786<<ASSIGN  22814>>IF
     22820>>IF
PP_END$
     18997**DCL     19470<<ASSIGN  19528>>DOWHILE 22133>>ASSIGN  22168<<ASSIGN  22168>>ASSIGN  22183<<ASSIGN
     22183>>ASSIGN  22188<<ASSIGN  22188>>ASSIGN  23379<<ASSIGN  23379>>ASSIGN  23434>>ASSIGN  23446>>ASSIGN
PP_SIZE
     19000**DCL     19531<<ASSIGN  19535<<ASSIGN  19594>>ASSIGN  19594>>ASSIGN
PP_TYPE
     19001**DCL     19530<<ASSIGN  19534<<ASSIGN  19538>>IF      19540>>IF      19548>>DOCASE
PRO$HDR.ATTR.APL
     18518**DCL     19635<<ASSIGN
PRO$HDR.ATTR.BIN
     18519**DCL     19636<<ASSIGN
PRO$HDR.ATTR.LCASE
     18520**DCL     19637<<ASSIGN
PRO$HDR.ATTR.TRUOVRPRT
     18517**DCL     19634<<ASSIGN
PRO$HDR.ATTR.UPPERCASE
     18515**DCL     19638<<ASSIGN
PRO$HDR.DDEV.CP
     18527**DCL     19650<<ASSIGN  19652<<ASSIGN
PRO$HDR.DDEV.GRAPHICS_OK
     18529**DCL     19490>>IF      19664>>IF      22305>>IF      22306<<ASSIGN
PRO$HDR.DDEV.IC
     18528**DCL     19644<<ASSIGN  19646<<ASSIGN
PRO$HDR.DDEV.LP
     18526**DCL     19640<<ASSIGN  19642<<ASSIGN
PRO$HDR.GR_FPRG
     18531**DCL     21137<<ASSIGN  22308>>IF
PRO$HDR.IMP#
     18524**DCL     19655<<ASSIGN
PRO$HDR.IO.INPUT
     18522**DCL     20025<<ASSIGN
PRO$HDR.IO.OUTPUT
     18523**DCL     20029<<ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:593  
PRO$HDR.LINES
     18509**DCL     19633<<ASSIGN
PRO$HDR.TTYP
     18507**DCL     19585>>IF      19586<<ASSIGN  19600>>ASSIGN  19601>>IF
PRO$HDR.WIDTH
     18508**DCL     19632<<ASSIGN
PROFILE_CMD
     13641**DCL     19072--ASSIGN
PROFILE_ERR
     19664**LABEL   19073--CALLALT
PROFILE_TYPE
     19037**DCL     19769>>ASSIGN
PROFILE_TYPE.COUNT
     19038**DCL     19690<<ASSIGN  19694<<ASSIGN  19698<<ASSIGN  19702<<ASSIGN  19706<<ASSIGN  19710<<ASSIGN
     19714<<ASSIGN  19718<<ASSIGN
PROFILE_TYPE.TEXT
     19039**DCL     19691<<ASSIGN  19695<<ASSIGN  19699<<ASSIGN  19703<<ASSIGN  19707<<ASSIGN  19711<<ASSIGN
     19715<<ASSIGN  19719<<ASSIGN
PROJ_KEY.TEXT
     13660**DCL     13660--REDEF
PROJ_KEY.TXT.PROJECT
     13660**DCL     13660--REDEF
PRO_BUF
     16972**DCL     19177<>CALL    19360<>CALL    19420<>CALL    19450<>CALL    19452<>CALL    19454<>CALL
     19456<>CALL    19458<>CALL    19460<>CALL    19462<>CALL    19464<>CALL    19524<>CALL    19663<>CALL
PRO_HDR
     16944**DCL     19471--ASSIGN
PRO_KEY
     16973**DCL     19177<>CALL    19184>>ASSIGN  19208>>ASSIGN  19494<>CALL    19661>>ASSIGN  19663<>CALL
     19666<>CALL
PRO_KEY.CNT
     16974**DCL     19085<<ASSIGN  19087>>IF      19140>>IF      19140>>IF      19140>>IF      19140>>IF
     19140>>IF      19140>>IF      19140>>IF      19140>>IF      19140>>IF      19660>>ASSIGN
PRO_KEY.TEXT
     16975**DCL     19081<<ASSIGN  19114<<ASSIGN  19117<<ASSIGN
PRO_KEY_OLD
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:594  
     16976**DCL     19360<>CALL    19420<>CALL    19429>>ASSIGN  19492<>CALL
PRO_KEY_OLD.CNT
     16977**DCL     19309<<ASSIGN  19311>>IF      19368<<ASSIGN  19372<<ASSIGN  19376<<ASSIGN  19380<<ASSIGN
     19384<<ASSIGN  19388<<ASSIGN  19392<<ASSIGN  19396<<ASSIGN
PRO_KEY_OLD.TEXT
     16978**DCL     19082<<ASSIGN  19334<<ASSIGN  19337<<ASSIGN  19369<<ASSIGN  19373<<ASSIGN  19377<<ASSIGN
     19381<<ASSIGN  19385<<ASSIGN  19389<<ASSIGN  19393<<ASSIGN  19397<<ASSIGN
PRO_OPTS
     19677**ENTRY   19623--CALL
PRO_OPTS_LIST
     13641**DCL     19729--ASSIGN
PRO_OPTS_LOOP
     19722**LABEL   21453--GOTO
PRO_TYPE
     19040**DCL     19689<<ASSIGN  19693<<ASSIGN  19697<<ASSIGN  19701<<ASSIGN  19705<<ASSIGN  19709<<ASSIGN
     19713<<ASSIGN  19717<<ASSIGN  19764>>IF      19764>>IF      20194>>IF      20307>>IF
PTR$
     19021**DCL     19738<<ASSIGN  19739>>ASSIGN  19789>>IF      19795>>ASSIGN  20162>>DOINDEX 20164>>ASSIGN
     21085<<ASSIGN  21085>>ASSIGN  21086>>DOINDEX 21087>>DOCASE  21229>>IF      21229>>IF      21233>>IF
     21233>>IF      21251>>ASSIGN  21624>>IF      21625>>IF      21627>>IF      21628>>ASSIGN  21630>>ASSIGN
     21686>>ASSIGN  21703>>IF      21705>>ASSIGN  21710>>IF      21712>>ASSIGN  23246>>IF      23247>>ASSIGN
PTRBGN$ IN PROCEDURE PLACE_OPT
     21903**DCL     21918<<ASSIGN  21919>>ASSIGN  21921>>ASSIGN  22132<<ASSIGN  22133>>ASSIGN
PTROPT$
     18999**DCL     20233<<ASSIGN  20234<>CALL    20238<<ASSIGN  20239<>CALL    20243<<ASSIGN  20244<>CALL
     20248<<ASSIGN  20249<>CALL    20253<<ASSIGN  20254<>CALL    20258<<ASSIGN  20259<>CALL    20263<<ASSIGN
     20264<>CALL    20268<<ASSIGN  20269<>CALL    20273<<ASSIGN  20274<>CALL    20278<<ASSIGN  20279<>CALL
     20283<<ASSIGN  20284<>CALL    20288<<ASSIGN  20289<>CALL    20293<<ASSIGN  20294<>CALL    20298<<ASSIGN
     20299<>CALL    20303<<ASSIGN  20304<>CALL    20344<<ASSIGN  20345<>CALL    20351<<ASSIGN  20352<>CALL
     20829<<ASSIGN  20830<>CALL    20834<<ASSIGN  20835<>CALL    20856<<ASSIGN  20857<>CALL    20861<<ASSIGN
     20862<>CALL    20866<<ASSIGN  20867<>CALL    21042<<ASSIGN  21043<>CALL    21047<<ASSIGN  21048<>CALL
     21052<<ASSIGN  21053<>CALL    21057<<ASSIGN  21058<>CALL    21062<<ASSIGN  21063<>CALL    21111<<ASSIGN
     21112<>CALL    21394<<ASSIGN  21395<>CALL    21797<<ASSIGN  21798<>CALL    21804<<ASSIGN  21805<>CALL
     21819<<ASSIGN  21820<>CALL
PTROPT$ IN PROCEDURE PLACE_OPT
     21901**DCL     21899--PROC    21917>>IF      21919>>ASSIGN  22130>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:595  
PUT_GR_ESCAPE
     22333**PROC    21240--CALL
PUT_IN_FUNKEY IN PROCEDURE DO_FUNKEY_DEFS
     22911**PROC    22635--CALL    22711--CALL
P_ARS
     18996**DCL     19177<>CALL    19360<>CALL    19420<>CALL    19450<>CALL    19452<>CALL    19454<>CALL
     19456<>CALL    19458<>CALL    19460<>CALL    19462<>CALL    19464<>CALL    19470>>ASSIGN  19524<>CALL
     19662<<ASSIGN  19662>>ASSIGN  19663<>CALL    22062>>ASSIGN  22167<<ASSIGN  22167>>ASSIGN  22182<<ASSIGN
     22182>>ASSIGN  22187<<ASSIGN  22187>>ASSIGN  22649>>IF      23408<<ASSIGN  23408>>ASSIGN  23412<<ASSIGN
     23412>>ASSIGN
P_PCB
     13815**DCL     19073<>CALL    19732<>CALL    22506<>CALL
P_PCB.ERROR
     13919**DCL     19672<>CALL    21480<>CALL    22508<>CALL
P_PCB.NCHARS
     13962**DCL     19731<<ASSIGN  22505<<ASSIGN
P_PCB.OUT$
     13828**DCL     19074>>ASSIGN  19734>>ASSIGN  22512>>DOINDEX 22513>>ASSIGN
P_PCB.ROOT$
     13820**DCL     19072<<ASSIGN  19729<<ASSIGN  22501<<ASSIGN
P_TYPE
     16929**DCL     19230<<ASSIGN  19241<<ASSIGN  19245<<ASSIGN  19249<<ASSIGN  19253<<ASSIGN  19257<<ASSIGN
     19261<<ASSIGN  19265<<ASSIGN  19269<<ASSIGN  19273>>IF      19365>>DOCASE  19448>>DOCASE  19599>>IF
     19600<<ASSIGN  19601>>IF      19624>>DOCASE  19687>>DOCASE  20513>>IF      20526>>IF      20554>>IF
     20586>>IF      20623>>IF
REMEM_VAR
     13786**DCL     13786--REDEF
REMOVE_THIS_FUNKEY IN PROCEDURE DO_FUNKEY_DEFS
     22747**PROC    22563--CALL    22582--CALL
REM_FCMD
     13786**DCL     13787--REDEF
RETURN_LABEL IN PROCEDURE CHECK_MODIFIERS
     23127**LABEL   23098--GOTO    23103--GOTO    23112--GOTO    23118--GOTO
SAVEIDX IN PROCEDURE PLACE_OPT
     21915**DCL     21945<<ASSIGN  21959<<ASSIGN  22053>>IF      22117>>IF
SETUP_CHR$
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:596  
     16991**DCL     18148--IMP-PTR 19480<<ASSIGN  19575<<ASSIGN  23257>>IF      23259>>ASSIGN  23260>>ASSIGN
     23265>>ASSIGN  23268>>ASSIGN  23273>>IF      23276>>ASSIGN  23280>>IF      23282>>ASSIGN  23283>>ASSIGN
     23283>>ASSIGN  23290>>IF      23293>>ASSIGN  23294>>ASSIGN  23294>>ASSIGN  23301>>ASSIGN  23314>>IF
     23338>>ASSIGN  23338>>ASSIGN  23338>>ASSIGN  23340>>ASSIGN  23344>>ASSIGN  23344>>ASSIGN  23346>>ASSIGN
     23346>>ASSIGN  23349>>IF      23350>>ASSIGN  23350>>ASSIGN  23388>>IF      23388<<ASSIGN  23388>>ASSIGN
SHRINK
     23360**PROC    22765--CALL    22784--CALL    23263--CALL    23286--CALL
SHRINK_FLG IN PROCEDURE SHRINK
     23365**DCL     23368<<ASSIGN  23373<<ASSIGN  23405>>IF
SIZE IN PROCEDURE ADD_ANOTHER_FUNKEY
     22803**DCL     22815<<ASSIGN  22817<<ASSIGN  22819>>IF      22830>>ASSIGN  22831>>ASSIGN  22835>>ASSIGN
SIZE IN PROCEDURE PLACE_OPT
     21914**DCL     21965<<ASSIGN  21967<<ASSIGN  21970>>IF      21971>>ASSIGN  22018<>CALL    22057>>IF
     22154>>IF      22157>>DOINDEX 22164>>DOINDEX 22170>>ASSIGN  22171>>ASSIGN  22177>>DOINDEX 22185>>ASSIGN
SIZE IN PROCEDURE REMOVE_THIS_FUNKEY
     22759**DCL     22770<<ASSIGN  22772<<ASSIGN  22774>>IF      22776>>ASSIGN  22777>>ASSIGN  22788>>ASSIGN
SPLIT
     19027**DCL     20197>>ASSIGN  20202>>ASSIGN  20430>>ASSIGN  20619>>ASSIGN  21607<<ASSIGN  21622<<ASSIGN
SPLIT.B
     19031**DCL     21609<<ASSIGN  21690<<ASSIGN
SPLIT.T
     19029**DCL     21608<<ASSIGN  21689<<ASSIGN
SPLIT$
     19023**DCL     18969--IMP-PTR
SPLIT_STRUCT IN PROCEDURE GET_TA
     21754**DCL     21752--PROC    21786<<ASSIGN
SPLIT_STRUCT.B IN PROCEDURE GET_TA
     21758**DCL     21788<<ASSIGN
SPLIT_STRUCT.T IN PROCEDURE GET_TA
     21756**DCL     21787<<ASSIGN
SPLIT_VAL.B
     19012**DCL     21609>>ASSIGN  21690>>ASSIGN  21788>>ASSIGN
SPLIT_VAL.T
     19011**DCL     21608>>ASSIGN  21689>>ASSIGN  21787>>ASSIGN
START IN PROCEDURE GET_HEX_VAL
     21619**DCL     21694<<ASSIGN  21698<<ASSIGN  21702>>DOINDEX
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:597  
SUBS
     19024**DCL     19228<<ASSIGN  19231>>DOINDEX 19238>>ASSIGN  19242>>ASSIGN  19246>>ASSIGN  19250>>ASSIGN
     19254>>ASSIGN  19258>>ASSIGN  19262>>ASSIGN  19266>>ASSIGN  19270>>ASSIGN  21630<<ASSIGN  21631<<ASSIGN
     21631>>ASSIGN  21632>>IF      21695>>ASSIGN  21699>>ASSIGN
T3270$
     16996**DCL     19483<<ASSIGN  19584<<ASSIGN  19585>>IF      20198>>ASSIGN  20311>>ASSIGN  20314>>ASSIGN
     21069>>ASSIGN  21072>>ASSIGN  23391>>IF      23391<<ASSIGN  23391>>ASSIGN
TATR$
     16986**DCL     19475<<ASSIGN  19557<<ASSIGN  19634>>ASSIGN  19635>>ASSIGN  19636>>ASSIGN  19637>>ASSIGN
     19639>>IF      19643>>IF      19647>>IF      19647>>IF      19904>>ASSIGN  19905>>ASSIGN  19913>>ASSIGN
     19916>>ASSIGN  19917>>ASSIGN  19922>>ASSIGN  19926>>ASSIGN  19930>>ASSIGN  19933>>ASSIGN  19936>>ASSIGN
     19938>>ASSIGN  19941>>ASSIGN  19943>>ASSIGN  19946>>ASSIGN  19949>>ASSIGN  19952>>ASSIGN  19955>>ASSIGN
     19958>>ASSIGN  19961>>ASSIGN  19964>>ASSIGN  19967>>ASSIGN  19970>>ASSIGN  19973>>ASSIGN  19976>>ASSIGN
     19979>>ASSIGN  19982>>ASSIGN  19985>>ASSIGN  19995>>ASSIGN  20026>>ASSIGN  20030>>ASSIGN  20033>>ASSIGN
     20036>>ASSIGN  20040>>ASSIGN  20044>>ASSIGN  20048>>ASSIGN  20073>>ASSIGN  20075>>IF      20076>>ASSIGN
     20081>>ASSIGN  20105>>ASSIGN  20207>>ASSIGN  20809>>ASSIGN  20813>>ASSIGN  20817>>ASSIGN  21066>>ASSIGN
     21107>>ASSIGN  21459>>ASSIGN  21463>>ASSIGN  21467>>ASSIGN  21471>>ASSIGN  23383>>IF      23383<<ASSIGN
     23383>>ASSIGN
TCCHR$
     16989**DCL     19478<<ASSIGN  19566<<ASSIGN  20203>>ASSIGN  20210>>ASSIGN  20213>>ASSIGN  20218>>ASSIGN
     20222>>ASSIGN  20226>>ASSIGN  20229>>ASSIGN  20233>>ASSIGN  20238>>ASSIGN  20243>>ASSIGN  20248>>ASSIGN
     20253>>ASSIGN  20258>>ASSIGN  20263>>ASSIGN  20268>>ASSIGN  20273>>ASSIGN  20278>>ASSIGN  20283>>ASSIGN
     20288>>ASSIGN  20293>>ASSIGN  20298>>ASSIGN  20303>>ASSIGN  20344>>ASSIGN  20351>>ASSIGN  20357>>ASSIGN
     20361>>ASSIGN  20365>>ASSIGN  20369>>ASSIGN  20373>>ASSIGN  20377>>ASSIGN  20381>>ASSIGN  20385>>ASSIGN
     20388>>CALL    20391>>CALL    20394>>CALL    20397>>CALL    20400>>CALL    20403>>CALL    20406>>CALL
     20409>>CALL    20412>>CALL    20415>>CALL    20418>>CALL    20820>>ASSIGN  20824>>ASSIGN  20829>>ASSIGN
     20834>>ASSIGN  20840>>ASSIGN  20843>>ASSIGN  20846>>ASSIGN  20848>>ASSIGN  20850>>ASSIGN  20856>>ASSIGN
     20861>>ASSIGN  20866>>ASSIGN  20871>>ASSIGN  20875>>ASSIGN  20879>>ASSIGN  20883>>ASSIGN  20887>>ASSIGN
     20891>>ASSIGN  20895>>ASSIGN  20899>>ASSIGN  20901>>IF      20926>>ASSIGN  20928>>IF      20949>>ASSIGN
     20951>>IF      20972>>ASSIGN  20973>>IF      20998>>IF      21016>>ASSIGN  21020>>ASSIGN  21021>>IF
     21042>>ASSIGN  21047>>ASSIGN  21052>>ASSIGN  21057>>ASSIGN  21062>>ASSIGN  21111>>ASSIGN  21394>>ASSIGN
     21398>>ASSIGN  21401>>ASSIGN  21404>>ASSIGN  21407>>ASSIGN  21410>>ASSIGN  21413>>ASSIGN  21416>>ASSIGN
     21419>>ASSIGN  21797>>ASSIGN  21799>>ASSIGN  21804>>ASSIGN  21806>>ASSIGN  21807>>ASSIGN  21808>>ASSIGN
     21809>>ASSIGN  21810>>ASSIGN  21811>>ASSIGN  21819>>ASSIGN  21821>>ASSIGN  21822>>ASSIGN  21823>>ASSIGN
     21824>>ASSIGN  21832>>IF      21868>>IF      21918>>ASSIGN  21920>>ASSIGN  21922>>IF      21925>>DOWHILE
     21930>>ASSIGN  21933>>DOWHILE 21941>>ASSIGN  21942>>ASSIGN  21945>>ASSIGN  21946>>ASSIGN  21950>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:598  
     21951>>IF      21954>>ASSIGN  21960>>ASSIGN  22054>>ASSIGN  22118>>ASSIGN  22125>>IF      22126>>ASSIGN
     22126>>ASSIGN  22132>>ASSIGN  22138>>ASSIGN  22138>>ASSIGN  22141>>ASSIGN  22144>>ASSIGN  22144>>ASSIGN
     22149>>ASSIGN  22152>>ASSIGN  22156>>ASSIGN  22158>>ASSIGN  22162<<ASSIGN  22162>>ASSIGN  22163>>ASSIGN
     22165>>ASSIGN  22176>>ASSIGN  22178>>ASSIGN  22180<<ASSIGN  22180>>ASSIGN  23386>>IF      23386<<ASSIGN
     23386>>ASSIGN
TCTL$
     16985**DCL     19474<<ASSIGN  19554<<ASSIGN  19812>>ASSIGN  19815>>ASSIGN  19818>>ASSIGN  19821>>ASSIGN
     19824>>ASSIGN  19827>>ASSIGN  19830>>ASSIGN  19833>>ASSIGN  19836>>ASSIGN  19839>>ASSIGN  19842>>ASSIGN
     19845>>ASSIGN  19848>>ASSIGN  19851>>ASSIGN  19854>>ASSIGN  19857>>ASSIGN  19860>>ASSIGN  19863>>ASSIGN
     19866>>ASSIGN  19869>>ASSIGN  19872>>ASSIGN  19875>>ASSIGN  19878>>ASSIGN  19881>>ASSIGN  19884>>ASSIGN
     19887>>ASSIGN  19890>>ASSIGN  19894>>ASSIGN  19898>>ASSIGN  21422>>ASSIGN  21425>>ASSIGN  21428>>ASSIGN
     21431>>ASSIGN  21435>>ASSIGN  21439>>ASSIGN  21444>>ASSIGN  21448>>ASSIGN  23382>>IF      23382<<ASSIGN
     23382>>ASSIGN
TO$ IN PROCEDURE OPEN_SPACE
     23427**DCL     23435<<ASSIGN  23442<<ASSIGN  23449>>ASSIGN  23450<<ASSIGN  23450>>ASSIGN
TRMD$
     16992**DCL     19481<<ASSIGN  19569<<ASSIGN  20422>>ASSIGN  20426>>ASSIGN  20431>>ASSIGN  20435>>ASSIGN
     20439>>ASSIGN  20446>>ASSIGN  20451>>ASSIGN  20453>>ASSIGN  20455>>ASSIGN  20457>>ASSIGN  20462>>ASSIGN
     20466>>ASSIGN  20470>>ASSIGN  20473>>ASSIGN  20476>>ASSIGN  20479>>ASSIGN  20482>>ASSIGN  20485>>ASSIGN
     20488>>ASSIGN  23389>>IF      23389<<ASSIGN  23389>>ASSIGN
T_TAB
     16999**DCL     20161<<ASSIGN  20166<<ASSIGN  20168>>IF      20168>>IF      20191>>ASSIGN
USERS_KEY.TEXT
     13657**DCL     13658--REDEF   13658--REDEF   13658--REDEF   13659--REDEF
VAL
     19008**DCL     19009--REDEF   19013--REDEF   19014--REDEF   19015--REDEF   19898>>ASSIGN  19910>>IF
     19912<<ASSIGN  19912>>ASSIGN  19917>>ASSIGN  19926>>ASSIGN  20044>>ASSIGN  20116>>IF      20123>>IF
     20124<<ASSIGN  20124>>ASSIGN  20129>>ASSIGN  20139>>ASSIGN  20148>>ASSIGN  20157>>ASSIGN  20166>>ASSIGN
     20222>>ASSIGN  20357>>ASSIGN  20361>>ASSIGN  20365>>ASSIGN  20369>>ASSIGN  20373>>ASSIGN  20377>>ASSIGN
     20381>>ASSIGN  20426>>ASSIGN  20435>>ASSIGN  20439>>ASSIGN  20443>>ASSIGN  20462>>ASSIGN  20492>>ASSIGN
     20496>>ASSIGN  20504>>ASSIGN  20523>>ASSIGN  20531>>ASSIGN  20538>>ASSIGN  20545>>ASSIGN  20550>>ASSIGN
     20562>>ASSIGN  20567>>ASSIGN  20572>>ASSIGN  20577>>ASSIGN  20587>>ASSIGN  20589>>ASSIGN  20594>>ASSIGN
     20599>>ASSIGN  20604>>ASSIGN  20609>>ASSIGN  20614>>ASSIGN  20783>>ASSIGN  20800>>ASSIGN  20804>>ASSIGN
     20813>>ASSIGN  21141>>ASSIGN  21145>>ASSIGN  21149>>ASSIGN  21153>>ASSIGN  21157>>ASSIGN  21161>>ASSIGN
     21165>>ASSIGN  21169>>ASSIGN  21173>>ASSIGN  21177>>ASSIGN  21181>>ASSIGN  21185>>ASSIGN  21189>>ASSIGN
     21193>>ASSIGN  21197>>ASSIGN  21201>>ASSIGN  21205>>ASSIGN  21209>>ASSIGN  21213>>ASSIGN  21217>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:599  
     21221>>ASSIGN  21225>>ASSIGN  21248>>ASSIGN  21255>>ASSIGN  21259>>ASSIGN  21263>>ASSIGN  21267>>ASSIGN
     21271>>ASSIGN  21275>>ASSIGN  21279>>ASSIGN  21283>>ASSIGN  21287>>ASSIGN  21291>>ASSIGN  21295>>ASSIGN
     21299>>ASSIGN  21303>>ASSIGN  21307>>ASSIGN  21311>>ASSIGN  21315>>ASSIGN  21439>>ASSIGN  21448>>ASSIGN
     21467>>ASSIGN  21493<<CALLBLT 21494>>IF      21549>>IF      21622<<ASSIGN  21687<>CALL    21688>>ASSIGN
     21706<>CALL    21708>>ASSIGN  21761<>CALL    21762>>IF      22198<<CALLBLT 22199>>IF      22252>>IF
     22362>>IF      22431>>ASSIGN  22436>>IF      22439>>ASSIGN  22447>>IF      22452>>IF      22460>>ASSIGN
VAL IN PROCEDURE MAYBE_REMOVE_INTRO
     22934**DCL     22944<<ASSIGN  22947>>IF      22956<<ASSIGN  22956>>ASSIGN  22957>>IF      22961>>IF
VAL1 IN PROCEDURE DO_FUNKEY_DEFS
     22495**DCL     22854>>IF      22861>>IF      22871>>ASSIGN  22879>>ASSIGN  23047>>IF      23057>>IF
     23067>>IF      23150<<ASSIGN  23156<>CALL    23194>>IF      23202>>IF      23210>>IF
VAL2 IN PROCEDURE DO_FUNKEY_DEFS
     22496**DCL     22854>>IF      22861>>IF      22872>>ASSIGN  22880>>ASSIGN  23047>>IF      23057>>IF
     23067>>IF      23151<<ASSIGN  23163<>CALL    23166<<ASSIGN  23170<<ASSIGN  23194>>IF      23202>>IF
     23210>>IF
VAL_FOUR
     19014**DCL     21319>>ASSIGN  21323>>ASSIGN  21327>>ASSIGN  21331>>ASSIGN  21339>>ASSIGN  21343>>ASSIGN
     21351>>ASSIGN  21355>>ASSIGN  21359>>ASSIGN  21363>>ASSIGN  21375>>ASSIGN  21387>>ASSIGN  21391>>ASSIGN
VAL_SIX
     19015**DCL     21335>>ASSIGN
VAL_TWO
     19013**DCL     21347>>ASSIGN  21367>>ASSIGN  21371>>ASSIGN  21379>>ASSIGN  21383>>ASSIGN
VIRCIR$
     16995**DCL     19486<<ASSIGN  19581<<ASSIGN  20443>>ASSIGN  20514>>ASSIGN  20527>>IF      20531>>ASSIGN
     20545>>ASSIGN  20550>>ASSIGN  20557>>ASSIGN  20562>>ASSIGN  20567>>ASSIGN  20572>>ASSIGN  20577>>ASSIGN
     20589>>ASSIGN  20594>>ASSIGN  20599>>ASSIGN  20604>>ASSIGN  20619>>ASSIGN  20698>>ASSIGN  20700>>IF
     20701>>ASSIGN  20723>>IF      20724>>ASSIGN  20746>>IF      20747>>ASSIGN  20772>>ASSIGN  20775>>ASSIGN
     20779>>IF      20783>>ASSIGN  20786>>ASSIGN  20789>>ASSIGN  20792>>ASSIGN  20796>>IF      20800>>ASSIGN
     20804>>ASSIGN  23394>>IF      23394<<ASSIGN  23394>>ASSIGN
VLP$PLATEN.EXTWID#
     17324**DCL     19628>>IF      20111<<ASSIGN  20119<<ASSIGN  20125<<ASSIGN  20128<<ASSIGN
VLP$PLATEN.FIRSTLINE#
     17323**DCL     20153<<ASSIGN  20157<<ASSIGN
VLP$PLATEN.LENGTH#
     17322**DCL     19633>>ASSIGN  20135<<ASSIGN  20139<<ASSIGN
VLP$PLATEN.LIMBO#
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:600  
     17323**DCL     20144<<ASSIGN  20148<<ASSIGN
VLP$PLATEN.WIDTH#
     17322**DCL     19632>>ASSIGN  20110<<ASSIGN  20118<<ASSIGN  20129<<ASSIGN
VLP$PNAME
     17219**DCL     19661<<ASSIGN
VLP$PNAME.L#
     17219**DCL     17219--IMP-SIZ 19658<<ASSIGN  19659>>ASSIGN  19660<<ASSIGN  19661>>ASSIGN
VLP$PNAME.NAME#
     17219**DCL     19659<<ASSIGN
VLP$TAB
     17339**DCL     20191<<ASSIGN
VLP$TRMATTR.APL#
     17288**DCL     19635>>ASSIGN  19973<<ASSIGN
VLP$TRMATTR.ATRSCRNPOS#
     17293**DCL     20817<<ASSIGN
VLP$TRMATTR.AUTONL#
     17285**DCL     19955<<ASSIGN
VLP$TRMATTR.BIN#
     17288**DCL     19636>>ASSIGN  19976<<ASSIGN
VLP$TRMATTR.BLANKERASES#
     17286**DCL     19964<<ASSIGN
VLP$TRMATTR.CHARSETNAME#
     17298**DCL     20073<<ASSIGN  20075>>IF      20076<<ASSIGN
VLP$TRMATTR.CRISNL#
     17285**DCL     19958<<ASSIGN
VLP$TRMATTR.CURSORUP#
     17283**DCL     19943<<ASSIGN
VLP$TRMATTR.DCHMOVFLD#
     17294**DCL     21459<<ASSIGN
VLP$TRMATTR.DEVICEBS#
     17284**DCL     19952<<ASSIGN
VLP$TRMATTR.DEVICECR#
     17283**DCL     19946<<ASSIGN
VLP$TRMATTR.DEVICELF#
     17284**DCL     19949<<ASSIGN
VLP$TRMATTR.DEVPOSOPTS#
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:601  
     17287**DCL     19967<<ASSIGN
VLP$TRMATTR.DEVSCROLL#
     17283**DCL     19936<<ASSIGN
VLP$TRMATTR.DSPHEIGHT#
     17299**DCL     21463<<ASSIGN  21467<<ASSIGN
VLP$TRMATTR.DVCFLWCTRALG#
     17297**DCL     20207<<ASSIGN
VLP$TRMATTR.EXTWID#
     17290**DCL     19905<<ASSIGN  19913<<ASSIGN  19916<<ASSIGN
VLP$TRMATTR.FCNTBL#
     17298**DCL     20081<<ASSIGN  20105<<ASSIGN
VLP$TRMATTR.FF_FLUSH#
     17296**DCL     21471<<ASSIGN
VLP$TRMATTR.FF_INCCR#
     17300**DCL     19938<<ASSIGN
VLP$TRMATTR.HEIGHT#
     17295**DCL     19922<<ASSIGN  19926<<ASSIGN
VLP$TRMATTR.INPUT#
     17291**DCL     20026<<ASSIGN
VLP$TRMATTR.LFISNL#
     17286**DCL     19961<<ASSIGN
VLP$TRMATTR.LIMBOCLM#
     17289**DCL     19982<<ASSIGN
VLP$TRMATTR.LOCALECHO#
     17289**DCL     19985<<ASSIGN
VLP$TRMATTR.LOWERCASEPRINTS#
     17288**DCL     19637>>ASSIGN  19979<<ASSIGN
VLP$TRMATTR.MAXATRS#
     17299**DCL     20809<<ASSIGN  20813<<ASSIGN
VLP$TRMATTR.MICROFPL#
     17297**DCL     19941<<ASSIGN
VLP$TRMATTR.MINREC#
     17295**DCL     20040<<ASSIGN  20044<<ASSIGN
VLP$TRMATTR.NO_FLDTRM#
     17293**DCL     21066<<ASSIGN
VLP$TRMATTR.OPDTAB#
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:602  
     17282**DCL     19933<<ASSIGN
VLP$TRMATTR.OUTPUT#
     17291**DCL     20030<<ASSIGN
VLP$TRMATTR.PARITY#
     17290**DCL     19995<<ASSIGN
VLP$TRMATTR.PRINTTYPE#
     17291**DCL     19639>>IF      19647>>IF      20033<<ASSIGN
VLP$TRMATTR.PROGDTAB#
     17282**DCL     19930<<ASSIGN
VLP$TRMATTR.SPCBFRPRT#
     17292**DCL     21107<<ASSIGN
VLP$TRMATTR.SPEED#
     17296**DCL     20048<<ASSIGN
VLP$TRMATTR.TRUOVRPRT#
     17287**DCL     19634>>ASSIGN  19970<<ASSIGN
VLP$TRMATTR.TTYTYPE#
     17292**DCL     19643>>IF      19647>>IF      20036<<ASSIGN
VLP$TRMATTR.WIDTH#
     17294**DCL     19904<<ASSIGN  19917<<ASSIGN
VLP$TRMCTRL.ACTONTRN#
     17246**DCL     19857<<ASSIGN
VLP$TRMCTRL.APLLCNRM#
     17246**DCL     19860<<ASSIGN
VLP$TRMCTRL.AUTOCURSOR#
     17259**DCL     19839<<ASSIGN
VLP$TRMCTRL.AUTOTABCLM#
     17256**DCL     21444<<ASSIGN  21448<<ASSIGN
VLP$TRMCTRL.BREAKCOUNT
     17251**DCL     17252--REDEF
VLP$TRMCTRL.CURSORREAD#
     17258**DCL     19836<<ASSIGN
VLP$TRMCTRL.DISPINPUT#
     17242**DCL     19824<<ASSIGN
VLP$TRMCTRL.EDITOVR#
     17247**DCL     19866<<ASSIGN
VLP$TRMCTRL.FULLDUXPAPERTAPE#
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:603  
     17244**DCL     19854<<ASSIGN
VLP$TRMCTRL.HALFDUXPAPERTAPE#
     17245**DCL     19851<<ASSIGN
VLP$TRMCTRL.HSCROLL#
     17252**DCL     21431<<ASSIGN
VLP$TRMCTRL.INSERTMODE#
     17253**DCL     21428<<ASSIGN
VLP$TRMCTRL.KEEPTYPAHD#
     17259**DCL     19842<<ASSIGN
VLP$TRMCTRL.LOWERCASE#
     17244**DCL     19848<<ASSIGN
VLP$TRMCTRL.MSGHALT#
     17253**DCL     21422<<ASSIGN
VLP$TRMCTRL.MSGLINE#
     17254**DCL     21425<<ASSIGN
VLP$TRMCTRL.NOOPTMIZ#
     17250**DCL     19890<<ASSIGN
VLP$TRMCTRL.OUTPUTDISCARD#
     17243**DCL     19830<<ASSIGN
VLP$TRMCTRL.PAGEHALT#
     17248**DCL     19872<<ASSIGN
VLP$TRMCTRL.PARITYCHECK#
     17242**DCL     19827<<ASSIGN
VLP$TRMCTRL.PARKCURSOR#
     17258**DCL     19833<<ASSIGN
VLP$TRMCTRL.PRINTHALT#
     17248**DCL     19875<<ASSIGN
VLP$TRMCTRL.RELPAGE#
     17249**DCL     19878<<ASSIGN
VLP$TRMCTRL.RETYPOVR#
     17246**DCL     19863<<ASSIGN
VLP$TRMCTRL.SCROLL#
     17247**DCL     19869<<ASSIGN
VLP$TRMCTRL.SENDBKSPACE#
     17241**DCL     19821<<ASSIGN
VLP$TRMCTRL.SIMPERF#
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:604  
     17249**DCL     19881<<ASSIGN
VLP$TRMCTRL.SINPUTSZ#
     17251**DCL     19894<<ASSIGN  19898<<ASSIGN
VLP$TRMCTRL.SPACEINSERT#
     17241**DCL     19818<<ASSIGN
VLP$TRMCTRL.TABRELATIVE#
     17240**DCL     19815<<ASSIGN
VLP$TRMCTRL.TABSIM#
     17240**DCL     19812<<ASSIGN
VLP$TRMCTRL.TRUNCATE#
     17250**DCL     19884<<ASSIGN
VLP$TRMCTRL.UPPERCASE#
     17243**DCL     19845<<ASSIGN
VLP$TRMCTRL.WORDWRAPCLM#
     17256**DCL     21435<<ASSIGN  21439<<ASSIGN
VLP$TRMCTRL.WRAPPAGE#
     17250**DCL     19887<<ASSIGN
VLP_TRMCTL.BREAKCOUNT
     17180**DCL     17181--REDEF
X$PARSE
     18162**DCL-ENT 19073--CALL    19732--CALL    22506--CALL
XPNAME
     19017**DCL     19110<<CALLBLT 19111>>IF      19117>>ASSIGN  19140>>IF      19140>>IF      19140>>IF
     19140>>IF      19140>>IF      19140>>IF      19140>>IF      19140>>IF      19140>>IF      19330<<CALLBLT
     19331>>IF      19337>>ASSIGN
YES_NO
     16928**DCL     19792<<ASSIGN  19801<<ASSIGN  19804<<ASSIGN  20226>>ASSIGN  20229>>ASSIGN  20473>>ASSIGN
     20476>>ASSIGN  20479>>ASSIGN  20482>>ASSIGN  20485>>ASSIGN  20488>>ASSIGN  20515>>ASSIGN  20555>>ASSIGN
     20557>>ASSIGN  20581>>ASSIGN  20624>>ASSIGN  20625>>IF      20698>>ASSIGN  20699>>IF      20786>>ASSIGN
     20840>>ASSIGN  20843>>ASSIGN  21398>>ASSIGN  21401>>ASSIGN  21404>>ASSIGN  21407>>ASSIGN  21410>>ASSIGN
     21413>>ASSIGN  21416>>ASSIGN  21419>>ASSIGN
YES_NO_FLG
     16927**DCL     19791<<ASSIGN  19798<<ASSIGN  19800<<ASSIGN  19805<<ASSIGN  19812>>ASSIGN  19815>>ASSIGN
     19818>>ASSIGN  19821>>ASSIGN  19824>>ASSIGN  19827>>ASSIGN  19830>>ASSIGN  19833>>ASSIGN  19836>>ASSIGN
     19839>>ASSIGN  19842>>ASSIGN  19845>>ASSIGN  19848>>ASSIGN  19851>>ASSIGN  19854>>ASSIGN  19857>>ASSIGN
     19860>>ASSIGN  19863>>ASSIGN  19866>>ASSIGN  19869>>ASSIGN  19872>>ASSIGN  19875>>ASSIGN  19878>>ASSIGN
PL6.E3A0      #001=ASD$PROFILE File=ASD$PROFILE.:E05TSI                          TUE 07/29/97 09:46 Page:605  
     19881>>ASSIGN  19884>>ASSIGN  19887>>ASSIGN  19890>>ASSIGN  19930>>ASSIGN  19933>>ASSIGN  19936>>ASSIGN
     19938>>ASSIGN  19941>>ASSIGN  19943>>ASSIGN  19946>>ASSIGN  19949>>ASSIGN  19952>>ASSIGN  19955>>ASSIGN
     19958>>ASSIGN  19961>>ASSIGN  19964>>ASSIGN  19967>>ASSIGN  19970>>ASSIGN  19973>>ASSIGN  19976>>ASSIGN
     19979>>ASSIGN  19982>>ASSIGN  19985>>ASSIGN  20025>>ASSIGN  20026>>ASSIGN  20029>>ASSIGN  20030>>ASSIGN
     20033>>ASSIGN  20036>>ASSIGN  20446>>ASSIGN  20817>>ASSIGN  21066>>ASSIGN  21069>>ASSIGN  21072>>ASSIGN
     21107>>ASSIGN  21422>>ASSIGN  21425>>ASSIGN  21428>>ASSIGN  21431>>ASSIGN  21459>>ASSIGN  21471>>ASSIGN

PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:606  
     3685        1        /*T***********************************************************/
     3686        2        /*T*                                                         */
     3687        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3688        4        /*T*                                                         */
     3689        5        /*T***********************************************************/
     3690        6        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:607  
     3691        7        ASD$R2HUSECS: PROC ( REAL$, HUSECS ) ALTRET ;
     3692        8        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:608  
     3693        9        /********************************************************************/
     3694       10        /*   Parameters      parameters      parameters      parameters      */
     3695       11        /*********************************************************************/
     3696       12
     3697       13    1   DCL REAL$ PTR ;
     3698       14    1   DCL VAL UBIN WORD ;
     3699       15    1   DCL HUSECS UBIN WORD ;
     3700       16        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:609  
     3701       17        /********************************************************************/
     3702       18        /*   Include files   include files   include files   include files   */
     3703       19        /*********************************************************************/
     3704       20
     3705       21        %INCLUDE            AS_ENTRIES_M ;
     3706     1071        %INCLUDE            AS_SUPER_C ;
     3707     1506        %INCLUDE            AS_SUBS_C ;
     3708     2920        %INCLUDE            AS_PERR_C ;
     3709     3522        %INCLUDE            AS_MAC_C ;
     3710     3602        %INCLUDE            KL_SUPER_C ;
     3711     6504        %INCLUDE            XU_MACRO_C ;
     3712     9610        %INCLUDE            XU_FORMAT_C ;
     3713     9772        %INCLUDE            AS_SUPER_R ;
     3714    12788        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:610  
     3715    12789        /********************************************************************/
     3716    12790        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     3717    12791        /*********************************************************************/
     3718    12792
     3719    12793        %ASH$ERROR ;
     3720    12796        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:611  
     3721    12797        /********************************************************************/
     3722    12798        /*   Static data     static data     static data     static data     */
     3723    12799        /*********************************************************************/
     3724    12800
     3725    12801        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:612  
     3726    12802        /********************************************************************/
     3727    12803        /*   Auto data       auto data       auto data       auto data       */
     3728    12804        /*********************************************************************/
     3729    12805
     3730    12806    1   DCL BLK$ PTR ;
     3731    12807    1   DCL CNT UBIN WORD ;
     3732    12808    1   DCL SUBS UBIN WORD ;
     3733    12809    1   DCL UNITS UBIN WORD ;
     3734    12810        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:613  
     3735    12811        /********************************************************************/
     3736    12812        /*   Local based     local based     local based     local based     */
     3737    12813        /*********************************************************************/
     3738    12814
     3739    12815        %LIST ;
     3740    12816            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(REAL$)",
     3741    12817                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
             12818        /*F*  NAME:     PARSE$OUT
             12819              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             12820                  "alternative", "reducing alternative", or "koncat" node in
             12821                  the user's parse tree.
             12822        */
             12823    1   DCL 1 NAME STCLASS ALIGNED,
             12824    1         2 TEMP BIT(1) UNAL,
             12825    1         2 * BIT (11) UNAL,
             12826    1         2 NDTYPE UBIN (6) UNAL,
             12827        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             12828                  block corresponds.  See the XU_SUBS_C file for the
             12829                  %EQU symbols whose values may appear in this field.
             12830        */
             12831    1         2 CODE UBIN HALF HALIGNED,
             12832        /*K* CODE - Contains the numeric "node code" specified by the user when
             12833                  the corresponding parse-node was defined.
             12834        */
             12835    1         2 NSUBLKS UBIN HALF HALIGNED,
             12836        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             12837                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             12838        */
             12839    1         2 SCRITCH SCRMODE SCRALGN,
             12840        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             12841                  initializes this field to zero when the PARSE$OUT structure
             12842                  is allocated, and never sets or examines it thereafter.
             12843                  The name of this field may be changed when the PARSE$OUT macro
             12844                  is invoked by the user (say "SCRITCH=yourname"), and its data
             12845                  type may also be changed (say "SCRMODE=pl6datatype" and
             12846                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             12847                  and be UNALIGNED, CALIGNED, or HALIGNED.
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:614  
             12848        */
             12849    1         2 CPOS UBIN WORD,
             12850        /*K* CPOS - "character position" of this block.  This field will contain
             12851                  a character index (starting at 0) into the original parse
             12852                  string;  the index identifies the first character of the
             12853                  string which was accepted by this node (or by any of its
             12854                  sub-nodes).
             12855        */
             12856    1         2 SUBLK$(0:0) PTR UNAL;
             12857        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12858                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12859                  OUT$BLK structure, or to an OUT$SYM structure.
             12860        */
     3742    12862              %PARSE$SYM( NAME = OUT$SYM ,
     3743    12863                          STCLASS="BASED(BLK$)") ;
             12864        /*F*  NAME:     PARSE$SYM
             12865              FUNCTION: holds "parse symbols".  Structures of this form are created
             12866                  by X$PARSE to hold those portions of the string being parsed
             12867                  which must be returned to the user - quoted strings, decimal
             12868                  or octal numbers, PL-6 identifiers, etc.
             12869        */
             12870    1   DCL 1 NAME STCLASS ALIGNED,
             12871    1         2 TEMP BIT(1) UNAL,
             12872    1         2 * BIT (11) UNAL,
             12873    1         2 NDTYPE UBIN (6) UNAL,
             12874        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
             12875        */
             12876    1         2 CODE UBIN HALF HALIGNED,
             12877        /*K* CODE - see OUT$BLK.CODE for details.
             12878        */
             12879    1         2 NSUBLKS UBIN HALF HALIGNED,
             12880        /*K* NSUBLKS - always contains the value 1.
             12881        */
             12882    1         2 SCRITCH SCRMODE SCRALGN,
             12883        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
             12884        */
             12885    1         2 CPOS UBIN WORD,
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:615  
             12886        /*K* CPOS - see OUT$BLK.CPOS for details.
             12887        */
             12888    1         2 TEXTC$ PTR,
             12889        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
             12890                  followed by a variable number of characters).  Always
             12891                  points to OUT$SYM.COUNT in the current OUT$SYM block.
             12892        */
             12893    1         2 COUNT UBIN BYTE CALIGNED,
             12894        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
             12895        */
             12896    1         2 TEXT CHAR(NAME.COUNT) CALIGNED;
             12897        /*K* TEXT - contains the text of a string, decimal number, PL-6
             12898                  identifier, or some other parser "symbol".
             12899        */
     3744    12901        %PLIST ;
     3745    12902        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:616  
     3746    12903        /*********************************************************************/
     3747    12904        /*   Procedure       procedure       procedure       procedure       */
     3748    12905        /*********************************************************************/
     3749    12906
     3750    12907        /*
     3751    12908            ***            Begin procedure                    ***
     3752    12909        */
     3753    12910    1   SUBS = P$NODE.SUBNODES ;
     3754    12911    1   UNITS = 0 ;
     3755    12912                                                              /* Was there a decimal. */
     3756    12913    2   IF SUBS = 2 THEN DO;
     3757    12914    2      BLK$ = P$NODE.SUBLK$(1) ;
     3758    12915    3      IF OUT$SYM.COUNT > 1 THEN DO;
     3759    12916        /*E*  ERROR:    ASD-E$TOOMANYDIGITS-C
     3760    12917              MESSAGE:  Too many digits after decimal point.
     3761    12918              MESSAGE1: There can be at most 1 digit after the decimal point.
     3762    12919        */
     3763    12920              %SCREAM( ERR#=E$TOOMANYDIGITS, LEVEL=ERROR, MID='F');
     3764    12935    3         ALTRETURN ;
     3765    12936    3         END ; /* Then do */
     3766    12937    2      CALL CHARBIN( UNITS, OUT$SYM.TEXT ) ;
     3767    12938    2      END ; /* Then do */
     3768    12939
     3769    12940    1   BLK$ = P$NODE.SUBLK$(0) ;
     3770    12941    1   CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;
     3771    12942    1   HUSECS = 10 * VAL + UNITS ;
     3772    12943
     3773    12944    1   RETURN ;
     3774    12945
     3775    12946    1   END   ASD$R2HUSECS ;

PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:617  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASD$R2HUSECS.

   Procedure ASD$R2HUSECS requires 48 words for executable code.
   Procedure ASD$R2HUSECS requires 12 words of local(AUTO) storage.

    No errors detected in file ASD$PROFILE.:E05TSI    .

PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:618  

 Object Unit name= ASD$R2HUSECS                               File name= ASD$PROFILE.:E05TOU
 UTS= JUL 29 '97 09:55:16.96 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$LO
    1  RoData even  UTS      1      1  ASD$R2HUSECS
    2   Proc  even  none    48     60  ASD$R2HUSECS
    3  RoData even  none     1      1  ASD$R2HUSECS

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        2  ASD$R2HUSECS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
         yes           Std       2 ASH$ERROR
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:619  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     ERR_CODE                              REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                          B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:620  


     3685        1        /*T***********************************************************/
     3686        2        /*T*                                                         */
     3687        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     3688        4        /*T*                                                         */
     3689        5        /*T***********************************************************/
     3690        6        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:621  
     3691        7        ASD$R2HUSECS: PROC ( REAL$, HUSECS ) ALTRET ;

      7  2 000000   000000 700200 xent  ASD$R2HUSECS TSX0  ! X66_AUTO_2
         2 000001   000014 000002                    ZERO    12,2

     3692        8        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:622  
     3693        9        /********************************************************************/
     3694       10        /*   Parameters      parameters      parameters      parameters      */
     3695       11        /*********************************************************************/
     3696       12
     3697       13    1   DCL REAL$ PTR ;
     3698       14    1   DCL VAL UBIN WORD ;
     3699       15    1   DCL HUSECS UBIN WORD ;
     3700       16        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:623  
     3701       17        /********************************************************************/
     3702       18        /*   Include files   include files   include files   include files   */
     3703       19        /*********************************************************************/
     3704       20
     3705       21        %INCLUDE            AS_ENTRIES_M ;
     3706     1071        %INCLUDE            AS_SUPER_C ;
     3707     1506        %INCLUDE            AS_SUBS_C ;
     3708     2920        %INCLUDE            AS_PERR_C ;
     3709     3522        %INCLUDE            AS_MAC_C ;
     3710     3602        %INCLUDE            KL_SUPER_C ;
     3711     6504        %INCLUDE            XU_MACRO_C ;
     3712     9610        %INCLUDE            XU_FORMAT_C ;
     3713     9772        %INCLUDE            AS_SUPER_R ;
     3714    12788        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:624  
     3715    12789        /********************************************************************/
     3716    12790        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     3717    12791        /*********************************************************************/
     3718    12792
     3719    12793        %ASH$ERROR ;
     3720    12796        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:625  
     3721    12797        /********************************************************************/
     3722    12798        /*   Static data     static data     static data     static data     */
     3723    12799        /*********************************************************************/
     3724    12800
     3725    12801        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:626  
     3726    12802        /********************************************************************/
     3727    12803        /*   Auto data       auto data       auto data       auto data       */
     3728    12804        /*********************************************************************/
     3729    12805
     3730    12806    1   DCL BLK$ PTR ;
     3731    12807    1   DCL CNT UBIN WORD ;
     3732    12808    1   DCL SUBS UBIN WORD ;
     3733    12809    1   DCL UNITS UBIN WORD ;
     3734    12810        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:627  
     3735    12811        /********************************************************************/
     3736    12812        /*   Local based     local based     local based     local based     */
     3737    12813        /*********************************************************************/
     3738    12814
     3739    12815        %LIST ;
     3740    12816            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(REAL$)",
     3741    12817                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
             12818        /*F*  NAME:     PARSE$OUT
             12819              FUNCTION: a structure built by X$PARSE which corresponds to a "list",
             12820                  "alternative", "reducing alternative", or "koncat" node in
             12821                  the user's parse tree.
             12822        */
             12823    1   DCL 1 NAME STCLASS ALIGNED,
             12824    1         2 TEMP BIT(1) UNAL,
             12825    1         2 * BIT (11) UNAL,
             12826    1         2 NDTYPE UBIN (6) UNAL,
             12827        /*K* NDTYPE - specifies the type of parse node to which this PARSE$OUT
             12828                  block corresponds.  See the XU_SUBS_C file for the
             12829                  %EQU symbols whose values may appear in this field.
             12830        */
             12831    1         2 CODE UBIN HALF HALIGNED,
             12832        /*K* CODE - Contains the numeric "node code" specified by the user when
             12833                  the corresponding parse-node was defined.
             12834        */
             12835    1         2 NSUBLKS UBIN HALF HALIGNED,
             12836        /*K* NSUBLKS - "number of sub-blocks".  This field contains the count of
             12837                  pointers actually available in the PARSE$OUT.SUBLK$ array.
             12838        */
             12839    1         2 SCRITCH SCRMODE SCRALGN,
             12840        /*K* SCRITCH - an 18-bit scratch field reserved for the user.  X$PARSE
             12841                  initializes this field to zero when the PARSE$OUT structure
             12842                  is allocated, and never sets or examines it thereafter.
             12843                  The name of this field may be changed when the PARSE$OUT macro
             12844                  is invoked by the user (say "SCRITCH=yourname"), and its data
             12845                  type may also be changed (say "SCRMODE=pl6datatype" and
             12846                  "SCRALGN=alignment").  BEWARE: this field MUST be 18-bits long,
             12847                  and be UNALIGNED, CALIGNED, or HALIGNED.
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:628  
             12848        */
             12849    1         2 CPOS UBIN WORD,
             12850        /*K* CPOS - "character position" of this block.  This field will contain
             12851                  a character index (starting at 0) into the original parse
             12852                  string;  the index identifies the first character of the
             12853                  string which was accepted by this node (or by any of its
             12854                  sub-nodes).
             12855        */
             12856    1         2 SUBLK$(0:0) PTR UNAL;
             12857        /*K* SUBLK$ - an array of PL-6 PTRs.  The number of elements in this array
             12858                  is found in OUT$BLK.NSUBLKS;  each PTR will point to another
             12859                  OUT$BLK structure, or to an OUT$SYM structure.
             12860        */
     3742    12862              %PARSE$SYM( NAME = OUT$SYM ,
     3743    12863                          STCLASS="BASED(BLK$)") ;
             12864        /*F*  NAME:     PARSE$SYM
             12865              FUNCTION: holds "parse symbols".  Structures of this form are created
             12866                  by X$PARSE to hold those portions of the string being parsed
             12867                  which must be returned to the user - quoted strings, decimal
             12868                  or octal numbers, PL-6 identifiers, etc.
             12869        */
             12870    1   DCL 1 NAME STCLASS ALIGNED,
             12871    1         2 TEMP BIT(1) UNAL,
             12872    1         2 * BIT (11) UNAL,
             12873    1         2 NDTYPE UBIN (6) UNAL,
             12874        /*K* NDTYPE - see OUT$BLK.NDTYPE for details.
             12875        */
             12876    1         2 CODE UBIN HALF HALIGNED,
             12877        /*K* CODE - see OUT$BLK.CODE for details.
             12878        */
             12879    1         2 NSUBLKS UBIN HALF HALIGNED,
             12880        /*K* NSUBLKS - always contains the value 1.
             12881        */
             12882    1         2 SCRITCH SCRMODE SCRALGN,
             12883        /*K* SCRITCH - see OUT$BLK.SCRITCH for details.
             12884        */
             12885    1         2 CPOS UBIN WORD,
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:629  
             12886        /*K* CPOS - see OUT$BLK.CPOS for details.
             12887        */
             12888    1         2 TEXTC$ PTR,
             12889        /*K* TEXTC$ - a pointer to a TEXTC-type string (a 1-byte count field
             12890                  followed by a variable number of characters).  Always
             12891                  points to OUT$SYM.COUNT in the current OUT$SYM block.
             12892        */
             12893    1         2 COUNT UBIN BYTE CALIGNED,
             12894        /*K* COUNT - contains the number of characters in OUT$SYM.TEXT.
             12895        */
             12896    1         2 TEXT CHAR(NAME.COUNT) CALIGNED;
             12897        /*K* TEXT - contains the text of a string, decimal number, PL-6
             12898                  identifier, or some other parser "symbol".
             12899        */
     3744    12901        %PLIST ;
     3745    12902        %EJECT ;
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:630  
     3746    12903        /*********************************************************************/
     3747    12904        /*   Procedure       procedure       procedure       procedure       */
     3748    12905        /*********************************************************************/
     3749    12906
     3750    12907        /*
     3751    12908            ***            Begin procedure                    ***
     3752    12909        */
     3753    12910    1   SUBS = P$NODE.SUBNODES ;

  12910  2 000002   200003 470500                    LDP0    @REAL$,,AUTO
         2 000003   000000 471500                    LDP1    0,,PR0
         2 000004   100001 236100                    LDQ     1,,PR1
         2 000005   000022 772000                    QRL     18
         2 000006   200010 756100                    STQ     SUBS,,AUTO

     3754    12911    1   UNITS = 0 ;

  12911  2 000007   200011 450100                    STZ     UNITS,,AUTO

     3755    12912                                                              /* Was there a decimal. */
     3756    12913    2   IF SUBS = 2 THEN DO;

  12913  2 000010   000002 116007                    CMPQ    2,DL
         2 000011   000036 601000 2                  TNZ     s:12940

     3757    12914    2      BLK$ = P$NODE.SUBLK$(1) ;

  12914  2 000012   100004 236100                    LDQ     4,,PR1
         2 000013   200006 756100                    STQ     BLK$,,AUTO

     3758    12915    3      IF OUT$SYM.COUNT > 1 THEN DO;

  12915  2 000014   200006 473500                    LDP3    BLK$,,AUTO
         2 000015   300004 236100                    LDQ     4,,PR3
         2 000016   777000 376003                    ANQ     -512,DU
         2 000017   002000 116003                    CMPQ    1024,DU
         2 000020   000026 602000 2                  TNC     s:12937
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:631  

     3759    12916        /*E*  ERROR:    ASD-E$TOOMANYDIGITS-C
     3760    12917              MESSAGE:  Too many digits after decimal point.
     3761    12918              MESSAGE1: There can be at most 1 digit after the decimal point.
     3762    12919        */
     3763    12920              %SCREAM( ERR#=E$TOOMANYDIGITS, LEVEL=ERROR, MID='F');

  12932  2 000021   000000 630400 3                  EPPR0   0
         2 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000023   000000 701000 xent               TSX1    ASH$ERROR
         2 000024   000000 011000                    NOP     0

     3764    12935    3         ALTRETURN ;

  12935  2 000025   000000 702200 xent               TSX2  ! X66_AALT

     3765    12936    3         END ; /* Then do */
     3766    12937    2      CALL CHARBIN( UNITS, OUT$SYM.TEXT ) ;

  12937  2 000026   300004 236100                    LDQ     4,,PR3
         2 000027   000033 772000                    QRL     27
         2 000030   000000 620006                    EAX0    0,QL
         2 000031   000100 305540                    DTB
         2 000032   300004 230010                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X0
         2 000033   200012 000010                    NDSC9   UNITS+1,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         2 000034   200013 235100                    LDA     UNITS+2,,AUTO
         2 000035   200011 755100                    STA     UNITS,,AUTO

     3767    12938    2      END ; /* Then do */

     3768    12939
     3769    12940    1   BLK$ = P$NODE.SUBLK$(0) ;

  12940  2 000036   000000 471500                    LDP1    0,,PR0
         2 000037   100003 236100                    LDQ     3,,PR1
         2 000040   200006 756100                    STQ     BLK$,,AUTO

PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:632  
     3770    12941    1   CALL CHARBIN( VAL, OUT$SYM.TEXT ) ;

  12941  2 000041   200006 473500                    LDP3    BLK$,,AUTO
         2 000042   300004 236100                    LDQ     4,,PR3
         2 000043   000033 772000                    QRL     27
         2 000044   000000 620006                    EAX0    0,QL
         2 000045   000100 305540                    DTB
         2 000046   300004 230010                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X0
         2 000047   200012 000010                    NDSC9   UNITS+1,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         2 000050   200013 235100                    LDA     UNITS+2,,AUTO
         2 000051   200005 755100                    STA     VAL,,AUTO

     3771    12942    1   HUSECS = 10 * VAL + UNITS ;

  12942  2 000052   200005 236100                    LDQ     VAL,,AUTO
         2 000053   000012 402007                    MPY     10,DL
         2 000054   200011 036100                    ADLQ    UNITS,,AUTO
         2 000055   200004 471500                    LDP1    @HUSECS,,AUTO
         2 000056   100000 756100                    STQ     0,,PR1

     3772    12943
     3773    12944    1   RETURN ;

  12944  2 000057   000000 702200 xent               TSX2  ! X66_ARET
     3774    12945
     3775    12946    1   END   ASD$R2HUSECS ;

PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:633  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure ASD$R2HUSECS.
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:634  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @HUSECS                    3-0-0/w PTR         r     1 @REAL$
     6-0-0/w PTR         r     1 BLK$                      *0-0-0/w UBIN        r     1 HUSECS
    *0-0-0/w PTR         r     1 REAL$                     10-0-0/w UBIN        r     1 SUBS
    11-0-0/w UBIN        r     1 UNITS                      5-0-0/w UBIN        r     1 VAL

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASD$R2HUSECS requires 48 words for executable code.
   Procedure ASD$R2HUSECS requires 12 words of local(AUTO) storage.

    No errors detected in file ASD$PROFILE.:E05TSI    .
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:635  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:636  
          MINI XREF LISTING

ASA_BRKS_LOC
      9936**DCL      9936--REDEF
ASH$ERROR
     12794**DCL-ENT 12932--CALL
AS_DEFAULT.BANNER_PERM
     10629**DCL     10630--REDEF
AS_DEFAULT.BUDGET.MACCT
     10534**DCL     10538--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     10547**DCL     10550--REDEF
AS_DEFAULT.BUDGET.PACCUM
     10530**DCL     10532--REDEF
AS_DEFAULT.BUDGET.PMAXC
     10525**DCL     10527--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     10645**DCL     10646--REDEF   10647--REDEF
AS_DEFAULT_DREC.PASSWORD
     11899**DCL     11903--REDEF
AS_DEFAULT_DREC.RENAME
     11922**DCL     11923--REDEF
AS_DFLT.BANNER_PERM
     10451**DCL     10452--REDEF
AS_DFLT.BUDGET.MACCT
     10356**DCL     10360--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     10369**DCL     10372--REDEF
AS_DFLT.BUDGET.PACCUM
     10352**DCL     10354--REDEF
AS_DFLT.BUDGET.PMAXC
     10347**DCL     10349--REDEF
AS_DFLT.SETUP_CHRA.TXT
     10467**DCL     10468--REDEF   10469--REDEF
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:637  
AS_FE_MODE
      9802**DCL      9803--REDEF
AS_MODE
      9799**DCL      9801--REDEF
AS_MOD_USER.ACCESS
     12664**DCL     12665--REDEF
AS_MOD_USER.BANNER
     12651**DCL     12652--REDEF
AS_MOD_USER.BANNER_PERM
     12653**DCL     12654--REDEF
AS_MOD_USER.BILL
     12659**DCL     12660--REDEF
AS_MOD_USER.CPROC
     12655**DCL     12656--REDEF
AS_MOD_USER.FEBILL
     12735**DCL     12736--REDEF
AS_MOD_USER.FECXTMEM
     12752**DCL     12753--REDEF
AS_MOD_USER.FEMINTS
     12737**DCL     12738--REDEF
AS_MOD_USER.FEMMEM
     12748**DCL     12749--REDEF
AS_MOD_USER.FEMTIME
     12746**DCL     12747--REDEF
AS_MOD_USER.FEPPRIV
     12743**DCL     12745--REDEF
AS_MOD_USER.FEPRIV
     12740**DCL     12742--REDEF
AS_MOD_USER.FORCE_BIT
     12649**DCL     12650--REDEF
AS_MOD_USER.KEY
     12731**DCL     12733--REDEF
AS_MOD_USER.LASTCPROC
     12657**DCL     12658--REDEF
AS_MOD_USER.LIMITS.DO_
     12705**DCL     12706--REDEF
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:638  
AS_MOD_USER.LIMITS.FPOOLS
     12721**DCL     12722--REDEF
AS_MOD_USER.LIMITS.LO
     12701**DCL     12702--REDEF
AS_MOD_USER.LIMITS.MEM
     12697**DCL     12698--REDEF
AS_MOD_USER.LIMITS.MPRIO
     12725**DCL     12726--REDEF
AS_MOD_USER.LIMITS.PDIS
     12713**DCL     12714--REDEF
AS_MOD_USER.LIMITS.PO
     12709**DCL     12710--REDEF
AS_MOD_USER.LIMITS.TDIS
     12717**DCL     12718--REDEF
AS_MOD_USER.LIMITS.TIME
     12693**DCL     12694--REDEF
AS_MOD_USER.MAXENQ
     12674**DCL     12675--REDEF
AS_MOD_USER.PERM_BIT
     12647**DCL     12648--REDEF
AS_MOD_USER.PPRIV
     12669**DCL     12671--REDEF
AS_MOD_USER.PRIOB
     12676**DCL     12677--REDEF
AS_MOD_USER.PRIV
     12666**DCL     12668--REDEF
AS_MOD_USER.QUAN
     12672**DCL     12673--REDEF
AS_MOD_USER.SETUP
     12645**DCL     12646--REDEF
AS_PROJECT.BANNER_PERM
     10985**DCL     10986--REDEF
AS_PROJECT.BUDGET.MACCT
     10890**DCL     10894--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     10903**DCL     10906--REDEF
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:639  
AS_PROJECT.BUDGET.PACCUM
     10886**DCL     10888--REDEF
AS_PROJECT.BUDGET.PMAXC
     10881**DCL     10883--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     11001**DCL     11002--REDEF   11003--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     11163**DCL     11164--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     11068**DCL     11072--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     11081**DCL     11084--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     11064**DCL     11066--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     11059**DCL     11061--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     11179**DCL     11180--REDEF   11181--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     12385**DCL     12389--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     12408**DCL     12409--REDEF
AS_PROJECT_DREC.PASSWORD
     12223**DCL     12227--REDEF
AS_PROJECT_DREC.RENAME
     12246**DCL     12247--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     10807**DCL     10808--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     10712**DCL     10716--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     10725**DCL     10728--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     10708**DCL     10710--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     10703**DCL     10705--REDEF
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:640  
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     10823**DCL     10824--REDEF   10825--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     12061**DCL     12065--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     12084**DCL     12085--REDEF
AS_USERS.BANNER_PERM
     10273**DCL     10274--REDEF
AS_USERS.BUDGET.MACCT
     10178**DCL     10182--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     10191**DCL     10194--REDEF
AS_USERS.BUDGET.PACCUM
     10174**DCL     10176--REDEF
AS_USERS.BUDGET.PMAXC
     10169**DCL     10171--REDEF
AS_USERS.SETUP_CHRA.TXT
     10289**DCL     10290--REDEF   10291--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     11341**DCL     11342--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     11246**DCL     11250--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     11259**DCL     11262--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     11242**DCL     11244--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     11237**DCL     11239--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     11357**DCL     11358--REDEF   11359--REDEF
BLK$
     12806**DCL     12870--IMP-PTR 12914<<ASSIGN  12915>>IF      12937>>CALLBLT 12937>>CALLBLT 12940<<ASSIGN
     12941>>CALLBLT 12941>>CALLBLT
ERR_CODE
      9931**DCL      9932--REDEF
HUSECS
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:641  
        15**DCL         7--PROC    12942<<ASSIGN
KL_DEFAULT.PASSWORD
     12547**DCL     12551--REDEF
KL_DEFAULT.RENAME
     12570**DCL     12571--REDEF
KL_DFLT.PASSWORD
     11737**DCL     11741--REDEF
KL_DFLT.RENAME
     11760**DCL     11761--REDEF
KL_DREC.PASSWORD
     11575**DCL     11579--REDEF
KL_DREC.RENAME
     11598**DCL     11599--REDEF
KL_DREC_CNT.PASSWORD
     11462**DCL     11466--REDEF
KL_DREC_CNT.RENAME
     11485**DCL     11486--REDEF
OUT$SYM.COUNT
     12893**DCL     12896--IMP-SIZ 12915>>IF      12937>>CALLBLT 12941>>CALLBLT
OUT$SYM.TEXT
     12896**DCL     12937>>CALLBLT 12941>>CALLBLT
P$NODE.SUBLK$
     12856**DCL     12914>>ASSIGN  12940>>ASSIGN
P$NODE.SUBNODES
     12835**DCL     12910>>ASSIGN
PROJ_KEY.TEXT
      9809**DCL      9809--REDEF
PROJ_KEY.TXT.PROJECT
      9809**DCL      9809--REDEF
REAL$
        13**DCL         7--PROC    12823--IMP-PTR 12910>>ASSIGN  12914>>ASSIGN  12940>>ASSIGN
REMEM_VAR
      9935**DCL      9935--REDEF
REM_FCMD
      9935**DCL      9936--REDEF
SUBS
PL6.E3A0      #002=ASD$R2HUSECS File=ASD$PROFILE.:E05TSI                         TUE 07/29/97 09:55 Page:642  
     12808**DCL     12910<<ASSIGN  12913>>IF
UNITS
     12809**DCL     12911<<ASSIGN  12937<<CALLBLT 12942>>ASSIGN
USERS_KEY.TEXT
      9806**DCL      9807--REDEF    9807--REDEF    9807--REDEF    9808--REDEF
VAL
        14**DCL     12941<<CALLBLT 12942>>ASSIGN
