/*M* EXORCISE - Program to remove classified data from dump files */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
EXORCISE: PROC    MAIN;
%INCLUDE CP_6;
%INCLUDE XU_MACRO_C;
%INCLUDE XUR_ENTRY;
%XUR_INIT(NAME=XURI, PCB=P_PCB, SYNTAX=YES, GOODCMD=YES);
%P_PCB(NAME=P_PCB, STCLASS=STATIC);
%PARSE$OUT(NAME=PARSOUT);
%PARSE$SYM(NAME=PARSYM, STCLASS="BASED(SBLK$)");
%FPT_DELREC(DCB=M$EI, KEY=FIRST, LKEY=LAST);
%FPT_OPEN(DCB=M$EI, NAME=VLP_NAME, FUN=UPDATE, ASN=FILE, ACCT=VLP_ACCT);
%FPT_WRITE(DCB=M$LO, BUF=ERR0, WAIT=YES);
%FPT_CLOSE(DCB=M$EI, DISP=SAVE);
%F$DCB(STCLASS="BASED(DCB$)");
/**/
DCL    M$EI    DCB;
DCL    M$SI    DCB;
DCL    M$LO    DCB;
%VLP_NAME(NAME=':DFC01NNNN');
%VLP_ACCT(ACCT=':SYSTAC2');
DCL    IX0     SBIN;
DCL    IX1     SBIN;
DCL    IX3     SBIN;
DCL    BLK$    PTR STATIC;
DCL    SBLK$   PTR;
DCL    NODE1   UBIN SYMREF;
DCL    NODE2   UBIN SYMREF;
DCL    DCB$    PTR STATIC;
DCL    RBUF    CHAR(10) STATIC;
DCL 1  OBUF(0:9) REDEF RBUF,
     2     X       UBIN(9) UNAL;
DCL    ERR0    CHAR(0) STATIC INIT('...that page does''t exist in dump');
DCL 1  FIRST STATIC,
     2     *       UBIN(9) UNAL INIT(7),
     2     *       UBIN(9) UNAL INIT(1),
     2     TYP     UBIN(9) UNAL,
     2     STYP    UBIN(9) UNAL,
     2     USR     UBIN(9) UNAL,
     2     VP      SBIN(27) UNAL;
DCL 1  LAST STATIC,
     2     *       UBIN(9) UNAL INIT(7),
     2     *       UBIN(9) UNAL INIT(1),
     2     TYP     UBIN(9) UNAL,
     2     STYP    UBIN(9) UNAL,
     2     USR     UBIN(9) UNAL,
     2     VP      SBIN(27) UNAL;
DCL    PRMPT1      CHAR(0) STATIC INIT('Dump>> ');
DCL    PRMPT2      CHAR(0) STATIC INIT('CG page>> ');
/**/
       DCB$ = DCBADDR(DCBNUM(M$SI));
       CALL XUR$INIT(XURI);
       DO WHILE('1'B);
           CALL XUR$GETCMD(NODE1, BLK$, VECTOR(PRMPT1));
           IF BLK$->PARSOUT.SUBLK$(0)->PARSOUT.CODE = 100 THEN
               CALL M$EXIT;
           SBLK$ = BLK$->PARSOUT.SUBLK$(0)->PARSOUT.SUBLK$(0);
           SUBSTR(VLP_NAME.NAME#, 6, 4) = PARSYM.TEXT;
           IF BLK$->PARSOUT.SUBLK$(0)->PARSOUT.NSUBLKS = 2 THEN DO;
               SBLK$ = BLK$->PARSOUT.SUBLK$(0)->PARSOUT.SUBLK$(1);
               VLP_ACCT.ACCT# = SUBSTR(PARSYM.TEXT, 0, PARSYM.COUNT);
               END;
           ELSE
               VLP_ACCT.ACCT# = ':SYSTAC2';
           CALL M$OPEN(FPT_OPEN) WHENALTRETURN DO;
               CALL M$MERC;
               END;
           FPT_DELREC.LKEY_ = VECTOR(LAST);
/*      Remove the circular queue data */
/**/
           FIRST.TYP = 3;
           LAST.TYP = 3;
           FIRST.USR = 1;
           LAST.USR = 1;
           FIRST.VP = 0;
           LAST.VP = -1;
           DO FIRST.STYP = 13 TO 25;
               LAST.STYP = FIRST.STYP;
               CALL M$DELREC(FPT_DELREC) WHENALTRETURN DO;
                   END;
               END;
/**/
/*     Remove FPOOLs for all users */
/**/
           FIRST.TYP = 4;
           LAST.TYP = 4;
           FIRST.VP = 16;
           LAST.VP = 46;
           DO IX0 = 0 TO 4;
               FIRST.STYP = IX0;
               LAST.STYP = FIRST.STYP;
               DO IX1 = 0 TO 511;
                   FIRST.USR = IX1;
                   LAST.USR = FIRST.USR;
                   CALL M$DELREC(FPT_DELREC) WHENALTRETURN DO;
                       END;
                   END;
               END;
/**/
/*     Remove instruction segment for all users */
/**/
           FIRST.VP = 64;
           LAST.VP = 319;
           DO IX0 = 0 TO 4;
               FIRST.STYP = IX0;
               LAST.STYP = FIRST.STYP;
               DO IX1 = 0 TO 511;
                   FIRST.USR = IX1;
                   LAST.USR = FIRST.USR;
                   CALL M$DELREC(FPT_DELREC) WHENALTRETURN DO;
                       END;
                   END;
                END;
/**/
/*     Remove all data segments for all users */
/**/
           FIRST.VP = 328;
           LAST.VP = 2047;
           DO IX0 = 0 TO 4;
               FIRST.STYP = IX0;
               LAST.STYP = FIRST.STYP;
               DO IX1 = 0 TO 511;
                   FIRST.USR = IX1;
                   LAST.USR = FIRST.USR;
                   CALL M$DELREC(FPT_DELREC) WHENALTRETURN DO;
                       END;
                   END;
               END;
/**/
/*     Remove comgroup data pages */
/**/
           FIRST.TYP = 5;
           FIRST.STYP = 12;
           FIRST.USR = 1;
           FPT_DELREC.LKEY_ = VECTOR(NIL);
           DO WHILE('1'B);
               CALL XUR$GETCMD(NODE2, BLK$, VECTOR(PRMPT2));
               IF BLK$->PARSOUT.SUBLK$(0)->PARSOUT.CODE = 100 THEN
                   GOTO NEXT;
               SBLK$ = BLK$->PARSOUT.SUBLK$(0)->PARSOUT.SUBLK$(0);
               IX0 = PARSYM.COUNT - 1;
               FIRST.VP = 0;
               RBUF = SUBSTR(PARSYM.TEXT, 0, PARSYM.COUNT);
               DO WHILE(IX0 >= 0);
                   IX1 = PARSYM.COUNT - IX0 -1;
                   IX3 = 1;
                   DO WHILE(IX1 ~= 0);
                       IX3 = IX3 * 8;
                       IX1 = IX1 -1;
                       END;
                   IX1 = OBUF.X(IX0) - 48;
                   FIRST.VP = FIRST.VP + (IX1 * IX3);
                   IX0 = IX0 - 1;
                   END;
               CALL M$DELREC(FPT_DELREC) WHENALTRETURN DO;
                   CALL M$WRITE(FPT_WRITE);
                   END;
               END;
NEXT:  ;
           CALL M$CLOSE(FPT_CLOSE);
           END;
END     EXORCISE;
