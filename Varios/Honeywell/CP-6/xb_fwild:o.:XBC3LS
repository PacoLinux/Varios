
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:1    
        1        1        /*M*    FWILDFID  -- Provide wildcard file naming for CP-6       */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        /*F*    NAME:       FWILDFID(char *WILDSTR, int NUM, int WILDCH);
        9        9
       10       10                PURPOSE:    To return the name of the next file containing
       11       11                         the wild-card string provided in the firs argument.
       12       12
       13       13                INPUT:
       14       14
       15       15                   WILDSTR     is a pointer to the wild-card file name string.
       16       16
       17       17                   NUM         is the number of filenames found which match
       18       18                               the wild-card criteria.
       19       19
       20       20                   WILDCH      is the (optional) integer number of the character
       21       21                               to use for wild-carding (default '?').
       22       22
       23       23                OUTPUT:     The result of this function is a pointer to a
       24       24                            static character string which will be over-written
       25       25                            by the next call.
       26       26
       27       27                DESCRIPTION:
       28       28                   This function is used to locate CP-6 file identifiers which
       29       29                   match the wild-carded file name string argument.  A full CP-6
       30       30                   fid is supported but only the filename portion may be
       31       31                   wild carded.  The result of this function is a pointer to
       32       32                   the next file identifier which matches the search criteria.
       33       33
       34       34                   The NUM argument is used to determine when the wildcard string
       35       35                   has changed.  If NUM is equal to 0, then the first file matching
       36       36                   the search criteria is returned.  The remaining files which
       37       37                   match the search criteria are returned by calling this function
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:2    
       38       38                   with NUM set not equal to 0, but otherwise with the same
       39       39                   arguments.
       40       40
       41       41                   This function allocates a DCB to perform the search operations
       42       42                   with and does not release it (ever).  However, a DCB is only
       43       43                   ever allocated once.
       44       44
       45       45        */
       46       46
       47       47        FWILDFID :  proc(WILDSTR, NUM, WILDCH);
       48       48
       49       49    1   dcl  WILDSTR        char(WILDLEN);
       50       50    1   dcl  NUM            sbin;             /* ditto                */
       51       51    1   dcl  WILDCH         sbin;             /* ditto                */
       52       52
       53       53    1   dcl  PTRNUM_PTR     ptr;
       54       54    1   dcl  PTRNUM_NUM     redef PTRNUM_PTR sbin;
       55       55
       56       56    1   dcl  WILDLEN        sbin;
       57       57    1   dcl  COUNT          sbin;
       58       58    1   dcl  RETURN_STR     char(88) static;
       59       59
       60       60    1   dcl  1  LASTWILD    static,
       61       61    1           2  LEN      sbin,    /* Length of the wild-carded input fid    */
       62       62    1           2  FAST     sbin,    /* Length of the initial non-wild name    */
       63       63    1           2  STR      char(80);/* input wild-carded fid                  */
       64       64
       65       65    1   dcl  XB_RETURN_ORDINAL_RESULT   entry(1);   /* To return our result    */
       66       66    1   dcl  XBI$STRLEN                 entry(2);   /* To obtain string length */
       67       67
       68       68        %include   CP_6;
       69     5628        %include   B_ERRORS_C;
       70     6754        %include   FM$FIT;
       71     6975        %include   CP_6_SUBS;
       72     7515        %include   XUW_MACRO_C;
       73     7650
       74     7651    1   dcl  B$TCB$         ptr      symref     readonly;
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:3    
       75     7652    1   dcl  DCB$           ptr      static     init( addr(nil) );
       76     7653    1   dcl  DCB#           sbin     static     init( 0         );
       77     7654
       78     7655        %F$DCB(       BASED    =  "BASED(DCB$)"  );
       79     7712        %B$ALT;
       80     7720
       81     7721        %FPT_FID(     FPTN     =  FPT_FID_CONST,
       82     7722                      STCLASS  =  CONSTANT,
       83     7723                      NAME     =  FILE_NAME,     /* Wild-carded file name   */
       84     7724                      ACCT     =  FILE_ACCT,     /* Account                 */
       85     7725                      PASS     =  FILE_PASS,     /* Password                */
       86     7726                      SN       =  FILE_SN,       /* Serial number(s)        */
       87     7727                      WSN      =  FILE_WSN       );
       88     7750
       89     7751        %VLP_NAME(    FPTN     =  FILE_SNAME, STCLASS=STATIC);  /* Input name        */
       90     7778        %VLP_NAME(    FPTN     =  FILE_NAME,  STCLASS=STATIC);  /* Current file name */
       91     7805        %VLP_ACCT(    FPTN     =  FILE_ACCT,  STCLASS=STATIC);
       92     7818        %VLP_ACCT(    FPTN     =  FILE_PASS,  STCLASS=STATIC);
       93     7831        %VLP_SN  (    FPTN     =  FILE_SN,    STCLASS=STATIC);
       94     7844        %VLP_NAME(    FPTN     =  FILE_WSN,   STCLASS=STATIC);  /* Workstation       */
       95     7871
       96     7872    1   dcl  FILE_ASN       sbin    static;      /* file ASN#         */
       97     7873    1   dcl  FILE_RES       char(4) static;      /* file RES#         */
       98     7874
       99     7875        %FPT_OPEN(    FPTN     =  FPT_OPEN_CONST,   STCLASS=CONSTANT,
      100     7876                      FUN      =  IN,
      101     7877                      TEST     =  YES,           /* (Just looking)    */
      102     7878                      NXTF     =  YES,           /* Find next file    */
      103     7879                      DISP     =  NAMED,
      104     7880                      SCRUB    =  YES,
      105     7881                      NAME     =  FILE_NAME,
      106     7882                      ACCT     =  FILE_ACCT,
      107     7883                      PASS     =  FILE_PASS,
      108     7884                      SN       =  FILE_SN,
      109     7885                      WSN      =  FILE_WSN    );
      110     7994
      111     7995        %FPT_OPEN(    FPTN     =  FPT_OPEN,         STCLASS="");
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:4    
      112     8104
      113     8105        %XUW_ENTRIES( OMIT     =  X$WILDCMP);
      114     8117
      115     8118        %XUW_WILDCARD(CONTAINS =  NO,
      116     8119                      PATTERN  =  FILE_SNAME  );
      117     8215
      118     8216        /*****************************************************************/
      119     8217        /*                     P R O C E D U R E                         */
      120     8218        /*****************************************************************/
      121     8219
      122     8220    1        DCB$           = dcbaddr(DCB#);
      123     8221    1        PTRNUM_PTR     = addr(NUM);
      124     8222    1        COUNT          = PTRNUM_NUM;     /* 0 if new wild-card pattern */
      125     8223    1        PTRNUM_PTR     = addr(WILDCH);
      126     8224    1        if PTRNUM_NUM < 256
      127     8225    1           then XUW_WILDCARD.WILD_CHAR# = binasc(PTRNUM_NUM);
      128     8226
      129     8227    1        call XBI$STRLEN(WILDSTR, WILDLEN);
      130     8228    1        if COUNT=0  or WILDLEN~=LASTWILD.LEN  or  LASTWILD.STR ~= WILDSTR then
      131     8229    2        do;
      132     8230    2           LASTWILD.LEN   =  WILDLEN;
      133     8231    2           LASTWILD.STR   =  WILDSTR;
      134     8232    2           COUNT          =  0;
      135     8233    2           call SETUP_FID_FIELDS altret(DONE);
      136     8234    2        end;
      137     8235    1        call LOCATE_NEXT_FILE altret(DONE);
      138     8236    1        call GENERATE_RESULT  altret(DONE);
      139     8237    1        call XB_RETURN_ORDINAL_RESULT( addr(RETURN_STR) );
      140     8238    1        return;
      141     8239
      142     8240    1   DONE:   /*  Return NULL when this wild string has finished!  */
      143     8241    1        call XB_RETURN_ORDINAL_RESULT( addr(nil)    );
      144     8242    1        return;
      145     8243
      146     8244
      147     8245        /*I*    NAME:       SETUP_FID_FIELDS
      148     8246                PURPOSE:    To setup various static values whenever the wildcard
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:5    
      149     8247                            criteria changes.
      150     8248                DESCRIPTION:
      151     8249
      152     8250                   The following static values are initialized:
      153     8251
      154     8252                   DCB#        If this is the first time that the wildcarding
      155     8253                               routine has been called, a dcb is obtained for
      156     8254                               our operations and this sbin is initialized to
      157     8255                               that dcb number.
      158     8256
      159     8257                   DCB$        This is the address of the dcb upon which this
      160     8258                               function operates.
      161     8259
      162     8260                   FID_SNAME   This static field contains the file name portion
      163     8261                               of the file names being searched for.  It is used
      164     8262                               for the wildcard matching pattern and for the
      165     8263                               fast exit when the names must all begin with a
      166     8264                               specific string.
      167     8265
      168     8266                   LASTWILD.FAST  This sbin is initialized to the length of the
      169     8267                               leading non-wildcard portion of the file name
      170     8268                               search criteria.  It is used to stop the search
      171     8269                               when the filename returned by M$OPEN does not
      172     8270                               contain this leading string.
      173     8271
      174     8272                   XUW_WILDCARD.PATTERN_   This vector is initialized to frame
      175     8273                               the search criteria indicated by FID_SNAME.
      176     8274
      177     8275                   The following fields are initialized by M$FID:
      178     8276
      179     8277                   FID_NAME    This field is the current file name.  It is
      180     8278                               initialized to the portion of FID_SNAME up but
      181     8279                               not including the wildcard character.  If the
      182     8280                               wildcard character starts the name then this
      183     8281                               field is initialized to the string "!".
      184     8282
      185     8283                   FID_ACCT    This field is the current account name.  It is
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:6    
      186     8284                               initialized by M$FID.
      187     8285
      188     8286                   FID_PASS    This field is the password.
      189     8287                   FID_SN      This field is the serial number.
      190     8288                   FID_WSN     This field is the current workstation.
      191     8289                   FID_ASN     This is the fid ASN#.
      192     8290                   FID_RES     This is the fid RES#.
      193     8291
      194     8292        */
      195     8293
      196     8294    1   SETUP_FID_FIELDS: proc altret;
      197     8295
      198     8296        %FPT_FID(     FPTN     =  FPT_FID,             STCLASS=""   );
      199     8319        %FPT_GETDCB(  FPTN     =  FPT_GETDCB_CONST,    STCLASS=CONSTANT,
      200     8320                      DCBNUM   =  DCB#                              );
      201     8335
      202     8336    2   dcl  POSN           sbin;
      203     8337
      204     8338    3        if DCB# = 0 then do;
      205     8339    3           call M$GETDCB(FPT_GETDCB_CONST) altret(BADF);
      206     8340    3           DCB$ = dcbaddr(DCB#);
      207     8341    3           end;
      208     8342
      209     8343    2        FPT_FID           =  FPT_FID_CONST;
      210     8344    2        FPT_FID.TEXTFID_  =  vector( substr(LASTWILD.STR,,LASTWILD.LEN) );
      211     8345    2        FPT_FID.ASN_      =  vector( FPT_OPEN.V.ASN# );
      212     8346    2        FPT_FID.RES_      =  vector( FPT_OPEN.V.RES# );
      213     8347
      214     8348    2        call M$FID( FPT_FID ) altret(BADF);
      215     8349
      216     8350    2        FILE_ASN          =  FPT_OPEN.V.ASN#;
      217     8351    2        FILE_RES          =  FPT_OPEN.V.RES#;
      218     8352    2        LASTWILD.FAST     =  1;
      219     8353    2        FILE_SNAME        =  FILE_NAME;
      220     8354
      221     8355    2        XUW_WILDCARD.PATTERN_ = vector( substr(FILE_SNAME.NAME#,,FILE_SNAME.L#) );
      222     8356
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:7    
      223     8357    3        if substr(FILE_NAME.NAME#,,1) = XUW_WILDCARD.WILD_CHAR# then do;
      224     8358    3           LASTWILD.FAST  = 0;
      225     8359    3           FILE_NAME.L#   = 1;
      226     8360    3           substr(FILE_NAME.NAME#,,1) = '!';
      227     8361    3           end;
      228     8362    3        else do;
      229     8363    4           call index(POSN,XUW_WILDCARD.WILD_CHAR#,FILE_NAME.NAME#) whenreturn do;
      230     8364    4              FILE_NAME.L#  = POSN;
      231     8365    4              LASTWILD.FAST = POSN;
      232     8366    4              end;
      233     8367    3           end;
      234     8368
      235     8369    2        return;
      236     8370    2   BADF:
      237     8371    2        altreturn;
      238     8372
      239     8373    2   end SETUP_FID_FIELDS;
      240     8374
      241     8375
      242     8376        /*I*    NAME:          LOCATE_NEXT_FILE
      243     8377                PURPOSE:       To locate the next file in the wildcard search.
      244     8378
      245     8379                INPUT:         FPT_OPEN_CONST
      246     8380                               DCB$
      247     8381                               DCB#
      248     8382                               FID_SNAME
      249     8383                               FID_NAME
      250     8384                               FID_ACCT
      251     8385                               FID_PASS
      252     8386                               FID_SN
      253     8387                               FID_WSN
      254     8388                               FID_RES
      255     8389                               FID_ASN
      256     8390                               COUNT
      257     8391                               LASTWILD.FAST
      258     8392
      259     8393                DESCRIPTION:
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:8    
      260     8394                   This subroutine returns when FID_NAME contains a new
      261     8395                   filename which matches the search criteria.  If another
      262     8396                   filename cannot be found, then an altreturn is made.
      263     8397
      264     8398                   If this is the first time that this routine has been
      265     8399                   called for this criteria (COUNT=0), the filename in
      266     8400                   FID_NAME is a possible return file name.
      267     8401
      268     8402                   XUW$WILDCMP is used to perform the wildcard comparison.
      269     8403                   If XUW$WILDCMP altreturns then an altreturn from this
      270     8404                   routine is made if LASTWILD.FAST>0 and the initial
      271     8405                   LASTWILD.FAST characters of the current file name do
      272     8406                   not match the same number of characters from FID_SNAME.
      273     8407
      274     8408                   When M$OPEN altreturns, an altreturn from this routine
      275     8409                   is made if the error code indicates that we are at the
      276     8410                   end of the account or file directory.
      277     8411
      278     8412        */
      279     8413
      280     8414    1   LOCATE_NEXT_FILE : proc altret;
      281     8415
      282     8416    2   dcl  FOUND       sbin;
      283     8417    2   dcl  CODE        sbin;
      284     8418    2   dcl  BSD$        ptr   based;
      285     8419
      286     8420    2     FOUND           = 0;
      287     8421    2     FPT_OPEN        = FPT_OPEN_CONST;
      288     8422    2     FPT_OPEN.V_     = vector(FPT_OPEN.V);
      289     8423    2     FPT_OPEN.V.ASN# = FILE_ASN;
      290     8424    2     FPT_OPEN.V.RES# = FILE_RES;
      291     8425    2     FPT_OPEN.V.DCB# = DCB#;
      292     8426
      293     8427    2     if  COUNT = 0     /* Start search at "this" file */
      294     8428    2        then FPT_OPEN.V.OPER.THISF# = '1'b;
      295     8429
      296     8430    3     do while (FOUND = 0);
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:9    
      297     8431    4        call M$OPEN(FPT_OPEN) whenaltreturn do;
      298     8432    4           CODE = B$TCB$->BSD$->B$ALT.ERR.CODE;
      299     8433    4           if CODE = %E$FD or CODE = %E$FDEOF
      300     8434    4              then altreturn;
      301     8435    4           end;
      302     8436    3        FPT_OPEN.V.OPER.THISF# = '0'b;
      303     8437    3        FILE_NAME = F$DCB.NAME#;
      304     8438    3        XUW_WILDCARD.INPUT_ = vector( substr(FILE_NAME.NAME#,,FILE_NAME.L#) );
      305     8439    4        call X$WILDCMP(XUW_WILDCARD) whenreturn do;
      306     8440    4           FOUND = FOUND + 1;
      307     8441    4           end;
      308     8442    4        whenaltreturn do;
      309     8443    4           if LASTWILD.FAST > 0 and
      310     8444    4              substr(FILE_NAME.NAME#,,LASTWILD.FAST)~=
      311     8445    4              substr(FILE_SNAME.NAME#,,LASTWILD.FAST)
      312     8446    4              then altreturn;   /* Past possible matches   */
      313     8447    4           end;
      314     8448    3     end;
      315     8449    2     return;
      316     8450
      317     8451    2   end LOCATE_NEXT_FILE;
      318     8452
      319     8453        /*I*    NAME:          GENERATE_RESULT
      320     8454
      321     8455                PURPOSE:       This routine generates the result string
      322     8456                               for this function using the M$FID function.
      323     8457
      324     8458        */
      325     8459
      326     8460    1   GENERATE_RESULT : proc altret;
      327     8461
      328     8462        %FPT_UNFID(   FPTN     =  FPT_UNFID_CONST,  STCLASS  =  CONSTANT,
      329     8463                      TEXTFID  =  RETURN_STR);
      330     8481
      331     8482        %FPT_UNFID(   FPTN     =  FPT_UNFID,        STCLASS  =  ""      );
      332     8500
      333     8501    2   dcl  TEXTLEN     sbin;
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:10   
      334     8502
      335     8503    2        FPT_UNFID         = FPT_UNFID_CONST;
      336     8504    2        FPT_UNFID.V_      = vector(FPT_UNFID.V);
      337     8505    2        FPT_UNFID.V.DCB#  = DCB#;
      338     8506    2        FPT_UNFID.TEXTFID_= vector(RETURN_STR);
      339     8507    2        FPT_UNFID.LEN_    = vector(TEXTLEN);
      340     8508    3        call M$UNFID(FPT_UNFID) whenaltreturn do;
      341     8509    3           altreturn;
      342     8510    3           end;
      343     8511
      344     8512    2        substr(RETURN_STR,TEXTLEN,1) = binasc(0);
      345     8513    2        return;
      346     8514
      347     8515    2   end GENERATE_RESULT;
      348     8516
      349     8517    1   end FWILDFID;

PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:11   
--  Include file information  --

   XUW_MACRO_C.:LIB_E04  is referenced.
   CP_6_SUBS.:LIB_E04  is referenced.
   FM$FIT.:LIB_E04  is referenced.
   B_ERRORS_C.:LIB_E04  is referenced.
   CP_6_C.:LIB_E04  is referenced.
   CP_6.:LIB_E04  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FWILDFID.

   Procedure FWILDFID requires 247 words for executable code.
   Procedure FWILDFID requires 98 words of local(AUTO) storage.

    No errors detected in file xb_fwild:6.:XBC3TSI    .

PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:13   
          MINI XREF LISTING

B$ALT.CODE
      7714**DCL      7714--REDEF    7715--REDEF    7715--REDEF
B$ALT.ERR.CODE
      7716**DCL      8432>>ASSIGN
B$ALT.ERR.ERR#
      7716**DCL      7716--REDEF
B$ALT.EVID
      7715**DCL      7715--REDEF    7715--REDEF
B$TCB$
      7651**DCL      8432>>ASSIGN
BADF IN PROCEDURE SETUP_FID_FIELDS
      8371**LABEL    8339--CALLALT  8348--CALLALT
BSD$ IN PROCEDURE LOCATE_NEXT_FILE
      8418**DCL      8432>>ASSIGN
CODE IN PROCEDURE LOCATE_NEXT_FILE
      8417**DCL      8432<<ASSIGN   8433>>IF       8433>>IF
COUNT
        57**DCL      8222<<ASSIGN   8228>>IF       8232<<ASSIGN   8427>>IF
DCB#
      7653**DCL      8220--ASSIGN   8332--DCLINIT  8338>>IF       8340--ASSIGN   8425>>ASSIGN   8505>>ASSIGN
DCB$
      7652**DCL      7656--IMP-PTR  8220<<ASSIGN   8340<<ASSIGN   8437>>ASSIGN
DONE
      8241**LABEL    8233--CALLALT  8235--CALLALT  8236--CALLALT
F$DCB.ACTPOS
      7688**DCL      7688--REDEF
F$DCB.ARS#
      7662**DCL      7662--REDEF
F$DCB.ATTR
      7681**DCL      7682--REDEF
F$DCB.BORROW
      7696**DCL      7696--REDEF    7696--REDEF    7696--REDEF
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:14   
F$DCB.DCBNAME.L
      7710**DCL      7710--IMP-SIZ
F$DCB.EOMCHAR#
      7666**DCL      7666--REDEF
F$DCB.FLDID
      7691**DCL      7691--REDEF
F$DCB.FORM$
      7685**DCL      7685--REDEF
F$DCB.FSECT
      7701**DCL      7701--REDEF
F$DCB.FSN#
      7678**DCL      7678--REDEF    7678--REDEF    7679--REDEF
F$DCB.HEADER$
      7684**DCL      7684--REDEF
F$DCB.IXTNSIZE#
      7682**DCL      7682--REDEF
F$DCB.LASTSTA$
      7671**DCL      7671--REDEF
F$DCB.LVL
      7697**DCL      7697--REDEF
F$DCB.NAME#
      7672**DCL      8437>>ASSIGN
F$DCB.NAME#.C
      7672**DCL      7672--REDEF
F$DCB.NOEOF
      7694**DCL      7694--REDEF
F$DCB.NRECS#
      7683**DCL      7683--REDEF
F$DCB.NRECX
      7702**DCL      7702--REDEF
F$DCB.OHDR
      7694**DCL      7694--REDEF
F$DCB.ORG#
      7677**DCL      7677--REDEF
F$DCB.PRECNO
      7700**DCL      7700--REDEF
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:15   
F$DCB.RCSZ
      7706**DCL      7706--REDEF
F$DCB.RES#
      7673**DCL      7673--REDEF
F$DCB.SETX
      7685**DCL      7685--REDEF
F$DCB.TAB$
      7685**DCL      7685--REDEF
F$DCB.TDA
      7699**DCL      7700--REDEF
F$DCB.WSN#
      7673**DCL      7673--REDEF
FILE_ACCT
      7816**DCL      7739--DCLINIT  7955--DCLINIT
FILE_ASN
      7872**DCL      8350<<ASSIGN   8423>>ASSIGN
FILE_NAME
      7803**DCL      7739--DCLINIT  7951--DCLINIT  8353>>ASSIGN   8437<<ASSIGN
FILE_NAME.L#
      7803**DCL      8359<<ASSIGN   8364<<ASSIGN   8438>>ASSIGN
FILE_NAME.NAME#
      7803**DCL      8357>>IF       8360<<ASSIGN   8363>>CALLBLT  8438--ASSIGN   8443>>IF
FILE_PASS
      7829**DCL      7740--DCLINIT  7952--DCLINIT
FILE_RES
      7873**DCL      8351<<ASSIGN   8424>>ASSIGN
FILE_SN
      7842**DCL      7740--DCLINIT  7950--DCLINIT
FILE_SNAME
      7776**DCL      8183--DCLINIT  8186--DCLINIT  8353<<ASSIGN
FILE_SNAME.L#
      7776**DCL      8355>>ASSIGN
FILE_SNAME.NAME#
      7776**DCL      8355--ASSIGN   8443>>IF
FILE_WSN
      7869**DCL      7740--DCLINIT  7956--DCLINIT
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:16   
FOUND IN PROCEDURE LOCATE_NEXT_FILE
      8416**DCL      8420<<ASSIGN   8430>>DOWHILE  8440<<ASSIGN   8440>>ASSIGN
FPT_FID IN PROCEDURE SETUP_FID_FIELDS
      8307**DCL      8343<<ASSIGN   8348<>CALL
FPT_FID.ASN_ IN PROCEDURE SETUP_FID_FIELDS
      8310**DCL      8345<<ASSIGN
FPT_FID.RES_ IN PROCEDURE SETUP_FID_FIELDS
      8310**DCL      8346<<ASSIGN
FPT_FID.TEXTFID_ IN PROCEDURE SETUP_FID_FIELDS
      8307**DCL      8344<<ASSIGN
FPT_FID_CONST
      7738**DCL      8343>>ASSIGN
FPT_FID_CONST.V
      7742**DCL      7738--DCLINIT
FPT_GETDCB_CONST IN PROCEDURE SETUP_FID_FIELDS
      8331**DCL      8339<>CALL
FPT_GETDCB_CONST.V IN PROCEDURE SETUP_FID_FIELDS
      8332**DCL      8331--DCLINIT
FPT_OPEN
      8060**DCL      8421<<ASSIGN   8431<>CALL
FPT_OPEN.ACSVEH_
      8062**DCL      8063--REDEF
FPT_OPEN.ALTKEYS_
      8068**DCL      8069--REDEF    8069--REDEF
FPT_OPEN.HDR_
      8067**DCL      8068--REDEF
FPT_OPEN.TAB_
      8066**DCL      8067--REDEF
FPT_OPEN.UHL_
      8060**DCL      8061--REDEF    8061--REDEF
FPT_OPEN.V
      8069**DCL      8422--ASSIGN
FPT_OPEN.V.ASN#
      8079**DCL      8345--ASSIGN   8350>>ASSIGN   8423<<ASSIGN
FPT_OPEN.V.DCB#
      8069**DCL      8425<<ASSIGN
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:17   
FPT_OPEN.V.FSN#
      8100**DCL      8100--REDEF    8100--REDEF
FPT_OPEN.V.OPER.THISF#
      8072**DCL      8428<<ASSIGN   8436<<ASSIGN
FPT_OPEN.V.RES#
      8084**DCL      8346--ASSIGN   8351>>ASSIGN   8424<<ASSIGN
FPT_OPEN.V_
      8060**DCL      8422<<ASSIGN
FPT_OPEN.WSN_
      8066**DCL      8066--REDEF
FPT_OPEN_CONST
      7950**DCL      8421>>ASSIGN
FPT_OPEN_CONST.ACSVEH_
      7952**DCL      7953--REDEF
FPT_OPEN_CONST.ALTKEYS_
      7958**DCL      7959--REDEF    7959--REDEF
FPT_OPEN_CONST.HDR_
      7957**DCL      7958--REDEF
FPT_OPEN_CONST.TAB_
      7956**DCL      7957--REDEF
FPT_OPEN_CONST.UHL_
      7950**DCL      7951--REDEF    7951--REDEF
FPT_OPEN_CONST.V
      7959**DCL      7950--DCLINIT
FPT_OPEN_CONST.V.FSN#
      7990**DCL      7990--REDEF    7990--REDEF
FPT_OPEN_CONST.WSN_
      7956**DCL      7956--REDEF
FPT_UNFID IN PROCEDURE GENERATE_RESULT
      8493**DCL      8503<<ASSIGN   8508<>CALL
FPT_UNFID.LEN_ IN PROCEDURE GENERATE_RESULT
      8496**DCL      8507<<ASSIGN
FPT_UNFID.TEXTFID_ IN PROCEDURE GENERATE_RESULT
      8493**DCL      8506<<ASSIGN
FPT_UNFID.V IN PROCEDURE GENERATE_RESULT
      8497**DCL      8504--ASSIGN
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:18   
FPT_UNFID.V.DCB# IN PROCEDURE GENERATE_RESULT
      8497**DCL      8505<<ASSIGN
FPT_UNFID.V_ IN PROCEDURE GENERATE_RESULT
      8493**DCL      8504<<ASSIGN
FPT_UNFID_CONST IN PROCEDURE GENERATE_RESULT
      8474**DCL      8503>>ASSIGN
FPT_UNFID_CONST.V IN PROCEDURE GENERATE_RESULT
      8478**DCL      8474--DCLINIT
GENERATE_RESULT
      8460**PROC     8236--CALL
LASTWILD.FAST
        62**DCL      8352<<ASSIGN   8358<<ASSIGN   8365<<ASSIGN   8443>>IF       8443>>IF       8443>>IF
LASTWILD.LEN
        61**DCL      8228>>IF       8230<<ASSIGN   8344>>ASSIGN
LASTWILD.STR
        63**DCL      8228>>IF       8231<<ASSIGN   8344--ASSIGN
LOCATE_NEXT_FILE
      8414**PROC     8235--CALL
M$FID
      5619**DCL-ENT  8348--CALL
M$GETDCB
      5562**DCL-ENT  8339--CALL
M$OPEN
      5556**DCL-ENT  8431--CALL
M$UNFID
      5619**DCL-ENT  8508--CALL
NUM
        50**DCL        47--PROC     8221--ASSIGN
POSN IN PROCEDURE SETUP_FID_FIELDS
      8336**DCL      8363<<CALLBLT  8364>>ASSIGN   8365>>ASSIGN
PTRNUM_NUM
        54**DCL      8222>>ASSIGN   8224>>IF       8225>>ASSIGN
PTRNUM_PTR
        53**DCL        54--REDEF    8221<<ASSIGN   8223<<ASSIGN
RETURN_STR
        58**DCL      8237--CALL     8474--DCLINIT  8506--ASSIGN   8512<<ASSIGN
PL6.E3A0      #001=FWILDFID File=xb_fwild:6.:XBC3TSI                             FRI 01/06/95 11:09 Page:19   
SETUP_FID_FIELDS
      8294**PROC     8233--CALL
TEXTLEN IN PROCEDURE GENERATE_RESULT
      8501**DCL      8507--ASSIGN   8512>>ASSIGN
WILDCH
        51**DCL        47--PROC     8223--ASSIGN
WILDLEN
        56**DCL        49--IMP-SIZ  8227>>CALL     8227<>CALL     8228>>IF       8228>>IF       8230>>ASSIGN
      8231>>ASSIGN
WILDSTR
        49**DCL        47--PROC     8227<>CALL     8228>>IF       8231>>ASSIGN
X$WILDCMP
      8108**DCL-ENT  8439--CALL
XBI$STRLEN
        66**DCL-ENT  8227--CALL
XB_RETURN_ORDINAL_RESULT
        65**DCL-ENT  8237--CALL     8241--CALL
XUW_WILDCARD
      8181**DCL      8439<>CALL
XUW_WILDCARD.INPUT_
      8187**DCL      8438<<ASSIGN
XUW_WILDCARD.PATTERN_
      8182**DCL      8355<<ASSIGN
XUW_WILDCARD.WILD_CHAR#
      8208**DCL      8225<<ASSIGN   8357>>IF       8363>>CALLBLT
