VERSION E05

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:1    
        1        1        /*M* JMM$MAIN THE INITIALIZATION AND MAIN EVENT HANDLING ROUTINES OF MBS.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMM$MAIN: PROC(STK$,CODE,INFO);
        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE CP_6;                          /* FPT DEFINITIONS                    */
       16       96        %INCLUDE U$JIT_C;
       17      282        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
       18      821        %INCLUDE B_STRINGS_C;                   /* SYSTEM STRING SUBSTITUTIONS        */
       19      950        %INCLUDE JG_EVID_C;                     /* SLUG/MBS EVENT ID DEFINITIONS      */
       20     1175        %INCLUDE JM_SUBS_C;                     /* EVENT CODE DEFINITIONS             */
       21     1281        %INCLUDE OC_SUBS_C;
       22     2012        %INCLUDE JM_SCODE_C;
       23     2039        %INCLUDE JM$STRUCT;                     /* MBS TABLE DEFINITIONS              */
       24     2784        %INCLUDE JMC_DATA_R;                    /* MBS-RESIDENT STATIC GLOBAL DATA    */
       25     2799        %INCLUDE XSJ_MAC_C;
       26     2878        %INCLUDE XSJ_SUBS_C;
       27     2905        %INCLUDE FOS_SUBS_C;
       28     2922        %INCLUDE FOO_MAC_C;
       29     3670        %INCLUDE JC_MACRO_C;
       30     3784        %INCLUDE JG_GHOSTS_C;
       31     3874
       32     3875
       33     3876
       34     3877        /**/
       35     3878        /* PARAMETERS */
       36     3879        /**/
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:2    
       37     3880    1   DCL STK$ PTR;
       38     3881    1   DCL CODE UBIN WORD;
       39     3882    1   DCL INFO UBIN WORD;
       40     3883        /**/
       41     3884
       42     3885
       43     3886
       44     3887        /**/
       45     3888        /* DCBS */
       46     3889        /**/
       47     3890    1   DCL M$MBSCOM DCB;
       48     3891    1   DCL M$STATUS   DCB;
       49     3892
       50     3893
       51     3894
       52     3895        /**/
       53     3896        /* BASED */
       54     3897        /**/
       55     3898        %B$TCB;
       56     3901        %B$ALT;
       57     3909        %B$NWIO;
       58     3994        %JM_CITE (FPTN=JM$CITE,STCLASS=BASED);
       59     4044        %JM_KEYIN (FPTN=JM$KEYIN,STCLASS=BASED);
       60     4100        %JM_EVENT (FPTN=JM$EVENT,STCLASS=BASED);
       61     4186    1   DCL  B$BIT BIT(1) ALIGNED BASED;
       62     4187
       63     4188
       64     4189        /**/
       65     4190        /* AUTO */
       66     4191        /**/
       67     4192    1   DCL EVCODE UBIN(36);
       68     4193        %JM_EVENT (FPTN=EVENT,STCLASS=AUTO);
       69     4279    1   DCL CITE$ PTR;
       70     4280    1   DCL KEYIN$ PTR;
       71     4281    1   DCL EVENT$ PTR;
       72     4282    1   DCL NXT_SYSID UBIN;
       73     4283    1   DCL RERUN BIT(36);
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:3    
       74     4284    1   DCL N SBIN;
       75     4285    1   DCL ENTFLG UBIN;
       76     4286
       77     4287
       78     4288
       79     4289        /**/
       80     4290        /* STATIC */
       81     4291        /**/
       82     4292        %JM_CITE (FPTN=CITE,COD=JMEV_NEWF#,STCLASS=STATIC);
       83     4342        %XSJ_PARAM(FPTN=CREATE_PARAM,
       84     4343                   DCB=M$STATUS);
       85     4360        %FPT_OPEN(FPTN=JMM_OPEN_CSCG,
       86     4361                  STCLASS="STATIC SYMDEF",
       87     4362                  NAME=T$CSCG,
       88     4363                  SETSTA=T$MBS,
       89     4364                  ORG=TERMINAL,
       90     4365                  ASN=COMGROUP,
       91     4366                  FUN=UPDATE,
       92     4367                  DCB=M$MBSCOM);
       93     4476        %FPT_SAD(USERSID=%SPCL1SID,
       94     4477                    MONSID=%ISSID);
       95     4492        %FPT_JOBSTATS(FPTN=MAP_HEADER,
       96     4493                      ORDER=REMAP,
       97     4494                      STATSEG=FOSS_MBSHDR#,
       98     4495                      BUF=JMC_CH);
       99     4515        %JM_KEYIN (FPTN=ZAPKEYIN,TYP=RERUN,KIN=KEY_XBAT#,STCLASS=STATIC);
      100     4571        %VLP_NAME(FPTN=T$CSCG,NAME='CSCG');
      101     4598        %FO_CITE (FPTN=FO_CITE,TYP=MBS,COD=FOEV_MBSI#,STCLASS=STATIC);
      102     4657        %JM_EVENT (FPTN=JM_EVQ,ARRAY="(0:JMMI_EVMX#)",STCLASS=STATIC);
      103     4743
      104     4744
      105     4745
      106     4746        /**/
      107     4747        /* CONSTANT */
      108     4748        /**/
      109     4749        %VLP_STATION (FPTN=MBSNAME,STATION='MBS',STCLASS=CONSTANT);
      110     4776        %VLP_STATION (FPTN=SLUGNAME,STATION='SLUG',STCLASS=CONSTANT);
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:4    
      111     4803        %VLP_STATION (FPTN=OUTSYMNAME,STATION='OUTSYM',STCLASS=CONSTANT);
      112     4830        %JC_CITE (FPTN=JC_PCMP,TYP=PCMP,COD=JCEV_PCMP#,USR=JG_MBS#,STCLASS=CONSTANT);
      113     4880        %JM_EVENT (FPTN=JM_EVENT,STCLASS=CONSTANT);
      114     4966        %VLP_SETSTA (FPTN=T$MBS,
      115     4967                     MYSTATION='MBS',
      116     4968                     OSTATION='KEYIN',
      117     4969                     WAS=YES,
      118     4970                     STCLASS=CONSTANT);
      119     4998        %FPT_READ(FPTN=JM_RDMBS,
      120     4999                  STCLASS="CONSTANT SYMDEF",
      121     5000                  EVENT=JM_CSRD#,
      122     5001                  BUF=JM_CSCGBUF,
      123     5002                  DCB=M$MBSCOM,
      124     5003                  WAIT=NO);
      125     5042        %FPT_READ                             (FPTN=READ_CSCGW,
      126     5043                 DCB       = M$MBSCOM,
      127     5044                 BUF       = JM_CSCGBUF,
      128     5045                 WAIT      = YES,
      129     5046                 STATION   = WAITSTA,
      130     5047                 STCLASS   = CONSTANT);
      131     5086        %VLP_STATION                          (FPTN=WAITSTA,
      132     5087                 EOFNONE   = YES,
      133     5088                 STCLASS   = CONSTANT);
      134     5115        %FPT_WRITE                            (FPTN=WRITE_RCVR,
      135     5116                 DCB       = M$MBSCOM,
      136     5117                 BUF       = CITE,
      137     5118                 STATION   = MBSNAME,
      138     5119                 STCLASS   = CONSTANT);
      139     5150        %FPT_WRITE                            (FPTN=WRITE_FOCITE,
      140     5151                 DCB       = M$MBSCOM,
      141     5152                 BUF       = FO_CITE,
      142     5153                 STATION   = OUTSYMNAME,
      143     5154                 STCLASS   = CONSTANT);
      144     5185        %FPT_WRITE                            (FPTN=WRITE_PCMP,
      145     5186                 DCB       = M$MBSCOM,
      146     5187                 BUF       = JC_PCMP,
      147     5188                 STATION   = SLUGNAME,
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:5    
      148     5189                 STCLASS   = CONSTANT);
      149     5220
      150     5221
      151     5222
      152     5223        /**/
      153     5224        /* SYMREFS */
      154     5225        /**/
      155     5226    1   DCL   B$IS$ PTR SYMREF;
      156     5227    1   DCL   B$SPCL1$ PTR SYMREF;
      157     5228    1   DCL H_RPM_FLG BIT(1) SYMREF;
      158     5229    1   DCL JC_8000_FLG BIT(1) SYMREF;
      159     5230    1   DCL JC_MBSRD UBIN WORD SYMREF;
      160     5231    1   DCL JC_MBSZAP UBIN WORD SYMREF;
      161     5232    1   DCL B$TCB$ PTR SYMREF;
      162     5233    1   DCL B$JIT$ PTR SYMREF;
      163     5234
      164     5235
      165     5236
      166     5237        /**/
      167     5238        /* ENTREFS */
      168     5239        /**/
      169     5240    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      170     5241    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      171     5242    1   DCL JMJ$ADD       ENTRY(1) ALTRET;
      172     5243    1   DCL JMJ$RECOVER   ENTRY(2) ALTRET;
      173     5244    1   DCL JMJ$TERM      ENTRY(1) ALTRET;
      174     5245    1   DCL JMR$CANCEL    ENTRY(1);
      175     5246    1   DCL JMR$DEL       ENTRY(1);
      176     5247    1   DCL JMR$DELALL    ENTRY(1);
      177     5248    1   DCL JMR$DEPEND    ENTRY(1);
      178     5249    1   DCL JMR$PRIO      ENTRY(1);
      179     5250    1   DCL JMR$PRIOALL   ENTRY(1);
      180     5251    1   DCL JMR$RERUN     ENTRY(1);
      181     5252    1   DCL JMS$SCHED     ENTRY;
      182     5253    1   DCL JMU$DQEV      ENTRY(1) ALTRET;
      183     5254    1   DCL JMU$QEV       ENTRY(1) ALTRET;
      184     5255    1   DCL JMU$REPART    ENTRY;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:6    
      185     5256    1   DCL JMU$SETSEG    ENTRY(2);
      186     5257    1   DCL XSJ$CREATE    ENTRY(1) ALTRET;
      187     5258
      188     5259
      189     5260
      190     5261        /**/
      191     5262        /* SUBS */
      192     5263        /**/
      193     5264        %SUB F_JM='1215'O;
      194     5265        %SUB M_M='15'O;
      195     5266        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      196     5267        %SUB FOREVER="WHILE ('1'B)";
      197     5268        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:7    
      198     5269        /**/
      199     5270        /*F* NAME:         JMM$ZAP
      200     5271             PURPOSE:      To do MBS ZAP processing
      201     5272             DESCRIPTION:  Called from JCE$ZIP when a ZAP keyin is received.
      202     5273                           Queues a RERUN ALL event to MBS's queue and
      203     5274                           returns.  When this event is processed, all
      204     5275                           running batch jobs will have a !RERUN keyin
      205     5276                           simulated for them, and MBS's CSCG dcb and
      206     5277                           :JOBSTATS DCBs will be closed (see JMR$RERUN).
      207     5278        */
      208     5279    1   JMM$ZAP: ENTRY;
      209     5280        /**/
      210     5281    1         EVENT=JM_EVENT;
      211     5282    1         EVENT.CITE$=ADDR(ZAPKEYIN);
      212     5283    1         EVENT.CODE=JMEV_KEYN#;
      213     5284    1         EVENT.ENDAC=0;
      214     5285    1         ZAPKEYIN.SELECTION=1;
      215     5286    1         CALL JMU$QEV (EVENT);
      216     5287    1         RETURN;
      217     5288        /**/
      218     5289        /**/
      219     5290        /*F* NAME:         JMM$EVENT
      220     5291             PURPOSE:      To report an event to MBS
      221     5292             DESCRIPTION:  Call here from JCE$EVNT when an external event
      222     5293                           arrives that is earmarked for MBS.
      223     5294
      224     5295                           An appropriate event is queued on the MBS event
      225     5296                           queue and we return.  When SLUG decides it's OK
      226     5297                           for MBS to process events, the presence of the
      227     5298                           event will be detected and JMM$PROCESS will
      228     5299                           be called.
      229     5300
      230     5301                           STK$ points to the TCB stack frame containing
      231     5302                           the external event, and CODE is the event ID. */
      232     5303    1   JMM$EVENT: ENTRY (STK$,CODE);
      233     5304        /**/
      234     5305    2           DO CASE (CODE);
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:8    
      235     5306
      236     5307        /**
      237     5308         **      CSCG READ COMPLETE
      238     5309         **/
      239     5310    2             CASE (JM_CSRD#);
      240     5311    2               IF STK$->B$NWIO.ERR THEN
      241     5312    3                 DO;
      242     5313                          /*    When we close our DCB during
      243     5314                           *    ZAP processing, this causes
      244     5315                           *    the outstanding read to
      245     5316                           *    be terminated.  Just
      246     5317                           *    ignore this error.
      247     5318                           */
      248     5319    3                 IF JC_MBSZAP = 0 THEN
      249     5320    4                   DO;
      250     5321    4                   CALL FOI$SNAP (%S$JM226,F_JM,M_M);
      251     5322        /*S* SCREECH_CODE: JMM-S$JM226
      252     5323             TYPE:         SNAP
      253     5324             MESSAGE:      MBS error reading CSCG
      254     5325             REMARKS:      When MBS gets an error on his no-wait read to
      255     5326                           the CSCG, this SNAP occurs and another read
      256     5327                           is issued. */
      257     5328    4                   JC_MBSRD=1;
      258     5329    4                   END;
      259     5330    3                 RETURN;
      260     5331    3                 END;
      261     5332    2               ENTFLG=0;
      262     5333    2   GOTCSCG:    ;
      263     5334    2               EVENT=JM_EVENT;
      264     5335    2               EVENT.ENDAC=JMEA_CSCG#;
      265     5336    2               EVENT.CITE$=ADDR(JM_CSCGBUF);
      266     5337    2               EVENT.CODE=EVENT.CITE$->JM$CITE.CODE;
      267     5338    2               IF ENTFLG = 0 THEN
      268     5339    2                IF STK$->B$NWIO.CGPARM.STATION# = 'KEYIN' THEN
      269     5340    2                 EVENT.CODE=JMEV_KEYN#;
      270     5341    2               CALL JMU$QEV (EVENT);
      271     5342    2               IF ENTFLG = 0 THEN
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:9    
      272     5343    2                RETURN;
      273     5344
      274     5345
      275     5346        /**
      276     5347         **      UNKNOWN EVENT
      277     5348         **/
      278     5349    2             CASE (ELSE);
      279     5350    2               CALL FOI$SNAP (%S$JM233,F_JM,M_M);
      280     5351        /*S* SCREECH_CODE: JMM-S$JM233
      281     5352             TYPE:         SNAP
      282     5353             MESSAGE:      Unknown event code passed to MBS
      283     5354             REMARKS:      This SNAP occurs when MBS is passed an unknown
      284     5355                           event code from JCE$EVNT.  */
      285     5356    2               RETURN;
      286     5357    2           END;
      287     5358        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:10   
      288     5359        /**/
      289     5360        /*F* NAME:         JMM$PROCESS
      290     5361             PURPOSE:      To process stuff on the MBS event queue
      291     5362             DESCRIPTION:  Called from JCS$SLUG when there is anything on
      292     5363                           the MBS event queue.  Returns inhibited if
      293     5364                           there is nothing to do;
      294     5365        */
      295     5366    1   JMM$PROCESS: ENTRY;
      296     5367        /**/
      297     5368    2           DO INHIBIT;
      298     5369    2           JMC_CH.LOCK=JMC_CH.LOCK+1; /* Lock out M$JOBSTATS */
      299     5370    2           END;
      300     5371    1         EVENT$=ADDR(EVENT);
      301     5372    2           DO FOREVER;
      302     5373    2           CALL JMU$DQEV(EVENT) ALTRET(EVDONE);
      303     5374    2           CITE$=EVENT.CITE$;
      304     5375    3             DO CASE (EVENT.CODE);
      305     5376
      306     5377
      307     5378
      308     5379    3               CASE (JMEV_KEYN#);
      309     5380    3                 KEYIN$=CITE$;
      310     5381    4                   DO CASE (KEYIN$->JM$KEYIN.KIN#);
      311     5382
      312     5383    4                     CASE(KEY_PRIOI#);       /* PRIO keyin                         */
      313     5384    4                       CALL JMR$PRIO(KEYIN$);
      314     5385
      315     5386    4                     CASE(KEY_DELETEI#);     /* DELETE keyin                       */
      316     5387    4                       CALL JMR$DEL(KEYIN$);
      317     5388
      318     5389    4                     CASE(KEY_S#);           /* S(chedule) keyin                   */
      319     5390    4                       IF JM_SCHEDOK THEN
      320     5391    4                        CALL JMS$SCHED;
      321     5392
      322     5393    4                     CASE(KEY_XBAT#);        /* RERUN or ZAP keyins                */
      323     5394    4                       CALL JMR$RERUN(KEYIN$);
      324     5395
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:11   
      325     5396    4                     CASE(KEY_PRIOIA#);      /* PRIO ALL keyin                     */
      326     5397    4                       CALL JMR$PRIOALL(KEYIN$);
      327     5398
      328     5399    4                     CASE(KEY_DELETEIA#);    /* DELETE ALL keyin                   */
      329     5400    4                       CALL JMR$DELALL(KEYIN$);
      330     5401
      331     5402    4                   END;
      332     5403
      333     5404
      334     5405
      335     5406    3               CASE(JMEV_NEWF#);             /* ADD JOB                            */
      336     5407    3                 CALL JMJ$ADD (CITE$);
      337     5408
      338     5409
      339     5410
      340     5411    3               CASE(JMEV_JOFF#);             /* TERMINATE JOB                      */
      341     5412    3                 CALL JMJ$TERM (CITE$);
      342     5413
      343     5414
      344     5415
      345     5416    3               CASE(JMEV_CHPT#);             /* CHANGE PARTITION DEFINITIONS       */
      346     5417    3                 CALL JMU$REPART;
      347     5418
      348     5419
      349     5420
      350     5421    3               CASE(JMEV_SUSR#);             /* SLUG   says its ok to run jobs     */
      351     5422    3                 JM_SCHEDOK = '1'B;
      352     5423    3                 CALL JMS$SCHED;
      353     5424
      354     5425
      355     5426
      356     5427    3               CASE(JMEV_CNCL#);             /* CANCEL JOB(S)                      */
      357     5428    3                 CALL JMR$CANCEL (CITE$);
      358     5429
      359     5430
      360     5431
      361     5432    3               CASE(JMEV_STRT#);             /* ATTEMPT TO SCHEDULE A JOB          */
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:12   
      362     5433    3                 IF JM_SCHEDOK THEN
      363     5434    3                  CALL JMS$SCHED;
      364     5435
      365     5436
      366     5437
      367     5438    3               CASE (JMEV_RDUN#);            /* Batch q recovery done              */
      368     5439    3                 JMC_CH.RCVR=0; /* Tell M$JOBSTATS */
      369     5440    3                 CALL M$WRITE (WRITE_PCMP);
      370     5441
      371     5442
      372     5443
      373     5444    3               CASE (JMEV_OPFB#);            /* System open for business           */
      374     5445
      375     5446
      376     5447
      377     5448    3               CASE(ELSE);
      378     5449        /*S*    SCREECH_CODE:   JMM-S$JM234                                */
      379     5450        /*S*    TYPE:   SNAP                                               */
      380     5451        /*S*   MESSAGE: Illegal event code passed in MBS citation.         */
      381     5452    3                 CALL FOI$SNAP (%S$JM234,F_JM,M_M);
      382     5453
      383     5454
      384     5455
      385     5456    3             END; /* Case EVCODE */
      386     5457
      387     5458    3             DO CASE (EVENT.ENDAC);
      388     5459    3               CASE (JMEA_CSCG#);
      389     5460    3                 IF JMC_CH.RCVR=1 THEN
      390     5461    4                   DO;
      391     5462                     /*    Still recovering.
      392     5463                      *    Keep on reading CSCG
      393     5464                      *    to get the batch queue
      394     5465                      *    recovery messages we
      395     5466                      *    wrote into the CSCG.
      396     5467                      *    Do this until they
      397     5468                      *    are exhausted.  This
      398     5469                      *    method is used to
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:13   
      399     5470                      *    avoid the enormous
      400     5471                      *    overhead of doing the
      401     5472                      *    read nowait.
      402     5473                      */
      403     5474    4                   CALL M$READ (READ_CSCGW) ALTRET(CSCGEOF);
      404     5475    5                     DO INHIBIT;
      405     5476    5                     JMC_CH.LOCK=JMC_CH.LOCK-1;
      406     5477    5                     END;
      407     5478    4                   ENTFLG=1;
      408     5479    4                   GOTO GOTCSCG;
      409     5480    4                   END;
      410     5481    3   CSCGEOF:      ;
      411     5482    3                 IF JC_MBSZAP = 0 THEN
      412     5483    3                  JC_MBSRD=1;
      413     5484    3             END;
      414     5485    2           END; /* DO FOREVER */
      415     5486        /**/
      416     5487    1   EVDONE: ;
      417     5488    2           DO INHIBIT;
      418     5489    2           JMC_CH.LOCK=JMC_CH.LOCK-1;
      419     5490    2           END;
      420     5491    1         RETURN;
      421     5492        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:14   
      422     5493        /*F*   NAME:   JMM$INIT                                            */
      423     5494        /*F*   PURPOSE: To initialize the batch scheduler.                 */
      424     5495        /*F*   DESCRIPTION: Performs those parts of MBS initialization     */
      425     5496        /*F*                which can be done after ghosts have started.   */
      426     5497    1   JMM$INIT: ENTRY;
      427     5498        /**/
      428     5499    2           DO N = 0 TO JMMI_EVMX#-1;
      429     5500    2           JM_EVQ.LNK$(N)=ADDR(JM_EVQ(N+1));
      430     5501    2           END;
      431     5502    1         JMC_FQHD$=ADDR(JM_EVQ(0));
      432     5503    1         JMC_FQTL$=ADDR(JM_EVQ(JMMI_EVMX#));
      433     5504        /**/
      434     5505    1         JC_8000_FLG = PINCRW(B$SPCL1$,POFFW(ADDR(H_RPM_FLG),B$IS$))->B$BIT;
      435     5506    1         CALL JMU$SETSEG(JMC_LOCK$,%SPCL1SID);
      436     5507    1         CALL JMU$SETSEG(JMC_CHNG$,%SPCL1SID);
      437     5508    1         CALL JMU$SETSEG(JMC_BUAIS$,%SPCL1SID);
      438     5509    1         CALL JMU$SETSEG(JMC_BUIS$,%SPCL1SID);
      439     5510    1         CALL JMU$SETSEG(JMC_BFIS$,%SPCL1SID);
      440     5511    1         CALL JMU$SETSEG(JMC_NPART$,%SPCL1SID);
      441     5512    1         CALL JMU$SETSEG(JMC_NRES$,%SPCL1SID);
      442     5513    1         CALL JMU$SETSEG(JMC_PPTR$,%SPCL1SID);
      443     5514    1         CALL JMU$SETSEG(JMC_PI$,%SPCL1SID);
      444     5515    1         CALL JMU$SETSEG(JMC_RVSYSID$,%SPCL1SID);
      445     5516    1         CALL JMU$SETSEG(JMC_MAX1ACCT$,%SPCL1SID);
      446     5517        /* Map the MBS queue headers where M$JOBSTATS can use them */
      447     5518    1         CALL M$JOBSTATS(MAP_HEADER) ALTRET(MAP_ERR);
      448     5519        /* Recover the batch queue */
      449     5520    1         CITE.RECOVERED='1'B;
      450     5521    1         FO_CITE.NJOBS=0;
      451     5522    2           DO FOREVER;
      452     5523    2           CALL JMJ$RECOVER(NXT_SYSID,RERUN);
      453     5524    2           IF NXT_SYSID = 0 THEN GOTO RECOVERED;
      454     5525    2           CITE.SYSID=NXT_SYSID;
      455     5526    2           CALL M$WRITE (WRITE_RCVR);
      456     5527    2           IF RERUN THEN
      457     5528    3             DO;
      458     5529    3             FO_CITE.JOBS(FO_CITE.NJOBS)=NXT_SYSID;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:15   
      459     5530    3             FO_CITE.NJOBS=FO_CITE.NJOBS+1;
      460     5531    3             IF FO_CITE.NJOBS = 50 THEN
      461     5532    4               DO;
      462     5533    4               CALL M$WRITE (WRITE_FOCITE);
      463     5534    4               FO_CITE.NJOBS=0;
      464     5535    4               END;
      465     5536    3             END;
      466     5537    2           END;
      467     5538    1   RECOVERED:;
      468     5539        /* Q a 'done' event after the recovery 'add' events */
      469     5540    1         CITE.CODE=JMEV_RDUN#;
      470     5541    1         CALL M$WRITE (WRITE_RCVR);
      471     5542    1         IF FO_CITE.NJOBS ~= 0 THEN
      472     5543    1          CALL M$WRITE (WRITE_FOCITE);
      473     5544    1         CALL M$READ (READ_CSCGW);
      474     5545    1         ENTFLG=1;
      475     5546    1         GOTO GOTCSCG;
      476     5547        /**/
      477     5548        /*F* NAME:         JMM$INIT0
      478     5549             PURPOSE:      To initialize MBS
      479     5550             DESCRIPTION:  Performs those parts of MBS initialization
      480     5551                           which must be done before any ghosts start.
      481     5552        */
      482     5553    1   JMM$INIT0: ENTRY;
      483     5554        /**/
      484     5555        /* Create the :JOBSTATS file, if it doesn't already exist. */
      485     5556    1         CALL XSJ$CREATE(CREATE_PARAM) ALTRET(STATIO_ERR);
      486     5557        /* Set up descriptor for %SPCL1SID early on */
      487     5558    1         CALL M$SAD(FPT_SAD);
      488     5559    1         RETURN;
      489     5560        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:16   
      490     5561        /**/
      491     5562    1   STATIO_ERR:
      492     5563        /*S*    SCREECH_CODE:   JMM-S$JM236                                */
      493     5564        /*S*   TYPE:   SCREECH                                             */
      494     5565        /*S*   MESSAGE: I/O error creating Job Status File.                */
      495     5566    1         CALL FOI$CRASH (%S$JM236,F_JM,M_M);
      496     5567        /**/
      497     5568    1   MAP_ERR:
      498     5569        /*S*    SCREECH_CODE:   JMM-S$JM239                                */
      499     5570        /*S*   TYPE:   SCREECH                                             */
      500     5571        /*S*   MESSAGE: Error mapping MBS queue headers on M$JOBSTATS      */
      501     5572    1         CALL FOI$CRASH (%S$JM239,F_JM,M_M);
      502     5573        /**/
      503     5574    1   END JMM$MAIN;

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:17   
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FOS_SUBS_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMM$MAIN.

   Procedure JMM$MAIN requires 392 words for executable code.
   Procedure JMM$MAIN requires 24 words of local(AUTO) storage.

    No errors detected in file JMM$MAIN.:E05TSI    .

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:18   

 Object Unit name= JMM$MAIN                                   File name= JMM$MAIN.:E05TOU
 UTS= JUL 29 '97 23:28:17.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$MBSCOM
    2   DCB   even  none     0      0  M$STATUS
    3   Data  even  none   226    342  JMM$MAIN
    4  RoData even  UTS    120    170  JMM$MAIN
    5   Proc  even  none   392    610  JMM$MAIN
    6  RoData even  none    52     64  JMM$MAIN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        3  JMM$MAIN
     5      3                  yes      Std        0  JMM$ZAP
     5     26                  yes      Std        2  JMM$EVENT
     5    120                  yes      Std        0  JMM$PROCESS
     5    366                  yes      Std        0  JMM$INIT
     5    565                  yes      Std        0  JMM$INIT0

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    3     16  JMM_OPEN_CSCG                      4     56  JM_RDMBS
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:19   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 JMU$QEV
 yes     yes           Std       4 FOI$SNAP
 yes     yes           Std       1 JMU$DQEV
         yes           Std       0 JMS$SCHED
         yes           Std       1 JMR$PRIOALL
 yes     yes           Std       1 JMJ$TERM
         yes           Std       2 JMU$SETSEG
         yes           Std       1 JMR$RERUN
 yes     yes           Std       1 JMJ$ADD
         yes           Std       1 JMR$CANCEL
 yes     yes           Std       1 XSJ$CREATE
 yes     yes           Std       3 FOI$CRASH
         yes           Std       1 JMR$PRIO
         yes           Std       1 JMR$DEL
         yes           Std       0 JMU$REPART
 yes     yes           Std       2 JMJ$RECOVER
         yes           Std       1 JMR$DELALL
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:20   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  JMC_CH                                JMC_FQHD$
     JMC_FQTL$                             JMC_LOCK$                             JMC_CHNG$
     JMC_BUAIS$                            JMC_BUIS$                             JMC_BFIS$
     JMC_NPART$                            JMC_NRES$                             JMC_PPTR$
     JMC_PI$                               JMC_RVSYSID$                          JMC_MAX1ACCT$
     JM_SCHEDOK                            JM_CSCGBUF                            M$MBSCOM
     M$STATUS                              B$IS$                                 B$SPCL1$
     H_RPM_FLG                             JC_8000_FLG                           JC_MBSRD
     JC_MBSZAP                             B$JIT$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:21   


        1        1        /*M* JMM$MAIN THE INITIALIZATION AND MAIN EVENT HANDLING ROUTINES OF MBS.   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMM$MAIN: PROC(STK$,CODE,INFO);

      8  5 000000   000000 700200 xent  JMM$MAIN     TSX0  ! X66_AUTO_3
         5 000001   000030 000003                    ZERO    24,3
         5 000002   000005 710000 5                  TRA     s:5281

        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE CP_6;                          /* FPT DEFINITIONS                    */
       16       96        %INCLUDE U$JIT_C;
       17      282        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
       18      821        %INCLUDE B_STRINGS_C;                   /* SYSTEM STRING SUBSTITUTIONS        */
       19      950        %INCLUDE JG_EVID_C;                     /* SLUG/MBS EVENT ID DEFINITIONS      */
       20     1175        %INCLUDE JM_SUBS_C;                     /* EVENT CODE DEFINITIONS             */
       21     1281        %INCLUDE OC_SUBS_C;
       22     2012        %INCLUDE JM_SCODE_C;
       23     2039        %INCLUDE JM$STRUCT;                     /* MBS TABLE DEFINITIONS              */
       24     2784        %INCLUDE JMC_DATA_R;                    /* MBS-RESIDENT STATIC GLOBAL DATA    */
       25     2799        %INCLUDE XSJ_MAC_C;
       26     2878        %INCLUDE XSJ_SUBS_C;
       27     2905        %INCLUDE FOS_SUBS_C;
       28     2922        %INCLUDE FOO_MAC_C;
       29     3670        %INCLUDE JC_MACRO_C;
       30     3784        %INCLUDE JG_GHOSTS_C;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:22   
       31     3874
       32     3875
       33     3876
       34     3877        /**/
       35     3878        /* PARAMETERS */
       36     3879        /**/
       37     3880    1   DCL STK$ PTR;
       38     3881    1   DCL CODE UBIN WORD;
       39     3882    1   DCL INFO UBIN WORD;
       40     3883        /**/
       41     3884
       42     3885
       43     3886
       44     3887        /**/
       45     3888        /* DCBS */
       46     3889        /**/
       47     3890    1   DCL M$MBSCOM DCB;
       48     3891    1   DCL M$STATUS   DCB;
       49     3892
       50     3893
       51     3894
       52     3895        /**/
       53     3896        /* BASED */
       54     3897        /**/
       55     3898        %B$TCB;
       56     3901        %B$ALT;
       57     3909        %B$NWIO;
       58     3994        %JM_CITE (FPTN=JM$CITE,STCLASS=BASED);
       59     4044        %JM_KEYIN (FPTN=JM$KEYIN,STCLASS=BASED);
       60     4100        %JM_EVENT (FPTN=JM$EVENT,STCLASS=BASED);
       61     4186    1   DCL  B$BIT BIT(1) ALIGNED BASED;
       62     4187
       63     4188
       64     4189        /**/
       65     4190        /* AUTO */
       66     4191        /**/
       67     4192    1   DCL EVCODE UBIN(36);
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:23   
       68     4193        %JM_EVENT (FPTN=EVENT,STCLASS=AUTO);
       69     4279    1   DCL CITE$ PTR;
       70     4280    1   DCL KEYIN$ PTR;
       71     4281    1   DCL EVENT$ PTR;
       72     4282    1   DCL NXT_SYSID UBIN;
       73     4283    1   DCL RERUN BIT(36);
       74     4284    1   DCL N SBIN;
       75     4285    1   DCL ENTFLG UBIN;
       76     4286
       77     4287
       78     4288
       79     4289        /**/
       80     4290        /* STATIC */
       81     4291        /**/
       82     4292        %JM_CITE (FPTN=CITE,COD=JMEV_NEWF#,STCLASS=STATIC);
       83     4342        %XSJ_PARAM(FPTN=CREATE_PARAM,
       84     4343                   DCB=M$STATUS);
       85     4360        %FPT_OPEN(FPTN=JMM_OPEN_CSCG,
       86     4361                  STCLASS="STATIC SYMDEF",
       87     4362                  NAME=T$CSCG,
       88     4363                  SETSTA=T$MBS,
       89     4364                  ORG=TERMINAL,
       90     4365                  ASN=COMGROUP,
       91     4366                  FUN=UPDATE,
       92     4367                  DCB=M$MBSCOM);
       93     4476        %FPT_SAD(USERSID=%SPCL1SID,
       94     4477                    MONSID=%ISSID);
       95     4492        %FPT_JOBSTATS(FPTN=MAP_HEADER,
       96     4493                      ORDER=REMAP,
       97     4494                      STATSEG=FOSS_MBSHDR#,
       98     4495                      BUF=JMC_CH);
       99     4515        %JM_KEYIN (FPTN=ZAPKEYIN,TYP=RERUN,KIN=KEY_XBAT#,STCLASS=STATIC);
      100     4571        %VLP_NAME(FPTN=T$CSCG,NAME='CSCG');
      101     4598        %FO_CITE (FPTN=FO_CITE,TYP=MBS,COD=FOEV_MBSI#,STCLASS=STATIC);
      102     4657        %JM_EVENT (FPTN=JM_EVQ,ARRAY="(0:JMMI_EVMX#)",STCLASS=STATIC);
      103     4743
      104     4744
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:24   
      105     4745
      106     4746        /**/
      107     4747        /* CONSTANT */
      108     4748        /**/
      109     4749        %VLP_STATION (FPTN=MBSNAME,STATION='MBS',STCLASS=CONSTANT);
      110     4776        %VLP_STATION (FPTN=SLUGNAME,STATION='SLUG',STCLASS=CONSTANT);
      111     4803        %VLP_STATION (FPTN=OUTSYMNAME,STATION='OUTSYM',STCLASS=CONSTANT);
      112     4830        %JC_CITE (FPTN=JC_PCMP,TYP=PCMP,COD=JCEV_PCMP#,USR=JG_MBS#,STCLASS=CONSTANT);
      113     4880        %JM_EVENT (FPTN=JM_EVENT,STCLASS=CONSTANT);
      114     4966        %VLP_SETSTA (FPTN=T$MBS,
      115     4967                     MYSTATION='MBS',
      116     4968                     OSTATION='KEYIN',
      117     4969                     WAS=YES,
      118     4970                     STCLASS=CONSTANT);
      119     4998        %FPT_READ(FPTN=JM_RDMBS,
      120     4999                  STCLASS="CONSTANT SYMDEF",
      121     5000                  EVENT=JM_CSRD#,
      122     5001                  BUF=JM_CSCGBUF,
      123     5002                  DCB=M$MBSCOM,
      124     5003                  WAIT=NO);
      125     5042        %FPT_READ                             (FPTN=READ_CSCGW,
      126     5043                 DCB       = M$MBSCOM,
      127     5044                 BUF       = JM_CSCGBUF,
      128     5045                 WAIT      = YES,
      129     5046                 STATION   = WAITSTA,
      130     5047                 STCLASS   = CONSTANT);
      131     5086        %VLP_STATION                          (FPTN=WAITSTA,
      132     5087                 EOFNONE   = YES,
      133     5088                 STCLASS   = CONSTANT);
      134     5115        %FPT_WRITE                            (FPTN=WRITE_RCVR,
      135     5116                 DCB       = M$MBSCOM,
      136     5117                 BUF       = CITE,
      137     5118                 STATION   = MBSNAME,
      138     5119                 STCLASS   = CONSTANT);
      139     5150        %FPT_WRITE                            (FPTN=WRITE_FOCITE,
      140     5151                 DCB       = M$MBSCOM,
      141     5152                 BUF       = FO_CITE,
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:25   
      142     5153                 STATION   = OUTSYMNAME,
      143     5154                 STCLASS   = CONSTANT);
      144     5185        %FPT_WRITE                            (FPTN=WRITE_PCMP,
      145     5186                 DCB       = M$MBSCOM,
      146     5187                 BUF       = JC_PCMP,
      147     5188                 STATION   = SLUGNAME,
      148     5189                 STCLASS   = CONSTANT);
      149     5220
      150     5221
      151     5222
      152     5223        /**/
      153     5224        /* SYMREFS */
      154     5225        /**/
      155     5226    1   DCL   B$IS$ PTR SYMREF;
      156     5227    1   DCL   B$SPCL1$ PTR SYMREF;
      157     5228    1   DCL H_RPM_FLG BIT(1) SYMREF;
      158     5229    1   DCL JC_8000_FLG BIT(1) SYMREF;
      159     5230    1   DCL JC_MBSRD UBIN WORD SYMREF;
      160     5231    1   DCL JC_MBSZAP UBIN WORD SYMREF;
      161     5232    1   DCL B$TCB$ PTR SYMREF;
      162     5233    1   DCL B$JIT$ PTR SYMREF;
      163     5234
      164     5235
      165     5236
      166     5237        /**/
      167     5238        /* ENTREFS */
      168     5239        /**/
      169     5240    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      170     5241    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      171     5242    1   DCL JMJ$ADD       ENTRY(1) ALTRET;
      172     5243    1   DCL JMJ$RECOVER   ENTRY(2) ALTRET;
      173     5244    1   DCL JMJ$TERM      ENTRY(1) ALTRET;
      174     5245    1   DCL JMR$CANCEL    ENTRY(1);
      175     5246    1   DCL JMR$DEL       ENTRY(1);
      176     5247    1   DCL JMR$DELALL    ENTRY(1);
      177     5248    1   DCL JMR$DEPEND    ENTRY(1);
      178     5249    1   DCL JMR$PRIO      ENTRY(1);
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:26   
      179     5250    1   DCL JMR$PRIOALL   ENTRY(1);
      180     5251    1   DCL JMR$RERUN     ENTRY(1);
      181     5252    1   DCL JMS$SCHED     ENTRY;
      182     5253    1   DCL JMU$DQEV      ENTRY(1) ALTRET;
      183     5254    1   DCL JMU$QEV       ENTRY(1) ALTRET;
      184     5255    1   DCL JMU$REPART    ENTRY;
      185     5256    1   DCL JMU$SETSEG    ENTRY(2);
      186     5257    1   DCL XSJ$CREATE    ENTRY(1) ALTRET;
      187     5258
      188     5259
      189     5260
      190     5261        /**/
      191     5262        /* SUBS */
      192     5263        /**/
      193     5264        %SUB F_JM='1215'O;
      194     5265        %SUB M_M='15'O;
      195     5266        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      196     5267        %SUB FOREVER="WHILE ('1'B)";
      197     5268        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:27   
      198     5269        /**/
      199     5270        /*F* NAME:         JMM$ZAP
      200     5271             PURPOSE:      To do MBS ZAP processing
      201     5272             DESCRIPTION:  Called from JCE$ZIP when a ZAP keyin is received.
      202     5273                           Queues a RERUN ALL event to MBS's queue and
      203     5274                           returns.  When this event is processed, all
      204     5275                           running batch jobs will have a !RERUN keyin
      205     5276                           simulated for them, and MBS's CSCG dcb and
      206     5277                           :JOBSTATS DCBs will be closed (see JMR$RERUN).
      207     5278        */
      208     5279    1   JMM$ZAP: ENTRY;

   5279  5 000003   000000 700200 xent  JMM$ZAP      TSX0  ! X66_AUTO_3
         5 000004   000030 000003                    ZERO    24,3

      209     5280        /**/
      210     5281    1         EVENT=JM_EVENT;

   5281  5 000005   000100 100400                    MLR     fill='000'O
         5 000006   000032 000040 4                  ADSC9   JM_EVENT                 cn=0,n=32
         5 000007   200007 000040                    ADSC9   EVENT,,AUTO              cn=0,n=32

      211     5282    1         EVENT.CITE$=ADDR(ZAPKEYIN);

   5282  5 000010   000000 236000 6                  LDQ     0
         5 000011   200011 756100                    STQ     EVENT+2,,AUTO

      212     5283    1         EVENT.CODE=JMEV_KEYN#;

   5283  5 000012   000000 220003                    LDX0    0,DU
         5 000013   200010 740100                    STX0    EVENT+1,,AUTO

      213     5284    1         EVENT.ENDAC=0;

   5284  5 000014   200010 440100                    SXL0    EVENT+1,,AUTO

      214     5285    1         ZAPKEYIN.SELECTION=1;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:28   

   5285  5 000015   000001 235007                    LDA     1,DL
         5 000016   000164 755000 3                  STA     ZAPKEYIN+4

      215     5286    1         CALL JMU$QEV (EVENT);

   5286  5 000017   200007 630500                    EPPR0   EVENT,,AUTO
         5 000020   200026 450500                    STP0    ENTFLG+1,,AUTO
         5 000021   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000023   000000 701000 xent               TSX1    JMU$QEV
         5 000024   000000 011000                    NOP     0

      216     5287    1         RETURN;

   5287  5 000025   000000 702200 xent               TSX2  ! X66_ARET

      217     5288        /**/
      218     5289        /**/
      219     5290        /*F* NAME:         JMM$EVENT
      220     5291             PURPOSE:      To report an event to MBS
      221     5292             DESCRIPTION:  Call here from JCE$EVNT when an external event
      222     5293                           arrives that is earmarked for MBS.
      223     5294
      224     5295                           An appropriate event is queued on the MBS event
      225     5296                           queue and we return.  When SLUG decides it's OK
      226     5297                           for MBS to process events, the presence of the
      227     5298                           event will be detected and JMM$PROCESS will
      228     5299                           be called.
      229     5300
      230     5301                           STK$ points to the TCB stack frame containing
      231     5302                           the external event, and CODE is the event ID. */
      232     5303    1   JMM$EVENT: ENTRY (STK$,CODE);

   5303  5 000026   000000 700200 xent  JMM$EVENT    TSX0  ! X66_AUTO_3
         5 000027   000030 000003                    ZERO    24,3

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:29   
      233     5304        /**/
      234     5305    2           DO CASE (CODE);

   5305  5 000030   200004 470500                    LDP0    @CODE,,AUTO
         5 000031   000000 235100                    LDA     0,,PR0
         5 000032   000004 135007                    SBLA    4,DL
         5 000033   000001 115007                    CMPA    1,DL
         5 000034   000036 602005 5                  TNC     s:5305+6,AL
         5 000035   000112 710000 5                  TRA     s:5350
         5 000036   000037 710000 5                  TRA     s:5311

      235     5306
      236     5307        /**
      237     5308         **      CSCG READ COMPLETE
      238     5309         **/
      239     5310    2             CASE (JM_CSRD#);

      240     5311    2               IF STK$->B$NWIO.ERR THEN

   5311  5 000037   200003 471500                    LDP1    @STK$,,AUTO
         5 000040   100000 473500                    LDP3    0,,PR1
         5 000041   300102 235100                    LDA     66,,PR3
         5 000042   000054 600000 5                  TZE     s:5332

      241     5312    3                 DO;

      242     5313                          /*    When we close our DCB during
      243     5314                           *    ZAP processing, this causes
      244     5315                           *    the outstanding read to
      245     5316                           *    be terminated.  Just
      246     5317                           *    ignore this error.
      247     5318                           */
      248     5319    3                 IF JC_MBSZAP = 0 THEN

   5319  5 000043   000000 236000 xsym               LDQ     JC_MBSZAP
         5 000044   000053 601000 5                  TNZ     s:5330

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:30   
      249     5320    4                   DO;

      250     5321    4                   CALL FOI$SNAP (%S$JM226,F_JM,M_M);

   5321  5 000045   000004 630400 6                  EPPR0   4
         5 000046   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000047   000000 701000 xent               TSX1    FOI$SNAP
         5 000050   000000 011000                    NOP     0

      251     5322        /*S* SCREECH_CODE: JMM-S$JM226
      252     5323             TYPE:         SNAP
      253     5324             MESSAGE:      MBS error reading CSCG
      254     5325             REMARKS:      When MBS gets an error on his no-wait read to
      255     5326                           the CSCG, this SNAP occurs and another read
      256     5327                           is issued. */
      257     5328    4                   JC_MBSRD=1;

   5328  5 000051   000001 235007                    LDA     1,DL
         5 000052   000000 755000 xsym               STA     JC_MBSRD

      258     5329    4                   END;

      259     5330    3                 RETURN;

   5330  5 000053   000000 702200 xent               TSX2  ! X66_ARET

      260     5331    3                 END;
      261     5332    2               ENTFLG=0;

   5332  5 000054   200025 450100                    STZ     ENTFLG,,AUTO

   5332  5 000055                       GOTCSCG      null
      262     5333    2   GOTCSCG:    ;
      263     5334    2               EVENT=JM_EVENT;

   5334  5 000055   000100 100400                    MLR     fill='000'O
         5 000056   000032 000040 4                  ADSC9   JM_EVENT                 cn=0,n=32
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:31   
         5 000057   200007 000040                    ADSC9   EVENT,,AUTO              cn=0,n=32

      264     5335    2               EVENT.ENDAC=JMEA_CSCG#;

   5335  5 000060   000001 220003                    LDX0    1,DU
         5 000061   200010 440100                    SXL0    EVENT+1,,AUTO

      265     5336    2               EVENT.CITE$=ADDR(JM_CSCGBUF);

   5336  5 000062   000007 236000 6                  LDQ     7
         5 000063   200011 756100                    STQ     EVENT+2,,AUTO

      266     5337    2               EVENT.CODE=EVENT.CITE$->JM$CITE.CODE;

   5337  5 000064   200011 470500                    LDP0    EVENT+2,,AUTO
         5 000065   000000 221100                    LDX1    0,,PR0
         5 000066   200010 741100                    STX1    EVENT+1,,AUTO

      267     5338    2               IF ENTFLG = 0 THEN

   5338  5 000067   200025 235100                    LDA     ENTFLG,,AUTO
         5 000070   000101 601000 5                  TNZ     s:5341

      268     5339    2                IF STK$->B$NWIO.CGPARM.STATION# = 'KEYIN' THEN

   5339  5 000071   200003 471500                    LDP1    @STK$,,AUTO
         5 000072   100000 473500                    LDP3    0,,PR1
         5 000073   040000 106500                    CMPC    fill='040'O
         5 000074   300107 000010                    ADSC9   71,,PR3                  cn=0,n=8
         5 000075   000166 000005 4                  ADSC9   WRITE_PCMP+12            cn=0,n=5
         5 000076   000101 601000 5                  TNZ     s:5341

      269     5340    2                 EVENT.CODE=JMEV_KEYN#;

   5340  5 000077   000000 222003                    LDX2    0,DU
         5 000100   200010 742100                    STX2    EVENT+1,,AUTO

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:32   
      270     5341    2               CALL JMU$QEV (EVENT);

   5341  5 000101   200007 631500                    EPPR1   EVENT,,AUTO
         5 000102   200026 451500                    STP1    ENTFLG+1,,AUTO
         5 000103   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000104   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000105   000000 701000 xent               TSX1    JMU$QEV
         5 000106   000000 011000                    NOP     0

      271     5342    2               IF ENTFLG = 0 THEN

   5342  5 000107   200025 235100                    LDA     ENTFLG,,AUTO
         5 000110   000117 601000 5                  TNZ     s:5357

      272     5343    2                RETURN;

   5343  5 000111   000000 702200 xent               TSX2  ! X66_ARET

      273     5344
      274     5345
      275     5346        /**
      276     5347         **      UNKNOWN EVENT
      277     5348         **/
      278     5349    2             CASE (ELSE);

      279     5350    2               CALL FOI$SNAP (%S$JM233,F_JM,M_M);

   5350  5 000112   000011 630400 6                  EPPR0   9
         5 000113   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000114   000000 701000 xent               TSX1    FOI$SNAP
         5 000115   000000 011000                    NOP     0

      280     5351        /*S* SCREECH_CODE: JMM-S$JM233
      281     5352             TYPE:         SNAP
      282     5353             MESSAGE:      Unknown event code passed to MBS
      283     5354             REMARKS:      This SNAP occurs when MBS is passed an unknown
      284     5355                           event code from JCE$EVNT.  */
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:33   
      285     5356    2               RETURN;

   5356  5 000116   000000 702200 xent               TSX2  ! X66_ARET

      286     5357    2           END;

   5357  5 000117   000122 710000 5                  TRA     s:5369

      287     5358        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:34   
      288     5359        /**/
      289     5360        /*F* NAME:         JMM$PROCESS
      290     5361             PURPOSE:      To process stuff on the MBS event queue
      291     5362             DESCRIPTION:  Called from JCS$SLUG when there is anything on
      292     5363                           the MBS event queue.  Returns inhibited if
      293     5364                           there is nothing to do;
      294     5365        */
      295     5366    1   JMM$PROCESS: ENTRY;

   5366  5 000120   000000 700200 xent  JMM$PROCESS  TSX0  ! X66_AUTO_3
         5 000121   000030 000003                    ZERO    24,3

      296     5367        /**/
      297     5368    2           DO INHIBIT;

      298     5369    2           JMC_CH.LOCK=JMC_CH.LOCK+1; /* Lock out M$JOBSTATS */

   5369  5 000122   000056 054200 xsym               AOS   ! JMC_CH+46

      299     5370    2           END;

      300     5371    1         EVENT$=ADDR(EVENT);

   5371  5 000123   200007 630500                    EPPR0   EVENT,,AUTO
         5 000124   200021 450500                    STP0    EVENT$,,AUTO

      301     5372    2           DO FOREVER;

      302     5373    2           CALL JMU$DQEV(EVENT) ALTRET(EVDONE);

   5373  5 000125   200007 630500                    EPPR0   EVENT,,AUTO
         5 000126   200026 450500                    STP0    ENTFLG+1,,AUTO
         5 000127   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000130   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000131   000000 701000 xent               TSX1    JMU$DQEV
         5 000132   000363 702000 5                  TSX2    EVDONE

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:35   
      303     5374    2           CITE$=EVENT.CITE$;

   5374  5 000133   200011 236100                    LDQ     EVENT+2,,AUTO
         5 000134   200017 756100                    STQ     CITE$,,AUTO

      304     5375    3             DO CASE (EVENT.CODE);

   5375  5 000135   200010 220100                    LDX0    EVENT+1,,AUTO
         5 000136   000015 100003                    CMPX0   13,DU
         5 000137   000141 602010 5                  TNC     s:5375+4,X0
         5 000140   000330 710000 5                  TRA     s:5452
         5 000141   000156 710000 5                  TRA     s:5380
         5 000142   000256 710000 5                  TRA     s:5407
         5 000143   000265 710000 5                  TRA     s:5412
         5 000144   000274 710000 5                  TRA     s:5417
         5 000145   000330 710000 5                  TRA     s:5452
         5 000146   000323 710000 5                  TRA     s:5439
         5 000147   000330 710000 5                  TRA     s:5452
         5 000150   000330 710000 5                  TRA     s:5452
         5 000151   000330 710000 5                  TRA     s:5452
         5 000152   000306 710000 5                  TRA     s:5428
         5 000153   000315 710000 5                  TRA     s:5433
         5 000154   000334 710000 5                  TRA     s:5458
         5 000155   000300 710000 5                  TRA     s:5422

      305     5376
      306     5377
      307     5378
      308     5379    3               CASE (JMEV_KEYN#);

      309     5380    3                 KEYIN$=CITE$;

   5380  5 000156   200020 756100                    STQ     KEYIN$,,AUTO

      310     5381    4                   DO CASE (KEYIN$->JM$KEYIN.KIN#);

   5381  5 000157   200020 470500                    LDP0    KEYIN$,,AUTO
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:36   
         5 000160   000000 236100                    LDQ     0,,PR0
         5 000161   000022 772000                    QRL     18
         5 000162   000004 136007                    SBLQ    4,DL
         5 000163   000017 116007                    CMPQ    15,DL
         5 000164   000166 602006 5                  TNC     s:5381+7,QL
         5 000165   000334 710000 5                  TRA     s:5458
         5 000166   000205 710000 5                  TRA     s:5384
         5 000167   000214 710000 5                  TRA     s:5387
         5 000170   000255 710000 5                  TRA     s:5402
         5 000171   000255 710000 5                  TRA     s:5402
         5 000172   000255 710000 5                  TRA     s:5402
         5 000173   000255 710000 5                  TRA     s:5402
         5 000174   000223 710000 5                  TRA     s:5390
         5 000175   000231 710000 5                  TRA     s:5394
         5 000176   000255 710000 5                  TRA     s:5402
         5 000177   000255 710000 5                  TRA     s:5402
         5 000200   000255 710000 5                  TRA     s:5402
         5 000201   000255 710000 5                  TRA     s:5402
         5 000202   000255 710000 5                  TRA     s:5402
         5 000203   000240 710000 5                  TRA     s:5397
         5 000204   000247 710000 5                  TRA     s:5400

      311     5382
      312     5383    4                     CASE(KEY_PRIOI#);       /* PRIO keyin                         */

      313     5384    4                       CALL JMR$PRIO(KEYIN$);

   5384  5 000205   200020 631500                    EPPR1   KEYIN$,,AUTO
         5 000206   200026 451500                    STP1    ENTFLG+1,,AUTO
         5 000207   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000210   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000211   000000 701000 xent               TSX1    JMR$PRIO
         5 000212   000000 011000                    NOP     0
         5 000213   000334 710000 5                  TRA     s:5458

      314     5385
      315     5386    4                     CASE(KEY_DELETEI#);     /* DELETE keyin                       */
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:37   

      316     5387    4                       CALL JMR$DEL(KEYIN$);

   5387  5 000214   200020 631500                    EPPR1   KEYIN$,,AUTO
         5 000215   200026 451500                    STP1    ENTFLG+1,,AUTO
         5 000216   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000217   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000220   000000 701000 xent               TSX1    JMR$DEL
         5 000221   000000 011000                    NOP     0
         5 000222   000334 710000 5                  TRA     s:5458

      317     5388
      318     5389    4                     CASE(KEY_S#);           /* S(chedule) keyin                   */

      319     5390    4                       IF JM_SCHEDOK THEN

   5390  5 000223   000000 234000 xsym               SZN     JM_SCHEDOK
         5 000224   000334 605000 5                  TPL     s:5458

      320     5391    4                        CALL JMS$SCHED;

   5391  5 000225   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000226   000000 701000 xent               TSX1    JMS$SCHED
         5 000227   000000 011000                    NOP     0
         5 000230   000334 710000 5                  TRA     s:5458

      321     5392
      322     5393    4                     CASE(KEY_XBAT#);        /* RERUN or ZAP keyins                */

      323     5394    4                       CALL JMR$RERUN(KEYIN$);

   5394  5 000231   200020 631500                    EPPR1   KEYIN$,,AUTO
         5 000232   200026 451500                    STP1    ENTFLG+1,,AUTO
         5 000233   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000235   000000 701000 xent               TSX1    JMR$RERUN
         5 000236   000000 011000                    NOP     0
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:38   
         5 000237   000334 710000 5                  TRA     s:5458

      324     5395
      325     5396    4                     CASE(KEY_PRIOIA#);      /* PRIO ALL keyin                     */

      326     5397    4                       CALL JMR$PRIOALL(KEYIN$);

   5397  5 000240   200020 631500                    EPPR1   KEYIN$,,AUTO
         5 000241   200026 451500                    STP1    ENTFLG+1,,AUTO
         5 000242   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000243   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000244   000000 701000 xent               TSX1    JMR$PRIOALL
         5 000245   000000 011000                    NOP     0
         5 000246   000334 710000 5                  TRA     s:5458

      327     5398
      328     5399    4                     CASE(KEY_DELETEIA#);    /* DELETE ALL keyin                   */

      329     5400    4                       CALL JMR$DELALL(KEYIN$);

   5400  5 000247   200020 631500                    EPPR1   KEYIN$,,AUTO
         5 000250   200026 451500                    STP1    ENTFLG+1,,AUTO
         5 000251   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000252   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000253   000000 701000 xent               TSX1    JMR$DELALL
         5 000254   000000 011000                    NOP     0

      330     5401
      331     5402    4                   END;

   5402  5 000255   000334 710000 5                  TRA     s:5458

      332     5403
      333     5404
      334     5405
      335     5406    3               CASE(JMEV_NEWF#);             /* ADD JOB                            */

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:39   
      336     5407    3                 CALL JMJ$ADD (CITE$);

   5407  5 000256   200017 630500                    EPPR0   CITE$,,AUTO
         5 000257   200026 450500                    STP0    ENTFLG+1,,AUTO
         5 000260   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000261   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000262   000000 701000 xent               TSX1    JMJ$ADD
         5 000263   000000 011000                    NOP     0
         5 000264   000334 710000 5                  TRA     s:5458

      337     5408
      338     5409
      339     5410
      340     5411    3               CASE(JMEV_JOFF#);             /* TERMINATE JOB                      */

      341     5412    3                 CALL JMJ$TERM (CITE$);

   5412  5 000265   200017 630500                    EPPR0   CITE$,,AUTO
         5 000266   200026 450500                    STP0    ENTFLG+1,,AUTO
         5 000267   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000270   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000271   000000 701000 xent               TSX1    JMJ$TERM
         5 000272   000000 011000                    NOP     0
         5 000273   000334 710000 5                  TRA     s:5458

      342     5413
      343     5414
      344     5415
      345     5416    3               CASE(JMEV_CHPT#);             /* CHANGE PARTITION DEFINITIONS       */

      346     5417    3                 CALL JMU$REPART;

   5417  5 000274   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000275   000000 701000 xent               TSX1    JMU$REPART
         5 000276   000000 011000                    NOP     0
         5 000277   000334 710000 5                  TRA     s:5458

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:40   
      347     5418
      348     5419
      349     5420
      350     5421    3               CASE(JMEV_SUSR#);             /* SLUG   says its ok to run jobs     */

      351     5422    3                 JM_SCHEDOK = '1'B;

   5422  5 000300   400000 236003                    LDQ     -131072,DU
         5 000301   000000 756000 xsym               STQ     JM_SCHEDOK

      352     5423    3                 CALL JMS$SCHED;

   5423  5 000302   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000303   000000 701000 xent               TSX1    JMS$SCHED
         5 000304   000000 011000                    NOP     0
         5 000305   000334 710000 5                  TRA     s:5458

      353     5424
      354     5425
      355     5426
      356     5427    3               CASE(JMEV_CNCL#);             /* CANCEL JOB(S)                      */

      357     5428    3                 CALL JMR$CANCEL (CITE$);

   5428  5 000306   200017 630500                    EPPR0   CITE$,,AUTO
         5 000307   200026 450500                    STP0    ENTFLG+1,,AUTO
         5 000310   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000312   000000 701000 xent               TSX1    JMR$CANCEL
         5 000313   000000 011000                    NOP     0
         5 000314   000334 710000 5                  TRA     s:5458

      358     5429
      359     5430
      360     5431
      361     5432    3               CASE(JMEV_STRT#);             /* ATTEMPT TO SCHEDULE A JOB          */

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:41   
      362     5433    3                 IF JM_SCHEDOK THEN

   5433  5 000315   000000 234000 xsym               SZN     JM_SCHEDOK
         5 000316   000334 605000 5                  TPL     s:5458

      363     5434    3                  CALL JMS$SCHED;

   5434  5 000317   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000320   000000 701000 xent               TSX1    JMS$SCHED
         5 000321   000000 011000                    NOP     0
         5 000322   000334 710000 5                  TRA     s:5458

      364     5435
      365     5436
      366     5437
      367     5438    3               CASE (JMEV_RDUN#);            /* Batch q recovery done              */

      368     5439    3                 JMC_CH.RCVR=0; /* Tell M$JOBSTATS */

   5439  5 000323   000057 450000 xsym               STZ     JMC_CH+47

      369     5440    3                 CALL M$WRITE (WRITE_PCMP);

   5440  5 000324   000152 630400 4                  EPPR0   WRITE_PCMP
         5 000325   040001 713400                    CLIMB   write
         5 000326   401400 401760                    pmme    nvectors=4
         5 000327   000334 710000 5                  TRA     s:5458

      370     5441
      371     5442
      372     5443
      373     5444    3               CASE (JMEV_OPFB#);            /* System open for business           */

      374     5445
      375     5446
      376     5447
      377     5448    3               CASE(ELSE);
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:42   

      378     5449        /*S*    SCREECH_CODE:   JMM-S$JM234                                */
      379     5450        /*S*    TYPE:   SNAP                                               */
      380     5451        /*S*   MESSAGE: Illegal event code passed in MBS citation.         */
      381     5452    3                 CALL FOI$SNAP (%S$JM234,F_JM,M_M);

   5452  5 000330   000015 630400 6                  EPPR0   13
         5 000331   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000332   000000 701000 xent               TSX1    FOI$SNAP
         5 000333   000000 011000                    NOP     0

      382     5453
      383     5454
      384     5455
      385     5456    3             END; /* Case EVCODE */

      386     5457
      387     5458    3             DO CASE (EVENT.ENDAC);

   5458  5 000334   200010 720100                    LXL0    EVENT+1,,AUTO
         5 000335   000002 100003                    CMPX0   2,DU
         5 000336   000340 602010 5                  TNC     s:5458+4,X0
         5 000337   000125 710000 5                  TRA     s:5373
         5 000340   000362 710000 5                  TRA     s:5485
         5 000341   000342 710000 5                  TRA     s:5460

      388     5459    3               CASE (JMEA_CSCG#);

      389     5460    3                 IF JMC_CH.RCVR=1 THEN

   5460  5 000342   000057 235000 xsym               LDA     JMC_CH+47
         5 000343   000001 115007                    CMPA    1,DL
         5 000344   000356 601000 5                  TNZ     CSCGEOF

      390     5461    4                   DO;

      391     5462                     /*    Still recovering.
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:43   
      392     5463                      *    Keep on reading CSCG
      393     5464                      *    to get the batch queue
      394     5465                      *    recovery messages we
      395     5466                      *    wrote into the CSCG.
      396     5467                      *    Do this until they
      397     5468                      *    are exhausted.  This
      398     5469                      *    method is used to
      399     5470                      *    avoid the enormous
      400     5471                      *    overhead of doing the
      401     5472                      *    read nowait.
      402     5473                      */
      403     5474    4                   CALL M$READ (READ_CSCGW) ALTRET(CSCGEOF);

   5474  5 000345   000074 630400 4                  EPPR0   READ_CSCGW
         5 000346   440000 713400                    CLIMB   alt,read
         5 000347   401400 401760                    pmme    nvectors=4
         5 000350   000356 702000 5                  TSX2    CSCGEOF

      404     5475    5                     DO INHIBIT;

      405     5476    5                     JMC_CH.LOCK=JMC_CH.LOCK-1;

   5476  5 000351   000001 336207                    LCQ   ! 1,DL
         5 000352   000056 056200 xsym               ASQ   ! JMC_CH+46

      406     5477    5                     END;

      407     5478    4                   ENTFLG=1;

   5478  5 000353   000001 235007                    LDA     1,DL
         5 000354   200025 755100                    STA     ENTFLG,,AUTO

      408     5479    4                   GOTO GOTCSCG;

   5479  5 000355   000055 710000 5                  TRA     GOTCSCG

   5460  5 000356                       CSCGEOF      null
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:44   
      409     5480    4                   END;
      410     5481    3   CSCGEOF:      ;
      411     5482    3                 IF JC_MBSZAP = 0 THEN

   5482  5 000356   000000 235000 xsym               LDA     JC_MBSZAP
         5 000357   000125 601000 5                  TNZ     s:5373

      412     5483    3                  JC_MBSRD=1;

   5483  5 000360   000001 236007                    LDQ     1,DL
         5 000361   000000 756000 xsym               STQ     JC_MBSRD

      413     5484    3             END;

      414     5485    2           END; /* DO FOREVER */

   5485  5 000362   000125 710000 5                  TRA     s:5373

   5476  5 000363                       EVDONE       null
      415     5486        /**/
      416     5487    1   EVDONE: ;
      417     5488    2           DO INHIBIT;

      418     5489    2           JMC_CH.LOCK=JMC_CH.LOCK-1;

   5489  5 000363   000001 336207                    LCQ   ! 1,DL
         5 000364   000056 056200 xsym               ASQ   ! JMC_CH+46

      419     5490    2           END;

      420     5491    1         RETURN;

   5491  5 000365   000000 702200 xent               TSX2  ! X66_ARET

      421     5492        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:45   
      422     5493        /*F*   NAME:   JMM$INIT                                            */
      423     5494        /*F*   PURPOSE: To initialize the batch scheduler.                 */
      424     5495        /*F*   DESCRIPTION: Performs those parts of MBS initialization     */
      425     5496        /*F*                which can be done after ghosts have started.   */
      426     5497    1   JMM$INIT: ENTRY;

   5497  5 000366   000000 700200 xent  JMM$INIT     TSX0  ! X66_AUTO_3
         5 000367   000030 000003                    ZERO    24,3

      427     5498        /**/
      428     5499    2           DO N = 0 TO JMMI_EVMX#-1;

   5499  5 000370   200024 450100                    STZ     N,,AUTO
         5 000371   000401 710000 5                  TRA     s:5501+1

      429     5500    2           JM_EVQ.LNK$(N)=ADDR(JM_EVQ(N+1));

   5500  5 000372   200024 235100                    LDA     N,,AUTO
         5 000373   000003 735000                    ALS     3
         5 000374   200024 236100                    LDQ     N,,AUTO
         5 000375   000025 736000                    QLS     21
         5 000376   000020 036000 6                  ADLQ    16
         5 000377   000222 756005 3                  STQ     JM_EVQ,AL

      430     5501    2           END;

   5501  5 000400   200024 054100                    AOS     N,,AUTO
         5 000401   200024 235100                    LDA     N,,AUTO
         5 000402   000010 115007                    CMPA    8,DL
         5 000403   000372 604400 5                  TMOZ    s:5500

      431     5502    1         JMC_FQHD$=ADDR(JM_EVQ(0));

   5502  5 000404   000021 236000 6                  LDQ     17
         5 000405   000000 756000 xsym               STQ     JMC_FQHD$

      432     5503    1         JMC_FQTL$=ADDR(JM_EVQ(JMMI_EVMX#));
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:46   

   5503  5 000406   000022 236000 6                  LDQ     18
         5 000407   000000 756000 xsym               STQ     JMC_FQTL$

      433     5504        /**/
      434     5505    1         JC_8000_FLG = PINCRW(B$SPCL1$,POFFW(ADDR(H_RPM_FLG),B$IS$))->B$BIT;

   5505  5 000410   000023 236000 6                  LDQ     19
         5 000411   000022 772000                    QRL     18
         5 000412   000000 235000 xsym               LDA     B$IS$
         5 000413   000022 771000                    ARL     18
         5 000414   200026 755100                    STA     ENTFLG+1,,AUTO
         5 000415   200026 136100                    SBLQ    ENTFLG+1,,AUTO
         5 000416   000000 470400 xsym               LDP0    B$SPCL1$
         5 000417   000000 236106                    LDQ     0,QL,PR0
         5 000420   400000 376003                    ANQ     -131072,DU
         5 000421   000000 756000 xsym               STQ     JC_8000_FLG

      435     5506    1         CALL JMU$SETSEG(JMC_LOCK$,%SPCL1SID);

   5506  5 000422   000025 630400 6                  EPPR0   21
         5 000423   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000424   000000 701000 xent               TSX1    JMU$SETSEG
         5 000425   000000 011000                    NOP     0

      436     5507    1         CALL JMU$SETSEG(JMC_CHNG$,%SPCL1SID);

   5507  5 000426   000027 630400 6                  EPPR0   23
         5 000427   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000430   000000 701000 xent               TSX1    JMU$SETSEG
         5 000431   000000 011000                    NOP     0

      437     5508    1         CALL JMU$SETSEG(JMC_BUAIS$,%SPCL1SID);

   5508  5 000432   000031 630400 6                  EPPR0   25
         5 000433   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000434   000000 701000 xent               TSX1    JMU$SETSEG
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:47   
         5 000435   000000 011000                    NOP     0

      438     5509    1         CALL JMU$SETSEG(JMC_BUIS$,%SPCL1SID);

   5509  5 000436   000033 630400 6                  EPPR0   27
         5 000437   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000440   000000 701000 xent               TSX1    JMU$SETSEG
         5 000441   000000 011000                    NOP     0

      439     5510    1         CALL JMU$SETSEG(JMC_BFIS$,%SPCL1SID);

   5510  5 000442   000035 630400 6                  EPPR0   29
         5 000443   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000444   000000 701000 xent               TSX1    JMU$SETSEG
         5 000445   000000 011000                    NOP     0

      440     5511    1         CALL JMU$SETSEG(JMC_NPART$,%SPCL1SID);

   5511  5 000446   000037 630400 6                  EPPR0   31
         5 000447   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000450   000000 701000 xent               TSX1    JMU$SETSEG
         5 000451   000000 011000                    NOP     0

      441     5512    1         CALL JMU$SETSEG(JMC_NRES$,%SPCL1SID);

   5512  5 000452   000041 630400 6                  EPPR0   33
         5 000453   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000454   000000 701000 xent               TSX1    JMU$SETSEG
         5 000455   000000 011000                    NOP     0

      442     5513    1         CALL JMU$SETSEG(JMC_PPTR$,%SPCL1SID);

   5513  5 000456   000043 630400 6                  EPPR0   35
         5 000457   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000460   000000 701000 xent               TSX1    JMU$SETSEG
         5 000461   000000 011000                    NOP     0

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:48   
      443     5514    1         CALL JMU$SETSEG(JMC_PI$,%SPCL1SID);

   5514  5 000462   000045 630400 6                  EPPR0   37
         5 000463   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000464   000000 701000 xent               TSX1    JMU$SETSEG
         5 000465   000000 011000                    NOP     0

      444     5515    1         CALL JMU$SETSEG(JMC_RVSYSID$,%SPCL1SID);

   5515  5 000466   000047 630400 6                  EPPR0   39
         5 000467   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000470   000000 701000 xent               TSX1    JMU$SETSEG
         5 000471   000000 011000                    NOP     0

      445     5516    1         CALL JMU$SETSEG(JMC_MAX1ACCT$,%SPCL1SID);

   5516  5 000472   000051 630400 6                  EPPR0   41
         5 000473   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000474   000000 701000 xent               TSX1    JMU$SETSEG
         5 000475   000000 011000                    NOP     0

      446     5517        /* Map the MBS queue headers where M$JOBSTATS can use them */
      447     5518    1         CALL M$JOBSTATS(MAP_HEADER) ALTRET(MAP_ERR);

   5518  5 000476   000114 630400 3                  EPPR0   MAP_HEADER
         5 000477   570001 713400                    CLIMB   alt,+61441
         5 000500   405400 401760                    pmme    nvectors=12
         5 000501   000603 702000 5                  TSX2    MAP_ERR

      448     5519        /* Recover the batch queue */
      449     5520    1         CITE.RECOVERED='1'B;

   5520  5 000502   400000 236003                    LDQ     -131072,DU
         5 000503   000002 256000 3                  ORSQ    CITE+2

      450     5521    1         FO_CITE.NJOBS=0;

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:49   
   5521  5 000504   000170 450000 3                  STZ     FO_CITE+1

      451     5522    2           DO FOREVER;

      452     5523    2           CALL JMJ$RECOVER(NXT_SYSID,RERUN);

   5523  5 000505   200023 630500                    EPPR0   RERUN,,AUTO
         5 000506   200027 450500                    STP0    ENTFLG+2,,AUTO
         5 000507   200022 631500                    EPPR1   NXT_SYSID,,AUTO
         5 000510   200026 451500                    STP1    ENTFLG+1,,AUTO
         5 000511   200026 630500                    EPPR0   ENTFLG+1,,AUTO
         5 000512   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000513   000000 701000 xent               TSX1    JMJ$RECOVER
         5 000514   000000 011000                    NOP     0

      453     5524    2           IF NXT_SYSID = 0 THEN GOTO RECOVERED;

   5524  5 000515   200022 235100                    LDA     NXT_SYSID,,AUTO
         5 000516   000545 600000 5                  TZE     RECOVERED

      454     5525    2           CITE.SYSID=NXT_SYSID;

   5525  5 000517   000000 620005                    EAX0    0,AL
         5 000520   000000 440000 3                  SXL0    CITE

      455     5526    2           CALL M$WRITE (WRITE_RCVR);

   5526  5 000521   000122 630400 4                  EPPR0   WRITE_RCVR
         5 000522   040001 713400                    CLIMB   write
         5 000523   401400 401760                    pmme    nvectors=4

      456     5527    2           IF RERUN THEN

   5527  5 000524   200023 235100                    LDA     RERUN,,AUTO
         5 000525   000505 600000 5                  TZE     s:5523

      457     5528    3             DO;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:50   

      458     5529    3             FO_CITE.JOBS(FO_CITE.NJOBS)=NXT_SYSID;

   5529  5 000526   000170 236000 3                  LDQ     FO_CITE+1
         5 000527   000001 736000                    QLS     1
         5 000530   000006 101500                    MRL     fill='000'O
         5 000531   200022 000004                    ADSC9   NXT_SYSID,,AUTO          cn=0,n=4
         5 000532   000171 000002 3                  ADSC9   FO_CITE+2,Q              cn=0,n=2

      459     5530    3             FO_CITE.NJOBS=FO_CITE.NJOBS+1;

   5530  5 000533   000170 236000 3                  LDQ     FO_CITE+1
         5 000534   000001 036007                    ADLQ    1,DL
         5 000535   000170 756000 3                  STQ     FO_CITE+1

      460     5531    3             IF FO_CITE.NJOBS = 50 THEN

   5531  5 000536   000062 116007                    CMPQ    50,DL
         5 000537   000505 601000 5                  TNZ     s:5523

      461     5532    4               DO;

      462     5533    4               CALL M$WRITE (WRITE_FOCITE);

   5533  5 000540   000136 630400 4                  EPPR0   WRITE_FOCITE
         5 000541   040001 713400                    CLIMB   write
         5 000542   401400 401760                    pmme    nvectors=4

      463     5534    4               FO_CITE.NJOBS=0;

   5534  5 000543   000170 450000 3                  STZ     FO_CITE+1

      464     5535    4               END;

      465     5536    3             END;

      466     5537    2           END;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:51   

   5537  5 000544   000505 710000 5                  TRA     s:5523

   5530  5 000545                       RECOVERED    null
      467     5538    1   RECOVERED:;
      468     5539        /* Q a 'done' event after the recovery 'add' events */
      469     5540    1         CITE.CODE=JMEV_RDUN#;

   5540  5 000545   000005 220003                    LDX0    5,DU
         5 000546   000000 740000 3                  STX0    CITE

      470     5541    1         CALL M$WRITE (WRITE_RCVR);

   5541  5 000547   000122 630400 4                  EPPR0   WRITE_RCVR
         5 000550   040001 713400                    CLIMB   write
         5 000551   401400 401760                    pmme    nvectors=4

      471     5542    1         IF FO_CITE.NJOBS ~= 0 THEN

   5542  5 000552   000170 235000 3                  LDA     FO_CITE+1
         5 000553   000557 600000 5                  TZE     s:5544

      472     5543    1          CALL M$WRITE (WRITE_FOCITE);

   5543  5 000554   000136 630400 4                  EPPR0   WRITE_FOCITE
         5 000555   040001 713400                    CLIMB   write
         5 000556   401400 401760                    pmme    nvectors=4

      473     5544    1         CALL M$READ (READ_CSCGW);

   5544  5 000557   000074 630400 4                  EPPR0   READ_CSCGW
         5 000560   040000 713400                    CLIMB   read
         5 000561   401400 401760                    pmme    nvectors=4

      474     5545    1         ENTFLG=1;

   5545  5 000562   000001 235007                    LDA     1,DL
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:52   
         5 000563   200025 755100                    STA     ENTFLG,,AUTO

      475     5546    1         GOTO GOTCSCG;

   5546  5 000564   000055 710000 5                  TRA     GOTCSCG

      476     5547        /**/
      477     5548        /*F* NAME:         JMM$INIT0
      478     5549             PURPOSE:      To initialize MBS
      479     5550             DESCRIPTION:  Performs those parts of MBS initialization
      480     5551                           which must be done before any ghosts start.
      481     5552        */
      482     5553    1   JMM$INIT0: ENTRY;

   5553  5 000565   000000 700200 xent  JMM$INIT0    TSX0  ! X66_AUTO_3
         5 000566   000030 000003                    ZERO    24,3

      483     5554        /**/
      484     5555        /* Create the :JOBSTATS file, if it doesn't already exist. */
      485     5556    1         CALL XSJ$CREATE(CREATE_PARAM) ALTRET(STATIO_ERR);

   5556  5 000567   000053 630400 6                  EPPR0   43
         5 000570   000017 631400 xsym               EPPR1   B_VECTNIL+15
         5 000571   000000 701000 xent               TSX1    XSJ$CREATE
         5 000572   000577 702000 5                  TSX2    STATIO_ERR

      486     5557        /* Set up descriptor for %SPCL1SID early on */
      487     5558    1         CALL M$SAD(FPT_SAD);

   5558  5 000573   000110 630400 3                  EPPR0   FPT_SAD
         5 000574   030015 713400                    CLIMB   12301
         5 000575   400000 401760                    pmme    nvectors=1

      488     5559    1         RETURN;

   5559  5 000576   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:53   
      489     5560        %EJECT;
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:54   
      490     5561        /**/
      491     5562    1   STATIO_ERR:
      492     5563        /*S*    SCREECH_CODE:   JMM-S$JM236                                */
      493     5564        /*S*   TYPE:   SCREECH                                             */
      494     5565        /*S*   MESSAGE: I/O error creating Job Status File.                */
      495     5566    1         CALL FOI$CRASH (%S$JM236,F_JM,M_M);

   5566  5 000577   000055 630400 6     STATIO_ERR   EPPR0   45
         5 000600   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000601   000000 701000 xent               TSX1    FOI$CRASH
         5 000602   000000 011000                    NOP     0

      496     5567        /**/
      497     5568    1   MAP_ERR:
      498     5569        /*S*    SCREECH_CODE:   JMM-S$JM239                                */
      499     5570        /*S*   TYPE:   SCREECH                                             */
      500     5571        /*S*   MESSAGE: Error mapping MBS queue headers on M$JOBSTATS      */
      501     5572    1         CALL FOI$CRASH (%S$JM239,F_JM,M_M);

   5572  5 000603   000061 630400 6     MAP_ERR      EPPR0   49
         5 000604   000021 631400 xsym               EPPR1   B_VECTNIL+17
         5 000605   000000 701000 xent               TSX1    FOI$CRASH
         5 000606   000000 011000                    NOP     0

      502     5573        /**/
      503     5574    1   END JMM$MAIN;

   5574  5 000607   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:55   
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   JC_MACRO_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   FOS_SUBS_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMM$MAIN.
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:56   

 **** Variables and constants ****

  ****  Section 003  Data  JMM$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(180)   r     1 CITE                       6-0-0/d STRC(288)   r     1 CREATE_PARAM
   167-0-0/w STRC(972)   r     1 FO_CITE                  110-0-0/d STRC(144)   r     1 FPT_SAD
    16-0-0/d STRC(2088)  r     1 JMM_OPEN_CSCG            222-0-0/w STRC(288)   r     1 JM_EVQ(0:9)
   114-0-0/d STRC(1296)  r     1 MAP_HEADER               165-0-0/c STRC(45)    r     1 T$CSCG
   160-0-0/w STRC(180)   r     1 ZAPKEYIN

  ****  Section 004 RoData JMM$MAIN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    30-0-0/w STRC(54)    r     1 JC_PCMP                   32-0-0/w STRC(288)   r     1 JM_EVENT
    56-0-0/d STRC(504)   r     1 JM_RDMBS                   0-0-0/w STRC(288)   r     1 MBSNAME
    20-0-0/w STRC(288)   r     1 OUTSYMNAME                74-0-0/d STRC(504)   r     1 READ_CSCGW
    10-0-0/w STRC(288)   r     1 SLUGNAME                  42-0-0/w STRC(432)   r     1 T$MBS
   112-0-0/w STRC(288)   r     1 WAITSTA                  136-0-0/d STRC(432)   r     1 WRITE_FOCITE
   152-0-0/d STRC(432)   r     1 WRITE_PCMP               122-0-0/d STRC(432)   r     1 WRITE_RCVR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CODE                      5-0-0/w PTR         r     1 @INFO
     3-0-0/w PTR         r     1 @STK$                     17-0-0/w PTR         r     1 CITE$
    *0-0-0/w UBIN        r     1 CODE                      25-0-0/w UBIN        r     1 ENTFLG
     7-0-0/w STRC(288)   r     1 EVENT                     21-0-0/w PTR         r     1 EVENT$
    *0-0-0/w UBIN        r     1 INFO                      20-0-0/w PTR         r     1 KEYIN$
    24-0-0/w SBIN        r     1 N                         22-0-0/w UBIN        r     1 NXT_SYSID
    23-0-0/b BIT         r     1 RERUN                     *0-0-0/w PTR         r     1 STK$
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:57   

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IS$                      0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$SPCL1$                   0-0-0/b BIT         r     1 H_RPM_FLG
     0-0-0/b BIT         r     1 JC_8000_FLG                0-0-0/w UBIN        r     1 JC_MBSRD
     0-0-0/w UBIN        r     1 JC_MBSZAP                  0-0-0/w PTR         r     1 JMC_BFIS$
     0-0-0/w PTR         r     1 JMC_BUAIS$                 0-0-0/w PTR         r     1 JMC_BUIS$
     0-0-0/w STRC(1728)  r     1 JMC_CH                     0-0-0/w PTR         r     1 JMC_CHNG$
     0-0-0/w PTR         r     1 JMC_FQHD$                  0-0-0/w PTR         r     1 JMC_FQTL$
     0-0-0/w PTR         r     1 JMC_LOCK$                  0-0-0/w PTR         r     1 JMC_MAX1ACCT$
     0-0-0/w PTR         r     1 JMC_NPART$                 0-0-0/w PTR         r     1 JMC_NRES$
     0-0-0/w PTR         r     1 JMC_PI$                    0-0-0/w PTR         r     1 JMC_PPTR$
     0-0-0/w PTR         r     1 JMC_RVSYSID$               0-0-0/d CHAR(140)   r     1 JM_CSCGBUF
     0-0-0/b BIT         r     1 JM_SCHEDOK

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w BIT         r     1 B$BIT                      0-0-0/w STRC(2880)  r     1 B$NWIO
     0-0-0/w STRC(180)   r     1 JM$CITE                    0-0-0/w STRC(180)   r     1 JM$KEYIN
     0-0-0N  NULL        r     1 M$MBSCOM                   0-0-0N  NULL        r     1 M$STATUS


   Procedure JMM$MAIN requires 392 words for executable code.
   Procedure JMM$MAIN requires 24 words of local(AUTO) storage.

    No errors detected in file JMM$MAIN.:E05TSI    .
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:58   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:59   
          MINI XREF LISTING

B$ALT.CODE
      3903**DCL      3903--REDEF    3904--REDEF    3904--REDEF
B$ALT.ERR.ERR#
      3905**DCL      3905--REDEF
B$ALT.EVID
      3904**DCL      3904--REDEF    3904--REDEF
B$BIT
      4186**DCL      5505>>ASSIGN
B$IS$
      5226**DCL      5505>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       204**DCL       204--REDEF
B$JIT.ERR.MID
       111**DCL       111--REDEF
B$JIT$
      5233**DCL       105--IMP-PTR
B$NWIO.CGPARM.MSGIDXT
      3943**DCL      3946--REDEF
B$NWIO.CGPARM.STATION#
      3937**DCL      5339>>IF
B$NWIO.CODE
      3912**DCL      3912--REDEF    3913--REDEF    3913--REDEF
B$NWIO.ERR
      3913**DCL      5311>>IF
B$NWIO.ERR.ERR#
      3914**DCL      3914--REDEF
B$NWIO.EVID
      3913**DCL      3913--REDEF    3913--REDEF
B$SPCL1$
      5227**DCL      5505>>ASSIGN
CITE
      4307**DCL      5137--DCLINIT  5138--DCLINIT
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:60   
CITE.ACCT
      4324**DCL      4327--REDEF
CITE.CODE
      4312**DCL      5540<<ASSIGN
CITE.RECOVERED
      4320**DCL      5520<<ASSIGN
CITE.SYSID
      4316**DCL      5525<<ASSIGN
CITE$
      4279**DCL      5374<<ASSIGN   5380>>ASSIGN   5407<>CALL     5412<>CALL     5428<>CALL
CODE
      3881**DCL         8--PROC     5303--ENTRY    5305>>DOCASE
CREATE_PARAM
      4354**DCL      5556<>CALL
CSCGEOF
      5460**LABEL    5474--CALLALT
ENTFLG
      4285**DCL      5332<<ASSIGN   5338>>IF       5342>>IF       5478<<ASSIGN   5545<<ASSIGN
EVDONE
      5476**LABEL    5373--CALLALT
EVENT
      4208**DCL      5281<<ASSIGN   5286<>CALL     5334<<ASSIGN   5341<>CALL     5371--ASSIGN   5373<>CALL
EVENT.CITE.ACCT
      4257**DCL      4260--REDEF
EVENT.CITE$
      4222**DCL      5282<<ASSIGN   5336<<ASSIGN   5337>>ASSIGN   5374>>ASSIGN
EVENT.CODE
      4216**DCL      5283<<ASSIGN   5337<<ASSIGN   5340<<ASSIGN   5375>>DOCASE
EVENT.ENDAC
      4218**DCL      5284<<ASSIGN   5335<<ASSIGN   5458>>DOCASE
EVENT$
      4281**DCL      5371<<ASSIGN
FOI$CRASH
      5240**DCL-ENT  5566--CALL     5572--CALL
FOI$SNAP
      5241**DCL-ENT  5321--CALL     5350--CALL     5452--CALL
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:61   
FO_CITE
      4612**DCL      5172--DCLINIT  5173--DCLINIT
FO_CITE.JOBS
      4641**DCL      5529<<ASSIGN
FO_CITE.NJOBS
      4639**DCL      5521<<ASSIGN   5529>>ASSIGN   5530<<ASSIGN   5530>>ASSIGN   5531>>IF       5534<<ASSIGN
      5542>>IF
FPT_SAD
      4488**DCL      5558<>CALL
FPT_SAD.V
      4488**DCL      4488--DCLINIT
GOTCSCG
      5332**LABEL    5479--GOTO     5546--GOTO
H_RPM_FLG
      5228**DCL      5505--ASSIGN
INFO
      3882**DCL         8--PROC
JC_8000_FLG
      5229**DCL      5505<<ASSIGN
JC_MBSRD
      5230**DCL      5328<<ASSIGN   5483<<ASSIGN
JC_MBSZAP
      5231**DCL      5319>>IF       5482>>IF
JC_PCMP
      4843**DCL      5207--DCLINIT  5208--DCLINIT
JM$CITE.ACCT
      4026**DCL      4029--REDEF
JM$CITE.CODE
      4014**DCL      5337>>ASSIGN
JM$EVENT.CITE.ACCT
      4164**DCL      4167--REDEF
JM$KEYIN.KIN#
      4064**DCL      5381>>DOCASE
JMC_BFIS$
      2796**DCL      5510<>CALL
JMC_BUAIS$
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:62   
      2796**DCL      5508<>CALL
JMC_BUIS$
      2796**DCL      5509<>CALL
JMC_CH
      2792**DCL      2793--REDEF    4506--DCLINIT
JMC_CH.LOCK
      2793**DCL      5369<<ASSIGN   5369>>ASSIGN   5476<<ASSIGN   5476>>ASSIGN   5489<<ASSIGN   5489>>ASSIGN
JMC_CH.RCVR
      2793**DCL      5439<<ASSIGN   5460>>IF
JMC_CHNG$
      2796**DCL      5507<>CALL
JMC_FQHD$
      2795**DCL      5502<<ASSIGN
JMC_FQTL$
      2795**DCL      5503<<ASSIGN
JMC_LOCK$
      2796**DCL      5506<>CALL
JMC_MAX1ACCT$
      2798**DCL      5516<>CALL
JMC_NPART$
      2797**DCL      5511<>CALL
JMC_NRES$
      2797**DCL      5512<>CALL
JMC_PI$
      2797**DCL      5514<>CALL
JMC_PPTR$
      2797**DCL      5513<>CALL
JMC_RVSYSID$
      2797**DCL      5515<>CALL
JMJ$ADD
      5242**DCL-ENT  5407--CALL
JMJ$RECOVER
      5243**DCL-ENT  5523--CALL
JMJ$TERM
      5244**DCL-ENT  5412--CALL
JMM_OPEN_CSCG.ACSVEH_
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:63   
      4434**DCL      4435--REDEF
JMM_OPEN_CSCG.ALTKEYS_
      4440**DCL      4441--REDEF    4441--REDEF
JMM_OPEN_CSCG.HDR_
      4439**DCL      4440--REDEF
JMM_OPEN_CSCG.TAB_
      4438**DCL      4439--REDEF
JMM_OPEN_CSCG.UHL_
      4432**DCL      4433--REDEF    4433--REDEF
JMM_OPEN_CSCG.V
      4441**DCL      4432--DCLINIT
JMM_OPEN_CSCG.V.FSN#
      4472**DCL      4472--REDEF    4472--REDEF
JMM_OPEN_CSCG.WSN_
      4438**DCL      4438--REDEF
JMR$CANCEL
      5245**DCL-ENT  5428--CALL
JMR$DEL
      5246**DCL-ENT  5387--CALL
JMR$DELALL
      5247**DCL-ENT  5400--CALL
JMR$PRIO
      5249**DCL-ENT  5384--CALL
JMR$PRIOALL
      5250**DCL-ENT  5397--CALL
JMR$RERUN
      5251**DCL-ENT  5394--CALL
JMS$SCHED
      5252**DCL-ENT  5391--CALL     5423--CALL     5434--CALL
JMU$DQEV
      5253**DCL-ENT  5373--CALL
JMU$QEV
      5254**DCL-ENT  5286--CALL     5341--CALL
JMU$REPART
      5255**DCL-ENT  5417--CALL
JMU$SETSEG
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:64   
      5256**DCL-ENT  5506--CALL     5507--CALL     5508--CALL     5509--CALL     5510--CALL     5511--CALL
      5512--CALL     5513--CALL     5514--CALL     5515--CALL     5516--CALL
JM_CSCGBUF
      2798**DCL      5022--DCLINIT  5023--DCLINIT  5066--DCLINIT  5067--DCLINIT  5336--ASSIGN
JM_EVENT
      4895**DCL      5281>>ASSIGN   5334>>ASSIGN
JM_EVENT.CITE.ACCT
      4944**DCL      4947--REDEF
JM_EVQ
      4672**DCL      5500--ASSIGN   5502--ASSIGN   5503--ASSIGN
JM_EVQ.CITE.ACCT
      4721**DCL      4724--REDEF
JM_EVQ.LNK$
      4678**DCL      5500<<ASSIGN
JM_RDMBS.STATION_
      5023**DCL      5024--REDEF
JM_RDMBS.V
      5024**DCL      5020--DCLINIT
JM_RDMBS.V.DVBYTE.REREAD#
      5035**DCL      5035--REDEF
JM_RDMBS.V.INDX#
      5033**DCL      5033--REDEF
JM_SCHEDOK
      2798**DCL      5390>>IF       5422<<ASSIGN   5433>>IF
KEYIN$
      4280**DCL      5380<<ASSIGN   5381>>DOCASE   5384<>CALL     5387<>CALL     5394<>CALL     5397<>CALL
      5400<>CALL
M$JOBSTATS
        89**DCL-ENT  5518--CALL
M$READ
        25**DCL-ENT  5474--CALL     5544--CALL
M$SAD
        63**DCL-ENT  5558--CALL
M$WRITE
        25**DCL-ENT  5440--CALL     5526--CALL     5533--CALL     5541--CALL     5543--CALL
MAP_ERR
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:65   
      5572**LABEL    5518--CALLALT
MAP_HEADER
      4506**DCL      5518<>CALL
MAP_HEADER.V
      4510**DCL      4506--DCLINIT
MBSNAME
      4761**DCL      5138--DCLINIT
MBSNAME.MSGIDXT
      4771**DCL      4774--REDEF
N
      4284**DCL      5499<<DOINDEX  5500>>ASSIGN   5500>>ASSIGN
NXT_SYSID
      4282**DCL      5523<>CALL     5524>>IF       5525>>ASSIGN   5529>>ASSIGN
OUTSYMNAME
      4815**DCL      5173--DCLINIT
OUTSYMNAME.MSGIDXT
      4825**DCL      4828--REDEF
READ_CSCGW
      5064**DCL      5474<>CALL     5544<>CALL
READ_CSCGW.STATION_
      5067**DCL      5068--REDEF
READ_CSCGW.V
      5068**DCL      5064--DCLINIT
READ_CSCGW.V.DVBYTE.REREAD#
      5079**DCL      5079--REDEF
READ_CSCGW.V.INDX#
      5077**DCL      5077--REDEF
RECOVERED
      5530**LABEL    5524--GOTO
RERUN
      4283**DCL      5523<>CALL     5527>>IF
SLUGNAME
      4788**DCL      5208--DCLINIT
SLUGNAME.MSGIDXT
      4798**DCL      4801--REDEF
STATIO_ERR
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:66   
      5566**LABEL    5556--CALLALT
STK$
      3880**DCL         8--PROC     5303--ENTRY    5311>>IF       5339>>IF
T$CSCG
      4596**DCL      4433--DCLINIT
T$MBS
      4982**DCL      4433--DCLINIT
WAITSTA
      5100**DCL      5067--DCLINIT
WAITSTA.MSGIDXT
      5110**DCL      5113--REDEF
WRITE_FOCITE
      5171**DCL      5533<>CALL     5543<>CALL
WRITE_FOCITE.STATION_
      5173**DCL      5173--REDEF
WRITE_FOCITE.V
      5174**DCL      5171--DCLINIT
WRITE_FOCITE.V.DVBYTE.VFC#
      5180**DCL      5180--REDEF
WRITE_PCMP
      5206**DCL      5440<>CALL
WRITE_PCMP.STATION_
      5208**DCL      5208--REDEF
WRITE_PCMP.V
      5209**DCL      5206--DCLINIT
WRITE_PCMP.V.DVBYTE.VFC#
      5215**DCL      5215--REDEF
WRITE_RCVR
      5136**DCL      5526<>CALL     5541<>CALL
WRITE_RCVR.STATION_
      5138**DCL      5138--REDEF
WRITE_RCVR.V
      5139**DCL      5136--DCLINIT
WRITE_RCVR.V.DVBYTE.VFC#
      5145**DCL      5145--REDEF
XSJ$CREATE
PL6.E3A0      #001=JMM$MAIN File=JMM$MAIN.:E05TSI                                TUE 07/29/97 23:28 Page:67   
      5257**DCL-ENT  5556--CALL
ZAPKEYIN
      4530**DCL      5282--ASSIGN
ZAPKEYIN.SELECTION
      4555**DCL      5285<<ASSIGN
