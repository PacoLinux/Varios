VERSION E05

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:1    
        1        1        /*M* THE CREATOR OF NEW USERS                                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND,CCC,MCL=20,CRT=5,CRM=80,CLM
                 7        =40 */
        8        8        MMK$MAKUSER: PROC(JITPP,HJITPP,ROPP) ALTRET;
        9        9
       10       10        /* Includes */
       11       11        %INCLUDE B$MAP;
       12      110        %INCLUDE B$JIT_C;
       13      424        %INCLUDE B$USER;
       14      640        %INCLUDE HF_DATA_R;
       15      683        %INCLUDE JG_GHOSTS_C;
       16      773        %INCLUDE MM_DATA_R;                     /* Mm data references                 */
       17     1293        %INCLUDE MM_CNTRL_R;
       18     1303        %INCLUDE M_ERRORS_C;
       19     1367        %INCLUDE M_ERRSET_C;
       20     1391        %INCLUDE OC_SUBS_C;
       21     2122        %INCLUDE S_WSPTD_R;
       22     2138        %INCLUDE SS_SCHED_C;                    /* Scheduler event definitions        */
       23     2371        %INCLUDE B_LSDATA_C;                    /* Hjit descriptor bases & bounds     */
       24     5577        %INCLUDE B_SEGIDS_C;                    /* Linkage segment segid definitions  */
       25     6116        %INCLUDE HF_LOCK_C;
       26     6130    1   DCL JITPP UBIN;                         /* Physical page # of new user's jit  */
       27     6131    1   DCL HJITPP UBIN;                        /* Physical page # of new user's hjit */
       28     6132    1   DCL ROPP UBIN;                /* Physical page # of new user's initial roseg  */
       29     6133    1   DCL HJITPP1 UBIN;                  /* Physical page # of new user's HJIT+1*/
       30     6134                                                /**/
       31     6135    1   DCL I SBIN;
       32     6136    1   DCL PPNO SBIN;
       33     6137    1   DCL ERR SBIN;
       34     6138    1   DCL NEWJIT$ PTR;
       35     6139    1   DCL B$JIT$ PTR SYMREF READONLY;
       36     6140    1   DCL B$MONJIT$ PTR SYMREF READONLY;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:2    
       37     6141    1   DCL B$PPUT$ PTR SYMREF READONLY;
       38     6142    1   DCL B$WINDOW$ PTR SYMREF READONLY;
       39     6143    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
       40     6144    1   DCL B$UPT$ PTR SYMREF READONLY;
       41     6145    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       42     6146    1   DCL S$CU$ PTR SYMREF;
       43     6147    1   DCL MM_CGQD$ PTR SYMREF READONLY;
       44     6148    1   DCL FMC_CACHEPGCNT UBIN SYMREF;
       45     6149    1   DCL S_CUN UBIN WORD SYMREF;
       46     6150    1   DCL J_PLOCK BIT(72) SYMREF;
       47     6151    1   DCL UQ_MAXENQ UBIN SYMREF;
       48     6152    1   DCL 1 MAPB(0:7) BASED (B$WINDOW$),
       49     6153    1         2 * UBIN;
       50     6154    1   DCL 1 MAP_8(0:7) CONSTANT,
       51     6155    1         2 * UBIN HALF HALIGNED INIT (%FPMC*0),
       52     6156    1         2 * UBIN HALF HALIGNED INIT (0*0);
       53     6157    1   DCL MAPX(0:1015) BIT(36) BASED ALIGNED;
       54     6158    1   DCL MAP(0:1023) BIT(36) BASED ALIGNED;
       55     6159                                                /**/
       56     6160    1   DCL MMB$GPP ENTRY(2) ALTRET;            /* Routine to get physical pages      */
       57     6161    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Routine to free physical pages     */
       58     6162    1   DCL MMB$GNPP ENTRY(2) ALTRET;           /* Routine to get n pages             */
       59     6163    1   DCL MMC$MAPXLAT ENTRY(1) ;              /* Routine to map xlate tables        */
       60     6164    1   DCL MME$CVM ENTRY(4) ALTRET;            /* Routine to map pages               */
       61     6165    1   DCL HFC$ASSOCCLR ENTRY(3);              /* Clear assoc memory                 */
       62     6166    1   DCL OCI$MK_WR ENTRY(7);
       63     6167    1   DCL SSR$RUE ENTRY(4);                   /* Scheduler report event routine     */
       64     6168    1   DCL SSR$REG ENTRY(3) ALTRET;
       65     6169    1   DCL X66_MSTATIC ENTRY(3);
       66     6170    1   DCL SC_MM29 ENTRY CONV(2,0);
       67     6171                                                /**/
       68     6172                %B$JIT0;
       69     6261                %U$JIT1;
       70     6335                %M$JIT2;
       71     6345                %F$JIT3X;
       72     6348                %S$JIT4X;
       73     6351                %J$JIT5X;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:3    
       74     6354                %A$JIT6;
       75     6364                                                /**/
       76     6365        %MM$CGQD (STCLASS="BASED(MM_CGQD$)");
       77     6424        %MODERR(MODULE='13'O);
       78     6432        %SUB   B$NEWJIT = NEWJIT$->B$JIT;
       79     6433        %SUB   B$JIT = B$JIT$->B$JIT;
       80     6434        %SUB   MM$PPUT = B$PPUT$->MM$PPUT;
       81     6435        %SUB   B$MONJIT = B$MONJIT$->B$JIT;
       82     6436        %SUB    MINUSER = 256;
       83     6437                                                /**/
       84     6438        %EJECT;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:4    
       85     6439        /*
       86     6440               Makuser assumes that the host logon processor has already
       87     6441               set up the resource and privilege jit information, and has set
       88     6442               JIT.MODE in the new jit to be the mode of the user it wishes
       89     6443               to create. The rest of the jit page should be zeroed.
       90     6444               The hjit should be initialized, as should the fixed portion
       91     6445               of the read only segment.
       92     6446        */
       93     6447        /* Make sure its the host logon processor issuing this request */
       94     6448    1           IF S_CUN~=JG_SLUG#
       95     6449    2             THEN DO;
       96     6450        /*E*   ERROR:  MMK-E$SLUGONLY-0
       97     6451               MESSAGE: This service available only to SLUG ghost.         */
       98     6452                      %ERRSETN(CODE=%E$SLUGONLY);
       99     6455    2                 ALTRETURN;
      100     6456    2               END;
      101     6457        /* Make sure we're not gonna deadlock without complaining first! */
      102     6458        /* Compute the # of pages which need to be held out for the mon- */
      103     6459        /* Itor and make sure there are at least "MINUSER" more pages.   */
      104     6460        /* If there aren't, tell the operator we may be getting into     */
      105     6461        /* Trouble. This is at least some assurance that a tight memory  */
      106     6462        /* Deadlock situation can be avoided, or at worst, recognized.   */
      107     6463
      108     6464    1           I = (MM_RSVP - MM_SPPC) + MM_HELD;
      109     6465    1           IF I < 0 THEN I = 0;
      110     6466    1           I = MM_FPPC + MM_AUTO + FMC_CACHEPGCNT + MM$CGQD.FPPC - I; /* Free pages*/
      111     6467    1           IF I <= MM_FREETHRESH THEN
      112     6468    1             CALL OCI$MK_WR(M_SYS,101 /* MEMOUT_MSG# */,0);
      113     6469        /* Get a physical page for the page table... */
      114     6470    1   TRY_AGAIN:;
      115     6471    1           CALL MMB$GPP(PPNO,%MONWSQ);
      116     6472    1           IF PPNO = 0
      117     6473    2             THEN DO;
      118     6474    2                 CALL SSR$REG(%SS_NC);
      119     6475    2                 GOTO TRY_AGAIN;
      120     6476    2               END;
      121     6477        /* Now, map the new page table page into the monitor's window area
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:5    
      122     6478           and set up the initial mapping for pgtbl, jit, hjit & roseg.    */
      123     6479
      124     6480                %LOCK (G = J_PLOCK);            /*Borrow J_PLOCK to get disabled*/
      125     6483    1           CALL MME$CVM(%MONWSQ,%WINDOWLO,PPNO,ERR);
      126     6484    1           CALL MME$CVM(%MONWSQ,%WINDOWLO+1,JITPP,ERR);
      127     6485        /* Build up the initial page table for the user */
      128     6486    1           MAPB = MAP_8;
      129     6487    1           PINCRW (B$WINDOW$ , 8) -> MAPX = B$WINDOW$ -> MAPX;
      130     6488
      131     6489                %SAC (P$ = B$WINDOW$ , VPNO = %PGTBLLO , AC = "%PGINMEM|%PGWRITE|%PGIOM");
      132     6492                %SSC (P$ = B$WINDOW$ , VPNO = %PGTBLLO , SC = %SCUSER);
      133     6495    1           B$WINDOW$ -> B$MAP (%JITPG) = B$WINDOW$ -> B$MAP (%PGTBLLO);
      134     6496    1           B$WINDOW$ -> B$MAP (%ROSEGLO) = B$WINDOW$ -> B$MAP (%PGTBLLO);
      135     6497    1           B$WINDOW$ -> B$MAP (%HJITPG) = B$WINDOW$ -> B$MAP (%PGTBLLO);
      136     6498                %SAC (P$ = B$WINDOW$ , VPNO = %HJITPG , AC =
              6498                    "%PGINMEM|%PGWRITE|%PGIOM|%PGHKEEP");
      137     6501    1           NEWJIT$ = PINCRW(B$WINDOW$,1024);
      138     6502                 /* Mark the pput entries properly */
      139     6503    1           MM$PPUT(PPNO) = '0'B;
      140     6504    1           MM$PPUT.USER(PPNO) = '1'B;      /* Page belongs to user               */
      141     6505    1           MM$PPUT.USER#(PPNO) = B$NEWJIT.USER; /* Page belongs to user          */
      142     6506    1           MM$PPUT (ROPP) = MM$PPUT (PPNO);
      143     6507    1           MM$PPUT (HJITPP) = MM$PPUT (PPNO);
      144     6508    1           MM$PPUT (JITPP) = MM$PPUT (PPNO);
      145     6509
      146     6510    1           IF HW_WSQ0PT
      147     6511    2             THEN DO;
      148     6512    2                 B$WINDOW$ -> B$MAP.RPN (%PGTBLLO) = B$WSQ0PT$ -> B$MAP.RPN (PPNO);
      149     6513    2                 B$WINDOW$ -> B$MAP.RPN (%JITPG) = B$WSQ0PT$ -> B$MAP.RPN (JITPP);
      150     6514    2                 B$WINDOW$ -> B$MAP.RPN (%ROSEGLO) = B$WSQ0PT$ -> B$MAP.RPN (ROPP);
      151     6515    2                 B$WINDOW$ -> B$MAP.RPN (%HJITPG) = B$WSQ0PT$ -> B$MAP.RPN (HJITPP);
      152     6516    2               END;
      153     6517    2             ELSE DO;
      154     6518    2                 B$WINDOW$ -> B$MAP.RPN (%PGTBLLO) = PPNO;
      155     6519    2                 B$WINDOW$ -> B$MAP.RPN (%JITPG) = JITPP;
      156     6520    2                 B$WINDOW$ -> B$MAP.RPN (%ROSEGLO) = ROPP;
      157     6521    2                 B$WINDOW$ -> B$MAP.RPN (%HJITPG) = HJITPP;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:6    
      158     6522    2               END;
      159     6523    1           CALL MMC$MAPXLAT (B$WINDOW$);
      160     6524        /* Now, set up the user page chain & various page counts */
      161     6525    1           B$NEWJIT.PPC = 4;               /* User page chain count              */
      162     6526    1           B$NEWJIT.PTSIZ = 1023;          /* User page table size               */
      163     6527    1           B$NEWJIT.PCC = 4;               /* # context pgs. = 4                 */
      164     6528    1           B$NEWJIT.PCROS = 1;             /* # read-only seg pages = 1          */
      165     6529    1           B$NEWJIT.MAXENQ = UQ_MAXENQ; /* May be altered by ALA$LOGOn from :USERS */
      166     6530
      167     6531        /* Develop a pointer to the new user's tstack in the jit page */
      168     6532    1           NEWJIT$ = PINCRW(B$WINDOW$,(1024 + SIZEW(B$JIT)));
      169     6533        /* Now, initialize the first frame of the user's tstack */
      170     6534    1           CALL X66_MSTATIC(NEWJIT$,(UTSTK_BOUND% - 4099)/4,I);
      171     6535    1           CALL SSR$RUE(%SS_AU);           /* Add new user to system             */
      172     6536    1           CALL MME$CVM(%MONWSQ,%WINDOWLO,-1,ERR);
      173     6537    1           CALL MME$CVM(%MONWSQ,%WINDOWLO+1,-1,ERR);
      174     6538                %UNLOCK (G = J_PLOCK);
      175     6541    1           RETURN;
      176     6542        %EJECT;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:7    
      177     6543    1   MMK$BIGPT: ENTRY ALTRET;
      178     6544
      179     6545        /*  The object of this entry point is to replace the users 1 page
      180     6546            page table with a 2 page page table.  This will allow 1 mw more
      181     6547            in user dynamic space.
      182     6548        */
      183     6549
      184     6550    1   GET2:
      185     6551    1           PPNO = 2;
      186     6552    1           CALL MMB$GNPP (PPNO , %USERWSQ) ALTRET (GET2);
      187     6553    1           I = B$UPT$ -> B$MAP.RPN (%PGTBLLO);
      188     6554    1           IF HW_WSQ0PT
      189     6555    1             THEN
      190     6556    1             I = B$IPHYMAP$ -> MM$IPHY_MAP (I);
      191     6557    1           MM$PPUT (PPNO) = MM$PPUT (I);
      192     6558    1           MM$PPUT (PPNO+1) = MM$PPUT (I);
      193     6559
      194     6560                 /* Map in new pt temporarily */
      195     6561    1           B$UPT$ -> B$MAP (%PGTBLLO+1) = B$UPT$ -> B$MAP (%PGTBLLO);
      196     6562    1           IF HW_WSQ0PT
      197     6563    1             THEN
      198     6564    1             PPNO = B$WSQ0PT$ -> B$MAP.RPN (PPNO);
      199     6565    1           B$UPT$ -> B$MAP.RPN (%PGTBLLO+1) = PPNO;
      200     6566
      201     6567                 /* Update new pt */
      202     6568    1           PINCRW (B$UPT$ , 1024) -> MAP = B$UPT$ -> MAP;
      203     6569    1           B$UPT$ -> B$MAP (%PGTBLLO+1024) = B$UPT$ -> B$MAP (%PGTBLLO+1);
      204     6570    1           B$UPT$ -> B$MAP.RPN (%PGTBLLO+1025) = B$UPT$ -> B$MAP.RPN (%PGTBLLO+1024) +
              6570                    1;
      205     6571
      206     6572    1           PPNO = PPNO * ( 1024/ HW_PTB_UNITS);
      207     6573    1           S_WSPTD.BLKNO (%USERWSQ) = PPNO;
      208     6574    1           S_WSPTD.NBLKS (%USERWSQ) = 32;
      209     6575    1           S_WSPTD.NBLKS (%IOENDWSQ) = 32;
      210     6576    1           S$CU$ -> B$U.PT = PPNO;
      211     6577    1           S$CU$ -> B$U.FLG.BIGPT = '1'B;
      212     6578
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:8    
      213     6579    1           B$JIT.PCC = B$JIT.PCC+1;
      214     6580    1           B$JIT.PPC = B$JIT.PPC+1;
      215     6581    1           B$JIT.PTSIZ = 2047;
      216     6582    1           S$CU$ -> B$U.PCT = B$JIT.PPC;
      217     6583
      218     6584    1           CALL HFC$ASSOCCLR;
      219     6585
      220     6586                 /* Init second page of pt */
      221     6587    1           PINCRW (B$UPT$,1024) -> MAPB = MAP_8;
      222     6588    1           PINCRW (B$UPT$,1032) -> MAPX = PINCRW (B$UPT$,1024) -> MAPX;
      223     6589    1           CALL MMB$FPP (I);
      224     6590    1   END MMK$MAKUSER;

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:9    
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   MM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMK$MAKUSER.

   Procedure MMK$MAKUSER requires 295 words for executable code.
   Procedure MMK$MAKUSER requires 16 words of local(AUTO) storage.

    No errors detected in file MMK$MAKE.:E05TSI    .

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:10   

 Object Unit name= MMK$MAKUSER                                File name= MMK$MAKE.:E05TOU
 UTS= JUL 30 '97 03:22:19.56 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0  RoData even  UTS      9     11  MMK$MAKUSER
    1   Proc  even  none   295    447  MMK$MAKUSER
    2  RoData even  none    23     27  MMK$MAKUSER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        3  MMK$MAKUSER
     1    310          yes     yes      Std        0  MMK$BIGPT
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:11   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       7 OCI$MK_WR
 yes     yes           Std       2 MMB$GPP
 yes     yes           Std       3 SSR$REG
 yes     yes           Std       4 MME$CVM
         yes           Std       3 X66_MSTATIC
         yes           Std       1 HFC$UNLOCK
         yes           Std       3 HFC$ASSOCCLR
         yes           Std       1 HFC$LOCK
         yes           Std       1 MMC$MAPXLAT
         yes           Std       4 SSR$RUE
 yes     yes           Std       2 MMB$GNPP
 yes     yes           Std       1 MMB$FPP
                       nStd      0 X66_AUTO_3
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     HW_PTB_UNITS                          HW_WSQ0PT                             MM_FPPC
     MM_SPPC                               MM_AUTO                          r    MM_BYP$
     MM_RSVP                               MM_HELD                               MM_FREETHRESH
     S_WSPTD                          r    B$JIT$                           r    B$PPUT$
r    B$WINDOW$                        r    B$WSQ0PT$                        r    B$UPT$
r    B$IPHYMAP$                            S$CU$                            r    MM_CGQD$
     FMC_CACHEPGCNT                        S_CUN                                 J_PLOCK
     UQ_MAXENQ                             B_VECTNIL
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:12   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:13   


        1        1        /*M* THE CREATOR OF NEW USERS                                      */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* PLM=8,IND=2,THI=2,ENU=2,CSU=2,DTI=4,DCI=4,ECU=4,AND,CCC,MCL=20,CRT=5,CRM=80,CLM
                 7        =40 */
        8        8        MMK$MAKUSER: PROC(JITPP,HJITPP,ROPP) ALTRET;

      8  1 000000   000000 700200 xent  MMK$MAKUSER  TSX0  ! X66_AUTO_3
         1 000001   000020 000003                    ZERO    16,3

        9        9
       10       10        /* Includes */
       11       11        %INCLUDE B$MAP;
       12      110        %INCLUDE B$JIT_C;
       13      424        %INCLUDE B$USER;
       14      640        %INCLUDE HF_DATA_R;
       15      683        %INCLUDE JG_GHOSTS_C;
       16      773        %INCLUDE MM_DATA_R;                     /* Mm data references                 */
       17     1293        %INCLUDE MM_CNTRL_R;
       18     1303        %INCLUDE M_ERRORS_C;
       19     1367        %INCLUDE M_ERRSET_C;
       20     1391        %INCLUDE OC_SUBS_C;
       21     2122        %INCLUDE S_WSPTD_R;
       22     2138        %INCLUDE SS_SCHED_C;                    /* Scheduler event definitions        */
       23     2371        %INCLUDE B_LSDATA_C;                    /* Hjit descriptor bases & bounds     */
       24     5577        %INCLUDE B_SEGIDS_C;                    /* Linkage segment segid definitions  */
       25     6116        %INCLUDE HF_LOCK_C;
       26     6130    1   DCL JITPP UBIN;                         /* Physical page # of new user's jit  */
       27     6131    1   DCL HJITPP UBIN;                        /* Physical page # of new user's hjit */
       28     6132    1   DCL ROPP UBIN;                /* Physical page # of new user's initial roseg  */
       29     6133    1   DCL HJITPP1 UBIN;                  /* Physical page # of new user's HJIT+1*/
       30     6134                                                /**/
       31     6135    1   DCL I SBIN;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:14   
       32     6136    1   DCL PPNO SBIN;
       33     6137    1   DCL ERR SBIN;
       34     6138    1   DCL NEWJIT$ PTR;
       35     6139    1   DCL B$JIT$ PTR SYMREF READONLY;
       36     6140    1   DCL B$MONJIT$ PTR SYMREF READONLY;
       37     6141    1   DCL B$PPUT$ PTR SYMREF READONLY;
       38     6142    1   DCL B$WINDOW$ PTR SYMREF READONLY;
       39     6143    1   DCL B$WSQ0PT$ PTR SYMREF READONLY;
       40     6144    1   DCL B$UPT$ PTR SYMREF READONLY;
       41     6145    1   DCL B$IPHYMAP$ PTR SYMREF READONLY;
       42     6146    1   DCL S$CU$ PTR SYMREF;
       43     6147    1   DCL MM_CGQD$ PTR SYMREF READONLY;
       44     6148    1   DCL FMC_CACHEPGCNT UBIN SYMREF;
       45     6149    1   DCL S_CUN UBIN WORD SYMREF;
       46     6150    1   DCL J_PLOCK BIT(72) SYMREF;
       47     6151    1   DCL UQ_MAXENQ UBIN SYMREF;
       48     6152    1   DCL 1 MAPB(0:7) BASED (B$WINDOW$),
       49     6153    1         2 * UBIN;
       50     6154    1   DCL 1 MAP_8(0:7) CONSTANT,
       51     6155    1         2 * UBIN HALF HALIGNED INIT (%FPMC*0),
       52     6156    1         2 * UBIN HALF HALIGNED INIT (0*0);
       53     6157    1   DCL MAPX(0:1015) BIT(36) BASED ALIGNED;
       54     6158    1   DCL MAP(0:1023) BIT(36) BASED ALIGNED;
       55     6159                                                /**/
       56     6160    1   DCL MMB$GPP ENTRY(2) ALTRET;            /* Routine to get physical pages      */
       57     6161    1   DCL MMB$FPP ENTRY(1) ALTRET;            /* Routine to free physical pages     */
       58     6162    1   DCL MMB$GNPP ENTRY(2) ALTRET;           /* Routine to get n pages             */
       59     6163    1   DCL MMC$MAPXLAT ENTRY(1) ;              /* Routine to map xlate tables        */
       60     6164    1   DCL MME$CVM ENTRY(4) ALTRET;            /* Routine to map pages               */
       61     6165    1   DCL HFC$ASSOCCLR ENTRY(3);              /* Clear assoc memory                 */
       62     6166    1   DCL OCI$MK_WR ENTRY(7);
       63     6167    1   DCL SSR$RUE ENTRY(4);                   /* Scheduler report event routine     */
       64     6168    1   DCL SSR$REG ENTRY(3) ALTRET;
       65     6169    1   DCL X66_MSTATIC ENTRY(3);
       66     6170    1   DCL SC_MM29 ENTRY CONV(2,0);
       67     6171                                                /**/
       68     6172                %B$JIT0;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:15   
       69     6261                %U$JIT1;
       70     6335                %M$JIT2;
       71     6345                %F$JIT3X;
       72     6348                %S$JIT4X;
       73     6351                %J$JIT5X;
       74     6354                %A$JIT6;
       75     6364                                                /**/
       76     6365        %MM$CGQD (STCLASS="BASED(MM_CGQD$)");
       77     6424        %MODERR(MODULE='13'O);
       78     6432        %SUB   B$NEWJIT = NEWJIT$->B$JIT;
       79     6433        %SUB   B$JIT = B$JIT$->B$JIT;
       80     6434        %SUB   MM$PPUT = B$PPUT$->MM$PPUT;
       81     6435        %SUB   B$MONJIT = B$MONJIT$->B$JIT;
       82     6436        %SUB    MINUSER = 256;
       83     6437                                                /**/
       84     6438        %EJECT;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:16   
       85     6439        /*
       86     6440               Makuser assumes that the host logon processor has already
       87     6441               set up the resource and privilege jit information, and has set
       88     6442               JIT.MODE in the new jit to be the mode of the user it wishes
       89     6443               to create. The rest of the jit page should be zeroed.
       90     6444               The hjit should be initialized, as should the fixed portion
       91     6445               of the read only segment.
       92     6446        */
       93     6447        /* Make sure its the host logon processor issuing this request */
       94     6448    1           IF S_CUN~=JG_SLUG#

   6448  1 000002   000000 235000 xsym               LDA     S_CUN
         1 000003   000001 115007                    CMPA    1,DL
         1 000004   000013 600000 1                  TZE     s:6464

       95     6449    2             THEN DO;

       96     6450        /*E*   ERROR:  MMK-E$SLUGONLY-0
       97     6451               MESSAGE: This service available only to SLUG ghost.         */
       98     6452                      %ERRSETN(CODE=%E$SLUGONLY);

   6453  1 000005   001155 236007                    LDQ     621,DL
         1 000006   000003 736000                    QLS     3
         1 000007   000010 276000 0                  ORQ     MMERR
         1 000010   000000 470400 xsym               LDP0    B$JIT$
         1 000011   000012 756100                    STQ     10,,PR0

       99     6455    2                 ALTRETURN;

   6455  1 000012   000000 702200 xent               TSX2  ! X66_AALT

      100     6456    2               END;
      101     6457        /* Make sure we're not gonna deadlock without complaining first! */
      102     6458        /* Compute the # of pages which need to be held out for the mon- */
      103     6459        /* Itor and make sure there are at least "MINUSER" more pages.   */
      104     6460        /* If there aren't, tell the operator we may be getting into     */
      105     6461        /* Trouble. This is at least some assurance that a tight memory  */
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:17   
      106     6462        /* Deadlock situation can be avoided, or at worst, recognized.   */
      107     6463
      108     6464    1           I = (MM_RSVP - MM_SPPC) + MM_HELD;

   6464  1 000013   000000 236000 xsym               LDQ     MM_RSVP
         1 000014   000000 136000 xsym               SBLQ    MM_SPPC
         1 000015   000000 036000 xsym               ADLQ    MM_HELD
         1 000016   200007 756100                    STQ     I,,AUTO

      109     6465    1           IF I < 0 THEN I = 0;

   6465  1 000017   000021 605000 1                  TPL     s:6466

   6465  1 000020   200007 450100                    STZ     I,,AUTO

      110     6466    1           I = MM_FPPC + MM_AUTO + FMC_CACHEPGCNT + MM$CGQD.FPPC - I; /* Free pages*/

   6466  1 000021   000000 236000 xsym               LDQ     MM_FPPC
         1 000022   000000 036000 xsym               ADLQ    MM_AUTO
         1 000023   000000 036000 xsym               ADLQ    FMC_CACHEPGCNT
         1 000024   000000 470400 xsym               LDP0    MM_CGQD$
         1 000025   000000 036100                    ADLQ    0,,PR0
         1 000026   200007 136100                    SBLQ    I,,AUTO
         1 000027   200007 756100                    STQ     I,,AUTO

      111     6467    1           IF I <= MM_FREETHRESH THEN

   6467  1 000030   000034 604000 1                  TMI     s:6468
         1 000031   000000 116000 xsym               CMPQ    MM_FREETHRESH
         1 000032   000034 600000 1                  TZE     s:6468
         1 000033   000040 603000 1                  TRC     TRY_AGAIN

      112     6468    1             CALL OCI$MK_WR(M_SYS,101 /* MEMOUT_MSG# */,0);

   6468  1 000034   000002 630400 2                  EPPR0   2
         1 000035   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000036   000000 701000 xent               TSX1    OCI$MK_WR
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:18   
         1 000037   000000 011000                    NOP     0

   6467  1 000040                       TRY_AGAIN    null
      113     6469        /* Get a physical page for the page table... */
      114     6470    1   TRY_AGAIN:;
      115     6471    1           CALL MMB$GPP(PPNO,%MONWSQ);

   6471  1 000040   000005 236000 2                  LDQ     5
         1 000041   200015 756100                    STQ     NEWJIT$+3,,AUTO
         1 000042   200010 630500                    EPPR0   PPNO,,AUTO
         1 000043   200014 450500                    STP0    NEWJIT$+2,,AUTO
         1 000044   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000045   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000046   000000 701000 xent               TSX1    MMB$GPP
         1 000047   000000 011000                    NOP     0

      116     6472    1           IF PPNO = 0

   6472  1 000050   200010 235100                    LDA     PPNO,,AUTO
         1 000051   000057 601000 1                  TNZ     s:6481

      117     6473    2             THEN DO;

      118     6474    2                 CALL SSR$REG(%SS_NC);

   6474  1 000052   000007 630400 2                  EPPR0   7
         1 000053   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000054   000000 701000 xent               TSX1    SSR$REG
         1 000055   000000 011000                    NOP     0

      119     6475    2                 GOTO TRY_AGAIN;

   6475  1 000056   000040 710000 1                  TRA     TRY_AGAIN

      120     6476    2               END;
      121     6477        /* Now, map the new page table page into the monitor's window area
      122     6478           and set up the initial mapping for pgtbl, jit, hjit & roseg.    */
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:19   
      123     6479
      124     6480                %LOCK (G = J_PLOCK);            /*Borrow J_PLOCK to get disabled*/

   6481  1 000057   000010 630400 2                  EPPR0   8
         1 000060   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000061   000000 701000 xent               TSX1    HFC$LOCK
         1 000062   000000 011000                    NOP     0

      125     6483    1           CALL MME$CVM(%MONWSQ,%WINDOWLO,PPNO,ERR);

   6483  1 000063   200011 630500                    EPPR0   ERR,,AUTO
         1 000064   200017 450500                    STP0    NEWJIT$+5,,AUTO
         1 000065   200010 631500                    EPPR1   PPNO,,AUTO
         1 000066   200016 451500                    STP1    NEWJIT$+4,,AUTO
         1 000067   000012 237000 2                  LDAQ    10
         1 000070   200014 757100                    STAQ    NEWJIT$+2,,AUTO
         1 000071   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000072   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000073   000000 701000 xent               TSX1    MME$CVM
         1 000074   000000 011000                    NOP     0

      126     6484    1           CALL MME$CVM(%MONWSQ,%WINDOWLO+1,JITPP,ERR);

   6484  1 000075   200011 630500                    EPPR0   ERR,,AUTO
         1 000076   200017 450500                    STP0    NEWJIT$+5,,AUTO
         1 000077   200003 236100                    LDQ     @JITPP,,AUTO
         1 000100   200016 756100                    STQ     NEWJIT$+4,,AUTO
         1 000101   000016 237000 2                  LDAQ    14
         1 000102   200014 757100                    STAQ    NEWJIT$+2,,AUTO
         1 000103   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000104   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000105   000000 701000 xent               TSX1    MME$CVM
         1 000106   000000 011000                    NOP     0

      127     6485        /* Build up the initial page table for the user */
      128     6486    1           MAPB = MAP_8;

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:20   
   6486  1 000107   000000 470400 xsym               LDP0    B$WINDOW$
         1 000110   000100 100400                    MLR     fill='000'O
         1 000111   000000 000040 0                  ADSC9   MAP_8                    cn=0,n=32
         1 000112   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32

      129     6487    1           PINCRW (B$WINDOW$ , 8) -> MAPX = B$WINDOW$ -> MAPX;

   6487  1 000113   000100 100500                    MLR     fill='000'O
         1 000114   000000 007740                    ADSC9   0,,PR0                   cn=0,n=4064
         1 000115   000010 007740                    ADSC9   8,,PR0                   cn=0,n=4064

      130     6488
      131     6489                %SAC (P$ = B$WINDOW$ , VPNO = %PGTBLLO , AC = "%PGINMEM|%PGWRITE|%PGIOM");

   6490  1 000116   000064 236007                    LDQ     52,DL
         1 000117   000000 752101                    STCQ    0,'01'O,PR0

      132     6492                %SSC (P$ = B$WINDOW$ , VPNO = %PGTBLLO , SC = %SCUSER);

   6493  1 000120   000000 236100                    LDQ     0,,PR0
         1 000121   000015 376000 2                  ANQ     13
         1 000122   000400 276007                    ORQ     256,DL
         1 000123   000000 756100                    STQ     0,,PR0

      133     6495    1           B$WINDOW$ -> B$MAP (%JITPG) = B$WINDOW$ -> B$MAP (%PGTBLLO);

   6495  1 000124   000000 236100                    LDQ     0,,PR0
         1 000125   000013 756100                    STQ     11,,PR0

      134     6496    1           B$WINDOW$ -> B$MAP (%ROSEGLO) = B$WINDOW$ -> B$MAP (%PGTBLLO);

   6496  1 000126   000057 756100                    STQ     47,,PR0

      135     6497    1           B$WINDOW$ -> B$MAP (%HJITPG) = B$WINDOW$ -> B$MAP (%PGTBLLO);

   6497  1 000127   000015 756100                    STQ     13,,PR0

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:21   
      136     6498                %SAC (P$ = B$WINDOW$ , VPNO = %HJITPG , AC =
              6498                    "%PGINMEM|%PGWRITE|%PGIOM|%PGHKEEP");

   6499  1 000130   000074 236007                    LDQ     60,DL
         1 000131   000015 752101                    STCQ    13,'01'O,PR0

      137     6501    1           NEWJIT$ = PINCRW(B$WINDOW$,1024);

   6501  1 000132   000000 236000 xsym               LDQ     B$WINDOW$
         1 000133   002000 036003                    ADLQ    1024,DU
         1 000134   200012 756100                    STQ     NEWJIT$,,AUTO

      138     6502                 /* Mark the pput entries properly */
      139     6503    1           MM$PPUT(PPNO) = '0'B;

   6503  1 000135   000000 471400 xsym               LDP1    B$PPUT$
         1 000136   200010 720100                    LXL0    PPNO,,AUTO
         1 000137   100000 450110                    STZ     0,X0,PR1

      140     6504    1           MM$PPUT.USER(PPNO) = '1'B;      /* Page belongs to user               */

   6504  1 000140   200010 720100                    LXL0    PPNO,,AUTO
         1 000141   020000 236003                    LDQ     8192,DU
         1 000142   100000 256110                    ORSQ    0,X0,PR1

      141     6505    1           MM$PPUT.USER#(PPNO) = B$NEWJIT.USER; /* Page belongs to user          */

   6505  1 000143   200012 473500                    LDP3    NEWJIT$,,AUTO
         1 000144   200010 720100                    LXL0    PPNO,,AUTO
         1 000145   300000 236100                    LDQ     0,,PR3
         1 000146   100000 676110                    ERQ     0,X0,PR1
         1 000147   000777 376003                    ANQ     511,DU
         1 000150   100000 656110                    ERSQ    0,X0,PR1

      142     6506    1           MM$PPUT (ROPP) = MM$PPUT (PPNO);

   6506  1 000151   200005 473500                    LDP3    @ROPP,,AUTO
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:22   
         1 000152   300000 720100                    LXL0    0,,PR3
         1 000153   200010 721100                    LXL1    PPNO,,AUTO
         1 000154   100000 236111                    LDQ     0,X1,PR1
         1 000155   100000 756110                    STQ     0,X0,PR1

      143     6507    1           MM$PPUT (HJITPP) = MM$PPUT (PPNO);

   6507  1 000156   200004 474500                    LDP4    @HJITPP,,AUTO
         1 000157   400000 720100                    LXL0    0,,PR4
         1 000160   200010 721100                    LXL1    PPNO,,AUTO
         1 000161   100000 236111                    LDQ     0,X1,PR1
         1 000162   100000 756110                    STQ     0,X0,PR1

      144     6508    1           MM$PPUT (JITPP) = MM$PPUT (PPNO);

   6508  1 000163   200003 475500                    LDP5    @JITPP,,AUTO
         1 000164   500000 720100                    LXL0    0,,PR5
         1 000165   200010 721100                    LXL1    PPNO,,AUTO
         1 000166   100000 236111                    LDQ     0,X1,PR1
         1 000167   100000 756110                    STQ     0,X0,PR1

      145     6509
      146     6510    1           IF HW_WSQ0PT

   6510  1 000170   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000171   000210 605000 1                  TPL     s:6518

      147     6511    2             THEN DO;

      148     6512    2                 B$WINDOW$ -> B$MAP.RPN (%PGTBLLO) = B$WSQ0PT$ -> B$MAP.RPN (PPNO);

   6512  1 000172   000000 476400 xsym               LDP6    B$WSQ0PT$
         1 000173   200010 720100                    LXL0    PPNO,,AUTO
         1 000174   600000 221110                    LDX1    0,X0,PR6
         1 000175   000000 741100                    STX1    0,,PR0

      149     6513    2                 B$WINDOW$ -> B$MAP.RPN (%JITPG) = B$WSQ0PT$ -> B$MAP.RPN (JITPP);
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:23   

   6513  1 000176   500000 720100                    LXL0    0,,PR5
         1 000177   600000 222110                    LDX2    0,X0,PR6
         1 000200   000013 742100                    STX2    11,,PR0

      150     6514    2                 B$WINDOW$ -> B$MAP.RPN (%ROSEGLO) = B$WSQ0PT$ -> B$MAP.RPN (ROPP);

   6514  1 000201   300000 720100                    LXL0    0,,PR3
         1 000202   600000 223110                    LDX3    0,X0,PR6
         1 000203   000057 743100                    STX3    47,,PR0

      151     6515    2                 B$WINDOW$ -> B$MAP.RPN (%HJITPG) = B$WSQ0PT$ -> B$MAP.RPN (HJITPP);

   6515  1 000204   400000 720100                    LXL0    0,,PR4
         1 000205   600000 224110                    LDX4    0,X0,PR6
         1 000206   000015 744100                    STX4    13,,PR0

      152     6516    2               END;

   6516  1 000207   000220 710000 1                  TRA     s:6523

      153     6517    2             ELSE DO;

      154     6518    2                 B$WINDOW$ -> B$MAP.RPN (%PGTBLLO) = PPNO;

   6518  1 000210   200010 720100                    LXL0    PPNO,,AUTO
         1 000211   000000 740100                    STX0    0,,PR0

      155     6519    2                 B$WINDOW$ -> B$MAP.RPN (%JITPG) = JITPP;

   6519  1 000212   500000 721100                    LXL1    0,,PR5
         1 000213   000013 741100                    STX1    11,,PR0

      156     6520    2                 B$WINDOW$ -> B$MAP.RPN (%ROSEGLO) = ROPP;

   6520  1 000214   300000 722100                    LXL2    0,,PR3
         1 000215   000057 742100                    STX2    47,,PR0
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:24   

      157     6521    2                 B$WINDOW$ -> B$MAP.RPN (%HJITPG) = HJITPP;

   6521  1 000216   400000 723100                    LXL3    0,,PR4
         1 000217   000015 743100                    STX3    13,,PR0

      158     6522    2               END;

      159     6523    1           CALL MMC$MAPXLAT (B$WINDOW$);

   6523  1 000220   000020 630400 2                  EPPR0   16
         1 000221   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000222   000000 701000 xent               TSX1    MMC$MAPXLAT
         1 000223   000000 011000                    NOP     0

      160     6524        /* Now, set up the user page chain & various page counts */
      161     6525    1           B$NEWJIT.PPC = 4;               /* User page chain count              */

   6525  1 000224   000004 220003                    LDX0    4,DU
         1 000225   200012 470500                    LDP0    NEWJIT$,,AUTO
         1 000226   000207 440100                    SXL0    135,,PR0

      162     6526    1           B$NEWJIT.PTSIZ = 1023;          /* User page table size               */

   6526  1 000227   001777 221003                    LDX1    1023,DU
         1 000230   000216 441100                    SXL1    142,,PR0

      163     6527    1           B$NEWJIT.PCC = 4;               /* # context pgs. = 4                 */

   6527  1 000231   000202 440100                    SXL0    130,,PR0

      164     6528    1           B$NEWJIT.PCROS = 1;             /* # read-only seg pages = 1          */

   6528  1 000232   000001 222003                    LDX2    1,DU
         1 000233   000203 742100                    STX2    131,,PR0

      165     6529    1           B$NEWJIT.MAXENQ = UQ_MAXENQ; /* May be altered by ALA$LOGOn from :USERS */
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:25   

   6529  1 000234   000000 723000 xsym               LXL3    UQ_MAXENQ
         1 000235   000363 743100                    STX3    243,,PR0

      166     6530
      167     6531        /* Develop a pointer to the new user's tstack in the jit page */
      168     6532    1           NEWJIT$ = PINCRW(B$WINDOW$,(1024 + SIZEW(B$JIT)));

   6532  1 000236   000000 236000 xsym               LDQ     B$WINDOW$
         1 000237   002366 036003                    ADLQ    1270,DU
         1 000240   200012 756100                    STQ     NEWJIT$,,AUTO

      169     6533        /* Now, initialize the first frame of the user's tstack */
      170     6534    1           CALL X66_MSTATIC(NEWJIT$,(UTSTK_BOUND% - 4099)/4,I);

   6534  1 000241   200007 630500                    EPPR0   I,,AUTO
         1 000242   200016 450500                    STP0    NEWJIT$+4,,AUTO
         1 000243   000022 236000 2                  LDQ     18
         1 000244   200015 756100                    STQ     NEWJIT$+3,,AUTO
         1 000245   200012 631500                    EPPR1   NEWJIT$,,AUTO
         1 000246   200014 451500                    STP1    NEWJIT$+2,,AUTO
         1 000247   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000250   000021 631400 xsym               EPPR1   B_VECTNIL+17
         1 000251   000000 701000 xent               TSX1    X66_MSTATIC
         1 000252   000000 011000                    NOP     0

      171     6535    1           CALL SSR$RUE(%SS_AU);           /* Add new user to system             */

   6535  1 000253   000024 630400 2                  EPPR0   20
         1 000254   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000255   000000 701000 xent               TSX1    SSR$RUE
         1 000256   000000 011000                    NOP     0

      172     6536    1           CALL MME$CVM(%MONWSQ,%WINDOWLO,-1,ERR);

   6536  1 000257   200011 630500                    EPPR0   ERR,,AUTO
         1 000260   200017 450500                    STP0    NEWJIT$+5,,AUTO
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:26   
         1 000261   000025 236000 2                  LDQ     21
         1 000262   200016 756100                    STQ     NEWJIT$+4,,AUTO
         1 000263   000012 237000 2                  LDAQ    10
         1 000264   200014 757100                    STAQ    NEWJIT$+2,,AUTO
         1 000265   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000266   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000267   000000 701000 xent               TSX1    MME$CVM
         1 000270   000000 011000                    NOP     0

      173     6537    1           CALL MME$CVM(%MONWSQ,%WINDOWLO+1,-1,ERR);

   6537  1 000271   200011 630500                    EPPR0   ERR,,AUTO
         1 000272   200017 450500                    STP0    NEWJIT$+5,,AUTO
         1 000273   000025 236000 2                  LDQ     21
         1 000274   200016 756100                    STQ     NEWJIT$+4,,AUTO
         1 000275   000016 237000 2                  LDAQ    14
         1 000276   200014 757100                    STAQ    NEWJIT$+2,,AUTO
         1 000277   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000300   000022 631400 xsym               EPPR1   B_VECTNIL+18
         1 000301   000000 701000 xent               TSX1    MME$CVM
         1 000302   000000 011000                    NOP     0

      174     6538                %UNLOCK (G = J_PLOCK);

   6539  1 000303   000010 630400 2                  EPPR0   8
         1 000304   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000305   000000 701000 xent               TSX1    HFC$UNLOCK
         1 000306   000000 011000                    NOP     0

      175     6541    1           RETURN;

   6541  1 000307   000000 702200 xent               TSX2  ! X66_ARET

      176     6542        %EJECT;
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:27   
      177     6543    1   MMK$BIGPT: ENTRY ALTRET;

   6543  1 000310   000000 700200 xent  MMK$BIGPT    TSX0  ! X66_AUTO_3
         1 000311   000020 000003                    ZERO    16,3

      178     6544
      179     6545        /*  The object of this entry point is to replace the users 1 page
      180     6546            page table with a 2 page page table.  This will allow 1 mw more
      181     6547            in user dynamic space.
      182     6548        */
      183     6549
      184     6550    1   GET2:
      185     6551    1           PPNO = 2;

   6551  1 000312   000002 235007       GET2         LDA     2,DL
         1 000313   200010 755100                    STA     PPNO,,AUTO

      186     6552    1           CALL MMB$GNPP (PPNO , %USERWSQ) ALTRET (GET2);

   6552  1 000314   000026 236000 2                  LDQ     22
         1 000315   200015 756100                    STQ     NEWJIT$+3,,AUTO
         1 000316   200010 630500                    EPPR0   PPNO,,AUTO
         1 000317   200014 450500                    STP0    NEWJIT$+2,,AUTO
         1 000320   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000321   000020 631400 xsym               EPPR1   B_VECTNIL+16
         1 000322   000000 701000 xent               TSX1    MMB$GNPP
         1 000323   000312 702000 1                  TSX2    GET2

      187     6553    1           I = B$UPT$ -> B$MAP.RPN (%PGTBLLO);

   6553  1 000324   000000 470400 xsym               LDP0    B$UPT$
         1 000325   000000 236100                    LDQ     0,,PR0
         1 000326   000022 772000                    QRL     18
         1 000327   200007 756100                    STQ     I,,AUTO

      188     6554    1           IF HW_WSQ0PT

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:28   
   6554  1 000330   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000331   000340 605000 1                  TPL     s:6557

      189     6555    1             THEN
      190     6556    1             I = B$IPHYMAP$ -> MM$IPHY_MAP (I);

   6556  1 000332   200007 235100                    LDA     I,,AUTO
         1 000333   000001 735000                    ALS     1
         1 000334   000000 471400 xsym               LDP1    B$IPHYMAP$
         1 000335   000100 101505                    MRL     fill='000'O
         1 000336   100000 000002                    ADSC9   0,A,PR1                  cn=0,n=2
         1 000337   200007 000004                    ADSC9   I,,AUTO                  cn=0,n=4

      191     6557    1           MM$PPUT (PPNO) = MM$PPUT (I);

   6557  1 000340   000000 471400 xsym               LDP1    B$PPUT$
         1 000341   200007 720100                    LXL0    I,,AUTO
         1 000342   100000 236110                    LDQ     0,X0,PR1
         1 000343   200010 721100                    LXL1    PPNO,,AUTO
         1 000344   100000 756111                    STQ     0,X1,PR1

      192     6558    1           MM$PPUT (PPNO+1) = MM$PPUT (I);

   6558  1 000345   200007 720100                    LXL0    I,,AUTO
         1 000346   100000 236110                    LDQ     0,X0,PR1
         1 000347   200010 721100                    LXL1    PPNO,,AUTO
         1 000350   100001 756111                    STQ     1,X1,PR1

      193     6559
      194     6560                 /* Map in new pt temporarily */
      195     6561    1           B$UPT$ -> B$MAP (%PGTBLLO+1) = B$UPT$ -> B$MAP (%PGTBLLO);

   6561  1 000351   000000 236100                    LDQ     0,,PR0
         1 000352   000001 756100                    STQ     1,,PR0

      196     6562    1           IF HW_WSQ0PT

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:29   
   6562  1 000353   000000 234000 xsym               SZN     HW_WSQ0PT
         1 000354   000362 605000 1                  TPL     s:6565

      197     6563    1             THEN
      198     6564    1             PPNO = B$WSQ0PT$ -> B$MAP.RPN (PPNO);

   6564  1 000355   000000 473400 xsym               LDP3    B$WSQ0PT$
         1 000356   200010 720100                    LXL0    PPNO,,AUTO
         1 000357   300000 236110                    LDQ     0,X0,PR3
         1 000360   000022 772000                    QRL     18
         1 000361   200010 756100                    STQ     PPNO,,AUTO

      199     6565    1           B$UPT$ -> B$MAP.RPN (%PGTBLLO+1) = PPNO;

   6565  1 000362   200010 720100                    LXL0    PPNO,,AUTO
         1 000363   000001 740100                    STX0    1,,PR0

      200     6566
      201     6567                 /* Update new pt */
      202     6568    1           PINCRW (B$UPT$ , 1024) -> MAP = B$UPT$ -> MAP;

   6568  1 000364   010000 221003                    LDX1    4096,DU
         1 000365   000140 100540                    MLR     fill='000'O
         1 000366   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         1 000367   002000 000011                    ADSC9   1024,,PR0                cn=0,n=*X1

      203     6569    1           B$UPT$ -> B$MAP (%PGTBLLO+1024) = B$UPT$ -> B$MAP (%PGTBLLO+1);

   6569  1 000370   000001 236100                    LDQ     1,,PR0
         1 000371   002000 756100                    STQ     1024,,PR0

      204     6570    1           B$UPT$ -> B$MAP.RPN (%PGTBLLO+1025) = B$UPT$ -> B$MAP.RPN (%PGTBLLO+1024) +
              6570                    1;

   6570  1 000372   002000 222100                    LDX2    1024,,PR0
         1 000373   000001 623012                    EAX3    1,X2
         1 000374   002001 743100                    STX3    1025,,PR0
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:30   

      205     6571
      206     6572    1           PPNO = PPNO * ( 1024/ HW_PTB_UNITS);

   6572  1 000375   002000 236007                    LDQ     1024,DL
         1 000376   000000 506000 xsym               DIV     HW_PTB_UNITS
         1 000377   200010 402100                    MPY     PPNO,,AUTO
         1 000400   200010 756100                    STQ     PPNO,,AUTO

      207     6573    1           S_WSPTD.BLKNO (%USERWSQ) = PPNO;

   6573  1 000401   000000 620006                    EAX0    0,QL
         1 000402   000010 740000 xsym               STX0    S_WSPTD+8

      208     6574    1           S_WSPTD.NBLKS (%USERWSQ) = 32;

   6574  1 000403   000040 236007                    LDQ     32,DL
         1 000404   000010 752003 xsym               STCQ    S_WSPTD+8,'03'O

      209     6575    1           S_WSPTD.NBLKS (%IOENDWSQ) = 32;

   6575  1 000405   000007 752003 xsym               STCQ    S_WSPTD+7,'03'O

      210     6576    1           S$CU$ -> B$U.PT = PPNO;

   6576  1 000406   200010 720100                    LXL0    PPNO,,AUTO
         1 000407   000000 473400 xsym               LDP3    S$CU$
         1 000410   300014 740100                    STX0    12,,PR3

      211     6577    1           S$CU$ -> B$U.FLG.BIGPT = '1'B;

   6577  1 000411   000400 236007                    LDQ     256,DL
         1 000412   300000 256100                    ORSQ    0,,PR3

      212     6578
      213     6579    1           B$JIT.PCC = B$JIT.PCC+1;

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:31   
   6579  1 000413   000000 473400 xsym               LDP3    B$JIT$
         1 000414   300202 720100                    LXL0    130,,PR3
         1 000415   000001 622010                    EAX2    1,X0
         1 000416   300202 442100                    SXL2    130,,PR3

      214     6580    1           B$JIT.PPC = B$JIT.PPC+1;

   6580  1 000417   300207 720100                    LXL0    135,,PR3
         1 000420   000001 623010                    EAX3    1,X0
         1 000421   300207 443100                    SXL3    135,,PR3

      215     6581    1           B$JIT.PTSIZ = 2047;

   6581  1 000422   003777 220003                    LDX0    2047,DU
         1 000423   300216 440100                    SXL0    142,,PR3

      216     6582    1           S$CU$ -> B$U.PCT = B$JIT.PPC;

   6582  1 000424   000000 474400 xsym               LDP4    S$CU$
         1 000425   400010 743100                    STX3    8,,PR4

      217     6583
      218     6584    1           CALL HFC$ASSOCCLR;

   6584  1 000426   000002 631400 xsym               EPPR1   B_VECTNIL+2
         1 000427   000000 701000 xent               TSX1    HFC$ASSOCCLR
         1 000430   000000 011000                    NOP     0

      219     6585
      220     6586                 /* Init second page of pt */
      221     6587    1           PINCRW (B$UPT$,1024) -> MAPB = MAP_8;

   6587  1 000431   000000 470400 xsym               LDP0    B$UPT$
         1 000432   000100 100400                    MLR     fill='000'O
         1 000433   000000 000040 0                  ADSC9   MAP_8                    cn=0,n=32
         1 000434   002000 000040                    ADSC9   1024,,PR0                cn=0,n=32

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:32   
      222     6588    1           PINCRW (B$UPT$,1032) -> MAPX = PINCRW (B$UPT$,1024) -> MAPX;

   6588  1 000435   000100 100500                    MLR     fill='000'O
         1 000436   002000 007740                    ADSC9   1024,,PR0                cn=0,n=4064
         1 000437   002010 007740                    ADSC9   1032,,PR0                cn=0,n=4064

      223     6589    1           CALL MMB$FPP (I);

   6589  1 000440   200007 631500                    EPPR1   I,,AUTO
         1 000441   200014 451500                    STP1    NEWJIT$+2,,AUTO
         1 000442   200014 630500                    EPPR0   NEWJIT$+2,,AUTO
         1 000443   000017 631400 xsym               EPPR1   B_VECTNIL+15
         1 000444   000000 701000 xent               TSX1    MMB$FPP
         1 000445   000000 011000                    NOP     0

      224     6590    1   END MMK$MAKUSER;

   6590  1 000446   000000 702200 xent               TSX2  ! X66_ARET

MAP_8
 Sect OctLoc
   0     000   777777 000000   777777 000000   777777 000000   777777 000000    ................
   0     004   777777 000000   777777 000000   777777 000000   777777 000000    ................

MMERR
 Sect OctLoc
   0     010   151513 400000                                                    i...

(unnamed)
 Sect OctLoc
   2     000   200000 000000   000000 000145   000000 006000   000001 006000    .......e........
   2     004   000002 006000   000003 006000   000000 000100   000006 006000    ...........@....
   2     010   000000 006000   000000 000063   000003 006000   000011 006000    .......3........
   2     014   000000 000064   777777 000377   000003 006000   000014 006000    ...4............
   2     020   000000 006000   000000 001411   000021 006000   000000 000042    ..............."
   2     024   000023 006000   000027 006000   000012 006000                    ............

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:33   
--  Include file information  --

   HF_LOCK_C.:E05TOU  cannot be made into a system file and is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   B_MLSMAC_C.:E05TOU  is referenced.
   B_ULSMAC_C.:E05TOU  is referenced.
   B_LSDATA_C.:E05TOU  cannot be made into a system file and is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   S_WSPTD_R.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   M_ERRSET_C.:E05TOU  is referenced.
   M_ERRORS_C.:E05TOU  is referenced.
   MM_CNTRL_R.:E05TOU  cannot be made into a system file and is referenced.
   MM_MACRO_M.:E05TOU  is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   MM$SYSGEN.:E05TOU  is referenced.
   M_INFO_C.:E05TOU  is referenced.
   MM_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JG_GHOSTS_C.:E05TOU  is referenced.
   HF_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$USER.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$MAP.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure MMK$MAKUSER.
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:34   

 **** Variables and constants ****

  ****  Section 000 RoData MMK$MAKUSER

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/h STRC        r     1 MAP_8(0:7)                10-0-0/b STRC        r     1 MMERR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @HJITPP                    3-0-0/w PTR         r     1 @JITPP
     5-0-0/w PTR         r     1 @ROPP                     11-0-0/w SBIN        r     1 ERR
    *0-0-0/w UBIN        r     1 HJITPP                     7-0-0/w SBIN        r     1 I
    *0-0-0/w UBIN        r     1 JITPP                     12-0-0/w PTR         r     1 NEWJIT$
    10-0-0/w SBIN        r     1 PPNO                      *0-0-0/w UBIN        r     1 ROPP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$IPHYMAP$                 0-0-0/w PTR         r     1 B$JIT$
     0-0-0/w PTR         r     1 B$PPUT$                    0-0-0/w PTR         r     1 B$UPT$
     0-0-0/w PTR         r     1 B$WINDOW$                  0-0-0/w PTR         r     1 B$WSQ0PT$
     0-0-0/w UBIN        r     1 FMC_CACHEPGCNT             0-0-0/w SBIN        r     1 HW_PTB_UNITS
     0-0-0/w BIT         r     1 HW_WSQ0PT                  0-0-0/b BIT (72)    r     1 J_PLOCK
     0-0-0/w SBIN        r     1 MM_AUTO                    0-0-0/w PTR         r     1 MM_BYP$
     0-0-0/w PTR         r     1 MM_CGQD$                   0-0-0/w SBIN        r     1 MM_FPPC
     0-0-0/w UBIN        r     1 MM_FREETHRESH              0-0-0/w UBIN        r     1 MM_HELD
     0-0-0/w SBIN        r     1 MM_RSVP                    0-0-0/w SBIN        r     1 MM_SPPC
     0-0-0/w PTR         r     1 S$CU$                      0-0-0/w UBIN        r     1 S_CUN
     0-0-0/w STRC        r     1 S_WSPTD(0:28)              0-0-0/w UBIN        r     1 UQ_MAXENQ

PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:35   
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/w STRC        r     1 B$MAP(0:1023)
     0-0-0/d STRC(576)   r     1 B$U                        0-0-0/w BIT         r     1 MAP(0:1023)
     0-0-0/w STRC        r     1 MAPB(0:7)                  0-0-0/w BIT         r     1 MAPX(0:1015)
     0-0-0/w STRC(288)   r     1 MM$CGQD
     0-0-0/h UBIN(18)    r     1 MM$IPHY_MAP(0:0)
     0-0-0/w STRC        r     1 MM$PPUT(0:0)


   Procedure MMK$MAKUSER requires 295 words for executable code.
   Procedure MMK$MAKUSER requires 16 words of local(AUTO) storage.

    No errors detected in file MMK$MAKE.:E05TSI    .
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:36   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:37   
          MINI XREF LISTING

B$DO.ECCINFO
       575**DCL       576--REDEF
B$IPHYMAP$
      6145**DCL      6556>>ASSIGN
B$JIT
      6173**DCL      6532--ASSIGN
B$JIT.CPFLAGS1.SLEAZE
      6272**DCL      6272--REDEF
B$JIT.ERR
      6178**DCL      6453<<ASSIGN
B$JIT.ERR.MID
      6179**DCL      6179--REDEF
B$JIT.JRESPEAK
      6340**DCL      6341--REDEF
B$JIT.MAXENQ
      6361**DCL      6529<<ASSIGN
B$JIT.ORIGINATOR_PORT.FROM_CR
      6359**DCL      6359--REDEF    6360--REDEF
B$JIT.PCC
      6337**DCL      6527<<ASSIGN   6579<<ASSIGN   6579>>ASSIGN
B$JIT.PCROS
      6337**DCL      6528<<ASSIGN
B$JIT.PPC
      6339**DCL      6525<<ASSIGN   6580<<ASSIGN   6580>>ASSIGN   6582>>ASSIGN
B$JIT.PTSIZ
      6342**DCL      6526<<ASSIGN   6581<<ASSIGN
B$JIT.TSLINE
      6357**DCL      6358--REDEF
B$JIT.USER
      6178**DCL      6505>>ASSIGN
B$JIT$
      6139**DCL      6173--IMP-PTR  6453>>ASSIGN   6532>>ASSIGN   6579>>ASSIGN   6579>>ASSIGN   6580>>ASSIGN
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:38   
      6580>>ASSIGN   6581>>ASSIGN   6582>>ASSIGN
B$MAP
        52**DCL      6495<<ASSIGN   6495>>ASSIGN   6496<<ASSIGN   6496>>ASSIGN   6497<<ASSIGN   6497>>ASSIGN
      6561<<ASSIGN   6561>>ASSIGN   6569<<ASSIGN   6569>>ASSIGN
B$MAP.CTRL
        57**DCL      6490<<ASSIGN   6499<<ASSIGN
B$MAP.RPN
        53**DCL      6512<<ASSIGN   6512>>ASSIGN   6513<<ASSIGN   6513>>ASSIGN   6514<<ASSIGN   6514>>ASSIGN
      6515<<ASSIGN   6515>>ASSIGN   6518<<ASSIGN   6519<<ASSIGN   6520<<ASSIGN   6521<<ASSIGN   6553>>ASSIGN
      6564>>ASSIGN   6565<<ASSIGN   6570<<ASSIGN   6570>>ASSIGN
B$MAP.SCTRL
        54**DCL        55--REDEF    6493<<ASSIGN
B$PPUT$
      6141**DCL      6503>>ASSIGN   6504>>ASSIGN   6505>>ASSIGN   6506>>ASSIGN   6506>>ASSIGN   6507>>ASSIGN
      6507>>ASSIGN   6508>>ASSIGN   6508>>ASSIGN   6557>>ASSIGN   6557>>ASSIGN   6558>>ASSIGN   6558>>ASSIGN
B$U.FLG.BIGPT
       478**DCL      6577<<ASSIGN
B$U.MISC
       554**DCL       555--REDEF
B$U.PCT
       538**DCL      6582<<ASSIGN
B$U.PT
       548**DCL      6576<<ASSIGN
B$UPT$
      6144**DCL      6553>>ASSIGN   6561>>ASSIGN   6561>>ASSIGN   6565>>ASSIGN   6568>>ASSIGN   6568>>ASSIGN
      6569>>ASSIGN   6569>>ASSIGN   6570>>ASSIGN   6570>>ASSIGN   6587>>ASSIGN   6588>>ASSIGN   6588>>ASSIGN
B$USER.MISC
       630**DCL       631--REDEF
B$WINDOW$
      6142**DCL      6152--IMP-PTR  6486>>ASSIGN   6487>>ASSIGN   6487>>ASSIGN   6490>>ASSIGN   6493>>ASSIGN
      6495>>ASSIGN   6495>>ASSIGN   6496>>ASSIGN   6496>>ASSIGN   6497>>ASSIGN   6497>>ASSIGN   6499>>ASSIGN
      6501>>ASSIGN   6512>>ASSIGN   6513>>ASSIGN   6514>>ASSIGN   6515>>ASSIGN   6518>>ASSIGN   6519>>ASSIGN
      6520>>ASSIGN   6521>>ASSIGN   6523<>CALL     6532>>ASSIGN
B$WSQ0PT$
      6143**DCL      6512>>ASSIGN   6513>>ASSIGN   6514>>ASSIGN   6515>>ASSIGN   6564>>ASSIGN
ERR
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:39   
      6137**DCL      6483<>CALL     6484<>CALL     6536<>CALL     6537<>CALL
FMC_CACHEPGCNT
      6148**DCL      6466>>ASSIGN
GET2
      6551**LABEL    6552--CALLALT
HFC$ASSOCCLR
      6165**DCL-ENT  6584--CALL
HFC$LOCK
      6129**DCL-ENT  6481--CALL
HFC$UNLOCK
      6129**DCL-ENT  6539--CALL
HJITPP
      6131**DCL         8--PROC     6507>>ASSIGN   6515>>ASSIGN   6521>>ASSIGN
HW_PTB_UNITS
       677**DCL      6572>>ASSIGN
HW_WSQ0PT
       678**DCL      6510>>IF       6554>>IF       6562>>IF
I
      6135**DCL      6464<<ASSIGN   6465>>IF       6465<<ASSIGN   6466<<ASSIGN   6466>>ASSIGN   6467>>IF
      6534<>CALL     6553<<ASSIGN   6556<<ASSIGN   6556>>ASSIGN   6557>>ASSIGN   6558>>ASSIGN   6589<>CALL
JITPP
      6130**DCL         8--PROC     6484<>CALL     6508>>ASSIGN   6513>>ASSIGN   6519>>ASSIGN
J_PLOCK
      6150**DCL      6481<>CALL     6539<>CALL
MAP
      6158**DCL      6568<<ASSIGN   6568>>ASSIGN
MAPB
      6152**DCL      6486<<ASSIGN   6587<<ASSIGN
MAPX
      6157**DCL      6487<<ASSIGN   6487>>ASSIGN   6588<<ASSIGN   6588>>ASSIGN
MAP_8
      6154**DCL      6486>>ASSIGN   6587>>ASSIGN
MM$CGQD.FPPC
      6379**DCL      6466>>ASSIGN
MM$DESC.BOUND
      1244**DCL      1245--REDEF
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:40   
MM$DESC.FLGS
      1245**DCL      1245--REDEF
MM$IPHY_MAP
       108**DCL      6556>>ASSIGN
MM$PPUT
      1231**DCL      6503<<ASSIGN   6506<<ASSIGN   6506>>ASSIGN   6507<<ASSIGN   6507>>ASSIGN   6508<<ASSIGN
      6508>>ASSIGN   6557<<ASSIGN   6557>>ASSIGN   6558<<ASSIGN   6558>>ASSIGN
MM$PPUT.USER
      1232**DCL      6504<<ASSIGN
MM$PPUT.USER#
      1233**DCL      1233--REDEF    6505<<ASSIGN
MMB$FPP
      6161**DCL-ENT  6589--CALL
MMB$GNPP
      6162**DCL-ENT  6552--CALL
MMB$GPP
      6160**DCL-ENT  6471--CALL
MMC$MAPXLAT
      6163**DCL-ENT  6523--CALL
MME$CVM
      6164**DCL-ENT  6483--CALL     6484--CALL     6536--CALL     6537--CALL
MMERR
      6425**DCL      6453>>ASSIGN
MM_AUTO
      1163**DCL      6466>>ASSIGN
MM_BYP$
      1164**DCL      1164--IMP-PTR
MM_CGQD$
      6147**DCL      6378--IMP-PTR  6466>>ASSIGN
MM_FPPC
      1161**DCL      6466>>ASSIGN
MM_FREETHRESH
      1301**DCL      6467>>IF
MM_HELD
      1167**DCL      6464>>ASSIGN
MM_RSVP
PL6.E3A0      #001=MMK$MAKUSER File=MMK$MAKE.:E05TSI                             WED 07/30/97 03:22 Page:41   
      1167**DCL      6464>>ASSIGN
MM_SPPC
      1162**DCL      6464>>ASSIGN
NEWJIT$
      6138**DCL      6501<<ASSIGN   6505>>ASSIGN   6525>>ASSIGN   6526>>ASSIGN   6527>>ASSIGN   6528>>ASSIGN
      6529>>ASSIGN   6532<<ASSIGN   6534<>CALL
OCI$MK_WR
      6166**DCL-ENT  6468--CALL
PPNO
      6136**DCL      6471<>CALL     6472>>IF       6483<>CALL     6503>>ASSIGN   6504>>ASSIGN   6505>>ASSIGN
      6506>>ASSIGN   6507>>ASSIGN   6508>>ASSIGN   6512>>ASSIGN   6518>>ASSIGN   6551<<ASSIGN   6552<>CALL
      6557>>ASSIGN   6558>>ASSIGN   6564<<ASSIGN   6564>>ASSIGN   6565>>ASSIGN   6572<<ASSIGN   6572>>ASSIGN
      6573>>ASSIGN   6576>>ASSIGN
ROPP
      6132**DCL         8--PROC     6506>>ASSIGN   6514>>ASSIGN   6520>>ASSIGN
S$CU$
      6146**DCL      6576>>ASSIGN   6577>>ASSIGN   6582>>ASSIGN
SSR$REG
      6168**DCL-ENT  6474--CALL
SSR$RUE
      6167**DCL-ENT  6535--CALL
S_CUN
      6149**DCL      6448>>IF
S_WSPTD.BLKNO
      2130**DCL      6573<<ASSIGN
S_WSPTD.NBLKS
      2130**DCL      6574<<ASSIGN   6575<<ASSIGN
TRY_AGAIN
      6467**LABEL    6475--GOTO
UQ_MAXENQ
      6151**DCL      6529>>ASSIGN
X66_MSTATIC
      6169**DCL-ENT  6534--CALL
