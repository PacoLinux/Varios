VERSION E05

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:1    
        1        1        /*M* PSD$RESRCE   Display monitor resource usage */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8
        9        9        PSD$RESRCE: PROC;
       10       10
       11       11        %INCLUDE CP_6;
       12       92        %INCLUDE PS_DATA_R;
       13     5388        %INCLUDE CP_6_SUBS;
       14     5928        %INCLUDE P_PMDAT_C;
       15     6048        %INCLUDE FM$GRAN;
       16     6117        %INCLUDE FM_CACHE_C;
       17     6183
       18     6184        %P_RESOURCE;
       19     6298
       20     6299    1   DCL RESOURCE_HEADING CHAR (0) CONSTANT INIT
       21     6300    1    ('%20-CP-6 monitor resource utilization');
       22     6301
       23     6302    1   DCL 1 PLEX_HEADER CONSTANT,
       24     6303    1          2 P1 CHAR(0) INIT('%/{Resource name} '),
       25     6304    1          2 P2 CHAR(0) INIT('%32-{  # in }  {---since system boot---}  {  Total  }%/'),
       26     6305    1          2 P3 CHAR(0) INIT('%32-{use now}  { (max) (min) (average) }  {available}%/');
       27     6306
       28     6307    1   DCL PLEX_ENTRY CHAR(0) CONSTANT
       29     6308    1    INIT ('%A %32-   %D %46-%D %52-%D %61-%D %72-%D');
       30     6309
       31     6310    1   DCL 1 CACHE_HDR CONSTANT,
       32     6311    1          2 P1 CHAR(0) INIT ('%2/%15-I/O cache activity (actions per minute)%2/'),
       33     6312    1          2 P2 CHAR(0) INIT (
              6312                   '%10-Attempted  Hits     Hits    Percent Attempted  Failed   Unused%/'),
       34     6313    1          2 P3 CHAR(0) INIT (
              6313                   '%10-  Gets     UC=0     UC>0      Hits     Puts     Puts     Pages%/');
       35     6314
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:2    
       36     6315    1   DCL 1 CACHE_FMT CONSTANT,
       37     6316    1          2 P1 CHAR(0) INIT('%A%8-%7(%9D%) {snap}'),
       38     6317    1          2 P2 CHAR(0) INIT('%/%8-%7(%9D%)  {all}'),
       39     6318    1          2 P3 CHAR(0) INIT ('%/');
       40     6319
       41     6320    1   DCL 1 CACHE_FMT_SNAP CONSTANT,
       42     6321    1          2 P2 CHAR(0) INIT('%A%8-%7(%9D%)  {all}');
       43     6322
       44     6323    1   DCL CACHE_OFFS(0:6) CONSTANT UBIN INIT(3,0,1,0,4,2,5);
       45     6324
       46     6325    1   DCL CACHE_SCALE(0:6) CONSTANT UBIN INIT(
       47     6326    1    RATE#, RATE#, RATE#, 0, RATE#, RATE#, ABS#);
       48     6327
       49     6328    1   DCL CACHE_TYPE_TITLE(0:%(%CACHETYPES-1+1)) CONSTANT CHAR(8) INIT(
       50     6329    1    'MAD     ','PAD     ','GP      ','FD      ','FIT     ','UL      ',
       51     6330    1    'INDEX   ','DATA    ','REL     ','CONSEC  ','ELSE    ','Total   ');
       52     6331
       53     6332    1   DCL MEMORY_HEADER CHAR(0) CONSTANT INIT
       54     6333    1    ('%20-CP-6 memory utilization%/');
       55     6334
       56     6335    1   DCL MEMORY_FMT CHAR (0) CONSTANT INIT
       57     6336    1    ('%A %50-%5+D');
       58     6337
       59     6338    1   DCL DASH_FMT CHAR (0) CONSTANT INIT ('%49--------');
       60     6339
       61     6340    1   DCL SKIP_1 CHAR (0) CONSTANT INIT (' ');
       62     6341
       63     6342    1   DCL I UBIN;
       64     6343    1   DCL J UBIN;
       65     6344    1   DCL MAXPROCS UBIN;
       66     6345    1   DCL FMC_STATS$ PTR;
       67     6346    1   DCL FMC_OLD_STATS$ PTR;
       68     6347    1   DCL P_RESOURCE$ PTR;
       69     6348
       70     6349    1   DCL PCORE SBIN;
       71     6350    1   DCL MONSIZE SBIN;
       72     6351    1   DCL RHELD SBIN;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:3    
       73     6352    1   DCL TOTSIZE SBIN;
       74     6353    1   DCL AVAILPGS SBIN;
       75     6354    1   DCL IOCPERM SBIN;
       76     6355    1   DCL REMSPPC SBIN;
       77     6356    1   DCL REMAINSIZE SBIN;
       78     6357    1   DCL FPPC SBIN;
       79     6358    1   DCL CURAVAIL SBIN;
       80     6359    1   DCL UNACCOUNTED SBIN;
       81     6360        %INCLUDE XUF_ENTRY;
       82     6368    1   DCL PSL$CHOMP ENTRY (5);
       83     6369    1   DCL PSL$LOCATE ENTRY (3);
       84     6370    1   DCL PSD$EJECT ENTRY (1);
       85     6371
       86     6372    1   DCL RPROC CHAR (0) CONSTANT
       87     6373    1    INIT ('IBEX,DELTA,LOGON,:SHARED_SYSTEM');
       88     6374
       89     6375        %SUB SYMREF="  ";
       90     6376
       91     6377        %FMC$STATS;
       92     6386
       93     6387        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:4    
       94     6388    1   DISP_RES: PROC (TITLE, RESOURCE);
       95     6389
       96     6390    2   DCL TITLE CHAR (50);
       97     6391
       98     6392    2   DCL
       99     6393         %RESOURCE (LEVEL=1, NAME=RESOURCE, ARRAY="/* Fakeout! */", LAST=YES);
      100     6406
      101     6407    2   DCL TITLE_LEN UBIN;
      102     6408    2   DCL RESOURCE_MIN UBIN;
      103     6409
      104     6410    2      IF RESOURCE.MIN < RESOURCE.PEAK
      105     6411    2      THEN RESOURCE_MIN = RESOURCE.MIN;
      106     6412    2      ELSE RESOURCE_MIN = RESOURCE.PEAK;
      107     6413
      108     6414    2      CALL INDEX (TITLE_LEN, '.', TITLE);
      109     6415
      110     6416    2      CALL X$WRITE (PS_FDS, VECTOR(PLEX_ENTRY),
      111     6417    2        VECTOR(SUBSTR(TITLE, 0, TITLE_LEN)), VECTOR(RESOURCE.CURRENT),
      112     6418    2        VECTOR(RESOURCE.PEAK), VECTOR(RESOURCE_MIN), VECTOR(RESOURCE.AVERAGE),
      113     6419    2        VECTOR(RESOURCE.TOTAL));
      114     6420
      115     6421    2      RETURN;
      116     6422
      117     6423    2   END DISP_RES;
      118     6424
      119     6425        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:5    
      120     6426
      121     6427    1   DISP_CACHE: PROC (NUMBER, OLD_NUMBER);
      122     6428
      123     6429        %EQU CACHEITEMS = 6;
      124     6430
      125     6431    2   DCL NUMBER (0:%(CACHETYPES*CACHEITEMS-1)) SBIN;
      126     6432    2   DCL OLD_NUMBER (0:%(CACHETYPES*CACHEITEMS-1)) SBIN;
      127     6433    2   DCL OULD_NUMBER (0:%(CACHETYPES*CACHEITEMS-1)) SBIN;
      128     6434
      129     6435    2   DCL ALL_VAL(0:%(CACHETYPES*(CACHEITEMS+1)-1)) UBIN;
      130     6436    2   DCL ALL_TOTAL(0:%CACHEITEMS) UBIN;
      131     6437    2   DCL SNAP_VAL(0:%(CACHETYPES*(CACHEITEMS+1)-1)) UBIN;
      132     6438    2   DCL SNAP_TOTAL(0:%CACHEITEMS) UBIN;
      133     6439    2   DCL OLD_TOTAL(0:%CACHEITEMS) SBIN;
      134     6440    2   DCL NEW_TOTAL(0:%CACHEITEMS) SBIN;
      135     6441    2   DCL PER_ITEM(0:%CACHEITEMS) BASED UBIN;
      136     6442
      137     6443    2   DCL ITEM SBIN;
      138     6444    2   DCL ITYPE SBIN;
      139     6445    2   DCL FROM SBIN;
      140     6446    2   DCL TOO SBIN;
      141     6447
      142     6448
      143     6449    2      IF FMC_OLD_STATS$ = ADDR(NIL)
      144     6450    3      THEN DO;
      145     6451    3         OULD_NUMBER = '0'B;
      146     6452    3         CALL PSD$EJECT(18);
      147     6453    3      END; ELSE DO;
      148     6454    3         OULD_NUMBER = OLD_NUMBER;
      149     6455    3         CALL PSD$EJECT(30);
      150     6456    3      END;
      151     6457
      152     6458    2      CALL X$WRITE (PS_FDS, VECTOR(CACHE_HDR));
      153     6459
      154     6460    2      OLD_TOTAL='0'B;
      155     6461    2      NEW_TOTAL='0'B;
      156     6462
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:6    
      157     6463    3      DO ITEM=0 TO %CACHEITEMS;
      158     6464    4         DO ITYPE=0 TO %(%CACHETYPES-1);
      159     6465
      160     6466    4            FROM = ITYPE + (%CACHETYPES * CACHE_OFFS(ITEM));
      161     6467    4            TOO = (ITYPE * %(CACHEITEMS+1)) + ITEM;
      162     6468
      163     6469    5            DO CASE(ITEM);
      164     6470    5            CASE(3);                       /* Percent Hits                       */
      165     6471
      166     6472    5               CALL PERCENT (ALL_VAL(TOO),
      167     6473    5                 NUMBER(FROM)+NUMBER(FROM+%CACHETYPES),
      168     6474    5                 NUMBER(FROM+%(CACHETYPES*3)));
      169     6475    5               CALL PERCENT (SNAP_VAL(TOO),
      170     6476    5                 NUMBER(FROM)+NUMBER(FROM+%CACHETYPES) -
      171     6477    5                 OULD_NUMBER(FROM)-OULD_NUMBER(FROM+%CACHETYPES),
      172     6478    5                 NUMBER(FROM+%(CACHETYPES*3)) -
      173     6479    5                 OULD_NUMBER(FROM+%(CACHETYPES*3)));
      174     6480
      175     6481    5            CASE (ELSE);
      176     6482
      177     6483    5               CALL PSL$CHOMP (OULD_NUMBER(FROM),
      178     6484    5                 NUMBER(FROM),
      179     6485    5                 CACHE_SCALE(ITEM),
      180     6486    5                 ALL_VAL(TOO),
      181     6487    5                 SNAP_VAL(TOO));
      182     6488
      183     6489    5               OLD_TOTAL(ITEM) = OLD_TOTAL(ITEM) +
      184     6490    5                 OULD_NUMBER(FROM);
      185     6491    5               NEW_TOTAL(ITEM) = NEW_TOTAL(ITEM) +
      186     6492    5                 NUMBER(FROM);
      187     6493    5            END /* CASE */;
      188     6494
      189     6495    4         END /* DO ITYPE */;
      190     6496
      191     6497    4         DO CASE(ITEM);
      192     6498    4         CASE(3);                          /* Percent Hits                       */
      193     6499
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:7    
      194     6500    4            CALL PERCENT (ALL_TOTAL(ITEM),
      195     6501    4              NEW_TOTAL(1)+NEW_TOTAL(2),
      196     6502    4              NEW_TOTAL(0));
      197     6503    4            CALL PERCENT (SNAP_TOTAL(ITEM),
      198     6504    4              NEW_TOTAL(1)+NEW_TOTAL(2) -
      199     6505    4              OLD_TOTAL(1)-OLD_TOTAL(2),
      200     6506    4              NEW_TOTAL(0) -
      201     6507    4              OLD_TOTAL(0));
      202     6508
      203     6509    4         CASE (ELSE);
      204     6510    4            CALL PSL$CHOMP (OLD_TOTAL(ITEM),
      205     6511    4              NEW_TOTAL(ITEM),
      206     6512    4              CACHE_SCALE(ITEM),
      207     6513    4              ALL_TOTAL(ITEM),
      208     6514    4              SNAP_TOTAL(ITEM));
      209     6515
      210     6516    4         END /* CASE */;
      211     6517
      212     6518    3      END /* DO ITEM */;
      213     6519
      214     6520    3      DO ITYPE = 0 TO %(%CACHETYPES-1);
      215     6521
      216     6522    3         IF FMC_OLD_STATS$ = ADDR(NIL)
      217     6523    3         THEN
      218     6524    3            CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT_SNAP),
      219     6525    3              VECTOR(CACHE_TYPE_TITLE(ITYPE)),
      220     6526    3              VECTOR(ADDR(SNAP_VAL(ITYPE*%(CACHEITEMS+1)))->PER_ITEM));
      221     6527    4         ELSE DO ;
      222     6528    4            CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT),
      223     6529    4              VECTOR(CACHE_TYPE_TITLE(ITYPE)),
      224     6530    4              VECTOR(ADDR(SNAP_VAL(ITYPE*%(CACHEITEMS+1)))->PER_ITEM),
      225     6531    4              VECTOR(ADDR(ALL_VAL(ITYPE*%(CACHEITEMS+1)))->PER_ITEM));
      226     6532    4            CALL X$WRITE ( PS_FDS, VECTOR(SKIP_1) ) ;
      227     6533    4         END ;
      228     6534
      229     6535    3      END /* DO ITYPE */;
      230     6536
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:8    
      231     6537    2      IF FMC_OLD_STATS$ = ADDR(NIL)
      232     6538    2      THEN
      233     6539    2         CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT_SNAP),
      234     6540    2           VECTOR(CACHE_TYPE_TITLE(%CACHETYPES)),
      235     6541    2           VECTOR(SNAP_TOTAL));
      236     6542    3      ELSE DO ;
      237     6543    3         CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT),
      238     6544    3           VECTOR(CACHE_TYPE_TITLE(%CACHETYPES)),
      239     6545    3           VECTOR(SNAP_TOTAL),
      240     6546    3           VECTOR(ALL_TOTAL));
      241     6547
      242     6548    3         CALL X$WRITE ( PS_FDS, VECTOR(SKIP_1) ) ;
      243     6549    3      END ;
      244     6550
      245     6551    2      RETURN;
      246     6552
      247     6553    2   END DISP_CACHE;
      248     6554
      249     6555        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:9    
      250     6556    1   PERCENT: PROC( RESULT, ITEM, DIVISOR);
      251     6557
      252     6558    2   DCL RESULT SBIN;
      253     6559    2   DCL ITEM SBIN;
      254     6560    2   DCL DIVISOR SBIN;
      255     6561    2      IF DIVISOR=0
      256     6562    2      THEN RESULT=0;
      257     6563    2      ELSE IF DIVISOR < 343597383
      258     6564    2         THEN RESULT = (100 * ITEM) / DIVISOR;
      259     6565    2         ELSE RESULT = ITEM / (DIVISOR / 100);
      260     6566
      261     6567    2   END PERCENT;
      262     6568        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:10   
      263     6569    1   DISP_MEM: PROC (TITLE, N);
      264     6570
      265     6571    2   DCL TITLE CHAR (50);
      266     6572    2   DCL N SBIN;
      267     6573
      268     6574    2   DCL TITLE_LEN UBIN;
      269     6575
      270     6576    2      IF N = 0
      271     6577    2      THEN
      272     6578    2   /*    RETURN*/;
      273     6579
      274     6580    2      CALL INDEX (TITLE_LEN, '.', TITLE);
      275     6581
      276     6582    2      CALL X$WRITE (PS_FDS, VECTOR(MEMORY_FMT),
      277     6583    2        VECTOR(SUBSTR(TITLE, 0, TITLE_LEN)), VECTOR(N));
      278     6584
      279     6585    2      RETURN;
      280     6586
      281     6587    2   END DISP_MEM;
      282     6588
      283     6589        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:11   
      284     6590
      285     6591    1      CALL PSL$LOCATE (P_RESOURCE#, P_RESOURCE$);
      286     6592    1      CALL PSL$LOCATE (FMC_STATS#, FMC_STATS$, FMC_OLD_STATS$);
      287     6593
      288     6594    1      P_RESOURCE$ = ADDR(P_RESOURCE$ -> BLOCK.DATA);
      289     6595    1      FMC_STATS$ = ADDR(FMC_STATS$ -> BLOCK.DATA);
      290     6596
      291     6597    1      IF FMC_OLD_STATS$ ~= ADDR(NIL)
      292     6598    1      THEN
      293     6599    1         FMC_OLD_STATS$ = ADDR(FMC_OLD_STATS$ -> BLOCK.DATA);
      294     6600
      295     6601
      296     6602    1      CALL PSD$EJECT(10);
      297     6603
      298     6604    1      CALL X$WRITE (PS_FDS, VECTOR(RESOURCE_HEADING));
      299     6605
      300     6606    1      CALL X$WRITE (PS_FDS, VECTOR(PLEX_HEADER));
      301     6607
      302     6608    1      CALL DISP_RES ('IOQ packets.', P_RESOURCE.RES.NREQCT);
      303     6609    1      CALL DISP_RES ('IOS packets.', P_RESOURCE.RES.NIREQCT);
      304     6610    1      CALL DISP_RES ('I/O cache entries.', P_RESOURCE.RES.IOCACHE);
      305     6611    1      CALL DISP_RES ('Enqueue/Dequeue data blocks.', P_RESOURCE.RES.ENQ);
      306     6612    1      CALL DISP_RES ('Scheduler Do-list entries.', P_RESOURCE.RES.DOLISTS);
      307     6613
      308     6614    1      CALL DISP_CACHE (FMC_STATS$ -> FMC$STATS,
      309     6615    1        FMC_OLD_STATS$ -> FMC$STATS);
      310     6616
      311     6617
      312     6618
      313     6619    1      CALL PSD$EJECT(35);
      314     6620
      315     6621    1      CALL X$WRITE (PS_FDS, VECTOR(MEMORY_HEADER));
      316     6622
      317     6623    1      PCORE = P_RESOURCE.PAGES.PCORE;
      318     6624
      319     6625    1      MONSIZE = P_RESOURCE.PAGES.MONSIZE;
      320     6626
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:12   
      321     6627
      322     6628    1      RHELD = MAXIMUM(P_RESOURCE.PAGES.RSVP - P_RESOURCE.PAGES.SPPC , 0)
      323     6629    1        + P_RESOURCE.PAGES.HELD;
      324     6630
      325     6631    1      TOTSIZE = P_RESOURCE.PAGES.AARDSIZE + P_RESOURCE.PAGES.XDELTASIZE +
      326     6632    1        MONSIZE + P_RESOURCE.PAGES.CONTEXT + P_RESOURCE.PAGES.MONDSSIZE +
      327     6633    1        P_RESOURCE.PAGES.TIGRSIZE + P_RESOURCE.PAGES.NCQPGS +
      328     6634    1        P_RESOURCE.PAGES.CGQPGS + RHELD + P_RESOURCE.PAGES.SPPC +
      329     6635    1        P_RESOURCE.PAGES.GHOSTSIZE +
      330     6636    1        P_RESOURCE.PAGES.RPROCSIZE + P_RESOURCE.PAGES.PROCSIZE;
      331     6637
      332     6638    1      PCORE = PCORE + 1;
      333     6639
      334     6640    1      AVAILPGS = PCORE - TOTSIZE;
      335     6641
      336     6642    1      FPPC = P_RESOURCE.PAGES.FPPC - RHELD;
      337     6643
      338     6644    1      CURAVAIL = FPPC + P_RESOURCE.PAGES.AUTOAVAIL +
      339     6645    1        P_RESOURCE.PAGES.SHAREDSAVAIL;
      340     6646
      341     6647    1      UNACCOUNTED = AVAILPGS - (P_RESOURCE.PAGES.USERSIZE + P_RESOURCE.PAGES.SHAREDSIZE
              6647               +
      342     6648    1        P_RESOURCE.PAGES.AUTOINUSE + P_RESOURCE.PAGES.SHAREDSUSE + CURAVAIL +
      343     6649    1        P_RESOURCE.PAGES.SUSPECTS + P_RESOURCE.PAGES.IN_TEST +
      344     6650    1        P_RESOURCE.PAGES.BPPC + P_RESOURCE.PAGES.IOCC);
      345     6651
      346     6652    1      CALL DISP_MEM ('AARDVARK and RECOVERY.', P_RESOURCE.PAGES.AARDSIZE);
      347     6653    1      CALL DISP_MEM ('XDELTA and monitor debug schema.', P_RESOURCE.PAGES.XDELTASIZE);
      348     6654    1      CALL DISP_MEM ('Monitor procedure and static data.', MONSIZE);
      349     6655    1      CALL DISP_MEM ('Monitor context (JITs, HJITs, PPUT, page tables).',P_RESOURCE.
              6655               PAGES.CONTEXT);
      350     6656    1      CALL DISP_MEM ('Monitor dynamic data segments.', P_RESOURCE.PAGES.MONDSSIZE);
      351     6657    1      CALL DISP_MEM ('TIGR-built tables.', P_RESOURCE.PAGES.TIGRSIZE);
      352     6658    1      CALL DISP_MEM ('Communications WSQs.', P_RESOURCE.PAGES.NCQPGS);
      353     6659    1      CALL DISP_MEM ('Comgroup queue.', P_RESOURCE.PAGES.CGQPGS);
      354     6660    1      CALL DISP_MEM ('Total pages held back for monitor use.', RHELD);
      355     6661    1      CALL DISP_MEM ('Stolen pages.', P_RESOURCE.PAGES.SPPC);
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:13   
      356     6662    1      CALL DISP_MEM ('Resident system ghosts.', P_RESOURCE.PAGES.GHOSTSIZE);
      357     6663    1      CALL DISP_MEM ('Required processors (IBEX, DELTA, LOGON).', P_RESOURCE.PAGES.
              6663               RPROCSIZE);
      358     6664    1      CALL DISP_MEM ('All other special shared (resident) processors.', P_RESOURCE.
              6664               PAGES.PROCSIZE);
      359     6665
      360     6666    1      CALL X$WRITE (PS_FDS, VECTOR(DASH_FMT));
      361     6667
      362     6668    1      CALL DISP_MEM ('Total dedicated memory.', TOTSIZE);
      363     6669
      364     6670    1      CALL X$WRITE (PS_FDS, VECTOR(SKIP_1));
      365     6671
      366     6672    1      CALL DISP_MEM ('Available to users.', AVAILPGS);
      367     6673    1      CALL DISP_MEM ('Currently allocated to users.', P_RESOURCE.PAGES.USERSIZE);
      368     6674        /*DELETED
      369     6675           CALL DISP_MEM ('Standard shared run units.',P_RESOURCE.PAGES.SHAREDSIZE);
      370     6676        DETELED*/
      371     6677    1      CALL DISP_MEM ('Automatically shared run units in use.',P_RESOURCE.PAGES.
              6677               AUTOINUSE);
      372     6678    1      CALL DISP_MEM ('Shared data segments in use.',P_RESOURCE.PAGES.SHAREDSUSE);
      373     6679    1      CALL DISP_MEM ('Free pages.', FPPC);
      374     6680    1      CALL DISP_MEM ('Automatically shared run units not in use.',P_RESOURCE.PAGES.
              6680               AUTOAVAIL);
      375     6681        /*DELETED
      376     6682           CALL DISP_MEM ('Shared data segments not in use.',P_RESOURCE.PAGES.SHAREDSAVAIL);
      377     6683        DETELED*/
      378     6684    1      CALL DISP_MEM ('I/O cache pages (Use Count = 0).',P_RESOURCE.PAGES.IOCM);
              6684               /*Change to IOCU(unused)*/
      379     6685    1      CALL DISP_MEM ('Total pages currently available.',PS_COLLECT.AVAIL_MEM);
      380     6686    1      CALL DISP_MEM ('Suspected bad physical pages.', P_RESOURCE.PAGES.SUSPECTS);
      381     6687    1      CALL DISP_MEM ('Physical pages being tested.', P_RESOURCE.PAGES.IN_TEST);
      382     6688    1      CALL DISP_MEM ('Confirmed bad physical pages.', P_RESOURCE.PAGES.BPPC);
      383     6689    1      CALL DISP_MEM ('I/O cache pages.', P_RESOURCE.PAGES.IOCC);
      384     6690    1      CALL DISP_MEM ('Number of pages not accounted for.',UNACCOUNTED);
      385     6691    1      CALL DISP_MEM ('Total physical pages in system.', PCORE);
      386     6692
      387     6693
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:14   
      388     6694    1      RETURN;
      389     6695
      390     6696    1   END PSD$RESRCE;

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:15   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$RESRCE.

   Procedure PSD$RESRCE requires 776 words for executable code.
   Procedure PSD$RESRCE requires 322 words of local(AUTO) storage.

    No errors detected in file PSD$RESRCE.:E05TSI    .

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:16   

 Object Unit name= PSD$RESRCE                                 File name= PSD$RESRCE.:E05TOU
 UTS= JUL 30 '97 04:33:09.60 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   DCB   even  none     0      0  M$DO
    3   DCB   even  none     0      0  M$SI
    4   DCB   even  none     0      0  F$LOG
    5   DCB   even  none     0      0  M$ME
    6   DCB   even  none     0      0  M$HLPCG
    7  RtLbCm even  none    30     36  PS_FDS
    8  RtLbCm even  none    32     40  PS_SELECT_RPN
    9  RtLbCm even  none    17     21  PS_STATS_RPN
   10  RtLbCm even  none    34     42  PS_STATS_BUCKET
   11  RoData even  UTS    412    634  PSD$RESRCE
   12   Proc  even  none   776   1410  PSD$RESRCE
   13  RoData even  none    96    140  PSD$RESRCE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        0  PSD$RESRCE
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:17   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 PSL$LOCATE
         yes           Std       1 PSD$EJECT
         yes           Std      22 X$WRITE
         yes           Std       5 PSL$CHOMP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  M$LO                                  M$DO
     M$SI                                  F$LOG                                 M$ME
     M$HLPCG                               PS_BUFFER                             PS_COLLECT
     PS_STATS$                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:18   


        1        1        /*M* PSD$RESRCE   Display monitor resource usage */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*     PLM=3,SQB=Y,AND=Y,ENI=0,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8
        9        9        PSD$RESRCE: PROC;

      9 12 000000   000000 700200 xent  PSD$RESRCE   TSX0  ! X66_AUTO_0
        12 000001   000502 000000                    ZERO    322,0
        12 000002   000671 710000 12                 TRA     s:6591

       10       10
       11       11        %INCLUDE CP_6;
       12       92        %INCLUDE PS_DATA_R;
       13     5388        %INCLUDE CP_6_SUBS;
       14     5928        %INCLUDE P_PMDAT_C;
       15     6048        %INCLUDE FM$GRAN;
       16     6117        %INCLUDE FM_CACHE_C;
       17     6183
       18     6184        %P_RESOURCE;
       19     6298
       20     6299    1   DCL RESOURCE_HEADING CHAR (0) CONSTANT INIT
       21     6300    1    ('%20-CP-6 monitor resource utilization');
       22     6301
       23     6302    1   DCL 1 PLEX_HEADER CONSTANT,
       24     6303    1          2 P1 CHAR(0) INIT('%/{Resource name} '),
       25     6304    1          2 P2 CHAR(0) INIT('%32-{  # in }  {---since system boot---}  {  Total }%/'),
       26     6305    1          2 P3 CHAR(0) INIT('%32-{use now}  { (max) (min) (average) } {available}%/');
       27     6306
       28     6307    1   DCL PLEX_ENTRY CHAR(0) CONSTANT
       29     6308    1    INIT ('%A %32-   %D %46-%D %52-%D %61-%D %72-%D');
       30     6309
       31     6310    1   DCL 1 CACHE_HDR CONSTANT,
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:19   
       32     6311    1          2 P1 CHAR(0) INIT ('%2/%15-I/O cache activity (actions per minute)%2/'),
       33     6312    1          2 P2 CHAR(0) INIT (
              6312                   '%10-Attempted  Hits     Hits    Percent Attempted  Failed   Unused%/'),
       34     6313    1          2 P3 CHAR(0) INIT (
              6313                   '%10-  Gets     UC=0     UC>0      Hits     Puts     Puts     Pages%/');
       35     6314
       36     6315    1   DCL 1 CACHE_FMT CONSTANT,
       37     6316    1          2 P1 CHAR(0) INIT('%A%8-%7(%9D%) {snap}'),
       38     6317    1          2 P2 CHAR(0) INIT('%/%8-%7(%9D%)  {all}'),
       39     6318    1          2 P3 CHAR(0) INIT ('%/');
       40     6319
       41     6320    1   DCL 1 CACHE_FMT_SNAP CONSTANT,
       42     6321    1          2 P2 CHAR(0) INIT('%A%8-%7(%9D%)  {all}');
       43     6322
       44     6323    1   DCL CACHE_OFFS(0:6) CONSTANT UBIN INIT(3,0,1,0,4,2,5);
       45     6324
       46     6325    1   DCL CACHE_SCALE(0:6) CONSTANT UBIN INIT(
       47     6326    1    RATE#, RATE#, RATE#, 0, RATE#, RATE#, ABS#);
       48     6327
       49     6328    1   DCL CACHE_TYPE_TITLE(0:%(%CACHETYPES-1+1)) CONSTANT CHAR(8) INIT(
       50     6329    1    'MAD     ','PAD     ','GP      ','FD      ','FIT     ','UL      ',
       51     6330    1    'INDEX   ','DATA    ','REL     ','CONSEC  ','ELSE    ','Total   ');
       52     6331
       53     6332    1   DCL MEMORY_HEADER CHAR(0) CONSTANT INIT
       54     6333    1    ('%20-CP-6 memory utilization%/');
       55     6334
       56     6335    1   DCL MEMORY_FMT CHAR (0) CONSTANT INIT
       57     6336    1    ('%A %50-%5+D');
       58     6337
       59     6338    1   DCL DASH_FMT CHAR (0) CONSTANT INIT ('%49--------');
       60     6339
       61     6340    1   DCL SKIP_1 CHAR (0) CONSTANT INIT (' ');
       62     6341
       63     6342    1   DCL I UBIN;
       64     6343    1   DCL J UBIN;
       65     6344    1   DCL MAXPROCS UBIN;
       66     6345    1   DCL FMC_STATS$ PTR;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:20   
       67     6346    1   DCL FMC_OLD_STATS$ PTR;
       68     6347    1   DCL P_RESOURCE$ PTR;
       69     6348
       70     6349    1   DCL PCORE SBIN;
       71     6350    1   DCL MONSIZE SBIN;
       72     6351    1   DCL RHELD SBIN;
       73     6352    1   DCL TOTSIZE SBIN;
       74     6353    1   DCL AVAILPGS SBIN;
       75     6354    1   DCL IOCPERM SBIN;
       76     6355    1   DCL REMSPPC SBIN;
       77     6356    1   DCL REMAINSIZE SBIN;
       78     6357    1   DCL FPPC SBIN;
       79     6358    1   DCL CURAVAIL SBIN;
       80     6359    1   DCL UNACCOUNTED SBIN;
       81     6360        %INCLUDE XUF_ENTRY;
       82     6368    1   DCL PSL$CHOMP ENTRY (5);
       83     6369    1   DCL PSL$LOCATE ENTRY (3);
       84     6370    1   DCL PSD$EJECT ENTRY (1);
       85     6371
       86     6372    1   DCL RPROC CHAR (0) CONSTANT
       87     6373    1    INIT ('IBEX,DELTA,LOGON,:SHARED_SYSTEM');
       88     6374
       89     6375        %SUB SYMREF="  ";
       90     6376
       91     6377        %FMC$STATS;
       92     6386
       93     6387        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:21   
       94     6388    1   DISP_RES: PROC (TITLE, RESOURCE);

   6388 12 000003   200026 741300       DISP_RES     STX1  ! UNACCOUNTED+2,,AUTO

       95     6389
       96     6390    2   DCL TITLE CHAR (50);
       97     6391
       98     6392    2   DCL
       99     6393         %RESOURCE (LEVEL=1, NAME=RESOURCE, ARRAY="/* Fakeout! */", LAST=YES);
      100     6406
      101     6407    2   DCL TITLE_LEN UBIN;
      102     6408    2   DCL RESOURCE_MIN UBIN;
      103     6409
      104     6410    2      IF RESOURCE.MIN < RESOURCE.PEAK

   6410 12 000004   200030 470500                    LDP0    @RESOURCE,,AUTO
        12 000005   000002 236100                    LDQ     2,,PR0
        12 000006   000001 116100                    CMPQ    1,,PR0
        12 000007   000012 603000 12                 TRC     s:6412

      105     6411    2      THEN RESOURCE_MIN = RESOURCE.MIN;

   6411 12 000010   200032 756100                    STQ     RESOURCE_MIN,,AUTO
        12 000011   000014 710000 12                 TRA     s:6414

      106     6412    2      ELSE RESOURCE_MIN = RESOURCE.PEAK;

   6412 12 000012   000001 235100                    LDA     1,,PR0
        12 000013   200032 755100                    STA     RESOURCE_MIN,,AUTO

      107     6413
      108     6414    2      CALL INDEX (TITLE_LEN, '.', TITLE);

   6414 12 000014   200027 471500                    LDP1    @TITLE,,AUTO
        12 000015   000000 124500                    SCM     mask='000'O
        12 000016   100000 000062                    ADSC9   0,,PR1                   cn=0,n=50
        12 000017   000000 000001 13                 ADSC9   0                        cn=0,n=1
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:22   
        12 000020   200031 000100                    ARG     TITLE_LEN,,AUTO

      109     6415
      110     6416    2      CALL X$WRITE (PS_FDS, VECTOR(PLEX_ENTRY),
      111     6417    2        VECTOR(SUBSTR(TITLE, 0, TITLE_LEN)), VECTOR(RESOURCE.CURRENT),
      112     6418    2        VECTOR(RESOURCE.PEAK), VECTOR(RESOURCE_MIN), VECTOR(RESOURCE.AVERAGE),
      113     6419    2        VECTOR(RESOURCE.TOTAL));

   6419 12 000021   200031 235100                    LDA     TITLE_LEN,,AUTO
        12 000022   000020 735000                    ALS     16
        12 000023   000140 135007                    SBLA    96,DL
        12 000024   200027 236100                    LDQ     @TITLE,,AUTO
        12 000025   200432 757100                    STAQ    @DIVISOR+1,,AUTO
        12 000026   777640 235007                    LDA     -96,DL
        12 000027   200030 236100                    LDQ     @RESOURCE,,AUTO
        12 000030   200434 757100                    STAQ    @DIVISOR+3,,AUTO
        12 000031   777640 235007                    LDA     -96,DL
        12 000032   200030 236100                    LDQ     @RESOURCE,,AUTO
        12 000033   000001 036003                    ADLQ    1,DU
        12 000034   200436 757100                    STAQ    @DIVISOR+5,,AUTO
        12 000035   777640 235007                    LDA     -96,DL
        12 000036   200440 452500                    STP2    @DIVISOR+7,,AUTO
        12 000037   200440 236100                    LDQ     @DIVISOR+7,,AUTO
        12 000040   000032 036003                    ADLQ    26,DU
        12 000041   200442 757100                    STAQ    @DIVISOR+9,,AUTO
        12 000042   777640 235007                    LDA     -96,DL
        12 000043   200030 236100                    LDQ     @RESOURCE,,AUTO
        12 000044   000004 036003                    ADLQ    4,DU
        12 000045   200444 757100                    STAQ    @DIVISOR+11,,AUTO
        12 000046   777640 235007                    LDA     -96,DL
        12 000047   200030 236100                    LDQ     @RESOURCE,,AUTO
        12 000050   000005 036003                    ADLQ    5,DU
        12 000051   200450 757100                    STAQ    @DIVISOR+15,,AUTO
        12 000052   200432 237100                    LDAQ    @DIVISOR+1,,AUTO
        12 000053   200446 757100                    STAQ    @DIVISOR+13,,AUTO
        12 000054   200434 237100                    LDAQ    @DIVISOR+3,,AUTO
        12 000055   200452 757100                    STAQ    @DIVISOR+17,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:23   
        12 000056   200436 237100                    LDAQ    @DIVISOR+5,,AUTO
        12 000057   200454 757100                    STAQ    @DIVISOR+19,,AUTO
        12 000060   200442 237100                    LDAQ    @DIVISOR+9,,AUTO
        12 000061   200456 757100                    STAQ    @DIVISOR+21,,AUTO
        12 000062   200444 237100                    LDAQ    @DIVISOR+11,,AUTO
        12 000063   200460 757100                    STAQ    @DIVISOR+23,,AUTO
        12 000064   200450 237100                    LDAQ    @DIVISOR+15,,AUTO
        12 000065   200462 757100                    STAQ    @DIVISOR+25,,AUTO
        12 000066   200462 633500                    EPPR3   @DIVISOR+25,,AUTO
        12 000067   200473 453500                    STP3    @DIVISOR+34,,AUTO
        12 000070   200460 634500                    EPPR4   @DIVISOR+23,,AUTO
        12 000071   200472 454500                    STP4    @DIVISOR+33,,AUTO
        12 000072   200456 635500                    EPPR5   @DIVISOR+21,,AUTO
        12 000073   200471 455500                    STP5    @DIVISOR+32,,AUTO
        12 000074   200454 636500                    EPPR6   @DIVISOR+19,,AUTO
        12 000075   200470 456500                    STP6    @DIVISOR+31,,AUTO
        12 000076   200452 637500                    EPPR7   @DIVISOR+17,,AUTO
        12 000077   200467 457500                    STP7    @DIVISOR+30,,AUTO
        12 000100   200446 630500                    EPPR0   @DIVISOR+13,,AUTO
        12 000101   200466 450500                    STP0    @DIVISOR+29,,AUTO
        12 000102   000004 237000 13                 LDAQ    4
        12 000103   200464 757100                    STAQ    @DIVISOR+27,,AUTO
        12 000104   200464 630500                    EPPR0   @DIVISOR+27,,AUTO
        12 000105   000026 631400 xsym               EPPR1   B_VECTNIL+22
        12 000106   000000 701000 xent               TSX1    X$WRITE
        12 000107   000000 011000                    NOP     0

      114     6420
      115     6421    2      RETURN;

   6421 12 000110   200026 221300                    LDX1  ! UNACCOUNTED+2,,AUTO
        12 000111   000001 702211                    TSX2  ! 1,X1

      116     6422
      117     6423    2   END DISP_RES;
      118     6424
      119     6425        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:24   
      120     6426
      121     6427    1   DISP_CACHE: PROC (NUMBER, OLD_NUMBER);

   6427 12 000112   200026 741300       DISP_CACHE   STX1  ! UNACCOUNTED+2,,AUTO

      122     6428
      123     6429        %EQU CACHEITEMS = 6;
      124     6430
      125     6431    2   DCL NUMBER (0:%(CACHETYPES*CACHEITEMS-1)) SBIN;
      126     6432    2   DCL OLD_NUMBER (0:%(CACHETYPES*CACHEITEMS-1)) SBIN;
      127     6433    2   DCL OULD_NUMBER (0:%(CACHETYPES*CACHEITEMS-1)) SBIN;
      128     6434
      129     6435    2   DCL ALL_VAL(0:%(CACHETYPES*(CACHEITEMS+1)-1)) UBIN;
      130     6436    2   DCL ALL_TOTAL(0:%CACHEITEMS) UBIN;
      131     6437    2   DCL SNAP_VAL(0:%(CACHETYPES*(CACHEITEMS+1)-1)) UBIN;
      132     6438    2   DCL SNAP_TOTAL(0:%CACHEITEMS) UBIN;
      133     6439    2   DCL OLD_TOTAL(0:%CACHEITEMS) SBIN;
      134     6440    2   DCL NEW_TOTAL(0:%CACHEITEMS) SBIN;
      135     6441    2   DCL PER_ITEM(0:%CACHEITEMS) BASED UBIN;
      136     6442
      137     6443    2   DCL ITEM SBIN;
      138     6444    2   DCL ITYPE SBIN;
      139     6445    2   DCL FROM SBIN;
      140     6446    2   DCL TOO SBIN;
      141     6447
      142     6448
      143     6449    2      IF FMC_OLD_STATS$ = ADDR(NIL)

   6449 12 000113   200010 236100                    LDQ     FMC_OLD_STATS$,,AUTO
        12 000114   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 000115   000126 601000 12                 TNZ     s:6454

      144     6450    3      THEN DO;

      145     6451    3         OULD_NUMBER = '0'B;

   6451 12 000116   000100 100400                    MLR     fill='000'O
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:25   
        12 000117   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        12 000120   200031 000410                    ADSC9   OULD_NUMBER,,AUTO        cn=0,n=264

      146     6452    3         CALL PSD$EJECT(18);

   6452 12 000121   000006 630400 13                 EPPR0   6
        12 000122   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000123   000000 701000 xent               TSX1    PSD$EJECT
        12 000124   000000 011000                    NOP     0

      147     6453    3      END; ELSE DO;

   6453 12 000125   000136 710000 12                 TRA     s:6458

      148     6454    3         OULD_NUMBER = OLD_NUMBER;

   6454 12 000126   200030 470500                    LDP0    @OLD_NUMBER,,AUTO
        12 000127   000100 100500                    MLR     fill='000'O
        12 000130   000000 000410                    ADSC9   0,,PR0                   cn=0,n=264
        12 000131   200031 000410                    ADSC9   OULD_NUMBER,,AUTO        cn=0,n=264

      149     6455    3         CALL PSD$EJECT(30);

   6455 12 000132   000010 630400 13                 EPPR0   8
        12 000133   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000134   000000 701000 xent               TSX1    PSD$EJECT
        12 000135   000000 011000                    NOP     0

      150     6456    3      END;

      151     6457
      152     6458    2      CALL X$WRITE (PS_FDS, VECTOR(CACHE_HDR));

   6458 12 000136   000014 630400 13                 EPPR0   12
        12 000137   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000140   000000 701000 xent               TSX1    X$WRITE
        12 000141   000000 011000                    NOP     0
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:26   

      153     6459
      154     6460    2      OLD_TOTAL='0'B;

   6460 12 000142   000100 100400                    MLR     fill='000'O
        12 000143   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        12 000144   200403 000034                    ADSC9   OLD_TOTAL,,AUTO          cn=0,n=28

      155     6461    2      NEW_TOTAL='0'B;

   6461 12 000145   000100 100400                    MLR     fill='000'O
        12 000146   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        12 000147   200412 000034                    ADSC9   NEW_TOTAL,,AUTO          cn=0,n=28

      156     6462
      157     6463    3      DO ITEM=0 TO %CACHEITEMS;

   6463 12 000150   200421 450100                    STZ     ITEM,,AUTO

      158     6464    4         DO ITYPE=0 TO %(%CACHETYPES-1);

   6464 12 000151   200422 450100                    STZ     ITYPE,,AUTO

      159     6465
      160     6466    4            FROM = ITYPE + (%CACHETYPES * CACHE_OFFS(ITEM));

   6466 12 000152   200421 720100                    LXL0    ITEM,,AUTO
        12 000153   000163 236010 11                 LDQ     CACHE_OFFS,X0
        12 000154   000013 402007                    MPY     11,DL
        12 000155   200422 036100                    ADLQ    ITYPE,,AUTO
        12 000156   200423 756100                    STQ     FROM,,AUTO

      161     6467    4            TOO = (ITYPE * %(CACHEITEMS+1)) + ITEM;

   6467 12 000157   200422 236100                    LDQ     ITYPE,,AUTO
        12 000160   000007 402007                    MPY     7,DL
        12 000161   200421 036100                    ADLQ    ITEM,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:27   
        12 000162   200424 756100                    STQ     TOO,,AUTO

      162     6468
      163     6469    5            DO CASE(ITEM);

   6469 12 000163   200421 235100                    LDA     ITEM,,AUTO
        12 000164   000004 115007                    CMPA    4,DL
        12 000165   000167 602005 12                 TNC     s:6469+4,AL
        12 000166   000242 710000 12                 TRA     s:6483
        12 000167   000242 710000 12                 TRA     s:6483
        12 000170   000242 710000 12                 TRA     s:6483
        12 000171   000242 710000 12                 TRA     s:6483
        12 000172   000173 710000 12                 TRA     s:6472

      164     6470    5            CASE(3);                       /* Percent Hits                       */

      165     6471
      166     6472    5               CALL PERCENT (ALL_VAL(TOO),

   6472 12 000173   200027 470500                    LDP0    @NUMBER,,AUTO
        12 000174   200423 721100                    LXL1    FROM,,AUTO
        12 000175   000000 236111                    LDQ     0,X1,PR0
        12 000176   000013 036111                    ADLQ    11,X1,PR0
        12 000177   200474 756100                    STQ     @DIVISOR+35,,AUTO
        12 000200   200423 236100                    LDQ     FROM,,AUTO
        12 000201   000022 736000                    QLS     18
        12 000202   000041 036003                    ADLQ    33,DU
        12 000203   200027 036100                    ADLQ    @NUMBER,,AUTO
        12 000204   200431 756100                    STQ     @ITEM+1,,AUTO
        12 000205   200474 631500                    EPPR1   @DIVISOR+35,,AUTO
        12 000206   200430 451500                    STP1    @RESULT+1,,AUTO
        12 000207   200424 722100                    LXL2    TOO,,AUTO
        12 000210   200133 633512                    EPPR3   ALL_VAL,X2,AUTO
        12 000211   200427 453500                    STP3    TOO+3,,AUTO
        12 000212   000601 701000 12                 TSX1    PERCENT
        12 000213   000000 011000                    NOP     0

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:28   
      167     6473    5                 NUMBER(FROM)+NUMBER(FROM+%CACHETYPES),
      168     6474    5                 NUMBER(FROM+%(CACHETYPES*3)));
      169     6475    5               CALL PERCENT (SNAP_VAL(TOO),

   6475 12 000214   200027 470500                    LDP0    @NUMBER,,AUTO
        12 000215   200423 720100                    LXL0    FROM,,AUTO
        12 000216   000000 236110                    LDQ     0,X0,PR0
        12 000217   000013 036110                    ADLQ    11,X0,PR0
        12 000220   200031 136110                    SBLQ    OULD_NUMBER,X0,AUTO
        12 000221   200044 136110                    SBLQ    RESOURCE_MIN+10,X0,AUTO
        12 000222   200432 756100                    STQ     @DIVISOR+1,,AUTO
        12 000223   000041 236110                    LDQ     33,X0,PR0
        12 000224   200072 136110                    SBLQ    RESOURCE_MIN+32,X0,AUTO
        12 000225   200432 235100                    LDA     @DIVISOR+1,,AUTO
        12 000226   200475 755100                    STA     @DIVISOR+36,,AUTO
        12 000227   200476 756100                    STQ     @DIVISOR+37,,AUTO
        12 000230   200476 631500                    EPPR1   @DIVISOR+37,,AUTO
        12 000231   200431 451500                    STP1    @ITEM+1,,AUTO
        12 000232   200475 633500                    EPPR3   @DIVISOR+36,,AUTO
        12 000233   200430 453500                    STP3    @RESULT+1,,AUTO
        12 000234   200424 721100                    LXL1    TOO,,AUTO
        12 000235   200257 634511                    EPPR4   SNAP_VAL,X1,AUTO
        12 000236   200427 454500                    STP4    TOO+3,,AUTO
        12 000237   000601 701000 12                 TSX1    PERCENT
        12 000240   000000 011000                    NOP     0
        12 000241   000275 710000 12                 TRA     s:6495

      170     6476    5                 NUMBER(FROM)+NUMBER(FROM+%CACHETYPES) -
      171     6477    5                 OULD_NUMBER(FROM)-OULD_NUMBER(FROM+%CACHETYPES),
      172     6478    5                 NUMBER(FROM+%(CACHETYPES*3)) -
      173     6479    5                 OULD_NUMBER(FROM+%(CACHETYPES*3)));
      174     6480
      175     6481    5            CASE (ELSE);

      176     6482
      177     6483    5               CALL PSL$CHOMP (OULD_NUMBER(FROM),

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:29   
   6483 12 000242   200257 630506                    EPPR0   SNAP_VAL,QL,AUTO
        12 000243   200436 450500                    STP0    @DIVISOR+5,,AUTO
        12 000244   200424 721100                    LXL1    TOO,,AUTO
        12 000245   200133 631511                    EPPR1   ALL_VAL,X1,AUTO
        12 000246   200435 451500                    STP1    @DIVISOR+4,,AUTO
        12 000247   000172 633410 11                 EPPR3   CACHE_SCALE,X0
        12 000250   200434 453500                    STP3    @DIVISOR+3,,AUTO
        12 000251   200423 236100                    LDQ     FROM,,AUTO
        12 000252   000022 736000                    QLS     18
        12 000253   200027 036100                    ADLQ    @NUMBER,,AUTO
        12 000254   200433 756100                    STQ     @DIVISOR+2,,AUTO
        12 000255   200423 722100                    LXL2    FROM,,AUTO
        12 000256   200031 634512                    EPPR4   OULD_NUMBER,X2,AUTO
        12 000257   200432 454500                    STP4    @DIVISOR+1,,AUTO
        12 000260   200432 630500                    EPPR0   @DIVISOR+1,,AUTO
        12 000261   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000262   000000 701000 xent               TSX1    PSL$CHOMP
        12 000263   000000 011000                    NOP     0

      178     6484    5                 NUMBER(FROM),
      179     6485    5                 CACHE_SCALE(ITEM),
      180     6486    5                 ALL_VAL(TOO),
      181     6487    5                 SNAP_VAL(TOO));
      182     6488
      183     6489    5               OLD_TOTAL(ITEM) = OLD_TOTAL(ITEM) +

   6489 12 000264   200423 720100                    LXL0    FROM,,AUTO
        12 000265   200421 721100                    LXL1    ITEM,,AUTO
        12 000266   200403 236111                    LDQ     OLD_TOTAL,X1,AUTO
        12 000267   200031 036110                    ADLQ    OULD_NUMBER,X0,AUTO
        12 000270   200403 756111                    STQ     OLD_TOTAL,X1,AUTO

      184     6490    5                 OULD_NUMBER(FROM);
      185     6491    5               NEW_TOTAL(ITEM) = NEW_TOTAL(ITEM) +

   6491 12 000271   200027 470500                    LDP0    @NUMBER,,AUTO
        12 000272   200412 236111                    LDQ     NEW_TOTAL,X1,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:30   
        12 000273   000000 036110                    ADLQ    0,X0,PR0
        12 000274   200412 756111                    STQ     NEW_TOTAL,X1,AUTO

      186     6492    5                 NUMBER(FROM);
      187     6493    5            END /* CASE */;

      188     6494
      189     6495    4         END /* DO ITYPE */;

   6495 12 000275   200422 054100                    AOS     ITYPE,,AUTO
        12 000276   200422 235100                    LDA     ITYPE,,AUTO
        12 000277   000012 115007                    CMPA    10,DL
        12 000300   000152 604400 12                 TMOZ    s:6466

      190     6496
      191     6497    4         DO CASE(ITEM);

   6497 12 000301   200421 236100                    LDQ     ITEM,,AUTO
        12 000302   000004 116007                    CMPQ    4,DL
        12 000303   000305 602006 12                 TNC     s:6497+4,QL
        12 000304   000351 710000 12                 TRA     s:6510
        12 000305   000351 710000 12                 TRA     s:6510
        12 000306   000351 710000 12                 TRA     s:6510
        12 000307   000351 710000 12                 TRA     s:6510
        12 000310   000311 710000 12                 TRA     s:6500

      192     6498    4         CASE(3);                          /* Percent Hits                       */

      193     6499
      194     6500    4            CALL PERCENT (ALL_TOTAL(ITEM),

   6500 12 000311   200413 236100                    LDQ     NEW_TOTAL+1,,AUTO
        12 000312   200414 036100                    ADLQ    NEW_TOTAL+2,,AUTO
        12 000313   200477 756100                    STQ     @DIVISOR+38,,AUTO
        12 000314   200412 630500                    EPPR0   NEW_TOTAL,,AUTO
        12 000315   200431 450500                    STP0    @ITEM+1,,AUTO
        12 000316   200477 631500                    EPPR1   @DIVISOR+38,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:31   
        12 000317   200430 451500                    STP1    @RESULT+1,,AUTO
        12 000320   200421 720100                    LXL0    ITEM,,AUTO
        12 000321   200250 633510                    EPPR3   ALL_TOTAL,X0,AUTO
        12 000322   200427 453500                    STP3    TOO+3,,AUTO
        12 000323   000601 701000 12                 TSX1    PERCENT
        12 000324   000000 011000                    NOP     0

      195     6501    4              NEW_TOTAL(1)+NEW_TOTAL(2),
      196     6502    4              NEW_TOTAL(0));
      197     6503    4            CALL PERCENT (SNAP_TOTAL(ITEM),

   6503 12 000325   200413 236100                    LDQ     NEW_TOTAL+1,,AUTO
        12 000326   200414 036100                    ADLQ    NEW_TOTAL+2,,AUTO
        12 000327   200404 136100                    SBLQ    OLD_TOTAL+1,,AUTO
        12 000330   200405 136100                    SBLQ    OLD_TOTAL+2,,AUTO
        12 000331   200432 756100                    STQ     @DIVISOR+1,,AUTO
        12 000332   200412 236100                    LDQ     NEW_TOTAL,,AUTO
        12 000333   200403 136100                    SBLQ    OLD_TOTAL,,AUTO
        12 000334   200432 235100                    LDA     @DIVISOR+1,,AUTO
        12 000335   200500 755100                    STA     @DIVISOR+39,,AUTO
        12 000336   200501 756100                    STQ     @DIVISOR+40,,AUTO
        12 000337   200501 630500                    EPPR0   @DIVISOR+40,,AUTO
        12 000340   200431 450500                    STP0    @ITEM+1,,AUTO
        12 000341   200500 631500                    EPPR1   @DIVISOR+39,,AUTO
        12 000342   200430 451500                    STP1    @RESULT+1,,AUTO
        12 000343   200421 720100                    LXL0    ITEM,,AUTO
        12 000344   200374 633510                    EPPR3   SNAP_TOTAL,X0,AUTO
        12 000345   200427 453500                    STP3    TOO+3,,AUTO
        12 000346   000601 701000 12                 TSX1    PERCENT
        12 000347   000000 011000                    NOP     0
        12 000350   000370 710000 12                 TRA     s:6518

      198     6504    4              NEW_TOTAL(1)+NEW_TOTAL(2) -
      199     6505    4              OLD_TOTAL(1)-OLD_TOTAL(2),
      200     6506    4              NEW_TOTAL(0) -
      201     6507    4              OLD_TOTAL(0));
      202     6508
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:32   
      203     6509    4         CASE (ELSE);

      204     6510    4            CALL PSL$CHOMP (OLD_TOTAL(ITEM),

   6510 12 000351   200374 630506                    EPPR0   SNAP_TOTAL,QL,AUTO
        12 000352   200436 450500                    STP0    @DIVISOR+5,,AUTO
        12 000353   200421 720100                    LXL0    ITEM,,AUTO
        12 000354   200250 631510                    EPPR1   ALL_TOTAL,X0,AUTO
        12 000355   200435 451500                    STP1    @DIVISOR+4,,AUTO
        12 000356   000172 633410 11                 EPPR3   CACHE_SCALE,X0
        12 000357   200434 453500                    STP3    @DIVISOR+3,,AUTO
        12 000360   200412 634510                    EPPR4   NEW_TOTAL,X0,AUTO
        12 000361   200433 454500                    STP4    @DIVISOR+2,,AUTO
        12 000362   200403 635510                    EPPR5   OLD_TOTAL,X0,AUTO
        12 000363   200432 455500                    STP5    @DIVISOR+1,,AUTO
        12 000364   200432 630500                    EPPR0   @DIVISOR+1,,AUTO
        12 000365   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000366   000000 701000 xent               TSX1    PSL$CHOMP
        12 000367   000000 011000                    NOP     0

      205     6511    4              NEW_TOTAL(ITEM),
      206     6512    4              CACHE_SCALE(ITEM),
      207     6513    4              ALL_TOTAL(ITEM),
      208     6514    4              SNAP_TOTAL(ITEM));
      209     6515
      210     6516    4         END /* CASE */;

      211     6517
      212     6518    3      END /* DO ITEM */;

   6518 12 000370   200421 054100                    AOS     ITEM,,AUTO
        12 000371   200421 235100                    LDA     ITEM,,AUTO
        12 000372   000006 115007                    CMPA    6,DL
        12 000373   000151 604400 12                 TMOZ    s:6464

      213     6519
      214     6520    3      DO ITYPE = 0 TO %(%CACHETYPES-1);
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:33   

   6520 12 000374   200422 450100                    STZ     ITYPE,,AUTO

      215     6521
      216     6522    3         IF FMC_OLD_STATS$ = ADDR(NIL)

   6522 12 000375   200010 236100                    LDQ     FMC_OLD_STATS$,,AUTO
        12 000376   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 000377   000435 601000 12                 TNZ     s:6528

      217     6523    3         THEN
      218     6524    3            CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT_SNAP),

   6524 12 000400   000020 235000 13                 LDA     16
        12 000401   200422 236100                    LDQ     ITYPE,,AUTO
        12 000402   000023 736000                    QLS     19
        12 000403   000021 036000 13                 ADLQ    17
        12 000404   200432 757100                    STAQ    @DIVISOR+1,,AUTO
        12 000405   000022 235000 13                 LDA     18
        12 000406   200434 452500                    STP2    @DIVISOR+3,,AUTO
        12 000407   200422 236100                    LDQ     ITYPE,,AUTO
        12 000410   200435 755100                    STA     @DIVISOR+4,,AUTO
        12 000411   000007 402003                    MPY     7,DU
        12 000412   000257 036003                    ADLQ    175,DU
        12 000413   200434 036100                    ADLQ    @DIVISOR+3,,AUTO
        12 000414   200435 235100                    LDA     @DIVISOR+4,,AUTO
        12 000415   200440 757100                    STAQ    @DIVISOR+7,,AUTO
        12 000416   200432 237100                    LDAQ    @DIVISOR+1,,AUTO
        12 000417   200436 757100                    STAQ    @DIVISOR+5,,AUTO
        12 000420   200440 237100                    LDAQ    @DIVISOR+7,,AUTO
        12 000421   200442 757100                    STAQ    @DIVISOR+9,,AUTO
        12 000422   200442 630500                    EPPR0   @DIVISOR+9,,AUTO
        12 000423   200447 450500                    STP0    @DIVISOR+14,,AUTO
        12 000424   200436 631500                    EPPR1   @DIVISOR+5,,AUTO
        12 000425   200446 451500                    STP1    @DIVISOR+13,,AUTO
        12 000426   000024 237000 13                 LDAQ    20
        12 000427   200444 757100                    STAQ    @DIVISOR+11,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:34   
        12 000430   200444 630500                    EPPR0   @DIVISOR+11,,AUTO
        12 000431   000022 631400 xsym               EPPR1   B_VECTNIL+18
        12 000432   000000 701000 xent               TSX1    X$WRITE
        12 000433   000000 011000                    NOP     0
        12 000434   000512 710000 12                 TRA     s:6535

      219     6525    3              VECTOR(CACHE_TYPE_TITLE(ITYPE)),
      220     6526    3              VECTOR(ADDR(SNAP_VAL(ITYPE*%(CACHEITEMS+1)))->PER_ITEM));
      221     6527    4         ELSE DO ;

      222     6528    4            CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT),

   6528 12 000435   000020 235000 13                 LDA     16
        12 000436   200422 236100                    LDQ     ITYPE,,AUTO
        12 000437   000023 736000                    QLS     19
        12 000440   000021 036000 13                 ADLQ    17
        12 000441   200432 757100                    STAQ    @DIVISOR+1,,AUTO
        12 000442   000022 235000 13                 LDA     18
        12 000443   200434 452500                    STP2    @DIVISOR+3,,AUTO
        12 000444   200422 236100                    LDQ     ITYPE,,AUTO
        12 000445   200435 755100                    STA     @DIVISOR+4,,AUTO
        12 000446   000007 402003                    MPY     7,DU
        12 000447   000257 036003                    ADLQ    175,DU
        12 000450   200434 036100                    ADLQ    @DIVISOR+3,,AUTO
        12 000451   200435 235100                    LDA     @DIVISOR+4,,AUTO
        12 000452   200436 757100                    STAQ    @DIVISOR+5,,AUTO
        12 000453   000022 235000 13                 LDA     18
        12 000454   200440 452500                    STP2    @DIVISOR+7,,AUTO
        12 000455   200422 236100                    LDQ     ITYPE,,AUTO
        12 000456   200441 755100                    STA     @DIVISOR+8,,AUTO
        12 000457   000007 402003                    MPY     7,DU
        12 000460   000133 036003                    ADLQ    91,DU
        12 000461   200440 036100                    ADLQ    @DIVISOR+7,,AUTO
        12 000462   200441 235100                    LDA     @DIVISOR+8,,AUTO
        12 000463   200444 757100                    STAQ    @DIVISOR+11,,AUTO
        12 000464   200432 237100                    LDAQ    @DIVISOR+1,,AUTO
        12 000465   200442 757100                    STAQ    @DIVISOR+9,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:35   
        12 000466   200436 237100                    LDAQ    @DIVISOR+5,,AUTO
        12 000467   200446 757100                    STAQ    @DIVISOR+13,,AUTO
        12 000470   200444 237100                    LDAQ    @DIVISOR+11,,AUTO
        12 000471   200450 757100                    STAQ    @DIVISOR+15,,AUTO
        12 000472   200450 630500                    EPPR0   @DIVISOR+15,,AUTO
        12 000473   200456 450500                    STP0    @DIVISOR+21,,AUTO
        12 000474   200446 631500                    EPPR1   @DIVISOR+13,,AUTO
        12 000475   200455 451500                    STP1    @DIVISOR+20,,AUTO
        12 000476   200442 633500                    EPPR3   @DIVISOR+9,,AUTO
        12 000477   200454 453500                    STP3    @DIVISOR+19,,AUTO
        12 000500   000030 237000 13                 LDAQ    24
        12 000501   200452 757100                    STAQ    @DIVISOR+17,,AUTO
        12 000502   200452 630500                    EPPR0   @DIVISOR+17,,AUTO
        12 000503   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000504   000000 701000 xent               TSX1    X$WRITE
        12 000505   000000 011000                    NOP     0

      223     6529    4              VECTOR(CACHE_TYPE_TITLE(ITYPE)),
      224     6530    4              VECTOR(ADDR(SNAP_VAL(ITYPE*%(CACHEITEMS+1)))->PER_ITEM),
      225     6531    4              VECTOR(ADDR(ALL_VAL(ITYPE*%(CACHEITEMS+1)))->PER_ITEM));
      226     6532    4            CALL X$WRITE ( PS_FDS, VECTOR(SKIP_1) ) ;

   6532 12 000506   000034 630400 13                 EPPR0   28
        12 000507   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000510   000000 701000 xent               TSX1    X$WRITE
        12 000511   000000 011000                    NOP     0

      227     6533    4         END ;

      228     6534
      229     6535    3      END /* DO ITYPE */;

   6535 12 000512   200422 054100                    AOS     ITYPE,,AUTO
        12 000513   200422 235100                    LDA     ITYPE,,AUTO
        12 000514   000012 115007                    CMPA    10,DL
        12 000515   000375 604400 12                 TMOZ    s:6522

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:36   
      230     6536
      231     6537    2      IF FMC_OLD_STATS$ = ADDR(NIL)

   6537 12 000516   200010 236100                    LDQ     FMC_OLD_STATS$,,AUTO
        12 000517   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 000520   000541 601000 12                 TNZ     s:6543

      232     6538    2      THEN
      233     6539    2         CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT_SNAP),

   6539 12 000521   000022 235000 13                 LDA     18
        12 000522   200432 452500                    STP2    @DIVISOR+1,,AUTO
        12 000523   200432 236100                    LDQ     @DIVISOR+1,,AUTO
        12 000524   000374 036003                    ADLQ    252,DU
        12 000525   200434 757100                    STAQ    @DIVISOR+3,,AUTO
        12 000526   200434 630500                    EPPR0   @DIVISOR+3,,AUTO
        12 000527   200441 450500                    STP0    @DIVISOR+8,,AUTO
        12 000530   000023 236000 13                 LDQ     19
        12 000531   200440 756100                    STQ     @DIVISOR+7,,AUTO
        12 000532   000024 237000 13                 LDAQ    20
        12 000533   200436 757100                    STAQ    @DIVISOR+5,,AUTO
        12 000534   200436 630500                    EPPR0   @DIVISOR+5,,AUTO
        12 000535   000022 631400 xsym               EPPR1   B_VECTNIL+18
        12 000536   000000 701000 xent               TSX1    X$WRITE
        12 000537   000000 011000                    NOP     0
        12 000540   000577 710000 12                 TRA     s:6551

      234     6540    2           VECTOR(CACHE_TYPE_TITLE(%CACHETYPES)),
      235     6541    2           VECTOR(SNAP_TOTAL));
      236     6542    3      ELSE DO ;

      237     6543    3         CALL X$WRITE (PS_FDS, VECTOR(CACHE_FMT),

   6543 12 000541   000022 235000 13                 LDA     18
        12 000542   200432 452500                    STP2    @DIVISOR+1,,AUTO
        12 000543   200432 236100                    LDQ     @DIVISOR+1,,AUTO
        12 000544   000374 036003                    ADLQ    252,DU
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:37   
        12 000545   200434 757100                    STAQ    @DIVISOR+3,,AUTO
        12 000546   000022 235000 13                 LDA     18
        12 000547   200436 452500                    STP2    @DIVISOR+5,,AUTO
        12 000550   200436 236100                    LDQ     @DIVISOR+5,,AUTO
        12 000551   000250 036003                    ADLQ    168,DU
        12 000552   200442 757100                    STAQ    @DIVISOR+9,,AUTO
        12 000553   200434 237100                    LDAQ    @DIVISOR+3,,AUTO
        12 000554   200440 757100                    STAQ    @DIVISOR+7,,AUTO
        12 000555   200442 237100                    LDAQ    @DIVISOR+9,,AUTO
        12 000556   200444 757100                    STAQ    @DIVISOR+11,,AUTO
        12 000557   200444 630500                    EPPR0   @DIVISOR+11,,AUTO
        12 000560   200452 450500                    STP0    @DIVISOR+17,,AUTO
        12 000561   200440 631500                    EPPR1   @DIVISOR+7,,AUTO
        12 000562   200451 451500                    STP1    @DIVISOR+16,,AUTO
        12 000563   000023 236000 13                 LDQ     19
        12 000564   200450 756100                    STQ     @DIVISOR+15,,AUTO
        12 000565   000030 237000 13                 LDAQ    24
        12 000566   200446 757100                    STAQ    @DIVISOR+13,,AUTO
        12 000567   200446 630500                    EPPR0   @DIVISOR+13,,AUTO
        12 000570   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 000571   000000 701000 xent               TSX1    X$WRITE
        12 000572   000000 011000                    NOP     0

      238     6544    3           VECTOR(CACHE_TYPE_TITLE(%CACHETYPES)),
      239     6545    3           VECTOR(SNAP_TOTAL),
      240     6546    3           VECTOR(ALL_TOTAL));
      241     6547
      242     6548    3         CALL X$WRITE ( PS_FDS, VECTOR(SKIP_1) ) ;

   6548 12 000573   000034 630400 13                 EPPR0   28
        12 000574   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000575   000000 701000 xent               TSX1    X$WRITE
        12 000576   000000 011000                    NOP     0

      243     6549    3      END ;

      244     6550
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:38   
      245     6551    2      RETURN;

   6551 12 000577   200026 221300                    LDX1  ! UNACCOUNTED+2,,AUTO
        12 000600   000001 702211                    TSX2  ! 1,X1

      246     6552
      247     6553    2   END DISP_CACHE;
      248     6554
      249     6555        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:39   
      250     6556    1   PERCENT: PROC( RESULT, ITEM, DIVISOR);

   6556 12 000601   200426 741300       PERCENT      STX1  ! TOO+2,,AUTO

      251     6557
      252     6558    2   DCL RESULT SBIN;
      253     6559    2   DCL ITEM SBIN;
      254     6560    2   DCL DIVISOR SBIN;
      255     6561    2      IF DIVISOR=0

   6561 12 000602   200431 470500                    LDP0    @DIVISOR,,AUTO
        12 000603   000000 235100                    LDA     0,,PR0
        12 000604   000610 601000 12                 TNZ     s:6563

      256     6562    2      THEN RESULT=0;

   6562 12 000605   200427 471500                    LDP1    @RESULT,,AUTO
        12 000606   100000 450100                    STZ     0,,PR1
        12 000607   000631 710000 12                 TRA     s:6567

      257     6563    2      ELSE IF DIVISOR < 343597383

   6563 12 000610   000040 115000 13                 CMPA    32
        12 000611   000621 605000 12                 TPL     s:6565

      258     6564    2         THEN RESULT = (100 * ITEM) / DIVISOR;

   6564 12 000612   200430 471500                    LDP1    @ITEM,,AUTO
        12 000613   100000 236100                    LDQ     0,,PR1
        12 000614   000144 402007                    MPY     100,DL
        12 000615   000000 506100                    DIV     0,,PR0
        12 000616   200427 473500                    LDP3    @RESULT,,AUTO
        12 000617   300000 756100                    STQ     0,,PR3
        12 000620   000631 710000 12                 TRA     s:6567

      259     6565    2         ELSE RESULT = ITEM / (DIVISOR / 100);

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:40   
   6565 12 000621   000000 236100                    LDQ     0,,PR0
        12 000622   000144 506007                    DIV     100,DL
        12 000623   200432 756100                    STQ     @DIVISOR+1,,AUTO
        12 000624   200430 471500                    LDP1    @ITEM,,AUTO
        12 000625   100000 236100                    LDQ     0,,PR1
        12 000626   200432 506100                    DIV     @DIVISOR+1,,AUTO
        12 000627   200427 473500                    LDP3    @RESULT,,AUTO
        12 000630   300000 756100                    STQ     0,,PR3

      260     6566
      261     6567    2   END PERCENT;

   6567 12 000631   200426 221300                    LDX1  ! TOO+2,,AUTO
        12 000632   000001 702211                    TSX2  ! 1,X1

      262     6568        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:41   
      263     6569    1   DISP_MEM: PROC (TITLE, N);

   6569 12 000633   200026 741300       DISP_MEM     STX1  ! UNACCOUNTED+2,,AUTO

      264     6570
      265     6571    2   DCL TITLE CHAR (50);
      266     6572    2   DCL N SBIN;
      267     6573
      268     6574    2   DCL TITLE_LEN UBIN;
      269     6575
      270     6576    2      IF N = 0

      271     6577    2      THEN
      272     6578    2   /*    RETURN*/;
      273     6579
      274     6580    2      CALL INDEX (TITLE_LEN, '.', TITLE);

   6580 12 000634   200027 470500                    LDP0    @TITLE,,AUTO
        12 000635   000000 124500                    SCM     mask='000'O
        12 000636   000000 000062                    ADSC9   0,,PR0                   cn=0,n=50
        12 000637   000000 000001 13                 ADSC9   0                        cn=0,n=1
        12 000640   200031 000100                    ARG     TITLE_LEN,,AUTO

      275     6581
      276     6582    2      CALL X$WRITE (PS_FDS, VECTOR(MEMORY_FMT),

   6582 12 000641   200031 235100                    LDA     TITLE_LEN,,AUTO
        12 000642   000020 735000                    ALS     16
        12 000643   000140 135007                    SBLA    96,DL
        12 000644   200027 236100                    LDQ     @TITLE,,AUTO
        12 000645   200432 757100                    STAQ    @DIVISOR+1,,AUTO
        12 000646   777640 235007                    LDA     -96,DL
        12 000647   200030 236100                    LDQ     @N,,AUTO
        12 000650   200436 757100                    STAQ    @DIVISOR+5,,AUTO
        12 000651   200432 237100                    LDAQ    @DIVISOR+1,,AUTO
        12 000652   200434 757100                    STAQ    @DIVISOR+3,,AUTO
        12 000653   200436 237100                    LDAQ    @DIVISOR+5,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:42   
        12 000654   200440 757100                    STAQ    @DIVISOR+7,,AUTO
        12 000655   200440 631500                    EPPR1   @DIVISOR+7,,AUTO
        12 000656   200445 451500                    STP1    @DIVISOR+12,,AUTO
        12 000657   200434 633500                    EPPR3   @DIVISOR+3,,AUTO
        12 000660   200444 453500                    STP3    @DIVISOR+11,,AUTO
        12 000661   000044 237000 13                 LDAQ    36
        12 000662   200442 757100                    STAQ    @DIVISOR+9,,AUTO
        12 000663   200442 630500                    EPPR0   @DIVISOR+9,,AUTO
        12 000664   000022 631400 xsym               EPPR1   B_VECTNIL+18
        12 000665   000000 701000 xent               TSX1    X$WRITE
        12 000666   000000 011000                    NOP     0

      277     6583    2        VECTOR(SUBSTR(TITLE, 0, TITLE_LEN)), VECTOR(N));
      278     6584
      279     6585    2      RETURN;

   6585 12 000667   200026 221300                    LDX1  ! UNACCOUNTED+2,,AUTO
        12 000670   000001 702211                    TSX2  ! 1,X1

      280     6586
      281     6587    2   END DISP_MEM;
      282     6588
      283     6589        %EJECT;
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:43   
      284     6590
      285     6591    1      CALL PSL$LOCATE (P_RESOURCE#, P_RESOURCE$);

   6591 12 000671   200011 630500                    EPPR0   P_RESOURCE$,,AUTO
        12 000672   200433 450500                    STP0    @DIVISOR+2,,AUTO
        12 000673   000046 236000 13                 LDQ     38
        12 000674   200432 756100                    STQ     @DIVISOR+1,,AUTO
        12 000675   200432 630500                    EPPR0   @DIVISOR+1,,AUTO
        12 000676   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000677   000000 701000 xent               TSX1    PSL$LOCATE
        12 000700   000000 011000                    NOP     0

      286     6592    1      CALL PSL$LOCATE (FMC_STATS#, FMC_STATS$, FMC_OLD_STATS$);

   6592 12 000701   200010 630500                    EPPR0   FMC_OLD_STATS$,,AUTO
        12 000702   200434 450500                    STP0    @DIVISOR+3,,AUTO
        12 000703   200007 631500                    EPPR1   FMC_STATS$,,AUTO
        12 000704   200433 451500                    STP1    @DIVISOR+2,,AUTO
        12 000705   000050 236000 13                 LDQ     40
        12 000706   200432 756100                    STQ     @DIVISOR+1,,AUTO
        12 000707   200432 630500                    EPPR0   @DIVISOR+1,,AUTO
        12 000710   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 000711   000000 701000 xent               TSX1    PSL$LOCATE
        12 000712   000000 011000                    NOP     0

      287     6593
      288     6594    1      P_RESOURCE$ = ADDR(P_RESOURCE$ -> BLOCK.DATA);

   6594 12 000713   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 000714   000002 036003                    ADLQ    2,DU
        12 000715   200011 756100                    STQ     P_RESOURCE$,,AUTO

      289     6595    1      FMC_STATS$ = ADDR(FMC_STATS$ -> BLOCK.DATA);

   6595 12 000716   200007 236100                    LDQ     FMC_STATS$,,AUTO
        12 000717   000002 036003                    ADLQ    2,DU
        12 000720   200007 756100                    STQ     FMC_STATS$,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:44   

      290     6596
      291     6597    1      IF FMC_OLD_STATS$ ~= ADDR(NIL)

   6597 12 000721   200010 236100                    LDQ     FMC_OLD_STATS$,,AUTO
        12 000722   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 000723   000726 600000 12                 TZE     s:6602

      292     6598    1      THEN
      293     6599    1         FMC_OLD_STATS$ = ADDR(FMC_OLD_STATS$ -> BLOCK.DATA);

   6599 12 000724   000002 036003                    ADLQ    2,DU
        12 000725   200010 756100                    STQ     FMC_OLD_STATS$,,AUTO

      294     6600
      295     6601
      296     6602    1      CALL PSD$EJECT(10);

   6602 12 000726   000051 630400 13                 EPPR0   41
        12 000727   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 000730   000000 701000 xent               TSX1    PSD$EJECT
        12 000731   000000 011000                    NOP     0

      297     6603
      298     6604    1      CALL X$WRITE (PS_FDS, VECTOR(RESOURCE_HEADING));

   6604 12 000732   000054 630400 13                 EPPR0   44
        12 000733   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000734   000000 701000 xent               TSX1    X$WRITE
        12 000735   000000 011000                    NOP     0

      299     6605
      300     6606    1      CALL X$WRITE (PS_FDS, VECTOR(PLEX_HEADER));

   6606 12 000736   000060 630400 13                 EPPR0   48
        12 000737   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 000740   000000 701000 xent               TSX1    X$WRITE
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:45   
        12 000741   000000 011000                    NOP     0

      301     6607
      302     6608    1      CALL DISP_RES ('IOQ packets.', P_RESOURCE.RES.NREQCT);

   6608 12 000742   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 000743   000041 036003                    ADLQ    33,DU
        12 000744   200030 756100                    STQ     @TITLE+1,,AUTO
        12 000745   000062 236000 13                 LDQ     50
        12 000746   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 000747   000003 701000 12                 TSX1    DISP_RES
        12 000750   000000 011000                    NOP     0

      303     6609    1      CALL DISP_RES ('IOS packets.', P_RESOURCE.RES.NIREQCT);

   6609 12 000751   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 000752   000047 036003                    ADLQ    39,DU
        12 000753   200030 756100                    STQ     @TITLE+1,,AUTO
        12 000754   000063 236000 13                 LDQ     51
        12 000755   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 000756   000003 701000 12                 TSX1    DISP_RES
        12 000757   000000 011000                    NOP     0

      304     6610    1      CALL DISP_RES ('I/O cache entries.', P_RESOURCE.RES.IOCACHE);

   6610 12 000760   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 000761   000055 036003                    ADLQ    45,DU
        12 000762   200030 756100                    STQ     @TITLE+1,,AUTO
        12 000763   000064 236000 13                 LDQ     52
        12 000764   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 000765   000003 701000 12                 TSX1    DISP_RES
        12 000766   000000 011000                    NOP     0

      305     6611    1      CALL DISP_RES ('Enqueue/Dequeue data blocks.', P_RESOURCE.RES.ENQ);

   6611 12 000767   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 000770   000063 036003                    ADLQ    51,DU
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:46   
        12 000771   200030 756100                    STQ     @TITLE+1,,AUTO
        12 000772   000065 236000 13                 LDQ     53
        12 000773   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 000774   000003 701000 12                 TSX1    DISP_RES
        12 000775   000000 011000                    NOP     0

      306     6612    1      CALL DISP_RES ('Scheduler Do-list entries.', P_RESOURCE.RES.DOLISTS);

   6612 12 000776   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 000777   000071 036003                    ADLQ    57,DU
        12 001000   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001001   000066 236000 13                 LDQ     54
        12 001002   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001003   000003 701000 12                 TSX1    DISP_RES
        12 001004   000000 011000                    NOP     0

      307     6613
      308     6614    1      CALL DISP_CACHE (FMC_STATS$ -> FMC$STATS,

   6614 12 001005   200010 236100                    LDQ     FMC_OLD_STATS$,,AUTO
        12 001006   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001007   200007 236100                    LDQ     FMC_STATS$,,AUTO
        12 001010   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001011   000112 701000 12                 TSX1    DISP_CACHE
        12 001012   000000 011000                    NOP     0

      309     6615    1        FMC_OLD_STATS$ -> FMC$STATS);
      310     6616
      311     6617
      312     6618
      313     6619    1      CALL PSD$EJECT(35);

   6619 12 001013   000070 630400 13                 EPPR0   56
        12 001014   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 001015   000000 701000 xent               TSX1    PSD$EJECT
        12 001016   000000 011000                    NOP     0

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:47   
      314     6620
      315     6621    1      CALL X$WRITE (PS_FDS, VECTOR(MEMORY_HEADER));

   6621 12 001017   000074 630400 13                 EPPR0   60
        12 001020   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 001021   000000 701000 xent               TSX1    X$WRITE
        12 001022   000000 011000                    NOP     0

      316     6622
      317     6623    1      PCORE = P_RESOURCE.PAGES.PCORE;

   6623 12 001023   200011 470500                    LDP0    P_RESOURCE$,,AUTO
        12 001024   000007 235100                    LDA     7,,PR0
        12 001025   200012 755100                    STA     PCORE,,AUTO

      318     6624
      319     6625    1      MONSIZE = P_RESOURCE.PAGES.MONSIZE;

   6625 12 001026   000030 235100                    LDA     24,,PR0
        12 001027   200013 755100                    STA     MONSIZE,,AUTO

      320     6626
      321     6627
      322     6628    1      RHELD = MAXIMUM(P_RESOURCE.PAGES.RSVP - P_RESOURCE.PAGES.SPPC , 0)

   6628 12 001030   000011 236100                    LDQ     9,,PR0
        12 001031   000002 136100                    SBLQ    2,,PR0
        12 001032   000000 116003                    CMPQ    0,DU
        12 001033   001035 605000 12                 TPL     s:6628+5
        12 001034   000000 236003                    LDQ     0,DU
        12 001035   000012 036100                    ADLQ    10,,PR0
        12 001036   200014 756100                    STQ     RHELD,,AUTO

      323     6629    1        + P_RESOURCE.PAGES.HELD;
      324     6630
      325     6631    1      TOTSIZE = P_RESOURCE.PAGES.AARDSIZE + P_RESOURCE.PAGES.XDELTASIZE +

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:48   
   6631 12 001037   000015 236100                    LDQ     13,,PR0
        12 001040   000016 036100                    ADLQ    14,,PR0
        12 001041   200013 036100                    ADLQ    MONSIZE,,AUTO
        12 001042   000027 036100                    ADLQ    23,,PR0
        12 001043   000020 036100                    ADLQ    16,,PR0
        12 001044   000021 036100                    ADLQ    17,,PR0
        12 001045   000014 036100                    ADLQ    12,,PR0
        12 001046   000031 036100                    ADLQ    25,,PR0
        12 001047   200014 036100                    ADLQ    RHELD,,AUTO
        12 001050   000002 036100                    ADLQ    2,,PR0
        12 001051   000017 036100                    ADLQ    15,,PR0
        12 001052   000032 036100                    ADLQ    26,,PR0
        12 001053   000033 036100                    ADLQ    27,,PR0
        12 001054   200015 756100                    STQ     TOTSIZE,,AUTO

      326     6632    1        MONSIZE + P_RESOURCE.PAGES.CONTEXT + P_RESOURCE.PAGES.MONDSSIZE +
      327     6633    1        P_RESOURCE.PAGES.TIGRSIZE + P_RESOURCE.PAGES.NCQPGS +
      328     6634    1        P_RESOURCE.PAGES.CGQPGS + RHELD + P_RESOURCE.PAGES.SPPC +
      329     6635    1        P_RESOURCE.PAGES.GHOSTSIZE +
      330     6636    1        P_RESOURCE.PAGES.RPROCSIZE + P_RESOURCE.PAGES.PROCSIZE;
      331     6637
      332     6638    1      PCORE = PCORE + 1;

   6638 12 001055   200012 054100                    AOS     PCORE,,AUTO

      333     6639
      334     6640    1      AVAILPGS = PCORE - TOTSIZE;

   6640 12 001056   200012 236100                    LDQ     PCORE,,AUTO
        12 001057   200015 136100                    SBLQ    TOTSIZE,,AUTO
        12 001060   200016 756100                    STQ     AVAILPGS,,AUTO

      335     6641
      336     6642    1      FPPC = P_RESOURCE.PAGES.FPPC - RHELD;

   6642 12 001061   000006 236100                    LDQ     6,,PR0
        12 001062   200014 136100                    SBLQ    RHELD,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:49   
        12 001063   200022 756100                    STQ     FPPC,,AUTO

      337     6643
      338     6644    1      CURAVAIL = FPPC + P_RESOURCE.PAGES.AUTOAVAIL +

   6644 12 001064   000022 036100                    ADLQ    18,,PR0
        12 001065   000024 036100                    ADLQ    20,,PR0
        12 001066   200023 756100                    STQ     CURAVAIL,,AUTO

      339     6645    1        P_RESOURCE.PAGES.SHAREDSAVAIL;
      340     6646
      341     6647    1     UNACCOUNTED = AVAILPGS - (P_RESOURCE.PAGES.USERSIZE + P_RESOURCE.PAGES.SHAREDSIZE
              6647               +

   6647 12 001067   000026 236100                    LDQ     22,,PR0
        12 001070   000034 036100                    ADLQ    28,,PR0
        12 001071   000023 036100                    ADLQ    19,,PR0
        12 001072   000025 036100                    ADLQ    21,,PR0
        12 001073   200023 036100                    ADLQ    CURAVAIL,,AUTO
        12 001074   000004 036100                    ADLQ    4,,PR0
        12 001075   000005 036100                    ADLQ    5,,PR0
        12 001076   000003 036100                    ADLQ    3,,PR0
        12 001077   000000 036100                    ADLQ    0,,PR0
        12 001100   200432 756100                    STQ     @DIVISOR+1,,AUTO
        12 001101   200016 236100                    LDQ     AVAILPGS,,AUTO
        12 001102   200432 136100                    SBLQ    @DIVISOR+1,,AUTO
        12 001103   200024 756100                    STQ     UNACCOUNTED,,AUTO

      342     6648    1        P_RESOURCE.PAGES.AUTOINUSE + P_RESOURCE.PAGES.SHAREDSUSE + CURAVAIL +
      343     6649    1        P_RESOURCE.PAGES.SUSPECTS + P_RESOURCE.PAGES.IN_TEST +
      344     6650    1        P_RESOURCE.PAGES.BPPC + P_RESOURCE.PAGES.IOCC);
      345     6651
      346     6652    1      CALL DISP_MEM ('AARDVARK and RECOVERY.', P_RESOURCE.PAGES.AARDSIZE);

   6652 12 001104   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001105   000015 036003                    ADLQ    13,DU
        12 001106   200030 756100                    STQ     @TITLE+1,,AUTO
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:50   
        12 001107   000076 236000 13                 LDQ     62
        12 001110   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001111   000633 701000 12                 TSX1    DISP_MEM
        12 001112   000000 011000                    NOP     0

      347     6653    1      CALL DISP_MEM ('XDELTA and monitor debug schema.', P_RESOURCE.PAGES.XDELTASIZE);

   6653 12 001113   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001114   000016 036003                    ADLQ    14,DU
        12 001115   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001116   000077 236000 13                 LDQ     63
        12 001117   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001120   000633 701000 12                 TSX1    DISP_MEM
        12 001121   000000 011000                    NOP     0

      348     6654    1      CALL DISP_MEM ('Monitor procedure and static data.', MONSIZE);

   6654 12 001122   200013 630500                    EPPR0   MONSIZE,,AUTO
        12 001123   200030 450500                    STP0    @TITLE+1,,AUTO
        12 001124   000100 236000 13                 LDQ     64
        12 001125   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001126   000633 701000 12                 TSX1    DISP_MEM
        12 001127   000000 011000                    NOP     0

      349     6655    1      CALL DISP_MEM ('Monitor context (JITs, HJITs, PPUT, page tables).',P_RESOURCE.
              6655               PAGES.CONTEXT);

   6655 12 001130   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001131   000027 036003                    ADLQ    23,DU
        12 001132   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001133   000101 236000 13                 LDQ     65
        12 001134   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001135   000633 701000 12                 TSX1    DISP_MEM
        12 001136   000000 011000                    NOP     0

      350     6656    1      CALL DISP_MEM ('Monitor dynamic data segments.', P_RESOURCE.PAGES.MONDSSIZE);

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:51   
   6656 12 001137   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001140   000020 036003                    ADLQ    16,DU
        12 001141   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001142   000102 236000 13                 LDQ     66
        12 001143   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001144   000633 701000 12                 TSX1    DISP_MEM
        12 001145   000000 011000                    NOP     0

      351     6657    1      CALL DISP_MEM ('TIGR-built tables.', P_RESOURCE.PAGES.TIGRSIZE);

   6657 12 001146   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001147   000021 036003                    ADLQ    17,DU
        12 001150   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001151   000103 236000 13                 LDQ     67
        12 001152   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001153   000633 701000 12                 TSX1    DISP_MEM
        12 001154   000000 011000                    NOP     0

      352     6658    1      CALL DISP_MEM ('Communications WSQs.', P_RESOURCE.PAGES.NCQPGS);

   6658 12 001155   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001156   000014 036003                    ADLQ    12,DU
        12 001157   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001160   000104 236000 13                 LDQ     68
        12 001161   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001162   000633 701000 12                 TSX1    DISP_MEM
        12 001163   000000 011000                    NOP     0

      353     6659    1      CALL DISP_MEM ('Comgroup queue.', P_RESOURCE.PAGES.CGQPGS);

   6659 12 001164   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001165   000031 036003                    ADLQ    25,DU
        12 001166   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001167   000105 236000 13                 LDQ     69
        12 001170   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001171   000633 701000 12                 TSX1    DISP_MEM
        12 001172   000000 011000                    NOP     0
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:52   

      354     6660    1      CALL DISP_MEM ('Total pages held back for monitor use.', RHELD);

   6660 12 001173   200014 630500                    EPPR0   RHELD,,AUTO
        12 001174   200030 450500                    STP0    @TITLE+1,,AUTO
        12 001175   000106 236000 13                 LDQ     70
        12 001176   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001177   000633 701000 12                 TSX1    DISP_MEM
        12 001200   000000 011000                    NOP     0

      355     6661    1      CALL DISP_MEM ('Stolen pages.', P_RESOURCE.PAGES.SPPC);

   6661 12 001201   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001202   000002 036003                    ADLQ    2,DU
        12 001203   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001204   000107 236000 13                 LDQ     71
        12 001205   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001206   000633 701000 12                 TSX1    DISP_MEM
        12 001207   000000 011000                    NOP     0

      356     6662    1      CALL DISP_MEM ('Resident system ghosts.', P_RESOURCE.PAGES.GHOSTSIZE);

   6662 12 001210   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001211   000017 036003                    ADLQ    15,DU
        12 001212   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001213   000110 236000 13                 LDQ     72
        12 001214   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001215   000633 701000 12                 TSX1    DISP_MEM
        12 001216   000000 011000                    NOP     0

      357     6663    1      CALL DISP_MEM ('Required processors (IBEX, DELTA, LOGON).', P_RESOURCE.PAGES.
              6663               RPROCSIZE);

   6663 12 001217   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001220   000032 036003                    ADLQ    26,DU
        12 001221   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001222   000111 236000 13                 LDQ     73
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:53   
        12 001223   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001224   000633 701000 12                 TSX1    DISP_MEM
        12 001225   000000 011000                    NOP     0

      358     6664    1      CALL DISP_MEM ('All other special shared (resident) processors.', P_RESOURCE.
              6664               PAGES.PROCSIZE);

   6664 12 001226   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001227   000033 036003                    ADLQ    27,DU
        12 001230   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001231   000112 236000 13                 LDQ     74
        12 001232   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001233   000633 701000 12                 TSX1    DISP_MEM
        12 001234   000000 011000                    NOP     0

      359     6665
      360     6666    1      CALL X$WRITE (PS_FDS, VECTOR(DASH_FMT));

   6666 12 001235   000116 630400 13                 EPPR0   78
        12 001236   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 001237   000000 701000 xent               TSX1    X$WRITE
        12 001240   000000 011000                    NOP     0

      361     6667
      362     6668    1      CALL DISP_MEM ('Total dedicated memory.', TOTSIZE);

   6668 12 001241   200015 630500                    EPPR0   TOTSIZE,,AUTO
        12 001242   200030 450500                    STP0    @TITLE+1,,AUTO
        12 001243   000120 236000 13                 LDQ     80
        12 001244   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001245   000633 701000 12                 TSX1    DISP_MEM
        12 001246   000000 011000                    NOP     0

      363     6669
      364     6670    1      CALL X$WRITE (PS_FDS, VECTOR(SKIP_1));

   6670 12 001247   000034 630400 13                 EPPR0   28
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:54   
        12 001250   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 001251   000000 701000 xent               TSX1    X$WRITE
        12 001252   000000 011000                    NOP     0

      365     6671
      366     6672    1      CALL DISP_MEM ('Available to users.', AVAILPGS);

   6672 12 001253   200016 630500                    EPPR0   AVAILPGS,,AUTO
        12 001254   200030 450500                    STP0    @TITLE+1,,AUTO
        12 001255   000121 236000 13                 LDQ     81
        12 001256   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001257   000633 701000 12                 TSX1    DISP_MEM
        12 001260   000000 011000                    NOP     0

      367     6673    1      CALL DISP_MEM ('Currently allocated to users.', P_RESOURCE.PAGES.USERSIZE);

   6673 12 001261   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001262   000026 036003                    ADLQ    22,DU
        12 001263   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001264   000122 236000 13                 LDQ     82
        12 001265   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001266   000633 701000 12                 TSX1    DISP_MEM
        12 001267   000000 011000                    NOP     0

      368     6674        /*DELETED
      369     6675           CALL DISP_MEM ('Standard shared run units.',P_RESOURCE.PAGES.SHAREDSIZE);
      370     6676        DETELED*/
      371     6677    1      CALL DISP_MEM ('Automatically shared run units in use.',P_RESOURCE.PAGES.
              6677               AUTOINUSE);

   6677 12 001270   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001271   000023 036003                    ADLQ    19,DU
        12 001272   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001273   000123 236000 13                 LDQ     83
        12 001274   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001275   000633 701000 12                 TSX1    DISP_MEM
        12 001276   000000 011000                    NOP     0
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:55   

      372     6678    1      CALL DISP_MEM ('Shared data segments in use.',P_RESOURCE.PAGES.SHAREDSUSE);

   6678 12 001277   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001300   000025 036003                    ADLQ    21,DU
        12 001301   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001302   000124 236000 13                 LDQ     84
        12 001303   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001304   000633 701000 12                 TSX1    DISP_MEM
        12 001305   000000 011000                    NOP     0

      373     6679    1      CALL DISP_MEM ('Free pages.', FPPC);

   6679 12 001306   200022 630500                    EPPR0   FPPC,,AUTO
        12 001307   200030 450500                    STP0    @TITLE+1,,AUTO
        12 001310   000125 236000 13                 LDQ     85
        12 001311   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001312   000633 701000 12                 TSX1    DISP_MEM
        12 001313   000000 011000                    NOP     0

      374     6680    1      CALL DISP_MEM ('Automatically shared run units not in use.',P_RESOURCE.PAGES.
              6680               AUTOAVAIL);

   6680 12 001314   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001315   000022 036003                    ADLQ    18,DU
        12 001316   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001317   000126 236000 13                 LDQ     86
        12 001320   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001321   000633 701000 12                 TSX1    DISP_MEM
        12 001322   000000 011000                    NOP     0

      375     6681        /*DELETED
      376     6682          CALL DISP_MEM ('Shared data segments not in use.',P_RESOURCE.PAGES.SHAREDSAVAIL);
      377     6683        DETELED*/
      378     6684    1      CALL DISP_MEM ('I/O cache pages (Use Count = 0).',P_RESOURCE.PAGES.IOCM);
              6684               /*Change to IOCU(unused)*/

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:56   
   6684 12 001323   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001324   000001 036003                    ADLQ    1,DU
        12 001325   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001326   000127 236000 13                 LDQ     87
        12 001327   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001330   000633 701000 12                 TSX1    DISP_MEM
        12 001331   000000 011000                    NOP     0

      379     6685    1      CALL DISP_MEM ('Total pages currently available.',PS_COLLECT.AVAIL_MEM);

   6685 12 001332   000130 236000 13                 LDQ     88
        12 001333   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001334   000131 236000 13                 LDQ     89
        12 001335   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001336   000633 701000 12                 TSX1    DISP_MEM
        12 001337   000000 011000                    NOP     0

      380     6686    1      CALL DISP_MEM ('Suspected bad physical pages.', P_RESOURCE.PAGES.SUSPECTS);

   6686 12 001340   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001341   000004 036003                    ADLQ    4,DU
        12 001342   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001343   000132 236000 13                 LDQ     90
        12 001344   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001345   000633 701000 12                 TSX1    DISP_MEM
        12 001346   000000 011000                    NOP     0

      381     6687    1      CALL DISP_MEM ('Physical pages being tested.', P_RESOURCE.PAGES.IN_TEST);

   6687 12 001347   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001350   000005 036003                    ADLQ    5,DU
        12 001351   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001352   000133 236000 13                 LDQ     91
        12 001353   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001354   000633 701000 12                 TSX1    DISP_MEM
        12 001355   000000 011000                    NOP     0

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:57   
      382     6688    1      CALL DISP_MEM ('Confirmed bad physical pages.', P_RESOURCE.PAGES.BPPC);

   6688 12 001356   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001357   000003 036003                    ADLQ    3,DU
        12 001360   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001361   000134 236000 13                 LDQ     92
        12 001362   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001363   000633 701000 12                 TSX1    DISP_MEM
        12 001364   000000 011000                    NOP     0

      383     6689    1      CALL DISP_MEM ('I/O cache pages.', P_RESOURCE.PAGES.IOCC);

   6689 12 001365   200011 236100                    LDQ     P_RESOURCE$,,AUTO
        12 001366   200030 756100                    STQ     @TITLE+1,,AUTO
        12 001367   000135 236000 13                 LDQ     93
        12 001370   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001371   000633 701000 12                 TSX1    DISP_MEM
        12 001372   000000 011000                    NOP     0

      384     6690    1      CALL DISP_MEM ('Number of pages not accounted for.',UNACCOUNTED);

   6690 12 001373   200024 630500                    EPPR0   UNACCOUNTED,,AUTO
        12 001374   200030 450500                    STP0    @TITLE+1,,AUTO
        12 001375   000136 236000 13                 LDQ     94
        12 001376   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001377   000633 701000 12                 TSX1    DISP_MEM
        12 001400   000000 011000                    NOP     0

      385     6691    1      CALL DISP_MEM ('Total physical pages in system.', PCORE);

   6691 12 001401   200012 630500                    EPPR0   PCORE,,AUTO
        12 001402   200030 450500                    STP0    @TITLE+1,,AUTO
        12 001403   000137 236000 13                 LDQ     95
        12 001404   200027 756100                    STQ     UNACCOUNTED+3,,AUTO
        12 001405   000633 701000 12                 TSX1    DISP_MEM
        12 001406   000000 011000                    NOP     0

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:58   
      386     6692
      387     6693
      388     6694    1      RETURN;

   6694 12 001407   000000 702200 xent               TSX2  ! X66_ARET
      389     6695
      390     6696    1   END PSD$RESRCE;

PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:59   
--  Include file information  --

   XUF_ENTRY.:E05TOU  cannot be made into a system file and is referenced.
   FM_CACHE_C.:E05TOU  is referenced.
   FM$GRAN.:E05TOU  is referenced.
   P_PMDAT_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   P_FEP_M.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   PM_BUCKET_C.:E05TOU  is referenced.
   PS_SUBS_C.:E05TOU  is referenced.
   PS_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure PSD$RESRCE.
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:60   

 **** Variables and constants ****

  ****  Section 007 RtLmCm PS_FDS

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1080)  r     1 PS_FDS

  ****  Section 011 RoData PSD$RESRCE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   143-0-0/c STRC(378)   r     1 CACHE_FMT                156-0-0/c STRC(180)   r     1 CACHE_FMT_SNAP
    64-0-0/c STRC(1665)  r     1 CACHE_HDR
   163-0-0/w UBIN        r     1 CACHE_OFFS(0:6)
   172-0-0/w UBIN        r     1 CACHE_SCALE(0:6)
   201-0-0/c CHAR(8)     r     1 CACHE_TYPE_TITLE(0:11)
   244-0-0/c CHAR(11)    r     1 DASH_FMT                 241-0-0/c CHAR(11)    r     1 MEMORY_FMT
   231-0-0/c CHAR(29)    r     1 MEMORY_HEADER             52-0-0/c CHAR(40)    r     1 PLEX_ENTRY
    12-0-0/c STRC(1152)  r     1 PLEX_HEADER                0-0-0/c CHAR(37)    r     1 RESOURCE_HEADING
   247-0-0/c CHAR        r     1 SKIP_1

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   431-0-0/w PTR         r     1 @DIVISOR                 430-0-0/w PTR         r     1 @ITEM
    30-0-0/w PTR         r     1 @N                        27-0-0/w PTR         r     1 @NUMBER
    30-0-0/w PTR         r     1 @OLD_NUMBER               30-0-0/w PTR         r     1 @RESOURCE
   427-0-0/w PTR         r     1 @RESULT                   27-0-0/w PTR         r     1 @TITLE
    27-0-0/w PTR         r     1 @TITLE
   250-0-0/w UBIN        r     1 ALL_TOTAL(0:6)
   133-0-0/w UBIN        r     1 ALL_VAL(0:76)             16-0-0/w SBIN        r     1 AVAILPGS
    23-0-0/w SBIN        r     1 CURAVAIL                  *0-0-0/w SBIN        r     1 DIVISOR
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:61   
    10-0-0/w PTR         r     1 FMC_OLD_STATS$             7-0-0/w PTR         r     1 FMC_STATS$
    22-0-0/w SBIN        r     1 FPPC                     423-0-0/w SBIN        r     1 FROM
   421-0-0/w SBIN        r     1 ITEM                      *0-0-0/w SBIN        r     1 ITEM
   422-0-0/w SBIN        r     1 ITYPE                     13-0-0/w SBIN        r     1 MONSIZE
    *0-0-0/w SBIN        r     1 N
   412-0-0/w SBIN        r     1 NEW_TOTAL(0:6)
    *0-0-0/w SBIN        r     1 NUMBER(0:65)
    *0-0-0/w SBIN        r     1 OLD_NUMBER(0:65)
   403-0-0/w SBIN        r     1 OLD_TOTAL(0:6)
    31-0-0/w SBIN        r     1 OULD_NUMBER(0:65)
    12-0-0/w SBIN        r     1 PCORE                     11-0-0/w PTR         r     1 P_RESOURCE$
    *0-0-0/w STRC(216)   r     1 RESOURCE                  32-0-0/w UBIN        r     1 RESOURCE_MIN
    *0-0-0/w SBIN        r     1 RESULT                    14-0-0/w SBIN        r     1 RHELD
   374-0-0/w UBIN        r     1 SNAP_TOTAL(0:6)
   257-0-0/w UBIN        r     1 SNAP_VAL(0:76)
    *0-0-0/c CHAR(50)    r     1 TITLE                     *0-0-0/c CHAR(50)    r     1 TITLE
    31-0-0/w UBIN        r     1 TITLE_LEN                 31-0-0/w UBIN        r     1 TITLE_LEN
   424-0-0/w SBIN        r     1 TOO                       15-0-0/w SBIN        r     1 TOTSIZE
    24-0-0/w SBIN        r     1 UNACCOUNTED

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR(140)   r     1 PS_BUFFER                  0-0-0/w STRC(936)   r     1 PS_COLLECT
     0-0-0/w PTR         r     1 PS_STATS$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(108)   r     1 BLOCK                      0-0-0/w STRC(2376)  r     1 FMC$STATS
     0-0-0N  NULL        r     1 M$LO
     0-0-0/w UBIN        r     1 PER_ITEM(0:6)
     0-0-0/w STRC(2268)  r     1 P_RESOURCE                 0-0-0/c ASTR(9)     r     1 TEXTC
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:62   


   Procedure PSD$RESRCE requires 776 words for executable code.
   Procedure PSD$RESRCE requires 322 words of local(AUTO) storage.

    No errors detected in file PSD$RESRCE.:E05TSI    .
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:63   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:64   
          MINI XREF LISTING

ALL_TOTAL IN PROCEDURE DISP_CACHE
      6436**DCL      6500<>CALL     6510<>CALL     6543--CALL
ALL_VAL IN PROCEDURE DISP_CACHE
      6435**DCL      6472<>CALL     6483<>CALL     6528--CALL
AVAILPGS
      6353**DCL      6640<<ASSIGN   6647>>ASSIGN   6672<>CALL
BLOCK.DATA
      4920**DCL      6594--ASSIGN   6595--ASSIGN   6599--ASSIGN
CACHE_FMT
      6315**DCL      6528--CALL     6543--CALL
CACHE_FMT_SNAP
      6320**DCL      6524--CALL     6539--CALL
CACHE_HDR
      6310**DCL      6458--CALL
CACHE_OFFS
      6323**DCL      6466>>ASSIGN
CACHE_SCALE
      6325**DCL      6483<>CALL     6510<>CALL
CACHE_TYPE_TITLE
      6328**DCL      6524--CALL     6528--CALL     6539--CALL     6543--CALL
CURAVAIL
      6358**DCL      6644<<ASSIGN   6647>>ASSIGN
DASH_FMT
      6338**DCL      6666--CALL
DISP_CACHE
      6427**PROC     6614--CALL
DISP_MEM
      6569**PROC     6652--CALL     6653--CALL     6654--CALL     6655--CALL     6656--CALL     6657--CALL
      6658--CALL     6659--CALL     6660--CALL     6661--CALL     6662--CALL     6663--CALL     6664--CALL
      6668--CALL     6672--CALL     6673--CALL     6677--CALL     6678--CALL     6679--CALL     6680--CALL
      6684--CALL     6685--CALL     6686--CALL     6687--CALL     6688--CALL     6689--CALL     6690--CALL
      6691--CALL
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:65   
DISP_RES
      6388**PROC     6608--CALL     6609--CALL     6610--CALL     6611--CALL     6612--CALL
DIVISOR IN PROCEDURE PERCENT
      6560**DCL      6556--PROC     6561>>IF       6563>>IF       6564>>ASSIGN   6565>>ASSIGN
FMC$STATS
      6378**DCL      6614<>CALL     6614<>CALL
FMC_OLD_STATS$
      6346**DCL      6449>>IF       6522>>IF       6537>>IF       6592<>CALL     6597>>IF       6599<<ASSIGN
      6599>>ASSIGN   6614>>CALL
FMC_STATS$
      6345**DCL      6378--IMP-PTR  6592<>CALL     6595<<ASSIGN   6595>>ASSIGN   6614>>CALL
FPPC
      6357**DCL      6642<<ASSIGN   6644>>ASSIGN   6679<>CALL
FROM IN PROCEDURE DISP_CACHE
      6445**DCL      6466<<ASSIGN   6472>>CALL     6472>>CALL     6472>>CALL     6475>>CALL     6475>>CALL
      6475>>CALL     6475>>CALL     6475>>CALL     6475>>CALL     6483>>CALL     6483>>CALL     6489>>ASSIGN
      6491>>ASSIGN
ITEM IN PROCEDURE DISP_CACHE
      6443**DCL      6463<<DOINDEX  6466>>ASSIGN   6467>>ASSIGN   6469>>DOCASE   6483>>CALL     6489>>ASSIGN
      6489>>ASSIGN   6491>>ASSIGN   6491>>ASSIGN   6497>>DOCASE   6500>>CALL     6503>>CALL     6510>>CALL
      6510>>CALL     6510>>CALL     6510>>CALL     6510>>CALL
ITEM IN PROCEDURE PERCENT
      6559**DCL      6556--PROC     6564>>ASSIGN   6565>>ASSIGN
ITYPE IN PROCEDURE DISP_CACHE
      6444**DCL      6464<<DOINDEX  6466>>ASSIGN   6467>>ASSIGN   6520<<DOINDEX  6524>>CALL     6524>>CALL
      6528>>CALL     6528>>CALL     6528>>CALL
MEMORY_FMT
      6335**DCL      6582--CALL
MEMORY_HEADER
      6332**DCL      6621--CALL
MONSIZE
      6350**DCL      6625<<ASSIGN   6631>>ASSIGN   6654<>CALL
N IN PROCEDURE DISP_MEM
      6572**DCL      6569--PROC     6576>>IF       6582--CALL
NEW_TOTAL IN PROCEDURE DISP_CACHE
      6440**DCL      6461<<ASSIGN   6491<<ASSIGN   6491>>ASSIGN   6500>>CALL     6500>>CALL     6500<>CALL
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:66   
      6503>>CALL     6503>>CALL     6503>>CALL     6510<>CALL
NUMBER IN PROCEDURE DISP_CACHE
      6431**DCL      6427--PROC     6472>>CALL     6472>>CALL     6472<>CALL     6475>>CALL     6475>>CALL
      6475>>CALL     6483<>CALL     6491>>ASSIGN
OLD_NUMBER IN PROCEDURE DISP_CACHE
      6432**DCL      6427--PROC     6454>>ASSIGN
OLD_TOTAL IN PROCEDURE DISP_CACHE
      6439**DCL      6460<<ASSIGN   6489<<ASSIGN   6489>>ASSIGN   6503>>CALL     6503>>CALL     6503>>CALL
      6510<>CALL
OULD_NUMBER IN PROCEDURE DISP_CACHE
      6433**DCL      6451<<ASSIGN   6454<<ASSIGN   6475>>CALL     6475>>CALL     6475>>CALL     6483<>CALL
      6489>>ASSIGN
PCORE
      6349**DCL      6623<<ASSIGN   6638<<ASSIGN   6638>>ASSIGN   6640>>ASSIGN   6691<>CALL
PERCENT
      6556**PROC     6472--CALL     6475--CALL     6500--CALL     6503--CALL
PER_ITEM IN PROCEDURE DISP_CACHE
      6441**DCL      6524--CALL     6528--CALL     6528--CALL
PLEX_ENTRY
      6307**DCL      6419--CALL
PLEX_HEADER
      6302**DCL      6606--CALL
PSD$EJECT
      6370**DCL-ENT  6452--CALL     6455--CALL     6602--CALL     6619--CALL
PSL$CHOMP
      6368**DCL-ENT  6483--CALL     6510--CALL
PSL$LOCATE
      6369**DCL-ENT  6591--CALL     6592--CALL
PS_BUFFER
      4923**DCL      4958--DCLINIT  4960--DCLINIT
PS_COLLECT.AVAIL_MEM
      5079**DCL      6685<>CALL
PS_COLLECT.CALCNT
      5078**DCL      5078--REDEF
PS_COLLECT.USRSRV
      5075**DCL      5076--REDEF
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:67   
PS_FDS
      4940**DCL      6419<>CALL     6458<>CALL     6524<>CALL     6528<>CALL     6532<>CALL     6539<>CALL
      6543<>CALL     6548<>CALL     6582<>CALL     6604<>CALL     6606<>CALL     6621<>CALL     6666<>CALL
      6670<>CALL
PS_HLPCGBUF.DSPMSK
      5335**DCL      5341--REDEF
PS_HLPCGBUF.SLCMSK
      5376**DCL      5383--REDEF
PS_OLD_COLLECT.CALCNT
      5082**DCL      5083--REDEF
PS_OLD_COLLECT.USRSRV
      5080**DCL      5080--REDEF
PS_STATS$
      5084**DCL      5086--IMP-PTR
P_RESOURCE.PAGES.AARDSIZE
      6201**DCL      6631>>ASSIGN   6652<>CALL
P_RESOURCE.PAGES.AUTOAVAIL
      6206**DCL      6644>>ASSIGN   6680<>CALL
P_RESOURCE.PAGES.AUTOINUSE
      6207**DCL      6647>>ASSIGN   6677<>CALL
P_RESOURCE.PAGES.BPPC
      6191**DCL      6647>>ASSIGN   6688<>CALL
P_RESOURCE.PAGES.CGQPGS
      6213**DCL      6631>>ASSIGN   6659<>CALL
P_RESOURCE.PAGES.CONTEXT
      6211**DCL      6631>>ASSIGN   6655<>CALL
P_RESOURCE.PAGES.FPPC
      6194**DCL      6642>>ASSIGN
P_RESOURCE.PAGES.GHOSTSIZE
      6203**DCL      6631>>ASSIGN   6662<>CALL
P_RESOURCE.PAGES.HELD
      6198**DCL      6628>>ASSIGN
P_RESOURCE.PAGES.IN_TEST
      6193**DCL      6647>>ASSIGN   6687<>CALL
P_RESOURCE.PAGES.IOCC
      6188**DCL      6647>>ASSIGN   6689<>CALL
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:68   
P_RESOURCE.PAGES.IOCM
      6189**DCL      6684<>CALL
P_RESOURCE.PAGES.MONDSSIZE
      6204**DCL      6631>>ASSIGN   6656<>CALL
P_RESOURCE.PAGES.MONSIZE
      6212**DCL      6625>>ASSIGN
P_RESOURCE.PAGES.NCQPGS
      6200**DCL      6631>>ASSIGN   6658<>CALL
P_RESOURCE.PAGES.PCORE
      6195**DCL      6623>>ASSIGN
P_RESOURCE.PAGES.PROCSIZE
      6215**DCL      6631>>ASSIGN   6664<>CALL
P_RESOURCE.PAGES.RPROCSIZE
      6214**DCL      6631>>ASSIGN   6663<>CALL
P_RESOURCE.PAGES.RSVP
      6197**DCL      6628>>ASSIGN
P_RESOURCE.PAGES.SHAREDSAVAIL
      6208**DCL      6644>>ASSIGN
P_RESOURCE.PAGES.SHAREDSIZE
      6216**DCL      6647>>ASSIGN
P_RESOURCE.PAGES.SHAREDSUSE
      6209**DCL      6647>>ASSIGN   6678<>CALL
P_RESOURCE.PAGES.SPPC
      6190**DCL      6628>>ASSIGN   6631>>ASSIGN   6661<>CALL
P_RESOURCE.PAGES.SUSPECTS
      6192**DCL      6647>>ASSIGN   6686<>CALL
P_RESOURCE.PAGES.TIGRSIZE
      6205**DCL      6631>>ASSIGN   6657<>CALL
P_RESOURCE.PAGES.USERSIZE
      6210**DCL      6647>>ASSIGN   6673<>CALL
P_RESOURCE.PAGES.XDELTASIZE
      6202**DCL      6631>>ASSIGN   6653<>CALL
P_RESOURCE.RES
      6218**DCL      6285--REDEF
P_RESOURCE.RES.DOLISTS
      6272**DCL      6612<>CALL
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:69   
P_RESOURCE.RES.ENQ
      6259**DCL      6611<>CALL
P_RESOURCE.RES.IOCACHE
      6246**DCL      6610<>CALL
P_RESOURCE.RES.NIREQCT
      6233**DCL      6609<>CALL
P_RESOURCE.RES.NREQCT
      6220**DCL      6608<>CALL
P_RESOURCE$
      6347**DCL      6186--IMP-PTR  6591<>CALL     6594<<ASSIGN   6594>>ASSIGN   6608>>CALL     6609>>CALL
      6610>>CALL     6611>>CALL     6612>>CALL     6623>>ASSIGN   6625>>ASSIGN   6628>>ASSIGN   6628>>ASSIGN
      6628>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN
      6631>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN   6631>>ASSIGN   6642>>ASSIGN   6644>>ASSIGN
      6644>>ASSIGN   6647>>ASSIGN   6647>>ASSIGN   6647>>ASSIGN   6647>>ASSIGN   6647>>ASSIGN   6647>>ASSIGN
      6647>>ASSIGN   6647>>ASSIGN   6652>>CALL     6653>>CALL     6655>>CALL     6656>>CALL     6657>>CALL
      6658>>CALL     6659>>CALL     6661>>CALL     6662>>CALL     6663>>CALL     6664>>CALL     6673>>CALL
      6677>>CALL     6678>>CALL     6680>>CALL     6684>>CALL     6686>>CALL     6687>>CALL     6688>>CALL
      6689>>CALL
RESOURCE IN PROCEDURE DISP_RES
      6392**DCL      6388--PROC
RESOURCE.AVERAGE IN PROCEDURE DISP_RES
      6399**DCL      6419--CALL
RESOURCE.CURRENT IN PROCEDURE DISP_RES
      6395**DCL      6419--CALL
RESOURCE.MIN IN PROCEDURE DISP_RES
      6397**DCL      6410>>IF       6411>>ASSIGN
RESOURCE.PEAK IN PROCEDURE DISP_RES
      6396**DCL      6410>>IF       6412>>ASSIGN   6419--CALL
RESOURCE.TOTAL IN PROCEDURE DISP_RES
      6400**DCL      6419--CALL
RESOURCE_HEADING
      6299**DCL      6604--CALL
RESOURCE_MIN IN PROCEDURE DISP_RES
      6408**DCL      6411<<ASSIGN   6412<<ASSIGN   6419--CALL
RESULT IN PROCEDURE PERCENT
      6558**DCL      6556--PROC     6562<<ASSIGN   6564<<ASSIGN   6565<<ASSIGN
PL6.E3A0      #001=PSD$RESRCE File=PSD$RESRCE.:E05TSI                            WED 07/30/97 04:33 Page:70   
RHELD
      6351**DCL      6628<<ASSIGN   6631>>ASSIGN   6642>>ASSIGN   6660<>CALL
SKIP_1
      6340**DCL      6532--CALL     6548--CALL     6670--CALL
SNAP_TOTAL IN PROCEDURE DISP_CACHE
      6438**DCL      6503<>CALL     6510<>CALL     6539--CALL     6543--CALL
SNAP_VAL IN PROCEDURE DISP_CACHE
      6437**DCL      6475<>CALL     6483<>CALL     6524--CALL     6528--CALL
TEXTC.LEN
      5088**DCL      5088--IMP-SIZ
TITLE IN PROCEDURE DISP_MEM
      6571**DCL      6569--PROC     6580>>CALLBLT  6582--CALL
TITLE IN PROCEDURE DISP_RES
      6390**DCL      6388--PROC     6414>>CALLBLT  6419--CALL
TITLE_LEN IN PROCEDURE DISP_MEM
      6574**DCL      6580<<CALLBLT  6582>>CALL
TITLE_LEN IN PROCEDURE DISP_RES
      6407**DCL      6414<<CALLBLT  6419>>CALL
TOO IN PROCEDURE DISP_CACHE
      6446**DCL      6467<<ASSIGN   6472>>CALL     6475>>CALL     6483>>CALL     6483>>CALL
TOTSIZE
      6352**DCL      6631<<ASSIGN   6640>>ASSIGN   6668<>CALL
UNACCOUNTED
      6359**DCL      6647<<ASSIGN   6690<>CALL
X$WRITE
      6366**DCL-ENT  6419--CALL     6458--CALL     6524--CALL     6528--CALL     6532--CALL     6539--CALL
      6543--CALL     6548--CALL     6582--CALL     6604--CALL     6606--CALL     6621--CALL     6666--CALL
      6670--CALL
