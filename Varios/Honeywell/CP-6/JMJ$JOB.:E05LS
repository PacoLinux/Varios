VERSION E05

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:1    
        1        1        /*M* JMJ$JOB Addition and termination of batch jobs */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMJ$JOB: PROC(MSG$,DATA) ALTRET;
        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE CP_6;                          /* SYSTEM FPT MACROS                  */
       16       96        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
       17      635        %INCLUDE B_MACROS_C;                    /* SYSTEM MACRO DEFINITIONS           */
       18      746        %INCLUDE FM$FIT;                        /* FIT STRUCTURE-DEFINING MACROS      */
       19      967        %INCLUDE JM_SCODE_C;
       20      994        %INCLUDE JM$STRUCT;                     /* MBS TABLE STRUCTURES               */
       21     1739        %INCLUDE JMC_DATA_R;                    /* MBS-RESIDENT GLOBAL STATIC DATA    */
       22     1754        %INCLUDE JM_SUBS_C;                     /* MBS QUEUE INDEX DEFINITIONS        */
       23     1860        %INCLUDE JG_EVID_C;
       24     2085        %INCLUDE B_STRINGS_C;
       25     2214        %INCLUDE U$JIT_C;
       26     2400        %INCLUDE F_ERRORS_C;
       27     2640        %INCLUDE OC_MESSHD_C;
       28     2693        %INCLUDE OC_SUBS_C;
       29     3424        %INCLUDE F$DCB;
       30     3473        %INCLUDE FOO_MAC_C;
       31     4221        %INCLUDE XSJ_MAC_C;
       32     4300        %INCLUDE XSJ_SUBS_C;
       33     4327        %INCLUDE JP_MACRO_C;
       34     4482
       35     4483
       36     4484
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:2    
       37     4485        /**/
       38     4486        /* PARAMETERS */
       39     4487        /**/
       40     4488    1   DCL MSG$ PTR;                 /* POINTER TO THE EVENT CITATION FOR ADD/TERM   */
       41     4489    1   DCL NXT_SYSID REDEF MSG$ UBIN;
       42     4490    1   DCL DATA SBIN;
       43     4491
       44     4492
       45     4493
       46     4494        /**/
       47     4495        /* DCBS */
       48     4496        /**/
       49     4497    1   DCL M$EI DCB;
       50     4498    1   DCL M$MBSCOM DCB;
       51     4499    1   DCL M$STATUS DCB;
       52     4500
       53     4501
       54     4502
       55     4503        /**/
       56     4504        /* BASED */
       57     4505        /**/
       58     4506        %B$TCB;
       59     4509        %B$ALT;
       60     4517        %JM_CITE (FPTN=JM$CITE,STCLASS=BASED);
       61     4567        %JM_PART (FPTN=JM$PART,STCLASS=BASED);
       62     4622        %JM_SNLIST (FPTN=JM$SNLIST,ARRAY="(0:0)",STCLASS=BASED);
       63     4679        %JM_SN (FPTN=JM$SN,STCLASS=BASED);
       64     4718        %JM_RESLIST (FPTN=JM$RESLIST,ARRAY="(0:0)",STCLASS=BASED);
       65     4773        %JM_RES (FPTN=JM$RES,STCLASS=BASED);
       66     4810    1   DCL AWORD UBIN BASED ALIGNED;
       67     4811    1   DCL APTR$ PTR BASED ALIGNED;
       68     4812        %FM$FIT;
       69     4815        %JM_IF (FPTN=JM$IF,STCLASS=BASED);
       70     4973
       71     4974
       72     4975
       73     4976        /**/
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:3    
       74     4977        /* AUTO */
       75     4978        /**/
       76     4979    1   DCL STIF$ PTR;
       77     4980    1   DCL IF$ PTR;
       78     4981    1   DCL PSN$ PTR;
       79     4982    1   DCL RIT$ PTR;
       80     4983    1   DCL XCLHD$ PTR;
       81     4984    1   DCL SHRHD$ PTR;
       82     4985    1   DCL RITHD$ PTR;
       83     4986    1   DCL SYSID UBIN(36);
       84     4987    1   DCL I SBIN;
       85     4988    1   DCL QNUM UBIN WORD;
       86     4989    1   DCL M$EI$ PTR;
       87     4990    1   DCL TXSYSID CHAR(6);
       88     4991    1   DCL UATTRX SBIN;
       89     4992    1   DCL INSTATTRX SBIN;
       90     4993    1   DCL PROCATTRX SBIN;
       91     4994    1   DCL IFINFO$ PTR;
       92     4995    1   DCL SNINFO$ PTR;
       93     4996    1   DCL VRINFO$ PTR;
       94     4997    1   DCL PPTR$ PTR;
       95     4998    1   DCL JPTR$ PTR;
       96     4999    1   DCL LPTR$ PTR;
       97     5000    1   DCL ACTION UBIN;
       98     5001
       99     5002
      100     5003
      101     5004        /**/
      102     5005        /* STATIC */
      103     5006        /**/
      104     5007        %JM_IF (FPTN=JM_FITIF,STCLASS=STATIC,FIT=YES);
      105     5165        %JM_IF (FPTN=JM_IF,STCLASS=CONSTANT,FIT=NO);
      106     5323        %OC_MESSHD_W(NPARMS=3);
      107     5336    1         2 LEN(0:2) UBIN BYTE UNAL INIT(2,1,1),
      108     5337    1         2 ID UBIN HALF UNAL INIT(0),
      109     5338    1         2 OK_TYPE UBIN BYTE UNAL INIT(0),
      110     5339    1         2 PRIO UBIN BYTE UNAL INIT(0);
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:4    
      111     5340        %FPT_OPEN                             (FPTN=OPEN_JOB_TEST,
      112     5341                 NAME      = T_JOBNAME,
      113     5342                 ACCT      = T_SYMI,
      114     5343                 TEST      = YES,
      115     5344                 DCB       = M$EI,
      116     5345                 ASN       = FILE,
      117     5346                 FUN       = IN,
      118     5347                 FPARAM    = FIT,
      119     5348                 STCLASS   = CONSTANT);
      120     5457        %FPT_OPEN                             (FPTN=OPEN_JOB_INOUT,
      121     5458                 NAME      = T_JOBNAME,
      122     5459                 ACCT      = T_SYMI,
      123     5460                 DCB       = M$EI,
      124     5461                 ASN       = FILE,
      125     5462                 FUN       = UPDATE,
      126     5463                 STCLASS   = CONSTANT);
      127     5572        %FPT_OPEN                             (FPTN=OPEN_NEXT,
      128     5573                 ACCT      = T_SYMI,
      129     5574                 DCB       = M$EI,
      130     5575                 ASN       = FILE,
      131     5576                 FUN       = UPDATE,
      132     5577                 NXTF      = YES,
      133     5578                 FPARAM    = FIT,
      134     5579                 STCLASS   = CONSTANT);
      135     5688        %FPT_CLOSE                            (FPTN=CLS_NOCHANGE,
      136     5689                 DCB       = M$EI,
      137     5690                 DISP      = SAVE,
      138     5691                 STCLASS   = CONSTANT);
      139     5733        %FPT_CLOSE                            (FPTN=CLS_JOBFILE,
      140     5734                 DCB       = M$EI,
      141     5735                 CHGATT    = YES,
      142     5736                 DISP      = SAVE);
      143     5778        %FPT_CLOSE                            (FPTN=RELEASE_JOB,
      144     5779                 DCB       = M$EI,
      145     5780                 DISP      = RELEASE,
      146     5781                 STCLASS   = CONSTANT);
      147     5823        %FPT_WRITE                            (FPTN=WRITE_CSCG,
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:5    
      148     5824                 STATION   = T_WSTA,
      149     5825                 DCB       = M$MBSCOM,
      150     5826                 STCLASS   = STATIC);
      151     5857        %FPT_OPEN                             (FPTN=DEL_JOBFILE,
      152     5858                 DCB       = M$EI,
      153     5859                 NAME      = T_JOBNAME,
      154     5860                 ACCT      = T_SYMI,
      155     5861                 DELETE    = YES,
      156     5862                 ASN       = FILE,
      157     5863                 FUN       = IN,
      158     5864                 STCLASS   = CONSTANT);
      159     5973        %VLP_STATION (FPTN=T_WSTA);
      160     6000        %VLP_ACCT(FPTN=T_SYMI,ACCT=':SYMI');
      161     6013        %FO_CITE (FPTN=FOS_MSG,TYP=JOB,COD=FOEV_RRUN#,STCLASS=STATIC);
      162     6072        %JP_CITE (FPTN=JP_MSG,TYP=JOB,COD=JPEV_JACK#,STCLASS=STATIC);
      163     6104    1   DCL 1 T_JOBNAME STATIC DALIGNED,
      164     6105    1         2 C UBIN(9) UNAL INIT(7),
      165     6106    1         2 TXT CHAR(7) UNAL;
      166     6107    1   DCL FIT(0:1023) UBIN(36) STATIC ALIGNED;
      167     6108    1   DCL FIT$ PTR STATIC INIT(ADDR(FIT));
      168     6109        %XSJ_JOBINFO (FPTN=XSJ_JOBINFO,STCLASS=STATIC);
      169     6124        %XSJ_PARAM                            (FPTN=JREAD,
      170     6125                 DCB       = M$STATUS,
      171     6126                 TYPE      = %TYP_INFO#,
      172     6127                 BUF       = XSJ_JOBINFO);
      173     6144
      174     6145
      175     6146
      176     6147        /**/
      177     6148        /* SYMREFS */
      178     6149        /**/
      179     6150        %FO_SCB (FPTN=JM_JOBSCB,STCLASS=SYMREF);
      180     6180    1   DCL B$TCB$ PTR SYMREF;
      181     6181    1   DCL B$JIT$ PTR SYMREF;
      182     6182
      183     6183
      184     6184
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:6    
      185     6185        /**/
      186     6186        /* ENTREFS */
      187     6187        /**/
      188     6188    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      189     6189    1   DCL FOI$GBLK      ENTRY(3) ALTRET;
      190     6190    1   DCL FOI$RBLK      ENTRY(3) ALTRET;
      191     6191    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      192     6192    1   DCL JMR$CHECK_JD  ENTRY(1);
      193     6193    1   DCL JMR$FIND      ENTRY(2);
      194     6194    1   DCL JMS$SCHED     ENTRY;
      195     6195    1   DCL JMU$GET_SLOT  ENTRY(1);
      196     6196    1   DCL JMU$MOVE_IF   ENTRY(3);
      197     6197    1   DCL JMU$REL_SLOT  ENTRY(1);
      198     6198    1   DCL JMU$SELECTQ   ENTRY(2);
      199     6199    1   DCL JMU$SETSEG    ENTRY(2);
      200     6200    1   DCL JMU$SET_PARTS ENTRY(1);
      201     6201    1   DCL JMU$UNLINK_IF ENTRY(3);
      202     6202    1   DCL XSJ$READ      ENTRY(1) ALTRET;
      203     6203    1   DCL XSJ$WRITE     ENTRY(1) ALTRET;
      204     6204
      205     6205
      206     6206
      207     6207        /**/
      208     6208        /* SUBS */
      209     6209        /**/
      210     6210        %SUB F_JM='1215'O;
      211     6211        %SUB M_J='12'O;
      212     6212        %SUB FM$FIT = FIT$->FM$FIT;
      213     6213        %SUB JM$CITE  = MSG$->JM$CITE;
      214     6214        %SUB JM$FITIF  = IFINFO$->JM$IF;
      215     6215        %SUB JM$QIF  = IF$->JM$IF;
      216     6216        %SUB JM$SNLIST = SNINFO$->JM$SNLIST;
      217     6217        %SUB JM$SN = PSN$->JM$SN;
      218     6218        %SUB JM$VRLIST = VRINFO$->JM$RESLIST;
      219     6219        %SUB JM$RES = RIT$->JM$RES;
      220     6220        %SUB B$JIT = B$JIT$->B$JIT;
      221     6221        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:7    
      222     6222        %SUB NO_ACTION = 0 /*NO_ACTION*/;
      223     6223        %SUB RE_SUBMIT = 1 /*RE_SUBMIT*/;
      224     6224        %SUB REWRITE_FIT = 2 /*REWRITE_FIT*/;
      225     6225        %SUB DELETE_FILE = 3 /*DELETE_FILE*/;
      226     6226        %SUB FOREVER="WHILE ('1'B)";
      227     6227        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:8    
      228     6228        /**/
      229     6229        /* Internal routine to free virtual resource and packset name      */
      230     6230        /* linked list entries when a job terminates.                      */
      231     6231    1   REL_SLOTS: PROC(LISTPTR$);
      232     6232    2   DCL LISTPTR$ PTR;
      233     6233    2   DCL TEMPPTR$ PTR;
      234     6234    2         PSN$ = LISTPTR$;
      235     6235    3           DO WHILE (PSN$ ~= ADDR(NIL));
      236     6236    3           TEMPPTR$ = JM$SN.NXT$;
      237     6237    3           CALL JMU$REL_SLOT(PSN$);
      238     6238    3           PSN$ = TEMPPTR$;
      239     6239        /* NOTE: This works because the NXT$ pointer is in the same place  */
      240     6240        /* in both serial no. and virtual resource list entries.           */
      241     6241    3           END;
      242     6242    2         RETURN;
      243     6243    2   END REL_SLOTS;
      244     6244        /**/
      245     6245        /*D*   NAME:  IFNAME                                               */
      246     6246        /*D*   PURPOSE:  To compute and return the file name of a job.     */
      247     6247    1   IFNAME: PROC(SYSID,NAME);
      248     6248    2   DCL SYSID UBIN PARAM;
      249     6249    2   DCL 1 NAME PARAM ALIGNED,
      250     6250    2         2 COUNT UBIN(9) UNAL,
      251     6251    2         2 TEXT_SYSID CHAR(6) UNAL,
      252     6252    2         2 TAG_CHARACTER CHAR(1) UNAL;
      253     6253        /**/
      254     6254        /* Always 7 characters.                                            */
      255     6255    2         NAME.COUNT = 7;
      256     6256    2         CALL BINCHAR(NAME.TEXT_SYSID,SYSID);
      257     6257        /* 'S' indicates "passed PRESCAN".                                 */
      258     6258    2         NAME.TAG_CHARACTER = 'S';
      259     6259    2         RETURN;
      260     6260    2   END IFNAME;
      261     6261        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:9    
      262     6262        /**/
      263     6263        /*F*   NAME:   JMJ$ADD                                             */
      264     6264        /*F*   PURPOSE: To add a new job to the system.                    */
      265     6265    1   JMJ$ADD: ENTRY(MSG$) ALTRET; /* !!Doesn't ALTRET!! */
      266     6266    1         SYSID = JM$CITE.SYSID;
      267     6267    1         IF JM$CITE.RECOVERED = '0'B THEN
      268     6268    2           DO;
      269     6269        /* Let PRESCAN know that I've gotten the file... */
      270     6270    2           JP_MSG.SYSID=SYSID;
      271     6271    2           WRITE_CSCG.BUF_=VECTOR(JP_MSG);
      272     6272    2           T_WSTA.STATION# = 'PRESCAN';
      273     6273    2           CALL M$WRITE(WRITE_CSCG);
      274     6274    2           END;
      275     6275    1         CALL JMR$FIND (SYSID,IF$);
      276     6276    1         IF IF$ ~= ADDR(NIL) THEN RETURN;
      277     6277    1         CALL IFNAME(SYSID,T_JOBNAME);
      278     6278        /* Now, do a test open to get all the PRESCAN info from the fit    */
      279     6279    1         CALL M$OPEN(OPEN_JOB_TEST) ALTRET(BAD_IFOPN);
      280     6280        /* Find the FIT descriptors for the UATTR (job info), INSTATTR     */
      281     6281        /* (packset name/serial number list), and PROCATTR (virtual resource */
      282     6282        /* list) areas of the job file's FIT.                              */
      283     6283    1         UATTRX = 0;
      284     6284    1         INSTATTRX = 0;
      285     6285    1         PROCATTRX = 0;
      286     6286    2           DO I = 1 TO FM$FIT.CODES.CODE(0);
      287     6287    2           IF FM$FIT.CODES.CODE(I) = 11 THEN
      288     6288    3             DO;
      289     6289    3             UATTRX = FM$FIT.CODES.ITEMX(I);
      290     6290    3             IF FM$FIT.CODES.NDW(I) ~= SIZEW(JM_IF) THEN
      291     6291    4               DO;
      292     6292    4               CALL FOI$SNAP (%S$JM229,F_JM,M_J);
      293     6293        /*S*    SCREECH_CODE:   JMJ-S$JM229                                */
      294     6294        /*S*    TYPE:   SNAP                                               */
      295     6295        /*S*   MESSAGE: Input file information in FIT is incorrect size.   */
      296     6296        /*S*   REMARKS: This SNAP occurs when the JM$IF in the FIT isn't   */
      297     6297        /*S*            the correct size.  This problem has occurred       */
      298     6298        /*S*            historically when PRESCAN somehow manages to       */
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:10   
      299     6299        /*S*            scan the job twice before sending it.  Such action */
      300     6300        /*S*            is always a bug since the second scan occurs after */
      301     6301        /*S*            an error on the first scan, and is only done to    */
      302     6302        /*S*            produce the LP listing not to send the job.  The   */
      303     6303        /*S*            second pass results in the JM$IF part of the FIT   */
      304     6304        /*S*            being given the wrong size.  PRESCAN has been left */
      305     6305        /*S*            that way since MBS really doesn't want to accept   */
      306     6306        /*S*            a twice-scanned job.  Hence if this SNAP occurs,   */
      307     6307        /*S*            look for that bug in PRESCAN.                      */
      308     6308    4               GOTO KILLIN;
      309     6309    4               END;
      310     6310    3             END;
      311     6311    2           IF FM$FIT.CODES.CODE(I) = 12 THEN
      312     6312    2            INSTATTRX = FM$FIT.CODES.ITEMX(I);
      313     6313    2           IF FM$FIT.CODES.CODE(I) = 13 THEN
      314     6314    2            PROCATTRX = FM$FIT.CODES.ITEMX(I);
      315     6315    2           END;
      316     6316        /* Make sure that we were at least passed the basic job info table */
      317     6317    1         IF UATTRX = 0 THEN GOTO BAD_FIT;
      318     6318    1         IFINFO$ = PINCRW(FIT$,UATTRX);
      319     6319        /* Check to see that all expected tables were actually passed.     */
      320     6320    1         IF ((JM$FITIF.MAXVR > 0) AND (PROCATTRX = 0))
      321     6321    1         OR ((JM$FITIF.MAXPSN > 0) AND (INSTATTRX = 0)) THEN
      322     6322    2           DO;
      323     6323        /*S*    SCREECH_CODE:   JMJ-S$JM228                                */
      324     6324        /*S*    TYPE:   SNAP                                               */
      325     6325        /*S*   MESSAGE: FIT information not present in new job file.       */
      326     6326    2   BAD_FIT: CALL FOI$SNAP (%S$JM228,F_JM,M_J);
      327     6327    2           GOTO KILLIN;
      328     6328    2           END;
      329     6329        /* Get a new job frame */
      330     6330    1         CALL FOI$GBLK (JM_JOBSCB,IF$,SIZEW(JM$FITIF)) ALTRET(NOFRAMES);
      331     6331    1         JMC_BFIS$->AWORD = JMC_BFIS$->AWORD+1;
      332     6332        /* NOW MOVE THE PASSED FIT INFO INTO THE INPUT FILE ENTRY */
      333     6333    1         IF$->JM$IF.JNL=JM$FITIF.JNL;
      334     6334    1         JM$QIF  = JM$FITIF;
      335     6335        /* All is OK, so build pointers to  the virtual resource and       */
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:11   
      336     6336        /* serial number/packset name lists in the FIT.                    */
      337     6337    1         VRINFO$ = PINCRW(FIT$,PROCATTRX);
      338     6338    1         SNINFO$ = PINCRW(FIT$,INSTATTRX);
      339     6339        /* Now, move the passed lists of virtual resources and packset     */
      340     6340        /* names/serial numbers into their respective MBS tables.          */
      341     6341        /**/
      342     6342        /* Put exclusive and shared (shared private and public) into       */
      343     6343        /* separate linked lists, with a pointer to the head of each in    */
      344     6344        /* the job's information table.                                    */
      345     6345    1         XCLHD$ = ADDR(NIL);
      346     6346    1         SHRHD$ = ADDR(NIL);
      347     6347    2           DO I = 0 TO JM$QIF.MAXPSN - 1;
      348     6348    2           CALL JMU$GET_SLOT(PSN$);
      349     6349    2           JM$SN = JM$SNLIST.SN(I);
      350     6350    2           IF JM$SN.FLGS.EXCL THEN
      351     6351    3             DO;
      352     6352    3             JM$SN.NXT$ = XCLHD$;
      353     6353    3             XCLHD$ = PSN$;
      354     6354    3             END;
      355     6355    2           ELSE
      356     6356    3             DO;
      357     6357    3             JM$SN.NXT$ = SHRHD$;
      358     6358    3             SHRHD$ = PSN$;
      359     6359    3             END;
      360     6360    2           END;
      361     6361        /* Put the head pointers to each list in the job's info table      */
      362     6362    1         JM$QIF.XLNK$ = XCLHD$;
      363     6363    1         JM$QIF.SLNK$ = SHRHD$;
      364     6364        /* Move the virtual resource table from the FIT in the same way    */
      365     6365    1         RITHD$ = ADDR(NIL);
      366     6366    2           DO I = 0 TO JM$QIF.MAXVR - 1;
      367     6367    2           CALL JMU$GET_SLOT(RIT$);
      368     6368    2           JM$RES = JM$VRLIST.RES(I);
      369     6369    2           JM$RES.NXT$ = RITHD$;
      370     6370    2           RITHD$ = RIT$;
      371     6371    2           END;
      372     6372    1         JM$QIF.VRLIST$ = RITHD$;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:12   
      373     6373        /**/
      374     6374    1         JM$QIF.UNSAT_COUNT = JM$QIF.NJD; /* In case of 'O3' type ordering     */
      375     6375        /*     SET BITS IN JM$IF.PART  FOR PARTITIONS THIS JOB CAN RUN IN */
      376     6376    1         CALL JMU$SET_PARTS(IF$);
      377     6377        /*     Place this entry where it belongs on the MBS queues: */
      378     6378    1         CALL JMU$SELECTQ(IF$,QNUM);
      379     6379        /*     Finally, attempt to schedule somebody     */
      380     6380    1         CALL JMS$SCHED;
      381     6381    1         RETURN;
      382     6382        /**/
      383     6383        /**/
      384     6384        /**/
      385     6385    1   BAD_IFOPN:;
      386     6386        /*S*    SCREECH_CODE:   JMJ-S$JM230                                */
      387     6387        /*S*    TYPE:   SNAP                                               */
      388     6388        /*S*   MESSAGE: I/O error occurred on test open of new job file.   */
      389     6389    1         CALL FOI$SNAP (%S$JM230,F_JM,M_J);
      390     6390    1   KILLIN:;
      391     6391    1         CALL M$OPEN (DEL_JOBFILE) ALTRET(KILLIN1);
      392     6392    1   KILLIN1:;
      393     6393    1         JREAD.SYSID#=SYSID;
      394     6394    1         CALL XSJ$READ (JREAD) ALTRET(RTN);
      395     6395    1         XSJ_JOBINFO.STATUS#=%MBS_FILERR#;
      396     6396    1         CALL XSJ$WRITE (JREAD);
      397     6397    1   RTN:  ;
      398     6398    1         RETURN;
      399     6399        /**/
      400     6400    1   NOFRAMES:;
      401     6401        /*S*    SCREECH_CODE:   JMJ-S$JM225                                */
      402     6402        /*S*   TYPE:   SCREECH                                             */
      403     6403        /*S*   MESSAGE: Can't get memory for batch scheduler data segments */
      404     6404    1         CALL FOI$CRASH (%S$JM225,F_JM,M_J);
      405     6405        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:13   
      406     6406        /**/
      407     6407        /*F*   NAME:   JMJ$TERM                                            */
      408     6408        /*F*   PURPOSE: To remove a job from the running queue & partition.*/
      409     6409    1   JMJ$TERM: ENTRY(MSG$) ALTRET;
      410     6410    1         SYSID = JM$CITE.SYSID;
      411     6411    1         IF$ = JMC_CH.HRUN$;             /* GET HEAD OF RUNNING JOB QUEUE      */
      412     6412    2           DO WHILE(IF$ ~= ADDR(NIL));
      413     6413    2           IF JM$QIF.SYSID = SYSID THEN
      414     6414    3             DO;
      415     6415    3             PPTR$ = PINCRW(JMC_PPTR$,JM$QIF.PNUM); /* PTR TO PART PTR         */
      416     6416    3             PPTR$ = PPTR$->APTR$;
      417     6417    3             CALL JMU$SETSEG(PPTR$,%SPCL1SID); /* POINT INTO MON. ISR           */
      418     6418    3             JPTR$ = PPTR$->JM$PART.JOB$; /* HEAD OF JOBS IN PARTITION          */
      419     6419    3             IF JPTR$ = IF$ THEN
      420     6420    3              PPTR$->JM$PART.JOB$  = JPTR$->JM$IF.NXTJ$;
      421     6421    3             ELSE
      422     6422    4               DO;
      423     6423    4               LPTR$ = JPTR$;
      424     6424    5                 DO WHILE(JPTR$->JM$IF.NXTJ$ ~= ADDR(NIL));
      425     6425    5                 JPTR$ = LPTR$->JM$IF.NXTJ$;
      426     6426    5                 IF JPTR$ = IF$ THEN
      427     6427    6                   DO;
      428     6428    6                   LPTR$->JM$IF.NXTJ$ = JPTR$->JM$IF.NXTJ$;
      429     6429    6                   GOTO UNLINKED;
      430     6430    6                   END;
      431     6431    5                 LPTR$ = JPTR$;
      432     6432    5                 END;
      433     6433        /*S*    SCREECH_CODE:   JMJ-S$JM231                                */
      434     6434        /*S*    TYPE:   SNAP                                               */
      435     6435        /*S*   MESSAGE: Can't find terminated job in partitions job list.  */
      436     6436    4               CALL FOI$SNAP (%S$JM231,F_JM,M_J);
      437     6437    4               GOTO TRY_SCHED;
      438     6438    4   UNLINKED:   END;
      439     6439        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:14   
      440     6440        /* Handle the case where KEYIN requested that this job be aborted
      441     6441           and then subsequently rerun.                                    */
      442     6442    3             IF JM$QIF.FLG.KRERUN THEN
      443     6443    4               DO;
      444     6444    4               JM$QIF.FLG.RR2 = '1'B; /* Set 'being rerun'                  */
      445     6445    4               JM$QIF.FLG.KRERUN = '0'B;
      446     6446    4               I = JM$QIF.PRIO + JM_Q$P0;
      447     6447    4               CALL JMU$MOVE_IF(JM_Q$RUN,I,IF$);
      448     6448                    %DECR(VAR="PPTR$->JM$PART.CUR");
      449     6451    4               CALL JMJ$REWRITE_FIT(IF$);
      450     6452        /* Print the 'being scheduled for rerun msg. on the OC */
      451     6453    4               OC_MESSHD.OK_TYPE = 0;
      452     6454    4               OC_MESSHD.PRIO = JM$QIF.PRIO;
      453     6455    4               OC_MESSHD.MSG# = RERUN_MSG#;
      454     6456    4               OC_MESSHD.SYSID = JM$CITE.SYSID;
      455     6457    4               OC_MESSHD.ID = JM$CITE.SYSID;
      456     6458    4               OC_MESSHD.CADDR = M_ADMIN;
      457     6459    4               OC_MESSHD.WSN = JM$QIF.WSN;
      458     6460    4               WRITE_CSCG.BUF_ = VECTOR(OC_MESSHD);
      459     6461    4               T_WSTA.STATION# = 'KEYIN';
      460     6462    4               CALL M$WRITE(WRITE_CSCG);
      461     6463    4               IF JM$QIF.WSN ~= JM$QIF.WOO THEN
      462     6464    5                 DO;
      463     6465    5                 OC_MESSHD.CADDR = M_ADMIN | M_NONSYS;
      464     6466    5                 OC_MESSHD.WSN = JM$QIF.WOO;
      465     6467    5                 CALL M$WRITE(WRITE_CSCG);
      466     6468    5                 END;
      467     6469        /* Tell OUTSYM not to print this guy's output */
      468     6470    4               FOS_MSG.SYSID = JM$QIF.SYSID;
      469     6471    4               WRITE_CSCG.BUF_ = VECTOR(FOS_MSG);
      470     6472    4               T_WSTA.STATION# = 'OUTSYM';
      471     6473    4               CALL M$WRITE(WRITE_CSCG);
      472     6474    4               CALL JMS$SCHED;
      473     6475    4               RETURN;
      474     6476    4               END;
      475     6477        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:15   
      476     6478        /* Now, unlink the job from the running queue.                     */
      477     6479    3             CALL JMU$UNLINK_IF(JM_Q$RUN,,IF$);
      478     6480        /* Release any virtual resource or packset name/serial number      */
      479     6481        /* entries this job might have associated.                         */
      480     6482    3             IF JM$QIF.MAXVR > 0 THEN CALL REL_SLOTS(JM$QIF.VRLIST$);
      481     6483    3             IF JM$QIF.MAXPSN > 0 THEN
      482     6484    4               DO;
      483     6485    4               CALL REL_SLOTS(JM$QIF.XLNK$);
      484     6486    4               CALL REL_SLOTS(JM$QIF.SLNK$);
      485     6487    4               END;
      486     6488        /* Release the job frame to the free list.                         */
      487     6489    3             CALL FOI$RBLK (JM_JOBSCB,IF$,SIZEW(JM$QIF));
      488     6490        /* Decrement the "current batch user" count.                       */
      489     6491    3             JMC_BFIS$->AWORD = JMC_BFIS$->AWORD-1;
      490     6492        /* Decrement the "current jobs in partition" count.                */
      491     6493                  %DECR(VAR=PPTR$->JM$PART.CUR);
      492     6496        /* Update the status of any jobs which might be dependent upon the */
      493     6497        /* final status of this job.                                       */
      494     6498    3             JM$CITE.JOFF_INFO.STATUS = %FIN_COMPLETED#;
      495     6499    3             CALL JMR$CHECK_JD (MSG$);
      496     6500        /* Attempt to schedule another job.                                */
      497     6501    3   TRY_SCHED:
      498     6502    3             CALL JMS$SCHED;
      499     6503    3             RETURN;
      500     6504    3             END;
      501     6505    2           IF$ = JM$QIF.LNK$;
      502     6506    2           END;
      503     6507        /*S*    SCREECH_CODE:   JMJ-S$JM232                                */
      504     6508        /*S*    TYPE:   SNAP                                               */
      505     6509        /*S*   MESSAGE: Can't find terminated job in running job queue.    */
      506     6510    1         CALL FOI$SNAP (%S$JM232,F_JM,M_J);
      507     6511    1         GOTO TRY_SCHED;
      508     6512        /**/
      509     6513        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:16   
      510     6514        /**/
      511     6515        /*F*   NAME:     JMJ$REWRITE_FIT                                   */
      512     6516        /*F*   PURPOSE:  To rewrite the FIT of a job when something        */
      513     6517        /*,*             substantial is changed in the job's JM$IF,        */
      514     6518        /*,*             e.g., PRIO or U, so that JMJ$RECOVER can          */
      515     6519        /*,*             tell:  1) it was running;                         */
      516     6520        /*,*                    2) where;                                  */
      517     6521        /*,*                    3) lotsa other good stuff.                 */
      518     6522    1   JMJ$REWRITE_FIT: ENTRY(MSG$) ALTRET;
      519     6523                                /* Here, MSG$ points to the the exact same
      520     6524                                  stuff we read initially through UATTR of
      521     6525                                  the job file, BUT some MBS-owned fields
      522     6526                                  have been filled in.                     */
      523     6527    1         SYSID = MSG$->JM$IF.SYSID;
      524     6528    1         CALL IFNAME(SYSID,T_JOBNAME);
      525     6529    1         CALL M$OPEN(OPEN_JOB_INOUT) ALTRET(BAD_UPDIO);
      526     6530        /* COPY UATTR PART OF FIT INFO INTO STRUCTURE W/COUNT IN 1ST WORD  */
      527     6531        /* SO THAT WE CAN REWRITE IT INTO THE FILE'S FIT.                  */
      528     6532    1   JMJ$REWRITE_OPEN_FIT: ENTRY(MSG$) ALTRET;
      529     6533    1         JM_FITIF.COUNT=SIZEW(JM_IF);
      530     6534    1         STIF$ = PINCRW(ADDR(JM_FITIF),1);
      531     6535    1         STIF$->JM$IF.JNL=MSG$->JM$IF.JNL;
      532     6536    1         STIF$->JM$IF = MSG$->JM$IF;
      533     6537    1         CLS_JOBFILE.UATTR_ = VECTOR(JM_FITIF);
      534     6538    1         CALL M$CLOSE(CLS_JOBFILE) ALTRET(BAD_UPDIO);
      535     6539    1         RETURN;
      536     6540        /**/
      537     6541        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:17   
      538     6542        /**/
      539     6543        /*F*    NAME:   JMJ$DELJOB                                         */
      540     6544        /*F*    PURPOSE: To delete the input file for a job which has been */
      541     6545        /*,*            canceled before beginning execution, or which was  */
      542     6546        /*,*            not rerun following a crash.                       */
      543     6547    1   JMJ$DELJOB: ENTRY(MSG$) ALTRET;
      544     6548                                     /* For this entry, MSG$ is really
      545     6549                                        NXT_SYSID - the SYSID of the job
      546     6550                                        whose input file is to be deleted. */
      547     6551    1         CALL IFNAME(NXT_SYSID,T_JOBNAME);
      548     6552    1         CALL M$OPEN(OPEN_JOB_INOUT) ALTRET(BAD_UPDIO);
      549     6553    1         CALL M$CLOSE(RELEASE_JOB) ALTRET(BAD_UPDIO);
      550     6554    1         RETURN;
      551     6555        /**/
      552     6556    1   BAD_UPDIO:
      553     6557    1         CALL BADUPD;
      554     6558    1         ALTRETURN;
      555     6559        /**/
      556     6560    1   BADUPD: PROC;
      557     6561        /*S*    SCREECH_CODE:   JMJ-S$JM235                                  */
      558     6562        /*S*    TYPE:   SNAP                                               */
      559     6563        /*S*   MESSAGE: I/O error while opening/closing job file           */
      560     6564    2         CALL FOI$SNAP (%S$JM235,F_JM,M_J);
      561     6565        /* Attempt closing the file, in case we got one of the file mgmt   */
      562     6566        /* wierdies that gives an error on the open but still opens the file */
      563     6567    2         CALL M$CLOSE(CLS_JOBFILE) ALTRET(I_DONT_CARE);
      564     6568    2   I_DONT_CARE:;
      565     6569    2         RETURN;
      566     6570    2   END BADUPD;
      567     6571        /**/
      568     6572        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:18   
      569     6573        /**/
      570     6574        /*F*    NAME:   JMJ$RECOVER                                        */
      571     6575        /*F*    PURPOSE: To find the SYSIDs of jobs to be resubmitted      */
      572     6576        /*,*            and/or rerun following a crash.                    */
      573     6577    1   JMJ$RECOVER: ENTRY(MSG$,DATA) ALTRET;
      574     6578                        /* Here, MSG$ is really NXT_SYSID: a returned para-
      575     6579                           meter indicating the next SYSID obtained from a
      576     6580                           scan of :SYMI.  If zero, there are no more files
      577     6581                           to be resubmitted.                              */
      578     6582    1         M$EI$=DCBADDR(DCBNUM(M$EI));
      579     6583    2   AGAIN:  DO FOREVER;
      580     6584    2           CALL M$OPEN(OPEN_NEXT) ALTRET(DONE);
      581     6585    2   RCVR0:  ;
      582     6586    2           IF M$EI$->F$DCB.NAME.L ~= 7
      583     6587    2           OR SUBSTR (M$EI$->F$DCB.NAME.C,6,1) ~= 'S' THEN
      584     6588    2            GOTO SKIPFILE;
      585     6589    2           UATTRX = 0;
      586     6590    3             DO I = 1 TO FM$FIT.CODES.CODE(0);
      587     6591    3             IF FM$FIT.CODES.CODE(I) = 11 THEN
      588     6592    4               DO;
      589     6593    4               UATTRX = FM$FIT.CODES.ITEMX(I);
      590     6594    4               GOTO EXITLOOP;
      591     6595    4               END;
      592     6596    3             END;
      593     6597    2   EXITLOOP: ;
      594     6598    2           DATA = 0;                     /* Flag jobs that were running        */
      595     6599    2           ACTION = NO_ACTION;
      596     6600    2           IF (UATTRX ~= 0) AND (FM$FIT.CODES.NDW(I) = SIZEW(JM_IF)) THEN
      597     6601    3             DO;
      598     6602        /* We're going to delete any good input job files that we don't    */
      599     6603        /* rerun or re-submit.                                             */
      600     6604    3             ACTION = DELETE_FILE;
      601     6605    3             IFINFO$ = PINCRW(FIT$,UATTRX);
      602     6606    3             IF JM$FITIF.U > 0 THEN
      603     6607    4               DO;
      604     6608    4               DATA = -1;                /* Got a running one here!            */
      605     6609        /* If the job had been running and specified 'RERUN', then we      */
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:19   
      606     6610        /* will rerun it unless it was being rerun and was current user at */
      607     6611        /* the time of the crash.  The assumption here is that the job     */
      608     6612        /* might be causing the crash.  Note that the FIT must be rewritten*/
      609     6613        /* if this is the first rerun of a job in order to record the fact */
      610     6614        /* that the job was restarted.                                     */
      611     6615    4               IF JM$FITIF.FLG.RR THEN
      612     6616    4                IF JM$FITIF.FLG.RR2 THEN
      613     6617    4                 IF JMC_RVSYSID$->AWORD ~= JM$FITIF.SYSID THEN
      614     6618    4                  ACTION = RE_SUBMIT;
      615     6619    4                 ELSE;
      616     6620    4                ELSE
      617     6621    5                  DO;
      618     6622    5                  ACTION = REWRITE_FIT;
      619     6623    5                  JM$FITIF.FLG.RR2 = %TRUE;
      620     6624    5                  END;
      621     6625    4               END;
      622     6626        /* If the job was waiting to run, we will always re-submit it.     */
      623     6627    3             ELSE ACTION = RE_SUBMIT;  /* JOB WAS WAITING TO RUN             */
      624     6628    3             IF ACTION ~= DELETE_FILE THEN
      625     6629    4               DO;
      626     6630    4               IF ACTION = REWRITE_FIT
      627     6631    4               THEN
      628     6632    4                CALL JMJ$REWRITE_OPEN_FIT(IFINFO$);
      629     6633    4               ELSE
      630     6634    4                CALL M$CLOSE(CLS_NOCHANGE) ALTRET(RCVR10);
      631     6635    4               NXT_SYSID = JM$FITIF.SYSID;
      632     6636    4               RETURN;
      633     6637    4               END;
      634     6638    3             END;
      635     6639    2           IF ACTION = DELETE_FILE THEN
      636     6640    2            CALL M$CLOSE(RELEASE_JOB) ALTRET(RCVR10);
      637     6641    2           ELSE
      638     6642    2   SKIPFILE:
      639     6643    2            CALL M$CLOSE(CLS_NOCHANGE) ALTRET(RCVR10);
      640     6644    2           END;                            /* End of DO WHILE(%TRUE) loop         */
      641     6645    1   DONE:
      642     6646    1         IF B$ALT.ERR.CODE = %E$FILEBUSY THEN GOTO AGAIN;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:20   
      643     6647    1         IF B$ALT.ERR.CODE ~= %E$FDEOF THEN
      644     6648    2           DO;
      645     6649    2           TXSYSID=SUBSTR(M$EI$->F$DCB.NAME.C,0,6);
      646     6650    2           CALL M$OPEN (OPEN_NEXT) ALTRET(RCVR1);
      647     6651    2           GOTO RCVR0;
      648     6652    2   RCVR1:  IF TXSYSID ~= SUBSTR(M$EI$->F$DCB.NAME.C,0,6) THEN
      649     6653    3             DO;
      650     6654    3             TXSYSID=SUBSTR(M$EI$->F$DCB.NAME.C,0,6);
      651     6655    3             GOTO DONE;
      652     6656    3             END;
      653     6657    2           END;
      654     6658    1         NXT_SYSID = 0;                  /* FLAG END-OF-FILE-DIRECTORY         */
      655     6659    1         RETURN;
      656     6660        /**/
      657     6661    1   RCVR10: CALL BADUPD;
      658     6662    1         GOTO AGAIN;
      659     6663        /**/
      660     6664        /**/
      661     6665    1   END JMJ$JOB;

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:21   
--  Include file information  --

   JP_MACRO_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMJ$JOB.

   Procedure JMJ$JOB requires 770 words for executable code.
   Procedure JMJ$JOB requires 36 words of local(AUTO) storage.

    No errors detected in file JMJ$JOB.:E05TSI    .

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:22   

 Object Unit name= JMJ$JOB                                    File name= JMJ$JOB.:E05TOU
 UTS= JUL 29 '97 23:28:02.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$MBSCOM
    3   DCB   even  none     0      0  M$STATUS
    4   Data  even  none  1160   2210  JMJ$JOB
    5  RoData even  UTS    352    540  JMJ$JOB
    6   Proc  even  none   770   1402  JMJ$JOB
    7  RoData even  none    51     63  JMJ$JOB

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     6      0   yes    yes     yes      Std        2  JMJ$JOB
     6     47          yes     yes      Std        1  JMJ$ADD
     6    467          yes     yes      Std        1  JMJ$TERM
     6   1040          yes     yes      Std        1  JMJ$REWRITE_FIT
     6   1062          yes     yes      Std        1  JMJ$REWRITE_OPEN_FIT
     6   1116          yes     yes      Std        1  JMJ$DELJOB
     6   1155          yes     yes      Std        2  JMJ$RECOVER
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:23   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 JMR$FIND
         yes           Std       1 JMR$CHECK_JD
         yes           Std       1 JMU$GET_SLOT
         yes           Std       2 JMU$SELECTQ
         yes           Std       0 JMS$SCHED
         yes           Std       2 JMU$SETSEG
 yes     yes           Std       4 FOI$SNAP
 yes     yes           Std       3 FOI$GBLK
 yes     yes           Std       3 FOI$CRASH
         yes           Std       1 JMU$SET_PARTS
         yes           Std       3 JMU$MOVE_IF
         yes           Std       3 JMU$UNLINK_IF
 yes     yes           Std       1 XSJ$READ
 yes     yes           Std       3 FOI$RBLK
 yes     yes           Std       1 XSJ$WRITE
         yes           Std       1 JMU$REL_SLOT
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  JMC_CH                                JMC_BFIS$
     JMC_PPTR$                             JMC_RVSYSID$                          M$EI
     M$MBSCOM                              M$STATUS                              JM_JOBSCB
     B$TCB$                                B$JIT$                                B_VECTNIL
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:24   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID                                 ROSID
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:25   


        1        1        /*M* JMJ$JOB Addition and termination of batch jobs */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7       /*X* DMC,PLM=6,IND=0,IDT=2,SDI=2,CTI=0,ENU=0,AND,DCI=4,CSU=2,ECU=4,THI=0,DTI=0,STI=1
                 7        ,IAD=0,PRB */
        8        8        JMJ$JOB: PROC(MSG$,DATA) ALTRET;

      8  6 000000   000000 700200 xent  JMJ$JOB      TSX0  ! X66_AUTO_2
         6 000001   000044 000002                    ZERO    36,2
         6 000002   000046 710000 6                  TRA     s:6259+2

        9        9
       10       10
       11       11
       12       12        /**/
       13       13        /* INCLUDES */
       14       14        /**/
       15       15        %INCLUDE CP_6;                          /* SYSTEM FPT MACROS                  */
       16       96        %INCLUDE B_SEGIDS_C;                    /* SYSTEM SEGID DEFINITIONS           */
       17      635        %INCLUDE B_MACROS_C;                    /* SYSTEM MACRO DEFINITIONS           */
       18      746        %INCLUDE FM$FIT;                        /* FIT STRUCTURE-DEFINING MACROS      */
       19      967        %INCLUDE JM_SCODE_C;
       20      994        %INCLUDE JM$STRUCT;                     /* MBS TABLE STRUCTURES               */
       21     1739        %INCLUDE JMC_DATA_R;                    /* MBS-RESIDENT GLOBAL STATIC DATA    */
       22     1754        %INCLUDE JM_SUBS_C;                     /* MBS QUEUE INDEX DEFINITIONS        */
       23     1860        %INCLUDE JG_EVID_C;
       24     2085        %INCLUDE B_STRINGS_C;
       25     2214        %INCLUDE U$JIT_C;
       26     2400        %INCLUDE F_ERRORS_C;
       27     2640        %INCLUDE OC_MESSHD_C;
       28     2693        %INCLUDE OC_SUBS_C;
       29     3424        %INCLUDE F$DCB;
       30     3473        %INCLUDE FOO_MAC_C;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:26   
       31     4221        %INCLUDE XSJ_MAC_C;
       32     4300        %INCLUDE XSJ_SUBS_C;
       33     4327        %INCLUDE JP_MACRO_C;
       34     4482
       35     4483
       36     4484
       37     4485        /**/
       38     4486        /* PARAMETERS */
       39     4487        /**/
       40     4488    1   DCL MSG$ PTR;                 /* POINTER TO THE EVENT CITATION FOR ADD/TERM   */
       41     4489    1   DCL NXT_SYSID REDEF MSG$ UBIN;
       42     4490    1   DCL DATA SBIN;
       43     4491
       44     4492
       45     4493
       46     4494        /**/
       47     4495        /* DCBS */
       48     4496        /**/
       49     4497    1   DCL M$EI DCB;
       50     4498    1   DCL M$MBSCOM DCB;
       51     4499    1   DCL M$STATUS DCB;
       52     4500
       53     4501
       54     4502
       55     4503        /**/
       56     4504        /* BASED */
       57     4505        /**/
       58     4506        %B$TCB;
       59     4509        %B$ALT;
       60     4517        %JM_CITE (FPTN=JM$CITE,STCLASS=BASED);
       61     4567        %JM_PART (FPTN=JM$PART,STCLASS=BASED);
       62     4622        %JM_SNLIST (FPTN=JM$SNLIST,ARRAY="(0:0)",STCLASS=BASED);
       63     4679        %JM_SN (FPTN=JM$SN,STCLASS=BASED);
       64     4718        %JM_RESLIST (FPTN=JM$RESLIST,ARRAY="(0:0)",STCLASS=BASED);
       65     4773        %JM_RES (FPTN=JM$RES,STCLASS=BASED);
       66     4810    1   DCL AWORD UBIN BASED ALIGNED;
       67     4811    1   DCL APTR$ PTR BASED ALIGNED;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:27   
       68     4812        %FM$FIT;
       69     4815        %JM_IF (FPTN=JM$IF,STCLASS=BASED);
       70     4973
       71     4974
       72     4975
       73     4976        /**/
       74     4977        /* AUTO */
       75     4978        /**/
       76     4979    1   DCL STIF$ PTR;
       77     4980    1   DCL IF$ PTR;
       78     4981    1   DCL PSN$ PTR;
       79     4982    1   DCL RIT$ PTR;
       80     4983    1   DCL XCLHD$ PTR;
       81     4984    1   DCL SHRHD$ PTR;
       82     4985    1   DCL RITHD$ PTR;
       83     4986    1   DCL SYSID UBIN(36);
       84     4987    1   DCL I SBIN;
       85     4988    1   DCL QNUM UBIN WORD;
       86     4989    1   DCL M$EI$ PTR;
       87     4990    1   DCL TXSYSID CHAR(6);
       88     4991    1   DCL UATTRX SBIN;
       89     4992    1   DCL INSTATTRX SBIN;
       90     4993    1   DCL PROCATTRX SBIN;
       91     4994    1   DCL IFINFO$ PTR;
       92     4995    1   DCL SNINFO$ PTR;
       93     4996    1   DCL VRINFO$ PTR;
       94     4997    1   DCL PPTR$ PTR;
       95     4998    1   DCL JPTR$ PTR;
       96     4999    1   DCL LPTR$ PTR;
       97     5000    1   DCL ACTION UBIN;
       98     5001
       99     5002
      100     5003
      101     5004        /**/
      102     5005        /* STATIC */
      103     5006        /**/
      104     5007        %JM_IF (FPTN=JM_FITIF,STCLASS=STATIC,FIT=YES);
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:28   
      105     5165        %JM_IF (FPTN=JM_IF,STCLASS=CONSTANT,FIT=NO);
      106     5323        %OC_MESSHD_W(NPARMS=3);
      107     5336    1         2 LEN(0:2) UBIN BYTE UNAL INIT(2,1,1),
      108     5337    1         2 ID UBIN HALF UNAL INIT(0),
      109     5338    1         2 OK_TYPE UBIN BYTE UNAL INIT(0),
      110     5339    1         2 PRIO UBIN BYTE UNAL INIT(0);
      111     5340        %FPT_OPEN                             (FPTN=OPEN_JOB_TEST,
      112     5341                 NAME      = T_JOBNAME,
      113     5342                 ACCT      = T_SYMI,
      114     5343                 TEST      = YES,
      115     5344                 DCB       = M$EI,
      116     5345                 ASN       = FILE,
      117     5346                 FUN       = IN,
      118     5347                 FPARAM    = FIT,
      119     5348                 STCLASS   = CONSTANT);
      120     5457        %FPT_OPEN                             (FPTN=OPEN_JOB_INOUT,
      121     5458                 NAME      = T_JOBNAME,
      122     5459                 ACCT      = T_SYMI,
      123     5460                 DCB       = M$EI,
      124     5461                 ASN       = FILE,
      125     5462                 FUN       = UPDATE,
      126     5463                 STCLASS   = CONSTANT);
      127     5572        %FPT_OPEN                             (FPTN=OPEN_NEXT,
      128     5573                 ACCT      = T_SYMI,
      129     5574                 DCB       = M$EI,
      130     5575                 ASN       = FILE,
      131     5576                 FUN       = UPDATE,
      132     5577                 NXTF      = YES,
      133     5578                 FPARAM    = FIT,
      134     5579                 STCLASS   = CONSTANT);
      135     5688        %FPT_CLOSE                            (FPTN=CLS_NOCHANGE,
      136     5689                 DCB       = M$EI,
      137     5690                 DISP      = SAVE,
      138     5691                 STCLASS   = CONSTANT);
      139     5733        %FPT_CLOSE                            (FPTN=CLS_JOBFILE,
      140     5734                 DCB       = M$EI,
      141     5735                 CHGATT    = YES,
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:29   
      142     5736                 DISP      = SAVE);
      143     5778        %FPT_CLOSE                            (FPTN=RELEASE_JOB,
      144     5779                 DCB       = M$EI,
      145     5780                 DISP      = RELEASE,
      146     5781                 STCLASS   = CONSTANT);
      147     5823        %FPT_WRITE                            (FPTN=WRITE_CSCG,
      148     5824                 STATION   = T_WSTA,
      149     5825                 DCB       = M$MBSCOM,
      150     5826                 STCLASS   = STATIC);
      151     5857        %FPT_OPEN                             (FPTN=DEL_JOBFILE,
      152     5858                 DCB       = M$EI,
      153     5859                 NAME      = T_JOBNAME,
      154     5860                 ACCT      = T_SYMI,
      155     5861                 DELETE    = YES,
      156     5862                 ASN       = FILE,
      157     5863                 FUN       = IN,
      158     5864                 STCLASS   = CONSTANT);
      159     5973        %VLP_STATION (FPTN=T_WSTA);
      160     6000        %VLP_ACCT(FPTN=T_SYMI,ACCT=':SYMI');
      161     6013        %FO_CITE (FPTN=FOS_MSG,TYP=JOB,COD=FOEV_RRUN#,STCLASS=STATIC);
      162     6072        %JP_CITE (FPTN=JP_MSG,TYP=JOB,COD=JPEV_JACK#,STCLASS=STATIC);
      163     6104    1   DCL 1 T_JOBNAME STATIC DALIGNED,
      164     6105    1         2 C UBIN(9) UNAL INIT(7),
      165     6106    1         2 TXT CHAR(7) UNAL;
      166     6107    1   DCL FIT(0:1023) UBIN(36) STATIC ALIGNED;
      167     6108    1   DCL FIT$ PTR STATIC INIT(ADDR(FIT));
      168     6109        %XSJ_JOBINFO (FPTN=XSJ_JOBINFO,STCLASS=STATIC);
      169     6124        %XSJ_PARAM                            (FPTN=JREAD,
      170     6125                 DCB       = M$STATUS,
      171     6126                 TYPE      = %TYP_INFO#,
      172     6127                 BUF       = XSJ_JOBINFO);
      173     6144
      174     6145
      175     6146
      176     6147        /**/
      177     6148        /* SYMREFS */
      178     6149        /**/
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:30   
      179     6150        %FO_SCB (FPTN=JM_JOBSCB,STCLASS=SYMREF);
      180     6180    1   DCL B$TCB$ PTR SYMREF;
      181     6181    1   DCL B$JIT$ PTR SYMREF;
      182     6182
      183     6183
      184     6184
      185     6185        /**/
      186     6186        /* ENTREFS */
      187     6187        /**/
      188     6188    1   DCL FOI$CRASH     ENTRY(3) ALTRET;
      189     6189    1   DCL FOI$GBLK      ENTRY(3) ALTRET;
      190     6190    1   DCL FOI$RBLK      ENTRY(3) ALTRET;
      191     6191    1   DCL FOI$SNAP      ENTRY(4) ALTRET;
      192     6192    1   DCL JMR$CHECK_JD  ENTRY(1);
      193     6193    1   DCL JMR$FIND      ENTRY(2);
      194     6194    1   DCL JMS$SCHED     ENTRY;
      195     6195    1   DCL JMU$GET_SLOT  ENTRY(1);
      196     6196    1   DCL JMU$MOVE_IF   ENTRY(3);
      197     6197    1   DCL JMU$REL_SLOT  ENTRY(1);
      198     6198    1   DCL JMU$SELECTQ   ENTRY(2);
      199     6199    1   DCL JMU$SETSEG    ENTRY(2);
      200     6200    1   DCL JMU$SET_PARTS ENTRY(1);
      201     6201    1   DCL JMU$UNLINK_IF ENTRY(3);
      202     6202    1   DCL XSJ$READ      ENTRY(1) ALTRET;
      203     6203    1   DCL XSJ$WRITE     ENTRY(1) ALTRET;
      204     6204
      205     6205
      206     6206
      207     6207        /**/
      208     6208        /* SUBS */
      209     6209        /**/
      210     6210        %SUB F_JM='1215'O;
      211     6211        %SUB M_J='12'O;
      212     6212        %SUB FM$FIT = FIT$->FM$FIT;
      213     6213        %SUB JM$CITE  = MSG$->JM$CITE;
      214     6214        %SUB JM$FITIF  = IFINFO$->JM$IF;
      215     6215        %SUB JM$QIF  = IF$->JM$IF;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:31   
      216     6216        %SUB JM$SNLIST = SNINFO$->JM$SNLIST;
      217     6217        %SUB JM$SN = PSN$->JM$SN;
      218     6218        %SUB JM$VRLIST = VRINFO$->JM$RESLIST;
      219     6219        %SUB JM$RES = RIT$->JM$RES;
      220     6220        %SUB B$JIT = B$JIT$->B$JIT;
      221     6221        %SUB B$ALT=B$TCB$->B$TCB.ALT$->B$ALT;
      222     6222        %SUB NO_ACTION = 0 /*NO_ACTION*/;
      223     6223        %SUB RE_SUBMIT = 1 /*RE_SUBMIT*/;
      224     6224        %SUB REWRITE_FIT = 2 /*REWRITE_FIT*/;
      225     6225        %SUB DELETE_FILE = 3 /*DELETE_FILE*/;
      226     6226        %SUB FOREVER="WHILE ('1'B)";
      227     6227        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:32   
      228     6228        /**/
      229     6229        /* Internal routine to free virtual resource and packset name      */
      230     6230        /* linked list entries when a job terminates.                      */
      231     6231    1   REL_SLOTS: PROC(LISTPTR$);

   6231  6 000003   200034 741300       REL_SLOTS    STX1  ! ACTION+1,,AUTO

      232     6232    2   DCL LISTPTR$ PTR;
      233     6233    2   DCL TEMPPTR$ PTR;
      234     6234    2         PSN$ = LISTPTR$;

   6234  6 000004   200035 470500                    LDP0    @LISTPTR$,,AUTO
         6 000005   000000 236100                    LDQ     0,,PR0
         6 000006   200007 756100                    STQ     PSN$,,AUTO

      235     6235    3           DO WHILE (PSN$ ~= ADDR(NIL));

   6235  6 000007   000023 710000 6                  TRA     s:6241

      236     6236    3           TEMPPTR$ = JM$SN.NXT$;

   6236  6 000010   200007 470500                    LDP0    PSN$,,AUTO
         6 000011   000002 236100                    LDQ     2,,PR0
         6 000012   200036 756100                    STQ     TEMPPTR$,,AUTO

      237     6237    3           CALL JMU$REL_SLOT(PSN$);

   6237  6 000013   200007 631500                    EPPR1   PSN$,,AUTO
         6 000014   200040 451500                    STP1    @NAME+2,,AUTO
         6 000015   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000017   000000 701000 xent               TSX1    JMU$REL_SLOT
         6 000020   000000 011000                    NOP     0

      238     6238    3           PSN$ = TEMPPTR$;

   6238  6 000021   200036 236100                    LDQ     TEMPPTR$,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:33   
         6 000022   200007 756100                    STQ     PSN$,,AUTO

      239     6239        /* NOTE: This works because the NXT$ pointer is in the same place  */
      240     6240        /* in both serial no. and virtual resource list entries.           */
      241     6241    3           END;

   6241  6 000023   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000024   000010 601000 6                  TNZ     s:6236

      242     6242    2         RETURN;

   6242  6 000025   200034 221300                    LDX1  ! ACTION+1,,AUTO
         6 000026   000001 702211                    TSX2  ! 1,X1

      243     6243    2   END REL_SLOTS;
      244     6244        /**/
      245     6245        /*D*   NAME:  IFNAME                                               */
      246     6246        /*D*   PURPOSE:  To compute and return the file name of a job.     */
      247     6247    1   IFNAME: PROC(SYSID,NAME);

   6247  6 000027   200034 741300       IFNAME       STX1  ! ACTION+1,,AUTO

      248     6248    2   DCL SYSID UBIN PARAM;
      249     6249    2   DCL 1 NAME PARAM ALIGNED,
      250     6250    2         2 COUNT UBIN(9) UNAL,
      251     6251    2         2 TEXT_SYSID CHAR(6) UNAL,
      252     6252    2         2 TAG_CHARACTER CHAR(1) UNAL;
      253     6253        /**/
      254     6254        /* Always 7 characters.                                            */
      255     6255    2         NAME.COUNT = 7;

   6255  6 000030   200036 470500                    LDP0    @NAME,,AUTO
         6 000031   007000 236003                    LDQ     3584,DU
         6 000032   000000 552140                    STBQ    0,'40'O,PR0

      256     6256    2         CALL BINCHAR(NAME.TEXT_SYSID,SYSID);

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:34   
   6256  6 000033   200035 471500                    LDP1    @SYSID,,AUTO
         6 000034   100000 235100                    LDA     0,,PR1
         6 000035   000044 773000                    LRL     36
         6 000036   200040 757100                    STAQ    @NAME+2,,AUTO
         6 000037   000100 301500                    BTD
         6 000040   200040 000010                    NDSC9   @NAME+2,,AUTO            cn=0,s=lsgnf,sf=0,n=8
         6 000041   000000 230006                    NDSC9   0,,PR0                   cn=1,s=nosgn,sf=0,n=6

      257     6257        /* 'S' indicates "passed PRESCAN".                                 */
      258     6258    2         NAME.TAG_CHARACTER = 'S';

   6258  6 000042   000123 236007                    LDQ     83,DL
         6 000043   000001 552104                    STBQ    1,'04'O,PR0

      259     6259    2         RETURN;

   6259  6 000044   200034 221300                    LDX1  ! ACTION+1,,AUTO
         6 000045   000001 702211                    TSX2  ! 1,X1
         6 000046   000051 710000 6                  TRA     s:6266

      260     6260    2   END IFNAME;
      261     6261        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:35   
      262     6262        /**/
      263     6263        /*F*   NAME:   JMJ$ADD                                             */
      264     6264        /*F*   PURPOSE: To add a new job to the system.                    */
      265     6265    1   JMJ$ADD: ENTRY(MSG$) ALTRET; /* !!Doesn't ALTRET!! */

   6265  6 000047   000000 700200 xent  JMJ$ADD      TSX0  ! X66_AUTO_2
         6 000050   000044 000002                    ZERO    36,2

      266     6266    1         SYSID = JM$CITE.SYSID;

   6266  6 000051   200003 470500                    LDP0    @MSG$,,AUTO
         6 000052   000000 471500                    LDP1    0,,PR0
         6 000053   100000 236100                    LDQ     0,,PR1
         6 000054   777777 376007                    ANQ     -1,DL
         6 000055   200014 756100                    STQ     SYSID,,AUTO

      267     6267    1         IF JM$CITE.RECOVERED = '0'B THEN

   6267  6 000056   000000 471500                    LDP1    0,,PR0
         6 000057   100002 234100                    SZN     2,,PR1
         6 000060   000073 604000 6                  TMI     s:6275

      268     6268    2           DO;

      269     6269        /* Let PRESCAN know that I've gotten the file... */
      270     6270    2           JP_MSG.SYSID=SYSID;

   6270  6 000061   000000 620006                    EAX0    0,QL
         6 000062   000165 440000 4                  SXL0    JP_MSG

      271     6271    2           WRITE_CSCG.BUF_=VECTOR(JP_MSG);

   6271  6 000063   000000 237000 7                  LDAQ    0
         6 000064   000140 757000 4                  STAQ    WRITE_CSCG+4

      272     6272    2           T_WSTA.STATION# = 'PRESCAN';

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:36   
   6272  6 000065   040000 100400                    MLR     fill='040'O
         6 000066   000532 000007 5                  ADSC9   DEL_JOBFILE+58           cn=0,n=7
         6 000067   000150 000010 4                  ADSC9   T_WSTA                   cn=0,n=8

      273     6273    2           CALL M$WRITE(WRITE_CSCG);

   6273  6 000070   000134 630400 4                  EPPR0   WRITE_CSCG
         6 000071   040001 713400                    CLIMB   write
         6 000072   401400 401760                    pmme    nvectors=4

      274     6274    2           END;

      275     6275    1         CALL JMR$FIND (SYSID,IF$);

   6275  6 000073   200006 630500                    EPPR0   IF$,,AUTO
         6 000074   200041 450500                    STP0    @NAME+3,,AUTO
         6 000075   200014 631500                    EPPR1   SYSID,,AUTO
         6 000076   200040 451500                    STP1    @NAME+2,,AUTO
         6 000077   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000100   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000101   000000 701000 xent               TSX1    JMR$FIND
         6 000102   000000 011000                    NOP     0

      276     6276    1         IF IF$ ~= ADDR(NIL) THEN RETURN;

   6276  6 000103   200006 236100                    LDQ     IF$,,AUTO
         6 000104   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000105   000107 600000 6                  TZE     s:6277

   6276  6 000106   000000 702200 xent               TSX2  ! X66_ARET

      277     6277    1         CALL IFNAME(SYSID,T_JOBNAME);

   6277  6 000107   000002 236000 7                  LDQ     2
         6 000110   200036 756100                    STQ     @SYSID+1,,AUTO
         6 000111   200014 630500                    EPPR0   SYSID,,AUTO
         6 000112   200035 450500                    STP0    ACTION+2,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:37   
         6 000113   000027 701000 6                  TSX1    IFNAME
         6 000114   000000 011000                    NOP     0

      278     6278        /* Now, do a test open to get all the PRESCAN info from the fit    */
      279     6279    1         CALL M$OPEN(OPEN_JOB_TEST) ALTRET(BAD_IFOPN);

   6279  6 000115   000066 630400 5                  EPPR0   OPEN_JOB_TEST
         6 000116   450000 713400                    CLIMB   alt,open
         6 000117   410400 401760                    pmme    nvectors=18
         6 000120   000435 702000 6                  TSX2    BAD_IFOPN

      280     6280        /* Find the FIT descriptors for the UATTR (job info), INSTATTR     */
      281     6281        /* (packset name/serial number list), and PROCATTR (virtual resource */
      282     6282        /* list) areas of the job file's FIT.                              */
      283     6283    1         UATTRX = 0;

   6283  6 000121   200022 450100                    STZ     UATTRX,,AUTO

      284     6284    1         INSTATTRX = 0;

   6284  6 000122   200023 450100                    STZ     INSTATTRX,,AUTO

      285     6285    1         PROCATTRX = 0;

   6285  6 000123   200024 450100                    STZ     PROCATTRX,,AUTO

      286     6286    2           DO I = 1 TO FM$FIT.CODES.CODE(0);

   6286  6 000124   000001 235007                    LDA     1,DL
         6 000125   200015 755100                    STA     I,,AUTO
         6 000126   000170 710000 6                  TRA     s:6315+1

      287     6287    2           IF FM$FIT.CODES.CODE(I) = 11 THEN

   6287  6 000127   002172 470400 4                  LDP0    FIT$
         6 000130   200015 720100                    LXL0    I,,AUTO
         6 000131   000000 236110                    LDQ     0,X0,PR0
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:38   
         6 000132   760000 376003                    ANQ     -8192,DU
         6 000133   260000 116003                    CMPQ    90112,DU
         6 000134   000151 601000 6                  TNZ     s:6311

      288     6288    3             DO;

      289     6289    3             UATTRX = FM$FIT.CODES.ITEMX(I);

   6289  6 000135   000000 236110                    LDQ     0,X0,PR0
         6 000136   001777 376007                    ANQ     1023,DL
         6 000137   200022 756100                    STQ     UATTRX,,AUTO

      290     6290    3             IF FM$FIT.CODES.NDW(I) ~= SIZEW(JM_IF) THEN

   6290  6 000140   000000 236110                    LDQ     0,X0,PR0
         6 000141   000003 376000 7                  ANQ     3
         6 000142   154000 116007                    CMPQ    55296,DL
         6 000143   000151 600000 6                  TZE     s:6311

      291     6291    4               DO;

      292     6292    4               CALL FOI$SNAP (%S$JM229,F_JM,M_J);

   6292  6 000144   000007 630400 7                  EPPR0   7
         6 000145   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000146   000000 701000 xent               TSX1    FOI$SNAP
         6 000147   000000 011000                    NOP     0

      293     6293        /*S*    SCREECH_CODE:   JMJ-S$JM229                                */
      294     6294        /*S*    TYPE:   SNAP                                               */
      295     6295        /*S*   MESSAGE: Input file information in FIT is incorrect size.   */
      296     6296        /*S*   REMARKS: This SNAP occurs when the JM$IF in the FIT isn't   */
      297     6297        /*S*            the correct size.  This problem has occurred       */
      298     6298        /*S*            historically when PRESCAN somehow manages to       */
      299     6299        /*S*            scan the job twice before sending it.  Such action */
      300     6300        /*S*            is always a bug since the second scan occurs after */
      301     6301        /*S*            an error on the first scan, and is only done to    */
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:39   
      302     6302        /*S*            produce the LP listing not to send the job.  The   */
      303     6303        /*S*            second pass results in the JM$IF part of the FIT   */
      304     6304        /*S*            being given the wrong size.  PRESCAN has been left */
      305     6305        /*S*            that way since MBS really doesn't want to accept   */
      306     6306        /*S*            a twice-scanned job.  Hence if this SNAP occurs,   */
      307     6307        /*S*            look for that bug in PRESCAN.                      */
      308     6308    4               GOTO KILLIN;

   6308  6 000150   000441 710000 6                  TRA     KILLIN

      309     6309    4               END;
      310     6310    3             END;
      311     6311    2           IF FM$FIT.CODES.CODE(I) = 12 THEN

   6311  6 000151   000000 236110                    LDQ     0,X0,PR0
         6 000152   760000 376003                    ANQ     -8192,DU
         6 000153   300000 116003                    CMPQ    98304,DU
         6 000154   000160 601000 6                  TNZ     s:6313

      312     6312    2            INSTATTRX = FM$FIT.CODES.ITEMX(I);

   6312  6 000155   000000 236110                    LDQ     0,X0,PR0
         6 000156   001777 376007                    ANQ     1023,DL
         6 000157   200023 756100                    STQ     INSTATTRX,,AUTO

      313     6313    2           IF FM$FIT.CODES.CODE(I) = 13 THEN

   6313  6 000160   000000 236110                    LDQ     0,X0,PR0
         6 000161   760000 376003                    ANQ     -8192,DU
         6 000162   320000 116003                    CMPQ    106496,DU
         6 000163   000167 601000 6                  TNZ     s:6315

      314     6314    2            PROCATTRX = FM$FIT.CODES.ITEMX(I);

   6314  6 000164   000000 236110                    LDQ     0,X0,PR0
         6 000165   001777 376007                    ANQ     1023,DL
         6 000166   200024 756100                    STQ     PROCATTRX,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:40   

      315     6315    2           END;

   6315  6 000167   200015 054100                    AOS     I,,AUTO
         6 000170   002172 470400 4                  LDP0    FIT$
         6 000171   000000 236100                    LDQ     0,,PR0
         6 000172   000037 772000                    QRL     31
         6 000173   200015 116100                    CMPQ    I,,AUTO
         6 000174   000127 605000 6                  TPL     s:6287

      316     6316        /* Make sure that we were at least passed the basic job info table */
      317     6317    1         IF UATTRX = 0 THEN GOTO BAD_FIT;

   6317  6 000175   200022 235100                    LDA     UATTRX,,AUTO
         6 000176   000215 600000 6                  TZE     BAD_FIT

      318     6318    1         IFINFO$ = PINCRW(FIT$,UATTRX);

   6318  6 000177   200022 236100                    LDQ     UATTRX,,AUTO
         6 000200   000022 736000                    QLS     18
         6 000201   002172 036000 4                  ADLQ    FIT$
         6 000202   200025 756100                    STQ     IFINFO$,,AUTO

      319     6319        /* Check to see that all expected tables were actually passed.     */
      320     6320    1         IF ((JM$FITIF.MAXVR > 0) AND (PROCATTRX = 0))

   6320  6 000203   200025 471500                    LDP1    IFINFO$,,AUTO
         6 000204   100014 236100                    LDQ     12,,PR1
         6 000205   000777 316003                    CANQ    511,DU
         6 000206   000211 600000 6                  TZE     s:6320+6
         6 000207   200024 235100                    LDA     PROCATTRX,,AUTO
         6 000210   000215 600000 6                  TZE     BAD_FIT
         6 000211   777000 316003                    CANQ    -512,DU
         6 000212   000222 600000 6                  TZE     s:6330
         6 000213   200023 235100                    LDA     INSTATTRX,,AUTO
         6 000214   000222 601000 6                  TNZ     s:6330

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:41   
      321     6321    1         OR ((JM$FITIF.MAXPSN > 0) AND (INSTATTRX = 0)) THEN
      322     6322    2           DO;

      323     6323        /*S*    SCREECH_CODE:   JMJ-S$JM228                                */
      324     6324        /*S*    TYPE:   SNAP                                               */
      325     6325        /*S*   MESSAGE: FIT information not present in new job file.       */
      326     6326    2   BAD_FIT: CALL FOI$SNAP (%S$JM228,F_JM,M_J);

   6326  6 000215   000013 630400 7     BAD_FIT      EPPR0   11
         6 000216   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000217   000000 701000 xent               TSX1    FOI$SNAP
         6 000220   000000 011000                    NOP     0

      327     6327    2           GOTO KILLIN;

   6327  6 000221   000441 710000 6                  TRA     KILLIN

      328     6328    2           END;
      329     6329        /* Get a new job frame */
      330     6330    1         CALL FOI$GBLK (JM_JOBSCB,IF$,SIZEW(JM$FITIF)) ALTRET(NOFRAMES);

   6330  6 000222   100056 236100                    LDQ     46,,PR1
         6 000223   000033 772000                    QRL     27
         6 000224   000271 620006                    EAX0    185,QL
         6 000225   000000 636010                    EAQ     0,X0
         6 000226   000022 772000                    QRL     18
         6 000227   000011 402007                    MPY     9,DL
         6 000230   000043 036007                    ADLQ    35,DL
         6 000231   000044 506007                    DIV     36,DL
         6 000232   200040 756100                    STQ     @NAME+2,,AUTO
         6 000233   200040 633500                    EPPR3   @NAME+2,,AUTO
         6 000234   200043 453500                    STP3    @NAME+5,,AUTO
         6 000235   200006 634500                    EPPR4   IF$,,AUTO
         6 000236   200042 454500                    STP4    @NAME+4,,AUTO
         6 000237   000016 236000 7                  LDQ     14
         6 000240   200041 756100                    STQ     @NAME+3,,AUTO
         6 000241   200041 630500                    EPPR0   @NAME+3,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:42   
         6 000242   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000243   000000 701000 xent               TSX1    FOI$GBLK
         6 000244   000462 702000 6                  TSX2    NOFRAMES

      331     6331    1         JMC_BFIS$->AWORD = JMC_BFIS$->AWORD+1;

   6331  6 000245   000000 470400 xsym               LDP0    JMC_BFIS$
         6 000246   000000 235100                    LDA     0,,PR0
         6 000247   000001 035007                    ADLA    1,DL
         6 000250   000000 755100                    STA     0,,PR0

      332     6332        /* NOW MOVE THE PASSED FIT INFO INTO THE INPUT FILE ENTRY */
      333     6333    1         IF$->JM$IF.JNL=JM$FITIF.JNL;

   6333  6 000251   200025 470500                    LDP0    IFINFO$,,AUTO
         6 000252   200006 471500                    LDP1    IF$,,AUTO
         6 000253   000056 236100                    LDQ     46,,PR0
         6 000254   100056 552140                    STBQ    46,'40'O,PR1

      334     6334    1         JM$QIF  = JM$FITIF;

   6334  6 000255   100056 236100                    LDQ     46,,PR1
         6 000256   000033 772000                    QRL     27
         6 000257   000271 620006                    EAX0    185,QL
         6 000260   000056 236100                    LDQ     46,,PR0
         6 000261   000033 772000                    QRL     27
         6 000262   000271 621006                    EAX1    185,QL
         6 000263   000140 100540                    MLR     fill='000'O
         6 000264   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1
         6 000265   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      335     6335        /* All is OK, so build pointers to  the virtual resource and       */
      336     6336        /* serial number/packset name lists in the FIT.                    */
      337     6337    1         VRINFO$ = PINCRW(FIT$,PROCATTRX);

   6337  6 000266   200024 236100                    LDQ     PROCATTRX,,AUTO
         6 000267   000022 736000                    QLS     18
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:43   
         6 000270   002172 036000 4                  ADLQ    FIT$
         6 000271   200027 756100                    STQ     VRINFO$,,AUTO

      338     6338    1         SNINFO$ = PINCRW(FIT$,INSTATTRX);

   6338  6 000272   200023 236100                    LDQ     INSTATTRX,,AUTO
         6 000273   000022 736000                    QLS     18
         6 000274   002172 036000 4                  ADLQ    FIT$
         6 000275   200026 756100                    STQ     SNINFO$,,AUTO

      339     6339        /* Now, move the passed lists of virtual resources and packset     */
      340     6340        /* names/serial numbers into their respective MBS tables.          */
      341     6341        /**/
      342     6342        /* Put exclusive and shared (shared private and public) into       */
      343     6343        /* separate linked lists, with a pointer to the head of each in    */
      344     6344        /* the job's information table.                                    */
      345     6345    1         XCLHD$ = ADDR(NIL);

   6345  6 000276   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 000277   200011 756100                    STQ     XCLHD$,,AUTO

      346     6346    1         SHRHD$ = ADDR(NIL);

   6346  6 000300   200012 756100                    STQ     SHRHD$,,AUTO

      347     6347    2           DO I = 0 TO JM$QIF.MAXPSN - 1;

   6347  6 000301   200015 450100                    STZ     I,,AUTO
         6 000302   000336 710000 6                  TRA     s:6360+1

      348     6348    2           CALL JMU$GET_SLOT(PSN$);

   6348  6 000303   200007 630500                    EPPR0   PSN$,,AUTO
         6 000304   200040 450500                    STP0    @NAME+2,,AUTO
         6 000305   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000306   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000307   000000 701000 xent               TSX1    JMU$GET_SLOT
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:44   
         6 000310   000000 011000                    NOP     0

      349     6349    2           JM$SN = JM$SNLIST.SN(I);

   6349  6 000311   200015 235100                    LDA     I,,AUTO
         6 000312   000003 735000                    ALS     3
         6 000313   200026 470500                    LDP0    SNINFO$,,AUTO
         6 000314   200007 471500                    LDP1    PSN$,,AUTO
         6 000315   000100 100505                    MLR     fill='000'O
         6 000316   000000 000007                    ADSC9   0,A,PR0                  cn=0,n=7
         6 000317   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

      350     6350    2           IF JM$SN.FLGS.EXCL THEN

   6350  6 000320   200007 471500                    LDP1    PSN$,,AUTO
         6 000321   100001 236100                    LDQ     1,,PR1
         6 000322   200000 316007                    CANQ    65536,DL
         6 000323   000331 600000 6                  TZE     s:6357

      351     6351    3             DO;

      352     6352    3             JM$SN.NXT$ = XCLHD$;

   6352  6 000324   200011 236100                    LDQ     XCLHD$,,AUTO
         6 000325   100002 756100                    STQ     2,,PR1

      353     6353    3             XCLHD$ = PSN$;

   6353  6 000326   200007 236100                    LDQ     PSN$,,AUTO
         6 000327   200011 756100                    STQ     XCLHD$,,AUTO

      354     6354    3             END;

   6354  6 000330   000335 710000 6                  TRA     s:6360

      355     6355    2           ELSE
      356     6356    3             DO;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:45   

      357     6357    3             JM$SN.NXT$ = SHRHD$;

   6357  6 000331   200012 236100                    LDQ     SHRHD$,,AUTO
         6 000332   100002 756100                    STQ     2,,PR1

      358     6358    3             SHRHD$ = PSN$;

   6358  6 000333   200007 236100                    LDQ     PSN$,,AUTO
         6 000334   200012 756100                    STQ     SHRHD$,,AUTO

      359     6359    3             END;

      360     6360    2           END;

   6360  6 000335   200015 054100                    AOS     I,,AUTO
         6 000336   200006 470500                    LDP0    IF$,,AUTO
         6 000337   000014 236100                    LDQ     12,,PR0
         6 000340   000033 772000                    QRL     27
         6 000341   200015 116100                    CMPQ    I,,AUTO
         6 000342   000303 605400 6                  TPNZ    s:6348

      361     6361        /* Put the head pointers to each list in the job's info table      */
      362     6362    1         JM$QIF.XLNK$ = XCLHD$;

   6362  6 000343   200011 236100                    LDQ     XCLHD$,,AUTO
         6 000344   000003 756100                    STQ     3,,PR0

      363     6363    1         JM$QIF.SLNK$ = SHRHD$;

   6363  6 000345   200012 236100                    LDQ     SHRHD$,,AUTO
         6 000346   200006 470500                    LDP0    IF$,,AUTO
         6 000347   000004 756100                    STQ     4,,PR0

      364     6364        /* Move the virtual resource table from the FIT in the same way    */
      365     6365    1         RITHD$ = ADDR(NIL);

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:46   
   6365  6 000350   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 000351   200013 756100                    STQ     RITHD$,,AUTO

      366     6366    2           DO I = 0 TO JM$QIF.MAXVR - 1;

   6366  6 000352   200015 450100                    STZ     I,,AUTO
         6 000353   000377 710000 6                  TRA     s:6371+1

      367     6367    2           CALL JMU$GET_SLOT(RIT$);

   6367  6 000354   200010 630500                    EPPR0   RIT$,,AUTO
         6 000355   200040 450500                    STP0    @NAME+2,,AUTO
         6 000356   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000357   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000360   000000 701000 xent               TSX1    JMU$GET_SLOT
         6 000361   000000 011000                    NOP     0

      368     6368    2           JM$RES = JM$VRLIST.RES(I);

   6368  6 000362   200015 235100                    LDA     I,,AUTO
         6 000363   000003 735000                    ALS     3
         6 000364   200027 470500                    LDP0    VRINFO$,,AUTO
         6 000365   200010 471500                    LDP1    RIT$,,AUTO
         6 000366   000100 100505                    MLR     fill='000'O
         6 000367   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=8
         6 000370   100000 000014                    ADSC9   0,,PR1                   cn=0,n=12

      369     6369    2           JM$RES.NXT$ = RITHD$;

   6369  6 000371   200013 236100                    LDQ     RITHD$,,AUTO
         6 000372   200010 471500                    LDP1    RIT$,,AUTO
         6 000373   100002 756100                    STQ     2,,PR1

      370     6370    2           RITHD$ = RIT$;

   6370  6 000374   200010 236100                    LDQ     RIT$,,AUTO
         6 000375   200013 756100                    STQ     RITHD$,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:47   

      371     6371    2           END;

   6371  6 000376   200015 054100                    AOS     I,,AUTO
         6 000377   200006 470500                    LDP0    IF$,,AUTO
         6 000400   000014 236100                    LDQ     12,,PR0
         6 000401   000022 772000                    QRL     18
         6 000402   000777 376007                    ANQ     511,DL
         6 000403   200015 116100                    CMPQ    I,,AUTO
         6 000404   000354 605400 6                  TPNZ    s:6367

      372     6372    1         JM$QIF.VRLIST$ = RITHD$;

   6372  6 000405   200013 236100                    LDQ     RITHD$,,AUTO
         6 000406   000002 756100                    STQ     2,,PR0

      373     6373        /**/
      374     6374    1         JM$QIF.UNSAT_COUNT = JM$QIF.NJD; /* In case of 'O3' type ordering     */

   6374  6 000407   200006 470500                    LDP0    IF$,,AUTO
         6 000410   000013 236100                    LDQ     11,,PR0
         6 000411   000011 772000                    QRL     9
         6 000412   000006 552120                    STBQ    6,'20'O,PR0

      375     6375        /*     SET BITS IN JM$IF.PART  FOR PARTITIONS THIS JOB CAN RUN IN */
      376     6376    1         CALL JMU$SET_PARTS(IF$);

   6376  6 000413   200006 630500                    EPPR0   IF$,,AUTO
         6 000414   200040 450500                    STP0    @NAME+2,,AUTO
         6 000415   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000416   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000417   000000 701000 xent               TSX1    JMU$SET_PARTS
         6 000420   000000 011000                    NOP     0

      377     6377        /*     Place this entry where it belongs on the MBS queues: */
      378     6378    1         CALL JMU$SELECTQ(IF$,QNUM);

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:48   
   6378  6 000421   200016 630500                    EPPR0   QNUM,,AUTO
         6 000422   200041 450500                    STP0    @NAME+3,,AUTO
         6 000423   200006 631500                    EPPR1   IF$,,AUTO
         6 000424   200040 451500                    STP1    @NAME+2,,AUTO
         6 000425   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000426   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000427   000000 701000 xent               TSX1    JMU$SELECTQ
         6 000430   000000 011000                    NOP     0

      379     6379        /*     Finally, attempt to schedule somebody     */
      380     6380    1         CALL JMS$SCHED;

   6380  6 000431   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000432   000000 701000 xent               TSX1    JMS$SCHED
         6 000433   000000 011000                    NOP     0

      381     6381    1         RETURN;

   6381  6 000434   000000 702200 xent               TSX2  ! X66_ARET

   6374  6 000435                       BAD_IFOPN    null
      382     6382        /**/
      383     6383        /**/
      384     6384        /**/
      385     6385    1   BAD_IFOPN:;
      386     6386        /*S*    SCREECH_CODE:   JMJ-S$JM230                                */
      387     6387        /*S*    TYPE:   SNAP                                               */
      388     6388        /*S*   MESSAGE: I/O error occurred on test open of new job file.   */
      389     6389    1         CALL FOI$SNAP (%S$JM230,F_JM,M_J);

   6389  6 000435   000020 630400 7                  EPPR0   16
         6 000436   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000437   000000 701000 xent               TSX1    FOI$SNAP
         6 000440   000000 011000                    NOP     0

   6374  6 000441                       KILLIN       null
      390     6390    1   KILLIN:;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:49   
      391     6391    1         CALL M$OPEN (DEL_JOBFILE) ALTRET(KILLIN1);

   6391  6 000441   000440 630400 5                  EPPR0   DEL_JOBFILE
         6 000442   450000 713400                    CLIMB   alt,open
         6 000443   410400 401760                    pmme    nvectors=18
         6 000444   000445 702000 6                  TSX2    KILLIN1

      392     6392    1   KILLIN1:;

   6392  6 000445                       KILLIN1      null
      393     6393    1         JREAD.SYSID#=SYSID;

   6393  6 000445   200014 720100                    LXL0    SYSID,,AUTO
         6 000446   002204 440000 4                  SXL0    JREAD+4

      394     6394    1         CALL XSJ$READ (JREAD) ALTRET(RTN);

   6394  6 000447   000023 630400 7                  EPPR0   19
         6 000450   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000451   000000 701000 xent               TSX1    XSJ$READ
         6 000452   000461 702000 6                  TSX2    RTN

      395     6395    1         XSJ_JOBINFO.STATUS#=%MBS_FILERR#;

   6395  6 000453   000062 236007                    LDQ     50,DL
         6 000454   002173 552004 4                  STBQ    XSJ_JOBINFO,'04'O

      396     6396    1         CALL XSJ$WRITE (JREAD);

   6396  6 000455   000023 630400 7                  EPPR0   19
         6 000456   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000457   000000 701000 xent               TSX1    XSJ$WRITE
         6 000460   000000 011000                    NOP     0

   6395  6 000461                       RTN          null
      397     6397    1   RTN:  ;
      398     6398    1         RETURN;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:50   

   6398  6 000461   000000 702200 xent               TSX2  ! X66_ARET

   6395  6 000462                       NOFRAMES     null
      399     6399        /**/
      400     6400    1   NOFRAMES:;
      401     6401        /*S*    SCREECH_CODE:   JMJ-S$JM225                                */
      402     6402        /*S*   TYPE:   SCREECH                                             */
      403     6403        /*S*   MESSAGE: Can't get memory for batch scheduler data segments */
      404     6404    1         CALL FOI$CRASH (%S$JM225,F_JM,M_J);

   6404  6 000462   000025 630400 7                  EPPR0   21
         6 000463   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000464   000000 701000 xent               TSX1    FOI$CRASH
         6 000465   000000 011000                    NOP     0
         6 000466   000471 710000 6                  TRA     s:6410

      405     6405        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:51   
      406     6406        /**/
      407     6407        /*F*   NAME:   JMJ$TERM                                            */
      408     6408        /*F*   PURPOSE: To remove a job from the running queue & partition.*/
      409     6409    1   JMJ$TERM: ENTRY(MSG$) ALTRET;

   6409  6 000467   000000 700200 xent  JMJ$TERM     TSX0  ! X66_AUTO_2
         6 000470   000044 000002                    ZERO    36,2

      410     6410    1         SYSID = JM$CITE.SYSID;

   6410  6 000471   200003 470500                    LDP0    @MSG$,,AUTO
         6 000472   000000 471500                    LDP1    0,,PR0
         6 000473   100000 236100                    LDQ     0,,PR1
         6 000474   777777 376007                    ANQ     -1,DL
         6 000475   200014 756100                    STQ     SYSID,,AUTO

      411     6411    1         IF$ = JMC_CH.HRUN$;             /* GET HEAD OF RUNNING JOB QUEUE      */

   6411  6 000476   000054 236000 xsym               LDQ     JMC_CH+44
         6 000477   200006 756100                    STQ     IF$,,AUTO

      412     6412    2           DO WHILE(IF$ ~= ADDR(NIL));

   6412  6 000500   001031 710000 6                  TRA     s:6506

      413     6413    2           IF JM$QIF.SYSID = SYSID THEN

   6413  6 000501   200006 470500                    LDP0    IF$,,AUTO
         6 000502   000014 236100                    LDQ     12,,PR0
         6 000503   777777 376007                    ANQ     -1,DL
         6 000504   200014 116100                    CMPQ    SYSID,,AUTO
         6 000505   001027 601000 6                  TNZ     s:6505

      414     6414    3             DO;

      415     6415    3             PPTR$ = PINCRW(JMC_PPTR$,JM$QIF.PNUM); /* PTR TO PART PTR         */

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:52   
   6415  6 000506   000006 236100                    LDQ     6,,PR0
         6 000507   000011 772000                    QRL     9
         6 000510   000777 376007                    ANQ     511,DL
         6 000511   000022 736000                    QLS     18
         6 000512   000000 036000 xsym               ADLQ    JMC_PPTR$
         6 000513   200030 756100                    STQ     PPTR$,,AUTO

      416     6416    3             PPTR$ = PPTR$->APTR$;

   6416  6 000514   200030 471500                    LDP1    PPTR$,,AUTO
         6 000515   100000 236100                    LDQ     0,,PR1
         6 000516   200030 756100                    STQ     PPTR$,,AUTO

      417     6417    3             CALL JMU$SETSEG(PPTR$,%SPCL1SID); /* POINT INTO MON. ISR           */

   6417  6 000517   000031 236000 7                  LDQ     25
         6 000520   200041 756100                    STQ     @NAME+3,,AUTO
         6 000521   200030 631500                    EPPR1   PPTR$,,AUTO
         6 000522   200040 451500                    STP1    @NAME+2,,AUTO
         6 000523   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000524   000020 631400 xsym               EPPR1   B_VECTNIL+16
         6 000525   000000 701000 xent               TSX1    JMU$SETSEG
         6 000526   000000 011000                    NOP     0

      418     6418    3             JPTR$ = PPTR$->JM$PART.JOB$; /* HEAD OF JOBS IN PARTITION          */

   6418  6 000527   200030 470500                    LDP0    PPTR$,,AUTO
         6 000530   000006 236100                    LDQ     6,,PR0
         6 000531   200031 756100                    STQ     JPTR$,,AUTO

      419     6419    3             IF JPTR$ = IF$ THEN

   6419  6 000532   200006 116100                    CMPQ    IF$,,AUTO
         6 000533   000540 601000 6                  TNZ     s:6423

      420     6420    3              PPTR$->JM$PART.JOB$  = JPTR$->JM$IF.NXTJ$;

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:53   
   6420  6 000534   200031 471500                    LDP1    JPTR$,,AUTO
         6 000535   100001 236100                    LDQ     1,,PR1
         6 000536   000006 756100                    STQ     6,,PR0
         6 000537   000565 710000 6                  TRA     s:6442

      421     6421    3             ELSE
      422     6422    4               DO;

      423     6423    4               LPTR$ = JPTR$;

   6423  6 000540   200032 756100                    STQ     LPTR$,,AUTO

      424     6424    5                 DO WHILE(JPTR$->JM$IF.NXTJ$ ~= ADDR(NIL));

   6424  6 000541   000554 710000 6                  TRA     s:6432

      425     6425    5                 JPTR$ = LPTR$->JM$IF.NXTJ$;

   6425  6 000542   200032 470500                    LDP0    LPTR$,,AUTO
         6 000543   000001 236100                    LDQ     1,,PR0
         6 000544   200031 756100                    STQ     JPTR$,,AUTO

      426     6426    5                 IF JPTR$ = IF$ THEN

   6426  6 000545   200006 116100                    CMPQ    IF$,,AUTO
         6 000546   000553 601000 6                  TNZ     s:6431

      427     6427    6                   DO;

      428     6428    6                   LPTR$->JM$IF.NXTJ$ = JPTR$->JM$IF.NXTJ$;

   6428  6 000547   200031 471500                    LDP1    JPTR$,,AUTO
         6 000550   100001 236100                    LDQ     1,,PR1
         6 000551   000001 756100                    STQ     1,,PR0

      429     6429    6                   GOTO UNLINKED;

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:54   
   6429  6 000552   000565 710000 6                  TRA     s:6442

      430     6430    6                   END;
      431     6431    5                 LPTR$ = JPTR$;

   6431  6 000553   200032 756100                    STQ     LPTR$,,AUTO

      432     6432    5                 END;

   6432  6 000554   200031 470500                    LDP0    JPTR$,,AUTO
         6 000555   000001 236100                    LDQ     1,,PR0
         6 000556   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 000557   000542 601000 6                  TNZ     s:6425

      433     6433        /*S*    SCREECH_CODE:   JMJ-S$JM231                                */
      434     6434        /*S*    TYPE:   SNAP                                               */
      435     6435        /*S*   MESSAGE: Can't find terminated job in partitions job list.  */
      436     6436    4               CALL FOI$SNAP (%S$JM231,F_JM,M_J);

   6436  6 000560   000033 630400 7                  EPPR0   27
         6 000561   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000562   000000 701000 xent               TSX1    FOI$SNAP
         6 000563   000000 011000                    NOP     0

      437     6437    4               GOTO TRY_SCHED;

   6437  6 000564   001023 710000 6                  TRA     TRY_SCHED

      438     6438    4   UNLINKED:   END;
      439     6439        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:55   
      440     6440        /* Handle the case where KEYIN requested that this job be aborted
      441     6441           and then subsequently rerun.                                    */
      442     6442    3             IF JM$QIF.FLG.KRERUN THEN

   6442  6 000565   200006 470500                    LDP0    IF$,,AUTO
         6 000566   000013 236100                    LDQ     11,,PR0
         6 000567   001000 316007                    CANQ    512,DL
         6 000570   000717 600000 6                  TZE     s:6479

      443     6443    4               DO;

      444     6444    4               JM$QIF.FLG.RR2 = '1'B; /* Set 'being rerun'                  */

   6444  6 000571   010000 236007                    LDQ     4096,DL
         6 000572   000013 256100                    ORSQ    11,,PR0

      445     6445    4               JM$QIF.FLG.KRERUN = '0'B;

   6445  6 000573   000036 236000 7                  LDQ     30
         6 000574   000013 356100                    ANSQ    11,,PR0

      446     6446    4               I = JM$QIF.PRIO + JM_Q$P0;

   6446  6 000575   000013 236100                    LDQ     11,,PR0
         6 000576   000022 772000                    QRL     18
         6 000577   000777 376007                    ANQ     511,DL
         6 000600   000006 036007                    ADLQ    6,DL
         6 000601   200015 756100                    STQ     I,,AUTO

      447     6447    4               CALL JMU$MOVE_IF(JM_Q$RUN,I,IF$);

   6447  6 000602   200006 633500                    EPPR3   IF$,,AUTO
         6 000603   200042 453500                    STP3    @NAME+4,,AUTO
         6 000604   200015 634500                    EPPR4   I,,AUTO
         6 000605   200041 454500                    STP4    @NAME+3,,AUTO
         6 000606   000040 236000 7                  LDQ     32
         6 000607   200040 756100                    STQ     @NAME+2,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:56   
         6 000610   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000611   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000612   000000 701000 xent               TSX1    JMU$MOVE_IF
         6 000613   000000 011000                    NOP     0

      448     6448                    %DECR(VAR="PPTR$->JM$PART.CUR");

   6449  6 000614   200030 470500                    LDP0    PPTR$,,AUTO
         6 000615   000003 236100                    LDQ     3,,PR0
         6 000616   000777 036003                    ADLQ    511,DU
         6 000617   000003 552120                    STBQ    3,'20'O,PR0

      449     6451    4               CALL JMJ$REWRITE_FIT(IF$);

   6451  6 000620   200006 630500                    EPPR0   IF$,,AUTO
         6 000621   200040 450500                    STP0    @NAME+2,,AUTO
         6 000622   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000623   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 000624   001040 701000 6                  TSX1    s:6522
         6 000625   000000 011000                    NOP     0

      450     6452        /* Print the 'being scheduled for rerun msg. on the OC */
      451     6453    4               OC_MESSHD.OK_TYPE = 0;

   6453  6 000626   000000 236003                    LDQ     0,DU
         6 000627   000075 552020 4                  STBQ    OC_MESSHD+6,'20'O

      452     6454    4               OC_MESSHD.PRIO = JM$QIF.PRIO;

   6454  6 000630   200006 470500                    LDP0    IF$,,AUTO
         6 000631   000013 236100                    LDQ     11,,PR0
         6 000632   000011 772000                    QRL     9
         6 000633   000075 552010 4                  STBQ    OC_MESSHD+6,'10'O

      453     6455    4               OC_MESSHD.MSG# = RERUN_MSG#;

   6455  6 000634   000520 220003                    LDX0    336,DU
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:57   
         6 000635   000067 440000 4                  SXL0    OC_MESSHD

      454     6456    4               OC_MESSHD.SYSID = JM$CITE.SYSID;

   6456  6 000636   200003 471500                    LDP1    @MSG$,,AUTO
         6 000637   100000 473500                    LDP3    0,,PR1
         6 000640   300000 721100                    LXL1    0,,PR3
         6 000641   000070 741000 4                  STX1    OC_MESSHD+1

      455     6457    4               OC_MESSHD.ID = JM$CITE.SYSID;

   6457  6 000642   100000 473500                    LDP3    0,,PR1
         6 000643   000000 100500                    MLR     fill='000'O
         6 000644   300000 400002                    ADSC9   0,,PR3                   cn=2,n=2
         6 000645   000074 600002 4                  ADSC9   OC_MESSHD+5              cn=3,n=2

      456     6458    4               OC_MESSHD.CADDR = M_ADMIN;

   6458  6 000646   040000 222003                    LDX2    16384,DU
         6 000647   000067 742000 4                  STX2    OC_MESSHD

      457     6459    4               OC_MESSHD.WSN = JM$QIF.WSN;

   6459  6 000650   040000 100500                    MLR     fill='040'O
         6 000651   000024 000010                    ADSC9   20,,PR0                  cn=0,n=8
         6 000652   000072 000010 4                  ADSC9   OC_MESSHD+3              cn=0,n=8

      458     6460    4               WRITE_CSCG.BUF_ = VECTOR(OC_MESSHD);

   6460  6 000653   000042 237000 7                  LDAQ    34
         6 000654   000140 757000 4                  STAQ    WRITE_CSCG+4

      459     6461    4               T_WSTA.STATION# = 'KEYIN';

   6461  6 000655   040000 100400                    MLR     fill='040'O
         6 000656   000534 000005 5                  ADSC9   DEL_JOBFILE+60           cn=0,n=5
         6 000657   000150 000010 4                  ADSC9   T_WSTA                   cn=0,n=8
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:58   

      460     6462    4               CALL M$WRITE(WRITE_CSCG);

   6462  6 000660   000134 630400 4                  EPPR0   WRITE_CSCG
         6 000661   040001 713400                    CLIMB   write
         6 000662   401400 401760                    pmme    nvectors=4

      461     6463    4               IF JM$QIF.WSN ~= JM$QIF.WOO THEN

   6463  6 000663   200006 470500                    LDP0    IF$,,AUTO
         6 000664   040100 106500                    CMPC    fill='040'O
         6 000665   000024 000010                    ADSC9   20,,PR0                  cn=0,n=8
         6 000666   000022 000010                    ADSC9   18,,PR0                  cn=0,n=8
         6 000667   000700 600000 6                  TZE     s:6470

      462     6464    5                 DO;

      463     6465    5                 OC_MESSHD.CADDR = M_ADMIN | M_NONSYS;

   6465  6 000670   040040 220003                    LDX0    16416,DU
         6 000671   000067 740000 4                  STX0    OC_MESSHD

      464     6466    5                 OC_MESSHD.WSN = JM$QIF.WOO;

   6466  6 000672   040000 100500                    MLR     fill='040'O
         6 000673   000022 000010                    ADSC9   18,,PR0                  cn=0,n=8
         6 000674   000072 000010 4                  ADSC9   OC_MESSHD+3              cn=0,n=8

      465     6467    5                 CALL M$WRITE(WRITE_CSCG);

   6467  6 000675   000134 630400 4                  EPPR0   WRITE_CSCG
         6 000676   040001 713400                    CLIMB   write
         6 000677   401400 401760                    pmme    nvectors=4

      466     6468    5                 END;

      467     6469        /* Tell OUTSYM not to print this guy's output */
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:59   
      468     6470    4               FOS_MSG.SYSID = JM$QIF.SYSID;

   6470  6 000700   200006 470500                    LDP0    IF$,,AUTO
         6 000701   000014 720100                    LXL0    12,,PR0
         6 000702   000162 440000 4                  SXL0    FOS_MSG

      469     6471    4               WRITE_CSCG.BUF_ = VECTOR(FOS_MSG);

   6471  6 000703   000044 237000 7                  LDAQ    36
         6 000704   000140 757000 4                  STAQ    WRITE_CSCG+4

      470     6472    4               T_WSTA.STATION# = 'OUTSYM';

   6472  6 000705   040000 100400                    MLR     fill='040'O
         6 000706   000536 000006 5                  ADSC9   DEL_JOBFILE+62           cn=0,n=6
         6 000707   000150 000010 4                  ADSC9   T_WSTA                   cn=0,n=8

      471     6473    4               CALL M$WRITE(WRITE_CSCG);

   6473  6 000710   000134 630400 4                  EPPR0   WRITE_CSCG
         6 000711   040001 713400                    CLIMB   write
         6 000712   401400 401760                    pmme    nvectors=4

      472     6474    4               CALL JMS$SCHED;

   6474  6 000713   000002 631400 xsym               EPPR1   B_VECTNIL+2
         6 000714   000000 701000 xent               TSX1    JMS$SCHED
         6 000715   000000 011000                    NOP     0

      473     6475    4               RETURN;

   6475  6 000716   000000 702200 xent               TSX2  ! X66_ARET

      474     6476    4               END;
      475     6477        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:60   
      476     6478        /* Now, unlink the job from the running queue.                     */
      477     6479    3             CALL JMU$UNLINK_IF(JM_Q$RUN,,IF$);

   6479  6 000717   200006 633500                    EPPR3   IF$,,AUTO
         6 000720   200042 453500                    STP3    @NAME+4,,AUTO
         6 000721   000001 236000 xsym               LDQ     B_VECTNIL+1
         6 000722   000040 235000 7                  LDA     32
         6 000723   200040 757100                    STAQ    @NAME+2,,AUTO
         6 000724   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 000725   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 000726   000000 701000 xent               TSX1    JMU$UNLINK_IF
         6 000727   000000 011000                    NOP     0

      478     6480        /* Release any virtual resource or packset name/serial number      */
      479     6481        /* entries this job might have associated.                         */
      480     6482    3             IF JM$QIF.MAXVR > 0 THEN CALL REL_SLOTS(JM$QIF.VRLIST$);

   6482  6 000730   200006 470500                    LDP0    IF$,,AUTO
         6 000731   000014 236100                    LDQ     12,,PR0
         6 000732   000777 316003                    CANQ    511,DU
         6 000733   000741 600000 6                  TZE     s:6483

   6482  6 000734   200006 236100                    LDQ     IF$,,AUTO
         6 000735   000002 036003                    ADLQ    2,DU
         6 000736   200035 756100                    STQ     ACTION+2,,AUTO
         6 000737   000003 701000 6                  TSX1    REL_SLOTS
         6 000740   000000 011000                    NOP     0

      481     6483    3             IF JM$QIF.MAXPSN > 0 THEN

   6483  6 000741   200006 470500                    LDP0    IF$,,AUTO
         6 000742   000014 236100                    LDQ     12,,PR0
         6 000743   777000 316003                    CANQ    -512,DU
         6 000744   000757 600000 6                  TZE     s:6489

      482     6484    4               DO;

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:61   
      483     6485    4               CALL REL_SLOTS(JM$QIF.XLNK$);

   6485  6 000745   200006 236100                    LDQ     IF$,,AUTO
         6 000746   000003 036003                    ADLQ    3,DU
         6 000747   200035 756100                    STQ     ACTION+2,,AUTO
         6 000750   000003 701000 6                  TSX1    REL_SLOTS
         6 000751   000000 011000                    NOP     0

      484     6486    4               CALL REL_SLOTS(JM$QIF.SLNK$);

   6486  6 000752   200006 236100                    LDQ     IF$,,AUTO
         6 000753   000004 036003                    ADLQ    4,DU
         6 000754   200035 756100                    STQ     ACTION+2,,AUTO
         6 000755   000003 701000 6                  TSX1    REL_SLOTS
         6 000756   000000 011000                    NOP     0

      485     6487    4               END;

      486     6488        /* Release the job frame to the free list.                         */
      487     6489    3             CALL FOI$RBLK (JM_JOBSCB,IF$,SIZEW(JM$QIF));

   6489  6 000757   200006 470500                    LDP0    IF$,,AUTO
         6 000760   000056 236100                    LDQ     46,,PR0
         6 000761   000033 772000                    QRL     27
         6 000762   000271 620006                    EAX0    185,QL
         6 000763   000000 636010                    EAQ     0,X0
         6 000764   000022 772000                    QRL     18
         6 000765   000011 402007                    MPY     9,DL
         6 000766   000043 036007                    ADLQ    35,DL
         6 000767   000044 506007                    DIV     36,DL
         6 000770   200040 756100                    STQ     @NAME+2,,AUTO
         6 000771   200040 631500                    EPPR1   @NAME+2,,AUTO
         6 000772   200043 451500                    STP1    @NAME+5,,AUTO
         6 000773   200006 633500                    EPPR3   IF$,,AUTO
         6 000774   200042 453500                    STP3    @NAME+4,,AUTO
         6 000775   000016 236000 7                  LDQ     14
         6 000776   200041 756100                    STQ     @NAME+3,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:62   
         6 000777   200041 630500                    EPPR0   @NAME+3,,AUTO
         6 001000   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 001001   000000 701000 xent               TSX1    FOI$RBLK
         6 001002   000000 011000                    NOP     0

      488     6490        /* Decrement the "current batch user" count.                       */
      489     6491    3             JMC_BFIS$->AWORD = JMC_BFIS$->AWORD-1;

   6491  6 001003   000000 470400 xsym               LDP0    JMC_BFIS$
         6 001004   000000 235100                    LDA     0,,PR0
         6 001005   000001 135007                    SBLA    1,DL
         6 001006   000000 755100                    STA     0,,PR0

      490     6492        /* Decrement the "current jobs in partition" count.                */
      491     6493                  %DECR(VAR=PPTR$->JM$PART.CUR);

   6494  6 001007   200030 470500                    LDP0    PPTR$,,AUTO
         6 001010   000003 236100                    LDQ     3,,PR0
         6 001011   000777 036003                    ADLQ    511,DU
         6 001012   000003 552120                    STBQ    3,'20'O,PR0

      492     6496        /* Update the status of any jobs which might be dependent upon the */
      493     6497        /* final status of this job.                                       */
      494     6498    3             JM$CITE.JOFF_INFO.STATUS = %FIN_COMPLETED#;

   6498  6 001013   200003 470500                    LDP0    @MSG$,,AUTO
         6 001014   000000 471500                    LDP1    0,,PR0
         6 001015   000073 235007                    LDA     59,DL
         6 001016   100003 755100                    STA     3,,PR1

      495     6499    3             CALL JMR$CHECK_JD (MSG$);

   6499  6 001017   200003 630500                    EPPR0   @MSG$,,AUTO
         6 001020   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 001021   000000 701000 xent               TSX1    JMR$CHECK_JD
         6 001022   000000 011000                    NOP     0

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:63   
      496     6500        /* Attempt to schedule another job.                                */
      497     6501    3   TRY_SCHED:
      498     6502    3             CALL JMS$SCHED;

   6502  6 001023   000002 631400 xsym  TRY_SCHED    EPPR1   B_VECTNIL+2
         6 001024   000000 701000 xent               TSX1    JMS$SCHED
         6 001025   000000 011000                    NOP     0

      499     6503    3             RETURN;

   6503  6 001026   000000 702200 xent               TSX2  ! X66_ARET

      500     6504    3             END;
      501     6505    2           IF$ = JM$QIF.LNK$;

   6505  6 001027   000000 236100                    LDQ     0,,PR0
         6 001030   200006 756100                    STQ     IF$,,AUTO

      502     6506    2           END;

   6506  6 001031   000001 116000 xsym               CMPQ    B_VECTNIL+1
         6 001032   000501 601000 6                  TNZ     s:6413

      503     6507        /*S*    SCREECH_CODE:   JMJ-S$JM232                                */
      504     6508        /*S*    TYPE:   SNAP                                               */
      505     6509        /*S*   MESSAGE: Can't find terminated job in running job queue.    */
      506     6510    1         CALL FOI$SNAP (%S$JM232,F_JM,M_J);

   6510  6 001033   000047 630400 7                  EPPR0   39
         6 001034   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 001035   000000 701000 xent               TSX1    FOI$SNAP
         6 001036   000000 011000                    NOP     0

      507     6511    1         GOTO TRY_SCHED;

   6511  6 001037   001023 710000 6                  TRA     TRY_SCHED

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:64   
      508     6512        /**/
      509     6513        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:65   
      510     6514        /**/
      511     6515        /*F*   NAME:     JMJ$REWRITE_FIT                                   */
      512     6516        /*F*   PURPOSE:  To rewrite the FIT of a job when something        */
      513     6517        /*,*             substantial is changed in the job's JM$IF,        */
      514     6518        /*,*             e.g., PRIO or U, so that JMJ$RECOVER can          */
      515     6519        /*,*             tell:  1) it was running;                         */
      516     6520        /*,*                    2) where;                                  */
      517     6521        /*,*                    3) lotsa other good stuff.                 */
      518     6522    1   JMJ$REWRITE_FIT: ENTRY(MSG$) ALTRET;

   6522  6 001040   000000 700200 xent  JMJ$REWRITE* TSX0  ! X66_AUTO_2
         6 001041   000044 000002                    ZERO    36,2

      519     6523                                /* Here, MSG$ points to the the exact same
      520     6524                                  stuff we read initially through UATTR of
      521     6525                                  the job file, BUT some MBS-owned fields
      522     6526                                  have been filled in.                     */
      523     6527    1         SYSID = MSG$->JM$IF.SYSID;

   6527  6 001042   200003 470500                    LDP0    @MSG$,,AUTO
         6 001043   000000 471500                    LDP1    0,,PR0
         6 001044   100014 236100                    LDQ     12,,PR1
         6 001045   777777 376007                    ANQ     -1,DL
         6 001046   200014 756100                    STQ     SYSID,,AUTO

      524     6528    1         CALL IFNAME(SYSID,T_JOBNAME);

   6528  6 001047   000002 236000 7                  LDQ     2
         6 001050   200036 756100                    STQ     @SYSID+1,,AUTO
         6 001051   200014 631500                    EPPR1   SYSID,,AUTO
         6 001052   200035 451500                    STP1    ACTION+2,,AUTO
         6 001053   000027 701000 6                  TSX1    IFNAME
         6 001054   000000 011000                    NOP     0

      525     6529    1         CALL M$OPEN(OPEN_JOB_INOUT) ALTRET(BAD_UPDIO);

   6529  6 001055   000160 630400 5                  EPPR0   OPEN_JOB_INOUT
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:66   
         6 001056   450000 713400                    CLIMB   alt,open
         6 001057   410400 401760                    pmme    nvectors=18
         6 001060   001137 702000 6                  TSX2    BAD_UPDIO
         6 001061   001064 710000 6                  TRA     s:6533

      526     6530        /* COPY UATTR PART OF FIT INFO INTO STRUCTURE W/COUNT IN 1ST WORD  */
      527     6531        /* SO THAT WE CAN REWRITE IT INTO THE FILE'S FIT.                  */
      528     6532    1   JMJ$REWRITE_OPEN_FIT: ENTRY(MSG$) ALTRET;

   6532  6 001062   000000 700200 xent  JMJ$REWRITE* TSX0  ! X66_AUTO_2
         6 001063   000044 000002                    ZERO    36,2

      529     6533    1         JM_FITIF.COUNT=SIZEW(JM_IF);

   6533  6 001064   000066 235007                    LDA     54,DL
         6 001065   000000 755000 4                  STA     JM_FITIF

      530     6534    1         STIF$ = PINCRW(ADDR(JM_FITIF),1);

   6534  6 001066   000052 236000 7                  LDQ     42
         6 001067   200005 756100                    STQ     STIF$,,AUTO

      531     6535    1         STIF$->JM$IF.JNL=MSG$->JM$IF.JNL;

   6535  6 001070   200003 470500                    LDP0    @MSG$,,AUTO
         6 001071   000000 471500                    LDP1    0,,PR0
         6 001072   200005 473500                    LDP3    STIF$,,AUTO
         6 001073   100056 236100                    LDQ     46,,PR1
         6 001074   300056 552140                    STBQ    46,'40'O,PR3

      532     6536    1         STIF$->JM$IF = MSG$->JM$IF;

   6536  6 001075   300056 236100                    LDQ     46,,PR3
         6 001076   000033 772000                    QRL     27
         6 001077   000271 620006                    EAX0    185,QL
         6 001100   000000 471500                    LDP1    0,,PR0
         6 001101   100056 236100                    LDQ     46,,PR1
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:67   
         6 001102   000033 772000                    QRL     27
         6 001103   000271 621006                    EAX1    185,QL
         6 001104   000140 100540                    MLR     fill='000'O
         6 001105   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1
         6 001106   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0

      533     6537    1         CLS_JOBFILE.UATTR_ = VECTOR(JM_FITIF);

   6537  6 001107   000054 237000 7                  LDAQ    44
         6 001110   000114 757000 4                  STAQ    CLS_JOBFILE+14

      534     6538    1         CALL M$CLOSE(CLS_JOBFILE) ALTRET(BAD_UPDIO);

   6538  6 001111   000076 630400 4                  EPPR0   CLS_JOBFILE
         6 001112   450001 713400                    CLIMB   alt,close
         6 001113   406000 401760                    pmme    nvectors=13
         6 001114   001137 702000 6                  TSX2    BAD_UPDIO

      535     6539    1         RETURN;

   6539  6 001115   000000 702200 xent               TSX2  ! X66_ARET

      536     6540        /**/
      537     6541        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:68   
      538     6542        /**/
      539     6543        /*F*    NAME:   JMJ$DELJOB                                         */
      540     6544        /*F*    PURPOSE: To delete the input file for a job which has been */
      541     6545        /*,*            canceled before beginning execution, or which was  */
      542     6546        /*,*            not rerun following a crash.                       */
      543     6547    1   JMJ$DELJOB: ENTRY(MSG$) ALTRET;

   6547  6 001116   000000 700200 xent  JMJ$DELJOB   TSX0  ! X66_AUTO_2
         6 001117   000044 000002                    ZERO    36,2

      544     6548                                     /* For this entry, MSG$ is really
      545     6549                                        NXT_SYSID - the SYSID of the job
      546     6550                                        whose input file is to be deleted. */
      547     6551    1         CALL IFNAME(NXT_SYSID,T_JOBNAME);

   6551  6 001120   000002 236000 7                  LDQ     2
         6 001121   200036 756100                    STQ     @SYSID+1,,AUTO
         6 001122   200003 236100                    LDQ     @MSG$,,AUTO
         6 001123   200035 756100                    STQ     ACTION+2,,AUTO
         6 001124   000027 701000 6                  TSX1    IFNAME
         6 001125   000000 011000                    NOP     0

      548     6552    1         CALL M$OPEN(OPEN_JOB_INOUT) ALTRET(BAD_UPDIO);

   6552  6 001126   000160 630400 5                  EPPR0   OPEN_JOB_INOUT
         6 001127   450000 713400                    CLIMB   alt,open
         6 001130   410400 401760                    pmme    nvectors=18
         6 001131   001137 702000 6                  TSX2    BAD_UPDIO

      549     6553    1         CALL M$CLOSE(RELEASE_JOB) ALTRET(BAD_UPDIO);

   6553  6 001132   000402 630400 5                  EPPR0   RELEASE_JOB
         6 001133   450001 713400                    CLIMB   alt,close
         6 001134   406000 401760                    pmme    nvectors=13
         6 001135   001137 702000 6                  TSX2    BAD_UPDIO

      550     6554    1         RETURN;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:69   

   6554  6 001136   000000 702200 xent               TSX2  ! X66_ARET

      551     6555        /**/
      552     6556    1   BAD_UPDIO:
      553     6557    1         CALL BADUPD;

   6557  6 001137   001142 701000 6     BAD_UPDIO    TSX1    BADUPD
         6 001140   000000 011000                    NOP     0

      554     6558    1         ALTRETURN;

   6558  6 001141   000000 702200 xent               TSX2  ! X66_AALT

      555     6559        /**/
      556     6560    1   BADUPD: PROC;

   6560  6 001142   200034 741300       BADUPD       STX1  ! ACTION+1,,AUTO

      557     6561        /*S*    SCREECH_CODE:   JMJ-S$JM235                                  */
      558     6562        /*S*    TYPE:   SNAP                                               */
      559     6563        /*S*   MESSAGE: I/O error while opening/closing job file           */
      560     6564    2         CALL FOI$SNAP (%S$JM235,F_JM,M_J);

   6564  6 001143   000057 630400 7                  EPPR0   47
         6 001144   000021 631400 xsym               EPPR1   B_VECTNIL+17
         6 001145   000000 701000 xent               TSX1    FOI$SNAP
         6 001146   000000 011000                    NOP     0

      561     6565        /* Attempt closing the file, in case we got one of the file mgmt   */
      562     6566        /* wierdies that gives an error on the open but still opens the file */
      563     6567    2         CALL M$CLOSE(CLS_JOBFILE) ALTRET(I_DONT_CARE);

   6567  6 001147   000076 630400 4                  EPPR0   CLS_JOBFILE
         6 001150   450001 713400                    CLIMB   alt,close
         6 001151   406000 401760                    pmme    nvectors=13
         6 001152   001153 702000 6                  TSX2    I_DONT_CARE
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:70   

   6564  6 001153                       I_DONT_CARE  null
      564     6568    2   I_DONT_CARE:;
      565     6569    2         RETURN;

   6569  6 001153   200034 221300                    LDX1  ! ACTION+1,,AUTO
         6 001154   000001 702211                    TSX2  ! 1,X1

      566     6570    2   END BADUPD;
      567     6571        /**/
      568     6572        %EJECT;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:71   
      569     6573        /**/
      570     6574        /*F*    NAME:   JMJ$RECOVER                                        */
      571     6575        /*F*    PURPOSE: To find the SYSIDs of jobs to be resubmitted      */
      572     6576        /*,*            and/or rerun following a crash.                    */
      573     6577    1   JMJ$RECOVER: ENTRY(MSG$,DATA) ALTRET;

   6577  6 001155   000000 700200 xent  JMJ$RECOVER  TSX0  ! X66_AUTO_2
         6 001156   000044 000002                    ZERO    36,2

      574     6578                        /* Here, MSG$ is really NXT_SYSID: a returned para-
      575     6579                           meter indicating the next SYSID obtained from a
      576     6580                           scan of :SYMI.  If zero, there are no more files
      577     6581                           to be resubmitted.                              */
      578     6582    1         M$EI$=DCBADDR(DCBNUM(M$EI));

   6582  6 001157   000000 236007 xsym               LDQ     M$EI,DL
         6 001160   000062 470400 7                  LDP0    50
         6 001161   000000 471500                    LDP1    0,,PR0
         6 001162   100000 236106                    LDQ     0,QL,PR1
         6 001163   200017 756100                    STQ     M$EI$,,AUTO

      579     6583    2   AGAIN:  DO FOREVER;

   6583  6 001164                       AGAIN        null
      580     6584    2           CALL M$OPEN(OPEN_NEXT) ALTRET(DONE);

   6584  6 001164   000252 630400 5                  EPPR0   OPEN_NEXT
         6 001165   450000 713400                    CLIMB   alt,open
         6 001166   410400 401760                    pmme    nvectors=18
         6 001167   001342 702000 6                  TSX2    DONE

   6584  6 001170                       RCVR0        null
      581     6585    2   RCVR0:  ;
      582     6586    2           IF M$EI$->F$DCB.NAME.L ~= 7

   6586  6 001170   200017 470500                    LDP0    M$EI$,,AUTO
         6 001171   000010 236100                    LDQ     8,,PR0
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:72   
         6 001172   777000 376003                    ANQ     -512,DU
         6 001173   007000 116003                    CMPQ    3584,DU
         6 001174   001335 601000 6                  TNZ     SKIPFILE
         6 001175   000011 236100                    LDQ     9,,PR0
         6 001176   000777 376007                    ANQ     511,DL
         6 001177   000123 116007                    CMPQ    83,DL
         6 001200   001335 601000 6                  TNZ     SKIPFILE

      583     6587    2           OR SUBSTR (M$EI$->F$DCB.NAME.C,6,1) ~= 'S' THEN
      584     6588    2            GOTO SKIPFILE;
      585     6589    2           UATTRX = 0;

   6589  6 001201   200022 450100                    STZ     UATTRX,,AUTO

      586     6590    3             DO I = 1 TO FM$FIT.CODES.CODE(0);

   6590  6 001202   000001 235007                    LDA     1,DL
         6 001203   200015 755100                    STA     I,,AUTO
         6 001204   001220 710000 6                  TRA     s:6596+1

      587     6591    3             IF FM$FIT.CODES.CODE(I) = 11 THEN

   6591  6 001205   002172 470400 4                  LDP0    FIT$
         6 001206   200015 720100                    LXL0    I,,AUTO
         6 001207   000000 236110                    LDQ     0,X0,PR0
         6 001210   760000 376003                    ANQ     -8192,DU
         6 001211   260000 116003                    CMPQ    90112,DU
         6 001212   001217 601000 6                  TNZ     s:6596

      588     6592    4               DO;

      589     6593    4               UATTRX = FM$FIT.CODES.ITEMX(I);

   6593  6 001213   000000 236110                    LDQ     0,X0,PR0
         6 001214   001777 376007                    ANQ     1023,DL
         6 001215   200022 756100                    STQ     UATTRX,,AUTO

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:73   
      590     6594    4               GOTO EXITLOOP;

   6594  6 001216   001225 710000 6                  TRA     EXITLOOP

      591     6595    4               END;
      592     6596    3             END;

   6596  6 001217   200015 054100                    AOS     I,,AUTO
         6 001220   002172 470400 4                  LDP0    FIT$
         6 001221   000000 236100                    LDQ     0,,PR0
         6 001222   000037 772000                    QRL     31
         6 001223   200015 116100                    CMPQ    I,,AUTO
         6 001224   001205 605000 6                  TPL     s:6591

      593     6597    2   EXITLOOP: ;

   6597  6 001225                       EXITLOOP     null
      594     6598    2           DATA = 0;                     /* Flag jobs that were running        */

   6598  6 001225   200004 471500                    LDP1    @DATA,,AUTO
         6 001226   100000 450100                    STZ     0,,PR1

      595     6599    2           ACTION = NO_ACTION;

   6599  6 001227   200033 450100                    STZ     ACTION,,AUTO

      596     6600    2           IF (UATTRX ~= 0) AND (FM$FIT.CODES.NDW(I) = SIZEW(JM_IF)) THEN

   6600  6 001230   200022 235100                    LDA     UATTRX,,AUTO
         6 001231   001325 600000 6                  TZE     s:6639
         6 001232   200015 720100                    LXL0    I,,AUTO
         6 001233   000000 236110                    LDQ     0,X0,PR0
         6 001234   000003 376000 7                  ANQ     3
         6 001235   154000 116007                    CMPQ    55296,DL
         6 001236   001325 601000 6                  TNZ     s:6639

      597     6601    3             DO;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:74   

      598     6602        /* We're going to delete any good input job files that we don't    */
      599     6603        /* rerun or re-submit.                                             */
      600     6604    3             ACTION = DELETE_FILE;

   6604  6 001237   000003 235007                    LDA     3,DL
         6 001240   200033 755100                    STA     ACTION,,AUTO

      601     6605    3             IFINFO$ = PINCRW(FIT$,UATTRX);

   6605  6 001241   200022 236100                    LDQ     UATTRX,,AUTO
         6 001242   000022 736000                    QLS     18
         6 001243   002172 036000 4                  ADLQ    FIT$
         6 001244   200025 756100                    STQ     IFINFO$,,AUTO

      602     6606    3             IF JM$FITIF.U > 0 THEN

   6606  6 001245   200025 473500                    LDP3    IFINFO$,,AUTO
         6 001246   300005 221100                    LDX1    5,,PR3
         6 001247   001275 600000 6                  TZE     s:6627

      603     6607    4               DO;

      604     6608    4               DATA = -1;                /* Got a running one here!            */

   6608  6 001250   000001 335007                    LCA     1,DL
         6 001251   100000 755100                    STA     0,,PR1

      605     6609        /* If the job had been running and specified 'RERUN', then we      */
      606     6610        /* will rerun it unless it was being rerun and was current user at */
      607     6611        /* the time of the crash.  The assumption here is that the job     */
      608     6612        /* might be causing the crash.  Note that the FIT must be rewritten*/
      609     6613        /* if this is the first rerun of a job in order to record the fact */
      610     6614        /* that the job was restarted.                                     */
      611     6615    4               IF JM$FITIF.FLG.RR THEN

   6615  6 001252   200025 473500                    LDP3    IFINFO$,,AUTO
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:75   
         6 001253   300013 236100                    LDQ     11,,PR3
         6 001254   020000 316007                    CANQ    8192,DL
         6 001255   001277 600000 6                  TZE     s:6628

      612     6616    4                IF JM$FITIF.FLG.RR2 THEN

   6616  6 001256   010000 316007                    CANQ    4096,DL
         6 001257   001270 600000 6                  TZE     s:6622

      613     6617    4                 IF JMC_RVSYSID$->AWORD ~= JM$FITIF.SYSID THEN

   6617  6 001260   000000 474400 xsym               LDP4    JMC_RVSYSID$
         6 001261   300014 236100                    LDQ     12,,PR3
         6 001262   777777 376007                    ANQ     -1,DL
         6 001263   400000 116100                    CMPQ    0,,PR4
         6 001264   001277 600000 6                  TZE     s:6628

      614     6618    4                  ACTION = RE_SUBMIT;

   6618  6 001265   000001 235007                    LDA     1,DL
         6 001266   200033 755100                    STA     ACTION,,AUTO
         6 001267   001277 710000 6                  TRA     s:6628

      615     6619    4                 ELSE;
      616     6620    4                ELSE
      617     6621    5                  DO;

      618     6622    5                  ACTION = REWRITE_FIT;

   6622  6 001270   000002 235007                    LDA     2,DL
         6 001271   200033 755100                    STA     ACTION,,AUTO

      619     6623    5                  JM$FITIF.FLG.RR2 = %TRUE;

   6623  6 001272   010000 236007                    LDQ     4096,DL
         6 001273   300013 256100                    ORSQ    11,,PR3

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:76   
      620     6624    5                  END;

      621     6625    4               END;

   6625  6 001274   001277 710000 6                  TRA     s:6628

      622     6626        /* If the job was waiting to run, we will always re-submit it.     */
      623     6627    3             ELSE ACTION = RE_SUBMIT;  /* JOB WAS WAITING TO RUN             */

   6627  6 001275   000001 235007                    LDA     1,DL
         6 001276   200033 755100                    STA     ACTION,,AUTO

      624     6628    3             IF ACTION ~= DELETE_FILE THEN

   6628  6 001277   200033 235100                    LDA     ACTION,,AUTO
         6 001300   000003 115007                    CMPA    3,DL
         6 001301   001325 600000 6                  TZE     s:6639

      625     6629    4               DO;

      626     6630    4               IF ACTION = REWRITE_FIT

   6630  6 001302   000002 115007                    CMPA    2,DL
         6 001303   001313 601000 6                  TNZ     s:6634

      627     6631    4               THEN
      628     6632    4                CALL JMJ$REWRITE_OPEN_FIT(IFINFO$);

   6632  6 001304   200025 633500                    EPPR3   IFINFO$,,AUTO
         6 001305   200040 453500                    STP3    @NAME+2,,AUTO
         6 001306   200040 630500                    EPPR0   @NAME+2,,AUTO
         6 001307   000017 631400 xsym               EPPR1   B_VECTNIL+15
         6 001310   001062 701000 6                  TSX1    s:6532
         6 001311   000000 011000                    NOP     0
         6 001312   001317 710000 6                  TRA     s:6635

      629     6633    4               ELSE
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:77   
      630     6634    4                CALL M$CLOSE(CLS_NOCHANGE) ALTRET(RCVR10);

   6634  6 001313   000344 630400 5                  EPPR0   CLS_NOCHANGE
         6 001314   450001 713400                    CLIMB   alt,close
         6 001315   406000 401760                    pmme    nvectors=13
         6 001316   001377 702000 6                  TSX2    RCVR10

      631     6635    4               NXT_SYSID = JM$FITIF.SYSID;

   6635  6 001317   200025 470500                    LDP0    IFINFO$,,AUTO
         6 001320   000014 236100                    LDQ     12,,PR0
         6 001321   777777 376007                    ANQ     -1,DL
         6 001322   200003 471500                    LDP1    @MSG$,,AUTO
         6 001323   100000 756100                    STQ     0,,PR1

      632     6636    4               RETURN;

   6636  6 001324   000000 702200 xent               TSX2  ! X66_ARET

      633     6637    4               END;
      634     6638    3             END;
      635     6639    2           IF ACTION = DELETE_FILE THEN

   6639  6 001325   200033 235100                    LDA     ACTION,,AUTO
         6 001326   000003 115007                    CMPA    3,DL
         6 001327   001335 601000 6                  TNZ     SKIPFILE

      636     6640    2            CALL M$CLOSE(RELEASE_JOB) ALTRET(RCVR10);

   6640  6 001330   000402 630400 5                  EPPR0   RELEASE_JOB
         6 001331   450001 713400                    CLIMB   alt,close
         6 001332   406000 401760                    pmme    nvectors=13
         6 001333   001377 702000 6                  TSX2    RCVR10
         6 001334   001164 710000 6                  TRA     AGAIN

      637     6641    2           ELSE
      638     6642    2   SKIPFILE:
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:78   
      639     6643    2            CALL M$CLOSE(CLS_NOCHANGE) ALTRET(RCVR10);

   6643  6 001335   000344 630400 5     SKIPFILE     EPPR0   CLS_NOCHANGE
         6 001336   450001 713400                    CLIMB   alt,close
         6 001337   406000 401760                    pmme    nvectors=13
         6 001340   001377 702000 6                  TSX2    RCVR10

      640     6644    2           END;                            /* End of DO WHILE(%TRUE) loop         */

   6644  6 001341   001164 710000 6                  TRA     AGAIN

      641     6645    1   DONE:
      642     6646    1         IF B$ALT.ERR.CODE = %E$FILEBUSY THEN GOTO AGAIN;

   6646  6 001342   000000 470400 xsym  DONE         LDP0    B$TCB$
         6 001343   000000 471500                    LDP1    0,,PR0
         6 001344   100102 236100                    LDQ     66,,PR1
         6 001345   377770 376007                    ANQ     131064,DL
         6 001346   001550 116007                    CMPQ    872,DL
         6 001347   001164 600000 6                  TZE     AGAIN

      643     6647    1         IF B$ALT.ERR.CODE ~= %E$FDEOF THEN

   6647  6 001350   001540 116007                    CMPQ    864,DL
         6 001351   001374 600000 6                  TZE     s:6658

      644     6648    2           DO;

      645     6649    2           TXSYSID=SUBSTR(M$EI$->F$DCB.NAME.C,0,6);

   6649  6 001352   200017 473500                    LDP3    M$EI$,,AUTO
         6 001353   040100 100500                    MLR     fill='040'O
         6 001354   300010 200006                    ADSC9   8,,PR3                   cn=1,n=6
         6 001355   200020 000006                    ADSC9   TXSYSID,,AUTO            cn=0,n=6

      646     6650    2           CALL M$OPEN (OPEN_NEXT) ALTRET(RCVR1);

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:79   
   6650  6 001356   000252 630400 5                  EPPR0   OPEN_NEXT
         6 001357   450000 713400                    CLIMB   alt,open
         6 001360   410400 401760                    pmme    nvectors=18
         6 001361   001363 702000 6                  TSX2    RCVR1

      647     6651    2           GOTO RCVR0;

   6651  6 001362   001170 710000 6                  TRA     RCVR0

      648     6652    2   RCVR1:  IF TXSYSID ~= SUBSTR(M$EI$->F$DCB.NAME.C,0,6) THEN

   6652  6 001363   200017 470500       RCVR1        LDP0    M$EI$,,AUTO
         6 001364   040100 106500                    CMPC    fill='040'O
         6 001365   200020 000006                    ADSC9   TXSYSID,,AUTO            cn=0,n=6
         6 001366   000010 200006                    ADSC9   8,,PR0                   cn=1,n=6
         6 001367   001374 600000 6                  TZE     s:6658

      649     6653    3             DO;

      650     6654    3             TXSYSID=SUBSTR(M$EI$->F$DCB.NAME.C,0,6);

   6654  6 001370   040100 100500                    MLR     fill='040'O
         6 001371   000010 200006                    ADSC9   8,,PR0                   cn=1,n=6
         6 001372   200020 000006                    ADSC9   TXSYSID,,AUTO            cn=0,n=6

      651     6655    3             GOTO DONE;

   6655  6 001373   001342 710000 6                  TRA     DONE

      652     6656    3             END;
      653     6657    2           END;
      654     6658    1         NXT_SYSID = 0;                  /* FLAG END-OF-FILE-DIRECTORY         */

   6658  6 001374   200003 470500                    LDP0    @MSG$,,AUTO
         6 001375   000000 450100                    STZ     0,,PR0

      655     6659    1         RETURN;
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:80   

   6659  6 001376   000000 702200 xent               TSX2  ! X66_ARET

      656     6660        /**/
      657     6661    1   RCVR10: CALL BADUPD;

   6661  6 001377   001142 701000 6     RCVR10       TSX1    BADUPD
         6 001400   000000 011000                    NOP     0

      658     6662    1         GOTO AGAIN;

   6662  6 001401   001164 710000 6                  TRA     AGAIN
      659     6663        /**/
      660     6664        /**/
      661     6665    1   END JMJ$JOB;

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:81   
--  Include file information  --

   JP_MACRO_C.:E05TOU  is referenced.
   XSJ_SUBS_C.:E05TOU  is referenced.
   XSJ_MAC_C.:E05TOU  is referenced.
   FOO_MAC_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   OC_SUBS_C.:E05TOU  is referenced.
   OC_MESSHD_C.:E05TOU  is referenced.
   F_ERRORS_C.:E05TOU  is referenced.
   U$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
   B_STRINGS_C.:E05TOU  is referenced.
   JG_EVID_C.:E05TOU  is referenced.
   JM_SUBS_C.:E05TOU  is referenced.
   JMC_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   JM$STRUCT.:E05TOU  is referenced.
   JM_SCODE_C.:E05TOU  is referenced.
   FM$FIT.:E05TOU  is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B_SEGIDS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure JMJ$JOB.
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:82   

 **** Variables and constants ****

  ****  Section 004  Data  JMJ$JOB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    76-0-0/d STRC(1080)  r     1 CLS_JOBFILE              172-0-0/w UBIN        r     1 FIT(0:1023)
  2172-0-0/w PTR         r     1 FIT$                     162-0-0/w STRC(90)    r     1 FOS_MSG
     0-0-0/w STRC(1980)  r     1 JM_FITIF                 165-0-0/w STRC(108)   r     1 JP_MSG
  2200-0-0/d STRC(288)   r     1 JREAD                     67-0-0/c STRC(243)   r     1 OC_MESSHD
   170-0-0/d STRC(72)    r     1 T_JOBNAME                160-0-0/c STRC(72)    r     1 T_SYMI
   150-0-0/w STRC(288)   r     1 T_WSTA                   134-0-0/d STRC(432)   r     1 WRITE_CSCG
  2173-0-0/w STRC(180)   r     1 XSJ_JOBINFO

  ****  Section 005 RoData JMJ$JOB

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   344-0-0/d STRC(1080)  r     1 CLS_NOCHANGE             440-0-0/d STRC(2088)  r     1 DEL_JOBFILE
     0-0-0/w STRC(1944)  r     1 JM_IF                    160-0-0/d STRC(2088)  r     1 OPEN_JOB_INOUT
    66-0-0/d STRC(2088)  r     1 OPEN_JOB_TEST            252-0-0/d STRC(2088)  r     1 OPEN_NEXT
   402-0-0/d STRC(1080)  r     1 RELEASE_JOB

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @DATA                     35-0-0/w PTR         r     1 @LISTPTR$
     3-0-0/w PTR         r     1 @MSG$                     36-0-0/w PTR         r     1 @NAME
    35-0-0/w PTR         r     1 @SYSID                    33-0-0/w UBIN        r     1 ACTION
    *0-0-0/w SBIN        r     1 DATA                      15-0-0/w SBIN        r     1 I
     6-0-0/w PTR         r     1 IF$                       25-0-0/w PTR         r     1 IFINFO$
    23-0-0/w SBIN        r     1 INSTATTRX                 31-0-0/w PTR         r     1 JPTR$
    *0-0-0/w PTR         r     1 LISTPTR$                  32-0-0/w PTR         r     1 LPTR$
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:83   
    17-0-0/w PTR         r     1 M$EI$                     *0-0-0/w PTR         r     1 MSG$
    *0-0-0/w STRC(72)    r     1 NAME                      *0-0-0/w UBIN        r     1 NXT_SYSID
    30-0-0/w PTR         r     1 PPTR$                     24-0-0/w SBIN        r     1 PROCATTRX
     7-0-0/w PTR         r     1 PSN$                      16-0-0/w UBIN        r     1 QNUM
    10-0-0/w PTR         r     1 RIT$                      13-0-0/w PTR         r     1 RITHD$
    12-0-0/w PTR         r     1 SHRHD$                    26-0-0/w PTR         r     1 SNINFO$
     5-0-0/w PTR         r     1 STIF$                     14-0-0/w UBIN        r     1 SYSID
    *0-0-0/w UBIN        r     1 SYSID                     36-0-0/w PTR         r     1 TEMPPTR$
    20-0-0/c CHAR(6)     r     1 TXSYSID                   22-0-0/w SBIN        r     1 UATTRX
    27-0-0/w PTR         r     1 VRINFO$                   11-0-0/w PTR         r     1 XCLHD$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 JMC_BFIS$                  0-0-0/w STRC(1728)  r     1 JMC_CH
     0-0-0/w PTR         r     1 JMC_PPTR$                  0-0-0/w PTR         r     1 JMC_RVSYSID$
     0-0-0/w STRC(288)   r     1 JM_JOBSCB

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 APTR$                      0-0-0/w UBIN        r     1 AWORD
     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/w STRC(1116)  r     1 FM$FIT
     0-0-0/w STRC(180)   r     1 JM$CITE                    0-0-0/w ASTR(1665)  r     1 JM$IF
     0-0-0/w STRC(684)   r     1 JM$PART                    0-0-0/w STRC(108)   r     1 JM$RES
     0-0-0/w STRC(72)    r     1 JM$RESLIST                 0-0-0/w STRC(108)   r     1 JM$SN
     0-0-0/w STRC(72)    r     1 JM$SNLIST                  0-0-0N  NULL        r     1 M$EI
     0-0-0N  NULL        r     1 M$MBSCOM                   0-0-0N  NULL        r     1 M$STATUS

PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:84   

   Procedure JMJ$JOB requires 770 words for executable code.
   Procedure JMJ$JOB requires 36 words of local(AUTO) storage.

    No errors detected in file JMJ$JOB.:E05TSI    .
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:85   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:86   
          MINI XREF LISTING

ACTION
      5000**DCL      6599<<ASSIGN   6604<<ASSIGN   6618<<ASSIGN   6622<<ASSIGN   6627<<ASSIGN   6628>>IF
      6630>>IF       6639>>IF
AGAIN
      6583**LABEL    6646--GOTO     6662--GOTO
APTR$
      4811**DCL      6416>>ASSIGN
AWORD
      4810**DCL      6331<<ASSIGN   6331>>ASSIGN   6491<<ASSIGN   6491>>ASSIGN   6617>>IF
B$ALT.CODE
      4511**DCL      4511--REDEF    4512--REDEF    4512--REDEF
B$ALT.ERR.CODE
      4513**DCL      6646>>IF       6647>>IF
B$ALT.ERR.ERR#
      4513**DCL      4513--REDEF
B$ALT.EVID
      4512**DCL      4512--REDEF    4512--REDEF
B$JIT.CPFLAGS1.SLEAZE
      2322**DCL      2322--REDEF
B$JIT.ERR.MID
      2229**DCL      2229--REDEF
B$JIT$
      6181**DCL      2223--IMP-PTR
B$TCB.ALT$
      4507**DCL      6646>>IF       6647>>IF
B$TCB$
      6180**DCL      6646>>IF       6647>>IF
BADUPD
      6560**PROC     6557--CALL     6661--CALL
BAD_FIT
      6326**LABEL    6317--GOTO
BAD_IFOPN
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:87   
      6374**LABEL    6279--CALLALT
BAD_UPDIO
      6557**LABEL    6529--CALLALT  6538--CALLALT  6552--CALLALT  6553--CALLALT
CLS_JOBFILE
      5759**DCL      6538<>CALL     6567<>CALL
CLS_JOBFILE.SN_
      5759**DCL      5759--REDEF
CLS_JOBFILE.UATTR_
      5762**DCL      6537<<ASSIGN
CLS_JOBFILE.UTL_
      5760**DCL      5760--REDEF
CLS_JOBFILE.V
      5764**DCL      5759--DCLINIT
CLS_JOBFILE.V.EXPIRE#
      5774**DCL      5774--REDEF
CLS_JOBFILE.V.TYPE#
      5772**DCL      5772--REDEF
CLS_JOBFILE.V.XTNSIZE#
      5769**DCL      5769--REDEF    5771--REDEF
CLS_NOCHANGE
      5714**DCL      6634<>CALL     6643<>CALL
CLS_NOCHANGE.SN_
      5714**DCL      5714--REDEF
CLS_NOCHANGE.UTL_
      5715**DCL      5715--REDEF
CLS_NOCHANGE.V
      5719**DCL      5714--DCLINIT
CLS_NOCHANGE.V.EXPIRE#
      5729**DCL      5729--REDEF
CLS_NOCHANGE.V.TYPE#
      5727**DCL      5727--REDEF
CLS_NOCHANGE.V.XTNSIZE#
      5724**DCL      5724--REDEF    5726--REDEF
DATA
      4490**DCL         8--PROC     6577--ENTRY    6598<<ASSIGN   6608<<ASSIGN
DEL_JOBFILE
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:88   
      5929**DCL      6391<>CALL
DEL_JOBFILE.ACSVEH_
      5931**DCL      5932--REDEF
DEL_JOBFILE.ALTKEYS_
      5937**DCL      5938--REDEF    5938--REDEF
DEL_JOBFILE.HDR_
      5936**DCL      5937--REDEF
DEL_JOBFILE.TAB_
      5935**DCL      5936--REDEF
DEL_JOBFILE.UHL_
      5929**DCL      5930--REDEF    5930--REDEF
DEL_JOBFILE.V
      5938**DCL      5929--DCLINIT
DEL_JOBFILE.V.FSN#
      5969**DCL      5969--REDEF    5969--REDEF
DEL_JOBFILE.WSN_
      5935**DCL      5935--REDEF
DONE
      6646**LABEL    6584--CALLALT  6655--GOTO
EXITLOOP
      6597**LABEL    6594--GOTO
F$DCB.ACTPOS
      3450**DCL      3450--REDEF
F$DCB.ARS
      3425**DCL      3425--REDEF
F$DCB.ATTR
      3443**DCL      3444--REDEF
F$DCB.BORROW
      3458**DCL      3458--REDEF    3458--REDEF    3458--REDEF
F$DCB.DCBNAME.L
      3472**DCL      3472--IMP-SIZ
F$DCB.EOMCHAR
      3429**DCL      3429--REDEF
F$DCB.FLDID
      3453**DCL      3453--REDEF
F$DCB.FORM$
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:89   
      3447**DCL      3447--REDEF
F$DCB.FSECT
      3463**DCL      3463--REDEF
F$DCB.FSN
      3440**DCL      3440--REDEF    3440--REDEF    3441--REDEF
F$DCB.HEADER$
      3446**DCL      3446--REDEF
F$DCB.IXTNSIZE
      3444**DCL      3444--REDEF
F$DCB.LASTSTA$
      3434**DCL      3434--REDEF
F$DCB.LVL
      3459**DCL      3459--REDEF
F$DCB.NAME.C
      3434**DCL      3434--REDEF    6586>>IF       6649>>ASSIGN   6652>>IF       6654>>ASSIGN
F$DCB.NAME.L
      3434**DCL      6586>>IF
F$DCB.NOEOF
      3455**DCL      3455--REDEF
F$DCB.NRECS
      3445**DCL      3445--REDEF
F$DCB.NRECX
      3464**DCL      3464--REDEF
F$DCB.OHDR
      3456**DCL      3456--REDEF
F$DCB.ORG
      3439**DCL      3439--REDEF
F$DCB.PRECNO
      3462**DCL      3462--REDEF
F$DCB.RCSZ
      3467**DCL      3467--REDEF
F$DCB.RES
      3435**DCL      3435--REDEF
F$DCB.SETX
      3447**DCL      3447--REDEF
F$DCB.TAB$
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:90   
      3446**DCL      3447--REDEF
F$DCB.TDA
      3461**DCL      3461--REDEF
F$DCB.WSN
      3436**DCL      3436--REDEF
FIT
      6107**DCL      5418--DCLINIT  5649--DCLINIT  6108--DCLINIT
FIT$
      6108**DCL      6286>>DOINDEX  6287>>IF       6289>>ASSIGN   6290>>IF       6311>>IF       6312>>ASSIGN
      6313>>IF       6314>>ASSIGN   6318>>ASSIGN   6337>>ASSIGN   6338>>ASSIGN   6590>>DOINDEX  6591>>IF
      6593>>ASSIGN   6600>>IF       6605>>ASSIGN
FM$FIT.CODES.CODE
      4813**DCL      6286>>DOINDEX  6287>>IF       6311>>IF       6313>>IF       6590>>DOINDEX  6591>>IF
FM$FIT.CODES.ITEMX
      4813**DCL      6289>>ASSIGN   6312>>ASSIGN   6314>>ASSIGN   6593>>ASSIGN
FM$FIT.CODES.NDW
      4813**DCL      6290>>IF       6600>>IF
FOI$CRASH
      6188**DCL-ENT  6404--CALL
FOI$GBLK
      6189**DCL-ENT  6330--CALL
FOI$RBLK
      6190**DCL-ENT  6489--CALL
FOI$SNAP
      6191**DCL-ENT  6292--CALL     6326--CALL     6389--CALL     6436--CALL     6510--CALL     6564--CALL
FOS_MSG
      6027**DCL      6471--ASSIGN
FOS_MSG.BATCH
      6037**DCL      6040--REDEF    6044--REDEF
FOS_MSG.NUM
      6046**DCL      6049--REDEF
FOS_MSG.SYSID
      6035**DCL      6470<<ASSIGN
I
      4987**DCL      6286<<DOINDEX  6287>>IF       6289>>ASSIGN   6290>>IF       6311>>IF       6312>>ASSIGN
      6313>>IF       6314>>ASSIGN   6347<<DOINDEX  6349>>ASSIGN   6366<<DOINDEX  6368>>ASSIGN   6446<<ASSIGN
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:91   
      6447<>CALL     6590<<DOINDEX  6591>>IF       6593>>ASSIGN   6600>>IF
IF$
      4980**DCL      6275<>CALL     6276>>IF       6330<>CALL     6333>>ASSIGN   6334>>ASSIGN   6334>>ASSIGN
      6347>>DOINDEX  6362>>ASSIGN   6363>>ASSIGN   6366>>DOINDEX  6372>>ASSIGN   6374>>ASSIGN   6374>>ASSIGN
      6376<>CALL     6378<>CALL     6411<<ASSIGN   6412>>DOWHILE  6413>>IF       6415>>ASSIGN   6419>>IF
      6426>>IF       6442>>IF       6444>>ASSIGN   6445>>ASSIGN   6446>>ASSIGN   6447<>CALL     6451<>CALL
      6454>>ASSIGN   6459>>ASSIGN   6463>>IF       6463>>IF       6466>>ASSIGN   6470>>ASSIGN   6479<>CALL
      6482>>IF       6482>>CALL     6483>>IF       6485>>CALL     6486>>CALL     6489<>CALL     6489>>CALL
      6489>>CALL     6505<<ASSIGN   6505>>ASSIGN
IFINFO$
      4994**DCL      6318<<ASSIGN   6320>>IF       6320>>IF       6330>>CALL     6330>>CALL     6333>>ASSIGN
      6334>>ASSIGN   6334>>ASSIGN   6605<<ASSIGN   6606>>IF       6615>>IF       6616>>IF       6617>>IF
      6623>>ASSIGN   6632<>CALL     6635>>ASSIGN
IFNAME
      6247**PROC     6277--CALL     6528--CALL     6551--CALL
INSTATTRX
      4992**DCL      6284<<ASSIGN   6312<<ASSIGN   6320>>IF       6338>>ASSIGN
I_DONT_CARE IN PROCEDURE BADUPD
      6564**LABEL    6567--CALLALT
JM$CITE.ACCT
      4549**DCL      4552--REDEF
JM$CITE.JOFF_INFO.STATUS
      4555**DCL      6498<<ASSIGN
JM$CITE.RECOVERED
      4545**DCL      6267>>IF
JM$CITE.SYSID
      4541**DCL      6266>>ASSIGN   6410>>ASSIGN   6456>>ASSIGN   6457>>ASSIGN
JM$IF
      4828**DCL      6330--CALL     6334<<ASSIGN   6334>>ASSIGN   6489--CALL     6536<<ASSIGN   6536>>ASSIGN
JM$IF.FLG.KRERUN
      4892**DCL      6442>>IF       6445<<ASSIGN
JM$IF.FLG.RR
      4884**DCL      6615>>IF
JM$IF.FLG.RR2
      4886**DCL      6444<<ASSIGN   6616>>IF       6623<<ASSIGN
JM$IF.JNL
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:92   
      4958**DCL      4970--IMP-SIZ  6330>>CALL     6333<<ASSIGN   6333>>ASSIGN   6334>>ASSIGN   6334>>ASSIGN
      6489>>CALL     6535<<ASSIGN   6535>>ASSIGN   6536>>ASSIGN   6536>>ASSIGN
JM$IF.LNK$
      4832**DCL      6505>>ASSIGN
JM$IF.MAXPSN
      4896**DCL      6320>>IF       6347>>DOINDEX  6483>>IF
JM$IF.MAXVR
      4899**DCL      6320>>IF       6366>>DOINDEX  6482>>IF
JM$IF.NJD
      4868**DCL      6374>>ASSIGN
JM$IF.NXTJ$
      4834**DCL      6420>>ASSIGN   6424>>DOWHILE  6425>>ASSIGN   6428<<ASSIGN   6428>>ASSIGN
JM$IF.PNUM
      4852**DCL      6415>>ASSIGN
JM$IF.PRIO
      4872**DCL      6446>>ASSIGN   6454>>ASSIGN
JM$IF.SLNK$
      4840**DCL      6363<<ASSIGN   6486<>CALL
JM$IF.SYSID
      4902**DCL      6413>>IF       6470>>ASSIGN   6527>>ASSIGN   6617>>IF       6635>>ASSIGN
JM$IF.U
      4842**DCL      6606>>IF
JM$IF.UNSAT_COUNT
      4849**DCL      6374<<ASSIGN
JM$IF.VRLIST$
      4836**DCL      6372<<ASSIGN   6482<>CALL
JM$IF.WOO
      4908**DCL      6463>>IF       6466>>ASSIGN
JM$IF.WSN
      4910**DCL      6459>>ASSIGN   6463>>IF
JM$IF.XLNK$
      4838**DCL      6362<<ASSIGN   6485<>CALL
JM$PART.CUR
      4595**DCL      6449<<ASSIGN   6449>>ASSIGN   6494<<ASSIGN   6494>>ASSIGN
JM$PART.JOB$
      4614**DCL      6418>>ASSIGN   6420<<ASSIGN
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:93   
JM$RES
      4788**DCL      6368<<ASSIGN
JM$RES.NXT$
      4804**DCL      6369<<ASSIGN
JM$RES.VNUM
      4795**DCL      4797--REDEF
JM$RESLIST.RES
      4752**DCL      6368>>ASSIGN
JM$RESLIST.RES.VNUM
      4757**DCL      4759--REDEF
JM$SN
      4694**DCL      6349<<ASSIGN
JM$SN.FLGS.EXCL
      4705**DCL      6350>>IF
JM$SN.NXT$
      4710**DCL      6236>>ASSIGN   6352<<ASSIGN   6357<<ASSIGN
JM$SNLIST.SN
      4656**DCL      6349>>ASSIGN
JMC_BFIS$
      1751**DCL      6331>>ASSIGN   6331>>ASSIGN   6491>>ASSIGN   6491>>ASSIGN
JMC_CH
      1747**DCL      1748--REDEF
JMC_CH.HRUN$
      1748**DCL      6411>>ASSIGN
JMC_PPTR$
      1752**DCL      6415>>ASSIGN
JMC_RVSYSID$
      1752**DCL      6617>>IF
JMJ$REWRITE_FIT
      6522**ENTRY    6451--CALL
JMJ$REWRITE_OPEN_FIT
      6532**ENTRY    6632--CALL
JMR$CHECK_JD
      6192**DCL-ENT  6499--CALL
JMR$FIND
      6193**DCL-ENT  6275--CALL
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:94   
JMS$SCHED
      6194**DCL-ENT  6380--CALL     6474--CALL     6502--CALL
JMU$GET_SLOT
      6195**DCL-ENT  6348--CALL     6367--CALL
JMU$MOVE_IF
      6196**DCL-ENT  6447--CALL
JMU$REL_SLOT
      6197**DCL-ENT  6237--CALL
JMU$SELECTQ
      6198**DCL-ENT  6378--CALL
JMU$SETSEG
      6199**DCL-ENT  6417--CALL
JMU$SET_PARTS
      6200**DCL-ENT  6376--CALL
JMU$UNLINK_IF
      6201**DCL-ENT  6479--CALL
JM_FITIF
      5020**DCL      5022--DCLINIT  6534--ASSIGN   6537--ASSIGN
JM_FITIF.COUNT
      5022**DCL      6533<<ASSIGN
JM_IF
      5178**DCL      6290--IF       6533--ASSIGN   6600--IF
JM_JOBSCB
      6163**DCL      6330<>CALL     6489<>CALL
JPTR$
      4998**DCL      6418<<ASSIGN   6419>>IF       6420>>ASSIGN   6423>>ASSIGN   6424>>DOWHILE  6425<<ASSIGN
      6426>>IF       6428>>ASSIGN   6431>>ASSIGN
JP_MSG
      6087**DCL      6271--ASSIGN
JP_MSG.SYSID
      6096**DCL      6098--REDEF    6270<<ASSIGN
JREAD
      6138**DCL      6394<>CALL     6396<>CALL
JREAD.SYSID#
      6141**DCL      6393<<ASSIGN
KILLIN
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:95   
      6374**LABEL    6308--GOTO     6327--GOTO
KILLIN1
      6392**LABEL    6391--CALLALT
LISTPTR$ IN PROCEDURE REL_SLOTS
      6232**DCL      6231--PROC     6234>>ASSIGN
LPTR$
      4999**DCL      6423<<ASSIGN   6425>>ASSIGN   6428>>ASSIGN   6431<<ASSIGN
M$CLOSE
        24**DCL-ENT  6538--CALL     6553--CALL     6567--CALL     6634--CALL     6640--CALL     6643--CALL
M$EI
      4497**DCL      6582--ASSIGN
M$EI$
      4989**DCL      6582<<ASSIGN   6586>>IF       6586>>IF       6649>>ASSIGN   6652>>IF       6654>>ASSIGN
M$OPEN
        24**DCL-ENT  6279--CALL     6391--CALL     6529--CALL     6552--CALL     6584--CALL     6650--CALL
M$WRITE
        25**DCL-ENT  6273--CALL     6462--CALL     6467--CALL     6473--CALL
MSG$
      4488**DCL         8--PROC     4489--REDEF    6265--ENTRY    6266>>ASSIGN   6267>>IF       6409--ENTRY
      6410>>ASSIGN   6456>>ASSIGN   6457>>ASSIGN   6498>>ASSIGN   6499<>CALL     6522--ENTRY    6527>>ASSIGN
      6532--ENTRY    6535>>ASSIGN   6536>>ASSIGN   6536>>ASSIGN   6547--ENTRY    6577--ENTRY
NAME IN PROCEDURE IFNAME
      6249**DCL      6247--PROC
NAME.COUNT IN PROCEDURE IFNAME
      6250**DCL      6255<<ASSIGN
NAME.TAG_CHARACTER IN PROCEDURE IFNAME
      6252**DCL      6258<<ASSIGN
NAME.TEXT_SYSID IN PROCEDURE IFNAME
      6251**DCL      6256<<CALLBLT
NOFRAMES
      6395**LABEL    6330--CALLALT
NXT_SYSID
      4489**DCL      6551<>CALL     6635<<ASSIGN   6658<<ASSIGN
OC_MESSHD
      5324**DCL      6460--ASSIGN
OC_MESSHD.CADDR
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:96   
      5325**DCL      6458<<ASSIGN   6465<<ASSIGN
OC_MESSHD.FLAGS
      5331**DCL      5332--REDEF
OC_MESSHD.ID
      5337**DCL      6457<<ASSIGN
OC_MESSHD.MSG#
      5326**DCL      6455<<ASSIGN
OC_MESSHD.MSGID
      5327**DCL      5328--REDEF
OC_MESSHD.OK_TYPE
      5338**DCL      6453<<ASSIGN
OC_MESSHD.PRIO
      5339**DCL      6454<<ASSIGN
OC_MESSHD.SYSID
      5328**DCL      6456<<ASSIGN
OC_MESSHD.WSN
      5334**DCL      6459<<ASSIGN   6466<<ASSIGN
OPEN_JOB_INOUT
      5528**DCL      6529<>CALL     6552<>CALL
OPEN_JOB_INOUT.ACSVEH_
      5530**DCL      5531--REDEF
OPEN_JOB_INOUT.ALTKEYS_
      5536**DCL      5537--REDEF    5537--REDEF
OPEN_JOB_INOUT.HDR_
      5535**DCL      5536--REDEF
OPEN_JOB_INOUT.TAB_
      5534**DCL      5535--REDEF
OPEN_JOB_INOUT.UHL_
      5528**DCL      5529--REDEF    5529--REDEF
OPEN_JOB_INOUT.V
      5537**DCL      5528--DCLINIT
OPEN_JOB_INOUT.V.FSN#
      5568**DCL      5568--REDEF    5568--REDEF
OPEN_JOB_INOUT.WSN_
      5534**DCL      5534--REDEF
OPEN_JOB_TEST
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:97   
      5413**DCL      6279<>CALL
OPEN_JOB_TEST.ACSVEH_
      5415**DCL      5416--REDEF
OPEN_JOB_TEST.ALTKEYS_
      5421**DCL      5422--REDEF    5422--REDEF
OPEN_JOB_TEST.HDR_
      5420**DCL      5421--REDEF
OPEN_JOB_TEST.TAB_
      5419**DCL      5420--REDEF
OPEN_JOB_TEST.UHL_
      5413**DCL      5414--REDEF    5414--REDEF
OPEN_JOB_TEST.V
      5422**DCL      5413--DCLINIT
OPEN_JOB_TEST.V.FSN#
      5453**DCL      5453--REDEF    5453--REDEF
OPEN_JOB_TEST.WSN_
      5419**DCL      5419--REDEF
OPEN_NEXT
      5644**DCL      6584<>CALL     6650<>CALL
OPEN_NEXT.ACSVEH_
      5646**DCL      5647--REDEF
OPEN_NEXT.ALTKEYS_
      5652**DCL      5653--REDEF    5653--REDEF
OPEN_NEXT.HDR_
      5651**DCL      5652--REDEF
OPEN_NEXT.TAB_
      5650**DCL      5651--REDEF
OPEN_NEXT.UHL_
      5644**DCL      5645--REDEF    5645--REDEF
OPEN_NEXT.V
      5653**DCL      5644--DCLINIT
OPEN_NEXT.V.FSN#
      5684**DCL      5684--REDEF    5684--REDEF
OPEN_NEXT.WSN_
      5650**DCL      5650--REDEF
PPTR$
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:98   
      4997**DCL      6415<<ASSIGN   6416<<ASSIGN   6416>>ASSIGN   6417<>CALL     6418>>ASSIGN   6420>>ASSIGN
      6449>>ASSIGN   6449>>ASSIGN   6494>>ASSIGN   6494>>ASSIGN
PROCATTRX
      4993**DCL      6285<<ASSIGN   6314<<ASSIGN   6320>>IF       6337>>ASSIGN
PSN$
      4981**DCL      6234<<ASSIGN   6235>>DOWHILE  6236>>ASSIGN   6237<>CALL     6238<<ASSIGN   6348<>CALL
      6349>>ASSIGN   6350>>IF       6352>>ASSIGN   6353>>ASSIGN   6357>>ASSIGN   6358>>ASSIGN
QNUM
      4988**DCL      6378<>CALL
RCVR0
      6584**LABEL    6651--GOTO
RCVR1
      6652**LABEL    6650--CALLALT
RCVR10
      6661**LABEL    6634--CALLALT  6640--CALLALT  6643--CALLALT
RELEASE_JOB
      5804**DCL      6553<>CALL     6640<>CALL
RELEASE_JOB.SN_
      5804**DCL      5804--REDEF
RELEASE_JOB.UTL_
      5805**DCL      5805--REDEF
RELEASE_JOB.V
      5809**DCL      5804--DCLINIT
RELEASE_JOB.V.EXPIRE#
      5819**DCL      5819--REDEF
RELEASE_JOB.V.TYPE#
      5817**DCL      5817--REDEF
RELEASE_JOB.V.XTNSIZE#
      5814**DCL      5814--REDEF    5816--REDEF
REL_SLOTS
      6231**PROC     6482--CALL     6485--CALL     6486--CALL
RIT$
      4982**DCL      6367<>CALL     6368>>ASSIGN   6369>>ASSIGN   6370>>ASSIGN
RITHD$
      4985**DCL      6365<<ASSIGN   6369>>ASSIGN   6370<<ASSIGN   6372>>ASSIGN
RTN
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:99   
      6395**LABEL    6394--CALLALT
SHRHD$
      4984**DCL      6346<<ASSIGN   6357>>ASSIGN   6358<<ASSIGN   6363>>ASSIGN
SKIPFILE
      6643**LABEL    6588--GOTO
SNINFO$
      4995**DCL      6338<<ASSIGN   6349>>ASSIGN
STIF$
      4979**DCL      6534<<ASSIGN   6535>>ASSIGN   6536>>ASSIGN   6536>>ASSIGN
SYSID
      4986**DCL      6266<<ASSIGN   6270>>ASSIGN   6275<>CALL     6277<>CALL     6393>>ASSIGN   6410<<ASSIGN
      6413>>IF       6527<<ASSIGN   6528<>CALL
SYSID IN PROCEDURE IFNAME
      6248**DCL      6247--PROC     6256>>CALLBLT
TEMPPTR$ IN PROCEDURE REL_SLOTS
      6233**DCL      6236<<ASSIGN   6238>>ASSIGN
TRY_SCHED
      6502**LABEL    6437--GOTO     6511--GOTO
TXSYSID
      4990**DCL      6649<<ASSIGN   6652>>IF       6654<<ASSIGN
T_JOBNAME
      6104**DCL      5414--DCLINIT  5529--DCLINIT  5930--DCLINIT  6277<>CALL     6528<>CALL     6551<>CALL
T_SYMI
      6011**DCL      5418--DCLINIT  5533--DCLINIT  5649--DCLINIT  5934--DCLINIT
T_WSTA
      5985**DCL      5845--DCLINIT
T_WSTA.MSGIDXT
      5995**DCL      5998--REDEF
T_WSTA.STATION#
      5989**DCL      6272<<ASSIGN   6461<<ASSIGN   6472<<ASSIGN
UATTRX
      4991**DCL      6283<<ASSIGN   6289<<ASSIGN   6317>>IF       6318>>ASSIGN   6589<<ASSIGN   6593<<ASSIGN
      6600>>IF       6605>>ASSIGN
UNLINKED
      6438**LABEL    6429--GOTO
VRINFO$
PL6.E3A0      #001=JMJ$JOB File=JMJ$JOB.:E05TSI                                  TUE 07/29/97 23:28 Page:100  
      4996**DCL      6337<<ASSIGN   6368>>ASSIGN
WRITE_CSCG
      5843**DCL      6273<>CALL     6462<>CALL     6467<>CALL     6473<>CALL
WRITE_CSCG.BUF_
      5843**DCL      6271<<ASSIGN   6460<<ASSIGN   6471<<ASSIGN
WRITE_CSCG.STATION_
      5845**DCL      5845--REDEF
WRITE_CSCG.V
      5846**DCL      5843--DCLINIT
WRITE_CSCG.V.DVBYTE.VFC#
      5852**DCL      5852--REDEF
XCLHD$
      4983**DCL      6345<<ASSIGN   6352>>ASSIGN   6353<<ASSIGN   6362>>ASSIGN
XSJ$READ
      6202**DCL-ENT  6394--CALL
XSJ$WRITE
      6203**DCL-ENT  6396--CALL
XSJ_JOBINFO
      6120**DCL      6138--DCLINIT  6139--DCLINIT
XSJ_JOBINFO.STATUS#
      6121**DCL      6395<<ASSIGN
