VERSION E05

PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:1    
        1        1        /*M*    CPX$CONTEXT7    subroutine which checks for context errors for IBEX   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*    AND,DMC,IPC,IND=3,CTI=6,ECU=3,DCI=3,DTI=3                             */
        8        8        /*P*    NAME: CPX$CONTEXT7
        9        9                PURPOSE: To check for context errors for IBEX                         */
       10       10        /******************************************************************************/
       11       11        CPX$CONTEXT7:
       12       12                PROC (P_PARAM);
       13       13        /***** include files *****/
       14       14          %INCLUDE CP_6;
       15       95          %INCLUDE CP_MACROS_C;
       16      847          %INCLUDE CP_SUBS_C;
       17     1764          %INCLUDE CP_PERR_C;
       18     2102          %INCLUDE XU_MACRO_C;
       19     5208          %INCLUDE XU_SUBS_C;
       20     5300        /***** fpts *****/
       21     5301          %PARSE$PARAM (NAME=P_PARAM);
       22     5382          %PARSE$SYM (NAME=P$S,STCLASS=BASED);
       23     5420          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
       24     5465          %U$PARAM (NAME=U$PARAM,STCLASS="BASED(P_PARAM.USER$)");
       25     5481          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
       26     5500        /***** external routines *****/
       27     5501    1   DCL CXP$POSTERR ENTRY(5);
       28     5502    1   DCL CXX$DECBIN ENTRY(2) ALTRET;
       29     5503    1   DCL CPX$OCTBIN ENTRY(2) ALTRET;
       30     5504        /***** declarations *****/
       31     5505    1   DCL PTR$ PTR AUTO;
       32     5506    1   DCL PTR1$ PTR AUTO;
       33     5507    1   DCL VALUE SBIN WORD AUTO;
       34     5508    1   DCL INDX UBIN WORD AUTO;
       35     5509    1   DCL COUNT SBIN WORD AUTO;
       36     5510        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:2    
       37     5511        /***** error msgs *****/
       38     5512        %VLP_ERRCODE (FPTN=E_BDCVAL,FCG=CP,MID=X,ERR#=E$BDCVAL,STCLASS=CONSTANT);
       39     5557        %VLP_ERRCODE (FPTN=E_BOCVAL,FCG=CP,MID=X,ERR#=E$BOCVAL,STCLASS=CONSTANT);
       40     5602        %VLP_ERRCODE (FPTN=E_XBDSWITCH,FCG=CP,MID=X,ERR#=E$XBDSWITCH,STCLASS=CONSTANT);
       41     5647        /*E*    ERROR: CPX-E$XBDSWITCH-0
       42     5648                MESSAGE: SWITCHES are numbered 0 thru 35
       43     5649        */
       44     5650        %VLP_ERRCODE (FPTN=E_XSUTOOLNG,FCG=CP,MID=X,ERR#=E$XSUTOOLNG,STCLASS=CONSTANT);
       45     5695        /*E*    ERROR: CPX-E$XSUTOOLNG-0
       46     5696                MESSAGE: SETUP text must be 114 chars or less
       47     5697        */
       48     5698        %VLP_ERRCODE (FPTN=E_XBDTITLE,FCG=CP,MID=X,ERR#=E$XBDTITLE,STCLASS=CONSTANT);
       49     5743        /*E*    ERROR: CPX-E$XBDTITLE-0
       50     5744                MESSAGE: TITLE text must be 114 chars or less
       51     5745        */
       52     5746        %VLP_ERRCODE (FPTN=E_XILLTAB,FCG=CP,MID=X,ERR#=E$XILLTAB,STCLASS=CONSTANT);
       53     5791        /*E*    ERROR: CPX-E$XILLTAB-0
       54     5792                MESSAGE: TABS must be 255 or less
       55     5793        */
       56     5794        %VLP_ERRCODE (FPTN=E_XTMTABS,FCG=CP,MID=X,ERR#=E$XTMTABS,STCLASS=CONSTANT);
       57     5839        /*E*    ERROR: CPX-E$XTMTABS-0
       58     5840                MESSAGE: Only 31 tabs allowed.
       59     5841        */
       60     5842        %VLP_ERRCODE (FPTN=E_XTMSWITCHES,FCG=CP,MID=X,ERR#=E$XTMSWITCHES,STCLASS=CONSTANT);
       61     5887        /*E*    ERROR: CPX-E$XTMSWITCHES-0
       62     5888                MESSAGE: Only 36 switches allowed.
       63     5889        */
       64     5890        %VLP_ERRCODE (FPTN=E_XTESINPUTSZ,FCG=CP,MID=X,ERR#=E$XTESINPUTSZ,STCLASS=CONSTANT);
       65     5935        /*E*    ERROR: CPX-E$XTESINPUTSZ-0
       66     5936                MESSAGE: SINPUTSZ must be <= 254.
       67     5937        */
       68     5938        %VLP_ERRCODE (FPTN=E_XILLFCNTBL,FCG=CP,MID=X,ERR#=E$XILLFCNTBL,STCLASS=CONSTANT);
       69     5983        /*E*    ERROR: CPX-E$XILLFCNTBL-0
       70     5984                MESSAGE: FCNTBL text must be 8 chars or less
       71     5985        */
       72     5986        %VLP_ERRCODE (FPTN=E_XBIG255,FCG=CP,MID=X,ERR#=E$XBIG255,
       73     5987                        STCLASS=CONSTANT) ;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:3    
       74     6032        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:4    
       75     6033    1   CPX$SETUP: ENTRY (P_PARAM);
       76     6034    1           IF P_PARAM.OUT$->P$S.COUNT > 114
       77     6035    1           THEN
       78     6036    2              DO;
       79     6037    2                 P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.CPOS + 114;
       80     6038    2                 CALL POSTERR (E_XSUTOOLNG);
       81     6039    2              END;
       82     6040    1           RETURN;
       83     6041    1   CPX$SWITCH: ENTRY (P_PARAM);
       84     6042    2           DO CASE (P_PARAM.OUT$->P$B.CODE);
       85     6043    2            CASE (SWLISTOPT);
       86     6044    2              IF P_PARAM.OUT$->P$B.NSUBLKS > 36
       87     6045    2              THEN
       88     6046    3                 DO;
       89     6047    3                    P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.SUBLK$(36)->P$B.CPOS;
       90     6048    3                    CALL POSTERR (E_XTMSWITCHES);
       91     6049    3                 END;
       92     6050    2            CASE (SWDECOPT);
       93     6051    2              CALL CXX$DECBIN (P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.SUBLK$(0)->
       94     6052    2                    P$S.COUNT,VALUE) ALTRET(E_DECBIN);
       95     6053    2              IF VALUE > 35
       96     6054    2              THEN
       97     6055    2                 CALL POSTERR (E_XBDSWITCH);
       98     6056    2            CASE (SWOCTOPT);
       99     6057    2              IF P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.SUBLK$(0)->P$S.COUNT  >
      100     6058    2                    12 THEN
      101     6059    2                 CALL POSTERR (E_XTMSWITCHES);
      102     6060    2           END;
      103     6061    1           RETURN;
      104     6062    1   CPX$STATUS: ENTRY (P_PARAM);
      105     6063    1           RETURN;
      106     6064    1   CPX$BYE: ENTRY (P_PARAM);
      107     6065    1           RETURN;
      108     6066    1   CPX$TABS: ENTRY (P_PARAM);
      109     6067    2           DO CASE (P_PARAM.OUT$ -> P$B.CODE);
      110     6068    2            CASE (TABSSETOPT);
      111     6069    2              CALL CXX$DECBIN (P_PARAM.OUT$ -> P$S.COUNT,VALUE) ALTRET(E_DECBIN);
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:5    
      112     6070    2              IF VALUE > 255
      113     6071    2              THEN
      114     6072    2                 CALL POSTERR (E_XILLTAB);
      115     6073    2            CASE (TABSLISTOPT);
      116     6074    2              IF P_PARAM.OUT$ -> P$B.NSUBLKS > 31
      117     6075    2              THEN
      118     6076    3                 DO;
      119     6077    3                    P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.SUBLK$(31)->P$B.CPOS;
      120     6078    3                    CALL POSTERR (E_XTMTABS);
      121     6079    3                 END;
      122     6080    2           END;
      123     6081    1           RETURN;
      124     6082    1   CPX$TIME: ENTRY (P_PARAM);
      125     6083    1           RETURN;
      126     6084    1   CPX$TITLE: ENTRY (P_PARAM);
      127     6085    1           IF P_PARAM.OUT$->P$S.COUNT > 114
      128     6086    1           THEN
      129     6087    2              DO;
      130     6088    2                 P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.CPOS + 114;
      131     6089    2                 CALL POSTERR (E_XBDTITLE);
      132     6090    2              END;
      133     6091    1           RETURN;
      134     6092    1   E_DECBIN:
      135     6093    1           CALL POSTERR (E_BDCVAL);
      136     6094    1           RETURN;
      137     6095        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:6    
      138     6096    1   POSTERR:   PROC(ERRCODE);
      139     6097    2   DCL ERRCODE BIT(36) ALIGNED;
      140     6098
      141     6099    2              CALL CXP$POSTERR (U$PARAM.ERRBUF$,P_PARAM.OUT$->P$B.CPOS,ERRCODE);
      142     6100    2              RETURN;
      143     6101    2      END POSTERR;
      144     6102    1   END CPX$CONTEXT7;

PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:7    
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPX$CONTEXT7.

   Procedure CPX$CONTEXT7 requires 154 words for executable code.
   Procedure CPX$CONTEXT7 requires 26 words of local(AUTO) storage.

    No errors detected in file CPX$CONTEXT7.:E05TSI    .

PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:8    

 Object Unit name= CPX$CONTEXT7                               File name= CPX$CONTEXT7.:E05TOU
 UTS= JUL 29 '97 12:09:20.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS     11     13  CPX$CONTEXT7
    2   Proc  even  none   154    232  CPX$CONTEXT7
    3  RoData even  none     7      7  CPX$CONTEXT7

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  CPX$CONTEXT7
     2      3                  yes      Std        1  CPX$SETUP
     2     23                  yes      Std        1  CPX$SWITCH
     2    107                  yes      Std        1  CPX$STATUS
     2    112                  yes      Std        1  CPX$BYE
     2    115                  yes      Std        1  CPX$TABS
     2    163                  yes      Std        1  CPX$TIME
     2    166                  yes      Std        1  CPX$TITLE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 CXX$DECBIN
         yes           Std       5 CXP$POSTERR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:10   


        1        1        /*M*    CPX$CONTEXT7    subroutine which checks for context errors for IBEX   */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*    AND,DMC,IPC,IND=3,CTI=6,ECU=3,DCI=3,DTI=3                             */
        8        8        /*P*    NAME: CPX$CONTEXT7
        9        9                PURPOSE: To check for context errors for IBEX                         */
       10       10        /******************************************************************************/
       11       11        CPX$CONTEXT7:
       12       12                PROC (P_PARAM);

     12  2 000000   000000 700200 xent  CPX$CONTEXT7 TSX0  ! X66_AUTO_1
         2 000001   000032 000001                    ZERO    26,1
         2 000002   000005 710000 2                  TRA     s:6034

       13       13        /***** include files *****/
       14       14          %INCLUDE CP_6;
       15       95          %INCLUDE CP_MACROS_C;
       16      847          %INCLUDE CP_SUBS_C;
       17     1764          %INCLUDE CP_PERR_C;
       18     2102          %INCLUDE XU_MACRO_C;
       19     5208          %INCLUDE XU_SUBS_C;
       20     5300        /***** fpts *****/
       21     5301          %PARSE$PARAM (NAME=P_PARAM);
       22     5382          %PARSE$SYM (NAME=P$S,STCLASS=BASED);
       23     5420          %PARSE$OUT (NAME=P$B,STCLASS=BASED);
       24     5465          %U$PARAM (NAME=U$PARAM,STCLASS="BASED(P_PARAM.USER$)");
       25     5481          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
       26     5500        /***** external routines *****/
       27     5501    1   DCL CXP$POSTERR ENTRY(5);
       28     5502    1   DCL CXX$DECBIN ENTRY(2) ALTRET;
       29     5503    1   DCL CPX$OCTBIN ENTRY(2) ALTRET;
       30     5504        /***** declarations *****/
       31     5505    1   DCL PTR$ PTR AUTO;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:11   
       32     5506    1   DCL PTR1$ PTR AUTO;
       33     5507    1   DCL VALUE SBIN WORD AUTO;
       34     5508    1   DCL INDX UBIN WORD AUTO;
       35     5509    1   DCL COUNT SBIN WORD AUTO;
       36     5510        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:12   
       37     5511        /***** error msgs *****/
       38     5512        %VLP_ERRCODE (FPTN=E_BDCVAL,FCG=CP,MID=X,ERR#=E$BDCVAL,STCLASS=CONSTANT);
       39     5557        %VLP_ERRCODE (FPTN=E_BOCVAL,FCG=CP,MID=X,ERR#=E$BOCVAL,STCLASS=CONSTANT);
       40     5602        %VLP_ERRCODE (FPTN=E_XBDSWITCH,FCG=CP,MID=X,ERR#=E$XBDSWITCH,STCLASS=CONSTANT);
       41     5647        /*E*    ERROR: CPX-E$XBDSWITCH-0
       42     5648                MESSAGE: SWITCHES are numbered 0 thru 35
       43     5649        */
       44     5650        %VLP_ERRCODE (FPTN=E_XSUTOOLNG,FCG=CP,MID=X,ERR#=E$XSUTOOLNG,STCLASS=CONSTANT);
       45     5695        /*E*    ERROR: CPX-E$XSUTOOLNG-0
       46     5696                MESSAGE: SETUP text must be 114 chars or less
       47     5697        */
       48     5698        %VLP_ERRCODE (FPTN=E_XBDTITLE,FCG=CP,MID=X,ERR#=E$XBDTITLE,STCLASS=CONSTANT);
       49     5743        /*E*    ERROR: CPX-E$XBDTITLE-0
       50     5744                MESSAGE: TITLE text must be 114 chars or less
       51     5745        */
       52     5746        %VLP_ERRCODE (FPTN=E_XILLTAB,FCG=CP,MID=X,ERR#=E$XILLTAB,STCLASS=CONSTANT);
       53     5791        /*E*    ERROR: CPX-E$XILLTAB-0
       54     5792                MESSAGE: TABS must be 255 or less
       55     5793        */
       56     5794        %VLP_ERRCODE (FPTN=E_XTMTABS,FCG=CP,MID=X,ERR#=E$XTMTABS,STCLASS=CONSTANT);
       57     5839        /*E*    ERROR: CPX-E$XTMTABS-0
       58     5840                MESSAGE: Only 31 tabs allowed.
       59     5841        */
       60     5842        %VLP_ERRCODE (FPTN=E_XTMSWITCHES,FCG=CP,MID=X,ERR#=E$XTMSWITCHES,STCLASS=CONSTANT);
       61     5887        /*E*    ERROR: CPX-E$XTMSWITCHES-0
       62     5888                MESSAGE: Only 36 switches allowed.
       63     5889        */
       64     5890        %VLP_ERRCODE (FPTN=E_XTESINPUTSZ,FCG=CP,MID=X,ERR#=E$XTESINPUTSZ,STCLASS=CONSTANT);
       65     5935        /*E*    ERROR: CPX-E$XTESINPUTSZ-0
       66     5936                MESSAGE: SINPUTSZ must be <= 254.
       67     5937        */
       68     5938        %VLP_ERRCODE (FPTN=E_XILLFCNTBL,FCG=CP,MID=X,ERR#=E$XILLFCNTBL,STCLASS=CONSTANT);
       69     5983        /*E*    ERROR: CPX-E$XILLFCNTBL-0
       70     5984                MESSAGE: FCNTBL text must be 8 chars or less
       71     5985        */
       72     5986        %VLP_ERRCODE (FPTN=E_XBIG255,FCG=CP,MID=X,ERR#=E$XBIG255,
       73     5987                        STCLASS=CONSTANT) ;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:13   
       74     6032        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:14   
       75     6033    1   CPX$SETUP: ENTRY (P_PARAM);

   6033  2 000003   000000 700200 xent  CPX$SETUP    TSX0  ! X66_AUTO_1
         2 000004   000032 000001                    ZERO    26,1

       76     6034    1           IF P_PARAM.OUT$->P$S.COUNT > 114

   6034  2 000005   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000006   000002 471500                    LDP1    2,,PR0
         2 000007   100004 236100                    LDQ     4,,PR1
         2 000010   777000 376003                    ANQ     -512,DU
         2 000011   163000 116003                    CMPQ    58880,DU
         2 000012   000022 602000 2                  TNC     s:6040

       77     6035    1           THEN
       78     6036    2              DO;

       79     6037    2                 P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.CPOS + 114;

   6037  2 000013   100002 235100                    LDA     2,,PR1
         2 000014   000162 035007                    ADLA    114,DL
         2 000015   100002 755100                    STA     2,,PR1

       80     6038    2                 CALL POSTERR (E_XSUTOOLNG);

   6038  2 000016   000000 236000 3                  LDQ     0
         2 000017   200025 756100                    STQ     VALUE+5,,AUTO
         2 000020   000213 701000 2                  TSX1    POSTERR
         2 000021   000000 011000                    NOP     0

       81     6039    2              END;

       82     6040    1           RETURN;

   6040  2 000022   000000 702200 xent               TSX2  ! X66_ARET

       83     6041    1   CPX$SWITCH: ENTRY (P_PARAM);
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:15   

   6041  2 000023   000000 700200 xent  CPX$SWITCH   TSX0  ! X66_AUTO_1
         2 000024   000032 000001                    ZERO    26,1

       84     6042    2           DO CASE (P_PARAM.OUT$->P$B.CODE);

   6042  2 000025   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000026   000002 471500                    LDP1    2,,PR0
         2 000027   100000 720100                    LXL0    0,,PR1
         2 000030   000004 100003                    CMPX0   4,DU
         2 000031   000033 602010 2                  TNC     s:6042+6,X0
         2 000032   000106 710000 2                  TRA     s:6061
         2 000033   000106 710000 2                  TRA     s:6061
         2 000034   000037 710000 2                  TRA     s:6044
         2 000035   000052 710000 2                  TRA     s:6051
         2 000036   000074 710000 2                  TRA     s:6057

       85     6043    2            CASE (SWLISTOPT);

       86     6044    2              IF P_PARAM.OUT$->P$B.NSUBLKS > 36

   6044  2 000037   100001 221100                    LDX1    1,,PR1
         2 000040   000045 101003                    CMPX1   37,DU
         2 000041   000106 602000 2                  TNC     s:6061

       87     6045    2              THEN
       88     6046    3                 DO;

       89     6047    3                    P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.SUBLK$(36)->P$B.CPOS;

   6047  2 000042   100047 473500                    LDP3    39,,PR1
         2 000043   300002 235100                    LDA     2,,PR3
         2 000044   100002 755100                    STA     2,,PR1

       90     6048    3                    CALL POSTERR (E_XTMSWITCHES);

   6048  2 000045   000001 236000 3                  LDQ     1
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:16   
         2 000046   200025 756100                    STQ     VALUE+5,,AUTO
         2 000047   000213 701000 2                  TSX1    POSTERR
         2 000050   000000 011000                    NOP     0

       91     6049    3                 END;

   6049  2 000051   000106 710000 2                  TRA     s:6061

       92     6050    2            CASE (SWDECOPT);

       93     6051    2              CALL CXX$DECBIN (P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.SUBLK$(0)->

   6051  2 000052   100003 473500                    LDP3    3,,PR1
         2 000053   300003 474500                    LDP4    3,,PR3
         2 000054   200020 635500                    EPPR5   VALUE,,AUTO
         2 000055   200027 455500                    STP5    @ERRCODE+2,,AUTO
         2 000056   400004 631500                    EPPR1   4,,PR4
         2 000057   200026 451500                    STP1    @ERRCODE+1,,AUTO
         2 000060   200026 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000061   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000062   000000 701000 xent               TSX1    CXX$DECBIN
         2 000063   000206 702000 2                  TSX2    E_DECBIN

       94     6052    2                    P$S.COUNT,VALUE) ALTRET(E_DECBIN);
       95     6053    2              IF VALUE > 35

   6053  2 000064   200020 235100                    LDA     VALUE,,AUTO
         2 000065   000043 115007                    CMPA    35,DL
         2 000066   000106 604400 2                  TMOZ    s:6061

       96     6054    2              THEN
       97     6055    2                 CALL POSTERR (E_XBDSWITCH);

   6055  2 000067   000002 236000 3                  LDQ     2
         2 000070   200025 756100                    STQ     VALUE+5,,AUTO
         2 000071   000213 701000 2                  TSX1    POSTERR
         2 000072   000000 011000                    NOP     0
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:17   
         2 000073   000106 710000 2                  TRA     s:6061

       98     6056    2            CASE (SWOCTOPT);

       99     6057    2              IF P_PARAM.OUT$->P$B.SUBLK$(0)->P$B.SUBLK$(0)->P$S.COUNT  >

   6057  2 000074   100003 473500                    LDP3    3,,PR1
         2 000075   300003 474500                    LDP4    3,,PR3
         2 000076   400004 236100                    LDQ     4,,PR4
         2 000077   777000 376003                    ANQ     -512,DU
         2 000100   015000 116003                    CMPQ    6656,DU
         2 000101   000106 602000 2                  TNC     s:6061

      100     6058    2                    12 THEN
      101     6059    2                 CALL POSTERR (E_XTMSWITCHES);

   6059  2 000102   000001 236000 3                  LDQ     1
         2 000103   200025 756100                    STQ     VALUE+5,,AUTO
         2 000104   000213 701000 2                  TSX1    POSTERR
         2 000105   000000 011000                    NOP     0

      102     6060    2           END;

      103     6061    1           RETURN;

   6061  2 000106   000000 702200 xent               TSX2  ! X66_ARET

      104     6062    1   CPX$STATUS: ENTRY (P_PARAM);

   6062  2 000107   000000 700200 xent  CPX$STATUS   TSX0  ! X66_AUTO_1
         2 000110   000032 000001                    ZERO    26,1

      105     6063    1           RETURN;

   6063  2 000111   000000 702200 xent               TSX2  ! X66_ARET

      106     6064    1   CPX$BYE: ENTRY (P_PARAM);
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:18   

   6064  2 000112   000000 700200 xent  CPX$BYE      TSX0  ! X66_AUTO_1
         2 000113   000032 000001                    ZERO    26,1

      107     6065    1           RETURN;

   6065  2 000114   000000 702200 xent               TSX2  ! X66_ARET

      108     6066    1   CPX$TABS: ENTRY (P_PARAM);

   6066  2 000115   000000 700200 xent  CPX$TABS     TSX0  ! X66_AUTO_1
         2 000116   000032 000001                    ZERO    26,1

      109     6067    2           DO CASE (P_PARAM.OUT$ -> P$B.CODE);

   6067  2 000117   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000120   000002 471500                    LDP1    2,,PR0
         2 000121   100000 720100                    LXL0    0,,PR1
         2 000122   000003 100003                    CMPX0   3,DU
         2 000123   000125 602010 2                  TNC     s:6067+6,X0
         2 000124   000162 710000 2                  TRA     s:6081
         2 000125   000162 710000 2                  TRA     s:6081
         2 000126   000130 710000 2                  TRA     s:6069
         2 000127   000150 710000 2                  TRA     s:6074

      110     6068    2            CASE (TABSSETOPT);

      111     6069    2              CALL CXX$DECBIN (P_PARAM.OUT$ -> P$S.COUNT,VALUE) ALTRET(E_DECBIN);

   6069  2 000130   200020 633500                    EPPR3   VALUE,,AUTO
         2 000131   200027 453500                    STP3    @ERRCODE+2,,AUTO
         2 000132   100004 634500                    EPPR4   4,,PR1
         2 000133   200026 454500                    STP4    @ERRCODE+1,,AUTO
         2 000134   200026 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000135   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000136   000000 701000 xent               TSX1    CXX$DECBIN
         2 000137   000206 702000 2                  TSX2    E_DECBIN
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:19   

      112     6070    2              IF VALUE > 255

   6070  2 000140   200020 235100                    LDA     VALUE,,AUTO
         2 000141   000377 115007                    CMPA    255,DL
         2 000142   000162 604400 2                  TMOZ    s:6081

      113     6071    2              THEN
      114     6072    2                 CALL POSTERR (E_XILLTAB);

   6072  2 000143   000003 236000 3                  LDQ     3
         2 000144   200025 756100                    STQ     VALUE+5,,AUTO
         2 000145   000213 701000 2                  TSX1    POSTERR
         2 000146   000000 011000                    NOP     0
         2 000147   000162 710000 2                  TRA     s:6081

      115     6073    2            CASE (TABSLISTOPT);

      116     6074    2              IF P_PARAM.OUT$ -> P$B.NSUBLKS > 31

   6074  2 000150   100001 221100                    LDX1    1,,PR1
         2 000151   000040 101003                    CMPX1   32,DU
         2 000152   000162 602000 2                  TNC     s:6081

      117     6075    2              THEN
      118     6076    3                 DO;

      119     6077    3                    P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.SUBLK$(31)->P$B.CPOS;

   6077  2 000153   100042 473500                    LDP3    34,,PR1
         2 000154   300002 235100                    LDA     2,,PR3
         2 000155   100002 755100                    STA     2,,PR1

      120     6078    3                    CALL POSTERR (E_XTMTABS);

   6078  2 000156   000004 236000 3                  LDQ     4
         2 000157   200025 756100                    STQ     VALUE+5,,AUTO
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:20   
         2 000160   000213 701000 2                  TSX1    POSTERR
         2 000161   000000 011000                    NOP     0

      121     6079    3                 END;

      122     6080    2           END;

      123     6081    1           RETURN;

   6081  2 000162   000000 702200 xent               TSX2  ! X66_ARET

      124     6082    1   CPX$TIME: ENTRY (P_PARAM);

   6082  2 000163   000000 700200 xent  CPX$TIME     TSX0  ! X66_AUTO_1
         2 000164   000032 000001                    ZERO    26,1

      125     6083    1           RETURN;

   6083  2 000165   000000 702200 xent               TSX2  ! X66_ARET

      126     6084    1   CPX$TITLE: ENTRY (P_PARAM);

   6084  2 000166   000000 700200 xent  CPX$TITLE    TSX0  ! X66_AUTO_1
         2 000167   000032 000001                    ZERO    26,1

      127     6085    1           IF P_PARAM.OUT$->P$S.COUNT > 114

   6085  2 000170   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000171   000002 471500                    LDP1    2,,PR0
         2 000172   100004 236100                    LDQ     4,,PR1
         2 000173   777000 376003                    ANQ     -512,DU
         2 000174   163000 116003                    CMPQ    58880,DU
         2 000175   000205 602000 2                  TNC     s:6091

      128     6086    1           THEN
      129     6087    2              DO;

PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:21   
      130     6088    2                 P_PARAM.OUT$->P$B.CPOS = P_PARAM.OUT$->P$B.CPOS + 114;

   6088  2 000176   100002 235100                    LDA     2,,PR1
         2 000177   000162 035007                    ADLA    114,DL
         2 000200   100002 755100                    STA     2,,PR1

      131     6089    2                 CALL POSTERR (E_XBDTITLE);

   6089  2 000201   000005 236000 3                  LDQ     5
         2 000202   200025 756100                    STQ     VALUE+5,,AUTO
         2 000203   000213 701000 2                  TSX1    POSTERR
         2 000204   000000 011000                    NOP     0

      132     6090    2              END;

      133     6091    1           RETURN;

   6091  2 000205   000000 702200 xent               TSX2  ! X66_ARET

      134     6092    1   E_DECBIN:
      135     6093    1           CALL POSTERR (E_BDCVAL);

   6093  2 000206   000006 236000 3     E_DECBIN     LDQ     6
         2 000207   200025 756100                    STQ     VALUE+5,,AUTO
         2 000210   000213 701000 2                  TSX1    POSTERR
         2 000211   000000 011000                    NOP     0

      136     6094    1           RETURN;

   6094  2 000212   000000 702200 xent               TSX2  ! X66_ARET

      137     6095        %EJECT;
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:22   
      138     6096    1   POSTERR:   PROC(ERRCODE);

   6096  2 000213   200024 741300       POSTERR      STX1  ! VALUE+4,,AUTO

      139     6097    2   DCL ERRCODE BIT(36) ALIGNED;
      140     6098
      141     6099    2              CALL CXP$POSTERR (U$PARAM.ERRBUF$,P_PARAM.OUT$->P$B.CPOS,ERRCODE);

   6099  2 000214   200003 470500                    LDP0    @P_PARAM,,AUTO
         2 000215   000006 471500                    LDP1    6,,PR0
         2 000216   000002 473500                    LDP3    2,,PR0
         2 000217   200025 236100                    LDQ     @ERRCODE,,AUTO
         2 000220   200030 756100                    STQ     @ERRCODE+3,,AUTO
         2 000221   300002 634500                    EPPR4   2,,PR3
         2 000222   200027 454500                    STP4    @ERRCODE+2,,AUTO
         2 000223   200026 451500                    STP1    @ERRCODE+1,,AUTO
         2 000224   200026 630500                    EPPR0   @ERRCODE+1,,AUTO
         2 000225   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000226   000000 701000 xent               TSX1    CXP$POSTERR
         2 000227   000000 011000                    NOP     0

      142     6100    2              RETURN;

   6100  2 000230   200024 221300                    LDX1  ! VALUE+4,,AUTO
         2 000231   000001 702211                    TSX2  ! 1,X1
      143     6101    2      END POSTERR;
      144     6102    1   END CPX$CONTEXT7;

PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:23   
--  Include file information  --

   XU_SUBS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPX$CONTEXT7.
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:24   

 **** Variables and constants ****

  ****  Section 001 RoData CPX$CONTEXT7

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_BDCVAL                   2-0-0/w STRC        r     1 E_XBDSWITCH
     4-0-0/w STRC        r     1 E_XBDTITLE                 5-0-0/w STRC        r     1 E_XILLTAB
     3-0-0/w STRC        r     1 E_XSUTOOLNG                7-0-0/w STRC        r     1 E_XTMSWITCHES
     6-0-0/w STRC        r     1 E_XTMTABS

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    25-0-0/w PTR         r     1 @ERRCODE                   3-0-0/w PTR         r     1 @P_PARAM
    *0-0-0/w BIT         r     1 ERRCODE                   *0-0-0/w STRC(270)   r     1 P_PARAM
    20-0-0/w SBIN        r     1 VALUE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 P$B                        0-0-0/w ASTR(153)   r     1 P$S
     0-0-0/w STRC(576)   r     1 U$PARAM


   Procedure CPX$CONTEXT7 requires 154 words for executable code.
   Procedure CPX$CONTEXT7 requires 26 words of local(AUTO) storage.

    No errors detected in file CPX$CONTEXT7.:E05TSI    .
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:26   
          MINI XREF LISTING

CXP$POSTERR
      5501**DCL-ENT  6099--CALL
CXX$DECBIN
      5502**DCL-ENT  6051--CALL     6069--CALL
ERRCODE IN PROCEDURE POSTERR
      6097**DCL      6096--PROC     6099<>CALL
E_BDCVAL
      5524**DCL      6093<>CALL
E_DECBIN
      6093**LABEL    6051--CALLALT  6069--CALLALT
E_XBDSWITCH
      5614**DCL      6055<>CALL
E_XBDTITLE
      5710**DCL      6089<>CALL
E_XILLTAB
      5758**DCL      6072<>CALL
E_XSUTOOLNG
      5662**DCL      6038<>CALL
E_XTMSWITCHES
      5854**DCL      6048<>CALL     6059<>CALL
E_XTMTABS
      5806**DCL      6078<>CALL
P$B.CODE
      5434**DCL      6042>>DOCASE   6067>>DOCASE
P$B.CPOS
      5452**DCL      6037<<ASSIGN   6037>>ASSIGN   6047<<ASSIGN   6047>>ASSIGN   6077<<ASSIGN   6077>>ASSIGN
      6088<<ASSIGN   6088>>ASSIGN   6099<>CALL
P$B.NSUBLKS
      5438**DCL      6044>>IF       6074>>IF
P$B.SUBLK$
      5459**DCL      6047>>ASSIGN   6051>>CALL     6051>>CALL     6057>>IF       6057>>IF       6077>>ASSIGN
P$S.COUNT
PL6.E3A0      #001=CPX$CONTEXT7 File=CPX$CONTEXT7.:E05TSI                        TUE 07/29/97 12:09 Page:27   
      5412**DCL      5415--IMP-SIZ  6034>>IF       6051<>CALL     6057>>IF       6069<>CALL     6085>>IF
POSTERR
      6096**PROC     6038--CALL     6048--CALL     6055--CALL     6059--CALL     6072--CALL     6078--CALL
      6089--CALL     6093--CALL
P_PARAM
      5320**DCL        11--PROC     6033--ENTRY    6041--ENTRY    6062--ENTRY    6064--ENTRY    6066--ENTRY
      6082--ENTRY    6084--ENTRY
P_PARAM.OUT$
      5350**DCL      6034>>IF       6037>>ASSIGN   6037>>ASSIGN   6042>>DOCASE   6044>>IF       6047>>ASSIGN
      6047>>ASSIGN   6051>>CALL     6057>>IF       6067>>DOCASE   6069>>CALL     6074>>IF       6077>>ASSIGN
      6077>>ASSIGN   6085>>IF       6088>>ASSIGN   6088>>ASSIGN   6099>>CALL
P_PARAM.USER$
      5368**DCL      5466--IMP-PTR  6099>>CALL
U$PARAM.ERRBUF$
      5467**DCL      6099<>CALL
VALUE
      5507**DCL      6051<>CALL     6053>>IF       6069<>CALL     6070>>IF
