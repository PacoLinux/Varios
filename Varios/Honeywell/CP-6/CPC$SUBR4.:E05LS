VERSION E05

PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:1    
        1        1        /*M* CPC$OPEN_S, CPC$BREAK, CPC$MFID_OPEN, CPC$FID_VLP, CPC$FID_OPEN */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /***************************************************************************/
        9        9        /*F*    NAME:    CPC$OPEN_S
       10       10                PURPOSE:  To open the *S file for the various IBEX functions
       11       11        */
       12       12        CPC$OPEN_S: PROC(DCB#)  ALTRET;
       13       13                %INCLUDE B$JIT;
       14      303                %INCLUDE B_MACROS_C;
       15      414                %INCLUDE CP_6;
       16      495                %INCLUDE XU_MACRO_C;
       17     3601                %INCLUDE CP_6_SUBS;
       18     4141                %INCLUDE CP_DATA_R;
       19     6704                %INCLUDE CX_MACROS_M;
       20     6755        /***** parameters *****/
       21     6756    1   DCL DCB# UBIN WORD;
       22     6757        /***** fpts *****/
       23     6758        %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
       24     6867    1   DCL ACTIVE_PRIVS BIT(36) ;
       25     6868        /***** Based structures *****/
       26     6869        %B$TCB (STCLASS="BASED(B$TCB$)");
       27     6872        %B$ALT;
       28     6880        %EJECT;
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:2    
       29     6881          %SAVE_ACTIVE_PRIVS;
       30     6885    1     FPT_OPEN = CFPT_OPEN;
       31     6886    1     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);
       32     6887    1     FPT_OPEN.V.DCB# = DCB#;
       33     6888    1     FPT_OPEN.NAME_ = VECTOR(STARS);
       34     6889    1     FPT_OPEN.V.ASN# = %FILE#;
       35     6890    1     FPT_OPEN.V.ACS# = %DIRECT#;
       36     6891    1     FPT_OPEN.V.ORG# = %KEYED#;
       37     6892    1     FPT_OPEN.V.FUN# = %UPDATE#;
       38     6893    1     FPT_OPEN.V.SHARE# = %ALL#;
       39     6894    1     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);
       40     6895          %RESTORE_ACTIVE_PRIVS;
       41     6898    1     RETURN;
       42     6899    1   E_OPEN:
       43     6900          %RESTORE_ACTIVE_PRIVS;
       44     6903    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;
       45     6904    1     ALTRETURN;
       46     6905    1   END CPC$OPEN_S;
       47     6906                   %EOD;

PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:3    
--  Include file information  --

   CX_MACROS_M.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$OPEN_S.

   Procedure CPC$OPEN_S requires 47 words for executable code.
   Procedure CPC$OPEN_S requires 66 words of local(AUTO) storage.

PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:4    

 Object Unit name= CPC$OPEN_S                                 File name= CPC$SUBR4.:E05TOU
 UTS= JUL 29 '97 11:32:15.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    47     57  CPC$OPEN_S
    2  RoData even  none     4      4  CPC$OPEN_S

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  CPC$OPEN_S

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_OPEN                        r    B$JIT$
r    B$TCB$                                STARS
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:5    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:6    


        1        1        /*M* CPC$OPEN_S, CPC$BREAK, CPC$MFID_OPEN, CPC$FID_VLP, CPC$FID_OPEN */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DFC   */
        8        8        /***************************************************************************/
        9        9        /*F*    NAME:    CPC$OPEN_S
       10       10                PURPOSE:  To open the *S file for the various IBEX functions
       11       11        */
       12       12        CPC$OPEN_S: PROC(DCB#)  ALTRET;

     12  1 000000   000000 700200 xent  CPC$OPEN_S   TSX0  ! X66_AUTO_1
         1 000001   000102 000001                    ZERO    66,1

       13       13                %INCLUDE B$JIT;
       14      303                %INCLUDE B_MACROS_C;
       15      414                %INCLUDE CP_6;
       16      495                %INCLUDE XU_MACRO_C;
       17     3601                %INCLUDE CP_6_SUBS;
       18     4141                %INCLUDE CP_DATA_R;
       19     6704                %INCLUDE CX_MACROS_M;
       20     6755        /***** parameters *****/
       21     6756    1   DCL DCB# UBIN WORD;
       22     6757        /***** fpts *****/
       23     6758        %FPT_OPEN (FPTN=FPT_OPEN,STCLASS=AUTO);
       24     6867    1   DCL ACTIVE_PRIVS BIT(36) ;
       25     6868        /***** Based structures *****/
       26     6869        %B$TCB (STCLASS="BASED(B$TCB$)");
       27     6872        %B$ALT;
       28     6880        %EJECT;
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:7    
       29     6881          %SAVE_ACTIVE_PRIVS;

   6882  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000013 236100                    LDQ     11,,PR0
         1 000004   200076 756100                    STQ     ACTIVE_PRIVS,,AUTO

   6883  1 000005   000013 450100                    STZ     11,,PR0

       30     6885    1     FPT_OPEN = CFPT_OPEN;

   6885  1 000006   000100 100400                    MLR     fill='000'O
         1 000007   000000 000350 xsym               ADSC9   CFPT_OPEN                cn=0,n=232
         1 000010   200004 000350                    ADSC9   FPT_OPEN,,AUTO           cn=0,n=232

       31     6886    1     FPT_OPEN.V_ = VECTOR(FPT_OPEN.V);

   6886  1 000011   000000 235000 2                  LDA     0
         1 000012   200100 452500                    STP2    ACTIVE_PRIVS+2,,AUTO
         1 000013   200100 236100                    LDQ     ACTIVE_PRIVS+2,,AUTO
         1 000014   000050 036003                    ADLQ    40,DU
         1 000015   200004 757100                    STAQ    FPT_OPEN,,AUTO

       32     6887    1     FPT_OPEN.V.DCB# = DCB#;

   6887  1 000016   200003 471500                    LDP1    @DCB#,,AUTO
         1 000017   100000 720100                    LXL0    0,,PR1
         1 000020   200050 740100                    STX0    FPT_OPEN+36,,AUTO

       33     6888    1     FPT_OPEN.NAME_ = VECTOR(STARS);

   6888  1 000021   000002 237000 2                  LDAQ    2
         1 000022   200012 757100                    STAQ    FPT_OPEN+6,,AUTO

       34     6889    1     FPT_OPEN.V.ASN# = %FILE#;

   6889  1 000023   000001 236007                    LDQ     1,DL
         1 000024   200051 552104                    STBQ    FPT_OPEN+37,'04'O,AUTO
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:8    

       35     6890    1     FPT_OPEN.V.ACS# = %DIRECT#;

   6890  1 000025   000002 236007                    LDQ     2,DL
         1 000026   200052 552104                    STBQ    FPT_OPEN+38,'04'O,AUTO

       36     6891    1     FPT_OPEN.V.ORG# = %KEYED#;

   6891  1 000027   002000 236007                    LDQ     1024,DL
         1 000030   200052 552110                    STBQ    FPT_OPEN+38,'10'O,AUTO

       37     6892    1     FPT_OPEN.V.FUN# = %UPDATE#;

   6892  1 000031   001000 236007                    LDQ     512,DL
         1 000032   200051 552110                    STBQ    FPT_OPEN+37,'10'O,AUTO

       38     6893    1     FPT_OPEN.V.SHARE# = %ALL#;

   6893  1 000033   200050 236100                    LDQ     FPT_OPEN+36,,AUTO
         1 000034   000001 376000 2                  ANQ     1
         1 000035   000010 276007                    ORQ     8,DL
         1 000036   200050 756100                    STQ     FPT_OPEN+36,,AUTO

       39     6894    1     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);

   6894  1 000037   200004 630500                    EPPR0   FPT_OPEN,,AUTO
         1 000040   450000 713400                    CLIMB   alt,open
         1 000041   410400 401760                    pmme    nvectors=18
         1 000042   000047 702000 1                  TSX2    E_OPEN

       40     6895          %RESTORE_ACTIVE_PRIVS;

   6896  1 000043   200076 236100                    LDQ     ACTIVE_PRIVS,,AUTO
         1 000044   000000 470400 xsym               LDP0    B$JIT$
         1 000045   000013 756100                    STQ     11,,PR0

       41     6898    1     RETURN;
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:9    

   6898  1 000046   000000 702200 xent               TSX2  ! X66_ARET

       42     6899    1   E_OPEN:
       43     6900          %RESTORE_ACTIVE_PRIVS;

   6901  1 000047   200076 236100       E_OPEN       LDQ     ACTIVE_PRIVS,,AUTO
         1 000050   000000 470400 xsym               LDP0    B$JIT$
         1 000051   000013 756100                    STQ     11,,PR0

       44     6903    1     B$JIT.USRERR = B$TCB.ALT$ -> B$ALT.ERR;

   6903  1 000052   000000 471400 xsym               LDP1    B$TCB$
         1 000053   100000 473500                    LDP3    0,,PR1
         1 000054   300102 236100                    LDQ     66,,PR3
         1 000055   000144 756100                    STQ     100,,PR0

       45     6904    1     ALTRETURN;

   6904  1 000056   000000 702200 xent               TSX2  ! X66_AALT
       46     6905    1   END CPC$OPEN_S;
       47     6906                   %EOD;

PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:10   
--  Include file information  --

   CX_MACROS_M.:E05TOU  is referenced.
   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_MACROS_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$OPEN_S.
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:11   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB#                     76-0-0/b BIT         r     1 ACTIVE_PRIVS
    *0-0-0/w UBIN        r     1 DCB#                       4-0-0/d STRC(2088)  r     1 FPT_OPEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(2088)  r     1 CFPT_OPEN                  0-0-0/c STRC(27)    r     1 STARS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB


   Procedure CPC$OPEN_S requires 47 words for executable code.
   Procedure CPC$OPEN_S requires 66 words of local(AUTO) storage.
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:13   
          MINI XREF LISTING

ACTIVE_PRIVS
      6867**DCL      6882<<ASSIGN   6896>>ASSIGN   6901>>ASSIGN
B$ALT.CODE
      6874**DCL      6874--REDEF    6875--REDEF    6875--REDEF
B$ALT.ERR
      6875**DCL      6903>>ASSIGN
B$ALT.ERR.ERR#
      6876**DCL      6876--REDEF
B$ALT.EVID
      6875**DCL      6875--REDEF    6875--REDEF
B$JIT.CPFLAGS1.SLEAZE
       121**DCL       121--REDEF
B$JIT.ERR.MID
        28**DCL        28--REDEF
B$JIT.JRESPEAK
       189**DCL       190--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       298**DCL       298--REDEF     299--REDEF
B$JIT.PNR
       202**DCL       202--REDEF
B$JIT.PRIV.ACTIVE
        28**DCL      6882>>ASSIGN   6883<<ASSIGN   6896<<ASSIGN   6901<<ASSIGN
B$JIT.TSLINE
       296**DCL       297--REDEF
B$JIT.USRERR
       163**DCL      6903<<ASSIGN
B$JIT$
      6637**DCL        22--IMP-PTR  6882>>ASSIGN   6883>>ASSIGN   6896>>ASSIGN   6901>>ASSIGN   6903>>ASSIGN
B$TCB.ALT$
      6870**DCL      6903>>ASSIGN
B$TCB$
      6639**DCL      6870--IMP-PTR  6903>>ASSIGN
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:14   
CAMR_REC.ACSVEH_
      5676**DCL      5677--REDEF
CAMR_REC.ALTKEYS_
      5682**DCL      5683--REDEF    5683--REDEF
CAMR_REC.HDR_
      5681**DCL      5682--REDEF
CAMR_REC.TAB_
      5680**DCL      5681--REDEF
CAMR_REC.UHL_
      5674**DCL      5675--REDEF    5675--REDEF
CAMR_REC.V.FSN#
      5714**DCL      5714--REDEF    5714--REDEF
CAMR_REC.WSN_
      5680**DCL      5680--REDEF
CFPT_CLOSE.SN_
      4518**DCL      4518--REDEF
CFPT_CLOSE.UTL_
      4519**DCL      4519--REDEF
CFPT_CLOSE.V.EXPIRE#
      4533**DCL      4533--REDEF
CFPT_CLOSE.V.TYPE#
      4531**DCL      4531--REDEF
CFPT_CLOSE.V.XTNSIZE#
      4528**DCL      4528--REDEF    4530--REDEF
CFPT_OPEN
      4451**DCL      6885>>ASSIGN
CFPT_OPEN.ACSVEH_
      4453**DCL      4454--REDEF
CFPT_OPEN.ALTKEYS_
      4459**DCL      4460--REDEF    4460--REDEF
CFPT_OPEN.HDR_
      4458**DCL      4459--REDEF
CFPT_OPEN.TAB_
      4457**DCL      4458--REDEF
CFPT_OPEN.UHL_
      4451**DCL      4452--REDEF    4452--REDEF
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:15   
CFPT_OPEN.V.FSN#
      4491**DCL      4491--REDEF    4491--REDEF
CFPT_OPEN.WSN_
      4457**DCL      4457--REDEF
CFPT_READ.STATION_
      4557**DCL      4558--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      4569**DCL      4569--REDEF
CFPT_READ.V.INDX#
      4567**DCL      4567--REDEF
CFPT_READUC.STATION_
      4927**DCL      4928--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      4939**DCL      4939--REDEF
CFPT_READUC.V.INDX#
      4937**DCL      4937--REDEF
CFPT_TRTN.V.IR#
      5163**DCL      5164--REDEF
CFPT_WRITE.STATION_
      4595**DCL      4595--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      4602**DCL      4602--REDEF
CFPT_WRITEUC.STATION_
      4895**DCL      4895--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      4902**DCL      4902--REDEF
CFPT_XXX.V.STEPCC#
      5875**DCL      5875--REDEF
CGETCMD.OUT$
      5896**DCL      5902--REDEF
CVLP_TRMCTL.BREAKCOUNT
      5487**DCL      5488--REDEF
CVLP_WINDOW.FWINDOW#
      5583**DCL      5583--REDEF    5584--REDEF
DCB#
      6756**DCL        12--PROC     6887>>ASSIGN
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:16   
E_OPEN
      6901**LABEL    6894--CALLALT
FPT_OPEN
      6823**DCL      6885<<ASSIGN   6894<>CALL
FPT_OPEN.ACSVEH_
      6825**DCL      6826--REDEF
FPT_OPEN.ALTKEYS_
      6831**DCL      6832--REDEF    6832--REDEF
FPT_OPEN.HDR_
      6830**DCL      6831--REDEF
FPT_OPEN.NAME_
      6824**DCL      6888<<ASSIGN
FPT_OPEN.TAB_
      6829**DCL      6830--REDEF
FPT_OPEN.UHL_
      6823**DCL      6824--REDEF    6824--REDEF
FPT_OPEN.V
      6832**DCL      6886--ASSIGN
FPT_OPEN.V.ACS#
      6843**DCL      6890<<ASSIGN
FPT_OPEN.V.ASN#
      6842**DCL      6889<<ASSIGN
FPT_OPEN.V.DCB#
      6832**DCL      6887<<ASSIGN
FPT_OPEN.V.FSN#
      6863**DCL      6863--REDEF    6863--REDEF
FPT_OPEN.V.FUN#
      6842**DCL      6892<<ASSIGN
FPT_OPEN.V.ORG#
      6843**DCL      6891<<ASSIGN
FPT_OPEN.V.SHARE#
      6837**DCL      6893<<ASSIGN
FPT_OPEN.V_
      6823**DCL      6886<<ASSIGN
FPT_OPEN.WSN_
      6829**DCL      6829--REDEF
PL6.E3A0      #001=CPC$OPEN_S File=CPC$SUBR4.:E05TSI                             TUE 07/29/97 11:32 Page:17   
M$OPEN
       423**DCL-ENT  6894--CALL
STARS
      6662**DCL      6888--ASSIGN

PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:18   
       48        1        /*T***********************************************************/
       49        2        /*T*                                                         */
       50        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       51        4        /*T*                                                         */
       52        5        /*T***********************************************************/
       53        6        /**********************************************************************/
       54        7        /*F*   NAME:   CPC$BREAK
       55        8               PURPOSE: Handles interrupt when break is depressed.
       56        9               DESCRIPTION: A flag is set in the JIT indicating a break was
       57       10                       received.  SEG$2.FLAGS.USE_REMEM indicates whether to
       58       11                       to RETURN to the interrupted routine or UNWIND to the
       59       12                       REMEMBERed location.  If SEG$2.FLAGS.USE_REMEM is set,
       60       13                       then UNWIND.
       61       14        */
       62       15        /*D*   NAME:   CPC$BREAK
       63       16               CALL:   ENTADDR ON M$INT PMME
       64       17               INPUT:  SEG$2.FLAGS.USE_REMEM - flag to indicate whether to
       65       18                          UNWIND or RETURN.
       66       19                       SEG$2.REMEM$ - pointer to location that hold REMEMBERed
       67       20                          location.
       68       21               OUTPUT: B$JIT.CPFLAGS1 - CP_BRK# set
       69       22               DESCRIPTION: The CP_BRK# flag is set except when an
       70       23                       interrupt is received for a batch user(operator interrupt).
       71       24                       If SEG$2.FLAGS.USE_REMEM is set then UNWIND to the location
       72       25                       pointed to by SEG$2.REMEM$.  Otherwise, RETURN to the
       73       26                       interrupted routine.
       74       27        */
       75       28        /**********************************************************************/
       76       29        CPC$BREAK: PROC ASYNC;
       77       30                   %INCLUDE B$JIT;
       78      320                   %INCLUDE CP_6 ;
       79      401                   %INCLUDE CP_MACROS_C ;
       80     1153        /***** External pointers *****/
       81     1154    1     DCL B$JIT$ PTR SYMREF READONLY;
       82     1155    1     DCL SEG2$ PTR SYMREF ;
       83     1156          %SEG$2 ;
       84     1216    1     DCL REMEM$VAR REMEMBER BASED ;
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:19   
       85     1217        %EJECT;
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:20   
       86     1218    1     IF B$JIT.MODE~=%M_BATCH#
       87     1219
       88     1220    1        THEN
       89     1221    1           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_BRK#;
       90     1222    1     IF SEG$2.FLAGS.USE_REMEM
       91     1223    1         THEN
       92     1224    2             DO ;
       93     1225    2               CALL M$CLRSTK ;
       94     1226    2               UNWIND TO SEG$2.REMEM$->REMEM$VAR ;
       95     1227    2             END ; /* Then Do */
       96     1228    1     RETURN;
       97     1229    1   END CPC$BREAK;
       98     1230                   %EOD;

PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:21   
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$BREAK.

   Procedure CPC$BREAK requires 22 words for executable code.
   Procedure CPC$BREAK requires 4 words of local(AUTO) storage.

PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:22   

 Object Unit name= CPC$BREAK                                  File name= CPC$SUBR4.:E05TOU
 UTS= JUL 29 '97 11:32:41.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Proc  even  none    22     26  CPC$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes     Async       0  CPC$BREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AAUTO
                       nStd      0 X66_AAUNWIND
                       nStd      0 X66_AARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    B$JIT$                                SEG2$
     B_VECTNIL
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:23   


       48        1        /*T***********************************************************/
       49        2        /*T*                                                         */
       50        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       51        4        /*T*                                                         */
       52        5        /*T***********************************************************/
       53        6        /**********************************************************************/
       54        7        /*F*   NAME:   CPC$BREAK
       55        8               PURPOSE: Handles interrupt when break is depressed.
       56        9               DESCRIPTION: A flag is set in the JIT indicating a break was
       57       10                       received.  SEG$2.FLAGS.USE_REMEM indicates whether to
       58       11                       to RETURN to the interrupted routine or UNWIND to the
       59       12                       REMEMBERed location.  If SEG$2.FLAGS.USE_REMEM is set,
       60       13                       then UNWIND.
       61       14        */
       62       15        /*D*   NAME:   CPC$BREAK
       63       16               CALL:   ENTADDR ON M$INT PMME
       64       17               INPUT:  SEG$2.FLAGS.USE_REMEM - flag to indicate whether to
       65       18                          UNWIND or RETURN.
       66       19                       SEG$2.REMEM$ - pointer to location that hold REMEMBERed
       67       20                          location.
       68       21               OUTPUT: B$JIT.CPFLAGS1 - CP_BRK# set
       69       22               DESCRIPTION: The CP_BRK# flag is set except when an
       70       23                       interrupt is received for a batch user(operator interrupt).
       71       24                       If SEG$2.FLAGS.USE_REMEM is set then UNWIND to the location
       72       25                       pointed to by SEG$2.REMEM$.  Otherwise, RETURN to the
       73       26                       interrupted routine.
       74       27        */
       75       28        /**********************************************************************/
       76       29        CPC$BREAK: PROC ASYNC;

     29  1 000000   000000 700200 xent  CPC$BREAK    TSX0  ! X66_AAUTO
         1 000001   000004 000000                    ZERO    4,0

       77       30                   %INCLUDE B$JIT;
       78      320                   %INCLUDE CP_6 ;
       79      401                   %INCLUDE CP_MACROS_C ;
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:24   
       80     1153        /***** External pointers *****/
       81     1154    1     DCL B$JIT$ PTR SYMREF READONLY;
       82     1155    1     DCL SEG2$ PTR SYMREF ;
       83     1156          %SEG$2 ;
       84     1216    1     DCL REMEM$VAR REMEMBER BASED ;
       85     1217        %EJECT;
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:25   
       86     1218    1     IF B$JIT.MODE~=%M_BATCH#

   1218  1 000002   000000 470400 xsym               LDP0    B$JIT$
         1 000003   000000 236100                    LDQ     0,,PR0
         1 000004   740000 376003                    ANQ     -16384,DU
         1 000005   040000 116003                    CMPQ    16384,DU
         1 000006   000012 600000 1                  TZE     s:1222

       87     1219
       88     1220    1        THEN
       89     1221    1           B$JIT.CPFLAGS1 = B$JIT.CPFLAGS1 | %CP_BRK#;

   1221  1 000007   000143 236100                    LDQ     99,,PR0
         1 000010   000006 276000 xsym               ORQ     B_VECTNIL+6
         1 000011   000143 756100                    STQ     99,,PR0

       90     1222    1     IF SEG$2.FLAGS.USE_REMEM

   1222  1 000012   000000 471400 xsym               LDP1    SEG2$
         1 000013   100000 236100                    LDQ     0,,PR1
         1 000014   000020 316003                    CANQ    16,DU
         1 000015   000025 600000 1                  TZE     s:1228

       91     1223    1         THEN
       92     1224    2             DO ;

       93     1225    2               CALL M$CLRSTK ;

   1225  1 000016   010013 713400                    CLIMB   4107
         1 000017   000000 401760                    pmme    nvectors=0

       94     1226    2               UNWIND TO SEG$2.REMEM$->REMEM$VAR ;

   1226  1 000020   000000 470400 xsym               LDP0    SEG2$
         1 000021   000174 471500                    LDP1    124,,PR0
         1 000022   100000 237300                    LDAQ  ! 0,,PR1
         1 000023   000000 700200 xent               TSX0  ! X66_AAUNWIND
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:26   
         1 000024   000000 000200                    ZERO    0,128

       95     1227    2             END ; /* Then Do */
       96     1228    1     RETURN;

   1228  1 000025   000000 702200 xent               TSX2  ! X66_AARET
       97     1229    1   END CPC$BREAK;
       98     1230                   %EOD;

PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:27   
--  Include file information  --

   CP_MACROS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$BREAK.
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:28   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d REMB        r     1 REMEM$VAR
     0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPC$BREAK requires 22 words for executable code.
   Procedure CPC$BREAK requires 4 words of local(AUTO) storage.
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:29   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=CPC$BREAK File=CPC$SUBR4.:E05TSI                              TUE 07/29/97 11:32 Page:30   
          MINI XREF LISTING

B$JIT.CPFLAGS1
       133**DCL      1221<<ASSIGN   1221>>ASSIGN
B$JIT.CPFLAGS1.SLEAZE
       138**DCL       138--REDEF
B$JIT.ERR.MID
        45**DCL        45--REDEF
B$JIT.JRESPEAK
       206**DCL       207--REDEF
B$JIT.MODE
        39**DCL      1218>>IF
B$JIT.ORIGINATOR_PORT.FROM_CR
       315**DCL       315--REDEF     316--REDEF
B$JIT.PNR
       219**DCL       219--REDEF
B$JIT.TSLINE
       313**DCL       314--REDEF
B$JIT$
      1154**DCL        39--IMP-PTR  1218>>IF       1221>>ASSIGN   1221>>ASSIGN
M$CLRSTK
       387**DCL-ENT  1225--CALL
REMEM$VAR
      1216**DCL      1226>>UNWIND
SEG$2.FLAGS.USE_REMEM
      1172**DCL      1222>>IF
SEG$2.REMEM$
      1204**DCL      1226>>UNWIND
SEG2$
      1155**DCL      1157--IMP-PTR  1222>>IF       1226>>UNWIND

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:31   
       99        1        /*T***********************************************************/
      100        2        /*T*                                                         */
      101        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      102        4        /*T*                                                         */
      103        5        /*T***********************************************************/
      104        6        /*F*    NAME:        CPC$MFID_OPEN
      105        7                PURPOSE:     To take a text string, pass it thru M$FID and
      106        8                             then open the specified file.
      107        9                DESCRIPTION: There are three parameters to this routine.
      108       10                              The first is required, while the second and
      109       11                              third are optional. The first is FPT_OPEN.
      110       12                              It is assumed that this fpt has at least a
      111       13                              dcb number stuffed in it. Other items may
      112       14                              also be present (i.e. DISP, EXIST, FUN, RES, etc).
      113       15                              The second parameter points to a TEXTC FID
      114       16                              which is passed thru M$FID. The information
      115       17                              from M$FID is stuffed into FPT_OPEN and then
      116       18                              an M$OPEN is attempted. The third parameter
      117       19                              is an array of vectors which frame VLPs for
      118       20                              M$FID and M$OPEN. If specified then these
      119       21                              VLPs will be used and the user will have
      120       22                              easy access to the returned information. This
      121       23                              array of vectors is generated by the macro
      122       24                              CP_FIDVLPS in CP_MACROS_C.
      123       25        */
      124       26        CPC$MFID_OPEN: PROC (FPT_OPEN,STR$,CP_FIDVLPS) ALTRET;
      125       27        /***** Include files *****/
      126       28          %INCLUDE CP_6;
      127      109          %INCLUDE CP_6_SUBS;
      128      649          %INCLUDE CP_MACROS_C;
      129     1401          %INCLUDE CP_PERR_C;
      130     1739          %INCLUDE CP_SUBS_C;
      131     2656          %INCLUDE B$JIT ;
      132     2946          %INCLUDE XU_MACRO_C;
      133     6052          %INCLUDE CP_DATA_R;
      134     8615        /***** Parameters *****/
      135     8616          %FPT_OPEN (STCLASS=" ");
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:32   
      136     8725    1     DCL STR$ PTR;
      137     8726          %CP_FIDVLPS (STCLASS=" ");
      138     8737        /***** Fpts/Vlps *****/
      139     8738          %FPT_FID (STCLASS=AUTO);
      140     8761          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      141     8780    1     DCL FID_ASN UBIN(9) AUTO;
      142     8781    1     DCL FID_RES CHAR(6) AUTO;
      143     8782          %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
      144     8809          %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      145     8822          %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      146     8835          %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      147     8848          %VLP_SN (FPTN=FID_SN,N=3,STCLASS=AUTO);
      148     8861        /***** Local variables *****/
      149     8862
      150     8863    1     DCL CPOS UBIN WORD ;
      151     8864    1     DCL OPEN_FILE# BIT(1) ;
      152     8865
      153     8866        /***** Based structures *****/
      154     8867
      155     8868          %F$DCB;
      156     8925          %SEG$2 ;
      157     8985          %B$TCB (STCLASS="BASED(B$TCB$)") ;
      158     8988          %B$ALT ;
      159     8996          %PARSE$SYM(NAME=P$S,STCLASS=BASED) ;
      160     9034
      161     9035        /***** External procedure entry declarations *****/
      162     9036
      163     9037    1     DCL CXP$POSTERR ENTRY(5) ;
      164     9038
      165     9039        /***** Error codes *****/
      166     9040        %ERR_CODE (NAME=E_ILLXDEST,MID#=CPC$SUBRMID,CODE#=E$ILLXDEST,STCLASS=CONSTANT);
      167     9060        /*E*    ERROR: CPC-E$ILLXDEST-0
      168     9061                MESSAGE: Illegal destination fid.
      169     9062                MESSAGE1: You do not have permission to write into that file.
      170     9063        */
      171     9064        %EJECT;
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:33   
      172     9065    1     OPEN_FILE# = %YES# ;
      173     9066    1     GOTO PAST_FID_VLP_ENTRY ;
      174     9067
      175     9068    1   CPC$FID_VLP:  ENTRY (FPT_OPEN,STR$,CP_FIDVLPS) ALTRET;
      176     9069    1     OPEN_FILE# = %NO# ;
      177     9070
      178     9071    1   PAST_FID_VLP_ENTRY:
      179     9072        /**/
      180     9073        /*
      181     9074           *****   Break up the FID...
      182     9075        */
      183     9076    1     FID_ASN = %FILE#;   /* Default value */
      184     9077    1     FID_RES = ' ';   /* Default value */
      185     9078    1     FPT_FID = CFPT_FID;
      186     9079    1     FPT_FID.TEXTFID_ = VECTOR(STR$ -> P$S.TEXT);
      187     9080    1     IF (ADDR(CP_FIDVLPS) = ADDR(NIL))
      188     9081    1         THEN
      189     9082    2           DO ;                                    /* No vectors passed. */
      190     9083    2             FPT_FID.NAME_ = VECTOR(FID_NAME);
      191     9084    2             FPT_FID.ACCT_ = VECTOR(FID_ACCT);
      192     9085    2             FPT_FID.PASS_ = VECTOR(FID_PASS);
      193     9086    2             FPT_FID.SN_ = VECTOR(FID_SN);
      194     9087    2             FPT_FID.WSN_ = VECTOR(FID_WSN);
      195     9088    2             FPT_FID.ASN_ = VECTOR(FID_ASN);
      196     9089    2             FPT_FID.RES_ = VECTOR(FID_RES);
      197     9090    2             FPT_FID.RESULTS_ = VECTOR(FID_RESULTS) ;
      198     9091    2           END ; /* THEN DO */
      199     9092    1         ELSE
      200     9093    2           DO ;                                    /* Vectors passed. */
      201     9094    2             FPT_FID.NAME_ = CP_FIDVLPS.FID_NAME_ ;
      202     9095    2             FPT_FID.ACCT_ = CP_FIDVLPS.FID_ACCT_ ;
      203     9096    2             FPT_FID.PASS_ = CP_FIDVLPS.FID_PASS_ ;
      204     9097    2             FPT_FID.SN_ = CP_FIDVLPS.FID_SN_ ;
      205     9098    2             FPT_FID.WSN_ = CP_FIDVLPS.FID_WSN_ ;
      206     9099    2             FID_ASN = CP_FIDVLPS.FID_ASN ;
      207     9100    2             FPT_FID.ASN_ = VECTOR(CP_FIDVLPS.FID_ASN);
      208     9101    2             FPT_FID.RES_ = VECTOR(CP_FIDVLPS.FID_RES);
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:34   
      209     9102    2             FPT_FID.RESULTS_ = VECTOR(CP_FIDVLPS.FID_RESULTS) ;
      210     9103    2           END ; /* ELSE DO */
      211     9104
      212     9105    1      CALL M$FID(FPT_FID) ALTRET(E_OPEN) ;
      213     9106    1      IF (OPEN_FILE# = %NO#) THEN GOTO RETURN_TO_SENDER ;
      214     9107
      215     9108    1   CPC$FID_OPEN: ENTRY (FPT_OPEN,STR$,CP_FIDVLPS) ALTRET;
      216     9109        /*
      217     9110             ***** Open the file...
      218     9111        */
      219     9112    1     IF (ADDR(CP_FIDVLPS) ~= ADDR(NIL))
      220     9113    1       THEN FID_RESULTS = CP_FIDVLPS.FID_RESULTS ;
      221     9114    1     IF FID_RESULTS.ACCT = %NO#
      222     9115    1        THEN   /* Default to current account */
      223     9116    1           FID_ACCT.ACCT# = B$JIT.FACCN;
      224     9117    1     FPT_OPEN.NAME_ = CP_FIDVLPS.FID_NAME_ ;
      225     9118    1     IF FID_RESULTS.ACCT
      226     9119    1        THEN
      227     9120    1           FPT_OPEN.ACCT_= CP_FIDVLPS.FID_ACCT_ ;
      228     9121    1     IF FID_RESULTS.PASS
      229     9122    1        THEN
      230     9123    1           FPT_OPEN.PASS_= CP_FIDVLPS.FID_PASS_ ;
      231     9124    1     IF FID_RESULTS.SN
      232     9125    1        THEN
      233     9126    1           FPT_OPEN.SN_= CP_FIDVLPS.FID_SN_ ;
      234     9127    1     IF FID_RESULTS.WSN
      235     9128    1        THEN
      236     9129    1           FPT_OPEN.WSN_= CP_FIDVLPS.FID_WSN_ ;
      237     9130    1     IF FID_RESULTS.RES
      238     9131    1        THEN
      239     9132    1           FPT_OPEN.V.RES# = CP_FIDVLPS.FID_RES ;
      240     9133    1     IF FID_RESULTS.ASN
      241     9134    1        THEN
      242     9135    1           FPT_OPEN.V.ASN# = CP_FIDVLPS.FID_ASN ;
      243     9136    1     FPT_OPEN.V.INITZ.SCRUB# = %YES#;
      244     9137    1     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);
      245     9138
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:35   
      246     9139    1     IF DCBADDR(FPT_OPEN.V.DCB#) -> F$DCB.FFLG.EXEC#
      247     9140    1        THEN
      248     9141    2           DO;
      249     9142    2              IF ADDR(STR$) ~= ADDR(NIL)
      250     9143    2                 THEN   /* Parse string passed */
      251     9144    2                    CPOS = STR$ -> P$S.CPOS;
      252     9145    2                 ELSE   /* No CPOS avail */
      253     9146    2                    CPOS = 511;
      254     9147    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,E_ILLXDEST);
      255     9148    2              ALTRETURN;
      256     9149    2           END;
      257     9150    1   RETURN_TO_SENDER:
      258     9151
      259     9152    1     RETURN;
      260     9153        /**/
      261     9154    1   E_OPEN:
      262     9155    1      CPOS = 0 ;
      263     9156    1      IF (ADDR(STR$) ~= ADDR(NIL))
      264     9157    1         THEN CPOS = STR$ -> P$S.CPOS;
      265     9158    1     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$ -> B$ALT.ERR,,
      266     9159    1           B$TCB.ALT$ -> B$ALT.DCB#);
      267     9160    1     ALTRETURN;
      268     9161    1   END CPC$MFID_OPEN;

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:36   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$MFID_OPEN.

   Procedure CPC$MFID_OPEN requires 222 words for executable code.
   Procedure CPC$MFID_OPEN requires 72 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR4.:E05TSI    .

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:37   

 Object Unit name= CPC$MFID_OPEN                              File name= CPC$SUBR4.:E05TOU
 UTS= JUL 29 '97 11:32:46.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1  RoData even  UTS      1      1  CPC$MFID_OPEN
    2   Proc  even  none   222    336  CPC$MFID_OPEN
    3  RoData even  none     8     10  CPC$MFID_OPEN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes    yes     yes      Std        3  CPC$MFID_OPEN
     2      5          yes     yes      Std        3  CPC$FID_VLP
     2    150          yes     yes      Std        3  CPC$FID_OPEN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       5 CXP$POSTERR
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:38   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  CFPT_FID                         r    SEG2$
r    B$JIT$                           r    B$TCB$                                B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:39   


       99        1        /*T***********************************************************/
      100        2        /*T*                                                         */
      101        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      102        4        /*T*                                                         */
      103        5        /*T***********************************************************/
      104        6        /*F*    NAME:        CPC$MFID_OPEN
      105        7                PURPOSE:     To take a text string, pass it thru M$FID and
      106        8                             then open the specified file.
      107        9                DESCRIPTION: There are three parameters to this routine.
      108       10                              The first is required, while the second and
      109       11                              third are optional. The first is FPT_OPEN.
      110       12                              It is assumed that this fpt has at least a
      111       13                              dcb number stuffed in it. Other items may
      112       14                              also be present (i.e. DISP, EXIST, FUN, RES, etc).
      113       15                              The second parameter points to a TEXTC FID
      114       16                              which is passed thru M$FID. The information
      115       17                              from M$FID is stuffed into FPT_OPEN and then
      116       18                              an M$OPEN is attempted. The third parameter
      117       19                              is an array of vectors which frame VLPs for
      118       20                              M$FID and M$OPEN. If specified then these
      119       21                              VLPs will be used and the user will have
      120       22                              easy access to the returned information. This
      121       23                              array of vectors is generated by the macro
      122       24                              CP_FIDVLPS in CP_MACROS_C.
      123       25        */
      124       26        CPC$MFID_OPEN: PROC (FPT_OPEN,STR$,CP_FIDVLPS) ALTRET;

     26  2 000000   000000 700200 xent  CPC$MFID_OP* TSX0  ! X66_AUTO_3
         2 000001   000110 000003                    ZERO    72,3

      125       27        /***** Include files *****/
      126       28          %INCLUDE CP_6;
      127      109          %INCLUDE CP_6_SUBS;
      128      649          %INCLUDE CP_MACROS_C;
      129     1401          %INCLUDE CP_PERR_C;
      130     1739          %INCLUDE CP_SUBS_C;
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:40   
      131     2656          %INCLUDE B$JIT ;
      132     2946          %INCLUDE XU_MACRO_C;
      133     6052          %INCLUDE CP_DATA_R;
      134     8615        /***** Parameters *****/
      135     8616          %FPT_OPEN (STCLASS=" ");
      136     8725    1     DCL STR$ PTR;
      137     8726          %CP_FIDVLPS (STCLASS=" ");
      138     8737        /***** Fpts/Vlps *****/
      139     8738          %FPT_FID (STCLASS=AUTO);
      140     8761          %VLR_FID (FPTN=FID_RESULTS,STCLASS=AUTO);
      141     8780    1     DCL FID_ASN UBIN(9) AUTO;
      142     8781    1     DCL FID_RES CHAR(6) AUTO;
      143     8782          %VLP_NAME (FPTN=FID_NAME,LEN=31,STCLASS=AUTO);
      144     8809          %VLP_ACCT (FPTN=FID_ACCT,STCLASS=AUTO);
      145     8822          %VLP_PASS (FPTN=FID_PASS,STCLASS=AUTO);
      146     8835          %VLP_WSN (FPTN=FID_WSN,STCLASS=AUTO);
      147     8848          %VLP_SN (FPTN=FID_SN,N=3,STCLASS=AUTO);
      148     8861        /***** Local variables *****/
      149     8862
      150     8863    1     DCL CPOS UBIN WORD ;
      151     8864    1     DCL OPEN_FILE# BIT(1) ;
      152     8865
      153     8866        /***** Based structures *****/
      154     8867
      155     8868          %F$DCB;
      156     8925          %SEG$2 ;
      157     8985          %B$TCB (STCLASS="BASED(B$TCB$)") ;
      158     8988          %B$ALT ;
      159     8996          %PARSE$SYM(NAME=P$S,STCLASS=BASED) ;
      160     9034
      161     9035        /***** External procedure entry declarations *****/
      162     9036
      163     9037    1     DCL CXP$POSTERR ENTRY(5) ;
      164     9038
      165     9039        /***** Error codes *****/
      166     9040        %ERR_CODE (NAME=E_ILLXDEST,MID#=CPC$SUBRMID,CODE#=E$ILLXDEST,STCLASS=CONSTANT);
      167     9060        /*E*    ERROR: CPC-E$ILLXDEST-0
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:41   
      168     9061                MESSAGE: Illegal destination fid.
      169     9062                MESSAGE1: You do not have permission to write into that file.
      170     9063        */
      171     9064        %EJECT;
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:42   
      172     9065    1     OPEN_FILE# = %YES# ;

   9065  2 000002   400000 236003                    LDQ     -131072,DU
         2 000003   200101 756100                    STQ     OPEN_FILE#,,AUTO

      173     9066    1     GOTO PAST_FID_VLP_ENTRY ;

   9066  2 000004   000010 710000 2                  TRA     PAST_FID_VLP_ENTRY

      174     9067
      175     9068    1   CPC$FID_VLP:  ENTRY (FPT_OPEN,STR$,CP_FIDVLPS) ALTRET;

   9068  2 000005   000000 700200 xent  CPC$FID_VLP  TSX0  ! X66_AUTO_3
         2 000006   000110 000003                    ZERO    72,3

      176     9069    1     OPEN_FILE# = %NO# ;

   9069  2 000007   200101 450100                    STZ     OPEN_FILE#,,AUTO

      177     9070
      178     9071    1   PAST_FID_VLP_ENTRY:
      179     9072        /**/
      180     9073        /*
      181     9074           *****   Break up the FID...
      182     9075        */
      183     9076    1     FID_ASN = %FILE#;   /* Default value */

   9076  2 000010   001000 236003       PAST_FID_VL* LDQ     512,DU
         2 000011   200050 756100                    STQ     FID_ASN,,AUTO

      184     9077    1     FID_RES = ' ';   /* Default value */

   9077  2 000012   040100 100400                    MLR     fill='040'O
         2 000013   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         2 000014   200051 000006                    ADSC9   FID_RES,,AUTO            cn=0,n=6

      185     9078    1     FPT_FID = CFPT_FID;
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:43   

   9078  2 000015   000100 100400                    MLR     fill='000'O
         2 000016   000000 000140 xsym               ADSC9   CFPT_FID                 cn=0,n=96
         2 000017   200006 000140                    ADSC9   FPT_FID,,AUTO            cn=0,n=96

      186     9079    1     FPT_FID.TEXTFID_ = VECTOR(STR$ -> P$S.TEXT);

   9079  2 000020   200004 470500                    LDP0    @STR$,,AUTO
         2 000021   000000 471500                    LDP1    0,,PR0
         2 000022   100004 236100                    LDQ     4,,PR1
         2 000023   000033 772000                    QRL     27
         2 000024   000064 737000                    LLS     52
         2 000025   000140 135007                    SBLA    96,DL
         2 000026   200102 451500                    STP1    OPEN_FILE#+1,,AUTO
         2 000027   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000030   000000 036000 3                  ADLQ    0
         2 000031   200010 757100                    STAQ    FPT_FID+2,,AUTO

      187     9080    1     IF (ADDR(CP_FIDVLPS) = ADDR(NIL))

   9080  2 000032   200005 236100                    LDQ     @CP_FIDVLPS,,AUTO
         2 000033   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000034   000106 601000 2                  TNZ     s:9094

      188     9081    1         THEN
      189     9082    2           DO ;                                    /* No vectors passed. */

      190     9083    2             FPT_FID.NAME_ = VECTOR(FID_NAME);

   9083  2 000035   000001 235000 3                  LDA     1
         2 000036   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000037   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000040   000053 036003                    ADLQ    43,DU
         2 000041   200012 757100                    STAQ    FPT_FID+4,,AUTO

      191     9084    2             FPT_FID.ACCT_ = VECTOR(FID_ACCT);

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:44   
   9084  2 000042   000002 235000 3                  LDA     2
         2 000043   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000044   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000045   000063 036003                    ADLQ    51,DU
         2 000046   200014 757100                    STAQ    FPT_FID+6,,AUTO

      192     9085    2             FPT_FID.PASS_ = VECTOR(FID_PASS);

   9085  2 000047   000002 235000 3                  LDA     2
         2 000050   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000051   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000052   000065 036003                    ADLQ    53,DU
         2 000053   200016 757100                    STAQ    FPT_FID+8,,AUTO

      193     9086    2             FPT_FID.SN_ = VECTOR(FID_SN);

   9086  2 000054   000003 235000 3                  LDA     3
         2 000055   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000056   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000057   000072 036003                    ADLQ    58,DU
         2 000060   200020 757100                    STAQ    FPT_FID+10,,AUTO

      194     9087    2             FPT_FID.WSN_ = VECTOR(FID_WSN);

   9087  2 000061   000002 235000 3                  LDA     2
         2 000062   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000063   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000064   000067 036003                    ADLQ    55,DU
         2 000065   200022 757100                    STAQ    FPT_FID+12,,AUTO

      195     9088    2             FPT_FID.ASN_ = VECTOR(FID_ASN);

   9088  2 000066   777640 235007                    LDA     -96,DL
         2 000067   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000070   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000071   000050 036003                    ADLQ    40,DU
         2 000072   200024 757100                    STAQ    FPT_FID+14,,AUTO
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:45   

      196     9089    2             FPT_FID.RES_ = VECTOR(FID_RES);

   9089  2 000073   000004 235000 3                  LDA     4
         2 000074   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000075   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000076   000051 036003                    ADLQ    41,DU
         2 000077   200026 757100                    STAQ    FPT_FID+16,,AUTO

      197     9090    2             FPT_FID.RESULTS_ = VECTOR(FID_RESULTS) ;

   9090  2 000100   000005 235000 3                  LDA     5
         2 000101   200102 452500                    STP2    OPEN_FILE#+1,,AUTO
         2 000102   200102 236100                    LDQ     OPEN_FILE#+1,,AUTO
         2 000103   000036 036003                    ADLQ    30,DU
         2 000104   200030 757100                    STAQ    FPT_FID+18,,AUTO

      198     9091    2           END ; /* THEN DO */

   9091  2 000105   000141 710000 2                  TRA     s:9105

      199     9092    1         ELSE
      200     9093    2           DO ;                                    /* Vectors passed. */

      201     9094    2             FPT_FID.NAME_ = CP_FIDVLPS.FID_NAME_ ;

   9094  2 000106   200005 471500                    LDP1    @CP_FIDVLPS,,AUTO
         2 000107   100002 237100                    LDAQ    2,,PR1
         2 000110   200012 757100                    STAQ    FPT_FID+4,,AUTO

      202     9095    2             FPT_FID.ACCT_ = CP_FIDVLPS.FID_ACCT_ ;

   9095  2 000111   100000 237100                    LDAQ    0,,PR1
         2 000112   200014 757100                    STAQ    FPT_FID+6,,AUTO

      203     9096    2             FPT_FID.PASS_ = CP_FIDVLPS.FID_PASS_ ;

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:46   
   9096  2 000113   100004 237100                    LDAQ    4,,PR1
         2 000114   200016 757100                    STAQ    FPT_FID+8,,AUTO

      204     9097    2             FPT_FID.SN_ = CP_FIDVLPS.FID_SN_ ;

   9097  2 000115   100010 237100                    LDAQ    8,,PR1
         2 000116   200020 757100                    STAQ    FPT_FID+10,,AUTO

      205     9098    2             FPT_FID.WSN_ = CP_FIDVLPS.FID_WSN_ ;

   9098  2 000117   100006 237100                    LDAQ    6,,PR1
         2 000120   200022 757100                    STAQ    FPT_FID+12,,AUTO

      206     9099    2             FID_ASN = CP_FIDVLPS.FID_ASN ;

   9099  2 000121   100015 236100                    LDQ     13,,PR1
         2 000122   000033 772000                    QRL     27
         2 000123   000033 736000                    QLS     27
         2 000124   200050 756100                    STQ     FID_ASN,,AUTO

      207     9100    2             FPT_FID.ASN_ = VECTOR(CP_FIDVLPS.FID_ASN);

   9100  2 000125   177640 235007                    LDA     65440,DL
         2 000126   200005 236100                    LDQ     @CP_FIDVLPS,,AUTO
         2 000127   000015 036003                    ADLQ    13,DU
         2 000130   200024 757100                    STAQ    FPT_FID+14,,AUTO

      208     9101    2             FPT_FID.RES_ = VECTOR(CP_FIDVLPS.FID_RES);

   9101  2 000131   777640 235007                    LDA     -96,DL
         2 000132   200005 236100                    LDQ     @CP_FIDVLPS,,AUTO
         2 000133   000014 036003                    ADLQ    12,DU
         2 000134   200026 757100                    STAQ    FPT_FID+16,,AUTO

      209     9102    2             FPT_FID.RESULTS_ = VECTOR(CP_FIDVLPS.FID_RESULTS) ;

   9102  2 000135   000002 235000 3                  LDA     2
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:47   
         2 000136   200005 236100                    LDQ     @CP_FIDVLPS,,AUTO
         2 000137   000012 036003                    ADLQ    10,DU
         2 000140   200030 757100                    STAQ    FPT_FID+18,,AUTO

      210     9103    2           END ; /* ELSE DO */

      211     9104
      212     9105    1      CALL M$FID(FPT_FID) ALTRET(E_OPEN) ;

   9105  2 000141   200006 630500                    EPPR0   FPT_FID,,AUTO
         2 000142   420001 713400                    CLIMB   alt,+8193
         2 000143   404400 401760                    pmme    nvectors=10
         2 000144   000302 702000 2                  TSX2    E_OPEN

      213     9106    1      IF (OPEN_FILE# = %NO#) THEN GOTO RETURN_TO_SENDER ;

   9106  2 000145   200101 234100                    SZN     OPEN_FILE#,,AUTO
         2 000146   000301 605000 2                  TPL     RETURN_TO_SENDER
         2 000147   000152 710000 2                  TRA     s:9112

      214     9107
      215     9108    1   CPC$FID_OPEN: ENTRY (FPT_OPEN,STR$,CP_FIDVLPS) ALTRET;

   9108  2 000150   000000 700200 xent  CPC$FID_OPEN TSX0  ! X66_AUTO_3
         2 000151   000110 000003                    ZERO    72,3

      216     9109        /*
      217     9110             ***** Open the file...
      218     9111        */
      219     9112    1     IF (ADDR(CP_FIDVLPS) ~= ADDR(NIL))

   9112  2 000152   200005 236100                    LDQ     @CP_FIDVLPS,,AUTO
         2 000153   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000154   000161 600000 2                  TZE     s:9114

      220     9113    1       THEN FID_RESULTS = CP_FIDVLPS.FID_RESULTS ;

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:48   
   9113  2 000155   200005 470500                    LDP0    @CP_FIDVLPS,,AUTO
         2 000156   000100 100500                    MLR     fill='000'O
         2 000157   000012 000010                    ADSC9   10,,PR0                  cn=0,n=8
         2 000160   200036 000044                    ADSC9   FID_RESULTS,,AUTO        cn=0,n=36

      221     9114    1     IF FID_RESULTS.ACCT = %NO#

   9114  2 000161   200036 236100                    LDQ     FID_RESULTS,,AUTO
         2 000162   200000 316003                    CANQ    65536,DU
         2 000163   000170 601000 2                  TNZ     s:9117

      222     9115    1        THEN   /* Default to current account */
      223     9116    1           FID_ACCT.ACCT# = B$JIT.FACCN;

   9116  2 000164   000000 470400 xsym               LDP0    B$JIT$
         2 000165   000006 237100                    LDAQ    6,,PR0
         2 000166   200063 755100                    STA     FID_ACCT,,AUTO
         2 000167   200064 756100                    STQ     FID_ACCT+1,,AUTO

      224     9117    1     FPT_OPEN.NAME_ = CP_FIDVLPS.FID_NAME_ ;

   9117  2 000170   200005 470500                    LDP0    @CP_FIDVLPS,,AUTO
         2 000171   000002 237100                    LDAQ    2,,PR0
         2 000172   200003 471500                    LDP1    @FPT_OPEN,,AUTO
         2 000173   100006 757100                    STAQ    6,,PR1

      225     9118    1     IF FID_RESULTS.ACCT

   9118  2 000174   200036 236100                    LDQ     FID_RESULTS,,AUTO
         2 000175   200000 316003                    CANQ    65536,DU
         2 000176   000201 600000 2                  TZE     s:9121

      226     9119    1        THEN
      227     9120    1           FPT_OPEN.ACCT_= CP_FIDVLPS.FID_ACCT_ ;

   9120  2 000177   000000 237100                    LDAQ    0,,PR0
         2 000200   100024 757100                    STAQ    20,,PR1
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:49   

      228     9121    1     IF FID_RESULTS.PASS

   9121  2 000201   200036 236100                    LDQ     FID_RESULTS,,AUTO
         2 000202   100000 316003                    CANQ    32768,DU
         2 000203   000206 600000 2                  TZE     s:9124

      229     9122    1        THEN
      230     9123    1           FPT_OPEN.PASS_= CP_FIDVLPS.FID_PASS_ ;

   9123  2 000204   000004 237100                    LDAQ    4,,PR0
         2 000205   100010 757100                    STAQ    8,,PR1

      231     9124    1     IF FID_RESULTS.SN

   9124  2 000206   200036 236100                    LDQ     FID_RESULTS,,AUTO
         2 000207   040000 316003                    CANQ    16384,DU
         2 000210   000213 600000 2                  TZE     s:9127

      232     9125    1        THEN
      233     9126    1           FPT_OPEN.SN_= CP_FIDVLPS.FID_SN_ ;

   9126  2 000211   000010 237100                    LDAQ    8,,PR0
         2 000212   100002 757100                    STAQ    2,,PR1

      234     9127    1     IF FID_RESULTS.WSN

   9127  2 000213   200036 236100                    LDQ     FID_RESULTS,,AUTO
         2 000214   020000 316003                    CANQ    8192,DU
         2 000215   000220 600000 2                  TZE     s:9130

      235     9128    1        THEN
      236     9129    1           FPT_OPEN.WSN_= CP_FIDVLPS.FID_WSN_ ;

   9129  2 000216   000006 237100                    LDAQ    6,,PR0
         2 000217   100032 757100                    STAQ    26,,PR1

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:50   
      237     9130    1     IF FID_RESULTS.RES

   9130  2 000220   200036 236100                    LDQ     FID_RESULTS,,AUTO
         2 000221   004000 316003                    CANQ    2048,DU
         2 000222   000225 600000 2                  TZE     s:9133

      238     9131    1        THEN
      239     9132    1           FPT_OPEN.V.RES# = CP_FIDVLPS.FID_RES ;

   9132  2 000223   000014 236100                    LDQ     12,,PR0
         2 000224   100050 756100                    STQ     40,,PR1

      240     9133    1     IF FID_RESULTS.ASN

   9133  2 000225   200036 236100                    LDQ     FID_RESULTS,,AUTO
         2 000226   010000 316003                    CANQ    4096,DU
         2 000227   000233 600000 2                  TZE     s:9136

      241     9134    1        THEN
      242     9135    1           FPT_OPEN.V.ASN# = CP_FIDVLPS.FID_ASN ;

   9135  2 000230   000015 236100                    LDQ     13,,PR0
         2 000231   000033 772000                    QRL     27
         2 000232   100045 552104                    STBQ    37,'04'O,PR1

      243     9136    1     FPT_OPEN.V.INITZ.SCRUB# = %YES#;

   9136  2 000233   400000 236007                    LDQ     -131072,DL
         2 000234   100044 256100                    ORSQ    36,,PR1

      244     9137    1     CALL M$OPEN(FPT_OPEN) ALTRET(E_OPEN);

   9137  2 000235   100000 630500                    EPPR0   0,,PR1
         2 000236   450000 713400                    CLIMB   alt,open
         2 000237   410400 401760                    pmme    nvectors=18
         2 000240   000302 702000 2                  TSX2    E_OPEN

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:51   
      245     9138
      246     9139    1     IF DCBADDR(FPT_OPEN.V.DCB#) -> F$DCB.FFLG.EXEC#

   9139  2 000241   000006 470400 3                  LDP0    6
         2 000242   000000 471500                    LDP1    0,,PR0
         2 000243   200003 473500                    LDP3    @FPT_OPEN,,AUTO
         2 000244   300044 220100                    LDX0    36,,PR3
         2 000245   100000 474510                    LDP4    0,X0,PR1
         2 000246   400004 236100                    LDQ     4,,PR4
         2 000247   002000 316003                    CANQ    1024,DU
         2 000250   000301 600000 2                  TZE     RETURN_TO_SENDER

      247     9140    1        THEN
      248     9141    2           DO;

      249     9142    2              IF ADDR(STR$) ~= ADDR(NIL)

   9142  2 000251   200004 236100                    LDQ     @STR$,,AUTO
         2 000252   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000253   000261 600000 2                  TZE     s:9146

      250     9143    2                 THEN   /* Parse string passed */
      251     9144    2                    CPOS = STR$ -> P$S.CPOS;

   9144  2 000254   200004 475500                    LDP5    @STR$,,AUTO
         2 000255   500000 476500                    LDP6    0,,PR5
         2 000256   600002 235100                    LDA     2,,PR6
         2 000257   200100 755100                    STA     CPOS,,AUTO
         2 000260   000263 710000 2                  TRA     s:9147

      252     9145    2                 ELSE   /* No CPOS avail */
      253     9146    2                    CPOS = 511;

   9146  2 000261   000777 235007                    LDA     511,DL
         2 000262   200100 755100                    STA     CPOS,,AUTO

      254     9147    2              CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,E_ILLXDEST);
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:52   

   9147  2 000263   000000 236000 xsym               LDQ     SEG2$
         2 000264   000003 036003                    ADLQ    3,DU
         2 000265   200102 756100                    STQ     OPEN_FILE#+1,,AUTO
         2 000266   000007 236000 3                  LDQ     7
         2 000267   200105 756100                    STQ     OPEN_FILE#+4,,AUTO
         2 000270   200100 634500                    EPPR4   CPOS,,AUTO
         2 000271   200104 454500                    STP4    OPEN_FILE#+3,,AUTO
         2 000272   200102 635500                    EPPR5   OPEN_FILE#+1,,AUTO
         2 000273   200103 455500                    STP5    OPEN_FILE#+2,,AUTO
         2 000274   200103 630500                    EPPR0   OPEN_FILE#+2,,AUTO
         2 000275   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000276   000000 701000 xent               TSX1    CXP$POSTERR
         2 000277   000000 011000                    NOP     0

      255     9148    2              ALTRETURN;

   9148  2 000300   000000 702200 xent               TSX2  ! X66_AALT

      256     9149    2           END;
      257     9150    1   RETURN_TO_SENDER:
      258     9151
      259     9152    1     RETURN;

   9152  2 000301   000000 702200 xent  RETURN_TO_S* TSX2  ! X66_ARET

      260     9153        /**/
      261     9154    1   E_OPEN:
      262     9155    1      CPOS = 0 ;

   9155  2 000302   200100 450100       E_OPEN       STZ     CPOS,,AUTO

      263     9156    1      IF (ADDR(STR$) ~= ADDR(NIL))

   9156  2 000303   200004 236100                    LDQ     @STR$,,AUTO
         2 000304   000001 116000 xsym               CMPQ    B_VECTNIL+1
         2 000305   000312 600000 2                  TZE     s:9158
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:53   

      264     9157    1         THEN CPOS = STR$ -> P$S.CPOS;

   9157  2 000306   200004 470500                    LDP0    @STR$,,AUTO
         2 000307   000000 471500                    LDP1    0,,PR0
         2 000310   100002 235100                    LDA     2,,PR1
         2 000311   200100 755100                    STA     CPOS,,AUTO

      265     9158    1     CALL CXP$POSTERR (ADDR(SEG$2.ERRBUF),CPOS,B$TCB.ALT$ -> B$ALT.ERR,,

   9158  2 000312   000000 470400 xsym               LDP0    B$TCB$
         2 000313   000000 471500                    LDP1    0,,PR0
         2 000314   000000 236000 xsym               LDQ     SEG2$
         2 000315   000003 036003                    ADLQ    3,DU
         2 000316   200102 756100                    STQ     OPEN_FILE#+1,,AUTO
         2 000317   100101 633500                    EPPR3   65,,PR1
         2 000320   200107 453500                    STP3    OPEN_FILE#+6,,AUTO
         2 000321   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000322   200106 756100                    STQ     OPEN_FILE#+5,,AUTO
         2 000323   100102 634500                    EPPR4   66,,PR1
         2 000324   200105 454500                    STP4    OPEN_FILE#+4,,AUTO
         2 000325   200100 631500                    EPPR1   CPOS,,AUTO
         2 000326   200104 451500                    STP1    OPEN_FILE#+3,,AUTO
         2 000327   200102 635500                    EPPR5   OPEN_FILE#+1,,AUTO
         2 000330   200103 455500                    STP5    OPEN_FILE#+2,,AUTO
         2 000331   200103 630500                    EPPR0   OPEN_FILE#+2,,AUTO
         2 000332   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000333   000000 701000 xent               TSX1    CXP$POSTERR
         2 000334   000000 011000                    NOP     0

      266     9159    1           B$TCB.ALT$ -> B$ALT.DCB#);
      267     9160    1     ALTRETURN;

   9160  2 000335   000000 702200 xent               TSX2  ! X66_AALT
      268     9161    1   END CPC$MFID_OPEN;

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:54   
--  Include file information  --

   CP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
   CP_SUBS_C.:E05TOU  is referenced.
   CP_PERR_C.:E05TOU  is referenced.
   CP_MACROS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure CPC$MFID_OPEN.
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:55   

 **** Variables and constants ****

  ****  Section 001 RoData CPC$MFID_OPEN

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 E_ILLXDEST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     5-0-0/w PTR         r     1 @CP_FIDVLPS                3-0-0/w PTR         r     1 @FPT_OPEN
     4-0-0/w PTR         r     1 @STR$                    100-0-0/w UBIN        r     1 CPOS
    *0-0-0/d STRC(477)   r     1 CP_FIDVLPS                63-0-0/c STRC(72)    r     1 FID_ACCT
    50-0-0/w UBIN(9)     r     1 FID_ASN                   53-0-0/c STRC(288)   r     1 FID_NAME
    65-0-0/c STRC(72)    r     1 FID_PASS                  51-0-0/c CHAR(6)     r     1 FID_RES
    36-0-0/d STRC(324)   r     1 FID_RESULTS               72-0-0/d STRC(198)   r     1 FID_SN
    67-0-0/c STRC(72)    r     1 FID_WSN                    6-0-0/d STRC(864)   r     1 FPT_FID
    *0-0-0/d STRC(2088)  r     1 FPT_OPEN                 101-0-0/b BIT         r     1 OPEN_FILE#
    *0-0-0/w PTR         r     1 STR$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 B$TCB$
     0-0-0/d STRC(864)   r     1 CFPT_FID                   0-0-0/w PTR         r     1 SEG2$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:56   
     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/d STRC(8856)  r     1 B$JIT
     0-0-0/w STRC(144)   r     1 B$TCB                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w ASTR(153)   r     1 P$S                        0-0-0/w STRC(6264)  r     1 SEG$2


   Procedure CPC$MFID_OPEN requires 222 words for executable code.
   Procedure CPC$MFID_OPEN requires 72 words of local(AUTO) storage.

    No errors detected in file CPC$SUBR4.:E05TSI    .
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:57   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:58   
          MINI XREF LISTING

B$ALT.CODE
      8990**DCL      8990--REDEF    8991--REDEF    8991--REDEF
B$ALT.DCB#
      8991**DCL      9158<>CALL
B$ALT.ERR
      8991**DCL      9158<>CALL
B$ALT.ERR.ERR#
      8992**DCL      8992--REDEF
B$ALT.EVID
      8991**DCL      8991--REDEF    8991--REDEF
B$JIT.CPFLAGS1.SLEAZE
      2764**DCL      2764--REDEF
B$JIT.ERR.MID
      2671**DCL      2671--REDEF
B$JIT.FACCN
      2670**DCL      9116>>ASSIGN
B$JIT.JRESPEAK
      2832**DCL      2833--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
      2941**DCL      2941--REDEF    2942--REDEF
B$JIT.PNR
      2845**DCL      2845--REDEF
B$JIT.TSLINE
      2939**DCL      2940--REDEF
B$JIT$
      8548**DCL      2665--IMP-PTR  9116>>ASSIGN
B$TCB.ALT$
      8986**DCL      9158>>CALL     9158>>CALL
B$TCB$
      8550**DCL      8986--IMP-PTR  9158>>CALL     9158>>CALL
CAMR_REC.ACSVEH_
      7587**DCL      7588--REDEF
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:59   
CAMR_REC.ALTKEYS_
      7593**DCL      7594--REDEF    7594--REDEF
CAMR_REC.HDR_
      7592**DCL      7593--REDEF
CAMR_REC.TAB_
      7591**DCL      7592--REDEF
CAMR_REC.UHL_
      7585**DCL      7586--REDEF    7586--REDEF
CAMR_REC.V.FSN#
      7625**DCL      7625--REDEF    7625--REDEF
CAMR_REC.WSN_
      7591**DCL      7591--REDEF
CFPT_CLOSE.SN_
      6429**DCL      6429--REDEF
CFPT_CLOSE.UTL_
      6430**DCL      6430--REDEF
CFPT_CLOSE.V.EXPIRE#
      6444**DCL      6444--REDEF
CFPT_CLOSE.V.TYPE#
      6442**DCL      6442--REDEF
CFPT_CLOSE.V.XTNSIZE#
      6439**DCL      6439--REDEF    6441--REDEF
CFPT_FID
      6736**DCL      9078>>ASSIGN
CFPT_OPEN.ACSVEH_
      6364**DCL      6365--REDEF
CFPT_OPEN.ALTKEYS_
      6370**DCL      6371--REDEF    6371--REDEF
CFPT_OPEN.HDR_
      6369**DCL      6370--REDEF
CFPT_OPEN.TAB_
      6368**DCL      6369--REDEF
CFPT_OPEN.UHL_
      6362**DCL      6363--REDEF    6363--REDEF
CFPT_OPEN.V.FSN#
      6402**DCL      6402--REDEF    6402--REDEF
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:60   
CFPT_OPEN.WSN_
      6368**DCL      6368--REDEF
CFPT_READ.STATION_
      6468**DCL      6469--REDEF
CFPT_READ.V.DVBYTE.REREAD#
      6480**DCL      6480--REDEF
CFPT_READ.V.INDX#
      6478**DCL      6478--REDEF
CFPT_READUC.STATION_
      6838**DCL      6839--REDEF
CFPT_READUC.V.DVBYTE.REREAD#
      6850**DCL      6850--REDEF
CFPT_READUC.V.INDX#
      6848**DCL      6848--REDEF
CFPT_TRTN.V.IR#
      7074**DCL      7075--REDEF
CFPT_WRITE.STATION_
      6506**DCL      6506--REDEF
CFPT_WRITE.V.DVBYTE.VFC#
      6513**DCL      6513--REDEF
CFPT_WRITEUC.STATION_
      6806**DCL      6806--REDEF
CFPT_WRITEUC.V.DVBYTE.VFC#
      6813**DCL      6813--REDEF
CFPT_XXX.V.STEPCC#
      7786**DCL      7786--REDEF
CGETCMD.OUT$
      7807**DCL      7813--REDEF
CPOS
      8863**DCL      9144<<ASSIGN   9146<<ASSIGN   9147<>CALL     9155<<ASSIGN   9157<<ASSIGN   9158<>CALL
CP_FIDVLPS
      8727**DCL        26--PROC     9068--ENTRY    9080--IF       9108--ENTRY    9112--IF
CP_FIDVLPS.FID_ACCT_
      8728**DCL      9095>>ASSIGN   9120>>ASSIGN
CP_FIDVLPS.FID_ASN
      8735**DCL      9099>>ASSIGN   9100--ASSIGN   9135>>ASSIGN
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:61   
CP_FIDVLPS.FID_NAME_
      8729**DCL      9094>>ASSIGN   9117>>ASSIGN
CP_FIDVLPS.FID_PASS_
      8730**DCL      9096>>ASSIGN   9123>>ASSIGN
CP_FIDVLPS.FID_RES
      8734**DCL      9101--ASSIGN   9132>>ASSIGN
CP_FIDVLPS.FID_RESULTS
      8733**DCL      9102--ASSIGN   9113>>ASSIGN
CP_FIDVLPS.FID_SN_
      8732**DCL      9097>>ASSIGN   9126>>ASSIGN
CP_FIDVLPS.FID_WSN_
      8731**DCL      9098>>ASSIGN   9129>>ASSIGN
CVLP_TRMCTL.BREAKCOUNT
      7398**DCL      7399--REDEF
CVLP_WINDOW.FWINDOW#
      7494**DCL      7494--REDEF    7495--REDEF
CXP$POSTERR
      9037**DCL-ENT  9147--CALL     9158--CALL
E_ILLXDEST
      9053**DCL      9147<>CALL
E_OPEN
      9155**LABEL    9105--CALLALT  9137--CALLALT
F$DCB.ACTPOS
      8901**DCL      8901--REDEF
F$DCB.ARS#
      8875**DCL      8875--REDEF
F$DCB.ATTR
      8894**DCL      8895--REDEF
F$DCB.BORROW
      8909**DCL      8909--REDEF    8909--REDEF    8909--REDEF
F$DCB.DCBNAME.L
      8923**DCL      8923--IMP-SIZ
F$DCB.EOMCHAR#
      8879**DCL      8879--REDEF
F$DCB.FFLG.EXEC#
      8881**DCL      9139>>IF
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:62   
F$DCB.FLDID
      8904**DCL      8904--REDEF
F$DCB.FORM$
      8898**DCL      8898--REDEF
F$DCB.FSECT
      8914**DCL      8914--REDEF
F$DCB.FSN#
      8891**DCL      8891--REDEF    8891--REDEF    8892--REDEF
F$DCB.HEADER$
      8897**DCL      8897--REDEF
F$DCB.IXTNSIZE#
      8895**DCL      8895--REDEF
F$DCB.LASTSTA$
      8884**DCL      8884--REDEF
F$DCB.LVL
      8910**DCL      8910--REDEF
F$DCB.NAME#.C
      8885**DCL      8885--REDEF
F$DCB.NOEOF
      8907**DCL      8907--REDEF
F$DCB.NRECS#
      8896**DCL      8896--REDEF
F$DCB.NRECX
      8915**DCL      8915--REDEF
F$DCB.OHDR
      8907**DCL      8907--REDEF
F$DCB.ORG#
      8890**DCL      8890--REDEF
F$DCB.PRECNO
      8913**DCL      8913--REDEF
F$DCB.RCSZ
      8919**DCL      8919--REDEF
F$DCB.RES#
      8886**DCL      8886--REDEF
F$DCB.SETX
      8898**DCL      8898--REDEF
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:63   
F$DCB.TAB$
      8898**DCL      8898--REDEF
F$DCB.TDA
      8912**DCL      8913--REDEF
F$DCB.WSN#
      8886**DCL      8886--REDEF
FID_ACCT
      8820**DCL      9084--ASSIGN
FID_ACCT.ACCT#
      8820**DCL      9116<<ASSIGN
FID_ASN
      8780**DCL      9076<<ASSIGN   9088--ASSIGN   9099<<ASSIGN
FID_NAME
      8807**DCL      9083--ASSIGN
FID_PASS
      8833**DCL      9085--ASSIGN
FID_RES
      8781**DCL      9077<<ASSIGN   9089--ASSIGN
FID_RESULTS
      8772**DCL      9090--ASSIGN   9113<<ASSIGN
FID_RESULTS.ACCT
      8772**DCL      9114>>IF       9118>>IF
FID_RESULTS.ASN
      8772**DCL      9133>>IF
FID_RESULTS.PASS
      8772**DCL      9121>>IF
FID_RESULTS.RES
      8772**DCL      9130>>IF
FID_RESULTS.SN
      8772**DCL      9124>>IF
FID_RESULTS.WSN
      8772**DCL      9127>>IF
FID_SN
      8859**DCL      9086--ASSIGN
FID_WSN
      8846**DCL      9087--ASSIGN
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:64   
FPT_FID
      8749**DCL      9078<<ASSIGN   9105<>CALL
FPT_FID.ACCT_
      8750**DCL      9084<<ASSIGN   9095<<ASSIGN
FPT_FID.ASN_
      8752**DCL      9088<<ASSIGN   9100<<ASSIGN
FPT_FID.NAME_
      8750**DCL      9083<<ASSIGN   9094<<ASSIGN
FPT_FID.PASS_
      8750**DCL      9085<<ASSIGN   9096<<ASSIGN
FPT_FID.RESULTS_
      8752**DCL      9090<<ASSIGN   9102<<ASSIGN
FPT_FID.RES_
      8752**DCL      9089<<ASSIGN   9101<<ASSIGN
FPT_FID.SN_
      8751**DCL      9086<<ASSIGN   9097<<ASSIGN
FPT_FID.TEXTFID_
      8749**DCL      9079<<ASSIGN
FPT_FID.WSN_
      8751**DCL      9087<<ASSIGN   9098<<ASSIGN
FPT_OPEN
      8681**DCL        26--PROC     9068--ENTRY    9108--ENTRY    9137<>CALL
FPT_OPEN.ACCT_
      8685**DCL      9120<<ASSIGN
FPT_OPEN.ACSVEH_
      8683**DCL      8684--REDEF
FPT_OPEN.ALTKEYS_
      8689**DCL      8690--REDEF    8690--REDEF
FPT_OPEN.HDR_
      8688**DCL      8689--REDEF
FPT_OPEN.NAME_
      8682**DCL      9117<<ASSIGN
FPT_OPEN.PASS_
      8683**DCL      9123<<ASSIGN
FPT_OPEN.SN_
      8681**DCL      9126<<ASSIGN
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:65   
FPT_OPEN.TAB_
      8687**DCL      8688--REDEF
FPT_OPEN.UHL_
      8681**DCL      8682--REDEF    8682--REDEF
FPT_OPEN.V.ASN#
      8700**DCL      9135<<ASSIGN
FPT_OPEN.V.DCB#
      8690**DCL      9139--IF
FPT_OPEN.V.FSN#
      8721**DCL      8721--REDEF    8721--REDEF
FPT_OPEN.V.INITZ.SCRUB#
      8691**DCL      9136<<ASSIGN
FPT_OPEN.V.RES#
      8705**DCL      9132<<ASSIGN
FPT_OPEN.WSN_
      8687**DCL      8687--REDEF    9129<<ASSIGN
M$FID
       100**DCL-ENT  9105--CALL
M$OPEN
        37**DCL-ENT  9137--CALL
OPEN_FILE#
      8864**DCL      9065<<ASSIGN   9069<<ASSIGN   9106>>IF
P$S.COUNT
      9026**DCL      9029--IMP-SIZ  9079>>ASSIGN
P$S.CPOS
      9018**DCL      9144>>ASSIGN   9157>>ASSIGN
P$S.TEXT
      9029**DCL      9079--ASSIGN
PAST_FID_VLP_ENTRY
      9076**LABEL    9066--GOTO
RETURN_TO_SENDER
      9152**LABEL    9106--GOTO
SEG$2.ERRBUF
      8951**DCL      9147--CALL     9158--CALL
SEG2$
      8541**DCL      8926--IMP-PTR  9147>>CALL     9158>>CALL
PL6.E3A0      #003=CPC$MFID_OPEN File=CPC$SUBR4.:E05TSI                          TUE 07/29/97 11:32 Page:66   
STR$
      8725**DCL        26--PROC     9068--ENTRY    9079>>ASSIGN   9079>>ASSIGN   9108--ENTRY    9142--IF
      9144>>ASSIGN   9156--IF       9157>>ASSIGN
