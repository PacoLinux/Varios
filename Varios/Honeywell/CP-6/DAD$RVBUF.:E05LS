VERSION E05

PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:1    
        1        1        /*M* DAD$RVBUF - DISPLAY RECOVERY BUFFER INFORMATION */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        DAD$RECOVERY: PROC;
        8        8        /**/
        9        9        %INCLUDE DA_MAP_R;
       10       39        %INCLUDE DA_ANLZ_R;
       11       52        %INCLUDE DA_FORMAT_C;
       12      294        %INCLUDE DA_FORMAT_R;
       13      306        %INCLUDE CP_6;
       14      387        %INCLUDE DA_PERR_C;
       15      451        %INCLUDE IR_DATA_M;
       16      615        %INCLUDE NI$TABLES;
       17      831        /**/
       18      832    1   DCL DAF$INIT ENTRY(1) ALTRET;
       19      833    1   DCL DAF$WRITE EPTR SYMREF;
       20      834    1   DCL DAF$NEWPAGE ENTRY;
       21      835    1   DCL DAF$UPDLNCNT ENTRY;
       22      836    1   DCL DAB$SSFRAME ENTRY(1);
       23      837    1   DCL DAU$DUMPFRAME ENTRY(1);
       24      838        /**/
       25      839    1   DCL TRAPSS BIT(1) ALIGNED;
       26      840        /**/
       27      841        %REPORT (NAME=REPORT,TITLE='RECOVERY INFORMATION');
       28      907        %FPT_ERRMSG (SUBMESS=YES,INCLCODE=YES,RESULTS=VLR_ERRMSG,
       29      908                     FILENAME=SCRMSG,FILEACCT=SYSACCT);
       30      935        %VLP_NAME (FPTN=SCRMSG,NAME=':SCRMSG');
       31      962        %VLP_ACCT (FPTN=SYSACCT,ACCT=':SYS');
       32      975        %VLR_ERRMSG;
       33      997    1   DCL ERRBUF CHAR(120);
       34      998        %RV_BUFF (NAME=RVBUFF,STCLASS="BASED(DA_RVBUF$)");
       35     1034    1   DCL SCODEFMT CHAR(0) CONSTANT INIT(' SCREECH CODE:%2/');
       36     1035    1   DCL SSFRAMEHDR CHAR(0) CONSTANT INIT('%/SAFE STORE FRAME:%2/');
       37     1036    1   DCL CUNFMT CHAR(0) CONSTANT INIT(
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:2    
       38     1037    1   '%/ CURRENT USER .%O ON LOGICAL PROCESSOR #%D AT %..2.5U');
       39     1038    1   DCL RVBMORE CHAR(0) CONSTANT INIT(
       40     1039        '%/MORE STUFF FROM THE RECOVERY BUFFER:%2/SSR: %.1F%/PSR: %.1F%/ASR: %.1F
       41     1040    1   %/WSRs: %7(.%.9O,%).%.9O%/CURRENT COMGROUP: %.2F');
       42     1041    1   DCL RCVRTRAP CHAR(0) CONSTANT INIT('%/RECOVER TRAP - %A');
       43     1042    1   DCL CLSFTRAP CHAR(0) CONSTANT INIT('IRF$CLSF');
       44     1043    1   DCL CFUTRAP CHAR(0) CONSTANT INIT('IRF$CFUS');
       45     1044    1   DCL NIOTRAP CHAR(0) CONSTANT INIT('ISN$RCVRIO');
       46     1045    1   DCL MONDTRAP CHAR(0) CONSTANT INIT('ISR$RECOVER');
       47     1046    1   DCL AJITTR CHAR(0) CONSTANT INIT('AZA$LOGOFF');
       48     1047    1   DCL RCVR2TRAP CHAR(0) CONSTANT INIT('RCVR2');
       49     1048    1   DCL MONJITBAD CHAR(0) CONSTANT INIT('%/MONITOR JIT INCONSISTENT');
       50     1049    1   DCL MONPG0BAD CHAR(0) CONSTANT INIT('%/MONITOR PAGE 0 INCONSISTENT');
       51     1050    1   DCL RCVRSS CHAR(0) CONSTANT INIT('%/RECOVERY SAFE STORE FRAME:%2/');
       52     1051        %EJECT;
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:3    
       53     1052    2           IF NOT DA_DUMPFILE THEN DO;
       54     1053    2              DA_ANLZERR='040104000000'O;
       55     1054    2              DA_ANLZERR.CODE=%E$DA_NO_RVBUF;
       56     1055        /*E*    ERROR:   DAD-E$DA_NO_RVBUF
       57     1056                MESSAGE: Using running system - no recovery buffer.
       58     1057                                                                           */
       59     1058    2              RETURN;
       60     1059    2              END;
       61     1060    1           CALL DAF$INIT(REPORT) ALTRET(ALT);
       62     1061    1           CALL DAF$WRITE(VECTOR(SCODEFMT));
       63     1062    1           FPT_ERRMSG.BUF_=VECTOR(ERRBUF);
       64     1063    1           FPT_ERRMSG.CODE_=VECTOR(RVBUFF.RCODE);
       65     1064    1           FPT_ERRMSG.V.OUTDCB1#=DAF_DCB#;
       66     1065    1           RVBUFF.RCODE.MON='1'B;
       67     1066    1           CALL M$ERRMSG(FPT_ERRMSG);
       68     1067    1           CALL DAF$UPDLNCNT;
       69     1068    1           CALL DAF$WRITE(VECTOR(CUNFMT),VECTOR(RVBUFF.CUN),
       70     1069    1                                         VECTOR(RVBUFF.S_PNO),
       71     1070    1                                         VECTOR(RVBUFF.UTS1));
       72     1071    1           CALL DAF$WRITE(VECTOR(SSFRAMEHDR));
       73     1072    1           CALL DAB$SSFRAME(RVBUFF.SSFRAME);
       74     1073    1           CALL DAF$WRITE(VECTOR(RVBMORE),
       75     1074    1                          VECTOR(RVBUFF.SSR),
       76     1075    1                          VECTOR(RVBUFF.PSR),
       77     1076    1                          VECTOR(RVBUFF.ASR),
       78     1077    1                          VECTOR(RVBUFF.WSR),
       79     1078    1                          VECTOR(RVBUFF.CURCG.CG$));
       80     1079    1           TRAPSS='0'B;
       81     1080    2           IF RVBUFF.CLSFTRAP THEN DO;
       82     1081    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(CLSFTRAP));
       83     1082    2              TRAPSS='1'B;
       84     1083    2              END;
       85     1084    2           IF RVBUFF.CFUTRAP THEN DO;
       86     1085    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(CLSFTRAP));
       87     1086    2              TRAPSS='1'B;
       88     1087    2              END;
       89     1088    2           IF RVBUFF.NIOTRAP THEN DO;
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:4    
       90     1089    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(NIOTRAP));
       91     1090    2              TRAPSS='1'B;
       92     1091    2              END;
       93     1092    2           IF RVBUFF.MONDTRAP THEN DO;
       94     1093    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(MONDTRAP));
       95     1094    2              TRAPSS='1'B;
       96     1095    2              END;
       97     1096    2           IF RVBUFF.MONJITBAD THEN DO;
       98     1097    2              CALL DAF$WRITE(VECTOR(MONJITBAD));
       99     1098    2              END;
      100     1099    2           IF RVBUFF.MONPG0BAD THEN DO;
      101     1100    2              CALL DAF$WRITE(VECTOR(MONPG0BAD));
      102     1101    2              END;
      103     1102    2           IF TRAPSS THEN DO;
      104     1103    2              CALL DAF$WRITE(VECTOR(RCVRSS));
      105     1104    2              CALL DAB$SSFRAME(RVBUFF.RCVRTRAP);
      106     1105    2              END;
      107     1106    2           IF RVBUFF.AJITTR THEN DO;
      108     1107    2              CALL DAF$NEWPAGE;
      109     1108    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(AJITTR));
      110     1109    2              CALL DAU$DUMPFRAME(RVBUFF.AJITTRAP);
      111     1110    2              END;
      112     1111    2           IF RVBUFF.RCVR2TR THEN DO;
      113     1112    2              CALL DAF$NEWPAGE;
      114     1113    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(RCVR2TRAP));
      115     1114    2              CALL DAU$DUMPFRAME(RVBUFF.RCVR2TRAP);
      116     1115    2              END;
      117     1116    1   ALT:    RETURN;
      118     1117    1   END DAD$RECOVERY;
      119     1118        %EOD;

PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:5    
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   DA_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DA_FORMAT_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_FORMAT_C.:E05TOU  is referenced.
   DA_ANLZ_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DAD$RECOVERY.

   Procedure DAD$RECOVERY requires 245 words for executable code.
   Procedure DAD$RECOVERY requires 60 words of local(AUTO) storage.

PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:6    

 Object Unit name= DAD$RECOVERY                               File name= DAD$RVBUF.:E05TOU
 UTS= JUL 29 '97 12:45:51.88 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    48     60  DAD$RECOVERY
    2  RoData even  UTS     99    143  DAD$RECOVERY
    3   Proc  even  none   245    365  DAD$RECOVERY
    4  RoData even  none    52     64  DAD$RECOVERY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes            yes      Std        0  DAD$RECOVERY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DAF$INIT
         yes           Std       0 DAF$UPDLNCNT
         yes           Std       1 DAB$SSFRAME
         yes           Std       0 DAF$NEWPAGE
         yes           Std       1 DAU$DUMPFRAME
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:7    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_DUMPFILE                           DA_RVBUF$                             DA_ANLZERR
     DAF_DCB#                              M$UC                                  DAF$WRITE
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:8    


        1        1        /*M* DAD$RVBUF - DISPLAY RECOVERY BUFFER INFORMATION */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        DAD$RECOVERY: PROC;

      7  3 000000   000000 700200 xent  DAD$RECOVERY TSX0  ! X66_AUTO_0
         3 000001   000074 000000                    ZERO    60,0

        8        8        /**/
        9        9        %INCLUDE DA_MAP_R;
       10       39        %INCLUDE DA_ANLZ_R;
       11       52        %INCLUDE DA_FORMAT_C;
       12      294        %INCLUDE DA_FORMAT_R;
       13      306        %INCLUDE CP_6;
       14      387        %INCLUDE DA_PERR_C;
       15      451        %INCLUDE IR_DATA_M;
       16      615        %INCLUDE NI$TABLES;
       17      831        /**/
       18      832    1   DCL DAF$INIT ENTRY(1) ALTRET;
       19      833    1   DCL DAF$WRITE EPTR SYMREF;
       20      834    1   DCL DAF$NEWPAGE ENTRY;
       21      835    1   DCL DAF$UPDLNCNT ENTRY;
       22      836    1   DCL DAB$SSFRAME ENTRY(1);
       23      837    1   DCL DAU$DUMPFRAME ENTRY(1);
       24      838        /**/
       25      839    1   DCL TRAPSS BIT(1) ALIGNED;
       26      840        /**/
       27      841        %REPORT (NAME=REPORT,TITLE='RECOVERY INFORMATION');
       28      907        %FPT_ERRMSG (SUBMESS=YES,INCLCODE=YES,RESULTS=VLR_ERRMSG,
       29      908                     FILENAME=SCRMSG,FILEACCT=SYSACCT);
       30      935        %VLP_NAME (FPTN=SCRMSG,NAME=':SCRMSG');
       31      962        %VLP_ACCT (FPTN=SYSACCT,ACCT=':SYS');
       32      975        %VLR_ERRMSG;
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:9    
       33      997    1   DCL ERRBUF CHAR(120);
       34      998        %RV_BUFF (NAME=RVBUFF,STCLASS="BASED(DA_RVBUF$)");
       35     1034    1   DCL SCODEFMT CHAR(0) CONSTANT INIT(' SCREECH CODE:%2/');
       36     1035    1   DCL SSFRAMEHDR CHAR(0) CONSTANT INIT('%/SAFE STORE FRAME:%2/');
       37     1036    1   DCL CUNFMT CHAR(0) CONSTANT INIT(
       38     1037    1   '%/ CURRENT USER .%O ON LOGICAL PROCESSOR #%D AT %..2.5U');
       39     1038    1   DCL RVBMORE CHAR(0) CONSTANT INIT(
       40     1039        '%/MORE STUFF FROM THE RECOVERY BUFFER:%2/SSR: %.1F%/PSR: %.1F%/ASR: %.1F
       41     1040    1   %/WSRs: %7(.%.9O,%).%.9O%/CURRENT COMGROUP: %.2F');
       42     1041    1   DCL RCVRTRAP CHAR(0) CONSTANT INIT('%/RECOVER TRAP - %A');
       43     1042    1   DCL CLSFTRAP CHAR(0) CONSTANT INIT('IRF$CLSF');
       44     1043    1   DCL CFUTRAP CHAR(0) CONSTANT INIT('IRF$CFUS');
       45     1044    1   DCL NIOTRAP CHAR(0) CONSTANT INIT('ISN$RCVRIO');
       46     1045    1   DCL MONDTRAP CHAR(0) CONSTANT INIT('ISR$RECOVER');
       47     1046    1   DCL AJITTR CHAR(0) CONSTANT INIT('AZA$LOGOFF');
       48     1047    1   DCL RCVR2TRAP CHAR(0) CONSTANT INIT('RCVR2');
       49     1048    1   DCL MONJITBAD CHAR(0) CONSTANT INIT('%/MONITOR JIT INCONSISTENT');
       50     1049    1   DCL MONPG0BAD CHAR(0) CONSTANT INIT('%/MONITOR PAGE 0 INCONSISTENT');
       51     1050    1   DCL RCVRSS CHAR(0) CONSTANT INIT('%/RECOVERY SAFE STORE FRAME:%2/');
       52     1051        %EJECT;
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:10   
       53     1052    2           IF NOT DA_DUMPFILE THEN DO;

   1052  3 000002   000000 234000 xsym               SZN     DA_DUMPFILE
         3 000003   000012 604000 3                  TMI     s:1060

       54     1053    2              DA_ANLZERR='040104000000'O;

   1053  3 000004   000142 236000 2                  LDQ     RCVRSS+8
         3 000005   000000 756000 xsym               STQ     DA_ANLZERR

       55     1054    2              DA_ANLZERR.CODE=%E$DA_NO_RVBUF;

   1054  3 000006   000000 376000 4                  ANQ     0
         3 000007   004550 276007                    ORQ     2408,DL
         3 000010   000000 756000 xsym               STQ     DA_ANLZERR

       56     1055        /*E*    ERROR:   DAD-E$DA_NO_RVBUF
       57     1056                MESSAGE: Using running system - no recovery buffer.
       58     1057                                                                           */
       59     1058    2              RETURN;

   1058  3 000011   000000 702200 xent               TSX2  ! X66_ARET

       60     1059    2              END;
       61     1060    1           CALL DAF$INIT(REPORT) ALTRET(ALT);

   1060  3 000012   000001 630400 4                  EPPR0   1
         3 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000014   000000 701000 xent               TSX1    DAF$INIT
         3 000015   000364 702000 3                  TSX2    ALT

       62     1061    1           CALL DAF$WRITE(VECTOR(SCODEFMT));

   1061  3 000016   000004 630400 4                  EPPR0   4
         3 000017   000000 220000 xsym               LDX0    DAF$WRITE
         3 000020   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000021   000000 701010                    TSX1    0,X0
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:11   
         3 000022   000000 011000                    NOP     0

       63     1062    1           FPT_ERRMSG.BUF_=VECTOR(ERRBUF);

   1062  3 000023   000005 235000 4                  LDA     5
         3 000024   200042 452500                    STP2    ERRBUF+30,,AUTO
         3 000025   200042 236100                    LDQ     ERRBUF+30,,AUTO
         3 000026   000004 036003                    ADLQ    4,DU
         3 000027   000022 757000 1                  STAQ    FPT_ERRMSG+4

       64     1063    1           FPT_ERRMSG.CODE_=VECTOR(RVBUFF.RCODE);

   1063  3 000030   000006 235000 4                  LDA     6
         3 000031   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000032   000014 036003                    ADLQ    12,DU
         3 000033   000020 757000 1                  STAQ    FPT_ERRMSG+2

       65     1064    1           FPT_ERRMSG.V.OUTDCB1#=DAF_DCB#;

   1064  3 000034   000000 720000 xsym               LXL0    DAF_DCB#
         3 000035   000044 440000 1                  SXL0    FPT_ERRMSG+22

       66     1065    1           RVBUFF.RCODE.MON='1'B;

   1065  3 000036   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000037   400000 236007                    LDQ     -131072,DL
         3 000040   000014 256100                    ORSQ    12,,PR0

       67     1066    1           CALL M$ERRMSG(FPT_ERRMSG);

   1066  3 000041   000016 630400 1                  EPPR0   FPT_ERRMSG
         3 000042   020000 713400                    CLIMB   8192
         3 000043   405000 401760                    pmme    nvectors=11

       68     1067    1           CALL DAF$UPDLNCNT;

   1067  3 000044   000002 631400 xsym               EPPR1   B_VECTNIL+2
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:12   
         3 000045   000000 701000 xent               TSX1    DAF$UPDLNCNT
         3 000046   000000 011000                    NOP     0

       69     1068    1           CALL DAF$WRITE(VECTOR(CUNFMT),VECTOR(RVBUFF.CUN),

   1068  3 000047   777640 235007                    LDA     -96,DL
         3 000050   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000051   000140 036003                    ADLQ    96,DU
         3 000052   200042 757100                    STAQ    ERRBUF+30,,AUTO
         3 000053   777640 235007                    LDA     -96,DL
         3 000054   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000055   000142 036003                    ADLQ    98,DU
         3 000056   200044 757100                    STAQ    ERRBUF+32,,AUTO
         3 000057   777640 235007                    LDA     -96,DL
         3 000060   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000061   000004 036003                    ADLQ    4,DU
         3 000062   200050 757100                    STAQ    ERRBUF+36,,AUTO
         3 000063   200042 237100                    LDAQ    ERRBUF+30,,AUTO
         3 000064   200046 757100                    STAQ    ERRBUF+34,,AUTO
         3 000065   200044 237100                    LDAQ    ERRBUF+32,,AUTO
         3 000066   200052 757100                    STAQ    ERRBUF+38,,AUTO
         3 000067   200050 237100                    LDAQ    ERRBUF+36,,AUTO
         3 000070   200054 757100                    STAQ    ERRBUF+40,,AUTO
         3 000071   200054 630500                    EPPR0   ERRBUF+40,,AUTO
         3 000072   200061 450500                    STP0    ERRBUF+45,,AUTO
         3 000073   200052 631500                    EPPR1   ERRBUF+38,,AUTO
         3 000074   200060 451500                    STP1    ERRBUF+44,,AUTO
         3 000075   200046 633500                    EPPR3   ERRBUF+34,,AUTO
         3 000076   200057 453500                    STP3    ERRBUF+43,,AUTO
         3 000077   000007 236000 4                  LDQ     7
         3 000100   200056 756100                    STQ     ERRBUF+42,,AUTO
         3 000101   200056 630500                    EPPR0   ERRBUF+42,,AUTO
         3 000102   000000 220000 xsym               LDX0    DAF$WRITE
         3 000103   000022 631400 xsym               EPPR1   B_VECTNIL+18
         3 000104   000000 701010                    TSX1    0,X0
         3 000105   000000 011000                    NOP     0

PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:13   
       70     1069    1                                         VECTOR(RVBUFF.S_PNO),
       71     1070    1                                         VECTOR(RVBUFF.UTS1));
       72     1071    1           CALL DAF$WRITE(VECTOR(SSFRAMEHDR));

   1071  3 000106   000014 630400 4                  EPPR0   12
         3 000107   000000 220000 xsym               LDX0    DAF$WRITE
         3 000110   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000111   000000 701010                    TSX1    0,X0
         3 000112   000000 011000                    NOP     0

       73     1072    1           CALL DAB$SSFRAME(RVBUFF.SSFRAME);

   1072  3 000113   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000114   000040 036003                    ADLQ    32,DU
         3 000115   200042 756100                    STQ     ERRBUF+30,,AUTO
         3 000116   200042 630500                    EPPR0   ERRBUF+30,,AUTO
         3 000117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000120   000000 701000 xent               TSX1    DAB$SSFRAME
         3 000121   000000 011000                    NOP     0

       74     1073    1           CALL DAF$WRITE(VECTOR(RVBMORE),

   1073  3 000122   000006 235000 4                  LDA     6
         3 000123   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000124   000020 036003                    ADLQ    16,DU
         3 000125   200042 757100                    STAQ    ERRBUF+30,,AUTO
         3 000126   000006 235000 4                  LDA     6
         3 000127   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000130   000022 036003                    ADLQ    18,DU
         3 000131   200044 757100                    STAQ    ERRBUF+32,,AUTO
         3 000132   000006 235000 4                  LDA     6
         3 000133   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000134   000024 036003                    ADLQ    20,DU
         3 000135   200046 757100                    STAQ    ERRBUF+34,,AUTO
         3 000136   000006 235000 4                  LDA     6
         3 000137   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000140   000036 036003                    ADLQ    30,DU
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:14   
         3 000141   200050 757100                    STAQ    ERRBUF+36,,AUTO
         3 000142   777640 235007                    LDA     -96,DL
         3 000143   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000144   000472 036003                    ADLQ    314,DU
         3 000145   200054 757100                    STAQ    ERRBUF+40,,AUTO
         3 000146   200042 237100                    LDAQ    ERRBUF+30,,AUTO
         3 000147   200052 757100                    STAQ    ERRBUF+38,,AUTO
         3 000150   200044 237100                    LDAQ    ERRBUF+32,,AUTO
         3 000151   200056 757100                    STAQ    ERRBUF+42,,AUTO
         3 000152   200046 237100                    LDAQ    ERRBUF+34,,AUTO
         3 000153   200060 757100                    STAQ    ERRBUF+44,,AUTO
         3 000154   200050 237100                    LDAQ    ERRBUF+36,,AUTO
         3 000155   200062 757100                    STAQ    ERRBUF+46,,AUTO
         3 000156   200054 237100                    LDAQ    ERRBUF+40,,AUTO
         3 000157   200064 757100                    STAQ    ERRBUF+48,,AUTO
         3 000160   200064 630500                    EPPR0   ERRBUF+48,,AUTO
         3 000161   200073 450500                    STP0    ERRBUF+55,,AUTO
         3 000162   200062 631500                    EPPR1   ERRBUF+46,,AUTO
         3 000163   200072 451500                    STP1    ERRBUF+54,,AUTO
         3 000164   200060 633500                    EPPR3   ERRBUF+44,,AUTO
         3 000165   200071 453500                    STP3    ERRBUF+53,,AUTO
         3 000166   200056 634500                    EPPR4   ERRBUF+42,,AUTO
         3 000167   200070 454500                    STP4    ERRBUF+52,,AUTO
         3 000170   200052 635500                    EPPR5   ERRBUF+38,,AUTO
         3 000171   200067 455500                    STP5    ERRBUF+51,,AUTO
         3 000172   000020 236000 4                  LDQ     16
         3 000173   200066 756100                    STQ     ERRBUF+50,,AUTO
         3 000174   200066 630500                    EPPR0   ERRBUF+50,,AUTO
         3 000175   000000 220000 xsym               LDX0    DAF$WRITE
         3 000176   000024 631400 xsym               EPPR1   B_VECTNIL+20
         3 000177   000000 701010                    TSX1    0,X0
         3 000200   000000 011000                    NOP     0

       75     1074    1                          VECTOR(RVBUFF.SSR),
       76     1075    1                          VECTOR(RVBUFF.PSR),
       77     1076    1                          VECTOR(RVBUFF.ASR),
       78     1077    1                          VECTOR(RVBUFF.WSR),
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:15   
       79     1078    1                          VECTOR(RVBUFF.CURCG.CG$));
       80     1079    1           TRAPSS='0'B;

   1079  3 000201   200003 450100                    STZ     TRAPSS,,AUTO

       81     1080    2           IF RVBUFF.CLSFTRAP THEN DO;

   1080  3 000202   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000203   000003 236100                    LDQ     3,,PR0
         3 000204   000200 316007                    CANQ    128,DL
         3 000205   000215 600000 3                  TZE     s:1084

       82     1081    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(CLSFTRAP));

   1081  3 000206   000026 630400 4                  EPPR0   22
         3 000207   000000 220000 xsym               LDX0    DAF$WRITE
         3 000210   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000211   000000 701010                    TSX1    0,X0
         3 000212   000000 011000                    NOP     0

       83     1082    2              TRAPSS='1'B;

   1082  3 000213   400000 236003                    LDQ     -131072,DU
         3 000214   200003 756100                    STQ     TRAPSS,,AUTO

       84     1083    2              END;

       85     1084    2           IF RVBUFF.CFUTRAP THEN DO;

   1084  3 000215   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000216   000003 236100                    LDQ     3,,PR0
         3 000217   000100 316007                    CANQ    64,DL
         3 000220   000230 600000 3                  TZE     s:1088

       86     1085    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(CLSFTRAP));

   1085  3 000221   000026 630400 4                  EPPR0   22
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:16   
         3 000222   000000 220000 xsym               LDX0    DAF$WRITE
         3 000223   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000224   000000 701010                    TSX1    0,X0
         3 000225   000000 011000                    NOP     0

       87     1086    2              TRAPSS='1'B;

   1086  3 000226   400000 236003                    LDQ     -131072,DU
         3 000227   200003 756100                    STQ     TRAPSS,,AUTO

       88     1087    2              END;

       89     1088    2           IF RVBUFF.NIOTRAP THEN DO;

   1088  3 000230   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000231   000003 236100                    LDQ     3,,PR0
         3 000232   000020 316007                    CANQ    16,DL
         3 000233   000243 600000 3                  TZE     s:1092

       90     1089    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(NIOTRAP));

   1089  3 000234   000032 630400 4                  EPPR0   26
         3 000235   000000 220000 xsym               LDX0    DAF$WRITE
         3 000236   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000237   000000 701010                    TSX1    0,X0
         3 000240   000000 011000                    NOP     0

       91     1090    2              TRAPSS='1'B;

   1090  3 000241   400000 236003                    LDQ     -131072,DU
         3 000242   200003 756100                    STQ     TRAPSS,,AUTO

       92     1091    2              END;

       93     1092    2           IF RVBUFF.MONDTRAP THEN DO;

   1092  3 000243   000000 470400 xsym               LDP0    DA_RVBUF$
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:17   
         3 000244   000003 236100                    LDQ     3,,PR0
         3 000245   000010 316007                    CANQ    8,DL
         3 000246   000256 600000 3                  TZE     s:1096

       94     1093    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(MONDTRAP));

   1093  3 000247   000036 630400 4                  EPPR0   30
         3 000250   000000 220000 xsym               LDX0    DAF$WRITE
         3 000251   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000252   000000 701010                    TSX1    0,X0
         3 000253   000000 011000                    NOP     0

       95     1094    2              TRAPSS='1'B;

   1094  3 000254   400000 236003                    LDQ     -131072,DU
         3 000255   200003 756100                    STQ     TRAPSS,,AUTO

       96     1095    2              END;

       97     1096    2           IF RVBUFF.MONJITBAD THEN DO;

   1096  3 000256   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000257   000003 236100                    LDQ     3,,PR0
         3 000260   000002 316007                    CANQ    2,DL
         3 000261   000267 600000 3                  TZE     s:1099

       98     1097    2              CALL DAF$WRITE(VECTOR(MONJITBAD));

   1097  3 000262   000042 630400 4                  EPPR0   34
         3 000263   000000 220000 xsym               LDX0    DAF$WRITE
         3 000264   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000265   000000 701010                    TSX1    0,X0
         3 000266   000000 011000                    NOP     0

       99     1098    2              END;

      100     1099    2           IF RVBUFF.MONPG0BAD THEN DO;
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:18   

   1099  3 000267   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000270   000003 236100                    LDQ     3,,PR0
         3 000271   000001 316007                    CANQ    1,DL
         3 000272   000300 600000 3                  TZE     s:1102

      101     1100    2              CALL DAF$WRITE(VECTOR(MONPG0BAD));

   1100  3 000273   000046 630400 4                  EPPR0   38
         3 000274   000000 220000 xsym               LDX0    DAF$WRITE
         3 000275   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000276   000000 701010                    TSX1    0,X0
         3 000277   000000 011000                    NOP     0

      102     1101    2              END;

      103     1102    2           IF TRAPSS THEN DO;

   1102  3 000300   200003 234100                    SZN     TRAPSS,,AUTO
         3 000301   000316 605000 3                  TPL     s:1106

      104     1103    2              CALL DAF$WRITE(VECTOR(RCVRSS));

   1103  3 000302   000052 630400 4                  EPPR0   42
         3 000303   000000 220000 xsym               LDX0    DAF$WRITE
         3 000304   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000305   000000 701010                    TSX1    0,X0
         3 000306   000000 011000                    NOP     0

      105     1104    2              CALL DAB$SSFRAME(RVBUFF.RCVRTRAP);

   1104  3 000307   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000310   001700 036003                    ADLQ    960,DU
         3 000311   200042 756100                    STQ     ERRBUF+30,,AUTO
         3 000312   200042 630500                    EPPR0   ERRBUF+30,,AUTO
         3 000313   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000314   000000 701000 xent               TSX1    DAB$SSFRAME
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:19   
         3 000315   000000 011000                    NOP     0

      106     1105    2              END;

      107     1106    2           IF RVBUFF.AJITTR THEN DO;

   1106  3 000316   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000317   000003 236100                    LDQ     3,,PR0
         3 000320   000004 316007                    CANQ    4,DL
         3 000321   000341 600000 3                  TZE     s:1111

      108     1107    2              CALL DAF$NEWPAGE;

   1107  3 000322   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000323   000000 701000 xent               TSX1    DAF$NEWPAGE
         3 000324   000000 011000                    NOP     0

      109     1108    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(AJITTR));

   1108  3 000325   000056 630400 4                  EPPR0   46
         3 000326   000000 220000 xsym               LDX0    DAF$WRITE
         3 000327   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000330   000000 701010                    TSX1    0,X0
         3 000331   000000 011000                    NOP     0

      110     1109    2              CALL DAU$DUMPFRAME(RVBUFF.AJITTRAP);

   1109  3 000332   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000333   001574 036003                    ADLQ    892,DU
         3 000334   200042 756100                    STQ     ERRBUF+30,,AUTO
         3 000335   200042 630500                    EPPR0   ERRBUF+30,,AUTO
         3 000336   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000337   000000 701000 xent               TSX1    DAU$DUMPFRAME
         3 000340   000000 011000                    NOP     0

      111     1110    2              END;

PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:20   
      112     1111    2           IF RVBUFF.RCVR2TR THEN DO;

   1111  3 000341   000000 470400 xsym               LDP0    DA_RVBUF$
         3 000342   000003 236100                    LDQ     3,,PR0
         3 000343   001000 316007                    CANQ    512,DL
         3 000344   000364 600000 3                  TZE     ALT

      113     1112    2              CALL DAF$NEWPAGE;

   1112  3 000345   000002 631400 xsym               EPPR1   B_VECTNIL+2
         3 000346   000000 701000 xent               TSX1    DAF$NEWPAGE
         3 000347   000000 011000                    NOP     0

      114     1113    2              CALL DAF$WRITE(VECTOR(RCVRTRAP),VECTOR(RCVR2TRAP));

   1113  3 000350   000062 630400 4                  EPPR0   50
         3 000351   000000 220000 xsym               LDX0    DAF$WRITE
         3 000352   000020 631400 xsym               EPPR1   B_VECTNIL+16
         3 000353   000000 701010                    TSX1    0,X0
         3 000354   000000 011000                    NOP     0

      115     1114    2              CALL DAU$DUMPFRAME(RVBUFF.RCVR2TRAP);

   1114  3 000355   000000 236000 xsym               LDQ     DA_RVBUF$
         3 000356   001470 036003                    ADLQ    824,DU
         3 000357   200042 756100                    STQ     ERRBUF+30,,AUTO
         3 000360   200042 630500                    EPPR0   ERRBUF+30,,AUTO
         3 000361   000017 631400 xsym               EPPR1   B_VECTNIL+15
         3 000362   000000 701000 xent               TSX1    DAU$DUMPFRAME
         3 000363   000000 011000                    NOP     0

      116     1115    2              END;

      117     1116    1   ALT:    RETURN;

   1116  3 000364   000000 702200 xent  ALT          TSX2  ! X66_ARET
      118     1117    1   END DAD$RECOVERY;
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:21   
      119     1118        %EOD;

PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:22   
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   DA_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   DA_FORMAT_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_FORMAT_C.:E05TOU  is referenced.
   DA_ANLZ_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure DAD$RECOVERY.
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:23   

 **** Variables and constants ****

  ****  Section 001  Data  DAD$RECOVERY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    16-0-0/d STRC(936)   r     1 FPT_ERRMSG                 0-0-0/w STRC(288)   r     1 REPORT
    10-0-0/c STRC(189)   r     1 REPORTTX00                50-0-0/c STRC(72)    r     1 SCRMSG
    52-0-0/c STRC(72)    r     1 SYSACCT                   54-0-0/d STRC(144)   r     1 VLR_ERRMSG

  ****  Section 002 RoData DAD$RECOVERY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   106-0-0/c CHAR(10)    r     1 AJITTR                    74-0-0/c CHAR(8)     r     1 CLSFTRAP
    13-0-0/c CHAR(55)    r     1 CUNFMT                   103-0-0/c CHAR(11)    r     1 MONDTRAP
   113-0-0/c CHAR(26)    r     1 MONJITBAD                122-0-0/c CHAR(29)    r     1 MONPG0BAD
   100-0-0/c CHAR(10)    r     1 NIOTRAP                  111-0-0/c CHAR(5)     r     1 RCVR2TRAP
   132-0-0/c CHAR(31)    r     1 RCVRSS                    67-0-0/c CHAR(19)    r     1 RCVRTRAP
    31-0-0/c CHAR(120)   r     1 RVBMORE                    0-0-0/c CHAR(17)    r     1 SCODEFMT
     5-0-0/c CHAR(22)    r     1 SSFRAMEHDR

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/c CHAR(120)   r     1 ERRBUF                     3-0-0/w BIT         r     1 TRAPSS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 DAF$WRITE                  0-0-0/w UBIN        r     1 DAF_DCB#
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:24   
     0-0-0/w STRC        r     1 DA_ANLZERR                 0-0-0/w BIT         r     1 DA_DUMPFILE
     0-0-0/w PTR         r     1 DA_RVBUF$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(36864) r     1 RVBUFF


   Procedure DAD$RECOVERY requires 245 words for executable code.
   Procedure DAD$RECOVERY requires 60 words of local(AUTO) storage.
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:25   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:26   
          MINI XREF LISTING

AJITTR
      1046**DCL      1108--CALL
ALT
      1116**LABEL    1060--CALLALT
CLSFTRAP
      1042**DCL      1081--CALL     1085--CALL
CUNFMT
      1036**DCL      1068--CALL
DAB$SSFRAME
       836**DCL-ENT  1072--CALL     1104--CALL
DAF$INIT
       832**DCL-ENT  1060--CALL
DAF$NEWPAGE
       834**DCL-ENT  1107--CALL     1112--CALL
DAF$UPDLNCNT
       835**DCL-ENT  1067--CALL
DAF$WRITE
       833**DCL      1061>>CALL     1068>>CALL     1071>>CALL     1073>>CALL     1081>>CALL     1085>>CALL
      1089>>CALL     1093>>CALL     1097>>CALL     1100>>CALL     1103>>CALL     1108>>CALL     1113>>CALL
DAF_DCB#
       302**DCL      1064>>ASSIGN
DAU$DUMPFRAME
       837**DCL-ENT  1109--CALL     1114--CALL
DA_ANLZERR
        47**DCL      1053<<ASSIGN
DA_ANLZERR.CODE
        47**DCL      1054<<ASSIGN
DA_DUMPFILE
        24**DCL      1052>>IF
DA_FMTSEG.P
       303**DCL       303--REDEF
DA_MAPSEG.P
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:27   
        34**DCL        35--REDEF
DA_RVBUF$
        26**DCL       999--IMP-PTR  1063>>ASSIGN   1065>>ASSIGN   1068>>CALL     1068>>CALL     1068>>CALL
      1072>>CALL     1073>>CALL     1073>>CALL     1073>>CALL     1073>>CALL     1073>>CALL     1080>>IF
      1084>>IF       1088>>IF       1092>>IF       1096>>IF       1099>>IF       1104>>CALL     1106>>IF
      1109>>CALL     1111>>IF       1114>>CALL
DA_SDASN.DESC.TYPE0
        19**DCL        19--REDEF
DA_TIGRSEG.P
        35**DCL        36--REDEF
ERRBUF
       997**DCL      1062--ASSIGN
FPT_ERRMSG
       919**DCL      1066<>CALL
FPT_ERRMSG.BUF_
       919**DCL      1062<<ASSIGN
FPT_ERRMSG.CODE_
       919**DCL      1063<<ASSIGN
FPT_ERRMSG.V
       923**DCL       919--DCLINIT
FPT_ERRMSG.V.OUTDCB1#
       924**DCL      1064<<ASSIGN
M$ERRMSG
       378**DCL-ENT  1066--CALL
MONDTRAP
      1045**DCL      1093--CALL
MONJITBAD
      1048**DCL      1097--CALL
MONPG0BAD
      1049**DCL      1100--CALL
NIOTRAP
      1044**DCL      1089--CALL
RCVR2TRAP
      1047**DCL      1113--CALL
RCVRSS
      1050**DCL      1103--CALL
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:28   
RCVRTRAP
      1041**DCL      1081--CALL     1085--CALL     1089--CALL     1093--CALL     1108--CALL     1113--CALL
REPORT
       858**DCL      1060<>CALL
REPORTTX00
       901**DCL       888--DCLINIT
RVBMORE
      1038**DCL      1073--CALL
RVBUFF.AJITTR
      1000**DCL      1106>>IF
RVBUFF.AJITTRAP
      1031**DCL      1109<>CALL
RVBUFF.ASR
      1005**DCL      1073--CALL
RVBUFF.CFUTRAP
      1000**DCL      1084>>IF
RVBUFF.CLSFTRAP
      1000**DCL      1080>>IF
RVBUFF.CUN
      1009**DCL      1068--CALL
RVBUFF.CURCG.CG$
      1022**DCL      1073--CALL
RVBUFF.MONDTRAP
      1000**DCL      1092>>IF
RVBUFF.MONJITBAD
      1000**DCL      1096>>IF
RVBUFF.MONPG0BAD
      1001**DCL      1099>>IF
RVBUFF.NIOTRAP
      1000**DCL      1088>>IF
RVBUFF.PSR
      1004**DCL      1073--CALL
RVBUFF.RCODE
      1002**DCL      1063--ASSIGN
RVBUFF.RCODE.MON
      1003**DCL      1065<<ASSIGN
PL6.E3A0      #001=DAD$RECOVERY File=DAD$RVBUF.:E05TSI                           TUE 07/29/97 12:45 Page:29   
RVBUFF.RCVR2TR
       999**DCL      1111>>IF
RVBUFF.RCVR2TRAP
      1031**DCL      1114<>CALL
RVBUFF.RCVRTRAP
      1032**DCL      1104<>CALL
RVBUFF.SSFRAME
      1009**DCL      1072<>CALL
RVBUFF.SSR
      1003**DCL      1073--CALL
RVBUFF.S_PNO
      1010**DCL      1068--CALL
RVBUFF.UTS1
      1001**DCL      1068--CALL
RVBUFF.WSR
      1009**DCL      1073--CALL
SCODEFMT
      1034**DCL      1061--CALL
SCRMSG
       960**DCL       920--DCLINIT
SSFRAMEHDR
      1035**DCL      1071--CALL
SYSACCT
       973**DCL       920--DCLINIT
TRAPSS
       839**DCL      1079<<ASSIGN   1082<<ASSIGN   1086<<ASSIGN   1090<<ASSIGN   1094<<ASSIGN   1102>>IF
VLR_ERRMSG
       986**DCL       923--DCLINIT

PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:30   
      120        1        /*T***********************************************************/
      121        2        /*T*                                                         */
      122        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      123        4        /*T*                                                         */
      124        5        /*T***********************************************************/
      125        6        DAD$RVBUF: PROC;
      126        7        /**/
      127        8        %INCLUDE DA_ANLZ_R;
      128       21        %INCLUDE DA_MAP_R;
      129       51        %INCLUDE DA_FORMAT_C;
      130      293        %INCLUDE DA_PERR_C;
      131      357        %INCLUDE IR_DATA_M;
      132      521        %INCLUDE NI$TABLES;
      133      737        /**/
      134      738        %REPORT (NAME=REPORT,TITLE='RECOVERY BUFFER');
      135      804        %RV_BUFF (NAME=RVBUFF,STCLASS="BASED(DA_RVBUF$)");
      136      840        /**/
      137      841    1   DCL DAF$INIT ENTRY(1) ALTRET;
      138      842    1   DCL DAB$OCTDUMP ENTRY(5);
      139      843        %EJECT;
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:31   
      140      844    2           IF NOT DA_DUMPFILE THEN DO;
      141      845    2              DA_ANLZERR='040104000000'O;
      142      846    2              DA_ANLZERR.CODE=%E$DA_NO_RVBUF;
      143      847    2              RETURN;
      144      848    2              END;
      145      849    1           CALL DAF$INIT(REPORT) ALTRET(ALT);
      146      850    1           CALL DAB$OCTDUMP(RVBUFF,SIZEW(RVBUFF),0,'0'B);
      147      851    1   ALT:    RETURN;
      148      852    1   END DAD$RVBUF;
      149      853        %EOD;

PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:32   
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   DA_PERR_C.:E05TOU  is referenced.
   DA_FORMAT_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_ANLZ_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAD$RVBUF.

   Procedure DAD$RVBUF requires 24 words for executable code.
   Procedure DAD$RVBUF requires 8 words of local(AUTO) storage.

PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:33   

 Object Unit name= DAD$RVBUF                                  File name= DAD$RVBUF.:E05TOU
 UTS= JUL 29 '97 12:46:00.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    12     14  DAD$RVBUF
    1  RoData even  UTS      1      1  DAD$RVBUF
    2   Proc  even  none    24     30  DAD$RVBUF
    3  RoData even  none     6      6  DAD$RVBUF

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        0  DAD$RVBUF

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 DAF$INIT
         yes           Std       5 DAB$OCTDUMP
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:34   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_ANLZERR                            DA_DUMPFILE                           DA_RVBUF$
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:35   


      120        1        /*T***********************************************************/
      121        2        /*T*                                                         */
      122        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      123        4        /*T*                                                         */
      124        5        /*T***********************************************************/
      125        6        DAD$RVBUF: PROC;

      6  2 000000   000000 700200 xent  DAD$RVBUF    TSX0  ! X66_AUTO_0
         2 000001   000010 000000                    ZERO    8,0

      126        7        /**/
      127        8        %INCLUDE DA_ANLZ_R;
      128       21        %INCLUDE DA_MAP_R;
      129       51        %INCLUDE DA_FORMAT_C;
      130      293        %INCLUDE DA_PERR_C;
      131      357        %INCLUDE IR_DATA_M;
      132      521        %INCLUDE NI$TABLES;
      133      737        /**/
      134      738        %REPORT (NAME=REPORT,TITLE='RECOVERY BUFFER');
      135      804        %RV_BUFF (NAME=RVBUFF,STCLASS="BASED(DA_RVBUF$)");
      136      840        /**/
      137      841    1   DCL DAF$INIT ENTRY(1) ALTRET;
      138      842    1   DCL DAB$OCTDUMP ENTRY(5);
      139      843        %EJECT;
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:36   
      140      844    2           IF NOT DA_DUMPFILE THEN DO;

    844  2 000002   000000 234000 xsym               SZN     DA_DUMPFILE
         2 000003   000012 604000 2                  TMI     s:849

      141      845    2              DA_ANLZERR='040104000000'O;

    845  2 000004   000000 236000 1                  LDQ     0
         2 000005   000000 756000 xsym               STQ     DA_ANLZERR

      142      846    2              DA_ANLZERR.CODE=%E$DA_NO_RVBUF;

    846  2 000006   000000 376000 3                  ANQ     0
         2 000007   004550 276007                    ORQ     2408,DL
         2 000010   000000 756000 xsym               STQ     DA_ANLZERR

      143      847    2              RETURN;

    847  2 000011   000000 702200 xent               TSX2  ! X66_ARET

      144      848    2              END;
      145      849    1           CALL DAF$INIT(REPORT) ALTRET(ALT);

    849  2 000012   000001 630400 3                  EPPR0   1
         2 000013   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000014   000000 701000 xent               TSX1    DAF$INIT
         2 000015   000027 702000 2                  TSX2    ALT

      146      850    1           CALL DAB$OCTDUMP(RVBUFF,SIZEW(RVBUFF),0,'0'B);

    850  2 000016   000004 237000 3                  LDAQ    4
         2 000017   200006 757100                    STAQ    6,,AUTO
         2 000020   000003 236000 3                  LDQ     3
         2 000021   000000 235000 xsym               LDA     DA_RVBUF$
         2 000022   200004 757100                    STAQ    4,,AUTO
         2 000023   200004 630500                    EPPR0   4,,AUTO
         2 000024   000022 631400 xsym               EPPR1   B_VECTNIL+18
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:37   
         2 000025   000000 701000 xent               TSX1    DAB$OCTDUMP
         2 000026   000000 011000                    NOP     0

      147      851    1   ALT:    RETURN;

    851  2 000027   000000 702200 xent  ALT          TSX2  ! X66_ARET
      148      852    1   END DAD$RVBUF;
      149      853        %EOD;

PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:38   
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   IR_DATA_M.:E05TOU  is referenced.
   DA_PERR_C.:E05TOU  is referenced.
   DA_FORMAT_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_ANLZ_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAD$RVBUF.
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:39   

 **** Variables and constants ****

  ****  Section 000  Data  DAD$RVBUF

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)   r     1 REPORT                    10-0-0/c STRC(144)   r     1 REPORTTX00

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC        r     1 DA_ANLZERR                 0-0-0/w BIT         r     1 DA_DUMPFILE
     0-0-0/w PTR         r     1 DA_RVBUF$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(36864) r     1 RVBUFF


   Procedure DAD$RVBUF requires 24 words for executable code.
   Procedure DAD$RVBUF requires 8 words of local(AUTO) storage.
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:40   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=DAD$RVBUF File=DAD$RVBUF.:E05TSI                              TUE 07/29/97 12:46 Page:41   
          MINI XREF LISTING

ALT
       851**LABEL     849--CALLALT
DAB$OCTDUMP
       842**DCL-ENT   850--CALL
DAF$INIT
       841**DCL-ENT   849--CALL
DA_ANLZERR
        16**DCL       845<<ASSIGN
DA_ANLZERR.CODE
        16**DCL       846<<ASSIGN
DA_DUMPFILE
        36**DCL       844>>IF
DA_MAPSEG.P
        46**DCL        47--REDEF
DA_RVBUF$
        38**DCL       805--IMP-PTR   850>>CALL
DA_SDASN.DESC.TYPE0
        31**DCL        31--REDEF
DA_TIGRSEG.P
        47**DCL        48--REDEF
REPORT
       755**DCL       849<>CALL
REPORTTX00
       798**DCL       785--DCLINIT
RVBUFF
       805**DCL       850<>CALL      850--CALL

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:42   
      150        1        /*T***********************************************************/
      151        2        /*T*                                                         */
      152        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      153        4        /*T*                                                         */
      154        5        /*T***********************************************************/
      155        6        DAD$MPDUMP: PROC(TOP$);
      156        7        /**/
      157        8    1   DCL TOP$ PTR;
      158        9        /**/
      159       10        %INCLUDE DA_ANLZ_R;
      160       23        %INCLUDE DA_MAP_R;
      161       53        %INCLUDE DA_FORMAT_C;
      162      295        %INCLUDE DA_TEXTC_C;
      163      326        %INCLUDE DA_MONSYM_C;
      164      377        %INCLUDE XU_MACRO_C;
      165     3483        /**/
      166     3484    1   DCL DAM$MAP ENTRY(5) ALTRET;
      167     3485    1   DCL DAM$USECPU ENTRY(1) ALTRET;
      168     3486    1   DCL DAB$DUMPCMD ENTRY(1);
      169     3487    1   DCL X$PARSE ENTRY(1) ALTRET;
      170     3488    1   DCL DAS$SDMONPTR ENTRY(2) ALTRET;
      171     3489        /**/
      172     3490    1   DCL WORK(0:199) SBIN;
      173     3491    1   DCL CMD CHAR(80);
      174     3492        %P_PCB (STCLASS=STATIC,R=ANLZ_CMD,WSZ=200);
      175     3691        %P$PCB (STCLASS=AUTO,NAME=PCB);
      176     3892    1   DCL ANLZ_CMD SBIN SYMREF;
      177     3893        %PARSE$OUT (NAME=OUT,STCLASS=BASED);
      178     3938    1   DCL OUT$ PTR;
      179     3939        /**/
      180     3940    1   DCL PTYPE(0:7) SBIN;
      181     3941    1   DCL PTYPE$ PTR;
      182     3942    1   DCL PTYPEB(0:7) SBIN BASED ALIGNED;
      183     3943    1   DCL SAVECPU SBIN;
      184     3944    1   DCL SAVETRTN REMEMBER ;
      185     3945        /**/
      186     3946    1   DCL I SBIN;
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:43   
      187     3947    1   DCL C# SBIN;
      188     3948    1   DCL CPU# CHAR(1);
      189     3949    1   DCL S1 CHAR(0) CONSTANT INIT(' FOR CPU ');
      190     3950    1   DCL CMDS(0:4) CHAR(30) CONSTANT INIT(
      191     3951    1   'DUMP $LS31     ''MON PAGE TABLE',
      192     3952    1   'DUMP $LS35           ''MON HJIT',
      193     3953    1   'DUMP $LS34            ''MON JIT',
      194     3954    1   'AUTO $LS33         ''MON TSTACK',
      195     3955    1   'DUMP $LS0,1024 ''PROCESSOR PAGE');
      196     3956    1           SAVECPU=DA_CPU#;
      197     3957    1           SAVETRTN=DA_TRTN;
      198     3958    1           REMEMBER ABORTCMD IN DA_TRTN;
      199     3959    1           CALL DAS$SDMONPTR(%M#S_PTYPE,PTYPE$) ALTRET(ALT);
      200     3960    1           CALL DAM$MAP(PTYPE$,PTYPE$,,,DA_MONISDATA) ALTRET(ALT);
      201     3961    1           PTYPE=PTYPE$->PTYPEB;
      202     3962    1           PCB=P_PCB;
      203     3963    1           PCB.WORK$=ADDR(WORK);
      204     3964    1           PCB.WKSZ=SIZEW(WORK);
      205     3965    1           PCB.TEXT$=ADDR(CMD);
      206     3966    1           PCB.NCHARS=SIZEC(CMD);
      207     3967    2           DO C#=0 TO 5;
      208     3968    3              IF C#~=SAVECPU AND PTYPE(C#)~=-1 THEN DO;
      209     3969    3                 CALL BINCHAR(CPU#,C#);
      210     3970    3                 CALL DAM$USECPU(C#) ALTRET(NXTCPU);
      211     3971    4                 DO I=0 TO 4;
      212     3972    4                    CALL CONCAT(CMD,CMDS(I),S1,CPU#,'''');
      213     3973    4                    CALL X$PARSE(PCB) ALTRET(PARSEALT);
      214     3974    4                    OUT$=PCB.OUT$->OUT.SUBLK$(0)->OUT.SUBLK$(0);
      215     3975    4                    CALL DAB$DUMPCMD(OUT$->OUT);
      216     3976    4                    END;
      217     3977    3   NXTCPU:       END;
      218     3978    2              END;
      219     3979    1           IF SAVECPU~=DA_CPU# THEN CALL DAM$USECPU(SAVECPU);
      220     3980    1           RETURN;
      221     3981    1   PARSEALT:
      222     3982    1           DA_ANLZERR=PCB.ERROR;
      223     3983    1   ALT:    IF SAVECPU~=DA_CPU# THEN CALL DAM$USECPU(SAVECPU);
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:44   
      224     3984    1           RETURN;
      225     3985    1   ABORTCMD:
      226     3986    1           CALL DAM$USECPU(SAVECPU);
      227     3987    1           DA_TRTN=SAVETRTN;
      228     3988    1           UNWIND TO DA_TRTN;
      229     3989    1   END DAD$MPDUMP;

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:45   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   DA_MONSYM_C.:E05TOU  is referenced.
   DA_TEXTC_C.:E05TOU  is referenced.
   DA_FORMAT_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_ANLZ_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAD$MPDUMP.

   Procedure DAD$MPDUMP requires 131 words for executable code.
   Procedure DAD$MPDUMP requires 262 words of local(AUTO) storage.

    No errors detected in file DAD$RVBUF.:E05TSI    .

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:46   

 Object Unit name= DAD$MPDUMP                                 File name= DAD$RVBUF.:E05TOU
 UTS= JUL 29 '97 12:46:03.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none    14     16  DAD$MPDUMP
    1  RoData even  UTS     41     51  DAD$MPDUMP
    2   Proc  even  none   131    203  DAD$MPDUMP
    3  RoData even  none     3      3  DAD$MPDUMP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  DAD$MPDUMP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DAS$SDMONPTR
 yes     yes           Std       5 DAM$MAP
         yes           Std       1 DAB$DUMPCMD
 yes     yes           Std       1 DAM$USECPU
 yes     yes           Std       1 X$PARSE
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AUNWIND
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:47   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     DA_ANLZERR                            DA_CPU#                               DA_MONISDATA
     DA_TRTN                               ANLZ_CMD                              B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:48   


      150        1        /*T***********************************************************/
      151        2        /*T*                                                         */
      152        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      153        4        /*T*                                                         */
      154        5        /*T***********************************************************/
      155        6        DAD$MPDUMP: PROC(TOP$);

      6  2 000000   000000 700200 xent  DAD$MPDUMP   TSX0  ! X66_AUTO_1
         2 000001   000406 000001                    ZERO    262,1

      156        7        /**/
      157        8    1   DCL TOP$ PTR;
      158        9        /**/
      159       10        %INCLUDE DA_ANLZ_R;
      160       23        %INCLUDE DA_MAP_R;
      161       53        %INCLUDE DA_FORMAT_C;
      162      295        %INCLUDE DA_TEXTC_C;
      163      326        %INCLUDE DA_MONSYM_C;
      164      377        %INCLUDE XU_MACRO_C;
      165     3483        /**/
      166     3484    1   DCL DAM$MAP ENTRY(5) ALTRET;
      167     3485    1   DCL DAM$USECPU ENTRY(1) ALTRET;
      168     3486    1   DCL DAB$DUMPCMD ENTRY(1);
      169     3487    1   DCL X$PARSE ENTRY(1) ALTRET;
      170     3488    1   DCL DAS$SDMONPTR ENTRY(2) ALTRET;
      171     3489        /**/
      172     3490    1   DCL WORK(0:199) SBIN;
      173     3491    1   DCL CMD CHAR(80);
      174     3492        %P_PCB (STCLASS=STATIC,R=ANLZ_CMD,WSZ=200);
      175     3691        %P$PCB (STCLASS=AUTO,NAME=PCB);
      176     3892    1   DCL ANLZ_CMD SBIN SYMREF;
      177     3893        %PARSE$OUT (NAME=OUT,STCLASS=BASED);
      178     3938    1   DCL OUT$ PTR;
      179     3939        /**/
      180     3940    1   DCL PTYPE(0:7) SBIN;
      181     3941    1   DCL PTYPE$ PTR;
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:49   
      182     3942    1   DCL PTYPEB(0:7) SBIN BASED ALIGNED;
      183     3943    1   DCL SAVECPU SBIN;
      184     3944    1   DCL SAVETRTN REMEMBER ;
      185     3945        /**/
      186     3946    1   DCL I SBIN;
      187     3947    1   DCL C# SBIN;
      188     3948    1   DCL CPU# CHAR(1);
      189     3949    1   DCL S1 CHAR(0) CONSTANT INIT(' FOR CPU ');
      190     3950    1   DCL CMDS(0:4) CHAR(30) CONSTANT INIT(
      191     3951    1   'DUMP $LS31     ''MON PAGE TABLE',
      192     3952    1   'DUMP $LS35           ''MON HJIT',
      193     3953    1   'DUMP $LS34            ''MON JIT',
      194     3954    1   'AUTO $LS33         ''MON TSTACK',
      195     3955    1   'DUMP $LS0,1024 ''PROCESSOR PAGE');
      196     3956    1           SAVECPU=DA_CPU#;

   3956  2 000002   000000 235000 xsym               LDA     DA_CPU#
         2 000003   200370 755100                    STA     SAVECPU,,AUTO

      197     3957    1           SAVETRTN=DA_TRTN;

   3957  2 000004   000000 237000 xsym               LDAQ    DA_TRTN
         2 000005   200372 757100                    STAQ    SAVETRTN,,AUTO

      198     3958    1           REMEMBER ABORTCMD IN DA_TRTN;

   3958  2 000006   000170 635000 2                  EAA     ABORTCMD
         2 000007   000000 452400 xsym               STP2    DA_TRTN
         2 000010   000001 755000 xsym               STA     DA_TRTN+1

      199     3959    1           CALL DAS$SDMONPTR(%M#S_PTYPE,PTYPE$) ALTRET(ALT);

   3959  2 000011   200367 630500                    EPPR0   PTYPE$,,AUTO
         2 000012   200401 450500                    STP0    CPU#+3,,AUTO
         2 000013   000000 236000 3                  LDQ     0
         2 000014   200400 756100                    STQ     CPU#+2,,AUTO
         2 000015   200400 630500                    EPPR0   CPU#+2,,AUTO
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:50   
         2 000016   000020 631400 xsym               EPPR1   B_VECTNIL+16
         2 000017   000000 701000 xent               TSX1    DAS$SDMONPTR
         2 000020   000156 702000 2                  TSX2    ALT

      200     3960    1           CALL DAM$MAP(PTYPE$,PTYPE$,,,DA_MONISDATA) ALTRET(ALT);

   3960  2 000021   000001 236000 3                  LDQ     1
         2 000022   200404 756100                    STQ     CPU#+6,,AUTO
         2 000023   000001 236000 xsym               LDQ     B_VECTNIL+1
         2 000024   000001 235000 xsym               LDA     B_VECTNIL+1
         2 000025   200402 757100                    STAQ    CPU#+4,,AUTO
         2 000026   200367 630500                    EPPR0   PTYPE$,,AUTO
         2 000027   200401 450500                    STP0    CPU#+3,,AUTO
         2 000030   200367 631500                    EPPR1   PTYPE$,,AUTO
         2 000031   200400 451500                    STP1    CPU#+2,,AUTO
         2 000032   200400 630500                    EPPR0   CPU#+2,,AUTO
         2 000033   000023 631400 xsym               EPPR1   B_VECTNIL+19
         2 000034   000000 701000 xent               TSX1    DAM$MAP
         2 000035   000156 702000 2                  TSX2    ALT

      201     3961    1           PTYPE=PTYPE$->PTYPEB;

   3961  2 000036   200367 470500                    LDP0    PTYPE$,,AUTO
         2 000037   000100 100500                    MLR     fill='000'O
         2 000040   000000 000040                    ADSC9   0,,PR0                   cn=0,n=32
         2 000041   200357 000040                    ADSC9   PTYPE,,AUTO              cn=0,n=32

      202     3962    1           PCB=P_PCB;

   3962  2 000042   000100 100400                    MLR     fill='000'O
         2 000043   000000 000070 0                  ADSC9   P_PCB                    cn=0,n=56
         2 000044   200340 000070                    ADSC9   PCB,,AUTO                cn=0,n=56

      203     3963    1           PCB.WORK$=ADDR(WORK);

   3963  2 000045   200004 631500                    EPPR1   WORK,,AUTO
         2 000046   200342 451500                    STP1    PCB+2,,AUTO
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:51   

      204     3964    1           PCB.WKSZ=SIZEW(WORK);

   3964  2 000047   000310 220003                    LDX0    200,DU
         2 000050   200345 740100                    STX0    PCB+5,,AUTO

      205     3965    1           PCB.TEXT$=ADDR(CMD);

   3965  2 000051   200314 633500                    EPPR3   CMD,,AUTO
         2 000052   200340 453500                    STP3    PCB,,AUTO

      206     3966    1           PCB.NCHARS=SIZEC(CMD);

   3966  2 000053   000120 235007                    LDA     80,DL
         2 000054   200351 755100                    STA     PCB+9,,AUTO

      207     3967    2           DO C#=0 TO 5;

   3967  2 000055   200375 450100                    STZ     C#,,AUTO

      208     3968    3              IF C#~=SAVECPU AND PTYPE(C#)~=-1 THEN DO;

   3968  2 000056   200375 236100                    LDQ     C#,,AUTO
         2 000057   200370 116100                    CMPQ    SAVECPU,,AUTO
         2 000060   000136 600000 2                  TZE     NXTCPU
         2 000061   200357 235106                    LDA     PTYPE,QL,AUTO
         2 000062   000027 115000 xsym               CMPA    B_VECTNIL+23
         2 000063   000136 600000 2                  TZE     NXTCPU

      209     3969    3                 CALL BINCHAR(CPU#,C#);

   3969  2 000064   000100 301500                    BTD
         2 000065   200375 000004                    NDSC9   C#,,AUTO                 cn=0,s=lsgnf,sf=0,n=4
         2 000066   200376 030001                    NDSC9   CPU#,,AUTO               cn=0,s=nosgn,sf=0,n=1

      210     3970    3                 CALL DAM$USECPU(C#) ALTRET(NXTCPU);

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:52   
   3970  2 000067   200375 630500                    EPPR0   C#,,AUTO
         2 000070   200400 450500                    STP0    CPU#+2,,AUTO
         2 000071   200400 630500                    EPPR0   CPU#+2,,AUTO
         2 000072   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000073   000000 701000 xent               TSX1    DAM$USECPU
         2 000074   000136 702000 2                  TSX2    NXTCPU

      211     3971    4                 DO I=0 TO 4;

   3971  2 000075   200374 450100                    STZ     I,,AUTO

      212     3972    4                    CALL CONCAT(CMD,CMDS(I),S1,CPU#,'''');

   3972  2 000076   200374 236100                    LDQ     I,,AUTO
         2 000077   000036 402007                    MPY     30,DL
         2 000100   040100 100406                    MLR     fill='040'O
         2 000101   000003 000036 1                  ADSC9   CMDS,Q                   cn=0,n=30
         2 000102   200314 000036                    ADSC9   CMD,,AUTO                cn=0,n=30
         2 000103   040100 100400                    MLR     fill='040'O
         2 000104   000000 000011 1                  ADSC9   S1                       cn=0,n=9
         2 000105   200323 400011                    ADSC9   CMD+7,,AUTO              cn=2,n=9
         2 000106   200376 236100                    LDQ     CPU#,,AUTO
         2 000107   000033 772000                    QRL     27
         2 000110   200325 552104                    STBQ    CMD+9,'04'O,AUTO
         2 000111   040100 100400                    MLR     fill='040'O
         2 000112   000002 000001 3                  ADSC9   2                        cn=0,n=1
         2 000113   200326 000050                    ADSC9   CMD+10,,AUTO             cn=0,n=40

      213     3973    4                    CALL X$PARSE(PCB) ALTRET(PARSEALT);

   3973  2 000114   200340 630500                    EPPR0   PCB,,AUTO
         2 000115   200400 450500                    STP0    CPU#+2,,AUTO
         2 000116   200400 630500                    EPPR0   CPU#+2,,AUTO
         2 000117   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000120   000000 701000 xent               TSX1    X$PARSE
         2 000121   000154 702000 2                  TSX2    PARSEALT

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:53   
      214     3974    4                    OUT$=PCB.OUT$->OUT.SUBLK$(0)->OUT.SUBLK$(0);

   3974  2 000122   200343 470500                    LDP0    PCB+3,,AUTO
         2 000123   000003 471500                    LDP1    3,,PR0
         2 000124   100003 236100                    LDQ     3,,PR1
         2 000125   200356 756100                    STQ     OUT$,,AUTO

      215     3975    4                    CALL DAB$DUMPCMD(OUT$->OUT);

   3975  2 000126   200356 630500                    EPPR0   OUT$,,AUTO
         2 000127   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000130   000000 701000 xent               TSX1    DAB$DUMPCMD
         2 000131   000000 011000                    NOP     0

      216     3976    4                    END;

   3976  2 000132   200374 054100                    AOS     I,,AUTO
         2 000133   200374 235100                    LDA     I,,AUTO
         2 000134   000004 115007                    CMPA    4,DL
         2 000135   000076 604400 2                  TMOZ    s:3972

      217     3977    3   NXTCPU:       END;

   3977  2 000136                       NXTCPU       null
      218     3978    2              END;

   3978  2 000136   200375 054100                    AOS     C#,,AUTO
         2 000137   200375 235100                    LDA     C#,,AUTO
         2 000140   000005 115007                    CMPA    5,DL
         2 000141   000056 604400 2                  TMOZ    s:3968

      219     3979    1           IF SAVECPU~=DA_CPU# THEN CALL DAM$USECPU(SAVECPU);

   3979  2 000142   200370 236100                    LDQ     SAVECPU,,AUTO
         2 000143   000000 116000 xsym               CMPQ    DA_CPU#
         2 000144   000153 600000 2                  TZE     s:3980

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:54   
   3979  2 000145   200370 630500                    EPPR0   SAVECPU,,AUTO
         2 000146   200400 450500                    STP0    CPU#+2,,AUTO
         2 000147   200400 630500                    EPPR0   CPU#+2,,AUTO
         2 000150   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000151   000000 701000 xent               TSX1    DAM$USECPU
         2 000152   000000 011000                    NOP     0

      220     3980    1           RETURN;

   3980  2 000153   000000 702200 xent               TSX2  ! X66_ARET

      221     3981    1   PARSEALT:
      222     3982    1           DA_ANLZERR=PCB.ERROR;

   3982  2 000154   200346 236100       PARSEALT     LDQ     PCB+6,,AUTO
         2 000155   000000 756000 xsym               STQ     DA_ANLZERR

      223     3983    1   ALT:    IF SAVECPU~=DA_CPU# THEN CALL DAM$USECPU(SAVECPU);

   3983  2 000156   200370 236100       ALT          LDQ     SAVECPU,,AUTO
         2 000157   000000 116000 xsym               CMPQ    DA_CPU#
         2 000160   000167 600000 2                  TZE     s:3984

   3983  2 000161   200370 630500                    EPPR0   SAVECPU,,AUTO
         2 000162   200400 450500                    STP0    CPU#+2,,AUTO
         2 000163   200400 630500                    EPPR0   CPU#+2,,AUTO
         2 000164   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000165   000000 701000 xent               TSX1    DAM$USECPU
         2 000166   000000 011000                    NOP     0

      224     3984    1           RETURN;

   3984  2 000167   000000 702200 xent               TSX2  ! X66_ARET

      225     3985    1   ABORTCMD:
      226     3986    1           CALL DAM$USECPU(SAVECPU);

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:55   
   3986  2 000170   200370 630500       ABORTCMD     EPPR0   SAVECPU,,AUTO
         2 000171   200400 450500                    STP0    CPU#+2,,AUTO
         2 000172   200400 630500                    EPPR0   CPU#+2,,AUTO
         2 000173   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000174   000000 701000 xent               TSX1    DAM$USECPU
         2 000175   000000 011000                    NOP     0

      227     3987    1           DA_TRTN=SAVETRTN;

   3987  2 000176   200372 237100                    LDAQ    SAVETRTN,,AUTO
         2 000177   000000 757000 xsym               STAQ    DA_TRTN

      228     3988    1           UNWIND TO DA_TRTN;

   3988  2 000200   000000 237200 xsym               LDAQ  ! DA_TRTN
         2 000201   000000 700200 xent               TSX0  ! X66_AUNWIND
         2 000202   000000 000200                    ZERO    0,128
      229     3989    1   END DAD$MPDUMP;

PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:56   
--  Include file information  --

   XU_MACRO_C.:E05TOU  is referenced.
   DA_MONSYM_C.:E05TOU  is referenced.
   DA_TEXTC_C.:E05TOU  is referenced.
   DA_FORMAT_C.:E05TOU  is referenced.
   DA_MAP_R.:E05TOU  cannot be made into a system file and is referenced.
   DA_ANLZ_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DAD$MPDUMP.
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:57   

 **** Variables and constants ****

  ****  Section 000  Data  DAD$MPDUMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(504)   r     1 P_PCB

  ****  Section 001 RoData DAD$MPDUMP

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/c CHAR(30)    r     1 CMDS(0:4)                  0-0-0/c CHAR(9)     r     1 S1

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @TOP$                    375-0-0/w SBIN        r     1 C#
   314-0-0/c CHAR(80)    r     1 CMD                      376-0-0/c CHAR        r     1 CPU#
   374-0-0/w SBIN        r     1 I                        356-0-0/w PTR         r     1 OUT$
   340-0-0/w STRC(504)   r     1 PCB                      357-0-0/w SBIN        r     1 PTYPE(0:7)
   367-0-0/w PTR         r     1 PTYPE$                   370-0-0/w SBIN        r     1 SAVECPU
   372-0-0/d REMB        r     1 SAVETRTN                  *0-0-0/w PTR         r     1 TOP$
     4-0-0/w SBIN        r     1 WORK(0:199)

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN        r     1 ANLZ_CMD                   0-0-0/w STRC        r     1 DA_ANLZERR
     0-0-0/w SBIN        r     1 DA_CPU#                    0-0-0/b BIT (72)    r     1 DA_MONISDATA
     0-0-0/d REMB        r     1 DA_TRTN
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:58   

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 OUT                        0-0-0/w SBIN        r     1 PTYPEB(0:7)


   Procedure DAD$MPDUMP requires 131 words for executable code.
   Procedure DAD$MPDUMP requires 262 words of local(AUTO) storage.

    No errors detected in file DAD$RVBUF.:E05TSI    .
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:59   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:60   
          MINI XREF LISTING

ABORTCMD
      3986**LABEL    3958--REMEMBR
ALT
      3983**LABEL    3959--CALLALT  3960--CALLALT
ANLZ_CMD
      3892**DCL      3515--DCLINIT
C#
      3947**DCL      3967<<DOINDEX  3968>>IF       3968>>IF       3969>>CALLBLT  3970<>CALL
CMD
      3491**DCL      3965--ASSIGN   3966--ASSIGN   3972<<CALLBLT
CMDS
      3950**DCL      3972>>CALLBLT
CPU#
      3948**DCL      3969<<CALLBLT  3972>>CALLBLT
DAB$DUMPCMD
      3486**DCL-ENT  3975--CALL
DAM$MAP
      3484**DCL-ENT  3960--CALL
DAM$USECPU
      3485**DCL-ENT  3970--CALL     3979--CALL     3983--CALL     3986--CALL
DAS$SDMONPTR
      3488**DCL-ENT  3959--CALL
DA_ANLZERR
        18**DCL      3982<<ASSIGN
DA_CPU#
        39**DCL      3956>>ASSIGN   3979>>IF       3983>>IF
DA_MAPSEG.P
        48**DCL        49--REDEF
DA_MONISDATA
        41**DCL      3960<>CALL
DA_SDASN.DESC.TYPE0
        33**DCL        33--REDEF
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:61   
DA_TIGRSEG.P
        49**DCL        50--REDEF
DA_TRTN
        52**DCL      3957>>ASSIGN   3958<<REMEMBR  3987<<ASSIGN   3988>>UNWIND
I
      3946**DCL      3971<<DOINDEX  3972>>CALLBLT
NXTCPU
      3977**LABEL    3970--CALLALT
OUT
      3899**DCL      3975<>CALL
OUT.SUBLK$
      3932**DCL      3974>>ASSIGN   3974>>ASSIGN
OUT$
      3938**DCL      3974<<ASSIGN   3975>>CALL
PARSEALT
      3982**LABEL    3973--CALLALT
PCB
      3710**DCL      3962<<ASSIGN   3973<>CALL
PCB.ERROR
      3814**DCL      3982>>ASSIGN
PCB.NCHARS
      3857**DCL      3966<<ASSIGN
PCB.OUT$
      3723**DCL      3974>>ASSIGN
PCB.TEXT$
      3711**DCL      3965<<ASSIGN
PCB.WKSZ
      3740**DCL      3964<<ASSIGN
PCB.WORK$
      3719**DCL      3963<<ASSIGN
PTYPE
      3940**DCL      3961<<ASSIGN   3968>>IF
PTYPE$
      3941**DCL      3959<>CALL     3960<>CALL     3960<>CALL     3961>>ASSIGN
PTYPEB
      3942**DCL      3961>>ASSIGN
PL6.E3A0      #003=DAD$MPDUMP File=DAD$RVBUF.:E05TSI                             TUE 07/29/97 12:46 Page:62   
P_PCB
      3510**DCL      3962>>ASSIGN
S1
      3949**DCL      3972>>CALLBLT
SAVECPU
      3943**DCL      3956<<ASSIGN   3968>>IF       3979>>IF       3979<>CALL     3983>>IF       3983<>CALL
      3986<>CALL
SAVETRTN
      3944**DCL      3957<<ASSIGN   3987>>ASSIGN
TOP$
         8**DCL         6--PROC
WORK
      3490**DCL      3963--ASSIGN   3964--ASSIGN
X$PARSE
      3487**DCL-ENT  3973--CALL
