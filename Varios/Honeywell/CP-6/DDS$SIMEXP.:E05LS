VERSION E05

PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:1    
        1        1        /*M* DDS$SIMEXP . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$SIMEXP
        9        9             PURPOSE: TO EVALUATE THE NODE "SIMEXP".
       10       10             DESCRIPTION: PICKS UP EACH OPERATOR & OPERAND , PERFORMS THE OPERATION
       11       11             ON THE CURRENT VALUE OF AN ACCUMULATOR, & DEPOSITS THE RESULT AS THE
       12       12             NEW ACCUMULATOR VALUE. */
       13       13        /*D* NAME: DDS$SIMEXP
       14       14             CALL: CALL DDS$SIMEXP( N$, V ) ALTRET( ERROR );
       15       15             INTERFACE: DDS$SDO
       16       16                        DDS$EVAL
       17       17             ENVIRONMENT:
       18       18             INPUT: N$ - POINTER TO "SIMEXP" NODE.
       19       19                    S_D.ACCUM - INITIAL ACCUMULATOR VALUE.
       20       20                    S_D.OP - INITIAL OPERATION CODE.
       21       21             OUTPUT: V - VALUE OF SIMEXP.
       22       22             SCRATCH: LOCAL AUTO ONLY.
       23       23             DESCRIPTION: PICKS UP EACH OPERATOR & OPERAND , PERFORMS THE OPERATION
       24       24             ON THE CURRENT VALUE OF AN ACCUMULATOR, & DEPOSITS THE RESULT AS THE
       25       25             NEW ACCUMULATOR VALUE. RETURNS WHEN DONE, ALTRETURNS IF AN ERROR
       26       26             CONDITION WAS ENCOUNTERED. */
       27       27        /**/
       28       28        DDS$SIMEXP: PROC( N$, V ) ALTRET;
       29       29        /**/
       30       30    1   DCL N$ PTR;                             /* POINTER TO "SIMEXP" NODE */
       31       31    1   DCL V SBIN;                             /* VALUE OUTPUT */
       32       32    1   DCL IX SBIN;                            /* INDEX VARIABLE */
       33       33    1   DCL NC$ PTR;                            /* CURRENT NODE POINTER */
       34       34    1   DCL NCC$ PTR;                           /* SON OF CURRENT NODE */
       35       35    1   DCL TV SBIN;                            /* TEMP VALUE */
       36       36    1   DCL ACCUM SBIN;                         /* TEMP FOR V */
       37       37        %INCLUDE XU_MACRO_C;                    /* M$PARSE MACROS */
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:2    
       38     3143        %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
       39     3188        %INCLUDE XUH_MACRO_C;
       40     3272        %INCLUDE DD_SD_M;
       41     4608        %S_D;
       42     5926    1   DCL DDS$SDO ENTRY(2) ALTRET;            /* SIMBLE | DECIMALS | OCTIL */
       43     5927    1   DCL DDS$EVAL ENTRY(4) ALTRET;           /* RESULT := OP1 OP OP2 */
       44     5928        /**/
       45     5929        /* PICKUP OPERAND1 */
       46     5930    1        CALL DDS$SDO( N$ -> POB.SUBLK$( 0 ), TV ) ALTRET( ALTRT ) ;
       47     5931        /* EVALUATE WHAT WE HAVE SO FAR */
       48     5932    1        CALL DDS$EVAL( S_D.ACCUM, TV, S_D.OP, ACCUM ) ALTRET( ALTRT );
       49     5933        /* PICKUP REPEAT GROUPS OF <OP> <OP2> & OPERATE THEM INTO ACCUMULATOR */
       50     5934    1        IF N$ -> POB.NSB > 1
       51     5935    2        THEN DO;                           /* REPEAT GROUPS */
       52     5936    2             NC$ = N$ -> POB.SUBLK$( 1 );
       53     5937    3             DO IX = 0 TO NC$ -> POB.NSB - 1;
       54     5938    3                  NCC$ = NC$ -> POB.SUBLK$( IX );
       55     5939    3                  CALL DDS$SDO( NCC$ -> POB.SUBLK$( 1 ), TV ) ALTRET( ALTRT );
       56     5940    3                  CALL DDS$EVAL( ACCUM, TV, NCC$ -> POB.SUBLK$( 0 ) -> POB.CODE, ACCUM
              5940                           ) ALTRET( ALTRT );
       57     5941    3                END;                       /* "DO IX" */
       58     5942    2           END;                            /* REPEAT GROUPS */
       59     5943    1        ELSE ;
       60     5944    1        V = ACCUM;
       61     5945    1        RETURN;
       62     5946        /**/
       63     5947    1   ALTRT: ALTRETURN;
       64     5948        /**/
       65     5949    1   END DDS$SIMEXP;

PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:3    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SIMEXP.

   Procedure DDS$SIMEXP requires 74 words for executable code.
   Procedure DDS$SIMEXP requires 16 words of local(AUTO) storage.

    No errors detected in file DDS$SIMEXP.:E05TSI    .

PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:4    

 Object Unit name= DDS$SIMEXP                                 File name= DDS$SIMEXP.:E05TOU
 UTS= JUL 29 '97 14:22:19.20 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    74    112  DDS$SIMEXP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  DDS$SIMEXP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 DDS$SDO
 yes     yes           Std       4 DDS$EVAL
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:5    


        1        1        /*M* DDS$SIMEXP . */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*F* NAME: DDS$SIMEXP
        9        9             PURPOSE: TO EVALUATE THE NODE "SIMEXP".
       10       10             DESCRIPTION: PICKS UP EACH OPERATOR & OPERAND , PERFORMS THE OPERATION
       11       11             ON THE CURRENT VALUE OF AN ACCUMULATOR, & DEPOSITS THE RESULT AS THE
       12       12             NEW ACCUMULATOR VALUE. */
       13       13        /*D* NAME: DDS$SIMEXP
       14       14             CALL: CALL DDS$SIMEXP( N$, V ) ALTRET( ERROR );
       15       15             INTERFACE: DDS$SDO
       16       16                        DDS$EVAL
       17       17             ENVIRONMENT:
       18       18             INPUT: N$ - POINTER TO "SIMEXP" NODE.
       19       19                    S_D.ACCUM - INITIAL ACCUMULATOR VALUE.
       20       20                    S_D.OP - INITIAL OPERATION CODE.
       21       21             OUTPUT: V - VALUE OF SIMEXP.
       22       22             SCRATCH: LOCAL AUTO ONLY.
       23       23             DESCRIPTION: PICKS UP EACH OPERATOR & OPERAND , PERFORMS THE OPERATION
       24       24             ON THE CURRENT VALUE OF AN ACCUMULATOR, & DEPOSITS THE RESULT AS THE
       25       25             NEW ACCUMULATOR VALUE. RETURNS WHEN DONE, ALTRETURNS IF AN ERROR
       26       26             CONDITION WAS ENCOUNTERED. */
       27       27        /**/
       28       28        DDS$SIMEXP: PROC( N$, V ) ALTRET;

     28  0 000000   000000 700200 xent  DDS$SIMEXP   TSX0  ! X66_AUTO_2
         0 000001   000020 000002                    ZERO    16,2

       29       29        /**/
       30       30    1   DCL N$ PTR;                             /* POINTER TO "SIMEXP" NODE */
       31       31    1   DCL V SBIN;                             /* VALUE OUTPUT */
       32       32    1   DCL IX SBIN;                            /* INDEX VARIABLE */
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:6    
       33       33    1   DCL NC$ PTR;                            /* CURRENT NODE POINTER */
       34       34    1   DCL NCC$ PTR;                           /* SON OF CURRENT NODE */
       35       35    1   DCL TV SBIN;                            /* TEMP VALUE */
       36       36    1   DCL ACCUM SBIN;                         /* TEMP FOR V */
       37       37        %INCLUDE XU_MACRO_C;                    /* M$PARSE MACROS */
       38     3143        %PARSE$OUT (NAME=POB,STCLASS=BASED,NSUBLKS=NSB);
       39     3188        %INCLUDE XUH_MACRO_C;
       40     3272        %INCLUDE DD_SD_M;
       41     4608        %S_D;
       42     5926    1   DCL DDS$SDO ENTRY(2) ALTRET;            /* SIMBLE | DECIMALS | OCTIL */
       43     5927    1   DCL DDS$EVAL ENTRY(4) ALTRET;           /* RESULT := OP1 OP OP2 */
       44     5928        /**/
       45     5929        /* PICKUP OPERAND1 */
       46     5930    1        CALL DDS$SDO( N$ -> POB.SUBLK$( 0 ), TV ) ALTRET( ALTRT ) ;

   5930  0 000002   200003 470500                    LDP0    @N$,,AUTO
         0 000003   000000 471500                    LDP1    0,,PR0
         0 000004   200010 633500                    EPPR3   TV,,AUTO
         0 000005   200013 453500                    STP3    ACCUM+2,,AUTO
         0 000006   100003 634500                    EPPR4   3,,PR1
         0 000007   200012 454500                    STP4    ACCUM+1,,AUTO
         0 000010   200012 630500                    EPPR0   ACCUM+1,,AUTO
         0 000011   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000012   000000 701000 xent               TSX1    DDS$SDO
         0 000013   000111 702000 0                  TSX2    ALTRT

       47     5931        /* EVALUATE WHAT WE HAVE SO FAR */
       48     5932    1        CALL DDS$EVAL( S_D.ACCUM, TV, S_D.OP, ACCUM ) ALTRET( ALTRT );

   5932  0 000014   200011 630500                    EPPR0   ACCUM,,AUTO
         0 000015   200015 450500                    STP0    ACCUM+4,,AUTO
         0 000016   000000 236000 xsym               LDQ     S_D$
         0 000017   000136 036003                    ADLQ    94,DU
         0 000020   200014 756100                    STQ     ACCUM+3,,AUTO
         0 000021   200010 631500                    EPPR1   TV,,AUTO
         0 000022   200013 451500                    STP1    ACCUM+2,,AUTO
         0 000023   000000 236000 xsym               LDQ     S_D$
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:7    
         0 000024   000137 036003                    ADLQ    95,DU
         0 000025   200012 756100                    STQ     ACCUM+1,,AUTO
         0 000026   200012 630500                    EPPR0   ACCUM+1,,AUTO
         0 000027   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000030   000000 701000 xent               TSX1    DDS$EVAL
         0 000031   000111 702000 0                  TSX2    ALTRT

       49     5933        /* PICKUP REPEAT GROUPS OF <OP> <OP2> & OPERATE THEM INTO ACCUMULATOR */
       50     5934    1        IF N$ -> POB.NSB > 1

   5934  0 000032   200003 470500                    LDP0    @N$,,AUTO
         0 000033   000000 471500                    LDP1    0,,PR0
         0 000034   100001 220100                    LDX0    1,,PR1
         0 000035   000002 100003                    CMPX0   2,DU
         0 000036   000105 602000 0                  TNC     s:5944

       51     5935    2        THEN DO;                           /* REPEAT GROUPS */

       52     5936    2             NC$ = N$ -> POB.SUBLK$( 1 );

   5936  0 000037   100004 236100                    LDQ     4,,PR1
         0 000040   200006 756100                    STQ     NC$,,AUTO

       53     5937    3             DO IX = 0 TO NC$ -> POB.NSB - 1;

   5937  0 000041   200005 450100                    STZ     IX,,AUTO
         0 000042   000100 710000 0                  TRA     s:5941+1

       54     5938    3                  NCC$ = NC$ -> POB.SUBLK$( IX );

   5938  0 000043   200006 470500                    LDP0    NC$,,AUTO
         0 000044   200005 720100                    LXL0    IX,,AUTO
         0 000045   000003 236110                    LDQ     3,X0,PR0
         0 000046   200007 756100                    STQ     NCC$,,AUTO

       55     5939    3                  CALL DDS$SDO( NCC$ -> POB.SUBLK$( 1 ), TV ) ALTRET( ALTRT );

PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:8    
   5939  0 000047   200010 631500                    EPPR1   TV,,AUTO
         0 000050   200013 451500                    STP1    ACCUM+2,,AUTO
         0 000051   000004 036003                    ADLQ    4,DU
         0 000052   200012 756100                    STQ     ACCUM+1,,AUTO
         0 000053   200012 630500                    EPPR0   ACCUM+1,,AUTO
         0 000054   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000055   000000 701000 xent               TSX1    DDS$SDO
         0 000056   000111 702000 0                  TSX2    ALTRT

       56     5940    3                  CALL DDS$EVAL( ACCUM, TV, NCC$ -> POB.SUBLK$( 0 ) -> POB.CODE, ACCUM
              5940                           ) ALTRET( ALTRT );

   5940  0 000057   200007 470500                    LDP0    NCC$,,AUTO
         0 000060   000003 471500                    LDP1    3,,PR0
         0 000061   200011 633500                    EPPR3   ACCUM,,AUTO
         0 000062   200015 453500                    STP3    ACCUM+4,,AUTO
         0 000063   200016 451500                    STP1    ACCUM+5,,AUTO
         0 000064   200016 236100                    LDQ     ACCUM+5,,AUTO
         0 000065   400000 036007                    ADLQ    -131072,DL
         0 000066   200014 756100                    STQ     ACCUM+3,,AUTO
         0 000067   200010 634500                    EPPR4   TV,,AUTO
         0 000070   200013 454500                    STP4    ACCUM+2,,AUTO
         0 000071   200011 635500                    EPPR5   ACCUM,,AUTO
         0 000072   200012 455500                    STP5    ACCUM+1,,AUTO
         0 000073   200012 630500                    EPPR0   ACCUM+1,,AUTO
         0 000074   000022 631400 xsym               EPPR1   B_VECTNIL+18
         0 000075   000000 701000 xent               TSX1    DDS$EVAL
         0 000076   000111 702000 0                  TSX2    ALTRT

       57     5941    3                END;                       /* "DO IX" */

   5941  0 000077   200005 054100                    AOS     IX,,AUTO
         0 000100   200006 470500                    LDP0    NC$,,AUTO
         0 000101   000001 236100                    LDQ     1,,PR0
         0 000102   000022 772000                    QRL     18
         0 000103   200005 116100                    CMPQ    IX,,AUTO
         0 000104   000043 605400 0                  TPNZ    s:5938
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:9    

       58     5942    2           END;                            /* REPEAT GROUPS */

       59     5943    1        ELSE ;
       60     5944    1        V = ACCUM;

   5944  0 000105   200004 470500                    LDP0    @V,,AUTO
         0 000106   200011 235100                    LDA     ACCUM,,AUTO
         0 000107   000000 755100                    STA     0,,PR0

       61     5945    1        RETURN;

   5945  0 000110   000000 702200 xent               TSX2  ! X66_ARET

       62     5946        /**/
       63     5947    1   ALTRT: ALTRETURN;

   5947  0 000111   000000 702200 xent  ALTRT        TSX2  ! X66_AALT
       64     5948        /**/
       65     5949    1   END DDS$SIMEXP;

PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:10   
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDS$SIMEXP.

   Procedure DDS$SIMEXP requires 74 words for executable code.
   Procedure DDS$SIMEXP requires 16 words of local(AUTO) storage.

    No errors detected in file DDS$SIMEXP.:E05TSI    .
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:11   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:12   
          MINI XREF LISTING

ACCUM
        36**DCL      5932<>CALL     5940<>CALL     5940<>CALL     5944>>ASSIGN
ALTRT
      5947**LABEL    5930--CALLALT  5932--CALLALT  5939--CALLALT  5940--CALLALT
DDS$EVAL
      5927**DCL-ENT  5932--CALL     5940--CALL
DDS$SDO
      5926**DCL-ENT  5930--CALL     5939--CALL
IX
        32**DCL      5937<<DOINDEX  5938>>ASSIGN
N$
        30**DCL        28--PROC     5930>>CALL     5934>>IF       5936>>ASSIGN
NC$
        33**DCL      5936<<ASSIGN   5937>>DOINDEX  5938>>ASSIGN
NCC$
        34**DCL      5938<<ASSIGN   5939>>CALL     5940>>CALL
POB.CODE
      3157**DCL      5940<>CALL
POB.NSB
      3161**DCL      5934>>IF       5937>>DOINDEX
POB.SUBLK$
      3182**DCL      5930<>CALL     5936>>ASSIGN   5938>>ASSIGN   5939<>CALL     5940>>CALL
S_D.ACCUM
      4810**DCL      5932<>CALL
S_D.CURRENT_CHANNEL
      5560**DCL      5562--REDEF
S_D.DEBUGA
      4712**DCL      4714--REDEF
S_D.EIS
      5670**DCL      5699--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      5603**DCL      5604--REDEF    5618--REDEF
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:13   
S_D.JDE
      5217**DCL      5218--REDEF
S_D.L$.VALUE
      4770**DCL      4776--REDEF    4784--REDEF    4787--REDEF    4790--REDEF    4793--REDEF
S_D.L$.VALUE.L
      4771**DCL      4772--REDEF    4773--REDEF
S_D.L6_MESSAGE_BUF
      5624**DCL      5626--REDEF
S_D.OP
      4808**DCL      5932<>CALL
S_D.OUTPUT
      5590**DCL      5592--REDEF
S_D.REMOTE_MSG.FNCC
      5609**DCL      5610--REDEF
S_D.REMOTE_MSG.STXC
      5605**DCL      5606--REDEF
S_D.REMOTE_MSG.SUBFNCC
      5613**DCL      5614--REDEF
S_D.SV
      4669**DCL      4690--REDEF
S_D$
      5921**DCL      4617--IMP-PTR  5932>>CALL     5932>>CALL
TV
        35**DCL      5930<>CALL     5932<>CALL     5939<>CALL     5940<>CALL
V
        31**DCL        28--PROC     5944<<ASSIGN
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:14   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDS$SIMEXP File=DDS$SIMEXP.:E05TSI                            TUE 07/29/97 14:22 Page:15   
              MINI UREF LISTING

DDS$SIMEXP      28**PROC
