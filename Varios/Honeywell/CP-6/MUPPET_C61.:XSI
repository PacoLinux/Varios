/*M* INCLUDE file for MUPPET */
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
%SUB FOREVER = "WHILE ('1'B)";
%SUB NEVER = "WHILE ('0'B)";
 
%EQU NULL_CMD# = 0;
%EQU OPEN_CMD# = NULL_CMD# + 1;
%EQU CLOSE_CMD# = OPEN_CMD# + 1;
%EQU READ_CMD# = CLOSE_CMD# + 1;
%EQU WRITE_CMD# = READ_CMD# + 1;
%EQU SETFP_CMD# = WRITE_CMD# + 1;
%EQU LIST_CMD# = SETFP_CMD# + 1;
%EQU WAIT_CMD# = LIST_CMD# + 1;
%EQU PROMPT_CMD# = WAIT_CMD# + 1;
%EQU END_CMD# = PROMPT_CMD# + 1;
 
%EQU OPT_START# = 21;
%EQU READ_OPT# = OPT_START#;
%EQU WRITE_OPT# = READ_OPT# + 1;
%EQU MODE_OPT# = WRITE_OPT# + 1;
%EQU FEP_OPT# = MODE_OPT# + 1;
%EQU SLOT_OPT# = FEP_OPT# + 1;
%EQU IGNORE_OPT# = SLOT_OPT# + 1;
%EQU CONT_OPT# = IGNORE_OPT# + 1;
 
%EQU ON# = 100;
%EQU TO# = 101;
%EQU OVER# = 102;
%EQU INTO# = 103;
 
%EQU MODE_START# = 200;
%EQU MUPPET_GHOST# = MODE_START#;
%EQU MUPPET_USER# = MUPPET_GHOST# + 1;
%EQU MUPPET_HANDLER# = MUPPET_USER# + 1;
%EQU MUPPET_COMGROUP# = MUPPET_HANDLER# + 1;
 
%EQU NUMSLOTS# = 100;
%EQU NUMQS# = 100;
%EQU EV_READ# = 1;
%EQU EV_WRITE# = 2;
%EQU EV_STOP# = 3;
 
%EQU LF_PROC_EVENTS#  = '0'B;
%EQU LF_Q_EVENTS#     = '0'B;
%EQU LF_START#        = '1'B;
%EQU LF_STOP#         = '1'B;
%EQU LF_ERRORS#       = '1'B;
%MACRO FPRG_INFO (NAME=FPRG_INFO, STCLASS=STATIC);
 
 %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 %IF (SUBSTR(STR,0,6)='STATIC') OR
     (SUBSTR(STR,0,8)='CONSTANT') OR
     (SUBSTR(STR,0,3)='EXT');
      %LSET INIT=CHARTEXT('INIT');
 %ELSE;
      %LSET INIT=CHARTEXT('/*');
 %ENDIF;
 
 %LSET EINIT=CHARTEXT('/**/');
 
      DCL 1 NAME (0:%(NUMSLOTS#-1))    STCLASS,
            2 TIME                     UBIN      %INIT(0*0)%EINIT,
            2 FEP                      UBIN      %INIT(0*0)%EINIT,
            2 MODE                     CHAR(1)   %INIT(' '*0)%EINIT,
            2 FPRG_FID                 CHAR(50)  %INIT(' '*0)%EINIT,
            2 DCB_NUMS,
              3 FPRG#                  UBIN      %INIT(0*0)%EINIT,
              3 IN#                    UBIN      %INIT(0*0)%EINIT,
              3 OUT#                   UBIN      %INIT(0*0)%EINIT,
            2 BUFFER_PTRS,
              3 IN$                    PTR       %INIT(ADDR(NIL)*0)%EINIT,
              3 OUT$                   PTR       %INIT(ADDR(NIL)*0)%EINIT,
            2 RECS,
              3 IN#                    UBIN      %INIT(0*0)%EINIT,
              3 OUT#                   UBIN      %INIT(0*0)%EINIT,
            2 IN_FLAG                  BIT(1)    %INIT('0'B*0)%EINIT,
            2 OUT_FLAG                 BIT(1)    %INIT('0'B*0)%EINIT,
            2 RUN_FLAG                 BIT(1)    %INIT('0'B*0)%EINIT,
            2 FULL_FLAG                BIT(1)    %INIT('0'B*0)%EINIT,
            2 IGNORE_FLAG              BIT(1)    %INIT('0'B*0)%EINIT,
            2 CONT_FLAG                BIT(1)    %INIT('0'B*0)%EINIT;
 
%MEND;
 
%MACRO LIST_FLAGS (NAME=LIST_FLAGS, STCLASS=STATIC);
 
 %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 %IF (SUBSTR(STR,0,6)='STATIC') OR
     (SUBSTR(STR,0,8)='CONSTANT') OR
     (SUBSTR(STR,0,3)='EXT');
      %LSET INIT=CHARTEXT('INIT');
 %ELSE;
      %LSET INIT=CHARTEXT('/*');
 %ENDIF;
 
 %LSET EINIT=CHARTEXT('/**/');
 
      DCL 1 NAME                       STCLASS,
            2 PROC_EVENTS              BIT(1)    %INIT(%LF_PROC_EVENTS#)%EINIT,
            2 Q_EVENTS                 BIT(1)    %INIT(%LF_Q_EVENTS#)%EINIT,
            2 START                    BIT(1)    %INIT(%LF_START#)%EINIT,
            2 STOP                     BIT(1)    %INIT(%LF_STOP#)%EINIT,
            2 ERRORS                   BIT(1)    %INIT(%LF_ERRORS#)%EINIT,
            2 *(0:3)                   BIT(1)    %INIT('0'B*0)%EINIT;
 
%MEND;
 
%MACRO EVENT_Q (NAME=EVENT_Q, STCLASS=STATIC);
 
 %LSET STR=CONCAT(TEXTCHAR(STCLASS),'        ');
 %IF (SUBSTR(STR,0,6)='STATIC') OR
     (SUBSTR(STR,0,8)='CONSTANT') OR
     (SUBSTR(STR,0,3)='EXT');
      %LSET INIT=CHARTEXT('INIT');
 %ELSE;
      %LSET INIT=CHARTEXT('/*');
 %ENDIF;
 
 %LSET EINIT=CHARTEXT('/**/');
 
      DCL 1 NAME (0:%(NUMQS#-1))       STCLASS,
            2 EVENT#                   UBIN,
            2 ERR,
               3 *                     BIT(19)   UNAL,
               3 ERR#                  UBIN(14)  UNAL,
               3 *                     UBIN(3)   UNAL,
            2 ARS#                     UBIN,
            2 DVBYTE                   BIT(9);
 
%MEND;
 
%EQU XE$NO_SLOTS# = 1;
/*E*  ERROR: MUP-XE$NO_SLOTS#-0
    MESSAGE: There are currently no available fprg slots.
   MESSAGE1: There are no fprg slots left, an existing fprg
             must be closed before another one can be opened.
*/
 
%EQU XE$SLOT_EMPTY# = 2;
/*E*  ERROR: MUP-XE$SLOT_EMPTY#-0
    MESSAGE: That slot is empty.
*/
 
%EQU XE$SLOT_FULL# = 3;
/*E*  ERROR: MUP-XE$SLOT_FULL#-0
    MESSAGE: That slot is already used.
   MESSAGE1: The slot specified on the last command already contains an fprg.
*/
 
%EQU XE$NO_FPRGS# = 4;
/*E*  ERROR: MUP-XE$NO_FPRGS#-0
    MESSAGE: No fprgs running.
   MESSAGE1: There are currently no fprgs running.
*/
 
%EQU XE$BAD_U_MODE# = 5;
/*E*  ERROR: MUP-XE$BAD_U_MODE#-0
    MESSAGE: User mode fprgs must be started on-line in your fep.
   MESSAGE1: You tried to start a user mode fprg and either
                1) You are not running on-line OR
                2) You specified another fep
             either case is illegal.
*/
 
%EQU XE$NO_FEP_GB# = 6;
/*E*  ERROR: MUP-XE$NO_FEP_GB#-0
    MESSAGE: No fep specified.
   MESSAGE1: If MUPPET is run in batch or ghost mode, a fep
             must be specified on the OPEN command.
*/
 
%EQU XE$SPARE0# = 7;
/*E*  ERROR: MUP-XE$SPARE0#-0
    MESSAGE: Spare error message number
   MESSAGE1: This message should never be seen.
*/
 
%EQU XE$IO_IGNORE# = 8;
/*E*  ERROR: MUP-XE$IO_IGNORE#-0
    MESSAGE: I/O not allowed when IGNORE is specified or implied
   MESSAGE1: If the IGNORE option is given on the OPEN command, or
             implied because of MODE=HANDLER, I/O is not permitted.
*/
 
%EQU XE$NOCG# = 9;
/*E*  ERROR: MUP-XE$NOCG#-0
    MESSAGE: MUPPET does not start COMGROUP mode frpgs, yet!
   MESSAGE1: MUPPET can only start USER, GHOST, or HANDLER mode fprgs.
*/
 
%EQU XE$NO_CONT# = 10;
/*E*  ERROR: MUP-XE$NO_CONT#-0
    MESSAGE: No CONTINUE on that slot.
   MESSAGE1: In order for a SETFP command to be given on a particular
             slot, the CONTINUE option must have been specified when
             it was opened.
*/
 
%EQU XE$BYEBYE# = 11;
/*E*  ERROR: MUP-XE$BYEBYE#-0
    MESSAGE: Cleaning up and exiting...
   MESSAGE1: MUPPET exiting via CTRL Y/QUIT or E keyin.
*/
 
%EQU XE$WOOPS# = 12;
/*E*  ERROR: MUP-XE$WOOPS#-0
    MESSAGE: MUPPET fatal error!
             Here's why, where and a PLUGH...
   MESSAGE1: MUPPET just bit the dust.
*/
 
%EQU XE$SLOT_NORUN# = 13;
/*E*  ERROR: MUP-XE$SLOT_NORUN#-0
    MESSAGE: No fprgs running in that slot.
*/
 
%EQU XE$NOT_YET# = 14;
/*E*  ERROR: MUP-XE$NOT_YET#-0
    MESSAGE: Command not yet implemented.
   MESSAGE1: That command has not been implemented at this time.
*/
 
%EQU XE$NO_FEP_UDLT# = 15;
/*E*  ERROR: MUP-XE$NO_FEP_UDLT#-0
    MESSAGE: If running MUPPET under DELTA, a fep must be explicitly given.
   MESSAGE1: This is an attempt to prevent crashing production feps.
*/
 
%EQU XE$CLOSE_IGNORE# = 16;
/*E*  ERROR: MUP-XE$CLOSE_IGNORE#-0
    MESSAGE: Cannot close an IGNOREd fprg.
   MESSAGE1: If an fprg was opened with IGNORE, you cannot close it.
*/
 
%EQU XE$NOT_HERE# = 101;
/*E*  ERROR: MUP-XE$NOT_HERE#-0
    MESSAGE: I shouldn't be here, something is wrong - aborting...
   MESSAGE1: Somehow MUPPET got to a place in the code that should
             never be executed.  This is a bug!
*/
