/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
LOON: PROC MAIN;
%INCLUDE CP_6;
 
%FPT_OPEN (FPTN=OPEN_SI,
            DCB = M$SI);
%FPT_OPEN (FPTN = OPEN_RN,
            FUN = IN,
            SHARE = ALL,
            ASN = FILE,
            NAME = VLPFILE,
            ACCT = VLPACCT,
            DCB = M$RN);
%FPT_OPEN (FPTN = OPEN_OU,
            DCB = M$TM);
 
%FPT_READ (FPTN = READ_ACCT,
            DCB = M$SI,
            BUF = ACCOUNT_BUF);
%FPT_READ (FPTN = READ_NAME,
            DCB = M$RN,
            BUF = IN_BUF,
            KEY = KEYBUF,
            KEYS = YES,
            KEYR = NO);
%FPT_READ (FPTN = READ_NAME2,
            DCB = M$RN,
            BUF = IN_BUF,
            KEY = KEYBUF,
            KEYS = NO,
            KEYR = YES);
%VLP_NAME (FPTN = VLPFILE,
            NAME = ':NAME');
%VLP_ACCT (FPTN = VLPACCT,
            ACCT = ':MAIL');
%FPT_WRITE (FPTN = WRITE_NAME,
            DCB = M$TM,
            BUF = NAME_BUF);
%FPT_PRECORD (FPTN = NEXT_REC,
            N = 1,
            DCB = M$RN,
            KEYR = YES,
            KEY = KEYBUF);
%FPT_PROMPT (FPTN = SETPROMPT,
            DCB = M$SI,
            PROMPT = PROMPTCHARS );
%FPT_PROMPT (FPTN = SETPROMPT2,
            DCB = M$SI,
            PROMPT = PROMPTNAME );
 
%FPT_CLOSE (FPTN = CLOSE_SI,
            DCB = M$SI);
%FPT_CLOSE (FPTN = CLOSE_OU,
            DCB = M$TM);
%FPT_CLOSE (FPTN = CLOSE_RN,
            DCB = M$RN);
 
%FPT_INT (FPTN = INTFPT,
          UENTRY = BREAK);
DCL BREAK ENTRY ASYNC;
 
DCL WILD_COMPARE ENTRY (4) ALTRET;
 
%F$DCB;
DCL M$SI$ PTR ALIGNED;
DCL START_HERE REMEMBER STATIC SYMDEF;
DCL THIS_PROMPT VECTOR STATIC SYMDEF;
DCL LISTING BIT (1) STATIC SYMDEF;
DCL CUR_MODE UBIN STATIC SYMDEF;
 
DCL PROMPTCHARS CHAR (0) INIT ('Enter an account: ') CALIGNED STATIC;
DCL PROMPTNAME CHAR (0) INIT ('Enter a name: ') CALIGNED STATIC;
DCL M$SI DCB;
DCL M$RN DCB;
DCL M$TM DCB;
DCL I UBIN WORD ALIGNED;
DCL J UBIN WORD ALIGNED;
DCL NAME_BUF CHAR (80) CALIGNED STATIC;
DCL IN_BUF CHAR (80) CALIGNED STATIC;
DCL XIN_BUF CHAR (80) CALIGNED STATIC;
DCL ACCOUNT CHAR (20);
DCL XACCOUNT CHAR (20);
DCL ACCOUNT_BUF CHAR (20) CALIGNED STATIC;
DCL 1 KEYBUF CALIGNED STATIC,
      2 COUNT UBIN BYTE INIT (20) UNAL,
      2 TEXT CHAR (20) UNAL;
DCL END_OF_FILE BIT (1) ALIGNED;
DCL GOT_ONE BIT (1) ALIGNED;
 
DCL ALLUPPER (0:511) CHAR(1) CONSTANT
     INIT(
          ' '*9,BITASC('011'O),' '*23,
          '!','"','#','$','%','&','''','(',')',
          '*','+',',','-','.','/','0','1','2','3','4','5',
          '6','7','8','9',':',';','<','=','>','?','@','A',
          'B','C','D','E','F','G','H','I','J','K','L','M',
          'N','O','P','Q','R','S','T','U','V','W','X','Y',
          'Z','[','\',']','^','_','@','A','B','C','D','E',
          'F','G','H','I','J','K','L','M','N','O','P','Q','R',
          'S','T','U','V','W','X','Y','Z','[','\',']','^',' ',
          ' '*9,BITASC('011'O),' '*23,
          '!','"','#','$','%','&','''','(',')',
          '*','+',',','-','.','/','0','1','2','3','4','5',
          '6','7','8','9',':',';','<','=','>','?','@','A',
          'B','C','D','E','F','G','H','I','J','K','L','M',
          'N','O','P','Q','R','S','T','U','V','W','X','Y',
          'Z','[','\',']','^','_','@','A','B','C','D','E',
          'F','G','H','I','J','K','L','M','N','O','P','Q','R',
          'S','T','U','V','W','X','Y','Z','[','\',']','^',' ',
          ' '*9,BITASC('011'O),' '*23,
          '!','"','#','$','%','&','''','(',')',
          '*','+',',','-','.','/','0','1','2','3','4','5',
          '6','7','8','9',':',';','<','=','>','?','@','A',
          'B','C','D','E','F','G','H','I','J','K','L','M',
          'N','O','P','Q','R','S','T','U','V','W','X','Y',
          'Z','[','\',']','^','_','@','A','B','C','D','E',
          'F','G','H','I','J','K','L','M','N','O','P','Q','R',
          'S','T','U','V','W','X','Y','Z','[','\',']','^',' ',
          ' '*9,BITASC('011'O),' '*23,
          '!','"','#','$','%','&','''','(',')',
          '*','+',',','-','.','/','0','1','2','3','4','5',
          '6','7','8','9',':',';','<','=','>','?','@','A',
          'B','C','D','E','F','G','H','I','J','K','L','M',
          'N','O','P','Q','R','S','T','U','V','W','X','Y',
          'Z','[','\',']','^','_','@','A','B','C','D','E',
          'F','G','H','I','J','K','L','M','N','O','P','Q','R',
          'S','T','U','V','W','X','Y','Z','[','\',']','^',' ');
 
CALL M$INT (INTFPT);
LISTING = '0'B;
CALL M$OPEN (OPEN_SI);
CALL M$OPEN (OPEN_RN);
CALL M$OPEN (OPEN_OU);
M$SI$ = DCBADDR (DCBNUM (M$SI));
 
NAME_MODE:     ;
CUR_MODE = 1;
REMEMBER NAME_MODE IN START_HERE;
LISTING = '0'B;
THIS_PROMPT = VECTOR (SETPROMPT2);
 
CALL M$PROMPT (SETPROMPT2);
ACCOUNT_BUF = ' ';
CALL M$READ (READ_ACCT);
LISTING = '1'B;
DO WHILE ( (SUBSTR (ACCOUNT_BUF, 0, 1) ~= ' ') AND
           (SUBSTR (ACCOUNT_BUF, 0, 1) ~= '.') );
   ACCOUNT = ' ';
   ACCOUNT = SUBSTR (ACCOUNT_BUF, 0, 20);
   CALL XLATE (XACCOUNT, ALLUPPER, ACCOUNT);
   I = M$SI$->F$DCB.ARS#;
   KEYBUF.COUNT = 1;
   KEYBUF.TEXT = ' ';
   IN_BUF = ' ';
   GOT_ONE = '0'B;
   CALL M$READ (READ_NAME)
 
   WHENRETURN DO;
      END;
   WHENALTRETURN DO;
      IN_BUF = ' ';
      CALL M$READ (READ_NAME2)
      WHENRETURN DO;
         CALL XLATE (XIN_BUF, ALLUPPER, IN_BUF);
         CALL WILD_COMPARE (I, XACCOUNT, XIN_BUF ,80)
         WHENRETURN DO;
            CALL ACCT4NAME;
            GOT_ONE = '1'B;
            END;
         WHENALTRETURN DO;
            END;
         END_OF_FILE = '0'B;
         DO WHILE (~ END_OF_FILE);
            IN_BUF = ' ';
            CALL M$READ (READ_NAME2)
            WHENRETURN DO;
               CALL XLATE (XIN_BUF, ALLUPPER, IN_BUF);
               CALL WILD_COMPARE (I, XACCOUNT, XIN_BUF, 80)
               WHENRETURN DO;
                  CALL ACCT4NAME;
                  GOT_ONE = '1'B;
                  END;
               WHENALTRETURN DO;
                  END;
               END;
            WHENALTRETURN DO;
               CALL M$PRECORD (NEXT_REC)
               WHENRETURN DO;
                  END;
               WHENALTRETURN DO;
                  END_OF_FILE = '1'B;
                  IF (~ GOT_ONE)
                  THEN DO;
                     CALL CONCAT (NAME_BUF, 'There is no account associated with the name ', ACCOUNT_BUF);
                     CALL M$WRITE (WRITE_NAME);
                     END;
                  END;
               END;
            END;   /* DO WHILE (~END_OF_FILE) */
         END; /* WHEN RETURN */
      WHENALTRETURN DO;
         IF (~ GOT_ONE)
         THEN DO;
            CALL CONCAT (NAME_BUF, 'There is no account associated with the name ', ACCOUNT_BUF);
            CALL M$WRITE (WRITE_NAME);
            END;
         END;
      END;
      ACCOUNT_BUF = ' ';
      CALL M$PROMPT (SETPROMPT2);
      CALL M$READ (READ_ACCT);
   END; /* DO WHILE */
 
IF (SUBSTR (ACCOUNT_BUF, 0, 1) = ' ') THEN GOTO FIN;
 
ACCOUNT_MODE:  ;
CUR_MODE = 0;
REMEMBER ACCOUNT_MODE IN START_HERE;
LISTING = '0'B;
THIS_PROMPT = VECTOR (SETPROMPT);
 
CALL M$PROMPT (SETPROMPT);
ACCOUNT_BUF = ' ';
CALL M$READ (READ_ACCT);
LISTING = '1'B;
DO WHILE ((SUBSTR (ACCOUNT_BUF, 0, 1) ~= ' ') AND
          (SUBSTR (ACCOUNT_BUF, 0, 1) ~= '.') );
   ACCOUNT = ' ';
   ACCOUNT = ' ';
   KEYBUF.COUNT = 20;
   KEYBUF.TEXT = ACCOUNT;
   IN_BUF = ' ';
   GOT_ONE = '0'B;
   CALL M$READ (READ_NAME)
 
   WHENRETURN DO;
      CALL NAME4ACCT;
      GOT_ONE = '1'B;
      END;
   WHENALTRETURN DO;
      IN_BUF = ' ';
      ACCOUNT = SUBSTR (ACCOUNT_BUF, 0, 9);
      KEYBUF.TEXT = ACCOUNT;
      KEYBUF.COUNT = M$SI$->F$DCB.ARS#;
      CALL M$READ (READ_NAME2)
      WHENRETURN DO;
         I = M$SI$->F$DCB.ARS#;
         J = 19;
         DO WHILE (SUBSTR (KEYBUF.TEXT, J, 1) = ' ');
            J = J - 1;
            END;
         CALL WILD_COMPARE (I, ACCOUNT, KEYBUF.TEXT, J+1)
         WHENRETURN DO;
            CALL NAME4ACCT;
            GOT_ONE = '1'B;
            END;
         WHENALTRETURN DO;
            END;
         END_OF_FILE = '0'B;
         DO WHILE (~ END_OF_FILE);
            IN_BUF = ' ';
            CALL M$READ (READ_NAME2)
            WHENRETURN DO;
               I = M$SI$->F$DCB.ARS#;
               J = 19;
               DO WHILE (SUBSTR (KEYBUF.TEXT, J, 1) = ' ');
                  J = J - 1;
                  END;
               CALL WILD_COMPARE (I, ACCOUNT, KEYBUF.TEXT, J+1)
               WHENRETURN DO;
                  CALL NAME4ACCT;
                  GOT_ONE = '1'B;
                  END;
               WHENALTRETURN DO;
                  END;
               END;
            WHENALTRETURN DO;
               CALL M$PRECORD (NEXT_REC)
               WHENRETURN DO;
                  END;
               WHENALTRETURN DO;
                  END_OF_FILE = '1'B;
                  IF (~ GOT_ONE)
                  THEN DO;
                     CALL CONCAT (NAME_BUF, 'There is no name associated with the account ', ACCOUNT);
                     CALL M$WRITE (WRITE_NAME);
                     END;
                  END;
               END;
            END;   /* DO WHILE (~END_OF_FILE) */
         END; /* WHEN RETURN */
      WHENALTRETURN DO;
         IF (~ GOT_ONE)
         THEN DO;
            CALL CONCAT (NAME_BUF, 'There is no name associated with the account ', ACCOUNT);
            CALL M$WRITE (WRITE_NAME);
            END;
         END;
      END;
      ACCOUNT_BUF = ' ';
      CALL M$PROMPT (SETPROMPT);
      CALL M$READ (READ_ACCT);
   END; /* DO WHILE */
 
IF (SUBSTR (ACCOUNT_BUF, 0, 1) = '.') THEN GOTO NAME_MODE;
 
FIN: ;
 
CALL M$CLOSE (CLOSE_SI);
CALL M$CLOSE (CLOSE_OU);
CALL M$CLOSE (CLOSE_RN);
 
ACCT4NAME: PROC;
DCL Z SBIN;
DCL TEXT1 CHAR (0) STATIC INIT ('The account associated with user ');
DCL IS CHAR (0) STATIC INIT (' is ');
 
Z = LENGTHC (ACCOUNT_BUF) - 1;
DO WHILE ((SUBSTR (ACCOUNT_BUF, Z, 1) = ' ') AND
          (Z > -1) );
   Z = Z - 1;
   END;
Z = Z + 1;
 
IF (Z > 0)
THEN DO;
   CALL CONCAT (NAME_BUF, TEXT1, SUBSTR (ACCOUNT_BUF, 0, Z), IS, KEYBUF.TEXT);
   CALL M$WRITE (WRITE_NAME);
   END;
 
RETURN;
END ACCT4NAME;
 
NAME4ACCT: PROC;
DCL Z SBIN;
DCL X SBIN;
DCL TEXT2 CHAR (0) STATIC INIT ('The name associated with the account ');
DCL IS CHAR (0) STATIC INIT (' is ');
 
Z = LENGTHC (ACCOUNT) - 1;
DO WHILE ((SUBSTR (ACCOUNT, Z, 1) = ' ') AND
          (Z > -1) );
   Z = Z - 1;
   END;
Z = Z + 1;
 
X = LENGTHC (IN_BUF) - 1;
DO WHILE ((SUBSTR (IN_BUF, X, 1) = ' ') AND
          (X > -1) );
   X = X - 1;
   END;
X = X + 1;
 
IF (Z + X > 0)
THEN DO;
   CALL CONCAT (NAME_BUF, TEXT2, SUBSTR (ACCOUNT, 0, Z), IS, SUBSTR (IN_BUF, 0, X) );
   CALL M$WRITE (WRITE_NAME);
   END;
 
RETURN;
END NAME4ACCT;
 
END LOON;
 
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
 
WILD_COMPARE: PROC (LEN, TEXT, BUF, BUF_LEN) ALTRET;
/* RETURN IF MATCHED,  ALTRETURN IF NO MATCH */
%INCLUDE XUW_MACRO_C;
%XUW_ENTRIES;
DCL LEN UBIN;
DCL TEXT CHAR (LEN);
DCL BUF_LEN UBIN WORD ALIGNED;
DCL BUF CHAR (BUF_LEN);
DCL CUR_MODE UBIN SYMREF;  /* 0=ACCOUNT, 1=NAME */
%XUW_WILDCARD ;
DCL I UBIN;
 
CALL INDEX (I, '?', TEXT)
WHENRETURN DO;
   XUW_WILDCARD.INPUT_ = VECTOR (BUF);
   XUW_WILDCARD.PATTERN_ = VECTOR (TEXT);
   CALL X$WILDCMP (XUW_WILDCARD)
   WHENRETURN DO;
      RETURN;
      END;
   WHENALTRETURN DO;
      ALTRETURN;
      END;
   END;
WHENALTRETURN DO;
   IF (CUR_MODE = 1)
   THEN DO;
      IF (TEXT = BUF)
      THEN DO;
         RETURN;
         END;
      ELSE DO;
         ALTRETURN;
         END;
      END;
   ELSE DO;  /* CUR_MODE = 0 - ACCOUNT */
      IF (SUBSTR (BUF, 0, LEN) = TEXT)
      THEN DO;
         RETURN;
         END;
      ELSE DO;
         ALTRETURN;
         END;
      END;
   END;
END WILD_COMPARE;
 
%EOD;
/*T***********************************************************/
/*T*                                                         */
/*T* Copyright (c) Bull HN Information Systems Inc., 1989    */
/*T*                                                         */
/*T***********************************************************/
BREAK: PROC ASYNC;
%INCLUDE CP_6;
DCL M$SI DCB ;
DCL START_HERE REMEMBER SYMREF;
DCL THIS_PROMPT VECTOR SYMREF;
DCL LISTING BIT (1) SYMREF;
%F$DCB;
%FPT_READ( FPTN=READ_SI, DCB=M$SI, BUF=IN_BUF );
DCL IN_BUF CHAR (80) STATIC;
%FPT_TRMPRG(FPTN = FPT_TRMPRG,
             RSTBRK = YES,
             STCLASS = CONSTANT);
%FPT_PROMPT ( FPTN=PROMPEM,
              PROMPT = PROMPTCHARS,
              DCB=M$UC);
DCL PROMPTCHARS CHAR (0) STATIC INIT ('Enter ''C'' to continue*');
%FPT_WRITE( FPTN=WRITE_CR, VFC=YES, BUF=CR, DCB=M$UC );
DCL CR CHAR(0) CONSTANT INIT('a');
DCL B$TCB$ PTR SYMREF;
DCL ARS SBIN ;
DCL BROKE BIT(1) STATIC INIT('0'B);
%B$TCB;
%B$BRK;
DO INHIBIT;           /* Keep breaks out while in here. */
   CALL M$TRMPRG(FPT_TRMPRG);   /* Reset break count.   */
   IF (NOT LISTING)
   THEN DO;
      UNWIND TO START_HERE;
      END;
   CALL M$PROMPT( PROMPEM ) ;
   IN_BUF = ' ';
   CALL M$READ( READ_SI ) ALTRET( IO_ERROR );
   ARS = DCBADDR(DCBNUM(M$SI))->F$DCB.ARS#;
   PROMPEM.PROMPT_ = THIS_PROMPT;
   CALL M$PROMPT( PROMPEM );
   PROMPEM.PROMPT_ = VECTOR ( PROMPTCHARS );
   IF SUBSTR(IN_BUF,0,1) = 'C'  OR  SUBSTR(IN_BUF,0,1) = 'c'
   THEN DO;
      RETURN;
      END;
IO_ERROR:   ;
   CALL M$CLRSTK;
   UNWIND TO START_HERE;
   END;
END BREAK;
