
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:1    
        1        1        /*M*   ZIU$Q2PR          IDS/II         IDS UTILITY FOR AREA PRINT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME: ZIU$Q2PR             AUTHOR:   D.F. HANRAHAN
        9        9
       10       10
       11       11
       12       12
       13       13                                     PRINT UTILITY
       14       14                                       ZIU$Q2PR
       15       15
       16       16
       17       17                  The print utility is used  to obtain a formatted print
       18       18               of  information  stored  in an  integrated  IDS file. The
       19       19               utility  will  allow a  selection  of  record types to be
       20       20               printed  within a page  range or data  base key range. In
       21       21               addition,  the   print  utility   will  print  out  other
       22       22               pertinent   information  in  the   header  of  each  page
       23       23               selected. This information  includes the page number, the
       24       24               date  last  modified, the  current  high  line, the first
       25       25               available line,  how full the page  is in percent and how
       26       26               much space is available in bytes. In addition to printing
       27       27               all the  data fields  in each  record,  this utility will
       28       28               also print all the sets with their storage attributes and
       29       29               pointer values. these are  followed by any associated key
       30       30               fields  and  the names  of the  fields  that  compose the
       31       31               associated keys.
       32       32
       33       33
       34       34                  The PRINT utility is most useful for finding any holes
       35       35               or problems  in the data  base since it  provides all the
       36       36               information needed to analyze an IDS area intractively on
       37       37               line without the need of an octal dump of the area.
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:2    
       38       38
       39       39
       40       40                  The program works in the  following way. A page or key
       41       41               range  (which is  stored  in an  array in  ZI$DIR include
       42       42               file) is obtained  one range at a  time. The current page
       43       43               number is  evaluated as an  inventory,  data or attribute
       44       44               page. If  it is a  data page  (as it most  often will be)
       45       45               then DATAPG_PRINT is called to print the page.
       46       46
       47       47
       48       48                  DATAPG_PRINT will start  by taking the first six words
       49       49               of the page to analyze and  print page header information
       50       50               which includes  the number of  records on the page (equal
       51       51               to the  size of the  offset  array). Each  element of the
       52       52               offset  array  tells what  byte of  the  page that record
       53       53               starts at.   However, if that array  element has the high
       54       54               order bit on then this  indicates that there is no record
       55       55               there  (deleted).   Once I have  found the  record, I may
       56       56               then look at the record type (REC_FRMT.TYPE). If the type
       57       57               is a  calc  header then I  will  print it  according to a
       58       58               standard format  (except  when  RCNT is  greater  than -1
       59       59               which means specific record types were asked for). If the
       60       60               record is not a  calc record then I  must read the schema
       61       61               to find out what record it is. To do this I walk the 'OA'
       62       62               to 'RC'  record  set  extracting  each  record to compare
       63       63               record types. Once a match is made, I find the 'SN' owner
       64       64               record to get the  name of the  record.  I then print the
       65       65               information including the page,dbk and line number.
       66       66
       67       67                  The next step is to get the item names and data within
       68       68               that record  so I call  FIND_PRINT_ITEMS. This  procedure
       69       69               walks the  'RC' to 'FR'  set extracting  the item records
       70       70               and finding the 'SN' owner record for each 'FR'. The 'FR'
       71       71               record provides an EIS  descriptor which tells me exactly
       72       72               where the  item  begins.  Other  information in the  'FR'
       73       73               record tells me what the  data type and size is. The 'SN'
       74       74               record provides the item name which is then printed.
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:3    
       75       75
       76       76                  When I have reached the end of the chain on the items,
       77       77               I will then  call  FIND_PRINT_SETS. This  procedure walks
       78       78               the 'RC' to  'RS' or  'SOSM' record  chain. As each SO-SM
       79       79               record is retrieved, I must  determine if it is a SO (set
       80       80               owner)  or  SM   (set  member),   then  extract  the  EIS
       81       81               descriptor  to get  the   pointer  locations  and  sizes,
       82       82               extract  the  pointers, convert  them to  ASCII and print
       83       83               them. Also I will find the 'SC' record owner of each SOSM
       84       84               record to get the set  attributes (Ie. the method used to
       85       85               store the  set  pointers in  that set).  Then I must once
       86       86               again get the 'SN' record owner of the 'SC' record to get
       87       87               the set name. If  I should find out  that the set type is
       88       88               equal to 3, instead of  outputting the set information, I
       89       89               will call  ASC_KEY. This set type  means that this set is
       90       90               really an  associated key field and  not a set. A flag is
       91       91               tripped  and the  information  stored in a  table.  These
       92       92               associated  keys are  printed out after  the last set has
       93       93               been printed.
       94       94
       95       95                                                                         */
       96       96
       97       97        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:4    
       98       98        /*********************************************************************/
       99       99        ZIU$Q2PR: PROC ALTRET;
      100      100    1   DCL REC_TYP SBIN(36) STATIC INIT(0);
      101      101        /**/
      102      102    1   DCL SKIP CHAR(1) STATIC ALIGNED INIT('A');
      103      103    1   DCL VFC3LINES CHAR(4) STATIC ALIGNED INIT('C   ');
      104      104    1   DCL 1 PAGE_HDR STATIC ALIGNED,
      105      105    1         2 CAR_CON CHAR(1) INIT('q') UNAL, /* VFC TOP OF PAGE */
      106      106    1         2 * CHAR(10) INIT('AREA NAME:') UNAL,
      107      107    1         2 AREA_NAME CHAR(19) INIT(' ') UNAL,
      108      108    1         2 * CHAR(13) INIT(' PAGE NUMBER:') UNAL,
      109      109    1         2 PGNO CHAR(11) UNAL,
      110      110    1         2 * CHAR(0) INIT('  SPACE AVAIL:') UNAL,
      111      111    1         2 SP_AV CHAR(4) UNAL;
      112      112    1   DCL 1 PAGE_HDR2 STATIC ALIGNED,
      113      113    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      114      114    1         2 * CHAR(11) INIT('DATE STAMP=') UNAL,
      115      115    1         2 DTSP CHAR(8) UNAL,
      116      116    1         2 * CHAR(11) INIT(' ') UNAL,
      117      117    1         2 * CHAR(0) INIT('TIME STAMP=') UNAL,
      118      118    1         2 TMSP UNAL,
      119      119    1           3 * CHAR(8) UNAL,
      120      120    1           3 SS CHAR(5) UNAL,
      121      121    1         2 PRCNT CHAR(3) UNAL,
      122      122    1         2 * CHAR(6) INIT('% FULL');
      123      123    1   DCL 1 PAGE_HDR3 STATIC ALIGNED,
      124      124    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      125      125    1         2 * CHAR(13) INIT('CURR HIGH LN=') UNAL,
      126      126    1         2 CURR_HIGH CHAR(5) UNAL,
      127      127    1         2 * CHAR(27) INIT('            FIRST AVAIL LN=') UNAL,
      128      128    1         2 FST_AVAIL CHAR(5) UNAL,
      129      129    1         2 * CHAR(12) INIT('     CHKSUM=') UNAL,
      130      130    1         2 CHKSUM CHAR(8) UNAL;
      131      131    1   DCL 1 REC_HDR STATIC SYMDEF ALIGNED,
      132      132    1         2 CAR_CON BIT(9) INIT('00100001'B) UNAL,
      133      133    1         2 REC_NM CHAR(25) UNAL,
      134      134    1         2 * CHAR(5) INIT(' DBK=') UNAL,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:5    
      135      135    1         2 DBK CHAR(10) UNAL,
      136      136    1         2 * CHAR(6) INIT(' PAGE=') UNAL,
      137      137    1         2 PAGE_NO CHAR(8) UNAL,
      138      138    1         2 * CHAR(6) INIT(' LINE=') UNAL,
      139      139    1         2 LN_NBR CHAR(5) UNAL,
      140      140    1         2 * CHAR(3) INIT(' ') UNAL,
      141      141    1         2 PSMODE CHAR(6) UNAL;
      142      142    1   DCL 1 SET_HDR0 STATIC ALIGNED,
      143      143    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      144      144    1         2 * CHAR(42) INIT(' ') CALIGNED,
      145      145    1         2 PRIOR CHAR(10) INIT('     PRIOR') CALIGNED,
      146      146    1         2 OWNER CHAR(12) INIT('       OWNER') CALIGNED,
      147      147    1         2 NEXT CHAR(12) INIT('        NEXT') CALIGNED;
      148      148    1   DCL 1 SET_HDR STATIC SYMDEF ALIGNED,
      149      149    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      150      150    1         2 * CHAR(5) INIT(' ') UNAL,
      151      151    1         2 NAME CHAR(30) UNAL,
      152      152    1         2 * CHAR(1) INIT(' ') UNAL,
      153      153    1         2 ORDER CHAR(6) UNAL,
      154      154    1         2 PRIOR CHAR(10) UNAL,
      155      155    1         2 * CHAR(2) INIT(' ') UNAL,
      156      156    1         2 OWNER CHAR(10) INIT(' ') UNAL,
      157      157    1         2 * CHAR(2) INIT(' ') UNAL,
      158      158    1         2 NEXT CHAR(10) UNAL,
      159      159    1         2 * CHAR(1) INIT(' ') UNAL,
      160      160    1         2 GLO_LOC CHAR(6) INIT('      ') UNAL,
      161      161    1         2 SET_TYPE CHAR(5) UNAL;
      162      162    1   DCL 1 ITEM STATIC ALIGNED,
      163      163    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      164      164    1         2 * CHAR(4) INIT(' ') UNAL,
      165      165    1         2 NAME CHAR(18) UNAL,
      166      166    1         2 * CHAR(1) INIT(' ') UNAL,
      167      167    1         2 TYPE CHAR(9) UNAL,
      168      168    1         2 * CHAR(1) INIT(' ') UNAL,
      169      169    1         2 SZ CHAR(3) UNAL,
      170      170    1         2 * CHAR(2) UNAL INIT(' '),
      171      171    1         2 KEY_TYPE CHAR(60) UNAL;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:6    
      172      172    1   DCL 1 IT_HDR STATIC ALIGNED,
      173      173    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      174      174    1         2 * CHAR(22) INIT(' ') UNAL,
      175      175    1         2 * CHAR(1) INIT(' ') UNAL,
      176      176    1         2 DATA CHAR(50) INIT(' ') UNAL;
      177      177    1   DCL 1 EX_ITDATA STATIC ALIGNED,
      178      178    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      179      179    1         2 * CHAR(23) INIT(' ') UNAL,
      180      180    1         2 DATA CHAR(50) INIT(' ') UNAL;
      181      181    1   DCL 1 CALC_HDR STATIC ALIGNED,
      182      182    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      183      183    1         2 * CHAR(23) INIT('*CALC HEADER       DBK=') UNAL,
      184      184    1         2 DBKVAL CHAR(11) UNAL,
      185      185    1         2 * CHAR(8) INIT('  PRIOR=') UNAL,
      186      186    1         2 PR CHAR(10) UNAL,
      187      187    1         2 * CHAR(7) INIT('  NEXT=') UNAL,
      188      188    1         2 NT CHAR(10) UNAL;
      189      189    1   DCL 1 INV_PRLN STATIC ALIGNED,
      190      190    1         2 LNBR UBIN(36) UNAL,
      191      191    1         2 P_LINE (0:15) UNAL,
      192      192    1           3 PRLN UBIN(36) UNAL;
      193      193    1   DCL 1 INV_P_LINE STATIC ALIGNED,
      194      194    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      195      195    1         2 LNBR CHAR(12) UNAL,
      196      196    1         2 P_LINE (0:9) UNAL,
      197      197    1           3 FIL CHAR(2) INIT(' '*0) UNAL,
      198      198    1           3 PLN CHAR(4) UNAL;
      199      199    1   DCL 1 INV_PG_HDR STATIC ALIGNED,
      200      200    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      201      201    1         2 * CHAR(72) INIT(
      202      202    1    'FREE WORDS PG# (0)  (1)   (2)   (3)   (4)   (5)   (6)   (7)    (8)  (9)') UNAL;
      203      203        /**/
      204      204    1   DCL 1 ADSC9 BASED(EIS$) CALIGNED,
      205      205    1         2 * UBIN(3) UNAL,
      206      206    1         2 EISADDR UBIN(15) UNAL,
      207      207    1         2 BYT_OFF UBIN(3) UNAL,
      208      208    1         2 TA UBIN(2) UNAL,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:7    
      209      209    1         2 * UBIN(1) UNAL,
      210      210    1         2 SIZE UBIN(12) UNAL;
      211      211    1   DCL 1 NDSC BASED(EIS$) ALIGNED,
      212      212    1         2 * UBIN(3) UNAL,
      213      213    1         2 EISADDR UBIN(15) UNAL,
      214      214    1         2 BYT_OFF UBIN(3) UNAL,
      215      215    1         2 TN UBIN(1) UNAL,
      216      216    1         2 SIGN UBIN(2) UNAL,
      217      217    1         2 SCAL UBIN(6) UNAL,
      218      218    1         2 SIZE UBIN(6) UNAL;
      219      219    1   DCL 1 BDSC BASED(EIS$) ALIGNED,
      220      220    1         2 * SBIN(3) UNAL,
      221      221    1         2 EISADDR SBIN(15) UNAL,
      222      222    1         2 BYT_OFF SBIN(2) UNAL,
      223      223    1         2 BIT_OFF SBIN(4) UNAL,
      224      224    1         2 SIZE SBIN(12) UNAL;
      225      225    1   DCL EIS$ PTR STATIC ALIGNED;
      226      226    1   DCL BLN# UBIN(36) STATIC ALIGNED;
      227      227    1   DCL ELN# UBIN(36) STATIC UNAL;
      228      228    1   DCL LST_LN UBIN(18) STATIC UNAL;
      229      229    1   DCL REC_POS UBIN(36) STATIC ALIGNED;
      230      230    1   DCL REC_LOC UBIN(18) BASED ALIGNED;
      231      231    1   DCL REC_CNT UBIN(36) STATIC ALIGNED;
      232      232    1   DCL REC_INDX SBIN STATIC;
      233      233    1   DCL SET_INDX SBIN STATIC;
      234      234    1   DCL CURR_REC SBIN STATIC SYMDEF;
      235      235    1   DCL LAST_DBK SBIN SYMREF;
      236      236    1   DCL REC_DATA_CNT SBIN(36) STATIC ALIGNED;
      237      237    1   DCL SET$ PTR STATIC SYMDEF ALIGNED;
      238      238    1   DCL SET BIT(SET_LN) BASED(SET$) CALIGNED;
      239      239    1   DCL SETC CHAR(SET_LN) BASED(SET$) UNAL;
      240      240    1   DCL SET_LN SBIN(36) STATIC ALIGNED;
      241      241    1   DCL ITEM$ PTR STATIC ALIGNED;
      242      242    1   DCL CHAR50 CHAR(50) BASED(ITEM$); /* Used to convert data items */
      243      243    1   DCL BINU UBIN(36) BASED(ITEM$) CALIGNED; /* from data base to fields */
      244      244    1   DCL BINH UBIN(18) BASED(ITEM$) CALIGNED; /* that are displayable */
      245      245    1   DCL ALPH_ITEM CHAR(T_ITEM_LN) BASED ALIGNED;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:8    
      246      246    1   DCL NUM_ITEM UBIN(36) BASED ALIGNED;
      247      247    1   DCL ITEM_LN SBIN(36) STATIC INIT(0) ALIGNED;
      248      248    1   DCL I_O_INDX SBIN WORD STATIC INIT(0) ALIGNED;
      249      249    1   DCL CHK_KEY UBIN WORD STATIC INIT(0) ALIGNED;
      250      250    1   DCL INDX SBIN WORD STATIC INIT(0) ALIGNED;
      251      251    1   DCL NUM_TEMP UBIN(36) STATIC ALIGNED;
      252      252    1   DCL READ_CNT UBIN(36) STATIC ALIGNED;
      253      253    1   DCL KB UBIN(36) STATIC ALIGNED;
      254      254    1   DCL KE UBIN(36) STATIC ALIGNED;
      255      255    1   DCL OFF_ARRY$ PTR STATIC ALIGNED;
      256      256    1   DCL INVTCT SBIN(36) STATIC ALIGNED;
      257      257    1   DCL INVPGNO SBIN(36) STATIC ALIGNED;
      258      258    1   DCL INV_TEMP UBIN(36) STATIC ALIGNED;
      259      259    1   DCL ITEM_TEMP CHAR(10) STATIC ALIGNED;
      260      260    1   DCL T_ITEM_LN SBIN(36) STATIC ALIGNED;
      261      261    1   DCL SET_TEMP BIT(36) STATIC ALIGNED;
      262      262    1   DCL SZ2 UBIN(18) BASED CALIGNED;
      263      263    1   DCL SZ3 UBIN(27) BASED CALIGNED;
      264      264    1   DCL SZ4 UBIN(36) BASED CALIGNED;
      265      265    1   DCL TEMP$ PTR STATIC ALIGNED; /*USED FOR CALC HDR OUTPUT*/
      266      266        /*                Variables needed for printing floating point */
      267      267    1   DCL SNGL BIT(36) STATIC ALIGNED;
      268      268    1   DCL BIT36 BIT(36) BASED UNAL;
      269      269    1   DCL DOUBLE BIT(72) STATIC DALIGNED;
      270      270    1   DCL BIT72 BIT(72) BASED UNAL;
      271      271    1   DCL ASCII_NUM CHAR(64) STATIC CALIGNED;
      272      272    1   DCL MAX_DIGITS SBIN WORD STATIC ALIGNED;
      273      273    1   DCL AN_DIGITS SBIN WORD STATIC ALIGNED;
      274      274    1   DCL AN_POWER_10 SBIN WORD STATIC ALIGNED;
      275      275    1   DCL RESULT_LEN SBIN WORD STATIC ALIGNED;
      276      276        /*  Common library calls */
      277      277    1   DCL XPN_7RTOLS ENTRY(5) ALTRET;
      278      278    1   DCL XPN_7DTOLS ENTRY(5) ALTRET;
      279      279    1   DCL XPN_7ELJE ENTRY(9) ALTRET;
      280      280    1   DCL XPN_7LSPTOR ENTRY(4) ALTRET;
      281      281    1   DCL XPN_7LSPTOD ENTRY(4) ALTRET;
      282      282    1   DCL DONE BIT(1) STATIC INIT('0'B) UNAL;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:9    
      283      283    1   DCL KEY_FLG BIT(1) STATIC INIT('0'B) UNAL;
      284      284    1   DCL KEY_RANGE BIT(1) STATIC INIT('0'B) UNAL;
      285      285    1   DCL LOCAL_ONLY BIT(1) STATIC INIT('0'B) UNAL;
      286      286    1   DCL DUMP_FILE BIT(1) STATIC INIT('0'B) UNAL;
      287      287    1   DCL NXT_PTR BIT(1) STATIC INIT('0'B) UNAL;
      288      288    1   DCL ITM_SELECTED BIT(1) STATIC INIT('1'B) UNAL;
      289      289    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      290      290    1   DCL SYS_FUNC_PREC ENTRY ALTRET;
      291      291    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      292      292    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      293      293    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      294      294    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      295      295    1   DCL SYS_FUNC_DATE ENTRY ALTRET;
      296      296    1   DCL SYS_FUNC_TSTAMP ENTRY ALTRET;
      297      297    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      298      298    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      299      299    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
      300      300    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
      301      301    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      302      302    1   DCL DB_FUNC_FOR1 ENTRY(3) ALTRET;
      303      303    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
      304      304    1   DCL EXCTN_REPRT_SETUP ENTRY;
      305      305    1   DCL EXECUTION_OUTPUT ENTRY;
      306      306    1   DCL PAGE_RANGE ENTRY(6);
      307      307    1   DCL ZERO_SUP ENTRY(3);
      308      308    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
      309      309    1   DCL BUILD_SETXREF ENTRY ALTRET;
      310      310    1   DCL BUILD_RECXREF ENTRY ALTRET;
      311      311    1   DCL FIND_MSTR_ENTRY ENTRY(2);
      312      312    1   DCL GET_NXT_AC ENTRY(1) ALTRET;
      313      313        /**/
      314      314        %INCLUDE ZI_DBU_XREF;
      315      481        %XREF_TBLS;
      316      556        %INCLUDE CP_6;
      317      637        %INCLUDE CP_6_SUBS;
      318     1177        %F$DCB;
      319     1234        %B$TCB;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:10   
      320     1237        %B$EXCFR;
      321     1255        %INCLUDE B_ERRORS_C;
      322     2382        %INCLUDE ZI_ERRORS_SUBS;
      323     2902        %INCLUDE ZI_PRSE_SUBS;
      324     3058        %SUB UNTIL_END_OF_REALM = "WHILE(UWA.DB_STATUS ~= '02100')";
      325     3059        %INCLUDE ZI_RVA_C;
      326     3740        %CAN_RVA_REF;
      327     4059        %INCLUDE ZI_UWA_C;
      328     4749        %ZI$UWAB;
      329     5089        %INCLUDE ZI$PG_STRUCTS;
      330     5192        %ATBLK_PG;
      331     5248        %DATA_PG;
      332     5267        %INVTY_PG;
      333     5283        %INCLUDE ZI_GLOBAL_DBUTIL;
      334     5461         %SYS_FUNC;
      335     5553         %MISC_DCLS;
      336     5606        %INCLUDE ZI$DIR;
      337     5763        %DIR;
      338     5907    1   DCL CHK_SUM BIT(1) STATIC SYMDEF;
      339     5908    1   DCL ENTRY$ PTR SYMREF ALIGNED;
      340     5909    1   DCL GROUP$ PTR SYMREF ALIGNED;
      341     5910    1   DCL NBUFS SBIN SYMREF ALIGNED;
      342     5911    1   DCL PTR_SIZE SBIN STATIC SYMDEF;
      343     5912    1   DCL KEY_SIZE SBIN STATIC SYMDEF;
      344     5913    1   DCL KEY_PTR_SIZE SBIN STATIC SYMDEF;
      345     5914    1   DCL LPP SBIN WORD SYMREF ALIGNED;
      346     5915    1   DCL LOW_DBK SBIN WORD SYMREF ALIGNED;
      347     5916    1   DCL CALCHDRS UBIN WORD ALIGNED;
      348     5917    1   DCL 1 AC_REC ALIGNED,
      349     5918    1         2 CALC_NULL SBIN WORD,
      350     5919    1         2 BASE_DBK SBIN WORD,
      351     5920    1         2 KEYS_ALLOC SBIN WORD,
      352     5921    1         2 MIN_DBK SBIN WORD,
      353     5922    1         2 MAX_DBK SBIN WORD,
      354     5923    1         2 MIN_PAGE SBIN WORD,
      355     5924    1         2 MAX_PAGE SBIN WORD,
      356     5925    1         2 FRST_INV_PG SBIN WORD,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:11   
      357     5926    1         2 DBK_PER_PG SBIN WORD,
      358     5927    1         2 DBK_PER_CALC SBIN WORD;
      359     5928    1   DCL FREIS$ PTR STATIC SYMDEF;
      360     5929    1   DCL FREIS SBIN WORD STATIC SYMDEF UNAL;
      361     5930    1   DCL 1 FREIS_RDEF REDEF FREIS,
      362     5931    1         2 * UBIN(30) UNAL,
      363     5932    1         2 SIZE UBIN(6) UNAL;
      364     5933    1   DCL 1 INEIS STATIC SYMDEF ALIGNED,
      365     5934    1         2 EISADDR UBIN(18) UNAL,
      366     5935    1         2 CN UBIN(3) UNAL,
      367     5936    1         2 TN UBIN(1) UNAL,
      368     5937    1         2 SIGN UBIN(2) UNAL,
      369     5938    1         2 SCAL SBIN(6) UNAL,
      370     5939    1         2 SIZE UBIN(6) UNAL;
      371     5940        /**/
      372     5941        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:12   
      373     5942        /*************************************************************/
      374     5943        /*             Begin procedure                               */
      375     5944        /*************************************************************/
      376     5945        /*
      377     5946           Variables prefixed by "ZI$DIR" area those initialized by
      378     5947           the parsing operation.
      379     5948        */
      380     5949    1       IF RCNT<0 THEN ZI$DIR.PCALC='1'B;
      381     5950    1   /**/ FUNSF = %IN#; /* MOVED FROM 320 */
      382     5951    1   /**/ SHARESF = %ALL#;
      383     5952    1   ZIU$Q2PR1: ENTRY ALTRET; /* ENTERED FROM REPAIR FUN=UPD */
      384     5953    1   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;
      385     5954    1   /**/ ORGSF = %IDS#;
      386     5955    1   /**/ TESTSF = %NO#;
      387     5956    1   /**/ ACSSF = %DIRECT#;
      388     5957    1   /**/ ASNSF = %FILE#;
      389     5958    1   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;
      390     5959    1       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);
      391     5960    1   ZIU$Q2PR2: ENTRY ALTRET; /* FROM REPAIR TO SKIP RE-OPEN */
      392     5961    1       IF XREF_BUILT=%NO# THEN
      393     5962    2       DO;
      394     5963    2           CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);
      395     5964    2           CALL BUILD_MSTR_TBL;
      396     5965    2           CALL BUILD_SETXREF;
      397     5966    2           CALL BUILD_RECXREF;
      398     5967    2           LAST_DBK=UWA.SF_REC.DBKOA;
      399     5968    2           CALL GET_NXT_AC(X); /* RESTORE AC_REC IN UWA */
      400     5969    2           END;
      401     5970        /*
      402     5971                Summary for data base functions reading schema:
      403     5972                DB_FUNC_FDR = find direct by DBK
      404     5973                       _FRS = find next within set
      405     5974                       _FOR = find owner of set
      406     5975                       _GET = retreive record info.
      407     5976                A DB_STATUS = '02100' means end of chain encountered.
      408     5977        */
      409     5978    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:13   
      410     5979    1       IF ZI$DIR.LOCKCODE=2 THEN
      411     5980    2       DO;
      412     5981    2           CALL PRINT_LOCKS ALTRET(ALTEND_ZIU$Q2PR);
      413     5982    2           GOTO EXIT_RTN;
      414     5983    2           END;
      415     5984    1       IF UWA.AC_REC.PG_TYPE>0 THEN /* INDEX AREA */
      416     5985    2       DO;
      417     5986    2           CALL INDEX_PRINT ALTRET(ALTEND_ZIU$Q2PR);
      418     5987    2           GOTO EXIT_RTN;
      419     5988    2           END;
      420     5989    1       CALL GET_ATBLK_INFO ALTRET(ALTEND_ZIU$Q2PR);
      421     5990         /* check attribute page of area */
      422     5991    1       IF UWA.AC_REC.FIR_INV_PG = 0 THEN /* ADJUST FOR 0 INV PGS */
      423     5992    1           UWA.AC_REC.FIR_INV_PG = UWA.AC_REC.MAX_PAGE +1;
      424     5993        /*
      425     5994            PRINT inventory pages
      426     5995        */
      427     5996    1       IF ZI$DIR.PRNT_INV AND (UWA.AC_REC.FIR_INV_PG <= UWA.AC_REC.MAX_PAGE) THEN
      428     5997    2       DO;
      429     5998    2           ZI$DIR.PRNT_INV = %NO#;
      430     5999    2           RB = UWA.AC_REC.FIR_INV_PG;
      431     6000    2           RE = UWA.AC_REC.MAX_PAGE;
      432     6001    2           I_O_SIZE = RE-RB+1;
      433     6002    3           DO RB = RB TO RE;
      434     6003    3               CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);
      435     6004    3               INVPG$ = ADDR(I_O_BUF(0));
      436     6005    3               CALL INVPG_PRNT;
      437     6006    3               END;
      438     6007    2           DCBSF = ZI$DIR.AREA_NM.DCB#;
      439     6008    2           CALL SYS_FUNC_CLOS;
      440     6009    2           RETURN;
      441     6010    2           END;
      442     6011    1       ELSE
      443     6012    1           IF ZI$DIR.PRNT_INV AND (UWA.AC_REC.FIR_INV_PG > UWA.AC_REC.MAX_PAGE) THEN
      444     6013    2           DO;
      445     6014    2               ZI$DIR.PRNT_INV = %NO#;
      446     6015    2               DCBSF = ZI$DIR.AREA_NM.DCB#;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:14   
      447     6016         /*E* ERROR: ZIU-DBU#NOINV-C
      448     6017                           MESSAGE:  There are no inventory pages in file %FN.
      449     6018                           */
      450     6019    2               ERRCODESF.ERR# = DBU#NOINV;
      451     6020    2               MSGCODE = ERRCODE_RDEF;
      452     6021    2               CALL SYS_FUNC_ERRMSG;
      453     6022    2               ALTRETURN;
      454     6023    2               END;
      455     6024        /*
      456     6025               Page range proc returns the values for the next range
      457     6026               begining(RB) and range ending (RE). Also does error checks
      458     6027               for page range and flags when ranges are done.
      459     6028        */
      460     6029    1   ZIU$Q2PR3: ENTRY ALTRET; /* FROM REPAIR TO SKIP RE-READ ATRBLK */
      461     6030    1       IF ZI$DIR.CODE=#REPAIR THEN
      462     6031    1           REMEMBER END_ZIU$Q2PR IN RESTART; /* FOR Q2RP,RESTART=RETURN */
      463     6032    1       DONE = '0'B;
      464     6033    1       OUT_INDX = 33; /* INIT GREATER THAN I_O_SIZE */
      465     6034    1       I_O_SIZE = 32;
      466     6035    1       CALL PAGE_RANGE(RB,RE,32,I_O_SIZE,UWA.AC_REC.MAX_PAGE,DONE);
      467     6036        /**/
      468     6037        /* Atribute blk header has been outputted  */
      469     6038        /**/
      470     6039    1       IF ZI$DIR.ALTKEY THEN
      471     6040    2       DO;
      472     6041    2           CALL ALTK_PRNT ALTRET(ALTRTN);
      473     6042    2           IF RCNT > -1 THEN CALL BUILD_REC_TBL ALTRET(ALTEND_ZIU$Q2PR);
      474     6043    2           IF KCNT > -1 THEN CALL KEY_PRNT ALTRET(ALTEND_ZIU$Q2PR);
      475     6044    3           ELSE DO;
      476     6045    3               ERRCODESF.ERR# = DBU#NOSUCH;
      477     6046    3               MSGCODE = ERRCODE_RDEF;
      478     6047    3               CALL SYS_FUNC_ERRMSG;
      479     6048    3               END;
      480     6049    2           END;
      481     6050    1       ELSE
      482     6051    1           IF ZI$DIR.CALCKEY THEN
      483     6052    2           DO;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:15   
      484     6053    2               CALL CALC_PRNT ALTRET(ALTRTN);
      485     6054    2               IF KCNT > -1 THEN CALL KEY_PRNT ALTRET(ALTEND_ZIU$Q2PR);
      486     6055    3               ELSE DO;
      487     6056         /*E* ERROR:  ZIU-DBU#NOSUCH-C
      488     6057                               MESSAGE: No such record.
      489     6058                               */
      490     6059    3                   ERRCODESF.ERR# = DBU#NOSUCH;
      491     6060    3                   MSGCODE = ERRCODE_RDEF;
      492     6061    3                   CALL SYS_FUNC_ERRMSG;
      493     6062    3                   END;
      494     6063    2               END;
      495     6064    1           ELSE
      496     6065    2           DO;
      497     6066         /*  SETUP ZI$DIR.PHEAD AND REC_TBL */
      498     6067    2               CALL BUILD_REC_TBL ALTRET(ALTEND_ZIU$Q2PR);
      499     6068    2               IF KCNT=-1 THEN
      500     6069    2                   CALL PAGE_PRNT ALTRET(ALTEND_ZIU$Q2PR);
      501     6070    2               ELSE
      502     6071    2                   CALL KEY_PRNT ALTRET(ALTEND_ZIU$Q2PR);
      503     6072    2               END;
      504     6073    1   EXIT_RTN:
      505     6074    1       IF ZI$DIR.CODE=#REPAIR THEN RETURN;
      506     6075    1       DCBSF = ZI$DIR.AREA_NM.DCB#;
      507     6076    1       CALL SYS_FUNC_CLOS;
      508     6077    1       RETURN;
      509     6078        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:16   
      510     6079        /***************************************************************/
      511     6080        /*                                                             */
      512     6081        /*               P A G E   P R I N T                           */
      513     6082        /**************************************************************/
      514     6083    1   PAGE_PRNT: PROC ALTRET;
      515     6084    3       DO WHILE (~DONE);
      516     6085    3           CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);
      517     6086    3           OUT_INDX =0;
      518     6087    4           DO RB = RB TO RE BY 1;
      519     6088         /*
      520     6089            RB is not neccessarly the actual page number of this
      521     6090            page if printing from a dump file and pages were missing.
      522     6091            Therefore we get actual page no from the page.
      523     6092         */
      524     6093    4               DATA$ = ADDR(I_O_BUF(OUT_INDX));
      525     6094    4               IF DATA_PG.CON_INTRVAL >= UWA.AC_REC.FIR_INV_PG
      526     6095    4                  AND RCNT = -1 THEN
      527     6096    5               DO;
      528     6097    5                   INVPG$=ADDR(I_O_BUF(OUT_INDX));
      529     6098    5                   CALL INVPG_PRNT;
      530     6099    5                   END;
      531     6100    4               ELSE IF DATA_PG.CON_INTRVAL = 0 THEN
      532     6101    5                   DO;
      533     6102        /*
      534     6103                              This poutine prints attributes found in page#0
      535     6104        */
      536     6105    5                       ATBLK$ = ADDR(I_O_BUF(OUT_INDX));
      537     6106    5                       CALL EXCTN_REPRT_SETUP;
      538     6107    5                       CALL EXECUTION_OUTPUT;
      539     6108    5                       IF ATBLK_PG.STATUS.LOCKED OR ATBLK_PG.STATUS.LOCKUPD
      540     6109    5                          OR ATBLK_PG.STATUS.KFILE_CURR THEN
      541     6110    5                           CALL PRINT_LOCKS ALTRET(ALTEND_ZIU$Q2PR);
      542     6111    5                       END;
      543     6112    4                   ELSE
      544     6113    5                   DO;
      545     6114        /*
      546     6115                            Standard print of data on data page
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:17   
      547     6116        */
      548     6117    5                       REC_CNT = 1;
      549     6118    5                       CALL DATAPG_PRNT(0,DATA_PG.OFF_LN.SEC);
      550     6119    5                       END;
      551     6120    4               OUT_INDX=OUT_INDX+1;
      552     6121    4               END;
      553     6122    3           CALL PAGE_RANGE(RB,RE,32,I_O_SIZE,UWA.AC_REC.MAX_PAGE,DONE);
      554     6123    3           OUT_INDX=0;
      555     6124    3           END;
      556     6125    2       RETURN;
      557     6126    2   ALTEND_ZIU$Q2PR:
      558     6127    2       ALTRETURN;
      559     6128    2   END PAGE_PRNT;
      560     6129        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:18   
      561     6130        /********************************************************************/
      562     6131        /*                                                                  */
      563     6132        /*   A L T E R N A T E  K E Y   P R I N T                           */
      564     6133        /********************************************************************/
      565     6134    1   ALTK_PRNT: PROC ALTRET;
      566     6135        /*
      567     6136           This routine takes the alternate key value received from ZI$DIR
      568     6137           and converts the alternate key to a local dbkey(s), which it passes
      569     6138           to KEY_PRNT.  First, the index id and key length for the specified
      570     6139           keyname must be found in the schema.  This information is used to
      571     6140           extract the corresponding local dbkey(s) from the alternate key file.
      572     6141        */
      573     6142
      574     6143    2   DCL 1 SKEY ALIGNED, /*used to read altkeyfile*/
      575     6144    2         2 LENGTH UBIN(9) UNAL,
      576     6145    2         2 IXID UBIN(18) UNAL,
      577     6146    2         2 VALUE CHAR(252) UNAL;
      578     6147    2   DCL 1 SKEY_RDEF REDEF SKEY ALIGNED,
      579     6148    2         2 LENGTH UBIN(9) UNAL,
      580     6149    2         2 * CHAR(4) UNAL,
      581     6150    2         2 * CHAR(250) UNAL;
      582     6151    2   DCL IXID UBIN(36) UNAL; /*to be found in schema*/
      583     6152    2   DCL KLNG UBIN(36) UNAL; /*to be found in schema*/
      584     6153    2   DCL DBKY SBIN(36);
      585     6154    2   DCL CDBKY REDEF DBKY CHAR(4); /*local dbkey to be passed to KEY_PRNT*/
      586     6155    2   DCL REC_FOUND BIT(1) UNAL;
      587     6156    2   DCL ALT$ PTR STATIC;
      588     6157    2   DCL KEY$ PTR STATIC;
      589     6158    2   DCL CHAR1 CHAR(1) BASED;
      590     6159    2   DCL NUM UBIN(3) BASED UNAL;
      591     6160    2   DCL 1 RBUF SYMREF,
      592     6161    2         2 TEXT CHAR(256) UNAL;
      593     6162    2   DCL ALTKEY_TYPE SBIN WORD UNAL;
      594     6163    2   DCL COMP_WORD SBIN WORD BASED UNAL;
      595     6164    2   DCL COMP_HALF SBIN HALF BASED UNAL;
      596     6165    2   DCL FLAG BIT(1) UNAL;
      597     6166    2   DCL ZIU$PACK ENTRY;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:19   
      598     6167    2   DCL B$IS$ PTR SYMREF;
      599     6168    2   DCL M UBIN UNAL;
      600     6169    2   DCL N UBIN UNAL;
      601     6170    2   DCL P UBIN UNAL;
      602     6171    2   DCL EXPO UBIN UNAL;
      603     6172    2   DCL MCHAR CHAR(60) UNAL;
      604     6173
      605     6174    2       ZI$DIR.ALTKEY = %NO#;
      606     6175    2       REC_FOUND = %NO#;
      607     6176    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC,UWA.SF_REC.DBKOA) ALTRET(ALTEND_ZIU$Q2PR);
              6176                /*find direct OA rec*/
      608     6177    2       CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(ALTEND_ZIU$Q2PR);
              6177                /*find next within OA-SC set*/
      609     6178    3       DO WHILE (UWA.DB_STATUS ~= '02100'); /*while not end of realm*/
      610     6179    3           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(ALTEND_ZIU$Q2PR);
      611     6180    3           IF UWA.SC_REC.SETTYPE = 3 /*if this set is altkeys*/
      612     6181    4           THEN DO;
      613     6182    4               CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(ALTEND_ZIU$Q2PR);
              6182                        /*find owner of SC-SN set*/
      614     6183    4               CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(ALTEND_ZIU$Q2PR);
              6183                        /*get SN rec*/
      615     6184    4               IF UWA.SN_REC.SENAME = ALTKY.KEYNAME /*if this is keyname specified*/
      616     6185    5               THEN DO;
      617     6186    5                   REC_FOUND = %YES#;
      618     6187    5                   IXID = UWA.SC_REC.IXID; /*extract keyname info*/
      619     6188    5                   KLNG = UWA.SC_REC.KEY_LENGHT;
      620     6189         /* find data type and eisdesc of this altkey */
      621     6190    5                   CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.SCSOSM.SEC);
      622     6191    5                   UWA.CF_REC.SYN = 0;
      623     6192    6                   DO WHILE (UWA.CF_REC.SYN ~= 1); /* want synonymous FR */
      624     6193    6                       CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC);
      625     6194    6                       CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC);
      626     6195    6                       END;
      627     6196    5                   CALL DB_FUNC_FOR(CAN_RVA.FRCFS.SEC);
      628     6197    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);
      629     6198    5                   ALTKEY_TYPE = UWA.FR_REC.FTYP;
      630     6199    5                   FREIS = UWA.FR_REC.BUFLOC;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:20   
      631     6200    5                   UWA.DB_STATUS = '02100';
      632     6201    5                   END;
      633     6202    4               ELSE CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(
              6202                        ALTEND_ZIU$Q2PR); /*next in OA-SC*/
      634     6203    4               END;
      635     6204    3           ELSE CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(
              6204                    ALTEND_ZIU$Q2PR); /*next in OA-SC*/
      636     6205    3           END;
      637     6206    2       IF REC_FOUND = %NO#
      638     6207    3       THEN DO;
      639     6208         /*E* ERROR: ZIU-DBU#NOKEYNM-C
      640     6209              MESSAGE: Key name "%U1" does not exist in the schema.
      641     6210              */
      642     6211    3           CALL INDEX(INDX,' ',ALTKY.KEYNAME);
      643     6212    3           ERR_INSERT.CNT(0) = INDX;
      644     6213    3           ERR_INSERT.TEXT(0) = ALTKY.KEYNAME;
      645     6214    3           ERRCODESF.ERR# = DBU#NOKEYNM;
      646     6215    3           MSGCODE = ERRCODE_RDEF;
      647     6216    3           CALL SYS_FUNC_ERRMSG;
      648     6217    3           ALTRETURN;
      649     6218    3           END;
      650     6219        /* find length of given key */
      651     6220    2       CALL INDEX1(I,'''',RBUF.TEXT,0);
      652     6221    2       CALL INDEX1(J,'''',RBUF.TEXT,I+1);
      653     6222    2       INDX = J - I - 1;
      654     6223
      655     6224    2       KEYFID.NM = DCBADDR(DCBSF)->F$DCB.NAME#;
      656     6225    2       CALL INSERT(KEYFID.NM.TEXT,KEYFID.NM.CNT,1,':');
      657     6226    2       KEYFID.NM.CNT = KEYFID.NM.CNT + 1;
      658     6227    2       DCBNMSF = VECTOR(KEYFID.NM);
      659     6228    2       CALL SYS_FUNC_GETDCB ALTRET(ALTEND_ZIU$Q2PR);
      660     6229    2       KEYFID.DCB# = DCBSF;
      661     6230    2       KEY_SHADWSF = ZI$DIR.AREA_NM.DCB#;
      662     6231
      663     6232    2       FUNSF = %IN#; /*open altkey file*/
      664     6233    2       ORGSF = %KEYED#;
      665     6234    2       REASGNSF = %NO#;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:21   
      666     6235    2       TESTSF = %NO#;
      667     6236    2       ACSSF = %DIRECT#;
      668     6237    2       ASNSF = %FILE#;
      669     6238    2       SHARESF= %ALL#;
      670     6239    2       FIDSF = KEYFID.NM.TEXT;
      671     6240    2       CALL SYS_FUNC_OPEN ALTRET(ALTEND_ZIU$Q2PR);
      672     6241
      673     6242    2       DBKY = 0;
      674     6243    2       SKEY = '0'B;
      675     6244    3       IF SUBSTR(ALTKY.VALUE,0,1) = '.' THEN DO;
      676     6245    3           ALT$ = ADDR(SKEY.VALUE); /*dest*/
      677     6246    3           KEY$ = ADDR(ALTKY.VALUE); /*source*/
      678     6247    3           M = 0;
      679     6248    3           MCHAR = ' ';
      680     6249    3           N = INDX - 1; /*INDX is the length of altky*/
      681     6250    4           DO J = 1 TO INDX-1;
      682     6251    4               N = N - 1;
      683     6252    4               KEY$ = PINCRC(KEY$,1);
      684     6253    4               CALL CHARBIN(K,KEY$->CHAR1); /*convert 1 octal char to binary*/
      685     6254    4               EXPO = 1;
      686     6255    5               DO P=1 TO N; /*to count the exponentiation*/
      687     6256    5                   EXPO = EXPO * 8;
      688     6257    5                   END;
      689     6258    4               M = M + K * EXPO;
      690     6259    4               END;
      691     6260    3           J = M;
      692     6261    3           KEY$ = ADDR(SKEY.VALUE);
      693     6262    3           ALTKY.VALUE = ' ';
      694     6263    3           CALL BINCHAR(MCHAR,M);
      695     6264    3           CALL INSERT(ALTKY.VALUE,0,INDX-1,SUBSTR(MCHAR,60-INDX+1,INDX-1));
      696     6265    3           CALL CHARBIN(J,SUBSTR(ALTKY.VALUE,0,INDX-1));
      697     6266    3           KEY$->COMP_WORD = J;
      698     6267    3           ALTKY.VALUE = SKEY.VALUE;
      699     6268    3           END;
      700     6269    2       ELSE
      701     6270    3       DO CASE(ALTKEY_TYPE);
      702     6271    3       CASE(1); /* 36 bit binary...comp word */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:22   
      703     6272    3           KEY$ = ADDR(SKEY.VALUE);
      704     6273    3           CALL CHARBIN(J,SUBSTR(ALTKY.VALUE,0,INDX));
      705     6274    3           KEY$->COMP_WORD = J;
      706     6275    3           ALTKY.VALUE = SKEY.VALUE;
      707     6276    3       CASE(2); /* 18 bit binary...comp half */
      708     6277    3           KEY$ = ADDR(SKEY.VALUE);
      709     6278    3           CALL CHARBIN(J,SUBSTR(ALTKY.VALUE,0,INDX));
      710     6279    3           KEY$->COMP_HALF = J;
      711     6280    3           ALTKY.VALUE = SKEY.VALUE;
      712     6281    3       CASE(3); /* unsigned packed decimal */
      713     6282    3           CALL INDEX1(J,'.',ALTKY.VALUE);
      714     6283    3           IF J < INDX /* found decimal point */
      715     6284    4           THEN DO;
      716     6285    4               INEIS.SCAL = J - INDX + 1;
      717     6286    4               INEIS.SIZE = INDX - 1;
      718     6287    4               CALL CONCAT(SKEY.VALUE,SUBSTR(ALTKY.VALUE,0,J),SUBSTR(ALTKY.VALUE,J+1,
              6287                        INDX-J-1));
      719     6288    4               ALTKY.VALUE = SKEY.VALUE;
      720     6289    4               END;
      721     6290    4           ELSE DO;
      722     6291    4               INEIS.SCAL = 0;
      723     6292    4               INEIS.SIZE = INDX;
      724     6293    4               END;
      725     6294    4           IF INEIS.SIZE > FREIS_RDEF.SIZE THEN DO;
      726     6295         /*E* ERROR: ZIU-DBU#KYLNG-C
      727     6296                         MESSAGE: Key "%U1" is not the correct length.
      728     6297                    */
      729     6298    4               ERR_INSERT.CNT(0) = INDX;
      730     6299    4               ERR_INSERT.TEXT(0) = ALTKY.VALUE;
      731     6300    4               ERRCODESF.ERR# = DBU#KYLNG;
      732     6301    4               MSGCODE = ERRCODE_RDEF;
      733     6302    4               CALL SYS_FUNC_ERRMSG;
      734     6303    4               GOTO ALTEND_ZIU$Q2PR;
      735     6304    4               END;
      736     6305    3           INEIS.EISADDR = POFFW(ADDR(ALTKY.VALUE),B$IS$);
      737     6306    3           INEIS.CN = 0;
      738     6307    3           INEIS.TN = 0;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:23   
      739     6308    3           INEIS.SIGN = 3; /* NONE */
      740     6309    3           FREIS$ = ADDR(SKEY);
      741     6310    3           CALL ZIU$PACK;
      742     6311    3           ALTKY.VALUE = SKEY.VALUE;
      743     6312
      744     6313    3       CASE(4); /* signed packed decimal */
      745     6314    3           CALL INDEX1(J,'.',ALTKY.VALUE);
      746     6315    3           IF J < INDX /* found decimal point */
      747     6316    4           THEN DO;
      748     6317    4               INEIS.SCAL = J - INDX + 1;
      749     6318    4               INEIS.SIZE = INDX - 1;
      750     6319    4               CALL CONCAT(SKEY.VALUE,SUBSTR(ALTKY.VALUE,0,J),SUBSTR(ALTKY.VALUE,J+1,
              6319                        INDX-J-1));
      751     6320    4               ALTKY.VALUE = SKEY.VALUE;
      752     6321    4               END;
      753     6322    4           ELSE DO;
      754     6323    4               INEIS.SCAL = 0;
      755     6324    4               INEIS.SIZE = INDX;
      756     6325    4               END;
      757     6326    4           IF INEIS.SIZE > FREIS_RDEF.SIZE THEN DO;
      758     6327         /*   ERROR: ZIU-DBU#KYLNG-C
      759     6328            MESSAGE: Key %U1 is not the correct length.
      760     6329         */
      761     6330    4               ERR_INSERT.CNT(0) = INDX;
      762     6331    4               ERR_INSERT.TEXT(0) = ALTKY.VALUE;
      763     6332    4               ERRCODESF.ERR# = DBU#KYLNG;
      764     6333    4               MSGCODE = ERRCODE_RDEF;
      765     6334    4               CALL SYS_FUNC_ERRMSG;
      766     6335    4               GOTO ALTEND_ZIU$Q2PR;
      767     6336    4               END;
      768     6337    3           INEIS.EISADDR = POFFW(ADDR(ALTKY.VALUE),B$IS$);
      769     6338    3           INEIS.CN = 0;
      770     6339    3           INEIS.TN = 0;
      771     6340    3           INEIS.SIGN = 1; /* LEADING */
      772     6341    4           IF (SUBSTR(ALTKY.VALUE,0,1)~='+') AND (SUBSTR(ALTKY.VALUE,0,1)~='-') THEN DO
              6341                    ;
      773     6342    4               CALL CONCAT(SKEY.VALUE,'+',ALTKY.VALUE);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:24   
      774     6343    4               ALTKY.VALUE = SKEY.VALUE;
      775     6344    4               INEIS.SIZE = INEIS.SIZE + 1;
      776     6345    4               END;
      777     6346    3           FREIS$ = ADDR(SKEY);
      778     6347    3           CALL ZIU$PACK;
      779     6348    3           ALTKY.VALUE = SKEY.VALUE;
      780     6349
      781     6350    3       CASE(5,19); /*ASCII character and character varying */
      782     6351    3           SKEY.VALUE = ALTKY.VALUE;
      783     6352
      784     6353    3       CASE(9); /*unspecified 9 bit units */
      785     6354         /* ERROR: ZIU-DBU#OCT-C
      786     6355            MESSAGE: Key %U1 is defined as UNSPEC and must be entered in octal.
      787     6356            */
      788     6357    3           CALL INDEX1(INDX,' ',ALTKY.VALUE);
      789     6358    3           ERR_INSERT.CNT(0) = INDX;
      790     6359    3           ERR_INSERT.TEXT(0) = ALTKY.VALUE;
      791     6360    3           ERRCODESF.ERR# = DBU#OCT;
      792     6361    3           MSGCODE = ERRCODE_RDEF;
      793     6362    3           CALL SYS_FUNC_ERRMSG;
      794     6363    3           GOTO ALTEND_ZIU$Q2PR;
      795     6364
      796     6365    3       CASE(11,12); /* single and double precision floating point */
      797     6366    3           FLAG = %NO#;
      798     6367    3           CALL INDEX1(AN_DIGITS,'E',ALTKY.VALUE);
      799     6368    3           IF (SUBSTR(ALTKY.VALUE,0,1) = '+') OR (SUBSTR(ALTKY.VALUE,0,1) = '-')
      800     6369    4           THEN DO;
      801     6370    4               ASCII_NUM = SUBSTR(ALTKY.VALUE,0,AN_DIGITS);
      802     6371    4               FLAG = %YES#;
      803     6372    4               END;
      804     6373    3           ELSE CALL CONCAT(ASCII_NUM,'+',SUBSTR(ALTKY.VALUE,0,AN_DIGITS));
      805     6374    4           IF AN_DIGITS > INDX THEN DO;
      806     6375         /*E* ERROR: ZIU-DBU#FLPT-C
      807     6376                   MESSAGE: Error in given floating point key.
      808     6377           */
      809     6378    4               ERRCODESF.ERR# = DBU#FLPT;
      810     6379    4               MSGCODE = ERRCODE_RDEF;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:25   
      811     6380    4               CALL SYS_FUNC_ERRMSG;
      812     6381    4               GOTO ALTEND_ZIU$Q2PR;
      813     6382    4               END;
      814     6383    3           IF SUBSTR(ALTKY.VALUE,AN_DIGITS+1,1) = '-'
      815     6384    4           THEN DO;
      816     6385    4               CALL CHARBIN(AN_POWER_10,SUBSTR(ALTKY.VALUE,AN_DIGITS+2,INDX-AN_DIGITS-2
              6385                        ));
      817     6386    4               AN_POWER_10 = -AN_POWER_10;
      818     6387    4               END;
      819     6388    3           ELSE IF SUBSTR(ALTKY.VALUE,AN_DIGITS+1,1) = '+'
      820     6389    3               THEN CALL CHARBIN(AN_POWER_10,SUBSTR(ALTKY.VALUE,AN_DIGITS+2,INDX-
              6389                        AN_DIGITS-2));
      821     6390    3               ELSE CALL CHARBIN(AN_POWER_10,SUBSTR(ALTKY.VALUE,AN_DIGITS+1,INDX-
              6390                        AN_DIGITS-1));
      822     6391    3           KEY$ = ADDR(SKEY.VALUE);
      823     6392    3           IF FLAG THEN AN_DIGITS = AN_DIGITS-1; /* DONT COUNT SIGN */
      824     6393    3           IF ALTKEY_TYPE = 11
      825     6394    4           THEN DO; CALL XPN_7LSPTOR(SNGL,
      826     6395    4                  ASCII_NUM,
      827     6396    4                  AN_DIGITS,
      828     6397    4                  AN_POWER_10)
      829     6398    4                  ALTRET(ALTEND_ZIU$Q2PR);
      830     6399    4               KEY$->BIT36 = SNGL;
      831     6400    4               END;
      832     6401    4           ELSE DO; CALL XPN_7LSPTOD(DOUBLE,
      833     6402    4                  ASCII_NUM,
      834     6403    4                  AN_DIGITS,
      835     6404    4                  AN_POWER_10)
      836     6405    4                  ALTRET(ALTEND_ZIU$Q2PR);
      837     6406    4               KEY$->BIT72 = DOUBLE;
      838     6407    4               END;
      839     6408    3           ALTKY.VALUE = SKEY.VALUE;
      840     6409
      841     6410    3       CASE(ELSE);
      842     6411         /* ERROR: ZIU-DBU#BADTYPE-C
      843     6412            MESSAGE: Unsupported item type for key %U1.
      844     6413         */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:26   
      845     6414    3           CALL INDEX1(INDX,' ',ALTKY.VALUE);
      846     6415    3           ERR_INSERT.CNT(0) = INDX;
      847     6416    3           ERR_INSERT.TEXT(0) = ALTKY.VALUE;
      848     6417    3           ERRCODESF.ERR# = DBU#BADTYPE;
      849     6418    3           MSGCODE = ERRCODE_RDEF;
      850     6419    3           CALL SYS_FUNC_ERRMSG;
      851     6420    3           GOTO ALTEND_ZIU$Q2PR;
      852     6421    3           END;
      853     6422    2       SKEY.LENGTH = 2 + KLNG;
      854     6423    2       SKEY.IXID = IXID;
      855     6424
      856     6425    2       ZI$DIR.LOCALKEY = %YES#;
      857     6426    2       KCNT = -1;
      858     6427
      859     6428    2       DCBSF = KEYFID.DCB#; /*position in altkey file*/
      860     6429    2       KEYVSF = SKEY_RDEF;
      861     6430    2       COUNTSF = 0;
      862     6431    2       CALL SYS_FUNC_PREC ALTRET(ALTEND_ZIU$Q2PR); /*position in file*/
      863     6432    2       SKEY_RDEF = KEYVSF;
      864     6433    2       IF NO_KEYSF = %YES#
      865     6434    3       THEN DO;
      866     6435    3           COUNTSF = 1;
      867     6436    4           DO WHILE ((SKEY.IXID = IXID) AND (SUBSTR(SKEY.VALUE,0,KLNG) = SUBSTR(ALTKY.
              6436                    VALUE,0,KLNG)) AND (KEYVSF.LEN ~= 0));
      868     6437    4               CALL INSERT(CDBKY,4 - ATBLK_PG.DB_INFO.DBK_SZ,ATBLK_PG.DB_INFO.DBK_SZ,
      869     6438    4                  SUBSTR(SKEY.VALUE,KLNG,ATBLK_PG.DB_INFO.DBK_SZ));
      870     6439    4               KCNT = KCNT + 1;
      871     6440    4               KEY_RNG.FIR(KCNT) = DBKY;
      872     6441    4               KEY_RNG.SEC(KCNT) = DBKY;
      873     6442    4               CALL SYS_FUNC_PREC ALTRET(ALTEND_ZIU$Q2PR); /*get next key*/
      874     6443    4               SKEY_RDEF = KEYVSF;
      875     6444    4               END;
      876     6445    3           END;
      877     6446    2       ELSE ALTRETURN;
      878     6447
      879     6448    2       IF KCNT = -1 THEN
      880     6449    3       DO;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:27   
      881     6450         /*E* ERROR: ZIU-DBU#NOKY-C
      882     6451              MESSAGE: Key "%U1" does not exist.
      883     6452              */
      884     6453    3           ERR_INSERT.CNT(0) = INDX;
      885     6454    3           CALL INDEX1(I,'''',RBUF.TEXT);
      886     6455    3           ERR_INSERT.TEXT(0) = SUBSTR(RBUF.TEXT,I+1,INDX);
      887     6456    3           ERRCODESF.ERR# = DBU#NOKY;
      888     6457    3           MSGCODE = ERRCODE_RDEF;
      889     6458    3           CALL SYS_FUNC_ERRMSG;
      890     6459    3           END;
      891     6460
      892     6461    2       DCBSF = KEYFID.DCB#; /*close altkey file*/
      893     6462    2       IF DCBADDR(DCBSF)->F$DCB.FCD# = %YES# THEN
      894     6463    3       DO;
      895     6464    3           CALL SYS_FUNC_CLOS;
      896     6465    3           CALL SYS_FUNC_RELDCB;
      897     6466    3           END;
      898     6467    2       RETURN;
      899     6468    2   ALTEND_ZIU$Q2PR:
      900     6469    2       DCBSF = KEYFID.DCB#; /*close altkey file*/
      901     6470    2       IF DCBADDR(DCBSF)->F$DCB.FCD# = %YES# THEN
      902     6471    3       DO;
      903     6472    3           CALL SYS_FUNC_CLOS;
      904     6473    3           CALL SYS_FUNC_RELDCB;
      905     6474    3           END;
      906     6475    2       ALTRETURN;
      907     6476    2   END ALTK_PRNT;
      908     6477        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:28   
      909     6478        /********************************************************************/
      910     6479        /*                                                                  */
      911     6480        /*          C A L C   K E Y   P R I N T                             */
      912     6481        /********************************************************************/
      913     6482        /*
      914     6483           This routine takes the *CALC key and recordname received from
      915     6484           ZI$DIR and prints the record(s) with these calc fields.  ZIC$CALC
      916     6485           is called to determine the dbkey of the first record in the chain
      917     6486           that this record(s) should be in.  The chain is then walked and
      918     6487           keys of records with matching calc fields are saved.  After the entire
      919     6488           chain has been walked, KEY_PRNT is called to print the record(s).
      920     6489        */
      921     6490    1   CALC_PRNT: PROC ALTRET;
      922     6491
      923     6492    2   DCL 1 REC_TYPE ALIGNED,
      924     6493    2         2 FIR UBIN HALF UNAL,
      925     6494    2         2 SEC UBIN HALF UNAL;
      926     6495    2   DCL REC_LEN UBIN WORD;
      927     6496    2   DCL REC_NM CHAR(30);
      928     6497    2   DCL RECNM_LEN UBIN WORD;
      929     6498    2   DCL NUM_ITEMS UBIN WORD;
      930     6499    2   DCL 1 ITEM (0:100) ALIGNED,
      931     6500    2         2 NAME_SZ SBIN WORD,
      932     6501    2         2 OFFSET SBIN WORD,
      933     6502    2         2 LEN SBIN WORD,
      934     6503    2         2 TYPE SBIN WORD,
      935     6504    2         2 BEIST SBIN WORD,
      936     6505    2         2 EIS SBIN WORD;
      937     6506    2   DCL NUM_SETS UBIN WORD;
      938     6507    2   DCL 1 SET (0:30)ALIGNED,
      939     6508    2         2 NAME_SIZ SBIN WORD,
      940     6509    2         2 OWNER_OFFSET SBIN WORD,
      941     6510    2         2 OWNER_SIZ SBIN WORD,
      942     6511    2         2 PRIOR_OFFSET SBIN WORD,
      943     6512    2         2 PRIOR_SIZ SBIN WORD,
      944     6513    2         2 NEXT_OFFSET SBIN WORD,
      945     6514    2         2 NEXT_SIZ SBIN WORD;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:29   
      946     6515    2   DCL 1 KEY_ARRAY ALIGNED,
      947     6516    2         2 SIZ SBIN WORD,
      948     6517    2         2 MEMBER (0:300) SBIN WORD;
      949     6518    2   DCL ITEM_NMS (0:100) CHAR(30);
      950     6519    2   DCL SET_NMS (0:30) CHAR(30);
      951     6520    2   DCL 1 RA_REC ALIGNED,
      952     6521    2         2 LOWDBK SBIN WORD,
      953     6522    2         2 HIDBK SBIN WORD,
      954     6523    2         2 CALC_HDRS SBIN WORD,
      955     6524    2         2 HDR_OFFSET SBIN WORD;
      956     6525    2   DCL PG_NO UBIN WORD;
      957     6526    2   DCL LN_NO UBIN WORD;
      958     6527    2   DCL ERR_CD UBIN WORD;
      959     6528        /*
      960     6529          calc key values are kept track of via the table CALCKY.
      961     6530          CALCKY.OFFSET(X) contains the character offset into RBUF of the
      962     6531          X'th calc key specified in the invocation line.  CALCKY.LENGTH(X)
      963     6532          is the length in bytes of the calc key specified.
      964     6533        */
      965     6534    2   DCL 1 CALCKY (0:19) CALIGNED,
      966     6535    2         2 OFFSET UBIN WORD UNAL,
      967     6536    2         2 LENGTH UBIN WORD UNAL;
      968     6537    2   DCL 1 RBUF SYMREF,
      969     6538    2         2 TEXT CHAR(256) UNAL;
      970     6539
      971     6540    2   DCL BUFFR CHAR(4096) ALIGNED;
      972     6541    2   DCL 1 WRD BASED UNAL,
      973     6542    2         2 TYP UBIN HALF UNAL,
      974     6543    2         2 LEN UBIN HALF UNAL;
      975     6544    2   DCL BUFAREA BASED(BUF$) CHAR(SIZE);
      976     6545    2   DCL BUF$ PTR STATIC;
      977     6546    2   DCL CALC$ PTR STATIC;
      978     6547    2   DCL B$IS$ PTR SYMREF;
      979     6548    2   DCL KEY$ PTR STATIC;
      980     6549    2   DCL CHAR1 CHAR(1) BASED;
      981     6550    2   DCL NUM UBIN(3) BASED UNAL;
      982     6551    2   DCL SIZE UBIN WORD UNAL;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:30   
      983     6552    2   DCL ASCII_SOURCE CHAR(200) STATIC CALIGNED;
      984     6553    2   DCL TEMP CHAR(200) STATIC CALIGNED;
      985     6554    2   DCL ZIC$RREC ENTRY(14);
      986     6555    2   DCL ZIC$CALC ENTRY(8);
      987     6556    2   DCL ZIU$PACK ENTRY;
      988     6557    2   DCL COMP_HALF SBIN HALF BASED UNAL;
      989     6558    2   DCL COMP_WORD SBIN WORD BASED UNAL;
      990     6559    2   DCL SETNXT$ PTR STATIC ALIGNED;
      991     6560    2   DCL EISNXT UBIN WORD UNAL;
      992     6561    2   DCL 1 NXTPT REDEF EISNXT,
      993     6562    2         2 * UBIN(3) UNAL,
      994     6563    2         2 EISADDR UBIN(15) UNAL,
      995     6564    2         2 BYT_OFF UBIN(3) UNAL,
      996     6565    2         2 TN UBIN(1) UNAL,
      997     6566    2         2 SIGN UBIN(2) UNAL,
      998     6567    2         2 SCAL UBIN(6) UNAL,
      999     6568    2         2 SIZE UBIN(6) UNAL;
     1000     6569    2   DCL NEXT_PG UBIN WORD;
     1001     6570    2   DCL NEXT_LN UBIN WORD;
     1002     6571    2   DCL NEXT_DBKEY SBIN WORD;
     1003     6572    2   DCL 1 RECORD BASED(REC$) UBIN WORD CALIGNED;
     1004     6573    2   DCL 1 REC STATIC CALIGNED,
     1005     6574    2         2 TYPE UBIN HALF UNAL,
     1006     6575    2         2 LEN UBIN HALF UNAL;
     1007     6576    2   DCL 1 REC_RDEF REDEF REC UBIN WORD CALIGNED;
     1008     6577    2   DCL MATCH BIT(1) UNAL;
     1009     6578    2   DCL FLAG BIT(1) UNAL;
     1010     6579    2   DCL M UBIN UNAL;
     1011     6580    2   DCL N UBIN UNAL;
     1012     6581    2   DCL I UBIN UNAL;
     1013     6582    2   DCL EXPO UBIN UNAL;
     1014     6583    2       BUFFR = ' ';
     1015     6584    2       ZI$DIR.CALCKEY = %NO#;
     1016     6585    3       IF RCNT ~= 0 THEN DO;
     1017     6586         /*E* ERROR: ZIU-DBU#NEEDRC-C
     1018     6587           MESSAGE: One record name must be specified when PRINTing by calc key.
     1019     6588           */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:31   
     1020     6589    3           ERRCODESF.ERR# = DBU#NEEDRC;
     1021     6590    3           MSGCODE = ERRCODE_RDEF;
     1022     6591    3           CALL SYS_FUNC_ERRMSG;
     1023     6592    3           ALTRETURN;
     1024     6593    3           END;
     1025     6594
     1026     6595    2       MSTR_INDX = 0;
     1027     6596    3       DO WHILE ((MSTR_REF.NAME(MSTR_INDX)~=RECORD_LIST.NAME(0)) AND (MSTR_INDX<=(
              6596                NO_RECS+1)));
     1028     6597    3           MSTR_INDX = MSTR_INDX + 1; /*find index into MSTR_REF*/
     1029     6598    3           END;
     1030     6599    2       IF MSTR_INDX > NO_RECS /*make sure valid recname given*/
     1031     6600    3       THEN DO;
     1032     6601    3           CALL INDEX(INDX,' ',RECORD_LIST.NAME(0));
     1033     6602    3           ERR_INSERT.CNT(0) = INDX;
     1034     6603    3           ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(0);
     1035     6604    3           ERRCODESF.ERR# = DBU#NOREC;
     1036     6605    3           MSGCODE = ERRCODE_RDEF;
     1037     6606    3           CALL SYS_FUNC_ERRMSG;
     1038     6607    3           ALTRETURN;
     1039     6608    3           END;
     1040     6609    2       IF MSTR_REF.NAME(SET_XREF.MSTRINDX(MSTR_REF.NEXT(MSTR_INDX)))~='*CALC'
     1041     6610    3       THEN DO;
     1042     6611         /*E* ERROR: ZIU-DBU#NOTCALC-C
     1043     6612              MESSAGE: Record "%U1" is not in the *CALC set.
     1044     6613              */
     1045     6614    3           CALL INDEX(INDX,' ',RECORD_LIST.NAME(0));
     1046     6615    3           ERR_INSERT.CNT(0) = INDX;
     1047     6616    3           ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(0);
     1048     6617    3           ERRCODESF.ERR# = DBU#NOTCALC;
     1049     6618    3           MSGCODE = ERRCODE_RDEF;
     1050     6619    3           CALL SYS_FUNC_ERRMSG;
     1051     6620    3           ALTRETURN;
     1052     6621    3           END;
     1053     6622    2       RECORD_LIST.TYPE(0) = MSTR_REF.TYPE(MSTR_INDX);
     1054     6623    2       REC_TYPE.FIR = 0;
     1055     6624    2       REC_TYPE.SEC = MSTR_REF.TYPE(MSTR_INDX);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:32   
     1056     6625        /*
     1057     6626          get record field info necessary for ZIC$CALC call
     1058     6627        */
     1059     6628    3       DO I = 0 TO 19;
     1060     6629    3           KEY_ARRAY.MEMBER(I) = -1;
     1061     6630    3           END;
     1062     6631    2       CALL ZIC$RREC(REC_TYPE,REC_LEN,REC_NM,
     1063     6632    2          RECNM_LEN,NUM_ITEMS,ITEM,NUM_SETS,SET,KEY_ARRAY,
     1064     6633    2          ITEM_NMS,SET_NMS,RA_REC,ERR_CD,ZI$DIR.AREA_NM.NAME.TEXT);
     1065     6634    2       RA_REC.HIDBK = UWA.RA_REC.HDBK;
     1066     6635    2       RA_REC.LOWDBK = UWA.RA_REC.LDBK;
     1067     6636    2       RA_REC.CALC_HDRS = UWA.RA_REC.CHDRS1;
     1068     6637    2       RA_REC.HDR_OFFSET = UWA.RA_REC.HOFFS;
     1069     6638    2       IF (ERR_CD = 1) OR (KEY_ARRAY.MEMBER(0) = -1) /*no calc fields found*/
     1070     6639    3       THEN DO;
     1071     6640    3           CALL INDEX(INDX,' ',RECORD_LIST.NAME(0));
     1072     6641    3           ERR_INSERT.CNT(0) = INDX;
     1073     6642    3           ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(0);
     1074     6643    3           ERRCODESF.ERR# = DBU#NOTCALC;
     1075     6644    3           MSGCODE = ERRCODE_RDEF;
     1076     6645    3           CALL SYS_FUNC_ERRMSG;
     1077     6646    3           ALTRETURN;
     1078     6647    3           END;
     1079     6648        /*
     1080     6649          build table of offsets into rbuf of each calc key given
     1081     6650        */
     1082     6651    3       DO I = 0 TO 19;
     1083     6652    3           CALCKY(I) = '0'B;
     1084     6653    3           END;
     1085     6654    2       I = 0;
     1086     6655    2       CNT = 0;
     1087     6656    2       INDX = 0;
     1088     6657    2       CALL INDEX1(INDX,'''',RBUF.TEXT,I);
     1089     6658    3       DO WHILE (INDX < LENGTHC(RBUF.TEXT));
     1090     6659    3           CALCKY.OFFSET(CNT)=INDX + 1; /*offset into rbuf of this calc key*/
     1091     6660    3           I = INDX + 1;
     1092     6661    3           CALL INDEX1(INDX,'''',RBUF.TEXT,I);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:33   
     1093     6662    3           CALCKY.LENGTH(CNT) = INDX - CALCKY.OFFSET(CNT); /* length of this calc key*/
     1094     6663    3           I = INDX + 1;
     1095     6664    3           CNT = CNT + 1;
     1096     6665    3           CALL INDEX1(INDX,'''',RBUF.TEXT,I);
     1097     6666    3           END;
     1098     6667
     1099     6668        /*
     1100     6669          make sure user has specified correct number of calc fields
     1101     6670        */
     1102     6671    3       IF KEY_ARRAY.SIZ ~= CNT THEN DO;
     1103     6672         /*E* ERROR: ZIU-DBU#CALCNUM-C
     1104     6673           MESSAGE: %U2 calc field(s) required and command line contained %U1.
     1105     6674           */
     1106     6675    3           CALL BINCHAR(ERR_INSERT.TEXT(0),CNT);
     1107     6676    3           CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);
     1108     6677    3           CALL BINCHAR(ERR_INSERT.TEXT(1),KEY_ARRAY.SIZ);
     1109     6678    3           CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);
     1110     6679    3           ERRCODESF.ERR# = DBU#CALCNUM;
     1111     6680    3           MSGCODE = ERRCODE_RDEF;
     1112     6681    3           CALL SYS_FUNC_ERRMSG;
     1113     6682    3           ALTRETURN;
     1114     6683    3           END;
     1115     6684        /*
     1116     6685          fill in type,len and calc fields of record (BUFAREA) to be
     1117     6686          passed to ZIC$CALC
     1118     6687        */
     1119     6688    2       BUF$ = ADDR(BUFFR);
     1120     6689    2       BUF$->WRD.TYP = MSTR_REF.TYPE(MSTR_INDX);
     1121     6690    2       BUF$->WRD.LEN = REC_LEN;
     1122     6691    3       DO X = 0 TO KEY_ARRAY.SIZ-1; /* KEY_ARRAY.SIZ = #calc fields */
     1123     6692    3           I = KEY_ARRAY.MEMBER(X);
     1124     6693    4           DO CASE(ITEM.TYPE(I));
     1125     6694    4           CASE(5,9); /* ASCII-BYTES AND UNSPEC-BYTES */
     1126     6695    4               SIZE = ITEM.LEN(I);
     1127     6696    4           CASE(ELSE); /* OTHER-NIBBLES */
     1128     6697    4               SIZE = ((4*ITEM.LEN(I))+((1+ITEM.LEN(I))/2)+8)/9;
     1129     6698    4               END;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:34   
     1130     6699    3           CALC$ = PINCRB(BUF$,4*ITEM.OFFSET(I)+((1+ITEM.OFFSET(I))/2));
     1131     6700    4           IF SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),1) = '.' THEN DO;
              6700                    /*user gave octal key*/
     1132     6701    4               KEY$ = ADDR(RBUF.TEXT);
     1133     6702    4               KEY$ = PINCRC(KEY$,CALCKY.OFFSET(X)+1); /*source*/
     1134     6703    4               M = 0;
     1135     6704    4               N = CALCKY.LENGTH(X) - 1;
     1136     6705    5               DO J = 1 TO CALCKY.LENGTH(X)-1; /*for each octal char given*/
     1137     6706    5                   N = N-1;
     1138     6707    5                   CALL CHARBIN(K,KEY$->CHAR1); /*convert 1 octal char to binary*/
     1139     6708    5                   EXPO = 1;
     1140     6709    6                   DO I=1 TO N; /*to count the exponentiation*/
     1141     6710    6                       EXPO = EXPO * 8;
     1142     6711    6                       END;
     1143     6712    5                   M = M + K * EXPO; /*convert octal to decimal*/
     1144     6713    5                   KEY$ = PINCRC(KEY$,1); /*bump source ptr*/
     1145     6714    5                   CALC$->COMP_WORD= M; /*put into destination field*/
     1146     6715    5                   END;
     1147     6716    4               J = M;
     1148     6717    4               END;
     1149     6718    3           ELSE
     1150     6719    4           DO CASE(ITEM.TYPE(I));
     1151     6720    4           CASE(1); /* 36 bit binary...comp word */
     1152     6721    4               CALL CHARBIN(J,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));
     1153     6722    4               CALC$->COMP_WORD = J;
     1154     6723    4           CASE(2); /* 18 bit binary...comp half */
     1155     6724    4               CALL CHARBIN(J,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));
     1156     6725    4               CALC$->COMP_HALF = J;
     1157     6726    4           CASE(3); /* unsigned packed decimal */
     1158     6727    4               CALL INDEX1(J,'.',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));
     1159     6728    4               IF J < CALCKY.LENGTH(X) /*  FOUND DECIMAL POINT */
     1160     6729    5               THEN DO;
     1161     6730    5                   INEIS.SCAL = J - CALCKY.LENGTH(X) + 1;
     1162     6731    5                   INEIS.SIZE = CALCKY.LENGTH(X) - 1;
     1163     6732    5         CALL CONCAT(ASCII_SOURCE,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),J),SUBSTR(RBUF.TEXT
              6732                  ,CALCKY.OFFSET(X)+J+1,CALCKY.LENGTH(X)-J-1));
     1164     6733    5                   END;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:35   
     1165     6734    5               ELSE DO;
     1166     6735    5                   INEIS.SCAL = 0;
     1167     6736    5                   INEIS.SIZE = CALCKY.LENGTH(X);
     1168     6737    5                   ASCII_SOURCE = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X));
     1169     6738    5                   END;
     1170     6739    4               INEIS.EISADDR = POFFW(ADDR(ASCII_SOURCE),B$IS$);
     1171     6740    4               INEIS.CN = 0;
     1172     6741    4               INEIS.TN = 0;
     1173     6742    4               INEIS.SIGN = 3; /*  NONE */
     1174     6743    4               FREIS = ITEM.EIS(I);
     1175     6744    4               FREIS$ = BUF$;
     1176     6745    4               CALL ZIU$PACK;
     1177     6746
     1178     6747    4           CASE(4); /* Signed packed decimal */
     1179     6748    4               CALL INDEX1(J,'.',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));
     1180     6749    4               IF J < CALCKY.LENGTH(X) /*  FOUND DECIMAL POINT */
     1181     6750    5               THEN DO;
     1182     6751    5                   INEIS.SCAL = J - CALCKY.LENGTH(X) + 1;
     1183     6752    5                   INEIS.SIZE = CALCKY.LENGTH(X) - 1;
     1184     6753    5         CALL CONCAT(ASCII_SOURCE,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),J),SUBSTR(RBUF.TEXT
              6753                  ,CALCKY.OFFSET(X)+J+1,CALCKY.LENGTH(X)-J-1));
     1185     6754    5                   END;
     1186     6755    5               ELSE DO;
     1187     6756    5                   INEIS.SCAL = 0;
     1188     6757    5                   INEIS.SIZE = CALCKY.LENGTH(X);
     1189     6758    5                   ASCII_SOURCE = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X));
     1190     6759    5                   END;
     1191     6760    4               INEIS.EISADDR = POFFW(ADDR(ASCII_SOURCE),B$IS$);
     1192     6761    4               INEIS.CN = 0;
     1193     6762    4               INEIS.TN = 0;
     1194     6763    4               INEIS.SIGN = 1; /*  leading */
     1195     6764    5               IF (SUBSTR(ASCII_SOURCE,0,1)~='+') AND (SUBSTR(ASCII_SOURCE,0,1)~='-')
              6764                        THEN DO;
     1196     6765    5                   CALL CONCAT(TEMP,'+',ASCII_SOURCE);
     1197     6766    5                   ASCII_SOURCE = TEMP;
     1198     6767    5                   INEIS.SIZE = INEIS.SIZE + 1;
     1199     6768    5                   END;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:36   
     1200     6769    4               FREIS = ITEM.EIS(I);
     1201     6770    4               FREIS$ = BUF$;
     1202     6771    4               CALL ZIU$PACK;
     1203     6772
     1204     6773    4           CASE(5,19); /* ASCII character and character varying */
     1205     6774    4               CALC$->BUFAREA = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X));
     1206     6775    4           CASE(9); /* unspecified 9 bit units */
     1207     6776         /*E* ERROR: ZIU-DBU#OCT-C
     1208     6777                   MESSAGE: Key "%U1" is defined as UNSPEC and must be entered in octal.
     1209     6778                   */
     1210     6779    4               ERR_INSERT.CNT(0) = CALCKY.LENGTH(X);
     1211     6780    4               ERR_INSERT.TEXT(0) = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X))
              6780                        ;
     1212     6781    4               ERRCODESF.ERR# = DBU#OCT;
     1213     6782    4               MSGCODE = ERRCODE_RDEF;
     1214     6783    4               CALL SYS_FUNC_ERRMSG;
     1215     6784    4               ALTRETURN;
     1216     6785
     1217     6786    4           CASE(11,12); /* single and double precision floating point */
     1218     6787    4               FLAG = %NO#;
     1219     6788    4               CALL INDEX1(AN_DIGITS,'E',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.
              6788                        LENGTH(X)));
     1220     6789    4               IF (SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),1) = '+') OR (SUBSTR(RBUF.TEXT,
              6789                        CALCKY.OFFSET(X),1) = '-')
     1221     6790    5               THEN DO;
     1222     6791    5                   ASCII_NUM = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),AN_DIGITS);
     1223     6792    5                   FLAG = %YES#;
     1224     6793    5                   END;
     1225     6794    4               ELSE CALL CONCAT(ASCII_NUM,'+',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),
              6794                        AN_DIGITS));
     1226     6795    5               IF AN_DIGITS >= CALCKY.LENGTH(X) THEN DO;
     1227     6796         /*   ERROR: ZIU-DBU#FLPT-C
     1228     6797            MESSAGE: Error in given floating point key.
     1229     6798         */
     1230     6799    5                   ERRCODESF.ERR# = DBU#FLPT;
     1231     6800    5                   MSGCODE = ERRCODE_RDEF;
     1232     6801    5                   CALL SYS_FUNC_ERRMSG;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:37   
     1233     6802    5                   ALTRETURN;
     1234     6803    5                   END;
     1235     6804    4               IF SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+AN_DIGITS+1,1) = '-'
     1236     6805    5               THEN DO;
     1237     6806    5                   CALL CHARBIN(AN_POWER_10,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+AN_DIGITS
              6806                            +2,CALCKY.LENGTH(X)-AN_DIGITS-2));
     1238     6807    5                   AN_POWER_10 = -AN_POWER_10;
     1239     6808    5                   END;
     1240     6809    4               ELSE IF SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+AN_DIGITS+1,1) = '+'
     1241     6810    4                   THEN CALL CHARBIN(AN_POWER_10,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+
              6810                            AN_DIGITS+2,CALCKY.LENGTH(X)-AN_DIGITS-2));
     1242     6811    4                   ELSE CALL CHARBIN(AN_POWER_10,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+
              6811                            AN_DIGITS+1,CALCKY.LENGTH(X)-AN_DIGITS-1));
     1243     6812    4               IF FLAG THEN AN_DIGITS = AN_DIGITS-1; /* DONT COUNT SIGN */
     1244     6813    4               IF ITEM.TYPE(I) = 11
     1245     6814    5               THEN DO; CALL XPN_7LSPTOR(SNGL,
     1246     6815    5                      ASCII_NUM,
     1247     6816    5                      AN_DIGITS,
     1248     6817    5                      AN_POWER_10)
     1249     6818    5                      ALTRET(ALTEND_ZIU$Q2PR);
     1250     6819    5                   CALC$->BIT36 = SNGL;
     1251     6820    5                   END;
     1252     6821    5               ELSE DO; CALL XPN_7LSPTOD(DOUBLE,
     1253     6822    5                      ASCII_NUM,
     1254     6823    5                      AN_DIGITS,
     1255     6824    5                      AN_POWER_10)
     1256     6825    5                      ALTRET(ALTEND_ZIU$Q2PR);
     1257     6826    5                   CALC$->BIT72 = DOUBLE; END;
     1258     6827    4           CASE(ELSE);
     1259     6828         /*E* ERROR: ZIU-DBU#BADTYPE-C
     1260     6829                   MESSAGE: Unsupported item type for key "%U1".
     1261     6830                   */
     1262     6831    4               ERR_INSERT.CNT(0) = CALCKY.LENGTH(X);
     1263     6832    4               ERR_INSERT.TEXT(0) = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X))
              6832                        ;
     1264     6833    4               ERRCODESF.ERR# = DBU#BADTYPE;
     1265     6834    4               MSGCODE = ERRCODE_RDEF;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:38   
     1266     6835    4               CALL SYS_FUNC_ERRMSG;
     1267     6836    4               ALTRETURN;
     1268     6837
     1269     6838    4               END;
     1270     6839    3           END;
     1271     6840        /*
     1272     6841          given a record and it's field info, ZIC$CALC will return
     1273     6842          the page and line number (DBK) where this record calcs to
     1274     6843        */
     1275     6844    2       PG_NO = 0;
     1276     6845    2       LN_NO = 0;
     1277     6846    2       CALL ZIC$CALC(BUFAREA,KEY_ARRAY,AC_REC,RA_REC,ITEM,PG_NO,LN_NO,CALCHDRS);
     1278     6847        /* convert ITEM entries to bits */
     1279     6848    3       DO X = 0 TO KEY_ARRAY.SIZ-1;
     1280     6849    3           I = KEY_ARRAY.MEMBER(X);
     1281     6850    4           DO CASE(ITEM.TYPE(I));
     1282     6851    4           CASE(5,9);
     1283     6852    4               ITEM.LEN(I) = 9*ITEM.LEN(I);
     1284     6853    4           CASE(ELSE);
     1285     6854    4               ITEM.LEN(I) = (4*ITEM.LEN(I))+((1+ITEM.LEN(I))/2);
     1286     6855    4               END;
     1287     6856    3           ITEM.OFFSET(I)=4*ITEM.OFFSET(I)+((1+ITEM.OFFSET(I))/2);
     1288     6857    3           END;
     1289     6858        /*  read page with this key */
     1290     6859    2       I_O_SIZE = 1;
     1291     6860    2       RB = PG_NO;
     1292     6861    2       CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);
     1293     6862    2       DATA$ = ADDR(I_O_BUF(0));
     1294     6863    2       REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-LN_NO));
     1295     6864        /* follow entire calc chain */
     1296     6865    2       INDX = 0;
     1297     6866        /* first record in chain is calc */
     1298     6867    2       SET_INDX = 0;
     1299     6868    3       DO WHILE (MSTR_REF.NAME(SET_XREF.MSTRINDX(SET_INDX)) ~= '*CALC');
     1300     6869    3           SET_INDX = SET_INDX + 1;
     1301     6870    3           END;
     1302     6871    2       KCNT = -1;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:39   
     1303     6872    2       ZI$DIR.LOCALKEY = %NO#;
     1304     6873    2       FLAG = %YES#;
     1305     6874    3       DO WHILE ((MSTR_REF.TYPE(INDX) ~= 4000) OR FLAG);
     1306     6875    3           FLAG = %NO#;
     1307     6876         /* determine dbkey of next in chain from tables */
     1308     6877    3           EISNXT = SET_XREF.EIS.NEXT(SET_INDX);
     1309     6878    3           SETNXT$ = PINCRW(REC$,NXTPT.EISADDR);
     1310     6879    3           SETNXT$ = PINCRC(SETNXT$,NXTPT.BYT_OFF/2);
     1311     6880    4           DO CASE(NXTPT.SIZE);
     1312     6881    4           CASE(2); NEXT_DBKEY = SETNXT$-> SZ2;
     1313     6882    4           CASE(3); NEXT_DBKEY = SETNXT$-> SZ3;
     1314     6883    4           CASE(4); NEXT_DBKEY = SETNXT$-> SZ4;
     1315     6884    4               END;
     1316     6885        /* break down dbkey into page and line */
     1317     6886    3           NEXT_PG = (NEXT_DBKEY - LOW_DBK + LPP) / LPP;
     1318     6887    3           NEXT_LN = MOD(NEXT_DBKEY - LOW_DBK + LPP , LPP);
     1319     6888        /* read new page if necessary */
     1320     6889    3           IF NEXT_PG ~= PG_NO THEN
     1321     6890    4           DO;
     1322     6891    4               PG_NO = NEXT_PG; /* new current page */
     1323     6892    4               RB = PG_NO;
     1324     6893    4               I_O_SIZE = 1;
     1325     6894    4               CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);
     1326     6895    4               DATA$ = ADDR(I_O_BUF(0));
     1327     6896    4               END;
     1328     6897         /* point to record in data page */
     1329     6898    3           REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-NEXT_LN));
     1330     6899    3           REC_RDEF = REC$->RECORD;
     1331     6900         /* if next in chain is correct type */
     1332     6901    3           IF REC.TYPE = REC_TYPE.SEC THEN
     1333     6902    4           DO;
     1334     6903         /* then compare calc fields to those given */
     1335     6904    4               SIZE = REC.LEN;
     1336     6905    4               BUF$ = REC$;
     1337     6906    4               MATCH = %YES#;
     1338     6907    5               DO X = 0 TO KEY_ARRAY.SIZ-1;
     1339     6908    5                   I = KEY_ARRAY.MEMBER(X);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:40   
     1340     6909    5                   IF SUBSTR(BUFAREA,ITEM.OFFSET(I)/9,ITEM.LEN(I)/9) ~=
     1341     6910    5                      SUBSTR(BUFFR,ITEM.OFFSET(I)/9,ITEM.LEN(I)/9)
     1342     6911    6                   THEN DO;
     1343     6912    6                       MATCH = %NO#;
     1344     6913    6                       X = KEY_ARRAY.SIZ;
     1345     6914    6                       END;
     1346     6915    5                   END;
     1347     6916    4               IF MATCH = %YES# THEN
     1348     6917    5               DO;
     1349     6918    5                   KCNT = KCNT+1;
     1350     6919    5                   KEY_RNG.FIR(KCNT) = NEXT_DBKEY;
     1351     6920    5                   KEY_RNG.SEC(KCNT) = NEXT_DBKEY;
     1352     6921    5                   END;
     1353     6922    4               END;
     1354     6923         /* go to tables to find next in chain */
     1355     6924    3           IF REC.TYPE>4000 OR TYPE.MSTRINDX(REC.TYPE)<0 THEN
     1356     6925    4           DO;
     1357     6926    4               CALL BINCHAR(ERR_INSERT.TEXT(0),RB);
     1358     6927    4               CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);
     1359     6928    4               CALL BINCHAR(ERR_INSERT.TEXT(1),I);
     1360     6929    4               CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);
     1361     6930    4               ERRCODESF.ERR# = DBU#RECERR;
     1362     6931    4               MSGCODE = ERRCODE_RDEF;
     1363     6932    4               CALL SYS_FUNC_ERRMSG;
     1364     6933    4               ALTRETURN;
     1365     6934    4               END;
     1366     6935    3           INDX = TYPE.MSTRINDX(REC.TYPE); /* GET THE MSTRINDX FOR THE REC */
     1367     6936    3           SET_INDX = MSTR_REF.NEXT(INDX);
     1368     6937    4           DO WHILE ((SET_INDX ~= -1) AND (MSTR_REF.NAME(SET_XREF.MSTRINDX(SET_INDX))
              6937                    ~= '*CALC'));
     1369     6938    4               SET_INDX = SET_XREF.NEXT(SET_INDX);
     1370     6939    4               END;
     1371     6940    3           IF SET_INDX = -1 THEN
     1372     6941    4           DO;
     1373     6942    4               CALL INDEX(X,' ',MSTR_REF.NAME(INDX));
     1374     6943    4               ERR_INSERT.TEXT(0) = MSTR_REF.NAME(INDX);
     1375     6944    4               ERR_INSERT.CNT(0) = X;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:41   
     1376     6945    4               ERRCODESF.ERR# = DBU#NOTCALC;
     1377     6946    4               MSGCODE = ERRCODE_RDEF;
     1378     6947    4               CALL SYS_FUNC_ERRMSG;
     1379     6948    4               ALTRETURN;
     1380     6949    4               END;
     1381     6950    3           END;
     1382     6951    2       RETURN;
     1383     6952    2   ALTEND_ZIU$Q2PR:
     1384     6953    2       ALTRETURN;
     1385     6954    2   END CALC_PRNT;
     1386     6955        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:42   
     1387     6956        /***********************************************************/
     1388     6957        /*                                                         */
     1389     6958        /*       I N D E X   AREA   P R I N T                      */
     1390     6959        /*                                                         */
     1391     6960        /***********************************************************/
     1392     6961
     1393     6962    1   INDEX_PRINT: PROC ALTRET;
     1394     6963    2   DCL 1 IND_HDR STATIC ALIGNED,
     1395     6964    2         2 CAR_CON BIT(9) INIT('00100001'B) UNAL,
     1396     6965    2         2 REC CHAR(25) UNAL,
     1397     6966    2         2 * CHAR(43) INIT(' ') UNAL,
     1398     6967    2         2 * CHAR(6) INIT('INDEX ') UNAL;
     1399     6968    2       CALL SYS_FUNC_CLOS ALTRET(ALTRTN);
     1400     6969    2       ORGSF = %INDEXED#;
     1401     6970    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);
     1402     6971    2       CALL DB_FUNC_FRS(CAN_RVA.RAREC.SEC,CAN_RVA.ACRA.SEC) ALTRET(ALTRTN);
     1403     6972    2       CALL DB_FUNC_GET(CAN_RVA.RAREC.SEC) ALTRET(ALTRTN);
     1404     6973    2       CALL DB_FUNC_FOR(CAN_RVA.RCRA.SEC) ALTRET(ALTRTN);
     1405     6974    2       CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(ALTRTN);
     1406     6975    2       IND_HDR.REC = MSTR_REF.NAME(TYPE.MSTRINDX(UWA.RC_REC.RTYPE));
     1407     6976    2       DONE='0'B;
     1408     6977    3       DO WHILE(~DONE);
     1409     6978    3           DCBSF = ZI$DIR.AREA_NM.DCB#;
     1410     6979    3           BUFSF = VECTOR(I_O_BUF);
     1411     6980    3           BUFLNSF = 4096 * 32;
     1412     6981    3           KEYSF = %NO#;
     1413     6982    3           ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
     1414     6983    3           CALL SYS_FUNC_READ ALTRET(ALT_INDX);
     1415     6984    3           OUT_INDX=0;
     1416     6985    3           BUFSF = VECTOR(IND_HDR);
     1417     6986    3           BUFLNSF = 75;
     1418     6987    3           CALL WRITE_LINE;
     1419     6988    4           DO WHILE(OUT_INDX <= I_O_SIZE);
     1420     6989    4               REC$ = ADDR(I_O_BUF(OUT_INDX));
     1421     6990    4               CALL FIND_PRINT_ITEMS;
     1422     6991    4               OUT_INDX = OUT_INDX + 1;
     1423     6992    4               CALL DB_FUNC_FOR(CAN_RVA.RCRA.SEC) ALTRET(ALTRTN);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:43   
     1424     6993    4               CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(ALTRTN);
     1425     6994    4               END;
     1426     6995    4           DO WHILE('0'B);
     1427     6996    4   ALT_INDX:
     1428     6997    4               DONE='1'B;
     1429     6998    4               IF B$TCB$->B$TCB.ALT$->B$EXCFR.ERR.ERR# = %E$EOF THEN
     1430     6999    4                   RETURN;
     1431     7000    4               ELSE
     1432     7001    4                   ALTRETURN;
     1433     7002    4               END;
     1434     7003    3           END;
     1435     7004    3       DO WHILE('0'B);
     1436     7005    3   ALTRTN: ALTRETURN;
     1437     7006    3           END;
     1438     7007
     1439     7008    2   END INDEX_PRINT;
     1440     7009        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:44   
     1441     7010    1   PRINT_LOCKS: PROC ALTRET;
     1442     7011
     1443     7012    2   DCL AC$ PTR STATIC ALIGNED;
     1444     7013    2   DCL AC# SBIN STATIC ALIGNED;
     1445     7014    2   DCL AC_V CHAR(AC#) BASED(AC$) CALIGNED;
     1446     7015    2   DCL RBUF CHAR(120) SYMREF CALIGNED;
     1447     7016    2   DCL AC_BUF CHAR(80) STATIC ALIGNED;
     1448     7017    2   DCL TM# SBIN STATIC ALIGNED;
     1449     7018    2   DCL 1 TM_BUF STATIC ALIGNED,
     1450     7019    2         2 * CHAR(3) INIT('on ') CALIGNED,
     1451     7020    2         2 TIME CHAR(5) CALIGNED INIT(' '),
     1452     7021    2         2 * CHAR(1) CALIGNED INIT(' '),
     1453     7022    2         2 DATE CHAR(10) CALIGNED INIT(' '),
     1454     7023    2         2 * CHAR(1) CALIGNED INIT(' '),
     1455     7024    2         2 WHO CHAR(24) CALIGNED INIT(' ');
     1456     7025    2   DCL TM_V REDEF TM_BUF CHAR(44) CALIGNED;
     1457     7026    2   DCL TIME_BUF CHAR(12) STATIC ALIGNED;
     1458     7027
     1459     7028    2       AC$ = ADDR(ZI$DIR.AREA_NM.NAME.TEXT);
     1460     7029    2       AC# = ZI$DIR.AREA_NM.NAME.CNT;
     1461     7030    2       TM# = 0;
     1462     7031    2       IF UWA.AC_REC.PG_TYPE>0 THEN /* INDEXED AREA */
     1463     7032    2           CALL CONCAT(AC_BUF,'No locks associated with indexed area ',
     1464     7033    2              AC_V,'.@');
     1465     7034    2       ELSE
     1466     7035    3       DO;
     1467     7036    3           IF ZI$DIR.LOCKCODE=2 THEN
     1468     7037    3               CALL GET_ATBLK_INFO ALTRET(ALTRTN);
     1469     7038    3           IF ATBLK_PG.LOCK_STATUS.ALL_LOCKS='0'B THEN
     1470     7039    3               CALL CONCAT(AC_BUF,AC_V,' is NOT locked.@');
     1471     7040    3           ELSE
     1472     7041    4           DO;
     1473     7042    4               IF ATBLK_PG.STATUS.LOCKED AND ATBLK_PG.STATUS.KFILE_CURR THEN
     1474     7043    4                   CALL CONCAT(AC_BUF,AC_V,' & its alternate keyfile were locked @');
     1475     7044    4               ELSE
     1476     7045    4                   IF ATBLK_PG.STATUS.LOCKED THEN
     1477     7046    4                       CALL CONCAT(AC_BUF,AC_V,' was locked @');
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:45   
     1478     7047    4                   ELSE
     1479     7048    4                       IF ATBLK_PG.STATUS.KFILE_CURR THEN
     1480     7049    4                           CALL CONCAT(AC_BUF,'The alternate keyfile of ',AC_V,
     1481     7050    4                              ' was locked @');
     1482     7051    4                       ELSE
     1483     7052    4                           IF ATBLK_PG.STATUS.LOCKUPD THEN
     1484     7053    4                               CALL CONCAT(AC_BUF,AC_V,' was locked from updaters @');
     1485     7054
     1486     7055
     1487     7056    4               IF ATBLK_PG.TIME_LOCKED=0 THEN
     1488     7057    4                   TM_V = 'before the B02 version of IDS.@';
     1489     7058    4               ELSE
     1490     7059    5               DO;
     1491     7060    5                   TSTAMPSF = VECTOR(ATBLK_PG.TIME_LOCKED);
     1492     7061    5                   SOURCESF = %UTS#;
     1493     7062    5                   DESTSF = %EXT#;
     1494     7063    5                   DATESF = VECTOR(TM_BUF.DATE);
     1495     7064    5                   TIMESF = VECTOR(TIME_BUF);
     1496     7065    5                   CALL SYS_FUNC_TSTAMP;
     1497     7066    5                   TM_BUF.TIME=TIME_BUF;
     1498     7067    5                   IF ATBLK_PG.REASON_LOCKED.BY_USER THEN
     1499     7068    5                       TM_BUF.WHO='by user.@';
     1500     7069    5                   ELSE
     1501     7070    5                       TM_BUF.WHO='by IDS.@';
     1502     7071    5                   END;
     1503     7072    4               CALL INDEX(TM#,'@',TM_V);
     1504     7073    4               END;
     1505     7074    3           END;
     1506     7075    2       AC$ = ADDR(AC_BUF);
     1507     7076    2       CALL INDEX(AC#,'@',AC_BUF);
     1508     7077    2       CALL CONCAT(RBUF,'B* ',AC_V,TM_V);
     1509     7078    2       IF TM#>0 AND TM_BUF.WHO='by IDS.@' THEN
     1510     7079    2           SUBSTR(RBUF,0,1)='A'; /* CHANGE VFC */
     1511     7080    2       BUFLNSF = AC# + TM# + 3;
     1512     7081    2       BUFSF = VECTOR(RBUF);
     1513     7082    2       VFCSF = %YES#;
     1514     7083    2       DCBSF = DCBNUM(M$LO);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:46   
     1515     7084    2       CALL SYS_FUNC_WRIT ALTRET(ALTRTN);
     1516     7085
     1517     7086    2       IF TM#>0 AND TM_BUF.WHO='by IDS.@' THEN
     1518     7087    3       DO; /* PRINT REASON WHY IDS LOCKS IT */
     1519     7088    3           IF ATBLK_PG.REASON_LOCKED.ROLLBACK_FAIL THEN
     1520     7089    3               RBUF='B  For recovery rollback failed.';
     1521     7090    3           ELSE
     1522     7091    3               IF ATBLK_PG.REASON_LOCKED.UNPROTECT_ABORT THEN
     1523     7092    3                   RBUF='B  For unprotected update job aborted.';
     1524     7093    3               ELSE
     1525     7094    3                   IF ATBLK_PG.REASON_LOCKED.LOAD_MODE THEN
     1526     7095    3                       RBUF='B  For keyfile-must-rebuilt after LOAD mode.';
     1527     7096    3                   ELSE
     1528     7097    3                       RBUF='B  No reason bit set for the lock, please report!';
     1529     7098
     1530     7099    3           BUFLNSF = 60;
     1531     7100    3           VFCSF = %YES#;
     1532     7101    3           CALL SYS_FUNC_WRIT ALTRET(ALTRTN);
     1533     7102    3           END;
     1534     7103    2       RETURN;
     1535     7104
     1536     7105    2   ALTRTN: ALTRETURN;
     1537     7106    2   END PRINT_LOCKS;
     1538     7107        /***************************************************************/
     1539     7108        /*                                                             */
     1540     7109        /*               K E Y E D   P R I N T                         */
     1541     7110        /***************************************************************/
     1542     7111
     1543     7112    1   KEY_PRNT: PROC ALTRET;
     1544     7113    2   DCL FOUND_AREA BIT(1);
     1545     7114         /*
     1546     7115            This rountine takes the DBK values recievied from ZI$DIR and
     1547     7116            converts the keys into page number and line number which
     1548     7117            it will pass on to the DATAPG_PRNT routine for printing.
     1549     7118         */
     1550     7119    2       SET_INDX=-1;
     1551     7120    3       DO K = 0 TO KCNT BY 1;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:47   
     1552     7121    3           KB = KEY_RNG.FIR(K);
     1553     7122    3           KE = KEY_RNG.SEC(K);
     1554     7123    3   FOLLOW_SET:
     1555     7124    3           IF ZI$DIR.LOCALKEY THEN /* Ajust for a local DBK */
     1556     7125    4           DO;
     1557     7126    4               KB = KB + UWA.AC_REC.MIN_DBK -1;
     1558     7127    4               KE = KE + UWA.AC_REC.MIN_DBK -1;
     1559     7128    4               END;
     1560     7129
     1561     7130    3           IF KE - KB = 0 THEN
     1562     7131    3               KEY_RANGE = %NO#;
     1563     7132    3           ELSE
     1564     7133    3               KEY_RANGE = %YES#;
     1565     7134    3           IF KB < UWA.AC_REC.MIN_DBK OR KB > UWA.AC_REC.MAX_DBK OR
     1566     7135    3              KE < UWA.AC_REC.MIN_DBK OR KE > UWA.AC_REC.MAX_DBK THEN
     1567     7136    4           DO;
     1568     7137    4               IF ZI$DIR.CODE = #REPAIR THEN RETURN;
     1569     7138    4               FOUND_AREA = '0'B;
     1570     7139    4               IF ZI$DIR.AUTODUMP /* ALL specified */
     1571     7140    5               THEN DO I=0 TO NO_AREAS - 1;
     1572     7141         /* find the area this key is in */
     1573     7142    5                   IF KB < AREA_KEY_XREF.MAX_KEY(I)
     1574     7143    6                   THEN DO;
     1575     7144         /* found the correct area */
     1576     7145         /* so close the old area */
     1577     7146    6    /**/               DCBSF = ZI$DIR.AREA_NM.DCB#;
     1578     7147    6                       CALL SYS_FUNC_CLOS;
     1579     7148         /* open new area under same dcb */
     1580     7149    6                       ZI$DIR.AREA_NM.NAME.TEXT = AREA_KEY_XREF.NAME(I);
     1581     7150    6    /**/               FIDSF = AREA_KEY_XREF.NAME(I);
     1582     7151    6                       CALL SYS_FUNC_OPEN ALTRET(ALT_READ_AREA);
     1583     7152         /* fill in UWA.AC */
     1584     7153    6                       LAST_DBK = UWA.SF_REC.DBKOA;
     1585     7154    6                       CALL GET_NXT_AC(FOUND_AREA);
     1586     7155         /* fall out of loop */
     1587     7156    6                       I = NO_AREAS + 1;
     1588     7157    6                       FOUND_AREA = '1'B;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:48   
     1589     7158    6                       END;
     1590     7159    5                   END;
     1591     7160    4               IF ~FOUND_AREA
     1592     7161    5               THEN DO;
     1593     7162         /*E* ERROR: ZIU-DBU#NODBK-C
     1594     7163                 MESSAGE: DATA BASE KEY requested is not within the area's bounds.
     1595     7164                 */
     1596     7165    5                   ERRCODESF.ERR# = DBU#NODBK;
     1597     7166    5                   ERRFLGSF = 0;
     1598     7167    5                   MSGCODE = ERRCODE_RDEF;
     1599     7168    5                   CALL SYS_FUNC_ERRMSG;
     1600     7169    5                   ALTRETURN;
     1601     7170    5                   END;
     1602     7171    4               END;
     1603     7172
     1604     7173    3           RB = (KB-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP)/UWA.AC_REC.LPP;
     1605     7174    3           RE = (KE-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP)/UWA.AC_REC.LPP;
     1606     7175    3           BLN# = MOD(KB-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP,RB*UWA.AC_REC.LPP);
     1607     7176    3           ELN# = MOD(KE-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP,RE*UWA.AC_REC.LPP);
     1608     7177        /*
     1609     7178                 Check and hanlde follow set option.
     1610     7179        */
     1611     7180    3           IF ZI$DIR.FSET = %YES# THEN
     1612     7181    4           DO;
     1613     7182    4               IF SET_INDX>0 AND CHK_KEY=KB THEN GOTO NEXT_DBK;
     1614     7183    4               IF SET_INDX=-1 THEN CHK_KEY=KB; /* REMEMBER THIS KEY */
     1615     7184    4               I_O_SIZE=1;
     1616     7185    4               OUT_INDX=0;
     1617     7186    4               DATA$=ADDR(I_O_BUF(0));
     1618     7187    4               CALL READ_PAGE ALTRET(ALT_READ_AREA);
     1619     7188    4               LST_LN=BLN#;
     1620     7189    4               CALL DATAPG_PRNT(BLN#,LST_LN);
     1621     7190    4               IF SET_INDX=-1 THEN /* FIRST PASS */
     1622     7191    5               DO;
     1623     7192    5                   CALL FIND_MSTR_ENTRY(ZI$DIR.SET_NM,SET_INDX);
     1624     7193    5                   ERRCODESF.ERR#=0;
     1625     7194    5                   IF SET_INDX=-1 THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:49   
     1626     7195    5                       ERRCODESF.ERR#=DBU#BADSET;
     1627     7196        /*E*  ERROR: ZIU-DBU#BADSET-C
     1628     7197              MESSAGE: The set to follow is not defined in this schema. */
     1629     7198    5                   ELSE
     1630     7199    6                   DO;
     1631     7200    6                       X=MSTR_REF.NEXT(SET_INDX);
     1632     7201    7                       DO WHILE(X~=-1 AND REC_XREF.MSTRINDX(X)~=CURR_REC);
     1633     7202    7                           X=REC_XREF.NEXT(X);
     1634     7203    7                           END;
     1635     7204    6                       IF X=-1 THEN
     1636     7205    6                           ERRCODESF.ERR#=DBU#BADRS;
     1637     7206        /*E*  ERROR: ZIU-DBU#BADRS-C
     1638     7207              MESSAGE: The DBK you started with is not a tenant in the set to follow. */
     1639     7208    6                       END;
     1640     7209    5                   IF ERRCODESF.ERR# > 0 THEN
     1641     7210    6                   DO;
     1642     7211    6                       ERRFLGSF=0;
     1643     7212    6                       MSGCODE=ERRCODE_RDEF;
     1644     7213    6                       CALL SYS_FUNC_ERRMSG;
     1645     7214    6                       ALTRETURN;
     1646     7215    6                       END;
     1647     7216    5                   ZI$DIR.LOCALKEY=BINBIT(1-MSTR_REF.GLOBAL(SET_INDX),1);
     1648     7217    5                   END;
     1649     7218    4               KE=KB;
     1650     7219    4               GOTO FOLLOW_SET;
     1651     7220    4               END;
     1652     7221
     1653     7222    4           DO RB = RB TO RE;
     1654     7223    4               OUT_INDX = OUT_INDX + 1;
     1655     7224    4               IF OUT_INDX >= I_O_SIZE THEN
     1656     7225    5               DO;
     1657     7226    5                   I_O_SIZE = RE - RB +1;
     1658     7227    5                   IF I_O_SIZE > 8 THEN
     1659     7228    5                       I_O_SIZE = 8;
     1660     7229    5                   CALL READ_PAGE ALTRET(ALT_READ_AREA);
     1661     7230    5                   OUT_INDX = 0;
     1662     7231    5                   END;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:50   
     1663     7232    4               DATA$ = ADDR(I_O_BUF(OUT_INDX));
     1664     7233    4               IF RB ~= RE THEN
     1665     7234    4                   LST_LN = DATA_PG.OFF_LN.SEC;
     1666     7235    4               ELSE
     1667     7236    4                   LST_LN = ELN#;
     1668     7237    4               CALL DATAPG_PRNT(BLN#,LST_LN);
     1669     7238    4               BLN# = 0;
     1670     7239    4               END;
     1671     7240    3   NEXT_DBK:
     1672     7241    3           SET_INDX = -1;
     1673     7242    3           END;
     1674     7243    2       RETURN;
     1675     7244
     1676     7245    2   ALT_READ_AREA:
     1677     7246    2       ALTRETURN;
     1678     7247    2   END KEY_PRNT;
     1679     7248        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:51   
     1680     7249        /*
     1681     7250                          Write  to  M$LO  routine
     1682     7251        */
     1683     7252    1   WRITE_LINE: PROC;
     1684     7253    2       IF BREAK_FLAG>0 AND ZI$DIR.CODE~=#REPAIR THEN
     1685     7254    2           CALL BREAK_ROUTINE;
     1686     7255    3       ELSE DO;
     1687     7256    3           DCBSF = DCBNUM(M$LO);
     1688     7257    3           CALL SYS_FUNC_WRIT;
     1689     7258    3           END;
     1690     7259    2       RETURN;
     1691     7260    2   END WRITE_LINE;
     1692     7261        /*
     1693     7262        -------------------------------------------------------------------
     1694     7263                    BREAK     ROUTINE
     1695     7264        --------------------------------------------------------------------
     1696     7265        */
     1697     7266    1   BREAK_ROUTINE: PROC;
     1698     7267    2       IF ZI$DIR.CODE~=#REPAIR THEN
     1699     7268    3       DO;
     1700     7269    3           DCBSF=ZI$DIR.AREA_NM.DCB#;
     1701     7270    3           CALL SYS_FUNC_CLOS;
     1702     7271    3           END;
     1703     7272    2       UNWIND TO RESTART;
     1704     7273    2   END BREAK_ROUTINE;
     1705     7274        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:52   
     1706     7275        /*-------------------------------------------------------------------
     1707     7276              BUILD RECORD TABLE (for rec list option) and
     1708     7277                 CHECK  RECORD NAME VALIDITY.
     1709     7278        --------------------------------------------------------------------*/
     1710     7279        /*
     1711     7280           This routine checks the record names input and ensures that they
     1712     7281           exist in the schema. It also stores the record type number for each
     1713     7282           of those record names.
     1714     7283        */
     1715     7284    1   BUILD_REC_TBL: PROC ALTRET;
     1716     7285
     1717     7286    2       IF RCNT<0 AND KCNT<0 THEN /* NO REC LIST AND DBK LIST */
     1718     7287    2           ZI$DIR.PHEAD=%YES#; /* PAGE HEADER TO BE PRINTED */
     1719     7288    2       ERRCODESF.ERR# = 0;
     1720     7289    3       DO X=0 TO RCNT;
     1721     7290    3           IF RECORD_LIST.NAME(X)='*CALC' THEN
     1722     7291    4           DO;
     1723     7292    4               ZI$DIR.PCALC = %YES#;
     1724     7293    4               RECORD_LIST.TYPE(X)=-1;
     1725     7294    4               END;
     1726     7295    3           ELSE
     1727     7296    3               IF RECORD_LIST.NAME(X)='*HEADER' THEN
     1728     7297    4               DO;
     1729     7298    4                   ZI$DIR.PHEAD = %YES#;
     1730     7299    4                   RECORD_LIST.TYPE(X)=-1;
     1731     7300    4                   END;
     1732     7301    3               ELSE
     1733     7302    4               DO;
     1734     7303    4                   MSTR_INDX=0; /* SEQ SEARCH THE MSTR_REF TABLE */
     1735     7304    5                   DO WHILE(MSTR_REF.NAME(MSTR_INDX)~=RECORD_LIST.NAME(X)
     1736     7305    5                      AND MSTR_INDX < NO_RECS);
     1737     7306    5                       MSTR_INDX=MSTR_INDX+1;
     1738     7307    5                       END;
     1739     7308    4                   IF MSTR_INDX < NO_RECS THEN /* FOUND IT */
     1740     7309    4                       RECORD_LIST.TYPE(X)=MSTR_REF.TYPE(MSTR_INDX);
     1741     7310
     1742     7311    4                   ELSE
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:53   
     1743     7312    5                   DO;
     1744     7313         /*E* ERROR: ZIU-DBU#NOREC-C
     1745     7314                          MESSAGE: Record name "%U1" does not exist in the schema. */
     1746     7315    5                       CALL INDEX(INDX,' ',RECORD_LIST.NAME(X));
     1747     7316    5                       ERR_INSERT.CNT(0) = INDX;
     1748     7317    5                       ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(X);
     1749     7318    5                       ERRCODESF.ERR# = DBU#NOREC;
     1750     7319    5                       MSGCODE = ERRCODE_RDEF;
     1751     7320    5                       CALL SYS_FUNC_ERRMSG;
     1752     7321    5                       END;
     1753     7322    4                   END;
     1754     7323    3           END;
     1755     7324    2       IF ERRCODESF.ERR#>0 THEN ALTRETURN; /* UNKNOWN REC FOUND */
     1756     7325         /* ASSOICATE EACH ITEM IN THE ITEM TABLE WITH THE REOCRD
     1757     7326            IT BELONGS TO. THE INTERPRTER INITIALIZED THE ITEM TYPE
     1758     7327            WITH THE RECORD INDEX WHERE THE RECORD NAME IS STORED.
     1759     7328            NOW, WE REPLACE THE INDEX WITH THE RECORD TYPE */
     1760     7329    3       DO X=0 TO ITMCNT;
     1761     7330    3           ITEM_LIST.TYPE(X)=RECORD_LIST.TYPE(ITEM_LIST.TYPE(X));
     1762     7331    3           END;
     1763     7332    2   END BUILD_REC_TBL;
     1764     7333        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:54   
     1765     7334        /***************************************************************/
     1766     7335        /*                                                             */
     1767     7336        /*           D A T A    P A G E    P R I N T   P R O C         */
     1768     7337        /***************************************************************/
     1769     7338
     1770     7339
     1771     7340    1   DATAPG_PRNT: PROC(STRT_LN,LAST_LN);
     1772     7341    2   DCL STRT_LN UBIN;
     1773     7342    2   DCL LAST_LN UBIN HALF CALIGNED;
     1774     7343    2       DCBSF=DCBNUM(M$LO);
     1775     7344        /*
     1776     7345                The following several lines supply the page header with
     1777     7346                information found in the first 6 words of the data page.
     1778     7347                I.E.  page#, checksum, high line, date stamp....
     1779     7348                Print by records (rcnt) or DBK (kcnt) kills page hdr.
     1780     7349        */
     1781     7350    2       IF (ZI$DIR.PHEAD = %NO#) OR (ZI$DIR.PHEAD2 = %NO#) THEN GOTO FREC;
     1782     7351    2   /**/ DATESF = VECTOR(PAGE_HDR2.DTSP);
     1783     7352    2   /**/ SOURCESF = %UTS#;
     1784     7353    2   /**/ DESTSF = %LOCAL#;
     1785     7354    2   /**/ TSTAMPSF = VECTOR(DATA_PG.SYS_WRDS.DATE);
     1786     7355    2   /**/ TIMESF = VECTOR(PAGE_HDR2.TMSP);
     1787     7356    2       CALL SYS_FUNC_TSTAMP;
     1788     7357    2       CALL BINCHAR(PAGE_HDR.SP_AV,DATA_PG.PG_SZ.SEC);
     1789     7358    2       CALL BINCHAR(PAGE_HDR3.CHKSUM,DATA_PG.CHKSUM_WD);
     1790     7359    2       CALL BINCHAR(PAGE_HDR3.CURR_HIGH,DATA_PG.OFF_LN.SEC);
     1791     7360    2       IF DATA_PG.OFF_LN.FIR = 0 AND
     1792     7361    2          DATA_PG.ACT_DATA_18(2035) >= 0 THEN
     1793     7362    2           PAGE_HDR3.FST_AVAIL='NONE';
     1794     7363    2       ELSE
     1795     7364    2           CALL BINCHAR(PAGE_HDR3.FST_AVAIL,DATA_PG.OFF_LN.FIR);
     1796     7365    2       PAGE_HDR.AREA_NAME=ZI$DIR.AREA_NM.NAME.TEXT;
     1797     7366    2       CALL BINCHAR(PAGE_HDR.PGNO,DATA_PG.CON_INTRVAL);
     1798     7367    2       CALL BINCHAR(PAGE_HDR2.PRCNT,100-((DATA_PG.PG_SZ.SEC*100)/DATA_PG.PG_SZ.FIR));
     1799     7368    2       CALL ZERO_SUP(PAGE_HDR2.PRCNT,3,'0'B);
     1800     7369    2       CALL ZERO_SUP(PAGE_HDR.PGNO,LENGTHC(PAGE_HDR.PGNO),'1'B);
     1801     7370    2       CALL ZERO_SUP(PAGE_HDR.SP_AV,LENGTHC(PAGE_HDR.SP_AV),'1'B);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:55   
     1802     7371    2       PAGE_HDR2.TMSP.SS=' ';
     1803     7372    2       IF PAGE_HDR.CAR_CON='A' THEN
     1804     7373    3       DO; /* SIMULATE A TOP OF PAGE BY TYPING 3 BLANK LINES */
     1805     7374    3           BUFSF=VECTOR(VFC3LINES);
     1806     7375    3           BUFLNSF=2;
     1807     7376    3           CALL WRITE_LINE;
     1808     7377    3           END;
     1809     7378    2   /**/ BUFSF = VECTOR(PAGE_HDR);
     1810     7379    2   /**/ BUFLNSF = LENGTHC(PAGE_HDR);
     1811     7380    2       CALL WRITE_LINE;
     1812     7381    2   /**/ BUFSF = VECTOR(PAGE_HDR2);
     1813     7382    2   /**/ BUFLNSF = LENGTHC(PAGE_HDR2);
     1814     7383    2       CALL WRITE_LINE;
     1815     7384    2       CALL ZERO_SUP(PAGE_HDR3.CURR_HIGH,5,'1'B);
     1816     7385    2       CALL ZERO_SUP(PAGE_HDR3.FST_AVAIL,5,'1'B);
     1817     7386    2       CALL ZERO_SUP(PAGE_HDR3.CHKSUM,8,'1'B);
     1818     7387    2   /**/ BUFSF = VECTOR(PAGE_HDR3);
     1819     7388    2   /**/ BUFLNSF = LENGTHC(PAGE_HDR3);
     1820     7389    2       CALL WRITE_LINE;
     1821     7390    2       IF RCNT>=0 THEN /* RECORD LIST OPTION SPECIFIED */
     1822     7391    2           PAGE_HDR.CAR_CON='A'; /* NO MORE TOP OF PAGE */
     1823     7392    2       IF RCNT=0 THEN RETURN; /* OPT IS  REC=*HEADER ONLY */
     1824     7393    2   FREC:
     1825     7394    2       IF ZI$DIR.FSET = %YES# OR KEY_RANGE = %NO# THEN
     1826     7395    3       DO;
     1827     7396    3           IF DATA_PG.ACT_DATA_18(2035-STRT_LN) > 4084 OR /* HIGH POSS OFFSET */
     1828     7397    3              DATA_PG.ACT_DATA_18(2035-STRT_LN) <= 0 OR
     1829     7398    3              STRT_LN > DATA_PG.OFF_LN.SEC THEN
     1830     7399    4           DO;
     1831     7400    4               IF ZI$DIR.CODE = #REPAIR THEN RETURN;
     1832     7401         /*E* ERROR: ZIU-DBU#NSET-C
     1833     7402                       MESSAGE: %U1 No record found at DBK# %U2.
     1834     7403                    */
     1835     7404         /*E* ERROR: ZIU-DBU#NSETL-C
     1836     7405                       MESSAGE: %U1 No record found at DBK# %U2 ( Local key# %U3).
     1837     7406                    */
     1838     7407    4               IF ZI$DIR.FSET THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:56   
     1839     7408    5               DO;
     1840     7409    5                   ERR_INSERT.CNT(0) = 18;
     1841     7410    5                   ERR_INSERT.TEXT(0) ='Set pointer error:';
     1842     7411    5                   END;
     1843     7412    5               ELSE DO;
     1844     7413    5                   ERR_INSERT.CNT(0) = 1;
     1845     7414    5                   ERR_INSERT.TEXT(0) = ' ';
     1846     7415    5                   END;
     1847     7416    4               CALL BINCHAR(ERR_INSERT.TEXT(1),KB);
     1848     7417    4               CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);
     1849     7418    4               IF ZI$DIR.LOCALKEY AND ~LOCAL_ONLY THEN
     1850     7419    5               DO;
     1851     7420    5                   CALL BINCHAR(ERR_INSERT.TEXT(2),KB-UWA.AC_REC.MIN_DBK+1);
     1852     7421    5                   CALL ZERO_SUP(ERR_INSERT.TEXT(2),30,'1'B);
     1853     7422    5                   CALL INDEX(INDX,' ',ERR_INSERT.TEXT(2),0);
     1854     7423    5                   ERR_INSERT.CNT(2) = INDX;
     1855     7424    5                   ERRCODESF.ERR# = DBU#NSETL;
     1856     7425    5                   END;
     1857     7426    4               ELSE
     1858     7427    4                   ERRCODESF.ERR# = DBU#NSET;
     1859     7428    4               ERRFLGSF = 0;
     1860     7429    4               MSGCODE = ERRCODE_RDEF;
     1861     7430    4               CALL SYS_FUNC_ERRMSG;
     1862     7431    4               IF ZI$DIR.FSET = %NO# THEN
     1863     7432    4                   RETURN;
     1864     7433    4               ZI$DIR.LOCALKEY = %NO#;
     1865     7434    4               KB=CHK_KEY;
     1866     7435    4               RETURN;
     1867     7436    4               END;
     1868     7437    3           END;
     1869     7438    2       IF STRT_LN > DATA_PG.OFF_LN.SEC
     1870     7439    2       THEN RETURN;
     1871     7440    2       IF LAST_LN > DATA_PG.OFF_LN.SEC
     1872     7441    2       THEN LAST_LN = DATA_PG.OFF_LN.SEC;
     1873     7442    3       DO I= STRT_LN TO LAST_LN ; /* First record to last record of page */
     1874     7443    3           IF BREAK_FLAG > 0 THEN
     1875     7444    3               CALL BREAK_ROUTINE;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:57   
     1876     7445    3           IF DATA_PG.ACT_DATA_18(2035 - I) > 0 THEN
     1877     7446    4           DO;
     1878     7447    4               REC$=PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035 - I));
     1879     7448    4               CALL BINCHAR(REC_HDR.PAGE_NO,DATA_PG.CON_INTRVAL);
     1880     7449    4               CALL BINCHAR(REC_HDR.LN_NBR,I);
     1881     7450    4               CALL BINCHAR(REC_HDR.DBK,(DATA_PG.CON_INTRVAL*UWA.AC_REC.LPP)
     1882     7451    4                  + I + UWA.AC_REC.MIN_DBK -
     1883     7452    4                  UWA.AC_REC.LPP);
     1884     7453    4               CALL FIND_REC;
     1885     7454    4               IF ZI$DIR.CODE=#REPAIR AND ZI$DIR.PITEM=%NO# THEN
     1886     7455    4                   RETURN; /* IF COMES FROM REPAIR */
     1887     7456    4               IF REC_HDR.REC_NM='*CALC.RC' OR REC_HDR.REC_NM=' ' THEN GOTO FREC_END;
     1888     7457    4               X=0;
     1889     7458    4               IF RCNT>-1 THEN
     1890     7459    5               DO WHILE(RECORD_LIST.TYPE(X)~=REC_TYP AND X<=RCNT);
     1891     7460    5                   X=X+1;
     1892     7461    5                   END;
     1893     7462    4               IF RCNT=-1 OR X<=RCNT THEN
     1894     7463    5               DO;
     1895     7464    5                   CALL REC_OUTPUT;
     1896     7465    5                   IF ZI$DIR.PITEM OR ITMCNT>=0 THEN
     1897     7466    5                       CALL FIND_PRINT_ITEMS;
     1898     7467    5                   IF ZI$DIR.PSETS OR ZI$DIR.FSET THEN
     1899     7468    5                       CALL FIND_PRINT_SETS(ZI$DIR.PSETS);
     1900     7469    5                   END;
     1901     7470    4               ELSE
     1902     7471    4                   IF ZI$DIR.FSET THEN CALL FIND_PRINT_SETS('0'B);
     1903     7472    4   FREC_END:
     1904     7473    4               REC_CNT=REC_CNT+1;
     1905     7474    4               END;
     1906     7475    3           END;
     1907     7476    2       RETURN;
     1908     7477    2   END DATAPG_PRNT;
     1909     7478        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:58   
     1910     7479        /*****************************************************************/
     1911     7480        /*          C H E C K   A T T R I B U T E    P A G E             */
     1912     7481        /*****************************************************************/
     1913     7482    1   GET_ATBLK_INFO: PROC ALTRET;
     1914     7483        /*
     1915     7484           The purpose of this procedure is to get attributes of the
     1916     7485           area being printed. Information on the inventory pages and data
     1917     7486           base keys may be inconsistent with the schema if the area is
     1918     7487           defined as a template area since these things may change after
     1919     7488           the schema was validated.
     1920     7489        */
     1921     7490    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;
     1922     7491    2       ORGSF = DCBADDR(DCBSF) -> F$DCB.ORG#;
     1923     7492    2       ATBLK$ = ADDR(I_O_BUF(0));
     1924     7493    2       IF ORGSF = %KEYED# THEN
     1925     7494    2           DUMP_FILE =%YES#;
     1926     7495    2       ELSE
     1927     7496    2           IF ORGSF ~= %IDS# THEN
     1928     7497    3           DO;
     1929     7498         /*E* ERROR: ZIU-DBU#NODMP-C
     1930     7499                       MESSAGE:   Input file to PRINT utility must be an IDS area file
     1931     7500                                  or a DBUTIL dump of the IDS area file.
     1932     7501                       */
     1933     7502    3               ERRCODESF.ERR# = DBU#NODMP;
     1934     7503    3               MSGCODE = ERRCODE_RDEF;
     1935     7504    3               CALL SYS_FUNC_ERRMSG;
     1936     7505    3               ALTRETURN;
     1937     7506    3               END;
     1938     7507    2       RB=0; /* CURRENT PAGE */
     1939     7508    2       KEY_RANGE = %YES#;
     1940     7509    2       LOCAL_ONLY = %NO#;
     1941     7510    2       IF UWA.AC_REC.MIN_DBK = 1 THEN
     1942     7511    2           LOCAL_ONLY = %YES#;
     1943     7512    2       I_O_SIZE = 1; /* Number of pages to read */
     1944     7513    2       CALL READ_PAGE ALTRET(ALT_READ);
     1945     7514    2       CHK_SUM=ATBLK_PG.MISC_INFO.CHKSM;
     1946     7515    2       IF ORGSF = %KEYED# THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:59   
     1947     7516    2           IF ATBLK_PG.IDS_HDR ~= 'DUMP' THEN
     1948     7517    3           DO;
     1949     7518    3               ERRCODESF.ERR# = 1101;
     1950     7519    3               MSGCODE = ERRCODE_RDEF;
     1951     7520    3               CALL SYS_FUNC_ERRMSG;
     1952     7521    3               ALTRETURN;
     1953     7522    3               END;
     1954     7523        /**/
     1955     7524    3       IF ZI$DIR.CALCKEY THEN DO;
     1956     7525    3           AC_REC.CALC_NULL = UWA.AC_REC.CALC_NULL;
     1957     7526    3           AC_REC.BASE_DBK = UWA.AC_REC.BASE_DBK;
     1958     7527    3           AC_REC.KEYS_ALLOC = UWA.AC_REC.KEY_ALLOC;
     1959     7528    3           AC_REC.MIN_DBK = UWA.AC_REC.MIN_DBK;
     1960     7529    3           AC_REC.MAX_DBK = UWA.AC_REC.MAX_DBK;
     1961     7530    3           AC_REC.MIN_PAGE = UWA.AC_REC.MIN_PAGE;
     1962     7531    3           AC_REC.MAX_PAGE = UWA.AC_REC.MAX_PAGE;
     1963     7532    3           AC_REC.FRST_INV_PG = UWA.AC_REC.FIR_INV_PG;
     1964     7533    3           AC_REC.DBK_PER_PG = UWA.AC_REC.LPP;
     1965     7534    3           AC_REC.DBK_PER_CALC = UWA.AC_REC.IDB;
     1966     7535    3           CALCHDRS = ATBLK_PG.TOT_CALC_HDRS;
     1967     7536    3           LOW_DBK = ATBLK_PG.LOW_DBK;
     1968     7537    3           LPP = ATBLK_PG.LINE_INFO.LPP;
     1969     7538    3           END;
     1970     7539    2       IF UWA.AC_REC.SWS.TEMPLAT = %YES# THEN
     1971     7540    3       DO;
     1972     7541    3           UWA.AC_REC.CALC_HDRS = ATBLK_PG.TOT_CALC_HDRS;
     1973     7542    3           UWA.AC_REC.MAX_PAGE = ATBLK_PG.NUM_DBPG;
     1974     7543    3           UWA.AC_REC.MAX_DBK = ATBLK_PG.HIGH_DBK;
     1975     7544    3           UWA.AC_REC.INV_UNIT = ATBLK_PG.MISC_INFO.IUSZ;
     1976     7545    3           UWA.AC_REC.FIR_INV_PG = ATBLK_PG.FIR_INV_PGNO;
     1977     7546    3           LOW_DBK = ATBLK_PG.LOW_DBK;
     1978     7547    3           LPP = ATBLK_PG.LINE_INFO.LPP;
     1979     7548    3           END;
     1980     7549    2       RETURN;
     1981     7550        /**/
     1982     7551    2   ALT_READ: ALTRETURN;
     1983     7552    2   END GET_ATBLK_INFO;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:60   
     1984     7553        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:61   
     1985     7554        /*-----------------------------------------------------------------
     1986     7555                 R E A D     P A G E     P R O C E D U R E
     1987     7556        ------------------------------------------------------------------*/
     1988     7557    1   READ_PAGE: PROC ALTRET;
     1989     7558    2   DCL CNTER SBIN STATIC;
     1990     7559
     1991     7560    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;
     1992     7561    2   /**/ BUFSF = VECTOR(I_O_BUF);
     1993     7562    2   /**/ BUFLNSF=4096 * I_O_SIZE;
     1994     7563        /*      Check if the amount of memory we need is greater than the
     1995     7564                amount we have allocated.   */
     1996     7565
     1997     7566    2       IF I_O_SIZE > NBUFS*2
     1998     7567    3       THEN DO;
     1999     7568        /*E* ERROR: ZIU-DBU#INSUFMEM_TO_CONT-C
     2000     7569        MESSAGE: Insufficient memory to continue.  Use the !RES or !ORES
     2001     7570                 command to allocate more memory. */
     2002     7571    3           ERRCODESF.ERR# = DBU#INSUFMEM_TO_CONT;
     2003     7572    3           ERRFLGSF = 3;
     2004     7573    3           MSGCODE = ERRCODE_RDEF;
     2005     7574    3           CALL SYS_FUNC_ERRMSG;
     2006     7575    3           ALTRETURN;
     2007     7576    3           END;
     2008     7577    2   /**/ FULLSF = %YES#;
     2009     7578    2   /**/ KEYSF = %YES#;
     2010     7579    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;
     2011     7580    2   /**/ KEYVSF.LEN = 4;
     2012     7581    2   /**/ KEYVSF.IDSKEY = RB;
     2013     7582    2       I_O_INDX = -1;
     2014     7583
     2015     7584    2       IF DUMP_FILE = %NO# THEN
     2016     7585    2           CALL SYS_FUNC_READ ALTRET(ALT_READ);
     2017     7586    2       ELSE
     2018     7587    3       DO CNTER = RB TO RB+I_O_SIZE-1;
     2019     7588         /*  Fill I_O_BUF with specified no. pages by reading one at a
     2020     7589            time and expanding each one as it comes in.
     2021     7590         */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:62   
     2022     7591    3           I_O_INDX = I_O_INDX +1;
     2023     7592    3           KEYVSF.IDSKEY = CNTER;
     2024     7593    3    /**/   KEYSF = %YES#;
     2025     7594    3           BUFSF = VECTOR(I_O_BUF(I_O_INDX));
     2026     7595    3           BUFLNSF = 4096;
     2027     7596    3           CALL SYS_FUNC_READ ALTRET(ALT_READ);
     2028     7597    3           DATA$ = ADDR(I_O_BUF(I_O_INDX));
     2029     7598    4           IF NO_KEYSF THEN DO;
     2030     7599         /*E* ERROR: ZIU-DBU#NOKEY-C
     2031     7600                       MESSAGE: Page %U1 does not exist in file %FN.
     2032     7601                       */
     2033     7602    4    /**/       ERRCODESF.ERR# = DBU#NOKEY;
     2034     7603    4    /**/       ERRFLGSF = 0;
     2035     7604    4    /**/       MSGCODE = ERRCODE_RDEF;
     2036     7605    4               CALL BINCHAR(ERR_INSERT.TEXT(0),KEYVSF.IDSKEY);
     2037     7606    4               CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);
     2038     7607    4               CALL SYS_FUNC_ERRMSG;
     2039     7608    4               I_O_INDX = I_O_INDX-1;
     2040     7609    4               END;
     2041     7610    3           ELSE
     2042     7611    3               CALL EXPAND_PAGE;
     2043     7612    3           END;
     2044     7613    3       IF DUMP_FILE THEN DO;
     2045     7614    3           RB = RB+(I_O_SIZE-(I_O_INDX+1)); /*Add number missing pages to RB*/
     2046     7615    3           I_O_SIZE = I_O_INDX+1; /* Set I_O_SIZE to pages actually read */
     2047     7616    3           END;
     2048     7617    2       RETURN;
     2049     7618
     2050     7619    2   ALT_READ:
     2051     7620    2       IF B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR.ERR# = %E$EOF THEN
     2052     7621    3       DO;
     2053     7622    3           RE = KEYVSF.IDSKEY -1;
     2054     7623    3           RETURN;
     2055     7624    3           END;
     2056     7625    2       ELSE
     2057     7626    2           ALTRETURN;
     2058     7627    2   END READ_PAGE;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:63   
     2059     7628        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:64   
     2060     7629        /*-----------------------------------------------------------------
     2061     7630                   E X P A N D    P A G E    P R O C
     2062     7631        --------------------------------------------------------------------*/
     2063     7632    1   EXPAND_PAGE: PROC;
     2064     7633    2   DCL HIGH_LINE UBIN WORD STATIC;
     2065     7634    2   DCL ARRAY_SIZE UBIN WORD STATIC;
     2066     7635    2   DCL ARRAY_INDX UBIN WORD STATIC;
     2067     7636    2   DCL ACT_REC_LEN UBIN WORD STATIC;
     2068     7637    2   DCL FROM$ PTR STATIC;
     2069     7638    2   DCL FROMSTR BASED(FROM$) CHAR(ARRAY_SIZE);
     2070     7639    2   DCL TO$ PTR STATIC;
     2071     7640    2   DCL TOSTR BASED(TO$) CHAR(ARRAY_SIZE);
     2072     7641    2   DCL ZEROS (0:1023) UBIN WORD STATIC INIT(0*1024);
     2073     7642    2   DCL FIL CHAR(FIL_SIZE) BASED;
     2074     7643    2   DCL FIL_SIZE UBIN WORD STATIC;
     2075     7644    2   DCL SHIFT_ARRAY ENTRY(3);
     2076     7645    2   DCL I_O_BUFF (0:1023) UBIN WORD BASED(DATA$);
     2077     7646        /*
     2078     7647           This routine takes the offset array in the compressed record
     2079     7648           and moves it out to the end of the record. It then fills in
     2080     7649           the created space with zeros.
     2081     7650        */
     2082     7651    2       HIGH_LINE = DATA_PG.OFF_LN.SEC;
     2083     7652    2       ARRAY_SIZE = (HIGH_LINE/2)+1;
     2084     7653    2       ACT_REC_LEN = (DCBADDR(DCBSF)->F$DCB.ARS#)/4;
     2085     7654        /*
     2086     7655           We now have the number of elements in the offset array (high_line)
     2087     7656           - it's size in words and the actual record(compressed) size.
     2088     7657        */
     2089     7658    2       IF ACT_REC_LEN = 1024 THEN
     2090     7659    2           RETURN; /* Page was never compressed - no need to decompress*/
     2091     7660        /*
     2092     7661               Find position in record where array should start and move it
     2093     7662        */
     2094     7663    2       ARRAY_INDX = 1024 - ARRAY_SIZE;
     2095     7664    2       TO$ = ADDR(I_O_BUFF(ARRAY_INDX));
     2096     7665    2       FROM$ = ADDR(I_O_BUFF(ACT_REC_LEN - ARRAY_SIZE));
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:65   
     2097     7666    2       ARRAY_SIZE = ARRAY_SIZE *4; /* Convert to character length */
     2098     7667    2       CALL SHIFT_ARRAY(FROMSTR,TOSTR,ARRAY_SIZE);/* BMAP routine using MRL */
     2099     7668         /*
     2100     7669            Fill in gap with zeros.
     2101     7670         */
     2102     7671    2       FIL_SIZE = 4 * (1024-ACT_REC_LEN);
     2103     7672    2       TO$ = FROM$;
     2104     7673    2       FROM$ = ADDR(ZEROS);
     2105     7674    2       TO$->FIL = FROM$->FIL;
     2106     7675    2       RETURN;
     2107     7676    2   END EXPAND_PAGE;
     2108     7677        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:66   
     2109     7678    1   GET_POINTER: PROC(PTR_SIZE,PTR_LOC,PTR_MSG);
     2110     7679
     2111     7680    2   DCL PTR_SIZE UBIN;
     2112     7681    2   DCL PTR_LOC CHAR(1) CALIGNED;
     2113     7682    2   DCL PTR_V CHAR(PTR_SIZE) BASED CALIGNED;
     2114     7683    2   DCL PTR_MSG CHAR(10) CALIGNED;
     2115     7684
     2116     7685    2       X=0;
     2117     7686    2       IF PTR_SIZE>0 THEN
     2118     7687    3       DO;
     2119     7688    3           PINCRC(ADDR(X),4-PTR_SIZE)->PTR_V=ADDR(PTR_LOC)->PTR_V;
     2120     7689    3           CALL BINCHAR(PTR_MSG,X);
     2121     7690    3           CALL ZERO_SUP(PTR_MSG,10,'0'B);
     2122     7691    3           END;
     2123     7692    2       ELSE
     2124     7693    2           PTR_MSG=' '; /* NO EIS DESCRIPT FOR THIS TYPE OF PTR */
     2125     7694    2   END GET_POINTER;
     2126     7695        /***************************************************************/
     2127     7696        /*                                                             */
     2128     7697        /*           F I N D   R E C O R D   P R O C                   */
     2129     7698        /***************************************************************/
     2130     7699    1   FIND_REC: PROC;
     2131     7700         /*
     2132     7701            Print calc header if selected in record opton or if
     2133     7702            no records or keys were specified in directive.
     2134     7703         */
     2135     7704    2       REC_TYP=REC_FRMT.TYPE;
     2136     7705    2       REC_HDR.REC_NM=' ';
     2137     7706    2       CALL ZERO_SUP(REC_HDR.DBK,LENGTHC(REC_HDR.DBK),'1'B);
     2138     7707    2       IF REC_TYP>4000 OR TYPE.MSTRINDX(REC_TYP)<0 THEN
     2139     7708    3       DO;
     2140     7709         /*E* ERROR: ZIU-DBU#BADREC-C
     2141     7710                    MESSAGE: Unknown record type found at DBK# %U1. */
     2142     7711    3           ERR_INSERT.TEXT(0)=REC_HDR.DBK;
     2143     7712    3           CALL INDEX1(X,' ',REC_HDR.DBK);
     2144     7713    3           ERR_INSERT.CNT(0)=X;
     2145     7714    3           ERRCODESF.ERR#=DBU#BADREC;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:67   
     2146     7715    3           ERRFLGSF=0;
     2147     7716    3           MSGCODE = ERRCODE_RDEF;
     2148     7717    3           CALL SYS_FUNC_ERRMSG;
     2149     7718    3           RETURN;
     2150     7719    3           END;
     2151     7720    2       REC_INDX=TYPE.MSTRINDX(REC_TYP);
     2152     7721    2       REC_HDR.REC_NM=MSTR_REF.NAME(REC_INDX);
     2153     7722    2       CURR_REC=REC_INDX;
     2154     7723    2       IF REC_TYP=4000 AND (ZI$DIR.PCALC OR ZI$DIR.FSET) THEN
     2155     7724
     2156     7725    3       DO;
     2157     7726    3           REC_DATA_LN=REC_FRMT.LNGHT-4; /*LENGHT OF CALC HEADERS*/
     2158     7727    3           TEMP$=PINCRC(REC$,4);
     2159     7728    3           CALL GET_POINTER(GLBL_PTR_SZ,TEMP$->SZ2,CALC_HDR.NT);
     2160     7729    3           IF ZI$DIR.FSET THEN
     2161     7730    3               KB=X;
     2162     7731    3           TEMP$=PINCRC(TEMP$,GLBL_PTR_SZ);
     2163     7732    3           CALL GET_POINTER(GLBL_PTR_SZ,TEMP$->SZ2,CALC_HDR.PR);
     2164     7733    3           CALL ZERO_SUP(CALC_HDR.PR,10,'1'B);
     2165     7734    3           CALL ZERO_SUP(CALC_HDR.NT,10,'1'B);
     2166     7735    3           CALL BINCHAR(CALC_HDR.DBKVAL,(DATA_PG.CON_INTRVAL*UWA.AC_REC.LPP)
     2167     7736    3              + I + UWA.AC_REC.MIN_DBK -
     2168     7737    3              UWA.AC_REC.LPP);
     2169     7738    3           CALL ZERO_SUP(CALC_HDR.DBKVAL,11,'1'B);
     2170     7739    3    /**/   BUFSF = VECTOR(SKIP);
     2171     7740    3    /**/   BUFLNSF = 1;
     2172     7741    3           CALL WRITE_LINE;
     2173     7742    3    /**/   BUFSF = VECTOR(CALC_HDR);
     2174     7743    3    /**/   BUFLNSF = LENGTHC(CALC_HDR);
     2175     7744    3           CALL WRITE_LINE;
     2176     7745    3           RETURN;
     2177     7746    3           END;
     2178     7747    2       ELSE
     2179     7748    2           IF REC_TYP=4000 THEN
     2180     7749    2               RETURN;
     2181     7750    2       IF ZI$DIR.PITEM=%YES# THEN
     2182     7751    3       DO; /* GOES TO SCHEMA FOR ITEM DEFINITION FOR THIS REC */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:68   
     2183     7752    3           UWA.RC_REC.RTYPE = -1; /* INIT RECORD TYPE TO AN UNKNOWN */
     2184     7753    3           CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);
     2185     7754    4           DO WHILE ( (UWA.RC_REC.RTYPE~=REC_TYP)
     2186     7755    4              AND (UWA.DB_STATUS ~='02100'));
     2187     7756    4               CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC);
     2188     7757    4               IF UWA.DB_STATUS ~= '02100' THEN
     2189     7758    4                   CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC);
     2190     7759    4               END;
     2191     7760    3           END;
     2192     7761    2   END FIND_REC;
     2193     7762        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:69   
     2194     7763        /***************************************************************/
     2195     7764        /*                                                             */
     2196     7765        /*           F I N D   N E X T   S E T   P R O C               */
     2197     7766        /***************************************************************/
     2198     7767        /*
     2199     7768                   RC record now positioned - find sets associated
     2200     7769        */
     2201     7770    1   FIND_PRINT_SETS: PROC(PSETS);
     2202     7771
     2203     7772    2   DCL PSETS BIT(1) UNAL;
     2204     7773
     2205     7774
     2206     7775    2       REC_INDX=MSTR_REF.NEXT(CURR_REC); /* GOES TO SETXREF */
     2207     7776    2       IF PSETS AND REC_INDX>=0 THEN /* THERE ARE SETS TO PRINT */
     2208     7777    3       DO;
     2209     7778    3           BUFSF = VECTOR(SET_HDR0); /* PRINT TYPE OF POINTERS TEXT */
     2210     7779    3           BUFLNSF = LENGTHC(SET_HDR0);
     2211     7780    3           CALL WRITE_LINE;
     2212     7781    3           END;
     2213     7782    2       IF PSETS OR ZI$DIR.FSET THEN /* ONLY WHEN PRINT SET OR FOLLOW */
     2214     7783    3       DO WHILE(REC_INDX > -1);
     2215     7784    3           SET_HDR.NAME=MSTR_REF.NAME(SET_XREF.MSTRINDX(REC_INDX));
     2216     7785    3           CALL FIND_POINTER(SET_XREF.EIS.PRIOR(REC_INDX),SET_HDR.PRIOR);
     2217     7786    3           CALL FIND_POINTER(SET_XREF.EIS.OWNR(REC_INDX),SET_HDR.OWNER);
     2218     7787    3           CALL FIND_POINTER(SET_XREF.EIS.NEXT(REC_INDX),SET_HDR.NEXT);
     2219     7788    3           IF ZI$DIR.FSET AND ZI$DIR.SET_NM=SET_HDR.NAME THEN
     2220     7789    3               KB=X;
     2221     7790    3           IF PSETS THEN CALL SET_OUTPUT;
     2222     7791    3           REC_INDX=SET_XREF.NEXT(REC_INDX);
     2223     7792    3           IF MSTR_REF.PAOFF(CURR_REC)>0 THEN
     2224     7793    3               REC_INDX=-1; /* FOR *PA_REC, .NEXT ALWAYS DUPLICATE */
     2225     7794    3           END;
     2226     7795    2   END FIND_PRINT_SETS;
     2227     7796
     2228     7797    1   FIND_POINTER: PROC(EIS,PTR_MSG);
     2229     7798
     2230     7799    2   DCL EIS SBIN;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:70   
     2231     7800    2   DCL PTR_MSG CHAR(10) CALIGNED;
     2232     7801
     2233     7802    2       EIS$=ADDR(EIS);
     2234     7803    2       SET$=PINCRW(REC$,ADSC9.EISADDR);
     2235     7804    2       SET$=PINCRC(SET$,ADSC9.BYT_OFF/2);
     2236     7805    2       SET_LN=NDSC.SIZE;
     2237     7806    2       CALL GET_POINTER(SET_LN,SET$->SZ3,PTR_MSG);
     2238     7807    2   END FIND_POINTER;
     2239     7808        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:71   
     2240     7809        /***************************************************************/
     2241     7810        /*                                                             */
     2242     7811        /*           F I N D   A N D   P R I N T   I T E M S           */
     2243     7812        /***************************************************************/
     2244     7813    1   FIND_PRINT_ITEMS: PROC;
     2245     7814    2   DCL 1 PA_REC BASED(REC$) CALIGNED,
     2246     7815    2         2 * UBIN(6) UNAL,
     2247     7816    2         2 TYPE UBIN(12) UNAL,
     2248     7817    2         2 SIZE UBIN(18) UNAL,
     2249     7818    2         2 LOWEST_LEVEL BIT(1) UNAL,
     2250     7819    2         2 HIGHEST_KEY BIT(1) UNAL,
     2251     7820    2         2 FIRST_IN_LEVEL BIT(1) UNAL,
     2252     7821    2         2 LAST_IN_LEVEL BIT(1) UNAL,
     2253     7822    2         2 LOWEST_KEY BIT(1) UNAL,
     2254     7823    2         2 * BIT(1) UNAL,
     2255     7824    2         2 ENTRIES UBIN(12) UNAL,
     2256     7825    2         2 AVAIL UBIN(18) UNAL;
     2257     7826    2   DCL 1 PA_ENTRY BASED(ENTRY$) UNAL,
     2258     7827    2         2 C UBIN(1) UNAL,
     2259     7828    2         2 * UBIN(5) UNAL,
     2260     7829    2         2 TYPE UBIN(12) UNAL,
     2261     7830    2         2 PTRS CHAR(PTR_SIZE) UNAL;
     2262     7831    2   DCL 1 PA_GROUP BASED(GROUP$) UNAL,
     2263     7832    2         2 NO_GROUPS UBIN HALF UNAL,
     2264     7833    2         2 TYPE UBIN(18) UNAL,
     2265     7834    2         2 PTRS CHAR(PTR_SIZE) UNAL;
     2266     7835    2   DCL CHAR7 CHAR(7) BASED UNAL;
     2267     7836    2   DCL 1 PA_HDR STATIC,
     2268     7837    2         2 VFC CHAR(5) UNAL INIT('B'),
     2269     7838    2         2 * CHAR(0) INIT('ENTRIES: ') UNAL,
     2270     7839    2         2 ENTRIES CHAR(7) UNAL,
     2271     7840    2         2 * CHAR(0) INIT('SPACE AVAIL: ') UNAL,
     2272     7841    2         2 AVAIL CHAR(8) UNAL,
     2273     7842    2         2 * CHAR(0) INIT('ORDER: ') UNAL,
     2274     7843    2         2 ORDER CHAR(0) INIT('FIRST $ LAST IN LOWEST LEVEL') UNAL;
     2275     7844
     2276     7845    2   DCL 1 PA_BUF STATIC,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:72   
     2277     7846    2         2 VFC CHAR(5) UNAL INIT('A'),
     2278     7847    2         2 KEY_TXT CHAR(9) UNAL INIT('KEY-NAME:'),
     2279     7848    2         2 KEY_NO REDEF KEY_TXT,
     2280     7849    2           3 ENT1 CHAR(4) UNAL,
     2281     7850    2           3 ENT2 CHAR(5) UNAL,
     2282     7851    2         2 * CHAR(1) UNAL INIT(' '),
     2283     7852    2         2 KEYNAME CHAR(30) UNAL,
     2284     7853    2         2 POINTER CHAR(10) UNAL INIT('POINTER'),
     2285     7854    2         2 REC CHAR(4) UNAL,
     2286     7855    2         2 NAME CHAR(30) UNAL;
     2287     7856    2   DCL NAME_SAVE CHAR(30);
     2288     7857    2   DCL INDX SBIN STATIC;
     2289     7858    2   DCL Y SBIN STATIC;
     2290     7859    2   DCL NO_GROUPS SBIN STATIC;
     2291     7860    2   DCL C SBIN STATIC;
     2292     7861    2   DCL NO_SORT_KEYS SBIN STATIC;
     2293     7862    2   DCL ENTRY_INDX SBIN STATIC;
     2294     7863    2   DCL CHAR_V CHAR(PTR_SIZE) BASED CALIGNED;
     2295     7864    2   DCL 1 FR_SAVE(0:11),
     2296     7865    2         2 FTYP UBIN HALF UNAL,
     2297     7866    2         2 FEIS UBIN,
     2298     7867    2         2 FRFRH UBIN UNAL;
     2299     7868    2   GET_GROUP: PROC; /* GET PTR FROM PA_GROUP */
     2300     7869
     2301     7870    3   DCL C_V CHAR(SET_LN) BASED;
     2302     7871
     2303     7872    3       CALL GET_POINTER(PTR_SIZE,PA_GROUP.PTRS,PA_BUF.POINTER);
     2304     7873    3       CALL INDEX1(SET_LN,' ',PA_HDR.AVAIL);
     2305     7874    3       CALL BINCHAR(PA_HDR.ENTRIES,C);
     2306     7875    3       CALL ZERO_SUP(PA_HDR.ENTRIES,LENGTHC(PA_HDR.ENTRIES),'1'B);
     2307     7876    3       CALL CONCAT(PA_BUF.KEY_NO.ENT2,ADDR(PA_HDR.AVAIL)->C_V,'.',PA_HDR.ENTRIES);
     2308     7877    3       C=C+1;
     2309     7878    3       GROUP$=PINCRC(GROUP$,PTR_SIZE+2);
     2310     7879    3   END GET_GROUP;
     2311     7880
     2312     7881    2       UWA.DB_STATUS = '00000';
     2313     7882    2       IF ADDR(REC_HDR.REC_NM)->CHAR7 ~= '*PA_REC' THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:73   
     2314     7883    3       DO;
     2315     7884    4           DO UNTIL_END_OF_REALM;
     2316     7885    4   FIND_NEXT_ITEM:
     2317     7886    4               CALL DB_FUNC_FRS(CAN_RVA.FRREC.SEC,CAN_RVA.RCFR.SEC);
     2318     7887    4               IF UWA.DB_STATUS = '00000' THEN
     2319     7888    5               DO;
     2320     7889    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);
     2321     7890         /* Get FR rec to get item descriptions then */
     2322     7891         /* get name of field w/in the record */
     2323     7892    6                   IF UWA.FR_REC.SYN = 0 THEN DO;
     2324     7893    6                       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);
     2325     7894    6                       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);
     2326     7895         /*
     2327     7896            Check - if there are item specifications:
     2328     7897            If so - do any of the items pertain to the current rec.
     2329     7898            If so - is this item one which was specified?
     2330     7899            If so - fall through - if not return.
     2331     7900         */
     2332     7901    6                       IF ITMCNT > -1 THEN
     2333     7902    7                       DO;
     2334     7903    7                           X=0;
     2335     7904    8                           DO WHILE((ITEM_LIST.TYPE(X)~=REC_TYP OR
     2336     7905    8                              ITEM_LIST.NAME(X)~=UWA.SN_REC.SENAME) AND X<=ITMCNT);
     2337     7906    8                               X=X+1;
     2338     7907    8                               END;
     2339     7908    7                           IF X>ITMCNT THEN GOTO FIND_NEXT_ITEM;
     2340     7909    7                           END;
     2341     7910    6                       ITEM.NAME=UWA.SN_REC.SENAME;
     2342     7911    6                       ITEM.KEY_TYPE='(';
     2343     7912    6                       PTR_SIZE=1;
     2344     7913    7                       DO WHILE(UWA.DB_STATUS='00000');
     2345     7914    7                           CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.FRCFS.SEC);
     2346     7915    7                           IF UWA.DB_STATUS='00000' THEN
     2347     7916    8                           DO;
     2348     7917    8                               CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC);
     2349     7918    8                               IF UWA.CF_REC.CTLTYP=4 THEN
     2350     7919    9                               DO;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:74   
     2351     7920    9                                   CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE,6,'*CALC,');
     2352     7921    9                                   PTR_SIZE=PTR_SIZE+6;
     2353     7922    9                                   CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.FRCFS.SEC
              7922                                            ); /* SKIP DUPLICATE */
     2354     7923    9                                   END;
     2355     7924    8                               ELSE
     2356     7925    9                               DO;
     2357     7926    9                                   CALL DB_FUNC_FOR(CAN_RVA.SMSSCF.SEC);
     2358     7927    9                                   CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC);
     2359     7928    9                                   CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC);
     2360     7929        /**/
     2361     7930        /*    COMMENT THE FOLLOWING CODES (NOT USED AT THIS MOMENT)
     2362     7931                                IF UWA.CF_REC.CTLTYP=0 THEN
     2363     7932                                DO;
     2364     7933                                   CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE,6,'*SORT_');
     2365     7934                                   PTR_SIZE=PTR_SIZE+6;
     2366     7935                                END;
     2367     7936                                IF UWA.SC_REC.SETTYPE=3 OR UWA.CF_REC.CTLTYP=0 THEN
     2368     7937              REPLACE THE NEXT LINE OF CODE, IT WILL PRINT EXTRA INFO ABOUT
     2369     7938              A FIELD. EXP: IFA FIELD IS A SORTED KEY FOR SET SSSS
     2370     7939                            THEN  (*SORT_SSSS) WILL BE PRINTED. */
     2371     7940        /**/
     2372     7941    9                                   IF UWA.SC_REC.SETTYPE > 1 AND UWA.CF_REC.CTLTYP = 3
              7941                                            THEN
     2373     7942   10                                   DO;
     2374     7943   10                                       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);
     2375     7944   10                                       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);
     2376     7945   10                                       CALL INDEX1(INDX,' ',UWA.SN_REC.SENAME);
     2377     7946   10                                       CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE,INDX,UWA.
              7946                                                SN_REC.SENAME);
     2378     7947   10                                       PTR_SIZE=PTR_SIZE+INDX+1;
     2379     7948   10                                       CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE-1,1,',');
     2380     7949   10                                       END;
     2381     7950    9                                   END;
     2382     7951    8                               END;
     2383     7952    7                           END;
     2384     7953    6                       IF ITEM.KEY_TYPE='(' THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:75   
     2385     7954    6                           ITEM.KEY_TYPE=' ';
     2386     7955    6                       ELSE
     2387     7956    6                           CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE-1,1,')');
     2388     7957    6                       UWA.DB_STATUS='00000';
     2389     7958         /*
     2390     7959                            Call print routine to print items.
     2391     7960         */
     2392     7961    6                       CALL IT_OUTPUT;
     2393     7962    6                       END;
     2394     7963    5                   END;
     2395     7964    4               END;
     2396     7965    3           END;
     2397     7966    2       ELSE
     2398     7967    3       DO;
     2399     7968    3           X=PA_REC.ENTRIES;
     2400     7969    3           CALL BINCHAR(PA_HDR.ENTRIES,X);
     2401     7970    3           CALL ZERO_SUP(PA_HDR.ENTRIES,LENGTHC(PA_HDR.ENTRIES),'1'B);
     2402     7971    3           X=PA_REC.AVAIL;
     2403     7972    3           CALL BINCHAR(PA_HDR.AVAIL,X);
     2404     7973    3           CALL ZERO_SUP(PA_HDR.AVAIL,LENGTHC(PA_HDR.AVAIL),'1'B);
     2405     7974    3           IF PA_REC.LOWEST_LEVEL='0'B THEN
     2406     7975    3               PA_BUF.KEYNAME=' IN LOWEST LEVEL';
     2407     7976    3           ELSE
     2408     7977    3               PA_BUF.KEYNAME=' IN HIGHER LEVEL';
     2409     7978    3           IF PA_REC.FIRST_IN_LEVEL AND PA_REC.LAST_IN_LEVEL THEN
     2410     7979    3               CALL CONCAT(PA_HDR.ORDER,'FIRST & LAST',PA_BUF.KEYNAME);
     2411     7980    3           ELSE
     2412     7981    3               IF PA_REC.FIRST_IN_LEVEL THEN
     2413     7982    3                   CALL CONCAT(PA_HDR.ORDER,'FIRST',PA_BUF.KEYNAME);
     2414     7983    3               ELSE
     2415     7984    3                   IF PA_REC.LAST_IN_LEVEL THEN
     2416     7985    3                       CALL CONCAT(PA_HDR.ORDER,'LAST',PA_BUF.KEYNAME);
     2417     7986    3                   ELSE
     2418     7987    3                       CALL CONCAT(PA_HDR.ORDER,'MIDDLE',PA_BUF.KEYNAME);
     2419     7988    3           BUFSF=VECTOR(PA_HDR);
     2420     7989    3           BUFLNSF=LENGTHC(PA_HDR);
     2421     7990    3           CALL WRITE_LINE;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:76   
     2422     7991    3           IF PA_REC.ENTRIES>0 THEN
     2423     7992    4           DO;
     2424     7993    5               DO X=0 TO 9999;
     2425     7994    5                   CALL DB_FUNC_FRS(CAN_RVA.FRREC.SEC,CAN_RVA.RCFR.SEC);
     2426     7995    5                   IF UWA.DB_STATUS~='00000' THEN GOTO EOS_1;
     2427     7996    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);
     2428     7997    5                   FR_SAVE.FTYP(X)=UWA.FR_REC.FTYP;
     2429     7998    5                   FR_SAVE.FEIS(X)=UWA.FR_REC.BUFLOC;
     2430     7999    5                   FR_SAVE.FRFRH(X)=UWA.FR_REC.FRFRH;
     2431     8000    5                   END;
     2432     8001    4   EOS_1:      NO_SORT_KEYS=X-1;
     2433     8002    4               PA_BUF.KEY_TXT='KEY-NAME:';
     2434     8003    4               IF MSTR_REF.GLOBAL(SET_XREF.MSTRINDX(MSTR_REF.NEXT(REC_INDX)))~=1
     2435     8004    4                  AND ~LOCAL_ONLY THEN
     2436     8005    4                   PA_BUF.POINTER='LOCAL PTRS';
     2437     8006    4               ELSE
     2438     8007    4                   PA_BUF.POINTER='  POINTERS';
     2439     8008    4               NAME_SAVE=' ';
     2440     8009    4               X=0;
     2441     8010    4               PA_BUF.REC=' -> ';
     2442     8011    4               PA_BUF.VFC='A';
     2443     8012    5               DO INDX=0 TO NO_SORT_KEYS;
     2444     8013    5                   CALL DB_FUNC_FDR(CAN_RVA.FRREC.SEC,FR_SAVE.FRFRH(INDX));
     2445     8014    5                   CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);
     2446     8015    5                   CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);
     2447     8016    5                   PA_BUF.KEYNAME=UWA.SN_REC.SENAME;
     2448     8017    5                   CALL DB_FUNC_FOR(CAN_RVA.RCFR.SEC); /* FIND RC OF PA MEM */
     2449     8018    5                   CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC);
     2450     8019    5                   FR_SAVE.FRFRH(INDX)=UWA.RC_REC.RTYPE; /* SAVE THE TYPE */
     2451     8020    5                   CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC); /* GET THE NAME */
     2452     8021    5                   CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC); /* GET RC NAME */
     2453     8022    5                   IF UWA.SN_REC.SENAME~=NAME_SAVE THEN
     2454     8023    6                   DO;
     2455     8024    6                       X=X+1;
     2456     8025    6                       IF PA_REC.LOWEST_LEVEL THEN /* NOT LOWEST LEVEL */
     2457     8026    6                           PA_BUF.NAME='LOWER LEVEL';
     2458     8027    6                       ELSE
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:77   
     2459     8028    6                           PA_BUF.NAME=UWA.SN_REC.SENAME;
     2460     8029    6                       NAME_SAVE=UWA.SN_REC.SENAME;
     2461     8030    6                       END;
     2462     8031    5                   BUFSF=VECTOR(PA_BUF);
     2463     8032    5                   BUFLNSF=LENGTHC(PA_BUF);
     2464     8033    5                   IF INDX=NO_SORT_KEYS THEN PA_BUF.VFC='B';
     2465     8034    5                   CALL WRITE_LINE;
     2466     8035    5                   PA_BUF.POINTER=' ';
     2467     8036    5                   PA_BUF.KEY_TXT=' ';
     2468     8037    5                   PA_BUF.REC=' ';
     2469     8038    5                   PA_BUF.NAME=' ';
     2470     8039    5                   END;
     2471     8040    4               PTR_SIZE=(MSTR_REF.PAOFF(REC_INDX)-2*4)/3;
     2472     8041    4               KEY_SIZE=MSTR_REF.PAENT(REC_INDX)-2-PTR_SIZE;
     2473     8042    4               ENTRY$=PINCRC(REC$,MSTR_REF.PAOFF(REC_INDX));
     2474     8043    4               KEY_PTR_SIZE=KEY_SIZE+PTR_SIZE;
     2475     8044    4               NO_SORT_KEYS=(NO_SORT_KEYS+1)/X-1;
     2476     8045    4               PA_BUF.VFC='A';
     2477     8046    4               IF PA_REC.LOWEST_KEY THEN
     2478     8047    5               DO;
     2479     8048    5                   PA_BUF.KEYNAME='<FIRST KEY REPEATED IN PRIOR>';
     2480     8049    5                   CALL WRITE_LINE;
     2481     8050    5                   END;
     2482     8051    5               DO ENTRY_INDX=1 TO PA_REC.ENTRIES;
     2483     8052    5                   CALL BINCHAR(PA_HDR.AVAIL,ENTRY_INDX);
     2484     8053    5                   CALL ZERO_SUP(PA_HDR.AVAIL,LENGTHC(PA_HDR.AVAIL),'1'B);
     2485     8054    5                   PA_BUF.KEY_NO.ENT1='DBK.';
     2486     8055    5                   CALL GET_POINTER(PTR_SIZE,PA_ENTRY.PTRS,PA_BUF.POINTER);
     2487     8056    5                   IF PA_ENTRY.C=0 THEN
     2488     8057    5                       PA_BUF.KEY_NO.ENT2=PA_HDR.AVAIL;
     2489     8058    5                   ELSE
     2490     8059    6                   DO;
     2491     8060    6                       GROUP$=PINCRC(REC$,X);
     2492     8061    6                       NO_GROUPS=PA_GROUP.NO_GROUPS;
     2493     8062    6                       END;
     2494     8063    5                   C=1;
     2495     8064    6                   DO INDX=0 TO NO_SORT_KEYS;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:78   
     2496     8065    6                       EIS$=ADDR(FR_SAVE.FEIS(INDX));
     2497     8066    6                       ITEM$=PINCRW(ENTRY$,ADSC9.EISADDR);
     2498     8067    6                       UWA.FR_REC.FTYP=FR_SAVE.FTYP(INDX);
     2499     8068    6                       CALL PA_IT_OUTPUT;
     2500     8069    6                       PA_BUF.KEYNAME=IT_HDR.DATA;
     2501     8070    6                       BUFSF=VECTOR(PA_BUF);
     2502     8071    6                       BUFLNSF=LENGTHC(PA_BUF);
     2503     8072    6                       IF PA_ENTRY.C=1 AND C<=NO_GROUPS THEN
     2504     8073    6                           CALL GET_GROUP;
     2505     8074    6                       CALL WRITE_LINE;
     2506     8075    6                       PA_BUF.KEYNAME=' ';
     2507     8076    6                       PA_BUF.KEY_TXT=' ';
     2508     8077    6                       PA_BUF.POINTER=' ';
     2509     8078    6                       END;
     2510     8079    6                   DO WHILE (PA_ENTRY.C=1 AND C<=NO_GROUPS);
     2511     8080    6                       CALL GET_GROUP;
     2512     8081    6                       CALL WRITE_LINE;
     2513     8082    6                       END;
     2514     8083    5                   ENTRY$=PINCRC(ENTRY$,KEY_PTR_SIZE+2);
     2515     8084    5                   END;
     2516     8085    4               IF PA_REC.HIGHEST_KEY THEN
     2517     8086    5               DO;
     2518     8087    5                   PA_BUF.POINTER=' ';
     2519     8088    5                   PA_BUF.KEY_TXT=' ';
     2520     8089    5                   PA_BUF.KEYNAME='<LAST KEY REPEATED IN NEXT>';
     2521     8090    5                   CALL WRITE_LINE;
     2522     8091    5                   END;
     2523     8092    4               END;
     2524     8093    3           END;
     2525     8094    2   END FIND_PRINT_ITEMS;
     2526     8095        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:79   
     2527     8096        /***************************************************************/
     2528     8097        /*                                                             */
     2529     8098        /*           O U T P U T     R E C O R D    I N F O            */
     2530     8099        /***************************************************************/
     2531     8100    1   REC_OUTPUT: PROC;
     2532     8101    2   DCL PSMODE_TXT(0:5) CHAR(6) CALIGNED STATIC
     2533     8102    2    INIT('DIRECT','CALC','VIA','SEQUEN','INDEX','SYSTEM');
     2534     8103
     2535     8104    2       REC_HDR.PSMODE=PSMODE_TXT(MSTR_REF.PSMODE(CURR_REC));
     2536     8105    2       CALL ZERO_SUP(REC_HDR.PAGE_NO,8,'1'B);
     2537     8106    2       CALL ZERO_SUP(REC_HDR.LN_NBR,5,'1'B);
     2538     8107    2   /**/ BUFSF = VECTOR(SKIP);
     2539     8108    2   /**/ BUFLNSF = 1;
     2540     8109    2       CALL WRITE_LINE;
     2541     8110    2   /**/ BUFSF = VECTOR(REC_HDR);
     2542     8111    2   /**/ BUFLNSF = 75;
     2543     8112    2       CALL WRITE_LINE;
     2544     8113    2       RETURN;
     2545     8114    2   END REC_OUTPUT;
     2546     8115        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:80   
     2547     8116        /***************************************************************/
     2548     8117        /*                                                             */
     2549     8118        /*           O U T P U T   S E T   I N F O                     */
     2550     8119        /***************************************************************/
     2551     8120
     2552     8121    1   SET_OUTPUT: PROC;
     2553     8122    2   DCL ORDER_TXT(0:6) CHAR(5) CALIGNED STATIC
     2554     8123    2    INIT('FIRST','LAST','NEXT','PRIOR','SORT','UNKWN','SWRN');
     2555     8124
     2556     8125    2       X=SET_XREF.MSTRINDX(REC_INDX); /* INDX IN MSTR_REF FOR THE SET */
     2557     8126    2       SET_HDR.ORDER=ORDER_TXT(MSTR_REF.SET.ORDER(X));
     2558     8127    2       SET_HDR.GLO_LOC = '      ';
     2559     8128    2       IF MSTR_REF.GLOBAL(X)~=1 AND ~LOCAL_ONLY THEN
     2560     8129    2           SET_HDR.GLO_LOC='(LOC)';
     2561     8130    2       SET_HDR.SET_TYPE=' ';
     2562     8131    2       IF SET_XREF.EIS.OWNR(REC_INDX)~=0 /* REC IS SM FOR THE SET */
     2563     8132    2          AND MSTR_REF.SET.SMMODE(X)='1'B /* PRIMARY STORAGE */
     2564     8133    2          AND MSTR_REF.PSMODE(CURR_REC)=2 THEN /* REC IS VIA */
     2565     8134    2           SET_HDR.SET_TYPE='(VIA)';
     2566     8135    2       BUFSF=VECTOR(SET_HDR);
     2567     8136    2       BUFLNSF=LENGTHC(SET_HDR);
     2568     8137    2       CALL WRITE_LINE;
     2569     8138    2   END SET_OUTPUT;
     2570     8139        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:81   
     2571     8140        /***************************************************************/
     2572     8141        /*                                                             */
     2573     8142        /*           O U T P U T   R E C O R D   I T E M S             */
     2574     8143        /***************************************************************/
     2575     8144    1   IT_OUTPUT: PROC;
     2576     8145    2   DCL CHAR7 CHAR(7) BASED UNAL;
     2577     8146    2       EIS$=ADDR(UWA.FR_REC.BUFLOC);
     2578     8147    2       ITEM$=PINCRW(REC$,ADSC9.EISADDR);
     2579     8148
     2580     8149    2   PA_IT_OUTPUT: ENTRY;
     2581     8150    2       ITEM$=PINCRC(ITEM$,ADSC9.BYT_OFF/2);
     2582     8151    2       IT_HDR.DATA=' ';
     2583     8152    2       ITEM_LN=0;
     2584     8153    3       DO CASE(UWA.FR_REC.FTYP);
     2585     8154    3       CASE(0);
     2586     8155    3           ITEM.TYPE='DB-KEY';
     2587     8156    3           ITEM.SZ = ' ';
     2588     8157    3           CALL BINCHAR(IT_HDR.DATA,ITEM$->BINU);
     2589     8158    3           CALL ZERO_SUP(IT_HDR.DATA,50,'1'B);
     2590     8159    3       CASE(1);
     2591     8160    3           ITEM.TYPE='COMP WORD';
     2592     8161    3           ITEM.SZ = ' ';
     2593     8162    3           CALL BINCHAR(IT_HDR.DATA,ITEM$->BINU);
     2594     8163    3           CALL ZERO_SUP(IT_HDR.DATA,50,'1'B);
     2595     8164    3       CASE(2);
     2596     8165    3           ITEM.TYPE='COMP HALF';
     2597     8166    3           ITEM.SZ = ' ';
     2598     8167    3           CALL BINCHAR(IT_HDR.DATA,ITEM$->BINH);
     2599     8168    3           CALL ZERO_SUP(IT_HDR.DATA,50,'1'B);
     2600     8169    3       CASE(3);
     2601     8170    3           ITEM.TYPE = 'UNSGN DEC';
     2602     8171    3           CALL BINCHAR(ITEM.SZ,NDSC.SIZE);
     2603     8172    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);
     2604     8173    3           CALL UNPAK(IT_HDR.DATA,ITEM$,NDSC.SIZE,'0'B);
     2605     8174    3       CASE(4);
     2606     8175    3           ITEM.TYPE = 'SGNED DEC';
     2607     8176    3           CALL BINCHAR(ITEM.SZ,NDSC.SIZE-1); /*-1 FOR SIGN*/
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:82   
     2608     8177    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);
     2609     8178    3           CALL UNPAK(IT_HDR.DATA,ITEM$,NDSC.SIZE,'1'B);
     2610     8179    3       CASE(5);
     2611     8180    3           ITEM.TYPE = 'CHARACTER';
     2612     8181    3           CALL BINCHAR(ITEM.SZ,ADSC9.SIZE);
     2613     8182    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);
     2614     8183    3           IT_HDR.DATA = SUBSTR(ITEM$->CHAR50,0,ADSC9.SIZE);
     2615     8184    3           ITEM_LN = ADSC9.SIZE;
     2616     8185    3       CASE(9); /* UNSPECIFIED IN SCHEMA ITEMS */
     2617     8186    3           ITEM.TYPE = 'UNSPEC';
     2618     8187    3           CALL BINCHAR(ITEM.SZ,ADSC9.SIZE);
     2619     8188    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);
     2620     8189    3           ITEM_LN = ADSC9.SIZE;
     2621     8190    3           CALL OCTAL_PRINT(IT_HDR.DATA,ITEM$,ITEM_LN);
     2622     8191    3           ITEM_LN = ADSC9.SIZE - 8;
     2623     8192    3       CASE(11 /* Sngl precision floating pt */);
     2624     8193    3           ITEM.TYPE = 'FLOATING';
     2625     8194    3           ITEM.SZ = 'SNG';
     2626     8195    3           MAX_DIGITS = 10;
     2627     8196    3           SNGL = ITEM$ -> BIT36;
     2628     8197    3           CALL XPN_7RTOLS( SNGL /*Field to convert*/,
     2629     8198    3              ASCII_NUM /*Target for signif digits*/,
     2630     8199    3              MAX_DIGITS /*10 for sngl pnt */,
     2631     8200    3              AN_DIGITS /* num digits returned */,
     2632     8201    3              AN_POWER_10 /* exponent value */);
     2633     8202         /* Edit result of call in to a display format "1.234567E+150" */
     2634     8203    3           CALL XPN_7ELJE(IT_HDR.DATA /* Target field */,
     2635     8204    3              LENGTHC(IT_HDR.DATA),
     2636     8205    3              ASCII_NUM /* strng of sig digits */,
     2637     8206    3              AN_DIGITS /* Num of sigf digits */,
     2638     8207    3              AN_POWER_10 /* Exponent value */,
     2639     8208    3              2 /*Plus sign flag = sign at left*/,
     2640     8209    3              RESULT_LEN /* size of result */,
     2641     8210    3              -2 /* special format of exp digits*/,
     2642     8211    3              1 /*1 digit to left of decml pnt*/);
     2643     8212         /* Blank out unused part of target string */
     2644     8213    3           TEMP$ = ADDR(IT_HDR.DATA);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:83   
     2645     8214    3           TEMP$ = PINCRC(TEMP$,RESULT_LEN);
     2646     8215    3           T_ITEM_LN = 50 - RESULT_LEN;
     2647     8216    3           TEMP$ -> ALPH_ITEM = ' ';
     2648     8217
     2649     8218    3       CASE(12 /* DBL precision floating pnt */);
     2650     8219    3           ITEM.TYPE = 'FLOATING';
     2651     8220    3           ITEM.SZ = 'DBL';
     2652     8221    3           MAX_DIGITS = 21;
     2653     8222    3           DOUBLE = ITEM$ -> BIT72;
     2654     8223    3           CALL XPN_7RTOLS( DOUBLE /* fld to convert*/,
     2655     8224    3              ASCII_NUM /*Target for signif digits*/,
     2656     8225    3              MAX_DIGITS /*21 for dbl prec*/,
     2657     8226    3              AN_DIGITS /* num digits returned */,
     2658     8227    3              AN_POWER_10 /* exponent value */);
     2659     8228         /* Edit result of call in to a display format "1.234567E+150" */
     2660     8229    3           CALL XPN_7ELJE(IT_HDR.DATA /* Target field */,
     2661     8230    3              LENGTHC(IT_HDR.DATA),
     2662     8231    3              ASCII_NUM /* strng of sig digits */,
     2663     8232    3              AN_DIGITS /* Num of sigf digits */,
     2664     8233    3              AN_POWER_10 /* Exponent value */,
     2665     8234    3              2 /*Plus sign flag = sign at left*/,
     2666     8235    3              RESULT_LEN /* size of result */,
     2667     8236    3              -2 /* special format of exp digits*/,
     2668     8237    3              1 /*1 digit to left of decml pnt*/);
     2669     8238         /* Blank out unused part of target string */
     2670     8239    3           TEMP$ = ADDR(IT_HDR.DATA);
     2671     8240    3           TEMP$ = PINCRC(TEMP$,RESULT_LEN);
     2672     8241    3           T_ITEM_LN = 50 - RESULT_LEN;
     2673     8242    3           TEMP$ -> ALPH_ITEM = ' ';
     2674     8243
     2675     8244    3       CASE(19);
     2676     8245    3           ITEM.TYPE = 'CHAR VARY';
     2677     8246    3           EIS$ = ITEM$; /* EIS desc gives addr to another EIS desc */
     2678     8247    3           ITEM$ = PINCRW(REC$,ADSC9.EISADDR);
     2679     8248    3           ITEM$ = PINCRC(ITEM$,ADSC9.BYT_OFF/2);
     2680     8249    3           CALL BINCHAR(ITEM.SZ,ADSC9.SIZE);
     2681     8250    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:84   
     2682     8251    3           IT_HDR.DATA = SUBSTR(ITEM$->CHAR50,0,ADSC9.SIZE);
     2683     8252    3           ITEM_LN = ADSC9.SIZE;
     2684     8253    3       CASE(ELSE);
     2685     8254    3           ITEM.TYPE ='UNKN TYPE';
     2686     8255    3           ITEM.SZ = ' ';
     2687     8256    3           END;
     2688     8257    2       IF ADDR(REC_HDR.REC_NM)->CHAR7='*PA_REC' THEN RETURN;
     2689     8258    2   /**/ BUFSF = VECTOR(ITEM);
     2690     8259    2   /**/ BUFLNSF = LENGTHC(ITEM);
     2691     8260    2       CALL WRITE_LINE;
     2692     8261    2   /**/ BUFSF = VECTOR(IT_HDR);
     2693     8262    2   /**/ BUFLNSF = 74;
     2694     8263    2       CALL WRITE_LINE;
     2695     8264    2       T_ITEM_LN=ITEM_LN;
     2696     8265    2       IF UWA.FR_REC.FTYP = 5 OR UWA.FR_REC.FTYP = 19 THEN
     2697     8266    3       DO WHILE (T_ITEM_LN > 50); /* Handle character overflow */
     2698     8267    3           T_ITEM_LN =T_ITEM_LN - 50;
     2699     8268    3           EX_ITDATA.DATA = '  ';
     2700     8269    3           ITEM$ = PINCRC(ITEM$,50);
     2701     8270    3           EX_ITDATA.DATA=ITEM$->ALPH_ITEM;
     2702     8271    3    /**/   BUFSF = VECTOR(EX_ITDATA);
     2703     8272    3   /**/    BUFLNSF = 74;
     2704     8273    3           CALL WRITE_LINE;
     2705     8274    3           END;
     2706     8275    2       ELSE
     2707     8276    2           IF UWA.FR_REC.FTYP = 9 THEN /*Handle additional data */
     2708     8277    3           DO WHILE (ITEM_LN > 0);
     2709     8278    3               EX_ITDATA.DATA = ' ';
     2710     8279    3               T_ITEM_LN = ITEM_LN;
     2711     8280    3               CALL OCTAL_PRINT(EX_ITDATA.DATA,ITEM$,T_ITEM_LN);
     2712     8281    3               ITEM_LN = ITEM_LN - T_ITEM_LN;
     2713     8282         /* T_ITEM_LN returns number of bytes printed*/
     2714     8283    3    /**/       BUFSF = VECTOR(EX_ITDATA);
     2715     8284    3   /**/        BUFLNSF = 74;
     2716     8285    3               CALL WRITE_LINE;
     2717     8286    3               END;
     2718     8287    2       RETURN;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:85   
     2719     8288        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:86   
     2720     8289        /*******************************************************************/
     2721     8290        /*         UNPACK  THE  PACKED  DECIMAL  NUMBERS                   */
     2722     8291        /*******************************************************************/
     2723     8292    2   UNPAK: PROC(STRING,PTR$,SIZE,SIGNED);
     2724     8293    3   DCL I UBIN(9) ALIGNED;
     2725     8294    3   DCL 1 CNT_FLG UBIN(9) UNAL;
     2726     8295    3   DCL 1 INCR REDEF CNT_FLG,
     2727     8296    3         2 * BIT(8),
     2728     8297    3         2 FLAG BIT(1);
     2729     8298    3   DCL SIZEA UBIN(18) UNAL;
     2730     8299    3   DCL 1 NUM STATIC,
     2731     8300    3         2 * BIT(5) INIT('00011'B) UNAL,
     2732     8301    3         2 DISPLY BIT(4) UNAL;
     2733     8302    3   DCL 1 CHAR1 REDEF NUM CHAR(1);
     2734     8303    3   DCL SIZE BIT(6);
     2735     8304    3   DCL STRING CHAR(50);
     2736     8305    3   DCL DIGIT BIT(4) BASED(PTR$);
     2737     8306    3   DCL SIGNED BIT(1);
     2738     8307    3   DCL PTR$ PTR;
     2739     8308        /*
     2740     8309           INCR.FLAG is a flag set such that when on will cause the
     2741     8310           skipping of pointer PTR$ over the first bit on byte boundry.
     2742     8311        */
     2743     8312    4       DO CASE(ADSC9.BYT_OFF); /* WE HAVE ALREADY INCRIMENTED POINTER BY
     2744     8313         NUM OF CHARS - NOW INCR BY BITS */
     2745     8314    4       CASE(1,3,5,7);
     2746     8315    4           PTR$ = PINCRB(PTR$,5); /* LOOK AT 2ND HALF OF BYTE */
     2747     8316    4           CNT_FLG = 1;
     2748     8317    4       CASE(ELSE); /*  LOOK AT 1ST HALF OF BYTE */
     2749     8318    4           PTR$ = PINCRB(PTR$,1);
     2750     8319    4           CNT_FLG = 0;
     2751     8320    4           END;
     2752     8321        /*
     2753     8322           PTR$ and INCR.FLAG are now initialized.
     2754     8323        */
     2755     8324    3       STRING = ' ';
     2756     8325    3       SIZEA = BITBIN(SIZE);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:87   
     2757     8326    4       DO I = 0 TO SIZEA-1;
     2758     8327    4           NUM.DISPLY = PTR$->DIGIT;
     2759     8328    4           CALL INSERT(STRING,I,1,CHAR1);
     2760     8329    4           IF INCR.FLAG THEN
     2761     8330    4               PTR$ = PINCRB(PTR$,5);
     2762     8331    4           ELSE
     2763     8332    4               PTR$ = PINCRB(PTR$,4);
     2764     8333    4           CNT_FLG = CNT_FLG + 1;
     2765     8334    4           END;
     2766     8335    3       IF SIGNED THEN
     2767     8336    4       DO;
     2768     8337    4           IF INCR.FLAG THEN
     2769     8338    4               PTR$ = PINCRB(PTR$,-4);
     2770     8339    4           ELSE
     2771     8340    4               PTR$ = PINCRB(PTR$,-5); /* Back up to sign */
     2772     8341    4           I = I-1;
     2773     8342    4           IF PTR$->DIGIT = '1101'B THEN
     2774     8343    4               CALL INSERT(STRING,I,1,'-');
     2775     8344    4           ELSE
     2776     8345    4               CALL INSERT(STRING,I,1,'+');
     2777     8346    4           END;
     2778     8347    3       RETURN;
     2779     8348    3   END UNPAK;
     2780     8349
     2781     8350
     2782     8351    2   END IT_OUTPUT;
     2783     8352        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:88   
     2784     8353        /********************************************************************/
     2785     8354        /*      O C T A L      D U M P I N G     R O U T I N E             */
     2786     8355        /*******************************************************************/
     2787     8356    1   OCTAL_PRINT: PROC(STRING,PTR$,COUNT);
     2788     8357    2   DCL STRING (0:35) CHAR(1);
     2789     8358    2   DCL COUNT UBIN(36);
     2790     8359    2   DCL PTR$ PTR;
     2791     8360    2   DCL CHAR_SET (0:7) CHAR(1) CONSTANT
     2792     8361    2    INIT('0','1','2','3','4','5','6','7');
     2793     8362    2   DCL NIBBLE UBIN(3) UNAL BASED (PTR$);
     2794     8363    2   DCL CHAR1 CHAR(1) BASED (PTR$);
     2795     8364    2   DCL CNT UBIN(9) UNAL;
     2796     8365    2   DCL I UBIN(9) UNAL;
     2797     8366        /*
     2798     8367              This procedure will start at location pointed to by PTR$ and
     2799     8368              go from 1 to count (up to 8) bytes producing an octal string
     2800     8369              representation which will be placed into 'STRING'. STRING
     2801     8370              must be at least 36 bytes long.
     2802     8371        */
     2803     8372    2       IF COUNT > 8 THEN COUNT = 8;
     2804     8373    2       I=0;
     2805     8374    3       DO CNT = 1 TO COUNT;
     2806     8375    3           IF MOD(CNT-1,2) = 0 AND CNT > 1 THEN
     2807     8376    3               IF MOD(CNT-1,4) = 0 THEN
     2808     8377    4               DO;
     2809     8378    4                   STRING(I) = ' ';
     2810     8379    4                   I=I+1;
     2811     8380    4                   END;
     2812     8381    4               ELSE DO;
     2813     8382    4                   STRING(I) = '.';
     2814     8383    4                   I=I+1;
     2815     8384    4                   END;
     2816     8385    3           CALL PROCESS_BYTE;
     2817     8386    3           END;
     2818     8387    2       RETURN;
     2819     8388    2   PROCESS_BYTE: PROC;
     2820     8389    3       IF CHAR1 >= ' ' AND CHAR1 <= '~' THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:89   
     2821     8390    3           STRING(27+CNT) = CHAR1;
     2822     8391    3       ELSE
     2823     8392    3           STRING(27+CNT) = '.';
     2824     8393    3       X = I+2;
     2825     8394    4       DO I = I TO X;
     2826     8395    4           STRING(I) = CHAR_SET(NIBBLE);
     2827     8396    4           PTR$ = PINCRB(PTR$,3); /* incriment to next nibble */
     2828     8397    4           END;
     2829     8398    3       RETURN;
     2830     8399    3   END PROCESS_BYTE;
     2831     8400    2   END OCTAL_PRINT;
     2832     8401        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:90   
     2833     8402        /***************************************************************/
     2834     8403        /*                                                             */
     2835     8404        /*           P R O C E S S   I N V E N T O R Y  P A G E        */
     2836     8405        /***************************************************************/
     2837     8406    1   INVPG_PRNT: PROC;
     2838     8407    2   DCL 1 INV_HDR STATIC ALIGNED,
     2839     8408    2         2 CAR_CON BIT(9) INIT('101'O) UNAL,
     2840     8409    2         2 * CHAR(11) INIT('DATE STAMP=') UNAL,
     2841     8410    2         2 DTSP CHAR(8) UNAL,
     2842     8411    2         2 * CHAR(10) INIT(' ') UNAL,
     2843     8412    2         2 * CHAR(0) INIT(' TIME STAMP=') UNAL,
     2844     8413    2         2 TMSP UNAL,
     2845     8414    2           3 * CHAR(8) UNAL,
     2846     8415    2           3 SS CHAR(6) UNAL,
     2847     8416    2         2 * CHAR(0) INIT('INITIAL VALUE=') UNAL,
     2848     8417    2         2 INIT_VAL CHAR(4) UNAL;
     2849     8418    2   /**/ DCBSF = DCBNUM(M$LO);
     2850     8419    2       PAGE_HDR.AREA_NAME = ZI$DIR.AREA_NM.NAME.TEXT;
     2851     8420    2       CALL BINCHAR(PAGE_HDR.PGNO,INV_PG.CI_NO);
     2852     8421    2       CALL ZERO_SUP(PAGE_HDR.PGNO,LENGTHC(PAGE_HDR.PGNO),'1'B);
     2853     8422    2       PAGE_HDR.SP_AV='0';
     2854     8423    2   /**/ BUFSF = VECTOR(PAGE_HDR);
     2855     8424    2   /**/ BUFLNSF = 71;
     2856     8425    2       CALL WRITE_LINE;
     2857     8426    2       DATESF = VECTOR(INV_HDR.DTSP);
     2858     8427    2       TIMESF = VECTOR(INV_HDR.TMSP);
     2859     8428    2       SOURCESF = %UTS#;
     2860     8429    2       DESTSF = %LOCAL#;
     2861     8430    2       TSTAMPSF = VECTOR(INV_PG.SYS_WRDS.DATE);
     2862     8431    2       CALL SYS_FUNC_TSTAMP;
     2863     8432    2       CALL BINCHAR(INV_HDR.INIT_VAL,511*UWA.AC_REC.INV_UNIT);
     2864     8433    2       CALL ZERO_SUP(INV_HDR.INIT_VAL,4,'1'B);
     2865     8434    2       INV_HDR.TMSP.SS=' ';
     2866     8435    2       BUFSF = VECTOR(INV_HDR);
     2867     8436    2       BUFLNSF = LENGTHC(INV_HDR);
     2868     8437    2       CALL WRITE_LINE; /* 2ND HDR LINE FOR INV PAGES */
     2869     8438    2   /**/ BUFSF = VECTOR(INV_PG_HDR);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:91   
     2870     8439    2   /**/ BUFLNSF = 73;
     2871     8440    2       CALL WRITE_LINE;
     2872     8441
     2873     8442    3       DO X = 0 TO 9;
     2874     8443    3           INV_P_LINE.P_LINE.FIL(X) = '  ';
     2875     8444    3           INV_P_LINE.P_LINE.PLN(X) = '  ';
     2876     8445    3           END;
     2877     8446
     2878     8447    2       INVPGNO = RB - UWA.AC_REC.FIR_INV_PG;
     2879     8448    2       INVTCT = (((INVPGNO*4072)+INVPGNO)/10)*10;
     2880     8449    2       CALL BINCHAR(INV_P_LINE.LNBR,INVTCT);
     2881     8450    2       CALL ZERO_SUP(INV_P_LINE.LNBR,12,'0'B);
     2882     8451    2       INV_PRLN.LNBR = INVTCT;
     2883     8452    2       I= (INVPGNO*4072+1) - INVTCT;
     2884     8453    2       IF INVTCT + 4072 + I > UWA.AC_REC.FIR_INV_PG-1 THEN
     2885     8454    2           K = UWA.AC_REC.FIR_INV_PG-1;
     2886     8455    2       ELSE
     2887     8456    2           K = INVTCT + 4072 + I -1;
     2888     8457    2       IF K > 9 THEN
     2889     8458    2           J = 9;
     2890     8459    2       ELSE
     2891     8460    2           J = K;
     2892     8461    2       INVPGNO = 0;
     2893     8462    2       CALL GET_LINE;
     2894     8463    2   /**/ BUFSF = VECTOR(INV_P_LINE);
     2895     8464    2   /**/ BUFLNSF = 73;
     2896     8465    2       CALL WRITE_LINE;
     2897     8466    2       INVPGNO = 9 - (((RB - UWA.AC_REC.FIR_INV_PG) *4072 +1) - INVTCT)+1;
     2898     8467    2       INVTCT = INVTCT + 10;
     2899     8468
     2900     8469    3       DO INVTCT = INVTCT TO K BY 10;
     2901     8470    3           J = K - INVTCT;
     2902     8471    3           IF J > 9 THEN J = 9;
     2903     8472    3           CALL GET_LINE;
     2904     8473    3           INVPGNO = INVPGNO +10;
     2905     8474    3           INV_PRLN.LNBR = INV_PRLN.LNBR + 10;
     2906     8475    3           CALL BINCHAR(INV_P_LINE.LNBR,INV_PRLN.LNBR);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:92   
     2907     8476    3           CALL ZERO_SUP(INV_P_LINE.LNBR,12,'0'B); /* Right justify */
     2908     8477    3    /**/   BUFLNSF = 73;
     2909     8478    3           CALL WRITE_LINE;
     2910     8479    3           END;
     2911     8480    2       RETURN;
     2912     8481
     2913     8482    2   GET_LINE: PROC;
     2914     8483         /*
     2915     8484            Extract space information from the inventory page.
     2916     8485         */
     2917     8486    4       DO X = I TO J;
     2918     8487    4           INV_TEMP = BITBIN(INV_PG.INVENT_CT(INVPGNO+X-I));
     2919     8488    4           INV_PRLN.P_LINE.PRLN(X) = INV_TEMP*UWA.AC_REC.INV_UNIT;
     2920     8489    4           CALL BINCHAR(INV_P_LINE.P_LINE.PLN(X),INV_PRLN.P_LINE.PRLN(X));
     2921     8490    4           CALL ZERO_SUP(INV_P_LINE.P_LINE.PLN(X),4,'0'B);
     2922     8491    4           END;
     2923     8492    3       IF J < 9 THEN
     2924     8493    4       DO X = J+1 TO 9;
     2925     8494    4           INV_P_LINE.P_LINE.PLN(X) = '  ';
     2926     8495    4           END;
     2927     8496    3       I=0;
     2928     8497    3       RETURN;
     2929     8498    3   END GET_LINE;
     2930     8499    2   END INVPG_PRNT;
     2931     8500        /***************************************************************/
     2932     8501        /*                                                             */
     2933     8502        /***************************************************************/
     2934     8503    1   END_ZIU$Q2PR:
     2935     8504    1       RETURN;
     2936     8505    1   ALTEND_ZIU$Q2PR:
     2937     8506    1       DCBSF = ZI$DIR.AREA_NM.DCB#;
     2938     8507    1       CALL SYS_FUNC_CLOS;
     2939     8508    1   ALTRTN: ALTRETURN;
     2940     8509    1   END ZIU$Q2PR;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:93   
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$Q2PR.

   Procedure ZIU$Q2PR requires 5710 words for executable code.
   Procedure ZIU$Q2PR requires 3244 words of local(AUTO) storage.

    No errors detected in file ZIU$Q2PR.:ZIC0TSI    .

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:94   

 Object Unit name= ZIU$Q2PR                                   File name= ZIU$Q2PR.:ZIC0TOU
 UTS= SEP 05 '97 13:22:53.40 FRI                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none  1604   3104  ZIU$Q2PR
    1   DCB   even  none     0      0  M$UC
    2   DCB   even  none     0      0  M$LO
    3  RoData even  UTS    199    307  ZIU$Q2PR
    4   Proc  even  none  5710  13116  ZIU$Q2PR
    5  RoData even  none   269    415  ZIU$Q2PR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        0  ZIU$Q2PR
     4     13          yes     yes      Std        0  ZIU$Q2PR1
     4     35          yes     yes      Std        0  ZIU$Q2PR2
     4    202          yes     yes      Std        0  ZIU$Q2PR3
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:95   

  ****  Data defs  ****

 Sect OctLoc  Name                           Sect OctLoc  Name
    0     67  REC_HDR                            0    136  SET_HDR
    0    405  CURR_REC                           0    407  SET$
    0    473  CHK_SUM                            0    474  PTR_SIZE
    0    475  KEY_SIZE                           0    476  KEY_PTR_SIZE
    0    477  FREIS$                             0    500  FREIS
    0    501  INEIS

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 SYS_FUNC_OPEN
 yes     yes           Std       2 DB_FUNC_FDR
 yes     yes           Std       0 BUILD_MSTR_TBL
 yes     yes           Std       0 BUILD_SETXREF
 yes     yes           Std       0 SYS_FUNC_CLOS
         yes           Std       6 PAGE_RANGE
 yes     yes           Std       0 BUILD_RECXREF
 yes     yes           Std       1 GET_NXT_AC
 yes     yes           Std       0 SYS_FUNC_ERRMSG
         yes           Std       0 EXCTN_REPRT_SETUP
         yes           Std       0 EXECUTION_OUTPUT
 yes     yes           Std       1 DB_FUNC_GET
 yes     yes           Std       4 XPN_7LSPTOR
 yes     yes           Std       0 SYS_FUNC_GETDCB
 yes     yes           Std       4 XPN_7LSPTOD
 yes     yes           Std       0 SYS_FUNC_PREC
 yes     yes           Std       0 SYS_FUNC_RELDCB
         yes           Std       0 ZIU$PACK
 yes     yes           Std       2 DB_FUNC_FRS
 yes     yes           Std       1 DB_FUNC_FOR
         yes           Std      14 ZIC$RREC
         yes           Std       8 ZIC$CALC
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:96   
         yes           Std       3 ZERO_SUP
         yes           Std       0 ZIU$PACK
 yes     yes           Std       0 SYS_FUNC_READ
 yes     yes           Std       0 SYS_FUNC_TSTAMP
 yes     yes           Std       0 SYS_FUNC_WRIT
         yes           Std       2 FIND_MSTR_ENTRY
         yes           Std       3 SHIFT_ARRAY
 yes     yes           Std       9 XPN_7ELJE
 yes     yes           Std       5 XPN_7RTOLS
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
                       nStd      0 X66_AUNWIND

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     LAST_DBK                              TYPE                                  MSTR$
     NXT_MSLOT                             MAX_MSLOT                             MSTR_INDX
     HASHTBL                               HASHINDX                              LOC_MODE
     AREA_KEY$                             NO_AREAS                              GLBL_PTR_SZ
     SET_XREF$                             NXT_SSLOT                             MAX_SSLOT
     REC_XREF$                             NXT_RSLOT                             MAX_RSLOT
     NO_RECS                               NO_SETS                               XREF_BUILT
     TYPESET                               TYPEREC                               M$UC
     CAN_RVA                               UWA                                   ATBLK$
     DATA$                                 INVPG$                                BLKLSF
     KEYLSF                                KEYXSF                                DCBSF
     ORGSF                                 KEYSF                                 KEYVSF
     ACSSF                                 NOTIMESF                              FUNSF
     ASNSF                                 TESTSF                                XTENSIZESF
     DISPSF                                WAITSF                                VFCSF
     FULLSF                                BKUPSF                                BUFLNSF
     BUFSF                                 SOURCESF                              DESTSF
     DATESF                                TIMESF                                UTSSF
     DAYSF                                 TSTAMPSF                              ENCRP_SEEDSF
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:97   
     ERRCODESF                             MSGCODE                               INCL_ERR
     ERR_INSERT                            FIDSF_RD                              ACNT
     EXISTSF                               SHARESF                               DCBNMSF
     KEYRSF                                NO_KEYSF                              REASGNSF
     CARRY_ATTRIBUTESF                     SUBMESSF                              SPKY_OPNSF
     POSSF                                 ERRFLGSF                              MERGESF
     FSA_FLAG                              RELGSF                                UNUSED
     HELPCODE                              COUNTSF                               INDEXSF
     GAP                                   PSNSF                                 ACNTSF
     KEY_SHADWSF                           REC$                                  RB
     RE                                    IE                                    IB
     CNT                                   ICNT                                  RCNT
     SCNT                                  FIRST_SET                             RETCNT
     DMPCNT                                KCNT                                  ACNT_IDX
     I                                     J                                     K
     X                                     STEPCC                                I_O_BUF$
     OUT_INDX                              I_O_SIZE                              REC_DATA_LN
     M$LO                                  B$TCB$                                B$ROS$
     B$JIT$                                KEYFID                                I_O_KEY
     RESTART                               BREAK_FLAG                            ICHKSUM
     ITMCNT                                GAP1                                  ZI$DIR
     SCHEMA_ACTIVE                         RECORD_LIST                           SET_LIST
     RETAIN_LIST                           DUMP_FID                              ALTKY
     INIT_RG                               KEY_RNG                               ITEM_LIST
     ENTRY$                                GROUP$                                NBUFS
     LPP                                   LOW_DBK                               RBUF
     B$IS$                                 RBUF                                  B$IS$
     RBUF

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ROSID                                 ISSID
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:98   


        1        1        /*M*   ZIU$Q2PR          IDS/II         IDS UTILITY FOR AREA PRINT */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*P*
        8        8        NAME: ZIU$Q2PR             AUTHOR:   D.F. HANRAHAN
        9        9
       10       10
       11       11
       12       12
       13       13                                     PRINT UTILITY
       14       14                                       ZIU$Q2PR
       15       15
       16       16
       17       17                  The print utility is used  to obtain a formatted print
       18       18               of  information  stored  in an  integrated  IDS file. The
       19       19               utility  will  allow a  selection  of  record types to be
       20       20               printed  within a page  range or data  base key range. In
       21       21               addition,  the   print  utility   will  print  out  other
       22       22               pertinent   information  in  the   header  of  each  page
       23       23               selected. This information  includes the page number, the
       24       24               date  last  modified, the  current  high  line, the first
       25       25               available line,  how full the page  is in percent and how
       26       26               much space is available in bytes. In addition to printing
       27       27               all the  data fields  in each  record,  this utility will
       28       28               also print all the sets with their storage attributes and
       29       29               pointer values. these are  followed by any associated key
       30       30               fields  and  the names  of the  fields  that  compose the
       31       31               associated keys.
       32       32
       33       33
       34       34                  The PRINT utility is most useful for finding any holes
       35       35               or problems  in the data  base since it  provides all the
       36       36               information needed to analyze an IDS area intractively on
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:99   
       37       37               line without the need of an octal dump of the area.
       38       38
       39       39
       40       40                  The program works in the  following way. A page or key
       41       41               range  (which is  stored  in an  array in  ZI$DIR include
       42       42               file) is obtained  one range at a  time. The current page
       43       43               number is  evaluated as an  inventory,  data or attribute
       44       44               page. If  it is a  data page  (as it most  often will be)
       45       45               then DATAPG_PRINT is called to print the page.
       46       46
       47       47
       48       48                  DATAPG_PRINT will start  by taking the first six words
       49       49               of the page to analyze and  print page header information
       50       50               which includes  the number of  records on the page (equal
       51       51               to the  size of the  offset  array). Each  element of the
       52       52               offset  array  tells what  byte of  the  page that record
       53       53               starts at.   However, if that array  element has the high
       54       54               order bit on then this  indicates that there is no record
       55       55               there  (deleted).   Once I have  found the  record, I may
       56       56               then look at the record type (REC_FRMT.TYPE). If the type
       57       57               is a  calc  header then I  will  print it  according to a
       58       58               standard format  (except  when  RCNT is  greater  than -1
       59       59               which means specific record types were asked for). If the
       60       60               record is not a  calc record then I  must read the schema
       61       61               to find out what record it is. To do this I walk the 'OA'
       62       62               to 'RC'  record  set  extracting  each  record to compare
       63       63               record types. Once a match is made, I find the 'SN' owner
       64       64               record to get the  name of the  record.  I then print the
       65       65               information including the page,dbk and line number.
       66       66
       67       67                  The next step is to get the item names and data within
       68       68               that record  so I call  FIND_PRINT_ITEMS. This  procedure
       69       69               walks the  'RC' to 'FR'  set extracting  the item records
       70       70               and finding the 'SN' owner record for each 'FR'. The 'FR'
       71       71               record provides an EIS  descriptor which tells me exactly
       72       72               where the  item  begins.  Other  information in the  'FR'
       73       73               record tells me what the  data type and size is. The 'SN'
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:100  
       74       74               record provides the item name which is then printed.
       75       75
       76       76                  When I have reached the end of the chain on the items,
       77       77               I will then  call  FIND_PRINT_SETS. This  procedure walks
       78       78               the 'RC' to  'RS' or  'SOSM' record  chain. As each SO-SM
       79       79               record is retrieved, I must  determine if it is a SO (set
       80       80               owner)  or  SM   (set  member),   then  extract  the  EIS
       81       81               descriptor  to get  the   pointer  locations  and  sizes,
       82       82               extract  the  pointers, convert  them to  ASCII and print
       83       83               them. Also I will find the 'SC' record owner of each SOSM
       84       84               record to get the set  attributes (Ie. the method used to
       85       85               store the  set  pointers in  that set).  Then I must once
       86       86               again get the 'SN' record owner of the 'SC' record to get
       87       87               the set name. If  I should find out  that the set type is
       88       88               equal to 3, instead of  outputting the set information, I
       89       89               will call  ASC_KEY. This set type  means that this set is
       90       90               really an  associated key field and  not a set. A flag is
       91       91               tripped  and the  information  stored in a  table.  These
       92       92               associated  keys are  printed out after  the last set has
       93       93               been printed.
       94       94
       95       95                                                                         */
       96       96
       97       97        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:101  
       98       98        /*********************************************************************/
       99       99        ZIU$Q2PR: PROC ALTRET;

     99  4 000000   000000 700200 xent  ZIU$Q2PR     TSX0  ! X66_AUTO_0
         4 000001   006254 000000                    ZERO    3244,0

      100      100    1   DCL REC_TYP SBIN(36) STATIC INIT(0);
      101      101        /**/
      102      102    1   DCL SKIP CHAR(1) STATIC ALIGNED INIT('A');
      103      103    1   DCL VFC3LINES CHAR(4) STATIC ALIGNED INIT('C   ');
      104      104    1   DCL 1 PAGE_HDR STATIC ALIGNED,
      105      105    1         2 CAR_CON CHAR(1) INIT('q') UNAL, /* VFC TOP OF PAGE */
      106      106    1         2 * CHAR(10) INIT('AREA NAME:') UNAL,
      107      107    1         2 AREA_NAME CHAR(19) INIT(' ') UNAL,
      108      108    1         2 * CHAR(13) INIT(' PAGE NUMBER:') UNAL,
      109      109    1         2 PGNO CHAR(11) UNAL,
      110      110    1         2 * CHAR(0) INIT('  SPACE AVAIL:') UNAL,
      111      111    1         2 SP_AV CHAR(4) UNAL;
      112      112    1   DCL 1 PAGE_HDR2 STATIC ALIGNED,
      113      113    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      114      114    1         2 * CHAR(11) INIT('DATE STAMP=') UNAL,
      115      115    1         2 DTSP CHAR(8) UNAL,
      116      116    1         2 * CHAR(11) INIT(' ') UNAL,
      117      117    1         2 * CHAR(0) INIT('TIME STAMP=') UNAL,
      118      118    1         2 TMSP UNAL,
      119      119    1           3 * CHAR(8) UNAL,
      120      120    1           3 SS CHAR(5) UNAL,
      121      121    1         2 PRCNT CHAR(3) UNAL,
      122      122    1         2 * CHAR(6) INIT('% FULL');
      123      123    1   DCL 1 PAGE_HDR3 STATIC ALIGNED,
      124      124    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      125      125    1         2 * CHAR(13) INIT('CURR HIGH LN=') UNAL,
      126      126    1         2 CURR_HIGH CHAR(5) UNAL,
      127      127    1         2 * CHAR(27) INIT('            FIRST AVAIL LN=') UNAL,
      128      128    1         2 FST_AVAIL CHAR(5) UNAL,
      129      129    1         2 * CHAR(12) INIT('     CHKSUM=') UNAL,
      130      130    1         2 CHKSUM CHAR(8) UNAL;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:102  
      131      131    1   DCL 1 REC_HDR STATIC SYMDEF ALIGNED,
      132      132    1         2 CAR_CON BIT(9) INIT('00100001'B) UNAL,
      133      133    1         2 REC_NM CHAR(25) UNAL,
      134      134    1         2 * CHAR(5) INIT(' DBK=') UNAL,
      135      135    1         2 DBK CHAR(10) UNAL,
      136      136    1         2 * CHAR(6) INIT(' PAGE=') UNAL,
      137      137    1         2 PAGE_NO CHAR(8) UNAL,
      138      138    1         2 * CHAR(6) INIT(' LINE=') UNAL,
      139      139    1         2 LN_NBR CHAR(5) UNAL,
      140      140    1         2 * CHAR(3) INIT(' ') UNAL,
      141      141    1         2 PSMODE CHAR(6) UNAL;
      142      142    1   DCL 1 SET_HDR0 STATIC ALIGNED,
      143      143    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      144      144    1         2 * CHAR(42) INIT(' ') CALIGNED,
      145      145    1         2 PRIOR CHAR(10) INIT('     PRIOR') CALIGNED,
      146      146    1         2 OWNER CHAR(12) INIT('       OWNER') CALIGNED,
      147      147    1         2 NEXT CHAR(12) INIT('        NEXT') CALIGNED;
      148      148    1   DCL 1 SET_HDR STATIC SYMDEF ALIGNED,
      149      149    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      150      150    1         2 * CHAR(5) INIT(' ') UNAL,
      151      151    1         2 NAME CHAR(30) UNAL,
      152      152    1         2 * CHAR(1) INIT(' ') UNAL,
      153      153    1         2 ORDER CHAR(6) UNAL,
      154      154    1         2 PRIOR CHAR(10) UNAL,
      155      155    1         2 * CHAR(2) INIT(' ') UNAL,
      156      156    1         2 OWNER CHAR(10) INIT(' ') UNAL,
      157      157    1         2 * CHAR(2) INIT(' ') UNAL,
      158      158    1         2 NEXT CHAR(10) UNAL,
      159      159    1         2 * CHAR(1) INIT(' ') UNAL,
      160      160    1         2 GLO_LOC CHAR(6) INIT('      ') UNAL,
      161      161    1         2 SET_TYPE CHAR(5) UNAL;
      162      162    1   DCL 1 ITEM STATIC ALIGNED,
      163      163    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      164      164    1         2 * CHAR(4) INIT(' ') UNAL,
      165      165    1         2 NAME CHAR(18) UNAL,
      166      166    1         2 * CHAR(1) INIT(' ') UNAL,
      167      167    1         2 TYPE CHAR(9) UNAL,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:103  
      168      168    1         2 * CHAR(1) INIT(' ') UNAL,
      169      169    1         2 SZ CHAR(3) UNAL,
      170      170    1         2 * CHAR(2) UNAL INIT(' '),
      171      171    1         2 KEY_TYPE CHAR(60) UNAL;
      172      172    1   DCL 1 IT_HDR STATIC ALIGNED,
      173      173    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      174      174    1         2 * CHAR(22) INIT(' ') UNAL,
      175      175    1         2 * CHAR(1) INIT(' ') UNAL,
      176      176    1         2 DATA CHAR(50) INIT(' ') UNAL;
      177      177    1   DCL 1 EX_ITDATA STATIC ALIGNED,
      178      178    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      179      179    1         2 * CHAR(23) INIT(' ') UNAL,
      180      180    1         2 DATA CHAR(50) INIT(' ') UNAL;
      181      181    1   DCL 1 CALC_HDR STATIC ALIGNED,
      182      182    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      183      183    1         2 * CHAR(23) INIT('*CALC HEADER       DBK=') UNAL,
      184      184    1         2 DBKVAL CHAR(11) UNAL,
      185      185    1         2 * CHAR(8) INIT('  PRIOR=') UNAL,
      186      186    1         2 PR CHAR(10) UNAL,
      187      187    1         2 * CHAR(7) INIT('  NEXT=') UNAL,
      188      188    1         2 NT CHAR(10) UNAL;
      189      189    1   DCL 1 INV_PRLN STATIC ALIGNED,
      190      190    1         2 LNBR UBIN(36) UNAL,
      191      191    1         2 P_LINE (0:15) UNAL,
      192      192    1           3 PRLN UBIN(36) UNAL;
      193      193    1   DCL 1 INV_P_LINE STATIC ALIGNED,
      194      194    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      195      195    1         2 LNBR CHAR(12) UNAL,
      196      196    1         2 P_LINE (0:9) UNAL,
      197      197    1           3 FIL CHAR(2) INIT(' '*0) UNAL,
      198      198    1           3 PLN CHAR(4) UNAL;
      199      199    1   DCL 1 INV_PG_HDR STATIC ALIGNED,
      200      200    1         2 CAR_CON BIT(9) INIT('001000001'B) UNAL,
      201      201    1         2 * CHAR(72) INIT(
      202      202    1    'FREE WORDS PG# (0)  (1)   (2)   (3)   (4)   (5)   (6)   (7)    (8)  (9)') UNAL;
      203      203        /**/
      204      204    1   DCL 1 ADSC9 BASED(EIS$) CALIGNED,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:104  
      205      205    1         2 * UBIN(3) UNAL,
      206      206    1         2 EISADDR UBIN(15) UNAL,
      207      207    1         2 BYT_OFF UBIN(3) UNAL,
      208      208    1         2 TA UBIN(2) UNAL,
      209      209    1         2 * UBIN(1) UNAL,
      210      210    1         2 SIZE UBIN(12) UNAL;
      211      211    1   DCL 1 NDSC BASED(EIS$) ALIGNED,
      212      212    1         2 * UBIN(3) UNAL,
      213      213    1         2 EISADDR UBIN(15) UNAL,
      214      214    1         2 BYT_OFF UBIN(3) UNAL,
      215      215    1         2 TN UBIN(1) UNAL,
      216      216    1         2 SIGN UBIN(2) UNAL,
      217      217    1         2 SCAL UBIN(6) UNAL,
      218      218    1         2 SIZE UBIN(6) UNAL;
      219      219    1   DCL 1 BDSC BASED(EIS$) ALIGNED,
      220      220    1         2 * SBIN(3) UNAL,
      221      221    1         2 EISADDR SBIN(15) UNAL,
      222      222    1         2 BYT_OFF SBIN(2) UNAL,
      223      223    1         2 BIT_OFF SBIN(4) UNAL,
      224      224    1         2 SIZE SBIN(12) UNAL;
      225      225    1   DCL EIS$ PTR STATIC ALIGNED;
      226      226    1   DCL BLN# UBIN(36) STATIC ALIGNED;
      227      227    1   DCL ELN# UBIN(36) STATIC UNAL;
      228      228    1   DCL LST_LN UBIN(18) STATIC UNAL;
      229      229    1   DCL REC_POS UBIN(36) STATIC ALIGNED;
      230      230    1   DCL REC_LOC UBIN(18) BASED ALIGNED;
      231      231    1   DCL REC_CNT UBIN(36) STATIC ALIGNED;
      232      232    1   DCL REC_INDX SBIN STATIC;
      233      233    1   DCL SET_INDX SBIN STATIC;
      234      234    1   DCL CURR_REC SBIN STATIC SYMDEF;
      235      235    1   DCL LAST_DBK SBIN SYMREF;
      236      236    1   DCL REC_DATA_CNT SBIN(36) STATIC ALIGNED;
      237      237    1   DCL SET$ PTR STATIC SYMDEF ALIGNED;
      238      238    1   DCL SET BIT(SET_LN) BASED(SET$) CALIGNED;
      239      239    1   DCL SETC CHAR(SET_LN) BASED(SET$) UNAL;
      240      240    1   DCL SET_LN SBIN(36) STATIC ALIGNED;
      241      241    1   DCL ITEM$ PTR STATIC ALIGNED;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:105  
      242      242    1   DCL CHAR50 CHAR(50) BASED(ITEM$); /* Used to convert data items */
      243      243    1   DCL BINU UBIN(36) BASED(ITEM$) CALIGNED; /* from data base to fields */
      244      244    1   DCL BINH UBIN(18) BASED(ITEM$) CALIGNED; /* that are displayable */
      245      245    1   DCL ALPH_ITEM CHAR(T_ITEM_LN) BASED ALIGNED;
      246      246    1   DCL NUM_ITEM UBIN(36) BASED ALIGNED;
      247      247    1   DCL ITEM_LN SBIN(36) STATIC INIT(0) ALIGNED;
      248      248    1   DCL I_O_INDX SBIN WORD STATIC INIT(0) ALIGNED;
      249      249    1   DCL CHK_KEY UBIN WORD STATIC INIT(0) ALIGNED;
      250      250    1   DCL INDX SBIN WORD STATIC INIT(0) ALIGNED;
      251      251    1   DCL NUM_TEMP UBIN(36) STATIC ALIGNED;
      252      252    1   DCL READ_CNT UBIN(36) STATIC ALIGNED;
      253      253    1   DCL KB UBIN(36) STATIC ALIGNED;
      254      254    1   DCL KE UBIN(36) STATIC ALIGNED;
      255      255    1   DCL OFF_ARRY$ PTR STATIC ALIGNED;
      256      256    1   DCL INVTCT SBIN(36) STATIC ALIGNED;
      257      257    1   DCL INVPGNO SBIN(36) STATIC ALIGNED;
      258      258    1   DCL INV_TEMP UBIN(36) STATIC ALIGNED;
      259      259    1   DCL ITEM_TEMP CHAR(10) STATIC ALIGNED;
      260      260    1   DCL T_ITEM_LN SBIN(36) STATIC ALIGNED;
      261      261    1   DCL SET_TEMP BIT(36) STATIC ALIGNED;
      262      262    1   DCL SZ2 UBIN(18) BASED CALIGNED;
      263      263    1   DCL SZ3 UBIN(27) BASED CALIGNED;
      264      264    1   DCL SZ4 UBIN(36) BASED CALIGNED;
      265      265    1   DCL TEMP$ PTR STATIC ALIGNED; /*USED FOR CALC HDR OUTPUT*/
      266      266        /*                Variables needed for printing floating point */
      267      267    1   DCL SNGL BIT(36) STATIC ALIGNED;
      268      268    1   DCL BIT36 BIT(36) BASED UNAL;
      269      269    1   DCL DOUBLE BIT(72) STATIC DALIGNED;
      270      270    1   DCL BIT72 BIT(72) BASED UNAL;
      271      271    1   DCL ASCII_NUM CHAR(64) STATIC CALIGNED;
      272      272    1   DCL MAX_DIGITS SBIN WORD STATIC ALIGNED;
      273      273    1   DCL AN_DIGITS SBIN WORD STATIC ALIGNED;
      274      274    1   DCL AN_POWER_10 SBIN WORD STATIC ALIGNED;
      275      275    1   DCL RESULT_LEN SBIN WORD STATIC ALIGNED;
      276      276        /*  Common library calls */
      277      277    1   DCL XPN_7RTOLS ENTRY(5) ALTRET;
      278      278    1   DCL XPN_7DTOLS ENTRY(5) ALTRET;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:106  
      279      279    1   DCL XPN_7ELJE ENTRY(9) ALTRET;
      280      280    1   DCL XPN_7LSPTOR ENTRY(4) ALTRET;
      281      281    1   DCL XPN_7LSPTOD ENTRY(4) ALTRET;
      282      282    1   DCL DONE BIT(1) STATIC INIT('0'B) UNAL;
      283      283    1   DCL KEY_FLG BIT(1) STATIC INIT('0'B) UNAL;
      284      284    1   DCL KEY_RANGE BIT(1) STATIC INIT('0'B) UNAL;
      285      285    1   DCL LOCAL_ONLY BIT(1) STATIC INIT('0'B) UNAL;
      286      286    1   DCL DUMP_FILE BIT(1) STATIC INIT('0'B) UNAL;
      287      287    1   DCL NXT_PTR BIT(1) STATIC INIT('0'B) UNAL;
      288      288    1   DCL ITM_SELECTED BIT(1) STATIC INIT('1'B) UNAL;
      289      289    1   DCL SYS_FUNC_CLOS ENTRY ALTRET;
      290      290    1   DCL SYS_FUNC_PREC ENTRY ALTRET;
      291      291    1   DCL SYS_FUNC_GETDCB ENTRY ALTRET;
      292      292    1   DCL SYS_FUNC_RELDCB ENTRY ALTRET;
      293      293    1   DCL SYS_FUNC_OPEN ENTRY ALTRET;
      294      294    1   DCL SYS_FUNC_READ ENTRY ALTRET;
      295      295    1   DCL SYS_FUNC_DATE ENTRY ALTRET;
      296      296    1   DCL SYS_FUNC_TSTAMP ENTRY ALTRET;
      297      297    1   DCL SYS_FUNC_WRIT ENTRY ALTRET;
      298      298    1   DCL SYS_FUNC_ERRMSG ENTRY ALTRET;
      299      299    1   DCL DB_FUNC_FRS ENTRY(2) ALTRET;
      300      300    1   DCL DB_FUNC_FDR ENTRY(2) ALTRET;
      301      301    1   DCL DB_FUNC_GET ENTRY(1) ALTRET;
      302      302    1   DCL DB_FUNC_FOR1 ENTRY(3) ALTRET;
      303      303    1   DCL DB_FUNC_FOR ENTRY(1) ALTRET;
      304      304    1   DCL EXCTN_REPRT_SETUP ENTRY;
      305      305    1   DCL EXECUTION_OUTPUT ENTRY;
      306      306    1   DCL PAGE_RANGE ENTRY(6);
      307      307    1   DCL ZERO_SUP ENTRY(3);
      308      308    1   DCL BUILD_MSTR_TBL ENTRY ALTRET;
      309      309    1   DCL BUILD_SETXREF ENTRY ALTRET;
      310      310    1   DCL BUILD_RECXREF ENTRY ALTRET;
      311      311    1   DCL FIND_MSTR_ENTRY ENTRY(2);
      312      312    1   DCL GET_NXT_AC ENTRY(1) ALTRET;
      313      313        /**/
      314      314        %INCLUDE ZI_DBU_XREF;
      315      481        %XREF_TBLS;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:107  
      316      556        %INCLUDE CP_6;
      317      637        %INCLUDE CP_6_SUBS;
      318     1177        %F$DCB;
      319     1234        %B$TCB;
      320     1237        %B$EXCFR;
      321     1255        %INCLUDE B_ERRORS_C;
      322     2382        %INCLUDE ZI_ERRORS_SUBS;
      323     2902        %INCLUDE ZI_PRSE_SUBS;
      324     3058        %SUB UNTIL_END_OF_REALM = "WHILE(UWA.DB_STATUS ~= '02100')";
      325     3059        %INCLUDE ZI_RVA_C;
      326     3740        %CAN_RVA_REF;
      327     4059        %INCLUDE ZI_UWA_C;
      328     4749        %ZI$UWAB;
      329     5089        %INCLUDE ZI$PG_STRUCTS;
      330     5192        %ATBLK_PG;
      331     5248        %DATA_PG;
      332     5267        %INVTY_PG;
      333     5283        %INCLUDE ZI_GLOBAL_DBUTIL;
      334     5461         %SYS_FUNC;
      335     5553         %MISC_DCLS;
      336     5606        %INCLUDE ZI$DIR;
      337     5763        %DIR;
      338     5907    1   DCL CHK_SUM BIT(1) STATIC SYMDEF;
      339     5908    1   DCL ENTRY$ PTR SYMREF ALIGNED;
      340     5909    1   DCL GROUP$ PTR SYMREF ALIGNED;
      341     5910    1   DCL NBUFS SBIN SYMREF ALIGNED;
      342     5911    1   DCL PTR_SIZE SBIN STATIC SYMDEF;
      343     5912    1   DCL KEY_SIZE SBIN STATIC SYMDEF;
      344     5913    1   DCL KEY_PTR_SIZE SBIN STATIC SYMDEF;
      345     5914    1   DCL LPP SBIN WORD SYMREF ALIGNED;
      346     5915    1   DCL LOW_DBK SBIN WORD SYMREF ALIGNED;
      347     5916    1   DCL CALCHDRS UBIN WORD ALIGNED;
      348     5917    1   DCL 1 AC_REC ALIGNED,
      349     5918    1         2 CALC_NULL SBIN WORD,
      350     5919    1         2 BASE_DBK SBIN WORD,
      351     5920    1         2 KEYS_ALLOC SBIN WORD,
      352     5921    1         2 MIN_DBK SBIN WORD,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:108  
      353     5922    1         2 MAX_DBK SBIN WORD,
      354     5923    1         2 MIN_PAGE SBIN WORD,
      355     5924    1         2 MAX_PAGE SBIN WORD,
      356     5925    1         2 FRST_INV_PG SBIN WORD,
      357     5926    1         2 DBK_PER_PG SBIN WORD,
      358     5927    1         2 DBK_PER_CALC SBIN WORD;
      359     5928    1   DCL FREIS$ PTR STATIC SYMDEF;
      360     5929    1   DCL FREIS SBIN WORD STATIC SYMDEF UNAL;
      361     5930    1   DCL 1 FREIS_RDEF REDEF FREIS,
      362     5931    1         2 * UBIN(30) UNAL,
      363     5932    1         2 SIZE UBIN(6) UNAL;
      364     5933    1   DCL 1 INEIS STATIC SYMDEF ALIGNED,
      365     5934    1         2 EISADDR UBIN(18) UNAL,
      366     5935    1         2 CN UBIN(3) UNAL,
      367     5936    1         2 TN UBIN(1) UNAL,
      368     5937    1         2 SIGN UBIN(2) UNAL,
      369     5938    1         2 SCAL SBIN(6) UNAL,
      370     5939    1         2 SIZE UBIN(6) UNAL;
      371     5940        /**/
      372     5941        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:109  
      373     5942        /*************************************************************/
      374     5943        /*             Begin procedure                               */
      375     5944        /*************************************************************/
      376     5945        /*
      377     5946           Variables prefixed by "ZI$DIR" area those initialized by
      378     5947           the parsing operation.
      379     5948        */
      380     5949    1       IF RCNT<0 THEN ZI$DIR.PCALC='1'B;

   5949  4 000002   000000 235000 xsym               LDA     RCNT
         4 000003   000006 605000 4                  TPL     s:5950

   5949  4 000004   000100 236003                    LDQ     64,DU
         4 000005   000125 256000 xsym               ORSQ    ZI$DIR+85

      381     5950    1   /**/ FUNSF = %IN#; /* MOVED FROM 320 */

   5950  4 000006   000002 236007                    LDQ     2,DL
         4 000007   000000 756000 xsym               STQ     FUNSF

      382     5951    1   /**/ SHARESF = %ALL#;

   5951  4 000010   200000 236003                    LDQ     65536,DU
         4 000011   000000 756000 xsym               STQ     SHARESF
         4 000012   000015 710000 4                  TRA     s:5953

      383     5952    1   ZIU$Q2PR1: ENTRY ALTRET; /* ENTERED FROM REPAIR FUN=UPD */

   5952  4 000013   000000 700200 xent  ZIU$Q2PR1    TSX0  ! X66_AUTO_0
         4 000014   006254 000000                    ZERO    3244,0

      384     5953    1   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;

   5953  4 000015   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000016   000000 740000 xsym               STX0    DCBSF

      385     5954    1   /**/ ORGSF = %IDS#;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:110  

   5954  4 000017   000007 235007                    LDA     7,DL
         4 000020   000000 755000 xsym               STA     ORGSF

      386     5955    1   /**/ TESTSF = %NO#;

   5955  4 000021   000000 450000 xsym               STZ     TESTSF

      387     5956    1   /**/ ACSSF = %DIRECT#;

   5956  4 000022   000002 236007                    LDQ     2,DL
         4 000023   000000 756000 xsym               STQ     ACSSF

      388     5957    1   /**/ ASNSF = %FILE#;

   5957  4 000024   000001 235007                    LDA     1,DL
         4 000025   000000 755000 xsym               STA     ASNSF

      389     5958    1   /**/ FIDSF = ZI$DIR.AREA_NM.NAME.TEXT;

   5958  4 000026   040000 100400                    MLR     fill='040'O
         4 000027   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30
         4 000030   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      390     5959    1       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);

   5959  4 000031   000000 631400 5                  EPPR1   0
         4 000032   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000033   013115 702000 4                  TSX2    ALTRTN
         4 000034   000037 710000 4                  TRA     s:5961

      391     5960    1   ZIU$Q2PR2: ENTRY ALTRET; /* FROM REPAIR TO SKIP RE-OPEN */

   5960  4 000035   000000 700200 xent  ZIU$Q2PR2    TSX0  ! X66_AUTO_0
         4 000036   006254 000000                    ZERO    3244,0

      392     5961    1       IF XREF_BUILT=%NO# THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:111  

   5961  4 000037   000000 234000 xsym               SZN     XREF_BUILT
         4 000040   000064 604000 4                  TMI     s:5978

      393     5962    2       DO;

      394     5963    2           CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);

   5963  4 000041   000002 630400 5                  EPPR0   2
         4 000042   000001 631400 5                  EPPR1   1
         4 000043   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000044   000000 011000                    NOP     0

      395     5964    2           CALL BUILD_MSTR_TBL;

   5964  4 000045   000000 631400 5                  EPPR1   0
         4 000046   000000 701000 xent               TSX1    BUILD_MSTR_TBL
         4 000047   000000 011000                    NOP     0

      396     5965    2           CALL BUILD_SETXREF;

   5965  4 000050   000000 631400 5                  EPPR1   0
         4 000051   000000 701000 xent               TSX1    BUILD_SETXREF
         4 000052   000000 011000                    NOP     0

      397     5966    2           CALL BUILD_RECXREF;

   5966  4 000053   000000 631400 5                  EPPR1   0
         4 000054   000000 701000 xent               TSX1    BUILD_RECXREF
         4 000055   000000 011000                    NOP     0

      398     5967    2           LAST_DBK=UWA.SF_REC.DBKOA;

   5967  4 000056   000063 235000 xsym               LDA     UWA+51
         4 000057   000000 755000 xsym               STA     LAST_DBK

      399     5968    2           CALL GET_NXT_AC(X); /* RESTORE AC_REC IN UWA */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:112  

   5968  4 000060   000005 630400 5                  EPPR0   5
         4 000061   000004 631400 5                  EPPR1   4
         4 000062   000000 701000 xent               TSX1    GET_NXT_AC
         4 000063   000000 011000                    NOP     0

      400     5969    2           END;

      401     5970        /*
      402     5971                Summary for data base functions reading schema:
      403     5972                DB_FUNC_FDR = find direct by DBK
      404     5973                       _FRS = find next within set
      405     5974                       _FOR = find owner of set
      406     5975                       _GET = retreive record info.
      407     5976                A DB_STATUS = '02100' means end of chain encountered.
      408     5977        */
      409     5978    1       CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);

   5978  4 000064   000002 630400 5                  EPPR0   2
         4 000065   000001 631400 5                  EPPR1   1
         4 000066   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000067   000000 011000                    NOP     0

      410     5979    1       IF ZI$DIR.LOCKCODE=2 THEN

   5979  4 000070   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000071   016000 376007                    ANQ     7168,DL
         4 000072   004000 116007                    CMPQ    2048,DL
         4 000073   000077 601000 4                  TNZ     s:5984

      411     5980    2       DO;

      412     5981    2           CALL PRINT_LOCKS ALTRET(ALTEND_ZIU$Q2PR);

   5981  4 000074   004430 701000 4                  TSX1    PRINT_LOCKS
         4 000075   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:113  
      413     5982    2           GOTO EXIT_RTN;

   5982  4 000076   000307 710000 4                  TRA     EXIT_RTN

      414     5983    2           END;
      415     5984    1       IF UWA.AC_REC.PG_TYPE>0 THEN /* INDEX AREA */

   5984  4 000077   000237 235000 xsym               LDA     UWA+159
         4 000100   000104 604400 4                  TMOZ    s:5989

      416     5985    2       DO;

      417     5986    2           CALL INDEX_PRINT ALTRET(ALTEND_ZIU$Q2PR);

   5986  4 000101   004257 701000 4                  TSX1    INDEX_PRINT
         4 000102   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      418     5987    2           GOTO EXIT_RTN;

   5987  4 000103   000307 710000 4                  TRA     EXIT_RTN

      419     5988    2           END;
      420     5989    1       CALL GET_ATBLK_INFO ALTRET(ALTEND_ZIU$Q2PR);

   5989  4 000104   006517 701000 4                  TSX1    GET_ATBLK_INFO
         4 000105   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      421     5990         /* check attribute page of area */
      422     5991    1       IF UWA.AC_REC.FIR_INV_PG = 0 THEN /* ADJUST FOR 0 INV PGS */

   5991  4 000106   000252 235000 xsym               LDA     UWA+170
         4 000107   000113 601000 4                  TNZ     s:5996

      423     5992    1           UWA.AC_REC.FIR_INV_PG = UWA.AC_REC.MAX_PAGE +1;

   5992  4 000110   000250 236000 xsym               LDQ     UWA+168
         4 000111   000001 036007                    ADLQ    1,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:114  
         4 000112   000252 756000 xsym               STQ     UWA+170

      424     5993        /*
      425     5994            PRINT inventory pages
      426     5995        */
      427     5996    1       IF ZI$DIR.PRNT_INV AND (UWA.AC_REC.FIR_INV_PG <= UWA.AC_REC.MAX_PAGE) THEN

   5996  4 000113   000126 236000 xsym               LDQ     ZI$DIR+86
         4 000114   020000 316003                    CANQ    8192,DU
         4 000115   000156 600000 4                  TZE     s:6012
         4 000116   000252 236000 xsym               LDQ     UWA+170
         4 000117   000250 116000 xsym               CMPQ    UWA+168
         4 000120   000156 605400 4                  TPNZ    s:6012

      428     5997    2       DO;

      429     5998    2           ZI$DIR.PRNT_INV = %NO#;

   5998  4 000121   000006 236000 5                  LDQ     6
         4 000122   000126 356000 xsym               ANSQ    ZI$DIR+86

      430     5999    2           RB = UWA.AC_REC.FIR_INV_PG;

   5999  4 000123   000252 235000 xsym               LDA     UWA+170
         4 000124   000000 755000 xsym               STA     RB

      431     6000    2           RE = UWA.AC_REC.MAX_PAGE;

   6000  4 000125   000250 235000 xsym               LDA     UWA+168
         4 000126   000000 755000 xsym               STA     RE

      432     6001    2           I_O_SIZE = RE-RB+1;

   6001  4 000127   000000 236000 xsym               LDQ     RE
         4 000130   000000 136000 xsym               SBLQ    RB
         4 000131   000001 036007                    ADLQ    1,DL
         4 000132   000000 756000 xsym               STQ     I_O_SIZE
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:115  

      433     6002    3           DO RB = RB TO RE;

   6002  4 000133   000145 710000 4                  TRA     s:6006+3

      434     6003    3               CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);

   6003  4 000134   006702 701000 4                  TSX1    READ_PAGE
         4 000135   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      435     6004    3               INVPG$ = ADDR(I_O_BUF(0));

   6004  4 000136   000000 236000 xsym               LDQ     I_O_BUF$
         4 000137   000000 756000 xsym               STQ     INVPG$

      436     6005    3               CALL INVPG_PRNT;

   6005  4 000140   012525 701000 4                  TSX1    INVPG_PRNT
         4 000141   000000 011000                    NOP     0

      437     6006    3               END;

   6006  4 000142   000000 235000 xsym               LDA     RB
         4 000143   000001 035007                    ADLA    1,DL
         4 000144   000000 755000 xsym               STA     RB
         4 000145   000000 236000 xsym               LDQ     RE
         4 000146   000000 116000 xsym               CMPQ    RB
         4 000147   000134 603000 4                  TRC     s:6003

      438     6007    2           DCBSF = ZI$DIR.AREA_NM.DCB#;

   6007  4 000150   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000151   000000 740000 xsym               STX0    DCBSF

      439     6008    2           CALL SYS_FUNC_CLOS;

   6008  4 000152   000000 631400 5                  EPPR1   0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:116  
         4 000153   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000154   000000 011000                    NOP     0

      440     6009    2           RETURN;

   6009  4 000155   000000 702200 xent               TSX2  ! X66_ARET

      441     6010    2           END;
      442     6011    1       ELSE
      443     6012    1           IF ZI$DIR.PRNT_INV AND (UWA.AC_REC.FIR_INV_PG > UWA.AC_REC.MAX_PAGE) THEN

   6012  4 000156   000126 236000 xsym               LDQ     ZI$DIR+86
         4 000157   020000 316003                    CANQ    8192,DU
         4 000160   000201 600000 4                  TZE     s:6022+1
         4 000161   000252 236000 xsym               LDQ     UWA+170
         4 000162   000250 116000 xsym               CMPQ    UWA+168
         4 000163   000201 604400 4                  TMOZ    s:6022+1

      444     6013    2           DO;

      445     6014    2               ZI$DIR.PRNT_INV = %NO#;

   6014  4 000164   000006 236000 5                  LDQ     6
         4 000165   000126 356000 xsym               ANSQ    ZI$DIR+86

      446     6015    2               DCBSF = ZI$DIR.AREA_NM.DCB#;

   6015  4 000166   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000167   000000 740000 xsym               STX0    DCBSF

      447     6016         /*E* ERROR: ZIU-DBU#NOINV-C
      448     6017                           MESSAGE:  There are no inventory pages in file %FN.
      449     6018                           */
      450     6019    2               ERRCODESF.ERR# = DBU#NOINV;

   6019  4 000170   000000 236000 xsym               LDQ     ERRCODESF
         4 000171   000007 376000 5                  ANQ     7
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:117  
         4 000172   216100 276007                    ORQ     72768,DL
         4 000173   000000 756000 xsym               STQ     ERRCODESF

      451     6020    2               MSGCODE = ERRCODE_RDEF;

   6020  4 000174   000000 756000 xsym               STQ     MSGCODE

      452     6021    2               CALL SYS_FUNC_ERRMSG;

   6021  4 000175   000000 631400 5                  EPPR1   0
         4 000176   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000177   000000 011000                    NOP     0

      453     6022    2               ALTRETURN;

   6022  4 000200   000000 702200 xent               TSX2  ! X66_AALT
         4 000201   000204 710000 4                  TRA     s:6030

      454     6023    2               END;
      455     6024        /*
      456     6025               Page range proc returns the values for the next range
      457     6026               begining(RB) and range ending (RE). Also does error checks
      458     6027               for page range and flags when ranges are done.
      459     6028        */
      460     6029    1   ZIU$Q2PR3: ENTRY ALTRET; /* FROM REPAIR TO SKIP RE-READ ATRBLK */

   6029  4 000202   000000 700200 xent  ZIU$Q2PR3    TSX0  ! X66_AUTO_0
         4 000203   006254 000000                    ZERO    3244,0

      461     6030    1       IF ZI$DIR.CODE=#REPAIR THEN

   6030  4 000204   000125 236000 xsym               LDQ     ZI$DIR+85
         4 000205   000010 376000 5                  ANQ     8
         4 000206   000011 116000 5                  CMPQ    9
         4 000207   000213 601000 4                  TNZ     s:6032

      462     6031    1           REMEMBER END_ZIU$Q2PR IN RESTART; /* FOR Q2RP,RESTART=RETURN */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:118  

   6031  4 000210   013107 635000 4                  EAA     END_ZIU$Q2PR
         4 000211   000000 452400 xsym               STP2    RESTART
         4 000212   000001 755000 xsym               STA     RESTART+1

      463     6032    1       DONE = '0'B;

   6032  4 000213   000464 450000 0                  STZ     DONE

      464     6033    1       OUT_INDX = 33; /* INIT GREATER THAN I_O_SIZE */

   6033  4 000214   000041 235007                    LDA     33,DL
         4 000215   000000 755000 xsym               STA     OUT_INDX

      465     6034    1       I_O_SIZE = 32;

   6034  4 000216   000040 235007                    LDA     32,DL
         4 000217   000000 755000 xsym               STA     I_O_SIZE

      466     6035    1       CALL PAGE_RANGE(RB,RE,32,I_O_SIZE,UWA.AC_REC.MAX_PAGE,DONE);

   6035  4 000220   000014 630400 5                  EPPR0   12
         4 000221   000012 631400 5                  EPPR1   10
         4 000222   000000 701000 xent               TSX1    PAGE_RANGE
         4 000223   000000 011000                    NOP     0

      467     6036        /**/
      468     6037        /* Atribute blk header has been outputted  */
      469     6038        /**/
      470     6039    1       IF ZI$DIR.ALTKEY THEN

   6039  4 000224   000126 236000 xsym               LDQ     ZI$DIR+86
         4 000225   100000 316003                    CANQ    32768,DU
         4 000226   000253 600000 4                  TZE     s:6051

      471     6040    2       DO;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:119  
      472     6041    2           CALL ALTK_PRNT ALTRET(ALTRTN);

   6041  4 000227   000436 701000 4                  TSX1    ALTK_PRNT
         4 000230   013115 702000 4                  TSX2    ALTRTN

      473     6042    2           IF RCNT > -1 THEN CALL BUILD_REC_TBL ALTRET(ALTEND_ZIU$Q2PR);

   6042  4 000231   000000 235000 xsym               LDA     RCNT
         4 000232   000235 604000 4                  TMI     s:6043

   6042  4 000233   005530 701000 4                  TSX1    BUILD_REC_TBL
         4 000234   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      474     6043    2           IF KCNT > -1 THEN CALL KEY_PRNT ALTRET(ALTEND_ZIU$Q2PR);

   6043  4 000235   000000 235000 xsym               LDA     KCNT
         4 000236   000242 604000 4                  TMI     s:6045

   6043  4 000237   005015 701000 4                  TSX1    KEY_PRNT
         4 000240   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR
         4 000241   000307 710000 4                  TRA     EXIT_RTN

      475     6044    3           ELSE DO;

      476     6045    3               ERRCODESF.ERR# = DBU#NOSUCH;

   6045  4 000242   000000 236000 xsym               LDQ     ERRCODESF
         4 000243   000007 376000 5                  ANQ     7
         4 000244   216060 276007                    ORQ     72752,DL
         4 000245   000000 756000 xsym               STQ     ERRCODESF

      477     6046    3               MSGCODE = ERRCODE_RDEF;

   6046  4 000246   000000 756000 xsym               STQ     MSGCODE

      478     6047    3               CALL SYS_FUNC_ERRMSG;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:120  
   6047  4 000247   000000 631400 5                  EPPR1   0
         4 000250   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000251   000000 011000                    NOP     0

      479     6048    3               END;

      480     6049    2           END;

   6049  4 000252   000307 710000 4                  TRA     EXIT_RTN

      481     6050    1       ELSE
      482     6051    1           IF ZI$DIR.CALCKEY THEN

   6051  4 000253   040000 316003                    CANQ    16384,DU
         4 000254   000275 600000 4                  TZE     s:6067

      483     6052    2           DO;

      484     6053    2               CALL CALC_PRNT ALTRET(ALTRTN);

   6053  4 000255   002040 701000 4                  TSX1    CALC_PRNT
         4 000256   013115 702000 4                  TSX2    ALTRTN

      485     6054    2               IF KCNT > -1 THEN CALL KEY_PRNT ALTRET(ALTEND_ZIU$Q2PR);

   6054  4 000257   000000 235000 xsym               LDA     KCNT
         4 000260   000264 604000 4                  TMI     s:6059

   6054  4 000261   005015 701000 4                  TSX1    KEY_PRNT
         4 000262   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR
         4 000263   000307 710000 4                  TRA     EXIT_RTN

      486     6055    3               ELSE DO;

      487     6056         /*E* ERROR:  ZIU-DBU#NOSUCH-C
      488     6057                               MESSAGE: No such record.
      489     6058                               */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:121  
      490     6059    3                   ERRCODESF.ERR# = DBU#NOSUCH;

   6059  4 000264   000000 236000 xsym               LDQ     ERRCODESF
         4 000265   000007 376000 5                  ANQ     7
         4 000266   216060 276007                    ORQ     72752,DL
         4 000267   000000 756000 xsym               STQ     ERRCODESF

      491     6060    3                   MSGCODE = ERRCODE_RDEF;

   6060  4 000270   000000 756000 xsym               STQ     MSGCODE

      492     6061    3                   CALL SYS_FUNC_ERRMSG;

   6061  4 000271   000000 631400 5                  EPPR1   0
         4 000272   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000273   000000 011000                    NOP     0

      493     6062    3                   END;

      494     6063    2               END;

   6063  4 000274   000307 710000 4                  TRA     EXIT_RTN

      495     6064    1           ELSE
      496     6065    2           DO;

      497     6066         /*  SETUP ZI$DIR.PHEAD AND REC_TBL */
      498     6067    2               CALL BUILD_REC_TBL ALTRET(ALTEND_ZIU$Q2PR);

   6067  4 000275   005530 701000 4                  TSX1    BUILD_REC_TBL
         4 000276   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      499     6068    2               IF KCNT=-1 THEN

   6068  4 000277   000000 235000 xsym               LDA     KCNT
         4 000300   000022 115000 5                  CMPA    18
         4 000301   000305 601000 4                  TNZ     s:6071
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:122  

      500     6069    2                   CALL PAGE_PRNT ALTRET(ALTEND_ZIU$Q2PR);

   6069  4 000302   000322 701000 4                  TSX1    PAGE_PRNT
         4 000303   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR
         4 000304   000307 710000 4                  TRA     EXIT_RTN

      501     6070    2               ELSE
      502     6071    2                   CALL KEY_PRNT ALTRET(ALTEND_ZIU$Q2PR);

   6071  4 000305   005015 701000 4                  TSX1    KEY_PRNT
         4 000306   013110 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      503     6072    2               END;

      504     6073    1   EXIT_RTN:
      505     6074    1       IF ZI$DIR.CODE=#REPAIR THEN RETURN;

   6074  4 000307   000125 236000 xsym  EXIT_RTN     LDQ     ZI$DIR+85
         4 000310   000010 376000 5                  ANQ     8
         4 000311   000011 116000 5                  CMPQ    9
         4 000312   000314 601000 4                  TNZ     s:6075

   6074  4 000313   000000 702200 xent               TSX2  ! X66_ARET

      506     6075    1       DCBSF = ZI$DIR.AREA_NM.DCB#;

   6075  4 000314   000244 220000 xsym               LDX0    ZI$DIR+164
         4 000315   000000 740000 xsym               STX0    DCBSF

      507     6076    1       CALL SYS_FUNC_CLOS;

   6076  4 000316   000000 631400 5                  EPPR1   0
         4 000317   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 000320   000000 011000                    NOP     0

      508     6077    1       RETURN;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:123  

   6077  4 000321   000000 702200 xent               TSX2  ! X66_ARET

      509     6078        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:124  
      510     6079        /***************************************************************/
      511     6080        /*                                                             */
      512     6081        /*               P A G E   P R I N T                           */
      513     6082        /**************************************************************/
      514     6083    1   PAGE_PRNT: PROC ALTRET;

   6083  4 000322   200016 741300       PAGE_PRNT    STX1  ! AC_REC+10,,AUTO

      515     6084    3       DO WHILE (~DONE);

   6084  4 000323   000426 710000 4                  TRA     s:6124

      516     6085    3           CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);

   6085  4 000324   006702 701000 4                  TSX1    READ_PAGE
         4 000325   000434 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      517     6086    3           OUT_INDX =0;

   6086  4 000326   000000 450000 xsym               STZ     OUT_INDX

      518     6087    4           DO RB = RB TO RE BY 1;

   6087  4 000327   000416 710000 4                  TRA     s:6121+3

      519     6088         /*
      520     6089            RB is not neccessarly the actual page number of this
      521     6090            page if printing from a dump file and pages were missing.
      522     6091            Therefore we get actual page no from the page.
      523     6092         */
      524     6093    4               DATA$ = ADDR(I_O_BUF(OUT_INDX));

   6093  4 000330   000000 236000 xsym               LDQ     OUT_INDX
         4 000331   000034 736000                    QLS     28
         4 000332   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000333   000000 756000 xsym               STQ     DATA$

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:125  
      525     6094    4               IF DATA_PG.CON_INTRVAL >= UWA.AC_REC.FIR_INV_PG

   6094  4 000334   000000 470400 xsym               LDP0    DATA$
         4 000335   000004 236100                    LDQ     4,,PR0
         4 000336   000252 116000 xsym               CMPQ    UWA+170
         4 000337   000352 604000 4                  TMI     s:6100
         4 000340   000000 235000 xsym               LDA     RCNT
         4 000341   000022 115000 5                  CMPA    18
         4 000342   000352 601000 4                  TNZ     s:6100

      526     6095    4                  AND RCNT = -1 THEN
      527     6096    5               DO;

      528     6097    5                   INVPG$=ADDR(I_O_BUF(OUT_INDX));

   6097  4 000343   000000 236000 xsym               LDQ     OUT_INDX
         4 000344   000034 736000                    QLS     28
         4 000345   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000346   000000 756000 xsym               STQ     INVPG$

      529     6098    5                   CALL INVPG_PRNT;

   6098  4 000347   012525 701000 4                  TSX1    INVPG_PRNT
         4 000350   000000 011000                    NOP     0

      530     6099    5                   END;

   6099  4 000351   000412 710000 4                  TRA     s:6120

      531     6100    4               ELSE IF DATA_PG.CON_INTRVAL = 0 THEN

   6100  4 000352   000000 116003                    CMPQ    0,DU
         4 000353   000401 601000 4                  TNZ     s:6117

      532     6101    5                   DO;

      533     6102        /*
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:126  
      534     6103                              This poutine prints attributes found in page#0
      535     6104        */
      536     6105    5                       ATBLK$ = ADDR(I_O_BUF(OUT_INDX));

   6105  4 000354   000000 236000 xsym               LDQ     OUT_INDX
         4 000355   000034 736000                    QLS     28
         4 000356   000000 036000 xsym               ADLQ    I_O_BUF$
         4 000357   000000 756000 xsym               STQ     ATBLK$

      537     6106    5                       CALL EXCTN_REPRT_SETUP;

   6106  4 000360   000000 631400 5                  EPPR1   0
         4 000361   000000 701000 xent               TSX1    EXCTN_REPRT_SETUP
         4 000362   000000 011000                    NOP     0

      538     6107    5                       CALL EXECUTION_OUTPUT;

   6107  4 000363   000000 631400 5                  EPPR1   0
         4 000364   000000 701000 xent               TSX1    EXECUTION_OUTPUT
         4 000365   000000 011000                    NOP     0

      539     6108    5                       IF ATBLK_PG.STATUS.LOCKED OR ATBLK_PG.STATUS.LOCKUPD

   6108  4 000366   000000 470400 xsym               LDP0    ATBLK$
         4 000367   000041 234100                    SZN     33,,PR0
         4 000370   000376 604000 4                  TMI     s:6110
         4 000371   000041 236100                    LDQ     33,,PR0
         4 000372   200000 316003                    CANQ    65536,DU
         4 000373   000376 601000 4                  TNZ     s:6110
         4 000374   100000 316003                    CANQ    32768,DU
         4 000375   000412 600000 4                  TZE     s:6120

      540     6109    5                          OR ATBLK_PG.STATUS.KFILE_CURR THEN
      541     6110    5                           CALL PRINT_LOCKS ALTRET(ALTEND_ZIU$Q2PR);

   6110  4 000376   004430 701000 4                  TSX1    PRINT_LOCKS
         4 000377   000434 702000 4                  TSX2    ALTEND_ZIU$Q2PR
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:127  

      542     6111    5                       END;

   6111  4 000400   000412 710000 4                  TRA     s:6120

      543     6112    4                   ELSE
      544     6113    5                   DO;

      545     6114        /*
      546     6115                            Standard print of data on data page
      547     6116        */
      548     6117    5                       REC_CNT = 1;

   6117  4 000401   000001 235007                    LDA     1,DL
         4 000402   000402 755000 0                  STA     REC_CNT

      549     6118    5                       CALL DATAPG_PRNT(0,DATA_PG.OFF_LN.SEC);

   6118  4 000403   000000 236000 xsym               LDQ     DATA$
         4 000404   000023 036000 5                  ADLQ    19
         4 000405   200022 756100                    STQ     @STRT_LN+1,,AUTO
         4 000406   000024 236000 5                  LDQ     20
         4 000407   200021 756100                    STQ     REC_LEN+1,,AUTO
         4 000410   005676 701000 4                  TSX1    DATAPG_PRNT
         4 000411   000000 011000                    NOP     0

      550     6119    5                       END;

      551     6120    4               OUT_INDX=OUT_INDX+1;

   6120  4 000412   000000 054000 xsym               AOS     OUT_INDX

      552     6121    4               END;

   6121  4 000413   000000 235000 xsym               LDA     RB
         4 000414   000001 035007                    ADLA    1,DL
         4 000415   000000 755000 xsym               STA     RB
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:128  
         4 000416   000000 236000 xsym               LDQ     RE
         4 000417   000000 116000 xsym               CMPQ    RB
         4 000420   000330 603000 4                  TRC     s:6093

      553     6122    3           CALL PAGE_RANGE(RB,RE,32,I_O_SIZE,UWA.AC_REC.MAX_PAGE,DONE);

   6122  4 000421   000014 630400 5                  EPPR0   12
         4 000422   000012 631400 5                  EPPR1   10
         4 000423   000000 701000 xent               TSX1    PAGE_RANGE
         4 000424   000000 011000                    NOP     0

      554     6123    3           OUT_INDX=0;

   6123  4 000425   000000 450000 xsym               STZ     OUT_INDX

      555     6124    3           END;

   6124  4 000426   000464 236000 0                  LDQ     DONE
         4 000427   400000 376003                    ANQ     -131072,DU
         4 000430   400000 676003                    ERQ     -131072,DU
         4 000431   000324 601000 4                  TNZ     s:6085

      556     6125    2       RETURN;

   6125  4 000432   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 000433   000001 702211                    TSX2  ! 1,X1

      557     6126    2   ALTEND_ZIU$Q2PR:
      558     6127    2       ALTRETURN;

   6127  4 000434   200016 221300       ALTEND_ZIU$* LDX1  ! AC_REC+10,,AUTO
         4 000435   000000 702211                    TSX2  ! 0,X1

      559     6128    2   END PAGE_PRNT;
      560     6129        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:129  
      561     6130        /********************************************************************/
      562     6131        /*                                                                  */
      563     6132        /*   A L T E R N A T E  K E Y   P R I N T                           */
      564     6133        /********************************************************************/
      565     6134    1   ALTK_PRNT: PROC ALTRET;

   6134  4 000436   200016 741300       ALTK_PRNT    STX1  ! AC_REC+10,,AUTO

      566     6135        /*
      567     6136           This routine takes the alternate key value received from ZI$DIR
      568     6137           and converts the alternate key to a local dbkey(s), which it passes
      569     6138           to KEY_PRNT.  First, the index id and key length for the specified
      570     6139           keyname must be found in the schema.  This information is used to
      571     6140           extract the corresponding local dbkey(s) from the alternate key file.
      572     6141        */
      573     6142
      574     6143    2   DCL 1 SKEY ALIGNED, /*used to read altkeyfile*/
      575     6144    2         2 LENGTH UBIN(9) UNAL,
      576     6145    2         2 IXID UBIN(18) UNAL,
      577     6146    2         2 VALUE CHAR(252) UNAL;
      578     6147    2   DCL 1 SKEY_RDEF REDEF SKEY ALIGNED,
      579     6148    2         2 LENGTH UBIN(9) UNAL,
      580     6149    2         2 * CHAR(4) UNAL,
      581     6150    2         2 * CHAR(250) UNAL;
      582     6151    2   DCL IXID UBIN(36) UNAL; /*to be found in schema*/
      583     6152    2   DCL KLNG UBIN(36) UNAL; /*to be found in schema*/
      584     6153    2   DCL DBKY SBIN(36);
      585     6154    2   DCL CDBKY REDEF DBKY CHAR(4); /*local dbkey to be passed to KEY_PRNT*/
      586     6155    2   DCL REC_FOUND BIT(1) UNAL;
      587     6156    2   DCL ALT$ PTR STATIC;
      588     6157    2   DCL KEY$ PTR STATIC;
      589     6158    2   DCL CHAR1 CHAR(1) BASED;
      590     6159    2   DCL NUM UBIN(3) BASED UNAL;
      591     6160    2   DCL 1 RBUF SYMREF,
      592     6161    2         2 TEXT CHAR(256) UNAL;
      593     6162    2   DCL ALTKEY_TYPE SBIN WORD UNAL;
      594     6163    2   DCL COMP_WORD SBIN WORD BASED UNAL;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:130  
      595     6164    2   DCL COMP_HALF SBIN HALF BASED UNAL;
      596     6165    2   DCL FLAG BIT(1) UNAL;
      597     6166    2   DCL ZIU$PACK ENTRY;
      598     6167    2   DCL B$IS$ PTR SYMREF;
      599     6168    2   DCL M UBIN UNAL;
      600     6169    2   DCL N UBIN UNAL;
      601     6170    2   DCL P UBIN UNAL;
      602     6171    2   DCL EXPO UBIN UNAL;
      603     6172    2   DCL MCHAR CHAR(60) UNAL;
      604     6173
      605     6174    2       ZI$DIR.ALTKEY = %NO#;

   6174  4 000437   000025 236000 5                  LDQ     21
         4 000440   000126 356000 xsym               ANSQ    ZI$DIR+86

      606     6175    2       REC_FOUND = %NO#;

   6175  4 000441   200122 450100                    STZ     REC_FOUND,,AUTO

      607     6176    2       CALL DB_FUNC_FDR(CAN_RVA.OAREC,UWA.SF_REC.DBKOA) ALTRET(ALTEND_ZIU$Q2PR);
              6176                /*find direct OA rec*/

   6176  4 000442   000026 630400 5                  EPPR0   22
         4 000443   000001 631400 5                  EPPR1   1
         4 000444   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 000445   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      608     6177    2       CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(ALTEND_ZIU$Q2PR);
              6177                /*find next within OA-SC set*/

   6177  4 000446   000030 630400 5                  EPPR0   24
         4 000447   000001 631400 5                  EPPR1   1
         4 000450   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000451   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      609     6178    3       DO WHILE (UWA.DB_STATUS ~= '02100'); /*while not end of realm*/

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:131  
   6178  4 000452   040000 106400                    CMPC    fill='040'O
         4 000453   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000454   000002 000005 3                  ADSC9   CHAR_SET+2               cn=0,n=5
         4 000455   000567 600000 4                  TZE     s:6206

      610     6179    3           CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC) ALTRET(ALTEND_ZIU$Q2PR);

   6179  4 000456   000030 630400 5                  EPPR0   24
         4 000457   000004 631400 5                  EPPR1   4
         4 000460   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000461   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      611     6180    3           IF UWA.SC_REC.SETTYPE = 3 /*if this set is altkeys*/

   6180  4 000462   000310 235000 xsym               LDA     UWA+200
         4 000463   000003 115007                    CMPA    3,DL
         4 000464   000557 601000 4                  TNZ     s:6204

      612     6181    4           THEN DO;

      613     6182    4               CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC) ALTRET(ALTEND_ZIU$Q2PR);
              6182                        /*find owner of SC-SN set*/

   6182  4 000465   000032 630400 5                  EPPR0   26
         4 000466   000004 631400 5                  EPPR1   4
         4 000467   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000470   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      614     6183    4               CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC) ALTRET(ALTEND_ZIU$Q2PR);
              6183                        /*get SN rec*/

   6183  4 000471   000033 630400 5                  EPPR0   27
         4 000472   000004 631400 5                  EPPR1   4
         4 000473   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000474   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      615     6184    4               IF UWA.SN_REC.SENAME = ALTKY.KEYNAME /*if this is keyname specified*/
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:132  

   6184  4 000475   040000 106400                    CMPC    fill='040'O
         4 000476   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 000477   000040 400036 xsym               ADSC9   ALTKY+32                 cn=2,n=30
         4 000500   000552 601000 4                  TNZ     s:6202

      616     6185    5               THEN DO;

      617     6186    5                   REC_FOUND = %YES#;

   6186  4 000501   400000 236003                    LDQ     -131072,DU
         4 000502   200122 756100                    STQ     REC_FOUND,,AUTO

      618     6187    5                   IXID = UWA.SC_REC.IXID; /*extract keyname info*/

   6187  4 000503   000323 235000 xsym               LDA     UWA+211
         4 000504   200117 755100                    STA     IXID,,AUTO

      619     6188    5                   KLNG = UWA.SC_REC.KEY_LENGHT;

   6188  4 000505   000324 235000 xsym               LDA     UWA+212
         4 000506   200120 755100                    STA     KLNG,,AUTO

      620     6189         /* find data type and eisdesc of this altkey */
      621     6190    5                   CALL DB_FUNC_FRS(CAN_RVA.SMREC.SEC,CAN_RVA.SCSOSM.SEC);

   6190  4 000507   000034 630400 5                  EPPR0   28
         4 000510   000001 631400 5                  EPPR1   1
         4 000511   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000512   000000 011000                    NOP     0

      622     6191    5                   UWA.CF_REC.SYN = 0;

   6191  4 000513   000400 450000 xsym               STZ     UWA+256

      623     6192    6                   DO WHILE (UWA.CF_REC.SYN ~= 1); /* want synonymous FR */

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:133  
   6192  4 000514   000400 235000 xsym               LDA     UWA+256
         4 000515   000001 115007                    CMPA    1,DL
         4 000516   000532 600000 4                  TZE     s:6196

      624     6193    6                       CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.SMSSCF.SEC);

   6193  4 000517   000036 630400 5                  EPPR0   30
         4 000520   000001 631400 5                  EPPR1   1
         4 000521   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000522   000000 011000                    NOP     0

      625     6194    6                       CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC);

   6194  4 000523   000036 630400 5                  EPPR0   30
         4 000524   000004 631400 5                  EPPR1   4
         4 000525   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000526   000000 011000                    NOP     0

      626     6195    6                       END;

   6195  4 000527   000400 235000 xsym               LDA     UWA+256
         4 000530   000001 115007                    CMPA    1,DL
         4 000531   000517 601000 4                  TNZ     s:6193

      627     6196    5                   CALL DB_FUNC_FOR(CAN_RVA.FRCFS.SEC);

   6196  4 000532   000040 630400 5                  EPPR0   32
         4 000533   000004 631400 5                  EPPR1   4
         4 000534   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 000535   000000 011000                    NOP     0

      628     6197    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);

   6197  4 000536   000041 630400 5                  EPPR0   33
         4 000537   000004 631400 5                  EPPR1   4
         4 000540   000000 701000 xent               TSX1    DB_FUNC_GET
         4 000541   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:134  

      629     6198    5                   ALTKEY_TYPE = UWA.FR_REC.FTYP;

   6198  4 000542   000334 235000 xsym               LDA     UWA+220
         4 000543   200123 755100                    STA     ALTKEY_TYPE,,AUTO

      630     6199    5                   FREIS = UWA.FR_REC.BUFLOC;

   6199  4 000544   000351 236000 xsym               LDQ     UWA+233
         4 000545   000500 756000 0                  STQ     FREIS

      631     6200    5                   UWA.DB_STATUS = '02100';

   6200  4 000546   040000 100400                    MLR     fill='040'O
         4 000547   000002 000005 3                  ADSC9   CHAR_SET+2               cn=0,n=5
         4 000550   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5

      632     6201    5                   END;

   6201  4 000551   000563 710000 4                  TRA     s:6205

      633     6202    4               ELSE CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(
              6202                        ALTEND_ZIU$Q2PR); /*next in OA-SC*/

   6202  4 000552   000030 630400 5                  EPPR0   24
         4 000553   000001 631400 5                  EPPR1   1
         4 000554   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000555   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      634     6203    4               END;

   6203  4 000556   000563 710000 4                  TRA     s:6205

      635     6204    3           ELSE CALL DB_FUNC_FRS(CAN_RVA.SCREC.SEC,CAN_RVA.OASC.SEC) ALTRET(
              6204                    ALTEND_ZIU$Q2PR); /*next in OA-SC*/

   6204  4 000557   000030 630400 5                  EPPR0   24
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:135  
         4 000560   000001 631400 5                  EPPR1   1
         4 000561   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 000562   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      636     6205    3           END;

   6205  4 000563   040000 106400                    CMPC    fill='040'O
         4 000564   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 000565   000002 000005 3                  ADSC9   CHAR_SET+2               cn=0,n=5
         4 000566   000456 601000 4                  TNZ     s:6179

      637     6206    2       IF REC_FOUND = %NO#

   6206  4 000567   200122 234100                    SZN     REC_FOUND,,AUTO
         4 000570   000615 604000 4                  TMI     s:6220

      638     6207    3       THEN DO;

      639     6208         /*E* ERROR: ZIU-DBU#NOKEYNM-C
      640     6209              MESSAGE: Key name "%U1" does not exist in the schema.
      641     6210              */
      642     6211    3           CALL INDEX(INDX,' ',ALTKY.KEYNAME);

   6211  4 000571   000000 124400                    SCM     mask='000'O
         4 000572   000040 400036 xsym               ADSC9   ALTKY+32                 cn=2,n=30
         4 000573   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 000574   000415 000000 0                  ARG     INDX

      643     6212    3           ERR_INSERT.CNT(0) = INDX;

   6212  4 000575   000415 236000 0                  LDQ     INDX
         4 000576   000033 736000                    QLS     27
         4 000577   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      644     6213    3           ERR_INSERT.TEXT(0) = ALTKY.KEYNAME;

   6213  4 000600   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:136  
         4 000601   000040 400036 xsym               ADSC9   ALTKY+32                 cn=2,n=30
         4 000602   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      645     6214    3           ERRCODESF.ERR# = DBU#NOKEYNM;

   6214  4 000603   000000 236000 xsym               LDQ     ERRCODESF
         4 000604   000007 376000 5                  ANQ     7
         4 000605   215660 276007                    ORQ     72624,DL
         4 000606   000000 756000 xsym               STQ     ERRCODESF

      646     6215    3           MSGCODE = ERRCODE_RDEF;

   6215  4 000607   000000 756000 xsym               STQ     MSGCODE

      647     6216    3           CALL SYS_FUNC_ERRMSG;

   6216  4 000610   000000 631400 5                  EPPR1   0
         4 000611   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 000612   000000 011000                    NOP     0

      648     6217    3           ALTRETURN;

   6217  4 000613   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 000614   000000 702211                    TSX2  ! 0,X1

      649     6218    3           END;
      650     6219        /* find length of given key */
      651     6220    2       CALL INDEX1(I,'''',RBUF.TEXT,0);

   6220  4 000615   000000 124400                    SCM     mask='000'O
         4 000616   000000 000400 xsym               ADSC9   RBUF                     cn=0,n=256
         4 000617   000043 000001 5                  ADSC9   35                       cn=0,n=1
         4 000620   000000 000000 xsym               ARG     I

      652     6221    2       CALL INDEX1(J,'''',RBUF.TEXT,I+1);

   6221  4 000621   000000 720000 xsym               LXL0    I
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:137  
         4 000622   777400 620010                    EAX0    -256,X0
         4 000623   777777 660003                    ERX0    -1,DU
         4 000624   000000 236000 xsym               LDQ     I
         4 000625   000001 036007                    ADLQ    1,DL
         4 000626   000000 235000 xsym               LDA     I
         4 000627   000000 124445                    SCM     mask='000'O
         4 000630   000000 200010 xsym               ADSC9   RBUF,A                   cn=1,n=*X0
         4 000631   000043 000001 5                  ADSC9   35                       cn=0,n=1
         4 000632   000000 000000 xsym               ARG     J
         4 000633   000000 056000 xsym               ASQ     J

      653     6222    2       INDX = J - I - 1;

   6222  4 000634   000000 236000 xsym               LDQ     J
         4 000635   000000 136000 xsym               SBLQ    I
         4 000636   000001 136007                    SBLQ    1,DL
         4 000637   000415 756000 0                  STQ     INDX

      654     6223
      655     6224    2       KEYFID.NM = DCBADDR(DCBSF)->F$DCB.NAME#;

   6224  4 000640   000044 470400 5                  LDP0    36
         4 000641   000000 471500                    LDP1    0,,PR0
         4 000642   000000 221000 xsym               LDX1    DCBSF
         4 000643   100000 473511                    LDP3    0,X1,PR1
         4 000644   000000 100500                    MLR     fill='000'O
         4 000645   300010 000037                    ADSC9   8,,PR3                   cn=0,n=31
         4 000646   000000 000037 xsym               ADSC9   KEYFID                   cn=0,n=31

      656     6225    2       CALL INSERT(KEYFID.NM.TEXT,KEYFID.NM.CNT,1,':');

   6225  4 000647   000000 236000 xsym               LDQ     KEYFID
         4 000650   000033 772000                    QRL     27
         4 000651   040006 100400                    MLR     fill='040'O
         4 000652   000045 000001 5                  ADSC9   37                       cn=0,n=1
         4 000653   000000 200001 xsym               ADSC9   KEYFID,Q                 cn=1,n=1

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:138  
      657     6226    2       KEYFID.NM.CNT = KEYFID.NM.CNT + 1;

   6226  4 000654   000000 236000 xsym               LDQ     KEYFID
         4 000655   001000 036003                    ADLQ    512,DU
         4 000656   000000 552040 xsym               STBQ    KEYFID,'40'O

      658     6227    2       DCBNMSF = VECTOR(KEYFID.NM);

   6227  4 000657   000046 237000 5                  LDAQ    38
         4 000660   000000 755000 xsym               STA     DCBNMSF
         4 000661   000001 756000 xsym               STQ     DCBNMSF+1

      659     6228    2       CALL SYS_FUNC_GETDCB ALTRET(ALTEND_ZIU$Q2PR);

   6228  4 000662   000000 631400 5                  EPPR1   0
         4 000663   000000 701000 xent               TSX1    SYS_FUNC_GETDCB
         4 000664   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      660     6229    2       KEYFID.DCB# = DCBSF;

   6229  4 000665   000000 220000 xsym               LDX0    DCBSF
         4 000666   000010 740000 xsym               STX0    KEYFID+8

      661     6230    2       KEY_SHADWSF = ZI$DIR.AREA_NM.DCB#;

   6230  4 000667   000244 235000 xsym               LDA     ZI$DIR+164
         4 000670   000022 771000                    ARL     18
         4 000671   000000 755000 xsym               STA     KEY_SHADWSF

      662     6231
      663     6232    2       FUNSF = %IN#; /*open altkey file*/

   6232  4 000672   000002 236007                    LDQ     2,DL
         4 000673   000000 756000 xsym               STQ     FUNSF

      664     6233    2       ORGSF = %KEYED#;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:139  
   6233  4 000674   000000 756000 xsym               STQ     ORGSF

      665     6234    2       REASGNSF = %NO#;

   6234  4 000675   000000 450000 xsym               STZ     REASGNSF

      666     6235    2       TESTSF = %NO#;

   6235  4 000676   000000 450000 xsym               STZ     TESTSF

      667     6236    2       ACSSF = %DIRECT#;

   6236  4 000677   000000 756000 xsym               STQ     ACSSF

      668     6237    2       ASNSF = %FILE#;

   6237  4 000700   000001 235007                    LDA     1,DL
         4 000701   000000 755000 xsym               STA     ASNSF

      669     6238    2       SHARESF= %ALL#;

   6238  4 000702   200000 236003                    LDQ     65536,DU
         4 000703   000000 756000 xsym               STQ     SHARESF

      670     6239    2       FIDSF = KEYFID.NM.TEXT;

   6239  4 000704   040000 100400                    MLR     fill='040'O
         4 000705   000000 200036 xsym               ADSC9   KEYFID                   cn=1,n=30
         4 000706   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

      671     6240    2       CALL SYS_FUNC_OPEN ALTRET(ALTEND_ZIU$Q2PR);

   6240  4 000707   000000 631400 5                  EPPR1   0
         4 000710   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 000711   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      672     6241
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:140  
      673     6242    2       DBKY = 0;

   6242  4 000712   200121 450100                    STZ     DBKY,,AUTO

      674     6243    2       SKEY = '0'B;

   6243  4 000713   000100 100400                    MLR     fill='000'O
         4 000714   000000 000001 5                  ADSC9   0                        cn=0,n=1
         4 000715   200017 000377                    ADSC9   SKEY,,AUTO               cn=0,n=255

      675     6244    3       IF SUBSTR(ALTKY.VALUE,0,1) = '.' THEN DO;

   6244  4 000716   000000 236000 xsym               LDQ     ALTKY
         4 000717   777000 376003                    ANQ     -512,DU
         4 000720   056000 116003                    CMPQ    23552,DU
         4 000721   001040 601000 4                  TNZ     s:6270

      676     6245    3           ALT$ = ADDR(SKEY.VALUE); /*dest*/

   6245  4 000722   206236 452500                    STP2    EXPO+5,,AUTO
         4 000723   206236 236100                    LDQ     EXPO+5,,AUTO
         4 000724   000050 036000 5                  ADLQ    40
         4 000725   000502 756000 0                  STQ     ALT$

      677     6246    3           KEY$ = ADDR(ALTKY.VALUE); /*source*/

   6246  4 000726   000051 236000 5                  LDQ     41
         4 000727   000503 756000 0                  STQ     KEY$

      678     6247    3           M = 0;

   6247  4 000730   200125 450100                    STZ     M,,AUTO

      679     6248    3           MCHAR = ' ';

   6248  4 000731   040100 100400                    MLR     fill='040'O
         4 000732   000042 000001 5                  ADSC9   34                       cn=0,n=1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:141  
         4 000733   200131 000074                    ADSC9   MCHAR,,AUTO              cn=0,n=60

      680     6249    3           N = INDX - 1; /*INDX is the length of altky*/

   6249  4 000734   000415 235000 0                  LDA     INDX
         4 000735   000001 135007                    SBLA    1,DL
         4 000736   200126 755100                    STA     N,,AUTO

      681     6250    4           DO J = 1 TO INDX-1;

   6250  4 000737   000001 235007                    LDA     1,DL
         4 000740   000000 755000 xsym               STA     J
         4 000741   000776 710000 4                  TRA     s:6259+1

      682     6251    4               N = N - 1;

   6251  4 000742   200126 235100                    LDA     N,,AUTO
         4 000743   000001 135007                    SBLA    1,DL
         4 000744   200126 755100                    STA     N,,AUTO

      683     6252    4               KEY$ = PINCRC(KEY$,1);

   6252  4 000745   000503 236000 0                  LDQ     KEY$
         4 000746   200000 036007                    ADLQ    65536,DL
         4 000747   000503 756000 0                  STQ     KEY$

      684     6253    4               CALL CHARBIN(K,KEY$->CHAR1); /*convert 1 octal char to binary*/

   6253  4 000750   000503 470400 0                  LDP0    KEY$
         4 000751   000000 305500                    DTB
         4 000752   000000 030001                    NDSC9   0,,PR0                   cn=0,s=nosgn,sf=0,n=1
         4 000753   000000 000004 xsym               NDSC9   K                        cn=0,s=lsgnf,sf=0,n=4

      685     6254    4               EXPO = 1;

   6254  4 000754   000001 235007                    LDA     1,DL
         4 000755   200130 755100                    STA     EXPO,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:142  

      686     6255    5               DO P=1 TO N; /*to count the exponentiation*/

   6255  4 000756   200127 755100                    STA     P,,AUTO
         4 000757   000766 710000 4                  TRA     s:6257+3

      687     6256    5                   EXPO = EXPO * 8;

   6256  4 000760   200130 235100                    LDA     EXPO,,AUTO
         4 000761   000003 735000                    ALS     3
         4 000762   200130 755100                    STA     EXPO,,AUTO

      688     6257    5                   END;

   6257  4 000763   200127 236100                    LDQ     P,,AUTO
         4 000764   000001 036007                    ADLQ    1,DL
         4 000765   200127 756100                    STQ     P,,AUTO
         4 000766   200126 236100                    LDQ     N,,AUTO
         4 000767   200127 116100                    CMPQ    P,,AUTO
         4 000770   000760 603000 4                  TRC     s:6256

      689     6258    4               M = M + K * EXPO;

   6258  4 000771   000000 236000 xsym               LDQ     K
         4 000772   200130 402100                    MPY     EXPO,,AUTO
         4 000773   200125 036100                    ADLQ    M,,AUTO
         4 000774   200125 756100                    STQ     M,,AUTO

      690     6259    4               END;

   6259  4 000775   000000 054000 xsym               AOS     J
         4 000776   000000 236000 xsym               LDQ     J
         4 000777   000415 116000 0                  CMPQ    INDX
         4 001000   000742 604000 4                  TMI     s:6251

      691     6260    3           J = M;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:143  
   6260  4 001001   200125 235100                    LDA     M,,AUTO
         4 001002   000000 755000 xsym               STA     J

      692     6261    3           KEY$ = ADDR(SKEY.VALUE);

   6261  4 001003   206236 452500                    STP2    EXPO+5,,AUTO
         4 001004   206236 236100                    LDQ     EXPO+5,,AUTO
         4 001005   000050 036000 5                  ADLQ    40
         4 001006   000503 756000 0                  STQ     KEY$

      693     6262    3           ALTKY.VALUE = ' ';

   6262  4 001007   040000 100400                    MLR     fill='040'O
         4 001010   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 001011   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130

      694     6263    3           CALL BINCHAR(MCHAR,M);

   6263  4 001012   000044 773000                    LRL     36
         4 001013   206236 757100                    STAQ    EXPO+5,,AUTO
         4 001014   000100 301500                    BTD
         4 001015   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 001016   200131 030074                    NDSC9   MCHAR,,AUTO              cn=0,s=nosgn,sf=0,n=60

      695     6264    3           CALL INSERT(ALTKY.VALUE,0,INDX-1,SUBSTR(MCHAR,60-INDX+1,INDX-1));

   6264  4 001017   000415 720000 0                  LXL0    INDX
         4 001020   777777 621010                    EAX1    -1,X0
         4 001021   000415 335000 0                  LCA     INDX
         4 001022   040040 100545                    MLR     fill='040'O
         4 001023   200150 200011                    ADSC9   MCHAR+15,A,AUTO          cn=1,n=*X1
         4 001024   000000 000011 xsym               ADSC9   ALTKY                    cn=0,n=*X1

      696     6265    3           CALL CHARBIN(J,SUBSTR(ALTKY.VALUE,0,INDX-1));

   6265  4 001025   000000 305440                    DTB
         4 001026   000000 030011 xsym               NDSC9   ALTKY                    cn=0,s=nosgn,sf=0,n=*X1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:144  
         4 001027   000000 000004 xsym               NDSC9   J                        cn=0,s=lsgnf,sf=0,n=4

      697     6266    3           KEY$->COMP_WORD = J;

   6266  4 001030   000503 470400 0                  LDP0    KEY$
         4 001031   003100 060400                    CSL     bolr='003'O
         4 001032   000000 000044 xsym               BDSC    J                        by=0,bit=0,n=36
         4 001033   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36

      698     6267    3           ALTKY.VALUE = SKEY.VALUE;

   6267  4 001034   040000 100500                    MLR     fill='040'O
         4 001035   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001036   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130

      699     6268    3           END;

   6268  4 001037   001646 710000 4                  TRA     s:6422

      700     6269    2       ELSE
      701     6270    3       DO CASE(ALTKEY_TYPE);

   6270  4 001040   200123 235100                    LDA     ALTKEY_TYPE,,AUTO
         4 001041   000024 115007                    CMPA    20,DL
         4 001042   001044 602005 4                  TNC     s:6270+4,AL
         4 001043   001623 710000 4                  TRA     s:6414
         4 001044   001623 710000 4                  TRA     s:6414
         4 001045   001070 710000 4                  TRA     s:6272
         4 001046   001110 710000 4                  TRA     s:6277
         4 001047   001130 710000 4                  TRA     s:6282
         4 001050   001254 710000 4                  TRA     s:6314
         4 001051   001425 710000 4                  TRA     s:6351
         4 001052   001623 710000 4                  TRA     s:6414
         4 001053   001623 710000 4                  TRA     s:6414
         4 001054   001623 710000 4                  TRA     s:6414
         4 001055   001431 710000 4                  TRA     s:6357
         4 001056   001623 710000 4                  TRA     s:6414
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:145  
         4 001057   001454 710000 4                  TRA     s:6366
         4 001060   001454 710000 4                  TRA     s:6366
         4 001061   001623 710000 4                  TRA     s:6414
         4 001062   001623 710000 4                  TRA     s:6414
         4 001063   001623 710000 4                  TRA     s:6414
         4 001064   001623 710000 4                  TRA     s:6414
         4 001065   001623 710000 4                  TRA     s:6414
         4 001066   001623 710000 4                  TRA     s:6414
         4 001067   001425 710000 4                  TRA     s:6351

      702     6271    3       CASE(1); /* 36 bit binary...comp word */

      703     6272    3           KEY$ = ADDR(SKEY.VALUE);

   6272  4 001070   206236 452500                    STP2    EXPO+5,,AUTO
         4 001071   206236 236100                    LDQ     EXPO+5,,AUTO
         4 001072   000050 036000 5                  ADLQ    40
         4 001073   000503 756000 0                  STQ     KEY$

      704     6273    3           CALL CHARBIN(J,SUBSTR(ALTKY.VALUE,0,INDX));

   6273  4 001074   000415 720000 0                  LXL0    INDX
         4 001075   000000 305440                    DTB
         4 001076   000000 030010 xsym               NDSC9   ALTKY                    cn=0,s=nosgn,sf=0,n=*X0
         4 001077   000000 000004 xsym               NDSC9   J                        cn=0,s=lsgnf,sf=0,n=4

      705     6274    3           KEY$->COMP_WORD = J;

   6274  4 001100   000503 470400 0                  LDP0    KEY$
         4 001101   003100 060400                    CSL     bolr='003'O
         4 001102   000000 000044 xsym               BDSC    J                        by=0,bit=0,n=36
         4 001103   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36

      706     6275    3           ALTKY.VALUE = SKEY.VALUE;

   6275  4 001104   040000 100500                    MLR     fill='040'O
         4 001105   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:146  
         4 001106   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001107   001646 710000 4                  TRA     s:6422

      707     6276    3       CASE(2); /* 18 bit binary...comp half */

      708     6277    3           KEY$ = ADDR(SKEY.VALUE);

   6277  4 001110   206236 452500                    STP2    EXPO+5,,AUTO
         4 001111   206236 236100                    LDQ     EXPO+5,,AUTO
         4 001112   000050 036000 5                  ADLQ    40
         4 001113   000503 756000 0                  STQ     KEY$

      709     6278    3           CALL CHARBIN(J,SUBSTR(ALTKY.VALUE,0,INDX));

   6278  4 001114   000415 720000 0                  LXL0    INDX
         4 001115   000000 305440                    DTB
         4 001116   000000 030010 xsym               NDSC9   ALTKY                    cn=0,s=nosgn,sf=0,n=*X0
         4 001117   000000 000004 xsym               NDSC9   J                        cn=0,s=lsgnf,sf=0,n=4

      710     6279    3           KEY$->COMP_HALF = J;

   6279  4 001120   000503 470400 0                  LDP0    KEY$
         4 001121   003100 061400                    CSR     bolr='003'O
         4 001122   000000 000044 xsym               BDSC    J                        by=0,bit=0,n=36
         4 001123   000000 000022                    BDSC    0,,PR0                   by=0,bit=0,n=18

      711     6280    3           ALTKY.VALUE = SKEY.VALUE;

   6280  4 001124   040000 100500                    MLR     fill='040'O
         4 001125   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001126   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001127   001646 710000 4                  TRA     s:6422

      712     6281    3       CASE(3); /* unsigned packed decimal */

      713     6282    3           CALL INDEX1(J,'.',ALTKY.VALUE);

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:147  
   6282  4 001130   000000 124400                    SCM     mask='000'O
         4 001131   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001132   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 001133   000000 000000 xsym               ARG     J

      714     6283    3           IF J < INDX /* found decimal point */

   6283  4 001134   000000 236000 xsym               LDQ     J
         4 001135   000415 116000 0                  CMPQ    INDX
         4 001136   001173 605000 4                  TPL     s:6291

      715     6284    4           THEN DO;

      716     6285    4               INEIS.SCAL = J - INDX + 1;

   6285  4 001137   000415 136000 0                  SBLQ    INDX
         4 001140   000001 036007                    ADLQ    1,DL
         4 001141   000006 736000                    QLS     6
         4 001142   000501 752002 0                  STCQ    INEIS,'02'O

      717     6286    4               INEIS.SIZE = INDX - 1;

   6286  4 001143   000415 236000 0                  LDQ     INDX
         4 001144   000001 136007                    SBLQ    1,DL
         4 001145   000501 752001 0                  STCQ    INEIS,'01'O

      718     6287    4               CALL CONCAT(SKEY.VALUE,SUBSTR(ALTKY.VALUE,0,J),SUBSTR(ALTKY.VALUE,J+1,
              6287                        INDX-J-1));

   6287  4 001146   000415 236000 0                  LDQ     INDX
         4 001147   000000 136000 xsym               SBLQ    J
         4 001150   000000 720000 xsym               LXL0    J
         4 001151   040100 100440                    MLR     fill='040'O
         4 001152   000000 000010 xsym               ADSC9   ALTKY                    cn=0,n=*X0
         4 001153   200017 600374                    ADSC9   SKEY,,AUTO               cn=3,n=252
         4 001154   206236 756100                    STQ     EXPO+5,,AUTO
         4 001155   000000 236000 xsym               LDQ     J
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:148  
         4 001156   000374 116007                    CMPQ    252,DL
         4 001157   001167 605000 4                  TPL     s:6288
         4 001160   206236 721100                    LXL1    EXPO+5,,AUTO
         4 001161   777777 622011                    EAX2    -1,X1
         4 001162   777403 623006                    EAX3    -253,QL
         4 001163   777777 663003                    ERX3    -1,DU
         4 001164   040146 100446                    MLR     fill='040'O
         4 001165   000000 200012 xsym               ADSC9   ALTKY,Q                  cn=1,n=*X2
         4 001166   200017 600013                    ADSC9   SKEY,Q,AUTO              cn=3,n=*X3

      719     6288    4               ALTKY.VALUE = SKEY.VALUE;

   6288  4 001167   040000 100500                    MLR     fill='040'O
         4 001170   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001171   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130

      720     6289    4               END;

   6289  4 001172   001177 710000 4                  TRA     s:6294

      721     6290    4           ELSE DO;

      722     6291    4               INEIS.SCAL = 0;

   6291  4 001173   000000 236003                    LDQ     0,DU
         4 001174   000501 752002 0                  STCQ    INEIS,'02'O

      723     6292    4               INEIS.SIZE = INDX;

   6292  4 001175   000415 236000 0                  LDQ     INDX
         4 001176   000501 752001 0                  STCQ    INEIS,'01'O

      724     6293    4               END;

      725     6294    4           IF INEIS.SIZE > FREIS_RDEF.SIZE THEN DO;

   6294  4 001177   000501 236000 0                  LDQ     INEIS
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:149  
         4 001200   000077 376007                    ANQ     63,DL
         4 001201   206236 756100                    STQ     EXPO+5,,AUTO
         4 001202   000500 236000 0                  LDQ     FREIS
         4 001203   000077 376007                    ANQ     63,DL
         4 001204   206236 116100                    CMPQ    EXPO+5,,AUTO
         4 001205   001225 605000 4                  TPL     s:6305

      726     6295         /*E* ERROR: ZIU-DBU#KYLNG-C
      727     6296                         MESSAGE: Key "%U1" is not the correct length.
      728     6297                    */
      729     6298    4               ERR_INSERT.CNT(0) = INDX;

   6298  4 001206   000415 236000 0                  LDQ     INDX
         4 001207   000033 736000                    QLS     27
         4 001210   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      730     6299    4               ERR_INSERT.TEXT(0) = ALTKY.VALUE;

   6299  4 001211   040000 100400                    MLR     fill='040'O
         4 001212   000000 000036 xsym               ADSC9   ALTKY                    cn=0,n=30
         4 001213   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      731     6300    4               ERRCODESF.ERR# = DBU#KYLNG;

   6300  4 001214   000000 236000 xsym               LDQ     ERRCODESF
         4 001215   000007 376000 5                  ANQ     7
         4 001216   215720 276007                    ORQ     72656,DL
         4 001217   000000 756000 xsym               STQ     ERRCODESF

      732     6301    4               MSGCODE = ERRCODE_RDEF;

   6301  4 001220   000000 756000 xsym               STQ     MSGCODE

      733     6302    4               CALL SYS_FUNC_ERRMSG;

   6302  4 001221   000000 631400 5                  EPPR1   0
         4 001222   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:150  
         4 001223   000000 011000                    NOP     0

      734     6303    4               GOTO ALTEND_ZIU$Q2PR;

   6303  4 001224   002020 710000 4                  TRA     ALTEND_ZIU$Q2PR

      735     6304    4               END;
      736     6305    3           INEIS.EISADDR = POFFW(ADDR(ALTKY.VALUE),B$IS$);

   6305  4 001225   000051 236000 5                  LDQ     41
         4 001226   000022 772000                    QRL     18
         4 001227   000000 235000 xsym               LDA     B$IS$
         4 001230   000022 771000                    ARL     18
         4 001231   206236 755100                    STA     EXPO+5,,AUTO
         4 001232   206236 136100                    SBLQ    EXPO+5,,AUTO
         4 001233   000000 620006                    EAX0    0,QL
         4 001234   000501 740000 0                  STX0    INEIS

      737     6306    3           INEIS.CN = 0;

   6306  4 001235   000053 236000 5                  LDQ     43
         4 001236   000501 356000 0                  ANSQ    INEIS

      738     6307    3           INEIS.TN = 0;

   6307  4 001237   000054 236000 5                  LDQ     44
         4 001240   000501 356000 0                  ANSQ    INEIS

      739     6308    3           INEIS.SIGN = 3; /* NONE */

   6308  4 001241   030000 236007                    LDQ     12288,DL
         4 001242   000501 256000 0                  ORSQ    INEIS

      740     6309    3           FREIS$ = ADDR(SKEY);

   6309  4 001243   200017 630500                    EPPR0   SKEY,,AUTO
         4 001244   000477 450400 0                  STP0    FREIS$
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:151  

      741     6310    3           CALL ZIU$PACK;

   6310  4 001245   000000 631400 5                  EPPR1   0
         4 001246   000000 701000 xent               TSX1    ZIU$PACK
         4 001247   000000 011000                    NOP     0

      742     6311    3           ALTKY.VALUE = SKEY.VALUE;

   6311  4 001250   040000 100500                    MLR     fill='040'O
         4 001251   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001252   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001253   001646 710000 4                  TRA     s:6422

      743     6312
      744     6313    3       CASE(4); /* signed packed decimal */

      745     6314    3           CALL INDEX1(J,'.',ALTKY.VALUE);

   6314  4 001254   000000 124400                    SCM     mask='000'O
         4 001255   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001256   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 001257   000000 000000 xsym               ARG     J

      746     6315    3           IF J < INDX /* found decimal point */

   6315  4 001260   000000 236000 xsym               LDQ     J
         4 001261   000415 116000 0                  CMPQ    INDX
         4 001262   001317 605000 4                  TPL     s:6323

      747     6316    4           THEN DO;

      748     6317    4               INEIS.SCAL = J - INDX + 1;

   6317  4 001263   000415 136000 0                  SBLQ    INDX
         4 001264   000001 036007                    ADLQ    1,DL
         4 001265   000006 736000                    QLS     6
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:152  
         4 001266   000501 752002 0                  STCQ    INEIS,'02'O

      749     6318    4               INEIS.SIZE = INDX - 1;

   6318  4 001267   000415 236000 0                  LDQ     INDX
         4 001270   000001 136007                    SBLQ    1,DL
         4 001271   000501 752001 0                  STCQ    INEIS,'01'O

      750     6319    4               CALL CONCAT(SKEY.VALUE,SUBSTR(ALTKY.VALUE,0,J),SUBSTR(ALTKY.VALUE,J+1,
              6319                        INDX-J-1));

   6319  4 001272   000415 236000 0                  LDQ     INDX
         4 001273   000000 136000 xsym               SBLQ    J
         4 001274   000000 720000 xsym               LXL0    J
         4 001275   040100 100440                    MLR     fill='040'O
         4 001276   000000 000010 xsym               ADSC9   ALTKY                    cn=0,n=*X0
         4 001277   200017 600374                    ADSC9   SKEY,,AUTO               cn=3,n=252
         4 001300   206236 756100                    STQ     EXPO+5,,AUTO
         4 001301   000000 236000 xsym               LDQ     J
         4 001302   000374 116007                    CMPQ    252,DL
         4 001303   001313 605000 4                  TPL     s:6320
         4 001304   206236 721100                    LXL1    EXPO+5,,AUTO
         4 001305   777777 622011                    EAX2    -1,X1
         4 001306   777403 623006                    EAX3    -253,QL
         4 001307   777777 663003                    ERX3    -1,DU
         4 001310   040146 100446                    MLR     fill='040'O
         4 001311   000000 200012 xsym               ADSC9   ALTKY,Q                  cn=1,n=*X2
         4 001312   200017 600013                    ADSC9   SKEY,Q,AUTO              cn=3,n=*X3

      751     6320    4               ALTKY.VALUE = SKEY.VALUE;

   6320  4 001313   040000 100500                    MLR     fill='040'O
         4 001314   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001315   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130

      752     6321    4               END;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:153  
   6321  4 001316   001323 710000 4                  TRA     s:6326

      753     6322    4           ELSE DO;

      754     6323    4               INEIS.SCAL = 0;

   6323  4 001317   000000 236003                    LDQ     0,DU
         4 001320   000501 752002 0                  STCQ    INEIS,'02'O

      755     6324    4               INEIS.SIZE = INDX;

   6324  4 001321   000415 236000 0                  LDQ     INDX
         4 001322   000501 752001 0                  STCQ    INEIS,'01'O

      756     6325    4               END;

      757     6326    4           IF INEIS.SIZE > FREIS_RDEF.SIZE THEN DO;

   6326  4 001323   000501 236000 0                  LDQ     INEIS
         4 001324   000077 376007                    ANQ     63,DL
         4 001325   206236 756100                    STQ     EXPO+5,,AUTO
         4 001326   000500 236000 0                  LDQ     FREIS
         4 001327   000077 376007                    ANQ     63,DL
         4 001330   206236 116100                    CMPQ    EXPO+5,,AUTO
         4 001331   001351 605000 4                  TPL     s:6337

      758     6327         /*   ERROR: ZIU-DBU#KYLNG-C
      759     6328            MESSAGE: Key %U1 is not the correct length.
      760     6329         */
      761     6330    4               ERR_INSERT.CNT(0) = INDX;

   6330  4 001332   000415 236000 0                  LDQ     INDX
         4 001333   000033 736000                    QLS     27
         4 001334   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      762     6331    4               ERR_INSERT.TEXT(0) = ALTKY.VALUE;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:154  
   6331  4 001335   040000 100400                    MLR     fill='040'O
         4 001336   000000 000036 xsym               ADSC9   ALTKY                    cn=0,n=30
         4 001337   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      763     6332    4               ERRCODESF.ERR# = DBU#KYLNG;

   6332  4 001340   000000 236000 xsym               LDQ     ERRCODESF
         4 001341   000007 376000 5                  ANQ     7
         4 001342   215720 276007                    ORQ     72656,DL
         4 001343   000000 756000 xsym               STQ     ERRCODESF

      764     6333    4               MSGCODE = ERRCODE_RDEF;

   6333  4 001344   000000 756000 xsym               STQ     MSGCODE

      765     6334    4               CALL SYS_FUNC_ERRMSG;

   6334  4 001345   000000 631400 5                  EPPR1   0
         4 001346   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001347   000000 011000                    NOP     0

      766     6335    4               GOTO ALTEND_ZIU$Q2PR;

   6335  4 001350   002020 710000 4                  TRA     ALTEND_ZIU$Q2PR

      767     6336    4               END;
      768     6337    3           INEIS.EISADDR = POFFW(ADDR(ALTKY.VALUE),B$IS$);

   6337  4 001351   000051 236000 5                  LDQ     41
         4 001352   000022 772000                    QRL     18
         4 001353   000000 235000 xsym               LDA     B$IS$
         4 001354   000022 771000                    ARL     18
         4 001355   206236 755100                    STA     EXPO+5,,AUTO
         4 001356   206236 136100                    SBLQ    EXPO+5,,AUTO
         4 001357   000000 620006                    EAX0    0,QL
         4 001360   000501 740000 0                  STX0    INEIS

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:155  
      769     6338    3           INEIS.CN = 0;

   6338  4 001361   000053 236000 5                  LDQ     43
         4 001362   000501 356000 0                  ANSQ    INEIS

      770     6339    3           INEIS.TN = 0;

   6339  4 001363   000054 236000 5                  LDQ     44
         4 001364   000501 356000 0                  ANSQ    INEIS

      771     6340    3           INEIS.SIGN = 1; /* LEADING */

   6340  4 001365   000501 236000 0                  LDQ     INEIS
         4 001366   000055 376000 5                  ANQ     45
         4 001367   010000 276007                    ORQ     4096,DL
         4 001370   000501 756000 0                  STQ     INEIS

      772     6341    4          IF (SUBSTR(ALTKY.VALUE,0,1)~='+') AND (SUBSTR(ALTKY.VALUE,0,1)~='-') THEN DO
              6341                    ;

   6341  4 001371   000000 236000 xsym               LDQ     ALTKY
         4 001372   777000 376003                    ANQ     -512,DU
         4 001373   053000 116003                    CMPQ    22016,DU
         4 001374   001414 600000 4                  TZE     s:6346
         4 001375   000000 236000 xsym               LDQ     ALTKY
         4 001376   777000 376003                    ANQ     -512,DU
         4 001377   055000 116003                    CMPQ    23040,DU
         4 001400   001414 600000 4                  TZE     s:6346

      773     6342    4               CALL CONCAT(SKEY.VALUE,'+',ALTKY.VALUE);

   6342  4 001401   000053 236007                    LDQ     43,DL
         4 001402   200017 552104                    STBQ    SKEY,'04'O,AUTO
         4 001403   040100 100400                    MLR     fill='040'O
         4 001404   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001405   200020 000373                    ADSC9   FOUND_AREA+1,,AUTO       cn=0,n=251

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:156  
      774     6343    4               ALTKY.VALUE = SKEY.VALUE;

   6343  4 001406   040000 100500                    MLR     fill='040'O
         4 001407   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001410   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130

      775     6344    4               INEIS.SIZE = INEIS.SIZE + 1;

   6344  4 001411   000501 236000 0                  LDQ     INEIS
         4 001412   000001 036007                    ADLQ    1,DL
         4 001413   000501 752001 0                  STCQ    INEIS,'01'O

      776     6345    4               END;

      777     6346    3           FREIS$ = ADDR(SKEY);

   6346  4 001414   200017 630500                    EPPR0   SKEY,,AUTO
         4 001415   000477 450400 0                  STP0    FREIS$

      778     6347    3           CALL ZIU$PACK;

   6347  4 001416   000000 631400 5                  EPPR1   0
         4 001417   000000 701000 xent               TSX1    ZIU$PACK
         4 001420   000000 011000                    NOP     0

      779     6348    3           ALTKY.VALUE = SKEY.VALUE;

   6348  4 001421   040000 100500                    MLR     fill='040'O
         4 001422   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001423   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001424   001646 710000 4                  TRA     s:6422

      780     6349
      781     6350    3       CASE(5,19); /*ASCII character and character varying */

      782     6351    3           SKEY.VALUE = ALTKY.VALUE;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:157  
   6351  4 001425   040100 100400                    MLR     fill='040'O
         4 001426   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001427   200017 600374                    ADSC9   SKEY,,AUTO               cn=3,n=252
         4 001430   001646 710000 4                  TRA     s:6422

      783     6352
      784     6353    3       CASE(9); /*unspecified 9 bit units */

      785     6354         /* ERROR: ZIU-DBU#OCT-C
      786     6355            MESSAGE: Key %U1 is defined as UNSPEC and must be entered in octal.
      787     6356            */
      788     6357    3           CALL INDEX1(INDX,' ',ALTKY.VALUE);

   6357  4 001431   000000 124400                    SCM     mask='000'O
         4 001432   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001433   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 001434   000415 000000 0                  ARG     INDX

      789     6358    3           ERR_INSERT.CNT(0) = INDX;

   6358  4 001435   000415 236000 0                  LDQ     INDX
         4 001436   000033 736000                    QLS     27
         4 001437   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      790     6359    3           ERR_INSERT.TEXT(0) = ALTKY.VALUE;

   6359  4 001440   040000 100400                    MLR     fill='040'O
         4 001441   000000 000036 xsym               ADSC9   ALTKY                    cn=0,n=30
         4 001442   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      791     6360    3           ERRCODESF.ERR# = DBU#OCT;

   6360  4 001443   000000 236000 xsym               LDQ     ERRCODESF
         4 001444   000007 376000 5                  ANQ     7
         4 001445   216240 276007                    ORQ     72864,DL
         4 001446   000000 756000 xsym               STQ     ERRCODESF

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:158  
      792     6361    3           MSGCODE = ERRCODE_RDEF;

   6361  4 001447   000000 756000 xsym               STQ     MSGCODE

      793     6362    3           CALL SYS_FUNC_ERRMSG;

   6362  4 001450   000000 631400 5                  EPPR1   0
         4 001451   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001452   000000 011000                    NOP     0

      794     6363    3           GOTO ALTEND_ZIU$Q2PR;

   6363  4 001453   002020 710000 4                  TRA     ALTEND_ZIU$Q2PR

      795     6364
      796     6365    3       CASE(11,12); /* single and double precision floating point */

      797     6366    3           FLAG = %NO#;

   6366  4 001454   200124 450100                    STZ     FLAG,,AUTO

      798     6367    3           CALL INDEX1(AN_DIGITS,'E',ALTKY.VALUE);

   6367  4 001455   000000 124400                    SCM     mask='000'O
         4 001456   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001457   000056 000001 5                  ADSC9   46                       cn=0,n=1
         4 001460   000461 000000 0                  ARG     AN_DIGITS

      799     6368    3           IF (SUBSTR(ALTKY.VALUE,0,1) = '+') OR (SUBSTR(ALTKY.VALUE,0,1) = '-')

   6368  4 001461   000000 236000 xsym               LDQ     ALTKY
         4 001462   777000 376003                    ANQ     -512,DU
         4 001463   053000 116003                    CMPQ    22016,DU
         4 001464   001471 600000 4                  TZE     s:6370
         4 001465   000000 236000 xsym               LDQ     ALTKY
         4 001466   777000 376003                    ANQ     -512,DU
         4 001467   055000 116003                    CMPQ    23040,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:159  
         4 001470   001500 601000 4                  TNZ     s:6373

      800     6369    4           THEN DO;

      801     6370    4               ASCII_NUM = SUBSTR(ALTKY.VALUE,0,AN_DIGITS);

   6370  4 001471   000461 720000 0                  LXL0    AN_DIGITS
         4 001472   040000 100440                    MLR     fill='040'O
         4 001473   000000 000010 xsym               ADSC9   ALTKY                    cn=0,n=*X0
         4 001474   000440 000100 0                  ADSC9   ASCII_NUM                cn=0,n=64

      802     6371    4               FLAG = %YES#;

   6371  4 001475   400000 236003                    LDQ     -131072,DU
         4 001476   200124 756100                    STQ     FLAG,,AUTO

      803     6372    4               END;

   6372  4 001477   001506 710000 4                  TRA     s:6374

      804     6373    3           ELSE CALL CONCAT(ASCII_NUM,'+',SUBSTR(ALTKY.VALUE,0,AN_DIGITS));

   6373  4 001500   053000 236003                    LDQ     22016,DU
         4 001501   000440 756000 0                  STQ     ASCII_NUM
         4 001502   000461 720000 0                  LXL0    AN_DIGITS
         4 001503   040000 100440                    MLR     fill='040'O
         4 001504   000000 000010 xsym               ADSC9   ALTKY                    cn=0,n=*X0
         4 001505   000440 200077 0                  ADSC9   ASCII_NUM                cn=1,n=63

      805     6374    4           IF AN_DIGITS > INDX THEN DO;

   6374  4 001506   000461 236000 0                  LDQ     AN_DIGITS
         4 001507   000415 116000 0                  CMPQ    INDX
         4 001510   001522 604400 4                  TMOZ    s:6383

      806     6375         /*E* ERROR: ZIU-DBU#FLPT-C
      807     6376                   MESSAGE: Error in given floating point key.
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:160  
      808     6377           */
      809     6378    4               ERRCODESF.ERR# = DBU#FLPT;

   6378  4 001511   000000 236000 xsym               LDQ     ERRCODESF
         4 001512   000007 376000 5                  ANQ     7
         4 001513   216260 276007                    ORQ     72880,DL
         4 001514   000000 756000 xsym               STQ     ERRCODESF

      810     6379    4               MSGCODE = ERRCODE_RDEF;

   6379  4 001515   000000 756000 xsym               STQ     MSGCODE

      811     6380    4               CALL SYS_FUNC_ERRMSG;

   6380  4 001516   000000 631400 5                  EPPR1   0
         4 001517   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001520   000000 011000                    NOP     0

      812     6381    4               GOTO ALTEND_ZIU$Q2PR;

   6381  4 001521   002020 710000 4                  TRA     ALTEND_ZIU$Q2PR

      813     6382    4               END;
      814     6383    3           IF SUBSTR(ALTKY.VALUE,AN_DIGITS+1,1) = '-'

   6383  4 001522   040000 106406                    CMPC    fill='040'O
         4 001523   000000 200001 xsym               ADSC9   ALTKY,Q                  cn=1,n=1
         4 001524   000057 000001 5                  ADSC9   47                       cn=0,n=1
         4 001525   001540 601000 4                  TNZ     s:6388

      815     6384    4           THEN DO;

      816     6385    4              CALL CHARBIN(AN_POWER_10,SUBSTR(ALTKY.VALUE,AN_DIGITS+2,INDX-AN_DIGITS-2
              6385                        ));

   6385  4 001526   000415 236000 0                  LDQ     INDX
         4 001527   000461 136000 0                  SBLQ    AN_DIGITS
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:161  
         4 001530   777776 620006                    EAX0    -2,QL
         4 001531   000461 235000 0                  LDA     AN_DIGITS
         4 001532   000000 305445                    DTB
         4 001533   000000 430010 xsym               NDSC9   ALTKY,A                  cn=2,s=nosgn,sf=0,n=*X0
         4 001534   000462 000004 0                  NDSC9   AN_POWER_10              cn=0,s=lsgnf,sf=0,n=4

      817     6386    4               AN_POWER_10 = -AN_POWER_10;

   6386  4 001535   000462 336000 0                  LCQ     AN_POWER_10
         4 001536   000462 756000 0                  STQ     AN_POWER_10

      818     6387    4               END;

   6387  4 001537   001563 710000 4                  TRA     s:6391

      819     6388    3           ELSE IF SUBSTR(ALTKY.VALUE,AN_DIGITS+1,1) = '+'

   6388  4 001540   040000 106406                    CMPC    fill='040'O
         4 001541   000000 200001 xsym               ADSC9   ALTKY,Q                  cn=1,n=1
         4 001542   000060 000001 5                  ADSC9   48                       cn=0,n=1
         4 001543   001554 601000 4                  TNZ     s:6390

      820     6389    3               THEN CALL CHARBIN(AN_POWER_10,SUBSTR(ALTKY.VALUE,AN_DIGITS+2,INDX-
              6389                        AN_DIGITS-2));

   6389  4 001544   000415 236000 0                  LDQ     INDX
         4 001545   000461 136000 0                  SBLQ    AN_DIGITS
         4 001546   777776 620006                    EAX0    -2,QL
         4 001547   000461 235000 0                  LDA     AN_DIGITS
         4 001550   000000 305445                    DTB
         4 001551   000000 430010 xsym               NDSC9   ALTKY,A                  cn=2,s=nosgn,sf=0,n=*X0
         4 001552   000462 000004 0                  NDSC9   AN_POWER_10              cn=0,s=lsgnf,sf=0,n=4
         4 001553   001563 710000 4                  TRA     s:6391

      821     6390    3               ELSE CALL CHARBIN(AN_POWER_10,SUBSTR(ALTKY.VALUE,AN_DIGITS+1,INDX-
              6390                        AN_DIGITS-1));

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:162  
   6390  4 001554   000415 236000 0                  LDQ     INDX
         4 001555   000461 136000 0                  SBLQ    AN_DIGITS
         4 001556   777777 620006                    EAX0    -1,QL
         4 001557   000461 235000 0                  LDA     AN_DIGITS
         4 001560   000000 305445                    DTB
         4 001561   000000 230010 xsym               NDSC9   ALTKY,A                  cn=1,s=nosgn,sf=0,n=*X0
         4 001562   000462 000004 0                  NDSC9   AN_POWER_10              cn=0,s=lsgnf,sf=0,n=4

      822     6391    3           KEY$ = ADDR(SKEY.VALUE);

   6391  4 001563   206236 452500                    STP2    EXPO+5,,AUTO
         4 001564   206236 236100                    LDQ     EXPO+5,,AUTO
         4 001565   000050 036000 5                  ADLQ    40
         4 001566   000503 756000 0                  STQ     KEY$

      823     6392    3           IF FLAG THEN AN_DIGITS = AN_DIGITS-1; /* DONT COUNT SIGN */

   6392  4 001567   200124 234100                    SZN     FLAG,,AUTO
         4 001570   001573 605000 4                  TPL     s:6393

   6392  4 001571   000001 336007                    LCQ     1,DL
         4 001572   000461 056000 0                  ASQ     AN_DIGITS

      824     6393    3           IF ALTKEY_TYPE = 11

   6393  4 001573   200123 235100                    LDA     ALTKEY_TYPE,,AUTO
         4 001574   000013 115007                    CMPA    11,DL
         4 001575   001607 601000 4                  TNZ     s:6401

      825     6394    4           THEN DO; CALL XPN_7LSPTOR(SNGL,

   6394  4 001576   000062 630400 5                  EPPR0   50
         4 001577   000061 631400 5                  EPPR1   49
         4 001600   000000 701000 xent               TSX1    XPN_7LSPTOR
         4 001601   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      826     6395    4                  ASCII_NUM,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:163  
      827     6396    4                  AN_DIGITS,
      828     6397    4                  AN_POWER_10)
      829     6398    4                  ALTRET(ALTEND_ZIU$Q2PR);
      830     6399    4               KEY$->BIT36 = SNGL;

   6399  4 001602   000503 470400 0                  LDP0    KEY$
         4 001603   003100 060400                    CSL     bolr='003'O
         4 001604   000434 000044 0                  BDSC    SNGL                     by=0,bit=0,n=36
         4 001605   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36

      831     6400    4               END;

   6400  4 001606   001617 710000 4                  TRA     s:6408

      832     6401    4           ELSE DO; CALL XPN_7LSPTOD(DOUBLE,

   6401  4 001607   000066 630400 5                  EPPR0   54
         4 001610   000061 631400 5                  EPPR1   49
         4 001611   000000 701000 xent               TSX1    XPN_7LSPTOD
         4 001612   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      833     6402    4                  ASCII_NUM,
      834     6403    4                  AN_DIGITS,
      835     6404    4                  AN_POWER_10)
      836     6405    4                  ALTRET(ALTEND_ZIU$Q2PR);
      837     6406    4               KEY$->BIT72 = DOUBLE;

   6406  4 001613   000503 470400 0                  LDP0    KEY$
         4 001614   003100 060400                    CSL     bolr='003'O
         4 001615   000436 000110 0                  BDSC    DOUBLE                   by=0,bit=0,n=72
         4 001616   000000 000110                    BDSC    0,,PR0                   by=0,bit=0,n=72

      838     6407    4               END;

      839     6408    3           ALTKY.VALUE = SKEY.VALUE;

   6408  4 001617   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:164  
         4 001620   200017 600202                    ADSC9   SKEY,,AUTO               cn=3,n=130
         4 001621   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001622   001646 710000 4                  TRA     s:6422

      840     6409
      841     6410    3       CASE(ELSE);

      842     6411         /* ERROR: ZIU-DBU#BADTYPE-C
      843     6412            MESSAGE: Unsupported item type for key %U1.
      844     6413         */
      845     6414    3           CALL INDEX1(INDX,' ',ALTKY.VALUE);

   6414  4 001623   000000 124400                    SCM     mask='000'O
         4 001624   000000 000202 xsym               ADSC9   ALTKY                    cn=0,n=130
         4 001625   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 001626   000415 000000 0                  ARG     INDX

      846     6415    3           ERR_INSERT.CNT(0) = INDX;

   6415  4 001627   000415 236000 0                  LDQ     INDX
         4 001630   000033 736000                    QLS     27
         4 001631   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      847     6416    3           ERR_INSERT.TEXT(0) = ALTKY.VALUE;

   6416  4 001632   040000 100400                    MLR     fill='040'O
         4 001633   000000 000036 xsym               ADSC9   ALTKY                    cn=0,n=30
         4 001634   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      848     6417    3           ERRCODESF.ERR# = DBU#BADTYPE;

   6417  4 001635   000000 236000 xsym               LDQ     ERRCODESF
         4 001636   000007 376000 5                  ANQ     7
         4 001637   216220 276007                    ORQ     72848,DL
         4 001640   000000 756000 xsym               STQ     ERRCODESF

      849     6418    3           MSGCODE = ERRCODE_RDEF;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:165  

   6418  4 001641   000000 756000 xsym               STQ     MSGCODE

      850     6419    3           CALL SYS_FUNC_ERRMSG;

   6419  4 001642   000000 631400 5                  EPPR1   0
         4 001643   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001644   000000 011000                    NOP     0

      851     6420    3           GOTO ALTEND_ZIU$Q2PR;

   6420  4 001645   002020 710000 4                  TRA     ALTEND_ZIU$Q2PR

      852     6421    3           END;

      853     6422    2       SKEY.LENGTH = 2 + KLNG;

   6422  4 001646   200120 236100                    LDQ     KLNG,,AUTO
         4 001647   000002 036007                    ADLQ    2,DL
         4 001650   000033 736000                    QLS     27
         4 001651   200017 552140                    STBQ    SKEY,'40'O,AUTO

      854     6423    2       SKEY.IXID = IXID;

   6423  4 001652   200117 236100                    LDQ     IXID,,AUTO
         4 001653   000011 736000                    QLS     9
         4 001654   200017 552130                    STBQ    SKEY,'30'O,AUTO

      855     6424
      856     6425    2       ZI$DIR.LOCALKEY = %YES#;

   6425  4 001655   002000 236003                    LDQ     1024,DU
         4 001656   000125 256000 xsym               ORSQ    ZI$DIR+85

      857     6426    2       KCNT = -1;

   6426  4 001657   000001 335007                    LCA     1,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:166  
         4 001660   000000 755000 xsym               STA     KCNT

      858     6427
      859     6428    2       DCBSF = KEYFID.DCB#; /*position in altkey file*/

   6428  4 001661   000010 220000 xsym               LDX0    KEYFID+8
         4 001662   000000 740000 xsym               STX0    DCBSF

      860     6429    2       KEYVSF = SKEY_RDEF;

   6429  4 001663   000000 100500                    MLR     fill='000'O
         4 001664   200017 000377                    ADSC9   SKEY,,AUTO               cn=0,n=255
         4 001665   000000 000377 xsym               ADSC9   KEYVSF                   cn=0,n=255

      861     6430    2       COUNTSF = 0;

   6430  4 001666   000000 450000 xsym               STZ     COUNTSF

      862     6431    2       CALL SYS_FUNC_PREC ALTRET(ALTEND_ZIU$Q2PR); /*position in file*/

   6431  4 001667   000000 631400 5                  EPPR1   0
         4 001670   000000 701000 xent               TSX1    SYS_FUNC_PREC
         4 001671   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      863     6432    2       SKEY_RDEF = KEYVSF;

   6432  4 001672   000100 100400                    MLR     fill='000'O
         4 001673   000000 000377 xsym               ADSC9   KEYVSF                   cn=0,n=255
         4 001674   200017 000377                    ADSC9   SKEY,,AUTO               cn=0,n=255

      864     6433    2       IF NO_KEYSF = %YES#

   6433  4 001675   000000 234000 xsym               SZN     NO_KEYSF
         4 001676   001747 605000 4                  TPL     s:6446

      865     6434    3       THEN DO;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:167  
      866     6435    3           COUNTSF = 1;

   6435  4 001677   000001 235007                    LDA     1,DL
         4 001700   000000 755000 xsym               STA     COUNTSF

      867     6436    4           DO WHILE ((SKEY.IXID = IXID) AND (SUBSTR(SKEY.VALUE,0,KLNG) = SUBSTR(ALTKY.
              6436                    VALUE,0,KLNG)) AND (KEYVSF.LEN ~= 0));

   6436  4 001701   001731 710000 4                  TRA     s:6444

      868     6437    4               CALL INSERT(CDBKY,4 - ATBLK_PG.DB_INFO.DBK_SZ,ATBLK_PG.DB_INFO.DBK_SZ,

   6437  4 001702   000000 470400 xsym               LDP0    ATBLK$
         4 001703   000010 220100                    LDX0    8,,PR0
         4 001704   000010 236100                    LDQ     8,,PR0
         4 001705   000022 772000                    QRL     18
         4 001706   000010 221100                    LDX1    8,,PR0
         4 001707   000022 676000 5                  ERQ     18
         4 001710   000001 036007                    ADLQ    1,DL
         4 001711   200120 235100                    LDA     KLNG,,AUTO
         4 001712   040146 100545                    MLR     fill='040'O
         4 001713   200017 600010                    ADSC9   SKEY,A,AUTO              cn=3,n=*X0
         4 001714   200122 000011                    ADSC9   REC_FOUND,Q,AUTO         cn=0,n=*X1

      869     6438    4                  SUBSTR(SKEY.VALUE,KLNG,ATBLK_PG.DB_INFO.DBK_SZ));
      870     6439    4               KCNT = KCNT + 1;

   6439  4 001715   000000 054000 xsym               AOS     KCNT

      871     6440    4               KEY_RNG.FIR(KCNT) = DBKY;

   6440  4 001716   000000 236000 xsym               LDQ     KCNT
         4 001717   000001 736000                    QLS     1
         4 001720   200121 235100                    LDA     DBKY,,AUTO
         4 001721   000000 755006 xsym               STA     KEY_RNG,QL

      872     6441    4               KEY_RNG.SEC(KCNT) = DBKY;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:168  

   6441  4 001722   000001 755006 xsym               STA     KEY_RNG+1,QL

      873     6442    4               CALL SYS_FUNC_PREC ALTRET(ALTEND_ZIU$Q2PR); /*get next key*/

   6442  4 001723   000000 631400 5                  EPPR1   0
         4 001724   000000 701000 xent               TSX1    SYS_FUNC_PREC
         4 001725   002020 702000 4                  TSX2    ALTEND_ZIU$Q2PR

      874     6443    4               SKEY_RDEF = KEYVSF;

   6443  4 001726   000100 100400                    MLR     fill='000'O
         4 001727   000000 000377 xsym               ADSC9   KEYVSF                   cn=0,n=255
         4 001730   200017 000377                    ADSC9   SKEY,,AUTO               cn=0,n=255

      875     6444    4               END;

   6444  4 001731   200017 236100                    LDQ     SKEY,,AUTO
         4 001732   000011 772000                    QRL     9
         4 001733   777777 376007                    ANQ     -1,DL
         4 001734   200117 116100                    CMPQ    IXID,,AUTO
         4 001735   001746 601000 4                  TNZ     s:6445
         4 001736   200120 720100                    LXL0    KLNG,,AUTO
         4 001737   040040 106540                    CMPC    fill='040'O
         4 001740   200017 600010                    ADSC9   SKEY,,AUTO               cn=3,n=*X0
         4 001741   000000 000010 xsym               ADSC9   ALTKY                    cn=0,n=*X0
         4 001742   001746 601000 4                  TNZ     s:6445
         4 001743   000000 236000 xsym               LDQ     KEYVSF
         4 001744   777000 316003                    CANQ    -512,DU
         4 001745   001702 601000 4                  TNZ     s:6437

      876     6445    3           END;

   6445  4 001746   001751 710000 4                  TRA     s:6448

      877     6446    2       ELSE ALTRETURN;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:169  
   6446  4 001747   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 001750   000000 702211                    TSX2  ! 0,X1

      878     6447
      879     6448    2       IF KCNT = -1 THEN

   6448  4 001751   000000 235000 xsym               LDA     KCNT
         4 001752   000022 115000 5                  CMPA    18
         4 001753   002000 601000 4                  TNZ     s:6461

      880     6449    3       DO;

      881     6450         /*E* ERROR: ZIU-DBU#NOKY-C
      882     6451              MESSAGE: Key "%U1" does not exist.
      883     6452              */
      884     6453    3           ERR_INSERT.CNT(0) = INDX;

   6453  4 001754   000415 236000 0                  LDQ     INDX
         4 001755   000033 736000                    QLS     27
         4 001756   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

      885     6454    3           CALL INDEX1(I,'''',RBUF.TEXT);

   6454  4 001757   000000 124400                    SCM     mask='000'O
         4 001760   000000 000400 xsym               ADSC9   RBUF                     cn=0,n=256
         4 001761   000043 000001 5                  ADSC9   35                       cn=0,n=1
         4 001762   000000 000000 xsym               ARG     I

      886     6455    3           ERR_INSERT.TEXT(0) = SUBSTR(RBUF.TEXT,I+1,INDX);

   6455  4 001763   000415 720000 0                  LXL0    INDX
         4 001764   000000 236000 xsym               LDQ     I
         4 001765   040000 100446                    MLR     fill='040'O
         4 001766   000000 200010 xsym               ADSC9   RBUF,Q                   cn=1,n=*X0
         4 001767   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

      887     6456    3           ERRCODESF.ERR# = DBU#NOKY;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:170  

   6456  4 001770   000000 236000 xsym               LDQ     ERRCODESF
         4 001771   000007 376000 5                  ANQ     7
         4 001772   215700 276007                    ORQ     72640,DL
         4 001773   000000 756000 xsym               STQ     ERRCODESF

      888     6457    3           MSGCODE = ERRCODE_RDEF;

   6457  4 001774   000000 756000 xsym               STQ     MSGCODE

      889     6458    3           CALL SYS_FUNC_ERRMSG;

   6458  4 001775   000000 631400 5                  EPPR1   0
         4 001776   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 001777   000000 011000                    NOP     0

      890     6459    3           END;

      891     6460
      892     6461    2       DCBSF = KEYFID.DCB#; /*close altkey file*/

   6461  4 002000   000010 220000 xsym               LDX0    KEYFID+8
         4 002001   000000 740000 xsym               STX0    DCBSF

      893     6462    2       IF DCBADDR(DCBSF)->F$DCB.FCD# = %YES# THEN

   6462  4 002002   000044 470400 5                  LDP0    36
         4 002003   000000 471500                    LDP1    0,,PR0
         4 002004   100000 473510                    LDP3    0,X0,PR1
         4 002005   300031 236100                    LDQ     25,,PR3
         4 002006   020000 316007                    CANQ    8192,DL
         4 002007   002016 600000 4                  TZE     s:6467

      894     6463    3       DO;

      895     6464    3           CALL SYS_FUNC_CLOS;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:171  
   6464  4 002010   000000 631400 5                  EPPR1   0
         4 002011   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 002012   000000 011000                    NOP     0

      896     6465    3           CALL SYS_FUNC_RELDCB;

   6465  4 002013   000000 631400 5                  EPPR1   0
         4 002014   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 002015   000000 011000                    NOP     0

      897     6466    3           END;

      898     6467    2       RETURN;

   6467  4 002016   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 002017   000001 702211                    TSX2  ! 1,X1

      899     6468    2   ALTEND_ZIU$Q2PR:
      900     6469    2       DCBSF = KEYFID.DCB#; /*close altkey file*/

   6469  4 002020   000010 220000 xsym  ALTEND_ZIU$* LDX0    KEYFID+8
         4 002021   000000 740000 xsym               STX0    DCBSF

      901     6470    2       IF DCBADDR(DCBSF)->F$DCB.FCD# = %YES# THEN

   6470  4 002022   000044 470400 5                  LDP0    36
         4 002023   000000 471500                    LDP1    0,,PR0
         4 002024   100000 473510                    LDP3    0,X0,PR1
         4 002025   300031 236100                    LDQ     25,,PR3
         4 002026   020000 316007                    CANQ    8192,DL
         4 002027   002036 600000 4                  TZE     s:6475

      902     6471    3       DO;

      903     6472    3           CALL SYS_FUNC_CLOS;

   6472  4 002030   000000 631400 5                  EPPR1   0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:172  
         4 002031   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 002032   000000 011000                    NOP     0

      904     6473    3           CALL SYS_FUNC_RELDCB;

   6473  4 002033   000000 631400 5                  EPPR1   0
         4 002034   000000 701000 xent               TSX1    SYS_FUNC_RELDCB
         4 002035   000000 011000                    NOP     0

      905     6474    3           END;

      906     6475    2       ALTRETURN;

   6475  4 002036   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 002037   000000 702211                    TSX2  ! 0,X1

      907     6476    2   END ALTK_PRNT;
      908     6477        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:173  
      909     6478        /********************************************************************/
      910     6479        /*                                                                  */
      911     6480        /*          C A L C   K E Y   P R I N T                             */
      912     6481        /********************************************************************/
      913     6482        /*
      914     6483           This routine takes the *CALC key and recordname received from
      915     6484           ZI$DIR and prints the record(s) with these calc fields.  ZIC$CALC
      916     6485           is called to determine the dbkey of the first record in the chain
      917     6486           that this record(s) should be in.  The chain is then walked and
      918     6487           keys of records with matching calc fields are saved.  After the entire
      919     6488           chain has been walked, KEY_PRNT is called to print the record(s).
      920     6489        */
      921     6490    1   CALC_PRNT: PROC ALTRET;

   6490  4 002040   200016 741300       CALC_PRNT    STX1  ! AC_REC+10,,AUTO

      922     6491
      923     6492    2   DCL 1 REC_TYPE ALIGNED,
      924     6493    2         2 FIR UBIN HALF UNAL,
      925     6494    2         2 SEC UBIN HALF UNAL;
      926     6495    2   DCL REC_LEN UBIN WORD;
      927     6496    2   DCL REC_NM CHAR(30);
      928     6497    2   DCL RECNM_LEN UBIN WORD;
      929     6498    2   DCL NUM_ITEMS UBIN WORD;
      930     6499    2   DCL 1 ITEM (0:100) ALIGNED,
      931     6500    2         2 NAME_SZ SBIN WORD,
      932     6501    2         2 OFFSET SBIN WORD,
      933     6502    2         2 LEN SBIN WORD,
      934     6503    2         2 TYPE SBIN WORD,
      935     6504    2         2 BEIST SBIN WORD,
      936     6505    2         2 EIS SBIN WORD;
      937     6506    2   DCL NUM_SETS UBIN WORD;
      938     6507    2   DCL 1 SET (0:30)ALIGNED,
      939     6508    2         2 NAME_SIZ SBIN WORD,
      940     6509    2         2 OWNER_OFFSET SBIN WORD,
      941     6510    2         2 OWNER_SIZ SBIN WORD,
      942     6511    2         2 PRIOR_OFFSET SBIN WORD,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:174  
      943     6512    2         2 PRIOR_SIZ SBIN WORD,
      944     6513    2         2 NEXT_OFFSET SBIN WORD,
      945     6514    2         2 NEXT_SIZ SBIN WORD;
      946     6515    2   DCL 1 KEY_ARRAY ALIGNED,
      947     6516    2         2 SIZ SBIN WORD,
      948     6517    2         2 MEMBER (0:300) SBIN WORD;
      949     6518    2   DCL ITEM_NMS (0:100) CHAR(30);
      950     6519    2   DCL SET_NMS (0:30) CHAR(30);
      951     6520    2   DCL 1 RA_REC ALIGNED,
      952     6521    2         2 LOWDBK SBIN WORD,
      953     6522    2         2 HIDBK SBIN WORD,
      954     6523    2         2 CALC_HDRS SBIN WORD,
      955     6524    2         2 HDR_OFFSET SBIN WORD;
      956     6525    2   DCL PG_NO UBIN WORD;
      957     6526    2   DCL LN_NO UBIN WORD;
      958     6527    2   DCL ERR_CD UBIN WORD;
      959     6528        /*
      960     6529          calc key values are kept track of via the table CALCKY.
      961     6530          CALCKY.OFFSET(X) contains the character offset into RBUF of the
      962     6531          X'th calc key specified in the invocation line.  CALCKY.LENGTH(X)
      963     6532          is the length in bytes of the calc key specified.
      964     6533        */
      965     6534    2   DCL 1 CALCKY (0:19) CALIGNED,
      966     6535    2         2 OFFSET UBIN WORD UNAL,
      967     6536    2         2 LENGTH UBIN WORD UNAL;
      968     6537    2   DCL 1 RBUF SYMREF,
      969     6538    2         2 TEXT CHAR(256) UNAL;
      970     6539
      971     6540    2   DCL BUFFR CHAR(4096) ALIGNED;
      972     6541    2   DCL 1 WRD BASED UNAL,
      973     6542    2         2 TYP UBIN HALF UNAL,
      974     6543    2         2 LEN UBIN HALF UNAL;
      975     6544    2   DCL BUFAREA BASED(BUF$) CHAR(SIZE);
      976     6545    2   DCL BUF$ PTR STATIC;
      977     6546    2   DCL CALC$ PTR STATIC;
      978     6547    2   DCL B$IS$ PTR SYMREF;
      979     6548    2   DCL KEY$ PTR STATIC;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:175  
      980     6549    2   DCL CHAR1 CHAR(1) BASED;
      981     6550    2   DCL NUM UBIN(3) BASED UNAL;
      982     6551    2   DCL SIZE UBIN WORD UNAL;
      983     6552    2   DCL ASCII_SOURCE CHAR(200) STATIC CALIGNED;
      984     6553    2   DCL TEMP CHAR(200) STATIC CALIGNED;
      985     6554    2   DCL ZIC$RREC ENTRY(14);
      986     6555    2   DCL ZIC$CALC ENTRY(8);
      987     6556    2   DCL ZIU$PACK ENTRY;
      988     6557    2   DCL COMP_HALF SBIN HALF BASED UNAL;
      989     6558    2   DCL COMP_WORD SBIN WORD BASED UNAL;
      990     6559    2   DCL SETNXT$ PTR STATIC ALIGNED;
      991     6560    2   DCL EISNXT UBIN WORD UNAL;
      992     6561    2   DCL 1 NXTPT REDEF EISNXT,
      993     6562    2         2 * UBIN(3) UNAL,
      994     6563    2         2 EISADDR UBIN(15) UNAL,
      995     6564    2         2 BYT_OFF UBIN(3) UNAL,
      996     6565    2         2 TN UBIN(1) UNAL,
      997     6566    2         2 SIGN UBIN(2) UNAL,
      998     6567    2         2 SCAL UBIN(6) UNAL,
      999     6568    2         2 SIZE UBIN(6) UNAL;
     1000     6569    2   DCL NEXT_PG UBIN WORD;
     1001     6570    2   DCL NEXT_LN UBIN WORD;
     1002     6571    2   DCL NEXT_DBKEY SBIN WORD;
     1003     6572    2   DCL 1 RECORD BASED(REC$) UBIN WORD CALIGNED;
     1004     6573    2   DCL 1 REC STATIC CALIGNED,
     1005     6574    2         2 TYPE UBIN HALF UNAL,
     1006     6575    2         2 LEN UBIN HALF UNAL;
     1007     6576    2   DCL 1 REC_RDEF REDEF REC UBIN WORD CALIGNED;
     1008     6577    2   DCL MATCH BIT(1) UNAL;
     1009     6578    2   DCL FLAG BIT(1) UNAL;
     1010     6579    2   DCL M UBIN UNAL;
     1011     6580    2   DCL N UBIN UNAL;
     1012     6581    2   DCL I UBIN UNAL;
     1013     6582    2   DCL EXPO UBIN UNAL;
     1014     6583    2       BUFFR = ' ';

   6583  4 002041   010000 220003                    LDX0    4096,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:176  
         4 002042   040140 100400                    MLR     fill='040'O
         4 002043   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 002044   204217 000010                    ADSC9   BUFFR,,AUTO              cn=0,n=*X0

     1015     6584    2       ZI$DIR.CALCKEY = %NO#;

   6584  4 002045   000072 236000 5                  LDQ     58
         4 002046   000126 356000 xsym               ANSQ    ZI$DIR+86

     1016     6585    3       IF RCNT ~= 0 THEN DO;

   6585  4 002047   000000 235000 xsym               LDA     RCNT
         4 002050   002063 600000 4                  TZE     s:6595

     1017     6586         /*E* ERROR: ZIU-DBU#NEEDRC-C
     1018     6587           MESSAGE: One record name must be specified when PRINTing by calc key.
     1019     6588           */
     1020     6589    3           ERRCODESF.ERR# = DBU#NEEDRC;

   6589  4 002051   000000 236000 xsym               LDQ     ERRCODESF
         4 002052   000007 376000 5                  ANQ     7
         4 002053   216000 276007                    ORQ     72704,DL
         4 002054   000000 756000 xsym               STQ     ERRCODESF

     1021     6590    3           MSGCODE = ERRCODE_RDEF;

   6590  4 002055   000000 756000 xsym               STQ     MSGCODE

     1022     6591    3           CALL SYS_FUNC_ERRMSG;

   6591  4 002056   000000 631400 5                  EPPR1   0
         4 002057   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 002060   000000 011000                    NOP     0

     1023     6592    3           ALTRETURN;

   6592  4 002061   200016 221300                    LDX1  ! AC_REC+10,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:177  
         4 002062   000000 702211                    TSX2  ! 0,X1

     1024     6593    3           END;
     1025     6594
     1026     6595    2       MSTR_INDX = 0;

   6595  4 002063   000000 450000 xsym               STZ     MSTR_INDX

     1027     6596    3       DO WHILE ((MSTR_REF.NAME(MSTR_INDX)~=RECORD_LIST.NAME(0)) AND (MSTR_INDX<=(
              6596                NO_RECS+1)));

   6596  4 002064   002066 710000 4                  TRA     s:6598

     1028     6597    3           MSTR_INDX = MSTR_INDX + 1; /*find index into MSTR_REF*/

   6597  4 002065   000000 054000 xsym               AOS     MSTR_INDX

     1029     6598    3           END;

   6598  4 002066   000000 236000 xsym               LDQ     MSTR_INDX
         4 002067   000050 402007                    MPY     40,DL
         4 002070   000000 470400 xsym               LDP0    MSTR$
         4 002071   040000 106506                    CMPC    fill='040'O
         4 002072   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 002073   000000 000036 xsym               ADSC9   RECORD_LIST              cn=0,n=30
         4 002074   002101 600000 4                  TZE     s:6599
         4 002075   000000 236000 xsym               LDQ     NO_RECS
         4 002076   000001 036007                    ADLQ    1,DL
         4 002077   000000 116000 xsym               CMPQ    MSTR_INDX
         4 002100   002065 605000 4                  TPL     s:6597

     1030     6599    2       IF MSTR_INDX > NO_RECS /*make sure valid recname given*/

   6599  4 002101   000000 236000 xsym               LDQ     MSTR_INDX
         4 002102   000000 116000 xsym               CMPQ    NO_RECS
         4 002103   002130 604400 4                  TMOZ    s:6609

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:178  
     1031     6600    3       THEN DO;

     1032     6601    3           CALL INDEX(INDX,' ',RECORD_LIST.NAME(0));

   6601  4 002104   000000 124400                    SCM     mask='000'O
         4 002105   000000 000036 xsym               ADSC9   RECORD_LIST              cn=0,n=30
         4 002106   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 002107   000415 000000 0                  ARG     INDX

     1033     6602    3           ERR_INSERT.CNT(0) = INDX;

   6602  4 002110   000415 236000 0                  LDQ     INDX
         4 002111   000033 736000                    QLS     27
         4 002112   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1034     6603    3           ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(0);

   6603  4 002113   040000 100400                    MLR     fill='040'O
         4 002114   000000 000036 xsym               ADSC9   RECORD_LIST              cn=0,n=30
         4 002115   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1035     6604    3           ERRCODESF.ERR# = DBU#NOREC;

   6604  4 002116   000000 236000 xsym               LDQ     ERRCODESF
         4 002117   000007 376000 5                  ANQ     7
         4 002120   214700 276007                    ORQ     72128,DL
         4 002121   000000 756000 xsym               STQ     ERRCODESF

     1036     6605    3           MSGCODE = ERRCODE_RDEF;

   6605  4 002122   000000 756000 xsym               STQ     MSGCODE

     1037     6606    3           CALL SYS_FUNC_ERRMSG;

   6606  4 002123   000000 631400 5                  EPPR1   0
         4 002124   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 002125   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:179  

     1038     6607    3           ALTRETURN;

   6607  4 002126   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 002127   000000 702211                    TSX2  ! 0,X1

     1039     6608    3           END;
     1040     6609    2       IF MSTR_REF.NAME(SET_XREF.MSTRINDX(MSTR_REF.NEXT(MSTR_INDX)))~='*CALC'

   6609  4 002130   000012 402007                    MPY     10,DL
         4 002131   000000 236106                    LDQ     0,QL,PR0
         4 002132   000022 736000                    QLS     18
         4 002133   000020 732000                    QRS     16
         4 002134   000000 471400 xsym               LDP1    SET_XREF$
         4 002135   100000 236106                    LDQ     0,QL,PR1
         4 002136   000022 732000                    QRS     18
         4 002137   000012 402007                    MPY     10,DL
         4 002140   000002 736000                    QLS     2
         4 002141   040000 106506                    CMPC    fill='040'O
         4 002142   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 002143   000004 000005 3                  ADSC9   CHAR_SET+4               cn=0,n=5
         4 002144   002171 600000 4                  TZE     s:6622

     1041     6610    3       THEN DO;

     1042     6611         /*E* ERROR: ZIU-DBU#NOTCALC-C
     1043     6612              MESSAGE: Record "%U1" is not in the *CALC set.
     1044     6613              */
     1045     6614    3           CALL INDEX(INDX,' ',RECORD_LIST.NAME(0));

   6614  4 002145   000000 124400                    SCM     mask='000'O
         4 002146   000000 000036 xsym               ADSC9   RECORD_LIST              cn=0,n=30
         4 002147   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 002150   000415 000000 0                  ARG     INDX

     1046     6615    3           ERR_INSERT.CNT(0) = INDX;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:180  
   6615  4 002151   000415 236000 0                  LDQ     INDX
         4 002152   000033 736000                    QLS     27
         4 002153   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1047     6616    3           ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(0);

   6616  4 002154   040000 100400                    MLR     fill='040'O
         4 002155   000000 000036 xsym               ADSC9   RECORD_LIST              cn=0,n=30
         4 002156   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1048     6617    3           ERRCODESF.ERR# = DBU#NOTCALC;

   6617  4 002157   000000 236000 xsym               LDQ     ERRCODESF
         4 002160   000007 376000 5                  ANQ     7
         4 002161   215760 276007                    ORQ     72688,DL
         4 002162   000000 756000 xsym               STQ     ERRCODESF

     1049     6618    3           MSGCODE = ERRCODE_RDEF;

   6618  4 002163   000000 756000 xsym               STQ     MSGCODE

     1050     6619    3           CALL SYS_FUNC_ERRMSG;

   6619  4 002164   000000 631400 5                  EPPR1   0
         4 002165   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 002166   000000 011000                    NOP     0

     1051     6620    3           ALTRETURN;

   6620  4 002167   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 002170   000000 702211                    TSX2  ! 0,X1

     1052     6621    3           END;
     1053     6622    2       RECORD_LIST.TYPE(0) = MSTR_REF.TYPE(MSTR_INDX);

   6622  4 002171   000000 236000 xsym               LDQ     MSTR_INDX
         4 002172   000012 402007                    MPY     10,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:181  
         4 002173   000000 220106                    LDX0    0,QL,PR0
         4 002174   000007 440000 xsym               SXL0    RECORD_LIST+7

     1054     6623    2       REC_TYPE.FIR = 0;

   6623  4 002175   000000 221003                    LDX1    0,DU
         4 002176   200017 741100                    STX1    REC_TYPE,,AUTO

     1055     6624    2       REC_TYPE.SEC = MSTR_REF.TYPE(MSTR_INDX);

   6624  4 002177   000000 222106                    LDX2    0,QL,PR0
         4 002200   200017 442100                    SXL2    REC_TYPE,,AUTO

     1056     6625        /*
     1057     6626          get record field info necessary for ZIC$CALC call
     1058     6627        */
     1059     6628    3       DO I = 0 TO 19;

   6628  4 002201   206230 450100                    STZ     I,,AUTO

     1060     6629    3           KEY_ARRAY.MEMBER(I) = -1;

   6629  4 002202   000001 335007                    LCA     1,DL
         4 002203   206230 720100                    LXL0    I,,AUTO
         4 002204   201524 755110                    STA     KEY_ARRAY+1,X0,AUTO

     1061     6630    3           END;

   6630  4 002205   206230 236100                    LDQ     I,,AUTO
         4 002206   000001 036007                    ADLQ    1,DL
         4 002207   206230 756100                    STQ     I,,AUTO
         4 002210   000024 116007                    CMPQ    20,DL
         4 002211   002202 602000 4                  TNC     s:6629

     1062     6631    2       CALL ZIC$RREC(REC_TYPE,REC_LEN,REC_NM,

   6631  4 002212   000074 236000 5                  LDQ     60
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:182  
         4 002213   206253 756100                    STQ     EXPO+18,,AUTO
         4 002214   204146 630500                    EPPR0   ERR_CD,,AUTO
         4 002215   206252 450500                    STP0    EXPO+17,,AUTO
         4 002216   204140 631500                    EPPR1   RA_REC,,AUTO
         4 002217   206251 451500                    STP1    EXPO+16,,AUTO
         4 002220   203567 633500                    EPPR3   SET_NMS,,AUTO
         4 002221   206250 453500                    STP3    EXPO+15,,AUTO
         4 002222   202201 634500                    EPPR4   ITEM_NMS,,AUTO
         4 002223   206247 454500                    STP4    EXPO+14,,AUTO
         4 002224   201523 635500                    EPPR5   KEY_ARRAY,,AUTO
         4 002225   206246 455500                    STP5    EXPO+13,,AUTO
         4 002226   201172 636500                    EPPR6   SET,,AUTO
         4 002227   206245 456500                    STP6    EXPO+12,,AUTO
         4 002230   201171 637500                    EPPR7   NUM_SETS,,AUTO
         4 002231   206244 457500                    STP7    EXPO+11,,AUTO
         4 002232   200033 630500                    EPPR0   ITEM,,AUTO
         4 002233   206243 450500                    STP0    EXPO+10,,AUTO
         4 002234   200032 630500                    EPPR0   NUM_ITEMS,,AUTO
         4 002235   206242 450500                    STP0    EXPO+9,,AUTO
         4 002236   200031 630500                    EPPR0   RECNM_LEN,,AUTO
         4 002237   206241 450500                    STP0    EXPO+8,,AUTO
         4 002240   200021 630500                    EPPR0   REC_NM,,AUTO
         4 002241   206240 450500                    STP0    EXPO+7,,AUTO
         4 002242   200020 630500                    EPPR0   REC_LEN,,AUTO
         4 002243   206237 450500                    STP0    EXPO+6,,AUTO
         4 002244   200017 630500                    EPPR0   REC_TYPE,,AUTO
         4 002245   206236 450500                    STP0    EXPO+5,,AUTO
         4 002246   206236 630500                    EPPR0   EXPO+5,,AUTO
         4 002247   000073 631400 5                  EPPR1   59
         4 002250   000000 701000 xent               TSX1    ZIC$RREC
         4 002251   000000 011000                    NOP     0

     1063     6632    2          RECNM_LEN,NUM_ITEMS,ITEM,NUM_SETS,SET,KEY_ARRAY,
     1064     6633    2          ITEM_NMS,SET_NMS,RA_REC,ERR_CD,ZI$DIR.AREA_NM.NAME.TEXT);
     1065     6634    2       RA_REC.HIDBK = UWA.RA_REC.HDBK;

   6634  4 002252   000327 235000 xsym               LDA     UWA+215
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:183  
         4 002253   204141 755100                    STA     RA_REC+1,,AUTO

     1066     6635    2       RA_REC.LOWDBK = UWA.RA_REC.LDBK;

   6635  4 002254   000326 236000 xsym               LDQ     UWA+214
         4 002255   204140 756100                    STQ     RA_REC,,AUTO

     1067     6636    2       RA_REC.CALC_HDRS = UWA.RA_REC.CHDRS1;

   6636  4 002256   000330 235000 xsym               LDA     UWA+216
         4 002257   204142 755100                    STA     RA_REC+2,,AUTO

     1068     6637    2       RA_REC.HDR_OFFSET = UWA.RA_REC.HOFFS;

   6637  4 002260   000331 235000 xsym               LDA     UWA+217
         4 002261   204143 755100                    STA     RA_REC+3,,AUTO

     1069     6638    2       IF (ERR_CD = 1) OR (KEY_ARRAY.MEMBER(0) = -1) /*no calc fields found*/

   6638  4 002262   204146 235100                    LDA     ERR_CD,,AUTO
         4 002263   000001 115007                    CMPA    1,DL
         4 002264   002270 600000 4                  TZE     s:6640
         4 002265   201524 235100                    LDA     KEY_ARRAY+1,,AUTO
         4 002266   000022 115000 5                  CMPA    18
         4 002267   002314 601000 4                  TNZ     s:6651

     1070     6639    3       THEN DO;

     1071     6640    3           CALL INDEX(INDX,' ',RECORD_LIST.NAME(0));

   6640  4 002270   000000 124400                    SCM     mask='000'O
         4 002271   000000 000036 xsym               ADSC9   RECORD_LIST              cn=0,n=30
         4 002272   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 002273   000415 000000 0                  ARG     INDX

     1072     6641    3           ERR_INSERT.CNT(0) = INDX;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:184  
   6641  4 002274   000415 236000 0                  LDQ     INDX
         4 002275   000033 736000                    QLS     27
         4 002276   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1073     6642    3           ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(0);

   6642  4 002277   040000 100400                    MLR     fill='040'O
         4 002300   000000 000036 xsym               ADSC9   RECORD_LIST              cn=0,n=30
         4 002301   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1074     6643    3           ERRCODESF.ERR# = DBU#NOTCALC;

   6643  4 002302   000000 236000 xsym               LDQ     ERRCODESF
         4 002303   000007 376000 5                  ANQ     7
         4 002304   215760 276007                    ORQ     72688,DL
         4 002305   000000 756000 xsym               STQ     ERRCODESF

     1075     6644    3           MSGCODE = ERRCODE_RDEF;

   6644  4 002306   000000 756000 xsym               STQ     MSGCODE

     1076     6645    3           CALL SYS_FUNC_ERRMSG;

   6645  4 002307   000000 631400 5                  EPPR1   0
         4 002310   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 002311   000000 011000                    NOP     0

     1077     6646    3           ALTRETURN;

   6646  4 002312   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 002313   000000 702211                    TSX2  ! 0,X1

     1078     6647    3           END;
     1079     6648        /*
     1080     6649          build table of offsets into rbuf of each calc key given
     1081     6650        */
     1082     6651    3       DO I = 0 TO 19;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:185  

   6651  4 002314   206230 450100                    STZ     I,,AUTO

     1083     6652    3           CALCKY(I) = '0'B;

   6652  4 002315   206230 235100                    LDA     I,,AUTO
         4 002316   000001 735000                    ALS     1
         4 002317   204147 450105                    STZ     CALCKY,AL,AUTO
         4 002320   204150 450105                    STZ     CALCKY+1,AL,AUTO

     1084     6653    3           END;

   6653  4 002321   206230 236100                    LDQ     I,,AUTO
         4 002322   000001 036007                    ADLQ    1,DL
         4 002323   206230 756100                    STQ     I,,AUTO
         4 002324   000024 116007                    CMPQ    20,DL
         4 002325   002315 602000 4                  TNC     s:6652

     1085     6654    2       I = 0;

   6654  4 002326   206230 450100                    STZ     I,,AUTO

     1086     6655    2       CNT = 0;

   6655  4 002327   000000 450000 xsym               STZ     CNT

     1087     6656    2       INDX = 0;

   6656  4 002330   000415 450000 0                  STZ     INDX

     1088     6657    2       CALL INDEX1(INDX,'''',RBUF.TEXT,I);

   6657  4 002331   206230 720100                    LXL0    I,,AUTO
         4 002332   777377 620010                    EAX0    -257,X0
         4 002333   777777 660003                    ERX0    -1,DU
         4 002334   206230 236100                    LDQ     I,,AUTO
         4 002335   206230 235100                    LDA     I,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:186  
         4 002336   000000 124445                    SCM     mask='000'O
         4 002337   000000 000010 xsym               ADSC9   RBUF,A                   cn=0,n=*X0
         4 002340   000043 000001 5                  ADSC9   35                       cn=0,n=1
         4 002341   000415 000000 0                  ARG     INDX
         4 002342   000415 056000 0                  ASQ     INDX

     1089     6658    3       DO WHILE (INDX < LENGTHC(RBUF.TEXT));

   6658  4 002343   002405 710000 4                  TRA     s:6666

     1090     6659    3           CALCKY.OFFSET(CNT)=INDX + 1; /*offset into rbuf of this calc key*/

   6659  4 002344   000000 235000 xsym               LDA     CNT
         4 002345   000001 735000                    ALS     1
         4 002346   000415 236000 0                  LDQ     INDX
         4 002347   000001 036007                    ADLQ    1,DL
         4 002350   204147 756105                    STQ     CALCKY,AL,AUTO

     1091     6660    3           I = INDX + 1;

   6660  4 002351   206230 756100                    STQ     I,,AUTO

     1092     6661    3           CALL INDEX1(INDX,'''',RBUF.TEXT,I);

   6661  4 002352   777377 620006                    EAX0    -257,QL
         4 002353   777777 660003                    ERX0    -1,DU
         4 002354   206230 235100                    LDA     I,,AUTO
         4 002355   000000 124445                    SCM     mask='000'O
         4 002356   000000 000010 xsym               ADSC9   RBUF,A                   cn=0,n=*X0
         4 002357   000043 000001 5                  ADSC9   35                       cn=0,n=1
         4 002360   000415 000000 0                  ARG     INDX
         4 002361   000415 056000 0                  ASQ     INDX

     1093     6662    3          CALCKY.LENGTH(CNT) = INDX - CALCKY.OFFSET(CNT); /* length of this calc key*/

   6662  4 002362   000000 236000 xsym               LDQ     CNT
         4 002363   000001 736000                    QLS     1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:187  
         4 002364   000000 621006                    EAX1    0,QL
         4 002365   000000 622006                    EAX2    0,QL
         4 002366   000415 236000 0                  LDQ     INDX
         4 002367   204147 136111                    SBLQ    CALCKY,X1,AUTO
         4 002370   204150 756112                    STQ     CALCKY+1,X2,AUTO

     1094     6663    3           I = INDX + 1;

   6663  4 002371   000415 235000 0                  LDA     INDX
         4 002372   000001 035007                    ADLA    1,DL
         4 002373   206230 755100                    STA     I,,AUTO

     1095     6664    3           CNT = CNT + 1;

   6664  4 002374   000000 054000 xsym               AOS     CNT

     1096     6665    3           CALL INDEX1(INDX,'''',RBUF.TEXT,I);

   6665  4 002375   777377 620005                    EAX0    -257,AL
         4 002376   777777 660003                    ERX0    -1,DU
         4 002377   206230 236100                    LDQ     I,,AUTO
         4 002400   000000 124445                    SCM     mask='000'O
         4 002401   000000 000010 xsym               ADSC9   RBUF,A                   cn=0,n=*X0
         4 002402   000043 000001 5                  ADSC9   35                       cn=0,n=1
         4 002403   000415 000000 0                  ARG     INDX
         4 002404   000415 056000 0                  ASQ     INDX

     1097     6666    3           END;

   6666  4 002405   000415 236000 0                  LDQ     INDX
         4 002406   000400 116007                    CMPQ    256,DL
         4 002407   002344 604000 4                  TMI     s:6659

     1098     6667
     1099     6668        /*
     1100     6669          make sure user has specified correct number of calc fields
     1101     6670        */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:188  
     1102     6671    3       IF KEY_ARRAY.SIZ ~= CNT THEN DO;

   6671  4 002410   201523 236100                    LDQ     KEY_ARRAY,,AUTO
         4 002411   000000 116000 xsym               CMPQ    CNT
         4 002412   002443 600000 4                  TZE     s:6688

     1103     6672         /*E* ERROR: ZIU-DBU#CALCNUM-C
     1104     6673           MESSAGE: %U2 calc field(s) required and command line contained %U1.
     1105     6674           */
     1106     6675    3           CALL BINCHAR(ERR_INSERT.TEXT(0),CNT);

   6675  4 002413   000000 301400                    BTD
         4 002414   000000 000004 xsym               NDSC9   CNT                      cn=0,s=lsgnf,sf=0,n=4
         4 002415   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

     1107     6676    3           CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);

   6676  4 002416   000100 630400 5                  EPPR0   64
         4 002417   000075 631400 5                  EPPR1   61
         4 002420   000000 701000 xent               TSX1    ZERO_SUP
         4 002421   000000 011000                    NOP     0

     1108     6677    3           CALL BINCHAR(ERR_INSERT.TEXT(1),KEY_ARRAY.SIZ);

   6677  4 002422   000000 301500                    BTD
         4 002423   201523 000004                    NDSC9   KEY_ARRAY,,AUTO          cn=0,s=lsgnf,sf=0,n=4
         4 002424   000010 230036 xsym               NDSC9   ERR_INSERT+8             cn=1,s=nosgn,sf=0,n=30

     1109     6678    3           CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);

   6678  4 002425   000103 630400 5                  EPPR0   67
         4 002426   000075 631400 5                  EPPR1   61
         4 002427   000000 701000 xent               TSX1    ZERO_SUP
         4 002430   000000 011000                    NOP     0

     1110     6679    3           ERRCODESF.ERR# = DBU#CALCNUM;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:189  
   6679  4 002431   000000 236000 xsym               LDQ     ERRCODESF
         4 002432   000007 376000 5                  ANQ     7
         4 002433   216020 276007                    ORQ     72720,DL
         4 002434   000000 756000 xsym               STQ     ERRCODESF

     1111     6680    3           MSGCODE = ERRCODE_RDEF;

   6680  4 002435   000000 756000 xsym               STQ     MSGCODE

     1112     6681    3           CALL SYS_FUNC_ERRMSG;

   6681  4 002436   000000 631400 5                  EPPR1   0
         4 002437   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 002440   000000 011000                    NOP     0

     1113     6682    3           ALTRETURN;

   6682  4 002441   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 002442   000000 702211                    TSX2  ! 0,X1

     1114     6683    3           END;
     1115     6684        /*
     1116     6685          fill in type,len and calc fields of record (BUFAREA) to be
     1117     6686          passed to ZIC$CALC
     1118     6687        */
     1119     6688    2       BUF$ = ADDR(BUFFR);

   6688  4 002443   204217 630500                    EPPR0   BUFFR,,AUTO
         4 002444   000504 450400 0                  STP0    BUF$

     1120     6689    2       BUF$->WRD.TYP = MSTR_REF.TYPE(MSTR_INDX);

   6689  4 002445   000000 236000 xsym               LDQ     MSTR_INDX
         4 002446   000550 402007                    MPY     360,DL
         4 002447   000000 116003                    CMPQ    0,DU
         4 002450   002452 605000 4                  TPL     s:6689+5
         4 002451   000044 036003                    ADLQ    36,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:190  
         4 002452   000000 471400 xsym               LDP1    MSTR$
         4 002453   003100 060506                    CSL     bolr='003'O
         4 002454   100000 000022                    BDSC    0,Q,PR1                  by=0,bit=0,n=18
         4 002455   000000 000022                    BDSC    0,,PR0                   by=0,bit=0,n=18

     1121     6690    2       BUF$->WRD.LEN = REC_LEN;

   6690  4 002456   003100 061500                    CSR     bolr='003'O
         4 002457   200020 000044                    BDSC    REC_LEN,,AUTO            by=0,bit=0,n=36
         4 002460   000000 400022                    BDSC    0,,PR0                   by=2,bit=0,n=18

     1122     6691    3       DO X = 0 TO KEY_ARRAY.SIZ-1; /* KEY_ARRAY.SIZ = #calc fields */

   6691  4 002461   000000 450000 xsym               STZ     X
         4 002462   003467 710000 4                  TRA     s:6839+1

     1123     6692    3           I = KEY_ARRAY.MEMBER(X);

   6692  4 002463   000000 720000 xsym               LXL0    X
         4 002464   201524 235110                    LDA     KEY_ARRAY+1,X0,AUTO
         4 002465   206230 755100                    STA     I,,AUTO

     1124     6693    4           DO CASE(ITEM.TYPE(I));

   6693  4 002466   206230 236100                    LDQ     I,,AUTO
         4 002467   000006 402007                    MPY     6,DL
         4 002470   200036 235106                    LDA     FR_SAVE+1,QL,AUTO
         4 002471   000005 135007                    SBLA    5,DL
         4 002472   000005 115007                    CMPA    5,DL
         4 002473   002475 602005 4                  TNC     s:6693+7,AL
         4 002474   002505 710000 4                  TRA     s:6697
         4 002475   002502 710000 4                  TRA     s:6695
         4 002476   002505 710000 4                  TRA     s:6697
         4 002477   002505 710000 4                  TRA     s:6697
         4 002500   002505 710000 4                  TRA     s:6697
         4 002501   002502 710000 4                  TRA     s:6695

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:191  
     1125     6694    4           CASE(5,9); /* ASCII-BYTES AND UNSPEC-BYTES */

     1126     6695    4               SIZE = ITEM.LEN(I);

   6695  4 002502   200035 235106                    LDA     ITEM+2,QL,AUTO
         4 002503   206217 755100                    STA     SIZE,,AUTO
         4 002504   002521 710000 4                  TRA     s:6699

     1127     6696    4           CASE(ELSE); /* OTHER-NIBBLES */

     1128     6697    4               SIZE = ((4*ITEM.LEN(I))+((1+ITEM.LEN(I))/2)+8)/9;

   6697  4 002505   200035 236106                    LDQ     ITEM+2,QL,AUTO
         4 002506   000001 036007                    ADLQ    1,DL
         4 002507   000002 506007                    DIV     2,DL
         4 002510   206236 756100                    STQ     EXPO+5,,AUTO
         4 002511   206230 236100                    LDQ     I,,AUTO
         4 002512   000006 402007                    MPY     6,DL
         4 002513   200035 236106                    LDQ     ITEM+2,QL,AUTO
         4 002514   000002 736000                    QLS     2
         4 002515   206236 036100                    ADLQ    EXPO+5,,AUTO
         4 002516   000010 036007                    ADLQ    8,DL
         4 002517   000011 506007                    DIV     9,DL
         4 002520   206217 756100                    STQ     SIZE,,AUTO

     1129     6698    4               END;

     1130     6699    3           CALC$ = PINCRB(BUF$,4*ITEM.OFFSET(I)+((1+ITEM.OFFSET(I))/2));

   6699  4 002521   206230 236100                    LDQ     I,,AUTO
         4 002522   000006 402007                    MPY     6,DL
         4 002523   200034 236106                    LDQ     ITEM+1,QL,AUTO
         4 002524   000001 036007                    ADLQ    1,DL
         4 002525   000002 506007                    DIV     2,DL
         4 002526   206236 756100                    STQ     EXPO+5,,AUTO
         4 002527   206230 236100                    LDQ     I,,AUTO
         4 002530   000006 402007                    MPY     6,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:192  
         4 002531   200034 236106                    LDQ     ITEM+1,QL,AUTO
         4 002532   000002 736000                    QLS     2
         4 002533   206236 036100                    ADLQ    EXPO+5,,AUTO
         4 002534   000504 470400 0                  LDP0    BUF$
         4 002535   002537 605000 4                  TPL     s:6699+14
         4 002536   000044 036003                    ADLQ    36,DU
         4 002537   000000 503506                    ABD     0,QL,PR0
         4 002540   000505 450400 0                  STP0    CALC$

     1131     6700    4           IF SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),1) = '.' THEN DO;
              6700                    /*user gave octal key*/

   6700  4 002541   000000 235000 xsym               LDA     X
         4 002542   000001 735000                    ALS     1
         4 002543   204147 235105                    LDA     CALCKY,AL,AUTO
         4 002544   040000 106405                    CMPC    fill='040'O
         4 002545   000000 000001 xsym               ADSC9   RBUF,A                   cn=0,n=1
         4 002546   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 002547   002641 601000 4                  TNZ     s:6719

     1132     6701    4               KEY$ = ADDR(RBUF.TEXT);

   6701  4 002550   000106 236000 5                  LDQ     70
         4 002551   000506 756000 0                  STQ     KEY$

     1133     6702    4               KEY$ = PINCRC(KEY$,CALCKY.OFFSET(X)+1); /*source*/

   6702  4 002552   000000 235000 xsym               LDA     X
         4 002553   000001 735000                    ALS     1
         4 002554   204147 236105                    LDQ     CALCKY,AL,AUTO
         4 002555   000020 736000                    QLS     16
         4 002556   200000 036007                    ADLQ    65536,DL
         4 002557   000506 036000 0                  ADLQ    KEY$
         4 002560   000506 756000 0                  STQ     KEY$

     1134     6703    4               M = 0;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:193  
   6703  4 002561   206226 450100                    STZ     M,,AUTO

     1135     6704    4               N = CALCKY.LENGTH(X) - 1;

   6704  4 002562   204150 235105                    LDA     CALCKY+1,AL,AUTO
         4 002563   000001 135007                    SBLA    1,DL
         4 002564   206227 755100                    STA     N,,AUTO

     1136     6705    5               DO J = 1 TO CALCKY.LENGTH(X)-1; /*for each octal char given*/

   6705  4 002565   000001 235007                    LDA     1,DL
         4 002566   000000 755000 xsym               STA     J
         4 002567   002630 710000 4                  TRA     s:6715+1

     1137     6706    5                   N = N-1;

   6706  4 002570   206227 235100                    LDA     N,,AUTO
         4 002571   000001 135007                    SBLA    1,DL
         4 002572   206227 755100                    STA     N,,AUTO

     1138     6707    5                   CALL CHARBIN(K,KEY$->CHAR1); /*convert 1 octal char to binary*/

   6707  4 002573   000506 470400 0                  LDP0    KEY$
         4 002574   000000 305500                    DTB
         4 002575   000000 030001                    NDSC9   0,,PR0                   cn=0,s=nosgn,sf=0,n=1
         4 002576   000000 000004 xsym               NDSC9   K                        cn=0,s=lsgnf,sf=0,n=4

     1139     6708    5                   EXPO = 1;

   6708  4 002577   000001 236007                    LDQ     1,DL
         4 002600   206231 756100                    STQ     EXPO,,AUTO

     1140     6709    6                   DO I=1 TO N; /*to count the exponentiation*/

   6709  4 002601   206230 756100                    STQ     I,,AUTO
         4 002602   002611 710000 4                  TRA     s:6711+3

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:194  
     1141     6710    6                       EXPO = EXPO * 8;

   6710  4 002603   206231 235100                    LDA     EXPO,,AUTO
         4 002604   000003 735000                    ALS     3
         4 002605   206231 755100                    STA     EXPO,,AUTO

     1142     6711    6                       END;

   6711  4 002606   206230 236100                    LDQ     I,,AUTO
         4 002607   000001 036007                    ADLQ    1,DL
         4 002610   206230 756100                    STQ     I,,AUTO
         4 002611   206227 116100                    CMPQ    N,,AUTO
         4 002612   002603 602000 4                  TNC     s:6710
         4 002613   002603 600000 4                  TZE     s:6710

     1143     6712    5                   M = M + K * EXPO; /*convert octal to decimal*/

   6712  4 002614   000000 236000 xsym               LDQ     K
         4 002615   206231 402100                    MPY     EXPO,,AUTO
         4 002616   206226 036100                    ADLQ    M,,AUTO
         4 002617   206226 756100                    STQ     M,,AUTO

     1144     6713    5                   KEY$ = PINCRC(KEY$,1); /*bump source ptr*/

   6713  4 002620   000506 236000 0                  LDQ     KEY$
         4 002621   200000 036007                    ADLQ    65536,DL
         4 002622   000506 756000 0                  STQ     KEY$

     1145     6714    5                   CALC$->COMP_WORD= M; /*put into destination field*/

   6714  4 002623   000505 470400 0                  LDP0    CALC$
         4 002624   003100 060500                    CSL     bolr='003'O
         4 002625   206226 000044                    BDSC    M,,AUTO                  by=0,bit=0,n=36
         4 002626   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36

     1146     6715    5                   END;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:195  
   6715  4 002627   000000 054000 xsym               AOS     J
         4 002630   000000 235000 xsym               LDA     X
         4 002631   000001 735000                    ALS     1
         4 002632   000000 236000 xsym               LDQ     J
         4 002633   002570 604000 4                  TMI     s:6706
         4 002634   204150 116105                    CMPQ    CALCKY+1,AL,AUTO
         4 002635   002570 602000 4                  TNC     s:6706

     1147     6716    4               J = M;

   6716  4 002636   206226 235100                    LDA     M,,AUTO
         4 002637   000000 755000 xsym               STA     J

     1148     6717    4               END;

   6717  4 002640   003466 710000 4                  TRA     s:6839

     1149     6718    3           ELSE
     1150     6719    4           DO CASE(ITEM.TYPE(I));

   6719  4 002641   206230 236100                    LDQ     I,,AUTO
         4 002642   000006 402007                    MPY     6,DL
         4 002643   200036 235106                    LDA     FR_SAVE+1,QL,AUTO
         4 002644   000024 115007                    CMPA    20,DL
         4 002645   002647 602005 4                  TNC     s:6719+6,AL
         4 002646   003440 710000 4                  TRA     s:6831
         4 002647   003440 710000 4                  TRA     s:6831
         4 002650   002673 710000 4                  TRA     s:6721
         4 002651   002710 710000 4                  TRA     s:6724
         4 002652   002725 710000 4                  TRA     s:6727
         4 002653   003043 710000 4                  TRA     s:6748
         4 002654   003206 710000 4                  TRA     s:6774
         4 002655   003440 710000 4                  TRA     s:6831
         4 002656   003440 710000 4                  TRA     s:6831
         4 002657   003440 710000 4                  TRA     s:6831
         4 002660   003221 710000 4                  TRA     s:6779
         4 002661   003440 710000 4                  TRA     s:6831
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:196  
         4 002662   003247 710000 4                  TRA     s:6787
         4 002663   003247 710000 4                  TRA     s:6787
         4 002664   003440 710000 4                  TRA     s:6831
         4 002665   003440 710000 4                  TRA     s:6831
         4 002666   003440 710000 4                  TRA     s:6831
         4 002667   003440 710000 4                  TRA     s:6831
         4 002670   003440 710000 4                  TRA     s:6831
         4 002671   003440 710000 4                  TRA     s:6831
         4 002672   003206 710000 4                  TRA     s:6774

     1151     6720    4           CASE(1); /* 36 bit binary...comp word */

     1152     6721    4               CALL CHARBIN(J,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));

   6721  4 002673   000000 235000 xsym               LDA     X
         4 002674   000001 735000                    ALS     1
         4 002675   204147 235105                    LDA     CALCKY,AL,AUTO
         4 002676   000000 236000 xsym               LDQ     X
         4 002677   000001 736000                    QLS     1
         4 002700   204150 721106                    LXL1    CALCKY+1,QL,AUTO
         4 002701   000000 305445                    DTB
         4 002702   000000 030011 xsym               NDSC9   RBUF,A                   cn=0,s=nosgn,sf=0,n=*X1
         4 002703   000000 000004 xsym               NDSC9   J                        cn=0,s=lsgnf,sf=0,n=4

     1153     6722    4               CALC$->COMP_WORD = J;

   6722  4 002704   003100 060400                    CSL     bolr='003'O
         4 002705   000000 000044 xsym               BDSC    J                        by=0,bit=0,n=36
         4 002706   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36
         4 002707   003466 710000 4                  TRA     s:6839

     1154     6723    4           CASE(2); /* 18 bit binary...comp half */

     1155     6724    4               CALL CHARBIN(J,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));

   6724  4 002710   000000 235000 xsym               LDA     X
         4 002711   000001 735000                    ALS     1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:197  
         4 002712   204147 235105                    LDA     CALCKY,AL,AUTO
         4 002713   000000 236000 xsym               LDQ     X
         4 002714   000001 736000                    QLS     1
         4 002715   204150 721106                    LXL1    CALCKY+1,QL,AUTO
         4 002716   000000 305445                    DTB
         4 002717   000000 030011 xsym               NDSC9   RBUF,A                   cn=0,s=nosgn,sf=0,n=*X1
         4 002720   000000 000004 xsym               NDSC9   J                        cn=0,s=lsgnf,sf=0,n=4

     1156     6725    4               CALC$->COMP_HALF = J;

   6725  4 002721   003100 061400                    CSR     bolr='003'O
         4 002722   000000 000044 xsym               BDSC    J                        by=0,bit=0,n=36
         4 002723   000000 000022                    BDSC    0,,PR0                   by=0,bit=0,n=18
         4 002724   003466 710000 4                  TRA     s:6839

     1157     6726    4           CASE(3); /* unsigned packed decimal */

     1158     6727    4               CALL INDEX1(J,'.',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));

   6727  4 002725   000000 235000 xsym               LDA     X
         4 002726   000001 735000                    ALS     1
         4 002727   204147 235105                    LDA     CALCKY,AL,AUTO
         4 002730   000000 236000 xsym               LDQ     X
         4 002731   000001 736000                    QLS     1
         4 002732   204150 721106                    LXL1    CALCKY+1,QL,AUTO
         4 002733   000000 124445                    SCM     mask='000'O
         4 002734   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 002735   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 002736   000000 000000 xsym               ARG     J

     1159     6728    4               IF J < CALCKY.LENGTH(X) /*  FOUND DECIMAL POINT */

   6728  4 002737   000000 621006                    EAX1    0,QL
         4 002740   000000 236000 xsym               LDQ     J
         4 002741   002744 604000 4                  TMI     s:6730
         4 002742   204150 116111                    CMPQ    CALCKY+1,X1,AUTO
         4 002743   003002 603000 4                  TRC     s:6735
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:198  

     1160     6729    5               THEN DO;

     1161     6730    5                   INEIS.SCAL = J - CALCKY.LENGTH(X) + 1;

   6730  4 002744   204150 136111                    SBLQ    CALCKY+1,X1,AUTO
         4 002745   000001 036007                    ADLQ    1,DL
         4 002746   000006 736000                    QLS     6
         4 002747   000501 752002 0                  STCQ    INEIS,'02'O

     1162     6731    5                   INEIS.SIZE = CALCKY.LENGTH(X) - 1;

   6731  4 002750   204150 236111                    LDQ     CALCKY+1,X1,AUTO
         4 002751   000001 136007                    SBLQ    1,DL
         4 002752   000501 752001 0                  STCQ    INEIS,'01'O

     1163     6732    5        CALL CONCAT(ASCII_SOURCE,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),J),SUBSTR(RBUF.TEXT
              6732                  ,CALCKY.OFFSET(X)+J+1,CALCKY.LENGTH(X)-J-1));

   6732  4 002753   204147 235111                    LDA     CALCKY,X1,AUTO
         4 002754   204147 236111                    LDQ     CALCKY,X1,AUTO
         4 002755   000000 036000 xsym               ADLQ    J
         4 002756   206236 756100                    STQ     EXPO+5,,AUTO
         4 002757   204150 236111                    LDQ     CALCKY+1,X1,AUTO
         4 002760   000000 136000 xsym               SBLQ    J
         4 002761   000000 722000 xsym               LXL2    J
         4 002762   040000 100445                    MLR     fill='040'O
         4 002763   000000 000012 xsym               ADSC9   RBUF,A                   cn=0,n=*X2
         4 002764   000507 000310 0                  ADSC9   ASCII_SOURCE             cn=0,n=200
         4 002765   206237 756100                    STQ     EXPO+6,,AUTO
         4 002766   000000 236000 xsym               LDQ     J
         4 002767   000310 116007                    CMPQ    200,DL
         4 002770   003001 605000 4                  TPL     s:6733
         4 002771   206237 723100                    LXL3    EXPO+6,,AUTO
         4 002772   777777 624013                    EAX4    -1,X3
         4 002773   777467 625006                    EAX5    -201,QL
         4 002774   777777 665003                    ERX5    -1,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:199  
         4 002775   206236 235100                    LDA     EXPO+5,,AUTO
         4 002776   040046 100445                    MLR     fill='040'O
         4 002777   000000 200014 xsym               ADSC9   RBUF,A                   cn=1,n=*X4
         4 003000   000507 000015 0                  ADSC9   ASCII_SOURCE,Q           cn=0,n=*X5

     1164     6733    5                   END;

   6733  4 003001   003013 710000 4                  TRA     s:6739

     1165     6734    5               ELSE DO;

     1166     6735    5                   INEIS.SCAL = 0;

   6735  4 003002   000000 236003                    LDQ     0,DU
         4 003003   000501 752002 0                  STCQ    INEIS,'02'O

     1167     6736    5                   INEIS.SIZE = CALCKY.LENGTH(X);

   6736  4 003004   204150 236111                    LDQ     CALCKY+1,X1,AUTO
         4 003005   000501 752001 0                  STCQ    INEIS,'01'O

     1168     6737    5                   ASCII_SOURCE = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X));

   6737  4 003006   204147 235111                    LDA     CALCKY,X1,AUTO
         4 003007   204150 722111                    LXL2    CALCKY+1,X1,AUTO
         4 003010   040000 100445                    MLR     fill='040'O
         4 003011   000000 000012 xsym               ADSC9   RBUF,A                   cn=0,n=*X2
         4 003012   000507 000310 0                  ADSC9   ASCII_SOURCE             cn=0,n=200

     1169     6738    5                   END;

     1170     6739    4               INEIS.EISADDR = POFFW(ADDR(ASCII_SOURCE),B$IS$);

   6739  4 003013   000107 236000 5                  LDQ     71
         4 003014   000022 772000                    QRL     18
         4 003015   000000 235000 xsym               LDA     B$IS$
         4 003016   000022 771000                    ARL     18
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:200  
         4 003017   206236 755100                    STA     EXPO+5,,AUTO
         4 003020   206236 136100                    SBLQ    EXPO+5,,AUTO
         4 003021   000000 622006                    EAX2    0,QL
         4 003022   000501 742000 0                  STX2    INEIS

     1171     6740    4               INEIS.CN = 0;

   6740  4 003023   000053 236000 5                  LDQ     43
         4 003024   000501 356000 0                  ANSQ    INEIS

     1172     6741    4               INEIS.TN = 0;

   6741  4 003025   000054 236000 5                  LDQ     44
         4 003026   000501 356000 0                  ANSQ    INEIS

     1173     6742    4               INEIS.SIGN = 3; /*  NONE */

   6742  4 003027   030000 236007                    LDQ     12288,DL
         4 003030   000501 256000 0                  ORSQ    INEIS

     1174     6743    4               FREIS = ITEM.EIS(I);

   6743  4 003031   206230 236100                    LDQ     I,,AUTO
         4 003032   000006 402007                    MPY     6,DL
         4 003033   200040 235106                    LDA     FR_SAVE+3,QL,AUTO
         4 003034   000500 755000 0                  STA     FREIS

     1175     6744    4               FREIS$ = BUF$;

   6744  4 003035   000504 236000 0                  LDQ     BUF$
         4 003036   000477 756000 0                  STQ     FREIS$

     1176     6745    4               CALL ZIU$PACK;

   6745  4 003037   000000 631400 5                  EPPR1   0
         4 003040   000000 701000 xent               TSX1    ZIU$PACK
         4 003041   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:201  
         4 003042   003466 710000 4                  TRA     s:6839

     1177     6746
     1178     6747    4           CASE(4); /* Signed packed decimal */

     1179     6748    4               CALL INDEX1(J,'.',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X)));

   6748  4 003043   000000 235000 xsym               LDA     X
         4 003044   000001 735000                    ALS     1
         4 003045   204147 235105                    LDA     CALCKY,AL,AUTO
         4 003046   000000 236000 xsym               LDQ     X
         4 003047   000001 736000                    QLS     1
         4 003050   204150 721106                    LXL1    CALCKY+1,QL,AUTO
         4 003051   000000 124445                    SCM     mask='000'O
         4 003052   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 003053   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 003054   000000 000000 xsym               ARG     J

     1180     6749    4               IF J < CALCKY.LENGTH(X) /*  FOUND DECIMAL POINT */

   6749  4 003055   000000 621006                    EAX1    0,QL
         4 003056   000000 236000 xsym               LDQ     J
         4 003057   003062 604000 4                  TMI     s:6751
         4 003060   204150 116111                    CMPQ    CALCKY+1,X1,AUTO
         4 003061   003120 603000 4                  TRC     s:6756

     1181     6750    5               THEN DO;

     1182     6751    5                   INEIS.SCAL = J - CALCKY.LENGTH(X) + 1;

   6751  4 003062   204150 136111                    SBLQ    CALCKY+1,X1,AUTO
         4 003063   000001 036007                    ADLQ    1,DL
         4 003064   000006 736000                    QLS     6
         4 003065   000501 752002 0                  STCQ    INEIS,'02'O

     1183     6752    5                   INEIS.SIZE = CALCKY.LENGTH(X) - 1;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:202  
   6752  4 003066   204150 236111                    LDQ     CALCKY+1,X1,AUTO
         4 003067   000001 136007                    SBLQ    1,DL
         4 003070   000501 752001 0                  STCQ    INEIS,'01'O

     1184     6753    5        CALL CONCAT(ASCII_SOURCE,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),J),SUBSTR(RBUF.TEXT
              6753                  ,CALCKY.OFFSET(X)+J+1,CALCKY.LENGTH(X)-J-1));

   6753  4 003071   204147 235111                    LDA     CALCKY,X1,AUTO
         4 003072   204147 236111                    LDQ     CALCKY,X1,AUTO
         4 003073   000000 036000 xsym               ADLQ    J
         4 003074   206236 756100                    STQ     EXPO+5,,AUTO
         4 003075   204150 236111                    LDQ     CALCKY+1,X1,AUTO
         4 003076   000000 136000 xsym               SBLQ    J
         4 003077   000000 722000 xsym               LXL2    J
         4 003100   040000 100445                    MLR     fill='040'O
         4 003101   000000 000012 xsym               ADSC9   RBUF,A                   cn=0,n=*X2
         4 003102   000507 000310 0                  ADSC9   ASCII_SOURCE             cn=0,n=200
         4 003103   206237 756100                    STQ     EXPO+6,,AUTO
         4 003104   000000 236000 xsym               LDQ     J
         4 003105   000310 116007                    CMPQ    200,DL
         4 003106   003117 605000 4                  TPL     s:6754
         4 003107   206237 723100                    LXL3    EXPO+6,,AUTO
         4 003110   777777 624013                    EAX4    -1,X3
         4 003111   777467 625006                    EAX5    -201,QL
         4 003112   777777 665003                    ERX5    -1,DU
         4 003113   206236 235100                    LDA     EXPO+5,,AUTO
         4 003114   040046 100445                    MLR     fill='040'O
         4 003115   000000 200014 xsym               ADSC9   RBUF,A                   cn=1,n=*X4
         4 003116   000507 000015 0                  ADSC9   ASCII_SOURCE,Q           cn=0,n=*X5

     1185     6754    5                   END;

   6754  4 003117   003131 710000 4                  TRA     s:6760

     1186     6755    5               ELSE DO;

     1187     6756    5                   INEIS.SCAL = 0;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:203  

   6756  4 003120   000000 236003                    LDQ     0,DU
         4 003121   000501 752002 0                  STCQ    INEIS,'02'O

     1188     6757    5                   INEIS.SIZE = CALCKY.LENGTH(X);

   6757  4 003122   204150 236111                    LDQ     CALCKY+1,X1,AUTO
         4 003123   000501 752001 0                  STCQ    INEIS,'01'O

     1189     6758    5                   ASCII_SOURCE = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X));

   6758  4 003124   204147 235111                    LDA     CALCKY,X1,AUTO
         4 003125   204150 722111                    LXL2    CALCKY+1,X1,AUTO
         4 003126   040000 100445                    MLR     fill='040'O
         4 003127   000000 000012 xsym               ADSC9   RBUF,A                   cn=0,n=*X2
         4 003130   000507 000310 0                  ADSC9   ASCII_SOURCE             cn=0,n=200

     1190     6759    5                   END;

     1191     6760    4               INEIS.EISADDR = POFFW(ADDR(ASCII_SOURCE),B$IS$);

   6760  4 003131   000107 236000 5                  LDQ     71
         4 003132   000022 772000                    QRL     18
         4 003133   000000 235000 xsym               LDA     B$IS$
         4 003134   000022 771000                    ARL     18
         4 003135   206236 755100                    STA     EXPO+5,,AUTO
         4 003136   206236 136100                    SBLQ    EXPO+5,,AUTO
         4 003137   000000 622006                    EAX2    0,QL
         4 003140   000501 742000 0                  STX2    INEIS

     1192     6761    4               INEIS.CN = 0;

   6761  4 003141   000053 236000 5                  LDQ     43
         4 003142   000501 356000 0                  ANSQ    INEIS

     1193     6762    4               INEIS.TN = 0;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:204  
   6762  4 003143   000054 236000 5                  LDQ     44
         4 003144   000501 356000 0                  ANSQ    INEIS

     1194     6763    4               INEIS.SIGN = 1; /*  leading */

   6763  4 003145   000501 236000 0                  LDQ     INEIS
         4 003146   000055 376000 5                  ANQ     45
         4 003147   010000 276007                    ORQ     4096,DL
         4 003150   000501 756000 0                  STQ     INEIS

     1195     6764    5               IF (SUBSTR(ASCII_SOURCE,0,1)~='+') AND (SUBSTR(ASCII_SOURCE,0,1)~='-')
              6764                        THEN DO;

   6764  4 003151   000507 236000 0                  LDQ     ASCII_SOURCE
         4 003152   777000 376003                    ANQ     -512,DU
         4 003153   053000 116003                    CMPQ    22016,DU
         4 003154   003174 600000 4                  TZE     s:6769
         4 003155   000507 236000 0                  LDQ     ASCII_SOURCE
         4 003156   777000 376003                    ANQ     -512,DU
         4 003157   055000 116003                    CMPQ    23040,DU
         4 003160   003174 600000 4                  TZE     s:6769

     1196     6765    5                   CALL CONCAT(TEMP,'+',ASCII_SOURCE);

   6765  4 003161   053000 236003                    LDQ     22016,DU
         4 003162   000571 756000 0                  STQ     TEMP
         4 003163   040000 100400                    MLR     fill='040'O
         4 003164   000507 000307 0                  ADSC9   ASCII_SOURCE             cn=0,n=199
         4 003165   000571 200307 0                  ADSC9   TEMP                     cn=1,n=199

     1197     6766    5                   ASCII_SOURCE = TEMP;

   6766  4 003166   040000 100400                    MLR     fill='040'O
         4 003167   000571 000310 0                  ADSC9   TEMP                     cn=0,n=200
         4 003170   000507 000310 0                  ADSC9   ASCII_SOURCE             cn=0,n=200

     1198     6767    5                   INEIS.SIZE = INEIS.SIZE + 1;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:205  

   6767  4 003171   000501 236000 0                  LDQ     INEIS
         4 003172   000001 036007                    ADLQ    1,DL
         4 003173   000501 752001 0                  STCQ    INEIS,'01'O

     1199     6768    5                   END;

     1200     6769    4               FREIS = ITEM.EIS(I);

   6769  4 003174   206230 236100                    LDQ     I,,AUTO
         4 003175   000006 402007                    MPY     6,DL
         4 003176   200040 235106                    LDA     FR_SAVE+3,QL,AUTO
         4 003177   000500 755000 0                  STA     FREIS

     1201     6770    4               FREIS$ = BUF$;

   6770  4 003200   000504 236000 0                  LDQ     BUF$
         4 003201   000477 756000 0                  STQ     FREIS$

     1202     6771    4               CALL ZIU$PACK;

   6771  4 003202   000000 631400 5                  EPPR1   0
         4 003203   000000 701000 xent               TSX1    ZIU$PACK
         4 003204   000000 011000                    NOP     0
         4 003205   003466 710000 4                  TRA     s:6839

     1203     6772
     1204     6773    4           CASE(5,19); /* ASCII character and character varying */

     1205     6774    4               CALC$->BUFAREA = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X));

   6774  4 003206   000000 235000 xsym               LDA     X
         4 003207   000001 735000                    ALS     1
         4 003210   204147 235105                    LDA     CALCKY,AL,AUTO
         4 003211   000000 236000 xsym               LDQ     X
         4 003212   000001 736000                    QLS     1
         4 003213   204150 721106                    LXL1    CALCKY+1,QL,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:206  
         4 003214   206217 722100                    LXL2    SIZE,,AUTO
         4 003215   040140 100445                    MLR     fill='040'O
         4 003216   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 003217   000000 000012                    ADSC9   0,,PR0                   cn=0,n=*X2
         4 003220   003466 710000 4                  TRA     s:6839

     1206     6775    4           CASE(9); /* unspecified 9 bit units */

     1207     6776         /*E* ERROR: ZIU-DBU#OCT-C
     1208     6777                   MESSAGE: Key "%U1" is defined as UNSPEC and must be entered in octal.
     1209     6778                   */
     1210     6779    4               ERR_INSERT.CNT(0) = CALCKY.LENGTH(X);

   6779  4 003221   000000 235000 xsym               LDA     X
         4 003222   000001 735000                    ALS     1
         4 003223   204150 236105                    LDQ     CALCKY+1,AL,AUTO
         4 003224   000033 736000                    QLS     27
         4 003225   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1211     6780    4              ERR_INSERT.TEXT(0) = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X))
              6780                        ;

   6780  4 003226   204147 235105                    LDA     CALCKY,AL,AUTO
         4 003227   000000 236000 xsym               LDQ     X
         4 003230   000001 736000                    QLS     1
         4 003231   204150 721106                    LXL1    CALCKY+1,QL,AUTO
         4 003232   040000 100445                    MLR     fill='040'O
         4 003233   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 003234   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1212     6781    4               ERRCODESF.ERR# = DBU#OCT;

   6781  4 003235   000000 236000 xsym               LDQ     ERRCODESF
         4 003236   000007 376000 5                  ANQ     7
         4 003237   216240 276007                    ORQ     72864,DL
         4 003240   000000 756000 xsym               STQ     ERRCODESF

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:207  
     1213     6782    4               MSGCODE = ERRCODE_RDEF;

   6782  4 003241   000000 756000 xsym               STQ     MSGCODE

     1214     6783    4               CALL SYS_FUNC_ERRMSG;

   6783  4 003242   000000 631400 5                  EPPR1   0
         4 003243   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 003244   000000 011000                    NOP     0

     1215     6784    4               ALTRETURN;

   6784  4 003245   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 003246   000000 702211                    TSX2  ! 0,X1

     1216     6785
     1217     6786    4           CASE(11,12); /* single and double precision floating point */

     1218     6787    4               FLAG = %NO#;

   6787  4 003247   206225 450100                    STZ     FLAG,,AUTO

     1219     6788    4               CALL INDEX1(AN_DIGITS,'E',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.
              6788                        LENGTH(X)));

   6788  4 003250   000000 235000 xsym               LDA     X
         4 003251   000001 735000                    ALS     1
         4 003252   204147 235105                    LDA     CALCKY,AL,AUTO
         4 003253   000000 236000 xsym               LDQ     X
         4 003254   000001 736000                    QLS     1
         4 003255   204150 721106                    LXL1    CALCKY+1,QL,AUTO
         4 003256   000000 124445                    SCM     mask='000'O
         4 003257   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 003260   000056 000001 5                  ADSC9   46                       cn=0,n=1
         4 003261   000461 000000 0                  ARG     AN_DIGITS

     1220     6789    4               IF (SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),1) = '+') OR (SUBSTR(RBUF.TEXT,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:208  
              6789                        CALCKY.OFFSET(X),1) = '-')

   6789  4 003262   204147 235106                    LDA     CALCKY,QL,AUTO
         4 003263   040000 106405                    CMPC    fill='040'O
         4 003264   000000 000001 xsym               ADSC9   RBUF,A                   cn=0,n=1
         4 003265   000060 000001 5                  ADSC9   48                       cn=0,n=1
         4 003266   003273 600000 4                  TZE     s:6791
         4 003267   040000 106405                    CMPC    fill='040'O
         4 003270   000000 000001 xsym               ADSC9   RBUF,A                   cn=0,n=1
         4 003271   000057 000001 5                  ADSC9   47                       cn=0,n=1
         4 003272   003302 601000 4                  TNZ     s:6794

     1221     6790    5               THEN DO;

     1222     6791    5                   ASCII_NUM = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),AN_DIGITS);

   6791  4 003273   000461 721000 0                  LXL1    AN_DIGITS
         4 003274   040000 100445                    MLR     fill='040'O
         4 003275   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 003276   000440 000100 0                  ADSC9   ASCII_NUM                cn=0,n=64

     1223     6792    5                   FLAG = %YES#;

   6792  4 003277   400000 236003                    LDQ     -131072,DU
         4 003300   206225 756100                    STQ     FLAG,,AUTO

     1224     6793    5                   END;

   6793  4 003301   003310 710000 4                  TRA     s:6795

     1225     6794    4               ELSE CALL CONCAT(ASCII_NUM,'+',SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),
              6794                        AN_DIGITS));

   6794  4 003302   053000 236003                    LDQ     22016,DU
         4 003303   000440 756000 0                  STQ     ASCII_NUM
         4 003304   000461 721000 0                  LXL1    AN_DIGITS
         4 003305   040000 100445                    MLR     fill='040'O
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:209  
         4 003306   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 003307   000440 200077 0                  ADSC9   ASCII_NUM                cn=1,n=63

     1226     6795    5               IF AN_DIGITS >= CALCKY.LENGTH(X) THEN DO;

   6795  4 003310   000000 235000 xsym               LDA     X
         4 003311   000001 735000                    ALS     1
         4 003312   000461 236000 0                  LDQ     AN_DIGITS
         4 003313   003330 604000 4                  TMI     s:6804
         4 003314   204150 116105                    CMPQ    CALCKY+1,AL,AUTO
         4 003315   003330 602000 4                  TNC     s:6804

     1227     6796         /*   ERROR: ZIU-DBU#FLPT-C
     1228     6797            MESSAGE: Error in given floating point key.
     1229     6798         */
     1230     6799    5                   ERRCODESF.ERR# = DBU#FLPT;

   6799  4 003316   000000 236000 xsym               LDQ     ERRCODESF
         4 003317   000007 376000 5                  ANQ     7
         4 003320   216260 276007                    ORQ     72880,DL
         4 003321   000000 756000 xsym               STQ     ERRCODESF

     1231     6800    5                   MSGCODE = ERRCODE_RDEF;

   6800  4 003322   000000 756000 xsym               STQ     MSGCODE

     1232     6801    5                   CALL SYS_FUNC_ERRMSG;

   6801  4 003323   000000 631400 5                  EPPR1   0
         4 003324   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 003325   000000 011000                    NOP     0

     1233     6802    5                   ALTRETURN;

   6802  4 003326   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 003327   000000 702211                    TSX2  ! 0,X1

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:210  
     1234     6803    5                   END;
     1235     6804    4               IF SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+AN_DIGITS+1,1) = '-'

   6804  4 003330   204147 036105                    ADLQ    CALCKY,AL,AUTO
         4 003331   040000 106406                    CMPC    fill='040'O
         4 003332   000000 200001 xsym               ADSC9   RBUF,Q                   cn=1,n=1
         4 003333   000057 000001 5                  ADSC9   47                       cn=0,n=1
         4 003334   003352 601000 4                  TNZ     s:6809

     1236     6805    5               THEN DO;

     1237     6806    5                  CALL CHARBIN(AN_POWER_10,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+AN_DIGITS
              6806                            +2,CALCKY.LENGTH(X)-AN_DIGITS-2));

   6806  4 003335   204147 236105                    LDQ     CALCKY,AL,AUTO
         4 003336   000461 036000 0                  ADLQ    AN_DIGITS
         4 003337   206236 756100                    STQ     EXPO+5,,AUTO
         4 003340   204150 236105                    LDQ     CALCKY+1,AL,AUTO
         4 003341   000461 136000 0                  SBLQ    AN_DIGITS
         4 003342   777776 620006                    EAX0    -2,QL
         4 003343   206236 236100                    LDQ     EXPO+5,,AUTO
         4 003344   000000 305446                    DTB
         4 003345   000000 430010 xsym               NDSC9   RBUF,Q                   cn=2,s=nosgn,sf=0,n=*X0
         4 003346   000462 000004 0                  NDSC9   AN_POWER_10              cn=0,s=lsgnf,sf=0,n=4

     1238     6807    5                   AN_POWER_10 = -AN_POWER_10;

   6807  4 003347   000462 336000 0                  LCQ     AN_POWER_10
         4 003350   000462 756000 0                  STQ     AN_POWER_10

     1239     6808    5                   END;

   6808  4 003351   003405 710000 4                  TRA     s:6812

     1240     6809    4               ELSE IF SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+AN_DIGITS+1,1) = '+'

   6809  4 003352   204147 236105                    LDQ     CALCKY,AL,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:211  
         4 003353   000461 036000 0                  ADLQ    AN_DIGITS
         4 003354   040000 106406                    CMPC    fill='040'O
         4 003355   000000 200001 xsym               ADSC9   RBUF,Q                   cn=1,n=1
         4 003356   000060 000001 5                  ADSC9   48                       cn=0,n=1
         4 003357   003373 601000 4                  TNZ     s:6811

     1241     6810    4                   THEN CALL CHARBIN(AN_POWER_10,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+
              6810                            AN_DIGITS+2,CALCKY.LENGTH(X)-AN_DIGITS-2));

   6810  4 003360   204147 236105                    LDQ     CALCKY,AL,AUTO
         4 003361   000461 036000 0                  ADLQ    AN_DIGITS
         4 003362   206236 756100                    STQ     EXPO+5,,AUTO
         4 003363   204150 236105                    LDQ     CALCKY+1,AL,AUTO
         4 003364   000461 136000 0                  SBLQ    AN_DIGITS
         4 003365   777776 620006                    EAX0    -2,QL
         4 003366   206236 236100                    LDQ     EXPO+5,,AUTO
         4 003367   000000 305446                    DTB
         4 003370   000000 430010 xsym               NDSC9   RBUF,Q                   cn=2,s=nosgn,sf=0,n=*X0
         4 003371   000462 000004 0                  NDSC9   AN_POWER_10              cn=0,s=lsgnf,sf=0,n=4
         4 003372   003405 710000 4                  TRA     s:6812

     1242     6811    4                   ELSE CALL CHARBIN(AN_POWER_10,SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X)+
              6811                            AN_DIGITS+1,CALCKY.LENGTH(X)-AN_DIGITS-1));

   6811  4 003373   204147 236105                    LDQ     CALCKY,AL,AUTO
         4 003374   000461 036000 0                  ADLQ    AN_DIGITS
         4 003375   206236 756100                    STQ     EXPO+5,,AUTO
         4 003376   204150 236105                    LDQ     CALCKY+1,AL,AUTO
         4 003377   000461 136000 0                  SBLQ    AN_DIGITS
         4 003400   777777 620006                    EAX0    -1,QL
         4 003401   206236 236100                    LDQ     EXPO+5,,AUTO
         4 003402   000000 305446                    DTB
         4 003403   000000 230010 xsym               NDSC9   RBUF,Q                   cn=1,s=nosgn,sf=0,n=*X0
         4 003404   000462 000004 0                  NDSC9   AN_POWER_10              cn=0,s=lsgnf,sf=0,n=4

     1243     6812    4               IF FLAG THEN AN_DIGITS = AN_DIGITS-1; /* DONT COUNT SIGN */

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:212  
   6812  4 003405   206225 234100                    SZN     FLAG,,AUTO
         4 003406   003411 605000 4                  TPL     s:6813

   6812  4 003407   000001 336007                    LCQ     1,DL
         4 003410   000461 056000 0                  ASQ     AN_DIGITS

     1244     6813    4               IF ITEM.TYPE(I) = 11

   6813  4 003411   206230 236100                    LDQ     I,,AUTO
         4 003412   000006 402007                    MPY     6,DL
         4 003413   200036 235106                    LDA     FR_SAVE+1,QL,AUTO
         4 003414   000013 115007                    CMPA    11,DL
         4 003415   003427 601000 4                  TNZ     s:6821

     1245     6814    5               THEN DO; CALL XPN_7LSPTOR(SNGL,

   6814  4 003416   000062 630400 5                  EPPR0   50
         4 003417   000061 631400 5                  EPPR1   49
         4 003420   000000 701000 xent               TSX1    XPN_7LSPTOR
         4 003421   004255 702000 4                  TSX2    ALTEND_ZIU$Q2PR

     1246     6815    5                      ASCII_NUM,
     1247     6816    5                      AN_DIGITS,
     1248     6817    5                      AN_POWER_10)
     1249     6818    5                      ALTRET(ALTEND_ZIU$Q2PR);
     1250     6819    5                   CALC$->BIT36 = SNGL;

   6819  4 003422   000505 470400 0                  LDP0    CALC$
         4 003423   003100 060400                    CSL     bolr='003'O
         4 003424   000434 000044 0                  BDSC    SNGL                     by=0,bit=0,n=36
         4 003425   000000 000044                    BDSC    0,,PR0                   by=0,bit=0,n=36

     1251     6820    5                   END;

   6820  4 003426   003466 710000 4                  TRA     s:6839

     1252     6821    5               ELSE DO; CALL XPN_7LSPTOD(DOUBLE,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:213  

   6821  4 003427   000066 630400 5                  EPPR0   54
         4 003430   000061 631400 5                  EPPR1   49
         4 003431   000000 701000 xent               TSX1    XPN_7LSPTOD
         4 003432   004255 702000 4                  TSX2    ALTEND_ZIU$Q2PR

     1253     6822    5                      ASCII_NUM,
     1254     6823    5                      AN_DIGITS,
     1255     6824    5                      AN_POWER_10)
     1256     6825    5                      ALTRET(ALTEND_ZIU$Q2PR);
     1257     6826    5                   CALC$->BIT72 = DOUBLE; END;

   6826  4 003433   000505 470400 0                  LDP0    CALC$
         4 003434   003100 060400                    CSL     bolr='003'O
         4 003435   000436 000110 0                  BDSC    DOUBLE                   by=0,bit=0,n=72
         4 003436   000000 000110                    BDSC    0,,PR0                   by=0,bit=0,n=72

   6826  4 003437   003466 710000 4                  TRA     s:6839

     1258     6827    4           CASE(ELSE);

     1259     6828         /*E* ERROR: ZIU-DBU#BADTYPE-C
     1260     6829                   MESSAGE: Unsupported item type for key "%U1".
     1261     6830                   */
     1262     6831    4               ERR_INSERT.CNT(0) = CALCKY.LENGTH(X);

   6831  4 003440   000000 235000 xsym               LDA     X
         4 003441   000001 735000                    ALS     1
         4 003442   204150 236105                    LDQ     CALCKY+1,AL,AUTO
         4 003443   000033 736000                    QLS     27
         4 003444   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1263     6832    4              ERR_INSERT.TEXT(0) = SUBSTR(RBUF.TEXT,CALCKY.OFFSET(X),CALCKY.LENGTH(X))
              6832                        ;

   6832  4 003445   204147 235105                    LDA     CALCKY,AL,AUTO
         4 003446   000000 236000 xsym               LDQ     X
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:214  
         4 003447   000001 736000                    QLS     1
         4 003450   204150 721106                    LXL1    CALCKY+1,QL,AUTO
         4 003451   040000 100445                    MLR     fill='040'O
         4 003452   000000 000011 xsym               ADSC9   RBUF,A                   cn=0,n=*X1
         4 003453   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1264     6833    4               ERRCODESF.ERR# = DBU#BADTYPE;

   6833  4 003454   000000 236000 xsym               LDQ     ERRCODESF
         4 003455   000007 376000 5                  ANQ     7
         4 003456   216220 276007                    ORQ     72848,DL
         4 003457   000000 756000 xsym               STQ     ERRCODESF

     1265     6834    4               MSGCODE = ERRCODE_RDEF;

   6834  4 003460   000000 756000 xsym               STQ     MSGCODE

     1266     6835    4               CALL SYS_FUNC_ERRMSG;

   6835  4 003461   000000 631400 5                  EPPR1   0
         4 003462   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 003463   000000 011000                    NOP     0

     1267     6836    4               ALTRETURN;

   6836  4 003464   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 003465   000000 702211                    TSX2  ! 0,X1

     1268     6837
     1269     6838    4               END;

     1270     6839    3           END;

   6839  4 003466   000000 054000 xsym               AOS     X
         4 003467   000000 236000 xsym               LDQ     X
         4 003470   201523 116100                    CMPQ    KEY_ARRAY,,AUTO
         4 003471   002463 604000 4                  TMI     s:6692
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:215  

     1271     6840        /*
     1272     6841          given a record and it's field info, ZIC$CALC will return
     1273     6842          the page and line number (DBK) where this record calcs to
     1274     6843        */
     1275     6844    2       PG_NO = 0;

   6844  4 003472   204144 450100                    STZ     PG_NO,,AUTO

     1276     6845    2       LN_NO = 0;

   6845  4 003473   204145 450100                    STZ     LN_NO,,AUTO

     1277     6846    2       CALL ZIC$CALC(BUFAREA,KEY_ARRAY,AC_REC,RA_REC,ITEM,PG_NO,LN_NO,CALCHDRS);

   6846  4 003474   200003 630500                    EPPR0   CALCHDRS,,AUTO
         4 003475   206245 450500                    STP0    EXPO+12,,AUTO
         4 003476   204145 631500                    EPPR1   LN_NO,,AUTO
         4 003477   206244 451500                    STP1    EXPO+11,,AUTO
         4 003500   204144 633500                    EPPR3   PG_NO,,AUTO
         4 003501   206243 453500                    STP3    EXPO+10,,AUTO
         4 003502   200033 634500                    EPPR4   ITEM,,AUTO
         4 003503   206242 454500                    STP4    EXPO+9,,AUTO
         4 003504   204140 635500                    EPPR5   RA_REC,,AUTO
         4 003505   206241 455500                    STP5    EXPO+8,,AUTO
         4 003506   200004 636500                    EPPR6   AC_REC,,AUTO
         4 003507   206240 456500                    STP6    EXPO+7,,AUTO
         4 003510   201523 637500                    EPPR7   KEY_ARRAY,,AUTO
         4 003511   206237 457500                    STP7    EXPO+6,,AUTO
         4 003512   000504 236000 0                  LDQ     BUF$
         4 003513   206236 756100                    STQ     EXPO+5,,AUTO
         4 003514   206236 630500                    EPPR0   EXPO+5,,AUTO
         4 003515   000110 631400 5                  EPPR1   72
         4 003516   000000 701000 xent               TSX1    ZIC$CALC
         4 003517   000000 011000                    NOP     0

     1278     6847        /* convert ITEM entries to bits */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:216  
     1279     6848    3       DO X = 0 TO KEY_ARRAY.SIZ-1;

   6848  4 003520   000000 450000 xsym               STZ     X
         4 003521   003570 710000 4                  TRA     s:6857+1

     1280     6849    3           I = KEY_ARRAY.MEMBER(X);

   6849  4 003522   000000 720000 xsym               LXL0    X
         4 003523   201524 235110                    LDA     KEY_ARRAY+1,X0,AUTO
         4 003524   206230 755100                    STA     I,,AUTO

     1281     6850    4           DO CASE(ITEM.TYPE(I));

   6850  4 003525   206230 236100                    LDQ     I,,AUTO
         4 003526   000006 402007                    MPY     6,DL
         4 003527   200036 235106                    LDA     FR_SAVE+1,QL,AUTO
         4 003530   000005 135007                    SBLA    5,DL
         4 003531   000005 115007                    CMPA    5,DL
         4 003532   003534 602005 4                  TNC     s:6850+7,AL
         4 003533   003546 710000 4                  TRA     s:6854
         4 003534   003541 710000 4                  TRA     s:6852
         4 003535   003546 710000 4                  TRA     s:6854
         4 003536   003546 710000 4                  TRA     s:6854
         4 003537   003546 710000 4                  TRA     s:6854
         4 003540   003541 710000 4                  TRA     s:6852

     1282     6851    4           CASE(5,9);

     1283     6852    4               ITEM.LEN(I) = 9*ITEM.LEN(I);

   6852  4 003541   000000 621006                    EAX1    0,QL
         4 003542   200035 236106                    LDQ     ITEM+2,QL,AUTO
         4 003543   000011 402007                    MPY     9,DL
         4 003544   200035 756111                    STQ     ITEM+2,X1,AUTO
         4 003545   003557 710000 4                  TRA     s:6856

     1284     6853    4           CASE(ELSE);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:217  

     1285     6854    4               ITEM.LEN(I) = (4*ITEM.LEN(I))+((1+ITEM.LEN(I))/2);

   6854  4 003546   000000 621006                    EAX1    0,QL
         4 003547   200035 236106                    LDQ     ITEM+2,QL,AUTO
         4 003550   000001 036007                    ADLQ    1,DL
         4 003551   000002 506007                    DIV     2,DL
         4 003552   206236 756100                    STQ     EXPO+5,,AUTO
         4 003553   200035 236111                    LDQ     ITEM+2,X1,AUTO
         4 003554   000002 736000                    QLS     2
         4 003555   206236 036100                    ADLQ    EXPO+5,,AUTO
         4 003556   200035 756111                    STQ     ITEM+2,X1,AUTO

     1286     6855    4               END;

     1287     6856    3           ITEM.OFFSET(I)=4*ITEM.OFFSET(I)+((1+ITEM.OFFSET(I))/2);

   6856  4 003557   200034 236111                    LDQ     ITEM+1,X1,AUTO
         4 003560   000001 036007                    ADLQ    1,DL
         4 003561   000002 506007                    DIV     2,DL
         4 003562   206236 756100                    STQ     EXPO+5,,AUTO
         4 003563   200034 236111                    LDQ     ITEM+1,X1,AUTO
         4 003564   000002 736000                    QLS     2
         4 003565   206236 036100                    ADLQ    EXPO+5,,AUTO
         4 003566   200034 756111                    STQ     ITEM+1,X1,AUTO

     1288     6857    3           END;

   6857  4 003567   000000 054000 xsym               AOS     X
         4 003570   000000 236000 xsym               LDQ     X
         4 003571   201523 116100                    CMPQ    KEY_ARRAY,,AUTO
         4 003572   003522 604000 4                  TMI     s:6849

     1289     6858        /*  read page with this key */
     1290     6859    2       I_O_SIZE = 1;

   6859  4 003573   000001 235007                    LDA     1,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:218  
         4 003574   000000 755000 xsym               STA     I_O_SIZE

     1291     6860    2       RB = PG_NO;

   6860  4 003575   204144 235100                    LDA     PG_NO,,AUTO
         4 003576   000000 755000 xsym               STA     RB

     1292     6861    2       CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);

   6861  4 003577   006702 701000 4                  TSX1    READ_PAGE
         4 003600   004255 702000 4                  TSX2    ALTEND_ZIU$Q2PR

     1293     6862    2       DATA$ = ADDR(I_O_BUF(0));

   6862  4 003601   000000 236000 xsym               LDQ     I_O_BUF$
         4 003602   000000 756000 xsym               STQ     DATA$

     1294     6863    2       REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-LN_NO));

   6863  4 003603   000000 235003                    LDA     0,DU
         4 003604   204145 135100                    SBLA    LN_NO,,AUTO
         4 003605   000001 735000                    ALS     1
         4 003606   000000 470400 xsym               LDP0    DATA$
         4 003607   000100 100505                    MLR     fill='000'O
         4 003610   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 003611   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 003612   206236 236100                    LDQ     EXPO+5,,AUTO
         4 003613   000022 732000                    QRS     18
         4 003614   000020 736000                    QLS     16
         4 003615   000003 036003                    ADLQ    3,DU
         4 003616   000000 036000 xsym               ADLQ    DATA$
         4 003617   000000 756000 xsym               STQ     REC$

     1295     6864        /* follow entire calc chain */
     1296     6865    2       INDX = 0;

   6865  4 003620   000415 450000 0                  STZ     INDX
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:219  

     1297     6866        /* first record in chain is calc */
     1298     6867    2       SET_INDX = 0;

   6867  4 003621   000404 450000 0                  STZ     SET_INDX

     1299     6868    3       DO WHILE (MSTR_REF.NAME(SET_XREF.MSTRINDX(SET_INDX)) ~= '*CALC');

   6868  4 003622   000404 235000 0                  LDA     SET_INDX
         4 003623   000002 735000                    ALS     2
         4 003624   000000 471400 xsym               LDP1    SET_XREF$
         4 003625   100000 236105                    LDQ     0,AL,PR1
         4 003626   000022 732000                    QRS     18
         4 003627   000012 402007                    MPY     10,DL
         4 003630   000002 736000                    QLS     2
         4 003631   000000 473400 xsym               LDP3    MSTR$
         4 003632   040000 106506                    CMPC    fill='040'O
         4 003633   300001 400036                    ADSC9   1,Q,PR3                  cn=2,n=30
         4 003634   000004 000005 3                  ADSC9   CHAR_SET+4               cn=0,n=5
         4 003635   003653 600000 4                  TZE     s:6871

     1300     6869    3           SET_INDX = SET_INDX + 1;

   6869  4 003636   000404 054000 0                  AOS     SET_INDX

     1301     6870    3           END;

   6870  4 003637   000404 235000 0                  LDA     SET_INDX
         4 003640   000002 735000                    ALS     2
         4 003641   000000 470400 xsym               LDP0    SET_XREF$
         4 003642   000000 236105                    LDQ     0,AL,PR0
         4 003643   000022 732000                    QRS     18
         4 003644   000012 402007                    MPY     10,DL
         4 003645   000002 736000                    QLS     2
         4 003646   000000 471400 xsym               LDP1    MSTR$
         4 003647   040000 106506                    CMPC    fill='040'O
         4 003650   100001 400036                    ADSC9   1,Q,PR1                  cn=2,n=30
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:220  
         4 003651   000004 000005 3                  ADSC9   CHAR_SET+4               cn=0,n=5
         4 003652   003636 601000 4                  TNZ     s:6869

     1302     6871    2       KCNT = -1;

   6871  4 003653   000001 335007                    LCA     1,DL
         4 003654   000000 755000 xsym               STA     KCNT

     1303     6872    2       ZI$DIR.LOCALKEY = %NO#;

   6872  4 003655   000111 236000 5                  LDQ     73
         4 003656   000125 356000 xsym               ANSQ    ZI$DIR+85

     1304     6873    2       FLAG = %YES#;

   6873  4 003657   400000 236003                    LDQ     -131072,DU
         4 003660   206225 756100                    STQ     FLAG,,AUTO

     1305     6874    3       DO WHILE ((MSTR_REF.TYPE(INDX) ~= 4000) OR FLAG);

   6874  4 003661   004243 710000 4                  TRA     s:6950

     1306     6875    3           FLAG = %NO#;

   6875  4 003662   206225 450100                    STZ     FLAG,,AUTO

     1307     6876         /* determine dbkey of next in chain from tables */
     1308     6877    3           EISNXT = SET_XREF.EIS.NEXT(SET_INDX);

   6877  4 003663   000404 235000 0                  LDA     SET_INDX
         4 003664   000002 735000                    ALS     2
         4 003665   000000 470400 xsym               LDP0    SET_XREF$
         4 003666   000003 235105                    LDA     3,AL,PR0
         4 003667   206220 755100                    STA     EISNXT,,AUTO

     1309     6878    3           SETNXT$ = PINCRW(REC$,NXTPT.EISADDR);

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:221  
   6878  4 003670   206220 220100                    LDX0    EISNXT,,AUTO
         4 003671   077777 360003                    ANX0    32767,DU
         4 003672   000000 636010                    EAQ     0,X0
         4 003673   000000 036000 xsym               ADLQ    REC$
         4 003674   000653 756000 0                  STQ     SETNXT$

     1310     6879    3           SETNXT$ = PINCRC(SETNXT$,NXTPT.BYT_OFF/2);

   6879  4 003675   206220 236100                    LDQ     EISNXT,,AUTO
         4 003676   000017 772000                    QRL     15
         4 003677   000007 376007                    ANQ     7,DL
         4 003700   000001 772000                    QRL     1
         4 003701   000020 736000                    QLS     16
         4 003702   000653 036000 0                  ADLQ    SETNXT$
         4 003703   000653 756000 0                  STQ     SETNXT$

     1311     6880    4           DO CASE(NXTPT.SIZE);

   6880  4 003704   206220 721100                    LXL1    EISNXT,,AUTO
         4 003705   000077 361003                    ANX1    63,DU
         4 003706   000005 101003                    CMPX1   5,DU
         4 003707   003711 602011 4                  TNC     s:6880+5,X1
         4 003710   003734 710000 4                  TRA     s:6886
         4 003711   003734 710000 4                  TRA     s:6886
         4 003712   003734 710000 4                  TRA     s:6886
         4 003713   003716 710000 4                  TRA     s:6881
         4 003714   003723 710000 4                  TRA     s:6882
         4 003715   003730 710000 4                  TRA     s:6883

     1312     6881    4           CASE(2); NEXT_DBKEY = SETNXT$-> SZ2;

   6881  4 003716   000653 471400 0                  LDP1    SETNXT$
         4 003717   000100 101500                    MRL     fill='000'O
         4 003720   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 003721   206223 000004                    ADSC9   NEXT_DBKEY,,AUTO         cn=0,n=4
         4 003722   003734 710000 4                  TRA     s:6886

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:222  
     1313     6882    4           CASE(3); NEXT_DBKEY = SETNXT$-> SZ3;

   6882  4 003723   000653 471400 0                  LDP1    SETNXT$
         4 003724   000100 101500                    MRL     fill='000'O
         4 003725   100000 000003                    ADSC9   0,,PR1                   cn=0,n=3
         4 003726   206223 000004                    ADSC9   NEXT_DBKEY,,AUTO         cn=0,n=4
         4 003727   003734 710000 4                  TRA     s:6886

     1314     6883    4           CASE(4); NEXT_DBKEY = SETNXT$-> SZ4;

   6883  4 003730   000653 471400 0                  LDP1    SETNXT$
         4 003731   000100 100500                    MLR     fill='000'O
         4 003732   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 003733   206223 000004                    ADSC9   NEXT_DBKEY,,AUTO         cn=0,n=4

     1315     6884    4               END;

     1316     6885        /* break down dbkey into page and line */
     1317     6886    3           NEXT_PG = (NEXT_DBKEY - LOW_DBK + LPP) / LPP;

   6886  4 003734   206223 236100                    LDQ     NEXT_DBKEY,,AUTO
         4 003735   000000 136000 xsym               SBLQ    LOW_DBK
         4 003736   000000 036000 xsym               ADLQ    LPP
         4 003737   000000 506000 xsym               DIV     LPP
         4 003740   206221 756100                    STQ     NEXT_PG,,AUTO

     1318     6887    3           NEXT_LN = MOD(NEXT_DBKEY - LOW_DBK + LPP , LPP);

   6887  4 003741   206223 236100                    LDQ     NEXT_DBKEY,,AUTO
         4 003742   000000 136000 xsym               SBLQ    LOW_DBK
         4 003743   000000 036000 xsym               ADLQ    LPP
         4 003744   000000 506000 xsym               DIV     LPP
         4 003745   206222 755100                    STA     NEXT_LN,,AUTO

     1319     6888        /* read new page if necessary */
     1320     6889    3           IF NEXT_PG ~= PG_NO THEN

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:223  
   6889  4 003746   206221 236100                    LDQ     NEXT_PG,,AUTO
         4 003747   204144 116100                    CMPQ    PG_NO,,AUTO
         4 003750   003761 600000 4                  TZE     s:6898

     1321     6890    4           DO;

     1322     6891    4               PG_NO = NEXT_PG; /* new current page */

   6891  4 003751   204144 756100                    STQ     PG_NO,,AUTO

     1323     6892    4               RB = PG_NO;

   6892  4 003752   000000 756000 xsym               STQ     RB

     1324     6893    4               I_O_SIZE = 1;

   6893  4 003753   000001 235007                    LDA     1,DL
         4 003754   000000 755000 xsym               STA     I_O_SIZE

     1325     6894    4               CALL READ_PAGE ALTRET(ALTEND_ZIU$Q2PR);

   6894  4 003755   006702 701000 4                  TSX1    READ_PAGE
         4 003756   004255 702000 4                  TSX2    ALTEND_ZIU$Q2PR

     1326     6895    4               DATA$ = ADDR(I_O_BUF(0));

   6895  4 003757   000000 236000 xsym               LDQ     I_O_BUF$
         4 003760   000000 756000 xsym               STQ     DATA$

     1327     6896    4               END;

     1328     6897         /* point to record in data page */
     1329     6898    3           REC$ = PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035-NEXT_LN));

   6898  4 003761   000000 235003                    LDA     0,DU
         4 003762   206222 135100                    SBLA    NEXT_LN,,AUTO
         4 003763   000001 735000                    ALS     1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:224  
         4 003764   000000 470400 xsym               LDP0    DATA$
         4 003765   000100 100505                    MLR     fill='000'O
         4 003766   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 003767   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 003770   206236 236100                    LDQ     EXPO+5,,AUTO
         4 003771   000022 732000                    QRS     18
         4 003772   000020 736000                    QLS     16
         4 003773   000003 036003                    ADLQ    3,DU
         4 003774   000000 036000 xsym               ADLQ    DATA$
         4 003775   000000 756000 xsym               STQ     REC$

     1330     6899    3           REC_RDEF = REC$->RECORD;

   6899  4 003776   000000 471400 xsym               LDP1    REC$
         4 003777   000000 100500                    MLR     fill='000'O
         4 004000   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 004001   000654 000004 0                  ADSC9   REC                      cn=0,n=4

     1331     6900         /* if next in chain is correct type */
     1332     6901    3           IF REC.TYPE = REC_TYPE.SEC THEN

   6901  4 004002   200017 720100                    LXL0    REC_TYPE,,AUTO
         4 004003   000654 100000 0                  CMPX0   REC
         4 004004   004074 601000 4                  TNZ     s:6924

     1333     6902    4           DO;

     1334     6903         /* then compare calc fields to those given */
     1335     6904    4               SIZE = REC.LEN;

   6904  4 004005   000654 236000 0                  LDQ     REC
         4 004006   777777 376007                    ANQ     -1,DL
         4 004007   206217 756100                    STQ     SIZE,,AUTO

     1336     6905    4               BUF$ = REC$;

   6905  4 004010   000000 236000 xsym               LDQ     REC$
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:225  
         4 004011   000504 756000 0                  STQ     BUF$

     1337     6906    4               MATCH = %YES#;

   6906  4 004012   400000 236003                    LDQ     -131072,DU
         4 004013   206224 756100                    STQ     MATCH,,AUTO

     1338     6907    5               DO X = 0 TO KEY_ARRAY.SIZ-1;

   6907  4 004014   000000 450000 xsym               STZ     X
         4 004015   004061 710000 4                  TRA     s:6915+1

     1339     6908    5                   I = KEY_ARRAY.MEMBER(X);

   6908  4 004016   000000 720000 xsym               LXL0    X
         4 004017   201524 235110                    LDA     KEY_ARRAY+1,X0,AUTO
         4 004020   206230 755100                    STA     I,,AUTO

     1340     6909    5                   IF SUBSTR(BUFAREA,ITEM.OFFSET(I)/9,ITEM.LEN(I)/9) ~=

   6909  4 004021   206230 236100                    LDQ     I,,AUTO
         4 004022   000006 402007                    MPY     6,DL
         4 004023   200034 236106                    LDQ     ITEM+1,QL,AUTO
         4 004024   000011 506007                    DIV     9,DL
         4 004025   206236 756100                    STQ     EXPO+5,,AUTO
         4 004026   206230 236100                    LDQ     I,,AUTO
         4 004027   000006 402007                    MPY     6,DL
         4 004030   200035 236106                    LDQ     ITEM+2,QL,AUTO
         4 004031   000011 506007                    DIV     9,DL
         4 004032   206237 756100                    STQ     EXPO+6,,AUTO
         4 004033   206230 236100                    LDQ     I,,AUTO
         4 004034   000006 402007                    MPY     6,DL
         4 004035   200034 236106                    LDQ     ITEM+1,QL,AUTO
         4 004036   000011 506007                    DIV     9,DL
         4 004037   206240 756100                    STQ     EXPO+7,,AUTO
         4 004040   206230 236100                    LDQ     I,,AUTO
         4 004041   000006 402007                    MPY     6,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:226  
         4 004042   200035 236106                    LDQ     ITEM+2,QL,AUTO
         4 004043   000011 506007                    DIV     9,DL
         4 004044   000504 470400 0                  LDP0    BUF$
         4 004045   206237 721100                    LXL1    EXPO+6,,AUTO
         4 004046   206236 235100                    LDA     EXPO+5,,AUTO
         4 004047   000000 622006                    EAX2    0,QL
         4 004050   206240 236100                    LDQ     EXPO+7,,AUTO
         4 004051   040146 106545                    CMPC    fill='040'O
         4 004052   000000 000011                    ADSC9   0,A,PR0                  cn=0,n=*X1
         4 004053   204217 000012                    ADSC9   BUFFR,Q,AUTO             cn=0,n=*X2
         4 004054   004060 600000 4                  TZE     s:6915

     1341     6910    5                      SUBSTR(BUFFR,ITEM.OFFSET(I)/9,ITEM.LEN(I)/9)
     1342     6911    6                   THEN DO;

     1343     6912    6                       MATCH = %NO#;

   6912  4 004055   206224 450100                    STZ     MATCH,,AUTO

     1344     6913    6                       X = KEY_ARRAY.SIZ;

   6913  4 004056   201523 235100                    LDA     KEY_ARRAY,,AUTO
         4 004057   000000 755000 xsym               STA     X

     1345     6914    6                       END;

     1346     6915    5                   END;

   6915  4 004060   000000 054000 xsym               AOS     X
         4 004061   000000 236000 xsym               LDQ     X
         4 004062   201523 116100                    CMPQ    KEY_ARRAY,,AUTO
         4 004063   004016 604000 4                  TMI     s:6908

     1347     6916    4               IF MATCH = %YES# THEN

   6916  4 004064   206224 234100                    SZN     MATCH,,AUTO
         4 004065   004074 605000 4                  TPL     s:6924
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:227  

     1348     6917    5               DO;

     1349     6918    5                   KCNT = KCNT+1;

   6918  4 004066   000000 054000 xsym               AOS     KCNT

     1350     6919    5                   KEY_RNG.FIR(KCNT) = NEXT_DBKEY;

   6919  4 004067   000000 235000 xsym               LDA     KCNT
         4 004070   000001 735000                    ALS     1
         4 004071   206223 236100                    LDQ     NEXT_DBKEY,,AUTO
         4 004072   000000 756005 xsym               STQ     KEY_RNG,AL

     1351     6920    5                   KEY_RNG.SEC(KCNT) = NEXT_DBKEY;

   6920  4 004073   000001 756005 xsym               STQ     KEY_RNG+1,AL

     1352     6921    5                   END;

     1353     6922    4               END;

     1354     6923         /* go to tables to find next in chain */
     1355     6924    3           IF REC.TYPE>4000 OR TYPE.MSTRINDX(REC.TYPE)<0 THEN

   6924  4 004074   000654 220000 0                  LDX0    REC
         4 004075   007641 100003                    CMPX0   4001,DU
         4 004076   004111 603000 4                  TRC     s:6926
         4 004077   000654 235000 0                  LDA     REC
         4 004100   777777 375003                    ANA     -1,DU
         4 004101   000021 771000                    ARL     17
         4 004102   000100 100405                    MLR     fill='000'O
         4 004103   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         4 004104   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 004105   206236 236100                    LDQ     EXPO+5,,AUTO
         4 004106   000022 732000                    QRS     18
         4 004107   000000 116003                    CMPQ    0,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:228  
         4 004110   004147 605000 4                  TPL     s:6935

     1356     6925    4           DO;

     1357     6926    4               CALL BINCHAR(ERR_INSERT.TEXT(0),RB);

   6926  4 004111   000000 235000 xsym               LDA     RB
         4 004112   000044 773000                    LRL     36
         4 004113   206236 757100                    STAQ    EXPO+5,,AUTO
         4 004114   000000 301500                    BTD
         4 004115   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 004116   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

     1358     6927    4               CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);

   6927  4 004117   000100 630400 5                  EPPR0   64
         4 004120   000075 631400 5                  EPPR1   61
         4 004121   000000 701000 xent               TSX1    ZERO_SUP
         4 004122   000000 011000                    NOP     0

     1359     6928    4               CALL BINCHAR(ERR_INSERT.TEXT(1),I);

   6928  4 004123   206230 235100                    LDA     I,,AUTO
         4 004124   000044 773000                    LRL     36
         4 004125   206236 757100                    STAQ    EXPO+5,,AUTO
         4 004126   000000 301500                    BTD
         4 004127   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 004130   000010 230036 xsym               NDSC9   ERR_INSERT+8             cn=1,s=nosgn,sf=0,n=30

     1360     6929    4               CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);

   6929  4 004131   000103 630400 5                  EPPR0   67
         4 004132   000075 631400 5                  EPPR1   61
         4 004133   000000 701000 xent               TSX1    ZERO_SUP
         4 004134   000000 011000                    NOP     0

     1361     6930    4               ERRCODESF.ERR# = DBU#RECERR;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:229  

   6930  4 004135   000000 236000 xsym               LDQ     ERRCODESF
         4 004136   000007 376000 5                  ANQ     7
         4 004137   215400 276007                    ORQ     72448,DL
         4 004140   000000 756000 xsym               STQ     ERRCODESF

     1362     6931    4               MSGCODE = ERRCODE_RDEF;

   6931  4 004141   000000 756000 xsym               STQ     MSGCODE

     1363     6932    4               CALL SYS_FUNC_ERRMSG;

   6932  4 004142   000000 631400 5                  EPPR1   0
         4 004143   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 004144   000000 011000                    NOP     0

     1364     6933    4               ALTRETURN;

   6933  4 004145   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 004146   000000 702211                    TSX2  ! 0,X1

     1365     6934    4               END;
     1366     6935    3           INDX = TYPE.MSTRINDX(REC.TYPE); /* GET THE MSTRINDX FOR THE REC */

   6935  4 004147   000100 100405                    MLR     fill='000'O
         4 004150   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         4 004151   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 004152   206236 236100                    LDQ     EXPO+5,,AUTO
         4 004153   000022 732000                    QRS     18
         4 004154   000415 756000 0                  STQ     INDX

     1367     6936    3           SET_INDX = MSTR_REF.NEXT(INDX);

   6936  4 004155   000012 402007                    MPY     10,DL
         4 004156   000000 470400 xsym               LDP0    MSTR$
         4 004157   000000 236106                    LDQ     0,QL,PR0
         4 004160   000022 736000                    QLS     18
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:230  
         4 004161   000022 732000                    QRS     18
         4 004162   000404 756000 0                  STQ     SET_INDX

     1368     6937    4           DO WHILE ((SET_INDX ~= -1) AND (MSTR_REF.NAME(SET_XREF.MSTRINDX(SET_INDX))
              6937                    ~= '*CALC'));

   6937  4 004163   004173 710000 4                  TRA     s:6939

     1369     6938    4               SET_INDX = SET_XREF.NEXT(SET_INDX);

   6938  4 004164   000404 235000 0                  LDA     SET_INDX
         4 004165   000002 735000                    ALS     2
         4 004166   000000 470400 xsym               LDP0    SET_XREF$
         4 004167   000000 236105                    LDQ     0,AL,PR0
         4 004170   000022 736000                    QLS     18
         4 004171   000022 732000                    QRS     18
         4 004172   000404 756000 0                  STQ     SET_INDX

     1370     6939    4               END;

   6939  4 004173   000022 116000 5                  CMPQ    18
         4 004174   004211 600000 4                  TZE     s:6940
         4 004175   000404 235000 0                  LDA     SET_INDX
         4 004176   000002 735000                    ALS     2
         4 004177   000000 470400 xsym               LDP0    SET_XREF$
         4 004200   000000 236105                    LDQ     0,AL,PR0
         4 004201   000022 732000                    QRS     18
         4 004202   000012 402007                    MPY     10,DL
         4 004203   000002 736000                    QLS     2
         4 004204   000000 471400 xsym               LDP1    MSTR$
         4 004205   040000 106506                    CMPC    fill='040'O
         4 004206   100001 400036                    ADSC9   1,Q,PR1                  cn=2,n=30
         4 004207   000004 000005 3                  ADSC9   CHAR_SET+4               cn=0,n=5
         4 004210   004164 601000 4                  TNZ     s:6938

     1371     6940    3           IF SET_INDX = -1 THEN

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:231  
   6940  4 004211   000404 235000 0                  LDA     SET_INDX
         4 004212   000022 115000 5                  CMPA    18
         4 004213   004243 601000 4                  TNZ     s:6950

     1372     6941    4           DO;

     1373     6942    4               CALL INDEX(X,' ',MSTR_REF.NAME(INDX));

   6942  4 004214   000415 236000 0                  LDQ     INDX
         4 004215   000050 402007                    MPY     40,DL
         4 004216   000000 470400 xsym               LDP0    MSTR$
         4 004217   000000 124506                    SCM     mask='000'O
         4 004220   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 004221   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 004222   000000 000000 xsym               ARG     X

     1374     6943    4               ERR_INSERT.TEXT(0) = MSTR_REF.NAME(INDX);

   6943  4 004223   040000 100506                    MLR     fill='040'O
         4 004224   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 004225   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1375     6944    4               ERR_INSERT.CNT(0) = X;

   6944  4 004226   000000 236000 xsym               LDQ     X
         4 004227   000033 736000                    QLS     27
         4 004230   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1376     6945    4               ERRCODESF.ERR# = DBU#NOTCALC;

   6945  4 004231   000000 236000 xsym               LDQ     ERRCODESF
         4 004232   000007 376000 5                  ANQ     7
         4 004233   215760 276007                    ORQ     72688,DL
         4 004234   000000 756000 xsym               STQ     ERRCODESF

     1377     6946    4               MSGCODE = ERRCODE_RDEF;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:232  
   6946  4 004235   000000 756000 xsym               STQ     MSGCODE

     1378     6947    4               CALL SYS_FUNC_ERRMSG;

   6947  4 004236   000000 631400 5                  EPPR1   0
         4 004237   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 004240   000000 011000                    NOP     0

     1379     6948    4               ALTRETURN;

   6948  4 004241   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 004242   000000 702211                    TSX2  ! 0,X1

     1380     6949    4               END;
     1381     6950    3           END;

   6950  4 004243   000415 236000 0                  LDQ     INDX
         4 004244   000012 402007                    MPY     10,DL
         4 004245   000000 470400 xsym               LDP0    MSTR$
         4 004246   000000 220106                    LDX0    0,QL,PR0
         4 004247   007640 100003                    CMPX0   4000,DU
         4 004250   003662 601000 4                  TNZ     s:6875
         4 004251   206225 234100                    SZN     FLAG,,AUTO
         4 004252   003662 604000 4                  TMI     s:6875

     1382     6951    2       RETURN;

   6951  4 004253   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 004254   000001 702211                    TSX2  ! 1,X1

     1383     6952    2   ALTEND_ZIU$Q2PR:
     1384     6953    2       ALTRETURN;

   6953  4 004255   200016 221300       ALTEND_ZIU$* LDX1  ! AC_REC+10,,AUTO
         4 004256   000000 702211                    TSX2  ! 0,X1

     1385     6954    2   END CALC_PRNT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:233  
     1386     6955        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:234  
     1387     6956        /***********************************************************/
     1388     6957        /*                                                         */
     1389     6958        /*       I N D E X   AREA   P R I N T                      */
     1390     6959        /*                                                         */
     1391     6960        /***********************************************************/
     1392     6961
     1393     6962    1   INDEX_PRINT: PROC ALTRET;

   6962  4 004257   200016 741300       INDEX_PRINT  STX1  ! AC_REC+10,,AUTO

     1394     6963    2   DCL 1 IND_HDR STATIC ALIGNED,
     1395     6964    2         2 CAR_CON BIT(9) INIT('00100001'B) UNAL,
     1396     6965    2         2 REC CHAR(25) UNAL,
     1397     6966    2         2 * CHAR(43) INIT(' ') UNAL,
     1398     6967    2         2 * CHAR(6) INIT('INDEX ') UNAL;
     1399     6968    2       CALL SYS_FUNC_CLOS ALTRET(ALTRTN);

   6968  4 004260   000000 631400 5                  EPPR1   0
         4 004261   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 004262   004424 702000 4                  TSX2    ALTRTN

     1400     6969    2       ORGSF = %INDEXED#;

   6969  4 004263   000006 235007                    LDA     6,DL
         4 004264   000000 755000 xsym               STA     ORGSF

     1401     6970    2       CALL SYS_FUNC_OPEN ALTRET(ALTRTN);

   6970  4 004265   000000 631400 5                  EPPR1   0
         4 004266   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 004267   004424 702000 4                  TSX2    ALTRTN

     1402     6971    2       CALL DB_FUNC_FRS(CAN_RVA.RAREC.SEC,CAN_RVA.ACRA.SEC) ALTRET(ALTRTN);

   6971  4 004270   000112 630400 5                  EPPR0   74
         4 004271   000001 631400 5                  EPPR1   1
         4 004272   000000 701000 xent               TSX1    DB_FUNC_FRS
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:235  
         4 004273   004424 702000 4                  TSX2    ALTRTN

     1403     6972    2       CALL DB_FUNC_GET(CAN_RVA.RAREC.SEC) ALTRET(ALTRTN);

   6972  4 004274   000112 630400 5                  EPPR0   74
         4 004275   000004 631400 5                  EPPR1   4
         4 004276   000000 701000 xent               TSX1    DB_FUNC_GET
         4 004277   004424 702000 4                  TSX2    ALTRTN

     1404     6973    2       CALL DB_FUNC_FOR(CAN_RVA.RCRA.SEC) ALTRET(ALTRTN);

   6973  4 004300   000114 630400 5                  EPPR0   76
         4 004301   000004 631400 5                  EPPR1   4
         4 004302   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 004303   004424 702000 4                  TSX2    ALTRTN

     1405     6974    2       CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(ALTRTN);

   6974  4 004304   000115 630400 5                  EPPR0   77
         4 004305   000004 631400 5                  EPPR1   4
         4 004306   000000 701000 xent               TSX1    DB_FUNC_GET
         4 004307   004424 702000 4                  TSX2    ALTRTN

     1406     6975    2       IND_HDR.REC = MSTR_REF.NAME(TYPE.MSTRINDX(UWA.RC_REC.RTYPE));

   6975  4 004310   000270 235000 xsym               LDA     UWA+184
         4 004311   000001 735000                    ALS     1
         4 004312   000100 100405                    MLR     fill='000'O
         4 004313   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         4 004314   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 004315   206236 236100                    LDQ     EXPO+5,,AUTO
         4 004316   000022 732000                    QRS     18
         4 004317   000012 402007                    MPY     10,DL
         4 004320   000002 736000                    QLS     2
         4 004321   000000 470400 xsym               LDP0    MSTR$
         4 004322   040000 100506                    MLR     fill='040'O
         4 004323   000001 400031                    ADSC9   1,Q,PR0                  cn=2,n=25
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:236  
         4 004324   000655 200031 0                  ADSC9   IND_HDR                  cn=1,n=25

     1407     6976    2       DONE='0'B;

   6976  4 004325   000464 450000 0                  STZ     DONE

     1408     6977    3       DO WHILE(~DONE);

   6977  4 004326   004417 710000 4                  TRA     s:7003

     1409     6978    3           DCBSF = ZI$DIR.AREA_NM.DCB#;

   6978  4 004327   000244 220000 xsym               LDX0    ZI$DIR+164
         4 004330   000000 740000 xsym               STX0    DCBSF

     1410     6979    3           BUFSF = VECTOR(I_O_BUF);

   6979  4 004331   000116 235000 5                  LDA     78
         4 004332   000000 236000 xsym               LDQ     I_O_BUF$
         4 004333   000000 755000 xsym               STA     BUFSF
         4 004334   000001 756000 xsym               STQ     BUFSF+1

     1411     6980    3           BUFLNSF = 4096 * 32;

   6980  4 004335   400000 235007                    LDA     -131072,DL
         4 004336   000000 755000 xsym               STA     BUFLNSF

     1412     6981    3           KEYSF = %NO#;

   6981  4 004337   000000 450000 xsym               STZ     KEYSF

     1413     6982    3           ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   6982  4 004340   000027 236000 xsym               LDQ     ZI$DIR+23
         4 004341   000000 756000 xsym               STQ     ENCRP_SEEDSF

     1414     6983    3           CALL SYS_FUNC_READ ALTRET(ALT_INDX);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:237  

   6983  4 004342   000000 631400 5                  EPPR1   0
         4 004343   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 004344   004403 702000 4                  TSX2    ALT_INDX

     1415     6984    3           OUT_INDX=0;

   6984  4 004345   000000 450000 xsym               STZ     OUT_INDX

     1416     6985    3           BUFSF = VECTOR(IND_HDR);

   6985  4 004346   000120 237000 5                  LDAQ    80
         4 004347   000000 755000 xsym               STA     BUFSF
         4 004350   000001 756000 xsym               STQ     BUFSF+1

     1417     6986    3           BUFLNSF = 75;

   6986  4 004351   000113 235007                    LDA     75,DL
         4 004352   000000 755000 xsym               STA     BUFLNSF

     1418     6987    3           CALL WRITE_LINE;

   6987  4 004353   005466 701000 4                  TSX1    WRITE_LINE
         4 004354   000000 011000                    NOP     0

     1419     6988    4           DO WHILE(OUT_INDX <= I_O_SIZE);

   6988  4 004355   000000 236000 xsym               LDQ     OUT_INDX
         4 004356   000000 116000 xsym               CMPQ    I_O_SIZE
         4 004357   004402 605400 4                  TPNZ    s:6995

     1420     6989    4               REC$ = ADDR(I_O_BUF(OUT_INDX));

   6989  4 004360   000000 236000 xsym               LDQ     OUT_INDX
         4 004361   000034 736000                    QLS     28
         4 004362   000000 036000 xsym               ADLQ    I_O_BUF$
         4 004363   000000 756000 xsym               STQ     REC$
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:238  

     1421     6990    4               CALL FIND_PRINT_ITEMS;

   6990  4 004364   007720 701000 4                  TSX1    FIND_PRINT_ITEMS
         4 004365   000000 011000                    NOP     0

     1422     6991    4               OUT_INDX = OUT_INDX + 1;

   6991  4 004366   000000 054000 xsym               AOS     OUT_INDX

     1423     6992    4               CALL DB_FUNC_FOR(CAN_RVA.RCRA.SEC) ALTRET(ALTRTN);

   6992  4 004367   000114 630400 5                  EPPR0   76
         4 004370   000004 631400 5                  EPPR1   4
         4 004371   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 004372   004424 702000 4                  TSX2    ALTRTN

     1424     6993    4               CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC) ALTRET(ALTRTN);

   6993  4 004373   000115 630400 5                  EPPR0   77
         4 004374   000004 631400 5                  EPPR1   4
         4 004375   000000 701000 xent               TSX1    DB_FUNC_GET
         4 004376   004424 702000 4                  TSX2    ALTRTN

     1425     6994    4               END;

   6994  4 004377   000000 236000 xsym               LDQ     OUT_INDX
         4 004400   000000 116000 xsym               CMPQ    I_O_SIZE
         4 004401   004360 604400 4                  TMOZ    s:6989

     1426     6995    4           DO WHILE('0'B);

   6995  4 004402   004417 710000 4                  TRA     s:7003

     1427     6996    4   ALT_INDX:
     1428     6997    4               DONE='1'B;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:239  
   6997  4 004403   400000 236003       ALT_INDX     LDQ     -131072,DU
         4 004404   000464 756000 0                  STQ     DONE

     1429     6998    4               IF B$TCB$->B$TCB.ALT$->B$EXCFR.ERR.ERR# = %E$EOF THEN

   6998  4 004405   000000 470400 xsym               LDP0    B$TCB$
         4 004406   000000 471500                    LDP1    0,,PR0
         4 004407   100102 236100                    LDQ     66,,PR1
         4 004410   377770 376007                    ANQ     131064,DL
         4 004411   000060 116007                    CMPQ    48,DL
         4 004412   004415 601000 4                  TNZ     s:7001

     1430     6999    4                   RETURN;

   6999  4 004413   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 004414   000001 702211                    TSX2  ! 1,X1

     1431     7000    4               ELSE
     1432     7001    4                   ALTRETURN;

   7001  4 004415   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 004416   000000 702211                    TSX2  ! 0,X1

     1433     7002    4               END;

     1434     7003    3           END;

   7003  4 004417   000464 236000 0                  LDQ     DONE
         4 004420   400000 376003                    ANQ     -131072,DU
         4 004421   400000 676003                    ERQ     -131072,DU
         4 004422   004327 601000 4                  TNZ     s:6978

     1435     7004    3       DO WHILE('0'B);

   7004  4 004423   004426 710000 4                  TRA     s:7008

     1436     7005    3   ALTRTN: ALTRETURN;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:240  

   7005  4 004424   200016 221300       ALTRTN       LDX1  ! AC_REC+10,,AUTO
         4 004425   000000 702211                    TSX2  ! 0,X1

     1437     7006    3           END;

     1438     7007
     1439     7008    2   END INDEX_PRINT;

   7008  4 004426   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 004427   000001 702211                    TSX2  ! 1,X1

     1440     7009        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:241  
     1441     7010    1   PRINT_LOCKS: PROC ALTRET;

   7010  4 004430   200020 741300       PRINT_LOCKS  STX1  ! REC_LEN,,AUTO

     1442     7011
     1443     7012    2   DCL AC$ PTR STATIC ALIGNED;
     1444     7013    2   DCL AC# SBIN STATIC ALIGNED;
     1445     7014    2   DCL AC_V CHAR(AC#) BASED(AC$) CALIGNED;
     1446     7015    2   DCL RBUF CHAR(120) SYMREF CALIGNED;
     1447     7016    2   DCL AC_BUF CHAR(80) STATIC ALIGNED;
     1448     7017    2   DCL TM# SBIN STATIC ALIGNED;
     1449     7018    2   DCL 1 TM_BUF STATIC ALIGNED,
     1450     7019    2         2 * CHAR(3) INIT('on ') CALIGNED,
     1451     7020    2         2 TIME CHAR(5) CALIGNED INIT(' '),
     1452     7021    2         2 * CHAR(1) CALIGNED INIT(' '),
     1453     7022    2         2 DATE CHAR(10) CALIGNED INIT(' '),
     1454     7023    2         2 * CHAR(1) CALIGNED INIT(' '),
     1455     7024    2         2 WHO CHAR(24) CALIGNED INIT(' ');
     1456     7025    2   DCL TM_V REDEF TM_BUF CHAR(44) CALIGNED;
     1457     7026    2   DCL TIME_BUF CHAR(12) STATIC ALIGNED;
     1458     7027
     1459     7028    2       AC$ = ADDR(ZI$DIR.AREA_NM.NAME.TEXT);

   7028  4 004431   000074 236000 5                  LDQ     60
         4 004432   000700 756000 0                  STQ     AC$

     1460     7029    2       AC# = ZI$DIR.AREA_NM.NAME.CNT;

   7029  4 004433   000234 236000 xsym               LDQ     ZI$DIR+156
         4 004434   000033 772000                    QRL     27
         4 004435   000701 756000 0                  STQ     AC#

     1461     7030    2       TM# = 0;

   7030  4 004436   000726 450000 0                  STZ     TM#

     1462     7031    2       IF UWA.AC_REC.PG_TYPE>0 THEN /* INDEXED AREA */
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:242  

   7031  4 004437   000237 235000 xsym               LDA     UWA+159
         4 004440   004462 604400 4                  TMOZ    s:7036

     1463     7032    2           CALL CONCAT(AC_BUF,'No locks associated with indexed area ',

   7032  4 004441   040000 100400                    MLR     fill='040'O
         4 004442   000006 000046 3                  ADSC9   CHAR_SET+6               cn=0,n=38
         4 004443   000702 000046 0                  ADSC9   AC_BUF                   cn=0,n=38
         4 004444   000700 470400 0                  LDP0    AC$
         4 004445   000000 620006                    EAX0    0,QL
         4 004446   040000 100540                    MLR     fill='040'O
         4 004447   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 004450   000713 400052 0                  ADSC9   AC_BUF+9                 cn=2,n=42
         4 004451   000701 236000 0                  LDQ     AC#
         4 004452   000052 116007                    CMPQ    42,DL
         4 004453   004461 605000 4                  TPL     s:7032+16
         4 004454   777725 620006                    EAX0    -43,QL
         4 004455   777777 660003                    ERX0    -1,DU
         4 004456   040046 100400                    MLR     fill='040'O
         4 004457   000020 000002 3                  ADSC9   CHAR_SET+16              cn=0,n=2
         4 004460   000713 400010 0                  ADSC9   AC_BUF+9,Q               cn=2,n=*X0
         4 004461   004667 710000 4                  TRA     s:7075

     1464     7033    2              AC_V,'.@');
     1465     7034    2       ELSE
     1466     7035    3       DO;

     1467     7036    3           IF ZI$DIR.LOCKCODE=2 THEN

   7036  4 004462   000125 236000 xsym               LDQ     ZI$DIR+85
         4 004463   016000 376007                    ANQ     7168,DL
         4 004464   004000 116007                    CMPQ    2048,DL
         4 004465   004470 601000 4                  TNZ     s:7038

     1468     7037    3               CALL GET_ATBLK_INFO ALTRET(ALTRTN);

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:243  
   7037  4 004466   006517 701000 4                  TSX1    GET_ATBLK_INFO
         4 004467   005013 702000 4                  TSX2    ALTRTN

     1469     7038    3           IF ATBLK_PG.LOCK_STATUS.ALL_LOCKS='0'B THEN

   7038  4 004470   000000 470400 xsym               LDP0    ATBLK$
         4 004471   000041 236100                    LDQ     33,,PR0
         4 004472   700000 316003                    CANQ    -32768,DU
         4 004473   004512 601000 4                  TNZ     s:7042

     1470     7039    3               CALL CONCAT(AC_BUF,AC_V,' is NOT locked.@');

   7039  4 004474   000700 471400 0                  LDP1    AC$
         4 004475   000701 720000 0                  LXL0    AC#
         4 004476   040000 100540                    MLR     fill='040'O
         4 004477   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 004500   000702 000120 0                  ADSC9   AC_BUF                   cn=0,n=80
         4 004501   000701 236000 0                  LDQ     AC#
         4 004502   000120 116007                    CMPQ    80,DL
         4 004503   004511 605000 4                  TPL     s:7039+13
         4 004504   777657 621006                    EAX1    -81,QL
         4 004505   777777 661003                    ERX1    -1,DU
         4 004506   040046 100400                    MLR     fill='040'O
         4 004507   000021 000020 3                  ADSC9   CHAR_SET+17              cn=0,n=16
         4 004510   000702 000011 0                  ADSC9   AC_BUF,Q                 cn=0,n=*X1
         4 004511   004667 710000 4                  TRA     s:7075

     1471     7040    3           ELSE
     1472     7041    4           DO;

     1473     7042    4               IF ATBLK_PG.STATUS.LOCKED AND ATBLK_PG.STATUS.KFILE_CURR THEN

   7042  4 004512   000041 234100                    SZN     33,,PR0
         4 004513   004534 605000 4                  TPL     s:7045
         4 004514   100000 316003                    CANQ    32768,DU
         4 004515   004534 600000 4                  TZE     s:7045

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:244  
     1474     7043    4                   CALL CONCAT(AC_BUF,AC_V,' & its alternate keyfile were locked @');

   7043  4 004516   000700 471400 0                  LDP1    AC$
         4 004517   000701 720000 0                  LXL0    AC#
         4 004520   040000 100540                    MLR     fill='040'O
         4 004521   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 004522   000702 000120 0                  ADSC9   AC_BUF                   cn=0,n=80
         4 004523   000701 236000 0                  LDQ     AC#
         4 004524   000120 116007                    CMPQ    80,DL
         4 004525   004533 605000 4                  TPL     s:7043+13
         4 004526   777657 621006                    EAX1    -81,QL
         4 004527   777777 661003                    ERX1    -1,DU
         4 004530   040046 100400                    MLR     fill='040'O
         4 004531   000025 000046 3                  ADSC9   CHAR_SET+21              cn=0,n=38
         4 004532   000702 000011 0                  ADSC9   AC_BUF,Q                 cn=0,n=*X1
         4 004533   004616 710000 4                  TRA     s:7056

     1475     7044    4               ELSE
     1476     7045    4                   IF ATBLK_PG.STATUS.LOCKED THEN

   7045  4 004534   000041 234100                    SZN     33,,PR0
         4 004535   004554 605000 4                  TPL     s:7048

     1477     7046    4                       CALL CONCAT(AC_BUF,AC_V,' was locked @');

   7046  4 004536   000700 471400 0                  LDP1    AC$
         4 004537   000701 720000 0                  LXL0    AC#
         4 004540   040000 100540                    MLR     fill='040'O
         4 004541   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 004542   000702 000120 0                  ADSC9   AC_BUF                   cn=0,n=80
         4 004543   000701 236000 0                  LDQ     AC#
         4 004544   000120 116007                    CMPQ    80,DL
         4 004545   004553 605000 4                  TPL     s:7046+13
         4 004546   777657 621006                    EAX1    -81,QL
         4 004547   777777 661003                    ERX1    -1,DU
         4 004550   040046 100400                    MLR     fill='040'O
         4 004551   000037 000015 3                  ADSC9   CHAR_SET+31              cn=0,n=13
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:245  
         4 004552   000702 000011 0                  ADSC9   AC_BUF,Q                 cn=0,n=*X1
         4 004553   004616 710000 4                  TRA     s:7056

     1478     7047    4                   ELSE
     1479     7048    4                       IF ATBLK_PG.STATUS.KFILE_CURR THEN

   7048  4 004554   100000 316003                    CANQ    32768,DU
         4 004555   004577 600000 4                  TZE     s:7052

     1480     7049    4                           CALL CONCAT(AC_BUF,'The alternate keyfile of ',AC_V,

   7049  4 004556   040000 100400                    MLR     fill='040'O
         4 004557   000043 000031 3                  ADSC9   CHAR_SET+35              cn=0,n=25
         4 004560   000702 000031 0                  ADSC9   AC_BUF                   cn=0,n=25
         4 004561   000700 471400 0                  LDP1    AC$
         4 004562   000701 720000 0                  LXL0    AC#
         4 004563   040000 100540                    MLR     fill='040'O
         4 004564   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 004565   000710 200067 0                  ADSC9   AC_BUF+6                 cn=1,n=55
         4 004566   000701 236000 0                  LDQ     AC#
         4 004567   000067 116007                    CMPQ    55,DL
         4 004570   004576 605000 4                  TPL     s:7049+16
         4 004571   777710 621006                    EAX1    -56,QL
         4 004572   777777 661003                    ERX1    -1,DU
         4 004573   040046 100400                    MLR     fill='040'O
         4 004574   000037 000015 3                  ADSC9   CHAR_SET+31              cn=0,n=13
         4 004575   000710 200011 0                  ADSC9   AC_BUF+6,Q               cn=1,n=*X1
         4 004576   004616 710000 4                  TRA     s:7056

     1481     7050    4                              ' was locked @');
     1482     7051    4                       ELSE
     1483     7052    4                           IF ATBLK_PG.STATUS.LOCKUPD THEN

   7052  4 004577   200000 316003                    CANQ    65536,DU
         4 004600   004616 600000 4                  TZE     s:7056

     1484     7053    4                               CALL CONCAT(AC_BUF,AC_V,' was locked from updaters @');
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:246  

   7053  4 004601   000700 471400 0                  LDP1    AC$
         4 004602   000701 720000 0                  LXL0    AC#
         4 004603   040000 100540                    MLR     fill='040'O
         4 004604   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 004605   000702 000120 0                  ADSC9   AC_BUF                   cn=0,n=80
         4 004606   000701 236000 0                  LDQ     AC#
         4 004607   000120 116007                    CMPQ    80,DL
         4 004610   004616 605000 4                  TPL     s:7056
         4 004611   777657 621006                    EAX1    -81,QL
         4 004612   777777 661003                    ERX1    -1,DU
         4 004613   040046 100400                    MLR     fill='040'O
         4 004614   000052 000033 3                  ADSC9   CHAR_SET+42              cn=0,n=27
         4 004615   000702 000011 0                  ADSC9   AC_BUF,Q                 cn=0,n=*X1

     1485     7054
     1486     7055
     1487     7056    4               IF ATBLK_PG.TIME_LOCKED=0 THEN

   7056  4 004616   000042 235100                    LDA     34,,PR0
         4 004617   004624 601000 4                  TNZ     s:7060

     1488     7057    4                   TM_V = 'before the B02 version of IDS.@';

   7057  4 004620   040000 100400                    MLR     fill='040'O
         4 004621   000061 000037 3                  ADSC9   CHAR_SET+49              cn=0,n=31
         4 004622   000727 000054 0                  ADSC9   TM_BUF                   cn=0,n=44
         4 004623   004663 710000 4                  TRA     s:7072

     1489     7058    4               ELSE
     1490     7059    5               DO;

     1491     7060    5                   TSTAMPSF = VECTOR(ATBLK_PG.TIME_LOCKED);

   7060  4 004624   777640 235007                    LDA     -96,DL
         4 004625   000000 236000 xsym               LDQ     ATBLK$
         4 004626   000042 036003                    ADLQ    34,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:247  
         4 004627   000000 755000 xsym               STA     TSTAMPSF
         4 004630   000001 756000 xsym               STQ     TSTAMPSF+1

     1492     7061    5                   SOURCESF = %UTS#;

   7061  4 004631   000004 235007                    LDA     4,DL
         4 004632   000000 755000 xsym               STA     SOURCESF

     1493     7062    5                   DESTSF = %EXT#;

   7062  4 004633   000001 235007                    LDA     1,DL
         4 004634   000000 755000 xsym               STA     DESTSF

     1494     7063    5                   DATESF = VECTOR(TM_BUF.DATE);

   7063  4 004635   000122 237000 5                  LDAQ    82
         4 004636   000000 755000 xsym               STA     DATESF
         4 004637   000001 756000 xsym               STQ     DATESF+1

     1495     7064    5                   TIMESF = VECTOR(TIME_BUF);

   7064  4 004640   000124 237000 5                  LDAQ    84
         4 004641   000000 755000 xsym               STA     TIMESF
         4 004642   000001 756000 xsym               STQ     TIMESF+1

     1496     7065    5                   CALL SYS_FUNC_TSTAMP;

   7065  4 004643   000000 631400 5                  EPPR1   0
         4 004644   000000 701000 xent               TSX1    SYS_FUNC_TSTAMP
         4 004645   000000 011000                    NOP     0

     1497     7066    5                   TM_BUF.TIME=TIME_BUF;

   7066  4 004646   040000 100400                    MLR     fill='040'O
         4 004647   000742 000005 0                  ADSC9   TIME_BUF                 cn=0,n=5
         4 004650   000727 600005 0                  ADSC9   TM_BUF                   cn=3,n=5

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:248  
     1498     7067    5                   IF ATBLK_PG.REASON_LOCKED.BY_USER THEN

   7067  4 004651   000000 470400 xsym               LDP0    ATBLK$
         4 004652   000043 234100                    SZN     35,,PR0
         4 004653   004660 605000 4                  TPL     s:7070

     1499     7068    5                       TM_BUF.WHO='by user.@';

   7068  4 004654   040000 100400                    MLR     fill='040'O
         4 004655   000071 000011 3                  ADSC9   CHAR_SET+57              cn=0,n=9
         4 004656   000734 000030 0                  ADSC9   TM_BUF+5                 cn=0,n=24
         4 004657   004663 710000 4                  TRA     s:7072

     1500     7069    5                   ELSE
     1501     7070    5                       TM_BUF.WHO='by IDS.@';

   7070  4 004660   040000 100400                    MLR     fill='040'O
         4 004661   000074 000010 3                  ADSC9   CHAR_SET+60              cn=0,n=8
         4 004662   000734 000030 0                  ADSC9   TM_BUF+5                 cn=0,n=24

     1502     7071    5                   END;

     1503     7072    4               CALL INDEX(TM#,'@',TM_V);

   7072  4 004663   000000 124400                    SCM     mask='000'O
         4 004664   000727 000054 0                  ADSC9   TM_BUF                   cn=0,n=44
         4 004665   000117 000001 5                  ADSC9   79                       cn=0,n=1
         4 004666   000726 000000 0                  ARG     TM#

     1504     7073    4               END;

     1505     7074    3           END;

     1506     7075    2       AC$ = ADDR(AC_BUF);

   7075  4 004667   000126 236000 5                  LDQ     86
         4 004670   000700 756000 0                  STQ     AC$
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:249  

     1507     7076    2       CALL INDEX(AC#,'@',AC_BUF);

   7076  4 004671   000000 124400                    SCM     mask='000'O
         4 004672   000702 000120 0                  ADSC9   AC_BUF                   cn=0,n=80
         4 004673   000117 000001 5                  ADSC9   79                       cn=0,n=1
         4 004674   000701 000000 0                  ARG     AC#

     1508     7077    2       CALL CONCAT(RBUF,'B* ',AC_V,TM_V);

   7077  4 004675   000076 236000 3                  LDQ     CHAR_SET+62
         4 004676   000127 376000 5                  ANQ     87
         4 004677   000040 276007                    ORQ     32,DL
         4 004700   000000 756000 xsym               STQ     RBUF
         4 004701   000700 470400 0                  LDP0    AC$
         4 004702   000701 720000 0                  LXL0    AC#
         4 004703   040000 100540                    MLR     fill='040'O
         4 004704   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 004705   000000 600165 xsym               ADSC9   RBUF                     cn=3,n=117
         4 004706   000701 236000 0                  LDQ     AC#
         4 004707   000165 116007                    CMPQ    117,DL
         4 004710   004716 605000 4                  TPL     s:7078
         4 004711   777612 621006                    EAX1    -118,QL
         4 004712   777777 661003                    ERX1    -1,DU
         4 004713   040046 100400                    MLR     fill='040'O
         4 004714   000727 000054 0                  ADSC9   TM_BUF                   cn=0,n=44
         4 004715   000000 600011 xsym               ADSC9   RBUF,Q                   cn=3,n=*X1

     1509     7078    2       IF TM#>0 AND TM_BUF.WHO='by IDS.@' THEN

   7078  4 004716   000726 235000 0                  LDA     TM#
         4 004717   004726 604400 4                  TMOZ    s:7080
         4 004720   040000 106400                    CMPC    fill='040'O
         4 004721   000734 000030 0                  ADSC9   TM_BUF+5                 cn=0,n=24
         4 004722   000074 000010 3                  ADSC9   CHAR_SET+60              cn=0,n=8
         4 004723   004726 601000 4                  TNZ     s:7080

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:250  
     1510     7079    2           SUBSTR(RBUF,0,1)='A'; /* CHANGE VFC */

   7079  4 004724   101000 236003                    LDQ     33280,DU
         4 004725   000000 552040 xsym               STBQ    RBUF,'40'O

     1511     7080    2       BUFLNSF = AC# + TM# + 3;

   7080  4 004726   000701 236000 0                  LDQ     AC#
         4 004727   000726 036000 0                  ADLQ    TM#
         4 004730   000003 036007                    ADLQ    3,DL
         4 004731   000000 756000 xsym               STQ     BUFLNSF

     1512     7081    2       BUFSF = VECTOR(RBUF);

   7081  4 004732   000130 237000 5                  LDAQ    88
         4 004733   000000 755000 xsym               STA     BUFSF
         4 004734   000001 756000 xsym               STQ     BUFSF+1

     1513     7082    2       VFCSF = %YES#;

   7082  4 004735   400000 236003                    LDQ     -131072,DU
         4 004736   000000 756000 xsym               STQ     VFCSF

     1514     7083    2       DCBSF = DCBNUM(M$LO);

   7083  4 004737   000000 236007 xsym               LDQ     M$LO,DL
         4 004740   000000 621006                    EAX1    0,QL
         4 004741   000000 741000 xsym               STX1    DCBSF

     1515     7084    2       CALL SYS_FUNC_WRIT ALTRET(ALTRTN);

   7084  4 004742   000000 631400 5                  EPPR1   0
         4 004743   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 004744   005013 702000 4                  TSX2    ALTRTN

     1516     7085
     1517     7086    2       IF TM#>0 AND TM_BUF.WHO='by IDS.@' THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:251  

   7086  4 004745   000726 235000 0                  LDA     TM#
         4 004746   005011 604400 4                  TMOZ    s:7103
         4 004747   040000 106400                    CMPC    fill='040'O
         4 004750   000734 000030 0                  ADSC9   TM_BUF+5                 cn=0,n=24
         4 004751   000074 000010 3                  ADSC9   CHAR_SET+60              cn=0,n=8
         4 004752   005011 601000 4                  TNZ     s:7103

     1518     7087    3       DO; /* PRINT REASON WHY IDS LOCKS IT */

     1519     7088    3           IF ATBLK_PG.REASON_LOCKED.ROLLBACK_FAIL THEN

   7088  4 004753   000000 470400 xsym               LDP0    ATBLK$
         4 004754   000043 236100                    LDQ     35,,PR0
         4 004755   100000 316003                    CANQ    32768,DU
         4 004756   004763 600000 4                  TZE     s:7091

     1520     7089    3               RBUF='B  For recovery rollback failed.';

   7089  4 004757   040000 100400                    MLR     fill='040'O
         4 004760   000077 000040 3                  ADSC9   CHAR_SET+63              cn=0,n=32
         4 004761   000000 000170 xsym               ADSC9   RBUF                     cn=0,n=120
         4 004762   005002 710000 4                  TRA     s:7099

     1521     7090    3           ELSE
     1522     7091    3               IF ATBLK_PG.REASON_LOCKED.UNPROTECT_ABORT THEN

   7091  4 004763   040000 316003                    CANQ    16384,DU
         4 004764   004771 600000 4                  TZE     s:7094

     1523     7092    3                   RBUF='B  For unprotected update job aborted.';

   7092  4 004765   040000 100400                    MLR     fill='040'O
         4 004766   000107 000046 3                  ADSC9   CHAR_SET+71              cn=0,n=38
         4 004767   000000 000170 xsym               ADSC9   RBUF                     cn=0,n=120
         4 004770   005002 710000 4                  TRA     s:7099

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:252  
     1524     7093    3               ELSE
     1525     7094    3                   IF ATBLK_PG.REASON_LOCKED.LOAD_MODE THEN

   7094  4 004771   200000 316003                    CANQ    65536,DU
         4 004772   004777 600000 4                  TZE     s:7097

     1526     7095    3                       RBUF='B  For keyfile-must-rebuilt after LOAD mode.';

   7095  4 004773   040000 100400                    MLR     fill='040'O
         4 004774   000121 000054 3                  ADSC9   CHAR_SET+81              cn=0,n=44
         4 004775   000000 000170 xsym               ADSC9   RBUF                     cn=0,n=120
         4 004776   005002 710000 4                  TRA     s:7099

     1527     7096    3                   ELSE
     1528     7097    3                       RBUF='B  No reason bit set for the lock, please report!';

   7097  4 004777   040000 100400                    MLR     fill='040'O
         4 005000   000134 000061 3                  ADSC9   CHAR_SET+92              cn=0,n=49
         4 005001   000000 000170 xsym               ADSC9   RBUF                     cn=0,n=120

     1529     7098
     1530     7099    3           BUFLNSF = 60;

   7099  4 005002   000074 235007                    LDA     60,DL
         4 005003   000000 755000 xsym               STA     BUFLNSF

     1531     7100    3           VFCSF = %YES#;

   7100  4 005004   400000 236003                    LDQ     -131072,DU
         4 005005   000000 756000 xsym               STQ     VFCSF

     1532     7101    3           CALL SYS_FUNC_WRIT ALTRET(ALTRTN);

   7101  4 005006   000000 631400 5                  EPPR1   0
         4 005007   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 005010   005013 702000 4                  TSX2    ALTRTN

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:253  
     1533     7102    3           END;

     1534     7103    2       RETURN;

   7103  4 005011   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 005012   000001 702211                    TSX2  ! 1,X1

     1535     7104
     1536     7105    2   ALTRTN: ALTRETURN;

   7105  4 005013   200020 221300       ALTRTN       LDX1  ! REC_LEN,,AUTO
         4 005014   000000 702211                    TSX2  ! 0,X1

     1537     7106    2   END PRINT_LOCKS;
     1538     7107        /***************************************************************/
     1539     7108        /*                                                             */
     1540     7109        /*               K E Y E D   P R I N T                         */
     1541     7110        /***************************************************************/
     1542     7111
     1543     7112    1   KEY_PRNT: PROC ALTRET;

   7112  4 005015   200016 741300       KEY_PRNT     STX1  ! AC_REC+10,,AUTO

     1544     7113    2   DCL FOUND_AREA BIT(1);
     1545     7114         /*
     1546     7115            This rountine takes the DBK values recievied from ZI$DIR and
     1547     7116            converts the keys into page number and line number which
     1548     7117            it will pass on to the DATAPG_PRNT routine for printing.
     1549     7118         */
     1550     7119    2       SET_INDX=-1;

   7119  4 005016   000001 335007                    LCA     1,DL
         4 005017   000404 755000 0                  STA     SET_INDX

     1551     7120    3       DO K = 0 TO KCNT BY 1;

   7120  4 005020   000000 450000 xsym               STZ     K
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:254  
         4 005021   005457 710000 4                  TRA     s:7242+1

     1552     7121    3           KB = KEY_RNG.FIR(K);

   7121  4 005022   000000 235000 xsym               LDA     K
         4 005023   000001 735000                    ALS     1
         4 005024   000000 235005 xsym               LDA     KEY_RNG,AL
         4 005025   000420 755000 0                  STA     KB

     1553     7122    3           KE = KEY_RNG.SEC(K);

   7122  4 005026   000000 236000 xsym               LDQ     K
         4 005027   000001 736000                    QLS     1
         4 005030   000001 235006 xsym               LDA     KEY_RNG+1,QL
         4 005031   000421 755000 0                  STA     KE

     1554     7123    3   FOLLOW_SET:
     1555     7124    3           IF ZI$DIR.LOCALKEY THEN /* Ajust for a local DBK */

   7124  4 005032   000125 236000 xsym  FOLLOW_SET   LDQ     ZI$DIR+85
         4 005033   002000 316003                    CANQ    1024,DU
         4 005034   005045 600000 4                  TZE     s:7130

     1556     7125    4           DO;

     1557     7126    4               KB = KB + UWA.AC_REC.MIN_DBK -1;

   7126  4 005035   000420 236000 0                  LDQ     KB
         4 005036   000245 036000 xsym               ADLQ    UWA+165
         4 005037   000001 136007                    SBLQ    1,DL
         4 005040   000420 756000 0                  STQ     KB

     1558     7127    4               KE = KE + UWA.AC_REC.MIN_DBK -1;

   7127  4 005041   000421 236000 0                  LDQ     KE
         4 005042   000245 036000 xsym               ADLQ    UWA+165
         4 005043   000001 136007                    SBLQ    1,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:255  
         4 005044   000421 756000 0                  STQ     KE

     1559     7128    4               END;

     1560     7129
     1561     7130    3           IF KE - KB = 0 THEN

   7130  4 005045   000421 236000 0                  LDQ     KE
         4 005046   000420 136000 0                  SBLQ    KB
         4 005047   005052 601000 4                  TNZ     s:7133

     1562     7131    3               KEY_RANGE = %NO#;

   7131  4 005050   000466 450000 0                  STZ     KEY_RANGE
         4 005051   005054 710000 4                  TRA     s:7134

     1563     7132    3           ELSE
     1564     7133    3               KEY_RANGE = %YES#;

   7133  4 005052   400000 236003                    LDQ     -131072,DU
         4 005053   000466 756000 0                  STQ     KEY_RANGE

     1565     7134    3           IF KB < UWA.AC_REC.MIN_DBK OR KB > UWA.AC_REC.MAX_DBK OR

   7134  4 005054   000420 236000 0                  LDQ     KB
         4 005055   005060 604000 4                  TMI     s:7134+4
         4 005056   000245 116000 xsym               CMPQ    UWA+165
         4 005057   005074 604000 4                  TMI     s:7137
         4 005060   000000 116003                    CMPQ    0,DU
         4 005061   005074 604000 4                  TMI     s:7137
         4 005062   000246 116000 xsym               CMPQ    UWA+166
         4 005063   005074 605400 4                  TPNZ    s:7137
         4 005064   000421 236000 0                  LDQ     KE
         4 005065   005070 604000 4                  TMI     s:7134+12
         4 005066   000245 116000 xsym               CMPQ    UWA+165
         4 005067   005074 604000 4                  TMI     s:7137
         4 005070   000000 116003                    CMPQ    0,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:256  
         4 005071   005074 604000 4                  TMI     s:7137
         4 005072   000246 116000 xsym               CMPQ    UWA+166
         4 005073   005202 604400 4                  TMOZ    s:7173

     1566     7135    3              KE < UWA.AC_REC.MIN_DBK OR KE > UWA.AC_REC.MAX_DBK THEN
     1567     7136    4           DO;

     1568     7137    4               IF ZI$DIR.CODE = #REPAIR THEN RETURN;

   7137  4 005074   000125 236000 xsym               LDQ     ZI$DIR+85
         4 005075   000010 376000 5                  ANQ     8
         4 005076   000011 116000 5                  CMPQ    9
         4 005077   005102 601000 4                  TNZ     s:7138

   7137  4 005100   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 005101   000001 702211                    TSX2  ! 1,X1

     1569     7138    4               FOUND_AREA = '0'B;

   7138  4 005102   200017 450100                    STZ     FOUND_AREA,,AUTO

     1570     7139    4               IF ZI$DIR.AUTODUMP /* ALL specified */

   7139  4 005103   000026 236000 xsym               LDQ     ZI$DIR+22
         4 005104   400000 316007                    CANQ    -131072,DL
         4 005105   005163 600000 4                  TZE     s:7160

     1571     7140    5               THEN DO I=0 TO NO_AREAS - 1;

   7140  4 005106   000000 450000 xsym               STZ     I
         4 005107   005160 710000 4                  TRA     s:7159+1

     1572     7141         /* find the area this key is in */
     1573     7142    5                   IF KB < AREA_KEY_XREF.MAX_KEY(I)

   7142  4 005110   000000 236000 xsym               LDQ     I
         4 005111   000012 402007                    MPY     10,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:257  
         4 005112   000000 470400 xsym               LDP0    AREA_KEY$
         4 005113   000000 235106                    LDA     0,QL,PR0
         4 005114   000001 236106                    LDQ     1,QL,PR0
         4 005115   000022 773000                    LRL     18
         4 005116   000420 116000 0                  CMPQ    KB
         4 005117   005157 602000 4                  TNC     s:7159
         4 005120   005157 600000 4                  TZE     s:7159

     1574     7143    6                   THEN DO;

     1575     7144         /* found the correct area */
     1576     7145         /* so close the old area */
     1577     7146    6    /**/               DCBSF = ZI$DIR.AREA_NM.DCB#;

   7146  4 005121   000244 220000 xsym               LDX0    ZI$DIR+164
         4 005122   000000 740000 xsym               STX0    DCBSF

     1578     7147    6                       CALL SYS_FUNC_CLOS;

   7147  4 005123   000000 631400 5                  EPPR1   0
         4 005124   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 005125   000000 011000                    NOP     0

     1579     7148         /* open new area under same dcb */
     1580     7149    6                       ZI$DIR.AREA_NM.NAME.TEXT = AREA_KEY_XREF.NAME(I);

   7149  4 005126   000000 236000 xsym               LDQ     I
         4 005127   000050 402007                    MPY     40,DL
         4 005130   000000 470400 xsym               LDP0    AREA_KEY$
         4 005131   040000 100506                    MLR     fill='040'O
         4 005132   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 005133   000234 200036 xsym               ADSC9   ZI$DIR+156               cn=1,n=30

     1581     7150    6    /**/               FIDSF = AREA_KEY_XREF.NAME(I);

   7150  4 005134   040000 100506                    MLR     fill='040'O
         4 005135   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:258  
         4 005136   000000 000036 xsym               ADSC9   FIDSF_RD                 cn=0,n=30

     1582     7151    6                       CALL SYS_FUNC_OPEN ALTRET(ALT_READ_AREA);

   7151  4 005137   000000 631400 5                  EPPR1   0
         4 005140   000000 701000 xent               TSX1    SYS_FUNC_OPEN
         4 005141   005464 702000 4                  TSX2    ALT_READ_AREA

     1583     7152         /* fill in UWA.AC */
     1584     7153    6                       LAST_DBK = UWA.SF_REC.DBKOA;

   7153  4 005142   000063 235000 xsym               LDA     UWA+51
         4 005143   000000 755000 xsym               STA     LAST_DBK

     1585     7154    6                       CALL GET_NXT_AC(FOUND_AREA);

   7154  4 005144   200017 630500                    EPPR0   FOUND_AREA,,AUTO
         4 005145   206236 450500                    STP0    EXPO+5,,AUTO
         4 005146   206236 630500                    EPPR0   EXPO+5,,AUTO
         4 005147   000004 631400 5                  EPPR1   4
         4 005150   000000 701000 xent               TSX1    GET_NXT_AC
         4 005151   000000 011000                    NOP     0

     1586     7155         /* fall out of loop */
     1587     7156    6                       I = NO_AREAS + 1;

   7156  4 005152   000000 235000 xsym               LDA     NO_AREAS
         4 005153   000001 035007                    ADLA    1,DL
         4 005154   000000 755000 xsym               STA     I

     1588     7157    6                       FOUND_AREA = '1'B;

   7157  4 005155   400000 236003                    LDQ     -131072,DU
         4 005156   200017 756100                    STQ     FOUND_AREA,,AUTO

     1589     7158    6                       END;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:259  
     1590     7159    5                   END;

   7159  4 005157   000000 054000 xsym               AOS     I
         4 005160   000000 236000 xsym               LDQ     I
         4 005161   000000 116000 xsym               CMPQ    NO_AREAS
         4 005162   005110 604000 4                  TMI     s:7142

     1591     7160    4               IF ~FOUND_AREA

   7160  4 005163   200017 236100                    LDQ     FOUND_AREA,,AUTO
         4 005164   400000 376003                    ANQ     -131072,DU
         4 005165   400000 676003                    ERQ     -131072,DU
         4 005166   005202 600000 4                  TZE     s:7173

     1592     7161    5               THEN DO;

     1593     7162         /*E* ERROR: ZIU-DBU#NODBK-C
     1594     7163                 MESSAGE: DATA BASE KEY requested is not within the area's bounds.
     1595     7164                 */
     1596     7165    5                   ERRCODESF.ERR# = DBU#NODBK;

   7165  4 005167   000000 236000 xsym               LDQ     ERRCODESF
         4 005170   000007 376000 5                  ANQ     7
         4 005171   214660 276007                    ORQ     72112,DL
         4 005172   000000 756000 xsym               STQ     ERRCODESF

     1597     7166    5                   ERRFLGSF = 0;

   7166  4 005173   000000 450000 xsym               STZ     ERRFLGSF

     1598     7167    5                   MSGCODE = ERRCODE_RDEF;

   7167  4 005174   000000 756000 xsym               STQ     MSGCODE

     1599     7168    5                   CALL SYS_FUNC_ERRMSG;

   7168  4 005175   000000 631400 5                  EPPR1   0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:260  
         4 005176   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 005177   000000 011000                    NOP     0

     1600     7169    5                   ALTRETURN;

   7169  4 005200   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 005201   000000 702211                    TSX2  ! 0,X1

     1601     7170    5                   END;
     1602     7171    4               END;
     1603     7172
     1604     7173    3           RB = (KB-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP)/UWA.AC_REC.LPP;

   7173  4 005202   000420 236000 0                  LDQ     KB
         4 005203   000245 136000 xsym               SBLQ    UWA+165
         4 005204   000253 036000 xsym               ADLQ    UWA+171
         4 005205   000253 506000 xsym               DIV     UWA+171
         4 005206   000000 756000 xsym               STQ     RB

     1605     7174    3           RE = (KE-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP)/UWA.AC_REC.LPP;

   7174  4 005207   000421 236000 0                  LDQ     KE
         4 005210   000245 136000 xsym               SBLQ    UWA+165
         4 005211   000253 036000 xsym               ADLQ    UWA+171
         4 005212   000253 506000 xsym               DIV     UWA+171
         4 005213   000000 756000 xsym               STQ     RE

     1606     7175    3           BLN# = MOD(KB-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP,RB*UWA.AC_REC.LPP);

   7175  4 005214   000420 236000 0                  LDQ     KB
         4 005215   000245 136000 xsym               SBLQ    UWA+165
         4 005216   000253 036000 xsym               ADLQ    UWA+171
         4 005217   206236 756100                    STQ     EXPO+5,,AUTO
         4 005220   000000 236000 xsym               LDQ     RB
         4 005221   000253 402000 xsym               MPY     UWA+171
         4 005222   206237 756100                    STQ     EXPO+6,,AUTO
         4 005223   206236 236100                    LDQ     EXPO+5,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:261  
         4 005224   206237 506100                    DIV     EXPO+6,,AUTO
         4 005225   000376 755000 0                  STA     BLN#

     1607     7176    3           ELN# = MOD(KE-UWA.AC_REC.MIN_DBK+UWA.AC_REC.LPP,RE*UWA.AC_REC.LPP);

   7176  4 005226   000421 236000 0                  LDQ     KE
         4 005227   000245 136000 xsym               SBLQ    UWA+165
         4 005230   000253 036000 xsym               ADLQ    UWA+171
         4 005231   206236 756100                    STQ     EXPO+5,,AUTO
         4 005232   000000 236000 xsym               LDQ     RE
         4 005233   000253 402000 xsym               MPY     UWA+171
         4 005234   206237 756100                    STQ     EXPO+6,,AUTO
         4 005235   206236 236100                    LDQ     EXPO+5,,AUTO
         4 005236   206237 506100                    DIV     EXPO+6,,AUTO
         4 005237   000377 755000 0                  STA     ELN#

     1608     7177        /*
     1609     7178                 Check and hanlde follow set option.
     1610     7179        */
     1611     7180    3           IF ZI$DIR.FSET = %YES# THEN

   7180  4 005240   000125 236000 xsym               LDQ     ZI$DIR+85
         4 005241   000010 316003                    CANQ    8,DU
         4 005242   005402 600000 4                  TZE     s:7222

     1612     7181    4           DO;

     1613     7182    4               IF SET_INDX>0 AND CHK_KEY=KB THEN GOTO NEXT_DBK;

   7182  4 005243   000404 235000 0                  LDA     SET_INDX
         4 005244   005250 604400 4                  TMOZ    s:7183
         4 005245   000414 236000 0                  LDQ     CHK_KEY
         4 005246   000420 116000 0                  CMPQ    KB
         4 005247   005454 600000 4                  TZE     NEXT_DBK

     1614     7183    4               IF SET_INDX=-1 THEN CHK_KEY=KB; /* REMEMBER THIS KEY */

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:262  
   7183  4 005250   000022 115000 5                  CMPA    18
         4 005251   005254 601000 4                  TNZ     s:7184

   7183  4 005252   000420 236000 0                  LDQ     KB
         4 005253   000414 756000 0                  STQ     CHK_KEY

     1615     7184    4               I_O_SIZE=1;

   7184  4 005254   000001 236007                    LDQ     1,DL
         4 005255   000000 756000 xsym               STQ     I_O_SIZE

     1616     7185    4               OUT_INDX=0;

   7185  4 005256   000000 450000 xsym               STZ     OUT_INDX

     1617     7186    4               DATA$=ADDR(I_O_BUF(0));

   7186  4 005257   000000 236000 xsym               LDQ     I_O_BUF$
         4 005260   000000 756000 xsym               STQ     DATA$

     1618     7187    4               CALL READ_PAGE ALTRET(ALT_READ_AREA);

   7187  4 005261   006702 701000 4                  TSX1    READ_PAGE
         4 005262   005464 702000 4                  TSX2    ALT_READ_AREA

     1619     7188    4               LST_LN=BLN#;

   7188  4 005263   000376 720000 0                  LXL0    BLN#
         4 005264   000400 740000 0                  STX0    LST_LN

     1620     7189    4               CALL DATAPG_PRNT(BLN#,LST_LN);

   7189  4 005265   000132 236000 5                  LDQ     90
         4 005266   200022 756100                    STQ     @STRT_LN+1,,AUTO
         4 005267   000133 236000 5                  LDQ     91
         4 005270   200021 756100                    STQ     REC_NM,,AUTO
         4 005271   005676 701000 4                  TSX1    DATAPG_PRNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:263  
         4 005272   000000 011000                    NOP     0

     1621     7190    4               IF SET_INDX=-1 THEN /* FIRST PASS */

   7190  4 005273   000404 235000 0                  LDA     SET_INDX
         4 005274   000022 115000 5                  CMPA    18
         4 005275   005377 601000 4                  TNZ     s:7218

     1622     7191    5               DO;

     1623     7192    5                   CALL FIND_MSTR_ENTRY(ZI$DIR.SET_NM,SET_INDX);

   7192  4 005276   000134 630400 5                  EPPR0   92
         4 005277   000001 631400 5                  EPPR1   1
         4 005300   000000 701000 xent               TSX1    FIND_MSTR_ENTRY
         4 005301   000000 011000                    NOP     0

     1624     7193    5                   ERRCODESF.ERR#=0;

   7193  4 005302   000007 236000 5                  LDQ     7
         4 005303   000000 356000 xsym               ANSQ    ERRCODESF

     1625     7194    5                   IF SET_INDX=-1 THEN

   7194  4 005304   000404 235000 0                  LDA     SET_INDX
         4 005305   000022 115000 5                  CMPA    18
         4 005306   005314 601000 4                  TNZ     s:7200

     1626     7195    5                       ERRCODESF.ERR#=DBU#BADSET;

   7195  4 005307   000000 236000 xsym               LDQ     ERRCODESF
         4 005310   000007 376000 5                  ANQ     7
         4 005311   215620 276007                    ORQ     72592,DL
         4 005312   000000 756000 xsym               STQ     ERRCODESF
         4 005313   005350 710000 4                  TRA     s:7209

     1627     7196        /*E*  ERROR: ZIU-DBU#BADSET-C
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:264  
     1628     7197              MESSAGE: The set to follow is not defined in this schema. */
     1629     7198    5                   ELSE
     1630     7199    6                   DO;

     1631     7200    6                       X=MSTR_REF.NEXT(SET_INDX);

   7200  4 005314   000404 236000 0                  LDQ     SET_INDX
         4 005315   000012 402007                    MPY     10,DL
         4 005316   000000 470400 xsym               LDP0    MSTR$
         4 005317   000000 236106                    LDQ     0,QL,PR0
         4 005320   000022 736000                    QLS     18
         4 005321   000022 732000                    QRS     18
         4 005322   000000 756000 xsym               STQ     X

     1632     7201    7                       DO WHILE(X~=-1 AND REC_XREF.MSTRINDX(X)~=CURR_REC);

   7201  4 005323   005331 710000 4                  TRA     s:7203

     1633     7202    7                           X=REC_XREF.NEXT(X);

   7202  4 005324   000000 470400 xsym               LDP0    REC_XREF$
         4 005325   000000 720000 xsym               LXL0    X
         4 005326   000000 236110                    LDQ     0,X0,PR0
         4 005327   000022 732000                    QRS     18
         4 005330   000000 756000 xsym               STQ     X

     1634     7203    7                           END;

   7203  4 005331   000022 116000 5                  CMPQ    18
         4 005332   005341 600000 4                  TZE     s:7204
         4 005333   000000 470400 xsym               LDP0    REC_XREF$
         4 005334   000000 236106                    LDQ     0,QL,PR0
         4 005335   000001 772000                    QRL     1
         4 005336   377777 376007                    ANQ     131071,DL
         4 005337   000405 116000 0                  CMPQ    CURR_REC
         4 005340   005324 601000 4                  TNZ     s:7202

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:265  
     1635     7204    6                       IF X=-1 THEN

   7204  4 005341   000000 235000 xsym               LDA     X
         4 005342   000022 115000 5                  CMPA    18
         4 005343   005350 601000 4                  TNZ     s:7209

     1636     7205    6                           ERRCODESF.ERR#=DBU#BADRS;

   7205  4 005344   000000 236000 xsym               LDQ     ERRCODESF
         4 005345   000007 376000 5                  ANQ     7
         4 005346   215640 276007                    ORQ     72608,DL
         4 005347   000000 756000 xsym               STQ     ERRCODESF

     1637     7206        /*E*  ERROR: ZIU-DBU#BADRS-C
     1638     7207              MESSAGE: The DBK you started with is not a tenant in the set to follow. */
     1639     7208    6                       END;

     1640     7209    5                   IF ERRCODESF.ERR# > 0 THEN

   7209  4 005350   000000 236000 xsym               LDQ     ERRCODESF
         4 005351   377770 316007                    CANQ    131064,DL
         4 005352   005363 600000 4                  TZE     s:7216

     1641     7210    6                   DO;

     1642     7211    6                       ERRFLGSF=0;

   7211  4 005353   000000 450000 xsym               STZ     ERRFLGSF

     1643     7212    6                       MSGCODE=ERRCODE_RDEF;

   7212  4 005354   000000 235000 xsym               LDA     ERRCODESF
         4 005355   000000 755000 xsym               STA     MSGCODE

     1644     7213    6                       CALL SYS_FUNC_ERRMSG;

   7213  4 005356   000000 631400 5                  EPPR1   0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:266  
         4 005357   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 005360   000000 011000                    NOP     0

     1645     7214    6                       ALTRETURN;

   7214  4 005361   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 005362   000000 702211                    TSX2  ! 0,X1

     1646     7215    6                       END;
     1647     7216    5                   ZI$DIR.LOCALKEY=BINBIT(1-MSTR_REF.GLOBAL(SET_INDX),1);

   7216  4 005363   000404 236000 0                  LDQ     SET_INDX
         4 005364   000012 402007                    MPY     10,DL
         4 005365   000000 470400 xsym               LDP0    MSTR$
         4 005366   000011 236106                    LDQ     9,QL,PR0
         4 005367   000033 772000                    QRL     27
         4 005370   000022 676000 5                  ERQ     18
         4 005371   000002 036007                    ADLQ    2,DL
         4 005372   000043 736000                    QLS     35
         4 005373   000007 772000                    QRL     7
         4 005374   000125 676000 xsym               ERQ     ZI$DIR+85
         4 005375   002000 376003                    ANQ     1024,DU
         4 005376   000125 656000 xsym               ERSQ    ZI$DIR+85

     1648     7217    5                   END;

     1649     7218    4               KE=KB;

   7218  4 005377   000420 235000 0                  LDA     KB
         4 005400   000421 755000 0                  STA     KE

     1650     7219    4               GOTO FOLLOW_SET;

   7219  4 005401   005032 710000 4                  TRA     FOLLOW_SET

     1651     7220    4               END;
     1652     7221
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:267  
     1653     7222    4           DO RB = RB TO RE;

   7222  4 005402   005451 710000 4                  TRA     s:7239+3

     1654     7223    4               OUT_INDX = OUT_INDX + 1;

   7223  4 005403   000000 054000 xsym               AOS     OUT_INDX

     1655     7224    4               IF OUT_INDX >= I_O_SIZE THEN

   7224  4 005404   000000 236000 xsym               LDQ     OUT_INDX
         4 005405   000000 116000 xsym               CMPQ    I_O_SIZE
         4 005406   005422 604000 4                  TMI     s:7232

     1656     7225    5               DO;

     1657     7226    5                   I_O_SIZE = RE - RB +1;

   7226  4 005407   000000 236000 xsym               LDQ     RE
         4 005410   000000 136000 xsym               SBLQ    RB
         4 005411   000001 036007                    ADLQ    1,DL
         4 005412   000000 756000 xsym               STQ     I_O_SIZE

     1658     7227    5                   IF I_O_SIZE > 8 THEN

   7227  4 005413   000010 116007                    CMPQ    8,DL
         4 005414   005417 604400 4                  TMOZ    s:7229

     1659     7228    5                       I_O_SIZE = 8;

   7228  4 005415   000010 235007                    LDA     8,DL
         4 005416   000000 755000 xsym               STA     I_O_SIZE

     1660     7229    5                   CALL READ_PAGE ALTRET(ALT_READ_AREA);

   7229  4 005417   006702 701000 4                  TSX1    READ_PAGE
         4 005420   005464 702000 4                  TSX2    ALT_READ_AREA
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:268  

     1661     7230    5                   OUT_INDX = 0;

   7230  4 005421   000000 450000 xsym               STZ     OUT_INDX

     1662     7231    5                   END;

     1663     7232    4               DATA$ = ADDR(I_O_BUF(OUT_INDX));

   7232  4 005422   000000 236000 xsym               LDQ     OUT_INDX
         4 005423   000034 736000                    QLS     28
         4 005424   000000 036000 xsym               ADLQ    I_O_BUF$
         4 005425   000000 756000 xsym               STQ     DATA$

     1664     7233    4               IF RB ~= RE THEN

   7233  4 005426   000000 236000 xsym               LDQ     RB
         4 005427   000000 116000 xsym               CMPQ    RE
         4 005430   005435 600000 4                  TZE     s:7236

     1665     7234    4                   LST_LN = DATA_PG.OFF_LN.SEC;

   7234  4 005431   000000 470400 xsym               LDP0    DATA$
         4 005432   000005 720100                    LXL0    5,,PR0
         4 005433   000400 740000 0                  STX0    LST_LN
         4 005434   005437 710000 4                  TRA     s:7237

     1666     7235    4               ELSE
     1667     7236    4                   LST_LN = ELN#;

   7236  4 005435   000377 720000 0                  LXL0    ELN#
         4 005436   000400 740000 0                  STX0    LST_LN

     1668     7237    4               CALL DATAPG_PRNT(BLN#,LST_LN);

   7237  4 005437   000132 236000 5                  LDQ     90
         4 005440   200022 756100                    STQ     @STRT_LN+1,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:269  
         4 005441   000133 236000 5                  LDQ     91
         4 005442   200021 756100                    STQ     REC_NM,,AUTO
         4 005443   005676 701000 4                  TSX1    DATAPG_PRNT
         4 005444   000000 011000                    NOP     0

     1669     7238    4               BLN# = 0;

   7238  4 005445   000376 450000 0                  STZ     BLN#

     1670     7239    4               END;

   7239  4 005446   000000 235000 xsym               LDA     RB
         4 005447   000001 035007                    ADLA    1,DL
         4 005450   000000 755000 xsym               STA     RB
         4 005451   000000 236000 xsym               LDQ     RE
         4 005452   000000 116000 xsym               CMPQ    RB
         4 005453   005403 603000 4                  TRC     s:7223

     1671     7240    3   NEXT_DBK:
     1672     7241    3           SET_INDX = -1;

   7241  4 005454   000001 335007       NEXT_DBK     LCA     1,DL
         4 005455   000404 755000 0                  STA     SET_INDX

     1673     7242    3           END;

   7242  4 005456   000000 054000 xsym               AOS     K
         4 005457   000000 236000 xsym               LDQ     K
         4 005460   000000 116000 xsym               CMPQ    KCNT
         4 005461   005022 604400 4                  TMOZ    s:7121

     1674     7243    2       RETURN;

   7243  4 005462   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 005463   000001 702211                    TSX2  ! 1,X1

     1675     7244
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:270  
     1676     7245    2   ALT_READ_AREA:
     1677     7246    2       ALTRETURN;

   7246  4 005464   200016 221300       ALT_READ_AR* LDX1  ! AC_REC+10,,AUTO
         4 005465   000000 702211                    TSX2  ! 0,X1

     1678     7247    2   END KEY_PRNT;
     1679     7248        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:271  
     1680     7249        /*
     1681     7250                          Write  to  M$LO  routine
     1682     7251        */
     1683     7252    1   WRITE_LINE: PROC;

   7252  4 005466   200104 741300       WRITE_LINE   STX1  ! FR_SAVE+39,,AUTO

     1684     7253    2       IF BREAK_FLAG>0 AND ZI$DIR.CODE~=#REPAIR THEN

   7253  4 005467   000000 235000 xsym               LDA     BREAK_FLAG
         4 005470   005500 604400 4                  TMOZ    s:7256
         4 005471   000125 236000 xsym               LDQ     ZI$DIR+85
         4 005472   000010 376000 5                  ANQ     8
         4 005473   000011 116000 5                  CMPQ    9
         4 005474   005500 600000 4                  TZE     s:7256

     1685     7254    2           CALL BREAK_ROUTINE;

   7254  4 005475   005510 701000 4                  TSX1    BREAK_ROUTINE
         4 005476   000000 011000                    NOP     0
         4 005477   005506 710000 4                  TRA     s:7259

     1686     7255    3       ELSE DO;

     1687     7256    3           DCBSF = DCBNUM(M$LO);

   7256  4 005500   000000 236007 xsym               LDQ     M$LO,DL
         4 005501   000000 620006                    EAX0    0,QL
         4 005502   000000 740000 xsym               STX0    DCBSF

     1688     7257    3           CALL SYS_FUNC_WRIT;

   7257  4 005503   000000 631400 5                  EPPR1   0
         4 005504   000000 701000 xent               TSX1    SYS_FUNC_WRIT
         4 005505   000000 011000                    NOP     0

     1689     7258    3           END;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:272  

     1690     7259    2       RETURN;

   7259  4 005506   200104 221300                    LDX1  ! FR_SAVE+39,,AUTO
         4 005507   000001 702211                    TSX2  ! 1,X1

     1691     7260    2   END WRITE_LINE;
     1692     7261        /*
     1693     7262        -------------------------------------------------------------------
     1694     7263                    BREAK     ROUTINE
     1695     7264        --------------------------------------------------------------------
     1696     7265        */
     1697     7266    1   BREAK_ROUTINE: PROC;

   7266  4 005510   200106 741300       BREAK_ROUTI* STX1  ! @STRING+1,,AUTO

     1698     7267    2       IF ZI$DIR.CODE~=#REPAIR THEN

   7267  4 005511   000125 236000 xsym               LDQ     ZI$DIR+85
         4 005512   000010 376000 5                  ANQ     8
         4 005513   000011 116000 5                  CMPQ    9
         4 005514   005522 600000 4                  TZE     s:7272

     1699     7268    3       DO;

     1700     7269    3           DCBSF=ZI$DIR.AREA_NM.DCB#;

   7269  4 005515   000244 220000 xsym               LDX0    ZI$DIR+164
         4 005516   000000 740000 xsym               STX0    DCBSF

     1701     7270    3           CALL SYS_FUNC_CLOS;

   7270  4 005517   000000 631400 5                  EPPR1   0
         4 005520   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 005521   000000 011000                    NOP     0

     1702     7271    3           END;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:273  

     1703     7272    2       UNWIND TO RESTART;

   7272  4 005522   000100 100600                    MLR   ! fill='000'O
         4 005523   000000 000010 xsym               ADSC9   RESTART                  cn=0,n=8
         4 005524   206236 000010                    ADSC9   EXPO+5,,AUTO             cn=0,n=8
         4 005525   206236 237300                    LDAQ  ! EXPO+5,,AUTO
         4 005526   000000 700200 xent               TSX0  ! X66_AUNWIND
         4 005527   000000 000200                    ZERO    0,128

     1704     7273    2   END BREAK_ROUTINE;
     1705     7274        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:274  
     1706     7275        /*-------------------------------------------------------------------
     1707     7276              BUILD RECORD TABLE (for rec list option) and
     1708     7277                 CHECK  RECORD NAME VALIDITY.
     1709     7278        --------------------------------------------------------------------*/
     1710     7279        /*
     1711     7280           This routine checks the record names input and ensures that they
     1712     7281           exist in the schema. It also stores the record type number for each
     1713     7282           of those record names.
     1714     7283        */
     1715     7284    1   BUILD_REC_TBL: PROC ALTRET;

   7284  4 005530   200016 741300       BUILD_REC_T* STX1  ! AC_REC+10,,AUTO

     1716     7285
     1717     7286    2       IF RCNT<0 AND KCNT<0 THEN /* NO REC LIST AND DBK LIST */

   7286  4 005531   000000 235000 xsym               LDA     RCNT
         4 005532   005537 605000 4                  TPL     s:7288
         4 005533   000000 236000 xsym               LDQ     KCNT
         4 005534   005537 605000 4                  TPL     s:7288

     1718     7287    2           ZI$DIR.PHEAD=%YES#; /* PAGE HEADER TO BE PRINTED */

   7287  4 005535   000020 236003                    LDQ     16,DU
         4 005536   000125 256000 xsym               ORSQ    ZI$DIR+85

     1719     7288    2       ERRCODESF.ERR# = 0;

   7288  4 005537   000007 236000 5                  LDQ     7
         4 005540   000000 356000 xsym               ANSQ    ERRCODESF

     1720     7289    3       DO X=0 TO RCNT;

   7289  4 005541   000000 450000 xsym               STZ     X
         4 005542   005647 710000 4                  TRA     s:7323+1

     1721     7290    3           IF RECORD_LIST.NAME(X)='*CALC' THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:275  

   7290  4 005543   000000 235000 xsym               LDA     X
         4 005544   000005 735000                    ALS     5
         4 005545   040000 106405                    CMPC    fill='040'O
         4 005546   000000 000036 xsym               ADSC9   RECORD_LIST,A            cn=0,n=30
         4 005547   000004 000005 3                  ADSC9   CHAR_SET+4               cn=0,n=5
         4 005550   005560 601000 4                  TNZ     s:7296

     1722     7291    4           DO;

     1723     7292    4               ZI$DIR.PCALC = %YES#;

   7292  4 005551   000100 236003                    LDQ     64,DU
         4 005552   000125 256000 xsym               ORSQ    ZI$DIR+85

     1724     7293    4               RECORD_LIST.TYPE(X)=-1;

   7293  4 005553   000000 235000 xsym               LDA     X
         4 005554   000003 735000                    ALS     3
         4 005555   777777 220003                    LDX0    -1,DU
         4 005556   000007 440005 xsym               SXL0    RECORD_LIST+7,AL

     1725     7294    4               END;

   7294  4 005557   005646 710000 4                  TRA     s:7323

     1726     7295    3           ELSE
     1727     7296    3               IF RECORD_LIST.NAME(X)='*HEADER' THEN

   7296  4 005560   040000 106405                    CMPC    fill='040'O
         4 005561   000000 000036 xsym               ADSC9   RECORD_LIST,A            cn=0,n=30
         4 005562   000151 000007 3                  ADSC9   CHAR_SET+105             cn=0,n=7
         4 005563   005573 601000 4                  TNZ     s:7303

     1728     7297    4               DO;

     1729     7298    4                   ZI$DIR.PHEAD = %YES#;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:276  

   7298  4 005564   000020 236003                    LDQ     16,DU
         4 005565   000125 256000 xsym               ORSQ    ZI$DIR+85

     1730     7299    4                   RECORD_LIST.TYPE(X)=-1;

   7299  4 005566   000000 235000 xsym               LDA     X
         4 005567   000003 735000                    ALS     3
         4 005570   777777 220003                    LDX0    -1,DU
         4 005571   000007 440005 xsym               SXL0    RECORD_LIST+7,AL

     1731     7300    4                   END;

   7300  4 005572   005646 710000 4                  TRA     s:7323

     1732     7301    3               ELSE
     1733     7302    4               DO;

     1734     7303    4                   MSTR_INDX=0; /* SEQ SEARCH THE MSTR_REF TABLE */

   7303  4 005573   000000 450000 xsym               STZ     MSTR_INDX

     1735     7304    5                   DO WHILE(MSTR_REF.NAME(MSTR_INDX)~=RECORD_LIST.NAME(X)

   7304  4 005574   005576 710000 4                  TRA     s:7307

     1736     7305    5                      AND MSTR_INDX < NO_RECS);
     1737     7306    5                       MSTR_INDX=MSTR_INDX+1;

   7306  4 005575   000000 054000 xsym               AOS     MSTR_INDX

     1738     7307    5                       END;

   7307  4 005576   000000 236000 xsym               LDQ     MSTR_INDX
         4 005577   000050 402007                    MPY     40,DL
         4 005600   000000 235000 xsym               LDA     X
         4 005601   000005 735000                    ALS     5
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:277  
         4 005602   000000 470400 xsym               LDP0    MSTR$
         4 005603   040005 106506                    CMPC    fill='040'O
         4 005604   000001 400036                    ADSC9   1,Q,PR0                  cn=2,n=30
         4 005605   000000 000036 xsym               ADSC9   RECORD_LIST,A            cn=0,n=30
         4 005606   005612 600000 4                  TZE     s:7308
         4 005607   000000 236000 xsym               LDQ     MSTR_INDX
         4 005610   000000 116000 xsym               CMPQ    NO_RECS
         4 005611   005575 604000 4                  TMI     s:7306

     1739     7308    4                   IF MSTR_INDX < NO_RECS THEN /* FOUND IT */

   7308  4 005612   000000 236000 xsym               LDQ     MSTR_INDX
         4 005613   000000 116000 xsym               CMPQ    NO_RECS
         4 005614   005624 605000 4                  TPL     s:7315

     1740     7309    4                       RECORD_LIST.TYPE(X)=MSTR_REF.TYPE(MSTR_INDX);

   7309  4 005615   000000 235000 xsym               LDA     X
         4 005616   000003 735000                    ALS     3
         4 005617   000000 620005                    EAX0    0,AL
         4 005620   000012 402007                    MPY     10,DL
         4 005621   000000 221106                    LDX1    0,QL,PR0
         4 005622   000007 441010 xsym               SXL1    RECORD_LIST+7,X0
         4 005623   005646 710000 4                  TRA     s:7323

     1741     7310
     1742     7311    4                   ELSE
     1743     7312    5                   DO;

     1744     7313         /*E* ERROR: ZIU-DBU#NOREC-C
     1745     7314                          MESSAGE: Record name "%U1" does not exist in the schema. */
     1746     7315    5                       CALL INDEX(INDX,' ',RECORD_LIST.NAME(X));

   7315  4 005624   000000 124405                    SCM     mask='000'O
         4 005625   000000 000036 xsym               ADSC9   RECORD_LIST,A            cn=0,n=30
         4 005626   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 005627   000415 000000 0                  ARG     INDX
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:278  

     1747     7316    5                       ERR_INSERT.CNT(0) = INDX;

   7316  4 005630   000415 236000 0                  LDQ     INDX
         4 005631   000033 736000                    QLS     27
         4 005632   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1748     7317    5                       ERR_INSERT.TEXT(0) = RECORD_LIST.NAME(X);

   7317  4 005633   040000 100405                    MLR     fill='040'O
         4 005634   000000 000036 xsym               ADSC9   RECORD_LIST,A            cn=0,n=30
         4 005635   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1749     7318    5                       ERRCODESF.ERR# = DBU#NOREC;

   7318  4 005636   000000 236000 xsym               LDQ     ERRCODESF
         4 005637   000007 376000 5                  ANQ     7
         4 005640   214700 276007                    ORQ     72128,DL
         4 005641   000000 756000 xsym               STQ     ERRCODESF

     1750     7319    5                       MSGCODE = ERRCODE_RDEF;

   7319  4 005642   000000 756000 xsym               STQ     MSGCODE

     1751     7320    5                       CALL SYS_FUNC_ERRMSG;

   7320  4 005643   000000 631400 5                  EPPR1   0
         4 005644   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 005645   000000 011000                    NOP     0

     1752     7321    5                       END;

     1753     7322    4                   END;

     1754     7323    3           END;

   7323  4 005646   000000 054000 xsym               AOS     X
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:279  
         4 005647   000000 236000 xsym               LDQ     X
         4 005650   000000 116000 xsym               CMPQ    RCNT
         4 005651   005543 604400 4                  TMOZ    s:7290

     1755     7324    2       IF ERRCODESF.ERR#>0 THEN ALTRETURN; /* UNKNOWN REC FOUND */

   7324  4 005652   000000 236000 xsym               LDQ     ERRCODESF
         4 005653   377770 316007                    CANQ    131064,DL
         4 005654   005657 600000 4                  TZE     s:7329

   7324  4 005655   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 005656   000000 702211                    TSX2  ! 0,X1

     1756     7325         /* ASSOICATE EACH ITEM IN THE ITEM TABLE WITH THE REOCRD
     1757     7326            IT BELONGS TO. THE INTERPRTER INITIALIZED THE ITEM TYPE
     1758     7327            WITH THE RECORD INDEX WHERE THE RECORD NAME IS STORED.
     1759     7328            NOW, WE REPLACE THE INDEX WITH THE RECORD TYPE */
     1760     7329    3       DO X=0 TO ITMCNT;

   7329  4 005657   000000 450000 xsym               STZ     X
         4 005660   005671 710000 4                  TRA     s:7331+1

     1761     7330    3           ITEM_LIST.TYPE(X)=RECORD_LIST.TYPE(ITEM_LIST.TYPE(X));

   7330  4 005661   000000 235000 xsym               LDA     X
         4 005662   000003 735000                    ALS     3
         4 005663   000007 236005 xsym               LDQ     ITEM_LIST+7,AL
         4 005664   000022 736000                    QLS     18
         4 005665   000017 732000                    QRS     15
         4 005666   000007 720006 xsym               LXL0    RECORD_LIST+7,QL
         4 005667   000007 440005 xsym               SXL0    ITEM_LIST+7,AL

     1762     7331    3           END;

   7331  4 005670   000000 054000 xsym               AOS     X
         4 005671   000000 236000 xsym               LDQ     X
         4 005672   000000 116000 xsym               CMPQ    ITMCNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:280  
         4 005673   005661 604400 4                  TMOZ    s:7330

     1763     7332    2   END BUILD_REC_TBL;

   7332  4 005674   200016 221300                    LDX1  ! AC_REC+10,,AUTO
         4 005675   000001 702211                    TSX2  ! 1,X1

     1764     7333        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:281  
     1765     7334        /***************************************************************/
     1766     7335        /*                                                             */
     1767     7336        /*           D A T A    P A G E    P R I N T   P R O C         */
     1768     7337        /***************************************************************/
     1769     7338
     1770     7339
     1771     7340    1   DATAPG_PRNT: PROC(STRT_LN,LAST_LN);

   7340  4 005676   200020 741300       DATAPG_PRNT  STX1  ! REC_LEN,,AUTO

     1772     7341    2   DCL STRT_LN UBIN;
     1773     7342    2   DCL LAST_LN UBIN HALF CALIGNED;
     1774     7343    2       DCBSF=DCBNUM(M$LO);

   7343  4 005677   000000 236007 xsym               LDQ     M$LO,DL
         4 005700   000000 620006                    EAX0    0,QL
         4 005701   000000 740000 xsym               STX0    DCBSF

     1775     7344        /*
     1776     7345                The following several lines supply the page header with
     1777     7346                information found in the first 6 words of the data page.
     1778     7347                I.E.  page#, checksum, high line, date stamp....
     1779     7348                Print by records (rcnt) or DBK (kcnt) kills page hdr.
     1780     7349        */
     1781     7350    2       IF (ZI$DIR.PHEAD = %NO#) OR (ZI$DIR.PHEAD2 = %NO#) THEN GOTO FREC;

   7350  4 005702   000125 236000 xsym               LDQ     ZI$DIR+85
         4 005703   000020 316003                    CANQ    16,DU
         4 005704   006123 600000 4                  TZE     FREC
         4 005705   040000 316007                    CANQ    16384,DL
         4 005706   006123 600000 4                  TZE     FREC

     1782     7351    2   /**/ DATESF = VECTOR(PAGE_HDR2.DTSP);

   7351  4 005707   000136 237000 5                  LDAQ    94
         4 005710   000000 755000 xsym               STA     DATESF
         4 005711   000001 756000 xsym               STQ     DATESF+1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:282  

     1783     7352    2   /**/ SOURCESF = %UTS#;

   7352  4 005712   000004 235007                    LDA     4,DL
         4 005713   000000 755000 xsym               STA     SOURCESF

     1784     7353    2   /**/ DESTSF = %LOCAL#;

   7353  4 005714   000003 235007                    LDA     3,DL
         4 005715   000000 755000 xsym               STA     DESTSF

     1785     7354    2   /**/ TSTAMPSF = VECTOR(DATA_PG.SYS_WRDS.DATE);

   7354  4 005716   777640 235007                    LDA     -96,DL
         4 005717   000000 236000 xsym               LDQ     DATA$
         4 005720   000001 036003                    ADLQ    1,DU
         4 005721   000000 755000 xsym               STA     TSTAMPSF
         4 005722   000001 756000 xsym               STQ     TSTAMPSF+1

     1786     7355    2   /**/ TIMESF = VECTOR(PAGE_HDR2.TMSP);

   7355  4 005723   000140 237000 5                  LDAQ    96
         4 005724   000000 755000 xsym               STA     TIMESF
         4 005725   000001 756000 xsym               STQ     TIMESF+1

     1787     7356    2       CALL SYS_FUNC_TSTAMP;

   7356  4 005726   000000 631400 5                  EPPR1   0
         4 005727   000000 701000 xent               TSX1    SYS_FUNC_TSTAMP
         4 005730   000000 011000                    NOP     0

     1788     7357    2       CALL BINCHAR(PAGE_HDR.SP_AV,DATA_PG.PG_SZ.SEC);

   7357  4 005731   000000 470400 xsym               LDP0    DATA$
         4 005732   000003 236100                    LDQ     3,,PR0
         4 005733   777777 376007                    ANQ     -1,DL
         4 005734   000000 235003                    LDA     0,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:283  
         4 005735   206236 757100                    STAQ    EXPO+5,,AUTO
         4 005736   000000 301500                    BTD
         4 005737   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 005740   000024 030004 0                  NDSC9   PAGE_HDR+17              cn=0,s=nosgn,sf=0,n=4

     1789     7358    2       CALL BINCHAR(PAGE_HDR3.CHKSUM,DATA_PG.CHKSUM_WD);

   7358  4 005741   000002 235100                    LDA     2,,PR0
         4 005742   000044 773000                    LRL     36
         4 005743   206236 757100                    STAQ    EXPO+5,,AUTO
         4 005744   000000 301500                    BTD
         4 005745   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 005746   000064 630010 0                  NDSC9   PAGE_HDR3+15             cn=3,s=nosgn,sf=0,n=8

     1790     7359    2       CALL BINCHAR(PAGE_HDR3.CURR_HIGH,DATA_PG.OFF_LN.SEC);

   7359  4 005747   000005 236100                    LDQ     5,,PR0
         4 005750   777777 376007                    ANQ     -1,DL
         4 005751   000000 235003                    LDA     0,DU
         4 005752   206236 757100                    STAQ    EXPO+5,,AUTO
         4 005753   000000 301500                    BTD
         4 005754   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 005755   000050 430005 0                  NDSC9   PAGE_HDR3+3              cn=2,s=nosgn,sf=0,n=5

     1791     7360    2       IF DATA_PG.OFF_LN.FIR = 0 AND

   7360  4 005756   000005 220100                    LDX0    5,,PR0
         4 005757   005766 601000 4                  TNZ     s:7364
         4 005760   001777 721100                    LXL1    1023,,PR0
         4 005761   005766 604000 4                  TMI     s:7364

     1792     7361    2          DATA_PG.ACT_DATA_18(2035) >= 0 THEN
     1793     7362    2           PAGE_HDR3.FST_AVAIL='NONE';

   7362  4 005762   040000 100400                    MLR     fill='040'O
         4 005763   000153 000004 3                  ADSC9   CHAR_SET+107             cn=0,n=4
         4 005764   000060 400005 0                  ADSC9   PAGE_HDR3+11             cn=2,n=5
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:284  
         4 005765   005775 710000 4                  TRA     s:7365

     1794     7363    2       ELSE
     1795     7364    2           CALL BINCHAR(PAGE_HDR3.FST_AVAIL,DATA_PG.OFF_LN.FIR);

   7364  4 005766   000005 236100                    LDQ     5,,PR0
         4 005767   000022 772000                    QRL     18
         4 005770   000000 235003                    LDA     0,DU
         4 005771   206236 757100                    STAQ    EXPO+5,,AUTO
         4 005772   000000 301500                    BTD
         4 005773   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 005774   000060 430005 0                  NDSC9   PAGE_HDR3+11             cn=2,s=nosgn,sf=0,n=5

     1796     7365    2       PAGE_HDR.AREA_NAME=ZI$DIR.AREA_NM.NAME.TEXT;

   7365  4 005775   040000 100400                    MLR     fill='040'O
         4 005776   000234 200023 xsym               ADSC9   ZI$DIR+156               cn=1,n=19
         4 005777   000005 600023 0                  ADSC9   PAGE_HDR+2               cn=3,n=19

     1797     7366    2       CALL BINCHAR(PAGE_HDR.PGNO,DATA_PG.CON_INTRVAL);

   7366  4 006000   000000 301500                    BTD
         4 006001   000004 000004                    NDSC9   4,,PR0                   cn=0,s=lsgnf,sf=0,n=4
         4 006002   000015 630013 0                  NDSC9   PAGE_HDR+10              cn=3,s=nosgn,sf=0,n=11

     1798     7367    2       CALL BINCHAR(PAGE_HDR2.PRCNT,100-((DATA_PG.PG_SZ.SEC*100)/DATA_PG.PG_SZ.FIR));

   7367  4 006003   000003 236100                    LDQ     3,,PR0
         4 006004   000022 772000                    QRL     18
         4 006005   206236 756100                    STQ     EXPO+5,,AUTO
         4 006006   000003 236100                    LDQ     3,,PR0
         4 006007   777777 376007                    ANQ     -1,DL
         4 006010   000144 402007                    MPY     100,DL
         4 006011   206236 506100                    DIV     EXPO+5,,AUTO
         4 006012   000022 676000 5                  ERQ     18
         4 006013   000145 036007                    ADLQ    101,DL
         4 006014   206237 756100                    STQ     EXPO+6,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:285  
         4 006015   000000 301500                    BTD
         4 006016   206237 000004                    NDSC9   EXPO+6,,AUTO             cn=0,s=lsgnf,sf=0,n=4
         4 006017   000042 630003 0                  NDSC9   PAGE_HDR2+13             cn=3,s=nosgn,sf=0,n=3

     1799     7368    2       CALL ZERO_SUP(PAGE_HDR2.PRCNT,3,'0'B);

   7368  4 006020   000143 630400 5                  EPPR0   99
         4 006021   000075 631400 5                  EPPR1   61
         4 006022   000000 701000 xent               TSX1    ZERO_SUP
         4 006023   000000 011000                    NOP     0

     1800     7369    2       CALL ZERO_SUP(PAGE_HDR.PGNO,LENGTHC(PAGE_HDR.PGNO),'1'B);

   7369  4 006024   000147 630400 5                  EPPR0   103
         4 006025   000075 631400 5                  EPPR1   61
         4 006026   000000 701000 xent               TSX1    ZERO_SUP
         4 006027   000000 011000                    NOP     0

     1801     7370    2       CALL ZERO_SUP(PAGE_HDR.SP_AV,LENGTHC(PAGE_HDR.SP_AV),'1'B);

   7370  4 006030   000153 630400 5                  EPPR0   107
         4 006031   000075 631400 5                  EPPR1   61
         4 006032   000000 701000 xent               TSX1    ZERO_SUP
         4 006033   000000 011000                    NOP     0

     1802     7371    2       PAGE_HDR2.TMSP.SS=' ';

   7371  4 006034   040000 100400                    MLR     fill='040'O
         4 006035   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 006036   000041 400005 0                  ADSC9   PAGE_HDR2+12             cn=2,n=5

     1803     7372    2       IF PAGE_HDR.CAR_CON='A' THEN

   7372  4 006037   000003 236000 0                  LDQ     PAGE_HDR
         4 006040   777000 376003                    ANQ     -512,DU
         4 006041   101000 116003                    CMPQ    33280,DU
         4 006042   006052 601000 4                  TNZ     s:7378
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:286  

     1804     7373    3       DO; /* SIMULATE A TOP OF PAGE BY TYPING 3 BLANK LINES */

     1805     7374    3           BUFSF=VECTOR(VFC3LINES);

   7374  4 006043   000156 237000 5                  LDAQ    110
         4 006044   000000 755000 xsym               STA     BUFSF
         4 006045   000001 756000 xsym               STQ     BUFSF+1

     1806     7375    3           BUFLNSF=2;

   7375  4 006046   000002 235007                    LDA     2,DL
         4 006047   000000 755000 xsym               STA     BUFLNSF

     1807     7376    3           CALL WRITE_LINE;

   7376  4 006050   005466 701000 4                  TSX1    WRITE_LINE
         4 006051   000000 011000                    NOP     0

     1808     7377    3           END;

     1809     7378    2   /**/ BUFSF = VECTOR(PAGE_HDR);

   7378  4 006052   000160 237000 5                  LDAQ    112
         4 006053   000000 755000 xsym               STA     BUFSF
         4 006054   000001 756000 xsym               STQ     BUFSF+1

     1810     7379    2   /**/ BUFLNSF = LENGTHC(PAGE_HDR);

   7379  4 006055   000110 235007                    LDA     72,DL
         4 006056   000000 755000 xsym               STA     BUFLNSF

     1811     7380    2       CALL WRITE_LINE;

   7380  4 006057   005466 701000 4                  TSX1    WRITE_LINE
         4 006060   000000 011000                    NOP     0

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:287  
     1812     7381    2   /**/ BUFSF = VECTOR(PAGE_HDR2);

   7381  4 006061   000162 237000 5                  LDAQ    114
         4 006062   000000 755000 xsym               STA     BUFSF
         4 006063   000001 756000 xsym               STQ     BUFSF+1

     1813     7382    2   /**/ BUFLNSF = LENGTHC(PAGE_HDR2);

   7382  4 006064   000100 235007                    LDA     64,DL
         4 006065   000000 755000 xsym               STA     BUFLNSF

     1814     7383    2       CALL WRITE_LINE;

   7383  4 006066   005466 701000 4                  TSX1    WRITE_LINE
         4 006067   000000 011000                    NOP     0

     1815     7384    2       CALL ZERO_SUP(PAGE_HDR3.CURR_HIGH,5,'1'B);

   7384  4 006070   000165 630400 5                  EPPR0   117
         4 006071   000075 631400 5                  EPPR1   61
         4 006072   000000 701000 xent               TSX1    ZERO_SUP
         4 006073   000000 011000                    NOP     0

     1816     7385    2       CALL ZERO_SUP(PAGE_HDR3.FST_AVAIL,5,'1'B);

   7385  4 006074   000170 630400 5                  EPPR0   120
         4 006075   000075 631400 5                  EPPR1   61
         4 006076   000000 701000 xent               TSX1    ZERO_SUP
         4 006077   000000 011000                    NOP     0

     1817     7386    2       CALL ZERO_SUP(PAGE_HDR3.CHKSUM,8,'1'B);

   7386  4 006100   000174 630400 5                  EPPR0   124
         4 006101   000075 631400 5                  EPPR1   61
         4 006102   000000 701000 xent               TSX1    ZERO_SUP
         4 006103   000000 011000                    NOP     0

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:288  
     1818     7387    2   /**/ BUFSF = VECTOR(PAGE_HDR3);

   7387  4 006104   000200 237000 5                  LDAQ    128
         4 006105   000000 755000 xsym               STA     BUFSF
         4 006106   000001 756000 xsym               STQ     BUFSF+1

     1819     7388    2   /**/ BUFLNSF = LENGTHC(PAGE_HDR3);

   7388  4 006107   000107 235007                    LDA     71,DL
         4 006110   000000 755000 xsym               STA     BUFLNSF

     1820     7389    2       CALL WRITE_LINE;

   7389  4 006111   005466 701000 4                  TSX1    WRITE_LINE
         4 006112   000000 011000                    NOP     0

     1821     7390    2       IF RCNT>=0 THEN /* RECORD LIST OPTION SPECIFIED */

   7390  4 006113   000000 235000 xsym               LDA     RCNT
         4 006114   006117 604000 4                  TMI     s:7392

     1822     7391    2           PAGE_HDR.CAR_CON='A'; /* NO MORE TOP OF PAGE */

   7391  4 006115   101000 236003                    LDQ     33280,DU
         4 006116   000003 552040 0                  STBQ    PAGE_HDR,'40'O

     1823     7392    2       IF RCNT=0 THEN RETURN; /* OPT IS  REC=*HEADER ONLY */

   7392  4 006117   000000 115003                    CMPA    0,DU
         4 006120   006123 601000 4                  TNZ     FREC

   7392  4 006121   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 006122   000001 702211                    TSX2  ! 1,X1

     1824     7393    2   FREC:
     1825     7394    2       IF ZI$DIR.FSET = %YES# OR KEY_RANGE = %NO# THEN

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:289  
   7394  4 006123   000125 236000 xsym  FREC         LDQ     ZI$DIR+85
         4 006124   000010 316003                    CANQ    8,DU
         4 006125   006130 601000 4                  TNZ     s:7396
         4 006126   000466 234000 0                  SZN     KEY_RANGE
         4 006127   006304 604000 4                  TMI     s:7438

     1826     7395    3       DO;

     1827     7396    3           IF DATA_PG.ACT_DATA_18(2035-STRT_LN) > 4084 OR /* HIGH POSS OFFSET */

   7396  4 006130   200021 470500                    LDP0    @STRT_LN,,AUTO
         4 006131   000000 235100                    LDA     0,,PR0
         4 006132   000001 735000                    ALS     1
         4 006133   000022 675000 5                  ERA     18
         4 006134   000001 035007                    ADLA    1,DL
         4 006135   000000 471400 xsym               LDP1    DATA$
         4 006136   000100 100505                    MLR     fill='000'O
         4 006137   101777 400002                    ADSC9   1023,A,PR1               cn=2,n=2
         4 006140   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 006141   206236 236100                    LDQ     EXPO+5,,AUTO
         4 006142   000022 732000                    QRS     18
         4 006143   007764 116007                    CMPQ    4084,DL
         4 006144   006164 605400 4                  TPNZ    s:7400
         4 006145   000000 235100                    LDA     0,,PR0
         4 006146   000001 735000                    ALS     1
         4 006147   000022 675000 5                  ERA     18
         4 006150   000001 035007                    ADLA    1,DL
         4 006151   000100 100505                    MLR     fill='000'O
         4 006152   101777 400002                    ADSC9   1023,A,PR1               cn=2,n=2
         4 006153   206237 000004                    ADSC9   EXPO+6,,AUTO             cn=0,n=4
         4 006154   206237 236100                    LDQ     EXPO+6,,AUTO
         4 006155   000022 732000                    QRS     18
         4 006156   000000 116003                    CMPQ    0,DU
         4 006157   006164 604400 4                  TMOZ    s:7400
         4 006160   100005 236100                    LDQ     5,,PR1
         4 006161   777777 376007                    ANQ     -1,DL
         4 006162   000000 116100                    CMPQ    0,,PR0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:290  
         4 006163   006304 603000 4                  TRC     s:7438

     1828     7397    3              DATA_PG.ACT_DATA_18(2035-STRT_LN) <= 0 OR
     1829     7398    3              STRT_LN > DATA_PG.OFF_LN.SEC THEN
     1830     7399    4           DO;

     1831     7400    4               IF ZI$DIR.CODE = #REPAIR THEN RETURN;

   7400  4 006164   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006165   000010 376000 5                  ANQ     8
         4 006166   000011 116000 5                  CMPQ    9
         4 006167   006172 601000 4                  TNZ     s:7407

   7400  4 006170   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 006171   000001 702211                    TSX2  ! 1,X1

     1832     7401         /*E* ERROR: ZIU-DBU#NSET-C
     1833     7402                       MESSAGE: %U1 No record found at DBK# %U2.
     1834     7403                    */
     1835     7404         /*E* ERROR: ZIU-DBU#NSETL-C
     1836     7405                       MESSAGE: %U1 No record found at DBK# %U2 ( Local key# %U3).
     1837     7406                    */
     1838     7407    4               IF ZI$DIR.FSET THEN

   7407  4 006172   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006173   000010 316003                    CANQ    8,DU
         4 006174   006203 600000 4                  TZE     s:7413

     1839     7408    5               DO;

     1840     7409    5                   ERR_INSERT.CNT(0) = 18;

   7409  4 006175   022000 236003                    LDQ     9216,DU
         4 006176   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1841     7410    5                   ERR_INSERT.TEXT(0) ='Set pointer error:';

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:291  
   7410  4 006177   040000 100400                    MLR     fill='040'O
         4 006200   000154 000022 3                  ADSC9   CHAR_SET+108             cn=0,n=18
         4 006201   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1842     7411    5                   END;

   7411  4 006202   006210 710000 4                  TRA     s:7416

     1843     7412    5               ELSE DO;

     1844     7413    5                   ERR_INSERT.CNT(0) = 1;

   7413  4 006203   001000 236003                    LDQ     512,DU
         4 006204   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     1845     7414    5                   ERR_INSERT.TEXT(0) = ' ';

   7414  4 006205   040000 100400                    MLR     fill='040'O
         4 006206   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 006207   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     1846     7415    5                   END;

     1847     7416    4               CALL BINCHAR(ERR_INSERT.TEXT(1),KB);

   7416  4 006210   000420 235000 0                  LDA     KB
         4 006211   000044 773000                    LRL     36
         4 006212   206236 757100                    STAQ    EXPO+5,,AUTO
         4 006213   000000 301500                    BTD
         4 006214   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 006215   000010 230036 xsym               NDSC9   ERR_INSERT+8             cn=1,s=nosgn,sf=0,n=30

     1848     7417    4               CALL ZERO_SUP(ERR_INSERT.TEXT(1),30,'1'B);

   7417  4 006216   000103 630400 5                  EPPR0   67
         4 006217   000075 631400 5                  EPPR1   61
         4 006220   000000 701000 xent               TSX1    ZERO_SUP
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:292  
         4 006221   000000 011000                    NOP     0

     1849     7418    4               IF ZI$DIR.LOCALKEY AND ~LOCAL_ONLY THEN

   7418  4 006222   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006223   002000 316003                    CANQ    1024,DU
         4 006224   006260 600000 4                  TZE     s:7427
         4 006225   000467 236000 0                  LDQ     LOCAL_ONLY
         4 006226   400000 376003                    ANQ     -131072,DU
         4 006227   400000 676003                    ERQ     -131072,DU
         4 006230   006260 600000 4                  TZE     s:7427

     1850     7419    5               DO;

     1851     7420    5                   CALL BINCHAR(ERR_INSERT.TEXT(2),KB-UWA.AC_REC.MIN_DBK+1);

   7420  4 006231   000420 236000 0                  LDQ     KB
         4 006232   000245 136000 xsym               SBLQ    UWA+165
         4 006233   000001 036007                    ADLQ    1,DL
         4 006234   206236 756100                    STQ     EXPO+5,,AUTO
         4 006235   000000 301500                    BTD
         4 006236   206236 000004                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=4
         4 006237   000020 230036 xsym               NDSC9   ERR_INSERT+16            cn=1,s=nosgn,sf=0,n=30

     1852     7421    5                   CALL ZERO_SUP(ERR_INSERT.TEXT(2),30,'1'B);

   7421  4 006240   000202 630400 5                  EPPR0   130
         4 006241   000075 631400 5                  EPPR1   61
         4 006242   000000 701000 xent               TSX1    ZERO_SUP
         4 006243   000000 011000                    NOP     0

     1853     7422    5                   CALL INDEX(INDX,' ',ERR_INSERT.TEXT(2),0);

   7422  4 006244   000000 124400                    SCM     mask='000'O
         4 006245   000020 200036 xsym               ADSC9   ERR_INSERT+16            cn=1,n=30
         4 006246   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 006247   000415 000000 0                  ARG     INDX
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:293  

     1854     7423    5                   ERR_INSERT.CNT(2) = INDX;

   7423  4 006250   000415 236000 0                  LDQ     INDX
         4 006251   000033 736000                    QLS     27
         4 006252   000020 552040 xsym               STBQ    ERR_INSERT+16,'40'O

     1855     7424    5                   ERRCODESF.ERR# = DBU#NSETL;

   7424  4 006253   000000 236000 xsym               LDQ     ERRCODESF
         4 006254   000007 376000 5                  ANQ     7
         4 006255   215200 276007                    ORQ     72320,DL
         4 006256   000000 756000 xsym               STQ     ERRCODESF

     1856     7425    5                   END;

   7425  4 006257   006264 710000 4                  TRA     s:7428

     1857     7426    4               ELSE
     1858     7427    4                   ERRCODESF.ERR# = DBU#NSET;

   7427  4 006260   000000 236000 xsym               LDQ     ERRCODESF
         4 006261   000007 376000 5                  ANQ     7
         4 006262   214670 276007                    ORQ     72120,DL
         4 006263   000000 756000 xsym               STQ     ERRCODESF

     1859     7428    4               ERRFLGSF = 0;

   7428  4 006264   000000 450000 xsym               STZ     ERRFLGSF

     1860     7429    4               MSGCODE = ERRCODE_RDEF;

   7429  4 006265   000000 756000 xsym               STQ     MSGCODE

     1861     7430    4               CALL SYS_FUNC_ERRMSG;

   7430  4 006266   000000 631400 5                  EPPR1   0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:294  
         4 006267   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 006270   000000 011000                    NOP     0

     1862     7431    4               IF ZI$DIR.FSET = %NO# THEN

   7431  4 006271   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006272   000010 316003                    CANQ    8,DU
         4 006273   006276 601000 4                  TNZ     s:7433

     1863     7432    4                   RETURN;

   7432  4 006274   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 006275   000001 702211                    TSX2  ! 1,X1

     1864     7433    4               ZI$DIR.LOCALKEY = %NO#;

   7433  4 006276   000111 236000 5                  LDQ     73
         4 006277   000125 356000 xsym               ANSQ    ZI$DIR+85

     1865     7434    4               KB=CHK_KEY;

   7434  4 006300   000414 235000 0                  LDA     CHK_KEY
         4 006301   000420 755000 0                  STA     KB

     1866     7435    4               RETURN;

   7435  4 006302   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 006303   000001 702211                    TSX2  ! 1,X1

     1867     7436    4               END;
     1868     7437    3           END;
     1869     7438    2       IF STRT_LN > DATA_PG.OFF_LN.SEC

   7438  4 006304   200021 470500                    LDP0    @STRT_LN,,AUTO
         4 006305   000000 471400 xsym               LDP1    DATA$
         4 006306   100005 236100                    LDQ     5,,PR1
         4 006307   777777 376007                    ANQ     -1,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:295  
         4 006310   000000 116100                    CMPQ    0,,PR0
         4 006311   006314 603000 4                  TRC     s:7440

     1870     7439    2       THEN RETURN;

   7439  4 006312   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 006313   000001 702211                    TSX2  ! 1,X1

     1871     7440    2       IF LAST_LN > DATA_PG.OFF_LN.SEC

   7440  4 006314   200022 473500                    LDP3    @LAST_LN,,AUTO
         4 006315   000100 101500                    MRL     fill='000'O
         4 006316   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2
         4 006317   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 006320   100005 236100                    LDQ     5,,PR1
         4 006321   777777 376007                    ANQ     -1,DL
         4 006322   206236 116100                    CMPQ    EXPO+5,,AUTO
         4 006323   006327 605000 4                  TPL     s:7442

     1872     7441    2       THEN LAST_LN = DATA_PG.OFF_LN.SEC;

   7441  4 006324   000100 100500                    MLR     fill='000'O
         4 006325   100005 400002                    ADSC9   5,,PR1                   cn=2,n=2
         4 006326   300000 000002                    ADSC9   0,,PR3                   cn=0,n=2

     1873     7442    3       DO I= STRT_LN TO LAST_LN ; /* First record to last record of page */

   7442  4 006327   000000 235100                    LDA     0,,PR0
         4 006330   000000 755000 xsym               STA     I
         4 006331   006506 710000 4                  TRA     s:7475+1

     1874     7443    3           IF BREAK_FLAG > 0 THEN

   7443  4 006332   000000 235000 xsym               LDA     BREAK_FLAG
         4 006333   006336 604400 4                  TMOZ    s:7445

     1875     7444    3               CALL BREAK_ROUTINE;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:296  

   7444  4 006334   005510 701000 4                  TSX1    BREAK_ROUTINE
         4 006335   000000 011000                    NOP     0

     1876     7445    3           IF DATA_PG.ACT_DATA_18(2035 - I) > 0 THEN

   7445  4 006336   000000 335000 xsym               LCA     I
         4 006337   000001 735000                    ALS     1
         4 006340   000000 470400 xsym               LDP0    DATA$
         4 006341   000100 100505                    MLR     fill='000'O
         4 006342   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 006343   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 006344   206236 236100                    LDQ     EXPO+5,,AUTO
         4 006345   000022 732000                    QRS     18
         4 006346   000000 116003                    CMPQ    0,DU
         4 006347   006505 604400 4                  TMOZ    s:7475

     1877     7446    4           DO;

     1878     7447    4               REC$=PINCRC(DATA$,12+DATA_PG.ACT_DATA_18(2035 - I));

   7447  4 006350   000100 100505                    MLR     fill='000'O
         4 006351   001777 400002                    ADSC9   1023,A,PR0               cn=2,n=2
         4 006352   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 006353   206236 236100                    LDQ     EXPO+5,,AUTO
         4 006354   000022 732000                    QRS     18
         4 006355   000020 736000                    QLS     16
         4 006356   000003 036003                    ADLQ    3,DU
         4 006357   000000 036000 xsym               ADLQ    DATA$
         4 006360   000000 756000 xsym               STQ     REC$

     1879     7448    4               CALL BINCHAR(REC_HDR.PAGE_NO,DATA_PG.CON_INTRVAL);

   7448  4 006361   000000 301500                    BTD
         4 006362   000004 000004                    NDSC9   4,,PR0                   cn=0,s=lsgnf,sf=0,n=4
         4 006363   000102 630010 0                  NDSC9   REC_HDR+11               cn=3,s=nosgn,sf=0,n=8

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:297  
     1880     7449    4               CALL BINCHAR(REC_HDR.LN_NBR,I);

   7449  4 006364   000000 301400                    BTD
         4 006365   000000 000004 xsym               NDSC9   I                        cn=0,s=lsgnf,sf=0,n=4
         4 006366   000106 230005 0                  NDSC9   REC_HDR+15               cn=1,s=nosgn,sf=0,n=5

     1881     7450    4               CALL BINCHAR(REC_HDR.DBK,(DATA_PG.CON_INTRVAL*UWA.AC_REC.LPP)

   7450  4 006367   000004 236100                    LDQ     4,,PR0
         4 006370   000253 402000 xsym               MPY     UWA+171
         4 006371   000000 036000 xsym               ADLQ    I
         4 006372   000245 036000 xsym               ADLQ    UWA+165
         4 006373   000253 136000 xsym               SBLQ    UWA+171
         4 006374   206236 756100                    STQ     EXPO+5,,AUTO
         4 006375   000000 301500                    BTD
         4 006376   206236 000004                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=4
         4 006377   000076 630012 0                  NDSC9   REC_HDR+7                cn=3,s=nosgn,sf=0,n=10

     1882     7451    4                  + I + UWA.AC_REC.MIN_DBK -
     1883     7452    4                  UWA.AC_REC.LPP);
     1884     7453    4               CALL FIND_REC;

   7453  4 006400   007236 701000 4                  TSX1    FIND_REC
         4 006401   000000 011000                    NOP     0

     1885     7454    4               IF ZI$DIR.CODE=#REPAIR AND ZI$DIR.PITEM=%NO# THEN

   7454  4 006402   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006403   000010 376000 5                  ANQ     8
         4 006404   000011 116000 5                  CMPQ    9
         4 006405   006413 601000 4                  TNZ     s:7456
         4 006406   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006407   000040 316003                    CANQ    32,DU
         4 006410   006413 601000 4                  TNZ     s:7456

     1886     7455    4                   RETURN; /* IF COMES FROM REPAIR */

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:298  
   7455  4 006411   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 006412   000001 702211                    TSX2  ! 1,X1

     1887     7456    4               IF REC_HDR.REC_NM='*CALC.RC' OR REC_HDR.REC_NM=' ' THEN GOTO FREC_END;

   7456  4 006413   040000 106400                    CMPC    fill='040'O
         4 006414   000067 200031 0                  ADSC9   REC_HDR                  cn=1,n=25
         4 006415   000161 000010 3                  ADSC9   CHAR_SET+113             cn=0,n=8
         4 006416   006502 600000 4                  TZE     FREC_END
         4 006417   040000 106400                    CMPC    fill='040'O
         4 006420   000067 200031 0                  ADSC9   REC_HDR                  cn=1,n=25
         4 006421   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 006422   006502 600000 4                  TZE     FREC_END

     1888     7457    4               X=0;

   7457  4 006423   000000 450000 xsym               STZ     X

     1889     7458    4               IF RCNT>-1 THEN

   7458  4 006424   000000 235000 xsym               LDA     RCNT
         4 006425   006442 604000 4                  TMI     s:7462

     1890     7459    5               DO WHILE(RECORD_LIST.TYPE(X)~=REC_TYP AND X<=RCNT);

   7459  4 006426   006430 710000 4                  TRA     s:7461

     1891     7460    5                   X=X+1;

   7460  4 006427   000000 054000 xsym               AOS     X

     1892     7461    5                   END;

   7461  4 006430   000000 235000 xsym               LDA     X
         4 006431   000003 735000                    ALS     3
         4 006432   000007 236005 xsym               LDQ     RECORD_LIST+7,AL
         4 006433   000022 736000                    QLS     18
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:299  
         4 006434   000022 732000                    QRS     18
         4 006435   000000 116000 0                  CMPQ    REC_TYP
         4 006436   006442 600000 4                  TZE     s:7462
         4 006437   000000 236000 xsym               LDQ     X
         4 006440   000000 116000 xsym               CMPQ    RCNT
         4 006441   006427 604400 4                  TMOZ    s:7460

     1893     7462    4               IF RCNT=-1 OR X<=RCNT THEN

   7462  4 006442   000000 235000 xsym               LDA     RCNT
         4 006443   000022 115000 5                  CMPA    18
         4 006444   006450 600000 4                  TZE     s:7464
         4 006445   000000 236000 xsym               LDQ     X
         4 006446   000000 116000 xsym               CMPQ    RCNT
         4 006447   006473 605400 4                  TPNZ    s:7471

     1894     7463    5               DO;

     1895     7464    5                   CALL REC_OUTPUT;

   7464  4 006450   011131 701000 4                  TSX1    REC_OUTPUT
         4 006451   000000 011000                    NOP     0

     1896     7465    5                   IF ZI$DIR.PITEM OR ITMCNT>=0 THEN

   7465  4 006452   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006453   000040 316003                    CANQ    32,DU
         4 006454   006457 601000 4                  TNZ     s:7466
         4 006455   000000 235000 xsym               LDA     ITMCNT
         4 006456   006461 604000 4                  TMI     s:7467

     1897     7466    5                       CALL FIND_PRINT_ITEMS;

   7466  4 006457   007720 701000 4                  TSX1    FIND_PRINT_ITEMS
         4 006460   000000 011000                    NOP     0

     1898     7467    5                   IF ZI$DIR.PSETS OR ZI$DIR.FSET THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:300  

   7467  4 006461   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006462   100000 316007                    CANQ    32768,DL
         4 006463   006466 601000 4                  TNZ     s:7468
         4 006464   000010 316003                    CANQ    8,DU
         4 006465   006502 600000 4                  TZE     FREC_END

     1899     7468    5                       CALL FIND_PRINT_SETS(ZI$DIR.PSETS);

   7468  4 006466   000205 236000 5                  LDQ     133
         4 006467   200025 756100                    STQ     @LAST_LN+3,,AUTO
         4 006470   007511 701000 4                  TSX1    FIND_PRINT_SETS
         4 006471   000000 011000                    NOP     0

     1900     7469    5                   END;

   7469  4 006472   006502 710000 4                  TRA     FREC_END

     1901     7470    4               ELSE
     1902     7471    4                   IF ZI$DIR.FSET THEN CALL FIND_PRINT_SETS('0'B);

   7471  4 006473   000125 236000 xsym               LDQ     ZI$DIR+85
         4 006474   000010 316003                    CANQ    8,DU
         4 006475   006502 600000 4                  TZE     FREC_END

   7471  4 006476   000024 236000 5                  LDQ     20
         4 006477   200025 756100                    STQ     @LAST_LN+3,,AUTO
         4 006500   007511 701000 4                  TSX1    FIND_PRINT_SETS
         4 006501   000000 011000                    NOP     0

     1903     7472    4   FREC_END:
     1904     7473    4               REC_CNT=REC_CNT+1;

   7473  4 006502   000402 235000 0     FREC_END     LDA     REC_CNT
         4 006503   000001 035007                    ADLA    1,DL
         4 006504   000402 755000 0                  STA     REC_CNT

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:301  
     1905     7474    4               END;

     1906     7475    3           END;

   7475  4 006505   000000 054000 xsym               AOS     I
         4 006506   200022 470500                    LDP0    @LAST_LN,,AUTO
         4 006507   000100 101500                    MRL     fill='000'O
         4 006510   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         4 006511   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 006512   206236 236100                    LDQ     EXPO+5,,AUTO
         4 006513   000000 116000 xsym               CMPQ    I
         4 006514   006332 605000 4                  TPL     s:7443

     1907     7476    2       RETURN;

   7476  4 006515   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 006516   000001 702211                    TSX2  ! 1,X1

     1908     7477    2   END DATAPG_PRNT;
     1909     7478        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:302  
     1910     7479        /*****************************************************************/
     1911     7480        /*          C H E C K   A T T R I B U T E    P A G E             */
     1912     7481        /*****************************************************************/
     1913     7482    1   GET_ATBLK_INFO: PROC ALTRET;

   7482  4 006517   200022 741300       GET_ATBLK_I* STX1  ! @LAST_LN,,AUTO

     1914     7483        /*
     1915     7484           The purpose of this procedure is to get attributes of the
     1916     7485           area being printed. Information on the inventory pages and data
     1917     7486           base keys may be inconsistent with the schema if the area is
     1918     7487           defined as a template area since these things may change after
     1919     7488           the schema was validated.
     1920     7489        */
     1921     7490    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;

   7490  4 006520   000244 220000 xsym               LDX0    ZI$DIR+164
         4 006521   000000 740000 xsym               STX0    DCBSF

     1922     7491    2       ORGSF = DCBADDR(DCBSF) -> F$DCB.ORG#;

   7491  4 006522   000044 470400 5                  LDP0    36
         4 006523   000000 471500                    LDP1    0,,PR0
         4 006524   100000 473510                    LDP3    0,X0,PR1
         4 006525   300032 236100                    LDQ     26,,PR3
         4 006526   000033 772000                    QRL     27
         4 006527   000000 756000 xsym               STQ     ORGSF

     1923     7492    2       ATBLK$ = ADDR(I_O_BUF(0));

   7492  4 006530   000000 236000 xsym               LDQ     I_O_BUF$
         4 006531   000000 756000 xsym               STQ     ATBLK$

     1924     7493    2       IF ORGSF = %KEYED# THEN

   7493  4 006532   000000 235000 xsym               LDA     ORGSF
         4 006533   000002 115007                    CMPA    2,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:303  
         4 006534   006540 601000 4                  TNZ     s:7496

     1925     7494    2           DUMP_FILE =%YES#;

   7494  4 006535   400000 236003                    LDQ     -131072,DU
         4 006536   000470 756000 0                  STQ     DUMP_FILE
         4 006537   006554 710000 4                  TRA     s:7507

     1926     7495    2       ELSE
     1927     7496    2           IF ORGSF ~= %IDS# THEN

   7496  4 006540   000007 115007                    CMPA    7,DL
         4 006541   006554 600000 4                  TZE     s:7507

     1928     7497    3           DO;

     1929     7498         /*E* ERROR: ZIU-DBU#NODMP-C
     1930     7499                       MESSAGE:   Input file to PRINT utility must be an IDS area file
     1931     7500                                  or a DBUTIL dump of the IDS area file.
     1932     7501                       */
     1933     7502    3               ERRCODESF.ERR# = DBU#NODMP;

   7502  4 006542   000000 236000 xsym               LDQ     ERRCODESF
         4 006543   000007 376000 5                  ANQ     7
         4 006544   214640 276007                    ORQ     72096,DL
         4 006545   000000 756000 xsym               STQ     ERRCODESF

     1934     7503    3               MSGCODE = ERRCODE_RDEF;

   7503  4 006546   000000 756000 xsym               STQ     MSGCODE

     1935     7504    3               CALL SYS_FUNC_ERRMSG;

   7504  4 006547   000000 631400 5                  EPPR1   0
         4 006550   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 006551   000000 011000                    NOP     0

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:304  
     1936     7505    3               ALTRETURN;

   7505  4 006552   200022 221300                    LDX1  ! @LAST_LN,,AUTO
         4 006553   000000 702211                    TSX2  ! 0,X1

     1937     7506    3               END;
     1938     7507    2       RB=0; /* CURRENT PAGE */

   7507  4 006554   000000 450000 xsym               STZ     RB

     1939     7508    2       KEY_RANGE = %YES#;

   7508  4 006555   400000 236003                    LDQ     -131072,DU
         4 006556   000466 756000 0                  STQ     KEY_RANGE

     1940     7509    2       LOCAL_ONLY = %NO#;

   7509  4 006557   000467 450000 0                  STZ     LOCAL_ONLY

     1941     7510    2       IF UWA.AC_REC.MIN_DBK = 1 THEN

   7510  4 006560   000245 235000 xsym               LDA     UWA+165
         4 006561   000001 115007                    CMPA    1,DL
         4 006562   006564 601000 4                  TNZ     s:7512

     1942     7511    2           LOCAL_ONLY = %YES#;

   7511  4 006563   000467 756000 0                  STQ     LOCAL_ONLY

     1943     7512    2       I_O_SIZE = 1; /* Number of pages to read */

   7512  4 006564   000001 235007                    LDA     1,DL
         4 006565   000000 755000 xsym               STA     I_O_SIZE

     1944     7513    2       CALL READ_PAGE ALTRET(ALT_READ);

   7513  4 006566   006702 701000 4                  TSX1    READ_PAGE
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:305  
         4 006567   006700 702000 4                  TSX2    ALT_READ

     1945     7514    2       CHK_SUM=ATBLK_PG.MISC_INFO.CHKSM;

   7514  4 006570   000000 470400 xsym               LDP0    ATBLK$
         4 006571   000030 236100                    LDQ     24,,PR0
         4 006572   000001 736000                    QLS     1
         4 006573   400000 376003                    ANQ     -131072,DU
         4 006574   000473 756000 0                  STQ     CHK_SUM

     1946     7515    2       IF ORGSF = %KEYED# THEN

   7515  4 006575   000000 235000 xsym               LDA     ORGSF
         4 006576   000002 115007                    CMPA    2,DL
         4 006577   006615 601000 4                  TNZ     s:7524

     1947     7516    2           IF ATBLK_PG.IDS_HDR ~= 'DUMP' THEN

   7516  4 006600   000003 236100                    LDQ     3,,PR0
         4 006601   000163 116000 3                  CMPQ    CHAR_SET+115
         4 006602   006615 600000 4                  TZE     s:7524

     1948     7517    3           DO;

     1949     7518    3               ERRCODESF.ERR# = 1101;

   7518  4 006603   000000 236000 xsym               LDQ     ERRCODESF
         4 006604   000007 376000 5                  ANQ     7
         4 006605   021150 276007                    ORQ     8808,DL
         4 006606   000000 756000 xsym               STQ     ERRCODESF

     1950     7519    3               MSGCODE = ERRCODE_RDEF;

   7519  4 006607   000000 756000 xsym               STQ     MSGCODE

     1951     7520    3               CALL SYS_FUNC_ERRMSG;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:306  
   7520  4 006610   000000 631400 5                  EPPR1   0
         4 006611   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 006612   000000 011000                    NOP     0

     1952     7521    3               ALTRETURN;

   7521  4 006613   200022 221300                    LDX1  ! @LAST_LN,,AUTO
         4 006614   000000 702211                    TSX2  ! 0,X1

     1953     7522    3               END;
     1954     7523        /**/
     1955     7524    3       IF ZI$DIR.CALCKEY THEN DO;

   7524  4 006615   000126 236000 xsym               LDQ     ZI$DIR+86
         4 006616   040000 316003                    CANQ    16384,DU
         4 006617   006653 600000 4                  TZE     s:7539

     1956     7525    3           AC_REC.CALC_NULL = UWA.AC_REC.CALC_NULL;

   7525  4 006620   000241 235000 xsym               LDA     UWA+161
         4 006621   200004 755100                    STA     AC_REC,,AUTO

     1957     7526    3           AC_REC.BASE_DBK = UWA.AC_REC.BASE_DBK;

   7526  4 006622   000242 235000 xsym               LDA     UWA+162
         4 006623   200005 755100                    STA     AC_REC+1,,AUTO

     1958     7527    3           AC_REC.KEYS_ALLOC = UWA.AC_REC.KEY_ALLOC;

   7527  4 006624   000243 235000 xsym               LDA     UWA+163
         4 006625   200006 755100                    STA     AC_REC+2,,AUTO

     1959     7528    3           AC_REC.MIN_DBK = UWA.AC_REC.MIN_DBK;

   7528  4 006626   000245 235000 xsym               LDA     UWA+165
         4 006627   200007 755100                    STA     AC_REC+3,,AUTO

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:307  
     1960     7529    3           AC_REC.MAX_DBK = UWA.AC_REC.MAX_DBK;

   7529  4 006630   000246 235000 xsym               LDA     UWA+166
         4 006631   200010 755100                    STA     AC_REC+4,,AUTO

     1961     7530    3           AC_REC.MIN_PAGE = UWA.AC_REC.MIN_PAGE;

   7530  4 006632   000247 235000 xsym               LDA     UWA+167
         4 006633   200011 755100                    STA     AC_REC+5,,AUTO

     1962     7531    3           AC_REC.MAX_PAGE = UWA.AC_REC.MAX_PAGE;

   7531  4 006634   000250 235000 xsym               LDA     UWA+168
         4 006635   200012 755100                    STA     AC_REC+6,,AUTO

     1963     7532    3           AC_REC.FRST_INV_PG = UWA.AC_REC.FIR_INV_PG;

   7532  4 006636   000252 235000 xsym               LDA     UWA+170
         4 006637   200013 755100                    STA     AC_REC+7,,AUTO

     1964     7533    3           AC_REC.DBK_PER_PG = UWA.AC_REC.LPP;

   7533  4 006640   000253 235000 xsym               LDA     UWA+171
         4 006641   200014 755100                    STA     AC_REC+8,,AUTO

     1965     7534    3           AC_REC.DBK_PER_CALC = UWA.AC_REC.IDB;

   7534  4 006642   000254 235000 xsym               LDA     UWA+172
         4 006643   200015 755100                    STA     AC_REC+9,,AUTO

     1966     7535    3           CALCHDRS = ATBLK_PG.TOT_CALC_HDRS;

   7535  4 006644   000013 235100                    LDA     11,,PR0
         4 006645   200003 755100                    STA     CALCHDRS,,AUTO

     1967     7536    3           LOW_DBK = ATBLK_PG.LOW_DBK;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:308  
   7536  4 006646   000015 235100                    LDA     13,,PR0
         4 006647   000000 755000 xsym               STA     LOW_DBK

     1968     7537    3           LPP = ATBLK_PG.LINE_INFO.LPP;

   7537  4 006650   000012 236100                    LDQ     10,,PR0
         4 006651   777777 376007                    ANQ     -1,DL
         4 006652   000000 756000 xsym               STQ     LPP

     1969     7538    3           END;

     1970     7539    2       IF UWA.AC_REC.SWS.TEMPLAT = %YES# THEN

   7539  4 006653   000233 236000 xsym               LDQ     UWA+155
         4 006654   040000 316003                    CANQ    16384,DU
         4 006655   006676 600000 4                  TZE     s:7549

     1971     7540    3       DO;

     1972     7541    3           UWA.AC_REC.CALC_HDRS = ATBLK_PG.TOT_CALC_HDRS;

   7541  4 006656   000013 235100                    LDA     11,,PR0
         4 006657   000251 755000 xsym               STA     UWA+169

     1973     7542    3           UWA.AC_REC.MAX_PAGE = ATBLK_PG.NUM_DBPG;

   7542  4 006660   000005 235100                    LDA     5,,PR0
         4 006661   000250 755000 xsym               STA     UWA+168

     1974     7543    3           UWA.AC_REC.MAX_DBK = ATBLK_PG.HIGH_DBK;

   7543  4 006662   000016 235100                    LDA     14,,PR0
         4 006663   000246 755000 xsym               STA     UWA+166

     1975     7544    3           UWA.AC_REC.INV_UNIT = ATBLK_PG.MISC_INFO.IUSZ;

   7544  4 006664   000030 236100                    LDQ     24,,PR0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:309  
         4 006665   777777 376007                    ANQ     -1,DL
         4 006666   000261 756000 xsym               STQ     UWA+177

     1976     7545    3           UWA.AC_REC.FIR_INV_PG = ATBLK_PG.FIR_INV_PGNO;

   7545  4 006667   000014 235100                    LDA     12,,PR0
         4 006670   000252 755000 xsym               STA     UWA+170

     1977     7546    3           LOW_DBK = ATBLK_PG.LOW_DBK;

   7546  4 006671   000015 235100                    LDA     13,,PR0
         4 006672   000000 755000 xsym               STA     LOW_DBK

     1978     7547    3           LPP = ATBLK_PG.LINE_INFO.LPP;

   7547  4 006673   000012 236100                    LDQ     10,,PR0
         4 006674   777777 376007                    ANQ     -1,DL
         4 006675   000000 756000 xsym               STQ     LPP

     1979     7548    3           END;

     1980     7549    2       RETURN;

   7549  4 006676   200022 221300                    LDX1  ! @LAST_LN,,AUTO
         4 006677   000001 702211                    TSX2  ! 1,X1

     1981     7550        /**/
     1982     7551    2   ALT_READ: ALTRETURN;

   7551  4 006700   200022 221300       ALT_READ     LDX1  ! @LAST_LN,,AUTO
         4 006701   000000 702211                    TSX2  ! 0,X1

     1983     7552    2   END GET_ATBLK_INFO;
     1984     7553        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:310  
     1985     7554        /*-----------------------------------------------------------------
     1986     7555                 R E A D     P A G E     P R O C E D U R E
     1987     7556        ------------------------------------------------------------------*/
     1988     7557    1   READ_PAGE: PROC ALTRET;

   7557  4 006702   206232 741300       READ_PAGE    STX1  ! EXPO+1,,AUTO

     1989     7558    2   DCL CNTER SBIN STATIC;
     1990     7559
     1991     7560    2   /**/ DCBSF = ZI$DIR.AREA_NM.DCB#;

   7560  4 006703   000244 220000 xsym               LDX0    ZI$DIR+164
         4 006704   000000 740000 xsym               STX0    DCBSF

     1992     7561    2   /**/ BUFSF = VECTOR(I_O_BUF);

   7561  4 006705   000116 235000 5                  LDA     78
         4 006706   000000 236000 xsym               LDQ     I_O_BUF$
         4 006707   000000 755000 xsym               STA     BUFSF
         4 006710   000001 756000 xsym               STQ     BUFSF+1

     1993     7562    2   /**/ BUFLNSF=4096 * I_O_SIZE;

   7562  4 006711   000000 235000 xsym               LDA     I_O_SIZE
         4 006712   000014 735000                    ALS     12
         4 006713   000000 755000 xsym               STA     BUFLNSF

     1994     7563        /*      Check if the amount of memory we need is greater than the
     1995     7564                amount we have allocated.   */
     1996     7565
     1997     7566    2       IF I_O_SIZE > NBUFS*2

   7566  4 006714   000000 236000 xsym               LDQ     NBUFS
         4 006715   000001 736000                    QLS     1
         4 006716   000000 116000 xsym               CMPQ    I_O_SIZE
         4 006717   006735 605000 4                  TPL     s:7577

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:311  
     1998     7567    3       THEN DO;

     1999     7568        /*E* ERROR: ZIU-DBU#INSUFMEM_TO_CONT-C
     2000     7569        MESSAGE: Insufficient memory to continue.  Use the !RES or !ORES
     2001     7570                 command to allocate more memory. */
     2002     7571    3           ERRCODESF.ERR# = DBU#INSUFMEM_TO_CONT;

   7571  4 006720   000000 236000 xsym               LDQ     ERRCODESF
         4 006721   000007 376000 5                  ANQ     7
         4 006722   215310 276007                    ORQ     72392,DL
         4 006723   000000 756000 xsym               STQ     ERRCODESF

     2003     7572    3           ERRFLGSF = 3;

   7572  4 006724   003000 236003                    LDQ     1536,DU
         4 006725   000000 756000 xsym               STQ     ERRFLGSF

     2004     7573    3           MSGCODE = ERRCODE_RDEF;

   7573  4 006726   000000 235000 xsym               LDA     ERRCODESF
         4 006727   000000 755000 xsym               STA     MSGCODE

     2005     7574    3           CALL SYS_FUNC_ERRMSG;

   7574  4 006730   000000 631400 5                  EPPR1   0
         4 006731   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 006732   000000 011000                    NOP     0

     2006     7575    3           ALTRETURN;

   7575  4 006733   206232 221300                    LDX1  ! EXPO+1,,AUTO
         4 006734   000000 702211                    TSX2  ! 0,X1

     2007     7576    3           END;
     2008     7577    2   /**/ FULLSF = %YES#;

   7577  4 006735   400000 236003                    LDQ     -131072,DU
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:312  
         4 006736   000000 756000 xsym               STQ     FULLSF

     2009     7578    2   /**/ KEYSF = %YES#;

   7578  4 006737   000000 756000 xsym               STQ     KEYSF

     2010     7579    2   /**/ ENCRP_SEEDSF = ZI$DIR.ENCP_SEED;

   7579  4 006740   000027 236000 xsym               LDQ     ZI$DIR+23
         4 006741   000000 756000 xsym               STQ     ENCRP_SEEDSF

     2011     7580    2   /**/ KEYVSF.LEN = 4;

   7580  4 006742   004000 236003                    LDQ     2048,DU
         4 006743   000000 552040 xsym               STBQ    KEYVSF,'40'O

     2012     7581    2   /**/ KEYVSF.IDSKEY = RB;

   7581  4 006744   000000 100400                    MLR     fill='000'O
         4 006745   000000 000004 xsym               ADSC9   RB                       cn=0,n=4
         4 006746   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

     2013     7582    2       I_O_INDX = -1;

   7582  4 006747   000001 335007                    LCA     1,DL
         4 006750   000413 755000 0                  STA     I_O_INDX

     2014     7583
     2015     7584    2       IF DUMP_FILE = %NO# THEN

   7584  4 006751   000470 234000 0                  SZN     DUMP_FILE
         4 006752   006757 604000 4                  TMI     s:7587

     2016     7585    2           CALL SYS_FUNC_READ ALTRET(ALT_READ);

   7585  4 006753   000000 631400 5                  EPPR1   0
         4 006754   000000 701000 xent               TSX1    SYS_FUNC_READ
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:313  
         4 006755   007064 702000 4                  TSX2    ALT_READ
         4 006756   007050 710000 4                  TRA     s:7613

     2017     7586    2       ELSE
     2018     7587    3       DO CNTER = RB TO RB+I_O_SIZE-1;

   7587  4 006757   000000 235000 xsym               LDA     RB
         4 006760   000745 755000 0                  STA     CNTER
         4 006761   007044 710000 4                  TRA     s:7612+1

     2019     7588         /*  Fill I_O_BUF with specified no. pages by reading one at a
     2020     7589            time and expanding each one as it comes in.
     2021     7590         */
     2022     7591    3           I_O_INDX = I_O_INDX +1;

   7591  4 006762   000413 054000 0                  AOS     I_O_INDX

     2023     7592    3           KEYVSF.IDSKEY = CNTER;

   7592  4 006763   000000 100400                    MLR     fill='000'O
         4 006764   000745 000004 0                  ADSC9   CNTER                    cn=0,n=4
         4 006765   000000 200004 xsym               ADSC9   KEYVSF                   cn=1,n=4

     2024     7593    3    /**/   KEYSF = %YES#;

   7593  4 006766   400000 236003                    LDQ     -131072,DU
         4 006767   000000 756000 xsym               STQ     KEYSF

     2025     7594    3           BUFSF = VECTOR(I_O_BUF(I_O_INDX));

   7594  4 006770   000116 235000 5                  LDA     78
         4 006771   000413 236000 0                  LDQ     I_O_INDX
         4 006772   000034 736000                    QLS     28
         4 006773   000000 036000 xsym               ADLQ    I_O_BUF$
         4 006774   000000 755000 xsym               STA     BUFSF
         4 006775   000001 756000 xsym               STQ     BUFSF+1

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:314  
     2026     7595    3           BUFLNSF = 4096;

   7595  4 006776   010000 235007                    LDA     4096,DL
         4 006777   000000 755000 xsym               STA     BUFLNSF

     2027     7596    3           CALL SYS_FUNC_READ ALTRET(ALT_READ);

   7596  4 007000   000000 631400 5                  EPPR1   0
         4 007001   000000 701000 xent               TSX1    SYS_FUNC_READ
         4 007002   007064 702000 4                  TSX2    ALT_READ

     2028     7597    3           DATA$ = ADDR(I_O_BUF(I_O_INDX));

   7597  4 007003   000413 236000 0                  LDQ     I_O_INDX
         4 007004   000034 736000                    QLS     28
         4 007005   000000 036000 xsym               ADLQ    I_O_BUF$
         4 007006   000000 756000 xsym               STQ     DATA$

     2029     7598    4           IF NO_KEYSF THEN DO;

   7598  4 007007   000000 234000 xsym               SZN     NO_KEYSF
         4 007010   007041 605000 4                  TPL     s:7611

     2030     7599         /*E* ERROR: ZIU-DBU#NOKEY-C
     2031     7600                       MESSAGE: Page %U1 does not exist in file %FN.
     2032     7601                       */
     2033     7602    4    /**/       ERRCODESF.ERR# = DBU#NOKEY;

   7602  4 007011   000000 236000 xsym               LDQ     ERRCODESF
         4 007012   000007 376000 5                  ANQ     7
         4 007013   214630 276007                    ORQ     72088,DL
         4 007014   000000 756000 xsym               STQ     ERRCODESF

     2034     7603    4    /**/       ERRFLGSF = 0;

   7603  4 007015   000000 450000 xsym               STZ     ERRFLGSF

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:315  
     2035     7604    4    /**/       MSGCODE = ERRCODE_RDEF;

   7604  4 007016   000000 756000 xsym               STQ     MSGCODE

     2036     7605    4               CALL BINCHAR(ERR_INSERT.TEXT(0),KEYVSF.IDSKEY);

   7605  4 007017   000000 235000 xsym               LDA     KEYVSF
         4 007020   000001 236000 xsym               LDQ     KEYVSF+1
         4 007021   000033 773000                    LRL     27
         4 007022   000000 235003                    LDA     0,DU
         4 007023   206236 757100                    STAQ    EXPO+5,,AUTO
         4 007024   000000 301500                    BTD
         4 007025   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 007026   000000 230036 xsym               NDSC9   ERR_INSERT               cn=1,s=nosgn,sf=0,n=30

     2037     7606    4               CALL ZERO_SUP(ERR_INSERT.TEXT(0),30,'1'B);

   7606  4 007027   000100 630400 5                  EPPR0   64
         4 007030   000075 631400 5                  EPPR1   61
         4 007031   000000 701000 xent               TSX1    ZERO_SUP
         4 007032   000000 011000                    NOP     0

     2038     7607    4               CALL SYS_FUNC_ERRMSG;

   7607  4 007033   000000 631400 5                  EPPR1   0
         4 007034   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 007035   000000 011000                    NOP     0

     2039     7608    4               I_O_INDX = I_O_INDX-1;

   7608  4 007036   000001 336007                    LCQ     1,DL
         4 007037   000413 056000 0                  ASQ     I_O_INDX

     2040     7609    4               END;

   7609  4 007040   007043 710000 4                  TRA     s:7612

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:316  
     2041     7610    3           ELSE
     2042     7611    3               CALL EXPAND_PAGE;

   7611  4 007041   007103 701000 4                  TSX1    EXPAND_PAGE
         4 007042   000000 011000                    NOP     0

     2043     7612    3           END;

   7612  4 007043   000745 054000 0                  AOS     CNTER
         4 007044   000000 236000 xsym               LDQ     RB
         4 007045   000000 036000 xsym               ADLQ    I_O_SIZE
         4 007046   000745 116000 0                  CMPQ    CNTER
         4 007047   006762 605400 4                  TPNZ    s:7591

     2044     7613    3       IF DUMP_FILE THEN DO;

   7613  4 007050   000470 234000 0                  SZN     DUMP_FILE
         4 007051   007062 605000 4                  TPL     s:7617

     2045     7614    3           RB = RB+(I_O_SIZE-(I_O_INDX+1)); /*Add number missing pages to RB*/

   7614  4 007052   000000 236000 xsym               LDQ     I_O_SIZE
         4 007053   000413 136000 0                  SBLQ    I_O_INDX
         4 007054   000000 036000 xsym               ADLQ    RB
         4 007055   000001 136007                    SBLQ    1,DL
         4 007056   000000 756000 xsym               STQ     RB

     2046     7615    3           I_O_SIZE = I_O_INDX+1; /* Set I_O_SIZE to pages actually read */

   7615  4 007057   000413 235000 0                  LDA     I_O_INDX
         4 007060   000001 035007                    ADLA    1,DL
         4 007061   000000 755000 xsym               STA     I_O_SIZE

     2047     7616    3           END;

     2048     7617    2       RETURN;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:317  
   7617  4 007062   206232 221300                    LDX1  ! EXPO+1,,AUTO
         4 007063   000001 702211                    TSX2  ! 1,X1

     2049     7618
     2050     7619    2   ALT_READ:
     2051     7620    2       IF B$TCB$ -> B$TCB.ALT$ -> B$EXCFR.ERR.ERR# = %E$EOF THEN

   7620  4 007064   000000 470400 xsym  ALT_READ     LDP0    B$TCB$
         4 007065   000000 471500                    LDP1    0,,PR0
         4 007066   100102 236100                    LDQ     66,,PR1
         4 007067   377770 376007                    ANQ     131064,DL
         4 007070   000060 116007                    CMPQ    48,DL
         4 007071   007101 601000 4                  TNZ     s:7626

     2052     7621    3       DO;

     2053     7622    3           RE = KEYVSF.IDSKEY -1;

   7622  4 007072   000000 235000 xsym               LDA     KEYVSF
         4 007073   000001 236000 xsym               LDQ     KEYVSF+1
         4 007074   000033 773000                    LRL     27
         4 007075   000001 136007                    SBLQ    1,DL
         4 007076   000000 756000 xsym               STQ     RE

     2054     7623    3           RETURN;

   7623  4 007077   206232 221300                    LDX1  ! EXPO+1,,AUTO
         4 007100   000001 702211                    TSX2  ! 1,X1

     2055     7624    3           END;
     2056     7625    2       ELSE
     2057     7626    2           ALTRETURN;

   7626  4 007101   206232 221300                    LDX1  ! EXPO+1,,AUTO
         4 007102   000000 702211                    TSX2  ! 0,X1

     2058     7627    2   END READ_PAGE;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:318  
     2059     7628        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:319  
     2060     7629        /*-----------------------------------------------------------------
     2061     7630                   E X P A N D    P A G E    P R O C
     2062     7631        --------------------------------------------------------------------*/
     2063     7632    1   EXPAND_PAGE: PROC;

   7632  4 007103   206234 741300       EXPAND_PAGE  STX1  ! EXPO+3,,AUTO

     2064     7633    2   DCL HIGH_LINE UBIN WORD STATIC;
     2065     7634    2   DCL ARRAY_SIZE UBIN WORD STATIC;
     2066     7635    2   DCL ARRAY_INDX UBIN WORD STATIC;
     2067     7636    2   DCL ACT_REC_LEN UBIN WORD STATIC;
     2068     7637    2   DCL FROM$ PTR STATIC;
     2069     7638    2   DCL FROMSTR BASED(FROM$) CHAR(ARRAY_SIZE);
     2070     7639    2   DCL TO$ PTR STATIC;
     2071     7640    2   DCL TOSTR BASED(TO$) CHAR(ARRAY_SIZE);
     2072     7641    2   DCL ZEROS (0:1023) UBIN WORD STATIC INIT(0*1024);
     2073     7642    2   DCL FIL CHAR(FIL_SIZE) BASED;
     2074     7643    2   DCL FIL_SIZE UBIN WORD STATIC;
     2075     7644    2   DCL SHIFT_ARRAY ENTRY(3);
     2076     7645    2   DCL I_O_BUFF (0:1023) UBIN WORD BASED(DATA$);
     2077     7646        /*
     2078     7647           This routine takes the offset array in the compressed record
     2079     7648           and moves it out to the end of the record. It then fills in
     2080     7649           the created space with zeros.
     2081     7650        */
     2082     7651    2       HIGH_LINE = DATA_PG.OFF_LN.SEC;

   7651  4 007104   000000 470400 xsym               LDP0    DATA$
         4 007105   000005 236100                    LDQ     5,,PR0
         4 007106   777777 376007                    ANQ     -1,DL
         4 007107   000746 756000 0                  STQ     HIGH_LINE

     2083     7652    2       ARRAY_SIZE = (HIGH_LINE/2)+1;

   7652  4 007110   000001 772000                    QRL     1
         4 007111   000001 036007                    ADLQ    1,DL
         4 007112   000747 756000 0                  STQ     ARRAY_SIZE
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:320  

     2084     7653    2       ACT_REC_LEN = (DCBADDR(DCBSF)->F$DCB.ARS#)/4;

   7653  4 007113   000044 471400 5                  LDP1    36
         4 007114   100000 473500                    LDP3    0,,PR1
         4 007115   000000 220000 xsym               LDX0    DCBSF
         4 007116   300000 474510                    LDP4    0,X0,PR3
         4 007117   400000 236100                    LDQ     0,,PR4
         4 007120   000004 506007                    DIV     4,DL
         4 007121   000751 756000 0                  STQ     ACT_REC_LEN

     2085     7654        /*
     2086     7655           We now have the number of elements in the offset array (high_line)
     2087     7656           - it's size in words and the actual record(compressed) size.
     2088     7657        */
     2089     7658    2       IF ACT_REC_LEN = 1024 THEN

   7658  4 007122   002000 116007                    CMPQ    1024,DL
         4 007123   007125 601000 4                  TNZ     s:7663

     2090     7659    2           RETURN; /* Page was never compressed - no need to decompress*/

   7659  4 007124   000001 702211                    TSX2  ! 1,X1

     2091     7660        /*
     2092     7661               Find position in record where array should start and move it
     2093     7662        */
     2094     7663    2       ARRAY_INDX = 1024 - ARRAY_SIZE;

   7663  4 007125   002000 235007                    LDA     1024,DL
         4 007126   000747 135000 0                  SBLA    ARRAY_SIZE
         4 007127   000750 755000 0                  STA     ARRAY_INDX

     2095     7664    2       TO$ = ADDR(I_O_BUFF(ARRAY_INDX));

   7664  4 007130   000750 236000 0                  LDQ     ARRAY_INDX
         4 007131   000022 736000                    QLS     18
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:321  
         4 007132   000000 036000 xsym               ADLQ    DATA$
         4 007133   000753 756000 0                  STQ     TO$

     2096     7665    2       FROM$ = ADDR(I_O_BUFF(ACT_REC_LEN - ARRAY_SIZE));

   7665  4 007134   000751 236000 0                  LDQ     ACT_REC_LEN
         4 007135   000747 136000 0                  SBLQ    ARRAY_SIZE
         4 007136   000022 736000                    QLS     18
         4 007137   000000 036000 xsym               ADLQ    DATA$
         4 007140   000752 756000 0                  STQ     FROM$

     2097     7666    2       ARRAY_SIZE = ARRAY_SIZE *4; /* Convert to character length */

   7666  4 007141   000747 235000 0                  LDA     ARRAY_SIZE
         4 007142   000002 735000                    ALS     2
         4 007143   000747 755000 0                  STA     ARRAY_SIZE

     2098     7667    2       CALL SHIFT_ARRAY(FROMSTR,TOSTR,ARRAY_SIZE);/* BMAP routine using MRL */

   7667  4 007144   000206 236000 5                  LDQ     134
         4 007145   206240 756100                    STQ     EXPO+7,,AUTO
         4 007146   000752 237000 0                  LDAQ    FROM$
         4 007147   206236 757100                    STAQ    EXPO+5,,AUTO
         4 007150   206236 630500                    EPPR0   EXPO+5,,AUTO
         4 007151   000075 631400 5                  EPPR1   61
         4 007152   000000 701000 xent               TSX1    SHIFT_ARRAY
         4 007153   000000 011000                    NOP     0

     2099     7668         /*
     2100     7669            Fill in gap with zeros.
     2101     7670         */
     2102     7671    2       FIL_SIZE = 4 * (1024-ACT_REC_LEN);

   7671  4 007154   002000 235007                    LDA     1024,DL
         4 007155   000751 135000 0                  SBLA    ACT_REC_LEN
         4 007156   000002 735000                    ALS     2
         4 007157   002754 755000 0                  STA     FIL_SIZE
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:322  

     2103     7672    2       TO$ = FROM$;

   7672  4 007160   000752 236000 0                  LDQ     FROM$
         4 007161   000753 756000 0                  STQ     TO$

     2104     7673    2       FROM$ = ADDR(ZEROS);

   7673  4 007162   000207 236000 5                  LDQ     135
         4 007163   000752 756000 0                  STQ     FROM$

     2105     7674    2       TO$->FIL = FROM$->FIL;

   7674  4 007164   000752 470400 0                  LDP0    FROM$
         4 007165   000000 620005                    EAX0    0,AL
         4 007166   000753 471400 0                  LDP1    TO$
         4 007167   002754 721000 0                  LXL1    FIL_SIZE
         4 007170   040140 100540                    MLR     fill='040'O
         4 007171   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 007172   100000 000011                    ADSC9   0,,PR1                   cn=0,n=*X1

     2106     7675    2       RETURN;

   7675  4 007173   206234 221300                    LDX1  ! EXPO+3,,AUTO
         4 007174   000001 702211                    TSX2  ! 1,X1

     2107     7676    2   END EXPAND_PAGE;
     2108     7677        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:323  
     2109     7678    1   GET_POINTER: PROC(PTR_SIZE,PTR_LOC,PTR_MSG);

   7678  4 007175   200104 741300       GET_POINTER  STX1  ! FR_SAVE+39,,AUTO

     2110     7679
     2111     7680    2   DCL PTR_SIZE UBIN;
     2112     7681    2   DCL PTR_LOC CHAR(1) CALIGNED;
     2113     7682    2   DCL PTR_V CHAR(PTR_SIZE) BASED CALIGNED;
     2114     7683    2   DCL PTR_MSG CHAR(10) CALIGNED;
     2115     7684
     2116     7685    2       X=0;

   7685  4 007176   000000 450000 xsym               STZ     X

     2117     7686    2       IF PTR_SIZE>0 THEN

   7686  4 007177   200105 470500                    LDP0    @PTR_SIZE,,AUTO
         4 007200   000000 235100                    LDA     0,,PR0
         4 007201   007230 600000 4                  TZE     s:7693

     2118     7687    3       DO;

     2119     7688    3           PINCRC(ADDR(X),4-PTR_SIZE)->PTR_V=ADDR(PTR_LOC)->PTR_V;

   7688  4 007202   000000 236100                    LDQ     0,,PR0
         4 007203   000000 720100                    LXL0    0,,PR0
         4 007204   000022 676000 5                  ERQ     18
         4 007205   000001 036007                    ADLQ    1,DL
         4 007206   200106 471500                    LDP1    @PTR_LOC,,AUTO
         4 007207   040046 100540                    MLR     fill='040'O
         4 007210   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 007211   000001 000010 xsym               ADSC9   X+1,Q                    cn=0,n=*X0

     2120     7689    3           CALL BINCHAR(PTR_MSG,X);

   7689  4 007212   200107 473500                    LDP3    @PTR_MSG,,AUTO
         4 007213   000100 301400                    BTD
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:324  
         4 007214   000000 000004 xsym               NDSC9   X                        cn=0,s=lsgnf,sf=0,n=4
         4 007215   300000 030012                    NDSC9   0,,PR3                   cn=0,s=nosgn,sf=0,n=10

     2121     7690    3           CALL ZERO_SUP(PTR_MSG,10,'0'B);

   7690  4 007216   000024 236000 5                  LDQ     20
         4 007217   206240 756100                    STQ     EXPO+7,,AUTO
         4 007220   000211 236000 5                  LDQ     137
         4 007221   200107 235100                    LDA     @PTR_MSG,,AUTO
         4 007222   206236 757100                    STAQ    EXPO+5,,AUTO
         4 007223   206236 630500                    EPPR0   EXPO+5,,AUTO
         4 007224   000075 631400 5                  EPPR1   61
         4 007225   000000 701000 xent               TSX1    ZERO_SUP
         4 007226   000000 011000                    NOP     0

     2122     7691    3           END;

   7691  4 007227   007234 710000 4                  TRA     s:7694

     2123     7692    2       ELSE
     2124     7693    2           PTR_MSG=' '; /* NO EIS DESCRIPT FOR THIS TYPE OF PTR */

   7693  4 007230   200107 471500                    LDP1    @PTR_MSG,,AUTO
         4 007231   040100 100400                    MLR     fill='040'O
         4 007232   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 007233   100000 000012                    ADSC9   0,,PR1                   cn=0,n=10

     2125     7694    2   END GET_POINTER;

   7694  4 007234   200104 221300                    LDX1  ! FR_SAVE+39,,AUTO
         4 007235   000001 702211                    TSX2  ! 1,X1

     2126     7695        /***************************************************************/
     2127     7696        /*                                                             */
     2128     7697        /*           F I N D   R E C O R D   P R O C                   */
     2129     7698        /***************************************************************/
     2130     7699    1   FIND_REC: PROC;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:325  

   7699  4 007236   200024 741300       FIND_REC     STX1  ! @LAST_LN+2,,AUTO

     2131     7700         /*
     2132     7701            Print calc header if selected in record opton or if
     2133     7702            no records or keys were specified in directive.
     2134     7703         */
     2135     7704    2       REC_TYP=REC_FRMT.TYPE;

   7704  4 007237   000000 470400 xsym               LDP0    REC$
         4 007240   003000 061500                    CSR     bolr='003'O
         4 007241   000000 060014                    BDSC    0,,PR0                   by=0,bit=6,n=12
         4 007242   000000 000044 0                  BDSC    REC_TYP                  by=0,bit=0,n=36

     2136     7705    2       REC_HDR.REC_NM=' ';

   7705  4 007243   040000 100400                    MLR     fill='040'O
         4 007244   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 007245   000067 200031 0                  ADSC9   REC_HDR                  cn=1,n=25

     2137     7706    2       CALL ZERO_SUP(REC_HDR.DBK,LENGTHC(REC_HDR.DBK),'1'B);

   7706  4 007246   000212 630400 5                  EPPR0   138
         4 007247   000075 631400 5                  EPPR1   61
         4 007250   000000 701000 xent               TSX1    ZERO_SUP
         4 007251   000000 011000                    NOP     0

     2138     7707    2       IF REC_TYP>4000 OR TYPE.MSTRINDX(REC_TYP)<0 THEN

   7707  4 007252   000000 235000 0                  LDA     REC_TYP
         4 007253   007640 115007                    CMPA    4000,DL
         4 007254   007265 605400 4                  TPNZ    s:7711
         4 007255   000001 735000                    ALS     1
         4 007256   000100 100405                    MLR     fill='000'O
         4 007257   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         4 007260   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 007261   206236 236100                    LDQ     EXPO+5,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:326  
         4 007262   000022 732000                    QRS     18
         4 007263   000000 116003                    CMPQ    0,DU
         4 007264   007312 605000 4                  TPL     s:7720

     2139     7708    3       DO;

     2140     7709         /*E* ERROR: ZIU-DBU#BADREC-C
     2141     7710                    MESSAGE: Unknown record type found at DBK# %U1. */
     2142     7711    3           ERR_INSERT.TEXT(0)=REC_HDR.DBK;

   7711  4 007265   040000 100400                    MLR     fill='040'O
         4 007266   000076 600012 0                  ADSC9   REC_HDR+7                cn=3,n=10
         4 007267   000000 200036 xsym               ADSC9   ERR_INSERT               cn=1,n=30

     2143     7712    3           CALL INDEX1(X,' ',REC_HDR.DBK);

   7712  4 007270   000000 124400                    SCM     mask='000'O
         4 007271   000076 600012 0                  ADSC9   REC_HDR+7                cn=3,n=10
         4 007272   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 007273   000000 000000 xsym               ARG     X

     2144     7713    3           ERR_INSERT.CNT(0)=X;

   7713  4 007274   000000 236000 xsym               LDQ     X
         4 007275   000033 736000                    QLS     27
         4 007276   000000 552040 xsym               STBQ    ERR_INSERT,'40'O

     2145     7714    3           ERRCODESF.ERR#=DBU#BADREC;

   7714  4 007277   000000 236000 xsym               LDQ     ERRCODESF
         4 007300   000007 376000 5                  ANQ     7
         4 007301   215600 276007                    ORQ     72576,DL
         4 007302   000000 756000 xsym               STQ     ERRCODESF

     2146     7715    3           ERRFLGSF=0;

   7715  4 007303   000000 450000 xsym               STZ     ERRFLGSF
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:327  

     2147     7716    3           MSGCODE = ERRCODE_RDEF;

   7716  4 007304   000000 756000 xsym               STQ     MSGCODE

     2148     7717    3           CALL SYS_FUNC_ERRMSG;

   7717  4 007305   000000 631400 5                  EPPR1   0
         4 007306   000000 701000 xent               TSX1    SYS_FUNC_ERRMSG
         4 007307   000000 011000                    NOP     0

     2149     7718    3           RETURN;

   7718  4 007310   200024 221300                    LDX1  ! @LAST_LN+2,,AUTO
         4 007311   000001 702211                    TSX2  ! 1,X1

     2150     7719    3           END;
     2151     7720    2       REC_INDX=TYPE.MSTRINDX(REC_TYP);

   7720  4 007312   000100 100405                    MLR     fill='000'O
         4 007313   000000 000002 xsym               ADSC9   TYPE,A                   cn=0,n=2
         4 007314   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 007315   206236 236100                    LDQ     EXPO+5,,AUTO
         4 007316   000022 732000                    QRS     18
         4 007317   000403 756000 0                  STQ     REC_INDX

     2152     7721    2       REC_HDR.REC_NM=MSTR_REF.NAME(REC_INDX);

   7721  4 007320   000050 402007                    MPY     40,DL
         4 007321   000000 470400 xsym               LDP0    MSTR$
         4 007322   040000 100506                    MLR     fill='040'O
         4 007323   000001 400031                    ADSC9   1,Q,PR0                  cn=2,n=25
         4 007324   000067 200031 0                  ADSC9   REC_HDR                  cn=1,n=25

     2153     7722    2       CURR_REC=REC_INDX;

   7722  4 007325   000403 235000 0                  LDA     REC_INDX
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:328  
         4 007326   000405 755000 0                  STA     CURR_REC

     2154     7723    2       IF REC_TYP=4000 AND (ZI$DIR.PCALC OR ZI$DIR.FSET) THEN

   7723  4 007327   000000 235000 0                  LDA     REC_TYP
         4 007330   007640 115007                    CMPA    4000,DL
         4 007331   007446 601000 4                  TNZ     s:7748
         4 007332   000125 236000 xsym               LDQ     ZI$DIR+85
         4 007333   000100 316003                    CANQ    64,DU
         4 007334   007337 601000 4                  TNZ     s:7726
         4 007335   000010 316003                    CANQ    8,DU
         4 007336   007446 600000 4                  TZE     s:7748

     2155     7724
     2156     7725    3       DO;

     2157     7726    3           REC_DATA_LN=REC_FRMT.LNGHT-4; /*LENGHT OF CALC HEADERS*/

   7726  4 007337   000000 471400 xsym               LDP1    REC$
         4 007340   000100 101500                    MRL     fill='000'O
         4 007341   100000 400002                    ADSC9   0,,PR1                   cn=2,n=2
         4 007342   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 007343   206236 236100                    LDQ     EXPO+5,,AUTO
         4 007344   000004 136007                    SBLQ    4,DL
         4 007345   000000 756000 xsym               STQ     REC_DATA_LN

     2158     7727    3           TEMP$=PINCRC(REC$,4);

   7727  4 007346   000000 236000 xsym               LDQ     REC$
         4 007347   000001 036003                    ADLQ    1,DU
         4 007350   000433 756000 0                  STQ     TEMP$

     2159     7728    3           CALL GET_POINTER(GLBL_PTR_SZ,TEMP$->SZ2,CALC_HDR.NT);

   7728  4 007351   000215 236000 5                  LDQ     141
         4 007352   000433 235000 0                  LDA     TEMP$
         4 007353   200106 757100                    STAQ    @PTR_LOC,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:329  
         4 007354   000216 236000 5                  LDQ     142
         4 007355   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 007356   007175 701000 4                  TSX1    GET_POINTER
         4 007357   000000 011000                    NOP     0

     2160     7729    3           IF ZI$DIR.FSET THEN

   7729  4 007360   000125 236000 xsym               LDQ     ZI$DIR+85
         4 007361   000010 316003                    CANQ    8,DU
         4 007362   007365 600000 4                  TZE     s:7731

     2161     7730    3               KB=X;

   7730  4 007363   000000 235000 xsym               LDA     X
         4 007364   000420 755000 0                  STA     KB

     2162     7731    3           TEMP$=PINCRC(TEMP$,GLBL_PTR_SZ);

   7731  4 007365   000000 236000 xsym               LDQ     GLBL_PTR_SZ
         4 007366   000020 736000                    QLS     16
         4 007367   000433 036000 0                  ADLQ    TEMP$
         4 007370   000433 756000 0                  STQ     TEMP$

     2163     7732    3           CALL GET_POINTER(GLBL_PTR_SZ,TEMP$->SZ2,CALC_HDR.PR);

   7732  4 007371   000217 236000 5                  LDQ     143
         4 007372   000433 235000 0                  LDA     TEMP$
         4 007373   200106 757100                    STAQ    @PTR_LOC,,AUTO
         4 007374   000216 236000 5                  LDQ     142
         4 007375   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 007376   007175 701000 4                  TSX1    GET_POINTER
         4 007377   000000 011000                    NOP     0

     2164     7733    3           CALL ZERO_SUP(CALC_HDR.PR,10,'1'B);

   7733  4 007400   000220 630400 5                  EPPR0   144
         4 007401   000075 631400 5                  EPPR1   61
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:330  
         4 007402   000000 701000 xent               TSX1    ZERO_SUP
         4 007403   000000 011000                    NOP     0

     2165     7734    3           CALL ZERO_SUP(CALC_HDR.NT,10,'1'B);

   7734  4 007404   000223 630400 5                  EPPR0   147
         4 007405   000075 631400 5                  EPPR1   61
         4 007406   000000 701000 xent               TSX1    ZERO_SUP
         4 007407   000000 011000                    NOP     0

     2166     7735    3           CALL BINCHAR(CALC_HDR.DBKVAL,(DATA_PG.CON_INTRVAL*UWA.AC_REC.LPP)

   7735  4 007410   000000 470400 xsym               LDP0    DATA$
         4 007411   000004 236100                    LDQ     4,,PR0
         4 007412   000253 402000 xsym               MPY     UWA+171
         4 007413   000000 036000 xsym               ADLQ    I
         4 007414   000245 036000 xsym               ADLQ    UWA+165
         4 007415   000253 136000 xsym               SBLQ    UWA+171
         4 007416   206236 756100                    STQ     EXPO+5,,AUTO
         4 007417   000000 301500                    BTD
         4 007420   206236 000004                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=4
         4 007421   000272 030013 0                  NDSC9   CALC_HDR+6               cn=0,s=nosgn,sf=0,n=11

     2167     7736    3              + I + UWA.AC_REC.MIN_DBK -
     2168     7737    3              UWA.AC_REC.LPP);
     2169     7738    3           CALL ZERO_SUP(CALC_HDR.DBKVAL,11,'1'B);

   7738  4 007422   000226 630400 5                  EPPR0   150
         4 007423   000075 631400 5                  EPPR1   61
         4 007424   000000 701000 xent               TSX1    ZERO_SUP
         4 007425   000000 011000                    NOP     0

     2170     7739    3    /**/   BUFSF = VECTOR(SKIP);

   7739  4 007426   000232 237000 5                  LDAQ    154
         4 007427   000000 755000 xsym               STA     BUFSF
         4 007430   000001 756000 xsym               STQ     BUFSF+1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:331  

     2171     7740    3    /**/   BUFLNSF = 1;

   7740  4 007431   000001 235007                    LDA     1,DL
         4 007432   000000 755000 xsym               STA     BUFLNSF

     2172     7741    3           CALL WRITE_LINE;

   7741  4 007433   005466 701000 4                  TSX1    WRITE_LINE
         4 007434   000000 011000                    NOP     0

     2173     7742    3    /**/   BUFSF = VECTOR(CALC_HDR);

   7742  4 007435   000234 237000 5                  LDAQ    156
         4 007436   000000 755000 xsym               STA     BUFSF
         4 007437   000001 756000 xsym               STQ     BUFSF+1

     2174     7743    3    /**/   BUFLNSF = LENGTHC(CALC_HDR);

   7743  4 007440   000106 235007                    LDA     70,DL
         4 007441   000000 755000 xsym               STA     BUFLNSF

     2175     7744    3           CALL WRITE_LINE;

   7744  4 007442   005466 701000 4                  TSX1    WRITE_LINE
         4 007443   000000 011000                    NOP     0

     2176     7745    3           RETURN;

   7745  4 007444   200024 221300                    LDX1  ! @LAST_LN+2,,AUTO
         4 007445   000001 702211                    TSX2  ! 1,X1

     2177     7746    3           END;
     2178     7747    2       ELSE
     2179     7748    2           IF REC_TYP=4000 THEN

   7748  4 007446   007640 115007                    CMPA    4000,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:332  
         4 007447   007452 601000 4                  TNZ     s:7750

     2180     7749    2               RETURN;

   7749  4 007450   200024 221300                    LDX1  ! @LAST_LN+2,,AUTO
         4 007451   000001 702211                    TSX2  ! 1,X1

     2181     7750    2       IF ZI$DIR.PITEM=%YES# THEN

   7750  4 007452   000125 236000 xsym               LDQ     ZI$DIR+85
         4 007453   000040 316003                    CANQ    32,DU
         4 007454   007507 600000 4                  TZE     s:7761

     2182     7751    3       DO; /* GOES TO SCHEMA FOR ITEM DEFINITION FOR THIS REC */

     2183     7752    3           UWA.RC_REC.RTYPE = -1; /* INIT RECORD TYPE TO AN UNKNOWN */

   7752  4 007455   000001 335007                    LCA     1,DL
         4 007456   000270 755000 xsym               STA     UWA+184

     2184     7753    3           CALL DB_FUNC_FDR(CAN_RVA.OAREC.SEC,UWA.SF_REC.DBKOA);

   7753  4 007457   000002 630400 5                  EPPR0   2
         4 007460   000001 631400 5                  EPPR1   1
         4 007461   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 007462   000000 011000                    NOP     0

     2185     7754    4           DO WHILE ( (UWA.RC_REC.RTYPE~=REC_TYP)

   7754  4 007463   007500 710000 4                  TRA     s:7759

     2186     7755    4              AND (UWA.DB_STATUS ~='02100'));
     2187     7756    4               CALL DB_FUNC_FRS(CAN_RVA.RCREC.SEC,CAN_RVA.OARC.SEC);

   7756  4 007464   000236 630400 5                  EPPR0   158
         4 007465   000001 631400 5                  EPPR1   1
         4 007466   000000 701000 xent               TSX1    DB_FUNC_FRS
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:333  
         4 007467   000000 011000                    NOP     0

     2188     7757    4               IF UWA.DB_STATUS ~= '02100' THEN

   7757  4 007470   040000 106400                    CMPC    fill='040'O
         4 007471   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 007472   000002 000005 3                  ADSC9   CHAR_SET+2               cn=0,n=5
         4 007473   007500 600000 4                  TZE     s:7759

     2189     7758    4                   CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC);

   7758  4 007474   000115 630400 5                  EPPR0   77
         4 007475   000004 631400 5                  EPPR1   4
         4 007476   000000 701000 xent               TSX1    DB_FUNC_GET
         4 007477   000000 011000                    NOP     0

     2190     7759    4               END;

   7759  4 007500   000270 236000 xsym               LDQ     UWA+184
         4 007501   000000 116000 0                  CMPQ    REC_TYP
         4 007502   007507 600000 4                  TZE     s:7761
         4 007503   040000 106400                    CMPC    fill='040'O
         4 007504   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 007505   000002 000005 3                  ADSC9   CHAR_SET+2               cn=0,n=5
         4 007506   007464 601000 4                  TNZ     s:7756

     2191     7760    3           END;

     2192     7761    2   END FIND_REC;

   7761  4 007507   200024 221300                    LDX1  ! @LAST_LN+2,,AUTO
         4 007510   000001 702211                    TSX2  ! 1,X1

     2193     7762        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:334  
     2194     7763        /***************************************************************/
     2195     7764        /*                                                             */
     2196     7765        /*           F I N D   N E X T   S E T   P R O C               */
     2197     7766        /***************************************************************/
     2198     7767        /*
     2199     7768                   RC record now positioned - find sets associated
     2200     7769        */
     2201     7770    1   FIND_PRINT_SETS: PROC(PSETS);

   7770  4 007511   200024 741300       FIND_PRINT_* STX1  ! @LAST_LN+2,,AUTO

     2202     7771
     2203     7772    2   DCL PSETS BIT(1) UNAL;
     2204     7773
     2205     7774
     2206     7775    2       REC_INDX=MSTR_REF.NEXT(CURR_REC); /* GOES TO SETXREF */

   7775  4 007512   000405 236000 0                  LDQ     CURR_REC
         4 007513   000012 402007                    MPY     10,DL
         4 007514   000000 470400 xsym               LDP0    MSTR$
         4 007515   000000 236106                    LDQ     0,QL,PR0
         4 007516   000022 736000                    QLS     18
         4 007517   000022 732000                    QRS     18
         4 007520   000403 756000 0                  STQ     REC_INDX

     2207     7776    2       IF PSETS AND REC_INDX>=0 THEN /* THERE ARE SETS TO PRINT */

   7776  4 007521   200025 471500                    LDP1    @PSETS,,AUTO
         4 007522   000000 066500                    CMPB    filb='0'B
         4 007523   100000 000001                    BDSC    0,,PR1                   by=0,bit=0,n=1
         4 007524   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 007525   007537 600000 4                  TZE     s:7782
         4 007526   000000 116003                    CMPQ    0,DU
         4 007527   007537 604000 4                  TMI     s:7782

     2208     7777    3       DO;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:335  
     2209     7778    3           BUFSF = VECTOR(SET_HDR0); /* PRINT TYPE OF POINTERS TEXT */

   7778  4 007530   000240 237000 5                  LDAQ    160
         4 007531   000000 755000 xsym               STA     BUFSF
         4 007532   000001 756000 xsym               STQ     BUFSF+1

     2210     7779    3           BUFLNSF = LENGTHC(SET_HDR0);

   7779  4 007533   000115 235007                    LDA     77,DL
         4 007534   000000 755000 xsym               STA     BUFLNSF

     2211     7780    3           CALL WRITE_LINE;

   7780  4 007535   005466 701000 4                  TSX1    WRITE_LINE
         4 007536   000000 011000                    NOP     0

     2212     7781    3           END;

     2213     7782    2       IF PSETS OR ZI$DIR.FSET THEN /* ONLY WHEN PRINT SET OR FOLLOW */

   7782  4 007537   200025 470500                    LDP0    @PSETS,,AUTO
         4 007540   000000 066500                    CMPB    filb='0'B
         4 007541   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         4 007542   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 007543   007547 601000 4                  TNZ     s:7783
         4 007544   000125 236000 xsym               LDQ     ZI$DIR+85
         4 007545   000010 316003                    CANQ    8,DU
         4 007546   007657 600000 4                  TZE     s:7795

     2214     7783    3       DO WHILE(REC_INDX > -1);

   7783  4 007547   007655 710000 4                  TRA     s:7794

     2215     7784    3           SET_HDR.NAME=MSTR_REF.NAME(SET_XREF.MSTRINDX(REC_INDX));

   7784  4 007550   000403 235000 0                  LDA     REC_INDX
         4 007551   000002 735000                    ALS     2
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:336  
         4 007552   000000 470400 xsym               LDP0    SET_XREF$
         4 007553   000000 236105                    LDQ     0,AL,PR0
         4 007554   000022 732000                    QRS     18
         4 007555   000012 402007                    MPY     10,DL
         4 007556   000002 736000                    QLS     2
         4 007557   000000 471400 xsym               LDP1    MSTR$
         4 007560   040000 100506                    MLR     fill='040'O
         4 007561   100001 400036                    ADSC9   1,Q,PR1                  cn=2,n=30
         4 007562   000137 400036 0                  ADSC9   SET_HDR+1                cn=2,n=30

     2216     7785    3           CALL FIND_POINTER(SET_XREF.EIS.PRIOR(REC_INDX),SET_HDR.PRIOR);

   7785  4 007563   000242 236000 5                  LDQ     162
         4 007564   200030 756100                    STQ     @EIS+1,,AUTO
         4 007565   000403 236000 0                  LDQ     REC_INDX
         4 007566   000024 736000                    QLS     20
         4 007567   000001 036003                    ADLQ    1,DU
         4 007570   000000 036000 xsym               ADLQ    SET_XREF$
         4 007571   200027 756100                    STQ     NAME_SAVE+2,,AUTO
         4 007572   007661 701000 4                  TSX1    FIND_POINTER
         4 007573   000000 011000                    NOP     0

     2217     7786    3           CALL FIND_POINTER(SET_XREF.EIS.OWNR(REC_INDX),SET_HDR.OWNER);

   7786  4 007574   000243 236000 5                  LDQ     163
         4 007575   200030 756100                    STQ     @EIS+1,,AUTO
         4 007576   000403 236000 0                  LDQ     REC_INDX
         4 007577   000024 736000                    QLS     20
         4 007600   000002 036003                    ADLQ    2,DU
         4 007601   000000 036000 xsym               ADLQ    SET_XREF$
         4 007602   200027 756100                    STQ     NAME_SAVE+2,,AUTO
         4 007603   007661 701000 4                  TSX1    FIND_POINTER
         4 007604   000000 011000                    NOP     0

     2218     7787    3           CALL FIND_POINTER(SET_XREF.EIS.NEXT(REC_INDX),SET_HDR.NEXT);

   7787  4 007605   000244 236000 5                  LDQ     164
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:337  
         4 007606   200030 756100                    STQ     @EIS+1,,AUTO
         4 007607   000403 236000 0                  LDQ     REC_INDX
         4 007610   000024 736000                    QLS     20
         4 007611   000003 036003                    ADLQ    3,DU
         4 007612   000000 036000 xsym               ADLQ    SET_XREF$
         4 007613   200027 756100                    STQ     NAME_SAVE+2,,AUTO
         4 007614   007661 701000 4                  TSX1    FIND_POINTER
         4 007615   000000 011000                    NOP     0

     2219     7788    3           IF ZI$DIR.FSET AND ZI$DIR.SET_NM=SET_HDR.NAME THEN

   7788  4 007616   000125 236000 xsym               LDQ     ZI$DIR+85
         4 007617   000010 316003                    CANQ    8,DU
         4 007620   007627 600000 4                  TZE     s:7790
         4 007621   040000 106400                    CMPC    fill='040'O
         4 007622   000131 600036 xsym               ADSC9   ZI$DIR+89                cn=3,n=30
         4 007623   000137 400036 0                  ADSC9   SET_HDR+1                cn=2,n=30
         4 007624   007627 601000 4                  TNZ     s:7790

     2220     7789    3               KB=X;

   7789  4 007625   000000 235000 xsym               LDA     X
         4 007626   000420 755000 0                  STA     KB

     2221     7790    3           IF PSETS THEN CALL SET_OUTPUT;

   7790  4 007627   200025 470500                    LDP0    @PSETS,,AUTO
         4 007630   000000 066500                    CMPB    filb='1'B
         4 007631   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         4 007632   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 007633   007636 600000 4                  TZE     s:7791

   7790  4 007634   011174 701000 4                  TSX1    SET_OUTPUT
         4 007635   000000 011000                    NOP     0

     2222     7791    3           REC_INDX=SET_XREF.NEXT(REC_INDX);

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:338  
   7791  4 007636   000403 235000 0                  LDA     REC_INDX
         4 007637   000002 735000                    ALS     2
         4 007640   000000 470400 xsym               LDP0    SET_XREF$
         4 007641   000000 236105                    LDQ     0,AL,PR0
         4 007642   000022 736000                    QLS     18
         4 007643   000022 732000                    QRS     18
         4 007644   000403 756000 0                  STQ     REC_INDX

     2223     7792    3           IF MSTR_REF.PAOFF(CURR_REC)>0 THEN

   7792  4 007645   000405 236000 0                  LDQ     CURR_REC
         4 007646   000012 402007                    MPY     10,DL
         4 007647   000000 471400 xsym               LDP1    MSTR$
         4 007650   100011 236106                    LDQ     9,QL,PR1
         4 007651   777000 316003                    CANQ    -512,DU
         4 007652   007655 600000 4                  TZE     s:7794

     2224     7793    3               REC_INDX=-1; /* FOR *PA_REC, .NEXT ALWAYS DUPLICATE */

   7793  4 007653   000001 335007                    LCA     1,DL
         4 007654   000403 755000 0                  STA     REC_INDX

     2225     7794    3           END;

   7794  4 007655   000403 235000 0                  LDA     REC_INDX
         4 007656   007550 605000 4                  TPL     s:7784

     2226     7795    2   END FIND_PRINT_SETS;

   7795  4 007657   200024 221300                    LDX1  ! @LAST_LN+2,,AUTO
         4 007660   000001 702211                    TSX2  ! 1,X1

     2227     7796
     2228     7797    1   FIND_POINTER: PROC(EIS,PTR_MSG);

   7797  4 007661   200026 741300       FIND_POINTER STX1  ! NAME_SAVE+1,,AUTO

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:339  
     2229     7798
     2230     7799    2   DCL EIS SBIN;
     2231     7800    2   DCL PTR_MSG CHAR(10) CALIGNED;
     2232     7801
     2233     7802    2       EIS$=ADDR(EIS);

   7802  4 007662   200027 236100                    LDQ     @EIS,,AUTO
         4 007663   000375 756000 0                  STQ     EIS$

     2234     7803    2       SET$=PINCRW(REC$,ADSC9.EISADDR);

   7803  4 007664   000375 470400 0                  LDP0    EIS$
         4 007665   003100 061500                    CSR     bolr='003'O
         4 007666   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         4 007667   206236 000022                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=18
         4 007670   206236 220100                    LDX0    EXPO+5,,AUTO
         4 007671   000000 636010                    EAQ     0,X0
         4 007672   000000 036000 xsym               ADLQ    REC$
         4 007673   000407 756000 0                  STQ     SET$

     2235     7804    2       SET$=PINCRC(SET$,ADSC9.BYT_OFF/2);

   7804  4 007674   003100 061500                    CSR     bolr='003'O
         4 007675   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         4 007676   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 007677   206236 236100                    LDQ     EXPO+5,,AUTO
         4 007700   000001 772000                    QRL     1
         4 007701   000020 736000                    QLS     16
         4 007702   000407 036000 0                  ADLQ    SET$
         4 007703   000407 756000 0                  STQ     SET$

     2236     7805    2       SET_LN=NDSC.SIZE;

   7805  4 007704   000000 236100                    LDQ     0,,PR0
         4 007705   000077 376007                    ANQ     63,DL
         4 007706   000410 756000 0                  STQ     SET_LN

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:340  
     2237     7806    2       CALL GET_POINTER(SET_LN,SET$->SZ3,PTR_MSG);

   7806  4 007707   200030 236100                    LDQ     @PTR_MSG,,AUTO
         4 007710   000407 235000 0                  LDA     SET$
         4 007711   200106 757100                    STAQ    @PTR_LOC,,AUTO
         4 007712   000245 236000 5                  LDQ     165
         4 007713   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 007714   007175 701000 4                  TSX1    GET_POINTER
         4 007715   000000 011000                    NOP     0

     2238     7807    2   END FIND_POINTER;

   7807  4 007716   200026 221300                    LDX1  ! NAME_SAVE+1,,AUTO
         4 007717   000001 702211                    TSX2  ! 1,X1

     2239     7808        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:341  
     2240     7809        /***************************************************************/
     2241     7810        /*                                                             */
     2242     7811        /*           F I N D   A N D   P R I N T   I T E M S           */
     2243     7812        /***************************************************************/
     2244     7813    1   FIND_PRINT_ITEMS: PROC;

   7813  4 007720   200024 741300       FIND_PRINT_* STX1  ! @LAST_LN+2,,AUTO
         4 007721   010003 710000 4                  TRA     s:7881

     2245     7814    2   DCL 1 PA_REC BASED(REC$) CALIGNED,
     2246     7815    2         2 * UBIN(6) UNAL,
     2247     7816    2         2 TYPE UBIN(12) UNAL,
     2248     7817    2         2 SIZE UBIN(18) UNAL,
     2249     7818    2         2 LOWEST_LEVEL BIT(1) UNAL,
     2250     7819    2         2 HIGHEST_KEY BIT(1) UNAL,
     2251     7820    2         2 FIRST_IN_LEVEL BIT(1) UNAL,
     2252     7821    2         2 LAST_IN_LEVEL BIT(1) UNAL,
     2253     7822    2         2 LOWEST_KEY BIT(1) UNAL,
     2254     7823    2         2 * BIT(1) UNAL,
     2255     7824    2         2 ENTRIES UBIN(12) UNAL,
     2256     7825    2         2 AVAIL UBIN(18) UNAL;
     2257     7826    2   DCL 1 PA_ENTRY BASED(ENTRY$) UNAL,
     2258     7827    2         2 C UBIN(1) UNAL,
     2259     7828    2         2 * UBIN(5) UNAL,
     2260     7829    2         2 TYPE UBIN(12) UNAL,
     2261     7830    2         2 PTRS CHAR(PTR_SIZE) UNAL;
     2262     7831    2   DCL 1 PA_GROUP BASED(GROUP$) UNAL,
     2263     7832    2         2 NO_GROUPS UBIN HALF UNAL,
     2264     7833    2         2 TYPE UBIN(18) UNAL,
     2265     7834    2         2 PTRS CHAR(PTR_SIZE) UNAL;
     2266     7835    2   DCL CHAR7 CHAR(7) BASED UNAL;
     2267     7836    2   DCL 1 PA_HDR STATIC,
     2268     7837    2         2 VFC CHAR(5) UNAL INIT('B'),
     2269     7838    2         2 * CHAR(0) INIT('ENTRIES: ') UNAL,
     2270     7839    2         2 ENTRIES CHAR(7) UNAL,
     2271     7840    2         2 * CHAR(0) INIT('SPACE AVAIL: ') UNAL,
     2272     7841    2         2 AVAIL CHAR(8) UNAL,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:342  
     2273     7842    2         2 * CHAR(0) INIT('ORDER: ') UNAL,
     2274     7843    2         2 ORDER CHAR(0) INIT('FIRST $ LAST IN LOWEST LEVEL') UNAL;
     2275     7844
     2276     7845    2   DCL 1 PA_BUF STATIC,
     2277     7846    2         2 VFC CHAR(5) UNAL INIT('A'),
     2278     7847    2         2 KEY_TXT CHAR(9) UNAL INIT('KEY-NAME:'),
     2279     7848    2         2 KEY_NO REDEF KEY_TXT,
     2280     7849    2           3 ENT1 CHAR(4) UNAL,
     2281     7850    2           3 ENT2 CHAR(5) UNAL,
     2282     7851    2         2 * CHAR(1) UNAL INIT(' '),
     2283     7852    2         2 KEYNAME CHAR(30) UNAL,
     2284     7853    2         2 POINTER CHAR(10) UNAL INIT('POINTER'),
     2285     7854    2         2 REC CHAR(4) UNAL,
     2286     7855    2         2 NAME CHAR(30) UNAL;
     2287     7856    2   DCL NAME_SAVE CHAR(30);
     2288     7857    2   DCL INDX SBIN STATIC;
     2289     7858    2   DCL Y SBIN STATIC;
     2290     7859    2   DCL NO_GROUPS SBIN STATIC;
     2291     7860    2   DCL C SBIN STATIC;
     2292     7861    2   DCL NO_SORT_KEYS SBIN STATIC;
     2293     7862    2   DCL ENTRY_INDX SBIN STATIC;
     2294     7863    2   DCL CHAR_V CHAR(PTR_SIZE) BASED CALIGNED;
     2295     7864    2   DCL 1 FR_SAVE(0:11),
     2296     7865    2         2 FTYP UBIN HALF UNAL,
     2297     7866    2         2 FEIS UBIN,
     2298     7867    2         2 FRFRH UBIN UNAL;
     2299     7868    2   GET_GROUP: PROC; /* GET PTR FROM PA_GROUP */

   7868  4 007722   200102 741300       GET_GROUP    STX1  ! FR_SAVE+37,,AUTO

     2300     7869
     2301     7870    3   DCL C_V CHAR(SET_LN) BASED;
     2302     7871
     2303     7872    3       CALL GET_POINTER(PTR_SIZE,PA_GROUP.PTRS,PA_BUF.POINTER);

   7872  4 007723   000246 236000 5                  LDQ     166
         4 007724   200107 756100                    STQ     @PTR_MSG,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:343  
         4 007725   000000 236000 xsym               LDQ     GROUP$
         4 007726   000001 036003                    ADLQ    1,DU
         4 007727   200106 756100                    STQ     @PTR_LOC,,AUTO
         4 007730   000247 236000 5                  LDQ     167
         4 007731   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 007732   007175 701000 4                  TSX1    GET_POINTER
         4 007733   000000 011000                    NOP     0

     2304     7873    3       CALL INDEX1(SET_LN,' ',PA_HDR.AVAIL);

   7873  4 007734   000000 124400                    SCM     mask='000'O
         4 007735   002765 400010 0                  ADSC9   PA_HDR+8                 cn=2,n=8
         4 007736   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 007737   000410 000000 0                  ARG     SET_LN

     2305     7874    3       CALL BINCHAR(PA_HDR.ENTRIES,C);

   7874  4 007740   000000 301400                    BTD
         4 007741   003033 000004 0                  NDSC9   C                        cn=0,s=lsgnf,sf=0,n=4
         4 007742   002760 430007 0                  NDSC9   PA_HDR+3                 cn=2,s=nosgn,sf=0,n=7

     2306     7875    3       CALL ZERO_SUP(PA_HDR.ENTRIES,LENGTHC(PA_HDR.ENTRIES),'1'B);

   7875  4 007743   000251 630400 5                  EPPR0   169
         4 007744   000075 631400 5                  EPPR1   61
         4 007745   000000 701000 xent               TSX1    ZERO_SUP
         4 007746   000000 011000                    NOP     0

     2307     7876    3       CALL CONCAT(PA_BUF.KEY_NO.ENT2,ADDR(PA_HDR.AVAIL)->C_V,'.',PA_HDR.ENTRIES);

   7876  4 007747   000410 720000 0                  LXL0    SET_LN
         4 007750   040000 100440                    MLR     fill='040'O
         4 007751   002765 400010 0                  ADSC9   PA_HDR+8                 cn=2,n=*X0
         4 007752   003003 200005 0                  ADSC9   PA_BUF+2                 cn=1,n=5
         4 007753   000410 236000 0                  LDQ     SET_LN
         4 007754   000005 116007                    CMPQ    5,DL
         4 007755   007773 605000 4                  TPL     s:7877
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:344  
         4 007756   777772 621006                    EAX1    -6,QL
         4 007757   777777 661003                    ERX1    -1,DU
         4 007760   040046 100400                    MLR     fill='040'O
         4 007761   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 007762   003003 200011 0                  ADSC9   PA_BUF+2,Q               cn=1,n=*X1
         4 007763   000410 236000 0                  LDQ     SET_LN
         4 007764   000004 116007                    CMPQ    4,DL
         4 007765   007773 605000 4                  TPL     s:7877
         4 007766   777773 620006                    EAX0    -5,QL
         4 007767   777777 660003                    ERX0    -1,DU
         4 007770   040046 100400                    MLR     fill='040'O
         4 007771   002760 400007 0                  ADSC9   PA_HDR+3                 cn=2,n=7
         4 007772   003003 400010 0                  ADSC9   PA_BUF+2,Q               cn=2,n=*X0

     2308     7877    3       C=C+1;

   7877  4 007773   003033 054000 0                  AOS     C

     2309     7878    3       GROUP$=PINCRC(GROUP$,PTR_SIZE+2);

   7878  4 007774   000474 236000 0                  LDQ     PTR_SIZE
         4 007775   000020 736000                    QLS     16
         4 007776   400000 036007                    ADLQ    -131072,DL
         4 007777   000000 036000 xsym               ADLQ    GROUP$
         4 010000   000000 756000 xsym               STQ     GROUP$

     2310     7879    3   END GET_GROUP;

   7879  4 010001   200102 221300                    LDX1  ! FR_SAVE+37,,AUTO
         4 010002   000001 702211                    TSX2  ! 1,X1

     2311     7880
     2312     7881    2       UWA.DB_STATUS = '00000';

   7881  4 010003   040000 100400                    MLR     fill='040'O
         4 010004   000164 000005 3                  ADSC9   CHAR_SET+116             cn=0,n=5
         4 010005   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:345  

     2313     7882    2       IF ADDR(REC_HDR.REC_NM)->CHAR7 ~= '*PA_REC' THEN

   7882  4 010006   040000 106400                    CMPC    fill='040'O
         4 010007   000067 200007 0                  ADSC9   REC_HDR                  cn=1,n=7
         4 010010   000166 000007 3                  ADSC9   CHAR_SET+118             cn=0,n=7
         4 010011   010246 600000 4                  TZE     s:7968

     2314     7883    3       DO;

     2315     7884    4           DO UNTIL_END_OF_REALM;

   7884  4 010012   040000 106400                    CMPC    fill='040'O
         4 010013   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 010014   000002 000005 3                  ADSC9   CHAR_SET+2               cn=0,n=5
         4 010015   011127 600000 4                  TZE     s:8094

     2316     7885    4   FIND_NEXT_ITEM:
     2317     7886    4               CALL DB_FUNC_FRS(CAN_RVA.FRREC.SEC,CAN_RVA.RCFR.SEC);

   7886  4 010016   000254 630400 5     FIND_NEXT_I* EPPR0   172
         4 010017   000001 631400 5                  EPPR1   1
         4 010020   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 010021   000000 011000                    NOP     0

     2318     7887    4               IF UWA.DB_STATUS = '00000' THEN

   7887  4 010022   040000 106400                    CMPC    fill='040'O
         4 010023   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 010024   000164 000005 3                  ADSC9   CHAR_SET+116             cn=0,n=5
         4 010025   010241 601000 4                  TNZ     s:7964

     2319     7888    5               DO;

     2320     7889    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);

   7889  4 010026   000041 630400 5                  EPPR0   33
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:346  
         4 010027   000004 631400 5                  EPPR1   4
         4 010030   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010031   000000 011000                    NOP     0

     2321     7890         /* Get FR rec to get item descriptions then */
     2322     7891         /* get name of field w/in the record */
     2323     7892    6                   IF UWA.FR_REC.SYN = 0 THEN DO;

   7892  4 010032   000332 235000 xsym               LDA     UWA+218
         4 010033   010241 601000 4                  TNZ     s:7964

     2324     7893    6                       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);

   7893  4 010034   000032 630400 5                  EPPR0   26
         4 010035   000004 631400 5                  EPPR1   4
         4 010036   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 010037   000000 011000                    NOP     0

     2325     7894    6                       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);

   7894  4 010040   000033 630400 5                  EPPR0   27
         4 010041   000004 631400 5                  EPPR1   4
         4 010042   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010043   000000 011000                    NOP     0

     2326     7895         /*
     2327     7896            Check - if there are item specifications:
     2328     7897            If so - do any of the items pertain to the current rec.
     2329     7898            If so - is this item one which was specified?
     2330     7899            If so - fall through - if not return.
     2331     7900         */
     2332     7901    6                       IF ITMCNT > -1 THEN

   7901  4 010044   000000 235000 xsym               LDA     ITMCNT
         4 010045   010074 604000 4                  TMI     s:7910

     2333     7902    7                       DO;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:347  

     2334     7903    7                           X=0;

   7903  4 010046   000000 450000 xsym               STZ     X

     2335     7904    8                           DO WHILE((ITEM_LIST.TYPE(X)~=REC_TYP OR

   7904  4 010047   010051 710000 4                  TRA     s:7907

     2336     7905    8                              ITEM_LIST.NAME(X)~=UWA.SN_REC.SENAME) AND X<=ITMCNT);
     2337     7906    8                               X=X+1;

   7906  4 010050   000000 054000 xsym               AOS     X

     2338     7907    8                               END;

   7907  4 010051   000000 235000 xsym               LDA     X
         4 010052   000003 735000                    ALS     3
         4 010053   000007 236005 xsym               LDQ     ITEM_LIST+7,AL
         4 010054   000022 736000                    QLS     18
         4 010055   000022 732000                    QRS     18
         4 010056   000000 116000 0                  CMPQ    REC_TYP
         4 010057   010066 601000 4                  TNZ     s:7907+13
         4 010060   000000 235000 xsym               LDA     X
         4 010061   000005 735000                    ALS     5
         4 010062   040000 106405                    CMPC    fill='040'O
         4 010063   000000 000036 xsym               ADSC9   ITEM_LIST,A              cn=0,n=30
         4 010064   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 010065   010071 600000 4                  TZE     s:7908
         4 010066   000000 236000 xsym               LDQ     X
         4 010067   000000 116000 xsym               CMPQ    ITMCNT
         4 010070   010050 604400 4                  TMOZ    s:7906

     2339     7908    7                           IF X>ITMCNT THEN GOTO FIND_NEXT_ITEM;

   7908  4 010071   000000 236000 xsym               LDQ     X
         4 010072   000000 116000 xsym               CMPQ    ITMCNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:348  
         4 010073   010016 605400 4                  TPNZ    FIND_NEXT_ITEM

     2340     7909    7                           END;

     2341     7910    6                       ITEM.NAME=UWA.SN_REC.SENAME;

   7910  4 010074   040000 100400                    MLR     fill='040'O
         4 010075   000427 000022 xsym               ADSC9   UWA+279                  cn=0,n=18
         4 010076   000166 200022 0                  ADSC9   ITEM+1                   cn=1,n=18

     2342     7911    6                       ITEM.KEY_TYPE='(';

   7911  4 010077   040000 100400                    MLR     fill='040'O
         4 010100   000256 000001 5                  ADSC9   174                      cn=0,n=1
         4 010101   000176 600074 0                  ADSC9   ITEM+9                   cn=3,n=60

     2343     7912    6                       PTR_SIZE=1;

   7912  4 010102   000001 235007                    LDA     1,DL
         4 010103   000474 755000 0                  STA     PTR_SIZE

     2344     7913    7                       DO WHILE(UWA.DB_STATUS='00000');

   7913  4 010104   040000 106400                    CMPC    fill='040'O
         4 010105   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 010106   000164 000005 3                  ADSC9   CHAR_SET+116             cn=0,n=5
         4 010107   010220 601000 4                  TNZ     s:7953

     2345     7914    7                           CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.FRCFS.SEC);

   7914  4 010110   000257 630400 5                  EPPR0   175
         4 010111   000001 631400 5                  EPPR1   1
         4 010112   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 010113   000000 011000                    NOP     0

     2346     7915    7                           IF UWA.DB_STATUS='00000' THEN

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:349  
   7915  4 010114   040000 106400                    CMPC    fill='040'O
         4 010115   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 010116   000164 000005 3                  ADSC9   CHAR_SET+116             cn=0,n=5
         4 010117   010214 601000 4                  TNZ     s:7952

     2347     7916    8                           DO;

     2348     7917    8                               CALL DB_FUNC_GET(CAN_RVA.CFREC.SEC);

   7917  4 010120   000036 630400 5                  EPPR0   30
         4 010121   000004 631400 5                  EPPR1   4
         4 010122   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010123   000000 011000                    NOP     0

     2349     7918    8                               IF UWA.CF_REC.CTLTYP=4 THEN

   7918  4 010124   000401 235000 xsym               LDA     UWA+257
         4 010125   000004 115007                    CMPA    4,DL
         4 010126   010142 601000 4                  TNZ     s:7926

     2350     7919    9                               DO;

     2351     7920    9                                   CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE,6,'*CALC,');

   7920  4 010127   000474 236000 0                  LDQ     PTR_SIZE
         4 010130   040006 100400                    MLR     fill='040'O
         4 010131   000170 000006 3                  ADSC9   CHAR_SET+120             cn=0,n=6
         4 010132   000176 600006 0                  ADSC9   ITEM+9,Q                 cn=3,n=6

     2352     7921    9                                   PTR_SIZE=PTR_SIZE+6;

   7921  4 010133   000006 236007                    LDQ     6,DL
         4 010134   000474 056000 0                  ASQ     PTR_SIZE

     2353     7922    9                                  CALL DB_FUNC_FRS(CAN_RVA.CFREC.SEC,CAN_RVA.FRCFS.SEC
              7922                                            ); /* SKIP DUPLICATE */

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:350  
   7922  4 010135   000257 630400 5                  EPPR0   175
         4 010136   000001 631400 5                  EPPR1   1
         4 010137   000000 701000 xent               TSX1    DB_FUNC_FRS
         4 010140   000000 011000                    NOP     0

     2354     7923    9                                   END;

   7923  4 010141   010214 710000 4                  TRA     s:7952

     2355     7924    8                               ELSE
     2356     7925    9                               DO;

     2357     7926    9                                   CALL DB_FUNC_FOR(CAN_RVA.SMSSCF.SEC);

   7926  4 010142   000037 630400 5                  EPPR0   31
         4 010143   000004 631400 5                  EPPR1   4
         4 010144   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 010145   000000 011000                    NOP     0

     2358     7927    9                                   CALL DB_FUNC_FOR(CAN_RVA.SCSOSM.SEC);

   7927  4 010146   000035 630400 5                  EPPR0   29
         4 010147   000004 631400 5                  EPPR1   4
         4 010150   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 010151   000000 011000                    NOP     0

     2359     7928    9                                   CALL DB_FUNC_GET(CAN_RVA.SCREC.SEC);

   7928  4 010152   000030 630400 5                  EPPR0   24
         4 010153   000004 631400 5                  EPPR1   4
         4 010154   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010155   000000 011000                    NOP     0

     2360     7929        /**/
     2361     7930        /*    COMMENT THE FOLLOWING CODES (NOT USED AT THIS MOMENT)
     2362     7931                                IF UWA.CF_REC.CTLTYP=0 THEN
     2363     7932                                DO;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:351  
     2364     7933                                   CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE,6,'*SORT_');
     2365     7934                                   PTR_SIZE=PTR_SIZE+6;
     2366     7935                                END;
     2367     7936                                IF UWA.SC_REC.SETTYPE=3 OR UWA.CF_REC.CTLTYP=0 THEN
     2368     7937              REPLACE THE NEXT LINE OF CODE, IT WILL PRINT EXTRA INFO ABOUT
     2369     7938              A FIELD. EXP: IFA FIELD IS A SORTED KEY FOR SET SSSS
     2370     7939                            THEN  (*SORT_SSSS) WILL BE PRINTED. */
     2371     7940        /**/
     2372     7941    9                                   IF UWA.SC_REC.SETTYPE > 1 AND UWA.CF_REC.CTLTYP = 3
              7941                                            THEN

   7941  4 010156   000310 235000 xsym               LDA     UWA+200
         4 010157   000001 115007                    CMPA    1,DL
         4 010160   010214 604400 4                  TMOZ    s:7952
         4 010161   000401 236000 xsym               LDQ     UWA+257
         4 010162   000003 116007                    CMPQ    3,DL
         4 010163   010214 601000 4                  TNZ     s:7952

     2373     7942   10                                   DO;

     2374     7943   10                                       CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);

   7943  4 010164   000032 630400 5                  EPPR0   26
         4 010165   000004 631400 5                  EPPR1   4
         4 010166   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 010167   000000 011000                    NOP     0

     2375     7944   10                                       CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);

   7944  4 010170   000033 630400 5                  EPPR0   27
         4 010171   000004 631400 5                  EPPR1   4
         4 010172   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010173   000000 011000                    NOP     0

     2376     7945   10                                       CALL INDEX1(INDX,' ',UWA.SN_REC.SENAME);

   7945  4 010174   000000 124400                    SCM     mask='000'O
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:352  
         4 010175   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 010176   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 010177   003030 000000 0                  ARG     INDX

     2377     7946   10                                       CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE,INDX,UWA.
              7946                                                SN_REC.SENAME);

   7946  4 010200   003030 720000 0                  LXL0    INDX
         4 010201   000474 235000 0                  LDA     PTR_SIZE
         4 010202   040045 100400                    MLR     fill='040'O
         4 010203   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 010204   000176 600010 0                  ADSC9   ITEM+9,A                 cn=3,n=*X0

     2378     7947   10                                       PTR_SIZE=PTR_SIZE+INDX+1;

   7947  4 010205   000474 236000 0                  LDQ     PTR_SIZE
         4 010206   003030 036000 0                  ADLQ    INDX
         4 010207   000001 036007                    ADLQ    1,DL
         4 010210   000474 756000 0                  STQ     PTR_SIZE

     2379     7948   10                                       CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE-1,1,',');

   7948  4 010211   040006 100400                    MLR     fill='040'O
         4 010212   000261 000001 5                  ADSC9   177                      cn=0,n=1
         4 010213   000176 400001 0                  ADSC9   ITEM+9,Q                 cn=2,n=1

     2380     7949   10                                       END;

     2381     7950    9                                   END;

     2382     7951    8                               END;

     2383     7952    7                           END;

   7952  4 010214   040000 106400                    CMPC    fill='040'O
         4 010215   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 010216   000164 000005 3                  ADSC9   CHAR_SET+116             cn=0,n=5
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:353  
         4 010217   010110 600000 4                  TZE     s:7914

     2384     7953    6                       IF ITEM.KEY_TYPE='(' THEN

   7953  4 010220   040000 106400                    CMPC    fill='040'O
         4 010221   000176 600074 0                  ADSC9   ITEM+9                   cn=3,n=60
         4 010222   000256 000001 5                  ADSC9   174                      cn=0,n=1
         4 010223   010230 601000 4                  TNZ     s:7956

     2385     7954    6                           ITEM.KEY_TYPE=' ';

   7954  4 010224   040000 100400                    MLR     fill='040'O
         4 010225   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 010226   000176 600074 0                  ADSC9   ITEM+9                   cn=3,n=60
         4 010227   010234 710000 4                  TRA     s:7957

     2386     7955    6                       ELSE
     2387     7956    6                           CALL INSERT(ITEM.KEY_TYPE,PTR_SIZE-1,1,')');

   7956  4 010230   000474 235000 0                  LDA     PTR_SIZE
         4 010231   040005 100400                    MLR     fill='040'O
         4 010232   000262 000001 5                  ADSC9   178                      cn=0,n=1
         4 010233   000176 400001 0                  ADSC9   ITEM+9,A                 cn=2,n=1

     2388     7957    6                       UWA.DB_STATUS='00000';

   7957  4 010234   040000 100400                    MLR     fill='040'O
         4 010235   000164 000005 3                  ADSC9   CHAR_SET+116             cn=0,n=5
         4 010236   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5

     2389     7958         /*
     2390     7959                            Call print routine to print items.
     2391     7960         */
     2392     7961    6                       CALL IT_OUTPUT;

   7961  4 010237   011272 701000 4                  TSX1    IT_OUTPUT
         4 010240   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:354  

     2393     7962    6                       END;

     2394     7963    5                   END;

     2395     7964    4               END;

   7964  4 010241   040000 106400                    CMPC    fill='040'O
         4 010242   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 010243   000002 000005 3                  ADSC9   CHAR_SET+2               cn=0,n=5
         4 010244   010016 601000 4                  TNZ     FIND_NEXT_ITEM

     2396     7965    3           END;

   7965  4 010245   011127 710000 4                  TRA     s:8094

     2397     7966    2       ELSE
     2398     7967    3       DO;

     2399     7968    3           X=PA_REC.ENTRIES;

   7968  4 010246   000000 470400 xsym               LDP0    REC$
         4 010247   003000 061500                    CSR     bolr='003'O
         4 010250   000001 060014                    BDSC    1,,PR0                   by=0,bit=6,n=12
         4 010251   000000 000044 xsym               BDSC    X                        by=0,bit=0,n=36

     2400     7969    3           CALL BINCHAR(PA_HDR.ENTRIES,X);

   7969  4 010252   000000 301400                    BTD
         4 010253   000000 000004 xsym               NDSC9   X                        cn=0,s=lsgnf,sf=0,n=4
         4 010254   002760 430007 0                  NDSC9   PA_HDR+3                 cn=2,s=nosgn,sf=0,n=7

     2401     7970    3           CALL ZERO_SUP(PA_HDR.ENTRIES,LENGTHC(PA_HDR.ENTRIES),'1'B);

   7970  4 010255   000251 630400 5                  EPPR0   169
         4 010256   000075 631400 5                  EPPR1   61
         4 010257   000000 701000 xent               TSX1    ZERO_SUP
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:355  
         4 010260   000000 011000                    NOP     0

     2402     7971    3           X=PA_REC.AVAIL;

   7971  4 010261   000000 470400 xsym               LDP0    REC$
         4 010262   000000 101500                    MRL     fill='000'O
         4 010263   000001 400002                    ADSC9   1,,PR0                   cn=2,n=2
         4 010264   000000 000004 xsym               ADSC9   X                        cn=0,n=4

     2403     7972    3           CALL BINCHAR(PA_HDR.AVAIL,X);

   7972  4 010265   000000 301400                    BTD
         4 010266   000000 000004 xsym               NDSC9   X                        cn=0,s=lsgnf,sf=0,n=4
         4 010267   002765 430010 0                  NDSC9   PA_HDR+8                 cn=2,s=nosgn,sf=0,n=8

     2404     7973    3           CALL ZERO_SUP(PA_HDR.AVAIL,LENGTHC(PA_HDR.AVAIL),'1'B);

   7973  4 010270   000263 630400 5                  EPPR0   179
         4 010271   000075 631400 5                  EPPR1   61
         4 010272   000000 701000 xent               TSX1    ZERO_SUP
         4 010273   000000 011000                    NOP     0

     2405     7974    3           IF PA_REC.LOWEST_LEVEL='0'B THEN

   7974  4 010274   000000 470400 xsym               LDP0    REC$
         4 010275   000000 066500                    CMPB    filb='1'B
         4 010276   000001 000001                    BDSC    1,,PR0                   by=0,bit=0,n=1
         4 010277   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 010300   010305 601000 4                  TNZ     s:7977

     2406     7975    3               PA_BUF.KEYNAME=' IN LOWEST LEVEL';

   7975  4 010301   040000 100400                    MLR     fill='040'O
         4 010302   000172 000020 3                  ADSC9   CHAR_SET+122             cn=0,n=16
         4 010303   003004 600036 0                  ADSC9   PA_BUF+3                 cn=3,n=30
         4 010304   010310 710000 4                  TRA     s:7978

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:356  
     2407     7976    3           ELSE
     2408     7977    3               PA_BUF.KEYNAME=' IN HIGHER LEVEL';

   7977  4 010305   040000 100400                    MLR     fill='040'O
         4 010306   000176 000020 3                  ADSC9   CHAR_SET+126             cn=0,n=16
         4 010307   003004 600036 0                  ADSC9   PA_BUF+3                 cn=3,n=30

     2409     7978    3           IF PA_REC.FIRST_IN_LEVEL AND PA_REC.LAST_IN_LEVEL THEN

   7978  4 010310   000000 066500                    CMPB    filb='0'B
         4 010311   000001 020001                    BDSC    1,,PR0                   by=0,bit=2,n=1
         4 010312   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 010313   010327 600000 4                  TZE     s:7981
         4 010314   000000 066500                    CMPB    filb='0'B
         4 010315   000001 030001                    BDSC    1,,PR0                   by=0,bit=3,n=1
         4 010316   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 010317   010327 600000 4                  TZE     s:7981

     2410     7979    3               CALL CONCAT(PA_HDR.ORDER,'FIRST & LAST',PA_BUF.KEYNAME);

   7979  4 010320   040000 100400                    MLR     fill='040'O
         4 010321   000202 000014 3                  ADSC9   CHAR_SET+130             cn=0,n=12
         4 010322   002771 200014 0                  ADSC9   PA_HDR+12                cn=1,n=12
         4 010323   040000 100400                    MLR     fill='040'O
         4 010324   003004 600020 0                  ADSC9   PA_BUF+3                 cn=3,n=16
         4 010325   002774 200020 0                  ADSC9   PA_HDR+15                cn=1,n=16
         4 010326   010363 710000 4                  TRA     s:7988

     2411     7980    3           ELSE
     2412     7981    3               IF PA_REC.FIRST_IN_LEVEL THEN

   7981  4 010327   000000 066500                    CMPB    filb='0'B
         4 010330   000001 020001                    BDSC    1,,PR0                   by=0,bit=2,n=1
         4 010331   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 010332   010342 600000 4                  TZE     s:7984

     2413     7982    3                   CALL CONCAT(PA_HDR.ORDER,'FIRST',PA_BUF.KEYNAME);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:357  

   7982  4 010333   040000 100400                    MLR     fill='040'O
         4 010334   000202 000005 3                  ADSC9   CHAR_SET+130             cn=0,n=5
         4 010335   002771 200005 0                  ADSC9   PA_HDR+12                cn=1,n=5
         4 010336   040000 100400                    MLR     fill='040'O
         4 010337   003004 600027 0                  ADSC9   PA_BUF+3                 cn=3,n=23
         4 010340   002772 400027 0                  ADSC9   PA_HDR+13                cn=2,n=23
         4 010341   010363 710000 4                  TRA     s:7988

     2414     7983    3               ELSE
     2415     7984    3                   IF PA_REC.LAST_IN_LEVEL THEN

   7984  4 010342   000000 066500                    CMPB    filb='0'B
         4 010343   000001 030001                    BDSC    1,,PR0                   by=0,bit=3,n=1
         4 010344   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 010345   010355 600000 4                  TZE     s:7987

     2416     7985    3                       CALL CONCAT(PA_HDR.ORDER,'LAST',PA_BUF.KEYNAME);

   7985  4 010346   040000 100400                    MLR     fill='040'O
         4 010347   000204 000004 3                  ADSC9   CHAR_SET+132             cn=0,n=4
         4 010350   002771 200004 0                  ADSC9   PA_HDR+12                cn=1,n=4
         4 010351   040000 100400                    MLR     fill='040'O
         4 010352   003004 600030 0                  ADSC9   PA_BUF+3                 cn=3,n=24
         4 010353   002772 200030 0                  ADSC9   PA_HDR+13                cn=1,n=24
         4 010354   010363 710000 4                  TRA     s:7988

     2417     7986    3                   ELSE
     2418     7987    3                       CALL CONCAT(PA_HDR.ORDER,'MIDDLE',PA_BUF.KEYNAME);

   7987  4 010355   040000 100400                    MLR     fill='040'O
         4 010356   000205 000006 3                  ADSC9   CHAR_SET+133             cn=0,n=6
         4 010357   002771 200006 0                  ADSC9   PA_HDR+12                cn=1,n=6
         4 010360   040000 100400                    MLR     fill='040'O
         4 010361   003004 600026 0                  ADSC9   PA_BUF+3                 cn=3,n=22
         4 010362   002772 600026 0                  ADSC9   PA_HDR+13                cn=3,n=22

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:358  
     2419     7988    3           BUFSF=VECTOR(PA_HDR);

   7988  4 010363   000266 237000 5                  LDAQ    182
         4 010364   000000 755000 xsym               STA     BUFSF
         4 010365   000001 756000 xsym               STQ     BUFSF+1

     2420     7989    3           BUFLNSF=LENGTHC(PA_HDR);

   7989  4 010366   000115 235007                    LDA     77,DL
         4 010367   000000 755000 xsym               STA     BUFLNSF

     2421     7990    3           CALL WRITE_LINE;

   7990  4 010370   005466 701000 4                  TSX1    WRITE_LINE
         4 010371   000000 011000                    NOP     0

     2422     7991    3           IF PA_REC.ENTRIES>0 THEN

   7991  4 010372   000000 470400 xsym               LDP0    REC$
         4 010373   003100 061500                    CSR     bolr='003'O
         4 010374   000001 060014                    BDSC    1,,PR0                   by=0,bit=6,n=12
         4 010375   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 010376   206236 236100                    LDQ     EXPO+5,,AUTO
         4 010377   000000 116003                    CMPQ    0,DU
         4 010400   011127 600000 4                  TZE     s:8094

     2423     7992    4           DO;

     2424     7993    5               DO X=0 TO 9999;

   7993  4 010401   000000 450000 xsym               STZ     X

     2425     7994    5                   CALL DB_FUNC_FRS(CAN_RVA.FRREC.SEC,CAN_RVA.RCFR.SEC);

   7994  4 010402   000254 630400 5                  EPPR0   172
         4 010403   000001 631400 5                  EPPR1   1
         4 010404   000000 701000 xent               TSX1    DB_FUNC_FRS
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:359  
         4 010405   000000 011000                    NOP     0

     2426     7995    5                   IF UWA.DB_STATUS~='00000' THEN GOTO EOS_1;

   7995  4 010406   040000 106400                    CMPC    fill='040'O
         4 010407   000001 400005 xsym               ADSC9   UWA+1                    cn=2,n=5
         4 010410   000164 000005 3                  ADSC9   CHAR_SET+116             cn=0,n=5
         4 010411   010432 601000 4                  TNZ     EOS_1

     2427     7996    5                   CALL DB_FUNC_GET(CAN_RVA.FRREC.SEC);

   7996  4 010412   000041 630400 5                  EPPR0   33
         4 010413   000004 631400 5                  EPPR1   4
         4 010414   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010415   000000 011000                    NOP     0

     2428     7997    5                   FR_SAVE.FTYP(X)=UWA.FR_REC.FTYP;

   7997  4 010416   000000 236000 xsym               LDQ     X
         4 010417   000003 402007                    MPY     3,DL
         4 010420   000334 720000 xsym               LXL0    UWA+220
         4 010421   200035 740106                    STX0    FR_SAVE,QL,AUTO

     2429     7998    5                   FR_SAVE.FEIS(X)=UWA.FR_REC.BUFLOC;

   7998  4 010422   000351 235000 xsym               LDA     UWA+233
         4 010423   200036 755106                    STA     FR_SAVE+1,QL,AUTO

     2430     7999    5                   FR_SAVE.FRFRH(X)=UWA.FR_REC.FRFRH;

   7999  4 010424   000352 235000 xsym               LDA     UWA+234
         4 010425   200037 755106                    STA     FR_SAVE+2,QL,AUTO

     2431     8000    5                   END;

   8000  4 010426   000000 054000 xsym               AOS     X
         4 010427   000000 236000 xsym               LDQ     X
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:360  
         4 010430   023417 116007                    CMPQ    9999,DL
         4 010431   010402 604400 4                  TMOZ    s:7994

     2432     8001    4   EOS_1:      NO_SORT_KEYS=X-1;

   8001  4 010432   000000 235000 xsym  EOS_1        LDA     X
         4 010433   000001 135007                    SBLA    1,DL
         4 010434   003034 755000 0                  STA     NO_SORT_KEYS

     2433     8002    4               PA_BUF.KEY_TXT='KEY-NAME:';

   8002  4 010435   040000 100400                    MLR     fill='040'O
         4 010436   000207 000011 3                  ADSC9   CHAR_SET+135             cn=0,n=9
         4 010437   003002 200011 0                  ADSC9   PA_BUF+1                 cn=1,n=9

     2434     8003    4               IF MSTR_REF.GLOBAL(SET_XREF.MSTRINDX(MSTR_REF.NEXT(REC_INDX)))~=1

   8003  4 010440   000403 236000 0                  LDQ     REC_INDX
         4 010441   000012 402007                    MPY     10,DL
         4 010442   000000 470400 xsym               LDP0    MSTR$
         4 010443   000000 236106                    LDQ     0,QL,PR0
         4 010444   000022 736000                    QLS     18
         4 010445   000020 732000                    QRS     16
         4 010446   000000 471400 xsym               LDP1    SET_XREF$
         4 010447   100000 236106                    LDQ     0,QL,PR1
         4 010450   000022 732000                    QRS     18
         4 010451   000012 402007                    MPY     10,DL
         4 010452   000011 236106                    LDQ     9,QL,PR0
         4 010453   777000 376003                    ANQ     -512,DU
         4 010454   001000 116003                    CMPQ    512,DU
         4 010455   010466 600000 4                  TZE     s:8007
         4 010456   000467 236000 0                  LDQ     LOCAL_ONLY
         4 010457   400000 376003                    ANQ     -131072,DU
         4 010460   400000 676003                    ERQ     -131072,DU
         4 010461   010466 600000 4                  TZE     s:8007

     2435     8004    4                  AND ~LOCAL_ONLY THEN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:361  
     2436     8005    4                   PA_BUF.POINTER='LOCAL PTRS';

   8005  4 010462   040000 100400                    MLR     fill='040'O
         4 010463   000212 000012 3                  ADSC9   CHAR_SET+138             cn=0,n=10
         4 010464   003014 200012 0                  ADSC9   PA_BUF+11                cn=1,n=10
         4 010465   010471 710000 4                  TRA     s:8008

     2437     8006    4               ELSE
     2438     8007    4                   PA_BUF.POINTER='  POINTERS';

   8007  4 010466   040000 100400                    MLR     fill='040'O
         4 010467   000215 000012 3                  ADSC9   CHAR_SET+141             cn=0,n=10
         4 010470   003014 200012 0                  ADSC9   PA_BUF+11                cn=1,n=10

     2439     8008    4               NAME_SAVE=' ';

   8008  4 010471   040100 100400                    MLR     fill='040'O
         4 010472   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 010473   200025 000036                    ADSC9   NAME_SAVE,,AUTO          cn=0,n=30

     2440     8009    4               X=0;

   8009  4 010474   000000 450000 xsym               STZ     X

     2441     8010    4               PA_BUF.REC=' -> ';

   8010  4 010475   040000 100400                    MLR     fill='040'O
         4 010476   000220 000004 3                  ADSC9   CHAR_SET+144             cn=0,n=4
         4 010477   003016 600004 0                  ADSC9   PA_BUF+13                cn=3,n=4

     2442     8011    4               PA_BUF.VFC='A';

   8011  4 010500   040000 100400                    MLR     fill='040'O
         4 010501   000270 000001 5                  ADSC9   184                      cn=0,n=1
         4 010502   003001 000005 0                  ADSC9   PA_BUF                   cn=0,n=5

     2443     8012    5               DO INDX=0 TO NO_SORT_KEYS;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:362  

   8012  4 010503   003030 450000 0                  STZ     INDX
         4 010504   010634 710000 4                  TRA     s:8039+1

     2444     8013    5                   CALL DB_FUNC_FDR(CAN_RVA.FRREC.SEC,FR_SAVE.FRFRH(INDX));

   8013  4 010505   003030 236000 0                  LDQ     INDX
         4 010506   000003 402007                    MPY     3,DL
         4 010507   200037 630506                    EPPR0   FR_SAVE+2,QL,AUTO
         4 010510   206237 450500                    STP0    EXPO+6,,AUTO
         4 010511   000041 236000 5                  LDQ     33
         4 010512   206236 756100                    STQ     EXPO+5,,AUTO
         4 010513   206236 630500                    EPPR0   EXPO+5,,AUTO
         4 010514   000001 631400 5                  EPPR1   1
         4 010515   000000 701000 xent               TSX1    DB_FUNC_FDR
         4 010516   000000 011000                    NOP     0

     2445     8014    5                   CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC);

   8014  4 010517   000032 630400 5                  EPPR0   26
         4 010520   000004 631400 5                  EPPR1   4
         4 010521   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 010522   000000 011000                    NOP     0

     2446     8015    5                   CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC);

   8015  4 010523   000033 630400 5                  EPPR0   27
         4 010524   000004 631400 5                  EPPR1   4
         4 010525   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010526   000000 011000                    NOP     0

     2447     8016    5                   PA_BUF.KEYNAME=UWA.SN_REC.SENAME;

   8016  4 010527   040000 100400                    MLR     fill='040'O
         4 010530   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 010531   003004 600036 0                  ADSC9   PA_BUF+3                 cn=3,n=30

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:363  
     2448     8017    5                   CALL DB_FUNC_FOR(CAN_RVA.RCFR.SEC); /* FIND RC OF PA MEM */

   8017  4 010532   000255 630400 5                  EPPR0   173
         4 010533   000004 631400 5                  EPPR1   4
         4 010534   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 010535   000000 011000                    NOP     0

     2449     8018    5                   CALL DB_FUNC_GET(CAN_RVA.RCREC.SEC);

   8018  4 010536   000115 630400 5                  EPPR0   77
         4 010537   000004 631400 5                  EPPR1   4
         4 010540   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010541   000000 011000                    NOP     0

     2450     8019    5                   FR_SAVE.FRFRH(INDX)=UWA.RC_REC.RTYPE; /* SAVE THE TYPE */

   8019  4 010542   003030 236000 0                  LDQ     INDX
         4 010543   000003 402007                    MPY     3,DL
         4 010544   000270 235000 xsym               LDA     UWA+184
         4 010545   200037 755106                    STA     FR_SAVE+2,QL,AUTO

     2451     8020    5                   CALL DB_FUNC_FOR(CAN_RVA.SNSE.SEC); /* GET THE NAME */

   8020  4 010546   000032 630400 5                  EPPR0   26
         4 010547   000004 631400 5                  EPPR1   4
         4 010550   000000 701000 xent               TSX1    DB_FUNC_FOR
         4 010551   000000 011000                    NOP     0

     2452     8021    5                   CALL DB_FUNC_GET(CAN_RVA.SNREC.SEC); /* GET RC NAME */

   8021  4 010552   000033 630400 5                  EPPR0   27
         4 010553   000004 631400 5                  EPPR1   4
         4 010554   000000 701000 xent               TSX1    DB_FUNC_GET
         4 010555   000000 011000                    NOP     0

     2453     8022    5                   IF UWA.SN_REC.SENAME~=NAME_SAVE THEN

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:364  
   8022  4 010556   040100 106400                    CMPC    fill='040'O
         4 010557   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 010560   200025 000036                    ADSC9   NAME_SAVE,,AUTO          cn=0,n=30
         4 010561   010602 600000 4                  TZE     s:8031

     2454     8023    6                   DO;

     2455     8024    6                       X=X+1;

   8024  4 010562   000000 054000 xsym               AOS     X

     2456     8025    6                       IF PA_REC.LOWEST_LEVEL THEN /* NOT LOWEST LEVEL */

   8025  4 010563   000000 470400 xsym               LDP0    REC$
         4 010564   000000 066500                    CMPB    filb='1'B
         4 010565   000001 000001                    BDSC    1,,PR0                   by=0,bit=0,n=1
         4 010566   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 010567   010574 600000 4                  TZE     s:8028

     2457     8026    6                           PA_BUF.NAME='LOWER LEVEL';

   8026  4 010570   040000 100400                    MLR     fill='040'O
         4 010571   000221 000013 3                  ADSC9   CHAR_SET+145             cn=0,n=11
         4 010572   003017 600036 0                  ADSC9   PA_BUF+14                cn=3,n=30
         4 010573   010577 710000 4                  TRA     s:8029

     2458     8027    6                       ELSE
     2459     8028    6                           PA_BUF.NAME=UWA.SN_REC.SENAME;

   8028  4 010574   040000 100400                    MLR     fill='040'O
         4 010575   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
         4 010576   003017 600036 0                  ADSC9   PA_BUF+14                cn=3,n=30

     2460     8029    6                       NAME_SAVE=UWA.SN_REC.SENAME;

   8029  4 010577   040100 100400                    MLR     fill='040'O
         4 010600   000427 000036 xsym               ADSC9   UWA+279                  cn=0,n=30
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:365  
         4 010601   200025 000036                    ADSC9   NAME_SAVE,,AUTO          cn=0,n=30

     2461     8030    6                       END;

     2462     8031    5                   BUFSF=VECTOR(PA_BUF);

   8031  4 010602   000272 237000 5                  LDAQ    186
         4 010603   000000 755000 xsym               STA     BUFSF
         4 010604   000001 756000 xsym               STQ     BUFSF+1

     2463     8032    5                   BUFLNSF=LENGTHC(PA_BUF);

   8032  4 010605   000131 235007                    LDA     89,DL
         4 010606   000000 755000 xsym               STA     BUFLNSF

     2464     8033    5                   IF INDX=NO_SORT_KEYS THEN PA_BUF.VFC='B';

   8033  4 010607   003030 236000 0                  LDQ     INDX
         4 010610   003034 116000 0                  CMPQ    NO_SORT_KEYS
         4 010611   010615 601000 4                  TNZ     s:8034

   8033  4 010612   040000 100400                    MLR     fill='040'O
         4 010613   000271 000001 5                  ADSC9   185                      cn=0,n=1
         4 010614   003001 000005 0                  ADSC9   PA_BUF                   cn=0,n=5

     2465     8034    5                   CALL WRITE_LINE;

   8034  4 010615   005466 701000 4                  TSX1    WRITE_LINE
         4 010616   000000 011000                    NOP     0

     2466     8035    5                   PA_BUF.POINTER=' ';

   8035  4 010617   040000 100400                    MLR     fill='040'O
         4 010620   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 010621   003014 200012 0                  ADSC9   PA_BUF+11                cn=1,n=10

     2467     8036    5                   PA_BUF.KEY_TXT=' ';
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:366  

   8036  4 010622   040000 100400                    MLR     fill='040'O
         4 010623   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 010624   003002 200011 0                  ADSC9   PA_BUF+1                 cn=1,n=9

     2468     8037    5                   PA_BUF.REC=' ';

   8037  4 010625   040000 100400                    MLR     fill='040'O
         4 010626   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 010627   003016 600004 0                  ADSC9   PA_BUF+13                cn=3,n=4

     2469     8038    5                   PA_BUF.NAME=' ';

   8038  4 010630   040000 100400                    MLR     fill='040'O
         4 010631   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 010632   003017 600036 0                  ADSC9   PA_BUF+14                cn=3,n=30

     2470     8039    5                   END;

   8039  4 010633   003030 054000 0                  AOS     INDX
         4 010634   003030 236000 0                  LDQ     INDX
         4 010635   003034 116000 0                  CMPQ    NO_SORT_KEYS
         4 010636   010505 604400 4                  TMOZ    s:8013

     2471     8040    4               PTR_SIZE=(MSTR_REF.PAOFF(REC_INDX)-2*4)/3;

   8040  4 010637   000403 236000 0                  LDQ     REC_INDX
         4 010640   000012 402007                    MPY     10,DL
         4 010641   000000 470400 xsym               LDP0    MSTR$
         4 010642   000011 236106                    LDQ     9,QL,PR0
         4 010643   000033 772000                    QRL     27
         4 010644   000010 136007                    SBLQ    8,DL
         4 010645   000003 506007                    DIV     3,DL
         4 010646   000474 756000 0                  STQ     PTR_SIZE

     2472     8041    4               KEY_SIZE=MSTR_REF.PAENT(REC_INDX)-2-PTR_SIZE;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:367  
   8041  4 010647   000403 236000 0                  LDQ     REC_INDX
         4 010650   000012 402007                    MPY     10,DL
         4 010651   000011 236106                    LDQ     9,QL,PR0
         4 010652   000274 376000 5                  ANQ     188
         4 010653   000474 136000 0                  SBLQ    PTR_SIZE
         4 010654   000002 136007                    SBLQ    2,DL
         4 010655   000475 756000 0                  STQ     KEY_SIZE

     2473     8042    4               ENTRY$=PINCRC(REC$,MSTR_REF.PAOFF(REC_INDX));

   8042  4 010656   000403 236000 0                  LDQ     REC_INDX
         4 010657   000012 402007                    MPY     10,DL
         4 010660   000011 236106                    LDQ     9,QL,PR0
         4 010661   000033 772000                    QRL     27
         4 010662   000020 736000                    QLS     16
         4 010663   000000 036000 xsym               ADLQ    REC$
         4 010664   000000 756000 xsym               STQ     ENTRY$

     2474     8043    4               KEY_PTR_SIZE=KEY_SIZE+PTR_SIZE;

   8043  4 010665   000475 236000 0                  LDQ     KEY_SIZE
         4 010666   000474 036000 0                  ADLQ    PTR_SIZE
         4 010667   000476 756000 0                  STQ     KEY_PTR_SIZE

     2475     8044    4               NO_SORT_KEYS=(NO_SORT_KEYS+1)/X-1;

   8044  4 010670   003034 236000 0                  LDQ     NO_SORT_KEYS
         4 010671   000001 036007                    ADLQ    1,DL
         4 010672   000000 506000 xsym               DIV     X
         4 010673   000001 136007                    SBLQ    1,DL
         4 010674   003034 756000 0                  STQ     NO_SORT_KEYS

     2476     8045    4               PA_BUF.VFC='A';

   8045  4 010675   040000 100400                    MLR     fill='040'O
         4 010676   000270 000001 5                  ADSC9   184                      cn=0,n=1
         4 010677   003001 000005 0                  ADSC9   PA_BUF                   cn=0,n=5
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:368  

     2477     8046    4               IF PA_REC.LOWEST_KEY THEN

   8046  4 010700   000000 471400 xsym               LDP1    REC$
         4 010701   000000 066500                    CMPB    filb='1'B
         4 010702   100001 040001                    BDSC    1,,PR1                   by=0,bit=4,n=1
         4 010703   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 010704   010712 600000 4                  TZE     s:8051

     2478     8047    5               DO;

     2479     8048    5                   PA_BUF.KEYNAME='<FIRST KEY REPEATED IN PRIOR>';

   8048  4 010705   040000 100400                    MLR     fill='040'O
         4 010706   000224 000035 3                  ADSC9   CHAR_SET+148             cn=0,n=29
         4 010707   003004 600036 0                  ADSC9   PA_BUF+3                 cn=3,n=30

     2480     8049    5                   CALL WRITE_LINE;

   8049  4 010710   005466 701000 4                  TSX1    WRITE_LINE
         4 010711   000000 011000                    NOP     0

     2481     8050    5                   END;

     2482     8051    5               DO ENTRY_INDX=1 TO PA_REC.ENTRIES;

   8051  4 010712   000001 235007                    LDA     1,DL
         4 010713   003035 755000 0                  STA     ENTRY_INDX
         4 010714   011101 710000 4                  TRA     s:8084+1

     2483     8052    5                   CALL BINCHAR(PA_HDR.AVAIL,ENTRY_INDX);

   8052  4 010715   000000 301400                    BTD
         4 010716   003035 000004 0                  NDSC9   ENTRY_INDX               cn=0,s=lsgnf,sf=0,n=4
         4 010717   002765 430010 0                  NDSC9   PA_HDR+8                 cn=2,s=nosgn,sf=0,n=8

     2484     8053    5                   CALL ZERO_SUP(PA_HDR.AVAIL,LENGTHC(PA_HDR.AVAIL),'1'B);
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:369  

   8053  4 010720   000263 630400 5                  EPPR0   179
         4 010721   000075 631400 5                  EPPR1   61
         4 010722   000000 701000 xent               TSX1    ZERO_SUP
         4 010723   000000 011000                    NOP     0

     2485     8054    5                   PA_BUF.KEY_NO.ENT1='DBK.';

   8054  4 010724   040000 100400                    MLR     fill='040'O
         4 010725   000234 000004 3                  ADSC9   CHAR_SET+156             cn=0,n=4
         4 010726   003002 200004 0                  ADSC9   PA_BUF+1                 cn=1,n=4

     2486     8055    5                   CALL GET_POINTER(PTR_SIZE,PA_ENTRY.PTRS,PA_BUF.POINTER);

   8055  4 010727   000246 236000 5                  LDQ     166
         4 010730   200107 756100                    STQ     @PTR_MSG,,AUTO
         4 010731   000000 236000 xsym               LDQ     ENTRY$
         4 010732   400000 036007                    ADLQ    -131072,DL
         4 010733   200106 756100                    STQ     @PTR_LOC,,AUTO
         4 010734   000247 236000 5                  LDQ     167
         4 010735   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 010736   007175 701000 4                  TSX1    GET_POINTER
         4 010737   000000 011000                    NOP     0

     2487     8056    5                   IF PA_ENTRY.C=0 THEN

   8056  4 010740   000000 470400 xsym               LDP0    ENTRY$
         4 010741   003100 061500                    CSR     bolr='003'O
         4 010742   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         4 010743   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 010744   206236 236100                    LDQ     EXPO+5,,AUTO
         4 010745   000000 116003                    CMPQ    0,DU
         4 010746   010753 601000 4                  TNZ     s:8060

     2488     8057    5                       PA_BUF.KEY_NO.ENT2=PA_HDR.AVAIL;

   8057  4 010747   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:370  
         4 010750   002765 400005 0                  ADSC9   PA_HDR+8                 cn=2,n=5
         4 010751   003003 200005 0                  ADSC9   PA_BUF+2                 cn=1,n=5
         4 010752   010763 710000 4                  TRA     s:8063

     2489     8058    5                   ELSE
     2490     8059    6                   DO;

     2491     8060    6                       GROUP$=PINCRC(REC$,X);

   8060  4 010753   000000 236000 xsym               LDQ     X
         4 010754   000020 736000                    QLS     16
         4 010755   000000 036000 xsym               ADLQ    REC$
         4 010756   000000 756000 xsym               STQ     GROUP$

     2492     8061    6                       NO_GROUPS=PA_GROUP.NO_GROUPS;

   8061  4 010757   000000 471400 xsym               LDP1    GROUP$
         4 010760   000000 101500                    MRL     fill='000'O
         4 010761   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 010762   003032 000004 0                  ADSC9   NO_GROUPS                cn=0,n=4

     2493     8062    6                       END;

     2494     8063    5                   C=1;

   8063  4 010763   000001 235007                    LDA     1,DL
         4 010764   003033 755000 0                  STA     C

     2495     8064    6                   DO INDX=0 TO NO_SORT_KEYS;

   8064  4 010765   003030 450000 0                  STZ     INDX
         4 010766   011051 710000 4                  TRA     s:8078+1

     2496     8065    6                       EIS$=ADDR(FR_SAVE.FEIS(INDX));

   8065  4 010767   003030 236000 0                  LDQ     INDX
         4 010770   000003 402007                    MPY     3,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:371  
         4 010771   200036 630506                    EPPR0   FR_SAVE+1,QL,AUTO
         4 010772   000375 450400 0                  STP0    EIS$

     2497     8066    6                       ITEM$=PINCRW(ENTRY$,ADSC9.EISADDR);

   8066  4 010773   003100 061500                    CSR     bolr='003'O
         4 010774   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         4 010775   206236 000022                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=18
         4 010776   206236 220100                    LDX0    EXPO+5,,AUTO
         4 010777   000000 636010                    EAQ     0,X0
         4 011000   000000 036000 xsym               ADLQ    ENTRY$
         4 011001   000411 756000 0                  STQ     ITEM$

     2498     8067    6                       UWA.FR_REC.FTYP=FR_SAVE.FTYP(INDX);

   8067  4 011002   003030 236000 0                  LDQ     INDX
         4 011003   000003 402007                    MPY     3,DL
         4 011004   200035 236106                    LDQ     FR_SAVE,QL,AUTO
         4 011005   000022 772000                    QRL     18
         4 011006   000334 756000 xsym               STQ     UWA+220

     2499     8068    6                       CALL PA_IT_OUTPUT;

   8068  4 011007   011306 701000 4                  TSX1    PA_IT_OUTPUT
         4 011010   000000 011000                    NOP     0

     2500     8069    6                       PA_BUF.KEYNAME=IT_HDR.DATA;

   8069  4 011011   040000 100400                    MLR     fill='040'O
         4 011012   000224 000036 0                  ADSC9   IT_HDR+6                 cn=0,n=30
         4 011013   003004 600036 0                  ADSC9   PA_BUF+3                 cn=3,n=30

     2501     8070    6                       BUFSF=VECTOR(PA_BUF);

   8070  4 011014   000272 237000 5                  LDAQ    186
         4 011015   000000 755000 xsym               STA     BUFSF
         4 011016   000001 756000 xsym               STQ     BUFSF+1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:372  

     2502     8071    6                       BUFLNSF=LENGTHC(PA_BUF);

   8071  4 011017   000131 235007                    LDA     89,DL
         4 011020   000000 755000 xsym               STA     BUFLNSF

     2503     8072    6                       IF PA_ENTRY.C=1 AND C<=NO_GROUPS THEN

   8072  4 011021   000000 470400 xsym               LDP0    ENTRY$
         4 011022   003100 061500                    CSR     bolr='003'O
         4 011023   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         4 011024   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 011025   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011026   000001 116007                    CMPQ    1,DL
         4 011027   011035 601000 4                  TNZ     s:8074
         4 011030   003033 236000 0                  LDQ     C
         4 011031   003032 116000 0                  CMPQ    NO_GROUPS
         4 011032   011035 605400 4                  TPNZ    s:8074

     2504     8073    6                           CALL GET_GROUP;

   8073  4 011033   007722 701000 4                  TSX1    GET_GROUP
         4 011034   000000 011000                    NOP     0

     2505     8074    6                       CALL WRITE_LINE;

   8074  4 011035   005466 701000 4                  TSX1    WRITE_LINE
         4 011036   000000 011000                    NOP     0

     2506     8075    6                       PA_BUF.KEYNAME=' ';

   8075  4 011037   040000 100400                    MLR     fill='040'O
         4 011040   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011041   003004 600036 0                  ADSC9   PA_BUF+3                 cn=3,n=30

     2507     8076    6                       PA_BUF.KEY_TXT=' ';

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:373  
   8076  4 011042   040000 100400                    MLR     fill='040'O
         4 011043   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011044   003002 200011 0                  ADSC9   PA_BUF+1                 cn=1,n=9

     2508     8077    6                       PA_BUF.POINTER=' ';

   8077  4 011045   040000 100400                    MLR     fill='040'O
         4 011046   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011047   003014 200012 0                  ADSC9   PA_BUF+11                cn=1,n=10

     2509     8078    6                       END;

   8078  4 011050   003030 054000 0                  AOS     INDX
         4 011051   003030 236000 0                  LDQ     INDX
         4 011052   003034 116000 0                  CMPQ    NO_SORT_KEYS
         4 011053   010767 604400 4                  TMOZ    s:8065

     2510     8079    6                   DO WHILE (PA_ENTRY.C=1 AND C<=NO_GROUPS);

   8079  4 011054   011061 710000 4                  TRA     s:8082

     2511     8080    6                       CALL GET_GROUP;

   8080  4 011055   007722 701000 4                  TSX1    GET_GROUP
         4 011056   000000 011000                    NOP     0

     2512     8081    6                       CALL WRITE_LINE;

   8081  4 011057   005466 701000 4                  TSX1    WRITE_LINE
         4 011060   000000 011000                    NOP     0

     2513     8082    6                       END;

   8082  4 011061   000000 470400 xsym               LDP0    ENTRY$
         4 011062   003100 061500                    CSR     bolr='003'O
         4 011063   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         4 011064   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:374  
         4 011065   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011066   000001 116007                    CMPQ    1,DL
         4 011067   011073 601000 4                  TNZ     s:8083
         4 011070   003033 236000 0                  LDQ     C
         4 011071   003032 116000 0                  CMPQ    NO_GROUPS
         4 011072   011055 604400 4                  TMOZ    s:8080

     2514     8083    5                   ENTRY$=PINCRC(ENTRY$,KEY_PTR_SIZE+2);

   8083  4 011073   000476 236000 0                  LDQ     KEY_PTR_SIZE
         4 011074   000020 736000                    QLS     16
         4 011075   400000 036007                    ADLQ    -131072,DL
         4 011076   000000 036000 xsym               ADLQ    ENTRY$
         4 011077   000000 756000 xsym               STQ     ENTRY$

     2515     8084    5                   END;

   8084  4 011100   003035 054000 0                  AOS     ENTRY_INDX
         4 011101   000000 470400 xsym               LDP0    REC$
         4 011102   003100 061500                    CSR     bolr='003'O
         4 011103   000001 060014                    BDSC    1,,PR0                   by=0,bit=6,n=12
         4 011104   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 011105   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011106   003035 116000 0                  CMPQ    ENTRY_INDX
         4 011107   010715 605000 4                  TPL     s:8052

     2516     8085    4               IF PA_REC.HIGHEST_KEY THEN

   8085  4 011110   000000 066500                    CMPB    filb='0'B
         4 011111   000001 010001                    BDSC    1,,PR0                   by=0,bit=1,n=1
         4 011112   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 011113   011127 600000 4                  TZE     s:8094

     2517     8086    5               DO;

     2518     8087    5                   PA_BUF.POINTER=' ';

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:375  
   8087  4 011114   040000 100400                    MLR     fill='040'O
         4 011115   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011116   003014 200012 0                  ADSC9   PA_BUF+11                cn=1,n=10

     2519     8088    5                   PA_BUF.KEY_TXT=' ';

   8088  4 011117   040000 100400                    MLR     fill='040'O
         4 011120   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011121   003002 200011 0                  ADSC9   PA_BUF+1                 cn=1,n=9

     2520     8089    5                   PA_BUF.KEYNAME='<LAST KEY REPEATED IN NEXT>';

   8089  4 011122   040000 100400                    MLR     fill='040'O
         4 011123   000235 000033 3                  ADSC9   CHAR_SET+157             cn=0,n=27
         4 011124   003004 600036 0                  ADSC9   PA_BUF+3                 cn=3,n=30

     2521     8090    5                   CALL WRITE_LINE;

   8090  4 011125   005466 701000 4                  TSX1    WRITE_LINE
         4 011126   000000 011000                    NOP     0

     2522     8091    5                   END;

     2523     8092    4               END;

     2524     8093    3           END;

     2525     8094    2   END FIND_PRINT_ITEMS;

   8094  4 011127   200024 221300                    LDX1  ! @LAST_LN+2,,AUTO
         4 011130   000001 702211                    TSX2  ! 1,X1

     2526     8095        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:376  
     2527     8096        /***************************************************************/
     2528     8097        /*                                                             */
     2529     8098        /*           O U T P U T     R E C O R D    I N F O            */
     2530     8099        /***************************************************************/
     2531     8100    1   REC_OUTPUT: PROC;

   8100  4 011131   200024 741300       REC_OUTPUT   STX1  ! @LAST_LN+2,,AUTO

     2532     8101    2   DCL PSMODE_TXT(0:5) CHAR(6) CALIGNED STATIC
     2533     8102    2    INIT('DIRECT','CALC','VIA','SEQUEN','INDEX','SYSTEM');
     2534     8103
     2535     8104    2       REC_HDR.PSMODE=PSMODE_TXT(MSTR_REF.PSMODE(CURR_REC));

   8104  4 011132   000405 236000 0                  LDQ     CURR_REC
         4 011133   000012 402007                    MPY     10,DL
         4 011134   000000 470400 xsym               LDP0    MSTR$
         4 011135   000011 236106                    LDQ     9,QL,PR0
         4 011136   000030 772000                    QRL     24
         4 011137   000007 376007                    ANQ     7,DL
         4 011140   000006 402007                    MPY     6,DL
         4 011141   040000 100406                    MLR     fill='040'O
         4 011142   003036 000006 0                  ADSC9   PSMODE_TXT,Q             cn=0,n=6
         4 011143   000110 200006 0                  ADSC9   REC_HDR+17               cn=1,n=6

     2536     8105    2       CALL ZERO_SUP(REC_HDR.PAGE_NO,8,'1'B);

   8105  4 011144   000275 630400 5                  EPPR0   189
         4 011145   000075 631400 5                  EPPR1   61
         4 011146   000000 701000 xent               TSX1    ZERO_SUP
         4 011147   000000 011000                    NOP     0

     2537     8106    2       CALL ZERO_SUP(REC_HDR.LN_NBR,5,'1'B);

   8106  4 011150   000300 630400 5                  EPPR0   192
         4 011151   000075 631400 5                  EPPR1   61
         4 011152   000000 701000 xent               TSX1    ZERO_SUP
         4 011153   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:377  

     2538     8107    2   /**/ BUFSF = VECTOR(SKIP);

   8107  4 011154   000232 237000 5                  LDAQ    154
         4 011155   000000 755000 xsym               STA     BUFSF
         4 011156   000001 756000 xsym               STQ     BUFSF+1

     2539     8108    2   /**/ BUFLNSF = 1;

   8108  4 011157   000001 235007                    LDA     1,DL
         4 011160   000000 755000 xsym               STA     BUFLNSF

     2540     8109    2       CALL WRITE_LINE;

   8109  4 011161   005466 701000 4                  TSX1    WRITE_LINE
         4 011162   000000 011000                    NOP     0

     2541     8110    2   /**/ BUFSF = VECTOR(REC_HDR);

   8110  4 011163   000304 237000 5                  LDAQ    196
         4 011164   000000 755000 xsym               STA     BUFSF
         4 011165   000001 756000 xsym               STQ     BUFSF+1

     2542     8111    2   /**/ BUFLNSF = 75;

   8111  4 011166   000113 235007                    LDA     75,DL
         4 011167   000000 755000 xsym               STA     BUFLNSF

     2543     8112    2       CALL WRITE_LINE;

   8112  4 011170   005466 701000 4                  TSX1    WRITE_LINE
         4 011171   000000 011000                    NOP     0

     2544     8113    2       RETURN;

   8113  4 011172   200024 221300                    LDX1  ! @LAST_LN+2,,AUTO
         4 011173   000001 702211                    TSX2  ! 1,X1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:378  

     2545     8114    2   END REC_OUTPUT;
     2546     8115        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:379  
     2547     8116        /***************************************************************/
     2548     8117        /*                                                             */
     2549     8118        /*           O U T P U T   S E T   I N F O                     */
     2550     8119        /***************************************************************/
     2551     8120
     2552     8121    1   SET_OUTPUT: PROC;

   8121  4 011174   200026 741300       SET_OUTPUT   STX1  ! NAME_SAVE+1,,AUTO

     2553     8122    2   DCL ORDER_TXT(0:6) CHAR(5) CALIGNED STATIC
     2554     8123    2    INIT('FIRST','LAST','NEXT','PRIOR','SORT','UNKWN','SWRN');
     2555     8124
     2556     8125    2       X=SET_XREF.MSTRINDX(REC_INDX); /* INDX IN MSTR_REF FOR THE SET */

   8125  4 011175   000403 235000 0                  LDA     REC_INDX
         4 011176   000002 735000                    ALS     2
         4 011177   000000 470400 xsym               LDP0    SET_XREF$
         4 011200   000000 236105                    LDQ     0,AL,PR0
         4 011201   000022 732000                    QRS     18
         4 011202   000000 756000 xsym               STQ     X

     2557     8126    2       SET_HDR.ORDER=ORDER_TXT(MSTR_REF.SET.ORDER(X));

   8126  4 011203   000012 402007                    MPY     10,DL
         4 011204   000000 471400 xsym               LDP1    MSTR$
         4 011205   100011 236106                    LDQ     9,QL,PR1
         4 011206   000020 772000                    QRL     16
         4 011207   000007 376007                    ANQ     7,DL
         4 011210   000005 402007                    MPY     5,DL
         4 011211   040000 100406                    MLR     fill='040'O
         4 011212   003047 000005 0                  ADSC9   ORDER_TXT,Q              cn=0,n=5
         4 011213   000147 200006 0                  ADSC9   SET_HDR+9                cn=1,n=6

     2558     8127    2       SET_HDR.GLO_LOC = '      ';

   8127  4 011214   040000 100400                    MLR     fill='040'O
         4 011215   000244 000006 3                  ADSC9   CHAR_SET+164             cn=0,n=6
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:380  
         4 011216   000161 400006 0                  ADSC9   SET_HDR+19               cn=2,n=6

     2559     8128    2       IF MSTR_REF.GLOBAL(X)~=1 AND ~LOCAL_ONLY THEN

   8128  4 011217   000000 236000 xsym               LDQ     X
         4 011220   000012 402007                    MPY     10,DL
         4 011221   100011 236106                    LDQ     9,QL,PR1
         4 011222   777000 376003                    ANQ     -512,DU
         4 011223   001000 116003                    CMPQ    512,DU
         4 011224   011234 600000 4                  TZE     s:8130
         4 011225   000467 236000 0                  LDQ     LOCAL_ONLY
         4 011226   400000 376003                    ANQ     -131072,DU
         4 011227   400000 676003                    ERQ     -131072,DU
         4 011230   011234 600000 4                  TZE     s:8130

     2560     8129    2           SET_HDR.GLO_LOC='(LOC)';

   8129  4 011231   040000 100400                    MLR     fill='040'O
         4 011232   000246 000005 3                  ADSC9   CHAR_SET+166             cn=0,n=5
         4 011233   000161 400006 0                  ADSC9   SET_HDR+19               cn=2,n=6

     2561     8130    2       SET_HDR.SET_TYPE=' ';

   8130  4 011234   040000 100400                    MLR     fill='040'O
         4 011235   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011236   000163 000005 0                  ADSC9   SET_HDR+21               cn=0,n=5

     2562     8131    2       IF SET_XREF.EIS.OWNR(REC_INDX)~=0 /* REC IS SM FOR THE SET */

   8131  4 011237   000403 235000 0                  LDA     REC_INDX
         4 011240   000002 735000                    ALS     2
         4 011241   000002 235105                    LDA     2,AL,PR0
         4 011242   011261 600000 4                  TZE     s:8135
         4 011243   000000 236000 xsym               LDQ     X
         4 011244   000012 402007                    MPY     10,DL
         4 011245   100011 236106                    LDQ     9,QL,PR1
         4 011246   020000 316007                    CANQ    8192,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:381  
         4 011247   011261 600000 4                  TZE     s:8135
         4 011250   000405 236000 0                  LDQ     CURR_REC
         4 011251   000012 402007                    MPY     10,DL
         4 011252   100011 236106                    LDQ     9,QL,PR1
         4 011253   000700 376003                    ANQ     448,DU
         4 011254   000200 116003                    CMPQ    128,DU
         4 011255   011261 601000 4                  TNZ     s:8135

     2563     8132    2          AND MSTR_REF.SET.SMMODE(X)='1'B /* PRIMARY STORAGE */
     2564     8133    2          AND MSTR_REF.PSMODE(CURR_REC)=2 THEN /* REC IS VIA */
     2565     8134    2           SET_HDR.SET_TYPE='(VIA)';

   8134  4 011256   040000 100400                    MLR     fill='040'O
         4 011257   000250 000005 3                  ADSC9   CHAR_SET+168             cn=0,n=5
         4 011260   000163 000005 0                  ADSC9   SET_HDR+21               cn=0,n=5

     2566     8135    2       BUFSF=VECTOR(SET_HDR);

   8135  4 011261   000306 237000 5                  LDAQ    198
         4 011262   000000 755000 xsym               STA     BUFSF
         4 011263   000001 756000 xsym               STQ     BUFSF+1

     2567     8136    2       BUFLNSF=LENGTHC(SET_HDR);

   8136  4 011264   000131 235007                    LDA     89,DL
         4 011265   000000 755000 xsym               STA     BUFLNSF

     2568     8137    2       CALL WRITE_LINE;

   8137  4 011266   005466 701000 4                  TSX1    WRITE_LINE
         4 011267   000000 011000                    NOP     0

     2569     8138    2   END SET_OUTPUT;

   8138  4 011270   200026 221300                    LDX1  ! NAME_SAVE+1,,AUTO
         4 011271   000001 702211                    TSX2  ! 1,X1

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:382  
     2570     8139        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:383  
     2571     8140        /***************************************************************/
     2572     8141        /*                                                             */
     2573     8142        /*           O U T P U T   R E C O R D   I T E M S             */
     2574     8143        /***************************************************************/
     2575     8144    1   IT_OUTPUT: PROC;

   8144  4 011272   200102 741300       IT_OUTPUT    STX1  ! FR_SAVE+37,,AUTO

     2576     8145    2   DCL CHAR7 CHAR(7) BASED UNAL;
     2577     8146    2       EIS$=ADDR(UWA.FR_REC.BUFLOC);

   8146  4 011273   000310 236000 5                  LDQ     200
         4 011274   000375 756000 0                  STQ     EIS$

     2578     8147    2       ITEM$=PINCRW(REC$,ADSC9.EISADDR);

   8147  4 011275   000375 470400 0                  LDP0    EIS$
         4 011276   003100 061500                    CSR     bolr='003'O
         4 011277   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         4 011300   206236 000022                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=18
         4 011301   206236 220100                    LDX0    EXPO+5,,AUTO
         4 011302   000000 636010                    EAQ     0,X0
         4 011303   000000 036000 xsym               ADLQ    REC$
         4 011304   000411 756000 0                  STQ     ITEM$
         4 011305   011307 710000 4                  TRA     s:8150

     2579     8148
     2580     8149    2   PA_IT_OUTPUT: ENTRY;

   8149  4 011306   200102 741300       PA_IT_OUTPUT STX1  ! FR_SAVE+37,,AUTO

     2581     8150    2       ITEM$=PINCRC(ITEM$,ADSC9.BYT_OFF/2);

   8150  4 011307   000375 470400 0                  LDP0    EIS$
         4 011310   003100 061500                    CSR     bolr='003'O
         4 011311   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         4 011312   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:384  
         4 011313   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011314   000001 772000                    QRL     1
         4 011315   000020 736000                    QLS     16
         4 011316   000411 036000 0                  ADLQ    ITEM$
         4 011317   000411 756000 0                  STQ     ITEM$

     2582     8151    2       IT_HDR.DATA=' ';

   8151  4 011320   040000 100400                    MLR     fill='040'O
         4 011321   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011322   000224 000062 0                  ADSC9   IT_HDR+6                 cn=0,n=50

     2583     8152    2       ITEM_LN=0;

   8152  4 011323   000412 450000 0                  STZ     ITEM_LN

     2584     8153    3       DO CASE(UWA.FR_REC.FTYP);

   8153  4 011324   000334 235000 xsym               LDA     UWA+220
         4 011325   000024 115007                    CMPA    20,DL
         4 011326   011330 602005 4                  TNC     s:8153+4,AL
         4 011327   012020 710000 4                  TRA     s:8254
         4 011330   011354 710000 4                  TRA     s:8155
         4 011331   011401 710000 4                  TRA     s:8160
         4 011332   011426 710000 4                  TRA     s:8165
         4 011333   011453 710000 4                  TRA     s:8170
         4 011334   011504 710000 4                  TRA     s:8175
         4 011335   011535 710000 4                  TRA     s:8180
         4 011336   012020 710000 4                  TRA     s:8254
         4 011337   012020 710000 4                  TRA     s:8254
         4 011340   012020 710000 4                  TRA     s:8254
         4 011341   011572 710000 4                  TRA     s:8186
         4 011342   012020 710000 4                  TRA     s:8254
         4 011343   011634 710000 4                  TRA     s:8193
         4 011344   011677 710000 4                  TRA     s:8219
         4 011345   012020 710000 4                  TRA     s:8254
         4 011346   012020 710000 4                  TRA     s:8254
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:385  
         4 011347   012020 710000 4                  TRA     s:8254
         4 011350   012020 710000 4                  TRA     s:8254
         4 011351   012020 710000 4                  TRA     s:8254
         4 011352   012020 710000 4                  TRA     s:8254
         4 011353   011742 710000 4                  TRA     s:8245

     2585     8154    3       CASE(0);

     2586     8155    3           ITEM.TYPE='DB-KEY';

   8155  4 011354   040000 100400                    MLR     fill='040'O
         4 011355   000252 000006 3                  ADSC9   CHAR_SET+170             cn=0,n=6
         4 011356   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2587     8156    3           ITEM.SZ = ' ';

   8156  4 011357   040000 100400                    MLR     fill='040'O
         4 011360   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011361   000175 400003 0                  ADSC9   ITEM+8                   cn=2,n=3

     2588     8157    3           CALL BINCHAR(IT_HDR.DATA,ITEM$->BINU);

   8157  4 011362   000411 471400 0                  LDP1    ITEM$
         4 011363   000100 100500                    MLR     fill='000'O
         4 011364   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 011365   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 011366   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011367   000000 235003                    LDA     0,DU
         4 011370   206240 757100                    STAQ    EXPO+7,,AUTO
         4 011371   000000 301500                    BTD
         4 011372   206240 000010                    NDSC9   EXPO+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 011373   000224 030062 0                  NDSC9   IT_HDR+6                 cn=0,s=nosgn,sf=0,n=50

     2589     8158    3           CALL ZERO_SUP(IT_HDR.DATA,50,'1'B);

   8158  4 011374   000312 630400 5                  EPPR0   202
         4 011375   000075 631400 5                  EPPR1   61
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:386  
         4 011376   000000 701000 xent               TSX1    ZERO_SUP
         4 011377   000000 011000                    NOP     0
         4 011400   012026 710000 4                  TRA     s:8257

     2590     8159    3       CASE(1);

     2591     8160    3           ITEM.TYPE='COMP WORD';

   8160  4 011401   040000 100400                    MLR     fill='040'O
         4 011402   000254 000011 3                  ADSC9   CHAR_SET+172             cn=0,n=9
         4 011403   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2592     8161    3           ITEM.SZ = ' ';

   8161  4 011404   040000 100400                    MLR     fill='040'O
         4 011405   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011406   000175 400003 0                  ADSC9   ITEM+8                   cn=2,n=3

     2593     8162    3           CALL BINCHAR(IT_HDR.DATA,ITEM$->BINU);

   8162  4 011407   000411 471400 0                  LDP1    ITEM$
         4 011410   000100 100500                    MLR     fill='000'O
         4 011411   100000 000004                    ADSC9   0,,PR1                   cn=0,n=4
         4 011412   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 011413   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011414   000000 235003                    LDA     0,DU
         4 011415   206240 757100                    STAQ    EXPO+7,,AUTO
         4 011416   000000 301500                    BTD
         4 011417   206240 000010                    NDSC9   EXPO+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 011420   000224 030062 0                  NDSC9   IT_HDR+6                 cn=0,s=nosgn,sf=0,n=50

     2594     8163    3           CALL ZERO_SUP(IT_HDR.DATA,50,'1'B);

   8163  4 011421   000312 630400 5                  EPPR0   202
         4 011422   000075 631400 5                  EPPR1   61
         4 011423   000000 701000 xent               TSX1    ZERO_SUP
         4 011424   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:387  
         4 011425   012026 710000 4                  TRA     s:8257

     2595     8164    3       CASE(2);

     2596     8165    3           ITEM.TYPE='COMP HALF';

   8165  4 011426   040000 100400                    MLR     fill='040'O
         4 011427   000257 000011 3                  ADSC9   CHAR_SET+175             cn=0,n=9
         4 011430   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2597     8166    3           ITEM.SZ = ' ';

   8166  4 011431   040000 100400                    MLR     fill='040'O
         4 011432   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011433   000175 400003 0                  ADSC9   ITEM+8                   cn=2,n=3

     2598     8167    3           CALL BINCHAR(IT_HDR.DATA,ITEM$->BINH);

   8167  4 011434   000411 471400 0                  LDP1    ITEM$
         4 011435   000100 101500                    MRL     fill='000'O
         4 011436   100000 000002                    ADSC9   0,,PR1                   cn=0,n=2
         4 011437   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 011440   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011441   000000 235003                    LDA     0,DU
         4 011442   206240 757100                    STAQ    EXPO+7,,AUTO
         4 011443   000000 301500                    BTD
         4 011444   206240 000010                    NDSC9   EXPO+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 011445   000224 030062 0                  NDSC9   IT_HDR+6                 cn=0,s=nosgn,sf=0,n=50

     2599     8168    3           CALL ZERO_SUP(IT_HDR.DATA,50,'1'B);

   8168  4 011446   000312 630400 5                  EPPR0   202
         4 011447   000075 631400 5                  EPPR1   61
         4 011450   000000 701000 xent               TSX1    ZERO_SUP
         4 011451   000000 011000                    NOP     0
         4 011452   012026 710000 4                  TRA     s:8257

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:388  
     2600     8169    3       CASE(3);

     2601     8170    3           ITEM.TYPE = 'UNSGN DEC';

   8170  4 011453   040000 100400                    MLR     fill='040'O
         4 011454   000262 000011 3                  ADSC9   CHAR_SET+178             cn=0,n=9
         4 011455   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2602     8171    3           CALL BINCHAR(ITEM.SZ,NDSC.SIZE);

   8171  4 011456   000000 236100                    LDQ     0,,PR0
         4 011457   000077 376007                    ANQ     63,DL
         4 011460   000000 235003                    LDA     0,DU
         4 011461   206236 757100                    STAQ    EXPO+5,,AUTO
         4 011462   000000 301500                    BTD
         4 011463   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 011464   000175 430003 0                  NDSC9   ITEM+8                   cn=2,s=nosgn,sf=0,n=3

     2603     8172    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);

   8172  4 011465   000315 630400 5                  EPPR0   205
         4 011466   000075 631400 5                  EPPR1   61
         4 011467   000000 701000 xent               TSX1    ZERO_SUP
         4 011470   000000 011000                    NOP     0

     2604     8173    3           CALL UNPAK(IT_HDR.DATA,ITEM$,NDSC.SIZE,'0'B);

   8173  4 011471   000024 236000 5                  LDQ     20
         4 011472   200110 756100                    STQ     @COUNT+1,,AUTO
         4 011473   000375 236000 0                  LDQ     EIS$
         4 011474   630000 036007                    ADLQ    -53248,DL
         4 011475   000320 235000 5                  LDA     208
         4 011476   200106 757100                    STAQ    @PTR_LOC,,AUTO
         4 011477   000312 236000 5                  LDQ     202
         4 011500   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 011501   012150 701000 4                  TSX1    UNPAK
         4 011502   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:389  
         4 011503   012026 710000 4                  TRA     s:8257

     2605     8174    3       CASE(4);

     2606     8175    3           ITEM.TYPE = 'SGNED DEC';

   8175  4 011504   040000 100400                    MLR     fill='040'O
         4 011505   000265 000011 3                  ADSC9   CHAR_SET+181             cn=0,n=9
         4 011506   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2607     8176    3           CALL BINCHAR(ITEM.SZ,NDSC.SIZE-1); /*-1 FOR SIGN*/

   8176  4 011507   000000 236100                    LDQ     0,,PR0
         4 011510   000077 376007                    ANQ     63,DL
         4 011511   000001 136007                    SBLQ    1,DL
         4 011512   206236 756100                    STQ     EXPO+5,,AUTO
         4 011513   000000 301500                    BTD
         4 011514   206236 000004                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=4
         4 011515   000175 430003 0                  NDSC9   ITEM+8                   cn=2,s=nosgn,sf=0,n=3

     2608     8177    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);

   8177  4 011516   000315 630400 5                  EPPR0   205
         4 011517   000075 631400 5                  EPPR1   61
         4 011520   000000 701000 xent               TSX1    ZERO_SUP
         4 011521   000000 011000                    NOP     0

     2609     8178    3           CALL UNPAK(IT_HDR.DATA,ITEM$,NDSC.SIZE,'1'B);

   8178  4 011522   000102 236000 5                  LDQ     66
         4 011523   200110 756100                    STQ     @COUNT+1,,AUTO
         4 011524   000375 236000 0                  LDQ     EIS$
         4 011525   630000 036007                    ADLQ    -53248,DL
         4 011526   000320 235000 5                  LDA     208
         4 011527   200106 757100                    STAQ    @PTR_LOC,,AUTO
         4 011530   000312 236000 5                  LDQ     202
         4 011531   200105 756100                    STQ     @PTR_SIZE,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:390  
         4 011532   012150 701000 4                  TSX1    UNPAK
         4 011533   000000 011000                    NOP     0
         4 011534   012026 710000 4                  TRA     s:8257

     2610     8179    3       CASE(5);

     2611     8180    3           ITEM.TYPE = 'CHARACTER';

   8180  4 011535   040000 100400                    MLR     fill='040'O
         4 011536   000270 000011 3                  ADSC9   CHAR_SET+184             cn=0,n=9
         4 011537   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2612     8181    3           CALL BINCHAR(ITEM.SZ,ADSC9.SIZE);

   8181  4 011540   003100 061500                    CSR     bolr='003'O
         4 011541   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 011542   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 011543   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011544   000000 235003                    LDA     0,DU
         4 011545   206240 757100                    STAQ    EXPO+7,,AUTO
         4 011546   000000 301500                    BTD
         4 011547   206240 000010                    NDSC9   EXPO+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 011550   000175 430003 0                  NDSC9   ITEM+8                   cn=2,s=nosgn,sf=0,n=3

     2613     8182    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);

   8182  4 011551   000315 630400 5                  EPPR0   205
         4 011552   000075 631400 5                  EPPR1   61
         4 011553   000000 701000 xent               TSX1    ZERO_SUP
         4 011554   000000 011000                    NOP     0

     2614     8183    3           IT_HDR.DATA = SUBSTR(ITEM$->CHAR50,0,ADSC9.SIZE);

   8183  4 011555   000375 470400 0                  LDP0    EIS$
         4 011556   003100 061500                    CSR     bolr='003'O
         4 011557   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 011560   206236 000022                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=18
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:391  
         4 011561   206236 220100                    LDX0    EXPO+5,,AUTO
         4 011562   000411 471400 0                  LDP1    ITEM$
         4 011563   040000 100540                    MLR     fill='040'O
         4 011564   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 011565   000224 000062 0                  ADSC9   IT_HDR+6                 cn=0,n=50

     2615     8184    3           ITEM_LN = ADSC9.SIZE;

   8184  4 011566   003000 061500                    CSR     bolr='003'O
         4 011567   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 011570   000412 000044 0                  BDSC    ITEM_LN                  by=0,bit=0,n=36
         4 011571   012026 710000 4                  TRA     s:8257

     2616     8185    3       CASE(9); /* UNSPECIFIED IN SCHEMA ITEMS */

     2617     8186    3           ITEM.TYPE = 'UNSPEC';

   8186  4 011572   040000 100400                    MLR     fill='040'O
         4 011573   000273 000006 3                  ADSC9   CHAR_SET+187             cn=0,n=6
         4 011574   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2618     8187    3           CALL BINCHAR(ITEM.SZ,ADSC9.SIZE);

   8187  4 011575   003100 061500                    CSR     bolr='003'O
         4 011576   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 011577   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 011600   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011601   000000 235003                    LDA     0,DU
         4 011602   206240 757100                    STAQ    EXPO+7,,AUTO
         4 011603   000000 301500                    BTD
         4 011604   206240 000010                    NDSC9   EXPO+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 011605   000175 430003 0                  NDSC9   ITEM+8                   cn=2,s=nosgn,sf=0,n=3

     2619     8188    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);

   8188  4 011606   000315 630400 5                  EPPR0   205
         4 011607   000075 631400 5                  EPPR1   61
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:392  
         4 011610   000000 701000 xent               TSX1    ZERO_SUP
         4 011611   000000 011000                    NOP     0

     2620     8189    3           ITEM_LN = ADSC9.SIZE;

   8189  4 011612   000375 470400 0                  LDP0    EIS$
         4 011613   003000 061500                    CSR     bolr='003'O
         4 011614   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 011615   000412 000044 0                  BDSC    ITEM_LN                  by=0,bit=0,n=36

     2621     8190    3           CALL OCTAL_PRINT(IT_HDR.DATA,ITEM$,ITEM_LN);

   8190  4 011616   000322 237000 5                  LDAQ    210
         4 011617   200106 757100                    STAQ    @PTR_LOC,,AUTO
         4 011620   000312 236000 5                  LDQ     202
         4 011621   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 011622   012340 701000 4                  TSX1    OCTAL_PRINT
         4 011623   000000 011000                    NOP     0

     2622     8191    3           ITEM_LN = ADSC9.SIZE - 8;

   8191  4 011624   000375 470400 0                  LDP0    EIS$
         4 011625   003100 061500                    CSR     bolr='003'O
         4 011626   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 011627   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 011630   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011631   000010 136007                    SBLQ    8,DL
         4 011632   000412 756000 0                  STQ     ITEM_LN
         4 011633   012026 710000 4                  TRA     s:8257

     2623     8192    3       CASE(11 /* Sngl precision floating pt */);

     2624     8193    3           ITEM.TYPE = 'FLOATING';

   8193  4 011634   040000 100400                    MLR     fill='040'O
         4 011635   000275 000010 3                  ADSC9   CHAR_SET+189             cn=0,n=8
         4 011636   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:393  

     2625     8194    3           ITEM.SZ = 'SNG';

   8194  4 011637   040000 100400                    MLR     fill='040'O
         4 011640   000277 000003 3                  ADSC9   CHAR_SET+191             cn=0,n=3
         4 011641   000175 400003 0                  ADSC9   ITEM+8                   cn=2,n=3

     2626     8195    3           MAX_DIGITS = 10;

   8195  4 011642   000012 235007                    LDA     10,DL
         4 011643   000460 755000 0                  STA     MAX_DIGITS

     2627     8196    3           SNGL = ITEM$ -> BIT36;

   8196  4 011644   000411 471400 0                  LDP1    ITEM$
         4 011645   003000 060500                    CSL     bolr='003'O
         4 011646   100000 000044                    BDSC    0,,PR1                   by=0,bit=0,n=36
         4 011647   000434 000044 0                  BDSC    SNGL                     by=0,bit=0,n=36

     2628     8197    3           CALL XPN_7RTOLS( SNGL /*Field to convert*/,

   8197  4 011650   000325 630400 5                  EPPR0   213
         4 011651   000324 631400 5                  EPPR1   212
         4 011652   000000 701000 xent               TSX1    XPN_7RTOLS
         4 011653   000000 011000                    NOP     0

     2629     8198    3              ASCII_NUM /*Target for signif digits*/,
     2630     8199    3              MAX_DIGITS /*10 for sngl pnt */,
     2631     8200    3              AN_DIGITS /* num digits returned */,
     2632     8201    3              AN_POWER_10 /* exponent value */);
     2633     8202         /* Edit result of call in to a display format "1.234567E+150" */
     2634     8203    3           CALL XPN_7ELJE(IT_HDR.DATA /* Target field */,

   8203  4 011654   000336 630400 5                  EPPR0   222
         4 011655   000332 631400 5                  EPPR1   218
         4 011656   000000 701000 xent               TSX1    XPN_7ELJE
         4 011657   000000 011000                    NOP     0
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:394  

     2635     8204    3              LENGTHC(IT_HDR.DATA),
     2636     8205    3              ASCII_NUM /* strng of sig digits */,
     2637     8206    3              AN_DIGITS /* Num of sigf digits */,
     2638     8207    3              AN_POWER_10 /* Exponent value */,
     2639     8208    3              2 /*Plus sign flag = sign at left*/,
     2640     8209    3              RESULT_LEN /* size of result */,
     2641     8210    3              -2 /* special format of exp digits*/,
     2642     8211    3              1 /*1 digit to left of decml pnt*/);
     2643     8212         /* Blank out unused part of target string */
     2644     8213    3           TEMP$ = ADDR(IT_HDR.DATA);

   8213  4 011660   000312 236000 5                  LDQ     202
         4 011661   000433 756000 0                  STQ     TEMP$

     2645     8214    3           TEMP$ = PINCRC(TEMP$,RESULT_LEN);

   8214  4 011662   000463 236000 0                  LDQ     RESULT_LEN
         4 011663   000020 736000                    QLS     16
         4 011664   000433 036000 0                  ADLQ    TEMP$
         4 011665   000433 756000 0                  STQ     TEMP$

     2646     8215    3           T_ITEM_LN = 50 - RESULT_LEN;

   8215  4 011666   000062 235007                    LDA     50,DL
         4 011667   000463 135000 0                  SBLA    RESULT_LEN
         4 011670   000431 755000 0                  STA     T_ITEM_LN

     2647     8216    3           TEMP$ -> ALPH_ITEM = ' ';

   8216  4 011671   000433 470400 0                  LDP0    TEMP$
         4 011672   000000 620005                    EAX0    0,AL
         4 011673   040140 100400                    MLR     fill='040'O
         4 011674   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011675   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 011676   012026 710000 4                  TRA     s:8257

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:395  
     2648     8217
     2649     8218    3       CASE(12 /* DBL precision floating pnt */);

     2650     8219    3           ITEM.TYPE = 'FLOATING';

   8219  4 011677   040000 100400                    MLR     fill='040'O
         4 011700   000275 000010 3                  ADSC9   CHAR_SET+189             cn=0,n=8
         4 011701   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2651     8220    3           ITEM.SZ = 'DBL';

   8220  4 011702   040000 100400                    MLR     fill='040'O
         4 011703   000300 000003 3                  ADSC9   CHAR_SET+192             cn=0,n=3
         4 011704   000175 400003 0                  ADSC9   ITEM+8                   cn=2,n=3

     2652     8221    3           MAX_DIGITS = 21;

   8221  4 011705   000025 235007                    LDA     21,DL
         4 011706   000460 755000 0                  STA     MAX_DIGITS

     2653     8222    3           DOUBLE = ITEM$ -> BIT72;

   8222  4 011707   000411 471400 0                  LDP1    ITEM$
         4 011710   003000 060500                    CSL     bolr='003'O
         4 011711   100000 000110                    BDSC    0,,PR1                   by=0,bit=0,n=72
         4 011712   000436 000110 0                  BDSC    DOUBLE                   by=0,bit=0,n=72

     2654     8223    3           CALL XPN_7RTOLS( DOUBLE /* fld to convert*/,

   8223  4 011713   000347 630400 5                  EPPR0   231
         4 011714   000324 631400 5                  EPPR1   212
         4 011715   000000 701000 xent               TSX1    XPN_7RTOLS
         4 011716   000000 011000                    NOP     0

     2655     8224    3              ASCII_NUM /*Target for signif digits*/,
     2656     8225    3              MAX_DIGITS /*21 for dbl prec*/,
     2657     8226    3              AN_DIGITS /* num digits returned */,
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:396  
     2658     8227    3              AN_POWER_10 /* exponent value */);
     2659     8228         /* Edit result of call in to a display format "1.234567E+150" */
     2660     8229    3           CALL XPN_7ELJE(IT_HDR.DATA /* Target field */,

   8229  4 011717   000336 630400 5                  EPPR0   222
         4 011720   000332 631400 5                  EPPR1   218
         4 011721   000000 701000 xent               TSX1    XPN_7ELJE
         4 011722   000000 011000                    NOP     0

     2661     8230    3              LENGTHC(IT_HDR.DATA),
     2662     8231    3              ASCII_NUM /* strng of sig digits */,
     2663     8232    3              AN_DIGITS /* Num of sigf digits */,
     2664     8233    3              AN_POWER_10 /* Exponent value */,
     2665     8234    3              2 /*Plus sign flag = sign at left*/,
     2666     8235    3              RESULT_LEN /* size of result */,
     2667     8236    3              -2 /* special format of exp digits*/,
     2668     8237    3              1 /*1 digit to left of decml pnt*/);
     2669     8238         /* Blank out unused part of target string */
     2670     8239    3           TEMP$ = ADDR(IT_HDR.DATA);

   8239  4 011723   000312 236000 5                  LDQ     202
         4 011724   000433 756000 0                  STQ     TEMP$

     2671     8240    3           TEMP$ = PINCRC(TEMP$,RESULT_LEN);

   8240  4 011725   000463 236000 0                  LDQ     RESULT_LEN
         4 011726   000020 736000                    QLS     16
         4 011727   000433 036000 0                  ADLQ    TEMP$
         4 011730   000433 756000 0                  STQ     TEMP$

     2672     8241    3           T_ITEM_LN = 50 - RESULT_LEN;

   8241  4 011731   000062 235007                    LDA     50,DL
         4 011732   000463 135000 0                  SBLA    RESULT_LEN
         4 011733   000431 755000 0                  STA     T_ITEM_LN

     2673     8242    3           TEMP$ -> ALPH_ITEM = ' ';
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:397  

   8242  4 011734   000433 470400 0                  LDP0    TEMP$
         4 011735   000000 620005                    EAX0    0,AL
         4 011736   040140 100400                    MLR     fill='040'O
         4 011737   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 011740   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 011741   012026 710000 4                  TRA     s:8257

     2674     8243
     2675     8244    3       CASE(19);

     2676     8245    3           ITEM.TYPE = 'CHAR VARY';

   8245  4 011742   040000 100400                    MLR     fill='040'O
         4 011743   000301 000011 3                  ADSC9   CHAR_SET+193             cn=0,n=9
         4 011744   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2677     8246    3           EIS$ = ITEM$; /* EIS desc gives addr to another EIS desc */

   8246  4 011745   000375 756000 0                  STQ     EIS$

     2678     8247    3           ITEM$ = PINCRW(REC$,ADSC9.EISADDR);

   8247  4 011746   000375 470400 0                  LDP0    EIS$
         4 011747   003100 061500                    CSR     bolr='003'O
         4 011750   000000 030017                    BDSC    0,,PR0                   by=0,bit=3,n=15
         4 011751   206236 000022                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=18
         4 011752   206236 220100                    LDX0    EXPO+5,,AUTO
         4 011753   000000 636010                    EAQ     0,X0
         4 011754   000000 036000 xsym               ADLQ    REC$
         4 011755   000411 756000 0                  STQ     ITEM$

     2679     8248    3           ITEM$ = PINCRC(ITEM$,ADSC9.BYT_OFF/2);

   8248  4 011756   003100 061500                    CSR     bolr='003'O
         4 011757   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         4 011760   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:398  
         4 011761   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011762   000001 772000                    QRL     1
         4 011763   000020 736000                    QLS     16
         4 011764   000411 036000 0                  ADLQ    ITEM$
         4 011765   000411 756000 0                  STQ     ITEM$

     2680     8249    3           CALL BINCHAR(ITEM.SZ,ADSC9.SIZE);

   8249  4 011766   003100 061500                    CSR     bolr='003'O
         4 011767   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 011770   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 011771   206236 236100                    LDQ     EXPO+5,,AUTO
         4 011772   000000 235003                    LDA     0,DU
         4 011773   206240 757100                    STAQ    EXPO+7,,AUTO
         4 011774   000000 301500                    BTD
         4 011775   206240 000010                    NDSC9   EXPO+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 011776   000175 430003 0                  NDSC9   ITEM+8                   cn=2,s=nosgn,sf=0,n=3

     2681     8250    3           CALL ZERO_SUP(ITEM.SZ,3,'1'B);

   8250  4 011777   000315 630400 5                  EPPR0   205
         4 012000   000075 631400 5                  EPPR1   61
         4 012001   000000 701000 xent               TSX1    ZERO_SUP
         4 012002   000000 011000                    NOP     0

     2682     8251    3           IT_HDR.DATA = SUBSTR(ITEM$->CHAR50,0,ADSC9.SIZE);

   8251  4 012003   000375 470400 0                  LDP0    EIS$
         4 012004   003100 061500                    CSR     bolr='003'O
         4 012005   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 012006   206236 000022                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=18
         4 012007   206236 220100                    LDX0    EXPO+5,,AUTO
         4 012010   000411 471400 0                  LDP1    ITEM$
         4 012011   040000 100540                    MLR     fill='040'O
         4 012012   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 012013   000224 000062 0                  ADSC9   IT_HDR+6                 cn=0,n=50

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:399  
     2683     8252    3           ITEM_LN = ADSC9.SIZE;

   8252  4 012014   003000 061500                    CSR     bolr='003'O
         4 012015   000000 460014                    BDSC    0,,PR0                   by=2,bit=6,n=12
         4 012016   000412 000044 0                  BDSC    ITEM_LN                  by=0,bit=0,n=36
         4 012017   012026 710000 4                  TRA     s:8257

     2684     8253    3       CASE(ELSE);

     2685     8254    3           ITEM.TYPE ='UNKN TYPE';

   8254  4 012020   040000 100400                    MLR     fill='040'O
         4 012021   000304 000011 3                  ADSC9   CHAR_SET+196             cn=0,n=9
         4 012022   000173 000011 0                  ADSC9   ITEM+6                   cn=0,n=9

     2686     8255    3           ITEM.SZ = ' ';

   8255  4 012023   040000 100400                    MLR     fill='040'O
         4 012024   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 012025   000175 400003 0                  ADSC9   ITEM+8                   cn=2,n=3

     2687     8256    3           END;

     2688     8257    2       IF ADDR(REC_HDR.REC_NM)->CHAR7='*PA_REC' THEN RETURN;

   8257  4 012026   040000 106400                    CMPC    fill='040'O
         4 012027   000067 200007 0                  ADSC9   REC_HDR                  cn=1,n=7
         4 012030   000166 000007 3                  ADSC9   CHAR_SET+118             cn=0,n=7
         4 012031   012034 601000 4                  TNZ     s:8258

   8257  4 012032   200102 221300                    LDX1  ! FR_SAVE+37,,AUTO
         4 012033   000001 702211                    TSX2  ! 1,X1

     2689     8258    2   /**/ BUFSF = VECTOR(ITEM);

   8258  4 012034   000354 237000 5                  LDAQ    236
         4 012035   000000 755000 xsym               STA     BUFSF
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:400  
         4 012036   000001 756000 xsym               STQ     BUFSF+1

     2690     8259    2   /**/ BUFLNSF = LENGTHC(ITEM);

   8259  4 012037   000143 235007                    LDA     99,DL
         4 012040   000000 755000 xsym               STA     BUFLNSF

     2691     8260    2       CALL WRITE_LINE;

   8260  4 012041   005466 701000 4                  TSX1    WRITE_LINE
         4 012042   000000 011000                    NOP     0

     2692     8261    2   /**/ BUFSF = VECTOR(IT_HDR);

   8261  4 012043   000356 237000 5                  LDAQ    238
         4 012044   000000 755000 xsym               STA     BUFSF
         4 012045   000001 756000 xsym               STQ     BUFSF+1

     2693     8262    2   /**/ BUFLNSF = 74;

   8262  4 012046   000112 235007                    LDA     74,DL
         4 012047   000000 755000 xsym               STA     BUFLNSF

     2694     8263    2       CALL WRITE_LINE;

   8263  4 012050   005466 701000 4                  TSX1    WRITE_LINE
         4 012051   000000 011000                    NOP     0

     2695     8264    2       T_ITEM_LN=ITEM_LN;

   8264  4 012052   000412 235000 0                  LDA     ITEM_LN
         4 012053   000431 755000 0                  STA     T_ITEM_LN

     2696     8265    2       IF UWA.FR_REC.FTYP = 5 OR UWA.FR_REC.FTYP = 19 THEN

   8265  4 012054   000334 236000 xsym               LDQ     UWA+220
         4 012055   000005 116007                    CMPQ    5,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:401  
         4 012056   012061 600000 4                  TZE     s:8266
         4 012057   000023 116007                    CMPQ    19,DL
         4 012060   012113 601000 4                  TNZ     s:8276

     2697     8266    3       DO WHILE (T_ITEM_LN > 50); /* Handle character overflow */

   8266  4 012061   000062 115007                    CMPA    50,DL
         4 012062   012146 604400 4                  TMOZ    s:8287

     2698     8267    3           T_ITEM_LN =T_ITEM_LN - 50;

   8267  4 012063   000062 336007                    LCQ     50,DL
         4 012064   000431 056000 0                  ASQ     T_ITEM_LN

     2699     8268    3           EX_ITDATA.DATA = '  ';

   8268  4 012065   040000 100400                    MLR     fill='040'O
         4 012066   000051 000002 3                  ADSC9   CHAR_SET+41              cn=0,n=2
         4 012067   000247 000062 0                  ADSC9   EX_ITDATA+6              cn=0,n=50

     2700     8269    3           ITEM$ = PINCRC(ITEM$,50);

   8269  4 012070   000411 236000 0                  LDQ     ITEM$
         4 012071   000360 036000 5                  ADLQ    240
         4 012072   000411 756000 0                  STQ     ITEM$

     2701     8270    3           EX_ITDATA.DATA=ITEM$->ALPH_ITEM;

   8270  4 012073   000411 470400 0                  LDP0    ITEM$
         4 012074   000431 720000 0                  LXL0    T_ITEM_LN
         4 012075   040000 100540                    MLR     fill='040'O
         4 012076   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         4 012077   000247 000062 0                  ADSC9   EX_ITDATA+6              cn=0,n=50

     2702     8271    3    /**/   BUFSF = VECTOR(EX_ITDATA);

   8271  4 012100   000362 237000 5                  LDAQ    242
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:402  
         4 012101   000000 755000 xsym               STA     BUFSF
         4 012102   000001 756000 xsym               STQ     BUFSF+1

     2703     8272    3   /**/    BUFLNSF = 74;

   8272  4 012103   000112 235007                    LDA     74,DL
         4 012104   000000 755000 xsym               STA     BUFLNSF

     2704     8273    3           CALL WRITE_LINE;

   8273  4 012105   005466 701000 4                  TSX1    WRITE_LINE
         4 012106   000000 011000                    NOP     0

     2705     8274    3           END;

   8274  4 012107   000431 235000 0                  LDA     T_ITEM_LN
         4 012110   000062 115007                    CMPA    50,DL
         4 012111   012063 605400 4                  TPNZ    s:8267
         4 012112   012146 710000 4                  TRA     s:8287

     2706     8275    2       ELSE
     2707     8276    2           IF UWA.FR_REC.FTYP = 9 THEN /*Handle additional data */

   8276  4 012113   000011 116007                    CMPQ    9,DL
         4 012114   012146 601000 4                  TNZ     s:8287

     2708     8277    3           DO WHILE (ITEM_LN > 0);

   8277  4 012115   000000 115003                    CMPA    0,DU
         4 012116   012146 604400 4                  TMOZ    s:8287

     2709     8278    3               EX_ITDATA.DATA = ' ';

   8278  4 012117   040000 100400                    MLR     fill='040'O
         4 012120   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 012121   000247 000062 0                  ADSC9   EX_ITDATA+6              cn=0,n=50

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:403  
     2710     8279    3               T_ITEM_LN = ITEM_LN;

   8279  4 012122   000412 235000 0                  LDA     ITEM_LN
         4 012123   000431 755000 0                  STA     T_ITEM_LN

     2711     8280    3               CALL OCTAL_PRINT(EX_ITDATA.DATA,ITEM$,T_ITEM_LN);

   8280  4 012124   000320 237000 5                  LDAQ    208
         4 012125   200106 757100                    STAQ    @PTR_LOC,,AUTO
         4 012126   000361 236000 5                  LDQ     241
         4 012127   200105 756100                    STQ     @PTR_SIZE,,AUTO
         4 012130   012340 701000 4                  TSX1    OCTAL_PRINT
         4 012131   000000 011000                    NOP     0

     2712     8281    3               ITEM_LN = ITEM_LN - T_ITEM_LN;

   8281  4 012132   000412 236000 0                  LDQ     ITEM_LN
         4 012133   000431 136000 0                  SBLQ    T_ITEM_LN
         4 012134   000412 756000 0                  STQ     ITEM_LN

     2713     8282         /* T_ITEM_LN returns number of bytes printed*/
     2714     8283    3    /**/       BUFSF = VECTOR(EX_ITDATA);

   8283  4 012135   000362 237000 5                  LDAQ    242
         4 012136   000000 755000 xsym               STA     BUFSF
         4 012137   000001 756000 xsym               STQ     BUFSF+1

     2715     8284    3   /**/        BUFLNSF = 74;

   8284  4 012140   000112 235007                    LDA     74,DL
         4 012141   000000 755000 xsym               STA     BUFLNSF

     2716     8285    3               CALL WRITE_LINE;

   8285  4 012142   005466 701000 4                  TSX1    WRITE_LINE
         4 012143   000000 011000                    NOP     0

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:404  
     2717     8286    3               END;

   8286  4 012144   000412 235000 0                  LDA     ITEM_LN
         4 012145   012117 605400 4                  TPNZ    s:8278

     2718     8287    2       RETURN;

   8287  4 012146   200102 221300                    LDX1  ! FR_SAVE+37,,AUTO
         4 012147   000001 702211                    TSX2  ! 1,X1

     2719     8288        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:405  
     2720     8289        /*******************************************************************/
     2721     8290        /*         UNPACK  THE  PACKED  DECIMAL  NUMBERS                   */
     2722     8291        /*******************************************************************/
     2723     8292    2   UNPAK: PROC(STRING,PTR$,SIZE,SIGNED);

   8292  4 012150   200104 741300       UNPAK        STX1  ! FR_SAVE+39,,AUTO

     2724     8293    3   DCL I UBIN(9) ALIGNED;
     2725     8294    3   DCL 1 CNT_FLG UBIN(9) UNAL;
     2726     8295    3   DCL 1 INCR REDEF CNT_FLG,
     2727     8296    3         2 * BIT(8),
     2728     8297    3         2 FLAG BIT(1);
     2729     8298    3   DCL SIZEA UBIN(18) UNAL;
     2730     8299    3   DCL 1 NUM STATIC,
     2731     8300    3         2 * BIT(5) INIT('00011'B) UNAL,
     2732     8301    3         2 DISPLY BIT(4) UNAL;
     2733     8302    3   DCL 1 CHAR1 REDEF NUM CHAR(1);
     2734     8303    3   DCL SIZE BIT(6);
     2735     8304    3   DCL STRING CHAR(50);
     2736     8305    3   DCL DIGIT BIT(4) BASED(PTR$);
     2737     8306    3   DCL SIGNED BIT(1);
     2738     8307    3   DCL PTR$ PTR;
     2739     8308        /*
     2740     8309           INCR.FLAG is a flag set such that when on will cause the
     2741     8310           skipping of pointer PTR$ over the first bit on byte boundry.
     2742     8311        */
     2743     8312    4       DO CASE(ADSC9.BYT_OFF); /* WE HAVE ALREADY INCRIMENTED POINTER BY

   8312  4 012151   000375 470400 0                  LDP0    EIS$
         4 012152   003100 061500                    CSR     bolr='003'O
         4 012153   000000 400003                    BDSC    0,,PR0                   by=2,bit=0,n=3
         4 012154   206236 000022                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=18
         4 012155   206236 220100                    LDX0    EXPO+5,,AUTO
         4 012156   000010 100003                    CMPX0   8,DU
         4 012157   012161 602010 4                  TNC     s:8312+8,X0
         4 012160   012201 710000 4                  TRA     s:8318
         4 012161   012201 710000 4                  TRA     s:8318
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:406  
         4 012162   012171 710000 4                  TRA     s:8315
         4 012163   012201 710000 4                  TRA     s:8318
         4 012164   012171 710000 4                  TRA     s:8315
         4 012165   012201 710000 4                  TRA     s:8318
         4 012166   012171 710000 4                  TRA     s:8315
         4 012167   012201 710000 4                  TRA     s:8318
         4 012170   012171 710000 4                  TRA     s:8315

     2744     8313         NUM OF CHARS - NOW INCR BY BITS */
     2745     8314    4       CASE(1,3,5,7);

     2746     8315    4           PTR$ = PINCRB(PTR$,5); /* LOOK AT 2ND HALF OF BYTE */

   8315  4 012171   200106 471500                    LDP1    @PTR$,,AUTO
         4 012172   100000 473500                    LDP3    0,,PR1
         4 012173   000005 222003                    LDX2    5,DU
         4 012174   300000 503512                    ABD     0,X2,PR3
         4 012175   100000 453500                    STP3    0,,PR1

     2747     8316    4           CNT_FLG = 1;

   8316  4 012176   001000 236003                    LDQ     512,DU
         4 012177   200112 552140                    STBQ    CNT_FLG,'40'O,AUTO
         4 012200   012210 710000 4                  TRA     s:8324

     2748     8317    4       CASE(ELSE); /*  LOOK AT 1ST HALF OF BYTE */

     2749     8318    4           PTR$ = PINCRB(PTR$,1);

   8318  4 012201   200106 471500                    LDP1    @PTR$,,AUTO
         4 012202   100000 473500                    LDP3    0,,PR1
         4 012203   000001 222003                    LDX2    1,DU
         4 012204   300000 503512                    ABD     0,X2,PR3
         4 012205   100000 453500                    STP3    0,,PR1

     2750     8319    4           CNT_FLG = 0;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:407  
   8319  4 012206   000000 236003                    LDQ     0,DU
         4 012207   200112 552140                    STBQ    CNT_FLG,'40'O,AUTO

     2751     8320    4           END;

     2752     8321        /*
     2753     8322           PTR$ and INCR.FLAG are now initialized.
     2754     8323        */
     2755     8324    3       STRING = ' ';

   8324  4 012210   200105 474500                    LDP4    @STRING,,AUTO
         4 012211   040100 100400                    MLR     fill='040'O
         4 012212   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 012213   400000 000062                    ADSC9   0,,PR4                   cn=0,n=50

     2756     8325    3       SIZEA = BITBIN(SIZE);

   8325  4 012214   200107 473500                    LDP3    @SIZE,,AUTO
         4 012215   003100 061500                    CSR     bolr='003'O
         4 012216   300000 000006                    BDSC    0,,PR3                   by=0,bit=0,n=6
         4 012217   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
         4 012220   206236 236100                    LDQ     EXPO+5,,AUTO
         4 012221   000000 620006                    EAX0    0,QL
         4 012222   200113 740100                    STX0    SIZEA,,AUTO

     2757     8326    4       DO I = 0 TO SIZEA-1;

   8326  4 012223   200111 450100                    STZ     I,,AUTO
         4 012224   012261 710000 4                  TRA     s:8334+3

     2758     8327    4           NUM.DISPLY = PTR$->DIGIT;

   8327  4 012225   200106 470500                    LDP0    @PTR$,,AUTO
         4 012226   000000 471500                    LDP1    0,,PR0
         4 012227   003000 060500                    CSL     bolr='003'O
         4 012230   100000 000004                    BDSC    0,,PR1                   by=0,bit=0,n=4
         4 012231   003060 050004 0                  BDSC    NUM                      by=0,bit=5,n=4
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:408  

     2759     8328    4           CALL INSERT(STRING,I,1,CHAR1);

   8328  4 012232   200111 236100                    LDQ     I,,AUTO
         4 012233   000033 772000                    QRL     27
         4 012234   200105 473500                    LDP3    @STRING,,AUTO
         4 012235   040106 100400                    MLR     fill='040'O
         4 012236   003060 000001 0                  ADSC9   NUM                      cn=0,n=1
         4 012237   300000 000001                    ADSC9   0,Q,PR3                  cn=0,n=1

     2760     8329    4           IF INCR.FLAG THEN

   8329  4 012240   200112 430100                    FSZN    CNT_FLG,,AUTO
         4 012241   012247 605000 4                  TPL     s:8332

     2761     8330    4               PTR$ = PINCRB(PTR$,5);

   8330  4 012242   000000 471500                    LDP1    0,,PR0
         4 012243   000005 220003                    LDX0    5,DU
         4 012244   100000 503510                    ABD     0,X0,PR1
         4 012245   000000 451500                    STP1    0,,PR0
         4 012246   012253 710000 4                  TRA     s:8333

     2762     8331    4           ELSE
     2763     8332    4               PTR$ = PINCRB(PTR$,4);

   8332  4 012247   000000 471500                    LDP1    0,,PR0
         4 012250   000004 220003                    LDX0    4,DU
         4 012251   100000 503510                    ABD     0,X0,PR1
         4 012252   000000 451500                    STP1    0,,PR0

     2764     8333    4           CNT_FLG = CNT_FLG + 1;

   8333  4 012253   200112 236100                    LDQ     CNT_FLG,,AUTO
         4 012254   001000 036003                    ADLQ    512,DU
         4 012255   200112 552140                    STBQ    CNT_FLG,'40'O,AUTO

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:409  
     2765     8334    4           END;

   8334  4 012256   200111 236100                    LDQ     I,,AUTO
         4 012257   001000 036003                    ADLQ    512,DU
         4 012260   200111 552140                    STBQ    I,'40'O,AUTO
         4 012261   200113 235100                    LDA     SIZEA,,AUTO
         4 012262   000022 771000                    ARL     18
         4 012263   206236 755100                    STA     EXPO+5,,AUTO
         4 012264   200111 236100                    LDQ     I,,AUTO
         4 012265   000033 772000                    QRL     27
         4 012266   206236 116100                    CMPQ    EXPO+5,,AUTO
         4 012267   012225 604000 4                  TMI     s:8327

     2766     8335    3       IF SIGNED THEN

   8335  4 012270   200110 470500                    LDP0    @SIGNED,,AUTO
         4 012271   000000 066500                    CMPB    filb='0'B
         4 012272   000000 000001                    BDSC    0,,PR0                   by=0,bit=0,n=1
         4 012273   000000 000022 5                  BDSC    0                        by=0,bit=0,n=18
         4 012274   012336 600000 4                  TZE     s:8347

     2767     8336    4       DO;

     2768     8337    4           IF INCR.FLAG THEN

   8337  4 012275   200112 430100                    FSZN    CNT_FLG,,AUTO
         4 012276   012305 605000 4                  TPL     s:8340

     2769     8338    4               PTR$ = PINCRB(PTR$,-4);

   8338  4 012277   200106 471500                    LDP1    @PTR$,,AUTO
         4 012300   100000 473500                    LDP3    0,,PR1
         4 012301   000004 220003                    LDX0    4,DU
         4 012302   300000 523510                    SBD     0,X0,PR3
         4 012303   100000 453500                    STP3    0,,PR1
         4 012304   012312 710000 4                  TRA     s:8341

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:410  
     2770     8339    4           ELSE
     2771     8340    4               PTR$ = PINCRB(PTR$,-5); /* Back up to sign */

   8340  4 012305   200106 471500                    LDP1    @PTR$,,AUTO
         4 012306   100000 473500                    LDP3    0,,PR1
         4 012307   000005 220003                    LDX0    5,DU
         4 012310   300000 523510                    SBD     0,X0,PR3
         4 012311   100000 453500                    STP3    0,,PR1

     2772     8341    4           I = I-1;

   8341  4 012312   200111 236100                    LDQ     I,,AUTO
         4 012313   777000 036003                    ADLQ    -512,DU
         4 012314   200111 552140                    STBQ    I,'40'O,AUTO

     2773     8342    4           IF PTR$->DIGIT = '1101'B THEN

   8342  4 012315   000000 066500                    CMPB    filb='0'B
         4 012316   300000 000004                    BDSC    0,,PR3                   by=0,bit=0,n=4
         4 012317   000364 000022 5                  BDSC    244                      by=0,bit=0,n=18
         4 012320   012330 601000 4                  TNZ     s:8345

     2774     8343    4               CALL INSERT(STRING,I,1,'-');

   8343  4 012321   200111 236100                    LDQ     I,,AUTO
         4 012322   000033 772000                    QRL     27
         4 012323   200105 474500                    LDP4    @STRING,,AUTO
         4 012324   040106 100400                    MLR     fill='040'O
         4 012325   000057 000001 5                  ADSC9   47                       cn=0,n=1
         4 012326   400000 000001                    ADSC9   0,Q,PR4                  cn=0,n=1
         4 012327   012336 710000 4                  TRA     s:8347

     2775     8344    4           ELSE
     2776     8345    4               CALL INSERT(STRING,I,1,'+');

   8345  4 012330   200111 236100                    LDQ     I,,AUTO
         4 012331   000033 772000                    QRL     27
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:411  
         4 012332   200105 474500                    LDP4    @STRING,,AUTO
         4 012333   040106 100400                    MLR     fill='040'O
         4 012334   000060 000001 5                  ADSC9   48                       cn=0,n=1
         4 012335   400000 000001                    ADSC9   0,Q,PR4                  cn=0,n=1

     2777     8346    4           END;

     2778     8347    3       RETURN;

   8347  4 012336   200104 221300                    LDX1  ! FR_SAVE+39,,AUTO
         4 012337   000001 702211                    TSX2  ! 1,X1

     2779     8348    3   END UNPAK;
     2780     8349
     2781     8350
     2782     8351    2   END IT_OUTPUT;
     2783     8352        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:412  
     2784     8353        /********************************************************************/
     2785     8354        /*      O C T A L      D U M P I N G     R O U T I N E             */
     2786     8355        /*******************************************************************/
     2787     8356    1   OCTAL_PRINT: PROC(STRING,PTR$,COUNT);

   8356  4 012340   200104 741300       OCTAL_PRINT  STX1  ! FR_SAVE+39,,AUTO

     2788     8357    2   DCL STRING (0:35) CHAR(1);
     2789     8358    2   DCL COUNT UBIN(36);
     2790     8359    2   DCL PTR$ PTR;
     2791     8360    2   DCL CHAR_SET (0:7) CHAR(1) CONSTANT
     2792     8361    2    INIT('0','1','2','3','4','5','6','7');
     2793     8362    2   DCL NIBBLE UBIN(3) UNAL BASED (PTR$);
     2794     8363    2   DCL CHAR1 CHAR(1) BASED (PTR$);
     2795     8364    2   DCL CNT UBIN(9) UNAL;
     2796     8365    2   DCL I UBIN(9) UNAL;
     2797     8366        /*
     2798     8367              This procedure will start at location pointed to by PTR$ and
     2799     8368              go from 1 to count (up to 8) bytes producing an octal string
     2800     8369              representation which will be placed into 'STRING'. STRING
     2801     8370              must be at least 36 bytes long.
     2802     8371        */
     2803     8372    2       IF COUNT > 8 THEN COUNT = 8;

   8372  4 012341   200107 470500                    LDP0    @COUNT,,AUTO
         4 012342   000000 235100                    LDA     0,,PR0
         4 012343   000011 115007                    CMPA    9,DL
         4 012344   012347 602000 4                  TNC     s:8373

   8372  4 012345   000010 236007                    LDQ     8,DL
         4 012346   000000 756100                    STQ     0,,PR0

     2804     8373    2       I=0;

   8373  4 012347   200111 450100                    STZ     I,,AUTO

     2805     8374    3       DO CNT = 1 TO COUNT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:413  

   8374  4 012350   001000 236003                    LDQ     512,DU
         4 012351   200110 756100                    STQ     CNT,,AUTO
         4 012352   012425 710000 4                  TRA     s:8386+3

     2806     8375    3           IF MOD(CNT-1,2) = 0 AND CNT > 1 THEN

   8375  4 012353   200110 236100                    LDQ     CNT,,AUTO
         4 012354   000033 772000                    QRL     27
         4 012355   000001 136007                    SBLQ    1,DL
         4 012356   000002 506007                    DIV     2,DL
         4 012357   000044 733000                    LRS     36
         4 012360   000000 116003                    CMPQ    0,DU
         4 012361   012420 601000 4                  TNZ     s:8385
         4 012362   200110 236100                    LDQ     CNT,,AUTO
         4 012363   777000 376003                    ANQ     -512,DU
         4 012364   002000 116003                    CMPQ    1024,DU
         4 012365   012420 602000 4                  TNC     s:8385

     2807     8376    3               IF MOD(CNT-1,4) = 0 THEN

   8376  4 012366   200110 236100                    LDQ     CNT,,AUTO
         4 012367   000033 772000                    QRL     27
         4 012370   000001 136007                    SBLQ    1,DL
         4 012371   000004 506007                    DIV     4,DL
         4 012372   000044 733000                    LRS     36
         4 012373   000000 116003                    CMPQ    0,DU
         4 012374   012407 601000 4                  TNZ     s:8382

     2808     8377    4               DO;

     2809     8378    4                   STRING(I) = ' ';

   8378  4 012375   200111 236100                    LDQ     I,,AUTO
         4 012376   000033 772000                    QRL     27
         4 012377   200105 470500                    LDP0    @STRING,,AUTO
         4 012400   040106 100400                    MLR     fill='040'O
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:414  
         4 012401   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 012402   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

     2810     8379    4                   I=I+1;

   8379  4 012403   200111 236100                    LDQ     I,,AUTO
         4 012404   001000 036003                    ADLQ    512,DU
         4 012405   200111 552140                    STBQ    I,'40'O,AUTO

     2811     8380    4                   END;

   8380  4 012406   012420 710000 4                  TRA     s:8385

     2812     8381    4               ELSE DO;

     2813     8382    4                   STRING(I) = '.';

   8382  4 012407   200111 236100                    LDQ     I,,AUTO
         4 012410   000033 772000                    QRL     27
         4 012411   200105 470500                    LDP0    @STRING,,AUTO
         4 012412   040106 100400                    MLR     fill='040'O
         4 012413   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 012414   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

     2814     8383    4                   I=I+1;

   8383  4 012415   200111 236100                    LDQ     I,,AUTO
         4 012416   001000 036003                    ADLQ    512,DU
         4 012417   200111 552140                    STBQ    I,'40'O,AUTO

     2815     8384    4                   END;

     2816     8385    3           CALL PROCESS_BYTE;

   8385  4 012420   012435 701000 4                  TSX1    PROCESS_BYTE
         4 012421   000000 011000                    NOP     0

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:415  
     2817     8386    3           END;

   8386  4 012422   200110 236100                    LDQ     CNT,,AUTO
         4 012423   001000 036003                    ADLQ    512,DU
         4 012424   200110 552140                    STBQ    CNT,'40'O,AUTO
         4 012425   200107 470500                    LDP0    @COUNT,,AUTO
         4 012426   200110 236100                    LDQ     CNT,,AUTO
         4 012427   000033 772000                    QRL     27
         4 012430   000000 116100                    CMPQ    0,,PR0
         4 012431   012353 602000 4                  TNC     s:8375
         4 012432   012353 600000 4                  TZE     s:8375

     2818     8387    2       RETURN;

   8387  4 012433   200104 221300                    LDX1  ! FR_SAVE+39,,AUTO
         4 012434   000001 702211                    TSX2  ! 1,X1

     2819     8388    2   PROCESS_BYTE: PROC;

   8388  4 012435   200112 741300       PROCESS_BYTE STX1  ! CNT_FLG,,AUTO

     2820     8389    3       IF CHAR1 >= ' ' AND CHAR1 <= '~' THEN

   8389  4 012436   200106 470500                    LDP0    @PTR$,,AUTO
         4 012437   000000 471500                    LDP1    0,,PR0
         4 012440   040000 106500                    CMPC    fill='040'O
         4 012441   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         4 012442   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 012443   012457 602000 4                  TNC     s:8392
         4 012444   040100 106400                    CMPC    fill='040'O
         4 012445   000365 000001 5                  ADSC9   245                      cn=0,n=1
         4 012446   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         4 012447   012457 602000 4                  TNC     s:8392

     2821     8390    3           STRING(27+CNT) = CHAR1;

   8390  4 012450   200110 236100                    LDQ     CNT,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:416  
         4 012451   000033 772000                    QRL     27
         4 012452   200105 473500                    LDP3    @STRING,,AUTO
         4 012453   040106 100500                    MLR     fill='040'O
         4 012454   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1
         4 012455   300006 600001                    ADSC9   6,Q,PR3                  cn=3,n=1
         4 012456   012465 710000 4                  TRA     s:8393

     2822     8391    3       ELSE
     2823     8392    3           STRING(27+CNT) = '.';

   8392  4 012457   200110 236100                    LDQ     CNT,,AUTO
         4 012460   000033 772000                    QRL     27
         4 012461   200105 473500                    LDP3    @STRING,,AUTO
         4 012462   040106 100400                    MLR     fill='040'O
         4 012463   000052 000001 5                  ADSC9   42                       cn=0,n=1
         4 012464   300006 600001                    ADSC9   6,Q,PR3                  cn=3,n=1

     2824     8393    3       X = I+2;

   8393  4 012465   200111 236100                    LDQ     I,,AUTO
         4 012466   000033 772000                    QRL     27
         4 012467   000002 036007                    ADLQ    2,DL
         4 012470   000000 756000 xsym               STQ     X

     2825     8394    4       DO I = I TO X;

   8394  4 012471   012517 710000 4                  TRA     s:8397+3

     2826     8395    4           STRING(I) = CHAR_SET(NIBBLE);

   8395  4 012472   200111 236100                    LDQ     I,,AUTO
         4 012473   000033 772000                    QRL     27
         4 012474   200106 470500                    LDP0    @PTR$,,AUTO
         4 012475   000000 471500                    LDP1    0,,PR0
         4 012476   003100 061500                    CSR     bolr='003'O
         4 012477   100000 000003                    BDSC    0,,PR1                   by=0,bit=0,n=3
         4 012500   206236 000044                    BDSC    EXPO+5,,AUTO             by=0,bit=0,n=36
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:417  
         4 012501   206237 756100                    STQ     EXPO+6,,AUTO
         4 012502   206236 236100                    LDQ     EXPO+5,,AUTO
         4 012503   200105 471500                    LDP1    @STRING,,AUTO
         4 012504   206237 235100                    LDA     EXPO+6,,AUTO
         4 012505   040105 100406                    MLR     fill='040'O
         4 012506   000000 000001 3                  ADSC9   CHAR_SET,Q               cn=0,n=1
         4 012507   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1

     2827     8396    4           PTR$ = PINCRB(PTR$,3); /* incriment to next nibble */

   8396  4 012510   000000 473500                    LDP3    0,,PR0
         4 012511   000003 220003                    LDX0    3,DU
         4 012512   300000 503510                    ABD     0,X0,PR3
         4 012513   000000 453500                    STP3    0,,PR0

     2828     8397    4           END;

   8397  4 012514   200111 236100                    LDQ     I,,AUTO
         4 012515   001000 036003                    ADLQ    512,DU
         4 012516   200111 552140                    STBQ    I,'40'O,AUTO
         4 012517   200111 236100                    LDQ     I,,AUTO
         4 012520   000033 772000                    QRL     27
         4 012521   000000 116000 xsym               CMPQ    X
         4 012522   012472 604400 4                  TMOZ    s:8395

     2829     8398    3       RETURN;

   8398  4 012523   200112 221300                    LDX1  ! CNT_FLG,,AUTO
         4 012524   000001 702211                    TSX2  ! 1,X1

     2830     8399    3   END PROCESS_BYTE;
     2831     8400    2   END OCTAL_PRINT;
     2832     8401        %EJECT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:418  
     2833     8402        /***************************************************************/
     2834     8403        /*                                                             */
     2835     8404        /*           P R O C E S S   I N V E N T O R Y  P A G E        */
     2836     8405        /***************************************************************/
     2837     8406    1   INVPG_PRNT: PROC;

   8406  4 012525   200020 741300       INVPG_PRNT   STX1  ! REC_LEN,,AUTO

     2838     8407    2   DCL 1 INV_HDR STATIC ALIGNED,
     2839     8408    2         2 CAR_CON BIT(9) INIT('101'O) UNAL,
     2840     8409    2         2 * CHAR(11) INIT('DATE STAMP=') UNAL,
     2841     8410    2         2 DTSP CHAR(8) UNAL,
     2842     8411    2         2 * CHAR(10) INIT(' ') UNAL,
     2843     8412    2         2 * CHAR(0) INIT(' TIME STAMP=') UNAL,
     2844     8413    2         2 TMSP UNAL,
     2845     8414    2           3 * CHAR(8) UNAL,
     2846     8415    2           3 SS CHAR(6) UNAL,
     2847     8416    2         2 * CHAR(0) INIT('INITIAL VALUE=') UNAL,
     2848     8417    2         2 INIT_VAL CHAR(4) UNAL;
     2849     8418    2   /**/ DCBSF = DCBNUM(M$LO);

   8418  4 012526   000000 236007 xsym               LDQ     M$LO,DL
         4 012527   000000 620006                    EAX0    0,QL
         4 012530   000000 740000 xsym               STX0    DCBSF

     2850     8419    2       PAGE_HDR.AREA_NAME = ZI$DIR.AREA_NM.NAME.TEXT;

   8419  4 012531   040000 100400                    MLR     fill='040'O
         4 012532   000234 200023 xsym               ADSC9   ZI$DIR+156               cn=1,n=19
         4 012533   000005 600023 0                  ADSC9   PAGE_HDR+2               cn=3,n=19

     2851     8420    2       CALL BINCHAR(PAGE_HDR.PGNO,INV_PG.CI_NO);

   8420  4 012534   000000 470400 xsym               LDP0    INVPG$
         4 012535   000004 235100                    LDA     4,,PR0
         4 012536   000044 773000                    LRL     36
         4 012537   206236 757100                    STAQ    EXPO+5,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:419  
         4 012540   000000 301500                    BTD
         4 012541   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 012542   000015 630013 0                  NDSC9   PAGE_HDR+10              cn=3,s=nosgn,sf=0,n=11

     2852     8421    2       CALL ZERO_SUP(PAGE_HDR.PGNO,LENGTHC(PAGE_HDR.PGNO),'1'B);

   8421  4 012543   000147 630400 5                  EPPR0   103
         4 012544   000075 631400 5                  EPPR1   61
         4 012545   000000 701000 xent               TSX1    ZERO_SUP
         4 012546   000000 011000                    NOP     0

     2853     8422    2       PAGE_HDR.SP_AV='0';

   8422  4 012547   000366 236000 5                  LDQ     246
         4 012550   000024 756000 0                  STQ     PAGE_HDR+17

     2854     8423    2   /**/ BUFSF = VECTOR(PAGE_HDR);

   8423  4 012551   000160 237000 5                  LDAQ    112
         4 012552   000000 755000 xsym               STA     BUFSF
         4 012553   000001 756000 xsym               STQ     BUFSF+1

     2855     8424    2   /**/ BUFLNSF = 71;

   8424  4 012554   000107 235007                    LDA     71,DL
         4 012555   000000 755000 xsym               STA     BUFLNSF

     2856     8425    2       CALL WRITE_LINE;

   8425  4 012556   005466 701000 4                  TSX1    WRITE_LINE
         4 012557   000000 011000                    NOP     0

     2857     8426    2       DATESF = VECTOR(INV_HDR.DTSP);

   8426  4 012560   000370 237000 5                  LDAQ    248
         4 012561   000000 755000 xsym               STA     DATESF
         4 012562   000001 756000 xsym               STQ     DATESF+1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:420  

     2858     8427    2       TIMESF = VECTOR(INV_HDR.TMSP);

   8427  4 012563   000372 237000 5                  LDAQ    250
         4 012564   000000 755000 xsym               STA     TIMESF
         4 012565   000001 756000 xsym               STQ     TIMESF+1

     2859     8428    2       SOURCESF = %UTS#;

   8428  4 012566   000004 235007                    LDA     4,DL
         4 012567   000000 755000 xsym               STA     SOURCESF

     2860     8429    2       DESTSF = %LOCAL#;

   8429  4 012570   000003 235007                    LDA     3,DL
         4 012571   000000 755000 xsym               STA     DESTSF

     2861     8430    2       TSTAMPSF = VECTOR(INV_PG.SYS_WRDS.DATE);

   8430  4 012572   777640 235007                    LDA     -96,DL
         4 012573   000000 236000 xsym               LDQ     INVPG$
         4 012574   000001 036003                    ADLQ    1,DU
         4 012575   000000 755000 xsym               STA     TSTAMPSF
         4 012576   000001 756000 xsym               STQ     TSTAMPSF+1

     2862     8431    2       CALL SYS_FUNC_TSTAMP;

   8431  4 012577   000000 631400 5                  EPPR1   0
         4 012600   000000 701000 xent               TSX1    SYS_FUNC_TSTAMP
         4 012601   000000 011000                    NOP     0

     2863     8432    2       CALL BINCHAR(INV_HDR.INIT_VAL,511*UWA.AC_REC.INV_UNIT);

   8432  4 012602   000261 236000 xsym               LDQ     UWA+177
         4 012603   000777 402007                    MPY     511,DL
         4 012604   206236 756100                    STQ     EXPO+5,,AUTO
         4 012605   000000 301500                    BTD
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:421  
         4 012606   206236 000004                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=4
         4 012607   003102 430004 0                  NDSC9   INV_HDR+17               cn=2,s=nosgn,sf=0,n=4

     2864     8433    2       CALL ZERO_SUP(INV_HDR.INIT_VAL,4,'1'B);

   8433  4 012610   000374 630400 5                  EPPR0   252
         4 012611   000075 631400 5                  EPPR1   61
         4 012612   000000 701000 xent               TSX1    ZERO_SUP
         4 012613   000000 011000                    NOP     0

     2865     8434    2       INV_HDR.TMSP.SS=' ';

   8434  4 012614   040000 100400                    MLR     fill='040'O
         4 012615   000042 000001 5                  ADSC9   34                       cn=0,n=1
         4 012616   003075 400006 0                  ADSC9   INV_HDR+12               cn=2,n=6

     2866     8435    2       BUFSF = VECTOR(INV_HDR);

   8435  4 012617   000400 237000 5                  LDAQ    256
         4 012620   000000 755000 xsym               STA     BUFSF
         4 012621   000001 756000 xsym               STQ     BUFSF+1

     2867     8436    2       BUFLNSF = LENGTHC(INV_HDR);

   8436  4 012622   000112 235007                    LDA     74,DL
         4 012623   000000 755000 xsym               STA     BUFLNSF

     2868     8437    2       CALL WRITE_LINE; /* 2ND HDR LINE FOR INV PAGES */

   8437  4 012624   005466 701000 4                  TSX1    WRITE_LINE
         4 012625   000000 011000                    NOP     0

     2869     8438    2   /**/ BUFSF = VECTOR(INV_PG_HDR);

   8438  4 012626   000402 237000 5                  LDAQ    258
         4 012627   000000 755000 xsym               STA     BUFSF
         4 012630   000001 756000 xsym               STQ     BUFSF+1
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:422  

     2870     8439    2   /**/ BUFLNSF = 73;

   8439  4 012631   000111 235007                    LDA     73,DL
         4 012632   000000 755000 xsym               STA     BUFLNSF

     2871     8440    2       CALL WRITE_LINE;

   8440  4 012633   005466 701000 4                  TSX1    WRITE_LINE
         4 012634   000000 011000                    NOP     0

     2872     8441
     2873     8442    3       DO X = 0 TO 9;

   8442  4 012635   000000 450000 xsym               STZ     X

     2874     8443    3           INV_P_LINE.P_LINE.FIL(X) = '  ';

   8443  4 012636   000000 236000 xsym               LDQ     X
         4 012637   000006 402007                    MPY     6,DL
         4 012640   040006 100400                    MLR     fill='040'O
         4 012641   000051 000002 3                  ADSC9   CHAR_SET+41              cn=0,n=2
         4 012642   000332 200002 0                  ADSC9   INV_P_LINE+3,Q           cn=1,n=2

     2875     8444    3           INV_P_LINE.P_LINE.PLN(X) = '  ';

   8444  4 012643   040006 100400                    MLR     fill='040'O
         4 012644   000051 000002 3                  ADSC9   CHAR_SET+41              cn=0,n=2
         4 012645   000332 600004 0                  ADSC9   INV_P_LINE+3,Q           cn=3,n=4

     2876     8445    3           END;

   8445  4 012646   000000 054000 xsym               AOS     X
         4 012647   000000 235000 xsym               LDA     X
         4 012650   000011 115007                    CMPA    9,DL
         4 012651   012636 604400 4                  TMOZ    s:8443

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:423  
     2877     8446
     2878     8447    2       INVPGNO = RB - UWA.AC_REC.FIR_INV_PG;

   8447  4 012652   000000 236000 xsym               LDQ     RB
         4 012653   000252 136000 xsym               SBLQ    UWA+170
         4 012654   000424 756000 0                  STQ     INVPGNO

     2879     8448    2       INVTCT = (((INVPGNO*4072)+INVPGNO)/10)*10;

   8448  4 012655   007750 402007                    MPY     4072,DL
         4 012656   000424 036000 0                  ADLQ    INVPGNO
         4 012657   000012 506007                    DIV     10,DL
         4 012660   000012 402007                    MPY     10,DL
         4 012661   000423 756000 0                  STQ     INVTCT

     2880     8449    2       CALL BINCHAR(INV_P_LINE.LNBR,INVTCT);

   8449  4 012662   000000 301400                    BTD
         4 012663   000423 000004 0                  NDSC9   INVTCT                   cn=0,s=lsgnf,sf=0,n=4
         4 012664   000327 230014 0                  NDSC9   INV_P_LINE               cn=1,s=nosgn,sf=0,n=12

     2881     8450    2       CALL ZERO_SUP(INV_P_LINE.LNBR,12,'0'B);

   8450  4 012665   000404 630400 5                  EPPR0   260
         4 012666   000075 631400 5                  EPPR1   61
         4 012667   000000 701000 xent               TSX1    ZERO_SUP
         4 012670   000000 011000                    NOP     0

     2882     8451    2       INV_PRLN.LNBR = INVTCT;

   8451  4 012671   000423 235000 0                  LDA     INVTCT
         4 012672   000306 755000 0                  STA     INV_PRLN

     2883     8452    2       I= (INVPGNO*4072+1) - INVTCT;

   8452  4 012673   000000 236003                    LDQ     0,DU
         4 012674   000424 136000 0                  SBLQ    INVPGNO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:424  
         4 012675   007750 402007                    MPY     4072,DL
         4 012676   000423 036000 0                  ADLQ    INVTCT
         4 012677   000022 676000 5                  ERQ     18
         4 012700   000002 036007                    ADLQ    2,DL
         4 012701   000000 756000 xsym               STQ     I

     2884     8453    2       IF INVTCT + 4072 + I > UWA.AC_REC.FIR_INV_PG-1 THEN

   8453  4 012702   000423 036000 0                  ADLQ    INVTCT
         4 012703   000252 235000 xsym               LDA     UWA+170
         4 012704   000001 135007                    SBLA    1,DL
         4 012705   206236 755100                    STA     EXPO+5,,AUTO
         4 012706   007750 036007                    ADLQ    4072,DL
         4 012707   206236 116100                    CMPQ    EXPO+5,,AUTO
         4 012710   012713 604400 4                  TMOZ    s:8456

     2885     8454    2           K = UWA.AC_REC.FIR_INV_PG-1;

   8454  4 012711   000000 755000 xsym               STA     K
         4 012712   012717 710000 4                  TRA     s:8457

     2886     8455    2       ELSE
     2887     8456    2           K = INVTCT + 4072 + I -1;

   8456  4 012713   000423 236000 0                  LDQ     INVTCT
         4 012714   000000 036000 xsym               ADLQ    I
         4 012715   007747 036007                    ADLQ    4071,DL
         4 012716   000000 756000 xsym               STQ     K

     2888     8457    2       IF K > 9 THEN

   8457  4 012717   000000 236000 xsym               LDQ     K
         4 012720   000011 116007                    CMPQ    9,DL
         4 012721   012725 604400 4                  TMOZ    s:8460

     2889     8458    2           J = 9;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:425  
   8458  4 012722   000011 235007                    LDA     9,DL
         4 012723   000000 755000 xsym               STA     J
         4 012724   012726 710000 4                  TRA     s:8461

     2890     8459    2       ELSE
     2891     8460    2           J = K;

   8460  4 012725   000000 756000 xsym               STQ     J

     2892     8461    2       INVPGNO = 0;

   8461  4 012726   000424 450000 0                  STZ     INVPGNO

     2893     8462    2       CALL GET_LINE;

   8462  4 012727   013013 701000 4                  TSX1    GET_LINE
         4 012730   000000 011000                    NOP     0

     2894     8463    2   /**/ BUFSF = VECTOR(INV_P_LINE);

   8463  4 012731   000410 237000 5                  LDAQ    264
         4 012732   000000 755000 xsym               STA     BUFSF
         4 012733   000001 756000 xsym               STQ     BUFSF+1

     2895     8464    2   /**/ BUFLNSF = 73;

   8464  4 012734   000111 235007                    LDA     73,DL
         4 012735   000000 755000 xsym               STA     BUFLNSF

     2896     8465    2       CALL WRITE_LINE;

   8465  4 012736   005466 701000 4                  TSX1    WRITE_LINE
         4 012737   000000 011000                    NOP     0

     2897     8466    2       INVPGNO = 9 - (((RB - UWA.AC_REC.FIR_INV_PG) *4072 +1) - INVTCT)+1;

   8466  4 012740   000000 236000 xsym               LDQ     RB
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:426  
         4 012741   000252 136000 xsym               SBLQ    UWA+170
         4 012742   000412 402000 5                  MPY     266
         4 012743   000423 036000 0                  ADLQ    INVTCT
         4 012744   000011 036007                    ADLQ    9,DL
         4 012745   000424 756000 0                  STQ     INVPGNO

     2898     8467    2       INVTCT = INVTCT + 10;

   8467  4 012746   000012 236007                    LDQ     10,DL
         4 012747   000423 056000 0                  ASQ     INVTCT

     2899     8468
     2900     8469    3       DO INVTCT = INVTCT TO K BY 10;

   8469  4 012750   013006 710000 4                  TRA     s:8479+2

     2901     8470    3           J = K - INVTCT;

   8470  4 012751   000000 236000 xsym               LDQ     K
         4 012752   000423 136000 0                  SBLQ    INVTCT
         4 012753   000000 756000 xsym               STQ     J

     2902     8471    3           IF J > 9 THEN J = 9;

   8471  4 012754   000011 116007                    CMPQ    9,DL
         4 012755   012760 604400 4                  TMOZ    s:8472

   8471  4 012756   000011 235007                    LDA     9,DL
         4 012757   000000 755000 xsym               STA     J

     2903     8472    3           CALL GET_LINE;

   8472  4 012760   013013 701000 4                  TSX1    GET_LINE
         4 012761   000000 011000                    NOP     0

     2904     8473    3           INVPGNO = INVPGNO +10;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:427  
   8473  4 012762   000012 236007                    LDQ     10,DL
         4 012763   000424 056000 0                  ASQ     INVPGNO

     2905     8474    3           INV_PRLN.LNBR = INV_PRLN.LNBR + 10;

   8474  4 012764   000306 235000 0                  LDA     INV_PRLN
         4 012765   000012 035007                    ADLA    10,DL
         4 012766   000306 755000 0                  STA     INV_PRLN

     2906     8475    3           CALL BINCHAR(INV_P_LINE.LNBR,INV_PRLN.LNBR);

   8475  4 012767   000044 773000                    LRL     36
         4 012770   206236 757100                    STAQ    EXPO+5,,AUTO
         4 012771   000000 301500                    BTD
         4 012772   206236 000010                    NDSC9   EXPO+5,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 012773   000327 230014 0                  NDSC9   INV_P_LINE               cn=1,s=nosgn,sf=0,n=12

     2907     8476    3           CALL ZERO_SUP(INV_P_LINE.LNBR,12,'0'B); /* Right justify */

   8476  4 012774   000404 630400 5                  EPPR0   260
         4 012775   000075 631400 5                  EPPR1   61
         4 012776   000000 701000 xent               TSX1    ZERO_SUP
         4 012777   000000 011000                    NOP     0

     2908     8477    3    /**/   BUFLNSF = 73;

   8477  4 013000   000111 235007                    LDA     73,DL
         4 013001   000000 755000 xsym               STA     BUFLNSF

     2909     8478    3           CALL WRITE_LINE;

   8478  4 013002   005466 701000 4                  TSX1    WRITE_LINE
         4 013003   000000 011000                    NOP     0

     2910     8479    3           END;

   8479  4 013004   000012 236007                    LDQ     10,DL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:428  
         4 013005   000423 056000 0                  ASQ     INVTCT
         4 013006   000423 236000 0                  LDQ     INVTCT
         4 013007   000000 116000 xsym               CMPQ    K
         4 013010   012751 604400 4                  TMOZ    s:8470

     2911     8480    2       RETURN;

   8480  4 013011   200020 221300                    LDX1  ! REC_LEN,,AUTO
         4 013012   000001 702211                    TSX2  ! 1,X1

     2912     8481
     2913     8482    2   GET_LINE: PROC;

   8482  4 013013   200022 741300       GET_LINE     STX1  ! @LAST_LN,,AUTO

     2914     8483         /*
     2915     8484            Extract space information from the inventory page.
     2916     8485         */
     2917     8486    4       DO X = I TO J;

   8486  4 013014   000000 235000 xsym               LDA     I
         4 013015   000000 755000 xsym               STA     X
         4 013016   013062 710000 4                  TRA     s:8491+1

     2918     8487    4           INV_TEMP = BITBIN(INV_PG.INVENT_CT(INVPGNO+X-I));

   8487  4 013017   000424 236000 0                  LDQ     INVPGNO
         4 013020   000000 036000 xsym               ADLQ    X
         4 013021   000000 136000 xsym               SBLQ    I
         4 013022   000000 470400 xsym               LDP0    INVPG$
         4 013023   000100 101506                    MRL     fill='000'O
         4 013024   000006 000001                    ADSC9   6,Q,PR0                  cn=0,n=1
         4 013025   206236 000004                    ADSC9   EXPO+5,,AUTO             cn=0,n=4
         4 013026   206236 236100                    LDQ     EXPO+5,,AUTO
         4 013027   000425 756000 0                  STQ     INV_TEMP

     2919     8488    4           INV_PRLN.P_LINE.PRLN(X) = INV_TEMP*UWA.AC_REC.INV_UNIT;
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:429  

   8488  4 013030   000261 402000 xsym               MPY     UWA+177
         4 013031   000000 720000 xsym               LXL0    X
         4 013032   000307 756010 0                  STQ     INV_PRLN+1,X0

     2920     8489    4           CALL BINCHAR(INV_P_LINE.P_LINE.PLN(X),INV_PRLN.P_LINE.PRLN(X));

   8489  4 013033   000000 236000 xsym               LDQ     X
         4 013034   000006 402007                    MPY     6,DL
         4 013035   000307 235010 0                  LDA     INV_PRLN+1,X0
         4 013036   206236 756100                    STQ     EXPO+5,,AUTO
         4 013037   000044 773000                    LRL     36
         4 013040   206240 757100                    STAQ    EXPO+7,,AUTO
         4 013041   206236 235100                    LDA     EXPO+5,,AUTO
         4 013042   000005 301500                    BTD
         4 013043   206240 000010                    NDSC9   EXPO+7,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         4 013044   000332 630004 0                  NDSC9   INV_P_LINE+3,A           cn=3,s=nosgn,sf=0,n=4

     2921     8490    4           CALL ZERO_SUP(INV_P_LINE.P_LINE.PLN(X),4,'0'B);

   8490  4 013045   000024 236000 5                  LDQ     20
         4 013046   206240 756100                    STQ     EXPO+7,,AUTO
         4 013047   000154 236000 5                  LDQ     108
         4 013050   206237 756100                    STQ     EXPO+6,,AUTO
         4 013051   000000 236000 xsym               LDQ     X
         4 013052   000414 402000 5                  MPY     268
         4 013053   000413 036000 5                  ADLQ    267
         4 013054   206236 756100                    STQ     EXPO+5,,AUTO
         4 013055   206236 630500                    EPPR0   EXPO+5,,AUTO
         4 013056   000075 631400 5                  EPPR1   61
         4 013057   000000 701000 xent               TSX1    ZERO_SUP
         4 013060   000000 011000                    NOP     0

     2922     8491    4           END;

   8491  4 013061   000000 054000 xsym               AOS     X
         4 013062   000000 236000 xsym               LDQ     X
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:430  
         4 013063   000000 116000 xsym               CMPQ    J
         4 013064   013017 604400 4                  TMOZ    s:8487

     2923     8492    3       IF J < 9 THEN

   8492  4 013065   000000 235000 xsym               LDA     J
         4 013066   000011 115007                    CMPA    9,DL
         4 013067   013104 605000 4                  TPL     s:8496

     2924     8493    4       DO X = J+1 TO 9;

   8493  4 013070   000001 035007                    ADLA    1,DL
         4 013071   000000 755000 xsym               STA     X
         4 013072   013101 710000 4                  TRA     s:8495+1

     2925     8494    4           INV_P_LINE.P_LINE.PLN(X) = '  ';

   8494  4 013073   000000 236000 xsym               LDQ     X
         4 013074   000006 402007                    MPY     6,DL
         4 013075   040006 100400                    MLR     fill='040'O
         4 013076   000051 000002 3                  ADSC9   CHAR_SET+41              cn=0,n=2
         4 013077   000332 600004 0                  ADSC9   INV_P_LINE+3,Q           cn=3,n=4

     2926     8495    4           END;

   8495  4 013100   000000 054000 xsym               AOS     X
         4 013101   000000 235000 xsym               LDA     X
         4 013102   000011 115007                    CMPA    9,DL
         4 013103   013073 604400 4                  TMOZ    s:8494

     2927     8496    3       I=0;

   8496  4 013104   000000 450000 xsym               STZ     I

     2928     8497    3       RETURN;

   8497  4 013105   200022 221300                    LDX1  ! @LAST_LN,,AUTO
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:431  
         4 013106   000001 702211                    TSX2  ! 1,X1

     2929     8498    3   END GET_LINE;
     2930     8499    2   END INVPG_PRNT;
     2931     8500        /***************************************************************/
     2932     8501        /*                                                             */
     2933     8502        /***************************************************************/
     2934     8503    1   END_ZIU$Q2PR:
     2935     8504    1       RETURN;

   8504  4 013107   000000 702200 xent  END_ZIU$Q2PR TSX2  ! X66_ARET

     2936     8505    1   ALTEND_ZIU$Q2PR:
     2937     8506    1       DCBSF = ZI$DIR.AREA_NM.DCB#;

   8506  4 013110   000244 220000 xsym  ALTEND_ZIU$* LDX0    ZI$DIR+164
         4 013111   000000 740000 xsym               STX0    DCBSF

     2938     8507    1       CALL SYS_FUNC_CLOS;

   8507  4 013112   000000 631400 5                  EPPR1   0
         4 013113   000000 701000 xent               TSX1    SYS_FUNC_CLOS
         4 013114   000000 011000                    NOP     0

     2939     8508    1   ALTRTN: ALTRETURN;

   8508  4 013115   000000 702200 xent  ALTRTN       TSX2  ! X66_AALT

REC_TYP
 Sect OctLoc
   0     000   000000 000000                                                    ....

SKIP
 Sect OctLoc
   0     001   101*** ******                                                    A...

VFC3LINES
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:432  
 Sect OctLoc
   0     002   103040 040040                                                    C

PAGE_HDR
 Sect OctLoc
   0     003   161101 122105   101040 116101   115105 072040   040040 040040    qAREA NAME:
   0     007   040040 040040   040040 040040   040040 040040   040040 040120                   P
   0     013   101107 105040   116125 115102   105122 072***   ****** ******    AGE NUMBER:.....
   0     017   ****** ******   ****** 040040   123120 101103   105040 101126    ......  SPACE AV
   0     023   101111 114072   ****** ******                                    AIL:....

PAGE_HDR2
 Sect OctLoc
   0     025   101104 101124   105040 123124   101115 120075   ****** ******    ADATE STAMP=....
   0     031   ****** ******   040040 040040   040040 040040   040040 040124    ....           T
   0     035   111115 105040   123124 101115   120075 ******   ****** ******    IME STAMP=......
   0     041   ****** ******   ****** ******   ****** 045040   106125 114114    ..........% FULL

PAGE_HDR3
 Sect OctLoc
   0     045   101103 125122   122040 110111   107110 040114   116075 ******    ACURR HIGH LN=..
   0     051   ****** ***040   040040 040040   040040 040040   040040 040106    ...            F
   0     055   111122 123124   040101 126101   111114 040114   116075 ******    IRST AVAIL LN=..
   0     061   ****** ***040   040040 040040   103110 113123   125115 075***    ...     CHKSUM=.
   0     065   ****** ******   ****** ******                                    ........

REC_HDR
 Sect OctLoc
   0     067   102*** ******   ****** ******   ****** ******   ****** ******    B...............
   0     073   ****** ******   ****** ******   ****** 040104   102113 075***    .......... DBK=.
   0     077   ****** ******   ****** ******   ***040 120101   107105 075***    ......... PAGE=.
   0     103   ****** ******   ****** ***040   114111 116105   075*** ******    ....... LINE=...
   0     107   ****** 040040   040*** ******   ****** ******                    ..   .......

SET_HDR0
 Sect OctLoc
   0     112   101040 040040   040040 040040   040040 040040   040040 040040    A
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:433  
   0     116   040040 040040   040040 040040   040040 040040   040040 040040
   0     126*  120122 111117   122040 040040   040040 040040   117127 116105    PRIOR       OWNE
   0     132   122040 040040   040040 040040   040116 105130   124*** ******    R        NEXT...

SET_HDR
 Sect OctLoc
   0     136   101040 040040   040040 ******   ****** ******   ****** ******    A     ..........
   0     146*  ****** ******   040*** ******   ****** ******   ****** ******    .... ...........
   0     152   ****** ******   ***040 040040   040040 040040   040040 040040    .....
   0     156   040040 040***   ****** ******   ****** ******   ***040 040040       ..........
   0     162   040040 040040   ****** ******   ****** ******                        ........

ITEM
 Sect OctLoc
   0     165   101040 040040   040*** ******   ****** ******   ****** ******    A    ...........
   0     171   ****** ******   ****** ***040   ****** ******   ****** ******    ....... ........
   0     175   ***040 ******   ***040 040***   ****** ******   ****** ******    . ...  .........
   0     215*  ****** ******                                                    ....

IT_HDR
 Sect OctLoc
   0     216   101040 040040   040040 040040   040040 040040   040040 040040    A
   0     222   040040 040040   040040 040040   040040 040040   040040 040040
   0     236*  040040 040040   040040 040040   040040 ******                              ..

EX_ITDATA
 Sect OctLoc
   0     241   101040 040040   040040 040040   040040 040040   040040 040040    A
   0     245   040040 040040   040040 040040   040040 040040   040040 040040
   0     261*  040040 040040   040040 040040   040040 ******                              ..

CALC_HDR
 Sect OctLoc
   0     264   101052 103101   114103 040110   105101 104105   122040 040040    A*CALC HEADER
   0     270   040040 040040   104102 113075   ****** ******   ****** ******        DBK=........
   0     274   ****** ***040   040120 122111   117122 075***   ****** ******    ...  PRIOR=.....
   0     300   ****** ******   ***040 040116   105130 124075   ****** ******    .....  NEXT=....
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:434  
   0     304   ****** ******   ****** ******                                    ........

INV_PRLN
 Sect OctLoc
   0     306   ****** ******   ****** ******   ****** ******   ****** ******    ................

INV_P_LINE
 Sect OctLoc
   0     327   101*** ******   ****** ******   ****** ******   ***040 040***    A............  .
   0     333   ****** ***040   040*** ******   ***040 040***   ****** ***040    ...  ....  ....
   0     337   040*** ******   ***040 040***   ****** ***040   040*** ******     ....  ....  ...
   0     343   ***040 040***   ****** ***040   040*** ******   ***040 040***    .  ....  ....  .
   0     347   ****** ***040   040*** ******   ****** ******                    ...  .......

INV_PG_HDR
 Sect OctLoc
   0     352   101106 122105   105040 127117   122104 123040   120107 043040    AFREE WORDS PG#
   0     356   050060 051040   040050 061051   040040 040050   062051 040040    (0)  (1)   (2)
   0     362   040050 063051   040040 040050   064051 040040   040050 065051     (3)   (4)   (5)
   0     366   040040 040050   066051 040040   040050 067051   040040 040040       (6)   (7)
   0     372   050070 051040   040050 071051   040*** ******                    (8)  (9) ...

ITEM_LN
 Sect OctLoc
   0     412   000000 000000                                                    ....

I_O_INDX
 Sect OctLoc
   0     413   000000 000000                                                    ....

CHK_KEY
 Sect OctLoc
   0     414   000000 000000                                                    ....

INDX
 Sect OctLoc
   0     415   000000 000000                                                    ....
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:435  

ASCII_NUM
 Sect OctLoc
   0     440   ****** ******   ****** ******   ****** ******   ****** ******    ................

DONE
 Sect OctLoc
   0     464   0***** ******                                                    ....

KEY_FLG
 Sect OctLoc
   0     465   0***** ******                                                    ....

KEY_RANGE
 Sect OctLoc
   0     466   0***** ******                                                    ....

LOCAL_ONLY
 Sect OctLoc
   0     467   0***** ******                                                    ....

DUMP_FILE
 Sect OctLoc
   0     470   0***** ******                                                    ....

NXT_PTR
 Sect OctLoc
   0     471   0***** ******                                                    ....

ITM_SELECTED
 Sect OctLoc
   0     472   4***** ******                                                    ....

ASCII_SOURCE
 Sect OctLoc
   0     507   ****** ******   ****** ******   ****** ******   ****** ******    ................

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:436  
TEMP
 Sect OctLoc
   0     571   ****** ******   ****** ******   ****** ******   ****** ******    ................

IND_HDR
 Sect OctLoc
   0     655   102*** ******   ****** ******   ****** ******   ****** ******    B...............
   0     661   ****** ******   ****** ******   ****** 040040   040040 040040    ..........
   0     665   040040 040040   040040 040040   040040 040040   040040 040040
   0     675*  040040 040040   040111 116104   105130 040***                         INDEX .

AC_BUF
 Sect OctLoc
   0     702   ****** ******   ****** ******   ****** ******   ****** ******    ................

TM_BUF
 Sect OctLoc
   0     727   157156 040040   040040 040040   040040 040040   040040 040040    on
   0     733   040040 040040   040040 040040   040040 040040   040040 040040
   0     737   040040 040040   040040 040040   040040 040040

ZEROS
 Sect OctLoc
   0     754   000000 000000   000000 000000   000000 000000   000000 000000    ................
   0    2750*  000000 000000   000000 000000   000000 000000   000000 000000    ................

PA_HDR
 Sect OctLoc
   0    2755   102040 040040   040105 116124   122111 105123   072040 ******    B    ENTRIES: ..
   0    2761   ****** ******   ***123 120101   103105 040101   126101 111114    .....SPACE AVAIL
   0    2765   072040 ******   ****** ******   ****** 117122   104105 122072    : ........ORDER:
   0    2771   040106 111122   123124 040044   040114 101123   124040 111116     FIRST $ LAST IN
   0    2775   040114 117127   105123 124040   114105 126105   114*** ******     LOWEST LEVEL...

PA_BUF
 Sect OctLoc
   0    3001   101040 040040   040113 105131   055116 101115   105072 040***    A    KEY-NAME: .
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:437  
   0    3011*  ****** ******   ****** ******   ****** ******   ***120 117111    .............POI
   0    3015   116124 105122   040040 040***   ****** ******   ****** ******    NTER   .........
   0    3025*  ****** ******   ****** ******   ****** ******                    ............

PSMODE_TXT
 Sect OctLoc
   0    3036   104111 122105   103124 103101   114103 040040   126111 101040    DIRECTCALC  VIA
   0    3042   040040 123105   121125 105116   111116 104105   130040 123131      SEQUENINDEX SY
   0    3046   123124 105115                                                    STEM

ORDER_TXT
 Sect OctLoc
   0    3047   106111 122123   124114 101123   124040 116105   130124 040120    FIRSTLAST NEXT P
   0    3053   122111 117122   123117 122124   040125 116113   127116 123127    RIORSORT UNKWNSW
   0    3057   122116 040***                                                    RN .

NUM
 Sect OctLoc
   0    3060   06**** ******                                                    0...

INV_HDR
 Sect OctLoc
   0    3061   101104 101124   105040 123124   101115 120075   ****** ******    ADATE STAMP=....
   0    3065   ****** ******   040040 040040   040040 040040   040040 040124    ....           T
   0    3071   111115 105040   123124 101115   120075 ******   ****** ******    IME STAMP=......
   0    3075   ****** ******   ****** ******   111116 111124   111101 114040    ........INITIAL
   0    3101   126101 114125   105075 ******   ****** ******                    VALUE=......

CHAR_SET
 Sect OctLoc
   3     000   060061 062063   064065 066067                                    01234567

(unnamed)
 Sect OctLoc
   3     002   060062 061060   060040 040040   052103 101114   103040 040040    02100   *CALC
   3     006   116157 040154   157143 153163   040141 163163   157143 151141    No locks associa
   3     012   164145 144040   167151 164150   040151 156144   145170 145144    ted with indexed
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:438  
   3     016   040141 162145   141040 040040   056100 040040   040151 163040     area   .@   is
   3     022   116117 124040   154157 143153   145144 056100   040046 040151    NOT locked.@ & i
   3     026   164163 040141   154164 145162   156141 164145   040153 145171    ts alternate key
   3     032   146151 154145   040167 145162   145040 154157   143153 145144    file were locked
   3     036   040100 040040   040167 141163   040154 157143   153145 144040     @   was locked
   3     042   100040 040040   124150 145040   141154 164145   162156 141164    @   The alternat
   3     046   145040 153145   171146 151154   145040 157146   040040 040040    e keyfile of
   3     052   040167 141163   040154 157143   153145 144040   146162 157155     was locked from
   3     056   040165 160144   141164 145162   163040 100040   142145 146157     updaters @ befo
   3     062   162145 040164   150145 040102   060062 040166   145162 163151    re the B02 versi
   3     066   157156 040157   146040 111104   123056 100040   142171 040165    on of IDS.@ by u
   3     072   163145 162056   100040 040040   142171 040111   104123 056100    ser.@   by IDS.@
   3     076   102052 040040   102040 040106   157162 040162   145143 157166    B*  B  For recov
   3     102   145162 171040   162157 154154   142141 143153   040146 141151    ery rollback fai
   3     106   154145 144056   102040 040106   157162 040165   156160 162157    led.B  For unpro
   3     112   164145 143164   145144 040165   160144 141164   145040 152157    tected update jo
   3     116   142040 141142   157162 164145   144056 040040   102040 040106    b aborted.  B  F
   3     122   157162 040153   145171 146151   154145 055155   165163 164055    or keyfile-must-
   3     126   162145 142165   151154 164040   141146 164145   162040 114117    rebuilt after LO
   3     132   101104 040155   157144 145056   102040 040116   157040 162145    AD mode.B  No re
   3     136   141163 157156   040142 151164   040163 145164   040146 157162    ason bit set for
   3     142   040164 150145   040154 157143   153054 040160   154145 141163     the lock, pleas
   3     146   145040 162145   160157 162164   041040 040040   052110 105101    e report!   *HEA
   3     152   104105 122040   116117 116105   123145 164040   160157 151156    DER NONESet poin
   3     156   164145 162040   145162 162157   162072 040040   052103 101114    ter error:  *CAL
   3     162   103056 122103   104125 115120   060060 060060   060040 040040    C.RCDUMP00000
   3     166   052120 101137   122105 103040   052103 101114   103054 040040    *PA_REC *CALC,
   3     172   040111 116040   114117 127105   123124 040114   105126 105114     IN LOWEST LEVEL
   3     176   040111 116040   110111 107110   105122 040114   105126 105114     IN HIGHER LEVEL
   3     202   106111 122123   124040 046040   114101 123124   115111 104104    FIRST & LASTMIDD
   3     206   114105 040040   113105 131055   116101 115105   072040 040040    LE  KEY-NAME:
   3     212   114117 103101   114040 120124   122123 040040   040040 120117    LOCAL PTRS    PO
   3     216   111116 124105   122123 040040   040055 076040   114117 127105    INTERS   -> LOWE
   3     222   122040 114105   126105 114040   074106 111122   123124 040113    R LEVEL <FIRST K
   3     226   105131 040122   105120 105101   124105 104040   111116 040120    EY REPEATED IN P
   3     232   122111 117122   076040 040040   104102 113056   074114 101123    RIOR>   DBK.<LAS
   3     236   124040 113105   131040 122105   120105 101124   105104 040111    T KEY REPEATED I
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:439  
   3     242   116040 116105   130124 076040   040040 040040   040040 040040    N NEXT>
   3     246   050114 117103   051040 040040   050126 111101   051040 040040    (LOC)   (VIA)
   3     252   104102 055113   105131 040040   103117 115120   040127 117122    DB-KEY  COMP WOR
   3     256   104040 040040   103117 115120   040110 101114   106040 040040    D   COMP HALF
   3     262   125116 123107   116040 104105   103040 040040   123107 116105    UNSGN DEC   SGNE
   3     266   104040 104105   103040 040040   103110 101122   101103 124105    D DEC   CHARACTE
   3     272   122040 040040   125116 123120   105103 040040   106114 117101    R   UNSPEC  FLOA
   3     276   124111 116107   123116 107040   104102 114040   103110 101122    TINGSNG DBL CHAR
   3     302   040126 101122   131040 040040   125116 113116   040124 131120     VARY   UNKN TYP
   3     306   105040 040040                                                    E

(unnamed)
 Sect OctLoc
   5     000   000000 000000   000002 000000   000062 406000   000063 006000    .........2...3..
   5     004   000001 000000   000000 006000   757777 777777   777777 400007    ................
   5     010   000007 600000   000003 200000   000006 000000   000000 000040    ...............
   5     014   000000 006000   000000 006000   000013 006000   000000 006000    ................
   5     020   000250 006000   000464 006000   777777 777777   000005 400000    ................
   5     024   000000 006000   677777 777777   000062 006000   000063 006000    .........2...3..
   5     030   000065 406000   000023 406000   000047 406000   000075 406000    .5.......'...=..
   5     034   000071 406000   000034 406000   000073 406000   000041 406000    .9.......;...!..
   5     040   000014 406000   000067 406000   040040 040040   047040 040040    .....7..    '
   5     044   000000 006003   072040 040040   000007 577640   000000 006000    ....:   ........
   5     050   000017 600000   000000 006000   056040 040040   777777 077777    .........   ..?.
   5     054   777777 737777   777777 747777   105040 040040   055040 040040    ........E   -
   5     060   053040 040040   000004 000000   000434 006000   000440 006000    +   ............
   5     064   000461 006000   000462 006000   000436 006000   000440 006000    ................
   5     070   000461 006000   000462 006000   737777 777777   000016 000000    ................
   5     074   000234 206000   000003 000000   000000 000036   400000 000000    ................
   5     100   000000 206000   000076 006000   000077 006000   000010 206000    .....>...?......
   5     104   000076 006000   000077 006000   000000 006000   000507 006000    .>...?..........
   5     110   000010 000000   775777 777777   000066 406000   000001 406000    .........6......
   5     114   000030 406000   000064 406000   001777 777640   100040 040040    .....4......@
   5     120   000022 777640   000655 006000   000002 377640   000731 206000    ................
   5     124   000002 777640   000742 006000   000702 006000   777777 777000    ................
   5     130   000035 777640   000000 006000   000400 006000   000376 006000    ................
   5     134   000131 606000   000404 006000   000001 777640   000030 006000    .Y..............
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:440  
   5     140   000003 177640   000037 406000   000000 000003   000042 606000    ............."..
   5     144   000142 006000   000000 006000   000000 000013   000015 606000    .b..............
   5     150   000146 006000   000077 006000   000000 000004   000024 006000    .f...?..........
   5     154   000152 006000   000077 006000   000000 777640   000002 006000    .j...?..........
   5     160   000021 777640   000003 006000   000017 777640   000025 006000    ................
   5     164   000000 000005   000050 406000   000164 006000   000077 006000    .....(...t...?..
   5     170   000060 406000   000164 006000   000077 006000   000000 000010    .0...t...?......
   5     174   000064 606000   000173 006000   000077 006000   000000 000000    .4...{...?......
   5     200   000021 777640   000045 006000   000020 206000   000076 006000    .....%.......>..
   5     204   000077 006000   000125 426000   000747 006000   000754 006000    .?...U..........
   5     210   000000 000012   000210 006000   000076 606000   000210 006000    .........>......
   5     214   000077 006000   000303 006000   000000 006000   000276 606000    .?..............
   5     220   000276 606000   000210 006000   000077 006000   000303 006000    .........?......
   5     224   000210 006000   000077 006000   000272 006000   000146 006000    .....?.......f..
   5     230   000077 006000   000000 000000   000000 777640   000001 006000    .?..............
   5     234   000021 777640   000264 006000   000064 406000   000022 406000    .........4......
   5     240   000023 777640   000112 006000   000150 606000   000153 606000    .....J...h...k..
   5     244   000156 606000   000410 006000   003014 206000   000474 006000    .n..............
   5     250   000000 000007   002760 406000   000250 006000   000077 006000    .............?..
   5     254   000067 406000   000027 406000   050040 040040   000073 406000    .7......(   .;..
   5     260   000014 406000   054040 040040   051040 040040   002765 406000    ....,   )   ....
   5     264   000173 006000   000077 006000   000023 177640   002755 006000    .{...?..........
   5     270   101040 040040   102040 040040   000026 177640   003001 006000    A   B   ........
   5     274   000077 777777   000102 606000   000173 006000   000077 006000    .?...B...{...?..
   5     300   000106 206000   000164 006000   000077 006000   000000 000000    .F...t...?......
   5     304   000022 777640   000067 006000   000026 777640   000136 006000    .....7.......^..
   5     310   000351 006000   000000 000062   000224 006000   000311 006000    .......2........
   5     314   000077 006000   000175 406000   000142 006000   000077 006000    .?...}...b...?..
   5     320   000411 006000   000431 006000   000411 006000   000412 006000    ................
   5     324   000005 000000   000434 006000   000440 006000   000460 006000    ................
   5     330   000461 006000   000462 006000   000011 000000   000000 000002    ................
   5     334   777777 777776   000000 000001   000224 006000   000311 006000    ................
   5     340   000440 006000   000461 006000   000462 006000   000333 006000    ................
   5     344   000463 006000   000334 006000   000335 006000   000436 006000    ................
   5     350   000440 006000   000460 006000   000461 006000   000462 006000    ................
   5     354   000030 777640   000165 006000   000022 777640   000216 006000    .....u..........
   5     360   000014 400000   000247 006000   000022 777640   000241 006000    ................
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:441  
   5     364   640000 000000   176040 040040   060040 040040   000000 000014    ....~   0   ....
   5     370   000001 777640   003064 006000   000003 377640   003073 406000    .....4.......;..
   5     374   003102 406000   000152 006000   000077 006000   000000 000000    .B...j...?......
   5     400   000022 777640   003061 006000   000022 777640   000352 006000    .....1..........
   5     404   000327 206000   000367 006000   000000 006000   000000 000000    ................
   5     410   000022 777640   000327 006000   777777 770030   000332 606000    ................
   5     414   000001 400000                                                    ....
     2940     8509    1   END ZIU$Q2PR;

PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:442  
--  Include file information  --

   ZI$DIR.:ZIC0TOU  is referenced.
   ZI_GLOBAL_DBUTIL.:ZIC0TOU  is referenced.
   ZI$PG_STRUCTS.:ZIC0TOU  is referenced.
   ZI_UWA_C.:ZIC0TOU  is referenced.
   ZI_RVA_C.:ZIC0TOU  is referenced.
   ZI_PRSE_SUBS.:ZIC0TOU  is referenced.
   ZI_ERRORS_SUBS.:ZIC0TOU  is referenced.
   B_ERRORS_C.:LIB_E05  is referenced.
   CP_6_SUBS.:LIB_E05  is referenced.
   CP_6.:LIB_E05  cannot be made into a system file and is referenced.
   ZI_DBU_XREF.:ZIC0TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ZIU$Q2PR.

   Procedure ZIU$Q2PR requires 5710 words for executable code.
   Procedure ZIU$Q2PR requires 3244 words of local(AUTO) storage.

    No errors detected in file ZIU$Q2PR.:ZIC0TSI    .
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:443  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:444  
          MINI XREF LISTING

AC# IN PROCEDURE PRINT_LOCKS
      7013**DCL      7014--IMP-SIZ  7029<<ASSIGN   7032>>CALLBLT  7039>>CALLBLT  7043>>CALLBLT  7046>>CALLBLT
      7049>>CALLBLT  7053>>CALLBLT  7076<<CALLBLT  7077>>CALLBLT  7080>>ASSIGN
AC$ IN PROCEDURE PRINT_LOCKS
      7012**DCL      7014--IMP-PTR  7028<<ASSIGN   7032>>CALLBLT  7039>>CALLBLT  7043>>CALLBLT  7046>>CALLBLT
      7049>>CALLBLT  7053>>CALLBLT  7075<<ASSIGN   7077>>CALLBLT
ACSSF
      5480**DCL      5956<<ASSIGN   6236<<ASSIGN
ACT_REC_LEN IN PROCEDURE EXPAND_PAGE
      7636**DCL      7653<<ASSIGN   7658>>IF       7665>>ASSIGN   7671>>ASSIGN
AC_BUF IN PROCEDURE PRINT_LOCKS
      7016**DCL      7032<<CALLBLT  7039<<CALLBLT  7043<<CALLBLT  7046<<CALLBLT  7049<<CALLBLT  7053<<CALLBLT
      7075--ASSIGN   7076>>CALLBLT
AC_REC
      5917**DCL      6846<>CALL
AC_REC.BASE_DBK
      5919**DCL      7526<<ASSIGN
AC_REC.CALC_NULL
      5918**DCL      7525<<ASSIGN
AC_REC.DBK_PER_CALC
      5927**DCL      7534<<ASSIGN
AC_REC.DBK_PER_PG
      5926**DCL      7533<<ASSIGN
AC_REC.FRST_INV_PG
      5925**DCL      7532<<ASSIGN
AC_REC.KEYS_ALLOC
      5920**DCL      7527<<ASSIGN
AC_REC.MAX_DBK
      5922**DCL      7529<<ASSIGN
AC_REC.MAX_PAGE
      5924**DCL      7531<<ASSIGN
AC_REC.MIN_DBK
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:445  
      5921**DCL      7528<<ASSIGN
AC_REC.MIN_PAGE
      5923**DCL      7530<<ASSIGN
AC_V IN PROCEDURE PRINT_LOCKS
      7014**DCL      7032>>CALLBLT  7039>>CALLBLT  7043>>CALLBLT  7046>>CALLBLT  7049>>CALLBLT  7053>>CALLBLT
      7077>>CALLBLT
ADSC9.BYT_OFF
       207**DCL      7804>>ASSIGN   8150>>ASSIGN   8248>>ASSIGN   8312>>DOCASE
ADSC9.EISADDR
       206**DCL      7803>>ASSIGN   8066>>ASSIGN   8147>>ASSIGN   8247>>ASSIGN
ADSC9.SIZE
       210**DCL      8181>>CALLBLT  8183>>ASSIGN   8184>>ASSIGN   8187>>CALLBLT  8189>>ASSIGN   8191>>ASSIGN
      8249>>CALLBLT  8251>>ASSIGN   8252>>ASSIGN
ALPH_ITEM
       245**DCL      8216<<ASSIGN   8242<<ASSIGN   8270>>ASSIGN
ALT$ IN PROCEDURE ALTK_PRNT
      6156**DCL      6245<<ASSIGN
ALTEND_ZIU$Q2PR
      8506**LABEL    5981--CALLALT  5986--CALLALT  5989--CALLALT  6003--CALLALT  6042--CALLALT  6043--CALLALT
      6054--CALLALT  6067--CALLALT  6069--CALLALT  6071--CALLALT
ALTEND_ZIU$Q2PR IN PROCEDURE ALTK_PRNT
      6469**LABEL    6176--CALLALT  6177--CALLALT  6179--CALLALT  6182--CALLALT  6183--CALLALT  6202--CALLALT
      6204--CALLALT  6228--CALLALT  6240--CALLALT  6303--GOTO     6335--GOTO     6363--GOTO     6381--GOTO
      6394--CALLALT  6401--CALLALT  6420--GOTO     6431--CALLALT  6442--CALLALT
ALTEND_ZIU$Q2PR IN PROCEDURE CALC_PRNT
      6953**LABEL    6814--CALLALT  6821--CALLALT  6861--CALLALT  6894--CALLALT
ALTEND_ZIU$Q2PR IN PROCEDURE PAGE_PRNT
      6127**LABEL    6085--CALLALT  6110--CALLALT
ALTKEY_TYPE IN PROCEDURE ALTK_PRNT
      6162**DCL      6198<<ASSIGN   6270>>DOCASE   6393>>IF
ALTKY.KEYNAME
      5894**DCL      6184>>IF       6211>>CALLBLT  6213>>ASSIGN
ALTKY.VALUE
      5893**DCL      6244>>IF       6246--ASSIGN   6262<<ASSIGN   6264<<CALLBLT  6265>>CALLBLT  6267<<ASSIGN
      6273>>CALLBLT  6275<<ASSIGN   6278>>CALLBLT  6280<<ASSIGN   6282>>CALLBLT  6287>>CALLBLT  6287>>CALLBLT
      6288<<ASSIGN   6299>>ASSIGN   6305--ASSIGN   6311<<ASSIGN   6314>>CALLBLT  6319>>CALLBLT  6319>>CALLBLT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:446  
      6320<<ASSIGN   6331>>ASSIGN   6337--ASSIGN   6341>>IF       6341>>IF       6342>>CALLBLT  6343<<ASSIGN
      6348<<ASSIGN   6351>>ASSIGN   6357>>CALLBLT  6359>>ASSIGN   6367>>CALLBLT  6368>>IF       6368>>IF
      6370>>ASSIGN   6373>>CALLBLT  6383>>IF       6385>>CALLBLT  6388>>IF       6389>>CALLBLT  6390>>CALLBLT
      6408<<ASSIGN   6414>>CALLBLT  6416>>ASSIGN   6436>>DOWHILE
ALTK_PRNT
      6134**PROC     6041--CALL
ALTRTN
      8508**LABEL    5959--CALLALT  6041--CALLALT  6053--CALLALT
ALTRTN IN PROCEDURE INDEX_PRINT
      7005**LABEL    6968--CALLALT  6970--CALLALT  6971--CALLALT  6972--CALLALT  6973--CALLALT  6974--CALLALT
      6992--CALLALT  6993--CALLALT
ALTRTN IN PROCEDURE PRINT_LOCKS
      7105**LABEL    7037--CALLALT  7084--CALLALT  7101--CALLALT
ALT_INDX IN PROCEDURE INDEX_PRINT
      6997**LABEL    6983--CALLALT
ALT_READ IN PROCEDURE GET_ATBLK_INFO
      7551**LABEL    7513--CALLALT
ALT_READ IN PROCEDURE READ_PAGE
      7620**LABEL    7585--CALLALT  7596--CALLALT
ALT_READ_AREA IN PROCEDURE KEY_PRNT
      7246**LABEL    7151--CALLALT  7187--CALLALT  7229--CALLALT
AN_DIGITS
       273**DCL      6367<<CALLBLT  6370>>ASSIGN   6373>>CALLBLT  6374>>IF       6383>>IF       6385>>CALLBLT
      6385>>CALLBLT  6388>>IF       6389>>CALLBLT  6389>>CALLBLT  6390>>CALLBLT  6390>>CALLBLT  6392<<ASSIGN
      6392>>ASSIGN   6394<>CALL     6401<>CALL     6788<<CALLBLT  6791>>ASSIGN   6794>>CALLBLT  6795>>IF
      6804>>IF       6806>>CALLBLT  6806>>CALLBLT  6809>>IF       6810>>CALLBLT  6810>>CALLBLT  6811>>CALLBLT
      6811>>CALLBLT  6812<<ASSIGN   6812>>ASSIGN   6814<>CALL     6821<>CALL     8197<>CALL     8203<>CALL
      8223<>CALL     8229<>CALL
AN_POWER_10
       274**DCL      6385<<CALLBLT  6386<<ASSIGN   6386>>ASSIGN   6389<<CALLBLT  6390<<CALLBLT  6394<>CALL
      6401<>CALL     6806<<CALLBLT  6807<<ASSIGN   6807>>ASSIGN   6810<<CALLBLT  6811<<CALLBLT  6814<>CALL
      6821<>CALL     8197<>CALL     8203<>CALL     8223<>CALL     8229<>CALL
AREA_KEY$
       519**DCL       522--IMP-PTR  7142>>IF       7149>>ASSIGN   7150>>ASSIGN
AREA_KEY_XREF.MAX_KEY
       524**DCL      7142>>IF
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:447  
AREA_KEY_XREF.NAME
       525**DCL      7149>>ASSIGN   7150>>ASSIGN
ARRAY_INDX IN PROCEDURE EXPAND_PAGE
      7635**DCL      7663<<ASSIGN   7664>>ASSIGN
ARRAY_SIZE IN PROCEDURE EXPAND_PAGE
      7634**DCL      7638--IMP-SIZ  7640--IMP-SIZ  7652<<ASSIGN   7663>>ASSIGN   7665>>ASSIGN   7666<<ASSIGN
      7666>>ASSIGN   7667>>CALL     7667>>CALL     7667<>CALL
ASCII_NUM
       271**DCL      6370<<ASSIGN   6373<<CALLBLT  6394<>CALL     6401<>CALL     6791<<ASSIGN   6794<<CALLBLT
      6814<>CALL     6821<>CALL     8197<>CALL     8203<>CALL     8223<>CALL     8229<>CALL
ASCII_SOURCE IN PROCEDURE CALC_PRNT
      6552**DCL      6732<<CALLBLT  6737<<ASSIGN   6739--ASSIGN   6753<<CALLBLT  6758<<ASSIGN   6760--ASSIGN
      6764>>IF       6764>>IF       6765>>CALLBLT  6766<<ASSIGN
ASNSF
      5483**DCL      5957<<ASSIGN   6237<<ASSIGN
ATBLK$
      5193**DCL      5194--IMP-PTR  6105<<ASSIGN   6108>>IF       6108>>IF       6108>>IF       6437>>CALLBLT
      6437>>CALLBLT  6437>>CALLBLT  7038>>IF       7042>>IF       7042>>IF       7045>>IF       7048>>IF
      7052>>IF       7056>>IF       7060>>ASSIGN   7067>>IF       7088>>IF       7091>>IF       7094>>IF
      7492<<ASSIGN   7514>>ASSIGN   7516>>IF       7535>>ASSIGN   7536>>ASSIGN   7537>>ASSIGN   7541>>ASSIGN
      7542>>ASSIGN   7543>>ASSIGN   7544>>ASSIGN   7545>>ASSIGN   7546>>ASSIGN   7547>>ASSIGN
ATBLK_PG.AREA_NM
      5219**DCL      5220--REDEF
ATBLK_PG.DB_INFO.DBK_SZ
      5204**DCL      6437>>CALLBLT  6437>>CALLBLT  6437>>CALLBLT
ATBLK_PG.FIR_INV_PGNO
      5216**DCL      7545>>ASSIGN
ATBLK_PG.HIGH_DBK
      5218**DCL      7543>>ASSIGN
ATBLK_PG.IDS_HDR
      5199**DCL      7516>>IF
ATBLK_PG.LINE_INFO.LPP
      5214**DCL      7537>>ASSIGN   7547>>ASSIGN
ATBLK_PG.LOCK_STATUS.ALL_LOCKS
      5237**DCL      7038>>IF
ATBLK_PG.LOW_DBK
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:448  
      5217**DCL      7536>>ASSIGN   7546>>ASSIGN
ATBLK_PG.MISC_INFO.CHKSM
      5224**DCL      7514>>ASSIGN
ATBLK_PG.MISC_INFO.IUSZ
      5226**DCL      7544>>ASSIGN
ATBLK_PG.NUM_DBPG
      5201**DCL      7542>>ASSIGN
ATBLK_PG.REASON_LOCKED.BY_USER
      5241**DCL      7067>>IF
ATBLK_PG.REASON_LOCKED.LOAD_MODE
      5242**DCL      7094>>IF
ATBLK_PG.REASON_LOCKED.ROLLBACK_FAIL
      5243**DCL      7088>>IF
ATBLK_PG.REASON_LOCKED.UNPROTECT_ABORT
      5244**DCL      7091>>IF
ATBLK_PG.STATUS
      5228**DCL      5236--REDEF
ATBLK_PG.STATUS.KFILE_CURR
      5231**DCL      6108>>IF       7042>>IF       7048>>IF
ATBLK_PG.STATUS.LOCKED
      5229**DCL      6108>>IF       7042>>IF       7045>>IF
ATBLK_PG.STATUS.LOCKUPD
      5230**DCL      6108>>IF       7052>>IF
ATBLK_PG.TIME_LOCKED
      5239**DCL      7056>>IF       7060--ASSIGN
ATBLK_PG.TOT_CALC_HDRS
      5215**DCL      7535>>ASSIGN   7541>>ASSIGN
B$EXCFR.ASL
      1238**DCL      1238--REDEF
B$EXCFR.ERR.ERR#
      1252**DCL      1252--REDEF    6998>>IF       7620>>IF
B$EXCFR.EVID
      1251**DCL      1251--REDEF    1252--REDEF
B$EXCFR.IR
      1239**DCL      1239--REDEF
B$EXCFR.PREVSZ
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:449  
      1238**DCL      1238--REDEF
B$EXCFR.SUBC
      1250**DCL      1250--REDEF    1251--REDEF    1251--REDEF
B$IS$ IN PROCEDURE ALTK_PRNT
      6167**DCL      6305>>ASSIGN   6337>>ASSIGN
B$IS$ IN PROCEDURE CALC_PRNT
      6547**DCL      6739>>ASSIGN   6760>>ASSIGN
B$TCB.ALT$
      1235**DCL      6998>>IF       7620>>IF
B$TCB$
      5590**DCL      6998>>IF       7620>>IF
BINH
       244**DCL      8167>>CALLBLT
BINU
       243**DCL      8157>>CALLBLT  8162>>CALLBLT
BIT36
       268**DCL      6399<<ASSIGN   6819<<ASSIGN   8196>>ASSIGN
BIT72
       270**DCL      6406<<ASSIGN   6826<<ASSIGN   8222>>ASSIGN
BLN#
       226**DCL      7175<<ASSIGN   7188>>ASSIGN   7189<>CALL     7237<>CALL     7238<<ASSIGN
BREAK_FLAG
      5600**DCL      7253>>IF       7443>>IF
BREAK_ROUTINE
      7266**PROC     7254--CALL     7444--CALL
BUF$ IN PROCEDURE CALC_PRNT
      6545**DCL      6544--IMP-PTR  6688<<ASSIGN   6689>>ASSIGN   6690>>ASSIGN   6699>>ASSIGN   6744>>ASSIGN
      6770>>ASSIGN   6846>>CALL     6905<<ASSIGN   6909>>IF
BUFAREA IN PROCEDURE CALC_PRNT
      6544**DCL      6774<<ASSIGN   6846<>CALL     6909>>IF
BUFFR IN PROCEDURE CALC_PRNT
      6540**DCL      6583<<ASSIGN   6688--ASSIGN   6909>>IF
BUFLNSF
      5491**DCL      6980<<ASSIGN   6986<<ASSIGN   7080<<ASSIGN   7099<<ASSIGN   7375<<ASSIGN   7379<<ASSIGN
      7382<<ASSIGN   7388<<ASSIGN   7562<<ASSIGN   7595<<ASSIGN   7740<<ASSIGN   7743<<ASSIGN   7779<<ASSIGN
      7989<<ASSIGN   8032<<ASSIGN   8071<<ASSIGN   8108<<ASSIGN   8111<<ASSIGN   8136<<ASSIGN   8259<<ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:450  
      8262<<ASSIGN   8272<<ASSIGN   8284<<ASSIGN   8424<<ASSIGN   8436<<ASSIGN   8439<<ASSIGN   8464<<ASSIGN
      8477<<ASSIGN
BUFSF
      5492**DCL      6979<<ASSIGN   6985<<ASSIGN   7081<<ASSIGN   7374<<ASSIGN   7378<<ASSIGN   7381<<ASSIGN
      7387<<ASSIGN   7561<<ASSIGN   7594<<ASSIGN   7739<<ASSIGN   7742<<ASSIGN   7778<<ASSIGN   7988<<ASSIGN
      8031<<ASSIGN   8070<<ASSIGN   8107<<ASSIGN   8110<<ASSIGN   8135<<ASSIGN   8258<<ASSIGN   8261<<ASSIGN
      8271<<ASSIGN   8283<<ASSIGN   8423<<ASSIGN   8435<<ASSIGN   8438<<ASSIGN   8463<<ASSIGN
BUILD_MSTR_TBL
       308**DCL-ENT  5964--CALL
BUILD_RECXREF
       310**DCL-ENT  5966--CALL
BUILD_REC_TBL
      7284**PROC     6042--CALL     6067--CALL
BUILD_SETXREF
       309**DCL-ENT  5965--CALL
C IN PROCEDURE FIND_PRINT_ITEMS
      7860**DCL      7874>>CALLBLT  7877<<ASSIGN   7877>>ASSIGN   8063<<ASSIGN   8072>>IF       8079>>DOWHILE
CALC$ IN PROCEDURE CALC_PRNT
      6546**DCL      6699<<ASSIGN   6714>>ASSIGN   6722>>ASSIGN   6725>>ASSIGN   6774>>ASSIGN   6819>>ASSIGN
      6826>>ASSIGN
CALCHDRS
      5916**DCL      6846<>CALL     7535<<ASSIGN
CALCKY IN PROCEDURE CALC_PRNT
      6534**DCL      6652<<ASSIGN
CALCKY.LENGTH IN PROCEDURE CALC_PRNT
      6536**DCL      6662<<ASSIGN   6704>>ASSIGN   6705>>DOINDEX  6721>>CALLBLT  6724>>CALLBLT  6727>>CALLBLT
      6728>>IF       6730>>ASSIGN   6731>>ASSIGN   6732>>CALLBLT  6736>>ASSIGN   6737>>ASSIGN   6748>>CALLBLT
      6749>>IF       6751>>ASSIGN   6752>>ASSIGN   6753>>CALLBLT  6757>>ASSIGN   6758>>ASSIGN   6774>>ASSIGN
      6779>>ASSIGN   6780>>ASSIGN   6788>>CALLBLT  6795>>IF       6806>>CALLBLT  6810>>CALLBLT  6811>>CALLBLT
      6831>>ASSIGN   6832>>ASSIGN
CALCKY.OFFSET IN PROCEDURE CALC_PRNT
      6535**DCL      6659<<ASSIGN   6662>>ASSIGN   6700>>IF       6702>>ASSIGN   6721>>CALLBLT  6724>>CALLBLT
      6727>>CALLBLT  6732>>CALLBLT  6732>>CALLBLT  6737>>ASSIGN   6748>>CALLBLT  6753>>CALLBLT  6753>>CALLBLT
      6758>>ASSIGN   6774>>ASSIGN   6780>>ASSIGN   6788>>CALLBLT  6789>>IF       6789>>IF       6791>>ASSIGN
      6794>>CALLBLT  6804>>IF       6806>>CALLBLT  6809>>IF       6810>>CALLBLT  6811>>CALLBLT  6832>>ASSIGN
CALC_HDR
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:451  
       181**DCL      7742--ASSIGN   7743--ASSIGN
CALC_HDR.DBKVAL
       184**DCL      7735<<CALLBLT  7738<>CALL
CALC_HDR.NT
       188**DCL      7728<>CALL     7734<>CALL
CALC_HDR.PR
       186**DCL      7732<>CALL     7733<>CALL
CALC_PRNT
      6490**PROC     6053--CALL
CAN_RVA.ACRA.SEC
      3746**DCL      6971<>CALL
CAN_RVA.CFREC.SEC
      3920**DCL      6193<>CALL     6194<>CALL     7914<>CALL     7917<>CALL     7922<>CALL
CAN_RVA.FRCFS.SEC
      3779**DCL      6196<>CALL     7914<>CALL     7922<>CALL
CAN_RVA.FRREC.SEC
      3908**DCL      6197<>CALL     7886<>CALL     7889<>CALL     7994<>CALL     7996<>CALL     8013<>CALL
CAN_RVA.OARC.SEC
      3797**DCL      7756<>CALL
CAN_RVA.OAREC
      3891**DCL      6176<>CALL
CAN_RVA.OAREC.SEC
      3893**DCL      5963<>CALL     5978<>CALL     7753<>CALL
CAN_RVA.OASC.SEC
      3800**DCL      6177<>CALL     6202<>CALL     6204<>CALL
CAN_RVA.RAREC.SEC
      3905**DCL      6971<>CALL     6972<>CALL
CAN_RVA.RCFR.SEC
      3812**DCL      7886<>CALL     7994<>CALL     8017<>CALL
CAN_RVA.RCRA.SEC
      3815**DCL      6973<>CALL     6992<>CALL
CAN_RVA.RCREC.SEC
      3899**DCL      6974<>CALL     6993<>CALL     7756<>CALL     7758<>CALL     8018<>CALL
CAN_RVA.SCREC.SEC
      3902**DCL      6177<>CALL     6179<>CALL     6202<>CALL     6204<>CALL     7928<>CALL
CAN_RVA.SCSOSM.SEC
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:452  
      3827**DCL      6190<>CALL     7927<>CALL
CAN_RVA.SMREC.SEC
      3914**DCL      6190<>CALL
CAN_RVA.SMSSCF.SEC
      3842**DCL      6193<>CALL     7926<>CALL
CAN_RVA.SNREC.SEC
      3926**DCL      6183<>CALL     7894<>CALL     7944<>CALL     8015<>CALL     8021<>CALL
CAN_RVA.SNSE.SEC
      3860**DCL      6182<>CALL     7893<>CALL     7943<>CALL     8014<>CALL     8020<>CALL
CDBKY IN PROCEDURE ALTK_PRNT
      6154**DCL      6437<<CALLBLT
CHAR1 IN PROCEDURE ALTK_PRNT
      6158**DCL      6253>>CALLBLT
CHAR1 IN PROCEDURE CALC_PRNT
      6549**DCL      6707>>CALLBLT
CHAR1 IN PROCEDURE OCTAL_PRINT
      8363**DCL      8389>>IF       8389>>IF       8390>>ASSIGN
CHAR1 IN PROCEDURE UNPAK
      8302**DCL      8328>>CALLBLT
CHAR50
       242**DCL      8183>>ASSIGN   8251>>ASSIGN
CHAR7 IN PROCEDURE FIND_PRINT_ITEMS
      7835**DCL      7882>>IF
CHAR7 IN PROCEDURE IT_OUTPUT
      8145**DCL      8257>>IF
CHAR_SET IN PROCEDURE OCTAL_PRINT
      8360**DCL      8395>>ASSIGN
CHK_KEY
       249**DCL      7182>>IF       7183<<ASSIGN   7434>>ASSIGN
CHK_SUM
      5907**DCL      7514<<ASSIGN
CNT
      5565**DCL      6655<<ASSIGN   6659>>ASSIGN   6662>>ASSIGN   6662>>ASSIGN   6664<<ASSIGN   6664>>ASSIGN
      6671>>IF       6675>>CALLBLT
CNT IN PROCEDURE OCTAL_PRINT
      8364**DCL      8374<<DOINDEX  8375>>IF       8375>>IF       8376>>IF       8390>>ASSIGN   8392>>ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:453  
CNTER IN PROCEDURE READ_PAGE
      7558**DCL      7587<<DOINDEX  7592>>ASSIGN
CNT_FLG IN PROCEDURE UNPAK
      8294**DCL      8295--REDEF    8316<<ASSIGN   8319<<ASSIGN   8333<<ASSIGN   8333>>ASSIGN
COMP_HALF IN PROCEDURE ALTK_PRNT
      6164**DCL      6279<<ASSIGN
COMP_HALF IN PROCEDURE CALC_PRNT
      6557**DCL      6725<<ASSIGN
COMP_WORD IN PROCEDURE ALTK_PRNT
      6163**DCL      6266<<ASSIGN   6274<<ASSIGN
COMP_WORD IN PROCEDURE CALC_PRNT
      6558**DCL      6714<<ASSIGN   6722<<ASSIGN
COUNT IN PROCEDURE OCTAL_PRINT
      8358**DCL      8356--PROC     8372>>IF       8372<<ASSIGN   8374>>DOINDEX
COUNTSF
      5542**DCL      5543--REDEF    6430<<ASSIGN   6435<<ASSIGN
CURR_REC
       234**DCL      7201>>DOWHILE  7722<<ASSIGN   7775>>ASSIGN   7792>>IF       8104>>ASSIGN   8131>>IF
C_V IN PROCEDURE GET_GROUP
      7870**DCL      7876>>CALLBLT
DATA$
      5249**DCL      5250--IMP-PTR  6093<<ASSIGN   6094>>IF       6100>>IF       6118>>CALL     6862<<ASSIGN
      6863>>ASSIGN   6863>>ASSIGN   6895<<ASSIGN   6898>>ASSIGN   6898>>ASSIGN   7186<<ASSIGN   7232<<ASSIGN
      7234>>ASSIGN   7354>>ASSIGN   7357>>CALLBLT  7358>>CALLBLT  7359>>CALLBLT  7360>>IF       7360>>IF
      7364>>CALLBLT  7366>>CALLBLT  7367>>CALLBLT  7367>>CALLBLT  7396>>IF       7396>>IF       7396>>IF
      7438>>IF       7440>>IF       7441>>ASSIGN   7445>>IF       7447>>ASSIGN   7447>>ASSIGN   7448>>CALLBLT
      7450>>CALLBLT  7597<<ASSIGN   7645--IMP-PTR  7651>>ASSIGN   7664>>ASSIGN   7665>>ASSIGN   7735>>CALLBLT
DATAPG_PRNT
      7340**PROC     6118--CALL     7189--CALL     7237--CALL
DATA_PG.ACT_DATA
      5262**DCL      5263--REDEF    5264--REDEF    5265--REDEF
DATA_PG.ACT_DATA_18
      5263**DCL      6863>>ASSIGN   6898>>ASSIGN   7360>>IF       7396>>IF       7396>>IF       7445>>IF
      7447>>ASSIGN
DATA_PG.CHKSUM_WD
      5254**DCL      7358>>CALLBLT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:454  
DATA_PG.CON_INTRVAL
      5258**DCL      6094>>IF       6100>>IF       7366>>CALLBLT  7448>>CALLBLT  7450>>CALLBLT  7735>>CALLBLT
DATA_PG.OFF_LN.FIR
      5260**DCL      7360>>IF       7364>>CALLBLT
DATA_PG.OFF_LN.SEC
      5261**DCL      6118<>CALL     7234>>ASSIGN   7359>>CALLBLT  7396>>IF       7438>>IF       7440>>IF
      7441>>ASSIGN   7651>>ASSIGN
DATA_PG.PG_SZ.FIR
      5256**DCL      7367>>CALLBLT
DATA_PG.PG_SZ.SEC
      5257**DCL      7357>>CALLBLT  7367>>CALLBLT
DATA_PG.SYS_WRDS.DATE
      5253**DCL      7354--ASSIGN
DATESF
      5495**DCL      7063<<ASSIGN   7351<<ASSIGN   8426<<ASSIGN
DBKY IN PROCEDURE ALTK_PRNT
      6153**DCL      6154--REDEF    6242<<ASSIGN   6440>>ASSIGN   6441>>ASSIGN
DB_FUNC_FDR
       300**DCL-ENT  5963--CALL     5978--CALL     6176--CALL     7753--CALL     8013--CALL
DB_FUNC_FOR
       303**DCL-ENT  6182--CALL     6196--CALL     6973--CALL     6992--CALL     7893--CALL     7926--CALL
      7927--CALL     7943--CALL     8014--CALL     8017--CALL     8020--CALL
DB_FUNC_FRS
       299**DCL-ENT  6177--CALL     6190--CALL     6193--CALL     6202--CALL     6204--CALL     6971--CALL
      7756--CALL     7886--CALL     7914--CALL     7922--CALL     7994--CALL
DB_FUNC_GET
       301**DCL-ENT  6179--CALL     6183--CALL     6194--CALL     6197--CALL     6972--CALL     6974--CALL
      6993--CALL     7758--CALL     7889--CALL     7894--CALL     7917--CALL     7928--CALL     7944--CALL
      7996--CALL     8015--CALL     8018--CALL     8021--CALL
DCBNMSF
      5523**DCL      6227<<ASSIGN
DCBSF
      5471**DCL      5953<<ASSIGN   6007<<ASSIGN   6015<<ASSIGN   6075<<ASSIGN   6224--ASSIGN   6229>>ASSIGN
      6428<<ASSIGN   6461<<ASSIGN   6462--IF       6469<<ASSIGN   6470--IF       6978<<ASSIGN   7083<<ASSIGN
      7146<<ASSIGN   7256<<ASSIGN   7269<<ASSIGN   7343<<ASSIGN   7490<<ASSIGN   7491--ASSIGN   7560<<ASSIGN
      7653--ASSIGN   8418<<ASSIGN   8506<<ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:455  
DESTSF
      5494**DCL      7062<<ASSIGN   7353<<ASSIGN   8429<<ASSIGN
DIGIT IN PROCEDURE UNPAK
      8305**DCL      8327>>ASSIGN   8342>>IF
DONE
       282**DCL      6032<<ASSIGN   6035<>CALL     6084>>DOWHILE  6122<>CALL     6976<<ASSIGN   6977>>DOWHILE
      6997<<ASSIGN
DOUBLE
       269**DCL      6401<>CALL     6406>>ASSIGN   6821<>CALL     6826>>ASSIGN   8222<<ASSIGN   8223<>CALL
DUMP_FILE
       286**DCL      7494<<ASSIGN   7584>>IF       7613>>IF
EIS IN PROCEDURE FIND_POINTER
      7799**DCL      7797--PROC     7802--ASSIGN
EIS$
       225**DCL       204--IMP-PTR   211--IMP-PTR   219--IMP-PTR  7802<<ASSIGN   7803>>ASSIGN   7804>>ASSIGN
      7805>>ASSIGN   8065<<ASSIGN   8066>>ASSIGN   8146<<ASSIGN   8147>>ASSIGN   8150>>ASSIGN   8171>>CALLBLT
      8173>>CALL     8176>>CALLBLT  8178>>CALL     8181>>CALLBLT  8183>>ASSIGN   8184>>ASSIGN   8187>>CALLBLT
      8189>>ASSIGN   8191>>ASSIGN   8246<<ASSIGN   8247>>ASSIGN   8248>>ASSIGN   8249>>CALLBLT  8251>>ASSIGN
      8252>>ASSIGN   8312>>DOCASE
EISNXT IN PROCEDURE CALC_PRNT
      6560**DCL      6561--REDEF    6877<<ASSIGN
ELN#
       227**DCL      7176<<ASSIGN   7236>>ASSIGN
ENCRP_SEEDSF
      5500**DCL      5501--REDEF    6982<<ASSIGN   7579<<ASSIGN
END_ZIU$Q2PR
      8504**LABEL    6031--REMEMBR
ENTRY$
      5908**DCL      7826--IMP-PTR  8042<<ASSIGN   8055>>CALL     8056>>IF       8066>>ASSIGN   8072>>IF
      8079>>DOWHILE  8083<<ASSIGN   8083>>ASSIGN
ENTRY_INDX IN PROCEDURE FIND_PRINT_ITEMS
      7862**DCL      8051<<DOINDEX  8052>>CALLBLT
EOS_1 IN PROCEDURE FIND_PRINT_ITEMS
      8001**LABEL    7995--GOTO
ERRCODESF
      5502**DCL      5507--REDEF
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:456  
ERRCODESF.ERR#
      5505**DCL      6019<<ASSIGN   6045<<ASSIGN   6059<<ASSIGN   6214<<ASSIGN   6300<<ASSIGN   6332<<ASSIGN
      6360<<ASSIGN   6378<<ASSIGN   6417<<ASSIGN   6456<<ASSIGN   6589<<ASSIGN   6604<<ASSIGN   6617<<ASSIGN
      6643<<ASSIGN   6679<<ASSIGN   6781<<ASSIGN   6799<<ASSIGN   6833<<ASSIGN   6930<<ASSIGN   6945<<ASSIGN
      7165<<ASSIGN   7193<<ASSIGN   7195<<ASSIGN   7205<<ASSIGN   7209>>IF       7288<<ASSIGN   7318<<ASSIGN
      7324>>IF       7424<<ASSIGN   7427<<ASSIGN   7502<<ASSIGN   7518<<ASSIGN   7571<<ASSIGN   7602<<ASSIGN
      7714<<ASSIGN
ERRCODE_RDEF
      5507**DCL      6020>>ASSIGN   6046>>ASSIGN   6060>>ASSIGN   6215>>ASSIGN   6301>>ASSIGN   6333>>ASSIGN
      6361>>ASSIGN   6379>>ASSIGN   6418>>ASSIGN   6457>>ASSIGN   6590>>ASSIGN   6605>>ASSIGN   6618>>ASSIGN
      6644>>ASSIGN   6680>>ASSIGN   6782>>ASSIGN   6800>>ASSIGN   6834>>ASSIGN   6931>>ASSIGN   6946>>ASSIGN
      7167>>ASSIGN   7212>>ASSIGN   7319>>ASSIGN   7429>>ASSIGN   7503>>ASSIGN   7519>>ASSIGN   7573>>ASSIGN
      7604>>ASSIGN   7716>>ASSIGN
ERRFLGSF
      5531**DCL      7166<<ASSIGN   7211<<ASSIGN   7428<<ASSIGN   7572<<ASSIGN   7603<<ASSIGN   7715<<ASSIGN
ERR_CD IN PROCEDURE CALC_PRNT
      6527**DCL      6631<>CALL     6638>>IF
ERR_INSERT.CNT
      5516**DCL      6212<<ASSIGN   6298<<ASSIGN   6330<<ASSIGN   6358<<ASSIGN   6415<<ASSIGN   6453<<ASSIGN
      6602<<ASSIGN   6615<<ASSIGN   6641<<ASSIGN   6779<<ASSIGN   6831<<ASSIGN   6944<<ASSIGN   7316<<ASSIGN
      7409<<ASSIGN   7413<<ASSIGN   7423<<ASSIGN   7713<<ASSIGN
ERR_INSERT.TEXT
      5517**DCL      6213<<ASSIGN   6299<<ASSIGN   6331<<ASSIGN   6359<<ASSIGN   6416<<ASSIGN   6455<<ASSIGN
      6603<<ASSIGN   6616<<ASSIGN   6642<<ASSIGN   6675<<CALLBLT  6676<>CALL     6677<<CALLBLT  6678<>CALL
      6780<<ASSIGN   6832<<ASSIGN   6926<<CALLBLT  6927<>CALL     6928<<CALLBLT  6929<>CALL     6943<<ASSIGN
      7317<<ASSIGN   7410<<ASSIGN   7414<<ASSIGN   7416<<CALLBLT  7417<>CALL     7420<<CALLBLT  7421<>CALL
      7422>>CALLBLT  7605<<CALLBLT  7606<>CALL     7711<<ASSIGN
EXCTN_REPRT_SETUP
       304**DCL-ENT  6106--CALL
EXECUTION_OUTPUT
       305**DCL-ENT  6107--CALL
EXIT_RTN
      6074**LABEL    5982--GOTO     5987--GOTO
EXPAND_PAGE
      7632**PROC     7611--CALL
EXPO IN PROCEDURE ALTK_PRNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:457  
      6171**DCL      6254<<ASSIGN   6256<<ASSIGN   6256>>ASSIGN   6258>>ASSIGN
EXPO IN PROCEDURE CALC_PRNT
      6582**DCL      6708<<ASSIGN   6710<<ASSIGN   6710>>ASSIGN   6712>>ASSIGN
EX_ITDATA
       177**DCL      8271--ASSIGN   8283--ASSIGN
EX_ITDATA.DATA
       180**DCL      8268<<ASSIGN   8270<<ASSIGN   8278<<ASSIGN   8280<>CALL
F$DCB.ACTPOS
      1210**DCL      1210--REDEF
F$DCB.ARS#
      1184**DCL      1184--REDEF    7653>>ASSIGN
F$DCB.ATTR
      1203**DCL      1204--REDEF
F$DCB.BORROW
      1218**DCL      1218--REDEF    1218--REDEF    1218--REDEF
F$DCB.DCBNAME.L
      1232**DCL      1232--IMP-SIZ
F$DCB.EOMCHAR#
      1188**DCL      1188--REDEF
F$DCB.FCD#
      1197**DCL      6462>>IF       6470>>IF
F$DCB.FLDID
      1213**DCL      1213--REDEF
F$DCB.FORM$
      1207**DCL      1207--REDEF
F$DCB.FSECT
      1223**DCL      1223--REDEF
F$DCB.FSN#
      1200**DCL      1200--REDEF    1200--REDEF    1201--REDEF
F$DCB.HEADER$
      1206**DCL      1206--REDEF
F$DCB.IXTNSIZE#
      1204**DCL      1204--REDEF
F$DCB.LASTSTA$
      1193**DCL      1193--REDEF
F$DCB.LVL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:458  
      1219**DCL      1219--REDEF
F$DCB.NAME#
      1194**DCL      6224>>ASSIGN
F$DCB.NAME#.C
      1194**DCL      1194--REDEF
F$DCB.NOEOF
      1216**DCL      1216--REDEF
F$DCB.NRECS#
      1205**DCL      1205--REDEF
F$DCB.NRECX
      1224**DCL      1224--REDEF
F$DCB.OHDR
      1216**DCL      1216--REDEF
F$DCB.ORG#
      1199**DCL      1199--REDEF    7491>>ASSIGN
F$DCB.PRECNO
      1222**DCL      1222--REDEF
F$DCB.RCSZ
      1228**DCL      1228--REDEF
F$DCB.RES#
      1195**DCL      1195--REDEF
F$DCB.SETX
      1207**DCL      1207--REDEF
F$DCB.TAB$
      1207**DCL      1207--REDEF
F$DCB.TDA
      1221**DCL      1222--REDEF
F$DCB.WSN#
      1195**DCL      1195--REDEF
FIDSF
      5519**DCL      5958<<ASSIGN   6239<<ASSIGN   7150<<ASSIGN
FIDSF_RD
      5518**DCL      5519--REDEF
FIL IN PROCEDURE EXPAND_PAGE
      7642**DCL      7674<<ASSIGN   7674>>ASSIGN
FIL_SIZE IN PROCEDURE EXPAND_PAGE
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:459  
      7643**DCL      7642--IMP-SIZ  7671<<ASSIGN   7674>>ASSIGN   7674>>ASSIGN
FIND_MSTR_ENTRY
       311**DCL-ENT  7192--CALL
FIND_NEXT_ITEM IN PROCEDURE FIND_PRINT_ITEMS
      7886**LABEL    7908--GOTO
FIND_POINTER
      7797**PROC     7785--CALL     7786--CALL     7787--CALL
FIND_PRINT_ITEMS
      7813**PROC     6990--CALL     7466--CALL
FIND_PRINT_SETS
      7770**PROC     7468--CALL     7471--CALL
FIND_REC
      7699**PROC     7453--CALL
FLAG IN PROCEDURE ALTK_PRNT
      6165**DCL      6366<<ASSIGN   6371<<ASSIGN   6392>>IF
FLAG IN PROCEDURE CALC_PRNT
      6578**DCL      6787<<ASSIGN   6792<<ASSIGN   6812>>IF       6873<<ASSIGN   6874>>DOWHILE  6875<<ASSIGN
FOLLOW_SET IN PROCEDURE KEY_PRNT
      7124**LABEL    7219--GOTO
FOUND_AREA IN PROCEDURE KEY_PRNT
      7113**DCL      7138<<ASSIGN   7154<>CALL     7157<<ASSIGN   7160>>IF
FREC IN PROCEDURE DATAPG_PRNT
      7394**LABEL    7350--GOTO
FREC_END IN PROCEDURE DATAPG_PRNT
      7473**LABEL    7456--GOTO
FREIS
      5929**DCL      5930--REDEF    6199<<ASSIGN   6743<<ASSIGN   6769<<ASSIGN
FREIS$
      5928**DCL      6309<<ASSIGN   6346<<ASSIGN   6744<<ASSIGN   6770<<ASSIGN
FREIS_RDEF.SIZE
      5932**DCL      6294>>IF       6326>>IF
FROM$ IN PROCEDURE EXPAND_PAGE
      7637**DCL      7638--IMP-PTR  7665<<ASSIGN   7667>>CALL     7672>>ASSIGN   7673<<ASSIGN   7674>>ASSIGN
FROMSTR IN PROCEDURE EXPAND_PAGE
      7638**DCL      7667<>CALL
FR_SAVE.FEIS IN PROCEDURE FIND_PRINT_ITEMS
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:460  
      7866**DCL      7998<<ASSIGN   8065--ASSIGN
FR_SAVE.FRFRH IN PROCEDURE FIND_PRINT_ITEMS
      7867**DCL      7999<<ASSIGN   8013<>CALL     8019<<ASSIGN
FR_SAVE.FTYP IN PROCEDURE FIND_PRINT_ITEMS
      7865**DCL      7997<<ASSIGN   8067>>ASSIGN
FULLSF
      5489**DCL      7577<<ASSIGN
FUNSF
      5482**DCL      5950<<ASSIGN   6232<<ASSIGN
GET_ATBLK_INFO
      7482**PROC     5989--CALL     7037--CALL
GET_GROUP IN PROCEDURE FIND_PRINT_ITEMS
      7868**PROC     8073--CALL     8080--CALL
GET_LINE IN PROCEDURE INVPG_PRNT
      8482**PROC     8462--CALL     8472--CALL
GET_NXT_AC
       312**DCL-ENT  5968--CALL     7154--CALL
GET_POINTER
      7678**PROC     7728--CALL     7732--CALL     7806--CALL     7872--CALL     8055--CALL
GLBL_PTR_SZ
       531**DCL      7728<>CALL     7731>>ASSIGN   7732<>CALL
GROUP$
      5909**DCL      7831--IMP-PTR  7872>>CALL     7878<<ASSIGN   7878>>ASSIGN   8060<<ASSIGN   8061>>ASSIGN
HELPCODE
      5536**DCL      5541--REDEF
HIGH_LINE IN PROCEDURE EXPAND_PAGE
      7633**DCL      7651<<ASSIGN   7652>>ASSIGN
I
      5574**DCL      6220<<CALLBLT  6221>>CALLBLT  6222>>ASSIGN   6454<<CALLBLT  6455>>ASSIGN   7140<<DOINDEX
      7142>>IF       7149>>ASSIGN   7150>>ASSIGN   7156<<ASSIGN   7442<<DOINDEX  7445>>IF       7447>>ASSIGN
      7449>>CALLBLT  7450>>CALLBLT  7735>>CALLBLT  8452<<ASSIGN   8453>>IF       8456>>ASSIGN   8486>>DOINDEX
      8487>>ASSIGN   8496<<ASSIGN
I IN PROCEDURE CALC_PRNT
      6581**DCL      6628<<DOINDEX  6629>>ASSIGN   6651<<DOINDEX  6652>>ASSIGN   6654<<ASSIGN   6657>>CALLBLT
      6660<<ASSIGN   6661>>CALLBLT  6663<<ASSIGN   6665>>CALLBLT  6692<<ASSIGN   6693>>DOCASE   6695>>ASSIGN
      6697>>ASSIGN   6697>>ASSIGN   6699>>ASSIGN   6699>>ASSIGN   6709<<DOINDEX  6719>>DOCASE   6743>>ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:461  
      6769>>ASSIGN   6813>>IF       6849<<ASSIGN   6850>>DOCASE   6852>>ASSIGN   6852>>ASSIGN   6854>>ASSIGN
      6854>>ASSIGN   6854>>ASSIGN   6856>>ASSIGN   6856>>ASSIGN   6856>>ASSIGN   6908<<ASSIGN   6909>>IF
      6909>>IF       6909>>IF       6909>>IF       6928>>CALLBLT
I IN PROCEDURE OCTAL_PRINT
      8365**DCL      8373<<ASSIGN   8378>>ASSIGN   8379<<ASSIGN   8379>>ASSIGN   8382>>ASSIGN   8383<<ASSIGN
      8383>>ASSIGN   8393>>ASSIGN   8394<<DOINDEX  8394>>DOINDEX  8395>>ASSIGN
I IN PROCEDURE UNPAK
      8293**DCL      8326<<DOINDEX  8328>>CALLBLT  8341<<ASSIGN   8341>>ASSIGN   8343>>CALLBLT  8345>>CALLBLT
ICHKSUM
      5601**DCL      5602--REDEF
INCR.FLAG IN PROCEDURE UNPAK
      8297**DCL      8329>>IF       8337>>IF
INDEX_PRINT
      6962**PROC     5986--CALL
INDX
       250**DCL      6211<<CALLBLT  6212>>ASSIGN   6222<<ASSIGN   6249>>ASSIGN   6250>>DOINDEX  6264>>CALLBLT
      6264>>CALLBLT  6264>>CALLBLT  6265>>CALLBLT  6273>>CALLBLT  6278>>CALLBLT  6283>>IF       6285>>ASSIGN
      6286>>ASSIGN   6287>>CALLBLT  6292>>ASSIGN   6298>>ASSIGN   6315>>IF       6317>>ASSIGN   6318>>ASSIGN
      6319>>CALLBLT  6324>>ASSIGN   6330>>ASSIGN   6357<<CALLBLT  6358>>ASSIGN   6374>>IF       6385>>CALLBLT
      6389>>CALLBLT  6390>>CALLBLT  6414<<CALLBLT  6415>>ASSIGN   6453>>ASSIGN   6455>>ASSIGN   6601<<CALLBLT
      6602>>ASSIGN   6614<<CALLBLT  6615>>ASSIGN   6640<<CALLBLT  6641>>ASSIGN   6656<<ASSIGN   6657<<CALLBLT
      6658>>DOWHILE  6659>>ASSIGN   6660>>ASSIGN   6661<<CALLBLT  6662>>ASSIGN   6663>>ASSIGN   6665<<CALLBLT
      6865<<ASSIGN   6874>>DOWHILE  6935<<ASSIGN   6936>>ASSIGN   6942>>CALLBLT  6943>>ASSIGN   7315<<CALLBLT
      7316>>ASSIGN   7422<<CALLBLT  7423>>ASSIGN
INDX IN PROCEDURE FIND_PRINT_ITEMS
      7857**DCL      7945<<CALLBLT  7946>>CALLBLT  7947>>ASSIGN   8012<<DOINDEX  8013>>CALL     8019>>ASSIGN
      8033>>IF       8064<<DOINDEX  8065>>ASSIGN   8067>>ASSIGN
IND_HDR IN PROCEDURE INDEX_PRINT
      6963**DCL      6985--ASSIGN
IND_HDR.REC IN PROCEDURE INDEX_PRINT
      6965**DCL      6975<<ASSIGN
INEIS.CN
      5935**DCL      6306<<ASSIGN   6338<<ASSIGN   6740<<ASSIGN   6761<<ASSIGN
INEIS.EISADDR
      5934**DCL      6305<<ASSIGN   6337<<ASSIGN   6739<<ASSIGN   6760<<ASSIGN
INEIS.SCAL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:462  
      5938**DCL      6285<<ASSIGN   6291<<ASSIGN   6317<<ASSIGN   6323<<ASSIGN   6730<<ASSIGN   6735<<ASSIGN
      6751<<ASSIGN   6756<<ASSIGN
INEIS.SIGN
      5937**DCL      6308<<ASSIGN   6340<<ASSIGN   6742<<ASSIGN   6763<<ASSIGN
INEIS.SIZE
      5939**DCL      6286<<ASSIGN   6292<<ASSIGN   6294>>IF       6318<<ASSIGN   6324<<ASSIGN   6326>>IF
      6344<<ASSIGN   6344>>ASSIGN   6731<<ASSIGN   6736<<ASSIGN   6752<<ASSIGN   6757<<ASSIGN   6767<<ASSIGN
      6767>>ASSIGN
INEIS.TN
      5936**DCL      6307<<ASSIGN   6339<<ASSIGN   6741<<ASSIGN   6762<<ASSIGN
INVPG$
      5268**DCL      5269--IMP-PTR  6004<<ASSIGN   6097<<ASSIGN   8420>>CALLBLT  8430>>ASSIGN   8487>>ASSIGN
INVPGNO
       257**DCL      8447<<ASSIGN   8448>>ASSIGN   8448>>ASSIGN   8452>>ASSIGN   8461<<ASSIGN   8466<<ASSIGN
      8473<<ASSIGN   8473>>ASSIGN   8487>>ASSIGN
INVPG_PRNT
      8406**PROC     6005--CALL     6098--CALL
INVTCT
       256**DCL      8448<<ASSIGN   8449>>CALLBLT  8451>>ASSIGN   8452>>ASSIGN   8453>>IF       8456>>ASSIGN
      8466>>ASSIGN   8467<<ASSIGN   8467>>ASSIGN   8469<<DOINDEX  8469>>DOINDEX  8470>>ASSIGN
INV_HDR IN PROCEDURE INVPG_PRNT
      8407**DCL      8435--ASSIGN   8436--ASSIGN
INV_HDR.DTSP IN PROCEDURE INVPG_PRNT
      8410**DCL      8426--ASSIGN
INV_HDR.INIT_VAL IN PROCEDURE INVPG_PRNT
      8417**DCL      8432<<CALLBLT  8433<>CALL
INV_HDR.TMSP IN PROCEDURE INVPG_PRNT
      8413**DCL      8427--ASSIGN
INV_HDR.TMSP.SS IN PROCEDURE INVPG_PRNT
      8415**DCL      8434<<ASSIGN
INV_PG.CI_NO
      5277**DCL      8420>>CALLBLT
INV_PG.INVENT_CT
      5281**DCL      8487>>ASSIGN
INV_PG.SYS_WRDS.DATE
      5272**DCL      8430--ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:463  
INV_PG_HDR
       199**DCL      8438--ASSIGN
INV_PRLN.LNBR
       190**DCL      8451<<ASSIGN   8474<<ASSIGN   8474>>ASSIGN   8475>>CALLBLT
INV_PRLN.P_LINE.PRLN
       192**DCL      8488<<ASSIGN   8489>>CALLBLT
INV_P_LINE
       193**DCL      8463--ASSIGN
INV_P_LINE.LNBR
       195**DCL      8449<<CALLBLT  8450<>CALL     8475<<CALLBLT  8476<>CALL
INV_P_LINE.P_LINE.FIL
       197**DCL      8443<<ASSIGN
INV_P_LINE.P_LINE.PLN
       198**DCL      8444<<ASSIGN   8489<<CALLBLT  8490<>CALL     8494<<ASSIGN
INV_TEMP
       258**DCL      8487<<ASSIGN   8488>>ASSIGN
ITEM
       162**DCL      8258--ASSIGN   8259--ASSIGN
ITEM.KEY_TYPE
       171**DCL      7911<<ASSIGN   7920<<CALLBLT  7946<<CALLBLT  7948<<CALLBLT  7953>>IF       7954<<ASSIGN
      7956<<CALLBLT
ITEM.NAME
       165**DCL      7910<<ASSIGN
ITEM.SZ
       169**DCL      8156<<ASSIGN   8161<<ASSIGN   8166<<ASSIGN   8171<<CALLBLT  8172<>CALL     8176<<CALLBLT
      8177<>CALL     8181<<CALLBLT  8182<>CALL     8187<<CALLBLT  8188<>CALL     8194<<ASSIGN   8220<<ASSIGN
      8249<<CALLBLT  8250<>CALL     8255<<ASSIGN
ITEM.TYPE
       167**DCL      8155<<ASSIGN   8160<<ASSIGN   8165<<ASSIGN   8170<<ASSIGN   8175<<ASSIGN   8180<<ASSIGN
      8186<<ASSIGN   8193<<ASSIGN   8219<<ASSIGN   8245<<ASSIGN   8254<<ASSIGN
ITEM IN PROCEDURE CALC_PRNT
      6499**DCL      6631<>CALL     6846<>CALL
ITEM.EIS IN PROCEDURE CALC_PRNT
      6505**DCL      6743>>ASSIGN   6769>>ASSIGN
ITEM.LEN IN PROCEDURE CALC_PRNT
      6502**DCL      6695>>ASSIGN   6697>>ASSIGN   6697>>ASSIGN   6852<<ASSIGN   6852>>ASSIGN   6854<<ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:464  
      6854>>ASSIGN   6854>>ASSIGN   6909>>IF       6909>>IF
ITEM.OFFSET IN PROCEDURE CALC_PRNT
      6501**DCL      6699>>ASSIGN   6699>>ASSIGN   6856<<ASSIGN   6856>>ASSIGN   6856>>ASSIGN   6909>>IF
      6909>>IF
ITEM.TYPE IN PROCEDURE CALC_PRNT
      6503**DCL      6693>>DOCASE   6719>>DOCASE   6813>>IF       6850>>DOCASE
ITEM$
       241**DCL       242--IMP-PTR   243--IMP-PTR   244--IMP-PTR  8066<<ASSIGN   8147<<ASSIGN   8150<<ASSIGN
      8150>>ASSIGN   8157>>CALLBLT  8162>>CALLBLT  8167>>CALLBLT  8173<>CALL     8178<>CALL     8183>>ASSIGN
      8190<>CALL     8196>>ASSIGN   8222>>ASSIGN   8246>>ASSIGN   8247<<ASSIGN   8248<<ASSIGN   8248>>ASSIGN
      8251>>ASSIGN   8269<<ASSIGN   8269>>ASSIGN   8270>>ASSIGN   8280<>CALL
ITEM_LIST.NAME
      5903**DCL      7904>>DOWHILE
ITEM_LIST.TYPE
      5904**DCL      7330<<ASSIGN   7330>>ASSIGN   7904>>DOWHILE
ITEM_LN
       247**DCL      8152<<ASSIGN   8184<<ASSIGN   8189<<ASSIGN   8190<>CALL     8191<<ASSIGN   8252<<ASSIGN
      8264>>ASSIGN   8277>>DOWHILE  8279>>ASSIGN   8281<<ASSIGN   8281>>ASSIGN
ITEM_NMS IN PROCEDURE CALC_PRNT
      6518**DCL      6631<>CALL
ITMCNT
      5603**DCL      7329>>DOINDEX  7465>>IF       7901>>IF       7904>>DOWHILE  7908>>IF
IT_HDR
       172**DCL      8261--ASSIGN
IT_HDR.DATA
       176**DCL      8069>>ASSIGN   8151<<ASSIGN   8157<<CALLBLT  8158<>CALL     8162<<CALLBLT  8163<>CALL
      8167<<CALLBLT  8168<>CALL     8173<>CALL     8178<>CALL     8183<<ASSIGN   8190<>CALL     8203<>CALL
      8203--CALL     8213--ASSIGN   8229<>CALL     8229--CALL     8239--ASSIGN   8251<<ASSIGN
IT_OUTPUT
      8144**PROC     7961--CALL
IXID IN PROCEDURE ALTK_PRNT
      6151**DCL      6187<<ASSIGN   6423>>ASSIGN   6436>>DOWHILE
I_O_BUF
      5580**DCL      6004--ASSIGN   6093--ASSIGN   6097--ASSIGN   6105--ASSIGN   6862--ASSIGN   6895--ASSIGN
      6979--ASSIGN   6989--ASSIGN   7186--ASSIGN   7232--ASSIGN   7492--ASSIGN   7561--ASSIGN   7594--ASSIGN
      7597--ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:465  
I_O_BUF$
      5579**DCL      5580--IMP-PTR  6004>>ASSIGN   6093>>ASSIGN   6097>>ASSIGN   6105>>ASSIGN   6862>>ASSIGN
      6895>>ASSIGN   6979>>ASSIGN   6989>>ASSIGN   7186>>ASSIGN   7232>>ASSIGN   7492>>ASSIGN   7561>>ASSIGN
      7594>>ASSIGN   7597>>ASSIGN
I_O_BUFF IN PROCEDURE EXPAND_PAGE
      7645**DCL      7664--ASSIGN   7665--ASSIGN
I_O_INDX
       248**DCL      7582<<ASSIGN   7591<<ASSIGN   7591>>ASSIGN   7594>>ASSIGN   7597>>ASSIGN   7608<<ASSIGN
      7608>>ASSIGN   7614>>ASSIGN   7615>>ASSIGN
I_O_SIZE
      5582**DCL      6001<<ASSIGN   6034<<ASSIGN   6035<>CALL     6122<>CALL     6859<<ASSIGN   6893<<ASSIGN
      6988>>DOWHILE  7184<<ASSIGN   7224>>IF       7226<<ASSIGN   7227>>IF       7228<<ASSIGN   7512<<ASSIGN
      7562>>ASSIGN   7566>>IF       7587>>DOINDEX  7614>>ASSIGN   7615<<ASSIGN
J
      5575**DCL      6221<<CALLBLT  6222>>ASSIGN   6250<<DOINDEX  6260<<ASSIGN   6265<<CALLBLT  6266>>ASSIGN
      6273<<CALLBLT  6274>>ASSIGN   6278<<CALLBLT  6279>>ASSIGN   6282<<CALLBLT  6283>>IF       6285>>ASSIGN
      6287>>CALLBLT  6287>>CALLBLT  6287>>CALLBLT  6314<<CALLBLT  6315>>IF       6317>>ASSIGN   6319>>CALLBLT
      6319>>CALLBLT  6319>>CALLBLT  6705<<DOINDEX  6716<<ASSIGN   6721<<CALLBLT  6722>>ASSIGN   6724<<CALLBLT
      6725>>ASSIGN   6727<<CALLBLT  6728>>IF       6730>>ASSIGN   6732>>CALLBLT  6732>>CALLBLT  6732>>CALLBLT
      6748<<CALLBLT  6749>>IF       6751>>ASSIGN   6753>>CALLBLT  6753>>CALLBLT  6753>>CALLBLT  8458<<ASSIGN
      8460<<ASSIGN   8470<<ASSIGN   8471>>IF       8471<<ASSIGN   8486>>DOINDEX  8492>>IF       8493>>DOINDEX
K
      5576**DCL      6253<<CALLBLT  6258>>ASSIGN   6707<<CALLBLT  6712>>ASSIGN   7120<<DOINDEX  7121>>ASSIGN
      7122>>ASSIGN   8454<<ASSIGN   8456<<ASSIGN   8457>>IF       8460>>ASSIGN   8469>>DOINDEX  8470>>ASSIGN
KB
       253**DCL      7121<<ASSIGN   7126<<ASSIGN   7126>>ASSIGN   7130>>IF       7134>>IF       7134>>IF
      7142>>IF       7173>>ASSIGN   7175>>ASSIGN   7182>>IF       7183>>ASSIGN   7218>>ASSIGN   7416>>CALLBLT
      7420>>CALLBLT  7434<<ASSIGN   7730<<ASSIGN   7789<<ASSIGN
KCNT
      5572**DCL      6043>>IF       6054>>IF       6068>>IF       6426<<ASSIGN   6439<<ASSIGN   6439>>ASSIGN
      6440>>ASSIGN   6441>>ASSIGN   6448>>IF       6871<<ASSIGN   6918<<ASSIGN   6918>>ASSIGN   6919>>ASSIGN
      6920>>ASSIGN   7120>>DOINDEX  7286>>IF
KE
       254**DCL      7122<<ASSIGN   7127<<ASSIGN   7127>>ASSIGN   7130>>IF       7134>>IF       7134>>IF
      7174>>ASSIGN   7176>>ASSIGN   7218<<ASSIGN
KEY$ IN PROCEDURE ALTK_PRNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:466  
      6157**DCL      6246<<ASSIGN   6252<<ASSIGN   6252>>ASSIGN   6253>>CALLBLT  6261<<ASSIGN   6266>>ASSIGN
      6272<<ASSIGN   6274>>ASSIGN   6277<<ASSIGN   6279>>ASSIGN   6391<<ASSIGN   6399>>ASSIGN   6406>>ASSIGN
KEY$ IN PROCEDURE CALC_PRNT
      6548**DCL      6701<<ASSIGN   6702<<ASSIGN   6702>>ASSIGN   6707>>CALLBLT  6713<<ASSIGN   6713>>ASSIGN
KEYFID.DCB#
      5597**DCL      6229<<ASSIGN   6428>>ASSIGN   6461>>ASSIGN   6469>>ASSIGN
KEYFID.NM
      5594**DCL      6224<<ASSIGN   6227--ASSIGN
KEYFID.NM.CNT
      5595**DCL      6225>>CALLBLT  6226<<ASSIGN   6226>>ASSIGN
KEYFID.NM.TEXT
      5596**DCL      6225<<CALLBLT  6239>>ASSIGN
KEYSF
      5473**DCL      6981<<ASSIGN   7578<<ASSIGN   7593<<ASSIGN
KEYVSF
      5474**DCL      5479--REDEF    6429<<ASSIGN   6432>>ASSIGN   6443>>ASSIGN
KEYVSF.IDSKEY
      5477**DCL      7581<<ASSIGN   7592<<ASSIGN   7605>>CALLBLT  7622>>ASSIGN
KEYVSF.LEN
      5475**DCL      6436>>DOWHILE  7580<<ASSIGN
KEYVSF.WD_ONE
      5476**DCL      5477--REDEF
KEY_ARRAY IN PROCEDURE CALC_PRNT
      6515**DCL      6631<>CALL     6846<>CALL
KEY_ARRAY.MEMBER IN PROCEDURE CALC_PRNT
      6517**DCL      6629<<ASSIGN   6638>>IF       6692>>ASSIGN   6849>>ASSIGN   6908>>ASSIGN
KEY_ARRAY.SIZ IN PROCEDURE CALC_PRNT
      6516**DCL      6671>>IF       6677>>CALLBLT  6691>>DOINDEX  6848>>DOINDEX  6907>>DOINDEX  6913>>ASSIGN
KEY_PRNT
      7112**PROC     6043--CALL     6054--CALL     6071--CALL
KEY_PTR_SIZE
      5913**DCL      8043<<ASSIGN   8083>>ASSIGN
KEY_RANGE
       284**DCL      7131<<ASSIGN   7133<<ASSIGN   7394>>IF       7508<<ASSIGN
KEY_RNG.FIR
      5900**DCL      6440<<ASSIGN   6919<<ASSIGN   7121>>ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:467  
KEY_RNG.SEC
      5901**DCL      6441<<ASSIGN   6920<<ASSIGN   7122>>ASSIGN
KEY_SHADWSF
      5551**DCL      6230<<ASSIGN
KEY_SIZE
      5912**DCL      8041<<ASSIGN   8043>>ASSIGN
KLNG IN PROCEDURE ALTK_PRNT
      6152**DCL      6188<<ASSIGN   6422>>ASSIGN   6436>>DOWHILE  6436>>DOWHILE  6437>>CALLBLT
LAST_DBK
       235**DCL      5967<<ASSIGN   7153<<ASSIGN
LAST_LN IN PROCEDURE DATAPG_PRNT
      7342**DCL      7340--PROC     7440>>IF       7441<<ASSIGN   7442>>DOINDEX
LN_NO IN PROCEDURE CALC_PRNT
      6526**DCL      6845<<ASSIGN   6846<>CALL     6863>>ASSIGN
LOCAL_ONLY
       285**DCL      7418>>IF       7509<<ASSIGN   7511<<ASSIGN   8003>>IF       8128>>IF
LOW_DBK
      5915**DCL      6886>>ASSIGN   6887>>ASSIGN   7536<<ASSIGN   7546<<ASSIGN
LPP
      5914**DCL      6886>>ASSIGN   6886>>ASSIGN   6887>>ASSIGN   6887>>ASSIGN   7537<<ASSIGN   7547<<ASSIGN
LST_LN
       228**DCL      7188<<ASSIGN   7189<>CALL     7234<<ASSIGN   7236<<ASSIGN   7237<>CALL
M IN PROCEDURE ALTK_PRNT
      6168**DCL      6247<<ASSIGN   6258<<ASSIGN   6258>>ASSIGN   6260>>ASSIGN   6263>>CALLBLT
M IN PROCEDURE CALC_PRNT
      6579**DCL      6703<<ASSIGN   6712<<ASSIGN   6712>>ASSIGN   6714>>ASSIGN   6716>>ASSIGN
M$LO
      5589**DCL      7083>>ASSIGN   7256>>ASSIGN   7343>>ASSIGN   8418>>ASSIGN
MATCH IN PROCEDURE CALC_PRNT
      6577**DCL      6906<<ASSIGN   6912<<ASSIGN   6916>>IF
MAX_DIGITS
       272**DCL      8195<<ASSIGN   8197<>CALL     8221<<ASSIGN   8223<>CALL
MCHAR IN PROCEDURE ALTK_PRNT
      6172**DCL      6248<<ASSIGN   6263<<CALLBLT  6264>>CALLBLT
MSGCODE
      5508**DCL      5509--REDEF    6020<<ASSIGN   6046<<ASSIGN   6060<<ASSIGN   6215<<ASSIGN   6301<<ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:468  
      6333<<ASSIGN   6361<<ASSIGN   6379<<ASSIGN   6418<<ASSIGN   6457<<ASSIGN   6590<<ASSIGN   6605<<ASSIGN
      6618<<ASSIGN   6644<<ASSIGN   6680<<ASSIGN   6782<<ASSIGN   6800<<ASSIGN   6834<<ASSIGN   6931<<ASSIGN
      6946<<ASSIGN   7167<<ASSIGN   7212<<ASSIGN   7319<<ASSIGN   7429<<ASSIGN   7503<<ASSIGN   7519<<ASSIGN
      7573<<ASSIGN   7604<<ASSIGN   7716<<ASSIGN
MSTR$
       488**DCL       491--IMP-PTR  6596>>DOWHILE  6609>>IF       6609>>IF       6622>>ASSIGN   6624>>ASSIGN
      6689>>ASSIGN   6868>>DOWHILE  6874>>DOWHILE  6936>>ASSIGN   6937>>DOWHILE  6942>>CALLBLT  6943>>ASSIGN
      6975>>ASSIGN   7200>>ASSIGN   7216>>ASSIGN   7304>>DOWHILE  7309>>ASSIGN   7721>>ASSIGN   7775>>ASSIGN
      7784>>ASSIGN   7792>>IF       8003>>IF       8003>>IF       8040>>ASSIGN   8041>>ASSIGN   8042>>ASSIGN
      8104>>ASSIGN   8126>>ASSIGN   8128>>IF       8131>>IF       8131>>IF
MSTR_INDX
       514**DCL      6595<<ASSIGN   6596>>DOWHILE  6596>>DOWHILE  6597<<ASSIGN   6597>>ASSIGN   6599>>IF
      6609>>IF       6622>>ASSIGN   6624>>ASSIGN   6689>>ASSIGN   7303<<ASSIGN   7304>>DOWHILE  7304>>DOWHILE
      7306<<ASSIGN   7306>>ASSIGN   7308>>IF       7309>>ASSIGN
MSTR_REF.GLOBAL
       498**DCL      7216>>ASSIGN   8003>>IF       8128>>IF
MSTR_REF.NAME
       496**DCL      6596>>DOWHILE  6609>>IF       6868>>DOWHILE  6937>>DOWHILE  6942>>CALLBLT  6943>>ASSIGN
      6975>>ASSIGN   7304>>DOWHILE  7721>>ASSIGN   7784>>ASSIGN
MSTR_REF.NEXT
       493**DCL      6609>>IF       6936>>ASSIGN   7200>>ASSIGN   7775>>ASSIGN   8003>>IF
MSTR_REF.NXTHSH
       494**DCL       495--REDEF
MSTR_REF.PAENT
       500**DCL       501--REDEF    8041>>ASSIGN
MSTR_REF.PAOFF
       497**DCL       498--REDEF    7792>>IF       8040>>ASSIGN   8042>>ASSIGN
MSTR_REF.PSMODE
       499**DCL      8104>>ASSIGN   8131>>IF
MSTR_REF.SET.ORDER
       507**DCL      8126>>ASSIGN
MSTR_REF.SET.SMMODE
       509**DCL      8131>>IF
MSTR_REF.TYPE
       492**DCL      6622>>ASSIGN   6624>>ASSIGN   6689>>ASSIGN   6874>>DOWHILE  7309>>ASSIGN
N IN PROCEDURE ALTK_PRNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:469  
      6169**DCL      6249<<ASSIGN   6251<<ASSIGN   6251>>ASSIGN   6255>>DOINDEX
N IN PROCEDURE CALC_PRNT
      6580**DCL      6704<<ASSIGN   6706<<ASSIGN   6706>>ASSIGN   6709>>DOINDEX
NAME_SAVE IN PROCEDURE FIND_PRINT_ITEMS
      7856**DCL      8008<<ASSIGN   8022>>IF       8029<<ASSIGN
NBUFS
      5910**DCL      7566>>IF
NDSC.SIZE
       218**DCL      7805>>ASSIGN   8171>>CALLBLT  8173<>CALL     8176>>CALLBLT  8178<>CALL
NEXT_DBK IN PROCEDURE KEY_PRNT
      7241**LABEL    7182--GOTO
NEXT_DBKEY IN PROCEDURE CALC_PRNT
      6571**DCL      6881<<ASSIGN   6882<<ASSIGN   6883<<ASSIGN   6886>>ASSIGN   6887>>ASSIGN   6919>>ASSIGN
      6920>>ASSIGN
NEXT_LN IN PROCEDURE CALC_PRNT
      6570**DCL      6887<<ASSIGN   6898>>ASSIGN
NEXT_PG IN PROCEDURE CALC_PRNT
      6569**DCL      6886<<ASSIGN   6889>>IF       6891>>ASSIGN
NIBBLE IN PROCEDURE OCTAL_PRINT
      8362**DCL      8395>>ASSIGN
NO_AREAS
       530**DCL      7140>>DOINDEX  7156>>ASSIGN
NO_GROUPS IN PROCEDURE FIND_PRINT_ITEMS
      7859**DCL      8061<<ASSIGN   8072>>IF       8079>>DOWHILE
NO_KEYSF
      5525**DCL      6433>>IF       7598>>IF
NO_RECS
       550**DCL      6596>>DOWHILE  6599>>IF       7304>>DOWHILE  7308>>IF
NO_SORT_KEYS IN PROCEDURE FIND_PRINT_ITEMS
      7861**DCL      8001<<ASSIGN   8012>>DOINDEX  8033>>IF       8044<<ASSIGN   8044>>ASSIGN   8064>>DOINDEX
NUM IN PROCEDURE UNPAK
      8299**DCL      8302--REDEF
NUM.DISPLY IN PROCEDURE UNPAK
      8301**DCL      8327<<ASSIGN
NUM_ITEMS IN PROCEDURE CALC_PRNT
      6498**DCL      6631<>CALL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:470  
NUM_SETS IN PROCEDURE CALC_PRNT
      6506**DCL      6631<>CALL
NXTPT.BYT_OFF IN PROCEDURE CALC_PRNT
      6564**DCL      6879>>ASSIGN
NXTPT.EISADDR IN PROCEDURE CALC_PRNT
      6563**DCL      6878>>ASSIGN
NXTPT.SIZE IN PROCEDURE CALC_PRNT
      6568**DCL      6880>>DOCASE
OCTAL_PRINT
      8356**PROC     8190--CALL     8280--CALL
ORDER_TXT IN PROCEDURE SET_OUTPUT
      8122**DCL      8126>>ASSIGN
ORGSF
      5472**DCL      5954<<ASSIGN   6233<<ASSIGN   6969<<ASSIGN   7491<<ASSIGN   7493>>IF       7496>>IF
      7515>>IF
OUT_INDX
      5581**DCL      6033<<ASSIGN   6086<<ASSIGN   6093>>ASSIGN   6097>>ASSIGN   6105>>ASSIGN   6120<<ASSIGN
      6120>>ASSIGN   6123<<ASSIGN   6984<<ASSIGN   6988>>DOWHILE  6989>>ASSIGN   6991<<ASSIGN   6991>>ASSIGN
      7185<<ASSIGN   7223<<ASSIGN   7223>>ASSIGN   7224>>IF       7230<<ASSIGN   7232>>ASSIGN
P IN PROCEDURE ALTK_PRNT
      6170**DCL      6255<<DOINDEX
PAGE_HDR
       104**DCL      7378--ASSIGN   7379--ASSIGN   8423--ASSIGN
PAGE_HDR.AREA_NAME
       107**DCL      7365<<ASSIGN   8419<<ASSIGN
PAGE_HDR.CAR_CON
       105**DCL      7372>>IF       7391<<ASSIGN
PAGE_HDR.PGNO
       109**DCL      7366<<CALLBLT  7369<>CALL     7369--CALL     8420<<CALLBLT  8421<>CALL     8421--CALL
PAGE_HDR.SP_AV
       111**DCL      7357<<CALLBLT  7370<>CALL     7370--CALL     8422<<ASSIGN
PAGE_HDR2
       112**DCL      7381--ASSIGN   7382--ASSIGN
PAGE_HDR2.DTSP
       115**DCL      7351--ASSIGN
PAGE_HDR2.PRCNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:471  
       121**DCL      7367<<CALLBLT  7368<>CALL
PAGE_HDR2.TMSP
       118**DCL      7355--ASSIGN
PAGE_HDR2.TMSP.SS
       120**DCL      7371<<ASSIGN
PAGE_HDR3
       123**DCL      7387--ASSIGN   7388--ASSIGN
PAGE_HDR3.CHKSUM
       130**DCL      7358<<CALLBLT  7386<>CALL
PAGE_HDR3.CURR_HIGH
       126**DCL      7359<<CALLBLT  7384<>CALL
PAGE_HDR3.FST_AVAIL
       128**DCL      7362<<ASSIGN   7364<<CALLBLT  7385<>CALL
PAGE_PRNT
      6083**PROC     6069--CALL
PAGE_RANGE
       306**DCL-ENT  6035--CALL     6122--CALL
PA_BUF IN PROCEDURE FIND_PRINT_ITEMS
      7845**DCL      8031--ASSIGN   8032--ASSIGN   8070--ASSIGN   8071--ASSIGN
PA_BUF.KEYNAME IN PROCEDURE FIND_PRINT_ITEMS
      7852**DCL      7975<<ASSIGN   7977<<ASSIGN   7979>>CALLBLT  7982>>CALLBLT  7985>>CALLBLT  7987>>CALLBLT
      8016<<ASSIGN   8048<<ASSIGN   8069<<ASSIGN   8075<<ASSIGN   8089<<ASSIGN
PA_BUF.KEY_NO.ENT1 IN PROCEDURE FIND_PRINT_ITEMS
      7849**DCL      8054<<ASSIGN
PA_BUF.KEY_NO.ENT2 IN PROCEDURE FIND_PRINT_ITEMS
      7850**DCL      7876<<CALLBLT  8057<<ASSIGN
PA_BUF.KEY_TXT IN PROCEDURE FIND_PRINT_ITEMS
      7847**DCL      7848--REDEF    8002<<ASSIGN   8036<<ASSIGN   8076<<ASSIGN   8088<<ASSIGN
PA_BUF.NAME IN PROCEDURE FIND_PRINT_ITEMS
      7855**DCL      8026<<ASSIGN   8028<<ASSIGN   8038<<ASSIGN
PA_BUF.POINTER IN PROCEDURE FIND_PRINT_ITEMS
      7853**DCL      7872<>CALL     8005<<ASSIGN   8007<<ASSIGN   8035<<ASSIGN   8055<>CALL     8077<<ASSIGN
      8087<<ASSIGN
PA_BUF.REC IN PROCEDURE FIND_PRINT_ITEMS
      7854**DCL      8010<<ASSIGN   8037<<ASSIGN
PA_BUF.VFC IN PROCEDURE FIND_PRINT_ITEMS
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:472  
      7846**DCL      8011<<ASSIGN   8033<<ASSIGN   8045<<ASSIGN
PA_ENTRY.C IN PROCEDURE FIND_PRINT_ITEMS
      7827**DCL      8056>>IF       8072>>IF       8079>>DOWHILE
PA_ENTRY.PTRS IN PROCEDURE FIND_PRINT_ITEMS
      7830**DCL      8055<>CALL
PA_GROUP.NO_GROUPS IN PROCEDURE FIND_PRINT_ITEMS
      7832**DCL      8061>>ASSIGN
PA_GROUP.PTRS IN PROCEDURE FIND_PRINT_ITEMS
      7834**DCL      7872<>CALL
PA_HDR IN PROCEDURE FIND_PRINT_ITEMS
      7836**DCL      7988--ASSIGN   7989--ASSIGN
PA_HDR.AVAIL IN PROCEDURE FIND_PRINT_ITEMS
      7841**DCL      7873>>CALLBLT  7876--CALLBLT  7972<<CALLBLT  7973<>CALL     7973--CALL     8052<<CALLBLT
      8053<>CALL     8053--CALL     8057>>ASSIGN
PA_HDR.ENTRIES IN PROCEDURE FIND_PRINT_ITEMS
      7839**DCL      7874<<CALLBLT  7875<>CALL     7875--CALL     7876>>CALLBLT  7969<<CALLBLT  7970<>CALL
      7970--CALL
PA_HDR.ORDER IN PROCEDURE FIND_PRINT_ITEMS
      7843**DCL      7979<<CALLBLT  7982<<CALLBLT  7985<<CALLBLT  7987<<CALLBLT
PA_IT_OUTPUT IN PROCEDURE IT_OUTPUT
      8149**ENTRY    8068--CALL
PA_REC.AVAIL IN PROCEDURE FIND_PRINT_ITEMS
      7825**DCL      7971>>ASSIGN
PA_REC.ENTRIES IN PROCEDURE FIND_PRINT_ITEMS
      7824**DCL      7968>>ASSIGN   7991>>IF       8051>>DOINDEX
PA_REC.FIRST_IN_LEVEL IN PROCEDURE FIND_PRINT_ITEMS
      7820**DCL      7978>>IF       7981>>IF
PA_REC.HIGHEST_KEY IN PROCEDURE FIND_PRINT_ITEMS
      7819**DCL      8085>>IF
PA_REC.LAST_IN_LEVEL IN PROCEDURE FIND_PRINT_ITEMS
      7821**DCL      7978>>IF       7984>>IF
PA_REC.LOWEST_KEY IN PROCEDURE FIND_PRINT_ITEMS
      7822**DCL      8046>>IF
PA_REC.LOWEST_LEVEL IN PROCEDURE FIND_PRINT_ITEMS
      7818**DCL      7974>>IF       8025>>IF
PG_NO IN PROCEDURE CALC_PRNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:473  
      6525**DCL      6844<<ASSIGN   6846<>CALL     6860>>ASSIGN   6889>>IF       6891<<ASSIGN   6892>>ASSIGN
PRINT_LOCKS
      7010**PROC     5981--CALL     6110--CALL
PROCESS_BYTE IN PROCEDURE OCTAL_PRINT
      8388**PROC     8385--CALL
PSETS IN PROCEDURE FIND_PRINT_SETS
      7772**DCL      7770--PROC     7776>>IF       7782>>IF       7790>>IF
PSMODE_TXT IN PROCEDURE REC_OUTPUT
      8101**DCL      8104>>ASSIGN
PTR$ IN PROCEDURE OCTAL_PRINT
      8359**DCL      8356--PROC     8362--IMP-PTR  8363--IMP-PTR  8389>>IF       8389>>IF       8390>>ASSIGN
      8395>>ASSIGN   8396<<ASSIGN   8396>>ASSIGN
PTR$ IN PROCEDURE UNPAK
      8307**DCL      8292--PROC     8305--IMP-PTR  8315<<ASSIGN   8315>>ASSIGN   8318<<ASSIGN   8318>>ASSIGN
      8327>>ASSIGN   8330<<ASSIGN   8330>>ASSIGN   8332<<ASSIGN   8332>>ASSIGN   8338<<ASSIGN   8338>>ASSIGN
      8340<<ASSIGN   8340>>ASSIGN   8342>>IF
PTR_LOC IN PROCEDURE GET_POINTER
      7681**DCL      7678--PROC     7688--ASSIGN
PTR_MSG IN PROCEDURE FIND_POINTER
      7800**DCL      7797--PROC     7806<>CALL
PTR_MSG IN PROCEDURE GET_POINTER
      7683**DCL      7678--PROC     7689<<CALLBLT  7690<>CALL     7693<<ASSIGN
PTR_SIZE
      5911**DCL      7830--IMP-SIZ  7834--IMP-SIZ  7863--IMP-SIZ  7872<>CALL     7872>>CALL     7878>>ASSIGN
      7912<<ASSIGN   7920>>CALLBLT  7921<<ASSIGN   7921>>ASSIGN   7946>>CALLBLT  7947<<ASSIGN   7947>>ASSIGN
      7948>>CALLBLT  7956>>CALLBLT  8040<<ASSIGN   8041>>ASSIGN   8043>>ASSIGN   8055<>CALL     8055>>CALL
PTR_SIZE IN PROCEDURE GET_POINTER
      7680**DCL      7678--PROC     7682--IMP-SIZ  7686>>IF       7688>>ASSIGN   7688>>ASSIGN   7688>>ASSIGN
PTR_V IN PROCEDURE GET_POINTER
      7682**DCL      7688<<ASSIGN   7688>>ASSIGN
RA_REC IN PROCEDURE CALC_PRNT
      6520**DCL      6631<>CALL     6846<>CALL
RA_REC.CALC_HDRS IN PROCEDURE CALC_PRNT
      6523**DCL      6636<<ASSIGN
RA_REC.HDR_OFFSET IN PROCEDURE CALC_PRNT
      6524**DCL      6637<<ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:474  
RA_REC.HIDBK IN PROCEDURE CALC_PRNT
      6522**DCL      6634<<ASSIGN
RA_REC.LOWDBK IN PROCEDURE CALC_PRNT
      6521**DCL      6635<<ASSIGN
RB
      5561**DCL      5999<<ASSIGN   6001>>ASSIGN   6002<<DOINDEX  6002>>DOINDEX  6035<>CALL     6087<<DOINDEX
      6087>>DOINDEX  6122<>CALL     6860<<ASSIGN   6892<<ASSIGN   6926>>CALLBLT  7173<<ASSIGN   7175>>ASSIGN
      7222<<DOINDEX  7222>>DOINDEX  7226>>ASSIGN   7233>>IF       7507<<ASSIGN   7581>>ASSIGN   7587>>DOINDEX
      7587>>DOINDEX  7614<<ASSIGN   7614>>ASSIGN   8447>>ASSIGN   8466>>ASSIGN
RBUF.TEXT IN PROCEDURE ALTK_PRNT
      6161**DCL      6220>>CALLBLT  6221>>CALLBLT  6454>>CALLBLT  6455>>ASSIGN
RBUF.TEXT IN PROCEDURE CALC_PRNT
      6538**DCL      6657>>CALLBLT  6658--DOWHILE  6661>>CALLBLT  6665>>CALLBLT  6700>>IF       6701--ASSIGN
      6721>>CALLBLT  6724>>CALLBLT  6727>>CALLBLT  6732>>CALLBLT  6732>>CALLBLT  6737>>ASSIGN   6748>>CALLBLT
      6753>>CALLBLT  6753>>CALLBLT  6758>>ASSIGN   6774>>ASSIGN   6780>>ASSIGN   6788>>CALLBLT  6789>>IF
      6789>>IF       6791>>ASSIGN   6794>>CALLBLT  6804>>IF       6806>>CALLBLT  6809>>IF       6810>>CALLBLT
      6811>>CALLBLT  6832>>ASSIGN
RBUF IN PROCEDURE PRINT_LOCKS
      7015**DCL      7077<<CALLBLT  7079<<ASSIGN   7081--ASSIGN   7089<<ASSIGN   7092<<ASSIGN   7095<<ASSIGN
      7097<<ASSIGN
RCNT
      5567**DCL      5949>>IF       6042>>IF       6094>>IF       6585>>IF       7286>>IF       7289>>DOINDEX
      7390>>IF       7392>>IF       7458>>IF       7459>>DOWHILE  7462>>IF       7462>>IF
RE
      5562**DCL      6000<<ASSIGN   6001>>ASSIGN   6002>>DOINDEX  6035<>CALL     6087>>DOINDEX  6122<>CALL
      7174<<ASSIGN   7176>>ASSIGN   7222>>DOINDEX  7226>>ASSIGN   7233>>IF       7622<<ASSIGN
READ_PAGE
      7557**PROC     6003--CALL     6085--CALL     6861--CALL     6894--CALL     7187--CALL     7229--CALL
      7513--CALL
REASGNSF
      5526**DCL      6234<<ASSIGN
REC IN PROCEDURE CALC_PRNT
      6573**DCL      6576--REDEF
REC.LEN IN PROCEDURE CALC_PRNT
      6575**DCL      6904>>ASSIGN
REC.TYPE IN PROCEDURE CALC_PRNT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:475  
      6574**DCL      6901>>IF       6924>>IF       6924>>IF       6935>>ASSIGN
REC$
      5560**DCL      5583--IMP-PTR  6572--IMP-PTR  6863<<ASSIGN   6878>>ASSIGN   6898<<ASSIGN   6899>>ASSIGN
      6905>>ASSIGN   6989<<ASSIGN   7447<<ASSIGN   7704>>ASSIGN   7726>>ASSIGN   7727>>ASSIGN   7803>>ASSIGN
      7814--IMP-PTR  7968>>ASSIGN   7971>>ASSIGN   7974>>IF       7978>>IF       7978>>IF       7981>>IF
      7984>>IF       7991>>IF       8025>>IF       8042>>ASSIGN   8046>>IF       8051>>DOINDEX  8060>>ASSIGN
      8085>>IF       8147>>ASSIGN   8247>>ASSIGN
RECNM_LEN IN PROCEDURE CALC_PRNT
      6497**DCL      6631<>CALL
RECORD IN PROCEDURE CALC_PRNT
      6572**DCL      6899>>ASSIGN
RECORD_LIST.NAME
      5882**DCL      6596>>DOWHILE  6601>>CALLBLT  6603>>ASSIGN   6614>>CALLBLT  6616>>ASSIGN   6640>>CALLBLT
      6642>>ASSIGN   7290>>IF       7296>>IF       7304>>DOWHILE  7315>>CALLBLT  7317>>ASSIGN
RECORD_LIST.TYPE
      5883**DCL      6622<<ASSIGN   7293<<ASSIGN   7299<<ASSIGN   7309<<ASSIGN   7330>>ASSIGN   7459>>DOWHILE
REC_CNT
       231**DCL      6117<<ASSIGN   7473<<ASSIGN   7473>>ASSIGN
REC_DATA_LN
      5588**DCL      5587--IMP-SIZ  7726<<ASSIGN
REC_FOUND IN PROCEDURE ALTK_PRNT
      6155**DCL      6175<<ASSIGN   6186<<ASSIGN   6206>>IF
REC_FRMT.LNGHT
      5586**DCL      7726>>ASSIGN
REC_FRMT.TYPE
      5585**DCL      7704>>ASSIGN
REC_HDR
       131**DCL      8110--ASSIGN
REC_HDR.DBK
       135**DCL      7450<<CALLBLT  7706<>CALL     7706--CALL     7711>>ASSIGN   7712>>CALLBLT
REC_HDR.LN_NBR
       139**DCL      7449<<CALLBLT  8106<>CALL
REC_HDR.PAGE_NO
       137**DCL      7448<<CALLBLT  8105<>CALL
REC_HDR.PSMODE
       141**DCL      8104<<ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:476  
REC_HDR.REC_NM
       133**DCL      7456>>IF       7456>>IF       7705<<ASSIGN   7721<<ASSIGN   7882--IF       8257--IF
REC_INDX
       232**DCL      7720<<ASSIGN   7721>>ASSIGN   7722>>ASSIGN   7775<<ASSIGN   7776>>IF       7783>>DOWHILE
      7784>>ASSIGN   7785>>CALL     7786>>CALL     7787>>CALL     7791<<ASSIGN   7791>>ASSIGN   7793<<ASSIGN
      8003>>IF       8040>>ASSIGN   8041>>ASSIGN   8042>>ASSIGN   8125>>ASSIGN   8131>>IF
REC_LEN IN PROCEDURE CALC_PRNT
      6495**DCL      6631<>CALL     6690>>ASSIGN
REC_NM IN PROCEDURE CALC_PRNT
      6496**DCL      6631<>CALL
REC_OUTPUT
      8100**PROC     7464--CALL
REC_RDEF IN PROCEDURE CALC_PRNT
      6576**DCL      6899<<ASSIGN
REC_TYP
       100**DCL      7459>>DOWHILE  7704<<ASSIGN   7707>>IF       7707>>IF       7720>>ASSIGN   7723>>IF
      7748>>IF       7754>>DOWHILE  7904>>DOWHILE
REC_TYPE IN PROCEDURE CALC_PRNT
      6492**DCL      6631<>CALL
REC_TYPE.FIR IN PROCEDURE CALC_PRNT
      6493**DCL      6623<<ASSIGN
REC_TYPE.SEC IN PROCEDURE CALC_PRNT
      6494**DCL      6624<<ASSIGN   6901>>IF
REC_XREF.MSTRINDX
       546**DCL      7201>>DOWHILE
REC_XREF.NEXT
       545**DCL      7202>>ASSIGN
REC_XREF$
       543**DCL       544--IMP-PTR  7201>>DOWHILE  7202>>ASSIGN
RESTART
      5599**DCL      6031<<REMEMBR  7272>>UNWIND
RESULT_LEN
       275**DCL      8203<>CALL     8214>>ASSIGN   8215>>ASSIGN   8229<>CALL     8240>>ASSIGN   8241>>ASSIGN
SET IN PROCEDURE CALC_PRNT
      6507**DCL      6631<>CALL
SET$
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:477  
       237**DCL       238--IMP-PTR   239--IMP-PTR  7803<<ASSIGN   7804<<ASSIGN   7804>>ASSIGN   7806>>CALL
SETNXT$ IN PROCEDURE CALC_PRNT
      6559**DCL      6878<<ASSIGN   6879<<ASSIGN   6879>>ASSIGN   6881>>ASSIGN   6882>>ASSIGN   6883>>ASSIGN
SET_HDR
       148**DCL      8135--ASSIGN   8136--ASSIGN
SET_HDR.GLO_LOC
       160**DCL      8127<<ASSIGN   8129<<ASSIGN
SET_HDR.NAME
       151**DCL      7784<<ASSIGN   7788>>IF
SET_HDR.NEXT
       158**DCL      7787<>CALL
SET_HDR.ORDER
       153**DCL      8126<<ASSIGN
SET_HDR.OWNER
       156**DCL      7786<>CALL
SET_HDR.PRIOR
       154**DCL      7785<>CALL
SET_HDR.SET_TYPE
       161**DCL      8130<<ASSIGN   8134<<ASSIGN
SET_HDR0
       142**DCL      7778--ASSIGN   7779--ASSIGN
SET_INDX
       233**DCL      6867<<ASSIGN   6868>>DOWHILE  6869<<ASSIGN   6869>>ASSIGN   6877>>ASSIGN   6936<<ASSIGN
      6937>>DOWHILE  6937>>DOWHILE  6938<<ASSIGN   6938>>ASSIGN   6940>>IF       7119<<ASSIGN   7182>>IF
      7183>>IF       7190>>IF       7192<>CALL     7194>>IF       7200>>ASSIGN   7216>>ASSIGN   7241<<ASSIGN
SET_LN
       240**DCL       238--IMP-SIZ   239--IMP-SIZ  7805<<ASSIGN   7806<>CALL     7870--IMP-SIZ  7873<<CALLBLT
      7876>>CALLBLT
SET_NMS IN PROCEDURE CALC_PRNT
      6519**DCL      6631<>CALL
SET_OUTPUT
      8121**PROC     7790--CALL
SET_XREF.EIS.NEXT
       539**DCL      6877>>ASSIGN   7787<>CALL
SET_XREF.EIS.OWNR
       538**DCL      7786<>CALL     8131>>IF
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:478  
SET_XREF.EIS.PRIOR
       537**DCL      7785<>CALL
SET_XREF.MSTRINDX
       534**DCL      6609>>IF       6868>>DOWHILE  6937>>DOWHILE  7784>>ASSIGN   8003>>IF       8125>>ASSIGN
SET_XREF.NEXT
       535**DCL      6938>>ASSIGN   7791>>ASSIGN
SET_XREF$
       532**DCL       533--IMP-PTR  6609>>IF       6868>>DOWHILE  6877>>ASSIGN   6937>>DOWHILE  6938>>ASSIGN
      7784>>ASSIGN   7785>>CALL     7786>>CALL     7787>>CALL     7791>>ASSIGN   8003>>IF       8125>>ASSIGN
      8131>>IF
SHARESF
      5522**DCL      5951<<ASSIGN   6238<<ASSIGN
SHIFT_ARRAY IN PROCEDURE EXPAND_PAGE
      7644**DCL-ENT  7667--CALL
SIGNED IN PROCEDURE UNPAK
      8306**DCL      8292--PROC     8335>>IF
SIZE IN PROCEDURE CALC_PRNT
      6551**DCL      6544--IMP-SIZ  6695<<ASSIGN   6697<<ASSIGN   6774>>ASSIGN   6846>>CALL     6904<<ASSIGN
      6909>>IF
SIZE IN PROCEDURE UNPAK
      8303**DCL      8292--PROC     8325>>ASSIGN
SIZEA IN PROCEDURE UNPAK
      8298**DCL      8325<<ASSIGN   8326>>DOINDEX
SKEY IN PROCEDURE ALTK_PRNT
      6143**DCL      6147--REDEF    6243<<ASSIGN   6309--ASSIGN   6346--ASSIGN
SKEY.IXID IN PROCEDURE ALTK_PRNT
      6145**DCL      6423<<ASSIGN   6436>>DOWHILE
SKEY.LENGTH IN PROCEDURE ALTK_PRNT
      6144**DCL      6422<<ASSIGN
SKEY.VALUE IN PROCEDURE ALTK_PRNT
      6146**DCL      6245--ASSIGN   6261--ASSIGN   6267>>ASSIGN   6272--ASSIGN   6275>>ASSIGN   6277--ASSIGN
      6280>>ASSIGN   6287<<CALLBLT  6288>>ASSIGN   6311>>ASSIGN   6319<<CALLBLT  6320>>ASSIGN   6342<<CALLBLT
      6343>>ASSIGN   6348>>ASSIGN   6351<<ASSIGN   6391--ASSIGN   6408>>ASSIGN   6436>>DOWHILE  6437>>CALLBLT
SKEY_RDEF IN PROCEDURE ALTK_PRNT
      6147**DCL      6429>>ASSIGN   6432<<ASSIGN   6443<<ASSIGN
SKIP
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:479  
       102**DCL      7739--ASSIGN   8107--ASSIGN
SNGL
       267**DCL      6394<>CALL     6399>>ASSIGN   6814<>CALL     6819>>ASSIGN   8196<<ASSIGN   8197<>CALL
SOURCESF
      5493**DCL      7061<<ASSIGN   7352<<ASSIGN   8428<<ASSIGN
STRING IN PROCEDURE OCTAL_PRINT
      8357**DCL      8356--PROC     8378<<ASSIGN   8382<<ASSIGN   8390<<ASSIGN   8392<<ASSIGN   8395<<ASSIGN
STRING IN PROCEDURE UNPAK
      8304**DCL      8292--PROC     8324<<ASSIGN   8328<<CALLBLT  8343<<CALLBLT  8345<<CALLBLT
STRT_LN IN PROCEDURE DATAPG_PRNT
      7341**DCL      7340--PROC     7396>>IF       7396>>IF       7396>>IF       7438>>IF       7442>>DOINDEX
SYS_FUNC_CLOS
       289**DCL-ENT  6008--CALL     6076--CALL     6464--CALL     6472--CALL     6968--CALL     7147--CALL
      7270--CALL     8507--CALL
SYS_FUNC_ERRMSG
       298**DCL-ENT  6021--CALL     6047--CALL     6061--CALL     6216--CALL     6302--CALL     6334--CALL
      6362--CALL     6380--CALL     6419--CALL     6458--CALL     6591--CALL     6606--CALL     6619--CALL
      6645--CALL     6681--CALL     6783--CALL     6801--CALL     6835--CALL     6932--CALL     6947--CALL
      7168--CALL     7213--CALL     7320--CALL     7430--CALL     7504--CALL     7520--CALL     7574--CALL
      7607--CALL     7717--CALL
SYS_FUNC_GETDCB
       291**DCL-ENT  6228--CALL
SYS_FUNC_OPEN
       293**DCL-ENT  5959--CALL     6240--CALL     6970--CALL     7151--CALL
SYS_FUNC_PREC
       290**DCL-ENT  6431--CALL     6442--CALL
SYS_FUNC_READ
       294**DCL-ENT  6983--CALL     7585--CALL     7596--CALL
SYS_FUNC_RELDCB
       292**DCL-ENT  6465--CALL     6473--CALL
SYS_FUNC_TSTAMP
       296**DCL-ENT  7065--CALL     7356--CALL     8431--CALL
SYS_FUNC_WRIT
       297**DCL-ENT  7084--CALL     7101--CALL     7257--CALL
SZ2
       262**DCL      6881>>ASSIGN   7728<>CALL     7732<>CALL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:480  
SZ3
       263**DCL      6882>>ASSIGN   7806<>CALL
SZ4
       264**DCL      6883>>ASSIGN
TEMP IN PROCEDURE CALC_PRNT
      6553**DCL      6765<<CALLBLT  6766>>ASSIGN
TEMP$
       265**DCL      7727<<ASSIGN   7728>>CALL     7731<<ASSIGN   7731>>ASSIGN   7732>>CALL     8213<<ASSIGN
      8214<<ASSIGN   8214>>ASSIGN   8216>>ASSIGN   8239<<ASSIGN   8240<<ASSIGN   8240>>ASSIGN   8242>>ASSIGN
TESTSF
      5484**DCL      5955<<ASSIGN   6235<<ASSIGN
TIMESF
      5496**DCL      7064<<ASSIGN   7355<<ASSIGN   8427<<ASSIGN
TIME_BUF IN PROCEDURE PRINT_LOCKS
      7026**DCL      7064--ASSIGN   7066>>ASSIGN
TM# IN PROCEDURE PRINT_LOCKS
      7017**DCL      7030<<ASSIGN   7072<<CALLBLT  7078>>IF       7080>>ASSIGN   7086>>IF
TM_BUF IN PROCEDURE PRINT_LOCKS
      7018**DCL      7025--REDEF
TM_BUF.DATE IN PROCEDURE PRINT_LOCKS
      7022**DCL      7063--ASSIGN
TM_BUF.TIME IN PROCEDURE PRINT_LOCKS
      7020**DCL      7066<<ASSIGN
TM_BUF.WHO IN PROCEDURE PRINT_LOCKS
      7024**DCL      7068<<ASSIGN   7070<<ASSIGN   7078>>IF       7086>>IF
TM_V IN PROCEDURE PRINT_LOCKS
      7025**DCL      7057<<ASSIGN   7072>>CALLBLT  7077>>CALLBLT
TO$ IN PROCEDURE EXPAND_PAGE
      7639**DCL      7640--IMP-PTR  7664<<ASSIGN   7667>>CALL     7672<<ASSIGN   7674>>ASSIGN
TOSTR IN PROCEDURE EXPAND_PAGE
      7640**DCL      7667<>CALL
TSTAMPSF
      5499**DCL      7060<<ASSIGN   7354<<ASSIGN   8430<<ASSIGN
TYPE.MSTRINDX
       480**DCL      6924>>IF       6935>>ASSIGN   6975>>ASSIGN   7707>>IF       7720>>ASSIGN
T_ITEM_LN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:481  
       260**DCL       245--IMP-SIZ  8215<<ASSIGN   8216>>ASSIGN   8241<<ASSIGN   8242>>ASSIGN   8264<<ASSIGN
      8266>>DOWHILE  8267<<ASSIGN   8267>>ASSIGN   8270>>ASSIGN   8279<<ASSIGN   8280<>CALL     8281>>ASSIGN
UNPAK IN PROCEDURE IT_OUTPUT
      8292**PROC     8173--CALL     8178--CALL
UWA.AC_REC.BASE_DBK
      4846**DCL      7526>>ASSIGN
UWA.AC_REC.CALC_HDRS
      4853**DCL      7541<<ASSIGN
UWA.AC_REC.CALC_NEXT
      4865**DCL      4866--REDEF
UWA.AC_REC.CALC_NULL
      4845**DCL      7525>>ASSIGN
UWA.AC_REC.CALC_PRIOR
      4874**DCL      4875--REDEF
UWA.AC_REC.DEFAULTS
      4823**DCL      4824--REDEF
UWA.AC_REC.FILE_CODE
      4828**DCL      4829--REDEF
UWA.AC_REC.FIR_INV_PG
      4854**DCL      5991>>IF       5992<<ASSIGN   5996>>IF       5999>>ASSIGN   6012>>IF       6094>>IF
      7532>>ASSIGN   7545<<ASSIGN   8447>>ASSIGN   8453>>IF       8454>>ASSIGN   8466>>ASSIGN
UWA.AC_REC.FLAG1.ERROR_TYPE
      4825**DCL      4826--REDEF
UWA.AC_REC.IDB
      4856**DCL      7534>>ASSIGN
UWA.AC_REC.INV_UNIT
      4861**DCL      7544<<ASSIGN   8432>>CALLBLT  8488>>ASSIGN
UWA.AC_REC.KEY_ALLOC
      4847**DCL      7527>>ASSIGN
UWA.AC_REC.LPP
      4855**DCL      7173>>ASSIGN   7173>>ASSIGN   7174>>ASSIGN   7174>>ASSIGN   7175>>ASSIGN   7175>>ASSIGN
      7176>>ASSIGN   7176>>ASSIGN   7450>>CALLBLT  7450>>CALLBLT  7533>>ASSIGN   7735>>CALLBLT  7735>>CALLBLT
UWA.AC_REC.MAX_DBK
      4850**DCL      7134>>IF       7134>>IF       7529>>ASSIGN   7543<<ASSIGN
UWA.AC_REC.MAX_PAGE
      4852**DCL      5992>>ASSIGN   5996>>IF       6000>>ASSIGN   6012>>IF       6035<>CALL     6122<>CALL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:482  
      7531>>ASSIGN   7542<<ASSIGN
UWA.AC_REC.MIN_DBK
      4849**DCL      7126>>ASSIGN   7127>>ASSIGN   7134>>IF       7134>>IF       7173>>ASSIGN   7174>>ASSIGN
      7175>>ASSIGN   7176>>ASSIGN   7420>>CALLBLT  7450>>CALLBLT  7510>>IF       7528>>ASSIGN   7735>>CALLBLT
UWA.AC_REC.MIN_PAGE
      4851**DCL      7530>>ASSIGN
UWA.AC_REC.PG_TYPE
      4840**DCL      4841--REDEF    5984>>IF       7031>>IF
UWA.AC_REC.SWS.TEMPLAT
      4833**DCL      7539>>IF
UWA.AD_REC.ADDATE
      4805**DCL      4806--REDEF
UWA.CF_REC.CTLTYP
      4961**DCL      7918>>IF       7941>>IF
UWA.CF_REC.SYN
      4960**DCL      6191<<ASSIGN   6192>>DOWHILE
UWA.DB_STATUS
      4753**DCL      6178>>DOWHILE  6200<<ASSIGN   7754>>DOWHILE  7757>>IF       7881<<ASSIGN   7884>>DOWHILE
      7887>>IF       7913>>DOWHILE  7915>>IF       7957<<ASSIGN   7995>>IF
UWA.FR_REC.BUFLOC
      4935**DCL      6199>>ASSIGN   7998>>ASSIGN   8146--ASSIGN
UWA.FR_REC.FRFRH
      4936**DCL      7999>>ASSIGN
UWA.FR_REC.FTYP
      4922**DCL      6198>>ASSIGN   7997>>ASSIGN   8067<<ASSIGN   8153>>DOCASE   8265>>IF       8265>>IF
      8276>>IF
UWA.FR_REC.SYN
      4920**DCL      7892>>IF
UWA.RA_REC.CHDRS1
      4917**DCL      6636>>ASSIGN
UWA.RA_REC.HDBK
      4916**DCL      6634>>ASSIGN
UWA.RA_REC.HOFFS
      4918**DCL      6637>>ASSIGN
UWA.RA_REC.LDBK
      4915**DCL      6635>>ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:483  
UWA.RC_REC.RTYPE
      4884**DCL      6975>>ASSIGN   7752<<ASSIGN   7754>>DOWHILE  8019>>ASSIGN
UWA.SC_REC.IXID
      4912**DCL      6187>>ASSIGN
UWA.SC_REC.KEY_LENGHT
      4913**DCL      6188>>ASSIGN
UWA.SC_REC.SETTYPE
      4901**DCL      6180>>IF       7941>>IF
UWA.SF_REC.DBKOA
      4771**DCL      5963<>CALL     5967>>ASSIGN   5978<>CALL     6176<>CALL     7153>>ASSIGN   7753<>CALL
UWA.SN_REC.SENAME
      4984**DCL      6184>>IF       7904>>DOWHILE  7910>>ASSIGN   7945>>CALLBLT  7946>>CALLBLT  8016>>ASSIGN
      8022>>IF       8028>>ASSIGN   8029>>ASSIGN
VFC3LINES
       103**DCL      7374--ASSIGN
VFCSF
      5488**DCL      7082<<ASSIGN   7100<<ASSIGN
WRD.LEN IN PROCEDURE CALC_PRNT
      6543**DCL      6690<<ASSIGN
WRD.TYP IN PROCEDURE CALC_PRNT
      6542**DCL      6689<<ASSIGN
WRITE_LINE
      7252**PROC     6987--CALL     7376--CALL     7380--CALL     7383--CALL     7389--CALL     7741--CALL
      7744--CALL     7780--CALL     7990--CALL     8034--CALL     8049--CALL     8074--CALL     8081--CALL
      8090--CALL     8109--CALL     8112--CALL     8137--CALL     8260--CALL     8263--CALL     8273--CALL
      8285--CALL     8425--CALL     8437--CALL     8440--CALL     8465--CALL     8478--CALL
X
      5577**DCL      5968<>CALL     6691<<DOINDEX  6692>>ASSIGN   6700>>IF       6702>>ASSIGN   6704>>ASSIGN
      6705>>DOINDEX  6721>>CALLBLT  6721>>CALLBLT  6724>>CALLBLT  6724>>CALLBLT  6727>>CALLBLT  6727>>CALLBLT
      6728>>IF       6730>>ASSIGN   6731>>ASSIGN   6732>>CALLBLT  6732>>CALLBLT  6732>>CALLBLT  6736>>ASSIGN
      6737>>ASSIGN   6737>>ASSIGN   6748>>CALLBLT  6748>>CALLBLT  6749>>IF       6751>>ASSIGN   6752>>ASSIGN
      6753>>CALLBLT  6753>>CALLBLT  6753>>CALLBLT  6757>>ASSIGN   6758>>ASSIGN   6758>>ASSIGN   6774>>ASSIGN
      6774>>ASSIGN   6779>>ASSIGN   6780>>ASSIGN   6780>>ASSIGN   6788>>CALLBLT  6788>>CALLBLT  6789>>IF
      6789>>IF       6791>>ASSIGN   6794>>CALLBLT  6795>>IF       6804>>IF       6806>>CALLBLT  6806>>CALLBLT
      6809>>IF       6810>>CALLBLT  6810>>CALLBLT  6811>>CALLBLT  6811>>CALLBLT  6831>>ASSIGN   6832>>ASSIGN
      6832>>ASSIGN   6848<<DOINDEX  6849>>ASSIGN   6907<<DOINDEX  6908>>ASSIGN   6913<<ASSIGN   6942<<CALLBLT
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:484  
      6944>>ASSIGN   7200<<ASSIGN   7201>>DOWHILE  7201>>DOWHILE  7202<<ASSIGN   7202>>ASSIGN   7204>>IF
      7289<<DOINDEX  7290>>IF       7293>>ASSIGN   7296>>IF       7299>>ASSIGN   7304>>DOWHILE  7309>>ASSIGN
      7315>>CALLBLT  7317>>ASSIGN   7329<<DOINDEX  7330>>ASSIGN   7330>>ASSIGN   7457<<ASSIGN   7459>>DOWHILE
      7459>>DOWHILE  7460<<ASSIGN   7460>>ASSIGN   7462>>IF       7685<<ASSIGN   7688--ASSIGN   7689>>CALLBLT
      7712<<CALLBLT  7713>>ASSIGN   7730>>ASSIGN   7789>>ASSIGN   7903<<ASSIGN   7904>>DOWHILE  7904>>DOWHILE
      7904>>DOWHILE  7906<<ASSIGN   7906>>ASSIGN   7908>>IF       7968<<ASSIGN   7969>>CALLBLT  7971<<ASSIGN
      7972>>CALLBLT  7993<<DOINDEX  7997>>ASSIGN   7998>>ASSIGN   7999>>ASSIGN   8001>>ASSIGN   8009<<ASSIGN
      8024<<ASSIGN   8024>>ASSIGN   8044>>ASSIGN   8060>>ASSIGN   8125<<ASSIGN   8126>>ASSIGN   8128>>IF
      8131>>IF       8393<<ASSIGN   8394>>DOINDEX  8442<<DOINDEX  8443>>ASSIGN   8444>>ASSIGN   8486<<DOINDEX
      8487>>ASSIGN   8488>>ASSIGN   8489>>CALLBLT  8489>>CALLBLT  8490>>CALL     8493<<DOINDEX  8494>>ASSIGN
XPN_7ELJE
       279**DCL-ENT  8203--CALL     8229--CALL
XPN_7LSPTOD
       281**DCL-ENT  6401--CALL     6821--CALL
XPN_7LSPTOR
       280**DCL-ENT  6394--CALL     6814--CALL
XPN_7RTOLS
       277**DCL-ENT  8197--CALL     8223--CALL
XREF_BUILT
       552**DCL      5961>>IF
ZEROS IN PROCEDURE EXPAND_PAGE
      7641**DCL      7673--ASSIGN
ZERO_SUP
       307**DCL-ENT  6676--CALL     6678--CALL     6927--CALL     6929--CALL     7368--CALL     7369--CALL
      7370--CALL     7384--CALL     7385--CALL     7386--CALL     7417--CALL     7421--CALL     7606--CALL
      7690--CALL     7706--CALL     7733--CALL     7734--CALL     7738--CALL     7875--CALL     7970--CALL
      7973--CALL     8053--CALL     8105--CALL     8106--CALL     8158--CALL     8163--CALL     8168--CALL
      8172--CALL     8177--CALL     8182--CALL     8188--CALL     8250--CALL     8421--CALL     8433--CALL
      8450--CALL     8476--CALL     8490--CALL
ZI$DIR.ALTKEY
      5835**DCL      5836--REDEF    5837--REDEF    6039>>IF       6174<<ASSIGN
ZI$DIR.AREAFID
      5801**DCL      5802--REDEF
ZI$DIR.AREA_NM.DCB#
      5868**DCL      5953>>ASSIGN   6007>>ASSIGN   6015>>ASSIGN   6075>>ASSIGN   6230>>ASSIGN   6978>>ASSIGN
      7146>>ASSIGN   7269>>ASSIGN   7490>>ASSIGN   7560>>ASSIGN   8506>>ASSIGN
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:485  
ZI$DIR.AREA_NM.NAME.CNT
      5866**DCL      7029>>ASSIGN
ZI$DIR.AREA_NM.NAME.TEXT
      5867**DCL      5958>>ASSIGN   6631<>CALL     7028--ASSIGN   7149<<ASSIGN   7365>>ASSIGN   8419>>ASSIGN
ZI$DIR.AUTODUMP
      5788**DCL      7139>>IF
ZI$DIR.CALCKEY
      5838**DCL      6051>>IF       6584<<ASSIGN   7524>>IF
ZI$DIR.CODE
      5817**DCL      6030>>IF       6074>>IF       7137>>IF       7253>>IF       7267>>IF       7400>>IF
      7454>>IF
ZI$DIR.DATE
      5840**DCL      5844--REDEF
ZI$DIR.DEST_SEED
      5796**DCL      5797--REDEF    5798--REDEF
ZI$DIR.ENCP_SEED
      5793**DCL      5794--REDEF    5795--REDEF    6982>>ASSIGN   7579>>ASSIGN
ZI$DIR.FSET
      5816**DCL      7180>>IF       7394>>IF       7407>>IF       7431>>IF       7467>>IF       7471>>IF
      7723>>IF       7729>>IF       7782>>IF       7788>>IF
ZI$DIR.LOCALKEY
      5809**DCL      6425<<ASSIGN   6872<<ASSIGN   7124>>IF       7216<<ASSIGN   7418>>IF       7433<<ASSIGN
ZI$DIR.LOCKCODE
      5821**DCL      5979>>IF       7036>>IF
ZI$DIR.PCALC
      5813**DCL      5949<<ASSIGN   7292<<ASSIGN   7723>>IF
ZI$DIR.PHEAD
      5815**DCL      7287<<ASSIGN   7298<<ASSIGN   7350>>IF
ZI$DIR.PHEAD2
      5819**DCL      7350>>IF
ZI$DIR.PITEM
      5814**DCL      7454>>IF       7465>>IF       7750>>IF
ZI$DIR.PRNT_INV
      5839**DCL      5996>>IF       5998<<ASSIGN   6012>>IF       6014<<ASSIGN
ZI$DIR.PSETS
      5818**DCL      7467>>IF       7468<>CALL
PL6.E3A0      #001=ZIU$Q2PR File=ZIU$Q2PR.:ZIC0TSI                               FRI 09/05/97 13:22 Page:486  
ZI$DIR.REPRT_ZERO
      5827**DCL      5828--REDEF
ZI$DIR.SCHFID
      5799**DCL      5800--REDEF
ZI$DIR.SET_NM
      5851**DCL      7192<>CALL     7788>>IF
ZI$DIR.TIME
      5845**DCL      5850--REDEF
ZIC$CALC IN PROCEDURE CALC_PRNT
      6555**DCL-ENT  6846--CALL
ZIC$RREC IN PROCEDURE CALC_PRNT
      6554**DCL-ENT  6631--CALL
ZIU$PACK IN PROCEDURE ALTK_PRNT
      6166**DCL-ENT  6310--CALL     6347--CALL
ZIU$PACK IN PROCEDURE CALC_PRNT
      6556**DCL-ENT  6745--CALL     6771--CALL
