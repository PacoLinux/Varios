VERSION E05

PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:1    
        1        1        /*M* VPG$WRITE This module contains routines needed to format and write the
        2        2             output records to the output file.                                       */
        3        3        /*T***********************************************************/
        4        4        /*T*                                                         */
        5        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        6        6        /*T*                                                         */
        7        7        /*T***********************************************************/
        8        8        /*X* DTI=1,THI=1 */
        9        9        /* NEXT AVAIL ERROR CODE = 30 (BY 10'S)  */
       10       10        VPG$SET_UP_WRITE: PROC;
       11       11        /*D* NAME: VPG$SET_UP_WRITE
       12       12             CALL: CALL VPG$SET_UP_WRITE;
       13       13             DESCRIPTION: This procedure sets up FPT_WRITE_OUT for future writes.
       14       14                          It also initializes a few write-related control variables.
       15       15        */
       16       16        %INCLUDE F$DCB;
       17       65        %INCLUDE VP_DATA_R;
       18     7052                                                /* Determine width of output place    */
       19     7053    1           IF OCB.WIDTH.SPEC
       20     7054    1            THEN
       21     7055    1              OUTPUT_WIDTH = OCB.WIDTH.SIZE;
       22     7056    1            ELSE
       23     7057    1              OUTPUT_WIDTH = OCB.DCBPTR$ -> F$DCB.WIDTH;
       24     7058                                                /* Determine practical width          */
       25     7059    1           IF OUTPUT_WIDTH = 0
       26     7060    1            THEN
       27     7061    1              OUTPUT_PWIDTH = 80;
       28     7062    1            ELSE
       29     7063    1              IF OUTPUT_WIDTH > 132
       30     7064    1               THEN
       31     7065    1                 OUTPUT_PWIDTH = 132;
       32     7066    1               ELSE
       33     7067    1                 OUTPUT_PWIDTH = OUTPUT_WIDTH;
       34     7068                                                /* Set up WRITE FPT                   */
       35     7069    1           FPT_WRITE_OUT.V.DCB# = OCB.DCBNM;
       36     7070    1           FPT_WRITE_OUT.V.SEED# = BINBIT(OCB.CRPT,36);
       37     7071    1           IF OCB.NEWKEY=0
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:2    
       38     7072    1            THEN
       39     7073    1              FPT_WRITE_OUT.V.ONEWKEY# = %YES#;
       40     7074    1            ELSE
       41     7075    1              FPT_WRITE_OUT.V.ONEWKEY# = %NO#;
       42     7076    1           IF OCB.ORG = 4                  /* NEED TO GENERATE KEYS              */
       43     7077    1            THEN
       44     7078    1              FPT_WRITE_OUT.KEY_ = VECTOR(OCB.LN.KEY);
       45     7079    1            ELSE
       46     7080    1              IF OCB.ORG=0
       47     7081    1               THEN
       48     7082    1                 FPT_WRITE_OUT.KEY_ = VECTOR(EI_KEY);
       49     7083    1               ELSE
       50     7084    1                 FPT_WRITE_OUT.KEY_ = VECTOR(NIL);
       51     7085                                                /* FORCES CONCATENATION               */
       52     7086    1   END VPG$SET_UP_WRITE;
       53     7087        %EOD;

PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:3    
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPG$SET_UP_WRITE.

   Procedure VPG$SET_UP_WRITE requires 47 words for executable code.
   Procedure VPG$SET_UP_WRITE requires 4 words of local(AUTO) storage.

PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:4    

 Object Unit name= VPG$SET_UP_WRITE                           File name= VPG$WRITE.:E05TOU
 UTS= JUL 30 '97 07:32:36.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10   Proc  even  none    47     57  VPG$SET_UP_WRITE
   11  RoData even  none     8     10  VPG$SET_UP_WRITE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    10      0   yes            yes      Std        0  VPG$SET_UP_WRITE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:5    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  BREAK_LOC                             BREAK_MESSAGE_REPORTER
     OUTPUT_WIDTH                          OUTPUT_PWIDTH                         SPEC_BUF
     OCB                                   IN_RES                                EI_KEY
     M$EI                                  M$EO                                  M$EO1
     M$ME                                  M$SI                                  M$READFILE
     M$DO                                  M$STD1                                M$SORT1
     FPT_WRITE_OUT

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     NULLSID                               ISSID
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:6    


        1        1        /*M* VPG$WRITE This module contains routines needed to format and write the
        2        2             output records to the output file.                                       */
        3        3        /*T***********************************************************/
        4        4        /*T*                                                         */
        5        5        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        6        6        /*T*                                                         */
        7        7        /*T***********************************************************/
        8        8        /*X* DTI=1,THI=1 */
        9        9        /* NEXT AVAIL ERROR CODE = 30 (BY 10'S)  */
       10       10        VPG$SET_UP_WRITE: PROC;

     10 10 000000   000000 700200 xent  VPG$SET_UP_* TSX0  ! X66_AUTO_0
        10 000001   000004 000000                    ZERO    4,0

       11       11        /*D* NAME: VPG$SET_UP_WRITE
       12       12             CALL: CALL VPG$SET_UP_WRITE;
       13       13             DESCRIPTION: This procedure sets up FPT_WRITE_OUT for future writes.
       14       14                          It also initializes a few write-related control variables.
       15       15        */
       16       16        %INCLUDE F$DCB;
       17       65        %INCLUDE VP_DATA_R;
       18     7052                                                /* Determine width of output place    */
       19     7053    1           IF OCB.WIDTH.SPEC

   7053 10 000002   000261 234000 xsym               SZN     OCB+177
        10 000003   000007 605000 10                 TPL     s:7057

       20     7054    1            THEN
       21     7055    1              OUTPUT_WIDTH = OCB.WIDTH.SIZE;

   7055 10 000004   000262 235000 xsym               LDA     OCB+178
        10 000005   000000 755000 xsym               STA     OUTPUT_WIDTH
        10 000006   000013 710000 10                 TRA     s:7059

       22     7056    1            ELSE
       23     7057    1              OUTPUT_WIDTH = OCB.DCBPTR$ -> F$DCB.WIDTH;
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:7    

   7057 10 000007   000001 470400 xsym               LDP0    OCB+1
        10 000010   000004 236100                    LDQ     4,,PR0
        10 000011   000777 376007                    ANQ     511,DL
        10 000012   000000 756000 xsym               STQ     OUTPUT_WIDTH

       24     7058                                                /* Determine practical width          */
       25     7059    1           IF OUTPUT_WIDTH = 0

   7059 10 000013   000000 235000 xsym               LDA     OUTPUT_WIDTH
        10 000014   000020 601000 10                 TNZ     s:7063

       26     7060    1            THEN
       27     7061    1              OUTPUT_PWIDTH = 80;

   7061 10 000015   000120 236007                    LDQ     80,DL
        10 000016   000000 756000 xsym               STQ     OUTPUT_PWIDTH
        10 000017   000026 710000 10                 TRA     s:7069

       28     7062    1            ELSE
       29     7063    1              IF OUTPUT_WIDTH > 132

   7063 10 000020   000204 115007                    CMPA    132,DL
        10 000021   000025 604400 10                 TMOZ    s:7067

       30     7064    1               THEN
       31     7065    1                 OUTPUT_PWIDTH = 132;

   7065 10 000022   000204 236007                    LDQ     132,DL
        10 000023   000000 756000 xsym               STQ     OUTPUT_PWIDTH
        10 000024   000026 710000 10                 TRA     s:7069

       32     7066    1               ELSE
       33     7067    1                 OUTPUT_PWIDTH = OUTPUT_WIDTH;

   7067 10 000025   000000 755000 xsym               STA     OUTPUT_PWIDTH

PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:8    
       34     7068                                                /* Set up WRITE FPT                   */
       35     7069    1           FPT_WRITE_OUT.V.DCB# = OCB.DCBNM;

   7069 10 000026   000000 720000 xsym               LXL0    OCB
        10 000027   000010 740000 xsym               STX0    FPT_WRITE_OUT+8

       36     7070    1           FPT_WRITE_OUT.V.SEED# = BINBIT(OCB.CRPT,36);

   7070 10 000030   000002 236000 xsym               LDQ     OCB+2
        10 000031   000012 756000 xsym               STQ     FPT_WRITE_OUT+10

       37     7071    1           IF OCB.NEWKEY=0

   7071 10 000032   000021 235000 xsym               LDA     OCB+17
        10 000033   000037 601000 10                 TNZ     s:7075

       38     7072    1            THEN
       39     7073    1              FPT_WRITE_OUT.V.ONEWKEY# = %YES#;

   7073 10 000034   000400 236007                    LDQ     256,DL
        10 000035   000010 256000 xsym               ORSQ    FPT_WRITE_OUT+8
        10 000036   000041 710000 10                 TRA     s:7076

       40     7074    1            ELSE
       41     7075    1              FPT_WRITE_OUT.V.ONEWKEY# = %NO#;

   7075 10 000037   000000 236000 11                 LDQ     0
        10 000040   000010 356000 xsym               ANSQ    FPT_WRITE_OUT+8

       42     7076    1           IF OCB.ORG = 4                  /* NEED TO GENERATE KEYS              */

   7076 10 000041   000035 236000 xsym               LDQ     OCB+29
        10 000042   000004 116007                    CMPQ    4,DL
        10 000043   000047 601000 10                 TNZ     s:7080

       43     7077    1            THEN
       44     7078    1              FPT_WRITE_OUT.KEY_ = VECTOR(OCB.LN.KEY);
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:9    

   7078 10 000044   000002 237000 11                 LDAQ    2
        10 000045   000002 757000 xsym               STAQ    FPT_WRITE_OUT+2
        10 000046   000056 710000 10                 TRA     s:7086

       45     7079    1            ELSE
       46     7080    1              IF OCB.ORG=0

   7080 10 000047   000000 116003                    CMPQ    0,DU
        10 000050   000054 601000 10                 TNZ     s:7084

       47     7081    1               THEN
       48     7082    1                 FPT_WRITE_OUT.KEY_ = VECTOR(EI_KEY);

   7082 10 000051   000004 237000 11                 LDAQ    4
        10 000052   000002 757000 xsym               STAQ    FPT_WRITE_OUT+2
        10 000053   000056 710000 10                 TRA     s:7086

       49     7083    1               ELSE
       50     7084    1                 FPT_WRITE_OUT.KEY_ = VECTOR(NIL);

   7084 10 000054   000006 237000 11                 LDAQ    6
        10 000055   000002 757000 xsym               STAQ    FPT_WRITE_OUT+2

       51     7085                                                /* FORCES CONCATENATION               */
       52     7086    1   END VPG$SET_UP_WRITE;

   7086 10 000056   000000 702200 xent               TSX2  ! X66_ARET
       53     7087        %EOD;

PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:10   
--  Include file information  --

   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPG$SET_UP_WRITE.
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:11   

 **** Variables and constants ****

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/c STRC(4608)  r     1 EI_KEY                     0-0-0/d STRC(432)   r     1 FPT_WRITE_OUT
     0-0-0/d STRC(6840)  r     1 OCB                        0-0-0/w SBIN        r     1 OUTPUT_PWIDTH
     0-0-0/w SBIN        r     1 OUTPUT_WIDTH

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d ASTR(3528)  r     1 F$DCB


   Procedure VPG$SET_UP_WRITE requires 47 words for executable code.
   Procedure VPG$SET_UP_WRITE requires 4 words of local(AUTO) storage.
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:12   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:13   
          MINI XREF LISTING

BREAK_LOC
      5272**DCL      5272--REDEF
DEF_ICB.FID.STRING
      5870**DCL      5871--REDEF
DEV_ICB.FID.STRING
      5756**DCL      5757--REDEF
EI_KEY
      5967**DCL      7082--ASSIGN
EI_KEY.KEY
      5968**DCL      5968--REDEF    5968--REDEF    5968--REDEF
EO_OCB.TYPE
      5468**DCL      5469--REDEF
F$DCB.ACTPOS
        42**DCL        42--REDEF
F$DCB.ARS
        17**DCL        17--REDEF
F$DCB.ATTR
        35**DCL        36--REDEF
F$DCB.BORROW
        50**DCL        50--REDEF      50--REDEF      50--REDEF
F$DCB.DCBNAME.L
        64**DCL        64--IMP-SIZ
F$DCB.EOMCHAR
        21**DCL        21--REDEF
F$DCB.FLDID
        45**DCL        45--REDEF
F$DCB.FORM$
        39**DCL        39--REDEF
F$DCB.FSECT
        55**DCL        55--REDEF
F$DCB.FSN
        32**DCL        32--REDEF      32--REDEF      33--REDEF
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:14   
F$DCB.HEADER$
        38**DCL        38--REDEF
F$DCB.IXTNSIZE
        36**DCL        36--REDEF
F$DCB.LASTSTA$
        26**DCL        26--REDEF
F$DCB.LVL
        51**DCL        51--REDEF
F$DCB.NAME.C
        26**DCL        26--REDEF
F$DCB.NOEOF
        47**DCL        47--REDEF
F$DCB.NRECS
        37**DCL        37--REDEF
F$DCB.NRECX
        56**DCL        56--REDEF
F$DCB.OHDR
        48**DCL        48--REDEF
F$DCB.ORG
        31**DCL        31--REDEF
F$DCB.PRECNO
        54**DCL        54--REDEF
F$DCB.RCSZ
        59**DCL        59--REDEF
F$DCB.RES
        27**DCL        27--REDEF
F$DCB.SETX
        39**DCL        39--REDEF
F$DCB.TAB$
        38**DCL        39--REDEF
F$DCB.TDA
        53**DCL        53--REDEF
F$DCB.WIDTH
        24**DCL      7057>>ASSIGN
F$DCB.WSN
        28**DCL        28--REDEF
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:15   
FPT_CLOSE_EI.SN_
      6809**DCL      6809--REDEF
FPT_CLOSE_EI.UTL_
      6810**DCL      6810--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6824**DCL      6824--REDEF
FPT_CLOSE_EI.V.TYPE#
      6822**DCL      6822--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6819**DCL      6819--REDEF    6821--REDEF
FPT_CLOSE_PTL.SN_
      6935**DCL      6935--REDEF
FPT_CLOSE_PTL.UTL_
      6936**DCL      6936--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6950**DCL      6950--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6948**DCL      6948--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6945**DCL      6945--REDEF    6947--REDEF
FPT_CLOSE_READ.SN_
      6851**DCL      6851--REDEF
FPT_CLOSE_READ.UTL_
      6852**DCL      6852--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6866**DCL      6866--REDEF
FPT_CLOSE_READ.V.TYPE#
      6864**DCL      6864--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6861**DCL      6861--REDEF    6863--REDEF
FPT_CLOSE_SI.SN_
      7019**DCL      7019--REDEF
FPT_CLOSE_SI.UTL_
      7020**DCL      7020--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      7034**DCL      7034--REDEF
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:16   
FPT_CLOSE_SI.V.TYPE#
      7032**DCL      7032--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      7029**DCL      7029--REDEF    7031--REDEF
FPT_CLOSE_STD.SN_
      6977**DCL      6977--REDEF
FPT_CLOSE_STD.UTL_
      6978**DCL      6978--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6992**DCL      6992--REDEF
FPT_CLOSE_STD.V.TYPE#
      6990**DCL      6990--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6987**DCL      6987--REDEF    6989--REDEF
FPT_CLSEI_FT.SN_
      6893**DCL      6893--REDEF
FPT_CLSEI_FT.UTL_
      6894**DCL      6894--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6908**DCL      6908--REDEF
FPT_CLSEI_FT.V.TYPE#
      6906**DCL      6906--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6903**DCL      6903--REDEF    6905--REDEF
FPT_OPEN_EI.ACSVEH_
      6464**DCL      6465--REDEF
FPT_OPEN_EI.ALTKEYS_
      6470**DCL      6471--REDEF    6471--REDEF
FPT_OPEN_EI.HDR_
      6469**DCL      6470--REDEF
FPT_OPEN_EI.TAB_
      6468**DCL      6469--REDEF
FPT_OPEN_EI.UHL_
      6462**DCL      6463--REDEF    6463--REDEF
FPT_OPEN_EI.V.FSN#
      6502**DCL      6502--REDEF    6502--REDEF
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:17   
FPT_OPEN_EI.WSN_
      6468**DCL      6468--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6573**DCL      6574--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6579**DCL      6580--REDEF    6580--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6578**DCL      6579--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6577**DCL      6578--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6571**DCL      6572--REDEF    6572--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6611**DCL      6611--REDEF    6611--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6577**DCL      6577--REDEF
FPT_OPEN_OUT.ACSVEH_
      6355**DCL      6356--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6361**DCL      6362--REDEF    6362--REDEF
FPT_OPEN_OUT.HDR_
      6360**DCL      6361--REDEF
FPT_OPEN_OUT.TAB_
      6359**DCL      6360--REDEF
FPT_OPEN_OUT.UHL_
      6353**DCL      6354--REDEF    6354--REDEF
FPT_OPEN_OUT.V.FSN#
      6393**DCL      6393--REDEF    6393--REDEF
FPT_OPEN_OUT.WSN_
      6359**DCL      6359--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6246**DCL      6247--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6252**DCL      6253--REDEF    6253--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6251**DCL      6252--REDEF
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:18   
FPT_OPEN_OUT_SAVE.TAB_
      6250**DCL      6251--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6244**DCL      6245--REDEF    6245--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6284**DCL      6284--REDEF    6284--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6250**DCL      6250--REDEF
FPT_READ_STD.STATION_
      6674**DCL      6675--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6686**DCL      6686--REDEF
FPT_READ_STD.V.INDX#
      6684**DCL      6684--REDEF
FPT_READ_UC.STATION_
      6635**DCL      6636--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6647**DCL      6647--REDEF
FPT_READ_UC.V.INDX#
      6645**DCL      6645--REDEF
FPT_WRITE_ME.STATION_
      6743**DCL      6743--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6750**DCL      6750--REDEF
FPT_WRITE_OUT.KEY_
      6772**DCL      7078<<ASSIGN   7082<<ASSIGN   7084<<ASSIGN
FPT_WRITE_OUT.STATION_
      6774**DCL      6774--REDEF
FPT_WRITE_OUT.V.DCB#
      6775**DCL      7069<<ASSIGN
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6781**DCL      6781--REDEF
FPT_WRITE_OUT.V.ONEWKEY#
      6777**DCL      7073<<ASSIGN   7075<<ASSIGN
FPT_WRITE_OUT.V.SEED#
      6780**DCL      7070<<ASSIGN
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:19   
FPT_WRITE_UC.STATION_
      6712**DCL      6712--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6719**DCL      6719--REDEF
FROM_SN.SN
      5618**DCL      5619--REDEF
GETCMD.OUT$
      4825**DCL      4831--REDEF
ICB.FID.STRING
      5642**DCL      5643--REDEF
IFSFA_PARAM.EOMCHAR#
      5997**DCL      5998--REDEF
IFSFA_PARAM.SIG1
      5991**DCL      5991--REDEF
IFSFA_PARAM.SIG2
      5991**DCL      5992--REDEF
IN_RES
      5564**DCL      5564--REDEF
IN_SN.SN
      5580**DCL      5581--REDEF
OCB.CRPT
      5283**DCL      7070>>ASSIGN
OCB.DCBNM
      5281**DCL      7069>>ASSIGN
OCB.DCBPTR$
      5282**DCL      7057>>ASSIGN
OCB.LN.KEY
      5311**DCL      7078--ASSIGN
OCB.NEWKEY
      5301**DCL      7071>>IF
OCB.ORG
      5318**DCL      7076>>IF       7080>>IF
OCB.TYPE
      5326**DCL      5327--REDEF
OCB.WIDTH.SIZE
      5386**DCL      7055>>ASSIGN
PL6.E3A0      #001=VPG$SET_UP_WRITE File=VPG$WRITE.:E05TSI                       WED 07/30/97 07:32 Page:20   
OCB.WIDTH.SPEC
      5385**DCL      7053>>IF
OFSFA_PARAM.EOMCHAR#
      6027**DCL      6028--REDEF
OFSFA_PARAM.SIG1
      6021**DCL      6021--REDEF
OFSFA_PARAM.SIG2
      6021**DCL      6022--REDEF
OUTPUT_PWIDTH
      5275**DCL      7061<<ASSIGN   7065<<ASSIGN   7067<<ASSIGN
OUTPUT_WIDTH
      5275**DCL      7055<<ASSIGN   7057<<ASSIGN   7059>>IF       7063>>IF       7067>>ASSIGN
OUT_SN.SN
      5598**DCL      5599--REDEF
SPEC_BUF
      5276**DCL      5276--REDEF

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:21   
       54        1        /*T***********************************************************/
       55        2        /*T*                                                         */
       56        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       57        4        /*T*                                                         */
       58        5        /*T***********************************************************/
       59        6        VPG$WRITE_OUT: PROC(REC_LENGTH,CODE);
       60        7        /*D* NAME: VPG$WRITE_OUT
       61        8             CALL: CALL VPG$WRITE_OUT(REC_LENGTH,CODE);
       62        9             DESCRIPTION: This routine either processes an input record if CODE=0
       63       10                          or an EOD condition if CODE=1. If it is to process an
       64       11                          input record, that record is found in a buffer framed
       65       12                          by IN_BUF_VECTOR. Its record length is REC_LENGTH. The
       66       13                          input record is reformatted as specified in the output
       67       14                          specification and written to the output file.
       68       15        */
       69       16        /**/
       70       17        /*  INCLUDE FILES  */
       71       18        /**/
       72       19        %INCLUDE VP_DATA_R;
       73     7006        %INCLUDE F$DCB;
       74     7055        %INCLUDE NK_VFC_C;
       75     7129        %INCLUDE B_ERRORS_C;
       76     8256        %INCLUDE B$TABLES_C;
       77     8364        /**/
       78     8365        /*  BASED STRUCTURES  */
       79     8366        /**/
       80     8367        %B$TCB;
       81     8370        %B$ALT;
       82     8378    1   DCL CHR$ARY(0:0) CHAR(1) BASED;
       83     8379    1   DCL CHAR$1 CHAR(1) BASED;
       84     8380        %NK$SEQREC(NAME = NK$SEQREC,STCLASS = BASED);
       85     8383        %B$XL_LOWER(NAME=LC_XLATE_TBL);
       86     8387        %B$XL_UPPER(NAME=UC_XLATE_TBL);
       87     8391        %B$XL_ASC_DUMP(NAME=PRINTABLE_XLATE_TBL);
       88     8395        /**/
       89     8396        /*  STATIC  */
       90     8397        /**/
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:22   
       91     8398    1   DCL 1 VFC_BUF STATIC,
       92     8399    1         2 VFC CHAR(1),
       93     8400    1         2 TABS(0:31) BIT(9) UNAL;
       94     8401        %FPT_DEVICE(FPTN = FPT_DEVICE,STCLASS = STATIC);
       95     8419        /**/
       96     8420        /*  LOCAL AUTO  */
       97     8421        /**/
       98     8422        %VLP_TAB(FPTN = VLP_TAB,STCLASS = AUTO);
       99     8436    1   DCL REC_LENGTH UBIN WORD;
      100     8437    1   DCL CODE SBIN WORD;
      101     8438        %KEYOPTS (FPTN = KEYOPTS, STCLASS = AUTO);
      102     8464        /**/
      103     8465        /*  CONSTANTS  */
      104     8466        /**/
      105     8467        %FPT_WAIT(FPTN = FPT_WAIT,
      106     8468                  UNITS = 2,                    /* 2 seconds                          */
      107     8469                  STCLASS = CONSTANT);
      108     8483    1   DCL XTBL CHAR(16) CONSTANT INIT('0123456789ABCDEF');
      109     8484    1   DCL X_TBL(0:15) REDEF XTBL CHAR(1);
      110     8485    1   DCL MOP_EKEY(0:5) BIT(9) STATIC INIT(
      111     8486    1                   %MVZB4,                 /* MOVE 4 DIGITS WITH ZERO SUP.       */
      112     8487    1                   %SES10,                 /* RESET FLAG                         */
      113     8488    1                   %MVC1,                  /* MOVE 1'S PLACE DIGIT               */
      114     8489    1                   %INSB7,                 /* OUTPUT A PERIOD                    */
      115     8490    1                   %MVC3,                  /* MOVE 3 DIGITS                      */
      116     8491    1                   %INSB1);                /* OUTPUT A BLANK                     */
      117     8492    1   DCL MOP_SEQNO(0:5) BIT(9) STATIC INIT(
      118     8493    1                   %MVZB5,                 /* MOVE 5 DIGITS WITH ZERO SUP.       */
      119     8494    1                   %SES10,                 /* RESET FLAG                         */
      120     8495    1                   %MVC1,                  /* MOVE LAST DIGIT                    */
      121     8496    1                   %INSB1,                 /* OUTPUT A BLANK                     */
      122     8497    1                   %INSB4,                 /* OUTPUT A DASH                      */
      123     8498    1                   %INSB1);                /* OUTPUT A BLANK                     */
      124     8499    1   DCL MOP_3_BUF(0:1) BIT(9) CONSTANT INIT(%MVZB2,%MVC1);
      125     8500    1   DCL MOP_5_BUF(0:1) BIT(9) CONSTANT INIT(%MVZB4,%MVC1);
      126     8501    1   DCL MOP_8_BUF(0:1) BIT(9) CONSTANT INIT(%MVZB7,%MVC1);
      127     8502    1   DCL 1 CONV_TBL(0:3) CONSTANT,
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:23   
      128     8503    1         2 MICROP BIT(9) INIT(%MVZB8,%MVZB8,%MVZB5,%MVZB6),
      129     8504    1         2 DIV UBIN(18) UNAL INIT(9000,9000,36,180),
      130     8505    1         2 UNITS CHAR(12) INIT(' BYTES',' BYTES',' WORDS(HOST)',' WORDS(FEP)');
      131     8506    1   DCL EOD_LIT CHAR(0) CONSTANT INIT('--EOD--ENCOUNTERED');
      132     8507    1   DCL KEY_BUF CHAR(8);
      133     8508    1   DCL SEQ_BUF CHAR(6);
      134     8509    1   DCL 1 BUF_VECTOR,
      135     8510    1         2 BOUND UBIN(20) UNAL,
      136     8511    1         2 * BIT(16) UNAL,
      137     8512    1         2 PTR$ PTR UNAL;
      138     8513    1   DCL 1 OUT_BUF_VECTOR DALIGNED,
      139     8514    1         2 BOUND UBIN(20) UNAL,
      140     8515    1         2 * BIT(16) UNAL,
      141     8516    1         2 PTR$ PTR UNAL;
      142     8517    1   DCL REC_LEN SBIN WORD;
      143     8518    1   DCL IN$REC CHAR(REC_LEN) BASED;
      144     8519    1   DCL SUB_LEN SBIN WORD;
      145     8520    1   DCL SUB$STR CHAR(SUB_LEN) BASED;
      146     8521    1   DCL T_CHAR CHAR(1);
      147     8522    1   DCL VFC_CHAR CHAR(1);
      148     8523    1   DCL 1 VFC_TEXTC STATIC,
      149     8524    1         2 LEN UBIN(9) UNAL,
      150     8525    1         2 STRING CHAR(1);
      151     8526    1   DCL ONE_BASED_CHAR BASED CHAR(1);
      152     8527    1   DCL I SBIN WORD;
      153     8528    1   DCL START_IDX SBIN;
      154     8529    1   DCL DUMP_BUF CHAR(4096);
      155     8530    1   DCL DUMP_BUF_ARY(0:4095) REDEF DUMP_BUF CHAR(1);
      156     8531    1   DCL 1 DMP_BUF REDEF DUMP_BUF,
      157     8532    1         2 SEQ(0:5) CHAR(1),
      158     8533    1         2 STAR CHAR(1),
      159     8534    1         2 REST CHAR(4089);
      160     8535    1   DCL 1 TEXT$C BASED,
      161     8536    1         2 LEN UBIN BYTE UNAL,
      162     8537    1         2 STRING CHAR(TEXT$C.LEN);
      163     8538        /**/
      164     8539        /*  ENTRY DCLS  */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:24   
      165     8540        /**/
      166     8541        %VP_ENTRIES (OMIT=VPG$WRITE_OUT);
      167     8749        /**/
      168     8750        /*  LOCAL SUBS & EQUS  */
      169     8751        /**/
      170     8752        %SUB CR_CHAR  ="BITASC('015'O)";
      171     8753        %SUB LF_CHAR  ="BITASC('012'O)";
      172     8754        %SUB TAB_CHAR ="BITASC('011'O)";
      173     8755        /******************************************************************************/
      174     8756        /******************************************************************************/
      175     8757        /******************************************************************************/
      176     8758    1           BUF_VECTOR     = IN_BUF_VECTOR;
      177     8759    1           IF CODE=1
      178     8760    1            THEN
      179     8761    2            DO;                            /* EOD CONDITION                      */
      180     8762    2               IF OCB.OCT_HEX.TYPE=0
      181     8763    2                THEN
      182     8764    3                DO;
      183     8765    3                   FPT_WEOF.V.DCB# = OCB.DCBNM;
      184     8766    3                   CALL WEOF ALTRET(WEOF_ALT);
      185     8767    3   WEOF_ALT:       ;
      186     8768    3                   END;
      187     8769    2                ELSE
      188     8770    3                DO;
      189     8771    3                   OUT_BUF_VECTOR = VECTOR(DUMP_BUF);
      190     8772    3                   DUMP_BUF = EOD_LIT;
      191     8773    3                   FPT_WRITE_OUT.V.DVBYTE = '0'B;
      192     8774    3                   CALL WRITE_OUT_BUF(SIZEC(EOD_LIT),0);
      193     8775    3                   END;
      194     8776    2               RETURN;
      195     8777    2               END;
      196     8778    1           REC_LEN = REC_LENGTH;
      197     8779        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:25   
      198     8780        /**/
      199     8781        /*  Some defaults can only be determined when the record (and KEY)            */
      200     8782        /*  are available.                                                            */
      201     8783        /**/
      202     8784        /*  PCL has TWO formats that it uses by default when printing keys:           */
      203     8785        /*    o SAMELINE - The sequence number and EDIT key are placed on the same    */
      204     8786        /*        line as the data.  Nothing else is added.                           */
      205     8787        /*    o PREVLINE - The sequence number, octal, edit, and character keys are   */
      206     8788        /*        placed on the previous line, along with DVBYTE and all the rest     */
      207     8789        /*        of the interesting stuff about this record.                         */
      208     8790        /*  If this record happens to have a three-byte key, or no known key type,    */
      209     8791        /*  PCL defaults to SAMELINE.  Otherwise, PREVLINE is used.                   */
      210     8792        /**/
      211     8793    1           KEYOPTS = OCB.KEY;              /* Fresh copy of user's desires       */
      212     8794    1           IF OCB.KEYS = 0                 /* Not printing the KEYS              */
      213     8795    1             OR OCB.OCT_HEX.TYPE > 0       /* OR defaults from dump-formatting   */
      214     8796    1            THEN
      215     8797    1              GOTO NO_KEYS;
      216     8798    1           IF CMD_MASK & '000600'O         /* Is this a LIST type command        */
      217     8799    1            THEN
      218     8800    2            DO;
      219     8801    2               KEYOPTS.FORMAT = '000010000'B; /* Format SEQ only!                */
      220     8802    2               KEYOPTS.DVBYTE = 1;         /* DON'T                              */
      221     8803    2               KEYOPTS.RECSIZ = 1;         /* DON'T                              */
      222     8804    2               KEYOPTS.ONDATA = 2;         /* DO                                 */
      223     8805    2               IF CUR_SEQ_NO = 0
      224     8806    2                THEN
      225     8807    2                  CUR_SEQ_NO = 1; /* This starts it off - CONSTRUCT_KEY increments */
      226     8808    2               GOTO NO_KEYS;
      227     8809    2               END;
      228     8810    1           IF EI_KEY.LEN = 3               /* 3-BYTE KEYS!                       */
      229     8811    1             OR NOT ICB.FLAVOR.KNOWKEY     /* UNKNOWN KEY TYPE                   */
      230     8812    1            THEN
      231     8813    1              GOTO SAMELINE;
      232     8814    1   PREVLINE: ;
      233     8815    1           IF KEYOPTS.FORMAT = '0'B
      234     8816    1            THEN
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:26   
      235     8817    2            DO;
      236     8818    2               KEYOPTS.FORMAT.S = %YES#;
      237     8819    2               KEYOPTS.FORMAT.O = %YES#;
      238     8820    2               KEYOPTS.FORMAT.C = %YES#;
      239     8821    2               KEYOPTS.FORMAT.E = %YES#;
      240     8822    2               END;
      241     8823    1           IF KEYOPTS.DVBYTE = 0
      242     8824    1            THEN
      243     8825    1              KEYOPTS.DVBYTE = 2;          /* DO                                 */
      244     8826    1           IF KEYOPTS.RECSIZ = 0
      245     8827    1            THEN
      246     8828    1              KEYOPTS.RECSIZ = 2;          /* DO                                 */
      247     8829    1           IF KEYOPTS.ONDATA = 0
      248     8830    1            THEN
      249     8831    1              KEYOPTS.ONDATA = 1;          /* DONT                               */
      250     8832    1           GOTO NO_KEYS;
      251     8833        /**/
      252     8834    1   SAMELINE: ;
      253     8835    1           IF KEYOPTS.FORMAT = '0'B
      254     8836    1            THEN
      255     8837    2            DO;
      256     8838    2               KEYOPTS.FORMAT.S = %YES#;
      257     8839    2               KEYOPTS.FORMAT.E = %YES#;
      258     8840    2               END;
      259     8841    1           IF KEYOPTS.DVBYTE = 0
      260     8842    1            THEN
      261     8843    1              KEYOPTS.DVBYTE = 1;          /* DONT                               */
      262     8844    1           IF KEYOPTS.RECSIZ = 0
      263     8845    1            THEN
      264     8846    1              KEYOPTS.RECSIZ = 1;          /* DONT                               */
      265     8847    1           IF KEYOPTS.ONDATA = 0
      266     8848    1            THEN
      267     8849    1              KEYOPTS.ONDATA = 2;          /* ON SAME LINE                       */
      268     8850    1   NO_KEYS: ;
      269     8851        /**/
      270     8852        /*  Some types of COPY operations should carry across all applicable          */
      271     8853        /*  record attributes.  If the record is being reformatted in some way,       */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:27   
      272     8854        /*  then these attributes should be clobbered.                                */
      273     8855        /**/
      274     8856    1           IF OCB.FLAVOR.FORMATTED = %NO#  /* PLAIN...                           */
      275     8857    1             AND (CMD_MASK & '34'O)        /* ...COPIES...                       */
      276     8858    1            THEN                           /* ...CARRY DVBYTE AND PRESENCE BITS  */
      277     8859    2            DO;
      278     8860    2               FPT_WRITE_OUT.V.DVBYTE = IN_DVBYTE;
      279     8861    2               END;
      280     8862    1            ELSE
      281     8863    2            DO;
      282     8864    2               FPT_WRITE_OUT.V.DVBYTE = '0'B;
      283     8865    2               FPT_WRITE_OUT.IDBUF_ = VECTOR(NIL);
      284     8866    2               END;
      285     8867        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:28   
      286     8868        /**/
      287     8869        /*  This section of code builds the DVBYTE for the record to be               */
      288     8870        /*  output.  Output options and other factors are considered.                 */
      289     8871        /**/
      290     8872    1           IF OCB.NB ~= 1 AND OCB.DEV_MASK & '001'O THEN
      291     8873    1              FPT_WRITE_OUT.V.DVBYTE.BP# = %YES#;
      292     8874                            /* PRESERVE BLANKS FOR DISK FILES UNLESS NB SPECIFIED     */
      293     8875    2           DO CASE(OCB.TRANS);
      294     8876    2            CASE(2);                       /* TRANS SPECIFIED                    */
      295     8877    2              FPT_WRITE_OUT.V.DVBYTE.TRANS# = %YES#;
      296     8878    2            CASE(1);                       /* NTRANS SPECIFIED                   */
      297     8879    2              FPT_WRITE_OUT.V.DVBYTE.TRANS# = %NO#;
      298     8880    2            END;                           /* END CASE                           */
      299     8881    2           DO CASE(OCB.BIN);
      300     8882    2            CASE(2);                       /* BIN SPECIFIED                      */
      301     8883    2              FPT_WRITE_OUT.V.DVBYTE.BIN# = %YES#;
      302     8884    2            CASE(1);                       /* NBIN SPECIFIED                     */
      303     8885    2              FPT_WRITE_OUT.V.DVBYTE.BIN# = %NO#;
      304     8886    2            END;                           /* END CASE                           */
      305     8887    1           IF REC_LEN=0 THEN GOTO NVFC_CASE;
      306     8888    2           DO CASE(OCB.VFC);
      307     8889    2            CASE(1);                       /* NVFC OR EMPTY RECORD               */
      308     8890    2   NVFC_CASE: ;
      309     8891    2              FPT_WRITE_OUT.V.DVBYTE.VFC# = %NO#;
      310     8892    2            CASE(2);                       /* VFC                                */
      311     8893    2              FPT_WRITE_OUT.V.DVBYTE.VFC# = %YES#;
      312     8894    2            CASE(3);                       /* SVFC option                        */
      313     8895    2              FPT_WRITE_OUT.V.DVBYTE.VFC# = %NO#;
      314     8896    2              IF IN_DVBYTE.VFC             /* If there was VFC...                */
      315     8897    2               THEN
      316     8898    3               DO;                         /* ...remove it!                      */
      317     8899    3                  REC_LEN = REC_LEN -1;
      318     8900    3                  BUF_VECTOR.PTR$ = PINCRC(BUF_VECTOR.PTR$,1);
      319     8901    3                  END;
      320     8902    2            CASE(ELSE);                    /* No special VFC manipulation        */
      321     8903    2              ;                            /* Do nothing special                 */
      322     8904    2            END;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:29   
      323     8905        /**/
      324     8906        /*  To simplify processing of options that follow, the VFC character, if      */
      325     8907        /*  there is one, is temporarily removed.                                     */
      326     8908        /**/
      327     8909    1           IF FPT_WRITE_OUT.V.DVBYTE.VFC#
      328     8910    1            THEN
      329     8911    2            DO;                            /* WILL DO VFC ON THIS RECORD         */
      330     8912    2               REC_LEN = REC_LEN-1;        /* SO SAVE THE VFC CHARACTER          */
      331     8913    2               BUF_VECTOR.PTR$     = PINCRC(BUF_VECTOR.PTR$,1);
      332     8914    2               END;
      333     8915        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:30   
      334     8916    1           IF OCB.CR_NCR~=0
      335     8917    1            THEN
      336     8918    1              IF OCB.CR_NCR=1              /* CR option                          */
      337     8919    2               THEN DO;
      338     8920    2                  IF IN_EOMCHAR ~= %EOM_EOR#
      339     8921    3                   THEN DO;
      340     8922    3                      BUF_VECTOR.PTR$->CHR$ARY(REC_LEN) = IN_EOMCHAR;
      341     8923    3                      REC_LEN = REC_LEN+1;
      342     8924    3                      END;
      343     8925    2                  END;
      344     8926    1               ELSE
      345     8927    1   NCR:          IF REC_LEN>0              /* NCR option                         */
      346     8928    1                  THEN
      347     8929    2                  DO;
      348     8930    2                     T_CHAR = BUF_VECTOR.PTR$->CHR$ARY(REC_LEN-1);
      349     8931    2                     IF T_CHAR=LF_CHAR OR T_CHAR=CR_CHAR
      350     8932    2                      THEN
      351     8933    3                      DO;
      352     8934    3                         REC_LEN = REC_LEN-1;
      353     8935    3                         GOTO NCR;
      354     8936    3                         END;
      355     8937    2                     END;
      356     8938        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:31   
      357     8939    1           IF OCB.UC_LC~=0                 /* PROCESS UC OR LC OPTION            */
      358     8940    1            THEN
      359     8941    1              IF OCB.UC_LC=1
      360     8942    1               THEN
      361     8943    1                 CALL XLATE(BUF_VECTOR.PTR$->IN$REC,
      362     8944    1                   LC_XLATE_TBL,           /* LOWER CASE TRANSLATION             */
      363     8945    1                   BUF_VECTOR.PTR$->IN$REC);
      364     8946    1               ELSE
      365     8947    1                 CALL XLATE(BUF_VECTOR.PTR$->IN$REC,
      366     8948    1                   UC_XLATE_TBL,           /* UPPER CASE TRANSLATION             */
      367     8949    1                   BUF_VECTOR.PTR$->IN$REC);
      368     8950        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:32   
      369     8951    1           IF OCB.TX=1 AND REC_LEN>0       /* PROCESS TX OPTION                  */
      370     8952    1            THEN
      371     8953    1              CALL TAB_EXPAND;
      372     8954    1           IF OCB.RECSIZE.MAX_SPEC AND OCB.RECSIZE.MAX_SIZE<REC_LEN
      373     8955    1            THEN
      374     8956    1              REC_LEN = OCB.RECSIZE.MAX_SIZE;
      375     8957        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:33   
      376     8958    1           IF OCB.CS.SPEC~=0               /* PROCESS CS OR NCS OPTION           */
      377     8959    1            THEN
      378     8960    2            DO;
      379     8961    2               IF REC_LEN<80
      380     8962    2                THEN
      381     8963    3                DO;
      382     8964    3                   SUB_LEN = 80-REC_LEN;
      383     8965    3                   PINCRC(BUF_VECTOR.PTR$,REC_LEN)->SUB$STR     = ' ';
      384     8966    3                   REC_LEN = 80;
      385     8967    3                   END;
      386     8968    2               CALL BINCHAR(SUBSTR(BUF_VECTOR.PTR$->IN$REC,72,8),OCB.CS.CURRENT);
      387     8969    2               OCB.CS.CURRENT = OCB.CS.CURRENT+OCB.CS.K;
      388     8970    2               SUB_LEN = OCB.CS.ID.L;
      389     8971    2               PINCRC(BUF_VECTOR.PTR$,72)->SUB$STR     = OCB.CS.ID.C;
      390     8972    2               END;
      391     8973        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:34   
      392     8974    1           IF OCB.RECSIZE.MIN_SIZE>REC_LEN
      393     8975    1            THEN
      394     8976    2            DO;
      395     8977    2               SUB_LEN = OCB.RECSIZE.MIN_SIZE - REC_LEN;
      396     8978    2               PINCRC(BUF_VECTOR.PTR$,REC_LEN)->SUB$STR = ' ';
      397     8979    2               REC_LEN = OCB.RECSIZE.MIN_SIZE;
      398     8980    2               END;
      399     8981    1           IF OCB.NB=1 AND REC_LEN>OCB.RECSIZE.MIN_SIZE /* PROCESS NB OPTION     */
      400     8982    1            THEN
      401     8983    2            DO WHILE(BUF_VECTOR.PTR$->CHR$ARY(REC_LEN-1)=' '
      402     8984    2             AND REC_LEN > OCB.RECSIZE.MIN_SIZE);
      403     8985    2               REC_LEN = REC_LEN-1;
      404     8986    2               IF REC_LEN = 0
      405     8987    2                THEN
      406     8988    2                  GOTO ZERO_LEN;
      407     8989    2               END;
      408     8990        /**/
      409     8991        /*  Done twiddling with the record                                            */
      410     8992        /**/
      411     8993    1   ZERO_LEN: ;
      412     8994        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:35   
      413     8995    1           IF FPT_WRITE_OUT.V.DVBYTE.VFC#=%YES# /* RESTORE VFC IF NEEDED         */
      414     8996    1            THEN
      415     8997    2            DO;
      416     8998    2               REC_LEN = REC_LEN+1;
      417     8999    2               BUF_VECTOR.PTR$ = PINCRC(BUF_VECTOR.PTR$,-1);
      418     9000    2               IF OCB.FVFC
      419     9001    2                THEN                       /* FVFC IN EFFECT                     */
      420     9002    3                DO;
      421     9003    3                   VFC_CHAR = BUF_VECTOR.PTR$->CHR$ARY(0);
      422     9004    3                   IF VFC_CHAR='+'
      423     9005    3                    THEN
      424     9006    3                      VFC_CHAR = '`';
      425     9007    3                    ELSE
      426     9008    3                      IF VFC_CHAR='0'
      427     9009    3                       THEN
      428     9010    3                         VFC_CHAR = 'b';
      429     9011    3                       ELSE
      430     9012    3                         IF VFC_CHAR='1'
      431     9013    3                          THEN
      432     9014    3                            VFC_CHAR = '0';
      433     9015    3                          ELSE
      434     9016    3                            IF VFC_CHAR=' '
      435     9017    3                             THEN
      436     9018    3                               VFC_CHAR = 'a';
      437     9019    3                   BUF_VECTOR.PTR$->CHR$ARY(0) = VFC_CHAR;
      438     9020    3                   END;
      439     9021    2               END;
      440     9022        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:36   
      441     9023    1           IF OCB.OCT_HEX.TYPE=0
      442     9024    1            THEN
      443     9025    1              CALL NO_DUMP_PROC;
      444     9026    1            ELSE
      445     9027    1              CALL DUMP_PROC;
      446     9028    1           RETURN;
      447     9029        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:37   
      448     9030    1   WEOF:   PROC ALTRET;
      449     9031    3           DO CASE(WRITE_MODE);
      450     9032    3            CASE(0);                       /* Normal PMME                        */
      451     9033    3              CALL M$WEOF(FPT_WEOF) ALTRET(PMME_ALT);
      452     9034    3            CASE(1);                       /* FSFA routines                      */
      453     9035    3              ;                            /* Fake it                            */
      454     9036    3            END;                           /* END CASE                           */
      455     9037    2           RETURN;
      456     9038        /**/
      457     9039    2   PMME_ALT:
      458     9040    2           OUTPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
      459     9041    2           ALTRETURN;
      460     9042        /*                                      NOT YET USED !
      461     9043        FSFA_ALT:
      462     9044                 OUTPUT_ERR = OFSFA_PARAM.ERR;
      463     9045                 ALTRETURN;
      464     9046          */
      465     9047    2   END WEOF;
      466     9048        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:38   
      467     9049    1   DUMP_PROC: PROC;
      468     9050        /*I* NAME: DUMP_PROC
      469     9051             PURPOSE: To complete output of current record in an OCTAL or HEXADECIMAL
      470     9052                      dump format.
      471     9053             CALL: CALL DUMP_PROC;
      472     9054             DESCRIPTION: This procedure takes the current record and reformats
      473     9055                          it into an OCTAL or HEXADECIMAL dump.
      474     9056        */
      475     9057    2   DCL WORDS_TO_DUMP SBIN WORD;
      476     9058    2   DCL CHARS_TO_DUMP SBIN WORD;
      477     9059    2   DCL WORD_OFFSET SBIN WORD;
      478     9060    2   DCL CHAR_OFFSET SBIN WORD;
      479     9061    2   DCL J SBIN WORD;
      480     9062    2   DCL K SBIN WORD;
      481     9063    2   DCL L SBIN WORD;
      482     9064    2   DCL SAVE_BUF CHAR(128);
      483     9065    2   DCL SAVE_BUF_ARY(0:383) REDEF SAVE_BUF UBIN(3) UNAL;
      484     9066    2   DCL SAVE_BUF_X_ARY(0:287) REDEF SAVE_BUF UBIN(4) UNAL;
      485     9067    2   DCL 1 SAVE_BUF_X1_ARY(0:127) REDEF SAVE_BUF,
      486     9068    2         2 * BIT(1) UNAL,
      487     9069    2         2 ONE UBIN(4) UNAL,
      488     9070    2         2 TWO UBIN(4) UNAL;
      489     9071    2   DCL STAR_FLAG SBIN WORD;
      490     9072    2   DCL CHAR$ PTR;
      491     9073    2   DCL TEXT$ PTR;
      492     9074    2   DCL LAST_WORD_OFFSET SBIN WORD;
      493     9075    2   DCL BUF_LEN SBIN WORD;
      494     9076    2   DCL CHAR$ACTER CHAR(1) BASED;
      495     9077    2   DCL CHAR$32 CHAR(32) BASED;
      496     9078    2   DCL CHAR$36 CHAR(36) BASED;
      497     9079    2   DCL UBIN$4 UBIN(4) UNAL BASED;
      498     9080        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:39   
      499     9081    2           CALL WRITE_BLANK_LINE;          /* Make a blank line                  */
      500     9082    2           START_IDX = 0;
      501     9083    2           CALL CONSTRUCT_KEY(DUMP_BUF,START_IDX,SIZEC(DUMP_BUF));
      502     9084    2           OUT_BUF_VECTOR = VECTOR(DUMP_BUF);
      503     9085    2           CALL WRITE_OUT_BUF(START_IDX,0);
      504     9086    2           IF REC_LEN=0
      505     9087    2            THEN
      506     9088    2              RETURN;
      507     9089    3           DO CASE(OCB.OCT_HEX.TYPE);
      508     9090    3            CASE(0,1);
      509     9091    3              CALL DUMP_OCT;
      510     9092    3            CASE(2);
      511     9093    3              CALL DUMP_X;
      512     9094    3            CASE(3);
      513     9095    3              CALL DUMP_X1;
      514     9096    3            END;
      515     9097    2           RETURN;
      516     9098        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:40   
      517     9099    2   WRITE_BLANK_LINE: PROC;
      518     9100        /*I* NAME: WRITE_BLANK_LINE
      519     9101             PURPOSE: To write out a blank line with the appropriate VFC
      520     9102                      options applied.
      521     9103             CALL: CALL WRITE_BLANK_LINE;
      522     9104             DESCRIPTION: This procedure generates a blank line through the
      523     9105                          output DCB.
      524     9106        */
      525     9107    3   DCL SAVE_DVBYTE BIT(9) STATIC;
      526     9108    3   DCL VFC_CHARACTER CHAR(1) STATIC;
      527     9109
      528     9110    3           SAVE_DVBYTE=FPT_WRITE_OUT.V.DVBYTE;
      529     9111    3           FPT_WRITE_OUT.V.DVBYTE.VFC#='0'B; /* DEFAULT TO ONE BLANK LINE        */
      530     9112    3           VFC_CHARACTER = ' ';
      531     9113    4           DO CASE(OCB.VFC_USE);
      532     9114    4            CASE(1);                  /* Use OCB.VFC_CHAR iff none already there */
      533     9115    4              IF NOT FPT_WRITE_OUT.V.DVBYTE.VFC#
      534     9116    4               THEN
      535     9117    5               DO;
      536     9118    5                  FPT_WRITE_OUT.V.DVBYTE.VFC# = '1'B;
      537     9119    5                  VFC_CHARACTER=OCB.VFC_CHAR;
      538     9120    5                  END;
      539     9121    4            CASE(2);                       /* Use OCB.VFC_CHAR no matter what    */
      540     9122    4              FPT_WRITE_OUT.V.DVBYTE.VFC#='1'B;
      541     9123    4              VFC_CHARACTER=OCB.VFC_CHAR;
      542     9124    4            END;                           /* CASE                               */
      543     9125
      544     9126    3           OUT_BUF_VECTOR=VECTOR(VFC_CHARACTER); /* Set up for write             */
      545     9127    3           CALL WRITE_OUT_BUF(SIZEC(VFC_CHARACTER),0); /* write it               */
      546     9128    3           FPT_WRITE_OUT.V.DVBYTE = SAVE_DVBYTE; /* restore DVBYTE               */
      547     9129    3   END WRITE_BLANK_LINE;
      548     9130        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:41   
      549     9131    2   DUMP_OCT: PROC;
      550     9132        /*I* NAME: DUMP_OCT
      551     9133             PURPOSE: To dump the current record in octal format.
      552     9134             DESCRIPTION: This procedure dumps the current record in octal  format.
      553     9135        */
      554     9136    3           IF OCB.OCT_HEX.TEXT = 1         /* TEXT=DEFAULT                       */
      555     9137    3            THEN
      556     9138    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH - SIZEC(DMP_BUF.SEQ) -1)/14/2)*2;
      557     9139    3            ELSE
      558     9140    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH - SIZEC(DMP_BUF.SEQ) -2)/18/2)*2;
      559     9141    3           IF WORDS_TO_DUMP=0
      560     9142    3            THEN
      561     9143    3              WORDS_TO_DUMP = 1;
      562     9144    3           CHARS_TO_DUMP = WORDS_TO_DUMP*4;
      563     9145    3           TEXT$ = PINCRC(ADDR(DUMP_BUF),SIZEC(DMP_BUF.SEQ) +2 + WORDS_TO_DUMP*14);
      564     9146    3           STAR_FLAG = 0;
      565     9147    3           LAST_WORD_OFFSET = ((REC_LEN-1)/4/WORDS_TO_DUMP)*WORDS_TO_DUMP;
      566     9148    4           DO WORD_OFFSET=0 TO LAST_WORD_OFFSET BY WORDS_TO_DUMP;
      567     9149    4              CHAR_OFFSET = WORD_OFFSET*4;
      568     9150    4              IF WORD_OFFSET=LAST_WORD_OFFSET
      569     9151    4               THEN
      570     9152    4                 CHARS_TO_DUMP = REC_LEN-CHAR_OFFSET;
      571     9153    4              IF (SUBSTR(BUF_VECTOR.PTR$->IN$REC,CHAR_OFFSET,CHARS_TO_DUMP)
      572     9154    4                =SAVE_BUF)
      573     9155    4                AND (WORD_OFFSET~=0)
      574     9156    4                AND (WORD_OFFSET~=LAST_WORD_OFFSET)
      575     9157    4                AND (OCB.OCT_HEX.DUPE ~= 2) /* NDUPE=DEFAULT                     */
      576     9158    4               THEN
      577     9159    4                 STAR_FLAG = 1;
      578     9160    4               ELSE
      579     9161    5               DO;
      580     9162    5                  CHAR$ = ADDR(DMP_BUF.REST);
      581     9163    5                  SAVE_BUF = SUBSTR(BUF_VECTOR.PTR$->IN$REC,
      582     9164    5                    CHAR_OFFSET,
      583     9165    5                    CHARS_TO_DUMP);
      584     9166    5                  DUMP_BUF = ' ';
      585     9167    5                  J = WORD_OFFSET;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:42   
      586     9168    6                  DO K=0 TO SIZEC(DMP_BUF.SEQ) -1;
      587     9169    6                     CALL BINCHAR(DMP_BUF.SEQ(SIZEC(DMP_BUF.SEQ) -1 -K),MOD(J,8));
      588     9170    6                     J = J/8;
      589     9171    6                     END;
      590     9172    5                  IF STAR_FLAG=1
      591     9173    5                   THEN
      592     9174    6                   DO;
      593     9175    6                      DMP_BUF.STAR = '*';
      594     9176    6                      STAR_FLAG = 0;
      595     9177    6                      END;
      596     9178    6                  DO J=0 TO CHARS_TO_DUMP-1;
      597     9179    7                     DO CASE(MOD(J,4));
      598     9180    7                      CASE(0);
      599     9181    7                        CHAR$ = PINCRC(CHAR$,1);
      600     9182    7                      CASE(2);
      601     9183    7                        CHAR$->CHAR$ACTER = '.';
      602     9184    7                        CHAR$ = PINCRC(CHAR$,1);
      603     9185    7                      END;
      604     9186    6                     L = J*3;
      605     9187    7                     DO K=0 TO 2;
      606     9188    7                        CALL BINCHAR(CHAR$->CHR$ARY(K),SAVE_BUF_ARY(L+K));
      607     9189    7                        END;
      608     9190    6                     CHAR$ = PINCRC(CHAR$,3);
      609     9191    6                     END;
      610     9192    5                  IF OCB.OCT_HEX.TEXT ~= 1 /* TEXT=DEFAULT                       */
      611     9193    5                   THEN
      612     9194    6                   DO;
      613     9195    6                      CALL XLATE(TEXT$->CHAR$32,PRINTABLE_XLATE_TBL,SAVE_BUF);
      614     9196    6                      BUF_LEN = WORDS_TO_DUMP*18 + SIZEC(DMP_BUF.SEQ) +2;
      615     9197    6                      END;
      616     9198    5                   ELSE
      617     9199    5                     BUF_LEN = WORDS_TO_DUMP*14 + SIZEC(DMP_BUF.SEQ) +1;
      618     9200    5                  CALL WRITE_OUT_BUF(BUF_LEN,0);
      619     9201    5                  END;
      620     9202    4              END;
      621     9203    3   END DUMP_OCT;
      622     9204        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:43   
      623     9205    2   DUMP_X: PROC;
      624     9206        /*I* NAME: DUMP_X
      625     9207             PURPOSE: To dump the current record in X format.
      626     9208             DESCRIPTION: This procedure dumps the current record in X format.
      627     9209                          X format is dumping 18 hex digits per 2 L66 words. ASCII
      628     9210                          translation is provided on the right margin with 1 ASCII
      629     9211                          digit per every 8 bits.  Each two nibs (hex characters) will
      630     9212                          map to one ASCII character.  A pad bit is added to the left
      631     9213                          of the ASCII character to make it 9 bits.
      632     9214                          If the input record is not an
      633     9215                          even multiple of 8 bits, the input record is zero extended
      634     9216                          so that it is.  Count is by L66 word.  The record is split
      635     9217                          into as many output lines as will fit on the device.
      636     9218        */
      637     9219    3   DCL NIBS_TO_DUMP SBIN WORD;
      638     9220    3   DCL T$ PTR;
      639     9221    3           IF OCB.OCT_HEX.TEXT = 1         /* TEXT=DEFAULT                       */
      640     9222    3            THEN
      641     9223    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ)-1)/10/2)*2;
              9223                       /* Number of dump words per line */
      642     9224    3            ELSE
      643     9225    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ)-2)/15/2)*2;
      644     9226    3           IF WORDS_TO_DUMP=0
      645     9227    3            THEN
      646     9228    3              WORDS_TO_DUMP = 2;
      647     9229    3           CHARS_TO_DUMP = WORDS_TO_DUMP * 4; /* 4 characters per word           */
      648     9230    3           NIBS_TO_DUMP = WORDS_TO_DUMP*9;
      649     9231    3           TEXT$ = PINCRC(ADDR(DUMP_BUF),SIZEC(DMP_BUF.SEQ)+2 + WORDS_TO_DUMP*10);
      650     9232    3           STAR_FLAG = 0;                  /* No identical lines, yet            */
      651     9233    3           LAST_WORD_OFFSET = ((REC_LEN-1)/4/WORDS_TO_DUMP)*WORDS_TO_DUMP;
      652     9234    4           DO WORD_OFFSET=0 TO LAST_WORD_OFFSET BY WORDS_TO_DUMP; /* DO for      */
      653     9235                                                /* each line to be output             */
      654     9236    4              CHAR_OFFSET = WORD_OFFSET*4;
      655     9237    4              IF WORD_OFFSET=LAST_WORD_OFFSET
      656     9238    4               THEN                        /* Last line, may be partial          */
      657     9239    4                 NIBS_TO_DUMP = ((REC_LEN-CHAR_OFFSET)*9+3)/4;
      658     9240    4              IF (SUBSTR(BUF_VECTOR.PTR$->IN$REC,CHAR_OFFSET,CHARS_TO_DUMP)
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:44   
      659     9241    4                =SAVE_BUF)
      660     9242    4                AND (WORD_OFFSET~=0)
      661     9243    4                AND (WORD_OFFSET~=LAST_WORD_OFFSET)
      662     9244    4                AND (OCB.OCT_HEX.DUPE ~= 2) /* NDUPE=DEFAULT                     */
      663     9245    4               THEN                        /* Duplicate line, don't print it     */
      664     9246    4                 STAR_FLAG = 1;
      665     9247    4               ELSE                        /* Print this line                    */
      666     9248    5               DO;
      667     9249    5                  CHAR$ = ADDR(DMP_BUF.REST); /* Start location for nibs         */
      668     9250    5                  T$ = PINCRB(TEXT$,1);    /* Destination for first nib to make  */
      669     9251                                                /* a text character                   */
      670     9252    5                  SAVE_BUF = SUBSTR(BUF_VECTOR.PTR$->IN$REC,
      671     9253    5                    CHAR_OFFSET,
      672     9254    5                    CHARS_TO_DUMP);
      673     9255    5                  CALL INSERT(DUMP_BUF,0,132,' ');
      674     9256    5                  J = WORD_OFFSET;
      675     9257    6                  DO K=0 TO 5;             /* Insert 'address' columns           */
      676     9258    6                     DMP_BUF.SEQ(-K+5) = X_TBL(MOD(J,16));
      677     9259    6                     J = J/16;
      678     9260    6                     END;
      679     9261    5                  IF STAR_FLAG=1
      680     9262    5                   THEN                    /* Print '*' to indicate omitted line */
      681     9263    6                   DO;
      682     9264    6                      DMP_BUF.STAR = '*';
      683     9265    6                      STAR_FLAG = 0;
      684     9266    6                      END;
      685     9267    6                  DO J=0 TO NIBS_TO_DUMP-1; /* For each nib to be printed,...    */
      686     9268    6                     IF MOD(J,9)=0
      687     9269    6                      THEN                 /* Skip a space after block of 8 nibs */
      688     9270    6                        CHAR$ = PINCRC(CHAR$,1);
      689     9271    6                     CHAR$->CHAR$ACTER = X_TBL(SAVE_BUF_X_ARY(J)); /* Insert nib */
      690     9272    6                     CHAR$ = PINCRC(CHAR$,1); /* Point to the next nib           */
      691     9273    6                     T$->UBIN$4 = SAVE_BUF_X_ARY(J); /* Stuff the nib into half  */
      692     9274                                                /* of a text character                */
      693     9275    6                     IF MOD(J,2)=0
      694     9276    6                      THEN                 /* Nib 0,2,4,6,8...                   */
      695     9277    6                        T$ = PINCRB(T$,4); /* Put the next nib right next to it  */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:45   
      696     9278    6                      ELSE                 /* Nib 1,3,5,7,9...                   */
      697     9279    6                        T$ = PINCRB(T$,5); /* Skip an extra bit before putting   */
      698     9280                                                /* down next nib, so later XLATE will */
      699     9281                                                /* have 9-bit character to work on    */
      700     9282    6                     END;
      701     9283    5                  IF OCB.OCT_HEX.TEXT ~= 1 /* TEXT=DEFAULT                       */
      702     9284    5                   THEN                    /* Text is to be displayed            */
      703     9285    6                   DO;
      704     9286                                                /* Translate previously filled chars  */
      705     9287    6                      CALL XLATE(TEXT$->CHAR$36,PRINTABLE_XLATE_TBL,TEXT$->CHAR$36);
      706     9288    6                      BUF_LEN = (WORDS_TO_DUMP/2)*29 + SIZEC(DMP_BUF.SEQ) + 2;
              9288                               /* 4.5 characters/word */
      707     9289    6                      END;
      708     9290    5                   ELSE                    /* No text is to be displayed         */
      709     9291    5                     BUF_LEN = WORDS_TO_DUMP*10 + SIZEC(DMP_BUF.SEQ) + 1;
      710     9292    5                  CALL WRITE_OUT_BUF(BUF_LEN);
      711     9293    5                  END;
      712     9294    4              END;
      713     9295    3           RETURN;
      714     9296    3   END DUMP_X;
      715     9297        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:46   
      716     9298    2   DUMP_X1: PROC;
      717     9299        /*I* NAME: DUMP_X1
      718     9300             PURPOSE: To dump the current record in X1 format.
      719     9301             CALL: CALL DUMP_X1;
      720     9302             DESCRIPTION: This procedure dumps the current record in X1 format.
      721     9303                          X1 format is 8 bits out of 9, 2 bytes per group(L6 word).
      722     9304                          Count is by L6 word. ASCII translation is provided if desired
      723     9305                          in the right margin at 1 ASCII character per 9 bits input.
      724     9306        */
      725     9307    3           IF OCB.OCT_HEX.TEXT = 1         /* TEXT=DEFAULT                       */
      726     9308    3            THEN
      727     9309    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ) - 1)/5/2)*2;
      728     9310    3            ELSE
      729     9311    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ) - 2)/7/2)*2;
      730     9312    3           IF WORDS_TO_DUMP=0
      731     9313    3            THEN
      732     9314    3              WORDS_TO_DUMP = 2;
      733     9315    3           CHARS_TO_DUMP = WORDS_TO_DUMP*2;
      734     9316    3           TEXT$ = PINCRC(ADDR(DUMP_BUF),SIZEC(DMP_BUF.SEQ) + 2  + WORDS_TO_DUMP*5);
      735     9317    3           STAR_FLAG = 0;
      736     9318    3           LAST_WORD_OFFSET = ((REC_LEN-1)/2/WORDS_TO_DUMP)*WORDS_TO_DUMP;
      737     9319    4           DO WORD_OFFSET=0 TO LAST_WORD_OFFSET BY WORDS_TO_DUMP;
      738     9320    4              CHAR_OFFSET = WORD_OFFSET*2;
      739     9321    4              IF WORD_OFFSET=LAST_WORD_OFFSET
      740     9322    4               THEN
      741     9323    4                 CHARS_TO_DUMP = REC_LEN-CHAR_OFFSET;
      742     9324    4              IF (SUBSTR(BUF_VECTOR.PTR$->IN$REC,CHAR_OFFSET,CHARS_TO_DUMP)
      743     9325    4                =SAVE_BUF)
      744     9326    4                AND (WORD_OFFSET~=0)
      745     9327    4                AND (WORD_OFFSET~=LAST_WORD_OFFSET)
      746     9328    4                AND (OCB.OCT_HEX.DUPE ~= 2) /* NDUPE=DEFAULT                     */
      747     9329    4               THEN
      748     9330    4                 STAR_FLAG = 1;
      749     9331    4               ELSE
      750     9332    5               DO;
      751     9333    5                  CHAR$ = ADDR(DMP_BUF.REST);
      752     9334    5                  SAVE_BUF = SUBSTR(BUF_VECTOR.PTR$->IN$REC,
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:47   
      753     9335    5                    CHAR_OFFSET,
      754     9336    5                    CHARS_TO_DUMP);
      755     9337    5                  CALL INSERT(DUMP_BUF,0,132,' ');
      756     9338    5                  J = WORD_OFFSET;
      757     9339    6                  DO K=0 TO 5;
      758     9340    6                     DMP_BUF.SEQ(-K+5) = X_TBL(MOD(J,16));
      759     9341    6                     J = J/16;
      760     9342    6                     END;
      761     9343    5                  IF STAR_FLAG=1
      762     9344    5                   THEN
      763     9345    6                   DO;
      764     9346    6                      DMP_BUF.STAR = '*';
      765     9347    6                      STAR_FLAG = 0;
      766     9348    6                      END;
      767     9349    6                  DO J=0 TO CHARS_TO_DUMP-1;
      768     9350    6                     IF MOD(J,2)=0
      769     9351    6                      THEN
      770     9352    6                        CHAR$ = PINCRC(CHAR$,1);
      771     9353    6                     CHAR$->CHAR$ACTER = X_TBL(SAVE_BUF_X1_ARY.ONE(J));
      772     9354    6                     CHAR$ = PINCRC(CHAR$,1);
      773     9355    6                     CHAR$->CHAR$ACTER = X_TBL(SAVE_BUF_X1_ARY.TWO(J));
      774     9356    6                     CHAR$ = PINCRC(CHAR$,1);
      775     9357    6                     END;
      776     9358    5                  IF OCB.OCT_HEX.TEXT ~= 1 /* TEXT=DEFAULT                       */
      777     9359    5                   THEN
      778     9360    6                   DO;
      779     9361    6                      CALL XLATE(TEXT$->CHAR$32,PRINTABLE_XLATE_TBL,SAVE_BUF);
      780     9362    6                      BUF_LEN = WORDS_TO_DUMP*7 + SIZEC(DMP_BUF.SEQ) + 2;
      781     9363    6                      END;
      782     9364    5                   ELSE
      783     9365    5                     BUF_LEN = WORDS_TO_DUMP*5 + SIZEC(DMP_BUF.SEQ) + 1;
      784     9366    5                  CALL WRITE_OUT_BUF(BUF_LEN);
      785     9367    5                  END;
      786     9368    4              END;
      787     9369    3           RETURN;
      788     9370    3   END DUMP_X1;
      789     9371    2   END DUMP_PROC;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:48   
      790     9372        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:49   
      791     9373    1   CONSTRUCT_KEY: PROC(DUMP_BUF,START_IDX,BUF_SIZE);
      792     9374        /*I* NAME: CONSTRUCT_KEY
      793     9375             PURPOSE: To format a line containing the record sequence
      794     9376                      number, key, and length of record.
      795     9377             CALL: CALL CONSTRUCT_KEY(BUFFER,INSERT_POSITION,BUF_SIZE);
      796     9378             DESCRIPTION: This procedure outputs to the output file as one record
      797     9379                          the following information, depending on options:
      798     9380                            o The record sequence number if known
      799     9381                            o The record's key if it has one, in
      800     9382                              o octal
      801     9383                              o characters
      802     9384                              o EDIT-style, if possible
      803     9385                              o HEX
      804     9386                            o The length of the record in either bytes, L66 words,
      805     9387                              or L6 words depending on the type of dump
      806     9388                            o Keywords for various bits in DVBYTE
      807     9389                            o Presence bits (in octal) if they exist
      808     9390        */
      809     9391    2   DCL DUMP_BUF CHAR(BUF_SIZE) PARAM;
      810     9392    2   DCL START_IDX SBIN WORD PARAM;
      811     9393    2   DCL BUF_SIZE SBIN WORD PARAM;
      812     9394    2   DCL MOP_RECLEN(0:4) BIT(9) STATIC INIT(%MVZB1,%SES10,%MVC1,%INSB7,%MVC2);
      813     9395            /* This MOP string is used to format the record length number. The first
      814     9396            entry (%MVZB1) will be replaced by the correct MOP before EDITCHAR is
      815     9397            called.                                                                   */
      816     9398    2   DCL RECLEN_BUF CHAR(9);
      817     9399    2   DCL P$ PTR;
      818     9400    2   DCL Q$ PTR;
      819     9401    2   DCL UBIN$4 UBIN(4) BASED UNAL;
      820     9402    2   DCL UBIN$3 UBIN(3) BASED UNAL;
      821     9403    2   DCL J SBIN WORD;
      822     9404        /**/
      823     9405    2           DUMP_BUF = ' ';
      824     9406        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:50   
      825     9407        /**/
      826     9408        /*  Record sequence number, if known.  */
      827     9409        /**/
      828     9410    2           IF NOT KEYOPTS.FORMAT.S
      829     9411    2            THEN
      830     9412    2              GOTO SEQUENCE_DONE;
      831     9413    2           IF CUR_SEQ_NO>0                 /* PUT OUT A RECORD SEQUENCE          */
      832     9414    2            THEN                           /* NUMBER IF KNOWN                    */
      833     9415    3            DO;
      834     9416    3               CALL BINCHAR(SEQ_BUF,CUR_SEQ_NO);
      835     9417    3               CALL EDITCHAR(DUMP_BUF,
      836     9418    3                 START_IDX,
      837     9419    3                 9,
      838     9420    3                 MOP_SEQNO,
      839     9421    3                 SEQ_BUF);
      840     9422    3               START_IDX = START_IDX+9;
      841     9423    3               IF CMD_MASK & '0006'O THEN  /* LIST OR LISTSTD                    */
      842     9424    3                  CUR_SEQ_NO = CUR_SEQ_NO +1;
      843     9425    3               END;
      844     9426    2   SEQUENCE_DONE: ;
      845     9427        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:51   
      846     9428        /**/
      847     9429        /*  KEY, if it exists.  */
      848     9430        /**/
      849     9431    2           IF CMD_MASK & '34'O             /* IF A COPY-TYPE COMMAND...          */
      850     9432    2            THEN
      851     9433    2              IF ICB.FLAVOR.KNOWKEY
      852     9434    2               THEN
      853     9435    2                 CALL INSERT_OCT_KEY;      /* Put out the KEY                    */
      854     9436        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:52   
      855     9437        /**/
      856     9438        /*  Record length.  */
      857     9439        /**/
      858     9440    2           IF KEYOPTS.RECSIZ ~= 2
      859     9441    2            THEN
      860     9442    2              GOTO RECLEN_DONE;
      861     9443    2           CALL BINCHAR(RECLEN_BUF,(IN_ARS*9000)/CONV_TBL.DIV(OCB.OCT_HEX.TYPE));
      862     9444    2           MOP_RECLEN(0) = CONV_TBL.MICROP(OCB.OCT_HEX.TYPE);
      863     9445    2           CALL EDITCHAR(RECLEN_BUF,
      864     9446    2             0,
      865     9447    2             9,
      866     9448    2             MOP_RECLEN,
      867     9449    2             RECLEN_BUF);
      868     9450    2           I = 0;
      869     9451    3           DO WHILE (SUBSTR(RECLEN_BUF,I,1)=' ');
      870     9452    3              I = I +1;
      871     9453    3              END;
      872     9454    2           CALL INSERT(DUMP_BUF,
      873     9455    2             START_IDX,,
      874     9456    2             SUBSTR(RECLEN_BUF,I),
      875     9457    2             CONV_TBL.UNITS(OCB.OCT_HEX.TYPE));
      876     9458    2           START_IDX = START_IDX + SIZEC(RECLEN_BUF)-I +1;
      877     9459    3           DO WHILE (SUBSTR(DUMP_BUF,START_IDX,2) ~= '  ');
      878     9460    3              START_IDX = START_IDX +1;
      879     9461    3              END;
      880     9462    2           START_IDX = START_IDX +1;
      881     9463    2   RECLEN_DONE: ;
      882     9464        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:53   
      883     9465        /**/
      884     9466        /*  If input is from tape,      */
      885     9467        /*  and user has IOERROK set,   */
      886     9468        /*  then see if we have got an  */
      887     9469        /*  I/O error.                  */
      888     9470        /**/
      889     9471    2           IF M$EI$ -> F$DCB.TYC.IOERR(0) AND
      890     9472    2             M$EI$ -> F$DCB.ASN = %TAPE# AND
      891     9473    2             M$EI$ -> F$DCB.IOERROK
      892     9474    2            THEN
      893     9475    2              IF ICB.TAPEIOERR = 1
      894     9476    2               THEN
      895     9477    2                 ICB.TAPEIOERR = 2;        /* Expected 2nd I/O message           */
      896     9478    2               ELSE
      897     9479    2                 ICB.TAPEIOERR = 1;        /* New I/O error                      */
      898     9480        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:54   
      899     9481        /**/
      900     9482        /*  DVBYTE  */
      901     9483        /**/
      902     9484    2           IF KEYOPTS.DVBYTE ~= 2 AND ICB.TAPEIOERR = 0
      903     9485    2            THEN
      904     9486    2              GOTO DVBYTE_DONE;
      905     9487    2           CALL INSERT(DUMP_BUF,
      906     9488    2             START_IDX,,
      907     9489    2             '[');
      908     9490    2           START_IDX = START_IDX +1;
      909     9491        /**/
      910     9492        /*  If there is a tape error,       */
      911     9493        /*  then display the records error  */
      912     9494        /*  in the DVBYTE status line.      */
      913     9495        /**/
      914     9496    2           IF ICB.TAPEIOERR ~= 0
      915     9497    2            THEN
      916     9498    3            DO;
      917     9499    3               IF M$EI$ -> F$DCB.TYC.IOERR(0)
      918     9500    3                THEN                       /* I/O error                          */
      919     9501    4                DO;
      920     9502    4                   CALL INSERT(DUMP_BUF,
      921     9503    4                     START_IDX,,
      922     9504    4                     'IOERR,');
      923     9505    4                   START_IDX = START_IDX+6;
      924     9506    4                   END;
      925     9507    3               IF M$EI$ -> F$DCB.TYC.DI(0)
      926     9508    3                THEN                       /* Data Inconsistency                 */
      927     9509    4                DO;
      928     9510    4                   CALL INSERT(DUMP_BUF,
      929     9511    4                     START_IDX,,
      930     9512    4                     'DI,');
      931     9513    4                   START_IDX = START_IDX+3;
      932     9514    4                   END;
      933     9515    3               IF M$EI$ -> F$DCB.TYC.LD(0)
      934     9516    3                THEN                       /* Lost Data                          */
      935     9517    4                DO;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:55   
      936     9518    4                   CALL INSERT(DUMP_BUF,
      937     9519    4                     START_IDX,,
      938     9520    4                     'LD,');
      939     9521    4                   START_IDX = START_IDX+3;
      940     9522    4                   END;
      941     9523    4               DO CASE (ICB.TAPEIOERR);
      942     9524    4                CASE (2);
      943     9525    4                  ICB.TAPEIOERR = 3;
      944     9526    4                CASE (3);
      945     9527    4                  ICB.TAPEIOERR = 0;
      946     9528    4                END;
      947     9529    3               IF KEYOPTS.DVBYTE ~= 2
      948     9530    3                THEN                       /* No DVBYTE attributes to check      */
      949     9531    3                  GOTO CHECK_IF_ANY_ATTRIBUTES;
      950     9532    3               END;
      951     9533    2           IF IN_DVBYTE.VFC
      952     9534    2            THEN                           /* Rec. has VFC                       */
      953     9535    3            DO;
      954     9536    3               CALL INSERT(DUMP_BUF,
      955     9537    3                 START_IDX,,
      956     9538    3                 'VFC,');                  /* Stuff in the notice                */
      957     9539    3               START_IDX = START_IDX+4;
      958     9540    3               END;
      959     9541    2           IF IN_DVBYTE.BIN
      960     9542    2            THEN                           /* Rec. was created in BINary format  */
      961     9543    3            DO;
      962     9544    3               CALL INSERT(DUMP_BUF,
      963     9545    3                 START_IDX,,
      964     9546    3                 'BIN,');                  /* Stuff in the notice                */
      965     9547    3               START_IDX = START_IDX+4;
      966     9548    3               END;
      967     9549    2           IF IN_DVBYTE.TRANS
      968     9550    2            THEN                           /* Rec. was created in TRANSparent    */
      969     9551    3            DO;
      970     9552    3               CALL INSERT(DUMP_BUF,
      971     9553    3                 START_IDX,,
      972     9554    3                 'TRANS,');                /* Stuff in the notice                */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:56   
      973     9555    3               START_IDX = START_IDX+6;
      974     9556    3               END;
      975     9557                                /* #36563 MODIFICATION: ADDITION OF NODAT
      976     9558                                 *        NOTIFICATION TO HEADER OUTPUT.
      977     9559                                   */
      978     9560    2           IF IN_DVBYTE.NODAT
      979     9561    2            THEN                           /* Rec. supports throttling           */
      980     9562    3            DO;
      981     9563    3               CALL INSERT(DUMP_BUF,
      982     9564    3                 START_IDX,,
      983     9565    3                 'NODAT,');                /* Stuff in the notice                */
      984     9566    3               START_IDX = START_IDX+6;
      985     9567    3               END;
      986     9568    2   CHECK_IF_ANY_ATTRIBUTES:
      987     9569    2           IF SUBSTR (DUMP_BUF,START_IDX -1,1)=','
      988     9570    2            THEN                           /* We left a hanging comma            */
      989     9571    3            DO;                            /* Stomp on it                        */
      990     9572    3               CALL INSERT (DUMP_BUF,
      991     9573    3                 START_IDX -1,,
      992     9574    3                 ']');
      993     9575    3               END;
      994     9576    2            ELSE                           /* No attributes, '[' is hanging      */
      995     9577    3            DO;                            /* Stomp on it                        */
      996     9578    3               CALL INSERT (DUMP_BUF,
      997     9579    3                 START_IDX -1,,
      998     9580    3                 ' ');
      999     9581    3               START_IDX = START_IDX - 1;  /* back up the index                  */
     1000     9582    3               END;
     1001     9583    2   DVBYTE_DONE: ;
     1002     9584        /**/
     1003     9585        /*  Finished!  */
     1004     9586        /**/
     1005     9587    2           RETURN;
     1006     9588        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:57   
     1007     9589    2   INSERT_OCT_KEY: PROC;
     1008     9590        /*I* NAME: INSERT_OCT_KEY
     1009     9591             PURPOSE: To put into DUMP_BUF some representation of the key for this record.
     1010     9592             CALL: CALL INSERT_OCT_KEY;
     1011     9593             DESCRIPTION: This procedure puts out the record's key depending
     1012     9594                          on options:
     1013     9595                             o in OCTAL format
     1014     9596                             o in text
     1015     9597                             o EDIT-key format if possible
     1016     9598                             o in HEX
     1017     9599        */
     1018     9600    3   DCL I SBIN WORD;
     1019     9601    3   DCL J SBIN WORD;
     1020     9602    3   DCL K SBIN WORD;
     1021     9603    3   DCL 1 KEY1,
     1022     9604    3         2 LEN UBIN BYTE UNAL,
     1023     9605    3         2 KEY_ARY(0:254) CHAR(1),
     1024     9606    3         2 OCT_KEY_ARY(0:764) REDEF KEY_ARY UBIN(3) UNAL,
     1025     9607    3         2 X_KEY_ARY REDEF KEY_ARY UNAL,
     1026     9608    3           3 X (0:572) UBIN(4) UNAL,
     1027     9609    3           3 * BIT(3) UNAL,
     1028     9610    3         2 EKEY REDEF KEY_ARY,
     1029     9611    3           3 KEY UBIN(27) UNAL,
     1030     9612    3           3 * CHAR(252) UNAL;
     1031     9613    3   DCL CHR$255 CHAR(255) BASED;
     1032     9614        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:58   
     1033     9615        /**/
     1034     9616        /*  If no keys are to be formatted, skip this whole thing.  */
     1035     9617        /**/
     1036     9618    3           IF NOT KEYOPTS.FORMAT.O
     1037     9619    3             AND NOT KEYOPTS.FORMAT.X
     1038     9620    3             AND NOT KEYOPTS.FORMAT.X1
     1039     9621    3             AND NOT KEYOPTS.FORMAT.C
     1040     9622    3             AND NOT KEYOPTS.FORMAT.E
     1041     9623    3            THEN
     1042     9624    3              RETURN;
     1043     9625    3           IF NOT ICB.FLAVOR.KNOWKEY THEN
     1044     9626    3              RETURN;                      /* Unknown key type                   */
     1045     9627        /**/
     1046     9628        /*  Set up some stuff.  */
     1047     9629        /**/
     1048     9630    3           KEY1 = EI_KEY;                  /* Move KEY to local structure        */
     1049     9631        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:59   
     1050     9632        /**/
     1051     9633        /*  OCTAL.  */
     1052     9634        /**/
     1053     9635    3           IF NOT KEYOPTS.FORMAT.O
     1054     9636    3            THEN
     1055     9637    3              GOTO OCT_DONE;
     1056     9638    3           CALL INSERT(DUMP_BUF,
     1057     9639    3             START_IDX,
     1058     9640    3             2,
     1059     9641    3             'O''');
     1060     9642    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+2);
     1061     9643    4           DO I=0 TO KEY1.LEN*3 -1;
     1062     9644    4              CALL BINCHAR(P$->CHR$ARY(I),KEY1.OCT_KEY_ARY(I));
     1063     9645    4              END;
     1064     9646    3           START_IDX = START_IDX +KEY1.LEN*3 +4;
     1065     9647    3           CALL INSERT(DUMP_BUF,
     1066     9648    3             START_IDX - 2,
     1067     9649    3             2,
     1068     9650    3             ''' ');
     1069     9651    3   OCT_DONE: ;
     1070     9652        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:60   
     1071     9653        /**/
     1072     9654        /*  X1.  */
     1073     9655        /**/
     1074     9656    3           IF NOT KEYOPTS.FORMAT.X1
     1075     9657    3            THEN
     1076     9658    3              GOTO X1_DONE;
     1077     9659    3           CALL INSERT(DUMP_BUF,
     1078     9660    3             START_IDX,
     1079     9661    3             3,
     1080     9662    3             'X1''');
     1081     9663    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+3);
     1082     9664    3           Q$ = PINCRB(ADDR(KEY1.KEY_ARY),1);
     1083     9665    4           DO I=0 TO (KEY1.LEN*8/4)-1;
     1084     9666    4              P$->CHR$ARY(I) = X_TBL(Q$ -> UBIN$4);
     1085     9667    4              IF MOD(I,2) = 0
     1086     9668    4               THEN
     1087     9669    4                 Q$ = PINCRB(Q$,4);
     1088     9670    4               ELSE
     1089     9671    4                 Q$ = PINCRB(Q$,5);
     1090     9672    4              END;
     1091     9673    3           START_IDX = START_IDX + (KEY1.LEN*8/4) +5;
     1092     9674    3           CALL INSERT(DUMP_BUF,
     1093     9675    3             START_IDX - 2,
     1094     9676    3             2,
     1095     9677    3             ''' ');
     1096     9678    3   X1_DONE: ;
     1097     9679        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:61   
     1098     9680        /**/
     1099     9681        /*  X.  */
     1100     9682        /**/
     1101     9683    3           IF NOT KEYOPTS.FORMAT.X
     1102     9684    3            THEN
     1103     9685    3              GOTO X_DONE;
     1104     9686    3           CALL INSERT(DUMP_BUF,
     1105     9687    3             START_IDX,
     1106     9688    3             2,
     1107     9689    3             'X''');
     1108     9690    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+2);
     1109     9691    4           DO I=0 TO (KEY1.LEN*9/4)-1;
     1110     9692    4              P$->CHR$ARY(I) = X_TBL(KEY1.X_KEY_ARY.X(I));
     1111     9693    4              END;
     1112     9694    3           START_IDX = START_IDX + (KEY1.LEN*9/4) +4;
     1113     9695    3           CALL INSERT(DUMP_BUF,
     1114     9696    3             START_IDX - 2,
     1115     9697    3             2,
     1116     9698    3             ''' ');
     1117     9699    3   X_DONE: ;
     1118     9700        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:62   
     1119     9701        /**/
     1120     9702        /*  Text format.  */
     1121     9703        /**/
     1122     9704    3           IF NOT KEYOPTS.FORMAT.C
     1123     9705    3            THEN
     1124     9706    3              GOTO TEXT_DONE;
     1125     9707    3           CALL INSERT(DUMP_BUF,
     1126     9708    3             START_IDX,
     1127     9709    3             1,
     1128     9710    3             '''');
     1129     9711    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+1);
     1130     9712    3           CALL XLATE(P$->CHR$255,
     1131     9713    3             PRINTABLE_XLATE_TBL,
     1132     9714    3             ADDR(KEY1)->TEXT$C.STRING);
     1133     9715    3           START_IDX = START_IDX +KEY1.LEN +3;
     1134     9716    3           CALL INSERT(DUMP_BUF,
     1135     9717    3             START_IDX - 2,
     1136     9718    3             2,
     1137     9719    3             ''' ');
     1138     9720    3   TEXT_DONE: ;
     1139     9721        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:63   
     1140     9722        /**/
     1141     9723        /*  EDIT-style.  */
     1142     9724        /**/
     1143     9725    3           IF NOT KEYOPTS.FORMAT.E
     1144     9726    3            THEN
     1145     9727    3              GOTO EDIT_DONE;
     1146     9728    3           IF KEY1.LEN=3 AND KEY1.EKEY.KEY<100000000
     1147     9729    3            THEN
     1148     9730    4            DO;
     1149     9731    4               CALL BINCHAR(KEY_BUF,KEY1.EKEY.KEY);
     1150     9732    4               CALL EDITCHAR(DUMP_BUF,
     1151     9733    4                 START_IDX,
     1152     9734    4                 10,
     1153     9735    4                 MOP_EKEY,
     1154     9736    4                 KEY_BUF);
     1155     9737    4               START_IDX = START_IDX+10;
     1156     9738    4               END;
     1157     9739    3   EDIT_DONE: ;
     1158     9740        /**/
     1159     9741        /*  Finished!  */
     1160     9742        /**/
     1161     9743    3           RETURN;
     1162     9744    3   END INSERT_OCT_KEY;
     1163     9745    2   END CONSTRUCT_KEY;
     1164     9746        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:64   
     1165     9747    1   TAB_EXPAND: PROC;
     1166     9748        /*I* NAME: TAB_EXPAND
     1167     9749             PURPOSE: To expand the record's tab stops as directed by any tab stops
     1168     9750                      specified.
     1169     9751             CALL: CALL TAB_EXPAND;
     1170     9752             DESCRIPTION: This procedure examines the record for any tab characters
     1171     9753                          and inserts either one or more blanks in their places
     1172     9754                          depending on any tab stops specified either here or from
     1173     9755                          IBEX.
     1174     9756        */
     1175     9757    2   DCL 1 TAB_TBL,
     1176     9758    2         2 IDX SBIN WORD,
     1177     9759    2         2 OFFSET(0:31) UBIN(9) UNAL;      /* Cumulative character offset        */
     1178     9760    2   DCL TAB$ PTR;
     1179     9761    2   DCL TAB$TBL(0:0) UBIN(9) UNAL BASED;
     1180     9762    2   DCL NEXT_POS SBIN WORD;
     1181     9763    2   DCL EXPANDED_POS SBIN WORD;
     1182     9764    2   DCL TAB_IDX SBIN WORD;
     1183     9765    2   DCL CHAR_IDX SBIN WORD;
     1184     9766    2   DCL I SBIN WORD;
     1185     9767    2   DCL J SBIN WORD;
     1186     9768    2           IF TABS(0)=0 AND M$UC$->F$DCB.TAB$~=ADDR(NIL)
     1187     9769    2            THEN                           /* TABS from the DCB                  */
     1188     9770    2              TAB$ = PINCRC(M$UC$->F$DCB.TAB$,1);
     1189     9771    2            ELSE                           /* TABS from a prefious TX command    */
     1190     9772    2              TAB$ = ADDR(TABS);
     1191     9773    2           TAB_TBL = '0'B;                 /* ZERO THE TABLE                     */
     1192     9774    2           TAB_IDX = 0;
     1193     9775    2           CHAR_IDX = -1;                  /* Next character is number 0         */
     1194     9776    3           DO WHILE(CHAR_IDX+1<REC_LEN);   /* DO WHILE next character in record  */
     1195     9777    3              CHAR_IDX = CHAR_IDX+1;
     1196     9778    3              CALL INDEX(CHAR_IDX,TAB_CHAR,BUF_VECTOR.PTR$->IN$REC,CHAR_IDX);
     1197     9779    3              IF CHAR_IDX<REC_LEN
     1198     9780    3               THEN
     1199     9781    4               DO;                         /* ANOTHER TAB CHAR HAS BEEN FOUND*/
     1200     9782                                                /* 'CURRENT' character position may   */
     1201     9783                                                /* be offset by any previous tabs     */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:65   
     1202     9784    4                  EXPANDED_POS = CHAR_IDX + TAB_TBL.OFFSET(TAB_TBL.IDX);
     1203     9785                                                /* Eat tab stops until we run out OR  */
     1204     9786                                                /* we get next one past our current   */
     1205     9787                                                /* position.                          */
     1206     9788    5                  DO WHILE(TAB_IDX<31 AND EXPANDED_POS>=TAB$->TAB$TBL(TAB_IDX)-1);
     1207     9789    5                     IF TAB$->TAB$TBL(TAB_IDX)=0
     1208     9790    5                      THEN
     1209     9791    5                        TAB_IDX = 31;
     1210     9792    5                      ELSE
     1211     9793    5                        TAB_IDX = TAB_IDX+1;
     1212     9794    5                     END;
     1213     9795    4                  IF TAB_IDX<31            /* A TAB STOP WAS FOUND               */
     1214     9796    4                   THEN
     1215     9797    5                   DO;
     1216     9798    5                      TAB_TBL.IDX = TAB_TBL.IDX+1;
     1217     9799    5                      TAB_TBL.OFFSET(TAB_TBL.IDX) =
     1218     9800    5                        TAB$ -> TAB$TBL(TAB_IDX) -2 - CHAR_IDX;
     1219     9801    5                      END;
     1220     9802    4                   ELSE                    /* NO TAB STOPS LEFT, SINGLE SPACE    */
     1221     9803    4                     BUF_VECTOR.PTR$->CHR$ARY(CHAR_IDX)    = ' ';
     1222     9804    4                  END;
     1223     9805    3              END;
     1224     9806        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:66   
     1225     9807                                                /* We now have filled TAB_TBL with    */
     1226     9808                                                /* a list of the number of character  */
     1227     9809                                                /* positions to move the next piece   */
     1228     9810                                                /* of text to the right.              */
     1229     9811    2           IF REC_LEN+TAB_TBL.OFFSET(TAB_TBL.IDX)
     1230     9812    2             > (BUF_VECTOR.BOUND+3)
     1231     9813    2            THEN                           /* Expanded record will be too big    */
     1232     9814    2              CALL VPD$ENLARGE_BUF(0);     /* Enlarge the buffer                 */
     1233     9815    2           I = REC_LEN-1;
     1234     9816                                                /* New record size = old + added      */
     1235     9817                                                /* blanks - replaces TABs             */
     1236     9818    2           REC_LEN = REC_LEN+TAB_TBL.OFFSET(TAB_TBL.IDX);
     1237     9819    3           DO WHILE(I>=0);
     1238     9820    3              IF BUF_VECTOR.PTR$->CHR$ARY(I)=TAB_CHAR
     1239     9821    3               THEN
     1240     9822    4               DO;
     1241     9823    4                  SUB_LEN = TAB_TBL.OFFSET(TAB_TBL.IDX)
     1242     9824    4                    -TAB_TBL.OFFSET(TAB_TBL.IDX-1) +1;
     1243     9825    4                  TAB_TBL.IDX = TAB_TBL.IDX-1;
     1244     9826    4                  PINCRC(BUF_VECTOR.PTR$,I+TAB_TBL.OFFSET(TAB_TBL.IDX))
     1245     9827    4                    ->SUB$STR = ' ';
     1246     9828    4                  END;
     1247     9829    3               ELSE
     1248     9830    3                 IF TAB_TBL.OFFSET(TAB_TBL.IDX) = 0
     1249     9831    3                  THEN                     /* No displacement                    */
     1250     9832    3                    ;                      /* Don't move anything                */
     1251     9833    3                  ELSE                     /* Move this character a little       */
     1252     9834    3                    BUF_VECTOR.PTR$->CHR$ARY(I+TAB_TBL.OFFSET(TAB_TBL.IDX))
     1253     9835    3                      = BUF_VECTOR.PTR$->CHR$ARY(I);
     1254     9836    3              I = I-1;
     1255     9837    3              END;
     1256     9838    2   END TAB_EXPAND;
     1257     9839        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:67   
     1258     9840    1   NO_DUMP_PROC: PROC;
     1259     9841        /*I* NAME: NO_DUMP_PROC
     1260     9842             PURPOSE: To finish processing the output record when the output is not
     1261     9843                      to be an octal or hexadecimal dump.
     1262     9844             CALL: CALL NO_DUMP_PROC;
     1263     9845             DESCRIPTION: This procedure formats a key and/or sequence number if
     1264     9846                          the KEYS output option was specified. This field is placed
     1265     9847                          as the first part of the output record unless the key
     1266     9848                          cannot be interpreted as an EDIT key. In that case,
     1267     9849                          the field is output first and then the record is output as
     1268     9850                          the next record. This procedure is only used for non-dump
     1269     9851                          type output.
     1270     9852        */
     1271     9853    2   DCL RAND_FLAG SBIN WORD;
     1272     9854    2           IF ICB.FLAVOR.GRANB
     1273     9855    2             AND NOT(CMD_MASK & '000600'O) /* AND NOT A LIST                     */
     1274     9856    2            THEN
     1275     9857    2              RAND_FLAG = 1;
     1276     9858    2            ELSE
     1277     9859    2              RAND_FLAG = 0;
     1278     9860    2           OUT_BUF_VECTOR = BUF_VECTOR;
     1279     9861    2           IF OCB.KEYS = 0 THEN            /* No KEYS desired                    */
     1280     9862    3            DO;
     1281     9863    3               CALL WRITE_OUT_BUF (REC_LEN,RAND_FLAG);
     1282     9864    3               RETURN;
     1283     9865    3               END;
     1284     9866        /**/
     1285     9867        /*  Gotta format KEYS  */
     1286     9868        /**/
     1287     9869    2           START_IDX = 0;
     1288     9870    2           CALL CONSTRUCT_KEY(DUMP_BUF,START_IDX,SIZEC(DUMP_BUF));
     1289     9871    2           IF KEYOPTS.ONDATA = 1 THEN      /* NOT on the data record             */
     1290     9872    3            DO;
     1291     9873    3               OUT_BUF_VECTOR = VECTOR(DUMP_BUF);
     1292     9874    3               CALL WRITE_OUT_BUF(START_IDX,0);
     1293     9875    3               OUT_BUF_VECTOR = BUF_VECTOR;
     1294     9876    3               CALL WRITE_OUT_BUF (REC_LEN,RAND_FLAG);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:68   
     1295     9877    3               END;
     1296     9878    2            ELSE                           /* ON the data record                 */
     1297     9879    3            DO;
     1298     9880    3               IF START_IDX < (ACTUAL_IN_BUF_VECTOR.BOUND - BUF_VECTOR.BOUND)
     1299     9881    3                THEN                       /* There is slack room                */
     1300     9882    3                  OUT_BUF_VECTOR.PTR$ = PINCRC(OUT_BUF_VECTOR.PTR$,-START_IDX);
     1301     9883    3                ELSE                       /* No slack!                          */
     1302     9884    4                DO;
     1303     9885    4                   IF REC_LEN + START_IDX > (BUF_VECTOR.BOUND+3)
     1304     9886    4                    THEN                   /* KEYS will make it too big          */
     1305     9887    4                      CALL VPD$ENLARGE_BUF(0); /* Enlarge the buffer             */
     1306     9888    5                   DO I = REC_LEN-1 DOWNTO 0;
     1307     9889                             /*N* Better to call a BMAP routine for this.             */
     1308     9890    5                      BUF_VECTOR.PTR$ -> CHR$ARY(I+START_IDX) = BUF_VECTOR.PTR$ ->
              9890                               CHR$ARY(I);
     1309     9891    5                      END;
     1310     9892    4                   END;
     1311     9893    3               REC_LEN = REC_LEN + START_IDX;
     1312     9894    3               BUF_VECTOR.BOUND = BUF_VECTOR.BOUND + START_IDX;
     1313     9895    3               CALL INSERT(OUT_BUF_VECTOR.PTR$ -> IN$REC,
     1314     9896    3                 0,
     1315     9897    3                 START_IDX,
     1316     9898    3                 DUMP_BUF);
     1317     9899    3               RAND_FLAG = 0;
     1318     9900    3               CALL WRITE_OUT_BUF (REC_LEN,RAND_FLAG);
     1319     9901    3               END;
     1320     9902
     1321     9903    2           RETURN;
     1322     9904        /**/
     1323     9905    2   END NO_DUMP_PROC;
     1324     9906        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:69   
     1325     9907    1   WRITE_OUT_BUF: PROC(REC_LEN_,RAND_FLAG);
     1326     9908        /*I* NAME: WRITE_OUT_BUF
     1327     9909             PURPOSE: To process the LN output option and output the record.
     1328     9910             CALL: CALL WRITE_OUT_BUF(REC_LEN,RAND_FLAG);
     1329     9911             DESCRIPTION: This procedure takes the record and causes it to
     1330     9912                          be output to the destination file/device/whatever.
     1331     9913
     1332     9914                          The data is located by:
     1333     9915                            OUT_BUF_VECTOR.PTR$ = pointer to beginning
     1334     9916                            REC_LEN_ = length, in characters
     1335     9917
     1336     9918                          If the LN output option was specified, an EDIT key is
     1337     9919                          formed, checked for size, and used as the record's key.
     1338     9920
     1339     9921                          If RAND_FLAG=1, the input record's first 4 bytes are
     1340     9922                          actually the input record's time stamp and may be
     1341     9923                          written over as such.
     1342     9924        */
     1343     9925        /**/
     1344     9926        /*  PARAMETERS  */
     1345     9927        /**/
     1346     9928    2   DCL REC_LEN_ SBIN WORD PARAM;
     1347     9929    2   DCL RAND_FLAG SBIN WORD;
     1348     9930        /**/
     1349     9931        /*  LOCAL STATIC  */
     1350     9932        /**/
     1351     9933        %FPT_EXTEND(FPTN = FPT_EXTEND,STCLASS = STATIC);
     1352     9947        /**/
     1353     9948        /*  LOCAL AUTO  */
     1354     9949        /**/
     1355     9950    2   DCL DATA_CHAR_LEFT SBIN WORD;
     1356     9951    2   DCL REC_LEN SBIN WORD;
     1357     9952    2   DCL CHUNK_SIZE SBIN WORD;
     1358     9953    2   DCL VFC SBIN;
     1359     9954    2   DCL MOVE_TO$ PTR;
     1360     9955        %NK$VFC(NAME = WRAP_VFC_,STCLASS = AUTO);
     1361     9973    2   DCL WRAP_VFC REDEF WRAP_VFC_ CHAR(1);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:70   
     1362     9974        %NK$VFC(NAME = FINAL_WRAP_VFC_,STCLASS = AUTO);
     1363     9992    2   DCL FINAL_WRAP_VFC REDEF FINAL_WRAP_VFC_ CHAR(1);
     1364     9993        /**/
     1365     9994        /*  BASED  */
     1366     9995        /**/
     1367     9996    2   DCL BUF$ARY(0:4095) CHAR(1) UNAL BASED(FPT_WRITE_OUT.BUF_.BUF$);
     1368     9997    2   DCL BUF$FER REDEF BUF$ARY CHAR(4096) UNAL;
     1369     9998    2   DCL MOVE_TO CHAR(REC_LEN) BASED(MOVE_TO$);
     1370     9999    2   DCL MOVE_FROM CHAR(REC_LEN) BASED(FPT_WRITE_OUT.BUF_.BUF$);
     1371    10000    2   DCL 1 PT$R BASED,
     1372    10001    2         2 CSTART UBIN(20) UNAL,
     1373    10002    2         2 * BIT(16);
     1374    10003        /**/
     1375    10004        /*  Entry Points  */
     1376    10005        /**/
     1377    10006    2   DCL XSA$WRITE ENTRY(2) ALTRET;
     1378    10007    2   DCL VPD$CHECK_VOL ENTRY(5);
     1379    10008        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:71   
     1380    10009        /**/
     1381    10010        /*  Move select params to local, in case they need modification.              */
     1382    10011        /**/
     1383    10012    2           REC_LEN = REC_LEN_;
     1384    10013        /**/
     1385    10014        /*  Insure VFC is correct.                                                    */
     1386    10015        /**/
     1387    10016    3           DO CASE(OCB.VFC_USE);
     1388    10017    3            CASE(1);                       /* Use default if necessary           */
     1389    10018    3              IF NOT FPT_WRITE_OUT.V.DVBYTE.VFC#
     1390    10019    3               THEN                        /* Must append this as default        */
     1391    10020    4               DO;
     1392    10021    4   INSERT_DEFAULT: ;
     1393    10022    4                  FPT_WRITE_OUT.V.DVBYTE.VFC# = '1'B;
     1394    10023    4                  REC_LEN = REC_LEN +1;
     1395    10024    4                  OUT_BUF_VECTOR.PTR$ = PINCRC(OUT_BUF_VECTOR.PTR$,-1);
     1396    10025    4                  OUT_BUF_VECTOR.PTR$ -> CHR$ARY(0) = OCB.VFC_CHAR;
     1397    10026    4                  END;
     1398    10027    3            CASE(2);                       /* Use specified VFC regardless       */
     1399    10028    3              IF FPT_WRITE_OUT.V.DVBYTE.VFC#
     1400    10029    3               THEN                        /* Must REPLACE existing VFC          */
     1401    10030    4               DO;
     1402    10031    4                  REC_LEN = MAXIMUM(REC_LEN,1); /* NIL record had VFC not room   */
     1403    10032    4                  OUT_BUF_VECTOR.PTR$ -> CHR$ARY(0) = OCB.VFC_CHAR;
     1404    10033    4                  END;
     1405    10034    3               ELSE
     1406    10035    3                 GOTO INSERT_DEFAULT;
     1407    10036    3            END;
     1408    10037        /**/
     1409    10038        /*  Adjust record length as necessary.                                        */
     1410    10039        /**/
     1411    10040    2           IF REC_LEN=0
     1412    10041    2            THEN
     1413    10042    2              FPT_WRITE_OUT.BUF_ = VECTOR(NIL);
     1414    10043    2            ELSE
     1415    10044    3            DO;
     1416    10045    3               FPT_WRITE_OUT.BUF_   = OUT_BUF_VECTOR;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:72   
     1417    10046    3               IF OCB.FLAVOR.GRANB
     1418    10047    3                THEN
     1419    10048    4                DO;
     1420    10049    4                   FPT_WRITE_OUT.BUF_.BOUND = 4095;
     1421    10050    4                   IF REC_LEN<4096
     1422    10051    4                    THEN
     1423    10052    5                    DO;
     1424    10053    5                       SUB_LEN = 4096 - REC_LEN;
     1425    10054    5                       PINCRC(FPT_WRITE_OUT.BUF_.BUF$,REC_LEN)->SUB$STR = ' ';
     1426    10055    5                       END;
     1427    10056    4                   IF RAND_FLAG=0
     1428    10057    4                    THEN
     1429    10058    4                      FPT_WRITE_OUT.BUF_.BUF$ = PINCRW(FPT_WRITE_OUT.BUF_.BUF$,-1);
     1430    10059    4                   END;
     1431    10060    4                ELSE DO;
     1432    10061    4                   IF OCB.FLAVOR.FORMATTED
     1433    10062    4                     AND FPT_WRITE_OUT.V.DVBYTE.VFC#
     1434    10063    4                     AND OCB.KEYS ~= 1
     1435    10064    4                    THEN
     1436    10065    4                      REC_LEN = REC_LEN + 1;
     1437    10066    4                   SUB_LEN = 4 - MOD (REC_LEN,4);
     1438    10067        /* Pads out the bytes after the last character up to a full word. */
     1439    10068    4                   IF SUB_LEN<4
     1440    10069    4                    THEN
     1441    10070    4                      PINCRC(FPT_WRITE_OUT.BUF_.BUF$,REC_LEN)->SUB$STR = ' ';
     1442    10071    4                   FPT_WRITE_OUT.BUF_.BOUND = REC_LEN-1;
     1443    10072    4                   END;
     1444    10073    3               END;
     1445    10074        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:73   
     1446    10075        /**/
     1447    10076        /*  Check for options explicitly specified.  */
     1448    10077        /**/
     1449    10078    2           IF FPT_WRITE_OUT.V.DVBYTE.VFC#
     1450    10079    2            THEN
     1451    10080    2              VFC = 1;
     1452    10081    2            ELSE
     1453    10082    2              VFC = 0;
     1454    10083    2           IF OCB.WRAP = 1
     1455    10084    2            THEN                           /* NWRAP specified                    */
     1456    10085    2              GOTO NO_WRAP;
     1457    10086    2           IF OCB.WRAP = 2 OR OCB.WRAP = 3
     1458    10087    2            THEN                           /* Some type of WRAP specified        */
     1459    10088    2              GOTO WRAP_ALLOWED;
     1460    10089        /**/
     1461    10090        /*  Test default WRAPping criteria  */
     1462    10091        /**/
     1463    10092    2           IF ~OCB.DCBPTR$->F$DCB.DDEV.IC  /* IF not terminal                    */
     1464    10093    2             AND ~OCB.FLAVOR.JE            /* AND not JE/JF                      */
     1465    10094    2             AND FPT_WRITE_OUT.V.DVBYTE.BIN# = %NO# /* Don't try to wrap BINary  */
     1466    10095    2             AND FPT_WRITE_OUT.V.DVBYTE.TRANS# = %NO# /* Don't try to wrap TRANS */
     1467    10096    2            THEN
     1468    10097    2   WRAP_ALLOWED: IF OUTPUT_WIDTH > 0       /* IF WIDTH makes sense               */
     1469    10098    2                AND FPT_WRITE_OUT.BUF_.BOUND +1 - VFC > OUTPUT_WIDTH /* Excess   */
     1470    10099    2               THEN                        /* Do the WRAPping                    */
     1471    10100    2                 CALL PERFORM_WRAPPING ALTRET(MONERR);
     1472    10101    2               ELSE                        /* WRAPping OK but not needed         */
     1473    10102    2                 GOTO NO_WRAP;
     1474    10103    2            ELSE                           /* Don't wrap the record              */
     1475    10104    3   NO_WRAP: DO;
     1476    10105    3               CALL SET_OUTPUT_KEY;
     1477    10106    3               CALL WRITE ALTRET(MONERR);
     1478    10107    3               END;
     1479    10108    2   WROTE_OK:
     1480    10109    2           IF OCB.DEV_MASK & '006'O
     1481    10110    2            THEN                           /* Tapes are involved                 */
     1482    10111    2              CALL VPD$CHECK_VOL(OUT_SN,0,OCB.DCBNM,,1); /* Check VOL transit'n  */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:74   
     1483    10112    2           RETURN;
     1484    10113        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:75   
     1485    10114    2   MONERR: ;                               /* READ ALTRET                        */
     1486    10115    2           IF OUTPUT_ERR.ERR# = %E$BADVECT1
     1487    10116    2             OR OUTPUT_ERR.ERR# = %E$BADKEY
     1488    10117    2            THEN
     1489    10118    2              CALL VPL$ERR_PROC(3,20,'07'O);
     1490    10119        /*E* ERROR:   VPG-00020
     1491    10120             MESSAGE: Keys are required but were not specified.
     1492    10121            MESSAGE1: Keys must be specified for this operation - try the LN output option.
     1493    10122        */
     1494    10123    2           IF OUTPUT_ERR.ERR# = %E$INVVFC
     1495    10124    2            THEN
     1496    10125    3            DO;
     1497    10126    3               VFC_TEXTC.STRING = BUF_VECTOR.PTR$->ONE_BASED_CHAR;
     1498    10127    3               VFC_TEXTC.LEN = 1;
     1499    10128    3               CALL VPE$FMT_ABORT(30,'07'O,M$EI#,VECTOR(VFC_TEXTC));
     1500    10129        /*E*     ERROR: VPG-00030
     1501    10130               MESSAGE: aVFC character '%U2' is bad at %U1 (%UF).
     1502    10131        */
     1503    10132    3               SUBSTR(ERR_BUF,0,1) = %VFC_TRANSITION1;
     1504    10133    3               FPT_WRITE_UC.BUF_ = VECTOR(SUBSTR(ERR_BUF,0,ERR_LEN));
     1505    10134    3               FPT_WRITE_UC.V.DVBYTE.VFC# = %YES#;
     1506    10135    3               CALL M$WRITE(FPT_WRITE_UC);
     1507    10136    3               FPT_WRITE_UC.V.DVBYTE.VFC# = %NO#;
     1508    10137    3               CALL VPL$ERR_SEV_HANDLER(3); /* BLOW THEM AWAY                    */
     1509    10138    3               END;
     1510    10139    2           IF OUTPUT_ERR.ERR# = %E$VOLOUT
     1511    10140    2            THEN                           /* Command abort error                */
     1512    10141    2              CALL VPL$ERR_PROC(3,0,,OUTPUT_ERR,,,OCB.DCBNM); /* Abort command   */
     1513    10142
     1514    10143    2           IF OCB.XTNSIZE>0
     1515    10144    2             AND (OUTPUT_ERR.ERR# = %E$FILLIM
     1516    10145    2             OR OUTPUT_ERR.ERR# = %E$RANBADBLK)
     1517    10146    3            THEN DO; /* Do an M$EXTEND to enlarge the RANDOM, IDS or RELATIVE file */
     1518    10147    3               FPT_EXTEND.V.DCB# = OCB.DCBNM;
     1519    10148    3               FPT_EXTEND.V.SIZ# = OCB.XTNSIZE;
     1520    10149    3               CALL M$EXTEND(FPT_EXTEND) ALTRET(MONERR1);
     1521    10150    3               CALL WRITE ALTRET(MONERR1); /* Retry the write                    */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:76   
     1522    10151    3               GOTO WROTE_OK;
     1523    10152    3               END;
     1524    10153    2   MONERR1: IF CMD_MASK(1)                 /* If COPY...                         */
     1525    10154    2             OR  CMD_MASK(9)               /* Or LIST                            */
     1526    10155    2            THEN
     1527    10156    2              CALL VPL$ERR_PROC(3,0,,OUTPUT_ERR,,,OCB.DCBNM); /* Abort command   */
     1528    10157    2            ELSE
     1529    10158    2              CALL VPL$ERR_PROC(2,0,,OUTPUT_ERR,,,OCB.DCBNM); /* Abort STEP      */
     1530    10159    2           RETURN;
     1531    10160        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:77   
     1532    10161    2   SET_OUTPUT_KEY: PROC;
     1533    10162        /**/
     1534    10163        /*  This routine is used to set up the key for the WRITE that is              */
     1535    10164        /*  about to occur.                                                           */
     1536    10165        /*                                                                            */
     1537    10166        /*  NOTE:  In case of an error condition, we don't ALTRET, but display        */
     1538    10167        /*  an error message with sufficient ferocity to get blown away.              */
     1539    10168        /**/
     1540    10169    3           IF OCB.ORG = 4
     1541    10170    3            THEN                           /* INCREMENT EDIT KEY                 */
     1542    10171    4            DO;
     1543    10172    4               OCB.LN.CURRENT = OCB.LN.CURRENT + OCB.LN.K;
     1544    10173    4               IF OCB.LN.CURRENT>99999999
     1545    10174    4                 OR OCB.LN.CURRENT < 0
     1546    10175    4                THEN                       /* EDIT KEY out of range              */
     1547    10176        /*E* ERROR:   VPG-00010
     1548    10177             MESSAGE: EDIT key out of range.
     1549    10178            MESSAGE1: EDIT key greater than 99999.999 or less than 0.
     1550    10179        */
     1551    10180    4                  IF CMD_MASK & '14'O      /* IF COPYALL OR COPYSTD              */
     1552    10181    4                   THEN                    /* REPORT AND ABORT STEP              */
     1553    10182    4                     CALL VPL$ERR_PROC(2,10,'07'O);
     1554    10183    4                   ELSE                    /* REPORT AND ABORT CMD               */
     1555    10184    4                     CALL VPL$ERR_PROC(3,10,'07'O);
     1556    10185    4                ELSE                       /* It's all OK                        */
     1557    10186    4                  OCB.LN.KEY.CURRENT = OCB.LN.CURRENT;
     1558    10187    4               END;
     1559    10188    3           RETURN;
     1560    10189    3   END SET_OUTPUT_KEY;
     1561    10190        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:78   
     1562    10191    2   PERFORM_WRAPPING: PROC ALTRET;
     1563    10192        /**/
     1564    10193        /*  We have determined that wrapping (of some kind) is a thing that           */
     1565    10194        /*  we want to do if necessary, and it is necessary.  So we do it here.       */
     1566    10195        /*                                                                            */
     1567    10196        /*  NOTE:  This procedure will ALTRET if there is a problem with              */
     1568    10197        /*  the WRITE operation.                                                      */
     1569    10198        /**/
     1570    10199    3           IF VFC = 1
     1571    10200    3            THEN                           /* Wrapping with VFC.  Create new VFC */
     1572    10201                                                /* for use on subsequent records      */
     1573    10202    4            DO;
     1574    10203    4               WRAP_VFC = BUF$ARY (0);
     1575    10204    4               FINAL_WRAP_VFC = WRAP_VFC;
     1576    10205    4               IF WRAP_VFC_.FCN = %VFCF_SKB /* Skip channel before print         */
     1577    10206    4                 OR WRAP_VFC_.FCN = %VFCF_SPB /* Skip lines before print         */
     1578    10207    4                THEN                       /* Subsequent lines should skip 1 befr*/
     1579    10208    5                DO;
     1580    10209    5                   WRAP_VFC = %VFC_S1B;
     1581    10210    5                   FINAL_WRAP_VFC = WRAP_VFC;
     1582    10211    5                   END;
     1583    10212    4               IF WRAP_VFC_.FCN = %VFCF_SKA /* Skip channel after print          */
     1584    10213    4                 OR WRAP_VFC_.FCN = %VFCF_SPA /* Skip lines after print          */
     1585    10214    4                THEN                       /* Initial lines should skip 1 after  */
     1586    10215    5                DO;
     1587    10216    5                   FINAL_WRAP_VFC = WRAP_VFC;
     1588    10217    5                   WRAP_VFC = %VFC_S1A;
     1589    10218    5                   BUF$ARY (0) = WRAP_VFC;
     1590    10219    5                   END;
     1591    10220    4               IF WRAP_VFC_.FCN = %VFCF_HDR /* TOF, print, then space            */
     1592    10221    4                THEN
     1593    10222    5                DO;
     1594    10223    5                   FINAL_WRAP_VFC = WRAP_VFC; /* Final is space n                */
     1595    10224    5                   FINAL_WRAP_VFC_.FCN = %VFCF_SPA; /* after print               */
     1596    10225    5                   WRAP_VFC_.COUNT = 1;    /* Initial TOF, print, sapce 1        */
     1597    10226    5                   BUF$ARY(0) = WRAP_VFC;
     1598    10227    5                   WRAP_VFC = %VFC_S1A;    /* Others space 1 after               */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:79   
     1599    10228    5                   END;
     1600    10229    4               END;
     1601    10230    3           DATA_CHAR_LEFT = FPT_WRITE_OUT.BUF_.BOUND +1 - VFC;
     1602    10231    4           DO WHILE(DATA_CHAR_LEFT > 0);
     1603    10232    4              IF DATA_CHAR_LEFT <= OUTPUT_WIDTH
     1604    10233    4               THEN                        /* This is the last wrap record       */
     1605    10234    5               DO;
     1606    10235    5                  CHUNK_SIZE = DATA_CHAR_LEFT;
     1607    10236    5                  IF VFC = 1
     1608    10237    5                   THEN
     1609    10238    5                     BUF$ARY(0) = FINAL_WRAP_VFC;
     1610    10239    5                  END;
     1611    10240    4               ELSE                        /* Not the last WRAP line             */
     1612    10241    5               DO;                         /* Find out where to break line       */
     1613    10242    5                  IF OCB.WRAP = 3
     1614    10243    5                   THEN                    /* WORD(!) wrapping                   */
     1615    10244    6                   DO;
     1616    10245    6                      CALL INDEX1R (CHUNK_SIZE,' ',BUF$FER,OUTPUT_WIDTH)
     1617    10246    6                        ALTRET (BIG_BUST);
     1618    10247    6                      CHUNK_SIZE = CHUNK_SIZE +1 -VFC;
     1619    10248    6                      END;
     1620    10249    5                   ELSE                    /* Wrap at fixed length               */
     1621    10250    5   BIG_BUST:         CHUNK_SIZE = OUTPUT_WIDTH;
     1622    10251    5                  END;
     1623    10252    4              FPT_WRITE_OUT.BUF_.BOUND = CHUNK_SIZE + VFC -1;
     1624    10253    4              CALL SET_OUTPUT_KEY;
     1625    10254    4              CALL WRITE ALTRET(BAILOUT);
     1626    10255    4              IF VFC = 1
     1627    10256    4               THEN                        /* Insert wrap-modified VFC           */
     1628    10257    4                 BUF$ARY(CHUNK_SIZE) = WRAP_VFC;
     1629    10258    4              FPT_WRITE_OUT.BUF_.BUF$ = PINCRC(FPT_WRITE_OUT.BUF_.BUF$,
     1630    10259    4                CHUNK_SIZE);
     1631    10260    4              DATA_CHAR_LEFT = DATA_CHAR_LEFT - CHUNK_SIZE;
     1632    10261    4              END;
     1633    10262    3           RETURN;
     1634    10263        /**/
     1635    10264    3   BAILOUT: ;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:80   
     1636    10265    3           ALTRETURN;
     1637    10266        /**/
     1638    10267    3   END PERFORM_WRAPPING;
     1639    10268        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:81   
     1640    10269    2   WRITE:  PROC ALTRET;
     1641    10270        /**/
     1642    10271        /*  This procedure takes the place of M$WRITE.  It's main purpose             */
     1643    10272        /*  is to select between normal PMMEs and FSFA.                               */
     1644    10273        /**/
     1645    10274    3           FPT_WRITE_OUT.V.DVBYTE.CONT# = USE_CONT;
     1646    10275    4           DO CASE(WRITE_MODE);
     1647    10276    4            CASE(0);                       /* Normal PMME                        */
     1648    10277    4              CALL M$WRITE(FPT_WRITE_OUT) ALTRET(PMME_ALT);
     1649    10278    4            CASE(1);                       /* FSFA routines                      */
     1650    10279    4              CALL XSA$WRITE(FPT_WRITE_OUT,OFSFA_PARAM) ALTRET(FSFA_ALT);
     1651    10280    4            END;                           /* END CASE                           */
     1652    10281    3           RETURN;
     1653    10282        /**/
     1654    10283    3   PMME_ALT:
     1655    10284    3           OUTPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;
     1656    10285    3           ALTRETURN;
     1657    10286        /**/
     1658    10287    3   FSFA_ALT:
     1659    10288    3           OUTPUT_ERR = OFSFA_PARAM.ERR;
     1660    10289    3           ALTRETURN;
     1661    10290        /**/
     1662    10291    3   END WRITE;
     1663    10292    2   END WRITE_OUT_BUF;
     1664    10293    1   END VPG$WRITE_OUT;

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:82   
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPG$WRITE_OUT.

   Procedure VPG$WRITE_OUT requires 2350 words for executable code.
   Procedure VPG$WRITE_OUT requires 1188 words of local(AUTO) storage.

    No errors detected in file VPG$WRITE.:E05TSI    .

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:83   

 Object Unit name= VPG$WRITE_OUT                              File name= VPG$WRITE.:E05TOU
 UTS= JUL 30 '97 07:34:40.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$EI
    2   DCB   even  none     0      0  M$EO
    3   DCB   even  none     0      0  M$EO1
    4   DCB   even  none     0      0  M$ME
    5   DCB   even  none     0      0  M$SI
    6   DCB   even  none     0      0  M$READFILE
    7   DCB   even  none     0      0  M$DO
    8   DCB   even  none     0      0  M$STD1
    9   DCB   even  none     0      0  M$SORT1
   10   Data  even  none    34     42  VPG$WRITE_OUT
   11  RoData even  UTS     48     60  VPG$WRITE_OUT
   12   Proc  even  none  2350   4456  VPG$WRITE_OUT
   13  RoData even  none    69    105  VPG$WRITE_OUT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
    12      0   yes            yes      Std        2  VPG$WRITE_OUT
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:84   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 B_POINTER
         yes           Std       1 VPD$ENLARGE_BUF
         yes           Std       8 VPL$ERR_PROC
         yes           Std       5 VPD$CHECK_VOL
         yes           Std       4 VPE$FMT_ABORT
         yes           Std       8 VPL$ERR_SEV_HANDLER
 yes     yes           Std       2 XSA$WRITE
                       nStd      0 X66_AUTO_2
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  OUTPUT_ERR                            ERR_BUF
     ERR_LEN                               USE_CONT                              BREAK_LOC
     BREAK_MESSAGE_REPORTER                CMD_MASK                              OUTPUT_WIDTH
     OUTPUT_PWIDTH                         SPEC_BUF                              TABS
     OCB                                   IN_RES                                OUT_SN
     ICB                                   IN_ARS                                IN_DVBYTE
     IN_EOMCHAR                            IN_BUF_VECTOR                         ACTUAL_IN_BUF_VECTOR
     EI_KEY                                CUR_SEQ_NO                            WRITE_MODE
     OFSFA_PARAM                           M$EI                                  M$EI$
     M$EI#                                 M$EO                                  M$EO1
     M$ME                                  M$SI                                  M$READFILE
     M$DO                                  M$UC$                                 M$STD1
     M$SORT1                               B$TCB$                                FPT_WRITE_UC
     FPT_WRITE_OUT                         FPT_WEOF                         r    B$XL_LOWER$
r    B$XL_UPPER$                      r    B$XL_ASC_DUMP$                        B_VECTNIL
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:85   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:86   


       54        1        /*T***********************************************************/
       55        2        /*T*                                                         */
       56        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       57        4        /*T*                                                         */
       58        5        /*T***********************************************************/
       59        6        VPG$WRITE_OUT: PROC(REC_LENGTH,CODE);

      6 12 000000   000000 700200 xent  VPG$WRITE_O* TSX0  ! X66_AUTO_2
        12 000001   002244 000002                    ZERO    1188,2

       60        7        /*D* NAME: VPG$WRITE_OUT
       61        8             CALL: CALL VPG$WRITE_OUT(REC_LENGTH,CODE);
       62        9             DESCRIPTION: This routine either processes an input record if CODE=0
       63       10                          or an EOD condition if CODE=1. If it is to process an
       64       11                          input record, that record is found in a buffer framed
       65       12                          by IN_BUF_VECTOR. Its record length is REC_LENGTH. The
       66       13                          input record is reformatted as specified in the output
       67       14                          specification and written to the output file.
       68       15        */
       69       16        /**/
       70       17        /*  INCLUDE FILES  */
       71       18        /**/
       72       19        %INCLUDE VP_DATA_R;
       73     7006        %INCLUDE F$DCB;
       74     7055        %INCLUDE NK_VFC_C;
       75     7129        %INCLUDE B_ERRORS_C;
       76     8256        %INCLUDE B$TABLES_C;
       77     8364        /**/
       78     8365        /*  BASED STRUCTURES  */
       79     8366        /**/
       80     8367        %B$TCB;
       81     8370        %B$ALT;
       82     8378    1   DCL CHR$ARY(0:0) CHAR(1) BASED;
       83     8379    1   DCL CHAR$1 CHAR(1) BASED;
       84     8380        %NK$SEQREC(NAME = NK$SEQREC,STCLASS = BASED);
       85     8383        %B$XL_LOWER(NAME=LC_XLATE_TBL);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:87   
       86     8387        %B$XL_UPPER(NAME=UC_XLATE_TBL);
       87     8391        %B$XL_ASC_DUMP(NAME=PRINTABLE_XLATE_TBL);
       88     8395        /**/
       89     8396        /*  STATIC  */
       90     8397        /**/
       91     8398    1   DCL 1 VFC_BUF STATIC,
       92     8399    1         2 VFC CHAR(1),
       93     8400    1         2 TABS(0:31) BIT(9) UNAL;
       94     8401        %FPT_DEVICE(FPTN = FPT_DEVICE,STCLASS = STATIC);
       95     8419        /**/
       96     8420        /*  LOCAL AUTO  */
       97     8421        /**/
       98     8422        %VLP_TAB(FPTN = VLP_TAB,STCLASS = AUTO);
       99     8436    1   DCL REC_LENGTH UBIN WORD;
      100     8437    1   DCL CODE SBIN WORD;
      101     8438        %KEYOPTS (FPTN = KEYOPTS, STCLASS = AUTO);
      102     8464        /**/
      103     8465        /*  CONSTANTS  */
      104     8466        /**/
      105     8467        %FPT_WAIT(FPTN = FPT_WAIT,
      106     8468                  UNITS = 2,                    /* 2 seconds                          */
      107     8469                  STCLASS = CONSTANT);
      108     8483    1   DCL XTBL CHAR(16) CONSTANT INIT('0123456789ABCDEF');
      109     8484    1   DCL X_TBL(0:15) REDEF XTBL CHAR(1);
      110     8485    1   DCL MOP_EKEY(0:5) BIT(9) STATIC INIT(
      111     8486    1                   %MVZB4,                 /* MOVE 4 DIGITS WITH ZERO SUP.       */
      112     8487    1                   %SES10,                 /* RESET FLAG                         */
      113     8488    1                   %MVC1,                  /* MOVE 1'S PLACE DIGIT               */
      114     8489    1                   %INSB7,                 /* OUTPUT A PERIOD                    */
      115     8490    1                   %MVC3,                  /* MOVE 3 DIGITS                      */
      116     8491    1                   %INSB1);                /* OUTPUT A BLANK                     */
      117     8492    1   DCL MOP_SEQNO(0:5) BIT(9) STATIC INIT(
      118     8493    1                   %MVZB5,                 /* MOVE 5 DIGITS WITH ZERO SUP.       */
      119     8494    1                   %SES10,                 /* RESET FLAG                         */
      120     8495    1                   %MVC1,                  /* MOVE LAST DIGIT                    */
      121     8496    1                   %INSB1,                 /* OUTPUT A BLANK                     */
      122     8497    1                   %INSB4,                 /* OUTPUT A DASH                      */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:88   
      123     8498    1                   %INSB1);                /* OUTPUT A BLANK                     */
      124     8499    1   DCL MOP_3_BUF(0:1) BIT(9) CONSTANT INIT(%MVZB2,%MVC1);
      125     8500    1   DCL MOP_5_BUF(0:1) BIT(9) CONSTANT INIT(%MVZB4,%MVC1);
      126     8501    1   DCL MOP_8_BUF(0:1) BIT(9) CONSTANT INIT(%MVZB7,%MVC1);
      127     8502    1   DCL 1 CONV_TBL(0:3) CONSTANT,
      128     8503    1         2 MICROP BIT(9) INIT(%MVZB8,%MVZB8,%MVZB5,%MVZB6),
      129     8504    1         2 DIV UBIN(18) UNAL INIT(9000,9000,36,180),
      130     8505    1         2 UNITS CHAR(12) INIT(' BYTES',' BYTES',' WORDS(HOST)',' WORDS(FEP)');
      131     8506    1   DCL EOD_LIT CHAR(0) CONSTANT INIT('--EOD--ENCOUNTERED');
      132     8507    1   DCL KEY_BUF CHAR(8);
      133     8508    1   DCL SEQ_BUF CHAR(6);
      134     8509    1   DCL 1 BUF_VECTOR,
      135     8510    1         2 BOUND UBIN(20) UNAL,
      136     8511    1         2 * BIT(16) UNAL,
      137     8512    1         2 PTR$ PTR UNAL;
      138     8513    1   DCL 1 OUT_BUF_VECTOR DALIGNED,
      139     8514    1         2 BOUND UBIN(20) UNAL,
      140     8515    1         2 * BIT(16) UNAL,
      141     8516    1         2 PTR$ PTR UNAL;
      142     8517    1   DCL REC_LEN SBIN WORD;
      143     8518    1   DCL IN$REC CHAR(REC_LEN) BASED;
      144     8519    1   DCL SUB_LEN SBIN WORD;
      145     8520    1   DCL SUB$STR CHAR(SUB_LEN) BASED;
      146     8521    1   DCL T_CHAR CHAR(1);
      147     8522    1   DCL VFC_CHAR CHAR(1);
      148     8523    1   DCL 1 VFC_TEXTC STATIC,
      149     8524    1         2 LEN UBIN(9) UNAL,
      150     8525    1         2 STRING CHAR(1);
      151     8526    1   DCL ONE_BASED_CHAR BASED CHAR(1);
      152     8527    1   DCL I SBIN WORD;
      153     8528    1   DCL START_IDX SBIN;
      154     8529    1   DCL DUMP_BUF CHAR(4096);
      155     8530    1   DCL DUMP_BUF_ARY(0:4095) REDEF DUMP_BUF CHAR(1);
      156     8531    1   DCL 1 DMP_BUF REDEF DUMP_BUF,
      157     8532    1         2 SEQ(0:5) CHAR(1),
      158     8533    1         2 STAR CHAR(1),
      159     8534    1         2 REST CHAR(4089);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:89   
      160     8535    1   DCL 1 TEXT$C BASED,
      161     8536    1         2 LEN UBIN BYTE UNAL,
      162     8537    1         2 STRING CHAR(TEXT$C.LEN);
      163     8538        /**/
      164     8539        /*  ENTRY DCLS  */
      165     8540        /**/
      166     8541        %VP_ENTRIES (OMIT=VPG$WRITE_OUT);
      167     8749        /**/
      168     8750        /*  LOCAL SUBS & EQUS  */
      169     8751        /**/
      170     8752        %SUB CR_CHAR  ="BITASC('015'O)";
      171     8753        %SUB LF_CHAR  ="BITASC('012'O)";
      172     8754        %SUB TAB_CHAR ="BITASC('011'O)";
      173     8755        /******************************************************************************/
      174     8756        /******************************************************************************/
      175     8757        /******************************************************************************/
      176     8758    1           BUF_VECTOR     = IN_BUF_VECTOR;

   8758 12 000002   000000 237000 xsym               LDAQ    IN_BUF_VECTOR
        12 000003   200025 755100                    STA     BUF_VECTOR,,AUTO
        12 000004   200026 756100                    STQ     BUF_VECTOR+1,,AUTO

      177     8759    1           IF CODE=1

   8759 12 000005   200004 470500                    LDP0    @CODE,,AUTO
        12 000006   000000 235100                    LDA     0,,PR0
        12 000007   000001 115007                    CMPA    1,DL
        12 000010   000042 601000 12                 TNZ     s:8778

      178     8760    1            THEN
      179     8761    2            DO;                            /* EOD CONDITION                      */

      180     8762    2               IF OCB.OCT_HEX.TYPE=0

   8762 12 000011   000036 235000 xsym               LDA     OCB+30
        12 000012   000020 601000 12                 TNZ     s:8771

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:90   
      181     8763    2                THEN
      182     8764    3                DO;

      183     8765    3                   FPT_WEOF.V.DCB# = OCB.DCBNM;

   8765 12 000013   000000 720000 xsym               LXL0    OCB
        12 000014   000002 740000 xsym               STX0    FPT_WEOF+2

      184     8766    3                   CALL WEOF ALTRET(WEOF_ALT);

   8766 12 000015   000566 701000 12                 TSX1    WEOF
        12 000016   000017 702000 12                 TSX2    WEOF_ALT

   8765 12 000017                       WEOF_ALT     null
      185     8767    3   WEOF_ALT:       ;
      186     8768    3                   END;

   8768 12 000017   000041 710000 12                 TRA     s:8776

      187     8769    2                ELSE
      188     8770    3                DO;

      189     8771    3                   OUT_BUF_VECTOR = VECTOR(DUMP_BUF);

   8771 12 000020   000000 235000 13                 LDA     0
        12 000021   202234 452500                    STP2    KEY1+64,,AUTO
        12 000022   202234 236100                    LDQ     KEY1+64,,AUTO
        12 000023   000040 036003                    ADLQ    32,DU
        12 000024   200030 757100                    STAQ    OUT_BUF_VECTOR,,AUTO

      190     8772    3                   DUMP_BUF = EOD_LIT;

   8772 12 000025   010000 220003                    LDX0    4096,DU
        12 000026   040140 100400                    MLR     fill='040'O
        12 000027   000034 000022 11                 ADSC9   EOD_LIT                  cn=0,n=18
        12 000030   200040 000010                    ADSC9   DUMP_BUF,,AUTO           cn=0,n=*X0

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:91   
      191     8773    3                   FPT_WRITE_OUT.V.DVBYTE = '0'B;

   8773 12 000031   000000 236003                    LDQ     0,DU
        12 000032   000013 552040 xsym               STBQ    FPT_WRITE_OUT+11,'40'O

      192     8774    3                   CALL WRITE_OUT_BUF(SIZEC(EOD_LIT),0);

   8774 12 000033   000002 236000 13                 LDQ     2
        12 000034   202124 756100                    STQ     @REC_LEN_+1,,AUTO
        12 000035   000003 236000 13                 LDQ     3
        12 000036   202123 756100                    STQ     RECLEN_BUF+1,,AUTO
        12 000037   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 000040   000000 011000                    NOP     0

      193     8775    3                   END;

      194     8776    2               RETURN;

   8776 12 000041   000000 702200 xent               TSX2  ! X66_ARET

      195     8777    2               END;
      196     8778    1           REC_LEN = REC_LENGTH;

   8778 12 000042   200003 471500                    LDP1    @REC_LENGTH,,AUTO
        12 000043   100000 235100                    LDA     0,,PR1
        12 000044   200032 755100                    STA     REC_LEN,,AUTO

      197     8779        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:92   
      198     8780        /**/
      199     8781        /*  Some defaults can only be determined when the record (and KEY)            */
      200     8782        /*  are available.                                                            */
      201     8783        /**/
      202     8784        /*  PCL has TWO formats that it uses by default when printing keys:           */
      203     8785        /*    o SAMELINE - The sequence number and EDIT key are placed on the same    */
      204     8786        /*        line as the data.  Nothing else is added.                           */
      205     8787        /*    o PREVLINE - The sequence number, octal, edit, and character keys are   */
      206     8788        /*        placed on the previous line, along with DVBYTE and all the rest     */
      207     8789        /*        of the interesting stuff about this record.                         */
      208     8790        /*  If this record happens to have a three-byte key, or no known key type,    */
      209     8791        /*  PCL defaults to SAMELINE.  Otherwise, PREVLINE is used.                   */
      210     8792        /**/
      211     8793    1           KEYOPTS = OCB.KEY;              /* Fresh copy of user's desires       */

   8793 12 000045   000100 100400                    MLR     fill='000'O
        12 000046   000265 000020 xsym               ADSC9   OCB+181                  cn=0,n=16
        12 000047   200015 000020                    ADSC9   KEYOPTS,,AUTO            cn=0,n=16

      212     8794    1           IF OCB.KEYS = 0                 /* Not printing the KEYS              */

   8794 12 000050   000026 235000 xsym               LDA     OCB+22
        12 000051   000157 600000 12                 TZE     NO_KEYS
        12 000052   000036 235000 xsym               LDA     OCB+30
        12 000053   000157 605400 12                 TPNZ    NO_KEYS

      213     8795    1             OR OCB.OCT_HEX.TYPE > 0       /* OR defaults from dump-formatting   */
      214     8796    1            THEN
      215     8797    1              GOTO NO_KEYS;
      216     8798    1           IF CMD_MASK & '000600'O         /* Is this a LIST type command        */

   8798 12 000054   000100 100400                    MLR     fill='000'O
        12 000055   000000 000010 xsym               ADSC9   CMD_MASK                 cn=0,n=8
        12 000056   202234 000010                    ADSC9   KEY1+64,,AUTO            cn=0,n=8
        12 000057   202234 237100                    LDAQ    KEY1+64,,AUTO
        12 000060   000004 377000 13                 ANAQ    4
        12 000061   000076 600000 12                 TZE     s:8810
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:93   

      217     8799    1            THEN
      218     8800    2            DO;

      219     8801    2               KEYOPTS.FORMAT = '000010000'B; /* Format SEQ only!                */

   8801 12 000062   020000 236003                    LDQ     8192,DU
        12 000063   200015 756100                    STQ     KEYOPTS,,AUTO

      220     8802    2               KEYOPTS.DVBYTE = 1;         /* DON'T                              */

   8802 12 000064   000001 235007                    LDA     1,DL
        12 000065   200016 755100                    STA     KEYOPTS+1,,AUTO

      221     8803    2               KEYOPTS.RECSIZ = 1;         /* DON'T                              */

   8803 12 000066   200017 755100                    STA     KEYOPTS+2,,AUTO

      222     8804    2               KEYOPTS.ONDATA = 2;         /* DO                                 */

   8804 12 000067   000002 235007                    LDA     2,DL
        12 000070   200020 755100                    STA     KEYOPTS+3,,AUTO

      223     8805    2               IF CUR_SEQ_NO = 0

   8805 12 000071   000000 235000 xsym               LDA     CUR_SEQ_NO
        12 000072   000075 601000 12                 TNZ     s:8808

      224     8806    2                THEN
      225     8807    2                  CUR_SEQ_NO = 1; /* This starts it off - CONSTRUCT_KEY increments */

   8807 12 000073   000001 235007                    LDA     1,DL
        12 000074   000000 755000 xsym               STA     CUR_SEQ_NO

      226     8808    2               GOTO NO_KEYS;

   8808 12 000075   000157 710000 12                 TRA     NO_KEYS
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:94   

      227     8809    2               END;
      228     8810    1           IF EI_KEY.LEN = 3               /* 3-BYTE KEYS!                       */

   8810 12 000076   000000 236000 xsym               LDQ     EI_KEY
        12 000077   777000 376003                    ANQ     -512,DU
        12 000100   003000 116003                    CMPQ    1536,DU
        12 000101   000134 600000 12                 TZE     SAMELINE
        12 000102   000172 430000 xsym               FSZN    ICB+122
        12 000103   000134 605000 12                 TPL     SAMELINE

   8810 12 000104                       PREVLINE     null
      229     8811    1             OR NOT ICB.FLAVOR.KNOWKEY     /* UNKNOWN KEY TYPE                   */
      230     8812    1            THEN
      231     8813    1              GOTO SAMELINE;
      232     8814    1   PREVLINE: ;
      233     8815    1           IF KEYOPTS.FORMAT = '0'B

   8815 12 000104   200015 236100                    LDQ     KEYOPTS,,AUTO
        12 000105   777000 316003                    CANQ    -512,DU
        12 000106   000117 601000 12                 TNZ     s:8823

      234     8816    1            THEN
      235     8817    2            DO;

      236     8818    2               KEYOPTS.FORMAT.S = %YES#;

   8818 12 000107   020000 236003                    LDQ     8192,DU
        12 000110   200015 256100                    ORSQ    KEYOPTS,,AUTO

      237     8819    2               KEYOPTS.FORMAT.O = %YES#;

   8819 12 000111   100000 236003                    LDQ     32768,DU
        12 000112   200015 256100                    ORSQ    KEYOPTS,,AUTO

      238     8820    2               KEYOPTS.FORMAT.C = %YES#;

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:95   
   8820 12 000113   040000 236003                    LDQ     16384,DU
        12 000114   200015 256100                    ORSQ    KEYOPTS,,AUTO

      239     8821    2               KEYOPTS.FORMAT.E = %YES#;

   8821 12 000115   010000 236003                    LDQ     4096,DU
        12 000116   200015 256100                    ORSQ    KEYOPTS,,AUTO

      240     8822    2               END;

      241     8823    1           IF KEYOPTS.DVBYTE = 0

   8823 12 000117   200016 235100                    LDA     KEYOPTS+1,,AUTO
        12 000120   000123 601000 12                 TNZ     s:8826

      242     8824    1            THEN
      243     8825    1              KEYOPTS.DVBYTE = 2;          /* DO                                 */

   8825 12 000121   000002 236007                    LDQ     2,DL
        12 000122   200016 756100                    STQ     KEYOPTS+1,,AUTO

      244     8826    1           IF KEYOPTS.RECSIZ = 0

   8826 12 000123   200017 235100                    LDA     KEYOPTS+2,,AUTO
        12 000124   000127 601000 12                 TNZ     s:8829

      245     8827    1            THEN
      246     8828    1              KEYOPTS.RECSIZ = 2;          /* DO                                 */

   8828 12 000125   000002 236007                    LDQ     2,DL
        12 000126   200017 756100                    STQ     KEYOPTS+2,,AUTO

      247     8829    1           IF KEYOPTS.ONDATA = 0

   8829 12 000127   200020 235100                    LDA     KEYOPTS+3,,AUTO
        12 000130   000133 601000 12                 TNZ     s:8832

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:96   
      248     8830    1            THEN
      249     8831    1              KEYOPTS.ONDATA = 1;          /* DONT                               */

   8831 12 000131   000001 236007                    LDQ     1,DL
        12 000132   200020 756100                    STQ     KEYOPTS+3,,AUTO

      250     8832    1           GOTO NO_KEYS;

   8832 12 000133   000157 710000 12                 TRA     NO_KEYS

   8829 12 000134                       SAMELINE     null
      251     8833        /**/
      252     8834    1   SAMELINE: ;
      253     8835    1           IF KEYOPTS.FORMAT = '0'B

   8835 12 000134   200015 236100                    LDQ     KEYOPTS,,AUTO
        12 000135   777000 316003                    CANQ    -512,DU
        12 000136   000143 601000 12                 TNZ     s:8841

      254     8836    1            THEN
      255     8837    2            DO;

      256     8838    2               KEYOPTS.FORMAT.S = %YES#;

   8838 12 000137   020000 236003                    LDQ     8192,DU
        12 000140   200015 256100                    ORSQ    KEYOPTS,,AUTO

      257     8839    2               KEYOPTS.FORMAT.E = %YES#;

   8839 12 000141   010000 236003                    LDQ     4096,DU
        12 000142   200015 256100                    ORSQ    KEYOPTS,,AUTO

      258     8840    2               END;

      259     8841    1           IF KEYOPTS.DVBYTE = 0

   8841 12 000143   200016 235100                    LDA     KEYOPTS+1,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:97   
        12 000144   000147 601000 12                 TNZ     s:8844

      260     8842    1            THEN
      261     8843    1              KEYOPTS.DVBYTE = 1;          /* DONT                               */

   8843 12 000145   000001 236007                    LDQ     1,DL
        12 000146   200016 756100                    STQ     KEYOPTS+1,,AUTO

      262     8844    1           IF KEYOPTS.RECSIZ = 0

   8844 12 000147   200017 235100                    LDA     KEYOPTS+2,,AUTO
        12 000150   000153 601000 12                 TNZ     s:8847

      263     8845    1            THEN
      264     8846    1              KEYOPTS.RECSIZ = 1;          /* DONT                               */

   8846 12 000151   000001 236007                    LDQ     1,DL
        12 000152   200017 756100                    STQ     KEYOPTS+2,,AUTO

      265     8847    1           IF KEYOPTS.ONDATA = 0

   8847 12 000153   200020 235100                    LDA     KEYOPTS+3,,AUTO
        12 000154   000157 601000 12                 TNZ     NO_KEYS

      266     8848    1            THEN
      267     8849    1              KEYOPTS.ONDATA = 2;          /* ON SAME LINE                       */

   8849 12 000155   000002 236007                    LDQ     2,DL
        12 000156   200020 756100                    STQ     KEYOPTS+3,,AUTO

   8847 12 000157                       NO_KEYS      null
      268     8850    1   NO_KEYS: ;
      269     8851        /**/
      270     8852        /*  Some types of COPY operations should carry across all applicable          */
      271     8853        /*  record attributes.  If the record is being reformatted in some way,       */
      272     8854        /*  then these attributes should be clobbered.                                */
      273     8855        /**/
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:98   
      274     8856    1           IF OCB.FLAVOR.FORMATTED = %NO#  /* PLAIN...                           */

   8856 12 000157   000256 236000 xsym               LDQ     OCB+174
        12 000160   200000 316003                    CANQ    65536,DU
        12 000161   000174 601000 12                 TNZ     s:8864
        12 000162   000100 100400                    MLR     fill='000'O
        12 000163   000000 000010 xsym               ADSC9   CMD_MASK                 cn=0,n=8
        12 000164   202234 000010                    ADSC9   KEY1+64,,AUTO            cn=0,n=8
        12 000165   202234 237100                    LDAQ    KEY1+64,,AUTO
        12 000166   000006 377000 13                 ANAQ    6
        12 000167   000174 600000 12                 TZE     s:8864

      275     8857    1             AND (CMD_MASK & '34'O)        /* ...COPIES...                       */
      276     8858    1            THEN                           /* ...CARRY DVBYTE AND PRESENCE BITS  */
      277     8859    2            DO;

      278     8860    2               FPT_WRITE_OUT.V.DVBYTE = IN_DVBYTE;

   8860 12 000170   000000 236000 xsym               LDQ     IN_DVBYTE
        12 000171   776000 376003                    ANQ     -1024,DU
        12 000172   000013 552040 xsym               STBQ    FPT_WRITE_OUT+11,'40'O

      279     8861    2               END;

   8861 12 000173   000200 710000 12                 TRA     s:8872

      280     8862    1            ELSE
      281     8863    2            DO;

      282     8864    2               FPT_WRITE_OUT.V.DVBYTE = '0'B;

   8864 12 000174   000000 236003                    LDQ     0,DU
        12 000175   000013 552040 xsym               STBQ    FPT_WRITE_OUT+11,'40'O

      283     8865    2               FPT_WRITE_OUT.IDBUF_ = VECTOR(NIL);

   8865 12 000176   000010 237000 13                 LDAQ    8
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:99   
        12 000177   000006 757000 xsym               STAQ    FPT_WRITE_OUT+6

      284     8866    2               END;

      285     8867        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:100  
      286     8868        /**/
      287     8869        /*  This section of code builds the DVBYTE for the record to be               */
      288     8870        /*  output.  Output options and other factors are considered.                 */
      289     8871        /**/
      290     8872    1           IF OCB.NB ~= 1 AND OCB.DEV_MASK & '001'O THEN

   8872 12 000200   000034 235000 xsym               LDA     OCB+28
        12 000201   000001 115007                    CMPA    1,DL
        12 000202   000211 600000 12                 TZE     s:8875
        12 000203   000255 236000 xsym               LDQ     OCB+173
        12 000204   777000 376003                    ANQ     -512,DU
        12 000205   001000 376003                    ANQ     512,DU
        12 000206   000211 600000 12                 TZE     s:8875

      291     8873    1              FPT_WRITE_OUT.V.DVBYTE.BP# = %YES#;

   8873 12 000207   200000 236003                    LDQ     65536,DU
        12 000210   000013 256000 xsym               ORSQ    FPT_WRITE_OUT+11

      292     8874                            /* PRESERVE BLANKS FOR DISK FILES UNLESS NB SPECIFIED     */
      293     8875    2           DO CASE(OCB.TRANS);

   8875 12 000211   000017 236000 xsym               LDQ     OCB+15
        12 000212   000003 116007                    CMPQ    3,DL
        12 000213   000215 602006 12                 TNC     s:8875+4,QL
        12 000214   000225 710000 12                 TRA     s:8881
        12 000215   000225 710000 12                 TRA     s:8881
        12 000216   000223 710000 12                 TRA     s:8879
        12 000217   000220 710000 12                 TRA     s:8877

      294     8876    2            CASE(2);                       /* TRANS SPECIFIED                    */

      295     8877    2              FPT_WRITE_OUT.V.DVBYTE.TRANS# = %YES#;

   8877 12 000220   020000 236003                    LDQ     8192,DU
        12 000221   000013 256000 xsym               ORSQ    FPT_WRITE_OUT+11
        12 000222   000225 710000 12                 TRA     s:8881
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:101  

      296     8878    2            CASE(1);                       /* NTRANS SPECIFIED                   */

      297     8879    2              FPT_WRITE_OUT.V.DVBYTE.TRANS# = %NO#;

   8879 12 000223   000012 236000 13                 LDQ     10
        12 000224   000013 356000 xsym               ANSQ    FPT_WRITE_OUT+11

      298     8880    2            END;                           /* END CASE                           */

      299     8881    2           DO CASE(OCB.BIN);

   8881 12 000225   000016 236000 xsym               LDQ     OCB+14
        12 000226   000003 116007                    CMPQ    3,DL
        12 000227   000231 602006 12                 TNC     s:8881+4,QL
        12 000230   000241 710000 12                 TRA     s:8887
        12 000231   000241 710000 12                 TRA     s:8887
        12 000232   000237 710000 12                 TRA     s:8885
        12 000233   000234 710000 12                 TRA     s:8883

      300     8882    2            CASE(2);                       /* BIN SPECIFIED                      */

      301     8883    2              FPT_WRITE_OUT.V.DVBYTE.BIN# = %YES#;

   8883 12 000234   040000 236003                    LDQ     16384,DU
        12 000235   000013 256000 xsym               ORSQ    FPT_WRITE_OUT+11
        12 000236   000241 710000 12                 TRA     s:8887

      302     8884    2            CASE(1);                       /* NBIN SPECIFIED                     */

      303     8885    2              FPT_WRITE_OUT.V.DVBYTE.BIN# = %NO#;

   8885 12 000237   000013 236000 13                 LDQ     11
        12 000240   000013 356000 xsym               ANSQ    FPT_WRITE_OUT+11

      304     8886    2            END;                           /* END CASE                           */

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:102  
      305     8887    1           IF REC_LEN=0 THEN GOTO NVFC_CASE;

   8887 12 000241   200032 236100                    LDQ     REC_LEN,,AUTO
        12 000242   000254 600000 12                 TZE     NVFC_CASE

      306     8888    2           DO CASE(OCB.VFC);

   8888 12 000243   000024 236000 xsym               LDQ     OCB+20
        12 000244   000042 772000                    QRL     34
        12 000245   000004 116007                    CMPQ    4,DL
        12 000246   000250 602006 12                 TNC     s:8888+5,QL
        12 000247   000275 710000 12                 TRA     s:8909
        12 000250   000275 710000 12                 TRA     s:8909
        12 000251   000254 710000 12                 TRA     NVFC_CASE
        12 000252   000257 710000 12                 TRA     s:8893
        12 000253   000262 710000 12                 TRA     s:8895

      307     8889    2            CASE(1);                       /* NVFC OR EMPTY RECORD               */

   8886 12 000254                       NVFC_CASE    null
      308     8890    2   NVFC_CASE: ;
      309     8891    2              FPT_WRITE_OUT.V.DVBYTE.VFC# = %NO#;

   8891 12 000254   000014 236000 13                 LDQ     12
        12 000255   000013 356000 xsym               ANSQ    FPT_WRITE_OUT+11
        12 000256   000275 710000 12                 TRA     s:8909

      310     8892    2            CASE(2);                       /* VFC                                */

      311     8893    2              FPT_WRITE_OUT.V.DVBYTE.VFC# = %YES#;

   8893 12 000257   100000 236003                    LDQ     32768,DU
        12 000260   000013 256000 xsym               ORSQ    FPT_WRITE_OUT+11
        12 000261   000275 710000 12                 TRA     s:8909

      312     8894    2            CASE(3);                       /* SVFC option                        */

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:103  
      313     8895    2              FPT_WRITE_OUT.V.DVBYTE.VFC# = %NO#;

   8895 12 000262   000014 236000 13                 LDQ     12
        12 000263   000013 356000 xsym               ANSQ    FPT_WRITE_OUT+11

      314     8896    2              IF IN_DVBYTE.VFC             /* If there was VFC...                */

   8896 12 000264   000000 236000 xsym               LDQ     IN_DVBYTE
        12 000265   100000 316003                    CANQ    32768,DU
        12 000266   000275 600000 12                 TZE     s:8909

      315     8897    2               THEN
      316     8898    3               DO;                         /* ...remove it!                      */

      317     8899    3                  REC_LEN = REC_LEN -1;

   8899 12 000267   000001 336007                    LCQ     1,DL
        12 000270   200032 056100                    ASQ     REC_LEN,,AUTO

      318     8900    3                  BUF_VECTOR.PTR$ = PINCRC(BUF_VECTOR.PTR$,1);

   8900 12 000271   200026 236100                    LDQ     BUF_VECTOR+1,,AUTO
        12 000272   200000 036007                    ADLQ    65536,DL
        12 000273   200026 756100                    STQ     BUF_VECTOR+1,,AUTO

      319     8901    3                  END;

   8901 12 000274   000275 710000 12                 TRA     s:8909

      320     8902    2            CASE(ELSE);                    /* No special VFC manipulation        */

      321     8903    2              ;                            /* Do nothing special                 */
      322     8904    2            END;

      323     8905        /**/
      324     8906        /*  To simplify processing of options that follow, the VFC character, if      */
      325     8907        /*  there is one, is temporarily removed.                                     */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:104  
      326     8908        /**/
      327     8909    1           IF FPT_WRITE_OUT.V.DVBYTE.VFC#

   8909 12 000275   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 000276   100000 316003                    CANQ    32768,DU
        12 000277   000305 600000 12                 TZE     s:8916

      328     8910    1            THEN
      329     8911    2            DO;                            /* WILL DO VFC ON THIS RECORD         */

      330     8912    2               REC_LEN = REC_LEN-1;        /* SO SAVE THE VFC CHARACTER          */

   8912 12 000300   000001 336007                    LCQ     1,DL
        12 000301   200032 056100                    ASQ     REC_LEN,,AUTO

      331     8913    2               BUF_VECTOR.PTR$     = PINCRC(BUF_VECTOR.PTR$,1);

   8913 12 000302   200026 236100                    LDQ     BUF_VECTOR+1,,AUTO
        12 000303   200000 036007                    ADLQ    65536,DL
        12 000304   200026 756100                    STQ     BUF_VECTOR+1,,AUTO

      332     8914    2               END;

      333     8915        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:105  
      334     8916    1           IF OCB.CR_NCR~=0

   8916 12 000305   000015 236000 xsym               LDQ     OCB+13
        12 000306   000345 600000 12                 TZE     s:8939

      335     8917    1            THEN
      336     8918    1              IF OCB.CR_NCR=1              /* CR option                          */

   8918 12 000307   000001 116007                    CMPQ    1,DL
        12 000310   000324 601000 12                 TNZ     NCR

      337     8919    2               THEN DO;

      338     8920    2                  IF IN_EOMCHAR ~= %EOM_EOR#

   8920 12 000311   000000 236000 xsym               LDQ     IN_EOMCHAR
        12 000312   777000 376003                    ANQ     -512,DU
        12 000313   501000 116003                    CMPQ    -97792,DU
        12 000314   000345 600000 12                 TZE     s:8939

      339     8921    3                   THEN DO;

      340     8922    3                      BUF_VECTOR.PTR$->CHR$ARY(REC_LEN) = IN_EOMCHAR;

   8922 12 000315   200026 473500                    LDP3    BUF_VECTOR+1,,AUTO
        12 000316   200032 236100                    LDQ     REC_LEN,,AUTO
        12 000317   040106 100400                    MLR     fill='040'O
        12 000320   000000 000001 xsym               ADSC9   IN_EOMCHAR               cn=0,n=1
        12 000321   300000 000001                    ADSC9   0,Q,PR3                  cn=0,n=1

      341     8923    3                      REC_LEN = REC_LEN+1;

   8923 12 000322   200032 054100                    AOS     REC_LEN,,AUTO

      342     8924    3                      END;

      343     8925    2                  END;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:106  

   8925 12 000323   000345 710000 12                 TRA     s:8939

      344     8926    1               ELSE
      345     8927    1   NCR:          IF REC_LEN>0              /* NCR option                         */

   8927 12 000324   200032 235100       NCR          LDA     REC_LEN,,AUTO
        12 000325   000345 604400 12                 TMOZ    s:8939

      346     8928    1                  THEN
      347     8929    2                  DO;

      348     8930    2                     T_CHAR = BUF_VECTOR.PTR$->CHR$ARY(REC_LEN-1);

   8930 12 000326   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000327   040100 100505                    MLR     fill='040'O
        12 000330   077777 600001                    ADSC9   -1,A,PR0                 cn=3,n=1
        12 000331   200034 000001                    ADSC9   T_CHAR,,AUTO             cn=0,n=1

      349     8931    2                     IF T_CHAR=LF_CHAR OR T_CHAR=CR_CHAR

   8931 12 000332   200034 236100                    LDQ     T_CHAR,,AUTO
        12 000333   777000 376003                    ANQ     -512,DU
        12 000334   012000 116003                    CMPQ    5120,DU
        12 000335   000342 600000 12                 TZE     s:8934
        12 000336   200034 236100                    LDQ     T_CHAR,,AUTO
        12 000337   777000 376003                    ANQ     -512,DU
        12 000340   015000 116003                    CMPQ    6656,DU
        12 000341   000345 601000 12                 TNZ     s:8939

      350     8932    2                      THEN
      351     8933    3                      DO;

      352     8934    3                         REC_LEN = REC_LEN-1;

   8934 12 000342   000001 336007                    LCQ     1,DL
        12 000343   200032 056100                    ASQ     REC_LEN,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:107  

      353     8935    3                         GOTO NCR;

   8935 12 000344   000324 710000 12                 TRA     NCR

      354     8936    3                         END;
      355     8937    2                     END;
      356     8938        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:108  
      357     8939    1           IF OCB.UC_LC~=0                 /* PROCESS UC OR LC OPTION            */

   8939 12 000345   000027 235000 xsym               LDA     OCB+23
        12 000346   000370 600000 12                 TZE     s:8951

      358     8940    1            THEN
      359     8941    1              IF OCB.UC_LC=1

   8941 12 000347   000001 115007                    CMPA    1,DL
        12 000350   000361 601000 12                 TNZ     s:8947

      360     8942    1               THEN
      361     8943    1                 CALL XLATE(BUF_VECTOR.PTR$->IN$REC,

   8943 12 000351   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000352   200032 720100                    LXL0    REC_LEN,,AUTO
        12 000353   000000 471400 xsym               LDP1    B$XL_LOWER$
        12 000354   040140 160540                    MVT     fill='040'O
        12 000355   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        12 000356   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        12 000357   100000 000100                    ARG     0,,PR1
        12 000360   000370 710000 12                 TRA     s:8951

      362     8944    1                   LC_XLATE_TBL,           /* LOWER CASE TRANSLATION             */
      363     8945    1                   BUF_VECTOR.PTR$->IN$REC);
      364     8946    1               ELSE
      365     8947    1                 CALL XLATE(BUF_VECTOR.PTR$->IN$REC,

   8947 12 000361   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000362   200032 720100                    LXL0    REC_LEN,,AUTO
        12 000363   000000 471400 xsym               LDP1    B$XL_UPPER$
        12 000364   040140 160540                    MVT     fill='040'O
        12 000365   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        12 000366   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        12 000367   100000 000100                    ARG     0,,PR1

      366     8948    1                   UC_XLATE_TBL,           /* UPPER CASE TRANSLATION             */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:109  
      367     8949    1                   BUF_VECTOR.PTR$->IN$REC);
      368     8950        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:110  
      369     8951    1           IF OCB.TX=1 AND REC_LEN>0       /* PROCESS TX OPTION                  */

   8951 12 000370   000220 235000 xsym               LDA     OCB+144
        12 000371   000001 115007                    CMPA    1,DL
        12 000372   000377 601000 12                 TNZ     s:8954
        12 000373   200032 236100                    LDQ     REC_LEN,,AUTO
        12 000374   000377 604400 12                 TMOZ    s:8954

      370     8952    1            THEN
      371     8953    1              CALL TAB_EXPAND;

   8953 12 000375   003052 701000 12                 TSX1    TAB_EXPAND
        12 000376   000000 011000                    NOP     0

      372     8954    1           IF OCB.RECSIZE.MAX_SPEC AND OCB.RECSIZE.MAX_SIZE<REC_LEN

   8954 12 000377   000005 234000 xsym               SZN     OCB+5
        12 000400   000405 605000 12                 TPL     s:8958
        12 000401   000006 236000 xsym               LDQ     OCB+6
        12 000402   200032 116100                    CMPQ    REC_LEN,,AUTO
        12 000403   000405 605000 12                 TPL     s:8958

      373     8955    1            THEN
      374     8956    1              REC_LEN = OCB.RECSIZE.MAX_SIZE;

   8956 12 000404   200032 756100                    STQ     REC_LEN,,AUTO

      375     8957        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:111  
      376     8958    1           IF OCB.CS.SPEC~=0               /* PROCESS CS OR NCS OPTION           */

   8958 12 000405   000007 235000 xsym               LDA     OCB+7
        12 000406   000442 600000 12                 TZE     s:8974

      377     8959    1            THEN
      378     8960    2            DO;

      379     8961    2               IF REC_LEN<80

   8961 12 000407   200032 236100                    LDQ     REC_LEN,,AUTO
        12 000410   000120 116007                    CMPQ    80,DL
        12 000411   000424 605000 12                 TPL     s:8968

      380     8962    2                THEN
      381     8963    3                DO;

      382     8964    3                   SUB_LEN = 80-REC_LEN;

   8964 12 000412   000120 235007                    LDA     80,DL
        12 000413   200032 135100                    SBLA    REC_LEN,,AUTO
        12 000414   200033 755100                    STA     SUB_LEN,,AUTO

      383     8965    3                   PINCRC(BUF_VECTOR.PTR$,REC_LEN)->SUB$STR     = ' ';

   8965 12 000415   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000416   000000 620005                    EAX0    0,AL
        12 000417   040146 100400                    MLR     fill='040'O
        12 000420   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 000421   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=*X0

      384     8966    3                   REC_LEN = 80;

   8966 12 000422   000120 235007                    LDA     80,DL
        12 000423   200032 755100                    STA     REC_LEN,,AUTO

      385     8967    3                   END;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:112  

      386     8968    2               CALL BINCHAR(SUBSTR(BUF_VECTOR.PTR$->IN$REC,72,8),OCB.CS.CURRENT);

   8968 12 000424   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000425   000100 301400                    BTD
        12 000426   000012 000004 xsym               NDSC9   OCB+10                   cn=0,s=lsgnf,sf=0,n=4
        12 000427   000022 030010                    NDSC9   18,,PR0                  cn=0,s=nosgn,sf=0,n=8

      387     8969    2               OCB.CS.CURRENT = OCB.CS.CURRENT+OCB.CS.K;

   8969 12 000430   000012 236000 xsym               LDQ     OCB+10
        12 000431   000014 036000 xsym               ADLQ    OCB+12
        12 000432   000012 756000 xsym               STQ     OCB+10

      388     8970    2               SUB_LEN = OCB.CS.ID.L;

   8970 12 000433   000010 236000 xsym               LDQ     OCB+8
        12 000434   000033 772000                    QRL     27
        12 000435   200033 756100                    STQ     SUB_LEN,,AUTO

      389     8971    2               PINCRC(BUF_VECTOR.PTR$,72)->SUB$STR     = OCB.CS.ID.C;

   8971 12 000436   000000 620006                    EAX0    0,QL
        12 000437   040140 100400                    MLR     fill='040'O
        12 000440   000010 200004 xsym               ADSC9   OCB+8                    cn=1,n=4
        12 000441   000022 000010                    ADSC9   18,,PR0                  cn=0,n=*X0

      390     8972    2               END;

      391     8973        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:113  
      392     8974    1           IF OCB.RECSIZE.MIN_SIZE>REC_LEN

   8974 12 000442   000004 236000 xsym               LDQ     OCB+4
        12 000443   200032 116100                    CMPQ    REC_LEN,,AUTO
        12 000444   000457 604400 12                 TMOZ    s:8981

      393     8975    1            THEN
      394     8976    2            DO;

      395     8977    2               SUB_LEN = OCB.RECSIZE.MIN_SIZE - REC_LEN;

   8977 12 000445   200032 136100                    SBLQ    REC_LEN,,AUTO
        12 000446   200033 756100                    STQ     SUB_LEN,,AUTO

      396     8978    2               PINCRC(BUF_VECTOR.PTR$,REC_LEN)->SUB$STR = ' ';

   8978 12 000447   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000450   000000 620006                    EAX0    0,QL
        12 000451   200032 235100                    LDA     REC_LEN,,AUTO
        12 000452   040145 100400                    MLR     fill='040'O
        12 000453   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 000454   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0

      397     8979    2               REC_LEN = OCB.RECSIZE.MIN_SIZE;

   8979 12 000455   000004 235000 xsym               LDA     OCB+4
        12 000456   200032 755100                    STA     REC_LEN,,AUTO

      398     8980    2               END;

      399     8981    1           IF OCB.NB=1 AND REC_LEN>OCB.RECSIZE.MIN_SIZE /* PROCESS NB OPTION     */

   8981 12 000457   000034 235000 xsym               LDA     OCB+28
        12 000460   000001 115007                    CMPA    1,DL
        12 000461   000502 601000 12                 TNZ     ZERO_LEN
        12 000462   200032 236100                    LDQ     REC_LEN,,AUTO
        12 000463   000004 116000 xsym               CMPQ    OCB+4
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:114  
        12 000464   000502 604400 12                 TMOZ    ZERO_LEN

      400     8982    1            THEN
      401     8983    2            DO WHILE(BUF_VECTOR.PTR$->CHR$ARY(REC_LEN-1)=' '

   8983 12 000465   000471 710000 12                 TRA     s:8989

      402     8984    2             AND REC_LEN > OCB.RECSIZE.MIN_SIZE);
      403     8985    2               REC_LEN = REC_LEN-1;

   8985 12 000466   000001 336007                    LCQ     1,DL
        12 000467   200032 056100                    ASQ     REC_LEN,,AUTO

      404     8986    2               IF REC_LEN = 0

   8986 12 000470   000502 600000 12                 TZE     ZERO_LEN

      405     8987    2                THEN
      406     8988    2                  GOTO ZERO_LEN;
      407     8989    2               END;

   8989 12 000471   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000472   200032 235100                    LDA     REC_LEN,,AUTO
        12 000473   040000 106505                    CMPC    fill='040'O
        12 000474   077777 600001                    ADSC9   -1,A,PR0                 cn=3,n=1
        12 000475   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 000476   000502 601000 12                 TNZ     ZERO_LEN
        12 000477   200032 236100                    LDQ     REC_LEN,,AUTO
        12 000500   000004 116000 xsym               CMPQ    OCB+4
        12 000501   000466 605400 12                 TPNZ    s:8985

   8988 12 000502                       ZERO_LEN     null
      408     8990        /**/
      409     8991        /*  Done twiddling with the record                                            */
      410     8992        /**/
      411     8993    1   ZERO_LEN: ;
      412     8994        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:115  
      413     8995    1           IF FPT_WRITE_OUT.V.DVBYTE.VFC#=%YES# /* RESTORE VFC IF NEEDED         */

   8995 12 000502   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 000503   100000 316003                    CANQ    32768,DU
        12 000504   000556 600000 12                 TZE     s:9023

      414     8996    1            THEN
      415     8997    2            DO;

      416     8998    2               REC_LEN = REC_LEN+1;

   8998 12 000505   200032 054100                    AOS     REC_LEN,,AUTO

      417     8999    2               BUF_VECTOR.PTR$ = PINCRC(BUF_VECTOR.PTR$,-1);

   8999 12 000506   200026 236100                    LDQ     BUF_VECTOR+1,,AUTO
        12 000507   000034 036000 xsym               ADLQ    B_VECTNIL+28
        12 000510   200026 756100                    STQ     BUF_VECTOR+1,,AUTO

      418     9000    2               IF OCB.FVFC

   9000 12 000511   000024 236000 xsym               LDQ     OCB+20
        12 000512   100000 316003                    CANQ    32768,DU
        12 000513   000556 600000 12                 TZE     s:9023

      419     9001    2                THEN                       /* FVFC IN EFFECT                     */
      420     9002    3                DO;

      421     9003    3                   VFC_CHAR = BUF_VECTOR.PTR$->CHR$ARY(0);

   9003 12 000514   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 000515   040100 100500                    MLR     fill='040'O
        12 000516   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 000517   200035 000001                    ADSC9   VFC_CHAR,,AUTO           cn=0,n=1

      422     9004    3                   IF VFC_CHAR='+'

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:116  
   9004 12 000520   200035 236100                    LDQ     VFC_CHAR,,AUTO
        12 000521   777000 376003                    ANQ     -512,DU
        12 000522   053000 116003                    CMPQ    22016,DU
        12 000523   000527 601000 12                 TNZ     s:9008

      423     9005    3                    THEN
      424     9006    3                      VFC_CHAR = '`';

   9006 12 000524   140000 236003                    LDQ     49152,DU
        12 000525   200035 756100                    STQ     VFC_CHAR,,AUTO
        12 000526   000553 710000 12                 TRA     s:9019

      425     9007    3                    ELSE
      426     9008    3                      IF VFC_CHAR='0'

   9008 12 000527   200035 236100                    LDQ     VFC_CHAR,,AUTO
        12 000530   777000 376003                    ANQ     -512,DU
        12 000531   060000 116003                    CMPQ    24576,DU
        12 000532   000536 601000 12                 TNZ     s:9012

      427     9009    3                       THEN
      428     9010    3                         VFC_CHAR = 'b';

   9010 12 000533   142000 236003                    LDQ     50176,DU
        12 000534   200035 756100                    STQ     VFC_CHAR,,AUTO
        12 000535   000553 710000 12                 TRA     s:9019

      429     9011    3                       ELSE
      430     9012    3                         IF VFC_CHAR='1'

   9012 12 000536   200035 236100                    LDQ     VFC_CHAR,,AUTO
        12 000537   777000 376003                    ANQ     -512,DU
        12 000540   061000 116003                    CMPQ    25088,DU
        12 000541   000545 601000 12                 TNZ     s:9016

      431     9013    3                          THEN
      432     9014    3                            VFC_CHAR = '0';
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:117  

   9014 12 000542   060000 236003                    LDQ     24576,DU
        12 000543   200035 756100                    STQ     VFC_CHAR,,AUTO
        12 000544   000553 710000 12                 TRA     s:9019

      433     9015    3                          ELSE
      434     9016    3                            IF VFC_CHAR=' '

   9016 12 000545   200035 236100                    LDQ     VFC_CHAR,,AUTO
        12 000546   777000 376003                    ANQ     -512,DU
        12 000547   040000 116003                    CMPQ    16384,DU
        12 000550   000553 601000 12                 TNZ     s:9019

      435     9017    3                             THEN
      436     9018    3                               VFC_CHAR = 'a';

   9018 12 000551   141000 236003                    LDQ     49664,DU
        12 000552   200035 756100                    STQ     VFC_CHAR,,AUTO

      437     9019    3                   BUF_VECTOR.PTR$->CHR$ARY(0) = VFC_CHAR;

   9019 12 000553   040100 100500                    MLR     fill='040'O
        12 000554   200035 000001                    ADSC9   VFC_CHAR,,AUTO           cn=0,n=1
        12 000555   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      438     9020    3                   END;

      439     9021    2               END;

      440     9022        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:118  
      441     9023    1           IF OCB.OCT_HEX.TYPE=0

   9023 12 000556   000036 235000 xsym               LDA     OCB+30
        12 000557   000563 601000 12                 TNZ     s:9027

      442     9024    1            THEN
      443     9025    1              CALL NO_DUMP_PROC;

   9025 12 000560   003344 701000 12                 TSX1    NO_DUMP_PROC
        12 000561   000000 011000                    NOP     0
        12 000562   000565 710000 12                 TRA     s:9028

      444     9026    1            ELSE
      445     9027    1              CALL DUMP_PROC;

   9027 12 000563   000611 701000 12                 TSX1    DUMP_PROC
        12 000564   000000 011000                    NOP     0

      446     9028    1           RETURN;

   9028 12 000565   000000 702200 xent               TSX2  ! X66_ARET

      447     9029        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:119  
      448     9030    1   WEOF:   PROC ALTRET;

   9030 12 000566   202040 741300       WEOF         STX1  ! DUMP_BUF+1024,,AUTO

      449     9031    3           DO CASE(WRITE_MODE);

   9031 12 000567   000000 235000 xsym               LDA     WRITE_MODE
        12 000570   000001 115007                    CMPA    1,DL
        12 000571   000573 602005 12                 TNC     s:9031+4,AL
        12 000572   000601 710000 12                 TRA     s:9037
        12 000573   000574 710000 12                 TRA     s:9033

      450     9032    3            CASE(0);                       /* Normal PMME                        */

      451     9033    3              CALL M$WEOF(FPT_WEOF) ALTRET(PMME_ALT);

   9033 12 000574   000000 630400 xsym               EPPR0   FPT_WEOF
        12 000575   440007 713400                    CLIMB   alt,+16391
        12 000576   400000 401760                    pmme    nvectors=1
        12 000577   000603 702000 12                 TSX2    PMME_ALT
        12 000600   000601 710000 12                 TRA     s:9037

      452     9034    3            CASE(1);                       /* FSFA routines                      */

      453     9035    3              ;                            /* Fake it                            */
      454     9036    3            END;                           /* END CASE                           */

      455     9037    2           RETURN;

   9037 12 000601   202040 221300                    LDX1  ! DUMP_BUF+1024,,AUTO
        12 000602   000001 702211                    TSX2  ! 1,X1

      456     9038        /**/
      457     9039    2   PMME_ALT:
      458     9040    2           OUTPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

   9040 12 000603   000000 470400 xsym  PMME_ALT     LDP0    B$TCB$
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:120  
        12 000604   000000 471500                    LDP1    0,,PR0
        12 000605   100102 236100                    LDQ     66,,PR1
        12 000606   000000 756000 xsym               STQ     OUTPUT_ERR

      459     9041    2           ALTRETURN;

   9041 12 000607   202040 221300                    LDX1  ! DUMP_BUF+1024,,AUTO
        12 000610   000000 702211                    TSX2  ! 0,X1

      460     9042        /*                                      NOT YET USED !
      461     9043        FSFA_ALT:
      462     9044                 OUTPUT_ERR = OFSFA_PARAM.ERR;
      463     9045                 ALTRETURN;
      464     9046          */
      465     9047    2   END WEOF;
      466     9048        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:121  
      467     9049    1   DUMP_PROC: PROC;

   9049 12 000611   202040 741300       DUMP_PROC    STX1  ! DUMP_BUF+1024,,AUTO

      468     9050        /*I* NAME: DUMP_PROC
      469     9051             PURPOSE: To complete output of current record in an OCTAL or HEXADECIMAL
      470     9052                      dump format.
      471     9053             CALL: CALL DUMP_PROC;
      472     9054             DESCRIPTION: This procedure takes the current record and reformats
      473     9055                          it into an OCTAL or HEXADECIMAL dump.
      474     9056        */
      475     9057    2   DCL WORDS_TO_DUMP SBIN WORD;
      476     9058    2   DCL CHARS_TO_DUMP SBIN WORD;
      477     9059    2   DCL WORD_OFFSET SBIN WORD;
      478     9060    2   DCL CHAR_OFFSET SBIN WORD;
      479     9061    2   DCL J SBIN WORD;
      480     9062    2   DCL K SBIN WORD;
      481     9063    2   DCL L SBIN WORD;
      482     9064    2   DCL SAVE_BUF CHAR(128);
      483     9065    2   DCL SAVE_BUF_ARY(0:383) REDEF SAVE_BUF UBIN(3) UNAL;
      484     9066    2   DCL SAVE_BUF_X_ARY(0:287) REDEF SAVE_BUF UBIN(4) UNAL;
      485     9067    2   DCL 1 SAVE_BUF_X1_ARY(0:127) REDEF SAVE_BUF,
      486     9068    2         2 * BIT(1) UNAL,
      487     9069    2         2 ONE UBIN(4) UNAL,
      488     9070    2         2 TWO UBIN(4) UNAL;
      489     9071    2   DCL STAR_FLAG SBIN WORD;
      490     9072    2   DCL CHAR$ PTR;
      491     9073    2   DCL TEXT$ PTR;
      492     9074    2   DCL LAST_WORD_OFFSET SBIN WORD;
      493     9075    2   DCL BUF_LEN SBIN WORD;
      494     9076    2   DCL CHAR$ACTER CHAR(1) BASED;
      495     9077    2   DCL CHAR$32 CHAR(32) BASED;
      496     9078    2   DCL CHAR$36 CHAR(36) BASED;
      497     9079    2   DCL UBIN$4 UBIN(4) UNAL BASED;
      498     9080        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:122  
      499     9081    2           CALL WRITE_BLANK_LINE;          /* Make a blank line                  */

   9081 12 000612   000666 701000 12                 TSX1    WRITE_BLANK_LINE
        12 000613   000000 011000                    NOP     0

      500     9082    2           START_IDX = 0;

   9082 12 000614   200037 450100                    STZ     START_IDX,,AUTO

      501     9083    2           CALL CONSTRUCT_KEY(DUMP_BUF,START_IDX,SIZEC(DUMP_BUF));

   9083 12 000615   000016 236000 13                 LDQ     14
        12 000616   202121 756100                    STQ     @START_IDX+1,,AUTO
        12 000617   200037 630500                    EPPR0   START_IDX,,AUTO
        12 000620   202120 450500                    STP0    @DUMP_BUF+1,,AUTO
        12 000621   200040 631500                    EPPR1   DUMP_BUF,,AUTO
        12 000622   202117 451500                    STP1    BUF_LEN+3,,AUTO
        12 000623   002004 701000 12                 TSX1    CONSTRUCT_KEY
        12 000624   000000 011000                    NOP     0

      502     9084    2           OUT_BUF_VECTOR = VECTOR(DUMP_BUF);

   9084 12 000625   000000 235000 13                 LDA     0
        12 000626   202234 452500                    STP2    KEY1+64,,AUTO
        12 000627   202234 236100                    LDQ     KEY1+64,,AUTO
        12 000630   000040 036003                    ADLQ    32,DU
        12 000631   200030 757100                    STAQ    OUT_BUF_VECTOR,,AUTO

      503     9085    2           CALL WRITE_OUT_BUF(START_IDX,0);

   9085 12 000632   000002 236000 13                 LDQ     2
        12 000633   202124 756100                    STQ     @REC_LEN_+1,,AUTO
        12 000634   200037 630500                    EPPR0   START_IDX,,AUTO
        12 000635   202123 450500                    STP0    RECLEN_BUF+1,,AUTO
        12 000636   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 000637   000000 011000                    NOP     0

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:123  
      504     9086    2           IF REC_LEN=0

   9086 12 000640   200032 235100                    LDA     REC_LEN,,AUTO
        12 000641   000644 601000 12                 TNZ     s:9089

      505     9087    2            THEN
      506     9088    2              RETURN;

   9088 12 000642   202040 221300                    LDX1  ! DUMP_BUF+1024,,AUTO
        12 000643   000001 702211                    TSX2  ! 1,X1

      507     9089    3           DO CASE(OCB.OCT_HEX.TYPE);

   9089 12 000644   000036 236000 xsym               LDQ     OCB+30
        12 000645   000004 116007                    CMPQ    4,DL
        12 000646   000650 602006 12                 TNC     s:9089+4,QL
        12 000647   000664 710000 12                 TRA     s:9097
        12 000650   000654 710000 12                 TRA     s:9091
        12 000651   000654 710000 12                 TRA     s:9091
        12 000652   000657 710000 12                 TRA     s:9093
        12 000653   000662 710000 12                 TRA     s:9095

      508     9090    3            CASE(0,1);

      509     9091    3              CALL DUMP_OCT;

   9091 12 000654   000741 701000 12                 TSX1    DUMP_OCT
        12 000655   000000 011000                    NOP     0
        12 000656   000664 710000 12                 TRA     s:9097

      510     9092    3            CASE(2);

      511     9093    3              CALL DUMP_X;

   9093 12 000657   001231 701000 12                 TSX1    DUMP_X
        12 000660   000000 011000                    NOP     0
        12 000661   000664 710000 12                 TRA     s:9097
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:124  

      512     9094    3            CASE(3);

      513     9095    3              CALL DUMP_X1;

   9095 12 000662   001526 701000 12                 TSX1    DUMP_X1
        12 000663   000000 011000                    NOP     0

      514     9096    3            END;

      515     9097    2           RETURN;

   9097 12 000664   202040 221300                    LDX1  ! DUMP_BUF+1024,,AUTO
        12 000665   000001 702211                    TSX2  ! 1,X1

      516     9098        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:125  
      517     9099    2   WRITE_BLANK_LINE: PROC;

   9099 12 000666   202116 741300       WRITE_BLANK* STX1  ! BUF_LEN+2,,AUTO

      518     9100        /*I* NAME: WRITE_BLANK_LINE
      519     9101             PURPOSE: To write out a blank line with the appropriate VFC
      520     9102                      options applied.
      521     9103             CALL: CALL WRITE_BLANK_LINE;
      522     9104             DESCRIPTION: This procedure generates a blank line through the
      523     9105                          output DCB.
      524     9106        */
      525     9107    3   DCL SAVE_DVBYTE BIT(9) STATIC;
      526     9108    3   DCL VFC_CHARACTER CHAR(1) STATIC;
      527     9109
      528     9110    3           SAVE_DVBYTE=FPT_WRITE_OUT.V.DVBYTE;

   9110 12 000667   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 000670   777000 376003                    ANQ     -512,DU
        12 000671   000031 756000 10                 STQ     SAVE_DVBYTE

      529     9111    3           FPT_WRITE_OUT.V.DVBYTE.VFC#='0'B; /* DEFAULT TO ONE BLANK LINE        */

   9111 12 000672   000014 236000 13                 LDQ     12
        12 000673   000013 356000 xsym               ANSQ    FPT_WRITE_OUT+11

      530     9112    3           VFC_CHARACTER = ' ';

   9112 12 000674   040000 236003                    LDQ     16384,DU
        12 000675   000032 756000 10                 STQ     VFC_CHARACTER

      531     9113    4           DO CASE(OCB.VFC_USE);

   9113 12 000676   000023 235000 xsym               LDA     OCB+19
        12 000677   000003 115007                    CMPA    3,DL
        12 000700   000702 602005 12                 TNC     s:9113+4,AL
        12 000701   000725 710000 12                 TRA     s:9126
        12 000702   000725 710000 12                 TRA     s:9126
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:126  
        12 000703   000705 710000 12                 TRA     s:9115
        12 000704   000717 710000 12                 TRA     s:9122

      532     9114    4            CASE(1);                  /* Use OCB.VFC_CHAR iff none already there */

      533     9115    4              IF NOT FPT_WRITE_OUT.V.DVBYTE.VFC#

   9115 12 000705   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 000706   100000 316003                    CANQ    32768,DU
        12 000707   000725 601000 12                 TNZ     s:9126

      534     9116    4               THEN
      535     9117    5               DO;

      536     9118    5                  FPT_WRITE_OUT.V.DVBYTE.VFC# = '1'B;

   9118 12 000710   100000 236003                    LDQ     32768,DU
        12 000711   000013 256000 xsym               ORSQ    FPT_WRITE_OUT+11

      537     9119    5                  VFC_CHARACTER=OCB.VFC_CHAR;

   9119 12 000712   000022 236000 xsym               LDQ     OCB+18
        12 000713   777000 376003                    ANQ     -512,DU
        12 000714   000017 276000 13                 ORQ     15
        12 000715   000032 756000 10                 STQ     VFC_CHARACTER

      538     9120    5                  END;

   9120 12 000716   000725 710000 12                 TRA     s:9126

      539     9121    4            CASE(2);                       /* Use OCB.VFC_CHAR no matter what    */

      540     9122    4              FPT_WRITE_OUT.V.DVBYTE.VFC#='1'B;

   9122 12 000717   100000 236003                    LDQ     32768,DU
        12 000720   000013 256000 xsym               ORSQ    FPT_WRITE_OUT+11

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:127  
      541     9123    4              VFC_CHARACTER=OCB.VFC_CHAR;

   9123 12 000721   000022 236000 xsym               LDQ     OCB+18
        12 000722   777000 376003                    ANQ     -512,DU
        12 000723   000017 276000 13                 ORQ     15
        12 000724   000032 756000 10                 STQ     VFC_CHARACTER

      542     9124    4            END;                           /* CASE                               */

      543     9125
      544     9126    3           OUT_BUF_VECTOR=VECTOR(VFC_CHARACTER); /* Set up for write             */

   9126 12 000725   000020 237000 13                 LDAQ    16
        12 000726   200030 757100                    STAQ    OUT_BUF_VECTOR,,AUTO

      545     9127    3           CALL WRITE_OUT_BUF(SIZEC(VFC_CHARACTER),0); /* write it               */

   9127 12 000727   000002 236000 13                 LDQ     2
        12 000730   202124 756100                    STQ     @REC_LEN_+1,,AUTO
        12 000731   000022 236000 13                 LDQ     18
        12 000732   202123 756100                    STQ     RECLEN_BUF+1,,AUTO
        12 000733   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 000734   000000 011000                    NOP     0

      546     9128    3           FPT_WRITE_OUT.V.DVBYTE = SAVE_DVBYTE; /* restore DVBYTE               */

   9128 12 000735   000031 236000 10                 LDQ     SAVE_DVBYTE
        12 000736   000013 552040 xsym               STBQ    FPT_WRITE_OUT+11,'40'O

      547     9129    3   END WRITE_BLANK_LINE;

   9129 12 000737   202116 221300                    LDX1  ! BUF_LEN+2,,AUTO
        12 000740   000001 702211                    TSX2  ! 1,X1

      548     9130        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:128  
      549     9131    2   DUMP_OCT: PROC;

   9131 12 000741   202116 741300       DUMP_OCT     STX1  ! BUF_LEN+2,,AUTO

      550     9132        /*I* NAME: DUMP_OCT
      551     9133             PURPOSE: To dump the current record in octal format.
      552     9134             DESCRIPTION: This procedure dumps the current record in octal  format.
      553     9135        */
      554     9136    3           IF OCB.OCT_HEX.TEXT = 1         /* TEXT=DEFAULT                       */

   9136 12 000742   000037 235000 xsym               LDA     OCB+31
        12 000743   000001 115007                    CMPA    1,DL
        12 000744   000754 601000 12                 TNZ     s:9140

      555     9137    3            THEN
      556     9138    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH - SIZEC(DMP_BUF.SEQ) -1)/14/2)*2;

   9138 12 000745   000000 236000 xsym               LDQ     OUTPUT_PWIDTH
        12 000746   000007 136007                    SBLQ    7,DL
        12 000747   000016 506007                    DIV     14,DL
        12 000750   000002 506007                    DIV     2,DL
        12 000751   000001 736000                    QLS     1
        12 000752   202041 756100                    STQ     WORDS_TO_DUMP,,AUTO
        12 000753   000762 710000 12                 TRA     s:9141

      557     9139    3            ELSE
      558     9140    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH - SIZEC(DMP_BUF.SEQ) -2)/18/2)*2;

   9140 12 000754   000000 236000 xsym               LDQ     OUTPUT_PWIDTH
        12 000755   000010 136007                    SBLQ    8,DL
        12 000756   000022 506007                    DIV     18,DL
        12 000757   000002 506007                    DIV     2,DL
        12 000760   000001 736000                    QLS     1
        12 000761   202041 756100                    STQ     WORDS_TO_DUMP,,AUTO

      559     9141    3           IF WORDS_TO_DUMP=0

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:129  
   9141 12 000762   000765 601000 12                 TNZ     s:9144

      560     9142    3            THEN
      561     9143    3              WORDS_TO_DUMP = 1;

   9143 12 000763   000001 235007                    LDA     1,DL
        12 000764   202041 755100                    STA     WORDS_TO_DUMP,,AUTO

      562     9144    3           CHARS_TO_DUMP = WORDS_TO_DUMP*4;

   9144 12 000765   202041 235100                    LDA     WORDS_TO_DUMP,,AUTO
        12 000766   000002 735000                    ALS     2
        12 000767   202042 755100                    STA     CHARS_TO_DUMP,,AUTO

      563     9145    3           TEXT$ = PINCRC(ADDR(DUMP_BUF),SIZEC(DMP_BUF.SEQ) +2 + WORDS_TO_DUMP*14);

   9145 12 000770   202234 452500                    STP2    KEY1+64,,AUTO
        12 000771   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 000772   000023 402000 13                 MPY     19
        12 000773   000042 036003                    ADLQ    34,DU
        12 000774   202234 036100                    ADLQ    KEY1+64,,AUTO
        12 000775   202112 756100                    STQ     TEXT$,,AUTO

      564     9146    3           STAR_FLAG = 0;

   9146 12 000776   202110 450100                    STZ     STAR_FLAG,,AUTO

      565     9147    3           LAST_WORD_OFFSET = ((REC_LEN-1)/4/WORDS_TO_DUMP)*WORDS_TO_DUMP;

   9147 12 000777   200032 236100                    LDQ     REC_LEN,,AUTO
        12 001000   000001 136007                    SBLQ    1,DL
        12 001001   000004 506007                    DIV     4,DL
        12 001002   202041 506100                    DIV     WORDS_TO_DUMP,,AUTO
        12 001003   202041 402100                    MPY     WORDS_TO_DUMP,,AUTO
        12 001004   202113 756100                    STQ     LAST_WORD_OFFSET,,AUTO

      566     9148    4           DO WORD_OFFSET=0 TO LAST_WORD_OFFSET BY WORDS_TO_DUMP;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:130  

   9148 12 001005   202043 450100                    STZ     WORD_OFFSET,,AUTO
        12 001006   001224 710000 12                 TRA     s:9202+3

      567     9149    4              CHAR_OFFSET = WORD_OFFSET*4;

   9149 12 001007   202043 235100                    LDA     WORD_OFFSET,,AUTO
        12 001010   000002 735000                    ALS     2
        12 001011   202044 755100                    STA     CHAR_OFFSET,,AUTO

      568     9150    4              IF WORD_OFFSET=LAST_WORD_OFFSET

   9150 12 001012   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001013   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001014   001020 601000 12                 TNZ     s:9153

      569     9151    4               THEN
      570     9152    4                 CHARS_TO_DUMP = REC_LEN-CHAR_OFFSET;

   9152 12 001015   200032 236100                    LDQ     REC_LEN,,AUTO
        12 001016   202044 136100                    SBLQ    CHAR_OFFSET,,AUTO
        12 001017   202042 756100                    STQ     CHARS_TO_DUMP,,AUTO

      571     9153    4              IF (SUBSTR(BUF_VECTOR.PTR$->IN$REC,CHAR_OFFSET,CHARS_TO_DUMP)

   9153 12 001020   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 001021   202042 720100                    LXL0    CHARS_TO_DUMP,,AUTO
        12 001022   040100 106545                    CMPC    fill='040'O
        12 001023   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
        12 001024   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128
        12 001025   001040 601000 12                 TNZ     s:9162
        12 001026   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001027   001040 600000 12                 TZE     s:9162
        12 001030   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001031   001040 600000 12                 TZE     s:9162
        12 001032   000040 235000 xsym               LDA     OCB+32
        12 001033   000002 115007                    CMPA    2,DL
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:131  
        12 001034   001040 600000 12                 TZE     s:9162

      572     9154    4                =SAVE_BUF)
      573     9155    4                AND (WORD_OFFSET~=0)
      574     9156    4                AND (WORD_OFFSET~=LAST_WORD_OFFSET)
      575     9157    4                AND (OCB.OCT_HEX.DUPE ~= 2) /* NDUPE=DEFAULT                     */
      576     9158    4               THEN
      577     9159    4                 STAR_FLAG = 1;

   9159 12 001035   000001 235007                    LDA     1,DL
        12 001036   202110 755100                    STA     STAR_FLAG,,AUTO
        12 001037   001221 710000 12                 TRA     s:9202

      578     9160    4               ELSE
      579     9161    5               DO;

      580     9162    5                  CHAR$ = ADDR(DMP_BUF.REST);

   9162 12 001040   202234 452500                    STP2    KEY1+64,,AUTO
        12 001041   202234 236100                    LDQ     KEY1+64,,AUTO
        12 001042   000024 036000 13                 ADLQ    20
        12 001043   202111 756100                    STQ     CHAR$,,AUTO

      581     9163    5                  SAVE_BUF = SUBSTR(BUF_VECTOR.PTR$->IN$REC,

   9163 12 001044   202044 235100                    LDA     CHAR_OFFSET,,AUTO
        12 001045   040100 100545                    MLR     fill='040'O
        12 001046   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
        12 001047   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128

      582     9164    5                    CHAR_OFFSET,
      583     9165    5                    CHARS_TO_DUMP);
      584     9166    5                  DUMP_BUF = ' ';

   9166 12 001050   010000 221003                    LDX1    4096,DU
        12 001051   040140 100400                    MLR     fill='040'O
        12 001052   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:132  
        12 001053   200040 000011                    ADSC9   DUMP_BUF,,AUTO           cn=0,n=*X1

      585     9167    5                  J = WORD_OFFSET;

   9167 12 001054   202043 235100                    LDA     WORD_OFFSET,,AUTO
        12 001055   202045 755100                    STA     J,,AUTO

      586     9168    6                  DO K=0 TO SIZEC(DMP_BUF.SEQ) -1;

   9168 12 001056   202046 450100                    STZ     K,,AUTO
        12 001057   001073 710000 12                 TRA     s:9171+1

      587     9169    6                     CALL BINCHAR(DMP_BUF.SEQ(SIZEC(DMP_BUF.SEQ) -1 -K),MOD(J,8));

   9169 12 001060   202045 236100                    LDQ     J,,AUTO
        12 001061   000010 506007                    DIV     8,DL
        12 001062   202046 336100                    LCQ     K,,AUTO
        12 001063   202234 755100                    STA     KEY1+64,,AUTO
        12 001064   000106 301500                    BTD
        12 001065   202234 000004                    NDSC9   KEY1+64,,AUTO            cn=0,s=lsgnf,sf=0,n=4
        12 001066   200041 230001                    NDSC9   DUMP_BUF+1,Q,AUTO        cn=1,s=nosgn,sf=0,n=1

      588     9170    6                     J = J/8;

   9170 12 001067   202045 236100                    LDQ     J,,AUTO
        12 001070   000010 506007                    DIV     8,DL
        12 001071   202045 756100                    STQ     J,,AUTO

      589     9171    6                     END;

   9171 12 001072   202046 054100                    AOS     K,,AUTO
        12 001073   202046 235100                    LDA     K,,AUTO
        12 001074   000005 115007                    CMPA    5,DL
        12 001075   001060 604400 12                 TMOZ    s:9169

      590     9172    5                  IF STAR_FLAG=1

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:133  
   9172 12 001076   202110 236100                    LDQ     STAR_FLAG,,AUTO
        12 001077   000001 116007                    CMPQ    1,DL
        12 001100   001104 601000 12                 TNZ     s:9178

      591     9173    5                   THEN
      592     9174    6                   DO;

      593     9175    6                      DMP_BUF.STAR = '*';

   9175 12 001101   052000 236007                    LDQ     21504,DL
        12 001102   200041 552110                    STBQ    DUMP_BUF+1,'10'O,AUTO

      594     9176    6                      STAR_FLAG = 0;

   9176 12 001103   202110 450100                    STZ     STAR_FLAG,,AUTO

      595     9177    6                      END;

      596     9178    6                  DO J=0 TO CHARS_TO_DUMP-1;

   9178 12 001104   202045 450100                    STZ     J,,AUTO
        12 001105   001166 710000 12                 TRA     s:9191+1

      597     9179    7                     DO CASE(MOD(J,4));

   9179 12 001106   202045 236100                    LDQ     J,,AUTO
        12 001107   000004 506007                    DIV     4,DL
        12 001110   000003 115007                    CMPA    3,DL
        12 001111   001113 602005 12                 TNC     s:9179+5,AL
        12 001112   001131 710000 12                 TRA     s:9186
        12 001113   001116 710000 12                 TRA     s:9181
        12 001114   001131 710000 12                 TRA     s:9186
        12 001115   001122 710000 12                 TRA     s:9183

      598     9180    7                      CASE(0);

      599     9181    7                        CHAR$ = PINCRC(CHAR$,1);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:134  

   9181 12 001116   202111 236100                    LDQ     CHAR$,,AUTO
        12 001117   200000 036007                    ADLQ    65536,DL
        12 001120   202111 756100                    STQ     CHAR$,,AUTO
        12 001121   001131 710000 12                 TRA     s:9186

      600     9182    7                      CASE(2);

      601     9183    7                        CHAR$->CHAR$ACTER = '.';

   9183 12 001122   202111 470500                    LDP0    CHAR$,,AUTO
        12 001123   040100 100400                    MLR     fill='040'O
        12 001124   000025 000001 13                 ADSC9   21                       cn=0,n=1
        12 001125   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      602     9184    7                        CHAR$ = PINCRC(CHAR$,1);

   9184 12 001126   202111 236100                    LDQ     CHAR$,,AUTO
        12 001127   200000 036007                    ADLQ    65536,DL
        12 001130   202111 756100                    STQ     CHAR$,,AUTO

      603     9185    7                      END;

      604     9186    6                     L = J*3;

   9186 12 001131   202045 236100                    LDQ     J,,AUTO
        12 001132   000003 402007                    MPY     3,DL
        12 001133   202047 756100                    STQ     L,,AUTO

      605     9187    7                     DO K=0 TO 2;

   9187 12 001134   202046 450100                    STZ     K,,AUTO

      606     9188    7                        CALL BINCHAR(CHAR$->CHR$ARY(K),SAVE_BUF_ARY(L+K));

   9188 12 001135   202047 236100                    LDQ     L,,AUTO
        12 001136   202046 036100                    ADLQ    K,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:135  
        12 001137   000003 402007                    MPY     3,DL
        12 001140   000000 116003                    CMPQ    0,DU
        12 001141   001143 605000 12                 TPL     s:9188+6
        12 001142   000044 036003                    ADLQ    36,DU
        12 001143   003100 061506                    CSR     bolr='003'O
        12 001144   202050 000003                    BDSC    SAVE_BUF,Q,AUTO          by=0,bit=0,n=3
        12 001145   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 001146   202234 236100                    LDQ     KEY1+64,,AUTO
        12 001147   000000 235003                    LDA     0,DU
        12 001150   202236 757100                    STAQ    KEY1+66,,AUTO
        12 001151   202111 470500                    LDP0    CHAR$,,AUTO
        12 001152   202046 235100                    LDA     K,,AUTO
        12 001153   000105 301500                    BTD
        12 001154   202236 000010                    NDSC9   KEY1+66,,AUTO            cn=0,s=lsgnf,sf=0,n=8
        12 001155   000000 030001                    NDSC9   0,A,PR0                  cn=0,s=nosgn,sf=0,n=1

      607     9189    7                        END;

   9189 12 001156   202046 054100                    AOS     K,,AUTO
        12 001157   202046 235100                    LDA     K,,AUTO
        12 001160   000002 115007                    CMPA    2,DL
        12 001161   001135 604400 12                 TMOZ    s:9188

      608     9190    6                     CHAR$ = PINCRC(CHAR$,3);

   9190 12 001162   202111 236100                    LDQ     CHAR$,,AUTO
        12 001163   600000 036007                    ADLQ    -65536,DL
        12 001164   202111 756100                    STQ     CHAR$,,AUTO

      609     9191    6                     END;

   9191 12 001165   202045 054100                    AOS     J,,AUTO
        12 001166   202045 236100                    LDQ     J,,AUTO
        12 001167   202042 116100                    CMPQ    CHARS_TO_DUMP,,AUTO
        12 001170   001106 604000 12                 TMI     s:9179

      610     9192    5                  IF OCB.OCT_HEX.TEXT ~= 1 /* TEXT=DEFAULT                       */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:136  

   9192 12 001171   000037 235000 xsym               LDA     OCB+31
        12 001172   000001 115007                    CMPA    1,DL
        12 001173   001207 600000 12                 TZE     s:9199

      611     9193    5                   THEN
      612     9194    6                   DO;

      613     9195    6                      CALL XLATE(TEXT$->CHAR$32,PRINTABLE_XLATE_TBL,SAVE_BUF);

   9195 12 001174   000000 470400 xsym               LDP0    B$XL_ASC_DUMP$
        12 001175   202112 471500                    LDP1    TEXT$,,AUTO
        12 001176   040100 160500                    MVT     fill='040'O
        12 001177   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128
        12 001200   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
        12 001201   000000 000100                    ARG     0,,PR0

      614     9196    6                      BUF_LEN = WORDS_TO_DUMP*18 + SIZEC(DMP_BUF.SEQ) +2;

   9196 12 001202   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001203   000022 402007                    MPY     18,DL
        12 001204   000010 036007                    ADLQ    8,DL
        12 001205   202114 756100                    STQ     BUF_LEN,,AUTO

      615     9197    6                      END;

   9197 12 001206   001213 710000 12                 TRA     s:9200

      616     9198    5                   ELSE
      617     9199    5                     BUF_LEN = WORDS_TO_DUMP*14 + SIZEC(DMP_BUF.SEQ) +1;

   9199 12 001207   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001210   000016 402007                    MPY     14,DL
        12 001211   000007 036007                    ADLQ    7,DL
        12 001212   202114 756100                    STQ     BUF_LEN,,AUTO

      618     9200    5                  CALL WRITE_OUT_BUF(BUF_LEN,0);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:137  

   9200 12 001213   000002 236000 13                 LDQ     2
        12 001214   202124 756100                    STQ     @REC_LEN_+1,,AUTO
        12 001215   202114 630500                    EPPR0   BUF_LEN,,AUTO
        12 001216   202123 450500                    STP0    RECLEN_BUF+1,,AUTO
        12 001217   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 001220   000000 011000                    NOP     0

      619     9201    5                  END;

      620     9202    4              END;

   9202 12 001221   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001222   202043 036100                    ADLQ    WORD_OFFSET,,AUTO
        12 001223   202043 756100                    STQ     WORD_OFFSET,,AUTO
        12 001224   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001225   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001226   001007 604400 12                 TMOZ    s:9149

      621     9203    3   END DUMP_OCT;

   9203 12 001227   202116 221300                    LDX1  ! BUF_LEN+2,,AUTO
        12 001230   000001 702211                    TSX2  ! 1,X1

      622     9204        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:138  
      623     9205    2   DUMP_X: PROC;

   9205 12 001231   202116 741300       DUMP_X       STX1  ! BUF_LEN+2,,AUTO

      624     9206        /*I* NAME: DUMP_X
      625     9207             PURPOSE: To dump the current record in X format.
      626     9208             DESCRIPTION: This procedure dumps the current record in X format.
      627     9209                          X format is dumping 18 hex digits per 2 L66 words. ASCII
      628     9210                          translation is provided on the right margin with 1 ASCII
      629     9211                          digit per every 8 bits.  Each two nibs (hex characters) will
      630     9212                          map to one ASCII character.  A pad bit is added to the left
      631     9213                          of the ASCII character to make it 9 bits.
      632     9214                          If the input record is not an
      633     9215                          even multiple of 8 bits, the input record is zero extended
      634     9216                          so that it is.  Count is by L66 word.  The record is split
      635     9217                          into as many output lines as will fit on the device.
      636     9218        */
      637     9219    3   DCL NIBS_TO_DUMP SBIN WORD;
      638     9220    3   DCL T$ PTR;
      639     9221    3           IF OCB.OCT_HEX.TEXT = 1         /* TEXT=DEFAULT                       */

   9221 12 001232   000037 235000 xsym               LDA     OCB+31
        12 001233   000001 115007                    CMPA    1,DL
        12 001234   001244 601000 12                 TNZ     s:9225

      640     9222    3            THEN
      641     9223    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ)-1)/10/2)*2;
              9223                       /* Number of dump words per line */

   9223 12 001235   000000 236000 xsym               LDQ     OUTPUT_PWIDTH
        12 001236   000007 136007                    SBLQ    7,DL
        12 001237   000012 506007                    DIV     10,DL
        12 001240   000002 506007                    DIV     2,DL
        12 001241   000001 736000                    QLS     1
        12 001242   202041 756100                    STQ     WORDS_TO_DUMP,,AUTO
        12 001243   001252 710000 12                 TRA     s:9226

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:139  
      642     9224    3            ELSE
      643     9225    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ)-2)/15/2)*2;

   9225 12 001244   000000 236000 xsym               LDQ     OUTPUT_PWIDTH
        12 001245   000010 136007                    SBLQ    8,DL
        12 001246   000017 506007                    DIV     15,DL
        12 001247   000002 506007                    DIV     2,DL
        12 001250   000001 736000                    QLS     1
        12 001251   202041 756100                    STQ     WORDS_TO_DUMP,,AUTO

      644     9226    3           IF WORDS_TO_DUMP=0

   9226 12 001252   001255 601000 12                 TNZ     s:9229

      645     9227    3            THEN
      646     9228    3              WORDS_TO_DUMP = 2;

   9228 12 001253   000002 235007                    LDA     2,DL
        12 001254   202041 755100                    STA     WORDS_TO_DUMP,,AUTO

      647     9229    3           CHARS_TO_DUMP = WORDS_TO_DUMP * 4; /* 4 characters per word           */

   9229 12 001255   202041 235100                    LDA     WORDS_TO_DUMP,,AUTO
        12 001256   000002 735000                    ALS     2
        12 001257   202042 755100                    STA     CHARS_TO_DUMP,,AUTO

      648     9230    3           NIBS_TO_DUMP = WORDS_TO_DUMP*9;

   9230 12 001260   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001261   000011 402007                    MPY     9,DL
        12 001262   202117 756100                    STQ     NIBS_TO_DUMP,,AUTO

      649     9231    3           TEXT$ = PINCRC(ADDR(DUMP_BUF),SIZEC(DMP_BUF.SEQ)+2 + WORDS_TO_DUMP*10);

   9231 12 001263   202234 452500                    STP2    KEY1+64,,AUTO
        12 001264   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001265   000026 402000 13                 MPY     22
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:140  
        12 001266   000042 036003                    ADLQ    34,DU
        12 001267   202234 036100                    ADLQ    KEY1+64,,AUTO
        12 001270   202112 756100                    STQ     TEXT$,,AUTO

      650     9232    3           STAR_FLAG = 0;                  /* No identical lines, yet            */

   9232 12 001271   202110 450100                    STZ     STAR_FLAG,,AUTO

      651     9233    3           LAST_WORD_OFFSET = ((REC_LEN-1)/4/WORDS_TO_DUMP)*WORDS_TO_DUMP;

   9233 12 001272   200032 236100                    LDQ     REC_LEN,,AUTO
        12 001273   000001 136007                    SBLQ    1,DL
        12 001274   000004 506007                    DIV     4,DL
        12 001275   202041 506100                    DIV     WORDS_TO_DUMP,,AUTO
        12 001276   202041 402100                    MPY     WORDS_TO_DUMP,,AUTO
        12 001277   202113 756100                    STQ     LAST_WORD_OFFSET,,AUTO

      652     9234    4           DO WORD_OFFSET=0 TO LAST_WORD_OFFSET BY WORDS_TO_DUMP; /* DO for      */

   9234 12 001300   202043 450100                    STZ     WORD_OFFSET,,AUTO
        12 001301   001521 710000 12                 TRA     s:9294+3

      653     9235                                                /* each line to be output             */
      654     9236    4              CHAR_OFFSET = WORD_OFFSET*4;

   9236 12 001302   202043 235100                    LDA     WORD_OFFSET,,AUTO
        12 001303   000002 735000                    ALS     2
        12 001304   202044 755100                    STA     CHAR_OFFSET,,AUTO

      655     9237    4              IF WORD_OFFSET=LAST_WORD_OFFSET

   9237 12 001305   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001306   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001307   001316 601000 12                 TNZ     s:9240

      656     9238    4               THEN                        /* Last line, may be partial          */
      657     9239    4                 NIBS_TO_DUMP = ((REC_LEN-CHAR_OFFSET)*9+3)/4;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:141  

   9239 12 001310   200032 236100                    LDQ     REC_LEN,,AUTO
        12 001311   202044 136100                    SBLQ    CHAR_OFFSET,,AUTO
        12 001312   000011 402007                    MPY     9,DL
        12 001313   000003 036007                    ADLQ    3,DL
        12 001314   000004 506007                    DIV     4,DL
        12 001315   202117 756100                    STQ     NIBS_TO_DUMP,,AUTO

      658     9240    4              IF (SUBSTR(BUF_VECTOR.PTR$->IN$REC,CHAR_OFFSET,CHARS_TO_DUMP)

   9240 12 001316   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 001317   202042 720100                    LXL0    CHARS_TO_DUMP,,AUTO
        12 001320   202044 235100                    LDA     CHAR_OFFSET,,AUTO
        12 001321   040100 106545                    CMPC    fill='040'O
        12 001322   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
        12 001323   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128
        12 001324   001337 601000 12                 TNZ     s:9249
        12 001325   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001326   001337 600000 12                 TZE     s:9249
        12 001327   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001330   001337 600000 12                 TZE     s:9249
        12 001331   000040 235000 xsym               LDA     OCB+32
        12 001332   000002 115007                    CMPA    2,DL
        12 001333   001337 600000 12                 TZE     s:9249

      659     9241    4                =SAVE_BUF)
      660     9242    4                AND (WORD_OFFSET~=0)
      661     9243    4                AND (WORD_OFFSET~=LAST_WORD_OFFSET)
      662     9244    4                AND (OCB.OCT_HEX.DUPE ~= 2) /* NDUPE=DEFAULT                     */
      663     9245    4               THEN                        /* Duplicate line, don't print it     */
      664     9246    4                 STAR_FLAG = 1;

   9246 12 001334   000001 235007                    LDA     1,DL
        12 001335   202110 755100                    STA     STAR_FLAG,,AUTO
        12 001336   001516 710000 12                 TRA     s:9294

      665     9247    4               ELSE                        /* Print this line                    */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:142  
      666     9248    5               DO;

      667     9249    5                  CHAR$ = ADDR(DMP_BUF.REST); /* Start location for nibs         */

   9249 12 001337   202234 452500                    STP2    KEY1+64,,AUTO
        12 001340   202234 236100                    LDQ     KEY1+64,,AUTO
        12 001341   000024 036000 13                 ADLQ    20
        12 001342   202111 756100                    STQ     CHAR$,,AUTO

      668     9250    5                  T$ = PINCRB(TEXT$,1);    /* Destination for first nib to make  */

   9250 12 001343   202112 471500                    LDP1    TEXT$,,AUTO
        12 001344   000001 221003                    LDX1    1,DU
        12 001345   100000 503511                    ABD     0,X1,PR1
        12 001346   202120 451500                    STP1    T$,,AUTO

      669     9251                                                /* a text character                   */
      670     9252    5                  SAVE_BUF = SUBSTR(BUF_VECTOR.PTR$->IN$REC,

   9252 12 001347   202044 235100                    LDA     CHAR_OFFSET,,AUTO
        12 001350   040100 100545                    MLR     fill='040'O
        12 001351   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
        12 001352   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128

      671     9253    5                    CHAR_OFFSET,
      672     9254    5                    CHARS_TO_DUMP);
      673     9255    5                  CALL INSERT(DUMP_BUF,0,132,' ');

   9255 12 001353   040100 100400                    MLR     fill='040'O
        12 001354   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 001355   200040 000204                    ADSC9   DUMP_BUF,,AUTO           cn=0,n=132

      674     9256    5                  J = WORD_OFFSET;

   9256 12 001356   202043 235100                    LDA     WORD_OFFSET,,AUTO
        12 001357   202045 755100                    STA     J,,AUTO

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:143  
      675     9257    6                  DO K=0 TO 5;             /* Insert 'address' columns           */

   9257 12 001360   202046 450100                    STZ     K,,AUTO

      676     9258    6                     DMP_BUF.SEQ(-K+5) = X_TBL(MOD(J,16));

   9258 12 001361   202045 236100                    LDQ     J,,AUTO
        12 001362   000020 506007                    DIV     16,DL
        12 001363   202046 336100                    LCQ     K,,AUTO
        12 001364   040106 100405                    MLR     fill='040'O
        12 001365   000006 000001 11                 ADSC9   XTBL,A                   cn=0,n=1
        12 001366   200041 200001                    ADSC9   DUMP_BUF+1,Q,AUTO        cn=1,n=1

      677     9259    6                     J = J/16;

   9259 12 001367   202045 236100                    LDQ     J,,AUTO
        12 001370   000020 506007                    DIV     16,DL
        12 001371   202045 756100                    STQ     J,,AUTO

      678     9260    6                     END;

   9260 12 001372   202046 054100                    AOS     K,,AUTO
        12 001373   202046 235100                    LDA     K,,AUTO
        12 001374   000005 115007                    CMPA    5,DL
        12 001375   001361 604400 12                 TMOZ    s:9258

      679     9261    5                  IF STAR_FLAG=1

   9261 12 001376   202110 235100                    LDA     STAR_FLAG,,AUTO
        12 001377   000001 115007                    CMPA    1,DL
        12 001400   001404 601000 12                 TNZ     s:9267

      680     9262    5                   THEN                    /* Print '*' to indicate omitted line */
      681     9263    6                   DO;

      682     9264    6                      DMP_BUF.STAR = '*';

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:144  
   9264 12 001401   052000 236007                    LDQ     21504,DL
        12 001402   200041 552110                    STBQ    DUMP_BUF+1,'10'O,AUTO

      683     9265    6                      STAR_FLAG = 0;

   9265 12 001403   202110 450100                    STZ     STAR_FLAG,,AUTO

      684     9266    6                      END;

      685     9267    6                  DO J=0 TO NIBS_TO_DUMP-1; /* For each nib to be printed,...    */

   9267 12 001404   202045 450100                    STZ     J,,AUTO
        12 001405   001462 710000 12                 TRA     s:9282+1

      686     9268    6                     IF MOD(J,9)=0

   9268 12 001406   202045 236100                    LDQ     J,,AUTO
        12 001407   000011 506007                    DIV     9,DL
        12 001410   000044 733000                    LRS     36
        12 001411   000000 116003                    CMPQ    0,DU
        12 001412   001416 601000 12                 TNZ     s:9271

      687     9269    6                      THEN                 /* Skip a space after block of 8 nibs */
      688     9270    6                        CHAR$ = PINCRC(CHAR$,1);

   9270 12 001413   202111 236100                    LDQ     CHAR$,,AUTO
        12 001414   200000 036007                    ADLQ    65536,DL
        12 001415   202111 756100                    STQ     CHAR$,,AUTO

      689     9271    6                     CHAR$->CHAR$ACTER = X_TBL(SAVE_BUF_X_ARY(J)); /* Insert nib */

   9271 12 001416   202045 235100                    LDA     J,,AUTO
        12 001417   000002 735000                    ALS     2
        12 001420   001422 605000 12                 TPL     s:9271+4
        12 001421   000044 035003                    ADLA    36,DU
        12 001422   003100 061505                    CSR     bolr='003'O
        12 001423   202050 000004                    BDSC    SAVE_BUF,A,AUTO          by=0,bit=0,n=4
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:145  
        12 001424   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 001425   202234 236100                    LDQ     KEY1+64,,AUTO
        12 001426   202111 470500                    LDP0    CHAR$,,AUTO
        12 001427   040100 100406                    MLR     fill='040'O
        12 001430   000006 000001 11                 ADSC9   XTBL,Q                   cn=0,n=1
        12 001431   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      690     9272    6                     CHAR$ = PINCRC(CHAR$,1); /* Point to the next nib           */

   9272 12 001432   202111 236100                    LDQ     CHAR$,,AUTO
        12 001433   200000 036007                    ADLQ    65536,DL
        12 001434   202111 756100                    STQ     CHAR$,,AUTO

      691     9273    6                     T$->UBIN$4 = SAVE_BUF_X_ARY(J); /* Stuff the nib into half  */

   9273 12 001435   202045 235100                    LDA     J,,AUTO
        12 001436   000002 735000                    ALS     2
        12 001437   001441 605000 12                 TPL     s:9273+4
        12 001440   000044 035003                    ADLA    36,DU
        12 001441   202120 470500                    LDP0    T$,,AUTO
        12 001442   003100 060505                    CSL     bolr='003'O
        12 001443   202050 000004                    BDSC    SAVE_BUF,A,AUTO          by=0,bit=0,n=4
        12 001444   000000 000004                    BDSC    0,,PR0                   by=0,bit=0,n=4

      692     9274                                                /* of a text character                */
      693     9275    6                     IF MOD(J,2)=0

   9275 12 001445   202045 236100                    LDQ     J,,AUTO
        12 001446   000002 506007                    DIV     2,DL
        12 001447   000044 733000                    LRS     36
        12 001450   000000 116003                    CMPQ    0,DU
        12 001451   001456 601000 12                 TNZ     s:9279

      694     9276    6                      THEN                 /* Nib 0,2,4,6,8...                   */
      695     9277    6                        T$ = PINCRB(T$,4); /* Put the next nib right next to it  */

   9277 12 001452   000004 220003                    LDX0    4,DU
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:146  
        12 001453   000000 503510                    ABD     0,X0,PR0
        12 001454   202120 450500                    STP0    T$,,AUTO
        12 001455   001461 710000 12                 TRA     s:9282

      696     9278    6                      ELSE                 /* Nib 1,3,5,7,9...                   */
      697     9279    6                        T$ = PINCRB(T$,5); /* Skip an extra bit before putting   */

   9279 12 001456   000005 220003                    LDX0    5,DU
        12 001457   000000 503510                    ABD     0,X0,PR0
        12 001460   202120 450500                    STP0    T$,,AUTO

      698     9280                                                /* down next nib, so later XLATE will */
      699     9281                                                /* have 9-bit character to work on    */
      700     9282    6                     END;

   9282 12 001461   202045 054100                    AOS     J,,AUTO
        12 001462   202045 236100                    LDQ     J,,AUTO
        12 001463   202117 116100                    CMPQ    NIBS_TO_DUMP,,AUTO
        12 001464   001406 604000 12                 TMI     s:9268

      701     9283    5                  IF OCB.OCT_HEX.TEXT ~= 1 /* TEXT=DEFAULT                       */

   9283 12 001465   000037 235000 xsym               LDA     OCB+31
        12 001466   000001 115007                    CMPA    1,DL
        12 001467   001504 600000 12                 TZE     s:9291

      702     9284    5                   THEN                    /* Text is to be displayed            */
      703     9285    6                   DO;

      704     9286                                                /* Translate previously filled chars  */
      705     9287    6                      CALL XLATE(TEXT$->CHAR$36,PRINTABLE_XLATE_TBL,TEXT$->CHAR$36);

   9287 12 001470   202112 470500                    LDP0    TEXT$,,AUTO
        12 001471   000000 471400 xsym               LDP1    B$XL_ASC_DUMP$
        12 001472   040100 160500                    MVT     fill='040'O
        12 001473   000000 000044                    ADSC9   0,,PR0                   cn=0,n=36
        12 001474   000000 000044                    ADSC9   0,,PR0                   cn=0,n=36
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:147  
        12 001475   100000 000100                    ARG     0,,PR1

      706     9288    6                      BUF_LEN = (WORDS_TO_DUMP/2)*29 + SIZEC(DMP_BUF.SEQ) + 2;
              9288                               /* 4.5 characters/word */

   9288 12 001476   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001477   000002 506007                    DIV     2,DL
        12 001500   000035 402007                    MPY     29,DL
        12 001501   000010 036007                    ADLQ    8,DL
        12 001502   202114 756100                    STQ     BUF_LEN,,AUTO

      707     9289    6                      END;

   9289 12 001503   001510 710000 12                 TRA     s:9292

      708     9290    5                   ELSE                    /* No text is to be displayed         */
      709     9291    5                     BUF_LEN = WORDS_TO_DUMP*10 + SIZEC(DMP_BUF.SEQ) + 1;

   9291 12 001504   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001505   000012 402007                    MPY     10,DL
        12 001506   000007 036007                    ADLQ    7,DL
        12 001507   202114 756100                    STQ     BUF_LEN,,AUTO

      710     9292    5                  CALL WRITE_OUT_BUF(BUF_LEN);

   9292 12 001510   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001511   202124 756100                    STQ     @REC_LEN_+1,,AUTO
        12 001512   202114 630500                    EPPR0   BUF_LEN,,AUTO
        12 001513   202123 450500                    STP0    RECLEN_BUF+1,,AUTO
        12 001514   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 001515   000000 011000                    NOP     0

      711     9293    5                  END;

      712     9294    4              END;

   9294 12 001516   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:148  
        12 001517   202043 036100                    ADLQ    WORD_OFFSET,,AUTO
        12 001520   202043 756100                    STQ     WORD_OFFSET,,AUTO
        12 001521   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001522   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001523   001302 604400 12                 TMOZ    s:9236

      713     9295    3           RETURN;

   9295 12 001524   202116 221300                    LDX1  ! BUF_LEN+2,,AUTO
        12 001525   000001 702211                    TSX2  ! 1,X1

      714     9296    3   END DUMP_X;
      715     9297        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:149  
      716     9298    2   DUMP_X1: PROC;

   9298 12 001526   202116 741300       DUMP_X1      STX1  ! BUF_LEN+2,,AUTO

      717     9299        /*I* NAME: DUMP_X1
      718     9300             PURPOSE: To dump the current record in X1 format.
      719     9301             CALL: CALL DUMP_X1;
      720     9302             DESCRIPTION: This procedure dumps the current record in X1 format.
      721     9303                          X1 format is 8 bits out of 9, 2 bytes per group(L6 word).
      722     9304                          Count is by L6 word. ASCII translation is provided if desired
      723     9305                          in the right margin at 1 ASCII character per 9 bits input.
      724     9306        */
      725     9307    3           IF OCB.OCT_HEX.TEXT = 1         /* TEXT=DEFAULT                       */

   9307 12 001527   000037 235000 xsym               LDA     OCB+31
        12 001530   000001 115007                    CMPA    1,DL
        12 001531   001541 601000 12                 TNZ     s:9311

      726     9308    3            THEN
      727     9309    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ) - 1)/5/2)*2;

   9309 12 001532   000000 236000 xsym               LDQ     OUTPUT_PWIDTH
        12 001533   000007 136007                    SBLQ    7,DL
        12 001534   000005 506007                    DIV     5,DL
        12 001535   000002 506007                    DIV     2,DL
        12 001536   000001 736000                    QLS     1
        12 001537   202041 756100                    STQ     WORDS_TO_DUMP,,AUTO
        12 001540   001547 710000 12                 TRA     s:9312

      728     9310    3            ELSE
      729     9311    3              WORDS_TO_DUMP = ((OUTPUT_PWIDTH-SIZEC(DMP_BUF.SEQ) - 2)/7/2)*2;

   9311 12 001541   000000 236000 xsym               LDQ     OUTPUT_PWIDTH
        12 001542   000010 136007                    SBLQ    8,DL
        12 001543   000007 506007                    DIV     7,DL
        12 001544   000002 506007                    DIV     2,DL
        12 001545   000001 736000                    QLS     1
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:150  
        12 001546   202041 756100                    STQ     WORDS_TO_DUMP,,AUTO

      730     9312    3           IF WORDS_TO_DUMP=0

   9312 12 001547   001552 601000 12                 TNZ     s:9315

      731     9313    3            THEN
      732     9314    3              WORDS_TO_DUMP = 2;

   9314 12 001550   000002 235007                    LDA     2,DL
        12 001551   202041 755100                    STA     WORDS_TO_DUMP,,AUTO

      733     9315    3           CHARS_TO_DUMP = WORDS_TO_DUMP*2;

   9315 12 001552   202041 235100                    LDA     WORDS_TO_DUMP,,AUTO
        12 001553   000001 735000                    ALS     1
        12 001554   202042 755100                    STA     CHARS_TO_DUMP,,AUTO

      734     9316    3           TEXT$ = PINCRC(ADDR(DUMP_BUF),SIZEC(DMP_BUF.SEQ) + 2  + WORDS_TO_DUMP*5);

   9316 12 001555   202234 452500                    STP2    KEY1+64,,AUTO
        12 001556   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001557   000027 402000 13                 MPY     23
        12 001560   000042 036003                    ADLQ    34,DU
        12 001561   202234 036100                    ADLQ    KEY1+64,,AUTO
        12 001562   202112 756100                    STQ     TEXT$,,AUTO

      735     9317    3           STAR_FLAG = 0;

   9317 12 001563   202110 450100                    STZ     STAR_FLAG,,AUTO

      736     9318    3           LAST_WORD_OFFSET = ((REC_LEN-1)/2/WORDS_TO_DUMP)*WORDS_TO_DUMP;

   9318 12 001564   200032 236100                    LDQ     REC_LEN,,AUTO
        12 001565   000001 136007                    SBLQ    1,DL
        12 001566   000002 506007                    DIV     2,DL
        12 001567   202041 506100                    DIV     WORDS_TO_DUMP,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:151  
        12 001570   202041 402100                    MPY     WORDS_TO_DUMP,,AUTO
        12 001571   202113 756100                    STQ     LAST_WORD_OFFSET,,AUTO

      737     9319    4           DO WORD_OFFSET=0 TO LAST_WORD_OFFSET BY WORDS_TO_DUMP;

   9319 12 001572   202043 450100                    STZ     WORD_OFFSET,,AUTO
        12 001573   001777 710000 12                 TRA     s:9368+3

      738     9320    4              CHAR_OFFSET = WORD_OFFSET*2;

   9320 12 001574   202043 235100                    LDA     WORD_OFFSET,,AUTO
        12 001575   000001 735000                    ALS     1
        12 001576   202044 755100                    STA     CHAR_OFFSET,,AUTO

      739     9321    4              IF WORD_OFFSET=LAST_WORD_OFFSET

   9321 12 001577   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001600   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001601   001605 601000 12                 TNZ     s:9324

      740     9322    4               THEN
      741     9323    4                 CHARS_TO_DUMP = REC_LEN-CHAR_OFFSET;

   9323 12 001602   200032 236100                    LDQ     REC_LEN,,AUTO
        12 001603   202044 136100                    SBLQ    CHAR_OFFSET,,AUTO
        12 001604   202042 756100                    STQ     CHARS_TO_DUMP,,AUTO

      742     9324    4              IF (SUBSTR(BUF_VECTOR.PTR$->IN$REC,CHAR_OFFSET,CHARS_TO_DUMP)

   9324 12 001605   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 001606   202042 720100                    LXL0    CHARS_TO_DUMP,,AUTO
        12 001607   040100 106545                    CMPC    fill='040'O
        12 001610   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
        12 001611   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128
        12 001612   001625 601000 12                 TNZ     s:9333
        12 001613   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 001614   001625 600000 12                 TZE     s:9333
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:152  
        12 001615   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 001616   001625 600000 12                 TZE     s:9333
        12 001617   000040 235000 xsym               LDA     OCB+32
        12 001620   000002 115007                    CMPA    2,DL
        12 001621   001625 600000 12                 TZE     s:9333

      743     9325    4                =SAVE_BUF)
      744     9326    4                AND (WORD_OFFSET~=0)
      745     9327    4                AND (WORD_OFFSET~=LAST_WORD_OFFSET)
      746     9328    4                AND (OCB.OCT_HEX.DUPE ~= 2) /* NDUPE=DEFAULT                     */
      747     9329    4               THEN
      748     9330    4                 STAR_FLAG = 1;

   9330 12 001622   000001 235007                    LDA     1,DL
        12 001623   202110 755100                    STA     STAR_FLAG,,AUTO
        12 001624   001774 710000 12                 TRA     s:9368

      749     9331    4               ELSE
      750     9332    5               DO;

      751     9333    5                  CHAR$ = ADDR(DMP_BUF.REST);

   9333 12 001625   202234 452500                    STP2    KEY1+64,,AUTO
        12 001626   202234 236100                    LDQ     KEY1+64,,AUTO
        12 001627   000024 036000 13                 ADLQ    20
        12 001630   202111 756100                    STQ     CHAR$,,AUTO

      752     9334    5                  SAVE_BUF = SUBSTR(BUF_VECTOR.PTR$->IN$REC,

   9334 12 001631   202044 235100                    LDA     CHAR_OFFSET,,AUTO
        12 001632   040100 100545                    MLR     fill='040'O
        12 001633   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
        12 001634   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128

      753     9335    5                    CHAR_OFFSET,
      754     9336    5                    CHARS_TO_DUMP);
      755     9337    5                  CALL INSERT(DUMP_BUF,0,132,' ');
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:153  

   9337 12 001635   040100 100400                    MLR     fill='040'O
        12 001636   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 001637   200040 000204                    ADSC9   DUMP_BUF,,AUTO           cn=0,n=132

      756     9338    5                  J = WORD_OFFSET;

   9338 12 001640   202043 235100                    LDA     WORD_OFFSET,,AUTO
        12 001641   202045 755100                    STA     J,,AUTO

      757     9339    6                  DO K=0 TO 5;

   9339 12 001642   202046 450100                    STZ     K,,AUTO

      758     9340    6                     DMP_BUF.SEQ(-K+5) = X_TBL(MOD(J,16));

   9340 12 001643   202045 236100                    LDQ     J,,AUTO
        12 001644   000020 506007                    DIV     16,DL
        12 001645   202046 336100                    LCQ     K,,AUTO
        12 001646   040106 100405                    MLR     fill='040'O
        12 001647   000006 000001 11                 ADSC9   XTBL,A                   cn=0,n=1
        12 001650   200041 200001                    ADSC9   DUMP_BUF+1,Q,AUTO        cn=1,n=1

      759     9341    6                     J = J/16;

   9341 12 001651   202045 236100                    LDQ     J,,AUTO
        12 001652   000020 506007                    DIV     16,DL
        12 001653   202045 756100                    STQ     J,,AUTO

      760     9342    6                     END;

   9342 12 001654   202046 054100                    AOS     K,,AUTO
        12 001655   202046 235100                    LDA     K,,AUTO
        12 001656   000005 115007                    CMPA    5,DL
        12 001657   001643 604400 12                 TMOZ    s:9340

      761     9343    5                  IF STAR_FLAG=1
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:154  

   9343 12 001660   202110 235100                    LDA     STAR_FLAG,,AUTO
        12 001661   000001 115007                    CMPA    1,DL
        12 001662   001666 601000 12                 TNZ     s:9349

      762     9344    5                   THEN
      763     9345    6                   DO;

      764     9346    6                      DMP_BUF.STAR = '*';

   9346 12 001663   052000 236007                    LDQ     21504,DL
        12 001664   200041 552110                    STBQ    DUMP_BUF+1,'10'O,AUTO

      765     9347    6                      STAR_FLAG = 0;

   9347 12 001665   202110 450100                    STZ     STAR_FLAG,,AUTO

      766     9348    6                      END;

      767     9349    6                  DO J=0 TO CHARS_TO_DUMP-1;

   9349 12 001666   202045 450100                    STZ     J,,AUTO
        12 001667   001741 710000 12                 TRA     s:9357+1

      768     9350    6                     IF MOD(J,2)=0

   9350 12 001670   202045 236100                    LDQ     J,,AUTO
        12 001671   000002 506007                    DIV     2,DL
        12 001672   000044 733000                    LRS     36
        12 001673   000000 116003                    CMPQ    0,DU
        12 001674   001700 601000 12                 TNZ     s:9353

      769     9351    6                      THEN
      770     9352    6                        CHAR$ = PINCRC(CHAR$,1);

   9352 12 001675   202111 236100                    LDQ     CHAR$,,AUTO
        12 001676   200000 036007                    ADLQ    65536,DL
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:155  
        12 001677   202111 756100                    STQ     CHAR$,,AUTO

      771     9353    6                     CHAR$->CHAR$ACTER = X_TBL(SAVE_BUF_X1_ARY.ONE(J));

   9353 12 001700   202045 236100                    LDQ     J,,AUTO
        12 001701   000011 402007                    MPY     9,DL
        12 001702   000000 116003                    CMPQ    0,DU
        12 001703   001705 605000 12                 TPL     s:9353+5
        12 001704   000044 036003                    ADLQ    36,DU
        12 001705   003100 061506                    CSR     bolr='003'O
        12 001706   202050 010004                    BDSC    SAVE_BUF,Q,AUTO          by=0,bit=1,n=4
        12 001707   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 001710   202234 236100                    LDQ     KEY1+64,,AUTO
        12 001711   202111 470500                    LDP0    CHAR$,,AUTO
        12 001712   040100 100406                    MLR     fill='040'O
        12 001713   000006 000001 11                 ADSC9   XTBL,Q                   cn=0,n=1
        12 001714   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      772     9354    6                     CHAR$ = PINCRC(CHAR$,1);

   9354 12 001715   202111 236100                    LDQ     CHAR$,,AUTO
        12 001716   200000 036007                    ADLQ    65536,DL
        12 001717   202111 756100                    STQ     CHAR$,,AUTO

      773     9355    6                     CHAR$->CHAR$ACTER = X_TBL(SAVE_BUF_X1_ARY.TWO(J));

   9355 12 001720   202045 236100                    LDQ     J,,AUTO
        12 001721   000011 402007                    MPY     9,DL
        12 001722   000000 116003                    CMPQ    0,DU
        12 001723   001725 605000 12                 TPL     s:9355+5
        12 001724   000044 036003                    ADLQ    36,DU
        12 001725   003100 061506                    CSR     bolr='003'O
        12 001726   202050 050004                    BDSC    SAVE_BUF,Q,AUTO          by=0,bit=5,n=4
        12 001727   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 001730   202234 236100                    LDQ     KEY1+64,,AUTO
        12 001731   202111 470500                    LDP0    CHAR$,,AUTO
        12 001732   040100 100406                    MLR     fill='040'O
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:156  
        12 001733   000006 000001 11                 ADSC9   XTBL,Q                   cn=0,n=1
        12 001734   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

      774     9356    6                     CHAR$ = PINCRC(CHAR$,1);

   9356 12 001735   202111 236100                    LDQ     CHAR$,,AUTO
        12 001736   200000 036007                    ADLQ    65536,DL
        12 001737   202111 756100                    STQ     CHAR$,,AUTO

      775     9357    6                     END;

   9357 12 001740   202045 054100                    AOS     J,,AUTO
        12 001741   202045 236100                    LDQ     J,,AUTO
        12 001742   202042 116100                    CMPQ    CHARS_TO_DUMP,,AUTO
        12 001743   001670 604000 12                 TMI     s:9350

      776     9358    5                  IF OCB.OCT_HEX.TEXT ~= 1 /* TEXT=DEFAULT                       */

   9358 12 001744   000037 235000 xsym               LDA     OCB+31
        12 001745   000001 115007                    CMPA    1,DL
        12 001746   001762 600000 12                 TZE     s:9365

      777     9359    5                   THEN
      778     9360    6                   DO;

      779     9361    6                      CALL XLATE(TEXT$->CHAR$32,PRINTABLE_XLATE_TBL,SAVE_BUF);

   9361 12 001747   000000 470400 xsym               LDP0    B$XL_ASC_DUMP$
        12 001750   202112 471500                    LDP1    TEXT$,,AUTO
        12 001751   040100 160500                    MVT     fill='040'O
        12 001752   202050 000200                    ADSC9   SAVE_BUF,,AUTO           cn=0,n=128
        12 001753   100000 000040                    ADSC9   0,,PR1                   cn=0,n=32
        12 001754   000000 000100                    ARG     0,,PR0

      780     9362    6                      BUF_LEN = WORDS_TO_DUMP*7 + SIZEC(DMP_BUF.SEQ) + 2;

   9362 12 001755   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:157  
        12 001756   000007 402007                    MPY     7,DL
        12 001757   000010 036007                    ADLQ    8,DL
        12 001760   202114 756100                    STQ     BUF_LEN,,AUTO

      781     9363    6                      END;

   9363 12 001761   001766 710000 12                 TRA     s:9366

      782     9364    5                   ELSE
      783     9365    5                     BUF_LEN = WORDS_TO_DUMP*5 + SIZEC(DMP_BUF.SEQ) + 1;

   9365 12 001762   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001763   000005 402007                    MPY     5,DL
        12 001764   000007 036007                    ADLQ    7,DL
        12 001765   202114 756100                    STQ     BUF_LEN,,AUTO

      784     9366    5                  CALL WRITE_OUT_BUF(BUF_LEN);

   9366 12 001766   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 001767   202124 756100                    STQ     @REC_LEN_+1,,AUTO
        12 001770   202114 630500                    EPPR0   BUF_LEN,,AUTO
        12 001771   202123 450500                    STP0    RECLEN_BUF+1,,AUTO
        12 001772   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 001773   000000 011000                    NOP     0

      785     9367    5                  END;

      786     9368    4              END;

   9368 12 001774   202041 236100                    LDQ     WORDS_TO_DUMP,,AUTO
        12 001775   202043 036100                    ADLQ    WORD_OFFSET,,AUTO
        12 001776   202043 756100                    STQ     WORD_OFFSET,,AUTO
        12 001777   202043 236100                    LDQ     WORD_OFFSET,,AUTO
        12 002000   202113 116100                    CMPQ    LAST_WORD_OFFSET,,AUTO
        12 002001   001574 604400 12                 TMOZ    s:9320

      787     9369    3           RETURN;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:158  

   9369 12 002002   202116 221300                    LDX1  ! BUF_LEN+2,,AUTO
        12 002003   000001 702211                    TSX2  ! 1,X1

      788     9370    3   END DUMP_X1;
      789     9371    2   END DUMP_PROC;
      790     9372        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:159  
      791     9373    1   CONSTRUCT_KEY: PROC(DUMP_BUF,START_IDX,BUF_SIZE);

   9373 12 002004   202116 741300       CONSTRUCT_K* STX1  ! BUF_LEN+2,,AUTO

      792     9374        /*I* NAME: CONSTRUCT_KEY
      793     9375             PURPOSE: To format a line containing the record sequence
      794     9376                      number, key, and length of record.
      795     9377             CALL: CALL CONSTRUCT_KEY(BUFFER,INSERT_POSITION,BUF_SIZE);
      796     9378             DESCRIPTION: This procedure outputs to the output file as one record
      797     9379                          the following information, depending on options:
      798     9380                            o The record sequence number if known
      799     9381                            o The record's key if it has one, in
      800     9382                              o octal
      801     9383                              o characters
      802     9384                              o EDIT-style, if possible
      803     9385                              o HEX
      804     9386                            o The length of the record in either bytes, L66 words,
      805     9387                              or L6 words depending on the type of dump
      806     9388                            o Keywords for various bits in DVBYTE
      807     9389                            o Presence bits (in octal) if they exist
      808     9390        */
      809     9391    2   DCL DUMP_BUF CHAR(BUF_SIZE) PARAM;
      810     9392    2   DCL START_IDX SBIN WORD PARAM;
      811     9393    2   DCL BUF_SIZE SBIN WORD PARAM;
      812     9394    2   DCL MOP_RECLEN(0:4) BIT(9) STATIC INIT(%MVZB1,%SES10,%MVC1,%INSB7,%MVC2);
      813     9395            /* This MOP string is used to format the record length number. The first
      814     9396            entry (%MVZB1) will be replaced by the correct MOP before EDITCHAR is
      815     9397            called.                                                                   */
      816     9398    2   DCL RECLEN_BUF CHAR(9);
      817     9399    2   DCL P$ PTR;
      818     9400    2   DCL Q$ PTR;
      819     9401    2   DCL UBIN$4 UBIN(4) BASED UNAL;
      820     9402    2   DCL UBIN$3 UBIN(3) BASED UNAL;
      821     9403    2   DCL J SBIN WORD;
      822     9404        /**/
      823     9405    2           DUMP_BUF = ' ';

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:160  
   9405 12 002005   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 002006   000000 720100                    LXL0    0,,PR0
        12 002007   202117 471500                    LDP1    @DUMP_BUF,,AUTO
        12 002010   040140 100400                    MLR     fill='040'O
        12 002011   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 002012   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0

      824     9406        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:161  
      825     9407        /**/
      826     9408        /*  Record sequence number, if known.  */
      827     9409        /**/
      828     9410    2           IF NOT KEYOPTS.FORMAT.S

   9410 12 002013   200015 236100                    LDQ     KEYOPTS,,AUTO
        12 002014   020000 316003                    CANQ    8192,DU
        12 002015   002043 600000 12                 TZE     SEQUENCE_DONE

      829     9411    2            THEN
      830     9412    2              GOTO SEQUENCE_DONE;
      831     9413    2           IF CUR_SEQ_NO>0                 /* PUT OUT A RECORD SEQUENCE          */

   9413 12 002016   000000 235000 xsym               LDA     CUR_SEQ_NO
        12 002017   002043 604400 12                 TMOZ    SEQUENCE_DONE

      832     9414    2            THEN                           /* NUMBER IF KNOWN                    */
      833     9415    3            DO;

      834     9416    3               CALL BINCHAR(SEQ_BUF,CUR_SEQ_NO);

   9416 12 002020   000100 301400                    BTD
        12 002021   000000 000004 xsym               NDSC9   CUR_SEQ_NO               cn=0,s=lsgnf,sf=0,n=4
        12 002022   200023 030006                    NDSC9   SEQ_BUF,,AUTO            cn=0,s=nosgn,sf=0,n=6

      835     9417    3               CALL EDITCHAR(DUMP_BUF,

   9417 12 002023   000000 720100                    LXL0    0,,PR0
        12 002024   202120 473500                    LDP3    @START_IDX,,AUTO
        12 002025   300000 235100                    LDA     0,,PR3
        12 002026   105000 024500                    MVNE
        12 002027   200023 030006                    NDSC9   SEQ_BUF,,AUTO            cn=0,s=nosgn,sf=0,n=6
        12 002030   000026 000006 10                 ADSC9   MOP_SEQNO                cn=0,n=6
        12 002031   100000 000011                    ADSC9   0,A,PR1                  cn=0,n=9

      836     9418    3                 START_IDX,
      837     9419    3                 9,
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:162  
      838     9420    3                 MOP_SEQNO,
      839     9421    3                 SEQ_BUF);
      840     9422    3               START_IDX = START_IDX+9;

   9422 12 002032   000011 236007                    LDQ     9,DL
        12 002033   300000 056100                    ASQ     0,,PR3

      841     9423    3               IF CMD_MASK & '0006'O THEN  /* LIST OR LISTSTD                    */

   9423 12 002034   000100 100400                    MLR     fill='000'O
        12 002035   000000 000010 xsym               ADSC9   CMD_MASK                 cn=0,n=8
        12 002036   202234 000010                    ADSC9   KEY1+64,,AUTO            cn=0,n=8
        12 002037   202234 237100                    LDAQ    KEY1+64,,AUTO
        12 002040   000004 377000 13                 ANAQ    4
        12 002041   002043 600000 12                 TZE     SEQUENCE_DONE

      842     9424    3                  CUR_SEQ_NO = CUR_SEQ_NO +1;

   9424 12 002042   000000 054000 xsym               AOS     CUR_SEQ_NO

      843     9425    3               END;

   9413 12 002043                       SEQUENCE_DO* null
      844     9426    2   SEQUENCE_DONE: ;
      845     9427        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:163  
      846     9428        /**/
      847     9429        /*  KEY, if it exists.  */
      848     9430        /**/
      849     9431    2           IF CMD_MASK & '34'O             /* IF A COPY-TYPE COMMAND...          */

   9431 12 002043   000100 100400                    MLR     fill='000'O
        12 002044   000000 000010 xsym               ADSC9   CMD_MASK                 cn=0,n=8
        12 002045   202234 000010                    ADSC9   KEY1+64,,AUTO            cn=0,n=8
        12 002046   202234 237100                    LDAQ    KEY1+64,,AUTO
        12 002047   000006 377000 13                 ANAQ    6
        12 002050   002055 600000 12                 TZE     s:9440

      850     9432    2            THEN
      851     9433    2              IF ICB.FLAVOR.KNOWKEY

   9433 12 002051   000172 430000 xsym               FSZN    ICB+122
        12 002052   002055 605000 12                 TPL     s:9440

      852     9434    2               THEN
      853     9435    2                 CALL INSERT_OCT_KEY;      /* Put out the KEY                    */

   9435 12 002053   002467 701000 12                 TSX1    INSERT_OCT_KEY
        12 002054   000000 011000                    NOP     0

      854     9436        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:164  
      855     9437        /**/
      856     9438        /*  Record length.  */
      857     9439        /**/
      858     9440    2           IF KEYOPTS.RECSIZ ~= 2

   9440 12 002055   200017 235100                    LDA     KEYOPTS+2,,AUTO
        12 002056   000002 115007                    CMPA    2,DL
        12 002057   002201 601000 12                 TNZ     RECLEN_DONE

      859     9441    2            THEN
      860     9442    2              GOTO RECLEN_DONE;
      861     9443    2           CALL BINCHAR(RECLEN_BUF,(IN_ARS*9000)/CONV_TBL.DIV(OCB.OCT_HEX.TYPE));

   9443 12 002060   000036 236000 xsym               LDQ     OCB+30
        12 002061   000017 402007                    MPY     15,DL
        12 002062   000100 101406                    MRL     fill='000'O
        12 002063   000015 200002 11                 ADSC9   CONV_TBL,Q               cn=1,n=2
        12 002064   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 002065   000000 236000 xsym               LDQ     IN_ARS
        12 002066   021450 402007                    MPY     9000,DL
        12 002067   202234 506100                    DIV     KEY1+64,,AUTO
        12 002070   202235 756100                    STQ     KEY1+65,,AUTO
        12 002071   000100 301500                    BTD
        12 002072   202235 000004                    NDSC9   KEY1+65,,AUTO            cn=0,s=lsgnf,sf=0,n=4
        12 002073   202122 030011                    NDSC9   RECLEN_BUF,,AUTO         cn=0,s=nosgn,sf=0,n=9

      862     9444    2           MOP_RECLEN(0) = CONV_TBL.MICROP(OCB.OCT_HEX.TYPE);

   9444 12 002074   000036 236000 xsym               LDQ     OCB+30
        12 002075   000017 402007                    MPY     15,DL
        12 002076   000000 100406                    MLR     fill='000'O
        12 002077   000015 000001 11                 ADSC9   CONV_TBL,Q               cn=0,n=1
        12 002100   000033 000001 10                 ADSC9   MOP_RECLEN               cn=0,n=1

      863     9445    2           CALL EDITCHAR(RECLEN_BUF,

   9445 12 002101   100000 024500                    MVNE
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:165  
        12 002102   202122 030011                    NDSC9   RECLEN_BUF,,AUTO         cn=0,s=nosgn,sf=0,n=9
        12 002103   000033 000005 10                 ADSC9   MOP_RECLEN               cn=0,n=5
        12 002104   202122 000011                    ADSC9   RECLEN_BUF,,AUTO         cn=0,n=9

      864     9446    2             0,
      865     9447    2             9,
      866     9448    2             MOP_RECLEN,
      867     9449    2             RECLEN_BUF);
      868     9450    2           I = 0;

   9450 12 002105   200036 450100                    STZ     I,,AUTO

      869     9451    3           DO WHILE (SUBSTR(RECLEN_BUF,I,1)=' ');

   9451 12 002106   002110 710000 12                 TRA     s:9453

      870     9452    3              I = I +1;

   9452 12 002107   200036 054100                    AOS     I,,AUTO

      871     9453    3              END;

   9453 12 002110   200036 235100                    LDA     I,,AUTO
        12 002111   040000 106505                    CMPC    fill='040'O
        12 002112   202122 000001                    ADSC9   RECLEN_BUF,A,AUTO        cn=0,n=1
        12 002113   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 002114   002107 600000 12                 TZE     s:9452

      872     9454    2           CALL INSERT(DUMP_BUF,

   9454 12 002115   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 002116   000000 720100                    LXL0    0,,PR0
        12 002117   202120 471500                    LDP1    @START_IDX,,AUTO
        12 002120   000000 636010                    EAQ     0,X0
        12 002121   000022 732000                    QRS     18
        12 002122   100000 136100                    SBLQ    0,,PR1
        12 002123   100000 235100                    LDA     0,,PR1
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:166  
        12 002124   200036 721100                    LXL1    I,,AUTO
        12 002125   777766 621011                    EAX1    -10,X1
        12 002126   777777 661003                    ERX1    -1,DU
        12 002127   202234 755100                    STA     KEY1+64,,AUTO
        12 002130   200036 235100                    LDA     I,,AUTO
        12 002131   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002132   000000 620006                    EAX0    0,QL
        12 002133   202235 756100                    STQ     KEY1+65,,AUTO
        12 002134   202234 236100                    LDQ     KEY1+64,,AUTO
        12 002135   040146 100545                    MLR     fill='040'O
        12 002136   202122 000011                    ADSC9   RECLEN_BUF,A,AUTO        cn=0,n=*X1
        12 002137   300000 000010                    ADSC9   0,Q,PR3                  cn=0,n=*X0
        12 002140   202235 236100                    LDQ     KEY1+65,,AUTO
        12 002141   200036 036100                    ADLQ    I,,AUTO
        12 002142   000011 116007                    CMPQ    9,DL
        12 002143   002160 604400 12                 TMOZ    s:9458
        12 002144   202236 756100                    STQ     KEY1+66,,AUTO
        12 002145   202234 236100                    LDQ     KEY1+64,,AUTO
        12 002146   200036 136100                    SBLQ    I,,AUTO
        12 002147   202237 756100                    STQ     KEY1+67,,AUTO
        12 002150   000036 236000 xsym               LDQ     OCB+30
        12 002151   000017 402007                    MPY     15,DL
        12 002152   202236 720100                    LXL0    KEY1+66,,AUTO
        12 002153   777767 622010                    EAX2    -9,X0
        12 002154   202237 235100                    LDA     KEY1+67,,AUTO
        12 002155   040145 100406                    MLR     fill='040'O
        12 002156   000015 600014 11                 ADSC9   CONV_TBL,Q               cn=3,n=12
        12 002157   300002 200012                    ADSC9   2,A,PR3                  cn=1,n=*X2

      873     9455    2             START_IDX,,
      874     9456    2             SUBSTR(RECLEN_BUF,I),
      875     9457    2             CONV_TBL.UNITS(OCB.OCT_HEX.TYPE));
      876     9458    2           START_IDX = START_IDX + SIZEC(RECLEN_BUF)-I +1;

   9458 12 002160   100000 236100                    LDQ     0,,PR1
        12 002161   200036 136100                    SBLQ    I,,AUTO
        12 002162   000012 036007                    ADLQ    10,DL
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:167  
        12 002163   100000 756100                    STQ     0,,PR1

      877     9459    3           DO WHILE (SUBSTR(DUMP_BUF,START_IDX,2) ~= '  ');

   9459 12 002164   002167 710000 12                 TRA     s:9461

      878     9460    3              START_IDX = START_IDX +1;

   9460 12 002165   202120 470500                    LDP0    @START_IDX,,AUTO
        12 002166   000000 054100                    AOS     0,,PR0

      879     9461    3              END;

   9461 12 002167   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 002170   000000 720100                    LXL0    0,,PR0
        12 002171   202120 471500                    LDP1    @START_IDX,,AUTO
        12 002172   100000 235100                    LDA     0,,PR1
        12 002173   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002174   040000 106505                    CMPC    fill='040'O
        12 002175   300000 000002                    ADSC9   0,A,PR3                  cn=0,n=2
        12 002176   000041 000002 11                 ADSC9   EOD_LIT+5                cn=0,n=2
        12 002177   002165 601000 12                 TNZ     s:9460

      880     9462    2           START_IDX = START_IDX +1;

   9462 12 002200   100000 054100                    AOS     0,,PR1

   9462 12 002201                       RECLEN_DONE  null
      881     9463    2   RECLEN_DONE: ;
      882     9464        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:168  
      883     9465        /**/
      884     9466        /*  If input is from tape,      */
      885     9467        /*  and user has IOERROK set,   */
      886     9468        /*  then see if we have got an  */
      887     9469        /*  I/O error.                  */
      888     9470        /**/
      889     9471    2           IF M$EI$ -> F$DCB.TYC.IOERR(0) AND

   9471 12 002201   000000 470400 xsym               LDP0    M$EI$
        12 002202   000001 430100                    FSZN    1,,PR0
        12 002203   002224 605000 12                 TPL     s:9484
        12 002204   000032 236100                    LDQ     26,,PR0
        12 002205   777000 376007                    ANQ     -512,DL
        12 002206   002000 116007                    CMPQ    1024,DL
        12 002207   002224 601000 12                 TNZ     s:9484
        12 002210   000031 236100                    LDQ     25,,PR0
        12 002211   020000 316003                    CANQ    8192,DU
        12 002212   002224 600000 12                 TZE     s:9484

      890     9472    2             M$EI$ -> F$DCB.ASN = %TAPE# AND
      891     9473    2             M$EI$ -> F$DCB.IOERROK
      892     9474    2            THEN
      893     9475    2              IF ICB.TAPEIOERR = 1

   9475 12 002213   000235 236000 xsym               LDQ     ICB+157
        12 002214   777000 376003                    ANQ     -512,DU
        12 002215   001000 116003                    CMPQ    512,DU
        12 002216   002222 601000 12                 TNZ     s:9479

      894     9476    2               THEN
      895     9477    2                 ICB.TAPEIOERR = 2;        /* Expected 2nd I/O message           */

   9477 12 002217   002000 236003                    LDQ     1024,DU
        12 002220   000235 756000 xsym               STQ     ICB+157
        12 002221   002224 710000 12                 TRA     s:9484

      896     9478    2               ELSE
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:169  
      897     9479    2                 ICB.TAPEIOERR = 1;        /* New I/O error                      */

   9479 12 002222   001000 236003                    LDQ     512,DU
        12 002223   000235 756000 xsym               STQ     ICB+157

      898     9480        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:170  
      899     9481        /**/
      900     9482        /*  DVBYTE  */
      901     9483        /**/
      902     9484    2           IF KEYOPTS.DVBYTE ~= 2 AND ICB.TAPEIOERR = 0

   9484 12 002224   200016 235100                    LDA     KEYOPTS+1,,AUTO
        12 002225   000002 115007                    CMPA    2,DL
        12 002226   002232 600000 12                 TZE     s:9487
        12 002227   000235 236000 xsym               LDQ     ICB+157
        12 002230   777000 316003                    CANQ    -512,DU
        12 002231   002465 600000 12                 TZE     DVBYTE_DONE

      903     9485    2            THEN
      904     9486    2              GOTO DVBYTE_DONE;
      905     9487    2           CALL INSERT(DUMP_BUF,

   9487 12 002232   202121 471500                    LDP1    @BUF_SIZE,,AUTO
        12 002233   100000 720100                    LXL0    0,,PR1
        12 002234   202120 473500                    LDP3    @START_IDX,,AUTO
        12 002235   000000 636010                    EAQ     0,X0
        12 002236   000022 732000                    QRS     18
        12 002237   300000 136100                    SBLQ    0,,PR3
        12 002240   300000 235100                    LDA     0,,PR3
        12 002241   202117 474500                    LDP4    @DUMP_BUF,,AUTO
        12 002242   000000 621006                    EAX1    0,QL
        12 002243   040145 100400                    MLR     fill='040'O
        12 002244   000030 000001 13                 ADSC9   24                       cn=0,n=1
        12 002245   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1

      906     9488    2             START_IDX,,
      907     9489    2             '[');
      908     9490    2           START_IDX = START_IDX +1;

   9490 12 002246   300000 054100                    AOS     0,,PR3

      909     9491        /**/
      910     9492        /*  If there is a tape error,       */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:171  
      911     9493        /*  then display the records error  */
      912     9494        /*  in the DVBYTE status line.      */
      913     9495        /**/
      914     9496    2           IF ICB.TAPEIOERR ~= 0

   9496 12 002247   000235 236000 xsym               LDQ     ICB+157
        12 002250   777000 316003                    CANQ    -512,DU
        12 002251   002346 600000 12                 TZE     s:9533

      915     9497    2            THEN
      916     9498    3            DO;

      917     9499    3               IF M$EI$ -> F$DCB.TYC.IOERR(0)

   9499 12 002252   000000 470400 xsym               LDP0    M$EI$
        12 002253   000001 430100                    FSZN    1,,PR0
        12 002254   002270 605000 12                 TPL     s:9507

      918     9500    3                THEN                       /* I/O error                          */
      919     9501    4                DO;

      920     9502    4                   CALL INSERT(DUMP_BUF,

   9502 12 002255   100000 720100                    LXL0    0,,PR1
        12 002256   000000 636010                    EAQ     0,X0
        12 002257   000022 732000                    QRS     18
        12 002260   300000 136100                    SBLQ    0,,PR3
        12 002261   300000 235100                    LDA     0,,PR3
        12 002262   000000 621006                    EAX1    0,QL
        12 002263   040145 100400                    MLR     fill='040'O
        12 002264   000042 000006 11                 ADSC9   EOD_LIT+6                cn=0,n=6
        12 002265   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1

      921     9503    4                     START_IDX,,
      922     9504    4                     'IOERR,');
      923     9505    4                   START_IDX = START_IDX+6;

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:172  
   9505 12 002266   000006 236007                    LDQ     6,DL
        12 002267   300000 056100                    ASQ     0,,PR3

      924     9506    4                   END;

      925     9507    3               IF M$EI$ -> F$DCB.TYC.DI(0)

   9507 12 002270   000000 470400 xsym               LDP0    M$EI$
        12 002271   000001 236100                    LDQ     1,,PR0
        12 002272   000400 316003                    CANQ    256,DU
        12 002273   002307 600000 12                 TZE     s:9515

      926     9508    3                THEN                       /* Data Inconsistency                 */
      927     9509    4                DO;

      928     9510    4                   CALL INSERT(DUMP_BUF,

   9510 12 002274   100000 720100                    LXL0    0,,PR1
        12 002275   000000 636010                    EAQ     0,X0
        12 002276   000022 732000                    QRS     18
        12 002277   300000 136100                    SBLQ    0,,PR3
        12 002300   300000 235100                    LDA     0,,PR3
        12 002301   000000 621006                    EAX1    0,QL
        12 002302   040145 100400                    MLR     fill='040'O
        12 002303   000044 000003 11                 ADSC9   EOD_LIT+8                cn=0,n=3
        12 002304   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1

      929     9511    4                     START_IDX,,
      930     9512    4                     'DI,');
      931     9513    4                   START_IDX = START_IDX+3;

   9513 12 002305   000003 236007                    LDQ     3,DL
        12 002306   300000 056100                    ASQ     0,,PR3

      932     9514    4                   END;

      933     9515    3               IF M$EI$ -> F$DCB.TYC.LD(0)
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:173  

   9515 12 002307   000000 470400 xsym               LDP0    M$EI$
        12 002310   000001 236100                    LDQ     1,,PR0
        12 002311   002000 316003                    CANQ    1024,DU
        12 002312   002326 600000 12                 TZE     s:9523

      934     9516    3                THEN                       /* Lost Data                          */
      935     9517    4                DO;

      936     9518    4                   CALL INSERT(DUMP_BUF,

   9518 12 002313   100000 720100                    LXL0    0,,PR1
        12 002314   000000 636010                    EAQ     0,X0
        12 002315   000022 732000                    QRS     18
        12 002316   300000 136100                    SBLQ    0,,PR3
        12 002317   300000 235100                    LDA     0,,PR3
        12 002320   000000 621006                    EAX1    0,QL
        12 002321   040145 100400                    MLR     fill='040'O
        12 002322   000045 000003 11                 ADSC9   EOD_LIT+9                cn=0,n=3
        12 002323   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1

      937     9519    4                     START_IDX,,
      938     9520    4                     'LD,');
      939     9521    4                   START_IDX = START_IDX+3;

   9521 12 002324   000003 236007                    LDQ     3,DL
        12 002325   300000 056100                    ASQ     0,,PR3

      940     9522    4                   END;

      941     9523    4               DO CASE (ICB.TAPEIOERR);

   9523 12 002326   000235 236000 xsym               LDQ     ICB+157
        12 002327   000033 772000                    QRL     27
        12 002330   000004 116007                    CMPQ    4,DL
        12 002331   002333 602006 12                 TNC     s:9523+5,QL
        12 002332   002343 710000 12                 TRA     s:9529
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:174  
        12 002333   002343 710000 12                 TRA     s:9529
        12 002334   002343 710000 12                 TRA     s:9529
        12 002335   002337 710000 12                 TRA     s:9525
        12 002336   002342 710000 12                 TRA     s:9527

      942     9524    4                CASE (2);

      943     9525    4                  ICB.TAPEIOERR = 3;

   9525 12 002337   003000 236003                    LDQ     1536,DU
        12 002340   000235 756000 xsym               STQ     ICB+157
        12 002341   002343 710000 12                 TRA     s:9529

      944     9526    4                CASE (3);

      945     9527    4                  ICB.TAPEIOERR = 0;

   9527 12 002342   000235 450000 xsym               STZ     ICB+157

      946     9528    4                END;

      947     9529    3               IF KEYOPTS.DVBYTE ~= 2

   9529 12 002343   200016 235100                    LDA     KEYOPTS+1,,AUTO
        12 002344   000002 115007                    CMPA    2,DL
        12 002345   002436 601000 12                 TNZ     CHECK_IF_ANY_ATTRIBUTES

      948     9530    3                THEN                       /* No DVBYTE attributes to check      */
      949     9531    3                  GOTO CHECK_IF_ANY_ATTRIBUTES;
      950     9532    3               END;

      951     9533    2           IF IN_DVBYTE.VFC

   9533 12 002346   000000 236000 xsym               LDQ     IN_DVBYTE
        12 002347   100000 316003                    CANQ    32768,DU
        12 002350   002364 600000 12                 TZE     s:9541

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:175  
      952     9534    2            THEN                           /* Rec. has VFC                       */
      953     9535    3            DO;

      954     9536    3               CALL INSERT(DUMP_BUF,

   9536 12 002351   100000 720100                    LXL0    0,,PR1
        12 002352   000000 636010                    EAQ     0,X0
        12 002353   000022 732000                    QRS     18
        12 002354   300000 136100                    SBLQ    0,,PR3
        12 002355   300000 235100                    LDA     0,,PR3
        12 002356   000000 621006                    EAX1    0,QL
        12 002357   040145 100400                    MLR     fill='040'O
        12 002360   000046 000004 11                 ADSC9   EOD_LIT+10               cn=0,n=4
        12 002361   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1

      955     9537    3                 START_IDX,,
      956     9538    3                 'VFC,');                  /* Stuff in the notice                */
      957     9539    3               START_IDX = START_IDX+4;

   9539 12 002362   000004 236007                    LDQ     4,DL
        12 002363   300000 056100                    ASQ     0,,PR3

      958     9540    3               END;

      959     9541    2           IF IN_DVBYTE.BIN

   9541 12 002364   000000 236000 xsym               LDQ     IN_DVBYTE
        12 002365   040000 316003                    CANQ    16384,DU
        12 002366   002402 600000 12                 TZE     s:9549

      960     9542    2            THEN                           /* Rec. was created in BINary format  */
      961     9543    3            DO;

      962     9544    3               CALL INSERT(DUMP_BUF,

   9544 12 002367   100000 720100                    LXL0    0,,PR1
        12 002370   000000 636010                    EAQ     0,X0
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:176  
        12 002371   000022 732000                    QRS     18
        12 002372   300000 136100                    SBLQ    0,,PR3
        12 002373   300000 235100                    LDA     0,,PR3
        12 002374   000000 621006                    EAX1    0,QL
        12 002375   040145 100400                    MLR     fill='040'O
        12 002376   000047 000004 11                 ADSC9   EOD_LIT+11               cn=0,n=4
        12 002377   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1

      963     9545    3                 START_IDX,,
      964     9546    3                 'BIN,');                  /* Stuff in the notice                */
      965     9547    3               START_IDX = START_IDX+4;

   9547 12 002400   000004 236007                    LDQ     4,DL
        12 002401   300000 056100                    ASQ     0,,PR3

      966     9548    3               END;

      967     9549    2           IF IN_DVBYTE.TRANS

   9549 12 002402   000000 236000 xsym               LDQ     IN_DVBYTE
        12 002403   020000 316003                    CANQ    8192,DU
        12 002404   002420 600000 12                 TZE     s:9560

      968     9550    2            THEN                           /* Rec. was created in TRANSparent    */
      969     9551    3            DO;

      970     9552    3               CALL INSERT(DUMP_BUF,

   9552 12 002405   100000 720100                    LXL0    0,,PR1
        12 002406   000000 636010                    EAQ     0,X0
        12 002407   000022 732000                    QRS     18
        12 002410   300000 136100                    SBLQ    0,,PR3
        12 002411   300000 235100                    LDA     0,,PR3
        12 002412   000000 621006                    EAX1    0,QL
        12 002413   040145 100400                    MLR     fill='040'O
        12 002414   000050 000006 11                 ADSC9   EOD_LIT+12               cn=0,n=6
        12 002415   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:177  

      971     9553    3                 START_IDX,,
      972     9554    3                 'TRANS,');                /* Stuff in the notice                */
      973     9555    3               START_IDX = START_IDX+6;

   9555 12 002416   000006 236007                    LDQ     6,DL
        12 002417   300000 056100                    ASQ     0,,PR3

      974     9556    3               END;

      975     9557                                /* #36563 MODIFICATION: ADDITION OF NODAT
      976     9558                                 *        NOTIFICATION TO HEADER OUTPUT.
      977     9559                                   */
      978     9560    2           IF IN_DVBYTE.NODAT

   9560 12 002420   000000 236000 xsym               LDQ     IN_DVBYTE
        12 002421   004000 316003                    CANQ    2048,DU
        12 002422   002436 600000 12                 TZE     CHECK_IF_ANY_ATTRIBUTES

      979     9561    2            THEN                           /* Rec. supports throttling           */
      980     9562    3            DO;

      981     9563    3               CALL INSERT(DUMP_BUF,

   9563 12 002423   100000 720100                    LXL0    0,,PR1
        12 002424   000000 636010                    EAQ     0,X0
        12 002425   000022 732000                    QRS     18
        12 002426   300000 136100                    SBLQ    0,,PR3
        12 002427   300000 235100                    LDA     0,,PR3
        12 002430   000000 621006                    EAX1    0,QL
        12 002431   040145 100400                    MLR     fill='040'O
        12 002432   000052 000006 11                 ADSC9   EOD_LIT+14               cn=0,n=6
        12 002433   400000 000011                    ADSC9   0,A,PR4                  cn=0,n=*X1

      982     9564    3                 START_IDX,,
      983     9565    3                 'NODAT,');                /* Stuff in the notice                */
      984     9566    3               START_IDX = START_IDX+6;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:178  

   9566 12 002434   000006 236007                    LDQ     6,DL
        12 002435   300000 056100                    ASQ     0,,PR3

      985     9567    3               END;

      986     9568    2   CHECK_IF_ANY_ATTRIBUTES:
      987     9569    2           IF SUBSTR (DUMP_BUF,START_IDX -1,1)=','

   9569 12 002436   100000 720100       CHECK_IF_AN* LXL0    0,,PR1
        12 002437   300000 235100                    LDA     0,,PR3
        12 002440   040000 106505                    CMPC    fill='040'O
        12 002441   477777 600001                    ADSC9   -1,A,PR4                 cn=3,n=1
        12 002442   000031 000001 13                 ADSC9   25                       cn=0,n=1
        12 002443   002454 601000 12                 TNZ     s:9578

      988     9570    2            THEN                           /* We left a hanging comma            */
      989     9571    3            DO;                            /* Stomp on it                        */

      990     9572    3               CALL INSERT (DUMP_BUF,

   9572 12 002444   000000 636010                    EAQ     0,X0
        12 002445   000022 732000                    QRS     18
        12 002446   300000 136100                    SBLQ    0,,PR3
        12 002447   000001 621006                    EAX1    1,QL
        12 002450   040145 100400                    MLR     fill='040'O
        12 002451   000032 000001 13                 ADSC9   26                       cn=0,n=1
        12 002452   477777 600011                    ADSC9   -1,A,PR4                 cn=3,n=*X1

      991     9573    3                 START_IDX -1,,
      992     9574    3                 ']');
      993     9575    3               END;

   9575 12 002453   002465 710000 12                 TRA     DVBYTE_DONE

      994     9576    2            ELSE                           /* No attributes, '[' is hanging      */
      995     9577    3            DO;                            /* Stomp on it                        */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:179  

      996     9578    3               CALL INSERT (DUMP_BUF,

   9578 12 002454   000000 636010                    EAQ     0,X0
        12 002455   000022 732000                    QRS     18
        12 002456   300000 136100                    SBLQ    0,,PR3
        12 002457   000001 621006                    EAX1    1,QL
        12 002460   040145 100400                    MLR     fill='040'O
        12 002461   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 002462   477777 600011                    ADSC9   -1,A,PR4                 cn=3,n=*X1

      997     9579    3                 START_IDX -1,,
      998     9580    3                 ' ');
      999     9581    3               START_IDX = START_IDX - 1;  /* back up the index                  */

   9581 12 002463   000001 336007                    LCQ     1,DL
        12 002464   300000 056100                    ASQ     0,,PR3

     1000     9582    3               END;

   9581 12 002465                       DVBYTE_DONE  null
     1001     9583    2   DVBYTE_DONE: ;
     1002     9584        /**/
     1003     9585        /*  Finished!  */
     1004     9586        /**/
     1005     9587    2           RETURN;

   9587 12 002465   202116 221300                    LDX1  ! BUF_LEN+2,,AUTO
        12 002466   000001 702211                    TSX2  ! 1,X1

     1006     9588        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:180  
     1007     9589    2   INSERT_OCT_KEY: PROC;

   9589 12 002467   202130 741300       INSERT_OCT_* STX1  ! CHUNK_SIZE+1,,AUTO

     1008     9590        /*I* NAME: INSERT_OCT_KEY
     1009     9591             PURPOSE: To put into DUMP_BUF some representation of the key for this record.
     1010     9592             CALL: CALL INSERT_OCT_KEY;
     1011     9593             DESCRIPTION: This procedure puts out the record's key depending
     1012     9594                          on options:
     1013     9595                             o in OCTAL format
     1014     9596                             o in text
     1015     9597                             o EDIT-key format if possible
     1016     9598                             o in HEX
     1017     9599        */
     1018     9600    3   DCL I SBIN WORD;
     1019     9601    3   DCL J SBIN WORD;
     1020     9602    3   DCL K SBIN WORD;
     1021     9603    3   DCL 1 KEY1,
     1022     9604    3         2 LEN UBIN BYTE UNAL,
     1023     9605    3         2 KEY_ARY(0:254) CHAR(1),
     1024     9606    3         2 OCT_KEY_ARY(0:764) REDEF KEY_ARY UBIN(3) UNAL,
     1025     9607    3         2 X_KEY_ARY REDEF KEY_ARY UNAL,
     1026     9608    3           3 X (0:572) UBIN(4) UNAL,
     1027     9609    3           3 * BIT(3) UNAL,
     1028     9610    3         2 EKEY REDEF KEY_ARY,
     1029     9611    3           3 KEY UBIN(27) UNAL,
     1030     9612    3           3 * CHAR(252) UNAL;
     1031     9613    3   DCL CHR$255 CHAR(255) BASED;
     1032     9614        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:181  
     1033     9615        /**/
     1034     9616        /*  If no keys are to be formatted, skip this whole thing.  */
     1035     9617        /**/
     1036     9618    3           IF NOT KEYOPTS.FORMAT.O

   9618 12 002470   200015 236100                    LDQ     KEYOPTS,,AUTO
        12 002471   100000 316003                    CANQ    32768,DU
        12 002472   002504 601000 12                 TNZ     s:9625
        12 002473   200015 234100                    SZN     KEYOPTS,,AUTO
        12 002474   002504 604000 12                 TMI     s:9625
        12 002475   200000 316003                    CANQ    65536,DU
        12 002476   002504 601000 12                 TNZ     s:9625
        12 002477   040000 316003                    CANQ    16384,DU
        12 002500   002504 601000 12                 TNZ     s:9625
        12 002501   010000 316003                    CANQ    4096,DU
        12 002502   002504 601000 12                 TNZ     s:9625

     1037     9619    3             AND NOT KEYOPTS.FORMAT.X
     1038     9620    3             AND NOT KEYOPTS.FORMAT.X1
     1039     9621    3             AND NOT KEYOPTS.FORMAT.C
     1040     9622    3             AND NOT KEYOPTS.FORMAT.E
     1041     9623    3            THEN
     1042     9624    3              RETURN;

   9624 12 002503   000001 702211                    TSX2  ! 1,X1

     1043     9625    3           IF NOT ICB.FLAVOR.KNOWKEY THEN

   9625 12 002504   000172 430000 xsym               FSZN    ICB+122
        12 002505   002507 604000 12                 TMI     s:9630

     1044     9626    3              RETURN;                      /* Unknown key type                   */

   9626 12 002506   000001 702211                    TSX2  ! 1,X1

     1045     9627        /**/
     1046     9628        /*  Set up some stuff.  */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:182  
     1047     9629        /**/
     1048     9630    3           KEY1 = EI_KEY;                  /* Move KEY to local structure        */

   9630 12 002507   000100 100400                    MLR     fill='000'O
        12 002510   000000 000400 xsym               ADSC9   EI_KEY                   cn=0,n=256
        12 002511   202134 000400                    ADSC9   KEY1,,AUTO               cn=0,n=256

     1049     9631        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:183  
     1050     9632        /**/
     1051     9633        /*  OCTAL.  */
     1052     9634        /**/
     1053     9635    3           IF NOT KEYOPTS.FORMAT.O

   9635 12 002512   100000 316003                    CANQ    32768,DU
        12 002513   002573 600000 12                 TZE     OCT_DONE

     1054     9636    3            THEN
     1055     9637    3              GOTO OCT_DONE;
     1056     9638    3           CALL INSERT(DUMP_BUF,

   9638 12 002514   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 002515   000000 720100                    LXL0    0,,PR0
        12 002516   202120 471500                    LDP1    @START_IDX,,AUTO
        12 002517   100000 235100                    LDA     0,,PR1
        12 002520   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002521   040105 100400                    MLR     fill='040'O
        12 002522   000054 000002 11                 ADSC9   EOD_LIT+16               cn=0,n=2
        12 002523   300000 000002                    ADSC9   0,A,PR3                  cn=0,n=2

     1057     9639    3             START_IDX,
     1058     9640    3             2,
     1059     9641    3             'O''');
     1060     9642    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+2);

   9642 12 002524   100000 236100                    LDQ     0,,PR1
        12 002525   000020 736000                    QLS     16
        12 002526   400000 036007                    ADLQ    -131072,DL
        12 002527   202117 036100                    ADLQ    @DUMP_BUF,,AUTO
        12 002530   202125 756100                    STQ     P$,,AUTO

     1061     9643    4           DO I=0 TO KEY1.LEN*3 -1;

   9643 12 002531   202131 450100                    STZ     I,,AUTO
        12 002532   002554 710000 12                 TRA     s:9645+1

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:184  
     1062     9644    4              CALL BINCHAR(P$->CHR$ARY(I),KEY1.OCT_KEY_ARY(I));

   9644 12 002533   202131 236100                    LDQ     I,,AUTO
        12 002534   000003 402007                    MPY     3,DL
        12 002535   000000 116003                    CMPQ    0,DU
        12 002536   002540 605000 12                 TPL     s:9644+5
        12 002537   000044 036003                    ADLQ    36,DU
        12 002540   003100 061506                    CSR     bolr='003'O
        12 002541   202134 200003                    BDSC    KEY1,Q,AUTO              by=1,bit=0,n=3
        12 002542   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 002543   202234 236100                    LDQ     KEY1+64,,AUTO
        12 002544   000000 235003                    LDA     0,DU
        12 002545   202236 757100                    STAQ    KEY1+66,,AUTO
        12 002546   202125 470500                    LDP0    P$,,AUTO
        12 002547   202131 235100                    LDA     I,,AUTO
        12 002550   000105 301500                    BTD
        12 002551   202236 000010                    NDSC9   KEY1+66,,AUTO            cn=0,s=lsgnf,sf=0,n=8
        12 002552   000000 030001                    NDSC9   0,A,PR0                  cn=0,s=nosgn,sf=0,n=1

     1063     9645    4              END;

   9645 12 002553   202131 054100                    AOS     I,,AUTO
        12 002554   202134 236100                    LDQ     KEY1,,AUTO
        12 002555   000033 772000                    QRL     27
        12 002556   000003 402007                    MPY     3,DL
        12 002557   202131 116100                    CMPQ    I,,AUTO
        12 002560   002533 605400 12                 TPNZ    s:9644

     1064     9646    3           START_IDX = START_IDX +KEY1.LEN*3 +4;

   9646 12 002561   202120 470500                    LDP0    @START_IDX,,AUTO
        12 002562   000000 036100                    ADLQ    0,,PR0
        12 002563   000004 036007                    ADLQ    4,DL
        12 002564   000000 756100                    STQ     0,,PR0

     1065     9647    3           CALL INSERT(DUMP_BUF,

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:185  
   9647 12 002565   202121 471500                    LDP1    @BUF_SIZE,,AUTO
        12 002566   100000 720100                    LXL0    0,,PR1
        12 002567   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002570   040106 100400                    MLR     fill='040'O
        12 002571   000055 000002 11                 ADSC9   EOD_LIT+17               cn=0,n=2
        12 002572   377777 400002                    ADSC9   -1,Q,PR3                 cn=2,n=2

   9647 12 002573                       OCT_DONE     null
     1066     9648    3             START_IDX - 2,
     1067     9649    3             2,
     1068     9650    3             ''' ');
     1069     9651    3   OCT_DONE: ;
     1070     9652        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:186  
     1071     9653        /**/
     1072     9654        /*  X1.  */
     1073     9655        /**/
     1074     9656    3           IF NOT KEYOPTS.FORMAT.X1

   9656 12 002573   200015 236100                    LDQ     KEYOPTS,,AUTO
        12 002574   200000 316003                    CANQ    65536,DU
        12 002575   002667 600000 12                 TZE     X1_DONE

     1075     9657    3            THEN
     1076     9658    3              GOTO X1_DONE;
     1077     9659    3           CALL INSERT(DUMP_BUF,

   9659 12 002576   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 002577   000000 720100                    LXL0    0,,PR0
        12 002600   202120 471500                    LDP1    @START_IDX,,AUTO
        12 002601   100000 235100                    LDA     0,,PR1
        12 002602   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002603   040105 100400                    MLR     fill='040'O
        12 002604   000056 000003 11                 ADSC9   EOD_LIT+18               cn=0,n=3
        12 002605   300000 000003                    ADSC9   0,A,PR3                  cn=0,n=3

     1078     9660    3             START_IDX,
     1079     9661    3             3,
     1080     9662    3             'X1''');
     1081     9663    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+3);

   9663 12 002606   100000 236100                    LDQ     0,,PR1
        12 002607   000020 736000                    QLS     16
        12 002610   600000 036007                    ADLQ    -65536,DL
        12 002611   202117 036100                    ADLQ    @DUMP_BUF,,AUTO
        12 002612   202125 756100                    STQ     P$,,AUTO

     1082     9664    3           Q$ = PINCRB(ADDR(KEY1.KEY_ARY),1);

   9664 12 002613   202234 452500                    STP2    KEY1+64,,AUTO
        12 002614   202234 236100                    LDQ     KEY1+64,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:187  
        12 002615   000033 036000 13                 ADLQ    27
        12 002616   202126 756100                    STQ     Q$,,AUTO

     1083     9665    4           DO I=0 TO (KEY1.LEN*8/4)-1;

   9665 12 002617   202131 450100                    STZ     I,,AUTO
        12 002620   002650 710000 12                 TRA     s:9672+1

     1084     9666    4              P$->CHR$ARY(I) = X_TBL(Q$ -> UBIN$4);

   9666 12 002621   202126 470500                    LDP0    Q$,,AUTO
        12 002622   003100 061500                    CSR     bolr='003'O
        12 002623   000000 000004                    BDSC    0,,PR0                   by=0,bit=0,n=4
        12 002624   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 002625   202234 236100                    LDQ     KEY1+64,,AUTO
        12 002626   202125 471500                    LDP1    P$,,AUTO
        12 002627   202131 235100                    LDA     I,,AUTO
        12 002630   040105 100406                    MLR     fill='040'O
        12 002631   000006 000001 11                 ADSC9   XTBL,Q                   cn=0,n=1
        12 002632   100000 000001                    ADSC9   0,A,PR1                  cn=0,n=1

     1085     9667    4              IF MOD(I,2) = 0

   9667 12 002633   202131 236100                    LDQ     I,,AUTO
        12 002634   000002 506007                    DIV     2,DL
        12 002635   000044 733000                    LRS     36
        12 002636   000000 116003                    CMPQ    0,DU
        12 002637   002644 601000 12                 TNZ     s:9671

     1086     9668    4               THEN
     1087     9669    4                 Q$ = PINCRB(Q$,4);

   9669 12 002640   000004 220003                    LDX0    4,DU
        12 002641   000000 503510                    ABD     0,X0,PR0
        12 002642   202126 450500                    STP0    Q$,,AUTO
        12 002643   002647 710000 12                 TRA     s:9672

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:188  
     1088     9670    4               ELSE
     1089     9671    4                 Q$ = PINCRB(Q$,5);

   9671 12 002644   000005 220003                    LDX0    5,DU
        12 002645   000000 503510                    ABD     0,X0,PR0
        12 002646   202126 450500                    STP0    Q$,,AUTO

     1090     9672    4              END;

   9672 12 002647   202131 054100                    AOS     I,,AUTO
        12 002650   202134 236100                    LDQ     KEY1,,AUTO
        12 002651   000032 772000                    QRL     26
        12 002652   001776 376007                    ANQ     1022,DL
        12 002653   202131 116100                    CMPQ    I,,AUTO
        12 002654   002621 605400 12                 TPNZ    s:9666

     1091     9673    3           START_IDX = START_IDX + (KEY1.LEN*8/4) +5;

   9673 12 002655   202120 470500                    LDP0    @START_IDX,,AUTO
        12 002656   000000 036100                    ADLQ    0,,PR0
        12 002657   000005 036007                    ADLQ    5,DL
        12 002660   000000 756100                    STQ     0,,PR0

     1092     9674    3           CALL INSERT(DUMP_BUF,

   9674 12 002661   202121 471500                    LDP1    @BUF_SIZE,,AUTO
        12 002662   100000 720100                    LXL0    0,,PR1
        12 002663   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002664   040106 100400                    MLR     fill='040'O
        12 002665   000055 000002 11                 ADSC9   EOD_LIT+17               cn=0,n=2
        12 002666   377777 400002                    ADSC9   -1,Q,PR3                 cn=2,n=2

   9674 12 002667                       X1_DONE      null
     1093     9675    3             START_IDX - 2,
     1094     9676    3             2,
     1095     9677    3             ''' ');
     1096     9678    3   X1_DONE: ;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:189  
     1097     9679        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:190  
     1098     9680        /**/
     1099     9681        /*  X.  */
     1100     9682        /**/
     1101     9683    3           IF NOT KEYOPTS.FORMAT.X

   9683 12 002667   200015 234100                    SZN     KEYOPTS,,AUTO
        12 002670   002753 605000 12                 TPL     X_DONE

     1102     9684    3            THEN
     1103     9685    3              GOTO X_DONE;
     1104     9686    3           CALL INSERT(DUMP_BUF,

   9686 12 002671   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 002672   000000 720100                    LXL0    0,,PR0
        12 002673   202120 471500                    LDP1    @START_IDX,,AUTO
        12 002674   100000 235100                    LDA     0,,PR1
        12 002675   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002676   040105 100400                    MLR     fill='040'O
        12 002677   000057 000002 11                 ADSC9   EOD_LIT+19               cn=0,n=2
        12 002700   300000 000002                    ADSC9   0,A,PR3                  cn=0,n=2

     1105     9687    3             START_IDX,
     1106     9688    3             2,
     1107     9689    3             'X''');
     1108     9690    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+2);

   9690 12 002701   100000 236100                    LDQ     0,,PR1
        12 002702   000020 736000                    QLS     16
        12 002703   400000 036007                    ADLQ    -131072,DL
        12 002704   202117 036100                    ADLQ    @DUMP_BUF,,AUTO
        12 002705   202125 756100                    STQ     P$,,AUTO

     1109     9691    4           DO I=0 TO (KEY1.LEN*9/4)-1;

   9691 12 002706   202131 450100                    STZ     I,,AUTO
        12 002707   002726 710000 12                 TRA     s:9693+1

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:191  
     1110     9692    4              P$->CHR$ARY(I) = X_TBL(KEY1.X_KEY_ARY.X(I));

   9692 12 002710   202131 235100                    LDA     I,,AUTO
        12 002711   000002 735000                    ALS     2
        12 002712   002714 605000 12                 TPL     s:9692+4
        12 002713   000044 035003                    ADLA    36,DU
        12 002714   003100 061505                    CSR     bolr='003'O
        12 002715   202134 200004                    BDSC    KEY1,A,AUTO              by=1,bit=0,n=4
        12 002716   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 002717   202234 236100                    LDQ     KEY1+64,,AUTO
        12 002720   202125 470500                    LDP0    P$,,AUTO
        12 002721   202131 235100                    LDA     I,,AUTO
        12 002722   040105 100406                    MLR     fill='040'O
        12 002723   000006 000001 11                 ADSC9   XTBL,Q                   cn=0,n=1
        12 002724   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1

     1111     9693    4              END;

   9693 12 002725   202131 054100                    AOS     I,,AUTO
        12 002726   202134 236100                    LDQ     KEY1,,AUTO
        12 002727   000033 772000                    QRL     27
        12 002730   000011 402007                    MPY     9,DL
        12 002731   000002 772000                    QRL     2
        12 002732   002710 604000 12                 TMI     s:9692
        12 002733   202131 116100                    CMPQ    I,,AUTO
        12 002734   002710 605400 12                 TPNZ    s:9692

     1112     9694    3           START_IDX = START_IDX + (KEY1.LEN*9/4) +4;

   9694 12 002735   202134 236100                    LDQ     KEY1,,AUTO
        12 002736   000033 772000                    QRL     27
        12 002737   000011 402007                    MPY     9,DL
        12 002740   000002 772000                    QRL     2
        12 002741   202120 470500                    LDP0    @START_IDX,,AUTO
        12 002742   000000 036100                    ADLQ    0,,PR0
        12 002743   000004 036007                    ADLQ    4,DL
        12 002744   000000 756100                    STQ     0,,PR0
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:192  

     1113     9695    3           CALL INSERT(DUMP_BUF,

   9695 12 002745   202121 471500                    LDP1    @BUF_SIZE,,AUTO
        12 002746   100000 720100                    LXL0    0,,PR1
        12 002747   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002750   040106 100400                    MLR     fill='040'O
        12 002751   000055 000002 11                 ADSC9   EOD_LIT+17               cn=0,n=2
        12 002752   377777 400002                    ADSC9   -1,Q,PR3                 cn=2,n=2

   9695 12 002753                       X_DONE       null
     1114     9696    3             START_IDX - 2,
     1115     9697    3             2,
     1116     9698    3             ''' ');
     1117     9699    3   X_DONE: ;
     1118     9700        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:193  
     1119     9701        /**/
     1120     9702        /*  Text format.  */
     1121     9703        /**/
     1122     9704    3           IF NOT KEYOPTS.FORMAT.C

   9704 12 002753   200015 236100                    LDQ     KEYOPTS,,AUTO
        12 002754   040000 316003                    CANQ    16384,DU
        12 002755   003015 600000 12                 TZE     TEXT_DONE

     1123     9705    3            THEN
     1124     9706    3              GOTO TEXT_DONE;
     1125     9707    3           CALL INSERT(DUMP_BUF,

   9707 12 002756   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 002757   000000 720100                    LXL0    0,,PR0
        12 002760   202120 471500                    LDP1    @START_IDX,,AUTO
        12 002761   100000 235100                    LDA     0,,PR1
        12 002762   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 002763   040105 100400                    MLR     fill='040'O
        12 002764   000034 000001 13                 ADSC9   28                       cn=0,n=1
        12 002765   300000 000001                    ADSC9   0,A,PR3                  cn=0,n=1

     1126     9708    3             START_IDX,
     1127     9709    3             1,
     1128     9710    3             '''');
     1129     9711    3           P$ = PINCRC(ADDR(DUMP_BUF),START_IDX+1);

   9711 12 002766   100000 236100                    LDQ     0,,PR1
        12 002767   000020 736000                    QLS     16
        12 002770   200000 036007                    ADLQ    65536,DL
        12 002771   202117 036100                    ADLQ    @DUMP_BUF,,AUTO
        12 002772   202125 756100                    STQ     P$,,AUTO

     1130     9712    3           CALL XLATE(P$->CHR$255,

   9712 12 002773   202134 236100                    LDQ     KEY1,,AUTO
        12 002774   000033 772000                    QRL     27
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:194  
        12 002775   000000 620006                    EAX0    0,QL
        12 002776   000000 474400 xsym               LDP4    B$XL_ASC_DUMP$
        12 002777   202125 475500                    LDP5    P$,,AUTO
        12 003000   040100 160540                    MVT     fill='040'O
        12 003001   202134 200010                    ADSC9   KEY1,,AUTO               cn=1,n=*X0
        12 003002   500000 000377                    ADSC9   0,,PR5                   cn=0,n=255
        12 003003   400000 000100                    ARG     0,,PR4

     1131     9713    3             PRINTABLE_XLATE_TBL,
     1132     9714    3             ADDR(KEY1)->TEXT$C.STRING);
     1133     9715    3           START_IDX = START_IDX +KEY1.LEN +3;

   9715 12 003004   202134 236100                    LDQ     KEY1,,AUTO
        12 003005   000033 772000                    QRL     27
        12 003006   100000 036100                    ADLQ    0,,PR1
        12 003007   000003 036007                    ADLQ    3,DL
        12 003010   100000 756100                    STQ     0,,PR1

     1134     9716    3           CALL INSERT(DUMP_BUF,

   9716 12 003011   000000 720100                    LXL0    0,,PR0
        12 003012   040106 100400                    MLR     fill='040'O
        12 003013   000055 000002 11                 ADSC9   EOD_LIT+17               cn=0,n=2
        12 003014   377777 400002                    ADSC9   -1,Q,PR3                 cn=2,n=2

   9716 12 003015                       TEXT_DONE    null
     1135     9717    3             START_IDX - 2,
     1136     9718    3             2,
     1137     9719    3             ''' ');
     1138     9720    3   TEXT_DONE: ;
     1139     9721        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:195  
     1140     9722        /**/
     1141     9723        /*  EDIT-style.  */
     1142     9724        /**/
     1143     9725    3           IF NOT KEYOPTS.FORMAT.E

   9725 12 003015   200015 236100                    LDQ     KEYOPTS,,AUTO
        12 003016   010000 316003                    CANQ    4096,DU
        12 003017   003050 600000 12                 TZE     EDIT_DONE

     1144     9726    3            THEN
     1145     9727    3              GOTO EDIT_DONE;
     1146     9728    3           IF KEY1.LEN=3 AND KEY1.EKEY.KEY<100000000

   9728 12 003020   202134 236100                    LDQ     KEY1,,AUTO
        12 003021   777000 376003                    ANQ     -512,DU
        12 003022   003000 116003                    CMPQ    1536,DU
        12 003023   003050 601000 12                 TNZ     EDIT_DONE
        12 003024   202134 236100                    LDQ     KEY1,,AUTO
        12 003025   000032 376000 xsym               ANQ     B_VECTNIL+26
        12 003026   000035 116000 13                 CMPQ    29
        12 003027   003050 603000 12                 TRC     EDIT_DONE

     1147     9729    3            THEN
     1148     9730    4            DO;

     1149     9731    4               CALL BINCHAR(KEY_BUF,KEY1.EKEY.KEY);

   9731 12 003030   000000 235003                    LDA     0,DU
        12 003031   202234 757100                    STAQ    KEY1+64,,AUTO
        12 003032   000100 301500                    BTD
        12 003033   202234 000010                    NDSC9   KEY1+64,,AUTO            cn=0,s=lsgnf,sf=0,n=8
        12 003034   200021 030010                    NDSC9   KEY_BUF,,AUTO            cn=0,s=nosgn,sf=0,n=8

     1150     9732    4               CALL EDITCHAR(DUMP_BUF,

   9732 12 003035   202121 470500                    LDP0    @BUF_SIZE,,AUTO
        12 003036   000000 720100                    LXL0    0,,PR0
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:196  
        12 003037   202120 471500                    LDP1    @START_IDX,,AUTO
        12 003040   100000 235100                    LDA     0,,PR1
        12 003041   202117 473500                    LDP3    @DUMP_BUF,,AUTO
        12 003042   105000 024500                    MVNE
        12 003043   200021 030010                    NDSC9   KEY_BUF,,AUTO            cn=0,s=nosgn,sf=0,n=8
        12 003044   000024 000006 10                 ADSC9   MOP_EKEY                 cn=0,n=6
        12 003045   300000 000012                    ADSC9   0,A,PR3                  cn=0,n=10

     1151     9733    4                 START_IDX,
     1152     9734    4                 10,
     1153     9735    4                 MOP_EKEY,
     1154     9736    4                 KEY_BUF);
     1155     9737    4               START_IDX = START_IDX+10;

   9737 12 003046   000012 236007                    LDQ     10,DL
        12 003047   100000 056100                    ASQ     0,,PR1

     1156     9738    4               END;

     1157     9739    3   EDIT_DONE: ;

   9739 12 003050                       EDIT_DONE    null
     1158     9740        /**/
     1159     9741        /*  Finished!  */
     1160     9742        /**/
     1161     9743    3           RETURN;

   9743 12 003050   202130 221300                    LDX1  ! CHUNK_SIZE+1,,AUTO
        12 003051   000001 702211                    TSX2  ! 1,X1

     1162     9744    3   END INSERT_OCT_KEY;
     1163     9745    2   END CONSTRUCT_KEY;
     1164     9746        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:197  
     1165     9747    1   TAB_EXPAND: PROC;

   9747 12 003052   202040 741300       TAB_EXPAND   STX1  ! DUMP_BUF+1024,,AUTO

     1166     9748        /*I* NAME: TAB_EXPAND
     1167     9749             PURPOSE: To expand the record's tab stops as directed by any tab stops
     1168     9750                      specified.
     1169     9751             CALL: CALL TAB_EXPAND;
     1170     9752             DESCRIPTION: This procedure examines the record for any tab characters
     1171     9753                          and inserts either one or more blanks in their places
     1172     9754                          depending on any tab stops specified either here or from
     1173     9755                          IBEX.
     1174     9756        */
     1175     9757    2   DCL 1 TAB_TBL,
     1176     9758    2         2 IDX SBIN WORD,
     1177     9759    2         2 OFFSET(0:31) UBIN(9) UNAL;      /* Cumulative character offset        */
     1178     9760    2   DCL TAB$ PTR;
     1179     9761    2   DCL TAB$TBL(0:0) UBIN(9) UNAL BASED;
     1180     9762    2   DCL NEXT_POS SBIN WORD;
     1181     9763    2   DCL EXPANDED_POS SBIN WORD;
     1182     9764    2   DCL TAB_IDX SBIN WORD;
     1183     9765    2   DCL CHAR_IDX SBIN WORD;
     1184     9766    2   DCL I SBIN WORD;
     1185     9767    2   DCL J SBIN WORD;
     1186     9768    2           IF TABS(0)=0 AND M$UC$->F$DCB.TAB$~=ADDR(NIL)

   9768 12 003053   000000 236000 xsym               LDQ     TABS
        12 003054   777000 316003                    CANQ    -512,DU
        12 003055   003065 601000 12                 TNZ     s:9772
        12 003056   000000 470400 xsym               LDP0    M$UC$
        12 003057   000047 236100                    LDQ     39,,PR0
        12 003060   000001 116000 xsym               CMPQ    B_VECTNIL+1
        12 003061   003065 600000 12                 TZE     s:9772

     1187     9769    2            THEN                           /* TABS from the DCB                  */
     1188     9770    2              TAB$ = PINCRC(M$UC$->F$DCB.TAB$,1);

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:198  
   9770 12 003062   200000 036007                    ADLQ    65536,DL
        12 003063   202052 756100                    STQ     TAB$,,AUTO
        12 003064   003067 710000 12                 TRA     s:9773

     1189     9771    2            ELSE                           /* TABS from a prefious TX command    */
     1190     9772    2              TAB$ = ADDR(TABS);

   9772 12 003065   000036 236000 13                 LDQ     30
        12 003066   202052 756100                    STQ     TAB$,,AUTO

     1191     9773    2           TAB_TBL = '0'B;                 /* ZERO THE TABLE                     */

   9773 12 003067   000100 100400                    MLR     fill='000'O
        12 003070   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
        12 003071   202041 000044                    ADSC9   TAB_TBL,,AUTO            cn=0,n=36

     1192     9774    2           TAB_IDX = 0;

   9774 12 003072   202055 450100                    STZ     TAB_IDX,,AUTO

     1193     9775    2           CHAR_IDX = -1;                  /* Next character is number 0         */

   9775 12 003073   000001 335007                    LCA     1,DL
        12 003074   202056 755100                    STA     CHAR_IDX,,AUTO

     1194     9776    3           DO WHILE(CHAR_IDX+1<REC_LEN);   /* DO WHILE next character in record  */

   9776 12 003075   003221 710000 12                 TRA     s:9805

     1195     9777    3              CHAR_IDX = CHAR_IDX+1;

   9777 12 003076   202056 054100                    AOS     CHAR_IDX,,AUTO

     1196     9778    3              CALL INDEX(CHAR_IDX,TAB_CHAR,BUF_VECTOR.PTR$->IN$REC,CHAR_IDX);

   9778 12 003077   200032 236100                    LDQ     REC_LEN,,AUTO
        12 003100   202056 136100                    SBLQ    CHAR_IDX,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:199  
        12 003101   202234 756100                    STQ     KEY1+64,,AUTO
        12 003102   202056 236100                    LDQ     CHAR_IDX,,AUTO
        12 003103   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 003104   202234 720100                    LXL0    KEY1+64,,AUTO
        12 003105   202056 235100                    LDA     CHAR_IDX,,AUTO
        12 003106   000000 124545                    SCM     mask='000'O
        12 003107   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0
        12 003110   000037 000001 13                 ADSC9   31                       cn=0,n=1
        12 003111   202056 000100                    ARG     CHAR_IDX,,AUTO
        12 003112   202056 056100                    ASQ     CHAR_IDX,,AUTO

     1197     9779    3              IF CHAR_IDX<REC_LEN

   9779 12 003113   202056 236100                    LDQ     CHAR_IDX,,AUTO
        12 003114   200032 116100                    CMPQ    REC_LEN,,AUTO
        12 003115   003221 605000 12                 TPL     s:9805

     1198     9780    3               THEN
     1199     9781    4               DO;                         /* ANOTHER TAB CHAR HAS BEEN FOUND*/

     1200     9782                                                /* 'CURRENT' character position may   */
     1201     9783                                                /* be offset by any previous tabs     */
     1202     9784    4                  EXPANDED_POS = CHAR_IDX + TAB_TBL.OFFSET(TAB_TBL.IDX);

   9784 12 003116   202041 235100                    LDA     TAB_TBL,,AUTO
        12 003117   000100 101505                    MRL     fill='000'O
        12 003120   202042 000001                    ADSC9   CHARS_TO_DUMP,A,AUTO     cn=0,n=1
        12 003121   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 003122   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003123   202056 036100                    ADLQ    CHAR_IDX,,AUTO
        12 003124   202054 756100                    STQ     EXPANDED_POS,,AUTO

     1203     9785                                                /* Eat tab stops until we run out OR  */
     1204     9786                                                /* we get next one past our current   */
     1205     9787                                                /* position.                          */
     1206     9788    5                  DO WHILE(TAB_IDX<31 AND EXPANDED_POS>=TAB$->TAB$TBL(TAB_IDX)-1);

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:200  
   9788 12 003125   003146 710000 12                 TRA     s:9794

     1207     9789    5                     IF TAB$->TAB$TBL(TAB_IDX)=0

   9789 12 003126   202055 236100                    LDQ     TAB_IDX,,AUTO
        12 003127   000011 402007                    MPY     9,DL
        12 003130   000000 116003                    CMPQ    0,DU
        12 003131   003133 605000 12                 TPL     s:9789+5
        12 003132   000044 036003                    ADLQ    36,DU
        12 003133   202052 470500                    LDP0    TAB$,,AUTO
        12 003134   003100 061506                    CSR     bolr='003'O
        12 003135   000000 000011                    BDSC    0,Q,PR0                  by=0,bit=0,n=9
        12 003136   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 003137   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003140   000000 116003                    CMPQ    0,DU
        12 003141   003145 601000 12                 TNZ     s:9793

     1208     9790    5                      THEN
     1209     9791    5                        TAB_IDX = 31;

   9791 12 003142   000037 235007                    LDA     31,DL
        12 003143   202055 755100                    STA     TAB_IDX,,AUTO
        12 003144   003146 710000 12                 TRA     s:9794

     1210     9792    5                      ELSE
     1211     9793    5                        TAB_IDX = TAB_IDX+1;

   9793 12 003145   202055 054100                    AOS     TAB_IDX,,AUTO

     1212     9794    5                     END;

   9794 12 003146   202055 235100                    LDA     TAB_IDX,,AUTO
        12 003147   000037 115007                    CMPA    31,DL
        12 003150   003166 605000 12                 TPL     s:9795
        12 003151   202055 236100                    LDQ     TAB_IDX,,AUTO
        12 003152   000011 402007                    MPY     9,DL
        12 003153   000000 116003                    CMPQ    0,DU
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:201  
        12 003154   003156 605000 12                 TPL     s:9794+8
        12 003155   000044 036003                    ADLQ    36,DU
        12 003156   202052 470500                    LDP0    TAB$,,AUTO
        12 003157   003100 061506                    CSR     bolr='003'O
        12 003160   000000 000011                    BDSC    0,Q,PR0                  by=0,bit=0,n=9
        12 003161   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 003162   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003163   000001 136007                    SBLQ    1,DL
        12 003164   202054 116100                    CMPQ    EXPANDED_POS,,AUTO
        12 003165   003126 604400 12                 TMOZ    s:9789

     1213     9795    4                  IF TAB_IDX<31            /* A TAB STOP WAS FOUND               */

   9795 12 003166   202055 235100                    LDA     TAB_IDX,,AUTO
        12 003167   000037 115007                    CMPA    31,DL
        12 003170   003214 605000 12                 TPL     s:9803

     1214     9796    4                   THEN
     1215     9797    5                   DO;

     1216     9798    5                      TAB_TBL.IDX = TAB_TBL.IDX+1;

   9798 12 003171   202041 054100                    AOS     TAB_TBL,,AUTO

     1217     9799    5                      TAB_TBL.OFFSET(TAB_TBL.IDX) =

   9799 12 003172   202055 236100                    LDQ     TAB_IDX,,AUTO
        12 003173   000011 402007                    MPY     9,DL
        12 003174   000000 116003                    CMPQ    0,DU
        12 003175   003177 605000 12                 TPL     s:9799+5
        12 003176   000044 036003                    ADLQ    36,DU
        12 003177   202052 470500                    LDP0    TAB$,,AUTO
        12 003200   003100 061506                    CSR     bolr='003'O
        12 003201   000000 000011                    BDSC    0,Q,PR0                  by=0,bit=0,n=9
        12 003202   202234 000044                    BDSC    KEY1+64,,AUTO            by=0,bit=0,n=36
        12 003203   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003204   202056 136100                    SBLQ    CHAR_IDX,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:202  
        12 003205   000002 136007                    SBLQ    2,DL
        12 003206   202235 756100                    STQ     KEY1+65,,AUTO
        12 003207   202041 235100                    LDA     TAB_TBL,,AUTO
        12 003210   000105 101500                    MRL     fill='000'O
        12 003211   202235 000004                    ADSC9   KEY1+65,,AUTO            cn=0,n=4
        12 003212   202042 000001                    ADSC9   CHARS_TO_DUMP,A,AUTO     cn=0,n=1

     1218     9800    5                        TAB$ -> TAB$TBL(TAB_IDX) -2 - CHAR_IDX;
     1219     9801    5                      END;

   9801 12 003213   003221 710000 12                 TRA     s:9805

     1220     9802    4                   ELSE                    /* NO TAB STOPS LEFT, SINGLE SPACE    */
     1221     9803    4                     BUF_VECTOR.PTR$->CHR$ARY(CHAR_IDX)    = ' ';

   9803 12 003214   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 003215   202056 236100                    LDQ     CHAR_IDX,,AUTO
        12 003216   040106 100400                    MLR     fill='040'O
        12 003217   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 003220   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

     1222     9804    4                  END;

     1223     9805    3              END;

   9805 12 003221   202056 236100                    LDQ     CHAR_IDX,,AUTO
        12 003222   000001 036007                    ADLQ    1,DL
        12 003223   200032 116100                    CMPQ    REC_LEN,,AUTO
        12 003224   003076 604000 12                 TMI     s:9777

     1224     9806        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:203  
     1225     9807                                                /* We now have filled TAB_TBL with    */
     1226     9808                                                /* a list of the number of character  */
     1227     9809                                                /* positions to move the next piece   */
     1228     9810                                                /* of text to the right.              */
     1229     9811    2           IF REC_LEN+TAB_TBL.OFFSET(TAB_TBL.IDX)

   9811 12 003225   202041 235100                    LDA     TAB_TBL,,AUTO
        12 003226   000100 101505                    MRL     fill='000'O
        12 003227   202042 000001                    ADSC9   CHARS_TO_DUMP,A,AUTO     cn=0,n=1
        12 003230   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 003231   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003232   200032 036100                    ADLQ    REC_LEN,,AUTO
        12 003233   202235 756100                    STQ     KEY1+65,,AUTO
        12 003234   200025 236100                    LDQ     BUF_VECTOR,,AUTO
        12 003235   000020 772000                    QRL     16
        12 003236   000003 036007                    ADLQ    3,DL
        12 003237   202235 116100                    CMPQ    KEY1+65,,AUTO
        12 003240   003245 605000 12                 TPL     s:9815

     1230     9812    2             > (BUF_VECTOR.BOUND+3)
     1231     9813    2            THEN                           /* Expanded record will be too big    */
     1232     9814    2              CALL VPD$ENLARGE_BUF(0);     /* Enlarge the buffer                 */

   9814 12 003241   000002 630400 13                 EPPR0   2
        12 003242   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 003243   000000 701000 xent               TSX1    VPD$ENLARGE_BUF
        12 003244   000000 011000                    NOP     0

     1233     9815    2           I = REC_LEN-1;

   9815 12 003245   200032 235100                    LDA     REC_LEN,,AUTO
        12 003246   000001 135007                    SBLA    1,DL
        12 003247   202057 755100                    STA     I,,AUTO

     1234     9816                                                /* New record size = old + added      */
     1235     9817                                                /* blanks - replaces TABs             */
     1236     9818    2           REC_LEN = REC_LEN+TAB_TBL.OFFSET(TAB_TBL.IDX);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:204  

   9818 12 003250   202041 236100                    LDQ     TAB_TBL,,AUTO
        12 003251   000100 101506                    MRL     fill='000'O
        12 003252   202042 000001                    ADSC9   CHARS_TO_DUMP,Q,AUTO     cn=0,n=1
        12 003253   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 003254   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003255   200032 036100                    ADLQ    REC_LEN,,AUTO
        12 003256   200032 756100                    STQ     REC_LEN,,AUTO

     1237     9819    3           DO WHILE(I>=0);

   9819 12 003257   000000 115003                    CMPA    0,DU
        12 003260   003342 604000 12                 TMI     s:9838

     1238     9820    3              IF BUF_VECTOR.PTR$->CHR$ARY(I)=TAB_CHAR

   9820 12 003261   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 003262   202057 235100                    LDA     I,,AUTO
        12 003263   040000 106505                    CMPC    fill='040'O
        12 003264   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
        12 003265   000037 000001 13                 ADSC9   31                       cn=0,n=1
        12 003266   003317 601000 12                 TNZ     s:9830

     1239     9821    3               THEN
     1240     9822    4               DO;

     1241     9823    4                  SUB_LEN = TAB_TBL.OFFSET(TAB_TBL.IDX)

   9823 12 003267   202041 236100                    LDQ     TAB_TBL,,AUTO
        12 003270   000100 101506                    MRL     fill='000'O
        12 003271   202041 600001                    ADSC9   TAB_TBL,Q,AUTO           cn=3,n=1
        12 003272   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 003273   000100 101506                    MRL     fill='000'O
        12 003274   202042 000001                    ADSC9   CHARS_TO_DUMP,Q,AUTO     cn=0,n=1
        12 003275   202235 000004                    ADSC9   KEY1+65,,AUTO            cn=0,n=4
        12 003276   202235 236100                    LDQ     KEY1+65,,AUTO
        12 003277   202234 136100                    SBLQ    KEY1+64,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:205  
        12 003300   000001 036007                    ADLQ    1,DL
        12 003301   200033 756100                    STQ     SUB_LEN,,AUTO

     1242     9824    4                    -TAB_TBL.OFFSET(TAB_TBL.IDX-1) +1;
     1243     9825    4                  TAB_TBL.IDX = TAB_TBL.IDX-1;

   9825 12 003302   000001 336007                    LCQ     1,DL
        12 003303   202041 056100                    ASQ     TAB_TBL,,AUTO

     1244     9826    4                  PINCRC(BUF_VECTOR.PTR$,I+TAB_TBL.OFFSET(TAB_TBL.IDX))

   9826 12 003304   202041 235100                    LDA     TAB_TBL,,AUTO
        12 003305   000100 101505                    MRL     fill='000'O
        12 003306   202042 000001                    ADSC9   CHARS_TO_DUMP,A,AUTO     cn=0,n=1
        12 003307   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 003310   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003311   202057 036100                    ADLQ    I,,AUTO
        12 003312   200033 720100                    LXL0    SUB_LEN,,AUTO
        12 003313   040146 100400                    MLR     fill='040'O
        12 003314   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 003315   000000 000010                    ADSC9   0,Q,PR0                  cn=0,n=*X0

     1245     9827    4                    ->SUB$STR = ' ';
     1246     9828    4                  END;

   9828 12 003316   003337 710000 12                 TRA     s:9836

     1247     9829    3               ELSE
     1248     9830    3                 IF TAB_TBL.OFFSET(TAB_TBL.IDX) = 0

   9830 12 003317   202041 236100                    LDQ     TAB_TBL,,AUTO
        12 003320   000100 101506                    MRL     fill='000'O
        12 003321   202042 000001                    ADSC9   CHARS_TO_DUMP,Q,AUTO     cn=0,n=1
        12 003322   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 003323   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003324   000000 116003                    CMPQ    0,DU
        12 003325   003337 600000 12                 TZE     s:9836
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:206  

     1249     9831    3                  THEN                     /* No displacement                    */
     1250     9832    3                    ;                      /* Don't move anything                */
     1251     9833    3                  ELSE                     /* Move this character a little       */
     1252     9834    3                    BUF_VECTOR.PTR$->CHR$ARY(I+TAB_TBL.OFFSET(TAB_TBL.IDX))

   9834 12 003326   202041 236100                    LDQ     TAB_TBL,,AUTO
        12 003327   000100 101506                    MRL     fill='000'O
        12 003330   202042 000001                    ADSC9   CHARS_TO_DUMP,Q,AUTO     cn=0,n=1
        12 003331   202234 000004                    ADSC9   KEY1+64,,AUTO            cn=0,n=4
        12 003332   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003333   202057 036100                    ADLQ    I,,AUTO
        12 003334   040106 100505                    MLR     fill='040'O
        12 003335   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
        12 003336   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

     1253     9835    3                      = BUF_VECTOR.PTR$->CHR$ARY(I);
     1254     9836    3              I = I-1;

   9836 12 003337   000001 336007                    LCQ     1,DL
        12 003340   202057 056100                    ASQ     I,,AUTO

     1255     9837    3              END;

   9837 12 003341   003261 605000 12                 TPL     s:9820

     1256     9838    2   END TAB_EXPAND;

   9838 12 003342   202040 221300                    LDX1  ! DUMP_BUF+1024,,AUTO
        12 003343   000001 702211                    TSX2  ! 1,X1

     1257     9839        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:207  
     1258     9840    1   NO_DUMP_PROC: PROC;

   9840 12 003344   202040 741300       NO_DUMP_PROC STX1  ! DUMP_BUF+1024,,AUTO

     1259     9841        /*I* NAME: NO_DUMP_PROC
     1260     9842             PURPOSE: To finish processing the output record when the output is not
     1261     9843                      to be an octal or hexadecimal dump.
     1262     9844             CALL: CALL NO_DUMP_PROC;
     1263     9845             DESCRIPTION: This procedure formats a key and/or sequence number if
     1264     9846                          the KEYS output option was specified. This field is placed
     1265     9847                          as the first part of the output record unless the key
     1266     9848                          cannot be interpreted as an EDIT key. In that case,
     1267     9849                          the field is output first and then the record is output as
     1268     9850                          the next record. This procedure is only used for non-dump
     1269     9851                          type output.
     1270     9852        */
     1271     9853    2   DCL RAND_FLAG SBIN WORD;
     1272     9854    2           IF ICB.FLAVOR.GRANB

   9854 12 003345   000172 236000 xsym               LDQ     ICB+122
        12 003346   000200 316003                    CANQ    128,DU
        12 003347   003361 600000 12                 TZE     s:9859
        12 003350   000100 100400                    MLR     fill='000'O
        12 003351   000000 000010 xsym               ADSC9   CMD_MASK                 cn=0,n=8
        12 003352   202234 000010                    ADSC9   KEY1+64,,AUTO            cn=0,n=8
        12 003353   202234 237100                    LDAQ    KEY1+64,,AUTO
        12 003354   000004 377000 13                 ANAQ    4
        12 003355   003361 601000 12                 TNZ     s:9859

     1273     9855    2             AND NOT(CMD_MASK & '000600'O) /* AND NOT A LIST                     */
     1274     9856    2            THEN
     1275     9857    2              RAND_FLAG = 1;

   9857 12 003356   000001 235007                    LDA     1,DL
        12 003357   202041 755100                    STA     RAND_FLAG,,AUTO
        12 003360   003362 710000 12                 TRA     s:9860

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:208  
     1276     9858    2            ELSE
     1277     9859    2              RAND_FLAG = 0;

   9859 12 003361   202041 450100                    STZ     RAND_FLAG,,AUTO

     1278     9860    2           OUT_BUF_VECTOR = BUF_VECTOR;

   9860 12 003362   000100 100500                    MLR     fill='000'O
        12 003363   200025 000010                    ADSC9   BUF_VECTOR,,AUTO         cn=0,n=8
        12 003364   200030 000010                    ADSC9   OUT_BUF_VECTOR,,AUTO     cn=0,n=8

     1279     9861    2           IF OCB.KEYS = 0 THEN            /* No KEYS desired                    */

   9861 12 003365   000026 235000 xsym               LDA     OCB+22
        12 003366   003377 601000 12                 TNZ     s:9869

     1280     9862    3            DO;

     1281     9863    3               CALL WRITE_OUT_BUF (REC_LEN,RAND_FLAG);

   9863 12 003367   202041 630500                    EPPR0   RAND_FLAG,,AUTO
        12 003370   202124 450500                    STP0    @REC_LEN_+1,,AUTO
        12 003371   200032 631500                    EPPR1   REC_LEN,,AUTO
        12 003372   202123 451500                    STP1    RECLEN_BUF+1,,AUTO
        12 003373   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 003374   000000 011000                    NOP     0

     1282     9864    3               RETURN;

   9864 12 003375   202040 221300                    LDX1  ! DUMP_BUF+1024,,AUTO
        12 003376   000001 702211                    TSX2  ! 1,X1

     1283     9865    3               END;
     1284     9866        /**/
     1285     9867        /*  Gotta format KEYS  */
     1286     9868        /**/
     1287     9869    2           START_IDX = 0;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:209  

   9869 12 003377   200037 450100                    STZ     START_IDX,,AUTO

     1288     9870    2           CALL CONSTRUCT_KEY(DUMP_BUF,START_IDX,SIZEC(DUMP_BUF));

   9870 12 003400   000016 236000 13                 LDQ     14
        12 003401   202121 756100                    STQ     @BUF_SIZE,,AUTO
        12 003402   200037 630500                    EPPR0   START_IDX,,AUTO
        12 003403   202120 450500                    STP0    @START_IDX,,AUTO
        12 003404   200040 631500                    EPPR1   DUMP_BUF,,AUTO
        12 003405   202117 451500                    STP1    @DUMP_BUF,,AUTO
        12 003406   002004 701000 12                 TSX1    CONSTRUCT_KEY
        12 003407   000000 011000                    NOP     0

     1289     9871    2           IF KEYOPTS.ONDATA = 1 THEN      /* NOT on the data record             */

   9871 12 003410   200020 235100                    LDA     KEYOPTS+3,,AUTO
        12 003411   000001 115007                    CMPA    1,DL
        12 003412   003440 601000 12                 TNZ     s:9880

     1290     9872    3            DO;

     1291     9873    3               OUT_BUF_VECTOR = VECTOR(DUMP_BUF);

   9873 12 003413   000000 235000 13                 LDA     0
        12 003414   202234 452500                    STP2    KEY1+64,,AUTO
        12 003415   202234 236100                    LDQ     KEY1+64,,AUTO
        12 003416   000040 036003                    ADLQ    32,DU
        12 003417   200030 757100                    STAQ    OUT_BUF_VECTOR,,AUTO

     1292     9874    3               CALL WRITE_OUT_BUF(START_IDX,0);

   9874 12 003420   000002 236000 13                 LDQ     2
        12 003421   202124 756100                    STQ     @REC_LEN_+1,,AUTO
        12 003422   200037 630500                    EPPR0   START_IDX,,AUTO
        12 003423   202123 450500                    STP0    RECLEN_BUF+1,,AUTO
        12 003424   003541 701000 12                 TSX1    WRITE_OUT_BUF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:210  
        12 003425   000000 011000                    NOP     0

     1293     9875    3               OUT_BUF_VECTOR = BUF_VECTOR;

   9875 12 003426   000100 100500                    MLR     fill='000'O
        12 003427   200025 000010                    ADSC9   BUF_VECTOR,,AUTO         cn=0,n=8
        12 003430   200030 000010                    ADSC9   OUT_BUF_VECTOR,,AUTO     cn=0,n=8

     1294     9876    3               CALL WRITE_OUT_BUF (REC_LEN,RAND_FLAG);

   9876 12 003431   202041 630500                    EPPR0   RAND_FLAG,,AUTO
        12 003432   202124 450500                    STP0    @REC_LEN_+1,,AUTO
        12 003433   200032 631500                    EPPR1   REC_LEN,,AUTO
        12 003434   202123 451500                    STP1    RECLEN_BUF+1,,AUTO
        12 003435   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 003436   000000 011000                    NOP     0

     1295     9877    3               END;

   9877 12 003437   003537 710000 12                 TRA     s:9903

     1296     9878    2            ELSE                           /* ON the data record                 */
     1297     9879    3            DO;

     1298     9880    3               IF START_IDX < (ACTUAL_IN_BUF_VECTOR.BOUND - BUF_VECTOR.BOUND)

   9880 12 003440   200025 236100                    LDQ     BUF_VECTOR,,AUTO
        12 003441   000020 772000                    QRL     16
        12 003442   202234 756100                    STQ     KEY1+64,,AUTO
        12 003443   000000 236000 xsym               LDQ     ACTUAL_IN_BUF_VECTOR
        12 003444   000020 772000                    QRL     16
        12 003445   202234 136100                    SBLQ    KEY1+64,,AUTO
        12 003446   200037 116100                    CMPQ    START_IDX,,AUTO
        12 003447   003455 604400 12                 TMOZ    s:9885

     1299     9881    3                THEN                       /* There is slack room                */
     1300     9882    3                  OUT_BUF_VECTOR.PTR$ = PINCRC(OUT_BUF_VECTOR.PTR$,-START_IDX);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:211  

   9882 12 003450   200037 336100                    LCQ     START_IDX,,AUTO
        12 003451   000020 736000                    QLS     16
        12 003452   200031 036100                    ADLQ    OUT_BUF_VECTOR+1,,AUTO
        12 003453   200031 756100                    STQ     OUT_BUF_VECTOR+1,,AUTO
        12 003454   003510 710000 12                 TRA     s:9893

     1301     9883    3                ELSE                       /* No slack!                          */
     1302     9884    4                DO;

     1303     9885    4                   IF REC_LEN + START_IDX > (BUF_VECTOR.BOUND+3)

   9885 12 003455   200032 236100                    LDQ     REC_LEN,,AUTO
        12 003456   200037 036100                    ADLQ    START_IDX,,AUTO
        12 003457   202234 756100                    STQ     KEY1+64,,AUTO
        12 003460   200025 236100                    LDQ     BUF_VECTOR,,AUTO
        12 003461   000020 772000                    QRL     16
        12 003462   000003 036007                    ADLQ    3,DL
        12 003463   202234 116100                    CMPQ    KEY1+64,,AUTO
        12 003464   003471 605000 12                 TPL     s:9888

     1304     9886    4                    THEN                   /* KEYS will make it too big          */
     1305     9887    4                      CALL VPD$ENLARGE_BUF(0); /* Enlarge the buffer             */

   9887 12 003465   000002 630400 13                 EPPR0   2
        12 003466   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 003467   000000 701000 xent               TSX1    VPD$ENLARGE_BUF
        12 003470   000000 011000                    NOP     0

     1306     9888    5                   DO I = REC_LEN-1 DOWNTO 0;

   9888 12 003471   200032 235100                    LDA     REC_LEN,,AUTO
        12 003472   000001 135007                    SBLA    1,DL
        12 003473   200036 755100                    STA     I,,AUTO
        12 003474   003506 710000 12                 TRA     s:9891+2

     1307     9889                             /*N* Better to call a BMAP routine for this.             */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:212  
     1308     9890    5                      BUF_VECTOR.PTR$ -> CHR$ARY(I+START_IDX) = BUF_VECTOR.PTR$ ->
              9890                               CHR$ARY(I);

   9890 12 003475   200036 236100                    LDQ     I,,AUTO
        12 003476   200037 036100                    ADLQ    START_IDX,,AUTO
        12 003477   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 003500   200036 235100                    LDA     I,,AUTO
        12 003501   040106 100505                    MLR     fill='040'O
        12 003502   000000 000001                    ADSC9   0,A,PR0                  cn=0,n=1
        12 003503   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

     1309     9891    5                      END;

   9891 12 003504   000001 336007                    LCQ     1,DL
        12 003505   200036 056100                    ASQ     I,,AUTO
        12 003506   200036 235100                    LDA     I,,AUTO
        12 003507   003475 605000 12                 TPL     s:9890

     1310     9892    4                   END;

     1311     9893    3               REC_LEN = REC_LEN + START_IDX;

   9893 12 003510   200032 236100                    LDQ     REC_LEN,,AUTO
        12 003511   200037 036100                    ADLQ    START_IDX,,AUTO
        12 003512   200032 756100                    STQ     REC_LEN,,AUTO

     1312     9894    3               BUF_VECTOR.BOUND = BUF_VECTOR.BOUND + START_IDX;

   9894 12 003513   200025 236100                    LDQ     BUF_VECTOR,,AUTO
        12 003514   000020 772000                    QRL     16
        12 003515   200037 036100                    ADLQ    START_IDX,,AUTO
        12 003516   000020 736000                    QLS     16
        12 003517   200025 676100                    ERQ     BUF_VECTOR,,AUTO
        12 003520   000034 376000 xsym               ANQ     B_VECTNIL+28
        12 003521   200025 656100                    ERSQ    BUF_VECTOR,,AUTO

     1313     9895    3               CALL INSERT(OUT_BUF_VECTOR.PTR$ -> IN$REC,
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:213  

   9895 12 003522   010000 220003                    LDX0    4096,DU
        12 003523   200031 470500                    LDP0    OUT_BUF_VECTOR+1,,AUTO
        12 003524   200037 721100                    LXL1    START_IDX,,AUTO
        12 003525   040140 100540                    MLR     fill='040'O
        12 003526   200040 000010                    ADSC9   DUMP_BUF,,AUTO           cn=0,n=*X0
        12 003527   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1

     1314     9896    3                 0,
     1315     9897    3                 START_IDX,
     1316     9898    3                 DUMP_BUF);
     1317     9899    3               RAND_FLAG = 0;

   9899 12 003530   202041 450100                    STZ     RAND_FLAG,,AUTO

     1318     9900    3               CALL WRITE_OUT_BUF (REC_LEN,RAND_FLAG);

   9900 12 003531   202041 631500                    EPPR1   RAND_FLAG,,AUTO
        12 003532   202124 451500                    STP1    @REC_LEN_+1,,AUTO
        12 003533   200032 633500                    EPPR3   REC_LEN,,AUTO
        12 003534   202123 453500                    STP3    RECLEN_BUF+1,,AUTO
        12 003535   003541 701000 12                 TSX1    WRITE_OUT_BUF
        12 003536   000000 011000                    NOP     0

     1319     9901    3               END;

     1320     9902
     1321     9903    2           RETURN;

   9903 12 003537   202040 221300                    LDX1  ! DUMP_BUF+1024,,AUTO
        12 003540   000001 702211                    TSX2  ! 1,X1

     1322     9904        /**/
     1323     9905    2   END NO_DUMP_PROC;
     1324     9906        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:214  
     1325     9907    1   WRITE_OUT_BUF: PROC(REC_LEN_,RAND_FLAG);

   9907 12 003541   202122 741300       WRITE_OUT_B* STX1  ! RECLEN_BUF,,AUTO

     1326     9908        /*I* NAME: WRITE_OUT_BUF
     1327     9909             PURPOSE: To process the LN output option and output the record.
     1328     9910             CALL: CALL WRITE_OUT_BUF(REC_LEN,RAND_FLAG);
     1329     9911             DESCRIPTION: This procedure takes the record and causes it to
     1330     9912                          be output to the destination file/device/whatever.
     1331     9913
     1332     9914                          The data is located by:
     1333     9915                            OUT_BUF_VECTOR.PTR$ = pointer to beginning
     1334     9916                            REC_LEN_ = length, in characters
     1335     9917
     1336     9918                          If the LN output option was specified, an EDIT key is
     1337     9919                          formed, checked for size, and used as the record's key.
     1338     9920
     1339     9921                          If RAND_FLAG=1, the input record's first 4 bytes are
     1340     9922                          actually the input record's time stamp and may be
     1341     9923                          written over as such.
     1342     9924        */
     1343     9925        /**/
     1344     9926        /*  PARAMETERS  */
     1345     9927        /**/
     1346     9928    2   DCL REC_LEN_ SBIN WORD PARAM;
     1347     9929    2   DCL RAND_FLAG SBIN WORD;
     1348     9930        /**/
     1349     9931        /*  LOCAL STATIC  */
     1350     9932        /**/
     1351     9933        %FPT_EXTEND(FPTN = FPT_EXTEND,STCLASS = STATIC);
     1352     9947        /**/
     1353     9948        /*  LOCAL AUTO  */
     1354     9949        /**/
     1355     9950    2   DCL DATA_CHAR_LEFT SBIN WORD;
     1356     9951    2   DCL REC_LEN SBIN WORD;
     1357     9952    2   DCL CHUNK_SIZE SBIN WORD;
     1358     9953    2   DCL VFC SBIN;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:215  
     1359     9954    2   DCL MOVE_TO$ PTR;
     1360     9955        %NK$VFC(NAME = WRAP_VFC_,STCLASS = AUTO);
     1361     9973    2   DCL WRAP_VFC REDEF WRAP_VFC_ CHAR(1);
     1362     9974        %NK$VFC(NAME = FINAL_WRAP_VFC_,STCLASS = AUTO);
     1363     9992    2   DCL FINAL_WRAP_VFC REDEF FINAL_WRAP_VFC_ CHAR(1);
     1364     9993        /**/
     1365     9994        /*  BASED  */
     1366     9995        /**/
     1367     9996    2   DCL BUF$ARY(0:4095) CHAR(1) UNAL BASED(FPT_WRITE_OUT.BUF_.BUF$);
     1368     9997    2   DCL BUF$FER REDEF BUF$ARY CHAR(4096) UNAL;
     1369     9998    2   DCL MOVE_TO CHAR(REC_LEN) BASED(MOVE_TO$);
     1370     9999    2   DCL MOVE_FROM CHAR(REC_LEN) BASED(FPT_WRITE_OUT.BUF_.BUF$);
     1371    10000    2   DCL 1 PT$R BASED,
     1372    10001    2         2 CSTART UBIN(20) UNAL,
     1373    10002    2         2 * BIT(16);
     1374    10003        /**/
     1375    10004        /*  Entry Points  */
     1376    10005        /**/
     1377    10006    2   DCL XSA$WRITE ENTRY(2) ALTRET;
     1378    10007    2   DCL VPD$CHECK_VOL ENTRY(5);
     1379    10008        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:216  
     1380    10009        /**/
     1381    10010        /*  Move select params to local, in case they need modification.              */
     1382    10011        /**/
     1383    10012    2           REC_LEN = REC_LEN_;

  10012 12 003542   202123 470500                    LDP0    @REC_LEN_,,AUTO
        12 003543   000000 235100                    LDA     0,,PR0
        12 003544   202126 755100                    STA     REC_LEN,,AUTO

     1384    10013        /**/
     1385    10014        /*  Insure VFC is correct.                                                    */
     1386    10015        /**/
     1387    10016    3           DO CASE(OCB.VFC_USE);

  10016 12 003545   000023 236000 xsym               LDQ     OCB+19
        12 003546   000003 116007                    CMPQ    3,DL
        12 003547   003551 602006 12                 TNC     s:10016+4,QL
        12 003550   003610 710000 12                 TRA     s:10040
        12 003551   003610 710000 12                 TRA     s:10040
        12 003552   003554 710000 12                 TRA     s:10018
        12 003553   003572 710000 12                 TRA     s:10028

     1388    10017    3            CASE(1);                       /* Use default if necessary           */

     1389    10018    3              IF NOT FPT_WRITE_OUT.V.DVBYTE.VFC#

  10018 12 003554   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 003555   100000 316003                    CANQ    32768,DU
        12 003556   003610 601000 12                 TNZ     s:10040

     1390    10019    3               THEN                        /* Must append this as default        */
     1391    10020    4               DO;

  10007 12 003557                       INSERT_DEFA* null
     1392    10021    4   INSERT_DEFAULT: ;
     1393    10022    4                  FPT_WRITE_OUT.V.DVBYTE.VFC# = '1'B;

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:217  
  10022 12 003557   100000 236003                    LDQ     32768,DU
        12 003560   000013 256000 xsym               ORSQ    FPT_WRITE_OUT+11

     1394    10023    4                  REC_LEN = REC_LEN +1;

  10023 12 003561   202126 054100                    AOS     REC_LEN,,AUTO

     1395    10024    4                  OUT_BUF_VECTOR.PTR$ = PINCRC(OUT_BUF_VECTOR.PTR$,-1);

  10024 12 003562   200031 236100                    LDQ     OUT_BUF_VECTOR+1,,AUTO
        12 003563   000034 036000 xsym               ADLQ    B_VECTNIL+28
        12 003564   200031 756100                    STQ     OUT_BUF_VECTOR+1,,AUTO

     1396    10025    4                  OUT_BUF_VECTOR.PTR$ -> CHR$ARY(0) = OCB.VFC_CHAR;

  10025 12 003565   200031 470500                    LDP0    OUT_BUF_VECTOR+1,,AUTO
        12 003566   040100 100400                    MLR     fill='040'O
        12 003567   000022 000001 xsym               ADSC9   OCB+18                   cn=0,n=1
        12 003570   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     1397    10026    4                  END;

  10026 12 003571   003610 710000 12                 TRA     s:10040

     1398    10027    3            CASE(2);                       /* Use specified VFC regardless       */

     1399    10028    3              IF FPT_WRITE_OUT.V.DVBYTE.VFC#

  10028 12 003572   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 003573   100000 316003                    CANQ    32768,DU
        12 003574   003557 600000 12                 TZE     INSERT_DEFAULT

     1400    10029    3               THEN                        /* Must REPLACE existing VFC          */
     1401    10030    4               DO;

     1402    10031    4                  REC_LEN = MAXIMUM(REC_LEN,1); /* NIL record had VFC not room   */

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:218  
  10031 12 003575   000001 236007                    LDQ     1,DL
        12 003576   003602 604000 12                 TMI     s:10031+5
        12 003577   202126 116100                    CMPQ    REC_LEN,,AUTO
        12 003600   003602 605000 12                 TPL     s:10031+5
        12 003601   202126 236100                    LDQ     REC_LEN,,AUTO
        12 003602   202126 756100                    STQ     REC_LEN,,AUTO

     1403    10032    4                  OUT_BUF_VECTOR.PTR$ -> CHR$ARY(0) = OCB.VFC_CHAR;

  10032 12 003603   200031 471500                    LDP1    OUT_BUF_VECTOR+1,,AUTO
        12 003604   040100 100400                    MLR     fill='040'O
        12 003605   000022 000001 xsym               ADSC9   OCB+18                   cn=0,n=1
        12 003606   100000 000001                    ADSC9   0,,PR1                   cn=0,n=1

     1404    10033    4                  END;

  10033 12 003607   003610 710000 12                 TRA     s:10040

     1405    10034    3               ELSE
     1406    10035    3                 GOTO INSERT_DEFAULT;
     1407    10036    3            END;

     1408    10037        /**/
     1409    10038        /*  Adjust record length as necessary.                                        */
     1410    10039        /**/
     1411    10040    2           IF REC_LEN=0

  10040 12 003610   202126 235100                    LDA     REC_LEN,,AUTO
        12 003611   003615 601000 12                 TNZ     s:10045

     1412    10041    2            THEN
     1413    10042    2              FPT_WRITE_OUT.BUF_ = VECTOR(NIL);

  10042 12 003612   000010 237000 13                 LDAQ    8
        12 003613   000004 757000 xsym               STAQ    FPT_WRITE_OUT+4
        12 003614   003705 710000 12                 TRA     s:10078

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:219  
     1414    10043    2            ELSE
     1415    10044    3            DO;

     1416    10045    3               FPT_WRITE_OUT.BUF_   = OUT_BUF_VECTOR;

  10045 12 003615   200030 237100                    LDAQ    OUT_BUF_VECTOR,,AUTO
        12 003616   000004 757000 xsym               STAQ    FPT_WRITE_OUT+4

     1417    10046    3               IF OCB.FLAVOR.GRANB

  10046 12 003617   000256 236000 xsym               LDQ     OCB+174
        12 003620   100000 316003                    CANQ    32768,DU
        12 003621   003651 600000 12                 TZE     s:10061

     1418    10047    3                THEN
     1419    10048    4                DO;

     1420    10049    4                   FPT_WRITE_OUT.BUF_.BOUND = 4095;

  10049 12 003622   000004 236000 xsym               LDQ     FPT_WRITE_OUT+4
        12 003623   177777 376007                    ANQ     65535,DL
        12 003624   000040 276000 13                 ORQ     32
        12 003625   000004 756000 xsym               STQ     FPT_WRITE_OUT+4

     1421    10050    4                   IF REC_LEN<4096

  10050 12 003626   202126 235100                    LDA     REC_LEN,,AUTO
        12 003627   010000 115007                    CMPA    4096,DL
        12 003630   003642 605000 12                 TPL     s:10056

     1422    10051    4                    THEN
     1423    10052    5                    DO;

     1424    10053    5                       SUB_LEN = 4096 - REC_LEN;

  10053 12 003631   000027 675000 xsym               ERA     B_VECTNIL+23
        12 003632   010001 035007                    ADLA    4097,DL
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:220  
        12 003633   200033 755100                    STA     SUB_LEN,,AUTO

     1425    10054    5                       PINCRC(FPT_WRITE_OUT.BUF_.BUF$,REC_LEN)->SUB$STR = ' ';

  10054 12 003634   000005 470400 xsym               LDP0    FPT_WRITE_OUT+5
        12 003635   000000 620005                    EAX0    0,AL
        12 003636   202126 235100                    LDA     REC_LEN,,AUTO
        12 003637   040145 100400                    MLR     fill='040'O
        12 003640   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 003641   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0

     1426    10055    5                       END;

     1427    10056    4                   IF RAND_FLAG=0

  10056 12 003642   202124 470500                    LDP0    @RAND_FLAG,,AUTO
        12 003643   000000 235100                    LDA     0,,PR0
        12 003644   003705 601000 12                 TNZ     s:10078

     1428    10057    4                    THEN
     1429    10058    4                      FPT_WRITE_OUT.BUF_.BUF$ = PINCRW(FPT_WRITE_OUT.BUF_.BUF$,-1);

  10058 12 003645   000005 236000 xsym               LDQ     FPT_WRITE_OUT+5
        12 003646   777777 036003                    ADLQ    -1,DU
        12 003647   000005 756000 xsym               STQ     FPT_WRITE_OUT+5

     1430    10059    4                   END;

  10059 12 003650   003705 710000 12                 TRA     s:10078

     1431    10060    4                ELSE DO;

     1432    10061    4                   IF OCB.FLAVOR.FORMATTED

  10061 12 003651   200000 316003                    CANQ    65536,DU
        12 003652   003662 600000 12                 TZE     s:10066
        12 003653   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:221  
        12 003654   100000 316003                    CANQ    32768,DU
        12 003655   003662 600000 12                 TZE     s:10066
        12 003656   000026 235000 xsym               LDA     OCB+22
        12 003657   000001 115007                    CMPA    1,DL
        12 003660   003662 600000 12                 TZE     s:10066

     1433    10062    4                     AND FPT_WRITE_OUT.V.DVBYTE.VFC#
     1434    10063    4                     AND OCB.KEYS ~= 1
     1435    10064    4                    THEN
     1436    10065    4                      REC_LEN = REC_LEN + 1;

  10065 12 003661   202126 054100                    AOS     REC_LEN,,AUTO

     1437    10066    4                   SUB_LEN = 4 - MOD (REC_LEN,4);

  10066 12 003662   202126 236100                    LDQ     REC_LEN,,AUTO
        12 003663   000004 506007                    DIV     4,DL
        12 003664   000027 675000 xsym               ERA     B_VECTNIL+23
        12 003665   000005 035007                    ADLA    5,DL
        12 003666   200033 755100                    STA     SUB_LEN,,AUTO

     1438    10067        /* Pads out the bytes after the last character up to a full word. */
     1439    10068    4                   IF SUB_LEN<4

  10068 12 003667   000004 115007                    CMPA    4,DL
        12 003670   003677 605000 12                 TPL     s:10071

     1440    10069    4                    THEN
     1441    10070    4                      PINCRC(FPT_WRITE_OUT.BUF_.BUF$,REC_LEN)->SUB$STR = ' ';

  10070 12 003671   000005 470400 xsym               LDP0    FPT_WRITE_OUT+5
        12 003672   000000 620005                    EAX0    0,AL
        12 003673   202126 235100                    LDA     REC_LEN,,AUTO
        12 003674   040145 100400                    MLR     fill='040'O
        12 003675   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 003676   000000 000010                    ADSC9   0,A,PR0                  cn=0,n=*X0

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:222  
     1442    10071    4                   FPT_WRITE_OUT.BUF_.BOUND = REC_LEN-1;

  10071 12 003677   202126 236100                    LDQ     REC_LEN,,AUTO
        12 003700   000001 136007                    SBLQ    1,DL
        12 003701   000020 736000                    QLS     16
        12 003702   000004 676000 xsym               ERQ     FPT_WRITE_OUT+4
        12 003703   000034 376000 xsym               ANQ     B_VECTNIL+28
        12 003704   000004 656000 xsym               ERSQ    FPT_WRITE_OUT+4

     1443    10072    4                   END;

     1444    10073    3               END;

     1445    10074        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:223  
     1446    10075        /**/
     1447    10076        /*  Check for options explicitly specified.  */
     1448    10077        /**/
     1449    10078    2           IF FPT_WRITE_OUT.V.DVBYTE.VFC#

  10078 12 003705   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 003706   100000 316003                    CANQ    32768,DU
        12 003707   003713 600000 12                 TZE     s:10082

     1450    10079    2            THEN
     1451    10080    2              VFC = 1;

  10080 12 003710   000001 235007                    LDA     1,DL
        12 003711   202130 755100                    STA     VFC,,AUTO
        12 003712   003714 710000 12                 TRA     s:10083

     1452    10081    2            ELSE
     1453    10082    2              VFC = 0;

  10082 12 003713   202130 450100                    STZ     VFC,,AUTO

     1454    10083    2           IF OCB.WRAP = 1

  10083 12 003714   000260 235000 xsym               LDA     OCB+176
        12 003715   000001 115007                    CMPA    1,DL
        12 003716   003755 600000 12                 TZE     NO_WRAP

     1455    10084    2            THEN                           /* NWRAP specified                    */
     1456    10085    2              GOTO NO_WRAP;
     1457    10086    2           IF OCB.WRAP = 2 OR OCB.WRAP = 3

  10086 12 003717   000002 115007                    CMPA    2,DL
        12 003720   003743 600000 12                 TZE     WRAP_ALLOWED
        12 003721   000003 115007                    CMPA    3,DL
        12 003722   003743 600000 12                 TZE     WRAP_ALLOWED

     1458    10087    2            THEN                           /* Some type of WRAP specified        */
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:224  
     1459    10088    2              GOTO WRAP_ALLOWED;
     1460    10089        /**/
     1461    10090        /*  Test default WRAPping criteria  */
     1462    10091        /**/
     1463    10092    2           IF ~OCB.DCBPTR$->F$DCB.DDEV.IC  /* IF not terminal                    */

  10092 12 003723   000001 470400 xsym               LDP0    OCB+1
        12 003724   000004 236100                    LDQ     4,,PR0
        12 003725   000024 736000                    QLS     20
        12 003726   400000 376003                    ANQ     -131072,DU
        12 003727   400000 676003                    ERQ     -131072,DU
        12 003730   003755 600000 12                 TZE     NO_WRAP
        12 003731   000256 236000 xsym               LDQ     OCB+174
        12 003732   000003 736000                    QLS     3
        12 003733   400000 376003                    ANQ     -131072,DU
        12 003734   400000 676003                    ERQ     -131072,DU
        12 003735   003755 600000 12                 TZE     NO_WRAP
        12 003736   000013 236000 xsym               LDQ     FPT_WRITE_OUT+11
        12 003737   040000 316003                    CANQ    16384,DU
        12 003740   003755 601000 12                 TNZ     NO_WRAP
        12 003741   020000 316003                    CANQ    8192,DU
        12 003742   003755 601000 12                 TNZ     NO_WRAP

     1464    10093    2             AND ~OCB.FLAVOR.JE            /* AND not JE/JF                      */
     1465    10094    2             AND FPT_WRITE_OUT.V.DVBYTE.BIN# = %NO# /* Don't try to wrap BINary  */
     1466    10095    2             AND FPT_WRITE_OUT.V.DVBYTE.TRANS# = %NO# /* Don't try to wrap TRANS */
     1467    10096    2            THEN
     1468    10097    2   WRAP_ALLOWED: IF OUTPUT_WIDTH > 0       /* IF WIDTH makes sense               */

  10097 12 003743   000000 235000 xsym  WRAP_ALLOWED LDA     OUTPUT_WIDTH
        12 003744   003755 604400 12                 TMOZ    NO_WRAP
        12 003745   000004 236000 xsym               LDQ     FPT_WRITE_OUT+4
        12 003746   000020 772000                    QRL     16
        12 003747   202130 136100                    SBLQ    VFC,,AUTO
        12 003750   000000 116000 xsym               CMPQ    OUTPUT_WIDTH
        12 003751   003755 604000 12                 TMI     NO_WRAP

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:225  
     1469    10098    2                AND FPT_WRITE_OUT.BUF_.BOUND +1 - VFC > OUTPUT_WIDTH /* Excess   */
     1470    10099    2               THEN                        /* Do the WRAPping                    */
     1471    10100    2                 CALL PERFORM_WRAPPING ALTRET(MONERR);

  10100 12 003752   004223 701000 12                 TSX1    PERFORM_WRAPPING
        12 003753   004002 702000 12                 TSX2    MONERR
        12 003754   003761 710000 12                 TRA     WROTE_OK

     1472    10101    2               ELSE                        /* WRAPping OK but not needed         */
     1473    10102    2                 GOTO NO_WRAP;
     1474    10103    2            ELSE                           /* Don't wrap the record              */
     1475    10104    3   NO_WRAP: DO;

  10104 12 003755                       NO_WRAP      null
     1476    10105    3               CALL SET_OUTPUT_KEY;

  10105 12 003755   004165 701000 12                 TSX1    SET_OUTPUT_KEY
        12 003756   000000 011000                    NOP     0

     1477    10106    3               CALL WRITE ALTRET(MONERR);

  10106 12 003757   004415 701000 12                 TSX1    WRITE
        12 003760   004002 702000 12                 TSX2    MONERR

     1478    10107    3               END;

     1479    10108    2   WROTE_OK:
     1480    10109    2           IF OCB.DEV_MASK & '006'O

  10109 12 003761   000255 236000 xsym  WROTE_OK     LDQ     OCB+173
        12 003762   777000 376003                    ANQ     -512,DU
        12 003763   006000 376003                    ANQ     3072,DU
        12 003764   004000 600000 12                 TZE     s:10112

     1481    10110    2            THEN                           /* Tapes are involved                 */
     1482    10111    2              CALL VPD$CHECK_VOL(OUT_SN,0,OCB.DCBNM,,1); /* Check VOL transit'n  */

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:226  
  10111 12 003765   000022 236000 13                 LDQ     18
        12 003766   202240 756100                    STQ     KEY1+68,,AUTO
        12 003767   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 003770   000041 235000 13                 LDA     33
        12 003771   202236 757100                    STAQ    KEY1+66,,AUTO
        12 003772   000042 237000 13                 LDAQ    34
        12 003773   202234 757100                    STAQ    KEY1+64,,AUTO
        12 003774   202234 630500                    EPPR0   KEY1+64,,AUTO
        12 003775   000023 631400 xsym               EPPR1   B_VECTNIL+19
        12 003776   000000 701000 xent               TSX1    VPD$CHECK_VOL
        12 003777   000000 011000                    NOP     0

     1483    10112    2           RETURN;

  10112 12 004000   202122 221300                    LDX1  ! RECLEN_BUF,,AUTO
        12 004001   000001 702211                    TSX2  ! 1,X1

  10109 12 004002                       MONERR       null
     1484    10113        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:227  
     1485    10114    2   MONERR: ;                               /* READ ALTRET                        */
     1486    10115    2           IF OUTPUT_ERR.ERR# = %E$BADVECT1

  10115 12 004002   000000 236000 xsym               LDQ     OUTPUT_ERR
        12 004003   377770 376007                    ANQ     131064,DL
        12 004004   006450 116007                    CMPQ    3368,DL
        12 004005   004010 600000 12                 TZE     s:10118
        12 004006   000770 116007                    CMPQ    504,DL
        12 004007   004014 601000 12                 TNZ     s:10123

     1487    10116    2             OR OUTPUT_ERR.ERR# = %E$BADKEY
     1488    10117    2            THEN
     1489    10118    2              CALL VPL$ERR_PROC(3,20,'07'O);

  10118 12 004010   000046 630400 13                 EPPR0   38
        12 004011   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 004012   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 004013   000000 011000                    NOP     0

     1490    10119        /*E* ERROR:   VPG-00020
     1491    10120             MESSAGE: Keys are required but were not specified.
     1492    10121            MESSAGE1: Keys must be specified for this operation - try the LN output option.
     1493    10122        */
     1494    10123    2           IF OUTPUT_ERR.ERR# = %E$INVVFC

  10123 12 004014   000000 236000 xsym               LDQ     OUTPUT_ERR
        12 004015   377770 376007                    ANQ     131064,DL
        12 004016   014140 116007                    CMPQ    6240,DL
        12 004017   004054 601000 12                 TNZ     s:10139

     1495    10124    2            THEN
     1496    10125    3            DO;

     1497    10126    3               VFC_TEXTC.STRING = BUF_VECTOR.PTR$->ONE_BASED_CHAR;

  10126 12 004020   200026 470500                    LDP0    BUF_VECTOR+1,,AUTO
        12 004021   040000 100500                    MLR     fill='040'O
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:228  
        12 004022   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 004023   000030 200001 10                 ADSC9   VFC_TEXTC                cn=1,n=1

     1498    10127    3               VFC_TEXTC.LEN = 1;

  10127 12 004024   001000 236003                    LDQ     512,DU
        12 004025   000030 552040 10                 STBQ    VFC_TEXTC,'40'O

     1499    10128    3               CALL VPE$FMT_ABORT(30,'07'O,M$EI#,VECTOR(VFC_TEXTC));

  10128 12 004026   000055 630400 13                 EPPR0   45
        12 004027   000022 631400 xsym               EPPR1   B_VECTNIL+18
        12 004030   000000 701000 xent               TSX1    VPE$FMT_ABORT
        12 004031   000000 011000                    NOP     0

     1500    10129        /*E*     ERROR: VPG-00030
     1501    10130               MESSAGE: aVFC character '%U2' is bad at %U1 (%UF).
     1502    10131        */
     1503    10132    3               SUBSTR(ERR_BUF,0,1) = %VFC_TRANSITION1;

  10132 12 004032   037000 236003                    LDQ     15872,DU
        12 004033   000000 552040 xsym               STBQ    ERR_BUF,'40'O

     1504    10133    3               FPT_WRITE_UC.BUF_ = VECTOR(SUBSTR(ERR_BUF,0,ERR_LEN));

  10133 12 004034   000000 235000 xsym               LDA     ERR_LEN
        12 004035   000020 735000                    ALS     16
        12 004036   000140 135007                    SBLA    96,DL
        12 004037   000061 236000 13                 LDQ     49
        12 004040   000004 757000 xsym               STAQ    FPT_WRITE_UC+4

     1505    10134    3               FPT_WRITE_UC.V.DVBYTE.VFC# = %YES#;

  10134 12 004041   100000 236003                    LDQ     32768,DU
        12 004042   000013 256000 xsym               ORSQ    FPT_WRITE_UC+11

     1506    10135    3               CALL M$WRITE(FPT_WRITE_UC);
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:229  

  10135 12 004043   000000 630400 xsym               EPPR0   FPT_WRITE_UC
        12 004044   040001 713400                    CLIMB   write
        12 004045   401400 401760                    pmme    nvectors=4

     1507    10136    3               FPT_WRITE_UC.V.DVBYTE.VFC# = %NO#;

  10136 12 004046   000014 236000 13                 LDQ     12
        12 004047   000013 356000 xsym               ANSQ    FPT_WRITE_UC+11

     1508    10137    3               CALL VPL$ERR_SEV_HANDLER(3); /* BLOW THEM AWAY                    */

  10137 12 004050   000046 630400 13                 EPPR0   38
        12 004051   000017 631400 xsym               EPPR1   B_VECTNIL+15
        12 004052   000000 701000 xent               TSX1    VPL$ERR_SEV_HANDLER
        12 004053   000000 011000                    NOP     0

     1509    10138    3               END;

     1510    10139    2           IF OUTPUT_ERR.ERR# = %E$VOLOUT

  10139 12 004054   000000 236000 xsym               LDQ     OUTPUT_ERR
        12 004055   377770 376007                    ANQ     131064,DL
        12 004056   013270 116007                    CMPQ    5816,DL
        12 004057   004076 601000 12                 TNZ     s:10143

     1511    10140    2            THEN                           /* Command abort error                */
     1512    10141    2              CALL VPL$ERR_PROC(3,0,,OUTPUT_ERR,,,OCB.DCBNM); /* Abort command   */

  10141 12 004060   000041 236000 13                 LDQ     33
        12 004061   202242 756100                    STQ     KEY1+70,,AUTO
        12 004062   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 004063   000001 235000 xsym               LDA     B_VECTNIL+1
        12 004064   202240 757100                    STAQ    KEY1+68,,AUTO
        12 004065   000062 236000 13                 LDQ     50
        12 004066   000001 235000 xsym               LDA     B_VECTNIL+1
        12 004067   202236 757100                    STAQ    KEY1+66,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:230  
        12 004070   000064 237000 13                 LDAQ    52
        12 004071   202234 757100                    STAQ    KEY1+64,,AUTO
        12 004072   202234 630500                    EPPR0   KEY1+64,,AUTO
        12 004073   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 004074   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 004075   000000 011000                    NOP     0

     1513    10142
     1514    10143    2           IF OCB.XTNSIZE>0

  10143 12 004076   000225 235000 xsym               LDA     OCB+149
        12 004077   004121 604400 12                 TMOZ    MONERR1
        12 004100   000000 236000 xsym               LDQ     OUTPUT_ERR
        12 004101   377770 376007                    ANQ     131064,DL
        12 004102   001200 116007                    CMPQ    640,DL
        12 004103   004106 600000 12                 TZE     s:10147
        12 004104   001070 116007                    CMPQ    568,DL
        12 004105   004121 601000 12                 TNZ     MONERR1

     1515    10144    2             AND (OUTPUT_ERR.ERR# = %E$FILLIM
     1516    10145    2             OR OUTPUT_ERR.ERR# = %E$RANBADBLK)
     1517    10146    3            THEN DO; /* Do an M$EXTEND to enlarge the RANDOM, IDS or RELATIVE file */

     1518    10147    3               FPT_EXTEND.V.DCB# = OCB.DCBNM;

  10147 12 004106   000000 720000 xsym               LXL0    OCB
        12 004107   000040 740000 10                 STX0    FPT_EXTEND+2

     1519    10148    3               FPT_EXTEND.V.SIZ# = OCB.XTNSIZE;

  10148 12 004110   000000 621005                    EAX1    0,AL
        12 004111   000040 441000 10                 SXL1    FPT_EXTEND+2

     1520    10149    3               CALL M$EXTEND(FPT_EXTEND) ALTRET(MONERR1);

  10149 12 004112   000036 630400 10                 EPPR0   FPT_EXTEND
        12 004113   440005 713400                    CLIMB   alt,+16389
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:231  
        12 004114   400000 401760                    pmme    nvectors=1
        12 004115   004121 702000 12                 TSX2    MONERR1

     1521    10150    3               CALL WRITE ALTRET(MONERR1); /* Retry the write                    */

  10150 12 004116   004415 701000 12                 TSX1    WRITE
        12 004117   004121 702000 12                 TSX2    MONERR1

     1522    10151    3               GOTO WROTE_OK;

  10151 12 004120   003761 710000 12                 TRA     WROTE_OK

     1523    10152    3               END;
     1524    10153    2   MONERR1: IF CMD_MASK(1)                 /* If COPY...                         */

  10153 12 004121   000000 236000 xsym  MONERR1      LDQ     CMD_MASK
        12 004122   200000 316003                    CANQ    65536,DU
        12 004123   004126 601000 12                 TNZ     s:10156
        12 004124   000400 316003                    CANQ    256,DU
        12 004125   004145 600000 12                 TZE     s:10158

     1525    10154    2             OR  CMD_MASK(9)               /* Or LIST                            */
     1526    10155    2            THEN
     1527    10156    2              CALL VPL$ERR_PROC(3,0,,OUTPUT_ERR,,,OCB.DCBNM); /* Abort command   */

  10156 12 004126   000041 236000 13                 LDQ     33
        12 004127   202242 756100                    STQ     KEY1+70,,AUTO
        12 004130   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 004131   000001 235000 xsym               LDA     B_VECTNIL+1
        12 004132   202240 757100                    STAQ    KEY1+68,,AUTO
        12 004133   000062 236000 13                 LDQ     50
        12 004134   000001 235000 xsym               LDA     B_VECTNIL+1
        12 004135   202236 757100                    STAQ    KEY1+66,,AUTO
        12 004136   000064 237000 13                 LDAQ    52
        12 004137   202234 757100                    STAQ    KEY1+64,,AUTO
        12 004140   202234 630500                    EPPR0   KEY1+64,,AUTO
        12 004141   000025 631400 xsym               EPPR1   B_VECTNIL+21
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:232  
        12 004142   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 004143   000000 011000                    NOP     0
        12 004144   004163 710000 12                 TRA     s:10159

     1528    10157    2            ELSE
     1529    10158    2              CALL VPL$ERR_PROC(2,0,,OUTPUT_ERR,,,OCB.DCBNM); /* Abort STEP      */

  10158 12 004145   000041 236000 13                 LDQ     33
        12 004146   202242 756100                    STQ     KEY1+70,,AUTO
        12 004147   000001 236000 xsym               LDQ     B_VECTNIL+1
        12 004150   000001 235000 xsym               LDA     B_VECTNIL+1
        12 004151   202240 757100                    STAQ    KEY1+68,,AUTO
        12 004152   000062 236000 13                 LDQ     50
        12 004153   000001 235000 xsym               LDA     B_VECTNIL+1
        12 004154   202236 757100                    STAQ    KEY1+66,,AUTO
        12 004155   000066 237000 13                 LDAQ    54
        12 004156   202234 757100                    STAQ    KEY1+64,,AUTO
        12 004157   202234 630500                    EPPR0   KEY1+64,,AUTO
        12 004160   000025 631400 xsym               EPPR1   B_VECTNIL+21
        12 004161   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 004162   000000 011000                    NOP     0

     1530    10159    2           RETURN;

  10159 12 004163   202122 221300                    LDX1  ! RECLEN_BUF,,AUTO
        12 004164   000001 702211                    TSX2  ! 1,X1

     1531    10160        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:233  
     1532    10161    2   SET_OUTPUT_KEY: PROC;

  10161 12 004165   202136 741300       SET_OUTPUT_* STX1  ! KEY1+2,,AUTO

     1533    10162        /**/
     1534    10163        /*  This routine is used to set up the key for the WRITE that is              */
     1535    10164        /*  about to occur.                                                           */
     1536    10165        /*                                                                            */
     1537    10166        /*  NOTE:  In case of an error condition, we don't ALTRET, but display        */
     1538    10167        /*  an error message with sufficient ferocity to get blown away.              */
     1539    10168        /**/
     1540    10169    3           IF OCB.ORG = 4

  10169 12 004166   000035 235000 xsym               LDA     OCB+29
        12 004167   000004 115007                    CMPA    4,DL
        12 004170   004221 601000 12                 TNZ     s:10188

     1541    10170    3            THEN                           /* INCREMENT EDIT KEY                 */
     1542    10171    4            DO;

     1543    10172    4               OCB.LN.CURRENT = OCB.LN.CURRENT + OCB.LN.K;

  10172 12 004171   000031 236000 xsym               LDQ     OCB+25
        12 004172   000033 036000 xsym               ADLQ    OCB+27
        12 004173   000031 756000 xsym               STQ     OCB+25

     1544    10173    4               IF OCB.LN.CURRENT>99999999

  10173 12 004174   000070 116000 13                 CMPQ    56
        12 004175   004200 605400 12                 TPNZ    s:10180
        12 004176   000000 116003                    CMPQ    0,DU
        12 004177   004220 605000 12                 TPL     s:10186

     1545    10174    4                 OR OCB.LN.CURRENT < 0
     1546    10175    4                THEN                       /* EDIT KEY out of range              */
     1547    10176        /*E* ERROR:   VPG-00010
     1548    10177             MESSAGE: EDIT key out of range.
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:234  
     1549    10178            MESSAGE1: EDIT key greater than 99999.999 or less than 0.
     1550    10179        */
     1551    10180    4                  IF CMD_MASK & '14'O      /* IF COPYALL OR COPYSTD              */

  10180 12 004200   000100 100400                    MLR     fill='000'O
        12 004201   000000 000010 xsym               ADSC9   CMD_MASK                 cn=0,n=8
        12 004202   202234 000010                    ADSC9   KEY1+64,,AUTO            cn=0,n=8
        12 004203   202234 237100                    LDAQ    KEY1+64,,AUTO
        12 004204   000072 377000 13                 ANAQ    58
        12 004205   004213 600000 12                 TZE     s:10184

     1552    10181    4                   THEN                    /* REPORT AND ABORT STEP              */
     1553    10182    4                     CALL VPL$ERR_PROC(2,10,'07'O);

  10182 12 004206   000074 630400 13                 EPPR0   60
        12 004207   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 004210   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 004211   000000 011000                    NOP     0
        12 004212   004221 710000 12                 TRA     s:10188

     1554    10183    4                   ELSE                    /* REPORT AND ABORT CMD               */
     1555    10184    4                     CALL VPL$ERR_PROC(3,10,'07'O);

  10184 12 004213   000077 630400 13                 EPPR0   63
        12 004214   000021 631400 xsym               EPPR1   B_VECTNIL+17
        12 004215   000000 701000 xent               TSX1    VPL$ERR_PROC
        12 004216   000000 011000                    NOP     0
        12 004217   004221 710000 12                 TRA     s:10188

     1556    10185    4                ELSE                       /* It's all OK                        */
     1557    10186    4                  OCB.LN.KEY.CURRENT = OCB.LN.CURRENT;

  10186 12 004220   000030 552034 xsym               STBQ    OCB+24,'34'O

     1558    10187    4               END;

     1559    10188    3           RETURN;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:235  

  10188 12 004221   202136 221300                    LDX1  ! KEY1+2,,AUTO
        12 004222   000001 702211                    TSX2  ! 1,X1

     1560    10189    3   END SET_OUTPUT_KEY;
     1561    10190        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:236  
     1562    10191    2   PERFORM_WRAPPING: PROC ALTRET;

  10191 12 004223   202134 741300       PERFORM_WRA* STX1  ! KEY1,,AUTO

     1563    10192        /**/
     1564    10193        /*  We have determined that wrapping (of some kind) is a thing that           */
     1565    10194        /*  we want to do if necessary, and it is necessary.  So we do it here.       */
     1566    10195        /*                                                                            */
     1567    10196        /*  NOTE:  This procedure will ALTRET if there is a problem with              */
     1568    10197        /*  the WRITE operation.                                                      */
     1569    10198        /**/
     1570    10199    3           IF VFC = 1

  10199 12 004224   202130 235100                    LDA     VFC,,AUTO
        12 004225   000001 115007                    CMPA    1,DL
        12 004226   004310 601000 12                 TNZ     s:10230

     1571    10200    3            THEN                           /* Wrapping with VFC.  Create new VFC */
     1572    10201                                                /* for use on subsequent records      */
     1573    10202    4            DO;

     1574    10203    4               WRAP_VFC = BUF$ARY (0);

  10203 12 004227   000005 470400 xsym               LDP0    FPT_WRITE_OUT+5
        12 004230   040100 100500                    MLR     fill='040'O
        12 004231   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1
        12 004232   202132 000001                    ADSC9   WRAP_VFC_,,AUTO          cn=0,n=1

     1575    10204    4               FINAL_WRAP_VFC = WRAP_VFC;

  10204 12 004233   202132 236100                    LDQ     WRAP_VFC_,,AUTO
        12 004234   202133 552140                    STBQ    FINAL_WRAP_VFC_,'40'O,AUTO

     1576    10205    4               IF WRAP_VFC_.FCN = %VFCF_SKB /* Skip channel before print         */

  10205 12 004235   202132 236100                    LDQ     WRAP_VFC_,,AUTO
        12 004236   160000 376003                    ANQ     57344,DU
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:237  
        12 004237   060000 116003                    CMPQ    24576,DU
        12 004240   004243 600000 12                 TZE     s:10209
        12 004241   140000 116003                    CMPQ    49152,DU
        12 004242   004247 601000 12                 TNZ     s:10212

     1577    10206    4                 OR WRAP_VFC_.FCN = %VFCF_SPB /* Skip lines before print         */
     1578    10207    4                THEN                       /* Subsequent lines should skip 1 befr*/
     1579    10208    5                DO;

     1580    10209    5                   WRAP_VFC = %VFC_S1B;

  10209 12 004243   141000 236003                    LDQ     49664,DU
        12 004244   202132 552140                    STBQ    WRAP_VFC_,'40'O,AUTO

     1581    10210    5                   FINAL_WRAP_VFC = WRAP_VFC;

  10210 12 004245   202132 236100                    LDQ     WRAP_VFC_,,AUTO
        12 004246   202133 552140                    STBQ    FINAL_WRAP_VFC_,'40'O,AUTO

     1582    10211    5                   END;

     1583    10212    4               IF WRAP_VFC_.FCN = %VFCF_SKA /* Skip channel after print          */

  10212 12 004247   202132 236100                    LDQ     WRAP_VFC_,,AUTO
        12 004250   160000 376003                    ANQ     57344,DU
        12 004251   120000 116003                    CMPQ    40960,DU
        12 004252   004255 600000 12                 TZE     s:10216
        12 004253   100000 116003                    CMPQ    32768,DU
        12 004254   004264 601000 12                 TNZ     s:10220

     1584    10213    4                 OR WRAP_VFC_.FCN = %VFCF_SPA /* Skip lines after print          */
     1585    10214    4                THEN                       /* Initial lines should skip 1 after  */
     1586    10215    5                DO;

     1587    10216    5                   FINAL_WRAP_VFC = WRAP_VFC;

  10216 12 004255   202132 236100                    LDQ     WRAP_VFC_,,AUTO
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:238  
        12 004256   202133 552140                    STBQ    FINAL_WRAP_VFC_,'40'O,AUTO

     1588    10217    5                   WRAP_VFC = %VFC_S1A;

  10217 12 004257   101000 236003                    LDQ     33280,DU
        12 004260   202132 552140                    STBQ    WRAP_VFC_,'40'O,AUTO

     1589    10218    5                   BUF$ARY (0) = WRAP_VFC;

  10218 12 004261   040100 100500                    MLR     fill='040'O
        12 004262   202132 000001                    ADSC9   WRAP_VFC_,,AUTO          cn=0,n=1
        12 004263   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     1590    10219    5                   END;

     1591    10220    4               IF WRAP_VFC_.FCN = %VFCF_HDR /* TOF, print, then space            */

  10220 12 004264   202132 236100                    LDQ     WRAP_VFC_,,AUTO
        12 004265   160000 376003                    ANQ     57344,DU
        12 004266   160000 116003                    CMPQ    57344,DU
        12 004267   004310 601000 12                 TNZ     s:10230

     1592    10221    4                THEN
     1593    10222    5                DO;

     1594    10223    5                   FINAL_WRAP_VFC = WRAP_VFC; /* Final is space n                */

  10223 12 004270   202132 236100                    LDQ     WRAP_VFC_,,AUTO
        12 004271   202133 552140                    STBQ    FINAL_WRAP_VFC_,'40'O,AUTO

     1595    10224    5                   FINAL_WRAP_VFC_.FCN = %VFCF_SPA; /* after print               */

  10224 12 004272   202133 236100                    LDQ     FINAL_WRAP_VFC_,,AUTO
        12 004273   000071 376000 13                 ANQ     57
        12 004274   100000 276003                    ORQ     32768,DU
        12 004275   202133 756100                    STQ     FINAL_WRAP_VFC_,,AUTO

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:239  
     1596    10225    5                   WRAP_VFC_.COUNT = 1;    /* Initial TOF, print, sapce 1        */

  10225 12 004276   202132 236100                    LDQ     WRAP_VFC_,,AUTO
        12 004277   000102 376000 13                 ANQ     66
        12 004300   001000 276003                    ORQ     512,DU
        12 004301   202132 756100                    STQ     WRAP_VFC_,,AUTO

     1597    10226    5                   BUF$ARY(0) = WRAP_VFC;

  10226 12 004302   000005 470400 xsym               LDP0    FPT_WRITE_OUT+5
        12 004303   040100 100500                    MLR     fill='040'O
        12 004304   202132 000001                    ADSC9   WRAP_VFC_,,AUTO          cn=0,n=1
        12 004305   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     1598    10227    5                   WRAP_VFC = %VFC_S1A;    /* Others space 1 after               */

  10227 12 004306   101000 236003                    LDQ     33280,DU
        12 004307   202132 552140                    STBQ    WRAP_VFC_,'40'O,AUTO

     1599    10228    5                   END;

     1600    10229    4               END;

     1601    10230    3           DATA_CHAR_LEFT = FPT_WRITE_OUT.BUF_.BOUND +1 - VFC;

  10230 12 004310   000004 236000 xsym               LDQ     FPT_WRITE_OUT+4
        12 004311   000020 772000                    QRL     16
        12 004312   202130 136100                    SBLQ    VFC,,AUTO
        12 004313   000001 036007                    ADLQ    1,DL
        12 004314   202125 756100                    STQ     DATA_CHAR_LEFT,,AUTO

     1602    10231    4           DO WHILE(DATA_CHAR_LEFT > 0);

  10231 12 004315   004411 604400 12                 TMOZ    s:10262

     1603    10232    4              IF DATA_CHAR_LEFT <= OUTPUT_WIDTH

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:240  
  10232 12 004316   202125 236100                    LDQ     DATA_CHAR_LEFT,,AUTO
        12 004317   000000 116000 xsym               CMPQ    OUTPUT_WIDTH
        12 004320   004332 605400 12                 TPNZ    s:10242

     1604    10233    4               THEN                        /* This is the last wrap record       */
     1605    10234    5               DO;

     1606    10235    5                  CHUNK_SIZE = DATA_CHAR_LEFT;

  10235 12 004321   202127 756100                    STQ     CHUNK_SIZE,,AUTO

     1607    10236    5                  IF VFC = 1

  10236 12 004322   202130 235100                    LDA     VFC,,AUTO
        12 004323   000001 115007                    CMPA    1,DL
        12 004324   004356 601000 12                 TNZ     s:10252

     1608    10237    5                   THEN
     1609    10238    5                     BUF$ARY(0) = FINAL_WRAP_VFC;

  10238 12 004325   000005 470400 xsym               LDP0    FPT_WRITE_OUT+5
        12 004326   040100 100500                    MLR     fill='040'O
        12 004327   202133 000001                    ADSC9   FINAL_WRAP_VFC_,,AUTO    cn=0,n=1
        12 004330   000000 000001                    ADSC9   0,,PR0                   cn=0,n=1

     1610    10239    5                  END;

  10239 12 004331   004356 710000 12                 TRA     s:10252

     1611    10240    4               ELSE                        /* Not the last WRAP line             */
     1612    10241    5               DO;                         /* Find out where to break line       */

     1613    10242    5                  IF OCB.WRAP = 3

  10242 12 004332   000260 235000 xsym               LDA     OCB+176
        12 004333   000003 115007                    CMPA    3,DL
        12 004334   004354 601000 12                 TNZ     BIG_BUST
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:241  

     1614    10243    5                   THEN                    /* WORD(!) wrapping                   */
     1615    10244    6                   DO;

     1616    10245    6                      CALL INDEX1R (CHUNK_SIZE,' ',BUF$FER,OUTPUT_WIDTH)

  10245 12 004335   000000 236000 xsym               LDQ     OUTPUT_WIDTH
        12 004336   000005 470400 xsym               LDP0    FPT_WRITE_OUT+5
        12 004337   000000 720000 xsym               LXL0    OUTPUT_WIDTH
        12 004340   000000 125540                    SCMR    mask='000'O
        12 004341   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
        12 004342   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
        12 004343   202127 000100                    ARG     CHUNK_SIZE,,AUTO
        12 004344   004354 606400 12                 TTN     BIG_BUST
        12 004345   202127 054100                    AOS     CHUNK_SIZE,,AUTO
        12 004346   202127 156100                    SSQ     CHUNK_SIZE,,AUTO

     1617    10246    6                        ALTRET (BIG_BUST);
     1618    10247    6                      CHUNK_SIZE = CHUNK_SIZE +1 -VFC;

  10247 12 004347   202127 236100                    LDQ     CHUNK_SIZE,,AUTO
        12 004350   202130 136100                    SBLQ    VFC,,AUTO
        12 004351   000001 036007                    ADLQ    1,DL
        12 004352   202127 756100                    STQ     CHUNK_SIZE,,AUTO

     1619    10248    6                      END;

  10248 12 004353   004356 710000 12                 TRA     s:10252

     1620    10249    5                   ELSE                    /* Wrap at fixed length               */
     1621    10250    5   BIG_BUST:         CHUNK_SIZE = OUTPUT_WIDTH;

  10250 12 004354   000000 235000 xsym  BIG_BUST     LDA     OUTPUT_WIDTH
        12 004355   202127 755100                    STA     CHUNK_SIZE,,AUTO

     1622    10251    5                  END;

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:242  
     1623    10252    4              FPT_WRITE_OUT.BUF_.BOUND = CHUNK_SIZE + VFC -1;

  10252 12 004356   202127 236100                    LDQ     CHUNK_SIZE,,AUTO
        12 004357   202130 036100                    ADLQ    VFC,,AUTO
        12 004360   000001 136007                    SBLQ    1,DL
        12 004361   000020 736000                    QLS     16
        12 004362   000004 676000 xsym               ERQ     FPT_WRITE_OUT+4
        12 004363   000034 376000 xsym               ANQ     B_VECTNIL+28
        12 004364   000004 656000 xsym               ERSQ    FPT_WRITE_OUT+4

     1624    10253    4              CALL SET_OUTPUT_KEY;

  10253 12 004365   004165 701000 12                 TSX1    SET_OUTPUT_KEY
        12 004366   000000 011000                    NOP     0

     1625    10254    4              CALL WRITE ALTRET(BAILOUT);

  10254 12 004367   004415 701000 12                 TSX1    WRITE
        12 004370   004413 702000 12                 TSX2    BAILOUT

     1626    10255    4              IF VFC = 1

  10255 12 004371   202130 235100                    LDA     VFC,,AUTO
        12 004372   000001 115007                    CMPA    1,DL
        12 004373   004401 601000 12                 TNZ     s:10258

     1627    10256    4               THEN                        /* Insert wrap-modified VFC           */
     1628    10257    4                 BUF$ARY(CHUNK_SIZE) = WRAP_VFC;

  10257 12 004374   000005 470400 xsym               LDP0    FPT_WRITE_OUT+5
        12 004375   202127 236100                    LDQ     CHUNK_SIZE,,AUTO
        12 004376   040106 100500                    MLR     fill='040'O
        12 004377   202132 000001                    ADSC9   WRAP_VFC_,,AUTO          cn=0,n=1
        12 004400   000000 000001                    ADSC9   0,Q,PR0                  cn=0,n=1

     1629    10258    4              FPT_WRITE_OUT.BUF_.BUF$ = PINCRC(FPT_WRITE_OUT.BUF_.BUF$,

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:243  
  10258 12 004401   202127 236100                    LDQ     CHUNK_SIZE,,AUTO
        12 004402   000020 736000                    QLS     16
        12 004403   000005 036000 xsym               ADLQ    FPT_WRITE_OUT+5
        12 004404   000005 756000 xsym               STQ     FPT_WRITE_OUT+5

     1630    10259    4                CHUNK_SIZE);
     1631    10260    4              DATA_CHAR_LEFT = DATA_CHAR_LEFT - CHUNK_SIZE;

  10260 12 004405   202125 236100                    LDQ     DATA_CHAR_LEFT,,AUTO
        12 004406   202127 136100                    SBLQ    CHUNK_SIZE,,AUTO
        12 004407   202125 756100                    STQ     DATA_CHAR_LEFT,,AUTO

     1632    10261    4              END;

  10261 12 004410   004316 605400 12                 TPNZ    s:10232

     1633    10262    3           RETURN;

  10262 12 004411   202134 221300                    LDX1  ! KEY1,,AUTO
        12 004412   000001 702211                    TSX2  ! 1,X1

  10255 12 004413                       BAILOUT      null
     1634    10263        /**/
     1635    10264    3   BAILOUT: ;
     1636    10265    3           ALTRETURN;

  10265 12 004413   202134 221300                    LDX1  ! KEY1,,AUTO
        12 004414   000000 702211                    TSX2  ! 0,X1

     1637    10266        /**/
     1638    10267    3   END PERFORM_WRAPPING;
     1639    10268        %EJECT;
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:244  
     1640    10269    2   WRITE:  PROC ALTRET;

  10269 12 004415   202136 741300       WRITE        STX1  ! KEY1+2,,AUTO

     1641    10270        /**/
     1642    10271        /*  This procedure takes the place of M$WRITE.  It's main purpose             */
     1643    10272        /*  is to select between normal PMMEs and FSFA.                               */
     1644    10273        /**/
     1645    10274    3           FPT_WRITE_OUT.V.DVBYTE.CONT# = USE_CONT;

  10274 12 004416   000000 236000 xsym               LDQ     USE_CONT
        12 004417   000010 772000                    QRL     8
        12 004420   000013 676000 xsym               ERQ     FPT_WRITE_OUT+11
        12 004421   001000 376003                    ANQ     512,DU
        12 004422   000013 656000 xsym               ERSQ    FPT_WRITE_OUT+11

     1646    10275    4           DO CASE(WRITE_MODE);

  10275 12 004423   000000 235000 xsym               LDA     WRITE_MODE
        12 004424   000002 115007                    CMPA    2,DL
        12 004425   004427 602005 12                 TNC     s:10275+4,AL
        12 004426   004442 710000 12                 TRA     s:10281
        12 004427   004431 710000 12                 TRA     s:10277
        12 004430   004436 710000 12                 TRA     s:10279

     1647    10276    4            CASE(0);                       /* Normal PMME                        */

     1648    10277    4              CALL M$WRITE(FPT_WRITE_OUT) ALTRET(PMME_ALT);

  10277 12 004431   000000 630400 xsym               EPPR0   FPT_WRITE_OUT
        12 004432   440001 713400                    CLIMB   alt,write
        12 004433   401400 401760                    pmme    nvectors=4
        12 004434   004444 702000 12                 TSX2    PMME_ALT
        12 004435   004442 710000 12                 TRA     s:10281

     1649    10278    4            CASE(1);                       /* FSFA routines                      */

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:245  
     1650    10279    4              CALL XSA$WRITE(FPT_WRITE_OUT,OFSFA_PARAM) ALTRET(FSFA_ALT);

  10279 12 004436   000103 630400 13                 EPPR0   67
        12 004437   000020 631400 xsym               EPPR1   B_VECTNIL+16
        12 004440   000000 701000 xent               TSX1    XSA$WRITE
        12 004441   004452 702000 12                 TSX2    FSFA_ALT

     1651    10280    4            END;                           /* END CASE                           */

     1652    10281    3           RETURN;

  10281 12 004442   202136 221300                    LDX1  ! KEY1+2,,AUTO
        12 004443   000001 702211                    TSX2  ! 1,X1

     1653    10282        /**/
     1654    10283    3   PMME_ALT:
     1655    10284    3           OUTPUT_ERR = B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR;

  10284 12 004444   000000 470400 xsym  PMME_ALT     LDP0    B$TCB$
        12 004445   000000 471500                    LDP1    0,,PR0
        12 004446   100102 236100                    LDQ     66,,PR1
        12 004447   000000 756000 xsym               STQ     OUTPUT_ERR

     1656    10285    3           ALTRETURN;

  10285 12 004450   202136 221300                    LDX1  ! KEY1+2,,AUTO
        12 004451   000000 702211                    TSX2  ! 0,X1

     1657    10286        /**/
     1658    10287    3   FSFA_ALT:
     1659    10288    3           OUTPUT_ERR = OFSFA_PARAM.ERR;

  10288 12 004452   000001 236000 xsym  FSFA_ALT     LDQ     OFSFA_PARAM+1
        12 004453   000000 756000 xsym               STQ     OUTPUT_ERR

     1660    10289    3           ALTRETURN;

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:246  
  10289 12 004454   202136 221300                    LDX1  ! KEY1+2,,AUTO
        12 004455   000000 702211                    TSX2  ! 0,X1
     1661    10290        /**/
     1662    10291    3   END WRITE;
     1663    10292    2   END WRITE_OUT_BUF;
     1664    10293    1   END VPG$WRITE_OUT;

PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:247  
--  Include file information  --

   B$TABLES_C.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   NK_VFC_C.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_MICROPS_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   VP_MACRO_C.:E05TOU  is referenced.
   XS_MACRO_C.:E05TOU  is referenced.
   VP_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   VP_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VPG$WRITE_OUT.
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:248  

 **** Variables and constants ****

  ****  Section 010  Data  VPG$WRITE_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    12-0-0/d STRC(360)   r     1 FPT_DEVICE                36-0-0/d STRC(144)   r     1 FPT_EXTEND
    24-0-0/b BIT (9)     r     1 MOP_EKEY(0:5)
    33-0-0/b BIT (9)     r     1 MOP_RECLEN(0:4)
    26-0-0/b BIT (9)     r     1 MOP_SEQNO(0:5)
    31-0-0/b BIT (9)     r     1 SAVE_DVBYTE               32-0-0/c CHAR        r     1 VFC_CHARACTER
    30-0-0/c STRC(18)    r     1 VFC_TEXTC

  ****  Section 011 RoData VPG$WRITE_OUT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    15-0-0/c STRC(135)   r     1 CONV_TBL(0:3)
    34-0-0/c CHAR(18)    r     1 EOD_LIT                    0-0-0/d STRC(216)   r     1 FPT_WAIT
     6-0-0/c CHAR(16)    r     1 XTBL                       6-0-0/c CHAR        r     1 X_TBL(0:15)

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

  2121-0-0/w PTR         r     1 @BUF_SIZE                  4-0-0/w PTR         r     1 @CODE
  2117-0-0/w PTR         r     1 @DUMP_BUF               2124-0-0/w PTR         r     1 @RAND_FLAG
     3-0-0/w PTR         r     1 @REC_LENGTH             2123-0-0/w PTR         r     1 @REC_LEN_
  2120-0-0/w PTR         r     1 @START_IDX              2114-0-0/w SBIN        r     1 BUF_LEN
    *0-0-0/w SBIN        r     1 BUF_SIZE                  25-0-0/b STRC(72)    r     1 BUF_VECTOR
  2111-0-0/w PTR         r     1 CHAR$                   2042-0-0/w SBIN        r     1 CHARS_TO_DUMP
  2056-0-0/w SBIN        r     1 CHAR_IDX                2044-0-0/w SBIN        r     1 CHAR_OFFSET
  2127-0-0/w SBIN        r     1 CHUNK_SIZE                *0-0-0/w SBIN        r     1 CODE
  2125-0-0/w SBIN        r     1 DATA_CHAR_LEFT            40-0-0/c STRC(36864) r     1 DMP_BUF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:249  
    40-0-0/c CHAR(4096)  r     1 DUMP_BUF                  *0-0-0/c ACHR        r     1 DUMP_BUF
  2054-0-0/w SBIN        r     1 EXPANDED_POS            2133-0-0/c CHAR        r     1 FINAL_WRAP_VFC
  2133-0-0/c STRC(9)     r     1 FINAL_WRAP_VFC_           36-0-0/w SBIN        r     1 I
  2131-0-0/w SBIN        r     1 I                       2057-0-0/w SBIN        r     1 I
  2045-0-0/w SBIN        r     1 J                       2046-0-0/w SBIN        r     1 K
  2134-0-0/c STRC(2304)  r     1 KEY1                      15-0-0/w STRC(144)   r     1 KEYOPTS
    21-0-0/c CHAR(8)     r     1 KEY_BUF                 2047-0-0/w SBIN        r     1 L
  2113-0-0/w SBIN        r     1 LAST_WORD_OFFSET        2131-0-0/w PTR         r     1 MOVE_TO$
  2117-0-0/w SBIN        r     1 NIBS_TO_DUMP              30-0-0/d STRC(72)    r     1 OUT_BUF_VECTOR
  2125-0-0/w PTR         r     1 P$                      2126-0-0/w PTR         r     1 Q$
  2041-0-0/w SBIN        r     1 RAND_FLAG                 *0-0-0/w SBIN        r     1 RAND_FLAG
  2122-0-0/c CHAR(9)     r     1 RECLEN_BUF                32-0-0/w SBIN        r     1 REC_LEN
  2126-0-0/w SBIN        r     1 REC_LEN                   *0-0-0/w UBIN        r     1 REC_LENGTH
    *0-0-0/w SBIN        r     1 REC_LEN_                2050-0-0/c CHAR(128)   r     1 SAVE_BUF
  2050-0-0/c UBIN(3)     r     1 SAVE_BUF_ARY(0:383)
  2050-0-0/c STRC(9)     r     1 SAVE_BUF_X1_ARY(0:127)
  2050-0-0/c UBIN(4)     r     1 SAVE_BUF_X_ARY(0:287)
    23-0-0/c CHAR(6)     r     1 SEQ_BUF                   37-0-0/w SBIN        r     1 START_IDX
    *0-0-0/w SBIN        r     1 START_IDX               2110-0-0/w SBIN        r     1 STAR_FLAG
    33-0-0/w SBIN        r     1 SUB_LEN                 2120-0-0/w PTR         r     1 T$
  2052-0-0/w PTR         r     1 TAB$                    2055-0-0/w SBIN        r     1 TAB_IDX
  2041-0-0/w STRC(324)   r     1 TAB_TBL                 2112-0-0/w PTR         r     1 TEXT$
    34-0-0/c CHAR        r     1 T_CHAR                  2130-0-0/w SBIN        r     1 VFC
    35-0-0/c CHAR        r     1 VFC_CHAR                2041-0-0/w SBIN        r     1 WORDS_TO_DUMP
  2043-0-0/w SBIN        r     1 WORD_OFFSET             2132-0-0/c CHAR        r     1 WRAP_VFC
  2132-0-0/c STRC(9)     r     1 WRAP_VFC_

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(72)    r     1 ACTUAL_IN_BUF_VECTOR       0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 B$XL_ASC_DUMP$             0-0-0/w PTR         r     1 B$XL_LOWER$
     0-0-0/w PTR         r     1 B$XL_UPPER$
     0-0-0/w EPTR        r     1 BREAK_MESSAGE_REPORTER
     0-0-0/b BIT         r     1 CMD_MASK(0:71)
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:250  
     0-0-0/w SBIN        r     1 CUR_SEQ_NO                 0-0-0/c STRC(4608)  r     1 EI_KEY
     0-0-0/c CHAR(120)   r     1 ERR_BUF                    0-0-0/w SBIN        r     1 ERR_LEN
     0-0-0/d STRC(144)   r     1 FPT_WEOF                   0-0-0/d STRC(432)   r     1 FPT_WRITE_OUT
     0-0-0/d STRC(432)   r     1 FPT_WRITE_UC               0-0-0/d STRC(5868)  r     1 ICB
     0-0-0/w SBIN        r     1 IN_ARS                     0-0-0/d STRC(72)    r     1 IN_BUF_VECTOR
     0-0-0/b STRC(8)     r     1 IN_DVBYTE                  0-0-0/c CHAR        r     1 IN_EOMCHAR
     0-0-0/w SBIN        r     1 M$EI#                      0-0-0/w PTR         r     1 M$EI$
     0-0-0/w PTR         r     1 M$UC$                      0-0-0/d STRC(6840)  r     1 OCB
     0-0-0/d STRC(504)   r     1 OFSFA_PARAM                0-0-0/w STRC        r     1 OUTPUT_ERR
     0-0-0/w SBIN        r     1 OUTPUT_PWIDTH              0-0-0/w SBIN        r     1 OUTPUT_WIDTH
     0-0-0/w STRC(1116)  r     1 OUT_SN                     0-0-0/b UBIN(9)     r     1 TABS(0:30)
     0-0-0/b BIT         r     1 USE_CONT                   0-0-0/w SBIN        r     1 WRITE_MODE

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c CHAR        r     1 BUF$ARY(0:4095)            0-0-0/c CHAR(4096)  r     1 BUF$FER
     0-0-0/c CHAR(32)    r     1 CHAR$32                    0-0-0/c CHAR        r     1 CHAR$36
     0-0-0/c CHAR        r     1 CHAR$ACTER                 0-0-0/c CHAR(255)   r     1 CHR$255
     0-0-0/c CHAR        r     1 CHR$ARY(0:0)
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0/c ACHR        r     1 IN$REC
     0-0-0/d STRC(4608)  r     1 LC_XLATE_TBL               0-0-0/c CHAR        r     1 ONE_BASED_CHAR
     0-0-0/d STRC(4608)  r     1 PRINTABLE_XLATE_TBL        0-0-0/c ACHR        r     1 SUB$STR
     0-0-0/b UBIN(9)     r     1 TAB$TBL(0:0)
     0-0-0/c ASTR(9)     r     1 TEXT$C                     0-0-0/b UBIN(4)     r     1 UBIN$4
     0-0-0/b UBIN(4)     r     1 UBIN$4                     0-0-0/d STRC(4608)  r     1 UC_XLATE_TBL


   Procedure VPG$WRITE_OUT requires 2350 words for executable code.
   Procedure VPG$WRITE_OUT requires 1188 words of local(AUTO) storage.

    No errors detected in file VPG$WRITE.:E05TSI    .
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:251  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:252  
          MINI XREF LISTING

ACTUAL_IN_BUF_VECTOR.BOUND
      5921**DCL      9880>>IF
B$ALT.CODE
      8372**DCL      8372--REDEF    8373--REDEF    8373--REDEF
B$ALT.ERR
      8373**DCL      9040>>ASSIGN  10284>>ASSIGN
B$ALT.ERR.ERR#
      8374**DCL      8374--REDEF
B$ALT.EVID
      8373**DCL      8373--REDEF    8373--REDEF
B$TCB.ALT$
      8368**DCL      9040>>ASSIGN  10284>>ASSIGN
B$TCB$
      5991**DCL      9040>>ASSIGN  10284>>ASSIGN
B$XL_ASC_DUMP$
      8392**DCL      8393--IMP-PTR  9195>>CALLBLT  9287>>CALLBLT  9361>>CALLBLT  9712>>CALLBLT
B$XL_LOWER$
      8384**DCL      8385--IMP-PTR  8943>>CALLBLT
B$XL_UPPER$
      8388**DCL      8389--IMP-PTR  8947>>CALLBLT
BAILOUT IN PROCEDURE PERFORM_WRAPPING
     10255**LABEL   10254--CALLALT
BIG_BUST IN PROCEDURE PERFORM_WRAPPING
     10250**LABEL   10245--CALLALT
BREAK_LOC
      5226**DCL      5226--REDEF
BUF$ARY IN PROCEDURE WRITE_OUT_BUF
      9996**DCL      9997--REDEF   10203>>ASSIGN  10218<<ASSIGN  10226<<ASSIGN  10238<<ASSIGN  10257<<ASSIGN
BUF$FER IN PROCEDURE WRITE_OUT_BUF
      9997**DCL     10245>>CALLBLT
BUF_LEN IN PROCEDURE DUMP_PROC
      9075**DCL      9196<<ASSIGN   9199<<ASSIGN   9200<>CALL     9288<<ASSIGN   9291<<ASSIGN   9292<>CALL
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:253  
      9362<<ASSIGN   9365<<ASSIGN   9366<>CALL
BUF_SIZE IN PROCEDURE CONSTRUCT_KEY
      9393**DCL      9373--PROC     9391--IMP-SIZ  9405>>ASSIGN   9417>>CALLBLT  9454>>CALLBLT  9459>>DOWHILE
      9487>>CALLBLT  9502>>CALLBLT  9510>>CALLBLT  9518>>CALLBLT  9536>>CALLBLT  9544>>CALLBLT  9552>>CALLBLT
      9563>>CALLBLT  9569>>IF       9572>>CALLBLT  9578>>CALLBLT  9638>>CALLBLT  9647>>CALLBLT  9659>>CALLBLT
      9674>>CALLBLT  9686>>CALLBLT  9695>>CALLBLT  9707>>CALLBLT  9716>>CALLBLT  9732>>CALLBLT
BUF_VECTOR
      8509**DCL      8758<<ASSIGN   9860>>ASSIGN   9875>>ASSIGN
BUF_VECTOR.BOUND
      8510**DCL      9811>>IF       9880>>IF       9885>>IF       9894<<ASSIGN   9894>>ASSIGN
BUF_VECTOR.PTR$
      8512**DCL      8900<<ASSIGN   8900>>ASSIGN   8913<<ASSIGN   8913>>ASSIGN   8922>>ASSIGN   8930>>ASSIGN
      8943>>CALLBLT  8943>>CALLBLT  8947>>CALLBLT  8947>>CALLBLT  8965>>ASSIGN   8968>>CALLBLT  8971>>ASSIGN
      8978>>ASSIGN   8983>>DOWHILE  8999<<ASSIGN   8999>>ASSIGN   9003>>ASSIGN   9019>>ASSIGN   9153>>IF
      9163>>ASSIGN   9240>>IF       9252>>ASSIGN   9324>>IF       9334>>ASSIGN   9778>>CALLBLT  9803>>ASSIGN
      9820>>IF       9826>>ASSIGN   9834>>ASSIGN   9834>>ASSIGN   9890>>ASSIGN   9890>>ASSIGN  10126>>ASSIGN
CHAR$ IN PROCEDURE DUMP_PROC
      9072**DCL      9162<<ASSIGN   9181<<ASSIGN   9181>>ASSIGN   9183>>ASSIGN   9184<<ASSIGN   9184>>ASSIGN
      9188>>CALLBLT  9190<<ASSIGN   9190>>ASSIGN   9249<<ASSIGN   9270<<ASSIGN   9270>>ASSIGN   9271>>ASSIGN
      9272<<ASSIGN   9272>>ASSIGN   9333<<ASSIGN   9352<<ASSIGN   9352>>ASSIGN   9353>>ASSIGN   9354<<ASSIGN
      9354>>ASSIGN   9355>>ASSIGN   9356<<ASSIGN   9356>>ASSIGN
CHAR$32 IN PROCEDURE DUMP_PROC
      9077**DCL      9195<<CALLBLT  9361<<CALLBLT
CHAR$36 IN PROCEDURE DUMP_PROC
      9078**DCL      9287<<CALLBLT  9287>>CALLBLT
CHAR$ACTER IN PROCEDURE DUMP_PROC
      9076**DCL      9183<<ASSIGN   9271<<ASSIGN   9353<<ASSIGN   9355<<ASSIGN
CHARS_TO_DUMP IN PROCEDURE DUMP_PROC
      9058**DCL      9144<<ASSIGN   9152<<ASSIGN   9153>>IF       9163>>ASSIGN   9178>>DOINDEX  9229<<ASSIGN
      9240>>IF       9252>>ASSIGN   9315<<ASSIGN   9323<<ASSIGN   9324>>IF       9334>>ASSIGN   9349>>DOINDEX
CHAR_IDX IN PROCEDURE TAB_EXPAND
      9765**DCL      9775<<ASSIGN   9776>>DOWHILE  9777<<ASSIGN   9777>>ASSIGN   9778<<CALLBLT  9778>>CALLBLT
      9779>>IF       9784>>ASSIGN   9799>>ASSIGN   9803>>ASSIGN
CHAR_OFFSET IN PROCEDURE DUMP_PROC
      9060**DCL      9149<<ASSIGN   9152>>ASSIGN   9153>>IF       9163>>ASSIGN   9236<<ASSIGN   9239>>ASSIGN
      9240>>IF       9252>>ASSIGN   9320<<ASSIGN   9323>>ASSIGN   9324>>IF       9334>>ASSIGN
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:254  
CHECK_IF_ANY_ATTRIBUTES IN PROCEDURE CONSTRUCT_KEY
      9569**LABEL    9531--GOTO
CHR$255 IN PROCEDURE INSERT_OCT_KEY
      9613**DCL      9712<<CALLBLT
CHR$ARY
      8378**DCL      8922<<ASSIGN   8930>>ASSIGN   8983>>DOWHILE  9003>>ASSIGN   9019<<ASSIGN   9188<<CALLBLT
      9644<<CALLBLT  9666<<ASSIGN   9692<<ASSIGN   9803<<ASSIGN   9820>>IF       9834<<ASSIGN   9834>>ASSIGN
      9890<<ASSIGN   9890>>ASSIGN  10025<<ASSIGN  10032<<ASSIGN
CHUNK_SIZE IN PROCEDURE WRITE_OUT_BUF
      9952**DCL     10235<<ASSIGN  10245<<CALLBLT 10247<<ASSIGN  10247>>ASSIGN  10250<<ASSIGN  10252>>ASSIGN
     10257>>ASSIGN  10258>>ASSIGN  10260>>ASSIGN
CMD_MASK
      5228**DCL      8798>>IF       8856>>IF       9423>>IF       9431>>IF       9854>>IF      10153>>IF
     10153>>IF      10180>>IF
CODE
      8437**DCL         6--PROC     8759>>IF
CONSTRUCT_KEY
      9373**PROC     9083--CALL     9870--CALL
CONV_TBL.DIV
      8504**DCL      9443>>CALLBLT
CONV_TBL.MICROP
      8503**DCL      9444>>ASSIGN
CONV_TBL.UNITS
      8505**DCL      9454>>CALLBLT
CUR_SEQ_NO
      5923**DCL      8805>>IF       8807<<ASSIGN   9413>>IF       9416>>CALLBLT  9424<<ASSIGN   9424>>ASSIGN
DATA_CHAR_LEFT IN PROCEDURE WRITE_OUT_BUF
      9950**DCL     10230<<ASSIGN  10231>>DOWHILE 10232>>IF      10235>>ASSIGN  10260<<ASSIGN  10260>>ASSIGN
DEF_ICB.FID.STRING
      5824**DCL      5825--REDEF
DEV_ICB.FID.STRING
      5710**DCL      5711--REDEF
DMP_BUF.REST
      8534**DCL      9162--ASSIGN   9249--ASSIGN   9333--ASSIGN
DMP_BUF.SEQ
      8532**DCL      9138--ASSIGN   9140--ASSIGN   9145--ASSIGN   9168--DOINDEX  9169--CALLBLT  9169<<CALLBLT
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:255  
      9196--ASSIGN   9199--ASSIGN   9223--ASSIGN   9225--ASSIGN   9231--ASSIGN   9258<<ASSIGN   9288--ASSIGN
      9291--ASSIGN   9309--ASSIGN   9311--ASSIGN   9316--ASSIGN   9340<<ASSIGN   9362--ASSIGN   9365--ASSIGN
DMP_BUF.STAR
      8533**DCL      9175<<ASSIGN   9264<<ASSIGN   9346<<ASSIGN
DUMP_BUF
      8529**DCL      8530--REDEF    8531--REDEF    8771--ASSIGN   8772<<ASSIGN   9083<>CALL     9083--CALL
      9084--ASSIGN   9145--ASSIGN   9166<<ASSIGN   9231--ASSIGN   9255<<CALLBLT  9316--ASSIGN   9337<<CALLBLT
      9870<>CALL     9870--CALL     9873--ASSIGN   9895>>CALLBLT
DUMP_BUF IN PROCEDURE CONSTRUCT_KEY
      9391**DCL      9373--PROC     9405<<ASSIGN   9417<<CALLBLT  9454<<CALLBLT  9459>>DOWHILE  9487<<CALLBLT
      9502<<CALLBLT  9510<<CALLBLT  9518<<CALLBLT  9536<<CALLBLT  9544<<CALLBLT  9552<<CALLBLT  9563<<CALLBLT
      9569>>IF       9572<<CALLBLT  9578<<CALLBLT  9638<<CALLBLT  9642--ASSIGN   9647<<CALLBLT  9659<<CALLBLT
      9663--ASSIGN   9674<<CALLBLT  9686<<CALLBLT  9690--ASSIGN   9695<<CALLBLT  9707<<CALLBLT  9711--ASSIGN
      9716<<CALLBLT  9732<<CALLBLT
DUMP_OCT IN PROCEDURE DUMP_PROC
      9131**PROC     9091--CALL
DUMP_PROC
      9049**PROC     9027--CALL
DUMP_X IN PROCEDURE DUMP_PROC
      9205**PROC     9093--CALL
DUMP_X1 IN PROCEDURE DUMP_PROC
      9298**PROC     9095--CALL
DVBYTE_DONE IN PROCEDURE CONSTRUCT_KEY
      9581**LABEL    9486--GOTO
EDIT_DONE IN PROCEDURE INSERT_OCT_KEY
      9739**LABEL    9727--GOTO
EI_KEY
      5921**DCL      9630>>ASSIGN
EI_KEY.KEY
      5922**DCL      5922--REDEF    5922--REDEF    5922--REDEF
EI_KEY.LEN
      5922**DCL      8810>>IF
EOD_LIT
      8506**DCL      8772>>ASSIGN   8774--CALL
EO_OCB.TYPE
      5422**DCL      5423--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:256  
ERR_BUF
      5190**DCL     10132<<ASSIGN  10133--ASSIGN
ERR_LEN
      5190**DCL     10133>>ASSIGN
EXPANDED_POS IN PROCEDURE TAB_EXPAND
      9763**DCL      9784<<ASSIGN   9788>>DOWHILE
F$DCB.ACTPOS
      7032**DCL      7032--REDEF
F$DCB.ARS
      7007**DCL      7007--REDEF
F$DCB.ASN
      7022**DCL      9471>>IF
F$DCB.ATTR
      7025**DCL      7026--REDEF
F$DCB.BORROW
      7040**DCL      7040--REDEF    7040--REDEF    7040--REDEF
F$DCB.DCBNAME.L
      7054**DCL      7054--IMP-SIZ
F$DCB.DDEV.IC
      7013**DCL     10092>>IF
F$DCB.EOMCHAR
      7011**DCL      7011--REDEF
F$DCB.FLDID
      7035**DCL      7035--REDEF
F$DCB.FORM$
      7029**DCL      7029--REDEF
F$DCB.FSECT
      7045**DCL      7045--REDEF
F$DCB.FSN
      7022**DCL      7022--REDEF    7022--REDEF    7023--REDEF
F$DCB.HEADER$
      7028**DCL      7028--REDEF
F$DCB.IOERROK
      7019**DCL      9471>>IF
F$DCB.IXTNSIZE
      7026**DCL      7026--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:257  
F$DCB.LASTSTA$
      7016**DCL      7016--REDEF
F$DCB.LVL
      7041**DCL      7041--REDEF
F$DCB.NAME.C
      7016**DCL      7016--REDEF
F$DCB.NOEOF
      7037**DCL      7037--REDEF
F$DCB.NRECS
      7027**DCL      7027--REDEF
F$DCB.NRECX
      7046**DCL      7046--REDEF
F$DCB.OHDR
      7038**DCL      7038--REDEF
F$DCB.ORG
      7021**DCL      7021--REDEF
F$DCB.PRECNO
      7044**DCL      7044--REDEF
F$DCB.RCSZ
      7049**DCL      7049--REDEF
F$DCB.RES
      7017**DCL      7017--REDEF
F$DCB.SETX
      7029**DCL      7029--REDEF
F$DCB.TAB$
      7028**DCL      7029--REDEF    9768>>IF       9770>>ASSIGN
F$DCB.TDA
      7043**DCL      7043--REDEF
F$DCB.TYC.DI
      7008**DCL      9507>>IF
F$DCB.TYC.IOERR
      7008**DCL      9471>>IF       9499>>IF
F$DCB.TYC.LD
      7008**DCL      9515>>IF
F$DCB.WSN
      7018**DCL      7018--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:258  
FINAL_WRAP_VFC IN PROCEDURE WRITE_OUT_BUF
      9992**DCL     10204<<ASSIGN  10210<<ASSIGN  10216<<ASSIGN  10223<<ASSIGN  10238>>ASSIGN
FINAL_WRAP_VFC_ IN PROCEDURE WRITE_OUT_BUF
      9985**DCL      9992--REDEF
FINAL_WRAP_VFC_.FCN IN PROCEDURE WRITE_OUT_BUF
      9989**DCL     10224<<ASSIGN
FPT_CLOSE_EI.SN_
      6763**DCL      6763--REDEF
FPT_CLOSE_EI.UTL_
      6764**DCL      6764--REDEF
FPT_CLOSE_EI.V.EXPIRE#
      6778**DCL      6778--REDEF
FPT_CLOSE_EI.V.TYPE#
      6776**DCL      6776--REDEF
FPT_CLOSE_EI.V.XTNSIZE#
      6773**DCL      6773--REDEF    6775--REDEF
FPT_CLOSE_PTL.SN_
      6889**DCL      6889--REDEF
FPT_CLOSE_PTL.UTL_
      6890**DCL      6890--REDEF
FPT_CLOSE_PTL.V.EXPIRE#
      6904**DCL      6904--REDEF
FPT_CLOSE_PTL.V.TYPE#
      6902**DCL      6902--REDEF
FPT_CLOSE_PTL.V.XTNSIZE#
      6899**DCL      6899--REDEF    6901--REDEF
FPT_CLOSE_READ.SN_
      6805**DCL      6805--REDEF
FPT_CLOSE_READ.UTL_
      6806**DCL      6806--REDEF
FPT_CLOSE_READ.V.EXPIRE#
      6820**DCL      6820--REDEF
FPT_CLOSE_READ.V.TYPE#
      6818**DCL      6818--REDEF
FPT_CLOSE_READ.V.XTNSIZE#
      6815**DCL      6815--REDEF    6817--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:259  
FPT_CLOSE_SI.SN_
      6973**DCL      6973--REDEF
FPT_CLOSE_SI.UTL_
      6974**DCL      6974--REDEF
FPT_CLOSE_SI.V.EXPIRE#
      6988**DCL      6988--REDEF
FPT_CLOSE_SI.V.TYPE#
      6986**DCL      6986--REDEF
FPT_CLOSE_SI.V.XTNSIZE#
      6983**DCL      6983--REDEF    6985--REDEF
FPT_CLOSE_STD.SN_
      6931**DCL      6931--REDEF
FPT_CLOSE_STD.UTL_
      6932**DCL      6932--REDEF
FPT_CLOSE_STD.V.EXPIRE#
      6946**DCL      6946--REDEF
FPT_CLOSE_STD.V.TYPE#
      6944**DCL      6944--REDEF
FPT_CLOSE_STD.V.XTNSIZE#
      6941**DCL      6941--REDEF    6943--REDEF
FPT_CLSEI_FT.SN_
      6847**DCL      6847--REDEF
FPT_CLSEI_FT.UTL_
      6848**DCL      6848--REDEF
FPT_CLSEI_FT.V.EXPIRE#
      6862**DCL      6862--REDEF
FPT_CLSEI_FT.V.TYPE#
      6860**DCL      6860--REDEF
FPT_CLSEI_FT.V.XTNSIZE#
      6857**DCL      6857--REDEF    6859--REDEF
FPT_DEVICE.V
      8413**DCL      8412--DCLINIT
FPT_EXTEND IN PROCEDURE WRITE_OUT_BUF
      9944**DCL     10149<>CALL
FPT_EXTEND.V IN PROCEDURE WRITE_OUT_BUF
      9944**DCL      9944--DCLINIT
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:260  
FPT_EXTEND.V.DCB# IN PROCEDURE WRITE_OUT_BUF
      9944**DCL     10147<<ASSIGN
FPT_EXTEND.V.SIZ# IN PROCEDURE WRITE_OUT_BUF
      9945**DCL     10148<<ASSIGN
FPT_OPEN_EI.ACSVEH_
      6418**DCL      6419--REDEF
FPT_OPEN_EI.ALTKEYS_
      6424**DCL      6425--REDEF    6425--REDEF
FPT_OPEN_EI.HDR_
      6423**DCL      6424--REDEF
FPT_OPEN_EI.TAB_
      6422**DCL      6423--REDEF
FPT_OPEN_EI.UHL_
      6416**DCL      6417--REDEF    6417--REDEF
FPT_OPEN_EI.V.FSN#
      6456**DCL      6456--REDEF    6456--REDEF
FPT_OPEN_EI.WSN_
      6422**DCL      6422--REDEF
FPT_OPEN_EI_SAVE.ACSVEH_
      6527**DCL      6528--REDEF
FPT_OPEN_EI_SAVE.ALTKEYS_
      6533**DCL      6534--REDEF    6534--REDEF
FPT_OPEN_EI_SAVE.HDR_
      6532**DCL      6533--REDEF
FPT_OPEN_EI_SAVE.TAB_
      6531**DCL      6532--REDEF
FPT_OPEN_EI_SAVE.UHL_
      6525**DCL      6526--REDEF    6526--REDEF
FPT_OPEN_EI_SAVE.V.FSN#
      6565**DCL      6565--REDEF    6565--REDEF
FPT_OPEN_EI_SAVE.WSN_
      6531**DCL      6531--REDEF
FPT_OPEN_OUT.ACSVEH_
      6309**DCL      6310--REDEF
FPT_OPEN_OUT.ALTKEYS_
      6315**DCL      6316--REDEF    6316--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:261  
FPT_OPEN_OUT.HDR_
      6314**DCL      6315--REDEF
FPT_OPEN_OUT.TAB_
      6313**DCL      6314--REDEF
FPT_OPEN_OUT.UHL_
      6307**DCL      6308--REDEF    6308--REDEF
FPT_OPEN_OUT.V.FSN#
      6347**DCL      6347--REDEF    6347--REDEF
FPT_OPEN_OUT.WSN_
      6313**DCL      6313--REDEF
FPT_OPEN_OUT_SAVE.ACSVEH_
      6200**DCL      6201--REDEF
FPT_OPEN_OUT_SAVE.ALTKEYS_
      6206**DCL      6207--REDEF    6207--REDEF
FPT_OPEN_OUT_SAVE.HDR_
      6205**DCL      6206--REDEF
FPT_OPEN_OUT_SAVE.TAB_
      6204**DCL      6205--REDEF
FPT_OPEN_OUT_SAVE.UHL_
      6198**DCL      6199--REDEF    6199--REDEF
FPT_OPEN_OUT_SAVE.V.FSN#
      6238**DCL      6238--REDEF    6238--REDEF
FPT_OPEN_OUT_SAVE.WSN_
      6204**DCL      6204--REDEF
FPT_READ_STD.STATION_
      6628**DCL      6629--REDEF
FPT_READ_STD.V.DVBYTE.REREAD#
      6640**DCL      6640--REDEF
FPT_READ_STD.V.INDX#
      6638**DCL      6638--REDEF
FPT_READ_UC.STATION_
      6589**DCL      6590--REDEF
FPT_READ_UC.V.DVBYTE.REREAD#
      6601**DCL      6601--REDEF
FPT_READ_UC.V.INDX#
      6599**DCL      6599--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:262  
FPT_WAIT.V
      8481**DCL      8480--DCLINIT
FPT_WEOF
      7003**DCL      9033<>CALL
FPT_WEOF.V.DCB#
      7003**DCL      8765<<ASSIGN
FPT_WRITE_ME.STATION_
      6697**DCL      6697--REDEF
FPT_WRITE_ME.V.DVBYTE.VFC#
      6704**DCL      6704--REDEF
FPT_WRITE_OUT
      6726**DCL     10277<>CALL    10279<>CALL
FPT_WRITE_OUT.BUF_
      6726**DCL     10042<<ASSIGN  10045<<ASSIGN
FPT_WRITE_OUT.BUF_.BOUND
      6726**DCL     10049<<ASSIGN  10071<<ASSIGN  10097>>IF      10230>>ASSIGN  10252<<ASSIGN
FPT_WRITE_OUT.BUF_.BUF$
      6728**DCL      9996--IMP-PTR  9997--IMP-PTR  9999--IMP-PTR 10054>>ASSIGN  10058<<ASSIGN  10058>>ASSIGN
     10070>>ASSIGN  10203>>ASSIGN  10218>>ASSIGN  10226>>ASSIGN  10238>>ASSIGN  10245>>CALLBLT 10257>>ASSIGN
     10258<<ASSIGN  10258>>ASSIGN
FPT_WRITE_OUT.IDBUF_
      6728**DCL      8865<<ASSIGN
FPT_WRITE_OUT.STATION_
      6728**DCL      6728--REDEF
FPT_WRITE_OUT.V.DVBYTE
      6734**DCL      8773<<ASSIGN   8860<<ASSIGN   8864<<ASSIGN   9110>>ASSIGN   9128<<ASSIGN
FPT_WRITE_OUT.V.DVBYTE.BIN#
      6735**DCL      8883<<ASSIGN   8885<<ASSIGN  10092>>IF
FPT_WRITE_OUT.V.DVBYTE.BP#
      6735**DCL      8873<<ASSIGN
FPT_WRITE_OUT.V.DVBYTE.CONT#
      6737**DCL     10274<<ASSIGN
FPT_WRITE_OUT.V.DVBYTE.TRANS#
      6736**DCL      8877<<ASSIGN   8879<<ASSIGN  10092>>IF
FPT_WRITE_OUT.V.DVBYTE.VFC#
      6735**DCL      6735--REDEF    8891<<ASSIGN   8893<<ASSIGN   8895<<ASSIGN   8909>>IF       8995>>IF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:263  
      9111<<ASSIGN   9115>>IF       9118<<ASSIGN   9122<<ASSIGN  10018>>IF      10022<<ASSIGN  10028>>IF
     10061>>IF      10078>>IF
FPT_WRITE_UC
      6664**DCL     10135<>CALL
FPT_WRITE_UC.BUF_
      6664**DCL     10133<<ASSIGN
FPT_WRITE_UC.STATION_
      6666**DCL      6666--REDEF
FPT_WRITE_UC.V.DVBYTE.VFC#
      6673**DCL      6673--REDEF   10134<<ASSIGN  10136<<ASSIGN
FROM_SN.SN
      5572**DCL      5573--REDEF
FSFA_ALT IN PROCEDURE WRITE
     10288**LABEL   10279--CALLALT
GETCMD.OUT$
      4779**DCL      4785--REDEF
I
      8527**DCL      9450<<ASSIGN   9451>>DOWHILE  9452<<ASSIGN   9452>>ASSIGN   9454>>CALLBLT  9458>>ASSIGN
      9888<<DOINDEX  9890>>ASSIGN   9890>>ASSIGN
I IN PROCEDURE INSERT_OCT_KEY
      9600**DCL      9643<<DOINDEX  9644>>CALLBLT  9644>>CALLBLT  9665<<DOINDEX  9666>>ASSIGN   9667>>IF
      9691<<DOINDEX  9692>>ASSIGN   9692>>ASSIGN
I IN PROCEDURE TAB_EXPAND
      9766**DCL      9815<<ASSIGN   9819>>DOWHILE  9820>>IF       9826>>ASSIGN   9834>>ASSIGN   9834>>ASSIGN
      9836<<ASSIGN   9836>>ASSIGN
ICB.FID.STRING
      5596**DCL      5597--REDEF
ICB.FLAVOR.GRANB
      5657**DCL      9854>>IF
ICB.FLAVOR.KNOWKEY
      5655**DCL      8810>>IF       9433>>IF       9625>>IF
ICB.TAPEIOERR
      5681**DCL      9475>>IF       9477<<ASSIGN   9479<<ASSIGN   9484>>IF       9496>>IF       9523>>DOCASE
      9525<<ASSIGN   9527<<ASSIGN
IFSFA_PARAM.EOMCHAR#
      5951**DCL      5952--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:264  
IFSFA_PARAM.SIG1
      5945**DCL      5945--REDEF
IFSFA_PARAM.SIG2
      5945**DCL      5946--REDEF
IN$REC
      8518**DCL      8943<<CALLBLT  8943>>CALLBLT  8947<<CALLBLT  8947>>CALLBLT  8968<<CALLBLT  9153>>IF
      9163>>ASSIGN   9240>>IF       9252>>ASSIGN   9324>>IF       9334>>ASSIGN   9778>>CALLBLT  9895<<CALLBLT
INSERT_DEFAULT IN PROCEDURE WRITE_OUT_BUF
     10007**LABEL   10035--GOTO
INSERT_OCT_KEY IN PROCEDURE CONSTRUCT_KEY
      9589**PROC     9435--CALL
IN_ARS
      5919**DCL      9443>>CALLBLT
IN_BUF_VECTOR
      5920**DCL      8758>>ASSIGN
IN_DVBYTE
      5919**DCL      8860>>ASSIGN
IN_DVBYTE.BIN
      5919**DCL      9541>>IF
IN_DVBYTE.NODAT
      5920**DCL      9560>>IF
IN_DVBYTE.TRANS
      5920**DCL      9549>>IF
IN_DVBYTE.VFC
      5919**DCL      8896>>IF       9533>>IF
IN_EOMCHAR
      5920**DCL      8920>>IF       8922>>ASSIGN
IN_RES
      5518**DCL      5518--REDEF
IN_SN.SN
      5534**DCL      5535--REDEF
J IN PROCEDURE DUMP_PROC
      9061**DCL      9167<<ASSIGN   9169>>CALLBLT  9170<<ASSIGN   9170>>ASSIGN   9178<<DOINDEX  9179>>DOCASE
      9186>>ASSIGN   9256<<ASSIGN   9258>>ASSIGN   9259<<ASSIGN   9259>>ASSIGN   9267<<DOINDEX  9268>>IF
      9271>>ASSIGN   9273>>ASSIGN   9275>>IF       9338<<ASSIGN   9340>>ASSIGN   9341<<ASSIGN   9341>>ASSIGN
      9349<<DOINDEX  9350>>IF       9353>>ASSIGN   9355>>ASSIGN
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:265  
K IN PROCEDURE DUMP_PROC
      9062**DCL      9168<<DOINDEX  9169>>CALLBLT  9187<<DOINDEX  9188>>CALLBLT  9188>>CALLBLT  9257<<DOINDEX
      9258>>ASSIGN   9339<<DOINDEX  9340>>ASSIGN
KEY1 IN PROCEDURE INSERT_OCT_KEY
      9603**DCL      9630<<ASSIGN   9712--CALLBLT  9712--CALLBLT
KEY1.EKEY.KEY IN PROCEDURE INSERT_OCT_KEY
      9611**DCL      9728>>IF       9731>>CALLBLT
KEY1.KEY_ARY IN PROCEDURE INSERT_OCT_KEY
      9605**DCL      9606--REDEF    9607--REDEF    9610--REDEF    9664--ASSIGN
KEY1.LEN IN PROCEDURE INSERT_OCT_KEY
      9604**DCL      9643>>DOINDEX  9646>>ASSIGN   9665>>DOINDEX  9673>>ASSIGN   9691>>DOINDEX  9694>>ASSIGN
      9715>>ASSIGN   9728>>IF
KEY1.OCT_KEY_ARY IN PROCEDURE INSERT_OCT_KEY
      9606**DCL      9644>>CALLBLT
KEY1.X_KEY_ARY.X IN PROCEDURE INSERT_OCT_KEY
      9608**DCL      9692>>ASSIGN
KEYOPTS
      8448**DCL      8793<<ASSIGN
KEYOPTS.DVBYTE
      8460**DCL      8802<<ASSIGN   8823>>IF       8825<<ASSIGN   8841>>IF       8843<<ASSIGN   9484>>IF
      9529>>IF
KEYOPTS.FORMAT
      8452**DCL      8801<<ASSIGN   8815>>IF       8835>>IF
KEYOPTS.FORMAT.C
      8456**DCL      8820<<ASSIGN   9618>>IF       9704>>IF
KEYOPTS.FORMAT.E
      8458**DCL      8821<<ASSIGN   8839<<ASSIGN   9618>>IF       9725>>IF
KEYOPTS.FORMAT.O
      8455**DCL      8819<<ASSIGN   9618>>IF       9635>>IF
KEYOPTS.FORMAT.S
      8457**DCL      8818<<ASSIGN   8838<<ASSIGN   9410>>IF
KEYOPTS.FORMAT.X
      8453**DCL      9618>>IF       9683>>IF
KEYOPTS.FORMAT.X1
      8454**DCL      9618>>IF       9656>>IF
KEYOPTS.ONDATA
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:266  
      8462**DCL      8804<<ASSIGN   8829>>IF       8831<<ASSIGN   8847>>IF       8849<<ASSIGN   9871>>IF
KEYOPTS.RECSIZ
      8461**DCL      8803<<ASSIGN   8826>>IF       8828<<ASSIGN   8844>>IF       8846<<ASSIGN   9440>>IF
KEY_BUF
      8507**DCL      9731<<CALLBLT  9732>>CALLBLT
L IN PROCEDURE DUMP_PROC
      9063**DCL      9186<<ASSIGN   9188>>CALLBLT
LAST_WORD_OFFSET IN PROCEDURE DUMP_PROC
      9074**DCL      9147<<ASSIGN   9148>>DOINDEX  9150>>IF       9153>>IF       9233<<ASSIGN   9234>>DOINDEX
      9237>>IF       9240>>IF       9318<<ASSIGN   9319>>DOINDEX  9321>>IF       9324>>IF
LC_XLATE_TBL
      8385**DCL      8943>>CALLBLT
M$EI#
      5987**DCL     10128<>CALL
M$EI$
      5987**DCL      9471>>IF       9471>>IF       9471>>IF       9499>>IF       9507>>IF       9515>>IF
M$EXTEND
        40**DCL-ENT 10149--CALL
M$UC$
      5990**DCL      9768>>IF       9770>>ASSIGN
M$WEOF
        39**DCL-ENT  9033--CALL
M$WRITE
        37**DCL-ENT 10135--CALL    10277--CALL
MONERR IN PROCEDURE WRITE_OUT_BUF
     10109**LABEL   10100--CALLALT 10106--CALLALT
MONERR1 IN PROCEDURE WRITE_OUT_BUF
     10153**LABEL   10149--CALLALT 10150--CALLALT
MOP_EKEY
      8485**DCL      9732>>CALLBLT
MOP_RECLEN IN PROCEDURE CONSTRUCT_KEY
      9394**DCL      9444<<ASSIGN   9445>>CALLBLT
MOP_SEQNO
      8492**DCL      9417>>CALLBLT
MOVE_TO$ IN PROCEDURE WRITE_OUT_BUF
      9954**DCL      9998--IMP-PTR
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:267  
NCR
      8927**LABEL    8935--GOTO
NIBS_TO_DUMP IN PROCEDURE DUMP_X
      9219**DCL      9230<<ASSIGN   9239<<ASSIGN   9267>>DOINDEX
NO_DUMP_PROC
      9840**PROC     9025--CALL
NO_KEYS
      8847**LABEL    8797--GOTO     8808--GOTO     8832--GOTO
NO_WRAP IN PROCEDURE WRITE_OUT_BUF
     10104**LABEL   10085--GOTO    10102--GOTO
NVFC_CASE
      8886**LABEL    8887--GOTO
OCB.BIN
      5252**DCL      8881>>DOCASE
OCB.CR_NCR
      5251**DCL      8916>>IF       8918>>IF
OCB.CS.CURRENT
      5248**DCL      8968>>CALLBLT  8969<<ASSIGN   8969>>ASSIGN
OCB.CS.ID.C
      5247**DCL      8971>>ASSIGN
OCB.CS.ID.L
      5246**DCL      8970>>ASSIGN
OCB.CS.K
      5250**DCL      8969>>ASSIGN
OCB.CS.SPEC
      5244**DCL      8958>>IF
OCB.DCBNM
      5235**DCL      8765>>ASSIGN  10111<>CALL    10141<>CALL    10147>>ASSIGN  10156<>CALL    10158<>CALL
OCB.DCBPTR$
      5236**DCL     10092>>IF
OCB.DEV_MASK
      5314**DCL      8872>>IF      10109>>IF
OCB.FLAVOR.FORMATTED
      5325**DCL      8856>>IF      10061>>IF
OCB.FLAVOR.GRANB
      5326**DCL     10046>>IF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:268  
OCB.FLAVOR.JE
      5327**DCL     10092>>IF
OCB.FVFC
      5260**DCL      9000>>IF
OCB.KEY
      5355**DCL      8793>>ASSIGN
OCB.KEYS
      5262**DCL      8794>>IF       9861>>IF      10061>>IF
OCB.LN.CURRENT
      5268**DCL     10172<<ASSIGN  10172>>ASSIGN  10173>>IF      10173>>IF      10186>>ASSIGN
OCB.LN.K
      5270**DCL     10172>>ASSIGN
OCB.LN.KEY.CURRENT
      5267**DCL     10186<<ASSIGN
OCB.NB
      5271**DCL      8872>>IF       8981>>IF
OCB.OCT_HEX.DUPE
      5276**DCL      9153>>IF       9240>>IF       9324>>IF
OCB.OCT_HEX.TEXT
      5275**DCL      9136>>IF       9192>>IF       9221>>IF       9283>>IF       9307>>IF       9358>>IF
OCB.OCT_HEX.TYPE
      5274**DCL      8762>>IF       8794>>IF       9023>>IF       9089>>DOCASE   9443>>CALLBLT  9444>>ASSIGN
      9454>>CALLBLT
OCB.ORG
      5272**DCL     10169>>IF
OCB.RECSIZE.MAX_SIZE
      5242**DCL      8954>>IF       8956>>ASSIGN
OCB.RECSIZE.MAX_SPEC
      5241**DCL      8954>>IF
OCB.RECSIZE.MIN_SIZE
      5240**DCL      8974>>IF       8977>>ASSIGN   8979>>ASSIGN   8981>>IF       8983>>DOWHILE
OCB.TRANS
      5253**DCL      8875>>DOCASE
OCB.TX
      5292**DCL      8951>>IF
OCB.TYPE
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:269  
      5280**DCL      5281--REDEF
OCB.UC_LC
      5263**DCL      8939>>IF       8941>>IF
OCB.VFC
      5259**DCL      8888>>DOCASE
OCB.VFC_CHAR
      5256**DCL      9119>>ASSIGN   9123>>ASSIGN  10025>>ASSIGN  10032>>ASSIGN
OCB.VFC_USE
      5257**DCL      9113>>DOCASE  10016>>DOCASE
OCB.WRAP
      5337**DCL     10083>>IF      10086>>IF      10086>>IF      10242>>IF
OCB.XTNSIZE
      5297**DCL     10143>>IF      10148>>ASSIGN
OCT_DONE IN PROCEDURE INSERT_OCT_KEY
      9647**LABEL    9637--GOTO
OFSFA_PARAM
      5965**DCL     10279<>CALL
OFSFA_PARAM.EOMCHAR#
      5981**DCL      5982--REDEF
OFSFA_PARAM.ERR
      5969**DCL     10288>>ASSIGN
OFSFA_PARAM.SIG1
      5975**DCL      5975--REDEF
OFSFA_PARAM.SIG2
      5975**DCL      5976--REDEF
ONE_BASED_CHAR
      8526**DCL     10126>>ASSIGN
OUTPUT_ERR
      5156**DCL      9040<<ASSIGN  10141<>CALL    10156<>CALL    10158<>CALL    10284<<ASSIGN  10288<<ASSIGN
OUTPUT_ERR.ERR#
      5186**DCL     10115>>IF      10115>>IF      10123>>IF      10139>>IF      10143>>IF      10143>>IF
OUTPUT_PWIDTH
      5229**DCL      9138>>ASSIGN   9140>>ASSIGN   9223>>ASSIGN   9225>>ASSIGN   9309>>ASSIGN   9311>>ASSIGN
OUTPUT_WIDTH
      5229**DCL     10097>>IF      10097>>IF      10232>>IF      10245>>CALLBLT 10250>>ASSIGN
OUT_BUF_VECTOR
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:270  
      8513**DCL      8771<<ASSIGN   9084<<ASSIGN   9126<<ASSIGN   9860<<ASSIGN   9873<<ASSIGN   9875<<ASSIGN
     10045>>ASSIGN
OUT_BUF_VECTOR.PTR$
      8516**DCL      9882<<ASSIGN   9882>>ASSIGN   9895>>CALLBLT 10024<<ASSIGN  10024>>ASSIGN  10025>>ASSIGN
     10032>>ASSIGN
OUT_SN
      5547**DCL     10111<>CALL
OUT_SN.SN
      5552**DCL      5553--REDEF
P$ IN PROCEDURE CONSTRUCT_KEY
      9399**DCL      9642<<ASSIGN   9644>>CALLBLT  9663<<ASSIGN   9666>>ASSIGN   9690<<ASSIGN   9692>>ASSIGN
      9711<<ASSIGN   9712>>CALLBLT
PERFORM_WRAPPING IN PROCEDURE WRITE_OUT_BUF
     10191**PROC    10100--CALL
PMME_ALT IN PROCEDURE WEOF
      9040**LABEL    9033--CALLALT
PMME_ALT IN PROCEDURE WRITE
     10284**LABEL   10277--CALLALT
PRINTABLE_XLATE_TBL
      8393**DCL      9195>>CALLBLT  9287>>CALLBLT  9361>>CALLBLT  9712>>CALLBLT
Q$ IN PROCEDURE CONSTRUCT_KEY
      9400**DCL      9664<<ASSIGN   9666>>ASSIGN   9669<<ASSIGN   9669>>ASSIGN   9671<<ASSIGN   9671>>ASSIGN
RAND_FLAG IN PROCEDURE NO_DUMP_PROC
      9853**DCL      9857<<ASSIGN   9859<<ASSIGN   9863<>CALL     9876<>CALL     9899<<ASSIGN   9900<>CALL
RAND_FLAG IN PROCEDURE WRITE_OUT_BUF
      9929**DCL      9907--PROC    10056>>IF
RECLEN_BUF IN PROCEDURE CONSTRUCT_KEY
      9398**DCL      9443<<CALLBLT  9445<<CALLBLT  9445>>CALLBLT  9451>>DOWHILE  9454>>CALLBLT  9458--ASSIGN
RECLEN_DONE IN PROCEDURE CONSTRUCT_KEY
      9462**LABEL    9442--GOTO
REC_LEN
      8517**DCL      8518--IMP-SIZ  8778<<ASSIGN   8887>>IF       8899<<ASSIGN   8899>>ASSIGN   8912<<ASSIGN
      8912>>ASSIGN   8922>>ASSIGN   8923<<ASSIGN   8923>>ASSIGN   8927>>IF       8930>>ASSIGN   8934<<ASSIGN
      8934>>ASSIGN   8943>>CALLBLT  8943>>CALLBLT  8947>>CALLBLT  8947>>CALLBLT  8951>>IF       8954>>IF
      8956<<ASSIGN   8961>>IF       8964>>ASSIGN   8965>>ASSIGN   8966<<ASSIGN   8968>>CALLBLT  8974>>IF
      8977>>ASSIGN   8978>>ASSIGN   8979<<ASSIGN   8981>>IF       8983>>DOWHILE  8983>>DOWHILE  8985<<ASSIGN
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:271  
      8985>>ASSIGN   8986>>IF       8998<<ASSIGN   8998>>ASSIGN   9086>>IF       9147>>ASSIGN   9152>>ASSIGN
      9153>>IF       9163>>ASSIGN   9233>>ASSIGN   9239>>ASSIGN   9240>>IF       9252>>ASSIGN   9318>>ASSIGN
      9323>>ASSIGN   9324>>IF       9334>>ASSIGN   9776>>DOWHILE  9778>>CALLBLT  9779>>IF       9811>>IF
      9815>>ASSIGN   9818<<ASSIGN   9818>>ASSIGN   9863<>CALL     9876<>CALL     9885>>IF       9888>>DOINDEX
      9893<<ASSIGN   9893>>ASSIGN   9895>>CALLBLT  9900<>CALL
REC_LEN IN PROCEDURE WRITE_OUT_BUF
      9951**DCL      9998--IMP-SIZ  9999--IMP-SIZ 10012<<ASSIGN  10023<<ASSIGN  10023>>ASSIGN  10031<<ASSIGN
     10031>>ASSIGN  10040>>IF      10050>>IF      10053>>ASSIGN  10054>>ASSIGN  10065<<ASSIGN  10065>>ASSIGN
     10066>>ASSIGN  10070>>ASSIGN  10071>>ASSIGN
REC_LENGTH
      8436**DCL         6--PROC     8778>>ASSIGN
REC_LEN_ IN PROCEDURE WRITE_OUT_BUF
      9928**DCL      9907--PROC    10012>>ASSIGN
SAMELINE
      8829**LABEL    8813--GOTO
SAVE_BUF IN PROCEDURE DUMP_PROC
      9064**DCL      9065--REDEF    9066--REDEF    9067--REDEF    9153>>IF       9163<<ASSIGN   9195>>CALLBLT
      9240>>IF       9252<<ASSIGN   9324>>IF       9334<<ASSIGN   9361>>CALLBLT
SAVE_BUF_ARY IN PROCEDURE DUMP_PROC
      9065**DCL      9188>>CALLBLT
SAVE_BUF_X1_ARY.ONE IN PROCEDURE DUMP_PROC
      9069**DCL      9353>>ASSIGN
SAVE_BUF_X1_ARY.TWO IN PROCEDURE DUMP_PROC
      9070**DCL      9355>>ASSIGN
SAVE_BUF_X_ARY IN PROCEDURE DUMP_PROC
      9066**DCL      9271>>ASSIGN   9273>>ASSIGN
SAVE_DVBYTE IN PROCEDURE WRITE_BLANK_LINE
      9107**DCL      9110<<ASSIGN   9128>>ASSIGN
SEQUENCE_DONE IN PROCEDURE CONSTRUCT_KEY
      9413**LABEL    9412--GOTO
SEQ_BUF
      8508**DCL      9416<<CALLBLT  9417>>CALLBLT
SET_OUTPUT_KEY IN PROCEDURE WRITE_OUT_BUF
     10161**PROC    10105--CALL    10253--CALL
SPEC_BUF
      5230**DCL      5230--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:272  
START_IDX
      8528**DCL      9082<<ASSIGN   9083<>CALL     9085<>CALL     9869<<ASSIGN   9870<>CALL     9874<>CALL
      9880>>IF       9882>>ASSIGN   9885>>IF       9890>>ASSIGN   9893>>ASSIGN   9894>>ASSIGN   9895>>CALLBLT
START_IDX IN PROCEDURE CONSTRUCT_KEY
      9392**DCL      9373--PROC     9417>>CALLBLT  9422<<ASSIGN   9422>>ASSIGN   9454>>CALLBLT  9458<<ASSIGN
      9458>>ASSIGN   9459>>DOWHILE  9460<<ASSIGN   9460>>ASSIGN   9462<<ASSIGN   9462>>ASSIGN   9487>>CALLBLT
      9490<<ASSIGN   9490>>ASSIGN   9502>>CALLBLT  9505<<ASSIGN   9505>>ASSIGN   9510>>CALLBLT  9513<<ASSIGN
      9513>>ASSIGN   9518>>CALLBLT  9521<<ASSIGN   9521>>ASSIGN   9536>>CALLBLT  9539<<ASSIGN   9539>>ASSIGN
      9544>>CALLBLT  9547<<ASSIGN   9547>>ASSIGN   9552>>CALLBLT  9555<<ASSIGN   9555>>ASSIGN   9563>>CALLBLT
      9566<<ASSIGN   9566>>ASSIGN   9569>>IF       9572>>CALLBLT  9578>>CALLBLT  9581<<ASSIGN   9581>>ASSIGN
      9638>>CALLBLT  9642>>ASSIGN   9646<<ASSIGN   9646>>ASSIGN   9647>>CALLBLT  9659>>CALLBLT  9663>>ASSIGN
      9673<<ASSIGN   9673>>ASSIGN   9674>>CALLBLT  9686>>CALLBLT  9690>>ASSIGN   9694<<ASSIGN   9694>>ASSIGN
      9695>>CALLBLT  9707>>CALLBLT  9711>>ASSIGN   9715<<ASSIGN   9715>>ASSIGN   9716>>CALLBLT  9732>>CALLBLT
      9737<<ASSIGN   9737>>ASSIGN
STAR_FLAG IN PROCEDURE DUMP_PROC
      9071**DCL      9146<<ASSIGN   9159<<ASSIGN   9172>>IF       9176<<ASSIGN   9232<<ASSIGN   9246<<ASSIGN
      9261>>IF       9265<<ASSIGN   9317<<ASSIGN   9330<<ASSIGN   9343>>IF       9347<<ASSIGN
SUB$STR
      8520**DCL      8965<<ASSIGN   8971<<ASSIGN   8978<<ASSIGN   9826<<ASSIGN  10054<<ASSIGN  10070<<ASSIGN
SUB_LEN
      8519**DCL      8520--IMP-SIZ  8964<<ASSIGN   8965>>ASSIGN   8970<<ASSIGN   8971>>ASSIGN   8977<<ASSIGN
      8978>>ASSIGN   9823<<ASSIGN   9826>>ASSIGN  10053<<ASSIGN  10054>>ASSIGN  10066<<ASSIGN  10068>>IF
     10070>>ASSIGN
T$ IN PROCEDURE DUMP_X
      9220**DCL      9250<<ASSIGN   9273>>ASSIGN   9277<<ASSIGN   9277>>ASSIGN   9279<<ASSIGN   9279>>ASSIGN
TAB$ IN PROCEDURE TAB_EXPAND
      9760**DCL      9770<<ASSIGN   9772<<ASSIGN   9788>>DOWHILE  9789>>IF       9799>>ASSIGN
TAB$TBL IN PROCEDURE TAB_EXPAND
      9761**DCL      9788>>DOWHILE  9789>>IF       9799>>ASSIGN
TABS
      5232**DCL      9768>>IF       9772--ASSIGN
TAB_EXPAND
      9747**PROC     8953--CALL
TAB_IDX IN PROCEDURE TAB_EXPAND
      9764**DCL      9774<<ASSIGN   9788>>DOWHILE  9788>>DOWHILE  9789>>IF       9791<<ASSIGN   9793<<ASSIGN
      9793>>ASSIGN   9795>>IF       9799>>ASSIGN
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:273  
TAB_TBL IN PROCEDURE TAB_EXPAND
      9757**DCL      9773<<ASSIGN
TAB_TBL.IDX IN PROCEDURE TAB_EXPAND
      9758**DCL      9784>>ASSIGN   9798<<ASSIGN   9798>>ASSIGN   9799>>ASSIGN   9811>>IF       9818>>ASSIGN
      9823>>ASSIGN   9823>>ASSIGN   9825<<ASSIGN   9825>>ASSIGN   9826>>ASSIGN   9830>>IF       9834>>ASSIGN
TAB_TBL.OFFSET IN PROCEDURE TAB_EXPAND
      9759**DCL      9784>>ASSIGN   9799<<ASSIGN   9811>>IF       9818>>ASSIGN   9823>>ASSIGN   9823>>ASSIGN
      9826>>ASSIGN   9830>>IF       9834>>ASSIGN
TEXT$ IN PROCEDURE DUMP_PROC
      9073**DCL      9145<<ASSIGN   9195>>CALLBLT  9231<<ASSIGN   9250>>ASSIGN   9287>>CALLBLT  9287>>CALLBLT
      9316<<ASSIGN   9361>>CALLBLT
TEXT$C.LEN
      8536**DCL      8537--IMP-SIZ  9712>>CALLBLT
TEXT$C.STRING
      8537**DCL      9712>>CALLBLT
TEXT_DONE IN PROCEDURE INSERT_OCT_KEY
      9716**LABEL    9706--GOTO
T_CHAR
      8521**DCL      8930<<ASSIGN   8931>>IF       8931>>IF
UBIN$4 IN PROCEDURE CONSTRUCT_KEY
      9401**DCL      9666>>ASSIGN
UBIN$4 IN PROCEDURE DUMP_PROC
      9079**DCL      9273<<ASSIGN
UC_XLATE_TBL
      8389**DCL      8947>>CALLBLT
USE_CONT
      5222**DCL     10274>>ASSIGN
VFC IN PROCEDURE WRITE_OUT_BUF
      9953**DCL     10080<<ASSIGN  10082<<ASSIGN  10097>>IF      10199>>IF      10230>>ASSIGN  10236>>IF
     10247>>ASSIGN  10252>>ASSIGN  10255>>IF
VFC_CHAR
      8522**DCL      9003<<ASSIGN   9004>>IF       9006<<ASSIGN   9008>>IF       9010<<ASSIGN   9012>>IF
      9014<<ASSIGN   9016>>IF       9018<<ASSIGN   9019>>ASSIGN
VFC_CHARACTER IN PROCEDURE WRITE_BLANK_LINE
      9108**DCL      9112<<ASSIGN   9119<<ASSIGN   9123<<ASSIGN   9126--ASSIGN   9127--CALL
VFC_TEXTC
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:274  
      8523**DCL     10128--CALL
VFC_TEXTC.LEN
      8524**DCL     10127<<ASSIGN
VFC_TEXTC.STRING
      8525**DCL     10126<<ASSIGN
VPD$CHECK_VOL IN PROCEDURE WRITE_OUT_BUF
     10007**DCL-ENT 10111--CALL
VPD$ENLARGE_BUF
      8576**DCL-ENT  9814--CALL     9887--CALL
VPE$FMT_ABORT
      8642**DCL-ENT 10128--CALL
VPL$ERR_PROC
      8723**DCL-ENT 10118--CALL    10141--CALL    10156--CALL    10158--CALL    10182--CALL    10184--CALL
VPL$ERR_SEV_HANDLER
      8724**DCL-ENT 10137--CALL
WEOF
      9030**PROC     8766--CALL
WEOF_ALT
      8765**LABEL    8766--CALLALT
WORDS_TO_DUMP IN PROCEDURE DUMP_PROC
      9057**DCL      9138<<ASSIGN   9140<<ASSIGN   9141>>IF       9143<<ASSIGN   9144>>ASSIGN   9145>>ASSIGN
      9147>>ASSIGN   9147>>ASSIGN   9148>>DOINDEX  9196>>ASSIGN   9199>>ASSIGN   9223<<ASSIGN   9225<<ASSIGN
      9226>>IF       9228<<ASSIGN   9229>>ASSIGN   9230>>ASSIGN   9231>>ASSIGN   9233>>ASSIGN   9233>>ASSIGN
      9234>>DOINDEX  9288>>ASSIGN   9291>>ASSIGN   9309<<ASSIGN   9311<<ASSIGN   9312>>IF       9314<<ASSIGN
      9315>>ASSIGN   9316>>ASSIGN   9318>>ASSIGN   9318>>ASSIGN   9319>>DOINDEX  9362>>ASSIGN   9365>>ASSIGN
WORD_OFFSET IN PROCEDURE DUMP_PROC
      9059**DCL      9148<<DOINDEX  9149>>ASSIGN   9150>>IF       9153>>IF       9153>>IF       9167>>ASSIGN
      9234<<DOINDEX  9236>>ASSIGN   9237>>IF       9240>>IF       9240>>IF       9256>>ASSIGN   9319<<DOINDEX
      9320>>ASSIGN   9321>>IF       9324>>IF       9324>>IF       9338>>ASSIGN
WRAP_ALLOWED IN PROCEDURE WRITE_OUT_BUF
     10097**LABEL   10088--GOTO
WRAP_VFC IN PROCEDURE WRITE_OUT_BUF
      9973**DCL     10203<<ASSIGN  10204>>ASSIGN  10209<<ASSIGN  10210>>ASSIGN  10216>>ASSIGN  10217<<ASSIGN
     10218>>ASSIGN  10223>>ASSIGN  10226>>ASSIGN  10227<<ASSIGN  10257>>ASSIGN
WRAP_VFC_ IN PROCEDURE WRITE_OUT_BUF
      9966**DCL      9973--REDEF
PL6.E3A0      #002=VPG$WRITE_OUT File=VPG$WRITE.:E05TSI                          WED 07/30/97 07:34 Page:275  
WRAP_VFC_.COUNT IN PROCEDURE WRITE_OUT_BUF
      9970**DCL     10225<<ASSIGN
WRAP_VFC_.FCN IN PROCEDURE WRITE_OUT_BUF
      9970**DCL     10205>>IF      10205>>IF      10212>>IF      10212>>IF      10220>>IF
WRITE IN PROCEDURE WRITE_OUT_BUF
     10269**PROC    10106--CALL    10150--CALL    10254--CALL
WRITE_BLANK_LINE IN PROCEDURE DUMP_PROC
      9099**PROC     9081--CALL
WRITE_MODE
      5925**DCL      9031>>DOCASE  10275>>DOCASE
WRITE_OUT_BUF
      9907**PROC     8774--CALL     9085--CALL     9127--CALL     9200--CALL     9292--CALL     9366--CALL
      9863--CALL     9874--CALL     9876--CALL     9900--CALL
WROTE_OK IN PROCEDURE WRITE_OUT_BUF
     10109**LABEL   10151--GOTO
X1_DONE IN PROCEDURE INSERT_OCT_KEY
      9674**LABEL    9658--GOTO
XSA$WRITE IN PROCEDURE WRITE_OUT_BUF
     10006**DCL-ENT 10279--CALL
XTBL
      8483**DCL      8484--REDEF
X_DONE IN PROCEDURE INSERT_OCT_KEY
      9695**LABEL    9685--GOTO
X_TBL
      8484**DCL      9258>>ASSIGN   9271>>ASSIGN   9340>>ASSIGN   9353>>ASSIGN   9355>>ASSIGN   9666>>ASSIGN
      9692>>ASSIGN
ZERO_LEN
      8988**LABEL    8988--GOTO
