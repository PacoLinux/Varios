VERSION E05

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:1    
        1        1        /*M*    VEX$READ_RANDOM - READ SPECIFIED OR NEXT RECORD FROM EDIT FILE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$READ_RANDOM: PROC(READ_KEY) ALTRET;
        9        9        /**/
       10       10        /*F*     NAME:     VEX$READ_RANDOM
       11       11                 PURPOSE:  TO READ THE RECORD WITH THE REQUESTED KEY FROM THE
       12       12                      EDIT FILE. SETS FLAGS.EXISTS. ALTRETURN ON ERROR. */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$READ_RANDOM
       15       15                 PARAMETERS: READ_KEY - THE KEY FOR THE REQUESTED RECORD
       16       16                 DESCRIPTION:  AN ATTEMPT IS MADE TO READ THE REQUESTED
       17       17                           KEYED RECORD THROUGH THE M$FILE DCB. IF IT EXISTS
       18       18                           THEN LAST_KEY IS SET TO THE KEY VALUE, FLAGS.EXISTS IS
       19       19                           SET AND A NORMAL RETURN IS MADE. IF UNABLE TO READ THE
       20       20                           REQUESTED RECORD BECAUSE IT DOESN'T EXIST THEN
       21       21                           FLAGS.EXISTS IS RESET AND VEX$READ_RANDOM RETURNS. IF
       22       22                           ANY OTHER ERROR IS ENCOUNTERED THEN AN ALTRETURN IS
       23       23                           MADE TO THE CALLER                      */
       24       24        /**/
       25       25        /**********************************************************************/
       26       26        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       27       27        /**********************************************************************/
       28       28    1   DCL READ_KEY CHAR(64) ;
       29       29    1   DCL 1 READ_E_KEY REDEF READ_KEY ,
       30       30    1          2 KEY UBIN WORD ,
       31       31    1          2 * CHAR(60) ;
       32       32        /**/
       33       33        /*********************************************************************/
       34       34        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       35       35        /*********************************************************************/
       36       36        %PLIST;
       37       37        %INCLUDE   CP_6;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:2    
       38      118        %INCLUDE   CP_6_SUBS ;
       39      658        %INCLUDE B_ERRORS_C;
       40     1785        %B$TCB;
       41     1788        %B$ALT;
       42     1796        %INCLUDE   VE_SUBS_C;
       43     1990        %INCLUDE VE_PERR_C;
       44     2207        %INCLUDE   F$DCB;
       45     2256        /**/
       46     2257        /*****************************************************************/
       47     2258        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       48     2259        /*****************************************************************/
       49     2260    1   DCL I UBIN AUTO;
       50     2261    1   DCL J UBIN AUTO;
       51     2262    1   DCL REC_POSIT UBIN AUTO;
       52     2263    1   DCL BSTRING_SIZE UBIN AUTO;
       53     2264    1   DCL TEMP_STRING CHAR(PC_RECSIZE#) AUTO;
       54     2265        /**/
       55     2266        %EJECT;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:3    
       56     2267        /***************************************************************************/
       57     2268        /*   STATIC DATA   STATIC DATA   STATIC DATA   STATIC DATA   STATIC DATA   */
       58     2269        /***************************************************************************/
       59     2270    1   DCL RR_READKEY CHAR(PC_RECSIZE#) STATIC;
       60     2271        /**/
       61     2272    1   DCL 1 RR_READ_KEY REDEF RR_READKEY,
       62     2273    1          2 EDITKEY UBIN WORD UNAL,
       63     2274    1          2 REKEY REDEF EDITKEY,
       64     2275    1             3 COUNT UBIN(9) UNAL,
       65     2276    1             3 * UBIN(27) UNAL,
       66     2277    1          2 * CHAR(1020);
       67     2278        /**/
       68     2279        /********************************************************************/
       69     2280        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       70     2281        /********************************************************************/
       71     2282        %FPT_READ   (FPTN = READ_RANDOM_FPT,
       72     2283                      BUF = REC_BUF,
       73     2284                      KEY = RR_READ_KEY.EDITKEY,
       74     2285                      DCB = M$FILE,
       75     2286                      KEYS = YES);
       76     2325        /**/
       77     2326        %FPT_READ   (FPTN = READ_SEQUEN_FPT,
       78     2327                      BUF = REC_BUF,
       79     2328                      KEY = RR_READ_KEY,
       80     2329                      DCB = M$FILE,
       81     2330                      KEYS = NO,
       82     2331                      KEYR = YES);
       83     2370        /**/
       84     2371        %FPT_PRECORD (FPTN = PREC_REV_FPT,
       85     2372                      DCB = M$FILE,
       86     2373                      BRK = YES,
       87     2374                      KEYS = NO,
       88     2375                      KEYR = YES,
       89     2376                      N = -1);
       90     2397        /**/
       91     2398        %FPT_PFIL     (FPTN = PFIL_FPT, STCLASS = CONSTANT,
       92     2399                       DCB = M$FILE,
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:4    
       93     2400                       BOF = YES);
       94     2415        /**/
       95     2416        %FPT_PFIL     (FPTN = PFIL_EOF_FPT, STCLASS = CONSTANT,
       96     2417                       DCB = M$FILE,
       97     2418                       BOF = NO);
       98     2433        /**/
       99     2434        %FPT_PRECORD  (FPTN = PREC_FPT,
      100     2435                        DCB = M$FILE,
      101     2436                        BRK = YES,
      102     2437                        KEYS = NO);
      103     2458        /**/
      104     2459        /*****************************************************************/
      105     2460        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      106     2461        /*****************************************************************/
      107     2462        /**/
      108     2463        %INCLUDE VE_FLAGS_R;
      109     2514        /**/
      110     2515    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
      111     2516    1   DCL LAST_KEY UBIN(36) SYMREF;
      112     2517    1   DCL REC_SIZE UBIN(36) SYMREF;
      113     2518    1   DCL RP_REC_SIZE UBIN WORD SYMREF;
      114     2519    1   DCL DVBYTE BIT(36) SYMREF ;
      115     2520    1   DCL Y003 UBIN (36) SYMREF;
      116     2521    1   DCL SEED BIT(36) SYMREF;
      117     2522    1   DCL MAX_SEQNUM UBIN WORD SYMREF;
      118     2523    1   DCL M$FILE$ PTR SYMREF;
      119     2524    1   DCL CRET CHAR(1) SYMREF;
      120     2525    1   DCL BSPACECHAR CHAR(1) SYMREF;
      121     2526    1   DCL TABCHAR CHAR(1) SYMREF;
      122     2527    1   DCL NUM_TABS UBIN WORD SYMREF;
      123     2528    1   DCL BLANKS CHAR(4) SYMREF;
      124     2529    1   DCL B$TCB$ PTR SYMREF;
      125     2530    1   DCL M$FILE DCB;
      126     2531    1   DCL FILE_TYP UBIN WORD SYMREF ;
      127     2532        /**/
      128     2533    1   DCL VEX$ERROR ENTRY(2) ALTRET;
      129     2534        /**/
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:5    
      130     2535        %VLP_TAB (FPTN = TAB_VLP,
      131     2536                  STCLASS = SYMREF);
      132     2550        %EJECT;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:6    
      133     2551        /*****************************************************************************/
      134     2552        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      135     2553        /*****************************************************************************/
      136     2554    1        FLAGS.BADKEY = '0'B ;
      137     2555    1        READ_RANDOM_FPT.V.SEED# = SEED;    /* ENCRYPTION                         */
      138     2556    1        READ_SEQUEN_FPT.V.SEED# = SEED;    /* ENCRYPTION                         */
      139     2557        /**/
      140     2558    1        FLAGS.EOF = FALSE;
      141     2559    1        FLAGS.EXISTS = FALSE;
      142     2560        /**/
      143     2561    2        IF (FLAGS.CONSEC_MODE) THEN DO;
      144     2562    3           IF (READ_E_KEY.KEY = Y003) THEN DO;
      145     2563    3              CALL M$PFIL(PFIL_FPT) ALTRET (READ_SEQUEN_ERR);
      146     2564    3              LAST_KEY = Y003;
      147     2565    3              RETURN;
      148     2566    3              END;
      149     2567    3           ELSE DO;
      150     2568    3              PREC_FPT.V.N# = ((READ_E_KEY.KEY - LAST_KEY)/1000) - 1;
      151     2569    3              PREC_FPT.KEY_ = VECTOR(LAST_KEY) ;
      152     2570    3              CALL M$PRECORD (PREC_FPT) ALTRET (CONPREC_ERR);
      153     2571    3              END;
      154     2572        /**/
      155     2573    2           REC_BUF = ' ';                  /* blank fill before read */
      156     2574    2           CALL M$READ (READ_SEQUEN_FPT) ALTRET (READ_SEQUEN_ERR);
      157     2575    2           IF M$FILE$ -> F$DCB.ORG = %INDEXED#
      158     2576    2           THEN LAST_KEY = READ_E_KEY.KEY ;
      159     2577    2           ELSE LAST_KEY = (RR_READ_KEY.EDITKEY * 1000) +  Y003;
      160     2578    2           END;
      161     2579        /**/
      162     2580    2        ELSE DO;
      163     2581    2           IF (FLAGS.REL_MODE) THEN RR_READ_KEY.EDITKEY = (READ_E_KEY.KEY-Y003)/1000;
      164     2582    2           ELSE
      165     2583    2              RR_READ_KEY.EDITKEY = READ_E_KEY.KEY ;
      166     2584    2           REC_BUF = ' ';                  /* blank fill before read */
      167     2585    2           CALL M$READ (READ_RANDOM_FPT) ALTRET (READ_RANDOM_ERR);
      168     2586    2           LAST_KEY = READ_E_KEY.KEY ;
      169     2587    2           END;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:7    
      170     2588        /**/
      171     2589    1        FLAGS.EXISTS = TRUE;
      172     2590    1        DVBYTE = M$FILE$ -> F$DCB.DVBYTE ;
      173     2591    1        REC_SIZE = M$FILE$ -> F$DCB.ARS;
      174     2592    1   STRIP_CRET:
      175     2593    1        RP_REC_SIZE = REC_SIZE;            /* SAVE FOR RP MODE                   */
      176     2594    1        IF (SUBSTR(REC_BUF,REC_SIZE-1,1) = CRET)
      177     2595    2        THEN DO;
      178     2596    2           SUBSTR(REC_BUF,REC_SIZE-1,1) = ' ';
      179     2597    2           REC_SIZE = REC_SIZE-1;
      180     2598    2           END;                            /* DO IF CR FOUND */
      181     2599        /**/
      182     2600    1        I = 0;                             /* TAB EXPANSION                      */
      183     2601    1        REC_POSIT = 0;
      184     2602        /**/
      185     2603    1   NEXT_TAB:
      186     2604    2        IF (FLAGS.TABXFLAG) THEN DO WHILE (I <= REC_SIZE);
      187     2605    3           IF (SUBSTR(REC_BUF,I,1) = BSPACECHAR) THEN DO;
      188     2606    3              IF (REC_POSIT > 0) THEN REC_POSIT = REC_POSIT - 1;
      189     2607    3              END;
      190     2608        /**/
      191     2609    3           ELSE IF (SUBSTR(REC_BUF,I,1) = TABCHAR) THEN DO;
      192     2610    4                 IF (NUM_TABS = 0) THEN DO;
      193     2611    5                    IF (~FLAGS.TABMSG) THEN DO;
      194     2612    5                       CALL VEX$ERROR(E$E_NOTABS,1);
      195     2613    5                       FLAGS.TABMSG = TRUE;
      196     2614    5                       END;
      197     2615    4                    CALL INSERT(REC_BUF,I,1,BLANKS);
      198     2616    4                    END;
      199     2617        /*E*     ERROR:    VEE-E$E_NOTABS-0
      200     2618                 MESSAGE:  Tab character found - no tab stops set
      201     2619                 DESCRIPTION: No tabs settings to use for expansion
      202     2620        */
      203     2621        /**/
      204     2622    4                 DO J = 0 TO NUM_TABS-1;
      205     2623    4                    IF ((REC_POSIT+1) < TAB_VLP.TABS#(J)) THEN GOTO GOT_TAB;
      206     2624    4                    END;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:8    
      207     2625        /**/
      208     2626    3                 CALL INSERT(REC_BUF,I,1,BLANKS);
      209     2627    3                 END;
      210     2628        /**/
      211     2629    2              ELSE REC_POSIT = REC_POSIT + 1;
      212     2630        /**/
      213     2631    2           I = I+1;
      214     2632    2           END;
      215     2633        /**/
      216     2634    1        RETURN;
      217     2635        /**/
      218     2636    1   GOT_TAB:
      219     2637    1        BSTRING_SIZE = TAB_VLP.TABS#(J) - REC_POSIT - 1; /* NUM. OF BLANKS    */
      220     2638    1        TEMP_STRING = SUBSTR(REC_BUF,I+1,REC_SIZE - (I+1));
      221     2639        /**/
      222     2640    1        CALL INSERT (REC_BUF,I+BSTRING_SIZE,REC_SIZE-(I+1),TEMP_STRING);
      223     2641    1        CALL INSERT (REC_BUF,I,BSTRING_SIZE,BLANKS);
      224     2642        /**/
      225     2643    1        I = I + BSTRING_SIZE;
      226     2644    1        REC_POSIT = REC_POSIT + BSTRING_SIZE;
      227     2645    1        REC_SIZE = REC_SIZE + BSTRING_SIZE - 1;
      228     2646    1        GOTO NEXT_TAB;
      229     2647        /**/
      230     2648        /**/
      231     2649    1   READ_RANDOM_ERR:
      232     2650    1        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOKEY)OR
      233     2651    2           (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$FILLIM) THEN DO;
      234     2652    2           FLAGS.EXISTS = FALSE;
      235     2653    2           RETURN;
      236     2654    2           END;
      237     2655    1        CALL VEX$ERROR(0,3);
      238     2656    1        ALTRETURN;
      239     2657        /**/
      240     2658        /**/
      241     2659    1   VEX$READ_SEQUEN: ENTRY ALTRET;
      242     2660        /**/
      243     2661        /*F*     NAME:     VEX$READ_SEQUEN
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:9    
      244     2662                 PURPOSE:  TO READ THE NEXT SEQUENTIAL RECORD FROM THE EDIT FILE.
      245     2663                           ALTRETURN ON ANY ERROR EXCEPT EOF, LAST_KEY IS SET
      246     2664                           TO THE KEY OF THE RECORD READ           */
      247     2665        /**/
      248     2666        /*D*     NAME:     VEX$READ_SEQUEN
      249     2667                 PARAMETERS:  NONE
      250     2668                 DESCRIPTION: AN ATTEMPT IS MADE TO READ THE NEXT RECORD FROM
      251     2669                           THE M$FILE DCB. IF IT EXISTS THEN LAST_KEY IS SET TO
      252     2670                           THE KEY OF THE RECORD READ AND A NORMAL RETURN
      253     2671                           IS MADE. IF AN EOF IS ENCOUNTERED THEN FLAGS.EOF IS
      254     2672                           SET AND VEX$READ_SEQUEN RETURNS. ANY OTHER ERROR
      255     2673                           CAUSES AN ALTRETURN.                    */
      256     2674        /**/
      257     2675        /*****************************************************************************/
      258     2676        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      259     2677        /*****************************************************************************/
      260     2678    1        FLAGS.BADKEY = '0'B ;
      261     2679    1        READ_SEQUEN_FPT.V.SEED# = SEED;
      262     2680    1        REC_BUF = ' ';                     /* blank pad before read */
      263     2681    1        CALL M$READ(READ_SEQUEN_FPT) ALTRET(READ_SEQUEN_ERR);
      264     2682    1        IF (FLAGS.CONSEC_MODE) THEN LAST_KEY = LAST_KEY+1000;
      265     2683    1        ELSE IF (FLAGS.REL_MODE) THEN
      266     2684    1              LAST_KEY = (RR_READ_KEY.EDITKEY * 1000) + Y003;
      267     2685    2           ELSE DO;
      268     2686    3              IF (RR_READ_KEY.REKEY.COUNT ~= 3) THEN DO ;
      269     2687    3                 RR_READ_KEY.REKEY.COUNT = 3;
      270     2688    3                 FLAGS.BADKEY = '1'B ;
      271     2689    3                 END ;                     /* THEN DO */
      272     2690    2              LAST_KEY = RR_READ_KEY.EDITKEY;
      273     2691    2              IF (LAST_KEY > MAX_SEQNUM) THEN LAST_KEY = MAX_SEQNUM;
      274     2692    2              END ;                        /* THEN DO */
      275     2693        /**/
      276     2694    1        FLAGS.EOF = FALSE;
      277     2695    1        DVBYTE = M$FILE$ -> F$DCB.DVBYTE ;
      278     2696    1        REC_SIZE = M$FILE$ -> F$DCB.ARS;
      279     2697    1        GOTO STRIP_CRET;
      280     2698        /**/
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:10   
      281     2699    1   READ_SEQUEN_ERR:
      282     2700    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$EOF) THEN DO;
      283     2701    2           FLAGS.EOF = TRUE;
      284     2702    2           IF FLAGS.CONSEC_MODE
      285     2703    2           THEN
      286     2704    2              LAST_KEY = Y003 + (M$FILE$ -> F$DCB.NRECS)*1000 ;
      287     2705    2           ELSE
      288     2706    3           DO ;
      289     2707    3              PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;
      290     2708    3              CALL M$PRECORD (PREC_REV_FPT) ALTRET (PREC_REV_ERR); /* GET LAST KEY */
      291     2709    3              END ;                        /* THEN DO */
      292     2710    2           IF (FLAGS.REL_MODE) THEN LAST_KEY = (LAST_KEY*1000) + Y003;
      293     2711    2           CALL M$PFIL (PFIL_EOF_FPT);
      294     2712    2           RETURN;
      295     2713    2           END;
      296     2714    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BADVECT1) THEN DO;
      297     2715    2           CALL VEX$ERROR(E$E_NOTEDITKEY,3) ;
      298     2716        /*E*     ERROR:    VEE-E$E_NOTEDITKEY-0
      299     2717                 MESSAGE:  Not an EDIT keyed file.
      300     2718                 DESCRIPTION: The record read contained a key that was not
      301     2719                           an EDIT file key.
      302     2720        */
      303     2721    2           ALTRETURN ;
      304     2722    2           END ;                           /* THEN DO */
      305     2723    1   PREC_REV_ERR:
      306     2724    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN DO; /* EMPTY FILE */
      307     2725    2           LAST_KEY = Y003 ;
      308     2726    2           RETURN;
      309     2727    2           END;
      310     2728        /**/
      311     2729    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BADVECT1) THEN DO;
      312     2730    2           LAST_KEY = MAX_SEQNUM ;
      313     2731    2           RETURN;
      314     2732    2           END;
      315     2733        /**/
      316     2734    1        CALL VEX$ERROR(0,3);
      317     2735    1        ALTRETURN;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:11   
      318     2736        /**/
      319     2737    1   CONPREC_ERR:
      320     2738    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$EOF) THEN DO;
      321     2739    2           LAST_KEY = LAST_KEY + (M$FILE$ -> F$DCB.ARS)*1000;
      322     2740    2           GOTO READ_SEQUEN_ERR;
      323     2741    2           END;
      324     2742    1        CALL VEX$ERROR(0,3);
      325     2743    1        ALTRETURN;
      326     2744    1   END;                                    /* END READ_RANDOM                    */
      327     2745        %EOD ;

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:12   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VEX$READ_RANDOM.

   Procedure VEX$READ_RANDOM requires 345 words for executable code.
   Procedure VEX$READ_RANDOM requires 266 words of local(AUTO) storage.

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:13   

 Object Unit name= VEX$READ_RANDOM                            File name= VEX$READ_RANDOM.:E05TOU
 UTS= JUL 30 '97 07:15:12.84 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none   304    460  VEX$READ_RANDOM
    2  RoData even  UTS      8     10  VEX$READ_RANDOM
    3   DCB   even  none     0      0  M$FILE
    4   Proc  even  none   345    531  VEX$READ_RANDOM
    5  RoData even  none    13     15  VEX$READ_RANDOM

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes    yes     yes      Std        1  VEX$READ_RANDOM
     4    332          yes     yes      Std        0  VEX$READ_SEQUEN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 VEX$ERROR
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:14   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FLAGS                                 REC_BUF
     LAST_KEY                              REC_SIZE                              RP_REC_SIZE
     DVBYTE                                Y003                                  SEED
     MAX_SEQNUM                            M$FILE$                               CRET
     BSPACECHAR                            TABCHAR                               NUM_TABS
     BLANKS                                B$TCB$                                M$FILE
     TAB_VLP                               B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:15   


        1        1        /*M*    VEX$READ_RANDOM - READ SPECIFIED OR NEXT RECORD FROM EDIT FILE */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=3,CTI=3,SDI=3,MCL=10,CSI=0,ECI=0 */
        8        8        VEX$READ_RANDOM: PROC(READ_KEY) ALTRET;

      8  4 000000   000000 700200 xent  VEX$READ_RA* TSX0  ! X66_AUTO_1
         4 000001   000412 000001                    ZERO    266,1

        9        9        /**/
       10       10        /*F*     NAME:     VEX$READ_RANDOM
       11       11                 PURPOSE:  TO READ THE RECORD WITH THE REQUESTED KEY FROM THE
       12       12                      EDIT FILE. SETS FLAGS.EXISTS. ALTRETURN ON ERROR. */
       13       13        /**/
       14       14        /*D*     NAME:     VEX$READ_RANDOM
       15       15                 PARAMETERS: READ_KEY - THE KEY FOR THE REQUESTED RECORD
       16       16                 DESCRIPTION:  AN ATTEMPT IS MADE TO READ THE REQUESTED
       17       17                           KEYED RECORD THROUGH THE M$FILE DCB. IF IT EXISTS
       18       18                           THEN LAST_KEY IS SET TO THE KEY VALUE, FLAGS.EXISTS IS
       19       19                           SET AND A NORMAL RETURN IS MADE. IF UNABLE TO READ THE
       20       20                           REQUESTED RECORD BECAUSE IT DOESN'T EXIST THEN
       21       21                           FLAGS.EXISTS IS RESET AND VEX$READ_RANDOM RETURNS. IF
       22       22                           ANY OTHER ERROR IS ENCOUNTERED THEN AN ALTRETURN IS
       23       23                           MADE TO THE CALLER                      */
       24       24        /**/
       25       25        /**********************************************************************/
       26       26        /*   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   PARAMETERS   */
       27       27        /**********************************************************************/
       28       28    1   DCL READ_KEY CHAR(64) ;
       29       29    1   DCL 1 READ_E_KEY REDEF READ_KEY ,
       30       30    1          2 KEY UBIN WORD ,
       31       31    1          2 * CHAR(60) ;
       32       32        /**/
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:16   
       33       33        /*********************************************************************/
       34       34        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
       35       35        /*********************************************************************/
       36       36        %PLIST;
       37       37        %INCLUDE   CP_6;
       38      118        %INCLUDE   CP_6_SUBS ;
       39      658        %INCLUDE B_ERRORS_C;
       40     1785        %B$TCB;
       41     1788        %B$ALT;
       42     1796        %INCLUDE   VE_SUBS_C;
       43     1990        %INCLUDE VE_PERR_C;
       44     2207        %INCLUDE   F$DCB;
       45     2256        /**/
       46     2257        /*****************************************************************/
       47     2258        /*   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   AUTO DATA   */
       48     2259        /*****************************************************************/
       49     2260    1   DCL I UBIN AUTO;
       50     2261    1   DCL J UBIN AUTO;
       51     2262    1   DCL REC_POSIT UBIN AUTO;
       52     2263    1   DCL BSTRING_SIZE UBIN AUTO;
       53     2264    1   DCL TEMP_STRING CHAR(PC_RECSIZE#) AUTO;
       54     2265        /**/
       55     2266        %EJECT;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:17   
       56     2267        /***************************************************************************/
       57     2268        /*   STATIC DATA   STATIC DATA   STATIC DATA   STATIC DATA   STATIC DATA   */
       58     2269        /***************************************************************************/
       59     2270    1   DCL RR_READKEY CHAR(PC_RECSIZE#) STATIC;
       60     2271        /**/
       61     2272    1   DCL 1 RR_READ_KEY REDEF RR_READKEY,
       62     2273    1          2 EDITKEY UBIN WORD UNAL,
       63     2274    1          2 REKEY REDEF EDITKEY,
       64     2275    1             3 COUNT UBIN(9) UNAL,
       65     2276    1             3 * UBIN(27) UNAL,
       66     2277    1          2 * CHAR(1020);
       67     2278        /**/
       68     2279        /********************************************************************/
       69     2280        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
       70     2281        /********************************************************************/
       71     2282        %FPT_READ   (FPTN = READ_RANDOM_FPT,
       72     2283                      BUF = REC_BUF,
       73     2284                      KEY = RR_READ_KEY.EDITKEY,
       74     2285                      DCB = M$FILE,
       75     2286                      KEYS = YES);
       76     2325        /**/
       77     2326        %FPT_READ   (FPTN = READ_SEQUEN_FPT,
       78     2327                      BUF = REC_BUF,
       79     2328                      KEY = RR_READ_KEY,
       80     2329                      DCB = M$FILE,
       81     2330                      KEYS = NO,
       82     2331                      KEYR = YES);
       83     2370        /**/
       84     2371        %FPT_PRECORD (FPTN = PREC_REV_FPT,
       85     2372                      DCB = M$FILE,
       86     2373                      BRK = YES,
       87     2374                      KEYS = NO,
       88     2375                      KEYR = YES,
       89     2376                      N = -1);
       90     2397        /**/
       91     2398        %FPT_PFIL     (FPTN = PFIL_FPT, STCLASS = CONSTANT,
       92     2399                       DCB = M$FILE,
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:18   
       93     2400                       BOF = YES);
       94     2415        /**/
       95     2416        %FPT_PFIL     (FPTN = PFIL_EOF_FPT, STCLASS = CONSTANT,
       96     2417                       DCB = M$FILE,
       97     2418                       BOF = NO);
       98     2433        /**/
       99     2434        %FPT_PRECORD  (FPTN = PREC_FPT,
      100     2435                        DCB = M$FILE,
      101     2436                        BRK = YES,
      102     2437                        KEYS = NO);
      103     2458        /**/
      104     2459        /*****************************************************************/
      105     2460        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      106     2461        /*****************************************************************/
      107     2462        /**/
      108     2463        %INCLUDE VE_FLAGS_R;
      109     2514        /**/
      110     2515    1   DCL REC_BUF CHAR(PC_RECSIZE#) SYMREF;
      111     2516    1   DCL LAST_KEY UBIN(36) SYMREF;
      112     2517    1   DCL REC_SIZE UBIN(36) SYMREF;
      113     2518    1   DCL RP_REC_SIZE UBIN WORD SYMREF;
      114     2519    1   DCL DVBYTE BIT(36) SYMREF ;
      115     2520    1   DCL Y003 UBIN (36) SYMREF;
      116     2521    1   DCL SEED BIT(36) SYMREF;
      117     2522    1   DCL MAX_SEQNUM UBIN WORD SYMREF;
      118     2523    1   DCL M$FILE$ PTR SYMREF;
      119     2524    1   DCL CRET CHAR(1) SYMREF;
      120     2525    1   DCL BSPACECHAR CHAR(1) SYMREF;
      121     2526    1   DCL TABCHAR CHAR(1) SYMREF;
      122     2527    1   DCL NUM_TABS UBIN WORD SYMREF;
      123     2528    1   DCL BLANKS CHAR(4) SYMREF;
      124     2529    1   DCL B$TCB$ PTR SYMREF;
      125     2530    1   DCL M$FILE DCB;
      126     2531    1   DCL FILE_TYP UBIN WORD SYMREF ;
      127     2532        /**/
      128     2533    1   DCL VEX$ERROR ENTRY(2) ALTRET;
      129     2534        /**/
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:19   
      130     2535        %VLP_TAB (FPTN = TAB_VLP,
      131     2536                  STCLASS = SYMREF);
      132     2550        %EJECT;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:20   
      133     2551        /*****************************************************************************/
      134     2552        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      135     2553        /*****************************************************************************/
      136     2554    1        FLAGS.BADKEY = '0'B ;

   2554  4 000002   000000 236000 5                  LDQ     0
         4 000003   000001 356000 xsym               ANSQ    FLAGS+1

      137     2555    1        READ_RANDOM_FPT.V.SEED# = SEED;    /* ENCRYPTION                         */

   2555  4 000004   000000 236000 xsym               LDQ     SEED
         4 000005   000412 756000 1                  STQ     READ_RANDOM_FPT+10

      138     2556    1        READ_SEQUEN_FPT.V.SEED# = SEED;    /* ENCRYPTION                         */

   2556  4 000006   000430 756000 1                  STQ     READ_SEQUEN_FPT+10

      139     2557        /**/
      140     2558    1        FLAGS.EOF = FALSE;

   2558  4 000007   000001 236000 5                  LDQ     1
         4 000010   000000 356000 xsym               ANSQ    FLAGS

      141     2559    1        FLAGS.EXISTS = FALSE;

   2559  4 000011   000002 236000 5                  LDQ     2
         4 000012   000000 356000 xsym               ANSQ    FLAGS

      142     2560        /**/
      143     2561    2        IF (FLAGS.CONSEC_MODE) THEN DO;

   2561  4 000013   000000 236000 xsym               LDQ     FLAGS
         4 000014   002000 316003                    CANQ    1024,DU
         4 000015   000070 600000 4                  TZE     s:2581

      144     2562    3           IF (READ_E_KEY.KEY = Y003) THEN DO;

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:21   
   2562  4 000016   200003 470500                    LDP0    @READ_KEY,,AUTO
         4 000017   000000 236100                    LDQ     0,,PR0
         4 000020   000000 116000 xsym               CMPQ    Y003
         4 000021   000031 601000 4                  TNZ     s:2568

      145     2563    3              CALL M$PFIL(PFIL_FPT) ALTRET (READ_SEQUEN_ERR);

   2563  4 000022   000000 630400 2                  EPPR0   PFIL_FPT
         4 000023   440004 713400                    CLIMB   alt,+16388
         4 000024   400000 401760                    pmme    nvectors=1
         4 000025   000414 702000 4                  TSX2    READ_SEQUEN_ERR

      146     2564    3              LAST_KEY = Y003;

   2564  4 000026   000000 235000 xsym               LDA     Y003
         4 000027   000000 755000 xsym               STA     LAST_KEY

      147     2565    3              RETURN;

   2565  4 000030   000000 702200 xent               TSX2  ! X66_ARET

      148     2566    3              END;
      149     2567    3           ELSE DO;

      150     2568    3              PREC_FPT.V.N# = ((READ_E_KEY.KEY - LAST_KEY)/1000) - 1;

   2568  4 000031   000000 136000 xsym               SBLQ    LAST_KEY
         4 000032   001750 506007                    DIV     1000,DL
         4 000033   000001 136007                    SBLQ    1,DL
         4 000034   000455 756000 1                  STQ     PREC_FPT+7

      151     2569    3              PREC_FPT.KEY_ = VECTOR(LAST_KEY) ;

   2569  4 000035   000004 237000 5                  LDAQ    4
         4 000036   000450 757000 1                  STAQ    PREC_FPT+2

      152     2570    3              CALL M$PRECORD (PREC_FPT) ALTRET (CONPREC_ERR);
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:22   

   2570  4 000037   000446 630400 1                  EPPR0   PREC_FPT
         4 000040   440003 713400                    CLIMB   alt,+16387
         4 000041   401000 401760                    pmme    nvectors=3
         4 000042   000510 702000 4                  TSX2    CONPREC_ERR

      153     2571    3              END;

      154     2572        /**/
      155     2573    2           REC_BUF = ' ';                  /* blank fill before read */

   2573  4 000043   040000 100400                    MLR     fill='040'O
         4 000044   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000045   000000 002000 xsym               ADSC9   REC_BUF                  cn=0,n=1024

      156     2574    2           CALL M$READ (READ_SEQUEN_FPT) ALTRET (READ_SEQUEN_ERR);

   2574  4 000046   000416 630400 1                  EPPR0   READ_SEQUEN_FPT
         4 000047   440000 713400                    CLIMB   alt,read
         4 000050   401400 401760                    pmme    nvectors=4
         4 000051   000414 702000 4                  TSX2    READ_SEQUEN_ERR

      157     2575    2           IF M$FILE$ -> F$DCB.ORG = %INDEXED#

   2575  4 000052   000000 470400 xsym               LDP0    M$FILE$
         4 000053   000032 236100                    LDQ     26,,PR0
         4 000054   777000 376003                    ANQ     -512,DU
         4 000055   006000 116003                    CMPQ    3072,DU
         4 000056   000063 601000 4                  TNZ     s:2577

      158     2576    2           THEN LAST_KEY = READ_E_KEY.KEY ;

   2576  4 000057   200003 471500                    LDP1    @READ_KEY,,AUTO
         4 000060   100000 235100                    LDA     0,,PR1
         4 000061   000000 755000 xsym               STA     LAST_KEY
         4 000062   000115 710000 4                  TRA     s:2589

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:23   
      159     2577    2           ELSE LAST_KEY = (RR_READ_KEY.EDITKEY * 1000) +  Y003;

   2577  4 000063   000000 236000 1                  LDQ     RR_READKEY
         4 000064   001750 402007                    MPY     1000,DL
         4 000065   000000 036000 xsym               ADLQ    Y003
         4 000066   000000 756000 xsym               STQ     LAST_KEY

      160     2578    2           END;

   2578  4 000067   000115 710000 4                  TRA     s:2589

      161     2579        /**/
      162     2580    2        ELSE DO;

      163     2581    2           IF (FLAGS.REL_MODE) THEN RR_READ_KEY.EDITKEY = (READ_E_KEY.KEY-Y003)/1000;

   2581  4 000070   400000 316007                    CANQ    -131072,DL
         4 000071   000100 600000 4                  TZE     s:2583

   2581  4 000072   200003 470500                    LDP0    @READ_KEY,,AUTO
         4 000073   000000 236100                    LDQ     0,,PR0
         4 000074   000000 136000 xsym               SBLQ    Y003
         4 000075   001750 506007                    DIV     1000,DL
         4 000076   000000 756000 1                  STQ     RR_READKEY
         4 000077   000103 710000 4                  TRA     s:2584

      164     2582    2           ELSE
      165     2583    2              RR_READ_KEY.EDITKEY = READ_E_KEY.KEY ;

   2583  4 000100   200003 470500                    LDP0    @READ_KEY,,AUTO
         4 000101   000000 235100                    LDA     0,,PR0
         4 000102   000000 755000 1                  STA     RR_READKEY

      166     2584    2           REC_BUF = ' ';                  /* blank fill before read */

   2584  4 000103   040000 100400                    MLR     fill='040'O
         4 000104   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:24   
         4 000105   000000 002000 xsym               ADSC9   REC_BUF                  cn=0,n=1024

      167     2585    2           CALL M$READ (READ_RANDOM_FPT) ALTRET (READ_RANDOM_ERR);

   2585  4 000106   000400 630400 1                  EPPR0   READ_RANDOM_FPT
         4 000107   440000 713400                    CLIMB   alt,read
         4 000110   401400 401760                    pmme    nvectors=4
         4 000111   000312 702000 4                  TSX2    READ_RANDOM_ERR

      168     2586    2           LAST_KEY = READ_E_KEY.KEY ;

   2586  4 000112   200003 470500                    LDP0    @READ_KEY,,AUTO
         4 000113   000000 235100                    LDA     0,,PR0
         4 000114   000000 755000 xsym               STA     LAST_KEY

      169     2587    2           END;

      170     2588        /**/
      171     2589    1        FLAGS.EXISTS = TRUE;

   2589  4 000115   020000 236003                    LDQ     8192,DU
         4 000116   000000 256000 xsym               ORSQ    FLAGS

      172     2590    1        DVBYTE = M$FILE$ -> F$DCB.DVBYTE ;

   2590  4 000117   000000 470400 xsym               LDP0    M$FILE$
         4 000120   000003 236100                    LDQ     3,,PR0
         4 000121   776000 376003                    ANQ     -1024,DU
         4 000122   000000 756000 xsym               STQ     DVBYTE

      173     2591    1        REC_SIZE = M$FILE$ -> F$DCB.ARS;

   2591  4 000123   000000 235100                    LDA     0,,PR0
         4 000124   000000 755000 xsym               STA     REC_SIZE

      174     2592    1   STRIP_CRET:
      175     2593    1        RP_REC_SIZE = REC_SIZE;            /* SAVE FOR RP MODE                   */
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:25   

   2593  4 000125   000000 235000 xsym  STRIP_CRET   LDA     REC_SIZE
         4 000126   000000 755000 xsym               STA     RP_REC_SIZE

      176     2594    1        IF (SUBSTR(REC_BUF,REC_SIZE-1,1) = CRET)

   2594  4 000127   040000 106405                    CMPC    fill='040'O
         4 000130   777777 600001 xsym               ADSC9   REC_BUF-1,A              cn=3,n=1
         4 000131   000000 000001 xsym               ADSC9   CRET                     cn=0,n=1
         4 000132   000140 601000 4                  TNZ     s:2600

      177     2595    2        THEN DO;

      178     2596    2           SUBSTR(REC_BUF,REC_SIZE-1,1) = ' ';

   2596  4 000133   040005 100400                    MLR     fill='040'O
         4 000134   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000135   777777 600001 xsym               ADSC9   REC_BUF-1,A              cn=3,n=1

      179     2597    2           REC_SIZE = REC_SIZE-1;

   2597  4 000136   000001 135007                    SBLA    1,DL
         4 000137   000000 755000 xsym               STA     REC_SIZE

      180     2598    2           END;                            /* DO IF CR FOUND */

      181     2599        /**/
      182     2600    1        I = 0;                             /* TAB EXPANSION                      */

   2600  4 000140   200004 450100                    STZ     I,,AUTO

      183     2601    1        REC_POSIT = 0;

   2601  4 000141   200006 450100                    STZ     REC_POSIT,,AUTO

      184     2602        /**/
      185     2603    1   NEXT_TAB:
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:26   
      186     2604    2        IF (FLAGS.TABXFLAG) THEN DO WHILE (I <= REC_SIZE);

   2604  4 000142   000000 236000 xsym  NEXT_TAB     LDQ     FLAGS
         4 000143   000100 316003                    CANQ    64,DU
         4 000144   000243 600000 4                  TZE     s:2634

   2604  4 000145   000000 236000 xsym               LDQ     REC_SIZE
         4 000146   200004 116100                    CMPQ    I,,AUTO
         4 000147   000243 602000 4                  TNC     s:2634

      187     2605    3           IF (SUBSTR(REC_BUF,I,1) = BSPACECHAR) THEN DO;

   2605  4 000150   200004 235100                    LDA     I,,AUTO
         4 000151   040000 106405                    CMPC    fill='040'O
         4 000152   000000 000001 xsym               ADSC9   REC_BUF,A                cn=0,n=1
         4 000153   000000 000001 xsym               ADSC9   BSPACECHAR               cn=0,n=1
         4 000154   000162 601000 4                  TNZ     s:2609

      188     2606    3              IF (REC_POSIT > 0) THEN REC_POSIT = REC_POSIT - 1;

   2606  4 000155   200006 236100                    LDQ     REC_POSIT,,AUTO
         4 000156   000236 600000 4                  TZE     s:2631

   2606  4 000157   000001 136007                    SBLQ    1,DL
         4 000160   200006 756100                    STQ     REC_POSIT,,AUTO

      189     2607    3              END;

   2607  4 000161   000236 710000 4                  TRA     s:2631

      190     2608        /**/
      191     2609    3           ELSE IF (SUBSTR(REC_BUF,I,1) = TABCHAR) THEN DO;

   2609  4 000162   040000 106405                    CMPC    fill='040'O
         4 000163   000000 000001 xsym               ADSC9   REC_BUF,A                cn=0,n=1
         4 000164   000000 000001 xsym               ADSC9   TABCHAR                  cn=0,n=1
         4 000165   000233 601000 4                  TNZ     s:2629
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:27   

      192     2610    4                 IF (NUM_TABS = 0) THEN DO;

   2610  4 000166   000000 236000 xsym               LDQ     NUM_TABS
         4 000167   000207 601000 4                  TNZ     s:2622

      193     2611    5                    IF (~FLAGS.TABMSG) THEN DO;

   2611  4 000170   000000 236000 xsym               LDQ     FLAGS
         4 000171   000025 736000                    QLS     21
         4 000172   400000 376003                    ANQ     -131072,DU
         4 000173   400000 676003                    ERQ     -131072,DU
         4 000174   000203 600000 4                  TZE     s:2615

      194     2612    5                       CALL VEX$ERROR(E$E_NOTABS,1);

   2612  4 000175   000006 630400 5                  EPPR0   6
         4 000176   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000177   000000 701000 xent               TSX1    VEX$ERROR
         4 000200   000000 011000                    NOP     0

      195     2613    5                       FLAGS.TABMSG = TRUE;

   2613  4 000201   040000 236007                    LDQ     16384,DL
         4 000202   000000 256000 xsym               ORSQ    FLAGS

      196     2614    5                       END;

      197     2615    4                    CALL INSERT(REC_BUF,I,1,BLANKS);

   2615  4 000203   200004 235100                    LDA     I,,AUTO
         4 000204   040005 100400                    MLR     fill='040'O
         4 000205   000000 000001 xsym               ADSC9   BLANKS                   cn=0,n=1
         4 000206   000000 000001 xsym               ADSC9   REC_BUF,A                cn=0,n=1

      198     2616    4                    END;

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:28   
      199     2617        /*E*     ERROR:    VEE-E$E_NOTABS-0
      200     2618                 MESSAGE:  Tab character found - no tab stops set
      201     2619                 DESCRIPTION: No tabs settings to use for expansion
      202     2620        */
      203     2621        /**/
      204     2622    4                 DO J = 0 TO NUM_TABS-1;

   2622  4 000207   200005 450100                    STZ     J,,AUTO
         4 000210   000223 710000 4                  TRA     s:2624+2

      205     2623    4                    IF ((REC_POSIT+1) < TAB_VLP.TABS#(J)) THEN GOTO GOT_TAB;

   2623  4 000211   200005 235100                    LDA     J,,AUTO
         4 000212   000100 101405                    MRL     fill='000'O
         4 000213   000000 200001 xsym               ADSC9   TAB_VLP,A                cn=1,n=1
         4 000214   200410 000004                    ADSC9   TEMP_STRING+256,,AUTO    cn=0,n=4
         4 000215   200006 236100                    LDQ     REC_POSIT,,AUTO
         4 000216   000001 036007                    ADLQ    1,DL
         4 000217   200410 116100                    CMPQ    TEMP_STRING+256,,AUTO
         4 000220   000244 602000 4                  TNC     GOT_TAB

      206     2624    4                    END;

   2624  4 000221   000001 035007                    ADLA    1,DL
         4 000222   200005 755100                    STA     J,,AUTO
         4 000223   200005 236100                    LDQ     J,,AUTO
         4 000224   000000 116000 xsym               CMPQ    NUM_TABS
         4 000225   000211 602000 4                  TNC     s:2623

      207     2625        /**/
      208     2626    3                 CALL INSERT(REC_BUF,I,1,BLANKS);

   2626  4 000226   200004 235100                    LDA     I,,AUTO
         4 000227   040005 100400                    MLR     fill='040'O
         4 000230   000000 000001 xsym               ADSC9   BLANKS                   cn=0,n=1
         4 000231   000000 000001 xsym               ADSC9   REC_BUF,A                cn=0,n=1

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:29   
      209     2627    3                 END;

   2627  4 000232   000236 710000 4                  TRA     s:2631

      210     2628        /**/
      211     2629    2              ELSE REC_POSIT = REC_POSIT + 1;

   2629  4 000233   200006 236100                    LDQ     REC_POSIT,,AUTO
         4 000234   000001 036007                    ADLQ    1,DL
         4 000235   200006 756100                    STQ     REC_POSIT,,AUTO

      212     2630        /**/
      213     2631    2           I = I+1;

   2631  4 000236   000001 035007                    ADLA    1,DL
         4 000237   200004 755100                    STA     I,,AUTO

      214     2632    2           END;

   2632  4 000240   000000 236000 xsym               LDQ     REC_SIZE
         4 000241   200004 116100                    CMPQ    I,,AUTO
         4 000242   000150 603000 4                  TRC     s:2605

      215     2633        /**/
      216     2634    1        RETURN;

   2634  4 000243   000000 702200 xent               TSX2  ! X66_ARET

      217     2635        /**/
      218     2636    1   GOT_TAB:
      219     2637    1        BSTRING_SIZE = TAB_VLP.TABS#(J) - REC_POSIT - 1; /* NUM. OF BLANKS    */

   2637  4 000244   000100 101405       GOT_TAB      MRL     fill='000'O
         4 000245   000000 200001 xsym               ADSC9   TAB_VLP,A                cn=1,n=1
         4 000246   200410 000004                    ADSC9   TEMP_STRING+256,,AUTO    cn=0,n=4
         4 000247   200410 236100                    LDQ     TEMP_STRING+256,,AUTO
         4 000250   200006 136100                    SBLQ    REC_POSIT,,AUTO
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:30   
         4 000251   000001 136007                    SBLQ    1,DL
         4 000252   200007 756100                    STQ     BSTRING_SIZE,,AUTO

      220     2638    1        TEMP_STRING = SUBSTR(REC_BUF,I+1,REC_SIZE - (I+1));

   2638  4 000253   000000 236000 xsym               LDQ     REC_SIZE
         4 000254   200004 136100                    SBLQ    I,,AUTO
         4 000255   777777 620006                    EAX0    -1,QL
         4 000256   200004 236100                    LDQ     I,,AUTO
         4 000257   040100 100446                    MLR     fill='040'O
         4 000260   000000 200010 xsym               ADSC9   REC_BUF,Q                cn=1,n=*X0
         4 000261   200010 002000                    ADSC9   TEMP_STRING,,AUTO        cn=0,n=1024

      221     2639        /**/
      222     2640    1        CALL INSERT (REC_BUF,I+BSTRING_SIZE,REC_SIZE-(I+1),TEMP_STRING);

   2640  4 000262   200007 036100                    ADLQ    BSTRING_SIZE,,AUTO
         4 000263   200410 756100                    STQ     TEMP_STRING+256,,AUTO
         4 000264   000000 236000 xsym               LDQ     REC_SIZE
         4 000265   200004 136100                    SBLQ    I,,AUTO
         4 000266   777777 620006                    EAX0    -1,QL
         4 000267   200410 236100                    LDQ     TEMP_STRING+256,,AUTO
         4 000270   040046 100500                    MLR     fill='040'O
         4 000271   200010 002000                    ADSC9   TEMP_STRING,,AUTO        cn=0,n=1024
         4 000272   000000 000010 xsym               ADSC9   REC_BUF,Q                cn=0,n=*X0

      223     2641    1        CALL INSERT (REC_BUF,I,BSTRING_SIZE,BLANKS);

   2641  4 000273   200007 720100                    LXL0    BSTRING_SIZE,,AUTO
         4 000274   200004 236100                    LDQ     I,,AUTO
         4 000275   040046 100400                    MLR     fill='040'O
         4 000276   000000 000004 xsym               ADSC9   BLANKS                   cn=0,n=4
         4 000277   000000 000010 xsym               ADSC9   REC_BUF,Q                cn=0,n=*X0

      224     2642        /**/
      225     2643    1        I = I + BSTRING_SIZE;

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:31   
   2643  4 000300   200007 036100                    ADLQ    BSTRING_SIZE,,AUTO
         4 000301   200004 756100                    STQ     I,,AUTO

      226     2644    1        REC_POSIT = REC_POSIT + BSTRING_SIZE;

   2644  4 000302   200006 236100                    LDQ     REC_POSIT,,AUTO
         4 000303   200007 036100                    ADLQ    BSTRING_SIZE,,AUTO
         4 000304   200006 756100                    STQ     REC_POSIT,,AUTO

      227     2645    1        REC_SIZE = REC_SIZE + BSTRING_SIZE - 1;

   2645  4 000305   000000 236000 xsym               LDQ     REC_SIZE
         4 000306   200007 036100                    ADLQ    BSTRING_SIZE,,AUTO
         4 000307   000001 136007                    SBLQ    1,DL
         4 000310   000000 756000 xsym               STQ     REC_SIZE

      228     2646    1        GOTO NEXT_TAB;

   2646  4 000311   000142 710000 4                  TRA     NEXT_TAB

      229     2647        /**/
      230     2648        /**/
      231     2649    1   READ_RANDOM_ERR:
      232     2650    1        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$NOKEY)OR

   2650  4 000312   000000 470400 xsym  READ_RANDOM* LDP0    B$TCB$
         4 000313   000000 471500                    LDP1    0,,PR0
         4 000314   100102 236100                    LDQ     66,,PR1
         4 000315   377770 376007                    ANQ     131064,DL
         4 000316   001020 116007                    CMPQ    528,DL
         4 000317   000322 600000 4                  TZE     s:2652
         4 000320   001200 116007                    CMPQ    640,DL
         4 000321   000325 601000 4                  TNZ     s:2655

      233     2651    2           (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$FILLIM) THEN DO;

      234     2652    2           FLAGS.EXISTS = FALSE;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:32   

   2652  4 000322   000002 236000 5                  LDQ     2
         4 000323   000000 356000 xsym               ANSQ    FLAGS

      235     2653    2           RETURN;

   2653  4 000324   000000 702200 xent               TSX2  ! X66_ARET

      236     2654    2           END;
      237     2655    1        CALL VEX$ERROR(0,3);

   2655  4 000325   000010 630400 5                  EPPR0   8
         4 000326   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000327   000000 701000 xent               TSX1    VEX$ERROR
         4 000330   000000 011000                    NOP     0

      238     2656    1        ALTRETURN;

   2656  4 000331   000000 702200 xent               TSX2  ! X66_AALT

      239     2657        /**/
      240     2658        /**/
      241     2659    1   VEX$READ_SEQUEN: ENTRY ALTRET;

   2659  4 000332   000000 700200 xent  VEX$READ_SE* TSX0  ! X66_AUTO_1
         4 000333   000412 000001                    ZERO    266,1

      242     2660        /**/
      243     2661        /*F*     NAME:     VEX$READ_SEQUEN
      244     2662                 PURPOSE:  TO READ THE NEXT SEQUENTIAL RECORD FROM THE EDIT FILE.
      245     2663                           ALTRETURN ON ANY ERROR EXCEPT EOF, LAST_KEY IS SET
      246     2664                           TO THE KEY OF THE RECORD READ           */
      247     2665        /**/
      248     2666        /*D*     NAME:     VEX$READ_SEQUEN
      249     2667                 PARAMETERS:  NONE
      250     2668                 DESCRIPTION: AN ATTEMPT IS MADE TO READ THE NEXT RECORD FROM
      251     2669                           THE M$FILE DCB. IF IT EXISTS THEN LAST_KEY IS SET TO
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:33   
      252     2670                           THE KEY OF THE RECORD READ AND A NORMAL RETURN
      253     2671                           IS MADE. IF AN EOF IS ENCOUNTERED THEN FLAGS.EOF IS
      254     2672                           SET AND VEX$READ_SEQUEN RETURNS. ANY OTHER ERROR
      255     2673                           CAUSES AN ALTRETURN.                    */
      256     2674        /**/
      257     2675        /*****************************************************************************/
      258     2676        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      259     2677        /*****************************************************************************/
      260     2678    1        FLAGS.BADKEY = '0'B ;

   2678  4 000334   000000 236000 5                  LDQ     0
         4 000335   000001 356000 xsym               ANSQ    FLAGS+1

      261     2679    1        READ_SEQUEN_FPT.V.SEED# = SEED;

   2679  4 000336   000000 236000 xsym               LDQ     SEED
         4 000337   000430 756000 1                  STQ     READ_SEQUEN_FPT+10

      262     2680    1        REC_BUF = ' ';                     /* blank pad before read */

   2680  4 000340   040000 100400                    MLR     fill='040'O
         4 000341   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000342   000000 002000 xsym               ADSC9   REC_BUF                  cn=0,n=1024

      263     2681    1        CALL M$READ(READ_SEQUEN_FPT) ALTRET(READ_SEQUEN_ERR);

   2681  4 000343   000416 630400 1                  EPPR0   READ_SEQUEN_FPT
         4 000344   440000 713400                    CLIMB   alt,read
         4 000345   401400 401760                    pmme    nvectors=4
         4 000346   000414 702000 4                  TSX2    READ_SEQUEN_ERR

      264     2682    1        IF (FLAGS.CONSEC_MODE) THEN LAST_KEY = LAST_KEY+1000;

   2682  4 000347   000000 236000 xsym               LDQ     FLAGS
         4 000350   002000 316003                    CANQ    1024,DU
         4 000351   000356 600000 4                  TZE     s:2683

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:34   
   2682  4 000352   000000 235000 xsym               LDA     LAST_KEY
         4 000353   001750 035007                    ADLA    1000,DL
         4 000354   000000 755000 xsym               STA     LAST_KEY
         4 000355   000403 710000 4                  TRA     s:2694

      265     2683    1        ELSE IF (FLAGS.REL_MODE) THEN

   2683  4 000356   400000 316007                    CANQ    -131072,DL
         4 000357   000365 600000 4                  TZE     s:2686

      266     2684    1              LAST_KEY = (RR_READ_KEY.EDITKEY * 1000) + Y003;

   2684  4 000360   000000 236000 1                  LDQ     RR_READKEY
         4 000361   001750 402007                    MPY     1000,DL
         4 000362   000000 036000 xsym               ADLQ    Y003
         4 000363   000000 756000 xsym               STQ     LAST_KEY
         4 000364   000403 710000 4                  TRA     s:2694

      267     2685    2           ELSE DO;

      268     2686    3              IF (RR_READ_KEY.REKEY.COUNT ~= 3) THEN DO ;

   2686  4 000365   000000 236000 1                  LDQ     RR_READKEY
         4 000366   777000 376003                    ANQ     -512,DU
         4 000367   003000 116003                    CMPQ    1536,DU
         4 000370   000375 600000 4                  TZE     s:2690

      269     2687    3                 RR_READ_KEY.REKEY.COUNT = 3;

   2687  4 000371   003000 236003                    LDQ     1536,DU
         4 000372   000000 552040 1                  STBQ    RR_READKEY,'40'O

      270     2688    3                 FLAGS.BADKEY = '1'B ;

   2688  4 000373   200000 236003                    LDQ     65536,DU
         4 000374   000001 256000 xsym               ORSQ    FLAGS+1

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:35   
      271     2689    3                 END ;                     /* THEN DO */

      272     2690    2              LAST_KEY = RR_READ_KEY.EDITKEY;

   2690  4 000375   000000 235000 1                  LDA     RR_READKEY
         4 000376   000000 755000 xsym               STA     LAST_KEY

      273     2691    2              IF (LAST_KEY > MAX_SEQNUM) THEN LAST_KEY = MAX_SEQNUM;

   2691  4 000377   000000 236000 xsym               LDQ     MAX_SEQNUM
         4 000400   000000 116000 xsym               CMPQ    LAST_KEY
         4 000401   000403 603000 4                  TRC     s:2694

   2691  4 000402   000000 756000 xsym               STQ     LAST_KEY

      274     2692    2              END ;                        /* THEN DO */

      275     2693        /**/
      276     2694    1        FLAGS.EOF = FALSE;

   2694  4 000403   000001 236000 5                  LDQ     1
         4 000404   000000 356000 xsym               ANSQ    FLAGS

      277     2695    1        DVBYTE = M$FILE$ -> F$DCB.DVBYTE ;

   2695  4 000405   000000 470400 xsym               LDP0    M$FILE$
         4 000406   000003 236100                    LDQ     3,,PR0
         4 000407   776000 376003                    ANQ     -1024,DU
         4 000410   000000 756000 xsym               STQ     DVBYTE

      278     2696    1        REC_SIZE = M$FILE$ -> F$DCB.ARS;

   2696  4 000411   000000 235100                    LDA     0,,PR0
         4 000412   000000 755000 xsym               STA     REC_SIZE

      279     2697    1        GOTO STRIP_CRET;

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:36   
   2697  4 000413   000125 710000 4                  TRA     STRIP_CRET

      280     2698        /**/
      281     2699    1   READ_SEQUEN_ERR:
      282     2700    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$EOF) THEN DO;

   2700  4 000414   000000 470400 xsym  READ_SEQUEN* LDP0    B$TCB$
         4 000415   000000 471500                    LDP1    0,,PR0
         4 000416   100102 236100                    LDQ     66,,PR1
         4 000417   377770 376007                    ANQ     131064,DL
         4 000420   000060 116007                    CMPQ    48,DL
         4 000421   000456 601000 4                  TNZ     s:2714

      283     2701    2           FLAGS.EOF = TRUE;

   2701  4 000422   010000 236003                    LDQ     4096,DU
         4 000423   000000 256000 xsym               ORSQ    FLAGS

      284     2702    2           IF FLAGS.CONSEC_MODE

   2702  4 000424   000000 236000 xsym               LDQ     FLAGS
         4 000425   002000 316003                    CANQ    1024,DU
         4 000426   000435 600000 4                  TZE     s:2707

      285     2703    2           THEN
      286     2704    2              LAST_KEY = Y003 + (M$FILE$ -> F$DCB.NRECS)*1000 ;

   2704  4 000427   000000 471400 xsym               LDP1    M$FILE$
         4 000430   100042 236100                    LDQ     34,,PR1
         4 000431   001750 402007                    MPY     1000,DL
         4 000432   000000 036000 xsym               ADLQ    Y003
         4 000433   000000 756000 xsym               STQ     LAST_KEY
         4 000434   000443 710000 4                  TRA     s:2710

      287     2705    2           ELSE
      288     2706    3           DO ;

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:37   
      289     2707    3              PREC_REV_FPT.KEY_ = VECTOR(LAST_KEY) ;

   2707  4 000435   000004 237000 5                  LDAQ    4
         4 000436   000436 757000 1                  STAQ    PREC_REV_FPT+2

      290     2708    3              CALL M$PRECORD (PREC_REV_FPT) ALTRET (PREC_REV_ERR); /* GET LAST KEY */

   2708  4 000437   000434 630400 1                  EPPR0   PREC_REV_FPT
         4 000440   440003 713400                    CLIMB   alt,+16387
         4 000441   401000 401760                    pmme    nvectors=3
         4 000442   000465 702000 4                  TSX2    PREC_REV_ERR

      291     2709    3              END ;                        /* THEN DO */

      292     2710    2           IF (FLAGS.REL_MODE) THEN LAST_KEY = (LAST_KEY*1000) + Y003;

   2710  4 000443   000000 236000 xsym               LDQ     FLAGS
         4 000444   400000 316007                    CANQ    -131072,DL
         4 000445   000452 600000 4                  TZE     s:2711

   2710  4 000446   000000 236000 xsym               LDQ     LAST_KEY
         4 000447   001750 402007                    MPY     1000,DL
         4 000450   000000 036000 xsym               ADLQ    Y003
         4 000451   000000 756000 xsym               STQ     LAST_KEY

      293     2711    2           CALL M$PFIL (PFIL_EOF_FPT);

   2711  4 000452   000004 630400 2                  EPPR0   PFIL_EOF_FPT
         4 000453   040004 713400                    CLIMB   16388
         4 000454   400000 401760                    pmme    nvectors=1

      294     2712    2           RETURN;

   2712  4 000455   000000 702200 xent               TSX2  ! X66_ARET

      295     2713    2           END;
      296     2714    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BADVECT1) THEN DO;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:38   

   2714  4 000456   006450 116007                    CMPQ    3368,DL
         4 000457   000465 601000 4                  TNZ     PREC_REV_ERR

      297     2715    2           CALL VEX$ERROR(E$E_NOTEDITKEY,3) ;

   2715  4 000460   000013 630400 5                  EPPR0   11
         4 000461   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000462   000000 701000 xent               TSX1    VEX$ERROR
         4 000463   000000 011000                    NOP     0

      298     2716        /*E*     ERROR:    VEE-E$E_NOTEDITKEY-0
      299     2717                 MESSAGE:  Not an EDIT keyed file.
      300     2718                 DESCRIPTION: The record read contained a key that was not
      301     2719                           an EDIT file key.
      302     2720        */
      303     2721    2           ALTRETURN ;

   2721  4 000464   000000 702200 xent               TSX2  ! X66_AALT

      304     2722    2           END ;                           /* THEN DO */
      305     2723    1   PREC_REV_ERR:
      306     2724    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF) THEN DO; /* EMPTY FILE */

   2724  4 000465   000000 470400 xsym  PREC_REV_ERR LDP0    B$TCB$
         4 000466   000000 471500                    LDP1    0,,PR0
         4 000467   100102 236100                    LDQ     66,,PR1
         4 000470   377770 376007                    ANQ     131064,DL
         4 000471   000040 116007                    CMPQ    32,DL
         4 000472   000476 601000 4                  TNZ     s:2729

      307     2725    2           LAST_KEY = Y003 ;

   2725  4 000473   000000 235000 xsym               LDA     Y003
         4 000474   000000 755000 xsym               STA     LAST_KEY

      308     2726    2           RETURN;
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:39   

   2726  4 000475   000000 702200 xent               TSX2  ! X66_ARET

      309     2727    2           END;
      310     2728        /**/
      311     2729    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BADVECT1) THEN DO;

   2729  4 000476   006450 116007                    CMPQ    3368,DL
         4 000477   000503 601000 4                  TNZ     s:2734

      312     2730    2           LAST_KEY = MAX_SEQNUM ;

   2730  4 000500   000000 235000 xsym               LDA     MAX_SEQNUM
         4 000501   000000 755000 xsym               STA     LAST_KEY

      313     2731    2           RETURN;

   2731  4 000502   000000 702200 xent               TSX2  ! X66_ARET

      314     2732    2           END;
      315     2733        /**/
      316     2734    1        CALL VEX$ERROR(0,3);

   2734  4 000503   000010 630400 5                  EPPR0   8
         4 000504   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000505   000000 701000 xent               TSX1    VEX$ERROR
         4 000506   000000 011000                    NOP     0

      317     2735    1        ALTRETURN;

   2735  4 000507   000000 702200 xent               TSX2  ! X66_AALT

      318     2736        /**/
      319     2737    1   CONPREC_ERR:
      320     2738    2        IF (B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$EOF) THEN DO;

   2738  4 000510   000000 470400 xsym  CONPREC_ERR  LDP0    B$TCB$
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:40   
         4 000511   000000 471500                    LDP1    0,,PR0
         4 000512   100102 236100                    LDQ     66,,PR1
         4 000513   377770 376007                    ANQ     131064,DL
         4 000514   000060 116007                    CMPQ    48,DL
         4 000515   000524 601000 4                  TNZ     s:2742

      321     2739    2           LAST_KEY = LAST_KEY + (M$FILE$ -> F$DCB.ARS)*1000;

   2739  4 000516   000000 473400 xsym               LDP3    M$FILE$
         4 000517   300000 236100                    LDQ     0,,PR3
         4 000520   001750 402007                    MPY     1000,DL
         4 000521   000000 036000 xsym               ADLQ    LAST_KEY
         4 000522   000000 756000 xsym               STQ     LAST_KEY

      322     2740    2           GOTO READ_SEQUEN_ERR;

   2740  4 000523   000414 710000 4                  TRA     READ_SEQUEN_ERR

      323     2741    2           END;
      324     2742    1        CALL VEX$ERROR(0,3);

   2742  4 000524   000010 630400 5                  EPPR0   8
         4 000525   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000526   000000 701000 xent               TSX1    VEX$ERROR
         4 000527   000000 011000                    NOP     0

      325     2743    1        ALTRETURN;

   2743  4 000530   000000 702200 xent               TSX2  ! X66_AALT
      326     2744    1   END;                                    /* END READ_RANDOM                    */
      327     2745        %EOD ;

PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:41   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VEX$READ_RANDOM.
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:42   

 **** Variables and constants ****

  ****  Section 001  Data  VEX$READ_RANDOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   446-0-0/d STRC(360)   r     1 PREC_FPT                 434-0-0/d STRC(360)   r     1 PREC_REV_FPT
   400-0-0/d STRC(504)   r     1 READ_RANDOM_FPT          416-0-0/d STRC(504)   r     1 READ_SEQUEN_FPT
     0-0-0/c CHAR(1024)  r     1 RR_READKEY                 0-0-0/c STRC(9216)  r     1 RR_READ_KEY

  ****  Section 002 RoData VEX$READ_RANDOM

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/d STRC(144)   r     1 PFIL_EOF_FPT               0-0-0/d STRC(144)   r     1 PFIL_FPT

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @READ_KEY                  7-0-0/w UBIN        r     1 BSTRING_SIZE
     4-0-0/w UBIN        r     1 I                          5-0-0/w UBIN        r     1 J
    *0-0-0/w STRC(576)   r     1 READ_E_KEY                *0-0-0/w CHAR(64)    r     1 READ_KEY
     6-0-0/w UBIN        r     1 REC_POSIT                 10-0-0/c CHAR(1024)  r     1 TEMP_STRING

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/c CHAR(4)     r     1 BLANKS
     0-0-0/c CHAR        r     1 BSPACECHAR                 0-0-0/c CHAR        r     1 CRET
     0-0-0/b BIT         r     1 DVBYTE                     0-0-0/b STRC(72)    r     1 FLAGS
     0-0-0/w UBIN        r     1 LAST_KEY                   0-0-0/w PTR         r     1 M$FILE$
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:43   
     0-0-0/w UBIN        r     1 MAX_SEQNUM                 0-0-0/w UBIN        r     1 NUM_TABS
     0-0-0/c CHAR(1024)  r     1 REC_BUF                    0-0-0/w UBIN        r     1 REC_SIZE
     0-0-0/w UBIN        r     1 RP_REC_SIZE                0-0-0/b BIT         r     1 SEED
     0-0-0/c CHAR        r     1 TABCHAR                    0-0-0/w STRC(288)   r     1 TAB_VLP
     0-0-0/w UBIN        r     1 Y003

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$FILE


   Procedure VEX$READ_RANDOM requires 345 words for executable code.
   Procedure VEX$READ_RANDOM requires 266 words of local(AUTO) storage.
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:44   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:45   
          MINI XREF LISTING

B$ALT.CODE
      1790**DCL      1790--REDEF    1791--REDEF    1791--REDEF
B$ALT.ERR.ERR#
      1792**DCL      1792--REDEF    2650>>IF       2650>>IF       2700>>IF       2714>>IF       2724>>IF
      2729>>IF       2738>>IF
B$ALT.EVID
      1791**DCL      1791--REDEF    1791--REDEF
B$TCB.ALT$
      1786**DCL      2650>>IF       2650>>IF       2700>>IF       2714>>IF       2724>>IF       2729>>IF
      2738>>IF
B$TCB$
      2529**DCL      2650>>IF       2650>>IF       2700>>IF       2714>>IF       2724>>IF       2729>>IF
      2738>>IF
BLANKS
      2528**DCL      2615>>CALLBLT  2626>>CALLBLT  2641>>CALLBLT
BSPACECHAR
      2525**DCL      2605>>IF
BSTRING_SIZE
      2263**DCL      2637<<ASSIGN   2640>>CALLBLT  2641>>CALLBLT  2643>>ASSIGN   2644>>ASSIGN   2645>>ASSIGN
CONPREC_ERR
      2738**LABEL    2570--CALLALT
CRET
      2524**DCL      2594>>IF
DVBYTE
      2519**DCL      2590<<ASSIGN   2695<<ASSIGN
F$DCB.ACTPOS
      2233**DCL      2233--REDEF
F$DCB.ARS
      2208**DCL      2208--REDEF    2591>>ASSIGN   2696>>ASSIGN   2739>>ASSIGN
F$DCB.ATTR
      2226**DCL      2227--REDEF
F$DCB.BORROW
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:46   
      2241**DCL      2241--REDEF    2241--REDEF    2241--REDEF
F$DCB.DCBNAME.L
      2255**DCL      2255--IMP-SIZ
F$DCB.DVBYTE
      2211**DCL      2590>>ASSIGN   2695>>ASSIGN
F$DCB.EOMCHAR
      2212**DCL      2212--REDEF
F$DCB.FLDID
      2236**DCL      2236--REDEF
F$DCB.FORM$
      2230**DCL      2230--REDEF
F$DCB.FSECT
      2246**DCL      2246--REDEF
F$DCB.FSN
      2223**DCL      2223--REDEF    2223--REDEF    2224--REDEF
F$DCB.HEADER$
      2229**DCL      2229--REDEF
F$DCB.IXTNSIZE
      2227**DCL      2227--REDEF
F$DCB.LASTSTA$
      2217**DCL      2217--REDEF
F$DCB.LVL
      2242**DCL      2242--REDEF
F$DCB.NAME.C
      2217**DCL      2217--REDEF
F$DCB.NOEOF
      2238**DCL      2238--REDEF
F$DCB.NRECS
      2228**DCL      2228--REDEF    2704>>ASSIGN
F$DCB.NRECX
      2247**DCL      2247--REDEF
F$DCB.OHDR
      2239**DCL      2239--REDEF
F$DCB.ORG
      2222**DCL      2222--REDEF    2575>>IF
F$DCB.PRECNO
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:47   
      2245**DCL      2245--REDEF
F$DCB.RCSZ
      2250**DCL      2250--REDEF
F$DCB.RES
      2218**DCL      2218--REDEF
F$DCB.SETX
      2230**DCL      2230--REDEF
F$DCB.TAB$
      2229**DCL      2230--REDEF
F$DCB.TDA
      2244**DCL      2244--REDEF
F$DCB.WSN
      2219**DCL      2219--REDEF
FLAGS.BADKEY
      2509**DCL      2554<<ASSIGN   2678<<ASSIGN   2688<<ASSIGN
FLAGS.CONSEC_MODE
      2479**DCL      2561>>IF       2682>>IF       2702>>IF
FLAGS.EOF
      2477**DCL      2558<<ASSIGN   2694<<ASSIGN   2701<<ASSIGN
FLAGS.EXISTS
      2476**DCL      2559<<ASSIGN   2589<<ASSIGN   2652<<ASSIGN
FLAGS.REL_MODE
      2490**DCL      2581>>IF       2683>>IF       2710>>IF
FLAGS.TABMSG
      2493**DCL      2611>>IF       2613<<ASSIGN
FLAGS.TABXFLAG
      2483**DCL      2604>>IF
GOT_TAB
      2637**LABEL    2623--GOTO
I
      2260**DCL      2600<<ASSIGN   2604>>DOWHILE  2605>>IF       2609>>IF       2615>>CALLBLT  2626>>CALLBLT
      2631<<ASSIGN   2631>>ASSIGN   2638>>ASSIGN   2638>>ASSIGN   2640>>CALLBLT  2640>>CALLBLT  2641>>CALLBLT
      2643<<ASSIGN   2643>>ASSIGN
J
      2261**DCL      2622<<DOINDEX  2623>>IF       2637>>ASSIGN
LAST_KEY
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:48   
      2516**DCL      2564<<ASSIGN   2568>>ASSIGN   2569--ASSIGN   2576<<ASSIGN   2577<<ASSIGN   2586<<ASSIGN
      2682<<ASSIGN   2682>>ASSIGN   2684<<ASSIGN   2690<<ASSIGN   2691>>IF       2691<<ASSIGN   2704<<ASSIGN
      2707--ASSIGN   2710<<ASSIGN   2710>>ASSIGN   2725<<ASSIGN   2730<<ASSIGN   2739<<ASSIGN   2739>>ASSIGN
M$FILE$
      2523**DCL      2575>>IF       2590>>ASSIGN   2591>>ASSIGN   2695>>ASSIGN   2696>>ASSIGN   2704>>ASSIGN
      2739>>ASSIGN
M$PFIL
        48**DCL-ENT  2563--CALL     2711--CALL
M$PRECORD
        50**DCL-ENT  2570--CALL     2708--CALL
M$READ
        47**DCL-ENT  2574--CALL     2585--CALL     2681--CALL
MAX_SEQNUM
      2522**DCL      2691>>IF       2691>>ASSIGN   2730>>ASSIGN
NEXT_TAB
      2604**LABEL    2646--GOTO
NUM_TABS
      2527**DCL      2610>>IF       2622>>DOINDEX
PFIL_EOF_FPT
      2429**DCL      2711<>CALL
PFIL_EOF_FPT.V
      2429**DCL      2429--DCLINIT
PFIL_FPT
      2411**DCL      2563<>CALL
PFIL_FPT.V
      2411**DCL      2411--DCLINIT
PREC_FPT
      2448**DCL      2570<>CALL
PREC_FPT.KEY_
      2448**DCL      2569<<ASSIGN
PREC_FPT.V
      2450**DCL      2448--DCLINIT
PREC_FPT.V.N#
      2454**DCL      2568<<ASSIGN
PREC_REV_ERR
      2724**LABEL    2708--CALLALT
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:49   
PREC_REV_FPT
      2387**DCL      2708<>CALL
PREC_REV_FPT.KEY_
      2387**DCL      2707<<ASSIGN
PREC_REV_FPT.V
      2389**DCL      2387--DCLINIT
READ_E_KEY.KEY
        30**DCL      2562>>IF       2568>>ASSIGN   2576>>ASSIGN   2581>>ASSIGN   2583>>ASSIGN   2586>>ASSIGN
READ_KEY
        28**DCL         8--PROC       29--REDEF
READ_RANDOM_ERR
      2650**LABEL    2585--CALLALT
READ_RANDOM_FPT
      2303**DCL      2585<>CALL
READ_RANDOM_FPT.STATION_
      2306**DCL      2307--REDEF
READ_RANDOM_FPT.V
      2307**DCL      2303--DCLINIT
READ_RANDOM_FPT.V.DVBYTE.REREAD#
      2318**DCL      2318--REDEF
READ_RANDOM_FPT.V.INDX#
      2316**DCL      2316--REDEF
READ_RANDOM_FPT.V.SEED#
      2317**DCL      2555<<ASSIGN
READ_SEQUEN_ERR
      2700**LABEL    2563--CALLALT  2574--CALLALT  2681--CALLALT  2740--GOTO
READ_SEQUEN_FPT
      2348**DCL      2574<>CALL     2681<>CALL
READ_SEQUEN_FPT.STATION_
      2351**DCL      2352--REDEF
READ_SEQUEN_FPT.V
      2352**DCL      2348--DCLINIT
READ_SEQUEN_FPT.V.DVBYTE.REREAD#
      2363**DCL      2363--REDEF
READ_SEQUEN_FPT.V.INDX#
      2361**DCL      2361--REDEF
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:50   
READ_SEQUEN_FPT.V.SEED#
      2362**DCL      2556<<ASSIGN   2679<<ASSIGN
REC_BUF
      2515**DCL      2305--DCLINIT  2306--DCLINIT  2350--DCLINIT  2351--DCLINIT  2573<<ASSIGN   2584<<ASSIGN
      2594>>IF       2596<<ASSIGN   2605>>IF       2609>>IF       2615<<CALLBLT  2626<<CALLBLT  2638>>ASSIGN
      2640<<CALLBLT  2641<<CALLBLT  2680<<ASSIGN
REC_POSIT
      2262**DCL      2601<<ASSIGN   2606>>IF       2606<<ASSIGN   2606>>ASSIGN   2623>>IF       2629<<ASSIGN
      2629>>ASSIGN   2637>>ASSIGN   2644<<ASSIGN   2644>>ASSIGN
REC_SIZE
      2517**DCL      2591<<ASSIGN   2593>>ASSIGN   2594>>IF       2596>>ASSIGN   2597<<ASSIGN   2597>>ASSIGN
      2604>>DOWHILE  2638>>ASSIGN   2640>>CALLBLT  2645<<ASSIGN   2645>>ASSIGN   2696<<ASSIGN
RP_REC_SIZE
      2518**DCL      2593<<ASSIGN
RR_READKEY
      2270**DCL      2272--REDEF
RR_READ_KEY
      2272**DCL      2348--DCLINIT  2349--DCLINIT
RR_READ_KEY.EDITKEY
      2273**DCL      2274--REDEF    2303--DCLINIT  2304--DCLINIT  2577>>ASSIGN   2581<<ASSIGN   2583<<ASSIGN
      2684>>ASSIGN   2690>>ASSIGN
RR_READ_KEY.REKEY.COUNT
      2275**DCL      2686>>IF       2687<<ASSIGN
SEED
      2521**DCL      2555>>ASSIGN   2556>>ASSIGN   2679>>ASSIGN
STRIP_CRET
      2593**LABEL    2697--GOTO
TABCHAR
      2526**DCL      2609>>IF
TAB_VLP.TABS#
      2547**DCL      2623>>IF       2637>>ASSIGN
TEMP_STRING
      2264**DCL      2638<<ASSIGN   2640>>CALLBLT
VEX$ERROR
      2533**DCL-ENT  2612--CALL     2655--CALL     2715--CALL     2734--CALL     2742--CALL
Y003
PL6.E3A0      #001=VEX$READ_RANDOM File=VEX$READ_RANDOM.:E05TSI                  WED 07/30/97 07:15 Page:51   
      2520**DCL      2562>>IF       2564>>ASSIGN   2577>>ASSIGN   2581>>ASSIGN   2684>>ASSIGN   2704>>ASSIGN
      2710>>ASSIGN   2725>>ASSIGN

PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:52   
      328        1        /*M*    VEX$GET_NEXT_KEY - WILL RETURN KEY OF THE NEXT RECORD FROM EDIT FILE */
      329        2        /*T***********************************************************/
      330        3        /*T*                                                         */
      331        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      332        5        /*T*                                                         */
      333        6        /*T***********************************************************/
      334        7        VEX$GET_NEXT_KEY: PROC ALTRET;
      335        8        /**/
      336        9        /*F*     NAME:     VEX$GET_NEXT_KEY
      337       10                 PURPOSE:  TO RETURN THE TO THE CALL ROUTINE THE KEY OF THE
      338       11                      NEXT RECORD IN AN EDIT FILE. ALTRETURN ON ERROR. */
      339       12        /**/
      340       13        /*D*     NAME:     VEX$GET_NEXT_KEY
      341       14                 PARAMETERS: NONE
      342       15                 DESCRIPTION:  AN ATTEMPT IS MADE TO GET THE KEY OF THE
      343       16                           NEXT RECORD THROUGH THE M$FILE DCB. IF IT EXISTS
      344       17                           THEN LAST_KEY IS SET TO THE KEY VALUE AND
      345       18                           A NORMAL RETURN IS MADE. IF END OF FILE IS HIT,
      346       19                           THEN FLAGS.EOF IS SET. AND NORMAL RETURN IS MADE.
      347       20                           ANY OTHER ERROR IS ENCOUNTERED THEN AN ALTRETURN IS
      348       21                           MADE TO THE CALLER                      */
      349       22        /**/
      350       23        /*********************************************************************/
      351       24        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
      352       25        /*********************************************************************/
      353       26        %PLIST;
      354       27        %INCLUDE   CP_6;
      355      108        %INCLUDE B_ERRORS_C;
      356     1235        %B$TCB;
      357     1238        %B$ALT;
      358     1246        %INCLUDE   VE_SUBS_C;
      359     1440        %INCLUDE VE_PERR_C;
      360     1657        %INCLUDE   F$DCB;
      361     1706        /**/
      362     1707        /**/
      363     1708        /********************************************************************/
      364     1709        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:53   
      365     1710        /********************************************************************/
      366     1711        /**/
      367     1712        %FPT_PRECORD (FPTN = PRECORD_FPT,
      368     1713                      DCB = M$FILE,
      369     1714                      BRK = YES,
      370     1715                      KEYS = NO,
      371     1716                      KEYR = YES,
      372     1717                      KEY = LAST_KEY) ;
      373     1738        /**/
      374     1739        /*****************************************************************/
      375     1740        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      376     1741        /*****************************************************************/
      377     1742        /**/
      378     1743        %INCLUDE VE_FLAGS_R;
      379     1794        /**/
      380     1795    1   DCL M$FILE DCB ;
      381     1796    1   DCL LAST_KEY UBIN(36) SYMREF ;
      382     1797    1   DCL 1 R_LAST_KEY REDEF LAST_KEY ,
      383     1798    1          2 CNT UBIN (9) UNAL ,
      384     1799    1          2 KEY UBIN(27) UNAL ;
      385     1800    1   DCL Y003 UBIN (36) SYMREF;
      386     1801    1   DCL B$TCB$ PTR SYMREF ;
      387     1802        %EJECT;
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:54   
      388     1803        /*****************************************************************************/
      389     1804        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      390     1805        /*****************************************************************************/
      391     1806    1        PRECORD_FPT.V.N# = 0 ;
      392     1807    1        CALL M$PRECORD (PRECORD_FPT) ALTRET(PRECORD_ERR) ;
      393     1808    1        IF R_LAST_KEY.CNT = 0
      394     1809    1        THEN
      395     1810    2        DO ;
      396     1811    2           FLAGS.EOF = TRUE ;
      397     1812    2           PRECORD_FPT.V.N# = -1 ;
      398     1813    2           CALL M$PRECORD (PRECORD_FPT) ALTRET(BACKW_PRECORD_ERR) ;
      399     1814    3           DO WHILE ('0'B) ;
      400     1815
      401     1816    3   BACKW_PRECORD_ERR:
      402     1817    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF
      403     1818    3              THEN LAST_KEY = Y003 ;
      404     1819    3              ELSE GOTO PRECORD_ERR ;
      405     1820    3              END ;                        /* DO WHILE */
      406     1821    2           END ;
      407     1822    1        ELSE FLAGS.EOF = FALSE ;
      408     1823    1        RETURN ;
      409     1824
      410     1825    1   PRECORD_ERR:
      411     1826    1        ALTRETURN ;
      412     1827
      413     1828    1   END   VEX$GET_NEXT_KEY ;

PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:55   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VEX$GET_NEXT_KEY.

   Procedure VEX$GET_NEXT_KEY requires 33 words for executable code.
   Procedure VEX$GET_NEXT_KEY requires 4 words of local(AUTO) storage.

    No errors detected in file VEX$READ_RANDOM.:E05TSI    .

PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:56   

 Object Unit name= VEX$GET_NEXT_KEY                           File name= VEX$READ_RANDOM.:E05TOU
 UTS= JUL 30 '97 07:15:52.32 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   Data  even  none    10     12  VEX$GET_NEXT_KEY
    2   DCB   even  none     0      0  M$FILE
    3   Proc  even  none    33     41  VEX$GET_NEXT_KEY
    4  RoData even  none     1      1  VEX$GET_NEXT_KEY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     3      0   yes    yes     yes      Std        0  VEX$GET_NEXT_KEY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_0
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                                  FLAGS                                 M$FILE
     LAST_KEY                              Y003                                  B$TCB$
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:57   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:58   


      328        1        /*M*    VEX$GET_NEXT_KEY - WILL RETURN KEY OF THE NEXT RECORD FROM EDIT FILE */
      329        2        /*T***********************************************************/
      330        3        /*T*                                                         */
      331        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      332        5        /*T*                                                         */
      333        6        /*T***********************************************************/
      334        7        VEX$GET_NEXT_KEY: PROC ALTRET;

      7  3 000000   000000 700200 xent  VEX$GET_NEX* TSX0  ! X66_AUTO_0
         3 000001   000004 000000                    ZERO    4,0

      335        8        /**/
      336        9        /*F*     NAME:     VEX$GET_NEXT_KEY
      337       10                 PURPOSE:  TO RETURN THE TO THE CALL ROUTINE THE KEY OF THE
      338       11                      NEXT RECORD IN AN EDIT FILE. ALTRETURN ON ERROR. */
      339       12        /**/
      340       13        /*D*     NAME:     VEX$GET_NEXT_KEY
      341       14                 PARAMETERS: NONE
      342       15                 DESCRIPTION:  AN ATTEMPT IS MADE TO GET THE KEY OF THE
      343       16                           NEXT RECORD THROUGH THE M$FILE DCB. IF IT EXISTS
      344       17                           THEN LAST_KEY IS SET TO THE KEY VALUE AND
      345       18                           A NORMAL RETURN IS MADE. IF END OF FILE IS HIT,
      346       19                           THEN FLAGS.EOF IS SET. AND NORMAL RETURN IS MADE.
      347       20                           ANY OTHER ERROR IS ENCOUNTERED THEN AN ALTRETURN IS
      348       21                           MADE TO THE CALLER                      */
      349       22        /**/
      350       23        /*********************************************************************/
      351       24        /*   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   INCLUDE FILES   */
      352       25        /*********************************************************************/
      353       26        %PLIST;
      354       27        %INCLUDE   CP_6;
      355      108        %INCLUDE B_ERRORS_C;
      356     1235        %B$TCB;
      357     1238        %B$ALT;
      358     1246        %INCLUDE   VE_SUBS_C;
      359     1440        %INCLUDE VE_PERR_C;
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:59   
      360     1657        %INCLUDE   F$DCB;
      361     1706        /**/
      362     1707        /**/
      363     1708        /********************************************************************/
      364     1709        /*   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   FPTS   */
      365     1710        /********************************************************************/
      366     1711        /**/
      367     1712        %FPT_PRECORD (FPTN = PRECORD_FPT,
      368     1713                      DCB = M$FILE,
      369     1714                      BRK = YES,
      370     1715                      KEYS = NO,
      371     1716                      KEYR = YES,
      372     1717                      KEY = LAST_KEY) ;
      373     1738        /**/
      374     1739        /*****************************************************************/
      375     1740        /*   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   SYMREFS   */
      376     1741        /*****************************************************************/
      377     1742        /**/
      378     1743        %INCLUDE VE_FLAGS_R;
      379     1794        /**/
      380     1795    1   DCL M$FILE DCB ;
      381     1796    1   DCL LAST_KEY UBIN(36) SYMREF ;
      382     1797    1   DCL 1 R_LAST_KEY REDEF LAST_KEY ,
      383     1798    1          2 CNT UBIN (9) UNAL ,
      384     1799    1          2 KEY UBIN(27) UNAL ;
      385     1800    1   DCL Y003 UBIN (36) SYMREF;
      386     1801    1   DCL B$TCB$ PTR SYMREF ;
      387     1802        %EJECT;
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:60   
      388     1803        /*****************************************************************************/
      389     1804        /*   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   PROCEDURE   */
      390     1805        /*****************************************************************************/
      391     1806    1        PRECORD_FPT.V.N# = 0 ;

   1806  3 000002   000007 450000 1                  STZ     PRECORD_FPT+7

      392     1807    1        CALL M$PRECORD (PRECORD_FPT) ALTRET(PRECORD_ERR) ;

   1807  3 000003   000000 630400 1                  EPPR0   PRECORD_FPT
         3 000004   440003 713400                    CLIMB   alt,+16387
         3 000005   401000 401760                    pmme    nvectors=3
         3 000006   000040 702000 3                  TSX2    PRECORD_ERR

      393     1808    1        IF R_LAST_KEY.CNT = 0

   1808  3 000007   000000 236000 xsym               LDQ     LAST_KEY
         3 000010   777000 316003                    CANQ    -512,DU
         3 000011   000035 601000 3                  TNZ     s:1822

      394     1809    1        THEN
      395     1810    2        DO ;

      396     1811    2           FLAGS.EOF = TRUE ;

   1811  3 000012   010000 236003                    LDQ     4096,DU
         3 000013   000000 256000 xsym               ORSQ    FLAGS

      397     1812    2           PRECORD_FPT.V.N# = -1 ;

   1812  3 000014   000001 335007                    LCA     1,DL
         3 000015   000007 755000 1                  STA     PRECORD_FPT+7

      398     1813    2           CALL M$PRECORD (PRECORD_FPT) ALTRET(BACKW_PRECORD_ERR) ;

   1813  3 000016   000000 630400 1                  EPPR0   PRECORD_FPT
         3 000017   440003 713400                    CLIMB   alt,+16387
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:61   
         3 000020   401000 401760                    pmme    nvectors=3
         3 000021   000023 702000 3                  TSX2    BACKW_PRECORD_ERR

      399     1814    3           DO WHILE ('0'B) ;

   1814  3 000022   000037 710000 3                  TRA     s:1823

      400     1815
      401     1816    3   BACKW_PRECORD_ERR:
      402     1817    3              IF B$TCB$ -> B$TCB.ALT$ -> B$ALT.ERR.ERR# = %E$BOF

   1817  3 000023   000000 470400 xsym  BACKW_PRECO* LDP0    B$TCB$
         3 000024   000000 471500                    LDP1    0,,PR0
         3 000025   100102 236100                    LDQ     66,,PR1
         3 000026   377770 376007                    ANQ     131064,DL
         3 000027   000040 116007                    CMPQ    32,DL
         3 000030   000040 601000 3                  TNZ     PRECORD_ERR

      403     1818    3              THEN LAST_KEY = Y003 ;

   1818  3 000031   000000 235000 xsym               LDA     Y003
         3 000032   000000 755000 xsym               STA     LAST_KEY
         3 000033   000034 710000 3                  TRA     s:1821

      404     1819    3              ELSE GOTO PRECORD_ERR ;
      405     1820    3              END ;                        /* DO WHILE */

      406     1821    2           END ;

   1821  3 000034   000037 710000 3                  TRA     s:1823

      407     1822    1        ELSE FLAGS.EOF = FALSE ;

   1822  3 000035   000000 236000 4                  LDQ     0
         3 000036   000000 356000 xsym               ANSQ    FLAGS

      408     1823    1        RETURN ;
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:62   

   1823  3 000037   000000 702200 xent               TSX2  ! X66_ARET

      409     1824
      410     1825    1   PRECORD_ERR:
      411     1826    1        ALTRETURN ;

   1826  3 000040   000000 702200 xent  PRECORD_ERR  TSX2  ! X66_AALT
      412     1827
      413     1828    1   END   VEX$GET_NEXT_KEY ;

PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:63   
--  Include file information  --

   VE_FLAGS_R.:E05TOU  cannot be made into a system file and is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   VE_PERR_C.:E05TOU  is referenced.
   VE_SUBS_C.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure VEX$GET_NEXT_KEY.
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:64   

 **** Variables and constants ****

  ****  Section 001  Data  VEX$GET_NEXT_KEY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(360)   r     1 PRECORD_FPT

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/b STRC(72)    r     1 FLAGS
     0-0-0/w UBIN        r     1 LAST_KEY                   0-0-0/w STRC        r     1 R_LAST_KEY
     0-0-0/w UBIN        r     1 Y003

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/d ASTR(3528)  r     1 F$DCB                      0-0-0N  NULL        r     1 M$FILE


   Procedure VEX$GET_NEXT_KEY requires 33 words for executable code.
   Procedure VEX$GET_NEXT_KEY requires 4 words of local(AUTO) storage.

    No errors detected in file VEX$READ_RANDOM.:E05TSI    .
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:65   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:66   
          MINI XREF LISTING

B$ALT.CODE
      1240**DCL      1240--REDEF    1241--REDEF    1241--REDEF
B$ALT.ERR.ERR#
      1242**DCL      1242--REDEF    1817>>IF
B$ALT.EVID
      1241**DCL      1241--REDEF    1241--REDEF
B$TCB.ALT$
      1236**DCL      1817>>IF
B$TCB$
      1801**DCL      1817>>IF
BACKW_PRECORD_ERR
      1817**LABEL    1813--CALLALT
F$DCB.ACTPOS
      1683**DCL      1683--REDEF
F$DCB.ARS
      1658**DCL      1658--REDEF
F$DCB.ATTR
      1676**DCL      1677--REDEF
F$DCB.BORROW
      1691**DCL      1691--REDEF    1691--REDEF    1691--REDEF
F$DCB.DCBNAME.L
      1705**DCL      1705--IMP-SIZ
F$DCB.EOMCHAR
      1662**DCL      1662--REDEF
F$DCB.FLDID
      1686**DCL      1686--REDEF
F$DCB.FORM$
      1680**DCL      1680--REDEF
F$DCB.FSECT
      1696**DCL      1696--REDEF
F$DCB.FSN
      1673**DCL      1673--REDEF    1673--REDEF    1674--REDEF
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:67   
F$DCB.HEADER$
      1679**DCL      1679--REDEF
F$DCB.IXTNSIZE
      1677**DCL      1677--REDEF
F$DCB.LASTSTA$
      1667**DCL      1667--REDEF
F$DCB.LVL
      1692**DCL      1692--REDEF
F$DCB.NAME.C
      1667**DCL      1667--REDEF
F$DCB.NOEOF
      1688**DCL      1688--REDEF
F$DCB.NRECS
      1678**DCL      1678--REDEF
F$DCB.NRECX
      1697**DCL      1697--REDEF
F$DCB.OHDR
      1689**DCL      1689--REDEF
F$DCB.ORG
      1672**DCL      1672--REDEF
F$DCB.PRECNO
      1695**DCL      1695--REDEF
F$DCB.RCSZ
      1700**DCL      1700--REDEF
F$DCB.RES
      1668**DCL      1668--REDEF
F$DCB.SETX
      1680**DCL      1680--REDEF
F$DCB.TAB$
      1679**DCL      1680--REDEF
F$DCB.TDA
      1694**DCL      1694--REDEF
F$DCB.WSN
      1669**DCL      1669--REDEF
FLAGS.EOF
      1757**DCL      1811<<ASSIGN   1822<<ASSIGN
PL6.E3A0      #002=VEX$GET_NEXT_KEY File=VEX$READ_RANDOM.:E05TSI                 WED 07/30/97 07:15 Page:68   
LAST_KEY
      1796**DCL      1728--DCLINIT  1729--DCLINIT  1797--REDEF    1818<<ASSIGN
M$PRECORD
        40**DCL-ENT  1807--CALL     1813--CALL
PRECORD_ERR
      1826**LABEL    1807--CALLALT  1819--GOTO
PRECORD_FPT
      1728**DCL      1807<>CALL     1813<>CALL
PRECORD_FPT.V
      1730**DCL      1728--DCLINIT
PRECORD_FPT.V.N#
      1734**DCL      1806<<ASSIGN   1812<<ASSIGN
R_LAST_KEY.CNT
      1798**DCL      1808>>IF
Y003
      1800**DCL      1818>>ASSIGN
