.*M*
HELP file for: SPLIT.X
.*T*
 **************************************************************
 *                                                            *
 *  Copyright (c) Bull HN Information Systems Inc., 1989      *
 *                                                            *
 **************************************************************
.*A*                                             
SPLIT.X reads a file that contains multiple "logical" records per CP-6 record
and creates a new file which contains one "logical" record per CP-6 record.
.*B*
Invocation syntax:
 
  !SPLIT.X blocked-file {ON|OVER} deblocked-file [(options)]
 
options are:                                      Default:
 
     DELIMITERS(ascii_char[,ascii_char...])       DELIMIT(CR,LF)
     I[GNORE] [CHARACTERS] (ascii_char_list)      ignore none
     M[IN][OUTPUT][LENGTH]=nnn                    MOL=0
     N[O]T[RAILING]B[LANKS] <NTB>                 retain trailing blanks
     O[UTPUT][LENGTH]=nnn                         length of output records,
                                                  if DELIMITERS=NONE
     S[INGLE][CHARACTER][DELIMITERS]              Treat the delimiter list
                                                  as a set of single-character
                                                  delimiters.
 
By default, the sequence that separates the "logical" records is the Carriage
Return (CR), Line Feed (LF) sequence.  This default value may be changed via
the DELIMITERS option.  The IGNORE option may be used when the file being read
contains character(s) which you wish to be IGNOREd when writing the new file.
The MINIMUM OUTPUT LENGTH option may be used to insure that each record written
is at least the specified length.  The NO TRAILING BLANKS option strips
trailing blanks from records being written to the new file.  If
DELIMITERS=NONE, the OUTPUT LENGTH option specifies the length of all output
records.  If SINGLE is specified, the delimiter list is treated as a list of
single-character delimiters, so that one could, for example, deblock records
delimited by any of 'FF'X, 'FE'X, 'FD'X, 'FC'X, or LF.
.*B*
For further HELP on a particular option, type '!HELP(SPLIT.X) option' where
'option' is DELIMITERS, IGNORE, MINIMUM, NTB, or OUTPUT.  Try '!H (SPLIT.X)
EXAMPLES' for examples of use.
 
For a complete list of HELP topics, type '!HELP(SPLIT.X) TOPICS'.
.*B*
Th Th Th That's All Folks!
.*B*
That's all there is, there ain't no more!
.*B*
Well, I'll give him 20 more minutes ... But that's it!
.*B*
** LINK RECOVERY IN PROGRESS - PLEASE STAND BY **
.*K* DELIMITERS
D[ELIMITERS] ( character-specification [, ...] )
 
With this option you may specify the character or characters used in the
blocked records to separate (delimit) the "logical" records.
 
The default is DELIMITERS(CR,LF).
 
The character-specification may be a single quoted character, the decimal,
octal or hex value of a character or the mnemonic name for the character, or
the word NONE, which indicates that the OUTPUT LENGTH option will be used for
deblocking.  Beware of setting DELIMITERS to NONE without setting OUTPUT
LENGTH, for that way lies an infinite loop.
 
Valid mnemonic names (in numerical sequence) are:
      NUL, SOH, STX, ETX, EOT, ENQ, ACK, BEL,
      BS,  HT,  LF,  VT,  FF,  CR,  SO,  SI,
      DLE, DC1, DC2, DC3, DC4, NAK, SYN, ETB,
      CAN, EM,  SUB, ESC, FS,  GS,  RS,  US,
      DEL
.*K* IGNORE_CHARACTERS
I[GNORE] [C[HARACTERS]] ( character-specification [, ...] )
 
With this option you can select character(s) that if found in the input
(blocked) file will NOT be written into the output file.
 
By default, no characters are ignored.
 
The character-specification may be a single quoted character, the decimal,
octal or hex value of a character or the mnemonic name for the character.
 
Valid mnemonic names (in numerical sequence) are:
      NUL, SOH, STX, ETX, EOT, ENQ, ACK, BEL,
      BS,  HT,  LF,  VT,  FF,  CR,  SO,  SI,
      DLE, DC1, DC2, DC3, DC4, NAK, SYN, ETB,
      CAN, EM,  SUB, ESC, FS,  GS,  RS,  US,
      DEL
.*K* MINIMUM_OUTPUT_LENGTH
M[INIMUM] [O[UTPUT]] [L[ENGTH]] = decimal
 
This option may be used to insure that each record written is at least the
specified length.
 
The default is MINIMUM OUTPUT LENGTH = 0.
 
This option was thrown in to make importing WP6 files easier, by the way.
.*K* OL OUTPUT_LENGTH
O[UTPUT] [L[ENGTH]] = decimal
 
This option is used in conjunction with DELIMITERS=NONE to set the length of
each output record.  The input file is deblocked into records of the indicated
length.  A trailing short record is OK.
.*K* NTB NO_TRAILING_BLANKS
N[O] [T[RAILING]] B[LANKS]
 
This option strips trailing blanks from records being written to the new file.
 
The default is for trailing blanks to be left intact.
.*K* SINGLE SINGLE_CHARACTER_DELIMITERS
S[INGLE] [C[HARACTER]] [D[ELIMITERS]]
 
Used in conjunction with the delimiter list to specify a set of single-
character delimiters, rather than one multiple-character delimiter.  For
example, specifying DELIM(CR,LF) by default would deblock records delimited by
a carriage return followed by a line feed.  If the SINGLE option were
specified, DELIM(CR,LF) would deblock records delimited by either a carriage
return or a line feed.  A carriage return followed by a line feed would produce
a blank line.
.*K* EXAMPLES
Typical use will be simply:
 
  !SPLIT.X blocked-file ON deblocked-file
 
If you have a blocked file that has the logical records separated by a single
Carriage Return, you could invoke SPLIT as follows:
 
  !SPLIT.X blocked-file ON deblocked-file (DEL(CR))
 
If you have a not really "blocked" file that has, for instance, several words
on each line that are separated by commas and you would like them in a separate
file with one word per line with surrounding blanks removed, you could use
SPLIT as follows:
 
  !SPLIT.X many-words-per-line ON one-per-line (DEL(','),IG(' '))
 
If you have a blocked file that has fixed-length records that span block
boundaries, and the records aren't delimited by any particular string, you
could use:
 
  !SPLIT.X blocked-file ON deblocked-file (DEL(NONE),O=114)
.*K* OPTIONS
SPLIT has the following option:
 
DELIMITERS          IGNORE_CHARACTERS         MINIMUM_OUTPUT_LENGTH
NO_TRAILING_BLANKS  OUTPUT_LENGTH             SINGLE_CHARACTER_DELIMITERS
 
For HELP on a specific option type '!HELP(SPLIT.X) option'
.*K* XINDEX
SPLIT.X
.*R*
AID=UTILITY
.*R*
FILE_MANIPULATION
.*R*
.*K* XINDEX_ABSTRACT
TOOL=SPLIT.X
.*R*
Reads a file with multiple "logical" records per CP-6 record and creates a file
with one "logical" record in each CP-6 record.
.*K* OWNER
Frank Mayhar, LADC
.*K* CHANGES Changes changes
01/10/92 FEM
.*R*
Added SINGLE option.
.*B*
08/17/89 FEM
.*R*
Added DELIM(NONE) and OUTPUT LENGTH options.
.*R*
09/02/86
.*R*
Installed in LADC X account.
