VERSION E05

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:1    
        1        1        /*M* QCS$SETUP:  Utility for setup of CIP descriptors.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P* NAME:         QCS$SETUP
       10       10             PURPOSE:      Assigns data from DADs to "parallel tables".
       11       11             DESCRIPTION:  As the interpreter stumbles upon DADs with which
       12       12                           it wishes to do various operations, it may call
       13       13                           this routine to "set up" pieces of QI_1 with the
       14       14                           DADs information.  This is sort of a general-purpose
       15       15                           conversion from compiler-looking DADs to L6-looking
       16       16                           CIPs.
       17       17        */
       18       18
       19       19        QCS$SETUP: PROC;
       20       20
       21       21          %INCLUDE LCP_6;
       22      212
       23      213          %INCLUDE QG_MACRO_M;
       24      350          %INCLUDE QI_EQUATES_E;
       25      709          %INCLUDE QI_MACROS_M;
       26     5767          %QI$ALL;
       27    16880
       28    16881    1     DCL DAD$ PTR;
       29    16882    1     DCL DADS_CIP$ PTR;
       30    16883    1     DCL PARALLEL_TABLES_CIP$ PTR;
       31    16884    1     DCL PARALLEL_TABLE_INDEX UBIN;
       32    16885    1     DCL DATA_TYPE UBIN;
       33    16886          /* These funny address syllable OR bits are used to stick in
       34    16887             the correct indexing register for source, target and aux AS's. */
       35    16888    1     DCL FUNNY_ADDRESS_SYLLABLE_OR_BITS BIT(16);
       36    16889        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:2    
       37    16890    1   QCS$SETUP_SOURCE: ENTRY;
       38    16891
       39    16892        /*D* NAME:         QCS$SETUP_SOURCE
       40    16893             ENTRY:        QCS$SETUP_TARGET
       41    16894                           QCS$SETUP_AUX
       42    16895             CALL:         CALL QCS$SETUP_SOURCE;
       43    16896                           CALL QCS$SETUP_TARGET;
       44    16897                           CALL QCS$SETUP_AUX;
       45    16898             PARAMETERS:   None.
       46    16899             INTERFACE:    Called by all kinds of modules, especially those
       47    16900                           on the "COBOL side" concerned with arithmetic
       48    16901                           operations, comparisons, moves, etc.
       49    16902             ENVIRONMENT:  Nothing unusual.
       50    16903             INPUT:        QI_1.SOURCE$ points to the DAD to be set up.
       51    16904             OUTPUT:       QI_1.SOURCE$ is PINCRW'ed by 1, and the DAD is set up.
       52    16905             SCRATCH:      Various otter data.
       53    16906             DESCRIPTION:  QCS$SETUP uses an offset value relative to the
       54    16907                           FPL program's procedure section to arrive at a
       55    16908                           real L6 address to a DAD.  It keeps doing this
       56    16909                           until it finds a DAD whose INDIRECT bit is off.
       57    16910                           This is the real DAD of the desired operand.
       58    16911                           It then moves pertinent information from the DAD
       59    16912                           to a set of parallel tables in QI_1 (the inter-
       60    16913                           preter's context area).  These "parallel tables"
       61    16914                           consist of an array three wide (0:2) in which
       62    16915                           the elements are commonly termed the SOURCE (0),
       63    16916                           TARGET (1), and AUX (2).  The convention is
       64    16917                           followed, for example, by QBM$MOVA, the routine
       65    16918                           which does a general alphanumeric MOVE A TO B,
       66    16919                           by moving the SOURCE operand to the TARGET
       67    16920                           operand, both having been "set up" by QCS$SETUP.
       68    16921                           The following things are "set up":
       69    16922
       70    16923             QI_1.DAD_A$(n)       Contains a pointer to the original DAD,
       71    16924                                  from which the remaining values for this
       72    16925                                  operand were derived.
       73    16926             QI_1.TYPE_A(n)       Contains the type of the operand.
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:3    
       74    16927             QI_1.OP.LEN_A(n)     Contains the length of the operand
       75    16928                                  (in bytes or nibbles).
       76    16929             QI_1.OP.DEC_A(n)     Contains the implied decimal position of
       77    16930                                  the operand.
       78    16931             QI_1.OP.CIP_A(n)     Contains a CIP descriptor which describes
       79    16932                                  the operand's location via an embedded
       80    16933                                  address syllable (AS), its offset within
       81    16934                                  that location (in bytes or nibbles), its
       82    16935                                  sign type (if any), and its length (only
       83    16936                                  if it is *not* of type ALPHANUMERIC, in
       84    16937                                  which case its length is set to 0).
       85    16938             QI_1.OP.DATA_A$(n)   Contains the word address of the operand.
       86    16939             QI_1.OFFSET_A(n)     Contains the "atom" offset into
       87    16940                                  QI_1.OP.DATA_A$, where the first byte or
       88    16941                                  nibble of the operand is located.
       89    16942             QI_1.IS_ALL_LIT_A(n) Contains:  0 if the operand is not an
       90    16943                                               ALL "literal";
       91    16944                                             1 if the operand is an
       92    16945                                               ALL "literal".
       93    16946             QI_1.IS_TEMP_A(n)    Contains:  0 if the operand is not a temp;
       94    16947                                             1 if the operand is a temp.
       95    16948
       96    16949                           The QI_1.SOURCE$ pointer is incremented also.
       97    16950        */
       98    16951
       99    16952    1       PARALLEL_TABLE_INDEX = %QI#SOURCE;
      100    16953    1       FUNNY_ADDRESS_SYLLABLE_OR_BITS = '0010'X;
      101    16954    1       GOTO SO_SET_IT_UP_ALREADY;
      102    16955
      103    16956    1   QCS$SETUP_TARGET: ENTRY;
      104    16957    1       PARALLEL_TABLE_INDEX = %QI#TARGET;
      105    16958    1       FUNNY_ADDRESS_SYLLABLE_OR_BITS = '0020'X;
      106    16959    1       GOTO SO_SET_IT_UP_ALREADY;
      107    16960
      108    16961    1   QCS$SETUP_AUX: ENTRY;
      109    16962    1       PARALLEL_TABLE_INDEX = %QI#AUX;
      110    16963    1       FUNNY_ADDRESS_SYLLABLE_OR_BITS = '0030'X;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:4    
      111    16964
      112    16965        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:5    
      113    16966    1   SO_SET_IT_UP_ALREADY:
      114    16967
      115    16968    1       DAD$ = QI_1.SOURCE$;
      116    16969    1       QI_1.SOURCE$ = PINCRW ( QI_1.SOURCE$, 1 );
      117    16970
      118    16971            /*  Well, now, the first DAD we get will always be in procedure,
      119    16972                and for normal-type stuff (like MOVE A TO B), QI_1.SOURCE$
      120    16973                should point right to the DAD we want.
      121    16974                Otherwise, we'll loop until we find a DAD with the INDIRECT
      122    16975                bit off, using the IS_CONSTANT bit of the intermediate DADs
      123    16976                to tell whether to look next in (user) data or procedure
      124    16977                for successive DADs.  */
      125    16978            %PROC_ADDRESS ( THING@P = "DAD$ -> QI$PROC_A@P (0)",
      126    16979            CHECK_FOR_INDIRECTION = YES,
      127    16980            RESULT$ = DAD$ );
      128    17017
      129    17018            /*  This sucker hunts down the actual address of the data to be
      130    17019                operated on by the CIP.  */
      131    17020    1       IF DAD$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT
      132    17021    1       THEN
      133    17022              %PROC_ADDRESS ( THING@P = "DAD$ -> QI$DAD.PSEUDO_CIP.DATA@",
      134    17023                CHECK_FOR_INDIRECTION = NO,
      135    17024                RESULT$ = "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)" );
      136    17061    1       ELSE
      137    17062              %DATA_ADDRESS ( THING@D = "DAD$ -> QI$DAD.PSEUDO_CIP.DATA@",
      138    17063                CHECK_FOR_INDIRECTION = NO,
      139    17064                RESULT$ = "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)" );
      140    17101
      141    17102        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:6    
      142    17103            /* Now fill in the various quick-information fields,
      143    17104               some of which are IS_FORM_VARIABLE dependent.  */
      144    17105    1       QI_1.DAD_A$ (PARALLEL_TABLE_INDEX) = DAD$;
      145    17106    1       QI_1.TYPE_A (PARALLEL_TABLE_INDEX) = DAD$ -> QI$DAD.WORD0_FLAGS.TYPE;
      146    17107
      147    17108    1       IF DAD$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE
      148    17109    1       THEN
      149    17110    2         DO;
      150    17111              /* It's a FIELD-like variable.  */
      151    17112    2           QI_1.IS_FORM_VARIABLE_A (PARALLEL_TABLE_INDEX) = %YES;
      152    17113    2           QI_1.IS_ALL_LIT_A (PARALLEL_TABLE_INDEX) = %NO;
      153    17114    2           QI_1.IS_TEMP_A (PARALLEL_TABLE_INDEX) = %NO;
      154    17115    2           IF DAD$ -> QI$FIELD_DAD.PICTURE_STRING@P ~= 0
      155    17116    2           THEN
      156    17117                  %PROC_ADDRESS ( THING@P = "DAD$ -> QI$FIELD_DAD.PICTURE_STRING@P",
      157    17118                    CHECK_FOR_INDIRECTION = NO,
      158    17119                    RESULT$ = "QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX)" );
      159    17156    2           ELSE
      160    17157    2             QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX) = ADDR (NIL);
      161    17158    2         END;
      162    17159    1       ELSE
      163    17160              /* It's a COBOL-like variable.  */
      164    17161    2         DO;
      165    17162    2           QI_1.IS_FORM_VARIABLE_A (PARALLEL_TABLE_INDEX) = %NO;
      166    17163    2           QI_1.IS_ALL_LIT_A (PARALLEL_TABLE_INDEX) = DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.
             17163                    IS_ALL_LIT;
      167    17164    2           QI_1.IS_TEMP_A (PARALLEL_TABLE_INDEX) = DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.
             17164                    IS_TEMP;
      168    17165    2           IF DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.P.PICTURE
      169    17166    2           THEN
      170    17167                  /*  Increment past any level_multipliers:  the first
      171    17168                      item after them should be a PICTURE_STRING@P thing.  */
      172    17169                  %PROC_ADDRESS (
      173    17170                    THING@P = "DAD$ -> QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.P_ITEM_A ( DAD$ ->
             17170         QI$COBOL_DAD.WORD0_FLAGS.DIMENSION_COUNT * 2 )",
      174    17171                    CHECK_FOR_INDIRECTION = NO,
      175    17172                    RESULT$ = "QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX)" );
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:7    
      176    17209    2           ELSE
      177    17210    2             QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX) = ADDR (NIL);
      178    17211
      179    17212                /*  OK, so if the DAD we're looking at also happens to be a
      180    17213                    LINKAGE SECTION item, then we've actually pointed
      181    17214                    QI_1.OP.DATA.x$ at a
      182    17215                    QI$LINKAGE_ARGUMENT_DESCRIPTOR, which shows us the
      183    17216                    offset into the auto frame of the address of the 01-level
      184    17217                    item above this one, and a word offset from that address.
      185    17218                    Sooo, we may not be done yet.  */
      186    17219    2           IF DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT
      187    17220    2           THEN
      188    17221                  %LINKAGE_ARGUMENT_ADDRESS ( THING$ =
             17221                      "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)",
      189    17222                    RESULT$ = "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)" );
      190    17258    2         END;
      191    17259
      192    17260        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:8    
      193    17261            /* We'll point DADS_CIP$ at the DAD's CIP descriptor,
      194    17262               and PARALLEL_TABLES_CIP$ at the CIP we want that's
      195    17263               (guess where) in the parallel tables. */
      196    17264    1       DADS_CIP$ = ADDR ( DAD$ -> QI$DAD.PSEUDO_CIP );
      197    17265    1       PARALLEL_TABLES_CIP$ = ADDR ( QI_1.OP.CIP_A (PARALLEL_TABLE_INDEX) );
      198    17266
      199    17267    2       DO CASE ( QI_1.TYPE_A (PARALLEL_TABLE_INDEX) );
      200    17268
      201    17269    2         CASE ( %QI#TYPE_DISPLAY );
      202    17270    2           QI_1.OP.DEC_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17270                    DEC;
      203    17271    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17271                    LEN;
      204    17272    2           QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.CD
             17272                    .OFFSET;
      205    17273    2           PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = DADS_CIP$ -> QI$PSEUDO_CIP_A (0);
      206    17274    2           PARALLEL_TABLES_CIP$ -> QI$CIP.AS = %QI#CIP_DEFAULT_AS;
      207    17275
      208    17276    2         CASE ( %QI#TYPE_ALPHANUMERIC );
      209    17277    2           QI_1.OP.INX_A (PARALLEL_TABLE_INDEX) = 0;
      210    17278    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.
             17278                    ALPHANUMERIC.LEN;
      211    17279    2           QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.
             17279                    ALPHANUMERIC.CA.OFFSET;
      212    17280    2           PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = BITBIN ( %BINBIT ( QI#CIP_DEFAULT_AS,
             17280                    16 ) | FUNNY_ADDRESS_SYLLABLE_OR_BITS );
      213    17281    2           PARALLEL_TABLES_CIP$ -> QI$CIP.CA.OFFSET = DADS_CIP$ -> QI$PSEUDO_CIP.
             17281                    ALPHANUMERIC.CA.OFFSET;
      214    17282    2           PARALLEL_TABLES_CIP$ -> QI$CIP.CA.FILL = 1;
      215    17283
      216    17284    2         CASE ( %QI#TYPE_PACKED );
      217    17285    2           QI_1.OP.DEC_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17285                    DEC;
      218    17286    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17286                    LEN;
      219    17287    2           QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.CP
             17287                    .OFFSET;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:9    
      220    17288    2           PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = DADS_CIP$ -> QI$PSEUDO_CIP_A (0);
      221    17289    2           PARALLEL_TABLES_CIP$ -> QI$CIP.T = 1;
      222    17290    2           PARALLEL_TABLES_CIP$ -> QI$CIP.AS = %QI#CIP_DEFAULT_AS;
      223    17291
      224    17292    2         CASE ( %QI#TYPE_BINARY );
      225    17293    2           QI_1.OP.DEC_A (PARALLEL_TABLE_INDEX) = 0;
      226    17294    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17294                    LEN;
      227    17295    2           QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.CB
             17295                    .OFFSET;
      228    17296    2           PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = DADS_CIP$ -> QI$PSEUDO_CIP_A (0);
      229    17297    2           PARALLEL_TABLES_CIP$ -> QI$CIP.CB.MBZ = 0;
      230    17298    2           PARALLEL_TABLES_CIP$ -> QI$CIP.AS = %QI#CIP_DEFAULT_AS;
      231    17299
      232    17300    2       END;
      233    17301
      234    17302    1       RETURN;
      235    17303
      236    17304    1   END QCS$SETUP;

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:10   
--  Include file information  --

   QI_MACROS_M.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QCS$SETUP.

   Procedure QCS$SETUP requires 371 words for executable code.
   Procedure QCS$SETUP requires 16 words of local(AUTO) storage.

    No errors detected in file QCS$SETUP.:E05TSI    .

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:11   

 Object Unit name= QCS$SETUP                                  File name= QCS$SETUP.:E05TOU
 UTS= JUL 30 '97 05:14:08.92 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   371    173  QCS$SETUP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        0  QCS$SETUP
     0      7                  yes      Std        0  QCS$SETUP_SOURCE
     0     13                  yes      Std        0  QCS$SETUP_TARGET
     0     20                  yes      Std        0  QCS$SETUP_AUX

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_0
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     QI_1                                  QI_4_CHAR_ALPHANUMERIC                QI_31_DIGIT_SLS_DISPLAY
     QI_16_BIT_BINARY                      QI_32_BIT_BINARY                      QI_31_DIGIT_ST_PACKED
     QI_PICTURE_STRING                r    G$ROS$
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:12   


        1        1        /*M* QCS$SETUP:  Utility for setup of CIP descriptors.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMC,PLM=4,IND=0,DCI=4,CSI=2,IAD=2,DTI=2,AND,ECI=0,DIN=2,STI=2 */
        8        8
        9        9        /*P* NAME:         QCS$SETUP
       10       10             PURPOSE:      Assigns data from DADs to "parallel tables".
       11       11             DESCRIPTION:  As the interpreter stumbles upon DADs with which
       12       12                           it wishes to do various operations, it may call
       13       13                           this routine to "set up" pieces of QI_1 with the
       14       14                           DADs information.  This is sort of a general-purpose
       15       15                           conversion from compiler-looking DADs to L6-looking
       16       16                           CIPs.
       17       17        */
       18       18
       19       19        QCS$SETUP: PROC;

     19   0 000000  D380 0000 0000  xent QCS$SETUP       LNJ,B5   X6A_AUTO_0
          0 000003       0010 0000                       DC       16,0
          0 000005  0F81 0006                            B        s:16952,PREL

       20       20
       21       21          %INCLUDE LCP_6;
       22      212
       23      213          %INCLUDE QG_MACRO_M;
       24      350          %INCLUDE QI_EQUATES_E;
       25      709          %INCLUDE QI_MACROS_M;
       26     5767          %QI$ALL;
       27    16880
       28    16881    1     DCL DAD$ PTR;
       29    16882    1     DCL DADS_CIP$ PTR;
       30    16883    1     DCL PARALLEL_TABLES_CIP$ PTR;
       31    16884    1     DCL PARALLEL_TABLE_INDEX UBIN;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:13   
       32    16885    1     DCL DATA_TYPE UBIN;
       33    16886          /* These funny address syllable OR bits are used to stick in
       34    16887             the correct indexing register for source, target and aux AS's. */
       35    16888    1     DCL FUNNY_ADDRESS_SYLLABLE_OR_BITS BIT(16);
       36    16889        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:14   
       37    16890    1   QCS$SETUP_SOURCE: ENTRY;

  16890   0 000007  D380 0000 0000  xent QCS$SETUP_SOURCELNJ,B5   X6A_AUTO_0
          0 00000A       0010 0000                       DC       16,0

       38    16891
       39    16892        /*D* NAME:         QCS$SETUP_SOURCE
       40    16893             ENTRY:        QCS$SETUP_TARGET
       41    16894                           QCS$SETUP_AUX
       42    16895             CALL:         CALL QCS$SETUP_SOURCE;
       43    16896                           CALL QCS$SETUP_TARGET;
       44    16897                           CALL QCS$SETUP_AUX;
       45    16898             PARAMETERS:   None.
       46    16899             INTERFACE:    Called by all kinds of modules, especially those
       47    16900                           on the "COBOL side" concerned with arithmetic
       48    16901                           operations, comparisons, moves, etc.
       49    16902             ENVIRONMENT:  Nothing unusual.
       50    16903             INPUT:        QI_1.SOURCE$ points to the DAD to be set up.
       51    16904             OUTPUT:       QI_1.SOURCE$ is PINCRW'ed by 1, and the DAD is set up.
       52    16905             SCRATCH:      Various otter data.
       53    16906             DESCRIPTION:  QCS$SETUP uses an offset value relative to the
       54    16907                           FPL program's procedure section to arrive at a
       55    16908                           real L6 address to a DAD.  It keeps doing this
       56    16909                           until it finds a DAD whose INDIRECT bit is off.
       57    16910                           This is the real DAD of the desired operand.
       58    16911                           It then moves pertinent information from the DAD
       59    16912                           to a set of parallel tables in QI_1 (the inter-
       60    16913                           preter's context area).  These "parallel tables"
       61    16914                           consist of an array three wide (0:2) in which
       62    16915                           the elements are commonly termed the SOURCE (0),
       63    16916                           TARGET (1), and AUX (2).  The convention is
       64    16917                           followed, for example, by QBM$MOVA, the routine
       65    16918                           which does a general alphanumeric MOVE A TO B,
       66    16919                           by moving the SOURCE operand to the TARGET
       67    16920                           operand, both having been "set up" by QCS$SETUP.
       68    16921                           The following things are "set up":
       69    16922
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:15   
       70    16923             QI_1.DAD_A$(n)       Contains a pointer to the original DAD,
       71    16924                                  from which the remaining values for this
       72    16925                                  operand were derived.
       73    16926             QI_1.TYPE_A(n)       Contains the type of the operand.
       74    16927             QI_1.OP.LEN_A(n)     Contains the length of the operand
       75    16928                                  (in bytes or nibbles).
       76    16929             QI_1.OP.DEC_A(n)     Contains the implied decimal position of
       77    16930                                  the operand.
       78    16931             QI_1.OP.CIP_A(n)     Contains a CIP descriptor which describes
       79    16932                                  the operand's location via an embedded
       80    16933                                  address syllable (AS), its offset within
       81    16934                                  that location (in bytes or nibbles), its
       82    16935                                  sign type (if any), and its length (only
       83    16936                                  if it is *not* of type ALPHANUMERIC, in
       84    16937                                  which case its length is set to 0).
       85    16938             QI_1.OP.DATA_A$(n)   Contains the word address of the operand.
       86    16939             QI_1.OFFSET_A(n)     Contains the "atom" offset into
       87    16940                                  QI_1.OP.DATA_A$, where the first byte or
       88    16941                                  nibble of the operand is located.
       89    16942             QI_1.IS_ALL_LIT_A(n) Contains:  0 if the operand is not an
       90    16943                                               ALL "literal";
       91    16944                                             1 if the operand is an
       92    16945                                               ALL "literal".
       93    16946             QI_1.IS_TEMP_A(n)    Contains:  0 if the operand is not a temp;
       94    16947                                             1 if the operand is a temp.
       95    16948
       96    16949                           The QI_1.SOURCE$ pointer is incremented also.
       97    16950        */
       98    16951
       99    16952    1       PARALLEL_TABLE_INDEX = %QI#SOURCE;

  16952   0 00000C  8747 000A                            CL       PARALLEL_TABLE_INDEX,AUTO

      100    16953    1       FUNNY_ADDRESS_SYLLABLE_OR_BITS = '0010'X;

  16953   0 00000E  6C10                                 LDV,R6   16
          0 00000F  EF47 000C                            STR,R6   FUNNY_ADDRESS_SYLLABLE_OR_BITS,AUTO
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:16   

      101    16954    1       GOTO SO_SET_IT_UP_ALREADY;

  16954   0 000011  0F81 0019                            B        s:16968,PREL

      102    16955
      103    16956    1   QCS$SETUP_TARGET: ENTRY;

  16956   0 000013  D380 0000 0000  xent QCS$SETUP_TARGETLNJ,B5   X6A_AUTO_0
          0 000016       0010 0000                       DC       16,0

      104    16957    1       PARALLEL_TABLE_INDEX = %QI#TARGET;

  16957   0 000018  6C01                                 LDV,R6   1
          0 000019  EF47 000A                            STR,R6   PARALLEL_TABLE_INDEX,AUTO

      105    16958    1       FUNNY_ADDRESS_SYLLABLE_OR_BITS = '0020'X;

  16958   0 00001B  5C20                                 LDV,R5   32
          0 00001C  DF47 000C                            STR,R5   FUNNY_ADDRESS_SYLLABLE_OR_BITS,AUTO

      106    16959    1       GOTO SO_SET_IT_UP_ALREADY;

  16959   0 00001E  0F81 000C                            B        s:16968,PREL

      107    16960
      108    16961    1   QCS$SETUP_AUX: ENTRY;

  16961   0 000020  D380 0000 0000  xent QCS$SETUP_AUX   LNJ,B5   X6A_AUTO_0
          0 000023       0010 0000                       DC       16,0

      109    16962    1       PARALLEL_TABLE_INDEX = %QI#AUX;

  16962   0 000025  6C02                                 LDV,R6   2
          0 000026  EF47 000A                            STR,R6   PARALLEL_TABLE_INDEX,AUTO

      110    16963    1       FUNNY_ADDRESS_SYLLABLE_OR_BITS = '0030'X;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:17   

  16963   0 000028  5C30                                 LDV,R5   48
          0 000029  DF47 000C                            STR,R5   FUNNY_ADDRESS_SYLLABLE_OR_BITS,AUTO

      111    16964
      112    16965        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:18   
      113    16966    1   SO_SET_IT_UP_ALREADY:
      114    16967
      115    16968    1       DAD$ = QI_1.SOURCE$;

  16968   0 00002B  EC80 0000 0018  xsym SO_SET_IT_UP_AL*LDB,B6   QI_1+24
          0 00002E  EFC7 0004                            STB,B6   DAD$,AUTO

      116    16969    1       QI_1.SOURCE$ = PINCRW ( QI_1.SOURCE$, 1 );

  16969   0 000030  DBC6 0001                            LAB,B5   1,B6
          0 000032  DF80 0000 0018  xsym                 STB,B5   QI_1+24

      117    16970
      118    16971            /*  Well, now, the first DAD we get will always be in procedure,
      119    16972                and for normal-type stuff (like MOVE A TO B), QI_1.SOURCE$
      120    16973                should point right to the DAD we want.
      121    16974                Otherwise, we'll loop until we find a DAD with the INDIRECT
      122    16975                bit off, using the IS_CONSTANT bit of the intermediate DADs
      123    16976                to tell whether to look next in (user) data or procedure
      124    16977                for successive DADs.  */
      125    16978            %PROC_ADDRESS ( THING@P = "DAD$ -> QI$PROC_A@P (0)",
      126    16979            CHECK_FOR_INDIRECTION = YES,
      127    16980            RESULT$ = DAD$ );

  16998   0 000035  B806                                 LDR,R3   ,B6
          0 000036  F853                                 LDR,R7   R3
          0 000037  6C00                                 LDV,R6   0
          0 000038  8400 0000 0002  xsym                 AID      QI_1+2
          0 00003B  8D47 0004                            SDI      DAD$,AUTO

  17000   0 00003D  ECC7 0004                            LDB,B6   DAD$,AUTO
          0 00003F  8986                                 CMZ      ,B6
          0 000040  0881 0019                            BAGE     s:17020,PREL

  17001   0 000042  ECC7 0004                            LDB,B6   DAD$,AUTO
          0 000044  E806                                 LDR,R6   ,B6
          0 000045  6046                                 SOR,R6   6
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:19   
          0 000046  E570 0001                            AND,R6   1,IMO
          0 000048  B846 0002                            LDR,R3   2,B6
          0 00004A  A856                                 LDR,R2   R6
          0 00004B  DCA0 0000 0000  xsym                 LDB,B5   QI_1,R2
          0 00004E  DFC7 000E                            STB,B5   FUNNY_ADDRESS_SYLLABLE_OR_BITS+2,AUTO
          0 000050  F853                                 LDR,R7   R3
          0 000051  6C00                                 LDV,R6   0
          0 000052  8447 000E                            AID      FUNNY_ADDRESS_SYLLABLE_OR_BITS+2,AUTO
          0 000054  8D47 0004                            SDI      DAD$,AUTO

  17005   0 000056  ECC7 0004                            LDB,B6   DAD$,AUTO
          0 000058  8986                                 CMZ      ,B6
          0 000059  0869                                 BAL      s:17001,SPREL

      128    17017
      129    17018            /*  This sucker hunts down the actual address of the data to be
      130    17019                operated on by the CIP.  */
      131    17020    1       IF DAD$ -> QI$DAD.WORD0_FLAGS.IS_CONSTANT

  17020   0 00005A  8286                                 LB,'0040'X        ,B6
  17020   0 00005B       0040
          0 00005C  0581 000F                            BBF      s:17082,PREL

      132    17021    1       THEN
      133    17022              %PROC_ADDRESS ( THING@P = "DAD$ -> QI$DAD.PSEUDO_CIP.DATA@",
      134    17023                CHECK_FOR_INDIRECTION = NO,
      135    17024                RESULT$ = "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)" );

  17042   0 00005E  B846 0002                            LDR,R3   2,B6
          0 000060  F853                                 LDR,R7   R3
          0 000061  6C00                                 LDV,R6   0
          0 000062  8400 0000 0002  xsym                 AID      QI_1+2
          0 000065  A847 000A                            LDR,R2   PARALLEL_TABLE_INDEX,AUTO
          0 000067  8D20 0000 0020  xsym                 SDI      QI_1+32,R2

  17051   0 00006A  0F81 000D                            B        s:17105,PREL

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:20   
      136    17061    1       ELSE
      137    17062              %DATA_ADDRESS ( THING@D = "DAD$ -> QI$DAD.PSEUDO_CIP.DATA@",
      138    17063                CHECK_FOR_INDIRECTION = NO,
      139    17064                RESULT$ = "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)" );

  17082   0 00006C  B846 0002                            LDR,R3   2,B6
          0 00006E  F853                                 LDR,R7   R3
          0 00006F  6C00                                 LDV,R6   0
          0 000070  8400 0000 0000  xsym                 AID      QI_1
          0 000073  A847 000A                            LDR,R2   PARALLEL_TABLE_INDEX,AUTO
          0 000075  8D20 0000 0020  xsym                 SDI      QI_1+32,R2

      140    17101
      141    17102        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:21   
      142    17103            /* Now fill in the various quick-information fields,
      143    17104               some of which are IS_FORM_VARIABLE dependent.  */
      144    17105    1       QI_1.DAD_A$ (PARALLEL_TABLE_INDEX) = DAD$;

  17105   0 000078  EFA0 0000 0032  xsym                 STB,B6   QI_1+50,R2

      145    17106    1       QI_1.TYPE_A (PARALLEL_TABLE_INDEX) = DAD$ -> QI$DAD.WORD0_FLAGS.TYPE;

  17106   0 00007B  E806                                 LDR,R6   ,B6
          0 00007C  E570 000F                            AND,R6   15,IMO
          0 00007E  EF20 0000 0050  xsym                 STR,R6   QI_1+80,R2

      146    17107
      147    17108    1       IF DAD$ -> QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE

  17108   0 000081  8286                                 LB,'0080'X        ,B6
  17108   0 000082       0080
          0 000083  0581 0026                            BBF      s:17162,PREL

      148    17109    1       THEN
      149    17110    2         DO;

      150    17111              /* It's a FIELD-like variable.  */
      151    17112    2           QI_1.IS_FORM_VARIABLE_A (PARALLEL_TABLE_INDEX) = %YES;

  17112   0 000085  2004                                 SOL,R2   4
          0 000086  8920 0000 003B  xsym                 LBT      QI_1+59,R2

      152    17113    2           QI_1.IS_ALL_LIT_A (PARALLEL_TABLE_INDEX) = %NO;

  17113   0 000089  8820 0000 0038  xsym                 LBF      QI_1+56,R2

      153    17114    2           QI_1.IS_TEMP_A (PARALLEL_TABLE_INDEX) = %NO;

  17114   0 00008C  8820 0000 003E  xsym                 LBF      QI_1+62,R2

      154    17115    2           IF DAD$ -> QI$FIELD_DAD.PICTURE_STRING@P ~= 0
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:22   

  17115   0 00008F  E846 0003                            LDR,R6   3,B6
          0 000091  6901 000E                            BEZ,R6   s:17157,PREL

      155    17116    2           THEN
      156    17117                  %PROC_ADDRESS ( THING@P = "DAD$ -> QI$FIELD_DAD.PICTURE_STRING@P",
      157    17118                    CHECK_FOR_INDIRECTION = NO,
      158    17119                    RESULT$ = "QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX)" );

  17137   0 000093  9856                                 LDR,R1   R6
          0 000094  F851                                 LDR,R7   R1
          0 000095  6C00                                 LDV,R6   0
          0 000096  8400 0000 0002  xsym                 AID      QI_1+2
          0 000099  B847 000A                            LDR,R3   PARALLEL_TABLE_INDEX,AUTO
          0 00009B  8D30 0000 004A  xsym                 SDI      QI_1+74,R3

  17146   0 00009E  0F81 004F                            B        s:17264,PREL

      159    17156    2           ELSE
      160    17157    2             QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX) = ADDR (NIL);

  17157   0 0000A0  DB80 0000 0000                       LAB,B5   0
          0 0000A3  9847 000A                            LDR,R1   PARALLEL_TABLE_INDEX,AUTO
          0 0000A5  DF90 0000 004A  xsym                 STB,B5   QI_1+74,R1

      161    17158    2         END;

  17158   0 0000A8  0F81 0045                            B        s:17264,PREL

      162    17159    1       ELSE
      163    17160              /* It's a COBOL-like variable.  */
      164    17161    2         DO;

      165    17162    2           QI_1.IS_FORM_VARIABLE_A (PARALLEL_TABLE_INDEX) = %NO;

  17162   0 0000AA  2004                                 SOL,R2   4
          0 0000AB  8820 0000 003B  xsym                 LBF      QI_1+59,R2
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:23   

      166    17163    2          QI_1.IS_ALL_LIT_A (PARALLEL_TABLE_INDEX) = DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.
             17163                    IS_ALL_LIT;

  17163   0 0000AE  E806                                 LDR,R6   ,B6
          0 0000AF  6007                                 SOL,R6   7
          0 0000B0  9847 000A                            LDR,R1   PARALLEL_TABLE_INDEX,AUTO
          0 0000B2  EA90 0000 0038  xsym                 SRM,R6,'8000'X    QI_1+56,R1
          0 0000B5       8000

      167    17164    2           QI_1.IS_TEMP_A (PARALLEL_TABLE_INDEX) = DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.
             17164                    IS_TEMP;

  17164   0 0000B6  E806                                 LDR,R6   ,B6
          0 0000B7  6006                                 SOL,R6   6
          0 0000B8  EA90 0000 003E  xsym                 SRM,R6,'8000'X    QI_1+62,R1
          0 0000BB       8000

      168    17165    2           IF DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.P.PICTURE

  17165   0 0000BC  8286                                 LB,'4000'X        ,B6
  17165   0 0000BD       4000
          0 0000BE  0581 0012                            BBF      s:17210,PREL

      169    17166    2           THEN
      170    17167                  /*  Increment past any level_multipliers:  the first
      171    17168                      item after them should be a PICTURE_STRING@P thing.  */
      172    17169                  %PROC_ADDRESS (
      173    17170                   THING@P = "DAD$ -> QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.P_ITEM_A ( DAD$ ->
             17170         QI$COBOL_DAD.WORD0_FLAGS.DIMENSION_COUNT * 2 )",
      174    17171                    CHECK_FOR_INDIRECTION = NO,
      175    17172                    RESULT$ = "QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX)" );

  17190   0 0000C0  B806                                 LDR,R3   ,B6
          0 0000C1  3044                                 SOR,R3   4
          0 0000C2  B570 0003                            AND,R3   3,IMO
          0 0000C4  3001                                 SOL,R3   1
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:24   
          0 0000C5  3E03                                 ADV,R3   3
          0 0000C6  A836                                 LDR,R2   ,B6,R3
          0 0000C7  F852                                 LDR,R7   R2
          0 0000C8  6C00                                 LDV,R6   0
          0 0000C9  8400 0000 0002  xsym                 AID      QI_1+2
          0 0000CC  8D10 0000 004A  xsym                 SDI      QI_1+74,R1

  17199   0 0000CF  0F81 0007                            B        s:17219,PREL

      176    17209    2           ELSE
      177    17210    2             QI_1.PICTURE_STRING_A$ (PARALLEL_TABLE_INDEX) = ADDR (NIL);

  17210   0 0000D1  DB80 0000 0000                       LAB,B5   0
          0 0000D4  DF90 0000 004A  xsym                 STB,B5   QI_1+74,R1

      178    17211
      179    17212                /*  OK, so if the DAD we're looking at also happens to be a
      180    17213                    LINKAGE SECTION item, then we've actually pointed
      181    17214                    QI_1.OP.DATA.x$ at a
      182    17215                    QI$LINKAGE_ARGUMENT_DESCRIPTOR, which shows us the
      183    17216                    offset into the auto frame of the address of the 01-level
      184    17217                    item above this one, and a word offset from that address.
      185    17218                    Sooo, we may not be done yet.  */
      186    17219    2           IF DAD$ -> QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT

  17219   0 0000D7  8286                                 LB,'0800'X        ,B6
  17219   0 0000D8       0800
          0 0000D9  0581 0014                            BBF      s:17264,PREL

      187    17220    2           THEN
      188    17221                  %LINKAGE_ARGUMENT_ADDRESS ( THING$ =
             17221                      "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)",
      189    17222                    RESULT$ = "QI_1.OP.DATA_A$ (PARALLEL_TABLE_INDEX)" );

  17240   0 0000DB  DC90 0000 0020  xsym                 LDB,B5   QI_1+32,R1
          0 0000DE  B805                                 LDR,R3   ,B5
          0 0000DF  A845 0001                            LDR,R2   1,B5
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:25   
          0 0000E1  CC80 0000 000C  xsym                 LDB,B4   QI_1+12
          0 0000E4  BCB4                                 LDB,B3   ,B4,R3
          0 0000E5  BFC7 000E                            STB,B3   FUNNY_ADDRESS_SYLLABLE_OR_BITS+2,AUTO
          0 0000E7  F852                                 LDR,R7   R2
          0 0000E8  6C00                                 LDV,R6   0
          0 0000E9  8447 000E                            AID      FUNNY_ADDRESS_SYLLABLE_OR_BITS+2,AUTO
          0 0000EB  8D10 0000 0020  xsym                 SDI      QI_1+32,R1

      190    17258    2         END;

      191    17259
      192    17260        %EJECT;
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:26   
      193    17261            /* We'll point DADS_CIP$ at the DAD's CIP descriptor,
      194    17262               and PARALLEL_TABLES_CIP$ at the CIP we want that's
      195    17263               (guess where) in the parallel tables. */
      196    17264    1       DADS_CIP$ = ADDR ( DAD$ -> QI$DAD.PSEUDO_CIP );

  17264   0 0000EE  DBC6 0001                            LAB,B5   1,B6
          0 0000F0  DFC7 0006                            STB,B5   DADS_CIP$,AUTO

      197    17265    1       PARALLEL_TABLES_CIP$ = ADDR ( QI_1.OP.CIP_A (PARALLEL_TABLE_INDEX) );

  17265   0 0000F2  B847 000A                            LDR,R3   PARALLEL_TABLE_INDEX,AUTO
          0 0000F4  3001                                 SOL,R3   1
          0 0000F5  CBB0 0000 001A  xsym                 LAB,B4   QI_1+26,R3
          0 0000F8  CFC7 0008                            STB,B4   PARALLEL_TABLES_CIP$,AUTO

      198    17266
      199    17267    2       DO CASE ( QI_1.TYPE_A (PARALLEL_TABLE_INDEX) );

  17267   0 0000FA  A847 000A                            LDR,R2   PARALLEL_TABLE_INDEX,AUTO
          0 0000FC  9820 0000 0050  xsym                 LDR,R1   QI_1+80,R2
          0 0000FF  1D04                                 CMV,R1   4
          0 000100  0281 006F                            BGE      s:17302,PREL
          0 000102  B810 0000 0108  00                   LDR,R3   s:17267+14,R1
          0 000105  83B0 0000 010C  00                   JMP      s:17270,R3
          0 000108       0000                            DC       s:17270,PREL
          0 000109       0033                            DC       s:17285,PREL
          0 00010A       004E                            DC       s:17293,PREL
          0 00010B       0019                            DC       s:17277,PREL

      200    17268
      201    17269    2         CASE ( %QI#TYPE_DISPLAY );

      202    17270    2           QI_1.OP.DEC_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17270                    DEC;

  17270   0 00010C  E805                                 LDR,R6   ,B5
          0 00010D  600A                                 SOL,R6   10
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:27   
          0 00010E  606A                                 SAR,R6   10
          0 00010F  EF20 0000 0029  xsym                 STR,R6   QI_1+41,R2

      203    17271    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17271                    LEN;

  17271   0 000112  D805                                 LDR,R5   ,B5
          0 000113  5048                                 SOR,R5   8
          0 000114  D570 001F                            AND,R5   31,IMO
          0 000116  DF20 0000 0026  xsym                 STR,R5   QI_1+38,R2

      204    17272    2          QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.CD
             17272                    .OFFSET;

  17272   0 000119  E805                                 LDR,R6   ,B5
          0 00011A  604F                                 SOR,R6   15
          0 00011B  EF20 0000 0041  xsym                 STR,R6   QI_1+65,R2

      205    17273    2           PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = DADS_CIP$ -> QI$PSEUDO_CIP_A (0);

  17273   0 00011E  D805                                 LDR,R5   ,B5
          0 00011F  DF04                                 STR,R5   ,B4

      206    17274    2           PARALLEL_TABLES_CIP$ -> QI$CIP.AS = %QI#CIP_DEFAULT_AS;

  17274   0 000120  6C0B                                 LDV,R6   11
          0 000121  EA84                                 SRM,R6,'007F'X    ,B4
          0 000122       007F
          0 000123  0F81 004C                            B        s:17302,PREL

      207    17275
      208    17276    2         CASE ( %QI#TYPE_ALPHANUMERIC );

      209    17277    2           QI_1.OP.INX_A (PARALLEL_TABLE_INDEX) = 0;

  17277   0 000125  8720 0000 0029  xsym                 CL       QI_1+41,R2

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:28   
      210    17278    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.
             17278                    ALPHANUMERIC.LEN;

  17278   0 000128  E805                                 LDR,R6   ,B5
          0 000129  E570 3FFF                            AND,R6   16383,IMO
          0 00012B  EF20 0000 0026  xsym                 STR,R6   QI_1+38,R2

      211    17279    2           QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.
             17279                    ALPHANUMERIC.CA.OFFSET;

  17279   0 00012E  D805                                 LDR,R5   ,B5
          0 00012F  504F                                 SOR,R5   15
          0 000130  DF20 0000 0041  xsym                 STR,R5   QI_1+65,R2

      212    17280    2          PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = BITBIN ( %BINBIT ( QI#CIP_DEFAULT_AS,
             17280                    16 ) | FUNNY_ADDRESS_SYLLABLE_OR_BITS );

  17280   0 000133  E847 000C                            LDR,R6   FUNNY_ADDRESS_SYLLABLE_OR_BITS,AUTO
          0 000135  E470 000B                            OR,R6    11,IMO
          0 000137  EF04                                 STR,R6   ,B4

      213    17281    2           PARALLEL_TABLES_CIP$ -> QI$CIP.CA.OFFSET = DADS_CIP$ -> QI$PSEUDO_CIP.
             17281                    ALPHANUMERIC.CA.OFFSET;

  17281   0 000138  D805                                 LDR,R5   ,B5
          0 000139  DA84                                 SRM,R5,'8000'X    ,B4
          0 00013A       8000

      214    17282    2           PARALLEL_TABLES_CIP$ -> QI$CIP.CA.FILL = 1;

  17282   0 00013B  8904                                 LBT,'4000'X       ,B4
  17282   0 00013C       4000
          0 00013D  0F81 0032                            B        s:17302,PREL

      215    17283
      216    17284    2         CASE ( %QI#TYPE_PACKED );

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:29   
      217    17285    2           QI_1.OP.DEC_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17285                    DEC;

  17285   0 00013F  E805                                 LDR,R6   ,B5
          0 000140  600A                                 SOL,R6   10
          0 000141  606A                                 SAR,R6   10
          0 000142  EF20 0000 0029  xsym                 STR,R6   QI_1+41,R2

      218    17286    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17286                    LEN;

  17286   0 000145  D805                                 LDR,R5   ,B5
          0 000146  5048                                 SOR,R5   8
          0 000147  D570 001F                            AND,R5   31,IMO
          0 000149  DF20 0000 0026  xsym                 STR,R5   QI_1+38,R2

      219    17287    2          QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.CP
             17287                    .OFFSET;

  17287   0 00014C  E805                                 LDR,R6   ,B5
          0 00014D  604E                                 SOR,R6   14
          0 00014E  EF20 0000 0041  xsym                 STR,R6   QI_1+65,R2

      220    17288    2           PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = DADS_CIP$ -> QI$PSEUDO_CIP_A (0);

  17288   0 000151  D805                                 LDR,R5   ,B5
          0 000152  DF04                                 STR,R5   ,B4

      221    17289    2           PARALLEL_TABLES_CIP$ -> QI$CIP.T = 1;

  17289   0 000153  8904                                 LBT,'0080'X       ,B4
  17289   0 000154       0080

      222    17290    2           PARALLEL_TABLES_CIP$ -> QI$CIP.AS = %QI#CIP_DEFAULT_AS;

  17290   0 000155  6C0B                                 LDV,R6   11
          0 000156  EA84                                 SRM,R6,'007F'X    ,B4
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:30   
          0 000157       007F
          0 000158  0F81 0017                            B        s:17302,PREL

      223    17291
      224    17292    2         CASE ( %QI#TYPE_BINARY );

      225    17293    2           QI_1.OP.DEC_A (PARALLEL_TABLE_INDEX) = 0;

  17293   0 00015A  8720 0000 0029  xsym                 CL       QI_1+41,R2

      226    17294    2           QI_1.OP.LEN_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.
             17294                    LEN;

  17294   0 00015D  E805                                 LDR,R6   ,B5
          0 00015E  6048                                 SOR,R6   8
          0 00015F  E570 001F                            AND,R6   31,IMO
          0 000161  EF20 0000 0026  xsym                 STR,R6   QI_1+38,R2

      227    17295    2          QI_1.OFFSET_A (PARALLEL_TABLE_INDEX) = DADS_CIP$ -> QI$PSEUDO_CIP.NUMERIC.CB
             17295                    .OFFSET;

  17295   0 000164  D805                                 LDR,R5   ,B5
          0 000165  504F                                 SOR,R5   15
          0 000166  DF20 0000 0041  xsym                 STR,R5   QI_1+65,R2

      228    17296    2           PARALLEL_TABLES_CIP$ -> QI$CIP_A (0) = DADS_CIP$ -> QI$PSEUDO_CIP_A (0);

  17296   0 000169  E805                                 LDR,R6   ,B5
          0 00016A  EF04                                 STR,R6   ,B4

      229    17297    2           PARALLEL_TABLES_CIP$ -> QI$CIP.CB.MBZ = 0;

  17297   0 00016B  8804                                 LBF,'6000'X       ,B4
  17297   0 00016C       6000

      230    17298    2           PARALLEL_TABLES_CIP$ -> QI$CIP.AS = %QI#CIP_DEFAULT_AS;

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:31   
  17298   0 00016D  6C0B                                 LDV,R6   11
          0 00016E  EA84                                 SRM,R6,'007F'X    ,B4
          0 00016F       007F

      231    17299
      232    17300    2       END;

      233    17301
      234    17302    1       RETURN;

  17302   0 000170  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      235    17303
      236    17304    1   END QCS$SETUP;

PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:32   
--  Include file information  --

   QI_MACROS_M.:E05TOU  is referenced.
   QI_EQUATES_E.:E05TOU  is referenced.
   QG_MACRO_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure QCS$SETUP.
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:33   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 DAD$                       6-0-0/w PTR         r     1 DADS_CIP$
     C-0-0/b BIT (16)    r     1 FUNNY_ADDRESS_SYLLABLE_OR_BITS
     8-0-0/w PTR         r     1 PARALLEL_TABLES_CIP$       A-0-0/w UBIN(16)    r     1 PARALLEL_TABLE_INDEX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(2576)  r     1 QI_1

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(32)    r     1 QI$CIP
     0-0-0/d UBIN(16)    r     1 QI$CIP_A(0:1)
     0-0-0/w STRC(192)   r     1 QI$COBOL_DAD               0-0-0/w STRC(48)    r     1 QI$DAD
     0-0-0/w STRC(384)   r     1 QI$FIELD_DAD
     0-0-0/w STRC(32)    r     1 QI$LINKAGE_ARGUMENT_DESCRIPTOR
     0-0-0/w UBIN(16)    r     1 QI$PROC_A@P(0:0)
     0-0-0/w STRC(32)    r     1 QI$PSEUDO_CIP
     0-0-0/w UBIN(16)    r     1 QI$PSEUDO_CIP_A(0:1)
     0-0-0/w PTR         r     1 QI$PTR_A$(0:0)
     0-0-0/c ASTR(8)     r     1 QI$VARIABLE_IDENTIFIER


   Procedure QCS$SETUP requires 371 words for executable code.
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:34   
   Procedure QCS$SETUP requires 16 words of local(AUTO) storage.

    No errors detected in file QCS$SETUP.:E05TSI    .
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:35   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:36   
          MINI XREF LISTING

DAD$
     16881**DCL     16968<<ASSIGN  16998<<ASSIGN  16998>>ASSIGN  17000>>DOWHILE 17001<<ASSIGN  17001>>ASSIGN
     17001>>ASSIGN  17020>>IF      17042>>ASSIGN  17082>>ASSIGN  17105>>ASSIGN  17106>>ASSIGN  17108>>IF
     17115>>IF      17137>>ASSIGN  17163>>ASSIGN  17164>>ASSIGN  17165>>IF      17190>>ASSIGN  17190>>ASSIGN
     17219>>IF      17264>>ASSIGN
DADS_CIP$
     16882**DCL     17264<<ASSIGN  17270>>ASSIGN  17271>>ASSIGN  17272>>ASSIGN  17273>>ASSIGN  17278>>ASSIGN
     17279>>ASSIGN  17281>>ASSIGN  17285>>ASSIGN  17286>>ASSIGN  17287>>ASSIGN  17288>>ASSIGN  17294>>ASSIGN
     17295>>ASSIGN  17296>>ASSIGN
FUNNY_ADDRESS_SYLLABLE_OR_BITS
     16888**DCL     16953<<ASSIGN  16958<<ASSIGN  16963<<ASSIGN  17280>>ASSIGN
PARALLEL_TABLES_CIP$
     16883**DCL     17265<<ASSIGN  17273>>ASSIGN  17274>>ASSIGN  17280>>ASSIGN  17281>>ASSIGN  17282>>ASSIGN
     17288>>ASSIGN  17289>>ASSIGN  17290>>ASSIGN  17296>>ASSIGN  17297>>ASSIGN  17298>>ASSIGN
PARALLEL_TABLE_INDEX
     16884**DCL     16952<<ASSIGN  16957<<ASSIGN  16962<<ASSIGN  17042>>ASSIGN  17082>>ASSIGN  17105>>ASSIGN
     17106>>ASSIGN  17112>>ASSIGN  17113>>ASSIGN  17114>>ASSIGN  17137>>ASSIGN  17157>>ASSIGN  17162>>ASSIGN
     17163>>ASSIGN  17164>>ASSIGN  17190>>ASSIGN  17210>>ASSIGN  17240>>ASSIGN  17240>>ASSIGN  17240>>ASSIGN
     17265>>ASSIGN  17267>>DOCASE  17270>>ASSIGN  17271>>ASSIGN  17272>>ASSIGN  17277>>ASSIGN  17278>>ASSIGN
     17279>>ASSIGN  17285>>ASSIGN  17286>>ASSIGN  17287>>ASSIGN  17293>>ASSIGN  17294>>ASSIGN  17295>>ASSIGN
QGB_PARAM.DVE.DVBYTE.VFC
     11364**DCL     11365--REDEF
QGB_PARAM.DVE.EOMCHAR
     11376**DCL     11377--REDEF
QGB_PARAM.MSG$
     11358**DCL     11359--REDEF
QGB_PARAM.UHDR$
     11383**DCL     11384--REDEF
QI$ACTIVATION_STATUS
      9122**DCL      9128--REDEF
QI$CIP
      7963**DCL      8033--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:37   
QI$CIP.AS
      8030**DCL     17274<<ASSIGN  17290<<ASSIGN  17298<<ASSIGN
QI$CIP.CA
      7968**DCL      7972--REDEF    7975--REDEF    7978--REDEF
QI$CIP.CA.FILL
      7970**DCL     17282<<ASSIGN
QI$CIP.CA.OFFSET
      7969**DCL     17281<<ASSIGN
QI$CIP.CB.MBZ
      7974**DCL     17297<<ASSIGN
QI$CIP.T
      8028**DCL     17289<<ASSIGN
QI$CIP_A
      8033**DCL     17273<<ASSIGN  17280<<ASSIGN  17288<<ASSIGN  17296<<ASSIGN
QI$COBOL_DAD.PSEUDO_CIP
      8207**DCL      8232--REDEF
QI$COBOL_DAD.PSEUDO_CIP.ALPHANUMERIC
      8209**DCL      8214--REDEF
QI$COBOL_DAD.PSEUDO_CIP.NUMERIC.CB
      8215**DCL      8218--REDEF    8221--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS
      8243**DCL      8259--REDEF    8267--REDEF    8275--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      8244**DCL      8254--REDEF    8257--REDEF
QI$COBOL_DAD.VARIABLE_LENGTH_ITEMS.P_ITEM_A
      8257**DCL     17190>>ASSIGN
QI$COBOL_DAD.WORD0
      8171**DCL      8172--REDEF    8186--REDEF
QI$COBOL_DAD.WORD0_FLAGS.DIMENSION_COUNT
      8184**DCL     17190>>ASSIGN
QI$COBOL_DAD.WORD0_FLAGS.IS_ALL_LIT
      8181**DCL     17163>>ASSIGN
QI$COBOL_DAD.WORD0_FLAGS.IS_LINKAGE_ARGUMENT
      8178**DCL     17219>>IF
QI$COBOL_DAD.WORD0_FLAGS.IS_TEMP
      8180**DCL     17164>>ASSIGN
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:38   
QI$COBOL_DAD.WORD0_FLAGS.P.PICTURE
      8175**DCL     17165>>IF
QI$COBOL_DAD_P_BITS.P
      8311**DCL      8317--REDEF
QI$CONDITION_CONTROL_BLOCK.LIST_A@P
      7797**DCL      7798--REDEF
QI$CONDITION_CONTROL_BLOCK.WORD0_FLAGS
      7793**DCL      7796--REDEF
QI$CONDITION_LEGAL_BLOCK.ARRAY@P
      7830**DCL      7831--REDEF    7832--REDEF
QI$DAD.PSEUDO_CIP
      8110**DCL      8135--REDEF   17264--ASSIGN
QI$DAD.PSEUDO_CIP.ALPHANUMERIC
      8112**DCL      8117--REDEF
QI$DAD.PSEUDO_CIP.DATA@
      8134**DCL     17001>>ASSIGN  17042>>ASSIGN  17082>>ASSIGN
QI$DAD.PSEUDO_CIP.NUMERIC.CB
      8118**DCL      8121--REDEF    8124--REDEF
QI$DAD.WORD0
      8079**DCL      8080--REDEF
QI$DAD.WORD0_FLAGS.INDIRECT
      8081**DCL     17000>>DOWHILE
QI$DAD.WORD0_FLAGS.IS_CONSTANT
      8086**DCL     17001>>ASSIGN  17020>>IF
QI$DAD.WORD0_FLAGS.IS_FORM_VARIABLE
      8085**DCL     17108>>IF
QI$DAD.WORD0_FLAGS.TYPE
      8088**DCL     17106>>ASSIGN
QI$ERROR_MESSAGE_LINE
     11471**DCL     11473--REDEF
QI$ERROR_STATUS
     11468**DCL     11470--REDEF
QI$FIELD_DAD.ELEMENTARY_ITEM.P
      8525**DCL      8532--REDEF
QI$FIELD_DAD.ONE_DIMENSIONAL_ITEM.P
      8545**DCL      8552--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:39   
QI$FIELD_DAD.PICTURE_STRING@P
      8488**DCL     17115>>IF      17137>>ASSIGN
QI$FIELD_DAD.PSEUDO_CIP
      8452**DCL      8477--REDEF
QI$FIELD_DAD.PSEUDO_CIP.ALPHANUMERIC
      8454**DCL      8459--REDEF
QI$FIELD_DAD.PSEUDO_CIP.NUMERIC.CB
      8460**DCL      8463--REDEF    8466--REDEF
QI$FIELD_DAD.TWO_DIMENSIONAL_ITEM.P
      8565**DCL      8572--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS
      8508**DCL      8524--REDEF    8542--REDEF    8560--REDEF
QI$FIELD_DAD.VARIABLE_LENGTH_ITEMS.LEVEL_MULTIPLIERS
      8509**DCL      8519--REDEF    8522--REDEF
QI$FIELD_DAD.WORD0
      8404**DCL      8405--REDEF
QI$FIELD_DAD.WORD0_FLAGS.IO_FLAGS
      8408**DCL      8413--REDEF
QI$FIELD_DAD_P.P
      8606**DCL      8613--REDEF
QI$FIELD_STATUS.INDICATORS
      9272**DCL      9304--REDEF
QI$FIELD_STATUS.INDICATORS.ENABLED_FLAGS
      9276**DCL      9281--REDEF
QI$FIELD_STATUS.INDICATORS.OPEN_FLAGS
      9288**DCL      9295--REDEF
QI$FIELD_STATUS.INDICATORS.STATE_FLAGS
      9282**DCL      9287--REDEF
QI$FILE.WORD0
      8728**DCL      8729--REDEF
QI$FILE_STATUS.INDICATORS
      9565**DCL      9597--REDEF
QI$FILE_STATUS.INDICATORS.ENABLED_FLAGS
      9569**DCL      9574--REDEF
QI$FILE_STATUS.INDICATORS.OPEN_FLAGS
      9581**DCL      9588--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:40   
QI$FILE_STATUS.INDICATORS.STATE_FLAGS
      9575**DCL      9580--REDEF
QI$FORM_FILE.USE_PROCEDURE
      8828**DCL      8835--REDEF
QI$FORM_FILE.WORD0
      8782**DCL      8783--REDEF
QI$FORM_STATUS.INDICATORS
      9686**DCL      9718--REDEF
QI$FORM_STATUS.INDICATORS.ENABLED_FLAGS
      9690**DCL      9695--REDEF
QI$FORM_STATUS.INDICATORS.OPEN_FLAGS
      9702**DCL      9709--REDEF
QI$FORM_STATUS.INDICATORS.STATE_FLAGS
      9696**DCL      9701--REDEF
QI$FRAME.WORD0
      8943**DCL      8944--REDEF
QI$FRAME_STATUS.INDICATORS
      9915**DCL      9947--REDEF
QI$FRAME_STATUS.INDICATORS.ENABLED_FLAGS
      9919**DCL      9924--REDEF
QI$FRAME_STATUS.INDICATORS.OPEN_FLAGS
      9931**DCL      9938--REDEF
QI$FRAME_STATUS.INDICATORS.STATE_FLAGS
      9925**DCL      9930--REDEF
QI$GZ_FIELD.DESCRIPTION.IO_FLAGS
     16797**DCL     16802--REDEF
QI$IDENTIFIER
     11474**DCL     11476--REDEF
QI$INDICATORS
      9186**DCL      9216--REDEF
QI$INDICATORS.ENABLED_FLAGS
      9192**DCL      9197--REDEF
QI$INDICATORS.OPEN_FLAGS
      9204**DCL      9211--REDEF
QI$INDICATORS.STATE_FLAGS
      9198**DCL      9203--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:41   
QI$LINKAGE_ARGUMENT_DESCRIPTOR.ARGUMENT_NUMBER
      8372**DCL     17240>>ASSIGN
QI$LINKAGE_ARGUMENT_DESCRIPTOR.WORD_OFFSET_FROM_01_ITEM
      8376**DCL     17240>>ASSIGN
QI$MAJOR_NODE.WORD0
      8642**DCL      8643--REDEF
QI$MAJOR_STATUS.INDICATORS
      9365**DCL      9397--REDEF
QI$MAJOR_STATUS.INDICATORS.ENABLED_FLAGS
      9369**DCL      9374--REDEF
QI$MAJOR_STATUS.INDICATORS.OPEN_FLAGS
      9381**DCL      9388--REDEF
QI$MAJOR_STATUS.INDICATORS.STATE_FLAGS
      9375**DCL      9380--REDEF
QI$MESSAGE_TYPE
     11465**DCL     11467--REDEF
QI$MINOR_NODE.WORD0
      8685**DCL      8686--REDEF
QI$MINOR_STATUS.INDICATORS
      9458**DCL      9490--REDEF
QI$MINOR_STATUS.INDICATORS.ENABLED_FLAGS
      9462**DCL      9467--REDEF
QI$MINOR_STATUS.INDICATORS.OPEN_FLAGS
      9474**DCL      9481--REDEF
QI$MINOR_STATUS.INDICATORS.STATE_FLAGS
      9468**DCL      9473--REDEF
QI$OP_ACCEPT.DATANAME@P
      5873**DCL      5874--REDEF
QI$OP_CALL.EPTR$
      6045**DCL      6046--REDEF
QI$OP_CLEAR.IO_FLAGS
      6078**DCL      6081--REDEF
QI$OP_DISPLAY.FIELD_A@P
      6345**DCL      6346--REDEF
QI$OP_ENABLE.IO_FLAGS
      6432**DCL      6435--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:42   
QI$OP_IFCLS.ATTRIBUTE.TYPE
      6525**DCL      6530--REDEF
QI$OP_INSPECT.TALLYING_FOR_ITEM@P
      6759**DCL      6760--REDEF
QI$OP_INSPECT.TALLYING_INITIAL_ITEM@P
      6761**DCL      6762--REDEF
QI$OP_INSPECT.TALLYING_ITEM@P
      6757**DCL      6758--REDEF
QI$OP_OPEN.IO_FLAGS
      7319**DCL      7322--REDEF
QI$OP_PERFM.BINARY_ITERATION_COUNT@P
      7357**DCL      7358--REDEF
QI$PROC_A@P
     11453**DCL     16998>>ASSIGN
QI$PSEUDO_CIP
      7858**DCL      7882--REDEF
QI$PSEUDO_CIP.ALPHANUMERIC
      7862**DCL      7867--REDEF
QI$PSEUDO_CIP.ALPHANUMERIC.CA.OFFSET
      7864**DCL     17279>>ASSIGN  17281>>ASSIGN
QI$PSEUDO_CIP.ALPHANUMERIC.LEN
      7866**DCL     17278>>ASSIGN
QI$PSEUDO_CIP.NUMERIC.CB
      7868**DCL      7871--REDEF    7874--REDEF
QI$PSEUDO_CIP.NUMERIC.CB.OFFSET
      7869**DCL     17295>>ASSIGN
QI$PSEUDO_CIP.NUMERIC.CD.OFFSET
      7872**DCL     17272>>ASSIGN
QI$PSEUDO_CIP.NUMERIC.CP.OFFSET
      7875**DCL     17287>>ASSIGN
QI$PSEUDO_CIP.NUMERIC.DEC
      7879**DCL     17270>>ASSIGN  17285>>ASSIGN
QI$PSEUDO_CIP.NUMERIC.LEN
      7877**DCL     17271>>ASSIGN  17286>>ASSIGN  17294>>ASSIGN
QI$PSEUDO_CIP_A
      7882**DCL     17273>>ASSIGN  17288>>ASSIGN  17296>>ASSIGN
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:43   
QI$PTR_A$
     11464**DCL     17240>>ASSIGN
QI$TERMINAL_ATTRIBUTES
      9079**DCL      9092--REDEF
QI$TRAN_FILE.WORD0
      8864**DCL      8865--REDEF
QI$TRAN_STATUS.INDICATORS
      9799**DCL      9831--REDEF
QI$TRAN_STATUS.INDICATORS.ENABLED_FLAGS
      9803**DCL      9808--REDEF
QI$TRAN_STATUS.INDICATORS.OPEN_FLAGS
      9815**DCL      9822--REDEF
QI$TRAN_STATUS.INDICATORS.STATE_FLAGS
      9809**DCL      9814--REDEF
QI$VARIABLE_IDENTIFIER.LENGTH
     11478**DCL     11479--IMP-SIZ
QI_1.ARGUMENTS_AND_OR_FREE_AUTO_A$$
     10021**DCL     17240>>ASSIGN
QI_1.BASE
     10007**DCL     10014--REDEF
QI_1.BASE.DATA$
     10008**DCL     17082>>ASSIGN
QI_1.BASE.PROC$
     10010**DCL     16998>>ASSIGN  17042>>ASSIGN  17137>>ASSIGN  17190>>ASSIGN
QI_1.BASE_A$
     10014**DCL     17001>>ASSIGN
QI_1.CURRENT.FILE$
     10898**DCL     10900--REDEF   10902--REDEF
QI_1.CURRENT.FILE_STATUS$
     10904**DCL     10906--REDEF   10908--REDEF
QI_1.DAD
     10702**DCL     10707--REDEF
QI_1.DAD_A$
     10707**DCL     17105<<ASSIGN
QI_1.FILE_HEAD
     10885**DCL     10892--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:44   
QI_1.IS_ALL_LIT
     10708**DCL     10713--REDEF
QI_1.IS_ALL_LIT_A
     10713**DCL     17113<<ASSIGN  17163<<ASSIGN
QI_1.IS_FORM_VARIABLE
     10714**DCL     10719--REDEF
QI_1.IS_FORM_VARIABLE_A
     10719**DCL     17112<<ASSIGN  17162<<ASSIGN
QI_1.IS_TEMP
     10720**DCL     10725--REDEF
QI_1.IS_TEMP_A
     10725**DCL     17114<<ASSIGN  17164<<ASSIGN
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP
     10818**DCL     10843--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.ALPHANUMERIC
     10820**DCL     10825--REDEF
QI_1.MESSAGE_LINE_DAD.PSEUDO_CIP.NUMERIC.CB
     10826**DCL     10829--REDEF   10832--REDEF
QI_1.MESSAGE_LINE_DAD.WORD0
     10787**DCL     10788--REDEF
QI_1.OFFSET
     10726**DCL     10731--REDEF
QI_1.OFFSET_A
     10731**DCL     17272<<ASSIGN  17279<<ASSIGN  17287<<ASSIGN  17295<<ASSIGN
QI_1.OP.CIP
     10087**DCL     10538--REDEF
QI_1.OP.CIP.AUX
     10453**DCL     10524--REDEF
QI_1.OP.CIP.AUX.CD
     10498**DCL     10501--REDEF   10505--REDEF   10508--REDEF
QI_1.OP.CIP.S
     10157**DCL     10228--REDEF
QI_1.OP.CIP.S.CD
     10202**DCL     10205--REDEF   10209--REDEF   10212--REDEF
QI_1.OP.CIP.T
     10305**DCL     10376--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:45   
QI_1.OP.CIP.T.CD
     10350**DCL     10353--REDEF   10357--REDEF   10360--REDEF
QI_1.OP.CIP_A
     10538**DCL     17265--ASSIGN
QI_1.OP.DATA
     10545**DCL     10549--REDEF
QI_1.OP.DATA_A$
     10549**DCL     17042<<ASSIGN  17082<<ASSIGN  17240<<ASSIGN  17240>>ASSIGN  17240>>ASSIGN
QI_1.OP.DEC_A
     10611**DCL     17270<<ASSIGN  17285<<ASSIGN  17293<<ASSIGN
QI_1.OP.FILL_CHAR
     10669**DCL     10672--REDEF
QI_1.OP.INX
     10602**DCL     10606--REDEF   10607--REDEF   10611--REDEF
QI_1.OP.INX_A
     10606**DCL     17277<<ASSIGN
QI_1.OP.LEN
     10585**DCL     10589--REDEF   10590--REDEF   10594--REDEF   10595--REDEF   10599--REDEF
QI_1.OP.LEN.AUX
     10588**DCL     11489--IMP-SIZ
QI_1.OP.LEN.S
     10586**DCL     11485--IMP-SIZ
QI_1.OP.LEN.T
     10587**DCL     11487--IMP-SIZ
QI_1.OP.LEN_A
     10589**DCL     17271<<ASSIGN  17278<<ASSIGN  17286<<ASSIGN  17294<<ASSIGN
QI_1.OP.PICTURE_STRING
     10655**DCL     10658--REDEF   10659--REDEF   10662--REDEF   10663--REDEF   10666--REDEF
QI_1.OP.ROUND
     10688**DCL     10689--REDEF   10690--REDEF
QI_1.OP.SRCH_VRFY_ELEMS
     10624**DCL     10627--REDEF
QI_1.OPENED_COUNT
     10893**DCL     10896--REDEF
QI_1.OTTER_SPACE
     10732**DCL     10737--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:46   
QI_1.PICTURE_STRING
     10738**DCL     10743--REDEF
QI_1.PICTURE_STRING_A$
     10743**DCL     17137<<ASSIGN  17157<<ASSIGN  17190<<ASSIGN  17210<<ASSIGN
QI_1.SOURCE$
     10058**DCL     16968>>ASSIGN  16969<<ASSIGN  16969>>ASSIGN
QI_1.SPECIAL_NAMES
     10921**DCL     10930--REDEF
QI_1.TYPE
     10744**DCL     10749--REDEF
QI_1.TYPE_A
     10749**DCL     17106<<ASSIGN  17267>>DOCASE
QI_16_BIT_BINARY
     15934**DCL     16004--REDEF
QI_16_BIT_BINARY.CB
     15953**DCL     15956--REDEF   15960--REDEF   15963--REDEF
QI_31_DIGIT_SLS_DISPLAY
     15767**DCL     15837--REDEF
QI_31_DIGIT_SLS_DISPLAY.CD
     15814**DCL     15817--REDEF   15821--REDEF   15824--REDEF
QI_31_DIGIT_ST_PACKED
     16269**DCL     16339--REDEF
QI_31_DIGIT_ST_PACKED.CP
     16302**DCL     16305--REDEF   16309--REDEF   16312--REDEF
QI_32_BIT_BINARY
     16101**DCL     16171--REDEF
QI_32_BIT_BINARY.CB
     16120**DCL     16123--REDEF   16127--REDEF   16130--REDEF
QI_4_CHAR_ALPHANUMERIC
     15599**DCL     15669--REDEF
QI_4_CHAR_ALPHANUMERIC.CA
     15604**DCL     15608--REDEF   15611--REDEF   15614--REDEF
QI_ACCUMULATOR_DAD.CIP
     16612**DCL     16683--REDEF
QI_ACCUMULATOR_DAD.CIP.CP
     16643**DCL     16646--REDEF   16650--REDEF   16653--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:47   
QI_ALR.CIP
     11564**DCL     12015--REDEF
QI_ALR.CIP.AUX
     11930**DCL     12001--REDEF
QI_ALR.CIP.AUX.CA
     11933**DCL     11937--REDEF   11940--REDEF   11943--REDEF
QI_ALR.CIP.S
     11634**DCL     11705--REDEF
QI_ALR.CIP.S.CA
     11637**DCL     11641--REDEF   11644--REDEF   11647--REDEF
QI_ALR.CIP.T
     11782**DCL     11853--REDEF
QI_ALR.CIP.T.CA
     11785**DCL     11789--REDEF   11792--REDEF   11795--REDEF
QI_ALR.DATA
     12022**DCL     12026--REDEF
QI_ALR.FILL_CHAR
     12146**DCL     12149--REDEF
QI_ALR.INX
     12079**DCL     12083--REDEF   12084--REDEF   12088--REDEF
QI_ALR.LEN
     12062**DCL     12066--REDEF   12067--REDEF   12071--REDEF   12072--REDEF   12076--REDEF
QI_ALR.PICTURE_STRING
     12132**DCL     12135--REDEF   12136--REDEF   12139--REDEF   12140--REDEF   12143--REDEF
QI_ALR.ROUND
     12165**DCL     12166--REDEF   12167--REDEF
QI_ALR.SRCH_VRFY_ELEMS
     12101**DCL     12104--REDEF
QI_MAT.CIP
     14903**DCL     15354--REDEF
QI_MAT.CIP.AUX
     15269**DCL     15340--REDEF
QI_MAT.CIP.AUX.CA
     15272**DCL     15276--REDEF   15279--REDEF   15282--REDEF
QI_MAT.CIP.S
     14973**DCL     15044--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:48   
QI_MAT.CIP.S.CA
     14976**DCL     14980--REDEF   14983--REDEF   14986--REDEF
QI_MAT.CIP.T
     15121**DCL     15192--REDEF
QI_MAT.CIP.T.CA
     15124**DCL     15128--REDEF   15131--REDEF   15134--REDEF
QI_MAT.DATA
     15361**DCL     15365--REDEF
QI_MAT.DEC
     15429**DCL     15433--REDEF   15434--REDEF   15438--REDEF
QI_MAT.FILL_CHAR
     15485**DCL     15488--REDEF
QI_MAT.LEN
     15401**DCL     15405--REDEF   15406--REDEF   15410--REDEF   15411--REDEF   15415--REDEF
QI_MAT.PICTURE_STRING
     15471**DCL     15474--REDEF   15475--REDEF   15478--REDEF   15479--REDEF   15482--REDEF
QI_MAT.ROUND
     15504**DCL     15505--REDEF   15506--REDEF
QI_MAT.SRCH_VRFY_ELEMS
     15440**DCL     15443--REDEF
QI_PICTURE_STRING
     16437**DCL     16507--REDEF
QI_PICTURE_STRING.CA
     16442**DCL     16446--REDEF   16449--REDEF   16452--REDEF
QI_SRCH_VRFY.CIP
     14234**DCL     14685--REDEF
QI_SRCH_VRFY.CIP.AUX
     14600**DCL     14671--REDEF
QI_SRCH_VRFY.CIP.AUX.CA
     14603**DCL     14607--REDEF   14610--REDEF   14613--REDEF
QI_SRCH_VRFY.CIP.S
     14304**DCL     14375--REDEF
QI_SRCH_VRFY.CIP.S.CA
     14307**DCL     14311--REDEF   14314--REDEF   14317--REDEF
QI_SRCH_VRFY.CIP.T
     14452**DCL     14523--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:49   
QI_SRCH_VRFY.CIP.T.CA
     14455**DCL     14459--REDEF   14462--REDEF   14465--REDEF
QI_SRCH_VRFY.DATA
     14692**DCL     14696--REDEF
QI_SRCH_VRFY.DEC
     14760**DCL     14764--REDEF   14765--REDEF   14769--REDEF
QI_SRCH_VRFY.FILL_CHAR
     14816**DCL     14819--REDEF
QI_SRCH_VRFY.ROUND
     14835**DCL     14836--REDEF   14837--REDEF
QI_SRCH_VRFY.SRCH_RESULT
     14776**DCL     14779--REDEF   14780--REDEF   14783--REDEF   14784--REDEF   14787--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ARGS
     14700**DCL     14704--REDEF   14705--REDEF   14709--REDEF   14710--REDEF   14714--REDEF
QI_SRCH_VRFY.SRCH_VRFY_ELEMS
     14771**DCL     14774--REDEF
QI_TYPE_BINARY_TARGET.CIP
     13561**DCL     14012--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX
     13927**DCL     13998--REDEF
QI_TYPE_BINARY_TARGET.CIP.AUX.CA
     13930**DCL     13934--REDEF   13937--REDEF   13940--REDEF
QI_TYPE_BINARY_TARGET.CIP.S
     13631**DCL     13702--REDEF
QI_TYPE_BINARY_TARGET.CIP.S.CA
     13634**DCL     13638--REDEF   13641--REDEF   13644--REDEF
QI_TYPE_BINARY_TARGET.CIP.T
     13779**DCL     13850--REDEF
QI_TYPE_BINARY_TARGET.CIP.T.CB
     13796**DCL     13799--REDEF   13803--REDEF   13806--REDEF
QI_TYPE_BINARY_TARGET.DATA
     14019**DCL     14023--REDEF
QI_TYPE_BINARY_TARGET.DEC
     14087**DCL     14091--REDEF   14092--REDEF   14096--REDEF
QI_TYPE_BINARY_TARGET.LEN
     14059**DCL     14063--REDEF   14064--REDEF   14068--REDEF   14069--REDEF   14073--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:50   
QI_TYPE_BINARY_TARGET.PICTURE_STRING
     14129**DCL     14132--REDEF   14133--REDEF   14136--REDEF   14137--REDEF   14140--REDEF
QI_TYPE_BINARY_TARGET.ROUND
     14162**DCL     14163--REDEF   14164--REDEF
QI_TYPE_BINARY_TARGET.SIZE_ERROR
     14148**DCL     14149--REDEF
QI_TYPE_BINARY_TARGET.SRCH_VRFY_ELEMS
     14098**DCL     14101--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP
     12229**DCL     12680--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX
     12595**DCL     12666--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.AUX.CA
     12598**DCL     12602--REDEF   12605--REDEF   12608--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S
     12299**DCL     12370--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.S.CD
     12344**DCL     12347--REDEF   12351--REDEF   12354--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T
     12447**DCL     12518--REDEF
QI_TYPE_DISPLAY_SOURCE.CIP.T.CA
     12450**DCL     12454--REDEF   12457--REDEF   12460--REDEF
QI_TYPE_DISPLAY_SOURCE.DATA
     12687**DCL     12691--REDEF
QI_TYPE_DISPLAY_SOURCE.DEC
     12755**DCL     12759--REDEF   12760--REDEF   12764--REDEF
QI_TYPE_DISPLAY_SOURCE.LEN
     12727**DCL     12731--REDEF   12732--REDEF   12736--REDEF   12737--REDEF   12741--REDEF
QI_TYPE_DISPLAY_SOURCE.PICTURE_STRING
     12797**DCL     12800--REDEF   12801--REDEF   12804--REDEF   12805--REDEF   12808--REDEF
QI_TYPE_DISPLAY_SOURCE.ROUND
     12830**DCL     12831--REDEF   12832--REDEF
QI_TYPE_DISPLAY_SOURCE.SIZE_ERROR
     12816**DCL     12817--REDEF
QI_TYPE_DISPLAY_SOURCE.SRCH_VRFY_ELEMS
     12766**DCL     12769--REDEF
PL6.E3A0      #001=QCS$SETUP File=QCS$SETUP.:E05TSI                              WED 07/30/97 05:14 Page:51   
QI_TYPE_DISPLAY_TARGET.CIP
     12895**DCL     13346--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX
     13261**DCL     13332--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.AUX.CA
     13264**DCL     13268--REDEF   13271--REDEF   13274--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S
     12965**DCL     13036--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.S.CA
     12968**DCL     12972--REDEF   12975--REDEF   12978--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T
     13113**DCL     13184--REDEF
QI_TYPE_DISPLAY_TARGET.CIP.T.CD
     13158**DCL     13161--REDEF   13165--REDEF   13168--REDEF
QI_TYPE_DISPLAY_TARGET.DATA
     13353**DCL     13357--REDEF
QI_TYPE_DISPLAY_TARGET.DEC
     13421**DCL     13425--REDEF   13426--REDEF   13430--REDEF
QI_TYPE_DISPLAY_TARGET.LEN
     13393**DCL     13397--REDEF   13398--REDEF   13402--REDEF   13403--REDEF   13407--REDEF
QI_TYPE_DISPLAY_TARGET.PICTURE_STRING
     13463**DCL     13466--REDEF   13467--REDEF   13470--REDEF   13471--REDEF   13474--REDEF
QI_TYPE_DISPLAY_TARGET.ROUND
     13496**DCL     13497--REDEF   13498--REDEF
QI_TYPE_DISPLAY_TARGET.SIZE_ERROR
     13482**DCL     13483--REDEF
QI_TYPE_DISPLAY_TARGET.SRCH_VRFY_ELEMS
     13432**DCL     13435--REDEF
SO_SET_IT_UP_ALREADY
     16968**LABEL   16954--GOTO    16959--GOTO
