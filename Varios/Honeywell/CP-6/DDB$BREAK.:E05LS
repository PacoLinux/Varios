VERSION E05

PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:1    
        1        1        /*M* DDB$BREAK Break check & reporting routine for DELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DDB$BREAK
        9        9             PURPOSE: This routine checks & reports if break was hit by the
       10       10                      user.
       11       11             DESCRIPTION: This routine checks & reports if break was hit by the
       12       12                          user. If so, it resets the break flag, reports that
       13       13                          the break occured, & ALTRETs, else it just RETURNs. */
       14       14        %EJECT;
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:2    
       15       15
       16       16        DDB$BREAK: PROC ALTRET;
       17       17
       18       18        %INCLUDE DD_SUBS_C;
       19      289        %INCLUDE XUH_MACRO_C;
       20      373        %INCLUDE DD_SD_M;
       21     1709        %S_D;
       22     3027        /**/
       23     3028    1   DCL DDR$REPORT ENTRY(1);
       24     3029
       25     3030
       26     3031    1        IF S_D.BREAK
       27     3032    2        THEN DO;
       28     3033    2             IF NOT S_D.BREAK_PRINTED
       29     3034    3             THEN DO;
       30     3035    3                  CALL DDR$REPORT( R_BREAK );
       31     3036    3                  S_D.BREAK_PRINTED = '1'B;
       32     3037    3                END;
       33     3038    2             ALTRETURN;
       34     3039    2           END;
       35     3040    1        ELSE RETURN;
       36     3041
       37     3042    1   END DDB$BREAK;

PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:3    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$BREAK.

   Procedure DDB$BREAK requires 16 words for executable code.
   Procedure DDB$BREAK requires 4 words of local(AUTO) storage.

    No errors detected in file DDB$BREAK.:E05TSI    .

PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:4    

 Object Unit name= DDB$BREAK                                  File name= DDB$BREAK.:E05TOU
 UTS= JUL 29 '97 13:42:55.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    16     20  DDB$BREAK
    1  RoData even  none     1      1  DDB$BREAK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  DDB$BREAK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 DDR$REPORT
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    S_D$                                  B_VECTNIL
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:5    

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:6    


        1        1        /*M* DDB$BREAK Break check & reporting routine for DELTA */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CSU=3,EXM=0,ECU=3,MOC,DCI=5,CRT=5 */
        8        8        /*P* NAME: DDB$BREAK
        9        9             PURPOSE: This routine checks & reports if break was hit by the
       10       10                      user.
       11       11             DESCRIPTION: This routine checks & reports if break was hit by the
       12       12                          user. If so, it resets the break flag, reports that
       13       13                          the break occured, & ALTRETs, else it just RETURNs. */
       14       14        %EJECT;
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:7    
       15       15
       16       16        DDB$BREAK: PROC ALTRET;

     16  0 000000   000000 700200 xent  DDB$BREAK    TSX0  ! X66_AUTO_0
         0 000001   000004 000000                    ZERO    4,0

       17       17
       18       18        %INCLUDE DD_SUBS_C;
       19      289        %INCLUDE XUH_MACRO_C;
       20      373        %INCLUDE DD_SD_M;
       21     1709        %S_D;
       22     3027        /**/
       23     3028    1   DCL DDR$REPORT ENTRY(1);
       24     3029
       25     3030
       26     3031    1        IF S_D.BREAK

   3031  0 000002   000000 470400 xsym               LDP0    S_D$
         0 000003   000026 234100                    SZN     22,,PR0
         0 000004   000017 605000 0                  TPL     s:3040

       27     3032    2        THEN DO;

       28     3033    2             IF NOT S_D.BREAK_PRINTED

   3033  0 000005   005213 234100                    SZN     2699,,PR0
         0 000006   000016 604000 0                  TMI     s:3038

       29     3034    3             THEN DO;

       30     3035    3                  CALL DDR$REPORT( R_BREAK );

   3035  0 000007   000000 630400 1                  EPPR0   0
         0 000010   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000011   000000 701000 xent               TSX1    DDR$REPORT
         0 000012   000000 011000                    NOP     0

PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:8    
       31     3036    3                  S_D.BREAK_PRINTED = '1'B;

   3036  0 000013   400000 236003                    LDQ     -131072,DU
         0 000014   000000 470400 xsym               LDP0    S_D$
         0 000015   005213 756100                    STQ     2699,,PR0

       32     3037    3                END;

       33     3038    2             ALTRETURN;

   3038  0 000016   000000 702200 xent               TSX2  ! X66_AALT

       34     3039    2           END;
       35     3040    1        ELSE RETURN;

   3040  0 000017   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000014 006000                                                    ....
       36     3041
       37     3042    1   END DDB$BREAK;

PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:9    
--  Include file information  --

   DD_SD_M.:E05TOU  is referenced.
   XUH_MACRO_C.:E05TOU  is referenced.
   DD_SUBS_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is never referenced.
      No diagnostics issued in procedure DDB$BREAK.

   Procedure DDB$BREAK requires 16 words for executable code.
   Procedure DDB$BREAK requires 4 words of local(AUTO) storage.

    No errors detected in file DDB$BREAK.:E05TSI    .
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:11   
          MINI XREF LISTING

DDR$REPORT
      3028**DCL-ENT  3035--CALL
S_D.BREAK
      1758**DCL      3031>>IF
S_D.BREAK_PRINTED
      2526**DCL      3033>>IF       3036<<ASSIGN
S_D.CURRENT_CHANNEL
      2661**DCL      2663--REDEF
S_D.DEBUGA
      1813**DCL      1815--REDEF
S_D.EIS
      2771**DCL      2800--REDEF
S_D.HOST_MESSAGE_BUF_REMOTE
      2704**DCL      2705--REDEF    2719--REDEF
S_D.JDE
      2318**DCL      2319--REDEF
S_D.L$.VALUE
      1871**DCL      1877--REDEF    1885--REDEF    1888--REDEF    1891--REDEF    1894--REDEF
S_D.L$.VALUE.L
      1872**DCL      1873--REDEF    1874--REDEF
S_D.L6_MESSAGE_BUF
      2725**DCL      2727--REDEF
S_D.OUTPUT
      2691**DCL      2693--REDEF
S_D.REMOTE_MSG.FNCC
      2710**DCL      2711--REDEF
S_D.REMOTE_MSG.STXC
      2706**DCL      2707--REDEF
S_D.REMOTE_MSG.SUBFNCC
      2714**DCL      2715--REDEF
S_D.SV
      1770**DCL      1791--REDEF
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:12   
S_D$
      3022**DCL      1718--IMP-PTR  3031>>IF       3033>>IF       3036>>ASSIGN
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:13   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=DDB$BREAK File=DDB$BREAK.:E05TSI                              TUE 07/29/97 13:42 Page:14   
              MINI UREF LISTING

DDB$BREAK      16**PROC
