VERSION E05

PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:1    
        1        1        /*M* GD_MPTRS_D   Sleazy copy of system-wide pointers for LCP-6           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        GD_MPTRS_D: PROC;
        9        9
       10       10        /*F*  NAME: GD_MPTRS_D
       11       11              DESCRIPTION:
       12       12        This is a sleazy copy of G_MPTRS_D, a LCP-6 INCLUDE file.  The only
       13       13        difference between this file and G_MPTRS_D is that un-initialized
       14       14        pointers are OMITTED.  This prevents an uninitialized trash pointer
       15       15        from clobbering something nice that FEPLINK would supply.
       16       16
       17       17        In addition, symbols already defined by G_UPTRS_D have been removed
       18       18        to prevent multiple definition.
       19       19        */
       20       20        %EJECT;
PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:2    
       21       21
       22       22        %INCLUDE GM_VIRTUAL_E;
       23      232
       24      233    1   DCL G$SEG$ UBIN(32) CONSTANT SYMDEF INIT(0);  /* this is the null segment */
       25      234    1   DCL G$TSTACK$ UBIN(32) CONSTANT SYMDEF INIT(%GM_TSTACK_BASE);
       26      235    1   DCL G$SEG0007$ UBIN(32) CONSTANT SYMDEF INIT(%GM_SEG0007_BASE);
       27      236    1   DCL G$MON_ENT_DATA$ UBIN(32) CONSTANT SYMDEF INIT(%GM_MON_ENT_DATA_BASE);
       28      237    1   DCL G$MON_ENT$ UBIN(32) CONSTANT SYMDEF INIT(%GM_MON_ENT_BASE);
       29      238    1   DCL G$LPAR1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR1_BASE);
       30      239    1   DCL G$LPAR2$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR2_BASE);
       31      240    1   DCL G$LPAR3$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR3_BASE);
       32      241    1   DCL G$LPAR4$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR4_BASE);
       33      242    1   DCL G$LPAR5$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR5_BASE);
       34      243    1   DCL G$LPAR6$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR6_BASE);
       35      244
       36      245    1   DCL G$WINDOW1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_WINDOW1_BASE);
       37      246    1   DCL G$BOBCAT$ UBIN(32) CONSTANT SYMDEF INIT(%GM_BOBCAT_BASE);
       38      247    1   DCL G$USRDS3$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS3_BASE);
       39      248    1   DCL G$USRDS4$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS4_BASE);
       40      249    1   DCL G$SEG1400$ UBIN(32) CONSTANT SYMDEF INIT(%GM_SEG1400_BASE);
       41      250    1   DCL G$SEG1500$ UBIN(32) CONSTANT SYMDEF INIT(%GM_SEG1500_BASE);
       42      251
       43      252        /*
       44      253        The following pointers redefine one of those defed above.  They
       45      254        are included to give meaningful names to the segments.
       46      255        */
       47      256    1   DCL G$USRDS1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS1_BASE);
       48      257    1   DCL G$USRDS2$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS2_BASE);
       49      258    1   DCL G$BPAR1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_BPAR1_BASE);
       50      259    1   DCL G$BPAR2$ UBIN(32) CONSTANT SYMDEF INIT(%GM_BPAR2_BASE);
       51      260    1   DCL G$UAUTO_DS$ UBIN(32) CONSTANT SYMDEF INIT(%GM_UAUTO_DS_BASE);
       52      261    1   END;

PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:3    
--  Include file information  --

   GM_VIRTUAL_E.:E05TOU  is referenced.
      No diagnostics issued in procedure GD_MPTRS_D.

   No code generated for procedure GD_MPTRS_D .
   Procedure GD_MPTRS_D requires 4 words of local(AUTO) storage.

    No errors detected in file GD_MPTRS_D.:E05TSI    .

PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:4    

 Object Unit name= GD_MPTRS_D                                 File name= GD_MPTRS_D.:E05TOU
 UTS= JUL 29 '97 21:31:56.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     44     2C  GD_MPTRS_D
    1   Proc  even  none     0      0  GD_MPTRS_D

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes     ~proc       0  GD_MPTRS_D

  ****  Data defs  ****

 Sect HexLoc  Name                           Sect HexLoc  Name
    0      0  G$SEG$                             0      2  G$TSTACK$
    0      4  G$SEG0007$                         0      6  G$MON_ENT_DATA$
    0      8  G$MON_ENT$                         0      A  G$LPAR1$
    0      C  G$LPAR2$                           0      E  G$LPAR3$
    0     10  G$LPAR4$                           0     12  G$LPAR5$
    0     14  G$LPAR6$                           0     16  G$WINDOW1$
    0     18  G$BOBCAT$                          0     1A  G$USRDS3$
    0     1C  G$USRDS4$                          0     1E  G$SEG1400$
    0     20  G$SEG1500$                         0     22  G$USRDS1$
    0     24  G$USRDS2$                          0     26  G$BPAR1$
    0     28  G$BPAR2$                           0     2A  G$UAUTO_DS$
PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:5    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:6    

        1        1        /*M* GD_MPTRS_D   Sleazy copy of system-wide pointers for LCP-6           */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7
        8        8        GD_MPTRS_D: PROC;
        9        9
       10       10        /*F*  NAME: GD_MPTRS_D
       11       11              DESCRIPTION:
       12       12        This is a sleazy copy of G_MPTRS_D, a LCP-6 INCLUDE file.  The only
       13       13        difference between this file and G_MPTRS_D is that un-initialized
       14       14        pointers are OMITTED.  This prevents an uninitialized trash pointer
       15       15        from clobbering something nice that FEPLINK would supply.
       16       16
       17       17        In addition, symbols already defined by G_UPTRS_D have been removed
       18       18        to prevent multiple definition.
       19       19        */
       20       20        %EJECT;
PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:7    
       21       21
       22       22        %INCLUDE GM_VIRTUAL_E;
       23      232
       24      233    1   DCL G$SEG$ UBIN(32) CONSTANT SYMDEF INIT(0);  /* this is the null segment */
       25      234    1   DCL G$TSTACK$ UBIN(32) CONSTANT SYMDEF INIT(%GM_TSTACK_BASE);
       26      235    1   DCL G$SEG0007$ UBIN(32) CONSTANT SYMDEF INIT(%GM_SEG0007_BASE);
       27      236    1   DCL G$MON_ENT_DATA$ UBIN(32) CONSTANT SYMDEF INIT(%GM_MON_ENT_DATA_BASE);
       28      237    1   DCL G$MON_ENT$ UBIN(32) CONSTANT SYMDEF INIT(%GM_MON_ENT_BASE);
       29      238    1   DCL G$LPAR1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR1_BASE);
       30      239    1   DCL G$LPAR2$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR2_BASE);
       31      240    1   DCL G$LPAR3$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR3_BASE);
       32      241    1   DCL G$LPAR4$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR4_BASE);
       33      242    1   DCL G$LPAR5$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR5_BASE);
       34      243    1   DCL G$LPAR6$ UBIN(32) CONSTANT SYMDEF INIT(%GM_LPAR6_BASE);
       35      244
       36      245    1   DCL G$WINDOW1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_WINDOW1_BASE);
       37      246    1   DCL G$BOBCAT$ UBIN(32) CONSTANT SYMDEF INIT(%GM_BOBCAT_BASE);
       38      247    1   DCL G$USRDS3$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS3_BASE);
       39      248    1   DCL G$USRDS4$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS4_BASE);
       40      249    1   DCL G$SEG1400$ UBIN(32) CONSTANT SYMDEF INIT(%GM_SEG1400_BASE);
       41      250    1   DCL G$SEG1500$ UBIN(32) CONSTANT SYMDEF INIT(%GM_SEG1500_BASE);
       42      251
       43      252        /*
       44      253        The following pointers redefine one of those defed above.  They
       45      254        are included to give meaningful names to the segments.
       46      255        */
       47      256    1   DCL G$USRDS1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS1_BASE);
       48      257    1   DCL G$USRDS2$ UBIN(32) CONSTANT SYMDEF INIT(%GM_USRDS2_BASE);
       49      258    1   DCL G$BPAR1$ UBIN(32) CONSTANT SYMDEF INIT(%GM_BPAR1_BASE);
       50      259    1   DCL G$BPAR2$ UBIN(32) CONSTANT SYMDEF INIT(%GM_BPAR2_BASE);
       51      260    1   DCL G$UAUTO_DS$ UBIN(32) CONSTANT SYMDEF INIT(%GM_UAUTO_DS_BASE);
       52      261    1   END;

PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:8    
--  Include file information  --

   GM_VIRTUAL_E.:E05TOU  is referenced.
      No diagnostics issued in procedure GD_MPTRS_D.
PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:9    

 **** Variables and constants ****


   No code generated for procedure GD_MPTRS_D .
   Procedure GD_MPTRS_D requires 4 words of local(AUTO) storage.

    No errors detected in file GD_MPTRS_D.:E05TSI    .
PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GD_MPTRS_D File=GD_MPTRS_D.:E05TSI                            TUE 07/29/97 21:31 Page:11   
          MINI XREF LISTING

