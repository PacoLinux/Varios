VERSION E05

PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:1    
        1        1        /*M* KHA$SUBS - Utility routines for Handler Common */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        /*F* NAME: KHA$UPD_CHN
        9        9             PURPOSE: To fill in a KH$CHN structure from a KL_HNDCMN_INFO
       10       10                      structure.
       11       11             DESCRIPTION: See below.
       12       12        */
       13       13        /*D* NAME: KHA$UPD_CHN
       14       14             DESCRIPTION: This routine is called by handler common to transfer
       15       15                          information from a KL_HNDCMN_INFO structure to the
       16       16                          corresponding KH$CHN structure.  This routine just
       17       17                          runs through the fields in KL_HNDCMN_INFO and if the
       18       18                          value is not the "ignore" value, then the associated
       19       19                          field in KH$CHN is updated with the value from KL_HNDCMN_INFO.
       20       20             CALL: CALL KHA$UPD_CHN(HNDCMN,CHN);
       21       21             INPUT: HNDCMN is the KL_HNDCMN_INFO structure.
       22       22             OUTPUT: CHN, the KH$CHN structure, is updated to reflect the info
       23       23                     contained in HNDCMN.
       24       24             INTERFACE: None.
       25       25        */
       26       26        KHA$UPD_CHN: PROC(HNDCMN,CHN);
       27       27        /**/
       28       28        %INCLUDE LCP_6;
       29     4307        %INCLUDE KL_MACRO_C;
       30     7659        %INCLUDE KH$CHN;
       31     7781        /**/
       32     7782        %KL_HNDCMN_INFO (FPTN=HNDCMN,STCLASS=PARAM);
       33     7862        %KH$CHN (NAME=CHN,STCLASS=PARAM);
       34     7986        /**/
       35     7987        %EJECT;
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:2    
       36     7988    1        IF HNDCMN.FLWCNTRL ~= '01'B        /* IGNORE                             */
       37     7989    1        THEN CHN.DC1DC3NTWOTPFLWCTR = HNDCMN.FLWCNTRL;
       38     7990    1        IF HNDCMN.INP ~= '01'B
       39     7991    1        THEN CHN.INP = HNDCMN.INP;
       40     7992    1        IF HNDCMN.OTP ~= '01'B
       41     7993    1        THEN CHN.OTP = HNDCMN.OTP;
       42     7994    1        IF HNDCMN.BRKRQ ~= '01'B
       43     7995    1        THEN CHN.BRKRQ = HNDCMN.BRKRQ;
       44     7996    1        IF HNDCMN.ENB ~= '01'B
       45     7997    1        THEN CHN.ENB = HNDCMN.ENB;
       46     7998    1        IF HNDCMN.RE_ENB ~= '01'B
       47     7999    1        THEN CHN.RE_ENB = HNDCMN.RE_ENB;
       48     8000    1        IF HNDCMN.HARD ~= '01'B
       49     8001    1        THEN CHN.DRCCNC = HNDCMN.HARD;
       50     8002    1        IF HNDCMN.CLK ~= '01'B
       51     8003    1        THEN CHN.CLK = HNDCMN.CLK;
       52     8004    1        IF HNDCMN.DRPDTR ~= '01'B
       53     8005    1        THEN CHN.DRPDTR = HNDCMN.DRPDTR;
       54     8006    1        IF HNDCMN.KLLHSTDWN ~= '01'B
       55     8007    1        THEN CHN.KLLHSTDWN = HNDCMN.KLLHSTDWN;
       56     8008    1        IF HNDCMN.DSBHSTDWN ~= '01'B
       57     8009    1        THEN CHN.DSBHSTDWN = HNDCMN.DSBHSTDWN;
       58     8010    1        IF HNDCMN.DBG ~= '01'B
       59     8011    1        THEN CHN.DBG = HNDCMN.DBG;
       60     8012    1        IF HNDCMN.RMTHST ~= '01'B
       61     8013    1        THEN CHN.RMTHST = HNDCMN.RMTHST;
       62     8014    2        IF HNDCMN.SPEED_AUTO ~= '01'B THEN DO;
       63     8015    2             CHN.AUTBAD = HNDCMN.SPEED_AUTO;
       64     8016    2             IF ~CHN.AUTBAD
       65     8017    2             THEN CHN.LINSPD = HNDCMN.SPEED;
       66     8018    2           END;                            /* IF                                 */
       67     8019    1        IF HNDCMN.BUFSIZE ~= -1            /* IGNORE                             */
       68     8020    1        THEN CHN.INPBFRBYTSIZ = HNDCMN.BUFSIZE;
       69     8021    1        IF HNDCMN.REDTIMEOUT ~= -1
       70     8022    1        THEN CHN.REDTIMOUTPRD = HNDCMN.REDTIMEOUT;
       71     8023    1        IF HNDCMN.TPTIMOUT ~= -1
       72     8024    1        THEN CHN.TPTIMOUTPRD = HNDCMN.TPTIMOUT;
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:3    
       73     8025    1        IF HNDCMN.BLOCK ~= -1
       74     8026    1        THEN CHN.BLOCK = HNDCMN.BLOCK;
       75     8027    1        IF HNDCMN.UNBLOCK ~= -1
       76     8028    1        THEN CHN.UNBLOCK = HNDCMN.UNBLOCK;
       77     8029    1        RETURN;
       78     8030    1   END KHA$UPD_CHN;
       79     8031        %EOD;

PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:4    
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$UPD_CHN.

   Procedure KHA$UPD_CHN requires 285 words for executable code.
   Procedure KHA$UPD_CHN requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:5    

 Object Unit name= KHA$UPD_CHN                                File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:25:11.36 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   285    11D  KHA$UPD_CHN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  KHA$UPD_CHN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:6    


        1        1        /*M* KHA$SUBS - Utility routines for Handler Common */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* DMR,PLM=5,IND=5,CTI=5,SDI=5,MCL=10,CSI=0,ECI=0 */
        8        8        /*F* NAME: KHA$UPD_CHN
        9        9             PURPOSE: To fill in a KH$CHN structure from a KL_HNDCMN_INFO
       10       10                      structure.
       11       11             DESCRIPTION: See below.
       12       12        */
       13       13        /*D* NAME: KHA$UPD_CHN
       14       14             DESCRIPTION: This routine is called by handler common to transfer
       15       15                          information from a KL_HNDCMN_INFO structure to the
       16       16                          corresponding KH$CHN structure.  This routine just
       17       17                          runs through the fields in KL_HNDCMN_INFO and if the
       18       18                          value is not the "ignore" value, then the associated
       19       19                          field in KH$CHN is updated with the value from KL_HNDCMN_INFO.
       20       20             CALL: CALL KHA$UPD_CHN(HNDCMN,CHN);
       21       21             INPUT: HNDCMN is the KL_HNDCMN_INFO structure.
       22       22             OUTPUT: CHN, the KH$CHN structure, is updated to reflect the info
       23       23                     contained in HNDCMN.
       24       24             INTERFACE: None.
       25       25        */
       26       26        KHA$UPD_CHN: PROC(HNDCMN,CHN);

     26   0 000000  D380 0000 0000  xent KHA$UPD_CHN     LNJ,B5   X6A_AUTO_2
          0 000003       0008 0002                       DC       8,2

       27       27        /**/
       28       28        %INCLUDE LCP_6;
       29     4307        %INCLUDE KL_MACRO_C;
       30     7659        %INCLUDE KH$CHN;
       31     7781        /**/
       32     7782        %KL_HNDCMN_INFO (FPTN=HNDCMN,STCLASS=PARAM);
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:7    
       33     7862        %KH$CHN (NAME=CHN,STCLASS=PARAM);
       34     7986        /**/
       35     7987        %EJECT;
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:8    
       36     7988    1        IF HNDCMN.FLWCNTRL ~= '01'B        /* IGNORE                             */

   7988   0 000005  ECC7 0004                            LDB,B6   @HNDCMN,AUTO
          0 000007  E806                                 LDR,R6   ,B6
          0 000008  E570 C000                            AND,R6   -16384,IMO
          0 00000A  E970 4000                            CMR,R6   16384,IMO
          0 00000C  0901 0008                            BE       s:7990,PREL

       37     7989    1        THEN CHN.DC1DC3NTWOTPFLWCTR = HNDCMN.FLWCNTRL;

   7989   0 00000E  D806                                 LDR,R5   ,B6
          0 00000F  5041                                 SOR,R5   1
          0 000010  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000012  DAC5 0009                            SRM,R5,'4000'X    9,B5
          0 000014       4000

       38     7990    1        IF HNDCMN.INP ~= '01'B

   7990   0 000015  E806                                 LDR,R6   ,B6
          0 000016  6002                                 SOL,R6   2
          0 000017  E570 C000                            AND,R6   -16384,IMO
          0 000019  E970 4000                            CMR,R6   16384,IMO
          0 00001B  0901 0008                            BE       s:7992,PREL

       39     7991    1        THEN CHN.INP = HNDCMN.INP;

   7991   0 00001D  D806                                 LDR,R5   ,B6
          0 00001E  5001                                 SOL,R5   1
          0 00001F  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000021  DAC5 0007                            SRM,R5,'4000'X    7,B5
          0 000023       4000

       40     7992    1        IF HNDCMN.OTP ~= '01'B

   7992   0 000024  E806                                 LDR,R6   ,B6
          0 000025  6004                                 SOL,R6   4
          0 000026  E570 C000                            AND,R6   -16384,IMO
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:9    
          0 000028  E970 4000                            CMR,R6   16384,IMO
          0 00002A  0901 0008                            BE       s:7994,PREL

       41     7993    1        THEN CHN.OTP = HNDCMN.OTP;

   7993   0 00002C  D806                                 LDR,R5   ,B6
          0 00002D  5002                                 SOL,R5   2
          0 00002E  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000030  DAC5 0007                            SRM,R5,'2000'X    7,B5
          0 000032       2000

       42     7994    1        IF HNDCMN.BRKRQ ~= '01'B

   7994   0 000033  E806                                 LDR,R6   ,B6
          0 000034  6006                                 SOL,R6   6
          0 000035  E570 C000                            AND,R6   -16384,IMO
          0 000037  E970 4000                            CMR,R6   16384,IMO
          0 000039  0901 0008                            BE       s:7996,PREL

       43     7995    1        THEN CHN.BRKRQ = HNDCMN.BRKRQ;

   7995   0 00003B  D806                                 LDR,R5   ,B6
          0 00003C  5042                                 SOR,R5   2
          0 00003D  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 00003F  DAC5 0001                            SRM,R5,'0080'X    1,B5
          0 000041       0080

       44     7996    1        IF HNDCMN.ENB ~= '01'B

   7996   0 000042  E846 0001                            LDR,R6   1,B6
          0 000044  6006                                 SOL,R6   6
          0 000045  E570 C000                            AND,R6   -16384,IMO
          0 000047  E970 4000                            CMR,R6   16384,IMO
          0 000049  0901 0009                            BE       s:7998,PREL

       45     7997    1        THEN CHN.ENB = HNDCMN.ENB;

PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:10   
   7997   0 00004B  D846 0001                            LDR,R5   1,B6
          0 00004D  5043                                 SOR,R5   3
          0 00004E  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000050  DAC5 0007                            SRM,R5,'0040'X    7,B5
          0 000052       0040

       46     7998    1        IF HNDCMN.RE_ENB ~= '01'B

   7998   0 000053  E806                                 LDR,R6   ,B6
          0 000054  6008                                 SOL,R6   8
          0 000055  E570 C000                            AND,R6   -16384,IMO
          0 000057  E970 4000                            CMR,R6   16384,IMO
          0 000059  0901 0007                            BE       s:8000,PREL

       47     7999    1        THEN CHN.RE_ENB = HNDCMN.RE_ENB;

   7999   0 00005B  D806                                 LDR,R5   ,B6
          0 00005C  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 00005E  DAC5 0007                            SRM,R5,'0080'X    7,B5
          0 000060       0080

       48     8000    1        IF HNDCMN.HARD ~= '01'B

   8000   0 000061  E806                                 LDR,R6   ,B6
          0 000062  600A                                 SOL,R6   10
          0 000063  E570 C000                            AND,R6   -16384,IMO
          0 000065  E970 4000                            CMR,R6   16384,IMO
          0 000067  0901 0008                            BE       s:8002,PREL

       49     8001    1        THEN CHN.DRCCNC = HNDCMN.HARD;

   8001   0 000069  D806                                 LDR,R5   ,B6
          0 00006A  500A                                 SOL,R5   10
          0 00006B  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 00006D  DAC5 0007                            SRM,R5,'8000'X    7,B5
          0 00006F       8000

PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:11   
       50     8002    1        IF HNDCMN.CLK ~= '01'B

   8002   0 000070  E806                                 LDR,R6   ,B6
          0 000071  600C                                 SOL,R6   12
          0 000072  E570 C000                            AND,R6   -16384,IMO
          0 000074  E970 4000                            CMR,R6   16384,IMO
          0 000076  0901 0007                            BE       s:8004,PREL

       51     8003    1        THEN CHN.CLK = HNDCMN.CLK;

   8003   0 000078  D806                                 LDR,R5   ,B6
          0 000079  5002                                 SOL,R5   2
          0 00007A  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 00007C  DA85                                 SRM,R5,'0020'X    ,B5
          0 00007D       0020

       52     8004    1        IF HNDCMN.DRPDTR ~= '01'B

   8004   0 00007E  E806                                 LDR,R6   ,B6
          0 00007F  600E                                 SOL,R6   14
          0 000080  E970 4000                            CMR,R6   16384,IMO
          0 000082  0901 0008                            BE       s:8006,PREL

       53     8005    1        THEN CHN.DRPDTR = HNDCMN.DRPDTR;

   8005   0 000084  D806                                 LDR,R5   ,B6
          0 000085  5004                                 SOL,R5   4
          0 000086  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000088  DAC5 0008                            SRM,R5,'0020'X    8,B5
          0 00008A       0020

       54     8006    1        IF HNDCMN.KLLHSTDWN ~= '01'B

   8006   0 00008B  E846 0001                            LDR,R6   1,B6
          0 00008D  600A                                 SOL,R6   10
          0 00008E  E570 C000                            AND,R6   -16384,IMO
          0 000090  E970 4000                            CMR,R6   16384,IMO
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:12   
          0 000092  0901 0009                            BE       s:8008,PREL

       55     8007    1        THEN CHN.KLLHSTDWN = HNDCMN.KLLHSTDWN;

   8007   0 000094  D846 0001                            LDR,R5   1,B6
          0 000096  5007                                 SOL,R5   7
          0 000097  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000099  DAC5 0009                            SRM,R5,'1000'X    9,B5
          0 00009B       1000

       56     8008    1        IF HNDCMN.DSBHSTDWN ~= '01'B

   8008   0 00009C  E846 0001                            LDR,R6   1,B6
          0 00009E  6008                                 SOL,R6   8
          0 00009F  E570 C000                            AND,R6   -16384,IMO
          0 0000A1  E970 4000                            CMR,R6   16384,IMO
          0 0000A3  0901 0009                            BE       s:8010,PREL

       57     8009    1        THEN CHN.DSBHSTDWN = HNDCMN.DSBHSTDWN;

   8009   0 0000A5  D846 0001                            LDR,R5   1,B6
          0 0000A7  5006                                 SOL,R5   6
          0 0000A8  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 0000AA  DAC5 0009                            SRM,R5,'2000'X    9,B5
          0 0000AC       2000

       58     8010    1        IF HNDCMN.DBG ~= '01'B

   8010   0 0000AD  E846 0001                            LDR,R6   1,B6
          0 0000AF  E570 C000                            AND,R6   -16384,IMO
          0 0000B1  E970 4000                            CMR,R6   16384,IMO
          0 0000B3  0901 0008                            BE       s:8012,PREL

       59     8011    1        THEN CHN.DBG = HNDCMN.DBG;

   8011   0 0000B5  D846 0001                            LDR,R5   1,B6
          0 0000B7  504C                                 SOR,R5   12
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:13   
          0 0000B8  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 0000BA  DA85                                 SRM,R5,'0008'X    ,B5
          0 0000BB       0008

       60     8012    1        IF HNDCMN.RMTHST ~= '01'B

   8012   0 0000BC  E846 0001                            LDR,R6   1,B6
          0 0000BE  6002                                 SOL,R6   2
          0 0000BF  E570 C000                            AND,R6   -16384,IMO
          0 0000C1  E970 4000                            CMR,R6   16384,IMO
          0 0000C3  0901 0008                            BE       s:8014,PREL

       61     8013    1        THEN CHN.RMTHST = HNDCMN.RMTHST;

   8013   0 0000C5  D846 0001                            LDR,R5   1,B6
          0 0000C7  5049                                 SOR,R5   9
          0 0000C8  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 0000CA  DA85                                 SRM,R5,'0010'X    ,B5
          0 0000CB       0010

       62     8014    2        IF HNDCMN.SPEED_AUTO ~= '01'B THEN DO;

   8014   0 0000CC  E846 0001                            LDR,R6   1,B6
          0 0000CE  6004                                 SOL,R6   4
          0 0000CF  E570 C000                            AND,R6   -16384,IMO
          0 0000D1  E970 4000                            CMR,R6   16384,IMO
          0 0000D3  0901 0017                            BE       s:8019,PREL

       63     8015    2             CHN.AUTBAD = HNDCMN.SPEED_AUTO;

   8015   0 0000D5  D846 0001                            LDR,R5   1,B6
          0 0000D7  5047                                 SOR,R5   7
          0 0000D8  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 0000DA  DAC5 0008                            SRM,R5,'0010'X    8,B5
          0 0000DC       0010

       64     8016    2             IF ~CHN.AUTBAD
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:14   

   8016   0 0000DD  E845 0008                            LDR,R6   8,B5
          0 0000DF  600B                                 SOL,R6   11
          0 0000E0  E570 8000                            AND,R6   -32768,IMO
          0 0000E2  E670 8000                            XOR,R6   -32768,IMO
          0 0000E4  6901 0006                            BEZ,R6   s:8019,PREL

       65     8017    2             THEN CHN.LINSPD = HNDCMN.SPEED;

   8017   0 0000E6  E846 0008                            LDR,R6   8,B6
          0 0000E8  EAC5 0008                            SRM,R6,'000F'X    8,B5
          0 0000EA       000F

       66     8018    2           END;                            /* IF                                 */

       67     8019    1        IF HNDCMN.BUFSIZE ~= -1            /* IGNORE                             */

   8019   0 0000EB  E846 0002                            LDR,R6   2,B6
          0 0000ED  6DFF                                 CMV,R6   -1
          0 0000EE  0901 0005                            BE       s:8021,PREL

       68     8020    1        THEN CHN.INPBFRBYTSIZ = HNDCMN.BUFSIZE;

   8020   0 0000F0  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 0000F2  EF45 000B                            STR,R6   11,B5

       69     8021    1        IF HNDCMN.REDTIMEOUT ~= -1

   8021   0 0000F4  E846 0004                            LDR,R6   4,B6
          0 0000F6  6DFF                                 CMV,R6   -1
          0 0000F7  0901 0006                            BE       s:8023,PREL

       70     8022    1        THEN CHN.REDTIMOUTPRD = HNDCMN.REDTIMEOUT;

   8022   0 0000F9  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 0000FB  EAC5 0009                            SRM,R6,'00FF'X    9,B5
          0 0000FD       00FF
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:15   

       71     8023    1        IF HNDCMN.TPTIMOUT ~= -1

   8023   0 0000FE  E846 0005                            LDR,R6   5,B6
          0 000100  6DFF                                 CMV,R6   -1
          0 000101  0901 0006                            BE       s:8025,PREL

       72     8024    1        THEN CHN.TPTIMOUTPRD = HNDCMN.TPTIMOUT;

   8024   0 000103  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000105  EAC5 000A                            SRM,R6,'00FF'X    10,B5
          0 000107       00FF

       73     8025    1        IF HNDCMN.BLOCK ~= -1

   8025   0 000108  E846 0006                            LDR,R6   6,B6
          0 00010A  6DFF                                 CMV,R6   -1
          0 00010B  0901 0005                            BE       s:8027,PREL

       74     8026    1        THEN CHN.BLOCK = HNDCMN.BLOCK;

   8026   0 00010D  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 00010F  EF45 0010                            STR,R6   16,B5

       75     8027    1        IF HNDCMN.UNBLOCK ~= -1

   8027   0 000111  E846 0007                            LDR,R6   7,B6
          0 000113  6DFF                                 CMV,R6   -1
          0 000114  0901 0005                            BE       s:8029,PREL

       76     8028    1        THEN CHN.UNBLOCK = HNDCMN.UNBLOCK;

   8028   0 000116  DCC7 0006                            LDB,B5   @CHN,AUTO
          0 000118  EF45 0011                            STR,R6   17,B5

       77     8029    1        RETURN;

PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:16   
   8029   0 00011A  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
       78     8030    1   END KHA$UPD_CHN;
       79     8031        %EOD;

PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:17   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$UPD_CHN.
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:18   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CHN                       4-0-0/w PTR         r     1 @HNDCMN
    *0-0-0/w STRC(512)   r     1 CHN                       *0-0-0/w STRC(144)   r     1 HNDCMN


   Procedure KHA$UPD_CHN requires 285 words for executable code.
   Procedure KHA$UPD_CHN requires 8 words of local(AUTO) storage.
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:19   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:20   
          MINI XREF LISTING

CHN
      7877**DCL        26--PROC
CHN.AUTBAD
      7931**DCL      8015<<ASSIGN   8016>>IF
CHN.BLOCK
      7953**DCL      8026<<ASSIGN
CHN.BRKRQ
      7898**DCL      7995<<ASSIGN
CHN.CLK
      7888**DCL      8003<<ASSIGN
CHN.DBG
      7888**DCL      8011<<ASSIGN
CHN.DC1DC3NTWOTPFLWCTR
      7935**DCL      7989<<ASSIGN
CHN.DRCCNC
      7915**DCL      8001<<ASSIGN
CHN.DRPDTR
      7930**DCL      8005<<ASSIGN
CHN.DSBHSTDWN
      7935**DCL      8009<<ASSIGN
CHN.ENB
      7920**DCL      7997<<ASSIGN
CHN.INP
      7915**DCL      7991<<ASSIGN
CHN.INPBFRBYTSIZ
      7945**DCL      8020<<ASSIGN
CHN.KLLHSTDWN
      7936**DCL      8007<<ASSIGN
CHN.LINSPD
      7931**DCL      8017<<ASSIGN
CHN.OTP
      7915**DCL      7993<<ASSIGN
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:21   
CHN.REDTIMOUTPRD
      7944**DCL      8022<<ASSIGN
CHN.RE_ENB
      7920**DCL      7999<<ASSIGN
CHN.RMTHST
      7888**DCL      8013<<ASSIGN
CHN.TERMID.TERM
      7973**DCL      7982--REDEF
CHN.TPTIMOUTPRD
      7944**DCL      8024<<ASSIGN
CHN.UNBLOCK
      7953**DCL      8028<<ASSIGN
HNDCMN
      7798**DCL        26--PROC
HNDCMN.BLOCK
      7857**DCL      8025>>IF       8026>>ASSIGN
HNDCMN.BRKRQ
      7808**DCL      7994>>IF       7995>>ASSIGN
HNDCMN.BUFSIZE
      7853**DCL      8019>>IF       8020>>ASSIGN
HNDCMN.CLK
      7814**DCL      8002>>IF       8003>>ASSIGN
HNDCMN.DBG
      7819**DCL      8010>>IF       8011>>ASSIGN
HNDCMN.DRPDTR
      7815**DCL      8004>>IF       8005>>ASSIGN
HNDCMN.DSBHSTDWN
      7826**DCL      8008>>IF       8009>>ASSIGN
HNDCMN.ENB
      7822**DCL      7996>>IF       7997>>ASSIGN
HNDCMN.FLWCNTRL
      7805**DCL      7988>>IF       7989>>ASSIGN
HNDCMN.HARD
      7813**DCL      8000>>IF       8001>>ASSIGN
HNDCMN.INP
      7806**DCL      7990>>IF       7991>>ASSIGN
PL6.E3A0      #001=KHA$UPD_CHN File=KHA$SUBS.:E05TSI                             WED 07/30/97 00:25 Page:22   
HNDCMN.KLLHSTDWN
      7827**DCL      8006>>IF       8007>>ASSIGN
HNDCMN.OTP
      7807**DCL      7992>>IF       7993>>ASSIGN
HNDCMN.REDTIMEOUT
      7855**DCL      8021>>IF       8022>>ASSIGN
HNDCMN.RE_ENB
      7812**DCL      7998>>IF       7999>>ASSIGN
HNDCMN.RMTHST
      7820**DCL      8012>>IF       8013>>ASSIGN
HNDCMN.SPEED
      7859**DCL      8017>>ASSIGN
HNDCMN.SPEED_AUTO
      7821**DCL      8014>>IF       8015>>ASSIGN
HNDCMN.TPTIMOUT
      7856**DCL      8023>>IF       8024>>ASSIGN
HNDCMN.UNBLOCK
      7858**DCL      8027>>IF       8028>>ASSIGN

PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:23   
       80        1        /*T***********************************************************/
       81        2        /*T*                                                         */
       82        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       83        4        /*T*                                                         */
       84        5        /*T***********************************************************/
       85        6        /*F* NAME: KHA$GET_CTX_PTR - Return Terminal Context Pointer
       86        7
       87        8        The KHA$GET_CTX_PTR routine may be used to find the context block
       88        9        associated with a given TERMID.
       89       10
       90       11        This routine runs through the context chains until
       91       12        a match is found on the passed terminal id.  If the
       92       13        termid cannot be found, the alternate return will be taken.
       93       14
       94       15        The form of the call for this service is:
       95       16
       96       17        .fif
       97       18        }   CALL KHA$GET_CTX_PTR(termid,ctx$) ALTRET(label);
       98       19        .fin
       99       20
      100       21        where:
      101       22        */
      102       23        /*K* termid -
      103       24        specifies the entity whose context block is to be found.
      104       25        This parameter is a structure that is in B$TERMINAL_ID format.
      105       26        */
      106       27        /*K* ctx$ -
      107       28        is the pointer to the termid's context block.  This
      108       29        context block is described by the KH$CHN macro.  If the
      109       30        context block was not found, ctx$ is set to ADDR(NIL) and the
      110       31        alternate return is taken.
      111       32        */
      112       33        KHA$GET_CTX_PTR: PROC(TERMID,CTX$) ALTRET;
      113       34        /**/
      114       35        %INCLUDE LCP_6;
      115     4314        %INCLUDE G_JIT_M;
      116     4579        %INCLUDE KH$CHN;
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:24   
      117     4701        %INCLUDE KH_CHN;
      118     4741        %INCLUDE KL_MACRO_C;
      119     8093        %INCLUDE CP_6_SUBS;
      120     8633        /**/
      121     8634        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      122     8663    1   DCL CTX$ PTR;
      123     8664        /**/
      124     8665        %KH_CHNDAT;
      125     8683    1   DCL G$JIT$ PTR SYMREF;
      126     8684        %G$JIT (STCLASS="BASED(G$JIT$)");
      127     9098        %KH$CHN (NAME=CHNCTX,STCLASS="BASED(LVL1$)");
      128     9222        %KH$CHN (NAME=LVL2CTX,STCLASS="BASED(LVL2$)");
      129     9346        %KH$CHN (NAME=LVL3CTX,STCLASS="BASED(LVL3$)");
      130     9470    1   DCL LVL1$ PTR;
      131     9471    1   DCL LVL2$ PTR;
      132     9472    1   DCL LVL3$ PTR;
      133     9473    1   DCL CHAN UBIN;
      134     9474        /**/
      135     9475    1        CTX$ = ADDR(NIL);
      136     9476    1        CHAN = TERMID.TERM.CHANNEL;
      137     9477    1        IF CHAN > KH_CHNHI OR CHAN < KH_CHNLOW
      138     9478    1        THEN ALTRETURN;
      139     9479    1        LVL1$ = PINCRW(KH_CHNLOW$,SIZEW(CHNCTX) * (CHAN /128));
      140     9480    1        IF LVL1$ = ADDR(NIL)
      141     9481    1        THEN ALTRETURN;
      142     9482    1        IF CHNCTX.SYSID ~= G$JIT.SYSID
      143     9483    1        THEN
      144     9484    1             ALTRETURN;
      145     9485    1        CTX$ = LVL1$;
      146     9486    2        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN# THEN DO;
      147     9487    2             LVL2$ = CHNCTX.SUB$;
      148     9488    3             DO WHILE(LVL2$ ~= ADDR(NIL) AND TERMID.TERM.SUBDEVICE ~= LVL2CTX.TERMID.
              9488                      TERM.SUBDEVICE);
      149     9489    3                  LVL2$ = LVL2CTX.LNK$;
      150     9490    3                END;                       /* DO WHILE */
      151     9491    2             CTX$ = LVL2$;
      152     9492    2             IF LVL2$ = ADDR(NIL)
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:25   
      153     9493    2             THEN ALTRETURN;
      154     9494    3             IF TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN# THEN DO;
      155     9495    3                  LVL3$ = LVL2CTX.SUB$;
      156     9496    4                  DO WHILE(LVL3$ ~= ADDR(NIL) AND TERMID.TERM.SUBSUBDEVICE ~= LVL3CTX.
              9496                           TERMID.TERM.SUBSUBDEVICE);
      157     9497    4                       LVL3$ = LVL3CTX.LNK$;
      158     9498    4                     END;                  /* DO WHILE */
      159     9499    3                  CTX$ = LVL3$;
      160     9500    3                  IF LVL3$ = ADDR(NIL)
      161     9501    3                  THEN ALTRETURN;
      162     9502    3                END;                       /* LEV = SUBSUBCHAN */
      163     9503    2           END;                            /* IF LEV ~= CHAN */
      164     9504    1        RETURN;
      165     9505    1   END KHA$GET_CTX_PTR;
      166     9506        %EOD;

PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:26   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$GET_CTX_PTR.

   Procedure KHA$GET_CTX_PTR requires 152 words for executable code.
   Procedure KHA$GET_CTX_PTR requires 16 words of local(AUTO) storage.

PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:27   

 Object Unit name= KHA$GET_CTX_PTR                            File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:25:33.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   152     98  KHA$GET_CTX_PTR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  KHA$GET_CTX_PTR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    KH_CHNLOW$                       r    KH_CHNHI                         r    KH_CHNLOW
     G$JIT$                           r    G$ROS$
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:28   


       80        1        /*T***********************************************************/
       81        2        /*T*                                                         */
       82        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       83        4        /*T*                                                         */
       84        5        /*T***********************************************************/
       85        6        /*F* NAME: KHA$GET_CTX_PTR - Return Terminal Context Pointer
       86        7
       87        8        The KHA$GET_CTX_PTR routine may be used to find the context block
       88        9        associated with a given TERMID.
       89       10
       90       11        This routine runs through the context chains until
       91       12        a match is found on the passed terminal id.  If the
       92       13        termid cannot be found, the alternate return will be taken.
       93       14
       94       15        The form of the call for this service is:
       95       16
       96       17        .fif
       97       18        }   CALL KHA$GET_CTX_PTR(termid,ctx$) ALTRET(label);
       98       19        .fin
       99       20
      100       21        where:
      101       22        */
      102       23        /*K* termid -
      103       24        specifies the entity whose context block is to be found.
      104       25        This parameter is a structure that is in B$TERMINAL_ID format.
      105       26        */
      106       27        /*K* ctx$ -
      107       28        is the pointer to the termid's context block.  This
      108       29        context block is described by the KH$CHN macro.  If the
      109       30        context block was not found, ctx$ is set to ADDR(NIL) and the
      110       31        alternate return is taken.
      111       32        */
      112       33        KHA$GET_CTX_PTR: PROC(TERMID,CTX$) ALTRET;

     33   0 000000  D380 0000 0000  xent KHA$GET_CTX_PTR LNJ,B5   X6A_AUTO_2
          0 000003       0010 0002                       DC       16,2
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:29   

      113       34        /**/
      114       35        %INCLUDE LCP_6;
      115     4314        %INCLUDE G_JIT_M;
      116     4579        %INCLUDE KH$CHN;
      117     4701        %INCLUDE KH_CHN;
      118     4741        %INCLUDE KL_MACRO_C;
      119     8093        %INCLUDE CP_6_SUBS;
      120     8633        /**/
      121     8634        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      122     8663    1   DCL CTX$ PTR;
      123     8664        /**/
      124     8665        %KH_CHNDAT;
      125     8683    1   DCL G$JIT$ PTR SYMREF;
      126     8684        %G$JIT (STCLASS="BASED(G$JIT$)");
      127     9098        %KH$CHN (NAME=CHNCTX,STCLASS="BASED(LVL1$)");
      128     9222        %KH$CHN (NAME=LVL2CTX,STCLASS="BASED(LVL2$)");
      129     9346        %KH$CHN (NAME=LVL3CTX,STCLASS="BASED(LVL3$)");
      130     9470    1   DCL LVL1$ PTR;
      131     9471    1   DCL LVL2$ PTR;
      132     9472    1   DCL LVL3$ PTR;
      133     9473    1   DCL CHAN UBIN;
      134     9474        /**/
      135     9475    1        CTX$ = ADDR(NIL);

   9475   0 000005  EB80 0000 0000                       LAB,B6   0
          0 000008  DCC7 0006                            LDB,B5   @CTX$,AUTO
          0 00000A  EF85                                 STB,B6   ,B5

      136     9476    1        CHAN = TERMID.TERM.CHANNEL;

   9476   0 00000B  CCC7 0004                            LDB,B4   @TERMID,AUTO
          0 00000D  E844 0001                            LDR,R6   1,B4
          0 00000F  EF47 000E                            STR,R6   CHAN,AUTO

      137     9477    1        IF CHAN > KH_CHNHI OR CHAN < KH_CHNLOW

PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:30   
   9477   0 000011  E900 0000 0000  xsym                 CMR,R6   KH_CHNHI
          0 000014  0301 0006                            BG       s:9478,PREL
          0 000016  E900 0000 0000  xsym                 CMR,R6   KH_CHNLOW
          0 000019  0281 0004                            BGE      s:9479,PREL

      138     9478    1        THEN ALTRETURN;

   9478   0 00001B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      139     9479    1        LVL1$ = PINCRW(KH_CHNLOW$,SIZEW(CHNCTX) * (CHAN /128));

   9479   0 00001E  6047                                 SOR,R6   7
          0 00001F  F856                                 LDR,R7   R6
          0 000020  6C00                                 LDV,R6   0
          0 000021  7085                                 DOL,R7   5
          0 000022  8400 0000 0000  xsym                 AID      KH_CHNLOW$
          0 000025  8D47 0008                            SDI      LVL1$,AUTO

      140     9480    1        IF LVL1$ = ADDR(NIL)

   9480   0 000027  8DC7 0008                            CMN      LVL1$,AUTO
          0 000029  0981 0004                            BNE      s:9482,PREL

      141     9481    1        THEN ALTRETURN;

   9481   0 00002B  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      142     9482    1        IF CHNCTX.SYSID ~= G$JIT.SYSID

   9482   0 00002E  BCC7 0008                            LDB,B3   LVL1$,AUTO
          0 000030  AC80 0000 0000  xsym                 LDB,B2   G$JIT$
          0 000033  D843 0006                            LDR,R5   6,B3
          0 000035  D942 0005                            CMR,R5   5,B2
          0 000037  0901 0004                            BE       s:9485,PREL

      143     9483    1        THEN
      144     9484    1             ALTRETURN;
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:31   

   9484   0 000039  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      145     9485    1        CTX$ = LVL1$;

   9485   0 00003C  BF85                                 STB,B3   ,B5

      146     9486    2        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN# THEN DO;

   9486   0 00003D  D804                                 LDR,R5   ,B4
          0 00003E  D570 00FF                            AND,R5   255,IMO
          0 000040  5D01                                 CMV,R5   1
          0 000041  0901 0053                            BE       s:9504,PREL

      147     9487    2             LVL2$ = CHNCTX.SUB$;

   9487   0 000043  ECC3 001A                            LDB,B6   26,B3
          0 000045  EFC7 000A                            STB,B6   LVL2$,AUTO

      148     9488    3             DO WHILE(LVL2$ ~= ADDR(NIL) AND TERMID.TERM.SUBDEVICE ~= LVL2CTX.TERMID.
              9488                      TERM.SUBDEVICE);

   9488   0 000047  0F81 0007                            B        s:9490,PREL

      149     9489    3                  LVL2$ = LVL2CTX.LNK$;

   9489   0 000049  ECC7 000A                            LDB,B6   LVL2$,AUTO
          0 00004B  DCC6 001C                            LDB,B5   28,B6
          0 00004D  DFC7 000A                            STB,B5   LVL2$,AUTO

      150     9490    3                END;                       /* DO WHILE */

   9490   0 00004F  8DC7 000A                            CMN      LVL2$,AUTO
          0 000051  0901 000A                            BE       s:9491,PREL
          0 000053  ECC7 0004                            LDB,B6   @TERMID,AUTO
          0 000055  DCC7 000A                            LDB,B5   LVL2$,AUTO
          0 000057  E846 0002                            LDR,R6   2,B6
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:32   
          0 000059  E945 0014                            CMR,R6   20,B5
          0 00005B  09EE                                 BNE      s:9489,SPREL

      151     9491    2             CTX$ = LVL2$;

   9491   0 00005C  ECC7 000A                            LDB,B6   LVL2$,AUTO
          0 00005E  DCC7 0006                            LDB,B5   @CTX$,AUTO
          0 000060  EF85                                 STB,B6   ,B5

      152     9492    2             IF LVL2$ = ADDR(NIL)

   9492   0 000061  8DC7 000A                            CMN      LVL2$,AUTO
          0 000063  0981 0004                            BNE      s:9494,PREL

      153     9493    2             THEN ALTRETURN;

   9493   0 000065  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      154     9494    3             IF TERMID.LEV = %TERMINAL_ID_LEV_SUBSUBCHAN# THEN DO;

   9494   0 000068  CCC7 0004                            LDB,B4   @TERMID,AUTO
          0 00006A  E804                                 LDR,R6   ,B4
          0 00006B  E570 00FF                            AND,R6   255,IMO
          0 00006D  6D03                                 CMV,R6   3
          0 00006E  0981 0026                            BNE      s:9504,PREL

      155     9495    3                  LVL3$ = LVL2CTX.SUB$;

   9495   0 000070  BCC6 001A                            LDB,B3   26,B6
          0 000072  BFC7 000C                            STB,B3   LVL3$,AUTO

      156     9496    4                  DO WHILE(LVL3$ ~= ADDR(NIL) AND TERMID.TERM.SUBSUBDEVICE ~= LVL3CTX.
              9496                           TERMID.TERM.SUBSUBDEVICE);

   9496   0 000074  0F81 0007                            B        s:9498,PREL

      157     9497    4                       LVL3$ = LVL3CTX.LNK$;
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:33   

   9497   0 000076  ECC7 000C                            LDB,B6   LVL3$,AUTO
          0 000078  DCC6 001C                            LDB,B5   28,B6
          0 00007A  DFC7 000C                            STB,B5   LVL3$,AUTO

      158     9498    4                     END;                  /* DO WHILE */

   9498   0 00007C  8DC7 000C                            CMN      LVL3$,AUTO
          0 00007E  0901 000A                            BE       s:9499,PREL
          0 000080  ECC7 0004                            LDB,B6   @TERMID,AUTO
          0 000082  DCC7 000C                            LDB,B5   LVL3$,AUTO
          0 000084  E846 0003                            LDR,R6   3,B6
          0 000086  E945 0015                            CMR,R6   21,B5
          0 000088  09EE                                 BNE      s:9497,SPREL

      159     9499    3                  CTX$ = LVL3$;

   9499   0 000089  ECC7 000C                            LDB,B6   LVL3$,AUTO
          0 00008B  DCC7 0006                            LDB,B5   @CTX$,AUTO
          0 00008D  EF85                                 STB,B6   ,B5

      160     9500    3                  IF LVL3$ = ADDR(NIL)

   9500   0 00008E  8DC7 000C                            CMN      LVL3$,AUTO
          0 000090  0981 0004                            BNE      s:9504,PREL

      161     9501    3                  THEN ALTRETURN;

   9501   0 000092  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      162     9502    3                END;                       /* LEV = SUBSUBCHAN */
      163     9503    2           END;                            /* IF LEV ~= CHAN */
      164     9504    1        RETURN;

   9504   0 000095  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      165     9505    1   END KHA$GET_CTX_PTR;
      166     9506        %EOD;
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:34   

PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:35   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   KH_CHN.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$GET_CTX_PTR.
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:36   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @CTX$                      4-0-0/w PTR         r     1 @TERMID
     E-0-0/w UBIN(16)    r     1 CHAN                      *0-0-0/w PTR         r     1 CTX$
     8-0-0/w PTR         r     1 LVL1$                      A-0-0/w PTR         r     1 LVL2$
     C-0-0/w PTR         r     1 LVL3$                     *0-0-0/w STRC(128)   r     1 TERMID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w UBIN(16)    r     1 KH_CHNHI
     0-0-0/w UBIN(16)    r     1 KH_CHNLOW                  0-0-0/w PTR         r     1 KH_CHNLOW$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 CHNCTX                     0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(512)   r     1 LVL2CTX                    0-0-0/w STRC(512)   r     1 LVL3CTX


   Procedure KHA$GET_CTX_PTR requires 152 words for executable code.
   Procedure KHA$GET_CTX_PTR requires 16 words of local(AUTO) storage.
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:37   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:38   
          MINI XREF LISTING

CHAN
      9473**DCL      9476<<ASSIGN   9477>>IF       9477>>IF       9479>>ASSIGN
CHNCTX
      9113**DCL      9479--ASSIGN
CHNCTX.SUB$
      9220**DCL      9487>>ASSIGN
CHNCTX.SYSID
      9146**DCL      9482>>IF
CHNCTX.TERMID.TERM
      9209**DCL      9218--REDEF
CTX$
      8663**DCL        33--PROC     9475<<ASSIGN   9485<<ASSIGN   9491<<ASSIGN   9499<<ASSIGN
G$JIT.ERRLOG
      9028**DCL      9031--REDEF
G$JIT.JSUNIT
      8767**DCL      8768--REDEF
G$JIT.MCLS
      8766**DCL      8766--REDEF
G$JIT.SYSID
      8756**DCL      9482>>IF
G$JIT.TMRZ
      9035**DCL      9036--REDEF
G$JIT.USER_EXTIME
      8759**DCL      8760--REDEF
G$JIT.USER_MEMTIME
      8762**DCL      8762--REDEF
G$JIT.USER_SVTIME
      8761**DCL      8761--REDEF
G$JIT$
      8683**DCL      8698--IMP-PTR  9482>>IF
KH_CHNHI
      8678**DCL      8679--REDEF    9477>>IF
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:39   
KH_CHNLOW
      8679**DCL      8680--REDEF    9477>>IF
KH_CHNLOW$
      8678**DCL      9479>>ASSIGN
LVL1$
      9470**DCL      9113--IMP-PTR  9479<<ASSIGN   9480>>IF       9482>>IF       9485>>ASSIGN   9487>>ASSIGN
LVL2$
      9471**DCL      9237--IMP-PTR  9487<<ASSIGN   9488>>DOWHILE  9488>>DOWHILE  9489<<ASSIGN   9489>>ASSIGN
      9491>>ASSIGN   9492>>IF       9495>>ASSIGN
LVL2CTX.LNK$
      9344**DCL      9489>>ASSIGN
LVL2CTX.SUB$
      9344**DCL      9495>>ASSIGN
LVL2CTX.TERMID.TERM
      9333**DCL      9342--REDEF
LVL2CTX.TERMID.TERM.SUBDEVICE
      9339**DCL      9488>>DOWHILE
LVL3$
      9472**DCL      9361--IMP-PTR  9495<<ASSIGN   9496>>DOWHILE  9496>>DOWHILE  9497<<ASSIGN   9497>>ASSIGN
      9499>>ASSIGN   9500>>IF
LVL3CTX.LNK$
      9468**DCL      9497>>ASSIGN
LVL3CTX.TERMID.TERM
      9457**DCL      9466--REDEF
LVL3CTX.TERMID.TERM.SUBSUBDEVICE
      9463**DCL      9496>>DOWHILE
TERMID
      8648**DCL        33--PROC
TERMID.LEV
      8652**DCL      9486>>IF       9494>>IF
TERMID.TERM
      8652**DCL      8661--REDEF
TERMID.TERM.CHANNEL
      8658**DCL      9476>>ASSIGN
TERMID.TERM.SUBDEVICE
      8658**DCL      9488>>DOWHILE
PL6.E3A0      #002=KHA$GET_CTX_PTR File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:25 Page:40   
TERMID.TERM.SUBSUBDEVICE
      8658**DCL      9496>>DOWHILE

PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:41   
      167        1        /*T***********************************************************/
      168        2        /*T*                                                         */
      169        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      170        4        /*T*                                                         */
      171        5        /*T***********************************************************/
      172        6        /*F* NAME: KHA$LINE_ACTIVE - Report Terminal Active
      173        7
      174        8        The KHA$LINE_ACTIVE routine is called by a handler to indicate that a
      175        9        termid is now active.  This routine provides a way of "logging on"
      176       10        termids that represent such things as HASP terminals, 3270
      177       11        controllers, links, and virtual circuits; i.e. things that
      178       12        don't really log on to the CP-6 system through the
      179       13        normal logon process.
      180       14
      181       15        This routine sends a message through Node Administrator to
      182       16        the Network Manager indicating that the specified termid
      183       17        is now active.  The NM will print a message on the console
      184       18        indicating this fact.
      185       19
      186       20        The form of the call for this service is:
      187       21
      188       22        .fif
      189       23        }   CALL KHA$LINE_ACTIVE(termid);
      190       24        .fin
      191       25
      192       26        where:
      193       27        */
      194       28
      195       29        /*K* termid -
      196       30        specifies the line that is now active.
      197       31        This parameter is a structure that is in B$TERMINAL_ID format.
      198       32        */
      199       33        KHA$LINE_ACTIVE: PROC(TERMID);
      200       34        /**/
      201       35        %INCLUDE KHA_FNC_E;
      202      135        %INCLUDE LCP_6;
      203     4414        /**/
PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:42   
      204     4415        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      205     4444        /**/
      206     4445
      207     4446    1   DCL ERROR UBIN(32);
      208     4447
      209     4448    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      210     4449
      211     4450    1        CALL KHA$DVCADM(%KHA_FNC_ACTIVE,ERROR,TERMID);
      212     4451    1        RETURN;
      213     4452    1   KHA$LINE_INACTIVE: ENTRY(TERMID);
      214     4453    1        CALL KHA$DVCADM(%KHA_FNC_NOTACTIVE,ERROR,TERMID);
      215     4454    1        RETURN;
      216     4455    1   END KHA$LINE_ACTIVE;
      217     4456        %EOD;

PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:43   
--  Include file information  --

   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KHA$LINE_ACTIVE.

   Procedure KHA$LINE_ACTIVE requires 56 words for executable code.
   Procedure KHA$LINE_ACTIVE requires 14 words of local(AUTO) storage.

PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:44   

 Object Unit name= KHA$LINE_ACTIVE                            File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:26:01.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    56     38  KHA$LINE_ACTIVE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KHA$LINE_ACTIVE
     0     1C                  yes      Std        1  KHA$LINE_INACTIVE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 KHA$DVCADM
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:45   


      167        1        /*T***********************************************************/
      168        2        /*T*                                                         */
      169        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      170        4        /*T*                                                         */
      171        5        /*T***********************************************************/
      172        6        /*F* NAME: KHA$LINE_ACTIVE - Report Terminal Active
      173        7
      174        8        The KHA$LINE_ACTIVE routine is called by a handler to indicate that a
      175        9        termid is now active.  This routine provides a way of "logging on"
      176       10        termids that represent such things as HASP terminals, 3270
      177       11        controllers, links, and virtual circuits; i.e. things that
      178       12        don't really log on to the CP-6 system through the
      179       13        normal logon process.
      180       14
      181       15        This routine sends a message through Node Administrator to
      182       16        the Network Manager indicating that the specified termid
      183       17        is now active.  The NM will print a message on the console
      184       18        indicating this fact.
      185       19
      186       20        The form of the call for this service is:
      187       21
      188       22        .fif
      189       23        }   CALL KHA$LINE_ACTIVE(termid);
      190       24        .fin
      191       25
      192       26        where:
      193       27        */
      194       28
      195       29        /*K* termid -
      196       30        specifies the line that is now active.
      197       31        This parameter is a structure that is in B$TERMINAL_ID format.
      198       32        */
      199       33        KHA$LINE_ACTIVE: PROC(TERMID);

     33   0 000000  D380 0000 0000  xent KHA$LINE_ACTIVE LNJ,B5   X6A_AUTO_1
          0 000003       000E 0001                       DC       14,1
PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:46   

      200       34        /**/
      201       35        %INCLUDE KHA_FNC_E;
      202      135        %INCLUDE LCP_6;
      203     4414        /**/
      204     4415        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      205     4444        /**/
      206     4445
      207     4446    1   DCL ERROR UBIN(32);
      208     4447
      209     4448    1   DCL KHA$DVCADM ENTRY(6) ALTRET;
      210     4449
      211     4450    1        CALL KHA$DVCADM(%KHA_FNC_ACTIVE,ERROR,TERMID);

   4450   0 000005  EBF0 001C                            LAB,B6   28,IMO
          0 000007  DCC7 0004                            LDB,B5   @TERMID,AUTO
          0 000009  DFC7 000C                            STB,B5   ERROR+6,AUTO
          0 00000B  CBC7 0006                            LAB,B4   ERROR,AUTO
          0 00000D  CFC7 000A                            STB,B4   ERROR+4,AUTO
          0 00000F  EFC7 0008                            STB,B6   ERROR+2,AUTO
          0 000011  BBC7 0008                            LAB,B3   ERROR+2,AUTO
          0 000013  CBF0 0300                            LAB,B4   768,IMO
          0 000015  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          0 000018       0001                            DC       s:4451,PREL

      212     4451    1        RETURN;

   4451   0 000019  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      213     4452    1   KHA$LINE_INACTIVE: ENTRY(TERMID);

   4452   0 00001C  D380 0000 0000  xent KHA$LINE_INACTI*LNJ,B5   X6A_AUTO_1
          0 00001F       000E 0001                       DC       14,1

      214     4453    1        CALL KHA$DVCADM(%KHA_FNC_NOTACTIVE,ERROR,TERMID);

   4453   0 000021  EBF0 001D                            LAB,B6   29,IMO
PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:47   
          0 000023  DCC7 0004                            LDB,B5   @TERMID,AUTO
          0 000025  DFC7 000C                            STB,B5   ERROR+6,AUTO
          0 000027  CBC7 0006                            LAB,B4   ERROR,AUTO
          0 000029  CFC7 000A                            STB,B4   ERROR+4,AUTO
          0 00002B  EFC7 0008                            STB,B6   ERROR+2,AUTO
          0 00002D  BBC7 0008                            LAB,B3   ERROR+2,AUTO
          0 00002F  CBF0 0300                            LAB,B4   768,IMO
          0 000031  E380 0000 0000  xent                 LNJ,B6   KHA$DVCADM
          0 000034       0001                            DC       s:4454,PREL

      215     4454    1        RETURN;

   4454   0 000035  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      216     4455    1   END KHA$LINE_ACTIVE;
      217     4456        %EOD;

PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:48   
--  Include file information  --

   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KHA$LINE_ACTIVE.
PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:49   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @TERMID                    6-0-0/w UBIN(32)    r     1 ERROR
    *0-0-0/w STRC(128)   r     1 TERMID


   Procedure KHA$LINE_ACTIVE requires 56 words for executable code.
   Procedure KHA$LINE_ACTIVE requires 14 words of local(AUTO) storage.
PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:50   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=KHA$LINE_ACTIVE File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:51   
          MINI XREF LISTING

ERROR
      4446**DCL      4450<>CALL     4453<>CALL
KHA$DVCADM
      4448**DCL-ENT  4450--CALL     4453--CALL
TERMID
      4429**DCL        33--PROC     4450<>CALL     4452--ENTRY    4453<>CALL
TERMID.TERM
      4433**DCL      4442--REDEF

PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:52   
      218        1        /*M* KHA$CHK_TRM_RNG - Routine to check for legal range of TERMIDs */
      219        2        /*T***********************************************************/
      220        3        /*T*                                                         */
      221        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      222        5        /*T*                                                         */
      223        6        /*T***********************************************************/
      224        7        /*F* NAME: KHA$CHK_TRM_RNG
      225        8             PURPOSE: This routine is called when KHA receives a range of
      226        9                      termid specs.  This routine validates that the two termids
      227       10                      constitute a valid range according to the rules defined
      228       11                      below.
      229       12             DESCRIPTION: This routine validates that the two termids passed
      230       13                          constitute a valid range according to the following
      231       14                          rules:
      232       15
      233       16                         1. TERMLO.LEV = TERMHI.LEV
      234       17
      235       18                         2. IF LEV = 1
      236       19                               TERMLO.CHAN <= TERMHI.CHAN
      237       20
      238       21                         3. IF LEV = 2
      239       22                               TERMLO.CHAN = TERMHI.CHAN
      240       23                               TERMLO.SUB <= TERMHI.SUB
      241       24
      242       25                         4. IF LEV = 3
      243       26                               TERMLO.CHAN = TERMHI.CHAN
      244       27                               TERMLO.SUB = TERMHI.SUB
      245       28                               TERMLO.SUBSUB <= TERMHI.SUBSUB
      246       29
      247       30                         If any of the specified conditions are not met, the
      248       31                         altreturn is taken.  Else, return.
      249       32             CALL: CALL KHA$CHK_TRM_RNG(TERMLO,TERMHI) ALTRET(label);
      250       33             INPUT: TERMLO, TERMHI - the two termids making up the range.  See
      251       34                    the B$TERMINAL_ID macro in KL_MACRO_C.
      252       35             OUTPUT: None.  If the range is valid we return, else altreturn.
      253       36        */
      254       37        KHA$CHK_TRM_RNG: PROC(TERMLO,TERMHI) ALTRET;
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:53   
      255       38        /**/
      256       39        %INCLUDE LCP_6;
      257     4318        %INCLUDE CP_6_SUBS;
      258     4858        %INCLUDE KL_MACRO_C;
      259     8210        /**/
      260     8211        %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM,ALGN=ALIGNED);
      261     8240        %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM,ALGN=ALIGNED);
      262     8269        %EJECT;
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:54   
      263     8270    1        IF TERMLO.LEV ~= TERMHI.LEV
      264     8271    1        THEN ALTRETURN;
      265     8272    2        DO CASE(TERMLO.LEV);
      266     8273    2        CASE(%TERMINAL_ID_LEV_CHAN#);
      267     8274    2           IF TERMLO.TERM.CHANNEL > TERMHI.TERM.CHANNEL
      268     8275    2           THEN ALTRETURN;
      269     8276    2        CASE(%TERMINAL_ID_LEV_SUBCHAN#);
      270     8277    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR
      271     8278    2                TERMLO.TERM.SUBDEVICE > TERMHI.TERM.SUBDEVICE
      272     8279    2           THEN ALTRETURN;
      273     8280    2        CASE(%TERMINAL_ID_LEV_SUBSUBCHAN#);
      274     8281    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR
      275     8282    2                TERMLO.TERM.SUBDEVICE ~= TERMHI.TERM.SUBDEVICE OR
      276     8283    2                TERMLO.TERM.SUBSUBDEVICE > TERMHI.TERM.SUBSUBDEVICE
      277     8284    2           THEN ALTRETURN;
      278     8285    2        END;                               /* DO CASE */
      279     8286    1        RETURN;
      280     8287    1   END KHA$CHK_TRM_RNG;
      281     8288        %EOD;

PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:55   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$CHK_TRM_RNG.

   Procedure KHA$CHK_TRM_RNG requires 83 words for executable code.
   Procedure KHA$CHK_TRM_RNG requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:56   

 Object Unit name= KHA$CHK_TRM_RNG                            File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:26:14.16 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    83     53  KHA$CHK_TRM_RNG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  KHA$CHK_TRM_RNG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:57   


      218        1        /*M* KHA$CHK_TRM_RNG - Routine to check for legal range of TERMIDs */
      219        2        /*T***********************************************************/
      220        3        /*T*                                                         */
      221        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      222        5        /*T*                                                         */
      223        6        /*T***********************************************************/
      224        7        /*F* NAME: KHA$CHK_TRM_RNG
      225        8             PURPOSE: This routine is called when KHA receives a range of
      226        9                      termid specs.  This routine validates that the two termids
      227       10                      constitute a valid range according to the rules defined
      228       11                      below.
      229       12             DESCRIPTION: This routine validates that the two termids passed
      230       13                          constitute a valid range according to the following
      231       14                          rules:
      232       15
      233       16                         1. TERMLO.LEV = TERMHI.LEV
      234       17
      235       18                         2. IF LEV = 1
      236       19                               TERMLO.CHAN <= TERMHI.CHAN
      237       20
      238       21                         3. IF LEV = 2
      239       22                               TERMLO.CHAN = TERMHI.CHAN
      240       23                               TERMLO.SUB <= TERMHI.SUB
      241       24
      242       25                         4. IF LEV = 3
      243       26                               TERMLO.CHAN = TERMHI.CHAN
      244       27                               TERMLO.SUB = TERMHI.SUB
      245       28                               TERMLO.SUBSUB <= TERMHI.SUBSUB
      246       29
      247       30                         If any of the specified conditions are not met, the
      248       31                         altreturn is taken.  Else, return.
      249       32             CALL: CALL KHA$CHK_TRM_RNG(TERMLO,TERMHI) ALTRET(label);
      250       33             INPUT: TERMLO, TERMHI - the two termids making up the range.  See
      251       34                    the B$TERMINAL_ID macro in KL_MACRO_C.
      252       35             OUTPUT: None.  If the range is valid we return, else altreturn.
      253       36        */
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:58   
      254       37        KHA$CHK_TRM_RNG: PROC(TERMLO,TERMHI) ALTRET;

     37   0 000000  D380 0000 0000  xent KHA$CHK_TRM_RNG LNJ,B5   X6A_AUTO_2
          0 000003       0008 0002                       DC       8,2

      255       38        /**/
      256       39        %INCLUDE LCP_6;
      257     4318        %INCLUDE CP_6_SUBS;
      258     4858        %INCLUDE KL_MACRO_C;
      259     8210        /**/
      260     8211        %B$TERMINAL_ID (FPTN=TERMLO,STCLASS=PARAM,ALGN=ALIGNED);
      261     8240        %B$TERMINAL_ID (FPTN=TERMHI,STCLASS=PARAM,ALGN=ALIGNED);
      262     8269        %EJECT;
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:59   
      263     8270    1        IF TERMLO.LEV ~= TERMHI.LEV

   8270   0 000005  ECC7 0004                            LDB,B6   @TERMLO,AUTO
          0 000007  E806                                 LDR,R6   ,B6
          0 000008  E570 00FF                            AND,R6   255,IMO
          0 00000A  DCC7 0006                            LDB,B5   @TERMHI,AUTO
          0 00000C  D805                                 LDR,R5   ,B5
          0 00000D  D570 00FF                            AND,R5   255,IMO
          0 00000F  E955                                 CMR,R6   R5
          0 000010  0901 0004                            BE       s:8272,PREL

      264     8271    1        THEN ALTRETURN;

   8271   0 000012  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      265     8272    2        DO CASE(TERMLO.LEV);

   8272   0 000015  B856                                 LDR,R3   R6
          0 000016  3D04                                 CMV,R3   4
          0 000017  0281 0038                            BGE      s:8286,PREL
          0 000019  A830 0000 001F  00                   LDR,R2   s:8272+10,R3
          0 00001C  83A0 0000 0023  00                   JMP      s:8274,R2
          0 00001F       002D                            DC       s:8286,PREL
          0 000020       0000                            DC       s:8274,PREL
          0 000021       0009                            DC       s:8277,PREL
          0 000022       0018                            DC       s:8281,PREL

      266     8273    2        CASE(%TERMINAL_ID_LEV_CHAN#);

      267     8274    2           IF TERMLO.TERM.CHANNEL > TERMHI.TERM.CHANNEL

   8274   0 000023  C846 0001                            LDR,R4   1,B6
          0 000025  C945 0001                            CMR,R4   1,B5
          0 000027  0381 0028                            BLE      s:8286,PREL

      268     8275    2           THEN ALTRETURN;

PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:60   
   8275   0 000029  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      269     8276    2        CASE(%TERMINAL_ID_LEV_SUBCHAN#);

      270     8277    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR

   8277   0 00002C  C846 0001                            LDR,R4   1,B6
          0 00002E  C945 0001                            CMR,R4   1,B5
          0 000030  0981 0007                            BNE      s:8279,PREL
          0 000032  9846 0002                            LDR,R1   2,B6
          0 000034  9945 0002                            CMR,R1   2,B5
          0 000036  0381 0019                            BLE      s:8286,PREL

      271     8278    2                TERMLO.TERM.SUBDEVICE > TERMHI.TERM.SUBDEVICE
      272     8279    2           THEN ALTRETURN;

   8279   0 000038  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      273     8280    2        CASE(%TERMINAL_ID_LEV_SUBSUBCHAN#);

      274     8281    2           IF TERMLO.TERM.CHANNEL ~= TERMHI.TERM.CHANNEL OR

   8281   0 00003B  C846 0001                            LDR,R4   1,B6
          0 00003D  C945 0001                            CMR,R4   1,B5
          0 00003F  0981 000D                            BNE      s:8284,PREL
          0 000041  9846 0002                            LDR,R1   2,B6
          0 000043  9945 0002                            CMR,R1   2,B5
          0 000045  0981 0007                            BNE      s:8284,PREL
          0 000047  E846 0003                            LDR,R6   3,B6
          0 000049  E945 0003                            CMR,R6   3,B5
          0 00004B  0381 0004                            BLE      s:8286,PREL

      275     8282    2                TERMLO.TERM.SUBDEVICE ~= TERMHI.TERM.SUBDEVICE OR
      276     8283    2                TERMLO.TERM.SUBSUBDEVICE > TERMHI.TERM.SUBSUBDEVICE
      277     8284    2           THEN ALTRETURN;

   8284   0 00004D  C380 0000 0000  xent                 LNJ,B4   X6A_AALT
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:61   

      278     8285    2        END;                               /* DO CASE */

      279     8286    1        RETURN;

   8286   0 000050  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      280     8287    1   END KHA$CHK_TRM_RNG;
      281     8288        %EOD;

PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:62   
--  Include file information  --

   KL_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$CHK_TRM_RNG.
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:63   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @TERMHI                    4-0-0/w PTR         r     1 @TERMLO
    *0-0-0/w STRC(128)   r     1 TERMHI                    *0-0-0/w STRC(128)   r     1 TERMLO


   Procedure KHA$CHK_TRM_RNG requires 83 words for executable code.
   Procedure KHA$CHK_TRM_RNG requires 8 words of local(AUTO) storage.
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=KHA$CHK_TRM_RNG File=KHA$SUBS.:E05TSI                         WED 07/30/97 00:26 Page:65   
          MINI XREF LISTING

TERMHI
      8254**DCL        37--PROC
TERMHI.LEV
      8258**DCL      8270>>IF
TERMHI.TERM
      8258**DCL      8267--REDEF
TERMHI.TERM.CHANNEL
      8264**DCL      8274>>IF       8277>>IF       8281>>IF
TERMHI.TERM.SUBDEVICE
      8264**DCL      8277>>IF       8281>>IF
TERMHI.TERM.SUBSUBDEVICE
      8264**DCL      8281>>IF
TERMLO
      8225**DCL        37--PROC
TERMLO.LEV
      8229**DCL      8270>>IF       8272>>DOCASE
TERMLO.TERM
      8229**DCL      8238--REDEF
TERMLO.TERM.CHANNEL
      8235**DCL      8274>>IF       8277>>IF       8281>>IF
TERMLO.TERM.SUBDEVICE
      8235**DCL      8277>>IF       8281>>IF
TERMLO.TERM.SUBSUBDEVICE
      8235**DCL      8281>>IF

PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:66   
      282        1        /*T***********************************************************/
      283        2        /*T*                                                         */
      284        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      285        4        /*T*                                                         */
      286        5        /*T***********************************************************/
      287        6        KHA$TSTCNC: PROC(CHN$) ALTRET;
      288        7
      289        8        /*F* NAME: KHA$TSTCNC - Test Channel State
      290        9
      291       10        The KHA$TSTCNC routine checks to see if the specified channel
      292       11        is in the correct state for a connect.
      293       12
      294       13        The legal states are: Enabled or Busy.  If the
      295       14        channel is in either of these states a normal
      296       15        return is taken.  Otherwise this routine will
      297       16        altreturn.
      298       17
      299       18        The form of this call is:
      300       19
      301       20           CALL KHA$TSTCNC(chn$) ALTRET(label)
      302       21
      303       22        where:
      304       23         */
      305       24        /*K* chn$ - is a pointer to the channel table entry.
      306       25        */
      307       26        %INCLUDE LCP_6;
      308     4305        %INCLUDE KH$CHN;
      309     4427        /**/
      310     4428    1   DCL CHN$ PTR;
      311     4429        /**/
      312     4430        %KH$CHN (NAME=KH$CHN,STCLASS="BASED(CHN$)");
      313     4554        /**/
      314     4555        %EJECT;
PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:67   
      315     4556    1        IF CHN$ = ADDR(NIL)
      316     4557    1        THEN
      317     4558    1             ALTRETURN;
      318     4559    1        IF CHN$->KH$CHN.STT ~= %KH#CHN_STT_ENB AND
      319     4560    1             CHN$->KH$CHN.STT ~= %KH#CHN_STT_BSY
      320     4561    1        THEN ALTRETURN;
      321     4562    1        ELSE RETURN;
      322     4563    1   END KHA$TSTCNC;
      323     4564        %EOD;

PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:68   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$TSTCNC.

   Procedure KHA$TSTCNC requires 28 words for executable code.
   Procedure KHA$TSTCNC requires 6 words of local(AUTO) storage.

PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:69   

 Object Unit name= KHA$TSTCNC                                 File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:26:34.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    28     1C  KHA$TSTCNC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  KHA$TSTCNC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    G$ROS$
PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:70   


      282        1        /*T***********************************************************/
      283        2        /*T*                                                         */
      284        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      285        4        /*T*                                                         */
      286        5        /*T***********************************************************/
      287        6        KHA$TSTCNC: PROC(CHN$) ALTRET;

      6   0 000000  D380 0000 0000  xent KHA$TSTCNC      LNJ,B5   X6A_AUTO_1
          0 000003       0006 0001                       DC       6,1

      288        7
      289        8        /*F* NAME: KHA$TSTCNC - Test Channel State
      290        9
      291       10        The KHA$TSTCNC routine checks to see if the specified channel
      292       11        is in the correct state for a connect.
      293       12
      294       13        The legal states are: Enabled or Busy.  If the
      295       14        channel is in either of these states a normal
      296       15        return is taken.  Otherwise this routine will
      297       16        altreturn.
      298       17
      299       18        The form of this call is:
      300       19
      301       20           CALL KHA$TSTCNC(chn$) ALTRET(label)
      302       21
      303       22        where:
      304       23         */
      305       24        /*K* chn$ - is a pointer to the channel table entry.
      306       25        */
      307       26        %INCLUDE LCP_6;
      308     4305        %INCLUDE KH$CHN;
      309     4427        /**/
      310     4428    1   DCL CHN$ PTR;
      311     4429        /**/
      312     4430        %KH$CHN (NAME=KH$CHN,STCLASS="BASED(CHN$)");
      313     4554        /**/
PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:71   
      314     4555        %EJECT;
PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:72   
      315     4556    1        IF CHN$ = ADDR(NIL)

   4556   0 000005  ECC7 0004                            LDB,B6   @CHN$,AUTO
          0 000007  8D86                                 CMN      ,B6
          0 000008  0981 0004                            BNE      s:4559,PREL

      316     4557    1        THEN
      317     4558    1             ALTRETURN;

   4558   0 00000A  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      318     4559    1        IF CHN$->KH$CHN.STT ~= %KH#CHN_STT_ENB AND

   4559   0 00000D  DC86                                 LDB,B5   ,B6
          0 00000E  E2C5 0001                            LLH,R6   1,B5
          0 000010  6D05                                 CMV,R6   5
          0 000011  0901 0007                            BE       s:4562,PREL
          0 000013  6D01                                 CMV,R6   1
          0 000014  0901 0004                            BE       s:4562,PREL

      319     4560    1             CHN$->KH$CHN.STT ~= %KH#CHN_STT_BSY
      320     4561    1        THEN ALTRETURN;

   4561   0 000016  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      321     4562    1        ELSE RETURN;

   4562   0 000019  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      322     4563    1   END KHA$TSTCNC;
      323     4564        %EOD;

PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:73   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$TSTCNC.
PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:74   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @CHN$                     *0-0-0/w PTR         r     1 CHN$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(512)   r     1 KH$CHN


   Procedure KHA$TSTCNC requires 28 words for executable code.
   Procedure KHA$TSTCNC requires 6 words of local(AUTO) storage.
PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:75   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=KHA$TSTCNC File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:26 Page:76   
          MINI XREF LISTING

CHN$
      4428**DCL         6--PROC     4445--IMP-PTR  4556>>IF       4559>>IF       4559>>IF
KH$CHN.STT
      4461**DCL      4559>>IF       4559>>IF
KH$CHN.TERMID.TERM
      4541**DCL      4550--REDEF

PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:77   
      324        1        /*T***********************************************************/
      325        2        /*T*                                                         */
      326        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      327        4        /*T*                                                         */
      328        5        /*T***********************************************************/
      329        6        /*F* NAME: KHA$BLDLINPRO
      330        7             PURPOSE: This routine is called by KHA$DVCADM when it receives a line
      331        8                      profile message from the host.  This routine breaks apart
      332        9                      the message into its component pieces and does the following
      333       10                      for each piece:
      334       11
      335       12                         1. Call KHA$GET_CTX_PTR to get the sub-context built
      336       13                            for this termid.
      337       14
      338       15                         2. Call handler admin routine with FNC=BLDCTX, and passing
      339       16                            the appropriate piece of the line profile message.
      340       17             DESCRIPTION: This routine uses the information in the KL_BLKHDR structure
      341       18                          which is at the beginning of every piece of line profile
      342       19                          to determine the level of this item, how many sub-devices
      343       20                          there are, etc.  This information is used to set up
      344       21                          the KH$ADMIN_FPT structure to be passed to the handler.
      345       22             CALL: CALL KHA$BLDLINPRO(TERMID,PRO$);
      346       23             INPUT: TERMID - the terminal id of the line which this line profile
      347       24                             corresponds to.  See the B$TERMINAL_ID macro in LCP_6.
      348       25                    PRO$ - a pointer to the line profile message received
      349       26                           from the host.
      350       27        */
      351       28        KHA$BLDLINPRO: PROC(TERMID,PRO$) ALTRET;
      352       29        /**/
      353       30        %INCLUDE LCP_6;
      354     4309        %INCLUDE CP_6_SUBS;
      355     4849        %INCLUDE KH_MACRO_C;
      356     5592        %INCLUDE KHA_FNC_E;
      357     5692        %INCLUDE KL_SUPER_C;
      358     8594        /**/
      359     8595        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      360     8624    1   DCL PRO$ PTR;
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:78   
      361     8625        /**/
      362     8626    1   DCL KHA$GET_CTX_PTR ENTRY(2) ALTRET;
      363     8627    1   DCL KH_ADMIN$  EPTR SYMREF;
      364     8628        /**/
      365     8629    1   DCL I UBIN;
      366     8630    1   DCL J UBIN;
      367     8631        %KL_BLKHDR (NAME=LVL1BLK,STCLASS="BASED(LVL1$)");
      368     8726        %KL_BLKHDR (NAME=LVL2BLK,STCLASS="BASED(LVL2$)");
      369     8821        %KL_BLKHDR (NAME=LVL3BLK,STCLASS="BASED(LVL3$)");
      370     8916        %KL_LNKVC(STCLASS="BASED(LVL2$)");
      371     9140    1   DCL LVL1$ PTR;
      372     9141    1   DCL LVL2$ PTR;
      373     9142    1   DCL LVL3$ PTR;
      374     9143        %B$TERMINAL_ID (FPTN=TERMID_LCL,STCLASS=AUTO);
      375     9172        %KH$ADMIN_FPT (FPTN=ADMIN_FPT,STCLASS=AUTO);
      376     9383    1   DCL CHN$ PTR;
      377     9384    1   DCL LIN$ PTR;
      378     9385        /**/
      379     9386        %EJECT;
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:79   
      380     9387    1        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN#
      381     9388    1        THEN GOTO SEND_RJC;
      382     9389    1        LVL1$ = PRO$;
      383     9390    1        TERMID_LCL = TERMID;
      384     9391    1        CALL KHA$GET_CTX_PTR(TERMID_LCL,LIN$);
      385     9392    1        ADMIN_FPT.FNC = %KHA_FNC_BLDCTX;
      386     9393    1        ADMIN_FPT.TERMID = TERMID_LCL;
      387     9394    1        ADMIN_FPT.TERMID.TTYP = LVL1BLK.BLKTYP;
      388     9395    1        ADMIN_FPT.CTX$ = LVL1$;
      389     9396    1        ADMIN_FPT.CHN$ = LIN$;
      390     9397    1        ADMIN_FPT.LIN$ = LIN$;
      391     9398    1        ADMIN_FPT.RESULTS = '0'B;
      392     9399    1        CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);
      393     9400    1        LVL2$ = PINCRC(LVL1$,LVL1BLK.LEN);
      394     9401    2        DO I = 0 TO LVL1BLK.NSUBS - 1;
      395     9402    2             TERMID_LCL.LEV = LVL2BLK.LEV;
      396     9403    2             IF LVL2BLK.BLKTYP = %KLTY_VIRCIR# THEN
      397     9404    2                  TERMID_LCL.TERM.SUBDEVICE = KL_LNKVC.VIRCIR#;
      398     9405    2             ELSE
      399     9406    2                  TERMID_LCL.TERM.SUBDEVICE = LVL2BLK.DEVNUM;
      400     9407    2             CALL KHA$GET_CTX_PTR(TERMID_LCL,CHN$) ALTRET(SEND_RJC);
      401     9408    2             ADMIN_FPT.TERMID = TERMID_LCL;
      402     9409    2             ADMIN_FPT.TERMID.TTYP = LVL2BLK.BLKTYP;
      403     9410    2             ADMIN_FPT.CHN$ = CHN$;
      404     9411    2             ADMIN_FPT.CTX$ = LVL2$;
      405     9412    2             ADMIN_FPT.RESULTS = '0'B;
      406     9413    2             CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);
      407     9414    2             LVL3$ = PINCRC(LVL2$,LVL2BLK.LEN);
      408     9415    3             DO J = 0 TO LVL2BLK.NSUBS - 1;
      409     9416    3                  TERMID_LCL.LEV = LVL3BLK.LEV;
      410     9417    3                  TERMID_LCL.TERM.SUBSUBDEVICE = LVL3BLK.DEVNUM;
      411     9418    3                  CALL KHA$GET_CTX_PTR(TERMID_LCL,CHN$) ALTRET(SEND_RJC);
      412     9419    3                  ADMIN_FPT.TERMID = TERMID_LCL;
      413     9420    3                  ADMIN_FPT.TERMID.TTYP = LVL3BLK.BLKTYP;
      414     9421    3                  ADMIN_FPT.CHN$ = CHN$;
      415     9422    3                  ADMIN_FPT.CTX$ = LVL3$;
      416     9423    3                  ADMIN_FPT.RESULTS = '0'B;
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:80   
      417     9424    3                  CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);
      418     9425    3                  LVL3$ = PINCRC(LVL3$,LVL3BLK.LEN);
      419     9426    3                END;                       /* DO J */
      420     9427    2             LVL2$ = LVL3$;
      421     9428    2           END;                            /* DO I */
      422     9429    1        ADMIN_FPT.FNC = %KHA_FNC_BLDCTXCMP;
      423     9430    1        ADMIN_FPT.TERMID = TERMID;
      424     9431    1        ADMIN_FPT.TERMID.TTYP = LVL1BLK.BLKTYP;
      425     9432    1        ADMIN_FPT.CHN$ = LIN$;
      426     9433    1        ADMIN_FPT.CTX$ = ADDR(NIL);
      427     9434    1        ADMIN_FPT.RESULTS = '0'B;
      428     9435    1        CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);
      429     9436    1        RETURN;
      430     9437    1   SEND_RJC:;
      431     9438             /*N* WHAT DO WE DO??? */
      432     9439    1        ALTRETURN;
      433     9440    1   END KHA$BLDLINPRO;
      434     9441        %EOD;

PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:81   
--  Include file information  --

   KL_SUPER_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$BLDLINPRO.

   Procedure KHA$BLDLINPRO requires 343 words for executable code.
   Procedure KHA$BLDLINPRO requires 50 words of local(AUTO) storage.

PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:82   

 Object Unit name= KHA$BLDLINPRO                              File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:26:47.48 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   343    157  KHA$BLDLINPRO

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  KHA$BLDLINPRO

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KHA$GET_CTX_PTR
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KH_ADMIN$                        r    G$ROS$
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:83   


      324        1        /*T***********************************************************/
      325        2        /*T*                                                         */
      326        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      327        4        /*T*                                                         */
      328        5        /*T***********************************************************/
      329        6        /*F* NAME: KHA$BLDLINPRO
      330        7             PURPOSE: This routine is called by KHA$DVCADM when it receives a line
      331        8                      profile message from the host.  This routine breaks apart
      332        9                      the message into its component pieces and does the following
      333       10                      for each piece:
      334       11
      335       12                         1. Call KHA$GET_CTX_PTR to get the sub-context built
      336       13                            for this termid.
      337       14
      338       15                         2. Call handler admin routine with FNC=BLDCTX, and passing
      339       16                            the appropriate piece of the line profile message.
      340       17             DESCRIPTION: This routine uses the information in the KL_BLKHDR structure
      341       18                          which is at the beginning of every piece of line profile
      342       19                          to determine the level of this item, how many sub-devices
      343       20                          there are, etc.  This information is used to set up
      344       21                          the KH$ADMIN_FPT structure to be passed to the handler.
      345       22             CALL: CALL KHA$BLDLINPRO(TERMID,PRO$);
      346       23             INPUT: TERMID - the terminal id of the line which this line profile
      347       24                             corresponds to.  See the B$TERMINAL_ID macro in LCP_6.
      348       25                    PRO$ - a pointer to the line profile message received
      349       26                           from the host.
      350       27        */
      351       28        KHA$BLDLINPRO: PROC(TERMID,PRO$) ALTRET;

     28   0 000000  D380 0000 0000  xent KHA$BLDLINPRO   LNJ,B5   X6A_AUTO_2
          0 000003       0032 0002                       DC       50,2

      352       29        /**/
      353       30        %INCLUDE LCP_6;
      354     4309        %INCLUDE CP_6_SUBS;
      355     4849        %INCLUDE KH_MACRO_C;
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:84   
      356     5592        %INCLUDE KHA_FNC_E;
      357     5692        %INCLUDE KL_SUPER_C;
      358     8594        /**/
      359     8595        %B$TERMINAL_ID (FPTN=TERMID,STCLASS=PARAM,ALGN=ALIGNED);
      360     8624    1   DCL PRO$ PTR;
      361     8625        /**/
      362     8626    1   DCL KHA$GET_CTX_PTR ENTRY(2) ALTRET;
      363     8627    1   DCL KH_ADMIN$  EPTR SYMREF;
      364     8628        /**/
      365     8629    1   DCL I UBIN;
      366     8630    1   DCL J UBIN;
      367     8631        %KL_BLKHDR (NAME=LVL1BLK,STCLASS="BASED(LVL1$)");
      368     8726        %KL_BLKHDR (NAME=LVL2BLK,STCLASS="BASED(LVL2$)");
      369     8821        %KL_BLKHDR (NAME=LVL3BLK,STCLASS="BASED(LVL3$)");
      370     8916        %KL_LNKVC(STCLASS="BASED(LVL2$)");
      371     9140    1   DCL LVL1$ PTR;
      372     9141    1   DCL LVL2$ PTR;
      373     9142    1   DCL LVL3$ PTR;
      374     9143        %B$TERMINAL_ID (FPTN=TERMID_LCL,STCLASS=AUTO);
      375     9172        %KH$ADMIN_FPT (FPTN=ADMIN_FPT,STCLASS=AUTO);
      376     9383    1   DCL CHN$ PTR;
      377     9384    1   DCL LIN$ PTR;
      378     9385        /**/
      379     9386        %EJECT;
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:85   
      380     9387    1        IF TERMID.LEV ~= %TERMINAL_ID_LEV_CHAN#

   9387   0 000005  ECC7 0004                            LDB,B6   @TERMID,AUTO
          0 000007  E806                                 LDR,R6   ,B6
          0 000008  E570 00FF                            AND,R6   255,IMO
          0 00000A  6D01                                 CMV,R6   1
          0 00000B  0981 0148                            BNE      s:9434,PREL

      381     9388    1        THEN GOTO SEND_RJC;
      382     9389    1        LVL1$ = PRO$;

   9389   0 00000D  DCC7 0006                            LDB,B5   @PRO$,AUTO
          0 00000F  CC85                                 LDB,B4   ,B5
          0 000010  CFC7 000A                            STB,B4   LVL1$,AUTO

      383     9390    1        TERMID_LCL = TERMID;

   9390   0 000012  AB86                                 LAB,B2   ,B6
          0 000013  2C00                                 LDV,R2   0
          0 000014  6C10                                 LDV,R6   16
          0 000015  BB87                                 LAB,B3   ,AUTO
          0 000016  3C20                                 LDV,R3   32
          0 000017  0008                                 MMM

      384     9391    1        CALL KHA$GET_CTX_PTR(TERMID_LCL,LIN$);

   9391   0 000018  CBC7 002C                            LAB,B4   LIN$,AUTO
          0 00001A  CFC7 0030                            STB,B4   LIN$+4,AUTO
          0 00001C  9BC7 0010                            LAB,B1   TERMID_LCL,AUTO
          0 00001E  9FC7 002E                            STB,B1   LIN$+2,AUTO
          0 000020  BBC7 002E                            LAB,B3   LIN$+2,AUTO
          0 000022  CBF0 0200                            LAB,B4   512,IMO
          0 000024  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          0 000027       0001                            DC       s:9392,PREL

      385     9392    1        ADMIN_FPT.FNC = %KHA_FNC_BLDCTX;

PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:86   
   9392   0 000028  6C0A                                 LDV,R6   10
          0 000029  EF47 0018                            STR,R6   ADMIN_FPT,AUTO

      386     9393    1        ADMIN_FPT.TERMID = TERMID_LCL;

   9393   0 00002B  AB87                                 LAB,B2   ,AUTO
          0 00002C  2C20                                 LDV,R2   32
          0 00002D  6C10                                 LDV,R6   16
          0 00002E  BB87                                 LAB,B3   ,AUTO
          0 00002F  3C32                                 LDV,R3   50
          0 000030  0008                                 MMM

      387     9394    1        ADMIN_FPT.TERMID.TTYP = LVL1BLK.BLKTYP;

   9394   0 000031  ECC7 000A                            LDB,B6   LVL1$,AUTO
          0 000033  E2C6 0002                            LLH,R6   2,B6
          0 000035  E7C7 0019                            STH,R6   ADMIN_FPT+1,AUTO

      388     9395    1        ADMIN_FPT.CTX$ = LVL1$;

   9395   0 000037  EFC7 0021                            STB,B6   ADMIN_FPT+9,AUTO

      389     9396    1        ADMIN_FPT.CHN$ = LIN$;

   9396   0 000039  DCC7 002C                            LDB,B5   LIN$,AUTO
          0 00003B  DFC7 0023                            STB,B5   ADMIN_FPT+11,AUTO

      390     9397    1        ADMIN_FPT.LIN$ = LIN$;

   9397   0 00003D  DFC7 0025                            STB,B5   ADMIN_FPT+13,AUTO

      391     9398    1        ADMIN_FPT.RESULTS = '0'B;

   9398   0 00003F  8747 0027                            CL       ADMIN_FPT+15,AUTO
          0 000041  8747 0028                            CL       ADMIN_FPT+16,AUTO

      392     9399    1        CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:87   

   9399   0 000043  CBC7 0018                            LAB,B4   ADMIN_FPT,AUTO
          0 000045  CFC7 002E                            STB,B4   LIN$+2,AUTO
          0 000047  BBC7 002E                            LAB,B3   LIN$+2,AUTO
          0 000049  9C80 0000 0000  xsym                 LDB,B1   KH_ADMIN$
          0 00004C  CBF0 0100                            LAB,B4   256,IMO
          0 00004E  E381                                 LNJ,B6   ,B1
          0 00004F       0105                            DC       s:9434,PREL

      393     9400    1        LVL2$ = PINCRC(LVL1$,LVL1BLK.LEN);

   9400   0 000050  ECC7 000A                            LDB,B6   LVL1$,AUTO
          0 000052  B846 0001                            LDR,R3   1,B6
          0 000054  8CC7 000A                            LDI      LVL1$,AUTO
          0 000056  7031                                 DCL,R7   1
          0 000057  8D47 002E                            SDI      LIN$+2,AUTO
          0 000059  F853                                 LDR,R7   R3
          0 00005A  6C00                                 LDV,R6   0
          0 00005B  8447 002E                            AID      LIN$+2,AUTO
          0 00005D  7071                                 DCR,R7   1
          0 00005E  8D47 000C                            SDI      LVL2$,AUTO

      394     9401    2        DO I = 0 TO LVL1BLK.NSUBS - 1;

   9401   0 000060  8747 0008                            CL       I,AUTO
          0 000062  0F81 00BB                            B        s:9428+2,PREL

      395     9402    2             TERMID_LCL.LEV = LVL2BLK.LEV;

   9402   0 000064  ECC7 000C                            LDB,B6   LVL2$,AUTO
          0 000066  E286                                 LLH,R6   ,B6
          0 000067  EAC7 0010                            SRM,R6,'00FF'X    TERMID_LCL,AUTO
          0 000069       00FF

      396     9403    2             IF LVL2BLK.BLKTYP = %KLTY_VIRCIR# THEN

   9403   0 00006A  E2C6 0002                            LLH,R6   2,B6
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:88   
          0 00006C  6D08                                 CMV,R6   8
          0 00006D  0981 0007                            BNE      s:9406,PREL

      397     9404    2                  TERMID_LCL.TERM.SUBDEVICE = KL_LNKVC.VIRCIR#;

   9404   0 00006F  D846 0015                            LDR,R5   21,B6
          0 000071  DF47 0012                            STR,R5   TERMID_LCL+2,AUTO
          0 000073  0F81 0005                            B        s:9407,PREL

      398     9405    2             ELSE
      399     9406    2                  TERMID_LCL.TERM.SUBDEVICE = LVL2BLK.DEVNUM;

   9406   0 000075  D2C6 0003                            LLH,R5   3,B6
          0 000077  DF47 0012                            STR,R5   TERMID_LCL+2,AUTO

      400     9407    2             CALL KHA$GET_CTX_PTR(TERMID_LCL,CHN$) ALTRET(SEND_RJC);

   9407   0 000079  DBC7 002A                            LAB,B5   CHN$,AUTO
          0 00007B  DFC7 0030                            STB,B5   LIN$+4,AUTO
          0 00007D  CBC7 0010                            LAB,B4   TERMID_LCL,AUTO
          0 00007F  CFC7 002E                            STB,B4   LIN$+2,AUTO
          0 000081  BBC7 002E                            LAB,B3   LIN$+2,AUTO
          0 000083  CBF0 0200                            LAB,B4   512,IMO
          0 000085  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          0 000088       00CC                            DC       s:9434,PREL

      401     9408    2             ADMIN_FPT.TERMID = TERMID_LCL;

   9408   0 000089  AB87                                 LAB,B2   ,AUTO
          0 00008A  2C20                                 LDV,R2   32
          0 00008B  6C10                                 LDV,R6   16
          0 00008C  BB87                                 LAB,B3   ,AUTO
          0 00008D  3C32                                 LDV,R3   50
          0 00008E  0008                                 MMM

      402     9409    2             ADMIN_FPT.TERMID.TTYP = LVL2BLK.BLKTYP;

PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:89   
   9409   0 00008F  ECC7 000C                            LDB,B6   LVL2$,AUTO
          0 000091  E2C6 0002                            LLH,R6   2,B6
          0 000093  E7C7 0019                            STH,R6   ADMIN_FPT+1,AUTO

      403     9410    2             ADMIN_FPT.CHN$ = CHN$;

   9410   0 000095  DCC7 002A                            LDB,B5   CHN$,AUTO
          0 000097  DFC7 0023                            STB,B5   ADMIN_FPT+11,AUTO

      404     9411    2             ADMIN_FPT.CTX$ = LVL2$;

   9411   0 000099  EFC7 0021                            STB,B6   ADMIN_FPT+9,AUTO

      405     9412    2             ADMIN_FPT.RESULTS = '0'B;

   9412   0 00009B  8747 0027                            CL       ADMIN_FPT+15,AUTO
          0 00009D  8747 0028                            CL       ADMIN_FPT+16,AUTO

      406     9413    2             CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);

   9413   0 00009F  CBC7 0018                            LAB,B4   ADMIN_FPT,AUTO
          0 0000A1  CFC7 002E                            STB,B4   LIN$+2,AUTO
          0 0000A3  BBC7 002E                            LAB,B3   LIN$+2,AUTO
          0 0000A5  9C80 0000 0000  xsym                 LDB,B1   KH_ADMIN$
          0 0000A8  CBF0 0100                            LAB,B4   256,IMO
          0 0000AA  E381                                 LNJ,B6   ,B1
          0 0000AB       00A9                            DC       s:9434,PREL

      407     9414    2             LVL3$ = PINCRC(LVL2$,LVL2BLK.LEN);

   9414   0 0000AC  ECC7 000C                            LDB,B6   LVL2$,AUTO
          0 0000AE  B846 0001                            LDR,R3   1,B6
          0 0000B0  8CC7 000C                            LDI      LVL2$,AUTO
          0 0000B2  7031                                 DCL,R7   1
          0 0000B3  8D47 002E                            SDI      LIN$+2,AUTO
          0 0000B5  F853                                 LDR,R7   R3
          0 0000B6  6C00                                 LDV,R6   0
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:90   
          0 0000B7  8447 002E                            AID      LIN$+2,AUTO
          0 0000B9  7071                                 DCR,R7   1
          0 0000BA  8D47 000E                            SDI      LVL3$,AUTO

      408     9415    3             DO J = 0 TO LVL2BLK.NSUBS - 1;

   9415   0 0000BC  8747 0009                            CL       J,AUTO
          0 0000BE  0F81 0050                            B        s:9426+2,PREL

      409     9416    3                  TERMID_LCL.LEV = LVL3BLK.LEV;

   9416   0 0000C0  ECC7 000E                            LDB,B6   LVL3$,AUTO
          0 0000C2  E286                                 LLH,R6   ,B6
          0 0000C3  EAC7 0010                            SRM,R6,'00FF'X    TERMID_LCL,AUTO
          0 0000C5       00FF

      410     9417    3                  TERMID_LCL.TERM.SUBSUBDEVICE = LVL3BLK.DEVNUM;

   9417   0 0000C6  E2C6 0003                            LLH,R6   3,B6
          0 0000C8  EF47 0013                            STR,R6   TERMID_LCL+3,AUTO

      411     9418    3                  CALL KHA$GET_CTX_PTR(TERMID_LCL,CHN$) ALTRET(SEND_RJC);

   9418   0 0000CA  DBC7 002A                            LAB,B5   CHN$,AUTO
          0 0000CC  DFC7 0030                            STB,B5   LIN$+4,AUTO
          0 0000CE  CBC7 0010                            LAB,B4   TERMID_LCL,AUTO
          0 0000D0  CFC7 002E                            STB,B4   LIN$+2,AUTO
          0 0000D2  BBC7 002E                            LAB,B3   LIN$+2,AUTO
          0 0000D4  CBF0 0200                            LAB,B4   512,IMO
          0 0000D6  E380 0000 0000  xent                 LNJ,B6   KHA$GET_CTX_PTR
          0 0000D9       007B                            DC       s:9434,PREL

      412     9419    3                  ADMIN_FPT.TERMID = TERMID_LCL;

   9419   0 0000DA  AB87                                 LAB,B2   ,AUTO
          0 0000DB  2C20                                 LDV,R2   32
          0 0000DC  6C10                                 LDV,R6   16
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:91   
          0 0000DD  BB87                                 LAB,B3   ,AUTO
          0 0000DE  3C32                                 LDV,R3   50
          0 0000DF  0008                                 MMM

      413     9420    3                  ADMIN_FPT.TERMID.TTYP = LVL3BLK.BLKTYP;

   9420   0 0000E0  ECC7 000E                            LDB,B6   LVL3$,AUTO
          0 0000E2  E2C6 0002                            LLH,R6   2,B6
          0 0000E4  E7C7 0019                            STH,R6   ADMIN_FPT+1,AUTO

      414     9421    3                  ADMIN_FPT.CHN$ = CHN$;

   9421   0 0000E6  DCC7 002A                            LDB,B5   CHN$,AUTO
          0 0000E8  DFC7 0023                            STB,B5   ADMIN_FPT+11,AUTO

      415     9422    3                  ADMIN_FPT.CTX$ = LVL3$;

   9422   0 0000EA  EFC7 0021                            STB,B6   ADMIN_FPT+9,AUTO

      416     9423    3                  ADMIN_FPT.RESULTS = '0'B;

   9423   0 0000EC  8747 0027                            CL       ADMIN_FPT+15,AUTO
          0 0000EE  8747 0028                            CL       ADMIN_FPT+16,AUTO

      417     9424    3                  CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);

   9424   0 0000F0  CBC7 0018                            LAB,B4   ADMIN_FPT,AUTO
          0 0000F2  CFC7 002E                            STB,B4   LIN$+2,AUTO
          0 0000F4  BBC7 002E                            LAB,B3   LIN$+2,AUTO
          0 0000F6  9C80 0000 0000  xsym                 LDB,B1   KH_ADMIN$
          0 0000F9  CBF0 0100                            LAB,B4   256,IMO
          0 0000FB  E381                                 LNJ,B6   ,B1
          0 0000FC       0058                            DC       s:9434,PREL

      418     9425    3                  LVL3$ = PINCRC(LVL3$,LVL3BLK.LEN);

   9425   0 0000FD  ECC7 000E                            LDB,B6   LVL3$,AUTO
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:92   
          0 0000FF  B846 0001                            LDR,R3   1,B6
          0 000101  8CC7 000E                            LDI      LVL3$,AUTO
          0 000103  7031                                 DCL,R7   1
          0 000104  8D47 002E                            SDI      LIN$+2,AUTO
          0 000106  F853                                 LDR,R7   R3
          0 000107  6C00                                 LDV,R6   0
          0 000108  8447 002E                            AID      LIN$+2,AUTO
          0 00010A  7071                                 DCR,R7   1
          0 00010B  8D47 000E                            SDI      LVL3$,AUTO

      419     9426    3                END;                       /* DO J */

   9426   0 00010D  8AC7 0009                            INC      J,AUTO
          0 00010F  ECC7 000C                            LDB,B6   LVL2$,AUTO
          0 000111  D806                                 LDR,R5   ,B6
          0 000112  D570 00FF                            AND,R5   255,IMO
          0 000114  D947 0009                            CMR,R5   J,AUTO
          0 000116  0301 FFA9                            BG       s:9416,PREL

      420     9427    2             LVL2$ = LVL3$;

   9427   0 000118  DCC7 000E                            LDB,B5   LVL3$,AUTO
          0 00011A  DFC7 000C                            STB,B5   LVL2$,AUTO

      421     9428    2           END;                            /* DO I */

   9428   0 00011C  8AC7 0008                            INC      I,AUTO
          0 00011E  ECC7 000A                            LDB,B6   LVL1$,AUTO
          0 000120  E806                                 LDR,R6   ,B6
          0 000121  E570 00FF                            AND,R6   255,IMO
          0 000123  E947 0008                            CMR,R6   I,AUTO
          0 000125  0301 FF3E                            BG       s:9402,PREL

      422     9429    1        ADMIN_FPT.FNC = %KHA_FNC_BLDCTXCMP;

   9429   0 000127  5C0B                                 LDV,R5   11
          0 000128  DF47 0018                            STR,R5   ADMIN_FPT,AUTO
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:93   

      423     9430    1        ADMIN_FPT.TERMID = TERMID;

   9430   0 00012A  ACC7 0004                            LDB,B2   @TERMID,AUTO
          0 00012C  2C00                                 LDV,R2   0
          0 00012D  6C10                                 LDV,R6   16
          0 00012E  BB87                                 LAB,B3   ,AUTO
          0 00012F  3C32                                 LDV,R3   50
          0 000130  0008                                 MMM

      424     9431    1        ADMIN_FPT.TERMID.TTYP = LVL1BLK.BLKTYP;

   9431   0 000131  ECC7 000A                            LDB,B6   LVL1$,AUTO
          0 000133  E2C6 0002                            LLH,R6   2,B6
          0 000135  E7C7 0019                            STH,R6   ADMIN_FPT+1,AUTO

      425     9432    1        ADMIN_FPT.CHN$ = LIN$;

   9432   0 000137  DCC7 002C                            LDB,B5   LIN$,AUTO
          0 000139  DFC7 0023                            STB,B5   ADMIN_FPT+11,AUTO

      426     9433    1        ADMIN_FPT.CTX$ = ADDR(NIL);

   9433   0 00013B  CB80 0000 0000                       LAB,B4   0
          0 00013E  CFC7 0021                            STB,B4   ADMIN_FPT+9,AUTO

      427     9434    1        ADMIN_FPT.RESULTS = '0'B;

   9434   0 000140  8747 0027                            CL       ADMIN_FPT+15,AUTO
          0 000142  8747 0028                            CL       ADMIN_FPT+16,AUTO

      428     9435    1        CALL KH_ADMIN$(ADMIN_FPT) ALTRET(SEND_RJC);

   9435   0 000144  9BC7 0018                            LAB,B1   ADMIN_FPT,AUTO
          0 000146  9FC7 002E                            STB,B1   LIN$+2,AUTO
          0 000148  BBC7 002E                            LAB,B3   LIN$+2,AUTO
          0 00014A  9C80 0000 0000  xsym                 LDB,B1   KH_ADMIN$
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:94   
          0 00014D  CBF0 0100                            LAB,B4   256,IMO
          0 00014F  E381                                 LNJ,B6   ,B1
          0 000150       0004                            DC       s:9434,PREL

      429     9436    1        RETURN;

   9436   0 000151  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   9434   0                              SEND_RJC        null
      430     9437    1   SEND_RJC:;
      431     9438             /*N* WHAT DO WE DO??? */
      432     9439    1        ALTRETURN;

   9439   0 000154  C380 0000 0000  xent SEND_RJC        LNJ,B4   X6A_AALT
      433     9440    1   END KHA$BLDLINPRO;
      434     9441        %EOD;

PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:95   
--  Include file information  --

   KL_SUPER_C.:E05TOU  is referenced.
   KHA_FNC_E.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$BLDLINPRO.
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:96   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @PRO$                      4-0-0/w PTR         r     1 @TERMID
    18-0-0/w STRC(288)   r     1 ADMIN_FPT                 2A-0-0/w PTR         r     1 CHN$
     8-0-0/w UBIN(16)    r     1 I                          9-0-0/w UBIN(16)    r     1 J
    2C-0-0/w PTR         r     1 LIN$                       A-0-0/w PTR         r     1 LVL1$
     C-0-0/w PTR         r     1 LVL2$                      E-0-0/w PTR         r     1 LVL3$
    *0-0-0/w PTR         r     1 PRO$                      *0-0-0/w STRC(128)   r     1 TERMID
    10-0-0/c STRC(128)   r     1 TERMID_LCL

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 KH_ADMIN$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(384)   r     1 KL_LNKVC                   0-0-0/w STRC(64)    r     1 LVL1BLK
     0-0-0/w STRC(64)    r     1 LVL2BLK                    0-0-0/w STRC(64)    r     1 LVL3BLK


   Procedure KHA$BLDLINPRO requires 343 words for executable code.
   Procedure KHA$BLDLINPRO requires 50 words of local(AUTO) storage.
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:97   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:98   
          MINI XREF LISTING

ADMIN_FPT
      9187**DCL      9399<>CALL     9413<>CALL     9424<>CALL     9435<>CALL
ADMIN_FPT.CHN$
      9314**DCL      9396<<ASSIGN   9410<<ASSIGN   9421<<ASSIGN   9432<<ASSIGN
ADMIN_FPT.CTX$
      9243**DCL      9395<<ASSIGN   9411<<ASSIGN   9422<<ASSIGN   9433<<ASSIGN
ADMIN_FPT.FNC
      9188**DCL      9392<<ASSIGN   9429<<ASSIGN
ADMIN_FPT.LIN$
      9318**DCL      9397<<ASSIGN
ADMIN_FPT.RESULTS
      9339**DCL      9398<<ASSIGN   9412<<ASSIGN   9423<<ASSIGN   9434<<ASSIGN
ADMIN_FPT.TERMID
      9209**DCL      9393<<ASSIGN   9408<<ASSIGN   9419<<ASSIGN   9430<<ASSIGN
ADMIN_FPT.TERMID.TERM
      9211**DCL      9220--REDEF
ADMIN_FPT.TERMID.TTYP
      9211**DCL      9394<<ASSIGN   9409<<ASSIGN   9420<<ASSIGN   9431<<ASSIGN
CHN$
      9383**DCL      9407<>CALL     9410>>ASSIGN   9418<>CALL     9421>>ASSIGN
I
      8629**DCL      9401<<DOINDEX
J
      8630**DCL      9415<<DOINDEX
KHA$GET_CTX_PTR
      8626**DCL-ENT  9391--CALL     9407--CALL     9418--CALL
KH_ADMIN$
      8627**DCL      9399>>CALL     9413>>CALL     9424>>CALL     9435>>CALL
KL_LNKVC.CUG
      9030**DCL      9074--REDEF
KL_LNKVC.VIRCIR#
      9124**DCL      9404>>ASSIGN
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:99   
LIN$
      9384**DCL      9391<>CALL     9396>>ASSIGN   9397>>ASSIGN   9432>>ASSIGN
LVL1$
      9140**DCL      8645--IMP-PTR  9389<<ASSIGN   9394>>ASSIGN   9395>>ASSIGN   9400>>ASSIGN   9400>>ASSIGN
      9401>>DOINDEX  9431>>ASSIGN
LVL1BLK.BLKTYP
      8673**DCL      9394>>ASSIGN   9431>>ASSIGN
LVL1BLK.LEN
      8668**DCL      9400>>ASSIGN
LVL1BLK.NSUBS
      8660**DCL      9401>>DOINDEX
LVL2$
      9141**DCL      8740--IMP-PTR  8931--IMP-PTR  9400<<ASSIGN   9402>>ASSIGN   9403>>IF       9404>>ASSIGN
      9406>>ASSIGN   9409>>ASSIGN   9411>>ASSIGN   9414>>ASSIGN   9414>>ASSIGN   9415>>DOINDEX  9427<<ASSIGN
LVL2BLK.BLKTYP
      8768**DCL      9403>>IF       9409>>ASSIGN
LVL2BLK.DEVNUM
      8795**DCL      9406>>ASSIGN
LVL2BLK.LEN
      8763**DCL      9414>>ASSIGN
LVL2BLK.LEV
      8744**DCL      9402>>ASSIGN
LVL2BLK.NSUBS
      8755**DCL      9415>>DOINDEX
LVL3$
      9142**DCL      8835--IMP-PTR  9414<<ASSIGN   9416>>ASSIGN   9417>>ASSIGN   9420>>ASSIGN   9422>>ASSIGN
      9425<<ASSIGN   9425>>ASSIGN   9425>>ASSIGN   9427>>ASSIGN
LVL3BLK.BLKTYP
      8863**DCL      9420>>ASSIGN
LVL3BLK.DEVNUM
      8890**DCL      9417>>ASSIGN
LVL3BLK.LEN
      8858**DCL      9425>>ASSIGN
LVL3BLK.LEV
      8839**DCL      9416>>ASSIGN
PRO$
PL6.E3A0      #006=KHA$BLDLINPRO File=KHA$SUBS.:E05TSI                           WED 07/30/97 00:26 Page:100  
      8624**DCL        28--PROC     9389>>ASSIGN
SEND_RJC
      9434**LABEL    9388--GOTO     9399--CALLALT  9407--CALLALT  9413--CALLALT  9418--CALLALT  9424--CALLALT
      9435--CALLALT
TERMID
      8609**DCL        28--PROC     9390>>ASSIGN   9430>>ASSIGN
TERMID.LEV
      8613**DCL      9387>>IF
TERMID.TERM
      8613**DCL      8622--REDEF
TERMID_LCL
      9157**DCL      9390<<ASSIGN   9391<>CALL     9393>>ASSIGN   9407<>CALL     9408>>ASSIGN   9418<>CALL
      9419>>ASSIGN
TERMID_LCL.LEV
      9161**DCL      9402<<ASSIGN   9416<<ASSIGN
TERMID_LCL.TERM
      9161**DCL      9170--REDEF
TERMID_LCL.TERM.SUBDEVICE
      9167**DCL      9404<<ASSIGN   9406<<ASSIGN
TERMID_LCL.TERM.SUBSUBDEVICE
      9167**DCL      9417<<ASSIGN

PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:101  
      435        1        /*T***********************************************************/
      436        2        /*T*                                                         */
      437        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      438        4        /*T*                                                         */
      439        5        /*T***********************************************************/
      440        6        /*F* NAME: KHA$SETCLK
      441        7             PURPOSE: This routine is called when handler common gets an ALTRET
      442        8                      from M$WRITE to Node Admin, because we would have been REG'ed.
      443        9                      This routine saves the buffer we were trying to write and
      444       10                      calls clock services to reschedule the write request for
      445       11                      later, when (hopefully) we are running at background level
      446       12                      and we can do the M$WRITE with no problem.
      447       13             DESCRIPTION: First, we allocate a buffer from the handlers buddy space
      448       14                          pool that is large enough to hold the buffer we were
      449       15                          trying to write.  Then we move the data from WRITE_FPT.BUF_
      450       16                          into this buffer.  Set up KH_CLK.UID$ to be the address
      451       17                          of this buffer.  Then call KHC$CLOCK to call KHA$CLKEVT
      452       18                          in 5 seconds.  KHA$CLKEVT then retries the M$WRITE.
      453       19             CALL: CALL KHA$SETCLK(WRITE_FPT) ALTRET;
      454       20             INPUT: WRITE_FPT - The FPT for the M$WRITE which failed.
      455       21             OUTPUT: None.
      456       22        */
      457       23        KHA$SETCLK: PROC(WRITE_FPT) ALTRET;
      458       24        /**/
      459       25        %INCLUDE LCP_6;
      460     4304        %INCLUDE KH$CLK;
      461     4674        %INCLUDE KH_CLKFNC_E;
      462     4719        /**/
      463     4720        %FPT_WRITE (FPTN=WRITE_FPT,STCLASS=PARAM);
      464     4744        /**/
      465     4745        %KH$CLK (FPTN=KH_CLKC,
      466     4746                 STCLASS=CONSTANT,
      467     4747                 FNC=%KH#CLK_SETCLK,
      468     4748                 SBR=KHA$CLKEVT,
      469     4749                 EXPINH=YES,
      470     4750                 PRDUNT=%KH#C_SEC,
      471     4751                 PRD=1);
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:102  
      472     4900        %KH$CLK (FPTN=KH_CLK,
      473     4901                  STCLASS=AUTO);
      474     5050        /**/
      475     5051    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      476     5052    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      477     5053    1   DCL KHA$CLKEVT ENTRY(1);
      478     5054    1   DCL KHA$RDEVT ENTRY;
      479     5055        /**/
      480     5056    1   DCL TPTR$ PTR;
      481     5057    1   DCL TCPTR$ REDEF TPTR$ CPTR;
      482     5058    1   DCL BUF$ PTR;
      483     5059    1   DCL WSIZE UBIN;
      484     5060    1   DCL 1 BUF_ENTRY ALIGNED BASED,
      485     5061    1            2 WSIZE UBIN,
      486     5062    1            2 DATA CHAR(KH_CLK.UVAL) UNAL;
      487     5063    1   DCL 1 FPT_ENTRY ALIGNED BASED,
      488     5064    1            2 DATA CHAR(KH_CLK.UVAL);
      489     5065        /**/
      490     5066    1   DCL KH_FLDWRTS SBIN SYMREF;
      491     5067        %EJECT;
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:103  
      492     5068    1        WSIZE = (VBOUND(WRITE_FPT.BUF_) + 4)/2;
      493     5069    1        CALL KVB$GET2NSYS(WSIZE,BUF$) ALTRET(ALT);
      494     5070    1        KH_CLK = KH_CLKC;
      495     5071    1        KH_CLK.UVAL = VBOUND(WRITE_FPT.BUF_)+1;
      496     5072    1        BUF$->BUF_ENTRY.WSIZE = WSIZE;
      497     5073    1        BUF$->BUF_ENTRY.DATA = VBASE(WRITE_FPT.BUF_)->FPT_ENTRY.DATA;
      498     5074    1        KH_CLK.UVAL = KH_CLK.UVAL-1;
      499     5075    1        KH_CLK.UID$ = BUF$;
      500     5076    1        KH_FLDWRTS = KH_FLDWRTS + 1;
      501     5077    1   SET_CLK:;
      502     5078    1        KH_CLK.CTBCTX$ = ADDR(NIL);
      503     5079    1        CALL KHC$CLOCK(KH_CLK) ALTRET(ALT);
      504     5080    1        RETURN;
      505     5081    1   ALT: ALTRETURN;
      506     5082    1   KHA$RESETCLK: ENTRY(WRITE_FPT) ALTRET;
      507     5083
      508     5084    1        TCPTR$ = PINCRW(VBASE(WRITE_FPT.BUF_),-1);
      509     5085    1        KH_CLK = KH_CLKC;
      510     5086    1        KH_CLK.UID$ = TPTR$;
      511     5087    1        KH_CLK.UVAL = VBOUND(WRITE_FPT.BUF_);
      512     5088    1        GOTO SET_CLK;
      513     5089    1   KHA$RDCLK: ENTRY ALTRET;
      514     5090    1        KH_CLK = KH_CLKC;
      515     5091    1        KH_CLK.EXPINH = '0'B;
      516     5092    1        KH_CLK.SBR$ = ENTADDR(KHA$RDEVT);
      517     5093    1        GOTO SET_CLK;
      518     5094    1   END KHA$SETCLK;
      519     5095        %EOD;

PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:104  
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$SETCLK.

   Procedure KHA$SETCLK requires 145 words for executable code.
   Procedure KHA$SETCLK requires 26 words of local(AUTO) storage.

PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:105  

 Object Unit name= KHA$SETCLK                                 File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:27:14.28 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     11      B  KHA$SETCLK
    1   Proc  even  none   145     91  KHA$SETCLK

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KHA$SETCLK
     1     5B          yes     yes      Std        1  KHA$RESETCLK
     1     7A          yes     yes      Std        0  KHA$RDCLK

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       1 KHA$CLKEVT
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       1 KHC$CLOCK
         yes           Std       0 KHA$RDEVT
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET
                       nStd      0 X6A_AALT
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:106  

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KH_FLDWRTS                       r    G$ROS$
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:107  


      435        1        /*T***********************************************************/
      436        2        /*T*                                                         */
      437        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      438        4        /*T*                                                         */
      439        5        /*T***********************************************************/
      440        6        /*F* NAME: KHA$SETCLK
      441        7             PURPOSE: This routine is called when handler common gets an ALTRET
      442        8                      from M$WRITE to Node Admin, because we would have been REG'ed.
      443        9                      This routine saves the buffer we were trying to write and
      444       10                      calls clock services to reschedule the write request for
      445       11                      later, when (hopefully) we are running at background level
      446       12                      and we can do the M$WRITE with no problem.
      447       13             DESCRIPTION: First, we allocate a buffer from the handlers buddy space
      448       14                          pool that is large enough to hold the buffer we were
      449       15                          trying to write.  Then we move the data from WRITE_FPT.BUF_
      450       16                          into this buffer.  Set up KH_CLK.UID$ to be the address
      451       17                          of this buffer.  Then call KHC$CLOCK to call KHA$CLKEVT
      452       18                          in 5 seconds.  KHA$CLKEVT then retries the M$WRITE.
      453       19             CALL: CALL KHA$SETCLK(WRITE_FPT) ALTRET;
      454       20             INPUT: WRITE_FPT - The FPT for the M$WRITE which failed.
      455       21             OUTPUT: None.
      456       22        */
      457       23        KHA$SETCLK: PROC(WRITE_FPT) ALTRET;

     23   1 000000  D380 0000 0000  xent KHA$SETCLK      LNJ,B5   X6A_AUTO_1
          1 000003       001A 0001                       DC       26,1

      458       24        /**/
      459       25        %INCLUDE LCP_6;
      460     4304        %INCLUDE KH$CLK;
      461     4674        %INCLUDE KH_CLKFNC_E;
      462     4719        /**/
      463     4720        %FPT_WRITE (FPTN=WRITE_FPT,STCLASS=PARAM);
      464     4744        /**/
      465     4745        %KH$CLK (FPTN=KH_CLKC,
      466     4746                 STCLASS=CONSTANT,
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:108  
      467     4747                 FNC=%KH#CLK_SETCLK,
      468     4748                 SBR=KHA$CLKEVT,
      469     4749                 EXPINH=YES,
      470     4750                 PRDUNT=%KH#C_SEC,
      471     4751                 PRD=1);
      472     4900        %KH$CLK (FPTN=KH_CLK,
      473     4901                  STCLASS=AUTO);
      474     5050        /**/
      475     5051    1   DCL KHC$CLOCK ENTRY(1) ALTRET;
      476     5052    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      477     5053    1   DCL KHA$CLKEVT ENTRY(1);
      478     5054    1   DCL KHA$RDEVT ENTRY;
      479     5055        /**/
      480     5056    1   DCL TPTR$ PTR;
      481     5057    1   DCL TCPTR$ REDEF TPTR$ CPTR;
      482     5058    1   DCL BUF$ PTR;
      483     5059    1   DCL WSIZE UBIN;
      484     5060    1   DCL 1 BUF_ENTRY ALIGNED BASED,
      485     5061    1            2 WSIZE UBIN,
      486     5062    1            2 DATA CHAR(KH_CLK.UVAL) UNAL;
      487     5063    1   DCL 1 FPT_ENTRY ALIGNED BASED,
      488     5064    1            2 DATA CHAR(KH_CLK.UVAL);
      489     5065        /**/
      490     5066    1   DCL KH_FLDWRTS SBIN SYMREF;
      491     5067        %EJECT;
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:109  
      492     5068    1        WSIZE = (VBOUND(WRITE_FPT.BUF_) + 4)/2;

   5068   1 000005  ECC7 0004                            LDB,B6   @WRITE_FPT,AUTO
          1 000007  E846 0006                            LDR,R6   6,B6
          1 000009  6E04                                 ADV,R6   4
          1 00000A  6041                                 SOR,R6   1
          1 00000B  EF47 0015                            STR,R6   WSIZE,AUTO

      493     5069    1        CALL KVB$GET2NSYS(WSIZE,BUF$) ALTRET(ALT);

   5069   1 00000D  DBC7 0013                            LAB,B5   BUF$,AUTO
          1 00000F  DFC7 0018                            STB,B5   WSIZE+3,AUTO
          1 000011  CBC7 0015                            LAB,B4   WSIZE,AUTO
          1 000013  CFC7 0016                            STB,B4   WSIZE+1,AUTO
          1 000015  BBC7 0016                            LAB,B3   WSIZE+1,AUTO
          1 000017  CBF0 0200                            LAB,B4   512,IMO
          1 000019  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          1 00001C       003C                            DC       s:5081,PREL

      494     5070    1        KH_CLK = KH_CLKC;

   5070   1 00001D  AB80 0000 0000  00                   LAB,B2   KH_CLKC
          1 000020  2C00                                 LDV,R2   0
          1 000021  6C16                                 LDV,R6   22
          1 000022  BB87                                 LAB,B3   ,AUTO
          1 000023  3C0C                                 LDV,R3   12
          1 000024  0008                                 MMM

      495     5071    1        KH_CLK.UVAL = VBOUND(WRITE_FPT.BUF_)+1;

   5071   1 000025  ECC7 0004                            LDB,B6   @WRITE_FPT,AUTO
          1 000027  E846 0006                            LDR,R6   6,B6
          1 000029  6E01                                 ADV,R6   1
          1 00002A  EF47 000A                            STR,R6   KH_CLK+4,AUTO

      496     5072    1        BUF$->BUF_ENTRY.WSIZE = WSIZE;

PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:110  
   5072   1 00002C  DCC7 0013                            LDB,B5   BUF$,AUTO
          1 00002E  D847 0015                            LDR,R5   WSIZE,AUTO
          1 000030  DF05                                 STR,R5   ,B5

      497     5073    1        BUF$->BUF_ENTRY.DATA = VBASE(WRITE_FPT.BUF_)->FPT_ENTRY.DATA;

   5073   1 000031  DCC6 0007                            LDB,B5   7,B6
          1 000033  AB85                                 LAB,B2   ,B5
          1 000034  2C00                                 LDV,R2   0
          1 000035  E847 000A                            LDR,R6   KH_CLK+4,AUTO
          1 000037  BCC7 0013                            LDB,B3   BUF$,AUTO
          1 000039  3C02                                 LDV,R3   2
          1 00003A  0008                                 MMM

      498     5074    1        KH_CLK.UVAL = KH_CLK.UVAL-1;

   5074   1 00003B  88C7 000A                            DEC      KH_CLK+4,AUTO

      499     5075    1        KH_CLK.UID$ = BUF$;

   5075   1 00003D  CCC7 0013                            LDB,B4   BUF$,AUTO
          1 00003F  CFC7 0008                            STB,B4   KH_CLK+2,AUTO

      500     5076    1        KH_FLDWRTS = KH_FLDWRTS + 1;

   5076   1 000041  8A80 0000 0000  xsym                 INC      KH_FLDWRTS

   5076   1                              SET_CLK         null
      501     5077    1   SET_CLK:;
      502     5078    1        KH_CLK.CTBCTX$ = ADDR(NIL);

   5078   1 000044  EB80 0000 0000       SET_CLK         LAB,B6   0
          1 000047  EFC7 0006                            STB,B6   KH_CLK,AUTO

      503     5079    1        CALL KHC$CLOCK(KH_CLK) ALTRET(ALT);

   5079   1 000049  DBC7 0006                            LAB,B5   KH_CLK,AUTO
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:111  
          1 00004B  DFC7 0016                            STB,B5   WSIZE+1,AUTO
          1 00004D  BBC7 0016                            LAB,B3   WSIZE+1,AUTO
          1 00004F  CBF0 0100                            LAB,B4   256,IMO
          1 000051  E380 0000 0000  xent                 LNJ,B6   KHC$CLOCK
          1 000054       0004                            DC       s:5081,PREL

      504     5080    1        RETURN;

   5080   1 000055  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      505     5081    1   ALT: ALTRETURN;

   5081   1 000058  C380 0000 0000  xent ALT             LNJ,B4   X6A_AALT

      506     5082    1   KHA$RESETCLK: ENTRY(WRITE_FPT) ALTRET;

   5082   1 00005B  D380 0000 0000  xent KHA$RESETCLK    LNJ,B5   X6A_AUTO_1
          1 00005E       001A 0001                       DC       26,1

      507     5083
      508     5084    1        TCPTR$ = PINCRW(VBASE(WRITE_FPT.BUF_),-1);

   5084   1 000060  ECC7 0004                            LDB,B6   @WRITE_FPT,AUTO
          1 000062  8CC6 0007                            LDI      7,B6
          1 000064  8470 FFFF FFFF                       AID      -1,IMO
          1 000067  8D47 0011                            SDI      TPTR$,AUTO

      509     5085    1        KH_CLK = KH_CLKC;

   5085   1 000069  AB80 0000 0000  00                   LAB,B2   KH_CLKC
          1 00006C  2C00                                 LDV,R2   0
          1 00006D  6C16                                 LDV,R6   22
          1 00006E  BB87                                 LAB,B3   ,AUTO
          1 00006F  3C0C                                 LDV,R3   12
          1 000070  0008                                 MMM

      510     5086    1        KH_CLK.UID$ = TPTR$;
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:112  

   5086   1 000071  DCC7 0011                            LDB,B5   TPTR$,AUTO
          1 000073  DFC7 0008                            STB,B5   KH_CLK+2,AUTO

      511     5087    1        KH_CLK.UVAL = VBOUND(WRITE_FPT.BUF_);

   5087   1 000075  E846 0006                            LDR,R6   6,B6
          1 000077  EF47 000A                            STR,R6   KH_CLK+4,AUTO

      512     5088    1        GOTO SET_CLK;

   5088   1 000079  0FCB                                 B        s:5076,SPREL

      513     5089    1   KHA$RDCLK: ENTRY ALTRET;

   5089   1 00007A  D380 0000 0000  xent KHA$RDCLK       LNJ,B5   X6A_AUTO_1
          1 00007D       001A 0001                       DC       26,1

      514     5090    1        KH_CLK = KH_CLKC;

   5090   1 00007F  AB80 0000 0000  00                   LAB,B2   KH_CLKC
          1 000082  2C00                                 LDV,R2   0
          1 000083  6C16                                 LDV,R6   22
          1 000084  BB87                                 LAB,B3   ,AUTO
          1 000085  3C0C                                 LDV,R3   12
          1 000086  0008                                 MMM

      515     5091    1        KH_CLK.EXPINH = '0'B;

   5091   1 000087  8847 000C                            LBF,'0C00'X       KH_CLK+6,AUTO
   5091   1 000089       0C00

      516     5092    1        KH_CLK.SBR$ = ENTADDR(KHA$RDEVT);

   5092   1 00008A  EB80 0000 0000  xent                 LAB,B6   KHA$RDEVT
          1 00008D  EFC7 000E                            STB,B6   KH_CLK+8,AUTO

PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:113  
      517     5093    1        GOTO SET_CLK;

   5093   1 00008F  0F81 FFB4                            B        s:5076,PREL
      518     5094    1   END KHA$SETCLK;
      519     5095        %EOD;

PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:114  
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure KHA$SETCLK.
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:115  

 **** Variables and constants ****

  ****  Section 000 RoData KHA$SETCLK

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(176)   r     1 KH_CLKC

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @WRITE_FPT                13-0-0/w PTR         r     1 BUF$
     6-0-0/w STRC(176)   r     1 KH_CLK                    11-0-0/w PTR         r     1 TCPTR$
    11-0-0/w PTR         r     1 TPTR$                     *0-0-0/w STRC(288)   r     1 WRITE_FPT
    15-0-0/w UBIN(16)    r     1 WSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w SBIN(16)    r     1 KH_FLDWRTS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(16)    r     1 BUF_ENTRY                  0-0-0/w ASTR(0)     r     1 FPT_ENTRY


   Procedure KHA$SETCLK requires 145 words for executable code.
   Procedure KHA$SETCLK requires 26 words of local(AUTO) storage.
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:116  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:117  
          MINI XREF LISTING

ALT
      5081**LABEL    5069--CALLALT  5079--CALLALT
BUF$
      5058**DCL      5069<>CALL     5072>>ASSIGN   5073>>ASSIGN   5075>>ASSIGN
BUF_ENTRY.DATA
      5062**DCL      5073<<ASSIGN
BUF_ENTRY.WSIZE
      5061**DCL      5072<<ASSIGN
FPT_ENTRY.DATA
      5064**DCL      5073>>ASSIGN
KHA$CLKEVT
      5053**DCL-ENT  4882--DCLINIT
KHA$RDEVT
      5054**DCL-ENT  5092--ASSIGN
KHC$CLOCK
      5051**DCL-ENT  5079--CALL
KH_CLK
      4915**DCL      5070<<ASSIGN   5079<>CALL     5085<<ASSIGN   5090<<ASSIGN
KH_CLK.CTBCTX$
      4921**DCL      5078<<ASSIGN
KH_CLK.EXPINH
      5014**DCL      5091<<ASSIGN
KH_CLK.SBR$
      5032**DCL      5092<<ASSIGN
KH_CLK.UID
      4931**DCL      4932--REDEF    4933--REDEF
KH_CLK.UID$
      4932**DCL      5075<<ASSIGN   5086<<ASSIGN
KH_CLK.UVAL
      4938**DCL      5062--IMP-SIZ  5064--IMP-SIZ  5071<<ASSIGN   5073>>ASSIGN   5073>>ASSIGN   5074<<ASSIGN
      5074>>ASSIGN   5087<<ASSIGN
KH_CLKC
PL6.E3A0      #007=KHA$SETCLK File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:118  
      4765**DCL      5070>>ASSIGN   5085>>ASSIGN   5090>>ASSIGN
KH_CLKC.UID
      4781**DCL      4782--REDEF    4783--REDEF
KH_FLDWRTS
      5066**DCL      5076<<ASSIGN   5076>>ASSIGN
KVB$GET2NSYS
      5052**DCL-ENT  5069--CALL
SET_CLK
      5076**LABEL    5088--GOTO     5093--GOTO
TCPTR$
      5057**DCL      5084<<ASSIGN
TPTR$
      5056**DCL      5057--REDEF    5086>>ASSIGN
WRITE_FPT
      4733**DCL        23--PROC     5082--ENTRY
WRITE_FPT.BUF_
      4735**DCL      5068>>ASSIGN   5071>>ASSIGN   5073>>ASSIGN   5084>>ASSIGN   5087>>ASSIGN
WSIZE
      5059**DCL      5068<<ASSIGN   5069<>CALL     5072>>ASSIGN

PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:119  
      520        1        /*T***********************************************************/
      521        2        /*T*                                                         */
      522        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      523        4        /*T*                                                         */
      524        5        /*T***********************************************************/
      525        6        /*F* NAME: KHA$CLKEVT
      526        7             PURPOSE: This procedure is entered when a clock service request gos
      527        8                      off.  This routine then attempts another M$WRITE with the
      528        9                      buffer in KH$EXP.UID$.
      529       10             DESCRIPTION: KHA$SETCLK set up the buffer in UID$ to contain the
      530       11                          data that we are trying to write to Node Admin.  We
      531       12                          just take that information and stuff into a FPT_WRITE
      532       13                          and call M$WRITE.
      533       14             CALL: None.  The entry is set up on the call to KHC$CLOCK.
      534       15             INPUT: KH$EXP - the structure from clock services.
      535       16             OUTPUT: The M$WRITE which was attempted before is tried again.
      536       17        */
      537       18        KHA$CLKEVT: PROC(KH$EXP);
      538       19        /**/
      539       20        %INCLUDE B_ERRORS_C;
      540     1147        %INCLUDE LCP_6;
      541     5426        %INCLUDE KH$CLK;
      542     5796        %INCLUDE KH_CLKFNC_E;
      543     5841        /**/
      544     5842        %KH$EXP (FPTN=KH$EXP,STCLASS=PARAM);
      545     5905        /**/
      546     5906        %G$TCB;
      547     5927        %G$EXCFR;
      548     6309        %M$DCB(DCBN=BSDDCB,STCLASS=BASED);
      549     6360        %FPT_WRITE (FPTN=KHA_WRITE,STCLASS=SYMREF);
      550     6384        %FPT_READ (FPTN=KHA_READ,STCLASS=SYMREF);
      551     6410        /**/
      552     6411    1   DCL KHA$RDCLK ENTRY ALTRET;
      553     6412    1   DCL KHA$RESETCLK ENTRY(1) ALTRET;
      554     6413    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      555     6414        /**/
      556     6415    1   DCL WSIZE UBIN;
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:120  
      557     6416    1   DCL KH_NA_DCB# UBIN SYMREF;
      558     6417    1   DCL KH_FLDWRTS SBIN SYMREF;
      559     6418    1   DCL G$TCB$ PTR SYMREF;
      560     6419    1   DCL ONEWORD UBIN BASED;
      561     6420        /**/
      562     6421        %EJECT;
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:121  
      563     6422    1        VBOUND(KHA_WRITE.BUF_) = KH$EXP.UVAL;
      564     6423    1        VBASE(KHA_WRITE.BUF_) = PINCRW(KH$EXP.UID$,1);
      565     6424    1        CALL M$WRITE(KHA_WRITE) WHENRETURN
      566     6425    2        DO;
      567     6426    2             KH_FLDWRTS = KH_FLDWRTS - 1;
      568     6427    2             CALL KVB$RLS2NSYS(KH$EXP.UID$->ONEWORD) ALTRET(ALT);
      569     6428    2           END;                            /* WHENRETURN */
      570     6429    1        WHENALTRETURN
      571     6430    2        DO;
      572     6431    2             CALL KHA$RESETCLK(KHA_WRITE) ALTRET(ALT);
      573     6432    2           END;                            /* WHENALTRETURN */
      574     6433    1        RETURN;
      575     6434    1   ALT: ;
      576     6435             /*N* CALL SCREECH ????? */
      577     6436    1        RETURN;
      578     6437    1   KHA$RDEVT: ENTRY;
      579     6438    1        CALL M$READ (KHA_READ)
      580     6439    2        WHENALTRETURN DO;
      581     6440    2             IF G$TCB$->G$TCB.ALT$->G$EXCFR.TRLR.ERR.ERR# ~= %E$XTRARD
      582     6441    2             THEN
      583     6442    2                  CALL KHA$RDCLK;
      584     6443    2           END;
      585     6444
      586     6445    1   END KHA$CLKEVT;

PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:122  
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KHA$CLKEVT.

   Procedure KHA$CLKEVT requires 91 words for executable code.
   Procedure KHA$CLKEVT requires 10 words of local(AUTO) storage.

    No errors detected in file KHA$SUBS.:E05TSI    .

PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:123  

 Object Unit name= KHA$CLKEVT                                 File name= KHA$SUBS.:E05TOU
 UTS= JUL 30 '97 00:27:31.40 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none    91     5B  KHA$CLKEVT
    1  RoData even  none     2      2  KHA$CLKEVT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  KHA$CLKEVT
     0     3A                  yes      Std        0  KHA$RDEVT

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 KVB$RLS2NSYS
 yes     yes           Std       1 KHA$RESETCLK
 yes     yes           Std       0 KHA$RDCLK
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     KHA_WRITE                             KHA_READ                              KH_FLDWRTS
     G$TCB$                           r    G$ROS$
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:124  


      520        1        /*T***********************************************************/
      521        2        /*T*                                                         */
      522        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      523        4        /*T*                                                         */
      524        5        /*T***********************************************************/
      525        6        /*F* NAME: KHA$CLKEVT
      526        7             PURPOSE: This procedure is entered when a clock service request gos
      527        8                      off.  This routine then attempts another M$WRITE with the
      528        9                      buffer in KH$EXP.UID$.
      529       10             DESCRIPTION: KHA$SETCLK set up the buffer in UID$ to contain the
      530       11                          data that we are trying to write to Node Admin.  We
      531       12                          just take that information and stuff into a FPT_WRITE
      532       13                          and call M$WRITE.
      533       14             CALL: None.  The entry is set up on the call to KHC$CLOCK.
      534       15             INPUT: KH$EXP - the structure from clock services.
      535       16             OUTPUT: The M$WRITE which was attempted before is tried again.
      536       17        */
      537       18        KHA$CLKEVT: PROC(KH$EXP);

     18   0 000000  D380 0000 0000  xent KHA$CLKEVT      LNJ,B5   X6A_AUTO_1
          0 000003       000A 0001                       DC       10,1

      538       19        /**/
      539       20        %INCLUDE B_ERRORS_C;
      540     1147        %INCLUDE LCP_6;
      541     5426        %INCLUDE KH$CLK;
      542     5796        %INCLUDE KH_CLKFNC_E;
      543     5841        /**/
      544     5842        %KH$EXP (FPTN=KH$EXP,STCLASS=PARAM);
      545     5905        /**/
      546     5906        %G$TCB;
      547     5927        %G$EXCFR;
      548     6309        %M$DCB(DCBN=BSDDCB,STCLASS=BASED);
      549     6360        %FPT_WRITE (FPTN=KHA_WRITE,STCLASS=SYMREF);
      550     6384        %FPT_READ (FPTN=KHA_READ,STCLASS=SYMREF);
      551     6410        /**/
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:125  
      552     6411    1   DCL KHA$RDCLK ENTRY ALTRET;
      553     6412    1   DCL KHA$RESETCLK ENTRY(1) ALTRET;
      554     6413    1   DCL KVB$RLS2NSYS ENTRY(2) ALTRET;
      555     6414        /**/
      556     6415    1   DCL WSIZE UBIN;
      557     6416    1   DCL KH_NA_DCB# UBIN SYMREF;
      558     6417    1   DCL KH_FLDWRTS SBIN SYMREF;
      559     6418    1   DCL G$TCB$ PTR SYMREF;
      560     6419    1   DCL ONEWORD UBIN BASED;
      561     6420        /**/
      562     6421        %EJECT;
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:126  
      563     6422    1        VBOUND(KHA_WRITE.BUF_) = KH$EXP.UVAL;

   6422   0 000005  ECC7 0004                            LDB,B6   @KH$EXP,AUTO
          0 000007  E846 0002                            LDR,R6   2,B6
          0 000009  EF00 0000 0006  xsym                 STR,R6   KHA_WRITE+6

      564     6423    1        VBASE(KHA_WRITE.BUF_) = PINCRW(KH$EXP.UID$,1);

   6423   0 00000C  DC86                                 LDB,B5   ,B6
          0 00000D  CBC5 0001                            LAB,B4   1,B5
          0 00000F  CF80 0000 0007  xsym                 STB,B4   KHA_WRITE+7

      565     6424    1        CALL M$WRITE(KHA_WRITE) WHENRETURN

   6424   0 000012  BB80 0000 0000  xsym                 LAB,B3   KHA_WRITE
          0 000015  B870 1543                            LDR,R3   5443,IMO
          0 000017  0001                                 MCL
          0 000018       0013                            DC       s:6431,PREL

      566     6425    2        DO;

      567     6426    2             KH_FLDWRTS = KH_FLDWRTS - 1;

   6426   0 000019  8880 0000 0000  xsym                 DEC      KH_FLDWRTS

      568     6427    2             CALL KVB$RLS2NSYS(KH$EXP.UID$->ONEWORD) ALTRET(ALT);

   6427   0 00001C  ECC7 0004                            LDB,B6   @KH$EXP,AUTO
          0 00001E  DC86                                 LDB,B5   ,B6
          0 00001F  DFC7 0008                            STB,B5   @KH$EXP+4,AUTO
          0 000021  BBC7 0008                            LAB,B3   @KH$EXP+4,AUTO
          0 000023  CBF0 0100                            LAB,B4   256,IMO
          0 000025  E380 0000 0000  xent                 LNJ,B6   KVB$RLS2NSYS
          0 000028       000F                            DC       s:6431,PREL

      569     6428    2           END;                            /* WHENRETURN */

PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:127  
   6428   0 000029  0F81 000A                            B        s:6433,PREL

      570     6429    1        WHENALTRETURN
      571     6430    2        DO;

      572     6431    2             CALL KHA$RESETCLK(KHA_WRITE) ALTRET(ALT);

   6431   0 00002B  BB80 0000 0000  01                   LAB,B3   0
          0 00002E  CBF0 0100                            LAB,B4   256,IMO
          0 000030  E380 0000 0000  xent                 LNJ,B6   KHA$RESETCLK
          0 000033       0004                            DC       s:6431,PREL

      573     6432    2           END;                            /* WHENALTRETURN */

      574     6433    1        RETURN;

   6433   0 000034  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

   6431   0                              ALT             null
      575     6434    1   ALT: ;
      576     6435             /*N* CALL SCREECH ????? */
      577     6436    1        RETURN;

   6436   0 000037  C380 0000 0000  xent ALT             LNJ,B4   X6A_ARET

      578     6437    1   KHA$RDEVT: ENTRY;

   6437   0 00003A  D380 0000 0000  xent KHA$RDEVT       LNJ,B5   X6A_AUTO_1
          0 00003D       000A 0001                       DC       10,1

      579     6438    1        CALL M$READ (KHA_READ)

   6438   0 00003F  BB80 0000 0000  xsym                 LAB,B3   KHA_READ
          0 000042  B870 1542                            LDR,R3   5442,IMO
          0 000044  0001                                 MCL
          0 000045       0003                            DC       s:6440,PREL
          0 000046  0F81 0011                            B        s:6445,PREL
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:128  

      580     6439    2        WHENALTRETURN DO;

      581     6440    2             IF G$TCB$->G$TCB.ALT$->G$EXCFR.TRLR.ERR.ERR# ~= %E$XTRARD

   6440   0 000048  EC80 0000 0000  xsym                 LDB,B6   G$TCB$
          0 00004B  DC86                                 LDB,B5   ,B6
          0 00004C  E845 002C                            LDR,R6   44,B5
          0 00004E  6043                                 SOR,R6   3
          0 00004F  6D13                                 CMV,R6   19
          0 000050  0901 0007                            BE       s:6445,PREL

      582     6441    2             THEN
      583     6442    2                  CALL KHA$RDCLK;

   6442   0 000052  CBF0 0000                            LAB,B4   0,IMO
          0 000054  E380 0000 0000  xent                 LNJ,B6   KHA$RDCLK
          0 000057       0001                            DC       s:6445,PREL

      584     6443    2           END;

      585     6444
      586     6445    1   END KHA$CLKEVT;

   6445   0 000058  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:129  
--  Include file information  --

   KH_CLKFNC_E.:E05TOU  is referenced.
   KH$CLK.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
      No diagnostics issued in procedure KHA$CLKEVT.
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:130  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @KH$EXP                   *0-0-0/w STRC(96)    r     1 KH$EXP

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$TCB$                     0-0-0/w STRC(288)   r     1 KHA_READ
     0-0-0/w STRC(288)   r     1 KHA_WRITE                  0-0-0/w SBIN(16)    r     1 KH_FLDWRTS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w ASTR(808)   r     1 BSDDCB                     0-0-0/w STRC(736)   r     1 G$EXCFR
     0-0-0/w STRC(96)    r     1 G$TCB                      0-0-0/w UBIN(16)    r     1 ONEWORD


   Procedure KHA$CLKEVT requires 91 words for executable code.
   Procedure KHA$CLKEVT requires 10 words of local(AUTO) storage.

    No errors detected in file KHA$SUBS.:E05TSI    .
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:131  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:132  
          MINI XREF LISTING

ALT
      6431**LABEL    6427--CALLALT  6431--CALLALT
BSDDCB.DCBNAME.L
      6356**DCL      6356--IMP-SIZ
BSDDCB.EOMCHAR
      6347**DCL      6347--REDEF    6348--REDEF
BSDDCB.FLDID
      6346**DCL      6346--REDEF
BSDDCB.RES
      6341**DCL      6342--REDEF
G$EXCFR.P$$
      5996**DCL      5996--REDEF    5996--REDEF
G$EXCFR.PREVSZ
      5946**DCL      5946--REDEF
G$EXCFR.TRLR.ERR.ERR#
      6303**DCL      6440>>IF
G$EXCFR.TRLR.EVID
      6233**DCL      6251--REDEF    6259--REDEF    6259--REDEF
G$EXCFR.TRLR.SUBC
      6210**DCL      6210--REDEF    6228--REDEF    6232--REDEF    6232--REDEF
G$TCB.ALT$
      5924**DCL      6440>>IF
G$TCB$
      6418**DCL      6440>>IF
KH$EXP
      5856**DCL        18--PROC
KH$EXP.UID
      5862**DCL      5863--REDEF
KH$EXP.UID$
      5863**DCL      6423>>ASSIGN   6427>>CALL
KH$EXP.UVAL
      5867**DCL      6422>>ASSIGN
PL6.E3A0      #008=KHA$CLKEVT File=KHA$SUBS.:E05TSI                              WED 07/30/97 00:27 Page:133  
KHA$RDCLK
      6411**DCL-ENT  6442--CALL
KHA$RESETCLK
      6412**DCL-ENT  6431--CALL
KHA_READ
      6397**DCL      6438<>CALL
KHA_WRITE
      6373**DCL      6424<>CALL     6431<>CALL
KHA_WRITE.BUF_
      6375**DCL      6422<<ASSIGN   6423<<ASSIGN
KH_FLDWRTS
      6417**DCL      6426<<ASSIGN   6426>>ASSIGN
KVB$RLS2NSYS
      6413**DCL-ENT  6427--CALL
M$READ
      5407**DCL-ENT  6438--CALL
M$WRITE
      5408**DCL-ENT  6424--CALL
ONEWORD
      6419**DCL      6427<>CALL
