VERSION E05

PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:1    
        1        1        /*M* IDC$COPY - COPY FILES TO LABELED PORTION OF PO TAPE FOR DEF */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8        /**/
        9        9        IDC$COPY: PROC(DCB#,FPAR,FIDBLK);
       10       10        /**/
       11       11    1   DCL DCB# SBIN;
       12       12    1   DCL ID_BLOCKFLG BIT(1) SYMREF ALIGNED;
       13       13    1   DCL 1 FPAR,
       14       14    1         2 BOUND UBIN(20) UNAL,
       15       15    1         2 * BIT(16),
       16       16    1         2 PTR$ PTR;
       17       17        %INCLUDE ID_DATA_C;
       18       78        %FIDBLK (NAME=FIDBLK,STCLASS="");
       19      130        /**/
       20      131    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
       21      132    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       22      133    1   DCL IDD$GETSEG ENTRY(2) ALTRET;
       23      134    1   DCL IDE$FLUSH ENTRY;
       24      135    1   DCL IDE$FMSECON ENTRY;
       25      136    1   DCL IDE$FMSECOFF ENTRY;
       26      137        /**/
       27      138        %INCLUDE ID_PERR_C;
       28      180        %INCLUDE B_ERRORS_C;
       29     1307    1   DCL M$PO DCB;
       30     1308    1   DCL M$LO DCB;
       31     1309    1   DCL FPAR$ PTR;
       32     1310        %MACRO ERRCODE (NAME=ERRCODE,FCG#='1104'O,MID#='03'O,CODE#=0,SEV#=0);
       33     1311        DCL 1 NAME CONSTANT ALIGNED,
       34     1312              2 FCG BIT(12) INIT(FCG#),
       35     1313              2 MID BIT(6) INIT(MID#),
       36     1314              2 CODE UBIN(15) UNAL INIT(CODE#),
       37     1315              2 SEV UBIN(3) UNAL INIT(SEV#);
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:2    
       38     1316        %MEND;
       39     1317        %ERRCODE (NAME=NO_BUFFER_CODE,CODE#=%E$NO_BUFFER);
       40     1324        /*E*  ERROR:  IDC-E$NO_BUFFER-0
       41     1325              DESCRIPTION:  An altret has occurred from the M$GDS to get
       42     1326              buffer space.
       43     1327              MESSAGE: Insufficient buffer space to copy file %FN.
       44     1328        */
       45     1329        %ERRCODE (NAME=OPEN_ERROR_CODE,CODE#=%E$PO_OPN);
       46     1336        /*E*  ERROR:  IDC-E$PO_OPN-0
       47     1337              DESCRIPTION:  Alternate return from M$OPEN on attempt to open
       48     1338                            M$PO.
       49     1339              MESSAGE: Error opening M$PO.
       50     1340        */
       51     1341        %ERRCODE (NAME=IO_ERROR_CODE,CODE#=%E$DEF_IO_ERR);
       52     1348        /*E*  ERROR:  IDC-E$DEF_IO_ERR-0
       53     1349              DESCRIPTION:  I/O error writing po tape.
       54     1350              MESSAGE: I/O error on %DC.
       55     1351        */
       56     1352        %ERRCODE (NAME=VERIFY_CODE,CODE#=%E$VERIFY);
       57     1359        /*E*    ERROR:   IDC-E$VERIFY
       58     1360                MESSAGE: Verification error for %UF
       59     1361                                                                           */
       60     1362        %INCLUDE F$DCB;
       61     1411        %INCLUDE FM$FIT;
       62     1632        %CODE03;
       63     1639        %INCLUDE CP_6;
       64     1720        %INCLUDE CP_6_SUBS;
       65     2260        %FPT_OPEN (DCB=M$PO,ASN=TAPE,BLOCKED=YES,BLKL=16384,SN=ID_SNLIST,
       66     2261                EXPIRE=NEVER,PASS=BLANKS,
       67     2262                   SPANNED=YES);
       68     2371    1   DCL BLANKS CHAR(8) CONSTANT INIT(' ');
       69     2372    1   DCL 1 IOBUF ALIGNED STATIC,
       70     2373    1         2 BOUND UBIN(20) UNAL,
       71     2374    1         2 * BIT(16) UNAL,
       72     2375    1         2 P$ PTR;
       73     2376        %FPT_READ (KEYR=YES,WAIT=YES,FULL=YES);
       74     2415        %FPT_WRITE (DCB=M$PO,NEWKEY=YES,WAIT=YES,FULL=YES);
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:3    
       75     2446        %FPT_READ (FPTN=FPT_RDPO,DCB=M$PO,WAIT=YES,FULL=YES);
       76     2485        %B$TCB;
       77     2488        %B$ALT;
       78     2496    1   DCL B$TCB$ PTR SYMREF;
       79     2497    1   DCL ICODE BIT(36);
       80     2498    1   DCL MCODE BIT(36);
       81     2499    1   DCL EDCB# UBIN;
       82     2500    1   DCL I SBIN;
       83     2501    1   DCL ERRCODE SBIN;
       84     2502    1   DCL ORG SBIN;
       85     2503    1   DCL 1 REQUIRED SYMREF,
       86     2504    1         2 NUMBER UBIN,
       87     2505    1         2 PROCESS(0:0),
       88     2506    1           3 NAME CHAR(31),
       89     2507    1           3 FOUND BIT(1);
       90     2508    1   DCL 1 ID_SNLIST SYMREF ALIGNED,
       91     2509    1         2 N SBIN,
       92     2510    1         2 C(0:8) CHAR(6) UNAL;
       93     2511        %FPT_CLOSE (DCB=M$PO);
       94     2553    1   DCL 1 ID_VERISEG ALIGNED SYMREF,
       95     2554    1         2 BOUND UBIN(20) UNAL,
       96     2555    1         2 * BIT(16) UNAL,
       97     2556    1         2 P$ PTR;
       98     2557    1   DCL RECSIZE SBIN;
       99     2558    1   DCL FILEREC CHAR(RECSIZE) BASED(IOBUF.P$);
      100     2559    1   DCL TAPEREC CHAR(RECSIZE) BASED(ID_VERISEG.P$);
      101     2560    1   DCL UBINWORD UBIN WORD BASED;
      102     2561    1   DCL ID_VERIFLG BIT(1) ALIGNED SYMREF;
      103     2562        /**/
      104     2563        /**/
      105     2564    1           FPAR$=FPAR.PTR$;
      106     2565    1           CALL XSF$LOCCODP(FPAR$,3);
      107     2566    1           IOBUF='0'B;
      108     2567    1           IF ID_BLOCKFLG THEN
      109     2568    1              I=1024;
      110     2569    1           ELSE
      111     2570    1              I=(FPAR$->CODE03.RCSZ+1)*1024;
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:4    
      112     2571    1           IF ID_VERISEG.BOUND=0 THEN ID_VERISEG='0'B;
      113     2572    1           CALL IDD$GETSEG(IOBUF,I) ALTRET(NO_BUFFER);
      114     2573    1           IF ID_VERIFLG THEN
      115     2574    1              CALL IDD$GETSEG(ID_VERISEG,I) ALTRET(NO_BUFFER);
      116     2575    1           FPT_OPEN.IFPARAM_=FPAR;
      117     2576    1           FPT_OPEN.V.COMP# = DCBADDR(DCB#)->F$DCB.COMP;
      118     2577    1           IF ADDR(FIDBLK)=ADDR(NIL) OR FIDBLK.ASFILE.L=0 THEN
      119     2578    1              FPT_OPEN.NAME_=VECTOR(DCBADDR(DCB#)->F$DCB.NAME);
      120     2579    1           ELSE
      121     2580    1              FPT_OPEN.NAME_=VECTOR(FIDBLK.ASFILE);
      122     2581    2           IF ID_BLOCKFLG THEN DO;
      123     2582    2              FPT_OPEN.V.ACS#=%BLOCK#;
      124     2583    2              FPT_OPEN.V.ORG#=%RESTRICT#;
      125     2584    2              END;
      126     2585    2           ELSE DO;
      127     2586    2              FPT_OPEN.V.ACS#=%SEQUEN#;
      128     2587    2              FPT_OPEN.V.ORG#=0;
      129     2588    2              END;
      130     2589    1           CALL IDE$FMSECON;
      131     2590    1           CALL M$OPEN(FPT_OPEN) ALTRET(BAD_OPEN);
      132     2591    1           CALL IDE$FMSECOFF;
      133     2592    1           FPT_READ.V.DCB#=DCB#;
      134     2593    1           FPT_READ.BUF_=IOBUF;
      135     2594    1           FPT_WRITE.BUF_=IOBUF;
      136     2595    1           FPT_RDPO.BUF_=ID_VERISEG;
      137     2596    1           FPT_READ.KEY_=FPAR;
      138     2597    1           FPT_WRITE.KEY_=FPAR;
      139     2598    2           DO WHILE ('1'B);
      140     2599    2              CALL M$READ(FPT_READ) ALTRET(ALL_DONE);
      141     2600    2              IF ID_BLOCKFLG THEN          /* SAVE BLOCK NUMBER                  */
      142     2601    2                 IOBUF.P$->UBINWORD=FPAR.PTR$->UBINWORD;
      143     2602    3              IF ID_VERIFLG THEN DO;
      144     2603    3                 RECSIZE=DCBADDR(DCB#)->F$DCB.ARS;
      145     2604    3                 CALL M$READ(FPT_RDPO) ALTRET(VERIFY_ERR);
      146     2605    3                 IF TAPEREC~=FILEREC OR DCBADDR(DCBNUM(M$PO))->F$DCB.ARS~=RECSIZE THEN
              2605                          GOTO VERIFY_ERR;
      147     2606    3                 END;
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:5    
      148     2607    3              ELSE DO;
      149     2608    3                 IF DCBADDR(DCB#)->F$DCB.ARS=0 THEN
      150     2609    3                    FPT_WRITE.BUF_=VECTOR(NIL);
      151     2610    4                 ELSE DO;
      152     2611    4                    FPT_WRITE.BUF_=IOBUF;
      153     2612    4                    FPT_WRITE.BUF_.BOUND=DCBADDR(DCB#)->F$DCB.ARS-1;
      154     2613    4                    END;
      155     2614    3                 FPT_WRITE.V.DVBYTE=DCBADDR(DCB#)->F$DCB.DVBYTE;
      156     2615    3                 CALL M$WRITE(FPT_WRITE) ALTRET(IOERR);
      157     2616    3                 END;
      158     2617    2              END;
      159     2618    1   ALL_DONE:
      160     2619    1           ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;
      161     2620    1           ORG=DCBADDR(DCB#)->F$DCB.ORG;
      162     2621    1           IF ERRCODE=%E$DI AND (ORG=%RANDOM# OR ORG=%IDS#) THEN CALL M$RETRY;
      163     2622    1           IF ERRCODE~=%E$EOF THEN GOTO IOERR;
      164     2623    1           CALL M$CLOSE(FPT_CLOSE);
      165     2624    1           CALL IDD$GETSEG(IOBUF,0);
      166     2625    1           CALL IDD$GETSEG(ID_VERISEG,0);
      167     2626    2           DO I=1 TO REQUIRED.NUMBER;
      168     2627    2              IF REQUIRED.PROCESS.NAME(I)=DCBADDR(DCBNUM(M$PO))->F$DCB.NAME.C THEN
      169     2628    2                 REQUIRED.PROCESS.FOUND(I)='1'B;
      170     2629    2              END;
      171     2630    1           RETURN;
      172     2631    1   NO_BUFFER:
      173     2632    1           CALL XUR$ERRMSG(NO_BUFFER_CODE);
      174     2633    1           CALL M$XXX;
      175     2634    1   BAD_OPEN:
      176     2635    1           ICODE=OPEN_ERROR_CODE;
      177     2636    1           GOTO ERR_ABORT;
      178     2637    1   VERIFY_ERR: ;
      179     2638    1           ICODE=VERIFY_CODE;
      180     2639    1           GOTO ERR_ABORT;
      181     2640    1   IOERR:
      182     2641    1           ICODE=IO_ERROR_CODE;
      183     2642    1   ERR_ABORT:
      184     2643    1           MCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:6    
      185     2644    1           EDCB#=B$TCB$->B$TCB.ALT$->B$ALT.DCB#;
      186     2645    1           CALL IDE$FLUSH;
      187     2646    1           CALL XUR$ERRMSG(ICODE,EDCB#);
      188     2647    1           CALL XUR$ERRMSG(MCODE,EDCB#);
      189     2648    1           CALL M$XXX;
      190     2649    1   END IDC$COPY;

PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:7    
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   ID_PERR_C.:E05TOU  is referenced.
   ID_DATA_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IDC$COPY.

   Procedure IDC$COPY requires 295 words for executable code.
   Procedure IDC$COPY requires 16 words of local(AUTO) storage.

    No errors detected in file IDC$COPY.:E05TSI    .

PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:8    

 Object Unit name= IDC$COPY                                   File name= IDC$COPY.:E05TOU
 UTS= JUL 29 '97 22:28:52.00 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$PO
    1   DCB   even  none     0      0  M$LO
    2  RoData even  UTS      6      6  IDC$COPY
    3   DCB   even  none     0      0  M$UC
    4   Data  even  none   130    202  IDC$COPY
    5   Proc  even  none   295    447  IDC$COPY
    6  RoData even  none    13     15  IDC$COPY

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     5      0   yes            yes      Std        3  IDC$COPY

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 XSF$LOCCODP
 yes     yes           Std       2 IDD$GETSEG
         yes           Std       0 IDE$FMSECON
         yes           Std       0 IDE$FLUSH
         yes           Std       0 IDE$FMSECOFF
 yes     yes           Std       7 XUR$ERRMSG
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:9    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ID_BLOCKFLG                           M$PO                                  M$LO
     M$UC                                  B$TCB$                                REQUIRED
     ID_SNLIST                             ID_VERISEG                            ID_VERIFLG
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID                                 NULLSID                               ROSID
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:10   


        1        1        /*M* IDC$COPY - COPY FILES TO LABELED PORTION OF PO TAPE FOR DEF */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8        /**/
        9        9        IDC$COPY: PROC(DCB#,FPAR,FIDBLK);

      9  5 000000   000000 700200 xent  IDC$COPY     TSX0  ! X66_AUTO_3
         5 000001   000020 000003                    ZERO    16,3

       10       10        /**/
       11       11    1   DCL DCB# SBIN;
       12       12    1   DCL ID_BLOCKFLG BIT(1) SYMREF ALIGNED;
       13       13    1   DCL 1 FPAR,
       14       14    1         2 BOUND UBIN(20) UNAL,
       15       15    1         2 * BIT(16),
       16       16    1         2 PTR$ PTR;
       17       17        %INCLUDE ID_DATA_C;
       18       78        %FIDBLK (NAME=FIDBLK,STCLASS="");
       19      130        /**/
       20      131    1   DCL XSF$LOCCODP ENTRY(2) ALTRET;
       21      132    1   DCL XUR$ERRMSG ENTRY(7) ALTRET;
       22      133    1   DCL IDD$GETSEG ENTRY(2) ALTRET;
       23      134    1   DCL IDE$FLUSH ENTRY;
       24      135    1   DCL IDE$FMSECON ENTRY;
       25      136    1   DCL IDE$FMSECOFF ENTRY;
       26      137        /**/
       27      138        %INCLUDE ID_PERR_C;
       28      180        %INCLUDE B_ERRORS_C;
       29     1307    1   DCL M$PO DCB;
       30     1308    1   DCL M$LO DCB;
       31     1309    1   DCL FPAR$ PTR;
       32     1310        %MACRO ERRCODE (NAME=ERRCODE,FCG#='1104'O,MID#='03'O,CODE#=0,SEV#=0);
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:11   
       33     1311        DCL 1 NAME CONSTANT ALIGNED,
       34     1312              2 FCG BIT(12) INIT(FCG#),
       35     1313              2 MID BIT(6) INIT(MID#),
       36     1314              2 CODE UBIN(15) UNAL INIT(CODE#),
       37     1315              2 SEV UBIN(3) UNAL INIT(SEV#);
       38     1316        %MEND;
       39     1317        %ERRCODE (NAME=NO_BUFFER_CODE,CODE#=%E$NO_BUFFER);
       40     1324        /*E*  ERROR:  IDC-E$NO_BUFFER-0
       41     1325              DESCRIPTION:  An altret has occurred from the M$GDS to get
       42     1326              buffer space.
       43     1327              MESSAGE: Insufficient buffer space to copy file %FN.
       44     1328        */
       45     1329        %ERRCODE (NAME=OPEN_ERROR_CODE,CODE#=%E$PO_OPN);
       46     1336        /*E*  ERROR:  IDC-E$PO_OPN-0
       47     1337              DESCRIPTION:  Alternate return from M$OPEN on attempt to open
       48     1338                            M$PO.
       49     1339              MESSAGE: Error opening M$PO.
       50     1340        */
       51     1341        %ERRCODE (NAME=IO_ERROR_CODE,CODE#=%E$DEF_IO_ERR);
       52     1348        /*E*  ERROR:  IDC-E$DEF_IO_ERR-0
       53     1349              DESCRIPTION:  I/O error writing po tape.
       54     1350              MESSAGE: I/O error on %DC.
       55     1351        */
       56     1352        %ERRCODE (NAME=VERIFY_CODE,CODE#=%E$VERIFY);
       57     1359        /*E*    ERROR:   IDC-E$VERIFY
       58     1360                MESSAGE: Verification error for %UF
       59     1361                                                                           */
       60     1362        %INCLUDE F$DCB;
       61     1411        %INCLUDE FM$FIT;
       62     1632        %CODE03;
       63     1639        %INCLUDE CP_6;
       64     1720        %INCLUDE CP_6_SUBS;
       65     2260        %FPT_OPEN (DCB=M$PO,ASN=TAPE,BLOCKED=YES,BLKL=16384,SN=ID_SNLIST,
       66     2261                EXPIRE=NEVER,PASS=BLANKS,
       67     2262                   SPANNED=YES);
       68     2371    1   DCL BLANKS CHAR(8) CONSTANT INIT(' ');
       69     2372    1   DCL 1 IOBUF ALIGNED STATIC,
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:12   
       70     2373    1         2 BOUND UBIN(20) UNAL,
       71     2374    1         2 * BIT(16) UNAL,
       72     2375    1         2 P$ PTR;
       73     2376        %FPT_READ (KEYR=YES,WAIT=YES,FULL=YES);
       74     2415        %FPT_WRITE (DCB=M$PO,NEWKEY=YES,WAIT=YES,FULL=YES);
       75     2446        %FPT_READ (FPTN=FPT_RDPO,DCB=M$PO,WAIT=YES,FULL=YES);
       76     2485        %B$TCB;
       77     2488        %B$ALT;
       78     2496    1   DCL B$TCB$ PTR SYMREF;
       79     2497    1   DCL ICODE BIT(36);
       80     2498    1   DCL MCODE BIT(36);
       81     2499    1   DCL EDCB# UBIN;
       82     2500    1   DCL I SBIN;
       83     2501    1   DCL ERRCODE SBIN;
       84     2502    1   DCL ORG SBIN;
       85     2503    1   DCL 1 REQUIRED SYMREF,
       86     2504    1         2 NUMBER UBIN,
       87     2505    1         2 PROCESS(0:0),
       88     2506    1           3 NAME CHAR(31),
       89     2507    1           3 FOUND BIT(1);
       90     2508    1   DCL 1 ID_SNLIST SYMREF ALIGNED,
       91     2509    1         2 N SBIN,
       92     2510    1         2 C(0:8) CHAR(6) UNAL;
       93     2511        %FPT_CLOSE (DCB=M$PO);
       94     2553    1   DCL 1 ID_VERISEG ALIGNED SYMREF,
       95     2554    1         2 BOUND UBIN(20) UNAL,
       96     2555    1         2 * BIT(16) UNAL,
       97     2556    1         2 P$ PTR;
       98     2557    1   DCL RECSIZE SBIN;
       99     2558    1   DCL FILEREC CHAR(RECSIZE) BASED(IOBUF.P$);
      100     2559    1   DCL TAPEREC CHAR(RECSIZE) BASED(ID_VERISEG.P$);
      101     2560    1   DCL UBINWORD UBIN WORD BASED;
      102     2561    1   DCL ID_VERIFLG BIT(1) ALIGNED SYMREF;
      103     2562        /**/
      104     2563        /**/
      105     2564    1           FPAR$=FPAR.PTR$;

PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:13   
   2564  5 000002   200004 470500                    LDP0    @FPAR,,AUTO
         5 000003   000001 236100                    LDQ     1,,PR0
         5 000004   200006 756100                    STQ     FPAR$,,AUTO

      106     2565    1           CALL XSF$LOCCODP(FPAR$,3);

   2565  5 000005   000000 236000 6                  LDQ     0
         5 000006   200017 756100                    STQ     RECSIZE+2,,AUTO
         5 000007   200006 631500                    EPPR1   FPAR$,,AUTO
         5 000010   200016 451500                    STP1    RECSIZE+1,,AUTO
         5 000011   200016 630500                    EPPR0   RECSIZE+1,,AUTO
         5 000012   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000013   000000 701000 xent               TSX1    XSF$LOCCODP
         5 000014   000000 011000                    NOP     0

      107     2566    1           IOBUF='0'B;

   2566  5 000015   000000 235003                    LDA     0,DU
         5 000016   000000 236003                    LDQ     0,DU
         5 000017   000072 757000 4                  STAQ    IOBUF

      108     2567    1           IF ID_BLOCKFLG THEN

   2567  5 000020   000000 234000 xsym               SZN     ID_BLOCKFLG
         5 000021   000025 605000 5                  TPL     s:2570

      109     2568    1              I=1024;

   2568  5 000022   002000 235007                    LDA     1024,DL
         5 000023   200012 755100                    STA     I,,AUTO
         5 000024   000033 710000 5                  TRA     s:2571

      110     2569    1           ELSE
      111     2570    1              I=(FPAR$->CODE03.RCSZ+1)*1024;

   2570  5 000025   200006 470500                    LDP0    FPAR$,,AUTO
         5 000026   000003 236100                    LDQ     3,,PR0
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:14   
         5 000027   000021 772000                    QRL     17
         5 000030   000001 376000 6                  ANQ     1
         5 000031   002000 036007                    ADLQ    1024,DL
         5 000032   200012 756100                    STQ     I,,AUTO

      112     2571    1           IF ID_VERISEG.BOUND=0 THEN ID_VERISEG='0'B;

   2571  5 000033   000000 236000 xsym               LDQ     ID_VERISEG
         5 000034   000034 316000 xsym               CANQ    B_VECTNIL+28
         5 000035   000040 601000 5                  TNZ     s:2572

   2571  5 000036   000000 450000 xsym               STZ     ID_VERISEG
         5 000037   000001 450000 xsym               STZ     ID_VERISEG+1

      113     2572    1           CALL IDD$GETSEG(IOBUF,I) ALTRET(NO_BUFFER);

   2572  5 000040   200012 630500                    EPPR0   I,,AUTO
         5 000041   200017 450500                    STP0    RECSIZE+2,,AUTO
         5 000042   000002 236000 6                  LDQ     2
         5 000043   200016 756100                    STQ     RECSIZE+1,,AUTO
         5 000044   200016 630500                    EPPR0   RECSIZE+1,,AUTO
         5 000045   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000046   000000 701000 xent               TSX1    IDD$GETSEG
         5 000047   000374 702000 5                  TSX2    NO_BUFFER

      114     2573    1           IF ID_VERIFLG THEN

   2573  5 000050   000000 234000 xsym               SZN     ID_VERIFLG
         5 000051   000062 605000 5                  TPL     s:2575

      115     2574    1              CALL IDD$GETSEG(ID_VERISEG,I) ALTRET(NO_BUFFER);

   2574  5 000052   200012 630500                    EPPR0   I,,AUTO
         5 000053   200017 450500                    STP0    RECSIZE+2,,AUTO
         5 000054   000003 236000 6                  LDQ     3
         5 000055   200016 756100                    STQ     RECSIZE+1,,AUTO
         5 000056   200016 630500                    EPPR0   RECSIZE+1,,AUTO
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:15   
         5 000057   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000060   000000 701000 xent               TSX1    IDD$GETSEG
         5 000061   000374 702000 5                  TSX2    NO_BUFFER

      116     2575    1           FPT_OPEN.IFPARAM_=FPAR;

   2575  5 000062   200004 470500                    LDP0    @FPAR,,AUTO
         5 000063   000000 100500                    MLR     fill='000'O
         5 000064   000000 000010                    ADSC9   0,,PR0                   cn=0,n=8
         5 000065   000026 000010 4                  ADSC9   FPT_OPEN+22              cn=0,n=8

      117     2576    1           FPT_OPEN.V.COMP# = DCBADDR(DCB#)->F$DCB.COMP;

   2576  5 000066   000004 471400 6                  LDP1    4
         5 000067   100000 473500                    LDP3    0,,PR1
         5 000070   200003 474500                    LDP4    @DCB#,,AUTO
         5 000071   400000 720100                    LXL0    0,,PR4
         5 000072   300000 475510                    LDP5    0,X0,PR3
         5 000073   500031 236100                    LDQ     25,,PR5
         5 000074   000100 376007                    ANQ     64,DL
         5 000075   000013 736000                    QLS     11
         5 000076   000047 676000 4                  ERQ     FPT_OPEN+39
         5 000077   600000 376007                    ANQ     -65536,DL
         5 000100   000047 656000 4                  ERSQ    FPT_OPEN+39

      118     2577    1           IF ADDR(FIDBLK)=ADDR(NIL) OR FIDBLK.ASFILE.L=0 THEN

   2577  5 000101   200005 236100                    LDQ     @FIDBLK,,AUTO
         5 000102   000001 116000 xsym               CMPQ    B_VECTNIL+1
         5 000103   000110 600000 5                  TZE     s:2578
         5 000104   200005 475500                    LDP5    @FIDBLK,,AUTO
         5 000105   500031 236100                    LDQ     25,,PR5
         5 000106   777000 316003                    CANQ    -512,DU
         5 000107   000120 601000 5                  TNZ     s:2580

      119     2578    1              FPT_OPEN.NAME_=VECTOR(DCBADDR(DCB#)->F$DCB.NAME);

PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:16   
   2578  5 000110   400000 720100                    LXL0    0,,PR4
         5 000111   300000 475510                    LDP5    0,X0,PR3
         5 000112   000005 235000 6                  LDA     5
         5 000113   200016 455500                    STP5    RECSIZE+1,,AUTO
         5 000114   200016 236100                    LDQ     RECSIZE+1,,AUTO
         5 000115   000010 036003                    ADLQ    8,DU
         5 000116   000006 757000 4                  STAQ    FPT_OPEN+6
         5 000117   000124 710000 5                  TRA     s:2581

      120     2579    1           ELSE
      121     2580    1              FPT_OPEN.NAME_=VECTOR(FIDBLK.ASFILE);

   2580  5 000120   000005 235000 6                  LDA     5
         5 000121   200005 236100                    LDQ     @FIDBLK,,AUTO
         5 000122   000031 036003                    ADLQ    25,DU
         5 000123   000006 757000 4                  STAQ    FPT_OPEN+6

      122     2581    2           IF ID_BLOCKFLG THEN DO;

   2581  5 000124   000000 234000 xsym               SZN     ID_BLOCKFLG
         5 000125   000133 605000 5                  TPL     s:2586

      123     2582    2              FPT_OPEN.V.ACS#=%BLOCK#;

   2582  5 000126   000003 236007                    LDQ     3,DL
         5 000127   000046 552004 4                  STBQ    FPT_OPEN+38,'04'O

      124     2583    2              FPT_OPEN.V.ORG#=%RESTRICT#;

   2583  5 000130   022000 236007                    LDQ     9216,DL
         5 000131   000046 552010 4                  STBQ    FPT_OPEN+38,'10'O

      125     2584    2              END;

   2584  5 000132   000137 710000 5                  TRA     s:2589

      126     2585    2           ELSE DO;
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:17   

      127     2586    2              FPT_OPEN.V.ACS#=%SEQUEN#;

   2586  5 000133   000001 236007                    LDQ     1,DL
         5 000134   000046 552004 4                  STBQ    FPT_OPEN+38,'04'O

      128     2587    2              FPT_OPEN.V.ORG#=0;

   2587  5 000135   000000 236003                    LDQ     0,DU
         5 000136   000046 552010 4                  STBQ    FPT_OPEN+38,'10'O

      129     2588    2              END;

      130     2589    1           CALL IDE$FMSECON;

   2589  5 000137   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000140   000000 701000 xent               TSX1    IDE$FMSECON
         5 000141   000000 011000                    NOP     0

      131     2590    1           CALL M$OPEN(FPT_OPEN) ALTRET(BAD_OPEN);

   2590  5 000142   000000 630400 4                  EPPR0   FPT_OPEN
         5 000143   450000 713400                    CLIMB   alt,open
         5 000144   410400 401760                    pmme    nvectors=18
         5 000145   000402 702000 5                  TSX2    BAD_OPEN

      132     2591    1           CALL IDE$FMSECOFF;

   2591  5 000146   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000147   000000 701000 xent               TSX1    IDE$FMSECOFF
         5 000150   000000 011000                    NOP     0

      133     2592    1           FPT_READ.V.DCB#=DCB#;

   2592  5 000151   200003 470500                    LDP0    @DCB#,,AUTO
         5 000152   000000 720100                    LXL0    0,,PR0
         5 000153   000104 740000 4                  STX0    FPT_READ+8
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:18   

      134     2593    1           FPT_READ.BUF_=IOBUF;

   2593  5 000154   000072 237000 4                  LDAQ    IOBUF
         5 000155   000100 757000 4                  STAQ    FPT_READ+4

      135     2594    1           FPT_WRITE.BUF_=IOBUF;

   2594  5 000156   000072 237000 4                  LDAQ    IOBUF
         5 000157   000116 757000 4                  STAQ    FPT_WRITE+4

      136     2595    1           FPT_RDPO.BUF_=ID_VERISEG;

   2595  5 000160   000000 100400                    MLR     fill='000'O
         5 000161   000000 000010 xsym               ADSC9   ID_VERISEG               cn=0,n=8
         5 000162   000132 000010 4                  ADSC9   FPT_RDPO+4               cn=0,n=8

      137     2596    1           FPT_READ.KEY_=FPAR;

   2596  5 000163   200004 471500                    LDP1    @FPAR,,AUTO
         5 000164   000000 100500                    MLR     fill='000'O
         5 000165   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         5 000166   000076 000010 4                  ADSC9   FPT_READ+2               cn=0,n=8

      138     2597    1           FPT_WRITE.KEY_=FPAR;

   2597  5 000167   000000 100500                    MLR     fill='000'O
         5 000170   100000 000010                    ADSC9   0,,PR1                   cn=0,n=8
         5 000171   000114 000010 4                  ADSC9   FPT_WRITE+2              cn=0,n=8

      139     2598    2           DO WHILE ('1'B);

      140     2599    2              CALL M$READ(FPT_READ) ALTRET(ALL_DONE);

   2599  5 000172   000074 630400 4                  EPPR0   FPT_READ
         5 000173   440000 713400                    CLIMB   alt,read
         5 000174   401400 401760                    pmme    nvectors=4
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:19   
         5 000175   000277 702000 5                  TSX2    ALL_DONE

      141     2600    2              IF ID_BLOCKFLG THEN          /* SAVE BLOCK NUMBER                  */

   2600  5 000176   000000 234000 xsym               SZN     ID_BLOCKFLG
         5 000177   000205 605000 5                  TPL     s:2602

      142     2601    2                 IOBUF.P$->UBINWORD=FPAR.PTR$->UBINWORD;

   2601  5 000200   200004 470500                    LDP0    @FPAR,,AUTO
         5 000201   000001 471500                    LDP1    1,,PR0
         5 000202   000073 473400 4                  LDP3    IOBUF+1
         5 000203   100000 235100                    LDA     0,,PR1
         5 000204   300000 755100                    STA     0,,PR3

      143     2602    3              IF ID_VERIFLG THEN DO;

   2602  5 000205   000000 234000 xsym               SZN     ID_VERIFLG
         5 000206   000241 605000 5                  TPL     s:2608

      144     2603    3                 RECSIZE=DCBADDR(DCB#)->F$DCB.ARS;

   2603  5 000207   000004 470400 6                  LDP0    4
         5 000210   000000 471500                    LDP1    0,,PR0
         5 000211   200003 473500                    LDP3    @DCB#,,AUTO
         5 000212   300000 720100                    LXL0    0,,PR3
         5 000213   100000 474510                    LDP4    0,X0,PR1
         5 000214   400000 235100                    LDA     0,,PR4
         5 000215   200015 755100                    STA     RECSIZE,,AUTO

      145     2604    3                 CALL M$READ(FPT_RDPO) ALTRET(VERIFY_ERR);

   2604  5 000216   000126 630400 4                  EPPR0   FPT_RDPO
         5 000217   440000 713400                    CLIMB   alt,read
         5 000220   401400 401760                    pmme    nvectors=4
         5 000221   000405 702000 5                  TSX2    VERIFY_ERR

PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:20   
      146     2605    3                 IF TAPEREC~=FILEREC OR DCBADDR(DCBNUM(M$PO))->F$DCB.ARS~=RECSIZE THEN
              2605                          GOTO VERIFY_ERR;

   2605  5 000222   000001 470400 xsym               LDP0    ID_VERISEG+1
         5 000223   200015 720100                    LXL0    RECSIZE,,AUTO
         5 000224   000073 471400 4                  LDP1    IOBUF+1
         5 000225   040140 106540                    CMPC    fill='040'O
         5 000226   000000 000010                    ADSC9   0,,PR0                   cn=0,n=*X0
         5 000227   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         5 000230   000405 601000 5                  TNZ     VERIFY_ERR
         5 000231   000000 236007 xsym               LDQ     M$PO,DL
         5 000232   000004 473400 6                  LDP3    4
         5 000233   300000 474500                    LDP4    0,,PR3
         5 000234   400000 475506                    LDP5    0,QL,PR4
         5 000235   500000 236100                    LDQ     0,,PR5
         5 000236   200015 116100                    CMPQ    RECSIZE,,AUTO
         5 000237   000405 601000 5                  TNZ     VERIFY_ERR

      147     2606    3                 END;

   2606  5 000240   000172 710000 5                  TRA     s:2599

      148     2607    3              ELSE DO;

      149     2608    3                 IF DCBADDR(DCB#)->F$DCB.ARS=0 THEN

   2608  5 000241   000004 470400 6                  LDP0    4
         5 000242   000000 471500                    LDP1    0,,PR0
         5 000243   200003 473500                    LDP3    @DCB#,,AUTO
         5 000244   300000 720100                    LXL0    0,,PR3
         5 000245   100000 474510                    LDP4    0,X0,PR1
         5 000246   400000 235100                    LDA     0,,PR4
         5 000247   000253 601000 5                  TNZ     s:2611

      150     2609    3                    FPT_WRITE.BUF_=VECTOR(NIL);

   2609  5 000250   000006 237000 6                  LDAQ    6
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:21   
         5 000251   000116 757000 4                  STAQ    FPT_WRITE+4
         5 000252   000265 710000 5                  TRA     s:2614

      151     2610    4                 ELSE DO;

      152     2611    4                    FPT_WRITE.BUF_=IOBUF;

   2611  5 000253   000072 237000 4                  LDAQ    IOBUF
         5 000254   000116 757000 4                  STAQ    FPT_WRITE+4

      153     2612    4                    FPT_WRITE.BUF_.BOUND=DCBADDR(DCB#)->F$DCB.ARS-1;

   2612  5 000255   300000 720100                    LXL0    0,,PR3
         5 000256   100000 474510                    LDP4    0,X0,PR1
         5 000257   400000 236100                    LDQ     0,,PR4
         5 000260   000001 136007                    SBLQ    1,DL
         5 000261   000020 736000                    QLS     16
         5 000262   000116 676000 4                  ERQ     FPT_WRITE+4
         5 000263   000034 376000 xsym               ANQ     B_VECTNIL+28
         5 000264   000116 656000 4                  ERSQ    FPT_WRITE+4

      154     2613    4                    END;

      155     2614    3                 FPT_WRITE.V.DVBYTE=DCBADDR(DCB#)->F$DCB.DVBYTE;

   2614  5 000265   300000 720100                    LXL0    0,,PR3
         5 000266   100000 474510                    LDP4    0,X0,PR1
         5 000267   400003 236100                    LDQ     3,,PR4
         5 000270   776000 376003                    ANQ     -1024,DU
         5 000271   000125 552040 4                  STBQ    FPT_WRITE+11,'40'O

      156     2615    3                 CALL M$WRITE(FPT_WRITE) ALTRET(IOERR);

   2615  5 000272   000112 630400 4                  EPPR0   FPT_WRITE
         5 000273   440001 713400                    CLIMB   alt,write
         5 000274   401400 401760                    pmme    nvectors=4
         5 000275   000410 702000 5                  TSX2    IOERR
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:22   

      157     2616    3                 END;

      158     2617    2              END;

   2617  5 000276   000172 710000 5                  TRA     s:2599

      159     2618    1   ALL_DONE:
      160     2619    1           ERRCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR.CODE;

   2619  5 000277   000000 470400 xsym  ALL_DONE     LDP0    B$TCB$
         5 000300   000000 471500                    LDP1    0,,PR0
         5 000301   100102 236100                    LDQ     66,,PR1
         5 000302   000003 772000                    QRL     3
         5 000303   037777 376007                    ANQ     16383,DL
         5 000304   200013 756100                    STQ     ERRCODE,,AUTO

      161     2620    1           ORG=DCBADDR(DCB#)->F$DCB.ORG;

   2620  5 000305   000004 473400 6                  LDP3    4
         5 000306   300000 474500                    LDP4    0,,PR3
         5 000307   200003 475500                    LDP5    @DCB#,,AUTO
         5 000310   500000 720100                    LXL0    0,,PR5
         5 000311   400000 476510                    LDP6    0,X0,PR4
         5 000312   600032 236100                    LDQ     26,,PR6
         5 000313   000033 772000                    QRL     27
         5 000314   200014 756100                    STQ     ORG,,AUTO

      162     2621    1           IF ERRCODE=%E$DI AND (ORG=%RANDOM# OR ORG=%IDS#) THEN CALL M$RETRY;

   2621  5 000315   200013 235100                    LDA     ERRCODE,,AUTO
         5 000316   000011 115007                    CMPA    9,DL
         5 000317   000326 601000 5                  TNZ     s:2622
         5 000320   000003 116007                    CMPQ    3,DL
         5 000321   000324 600000 5                  TZE     s:2621+7
         5 000322   000007 116007                    CMPQ    7,DL
         5 000323   000326 601000 5                  TNZ     s:2622
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:23   

   2621  5 000324   010010 713400                    CLIMB   4104
         5 000325   000000 401760                    pmme    nvectors=0

      163     2622    1           IF ERRCODE~=%E$EOF THEN GOTO IOERR;

   2622  5 000326   200013 235100                    LDA     ERRCODE,,AUTO
         5 000327   000006 115007                    CMPA    6,DL
         5 000330   000410 601000 5                  TNZ     IOERR

      164     2623    1           CALL M$CLOSE(FPT_CLOSE);

   2623  5 000331   000144 630400 4                  EPPR0   FPT_CLOSE
         5 000332   050001 713400                    CLIMB   close
         5 000333   406000 401760                    pmme    nvectors=13

      165     2624    1           CALL IDD$GETSEG(IOBUF,0);

   2624  5 000334   000010 630400 6                  EPPR0   8
         5 000335   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000336   000000 701000 xent               TSX1    IDD$GETSEG
         5 000337   000000 011000                    NOP     0

      166     2625    1           CALL IDD$GETSEG(ID_VERISEG,0);

   2625  5 000340   000012 630400 6                  EPPR0   10
         5 000341   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000342   000000 701000 xent               TSX1    IDD$GETSEG
         5 000343   000000 011000                    NOP     0

      167     2626    2           DO I=1 TO REQUIRED.NUMBER;

   2626  5 000344   000001 235007                    LDA     1,DL
         5 000345   200012 755100                    STA     I,,AUTO
         5 000346   000367 710000 5                  TRA     s:2629+1

      168     2627    2              IF REQUIRED.PROCESS.NAME(I)=DCBADDR(DCBNUM(M$PO))->F$DCB.NAME.C THEN
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:24   

   2627  5 000347   000000 236007 xsym               LDQ     M$PO,DL
         5 000350   000004 470400 6                  LDP0    4
         5 000351   000000 471500                    LDP1    0,,PR0
         5 000352   100000 473506                    LDP3    0,QL,PR1
         5 000353   200012 235100                    LDA     I,,AUTO
         5 000354   000005 735000                    ALS     5
         5 000355   040100 106405                    CMPC    fill='040'O
         5 000356   000001 000037 xsym               ADSC9   REQUIRED+1,A             cn=0,n=31
         5 000357   300010 200037                    ADSC9   8,,PR3                   cn=1,n=31
         5 000360   000366 601000 5                  TNZ     s:2629

      169     2628    2                 REQUIRED.PROCESS.FOUND(I)='1'B;

   2628  5 000361   200012 236100                    LDQ     I,,AUTO
         5 000362   000003 736000                    QLS     3
         5 000363   000000 620006                    EAX0    0,QL
         5 000364   000400 236007                    LDQ     256,DL
         5 000365   000010 256010 xsym               ORSQ    REQUIRED+8,X0

      170     2629    2              END;

   2629  5 000366   200012 054100                    AOS     I,,AUTO
         5 000367   000000 236000 xsym               LDQ     REQUIRED
         5 000370   000347 604000 5                  TMI     s:2627
         5 000371   200012 116100                    CMPQ    I,,AUTO
         5 000372   000347 605000 5                  TPL     s:2627

      171     2630    1           RETURN;

   2630  5 000373   000000 702200 xent               TSX2  ! X66_ARET

      172     2631    1   NO_BUFFER:
      173     2632    1           CALL XUR$ERRMSG(NO_BUFFER_CODE);

   2632  5 000374   000014 630400 6     NO_BUFFER    EPPR0   12
         5 000375   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:25   
         5 000376   000000 701000 xent               TSX1    XUR$ERRMSG
         5 000377   000000 011000                    NOP     0

      174     2633    1           CALL M$XXX;

   2633  5 000400   000003 713400                    CLIMB   3
         5 000401   000000 401760                    pmme    nvectors=0

      175     2634    1   BAD_OPEN:
      176     2635    1           ICODE=OPEN_ERROR_CODE;

   2635  5 000402   000001 236000 2     BAD_OPEN     LDQ     OPEN_ERROR_CODE
         5 000403   200007 756100                    STQ     ICODE,,AUTO

      177     2636    1           GOTO ERR_ABORT;

   2636  5 000404   000412 710000 5                  TRA     ERR_ABORT

   2632  5 000405                       VERIFY_ERR   null
      178     2637    1   VERIFY_ERR: ;
      179     2638    1           ICODE=VERIFY_CODE;

   2638  5 000405   000003 236000 2                  LDQ     VERIFY_CODE
         5 000406   200007 756100                    STQ     ICODE,,AUTO

      180     2639    1           GOTO ERR_ABORT;

   2639  5 000407   000412 710000 5                  TRA     ERR_ABORT

      181     2640    1   IOERR:
      182     2641    1           ICODE=IO_ERROR_CODE;

   2641  5 000410   000002 236000 2     IOERR        LDQ     IO_ERROR_CODE
         5 000411   200007 756100                    STQ     ICODE,,AUTO

      183     2642    1   ERR_ABORT:
      184     2643    1           MCODE=B$TCB$->B$TCB.ALT$->B$ALT.ERR;
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:26   

   2643  5 000412   000000 470400 xsym  ERR_ABORT    LDP0    B$TCB$
         5 000413   000000 471500                    LDP1    0,,PR0
         5 000414   100102 236100                    LDQ     66,,PR1
         5 000415   200010 756100                    STQ     MCODE,,AUTO

      185     2644    1           EDCB#=B$TCB$->B$TCB.ALT$->B$ALT.DCB#;

   2644  5 000416   000000 471500                    LDP1    0,,PR0
         5 000417   100101 235100                    LDA     65,,PR1
         5 000420   200011 755100                    STA     EDCB#,,AUTO

      186     2645    1           CALL IDE$FLUSH;

   2645  5 000421   000002 631400 xsym               EPPR1   B_VECTNIL+2
         5 000422   000000 701000 xent               TSX1    IDE$FLUSH
         5 000423   000000 011000                    NOP     0

      187     2646    1           CALL XUR$ERRMSG(ICODE,EDCB#);

   2646  5 000424   200011 630500                    EPPR0   EDCB#,,AUTO
         5 000425   200017 450500                    STP0    RECSIZE+2,,AUTO
         5 000426   200007 631500                    EPPR1   ICODE,,AUTO
         5 000427   200016 451500                    STP1    RECSIZE+1,,AUTO
         5 000430   200016 630500                    EPPR0   RECSIZE+1,,AUTO
         5 000431   000020 631400 xsym               EPPR1   B_VECTNIL+16
         5 000432   000000 701000 xent               TSX1    XUR$ERRMSG
         5 000433   000000 011000                    NOP     0

      188     2647    1           CALL XUR$ERRMSG(MCODE,EDCB#);

   2647  5 000434   200011 630500                    EPPR0   EDCB#,,AUTO
         5 000435   200017 450500                    STP0    RECSIZE+2,,AUTO
         5 000436   200010 631500                    EPPR1   MCODE,,AUTO
         5 000437   200016 451500                    STP1    RECSIZE+1,,AUTO
         5 000440   200016 630500                    EPPR0   RECSIZE+1,,AUTO
         5 000441   000020 631400 xsym               EPPR1   B_VECTNIL+16
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:27   
         5 000442   000000 701000 xent               TSX1    XUR$ERRMSG
         5 000443   000000 011000                    NOP     0

      189     2648    1           CALL M$XXX;

   2648  5 000444   000003 713400                    CLIMB   3
         5 000445   000000 401760                    pmme    nvectors=0

      190     2649    1   END IDC$COPY;

   2649  5 000446   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:28   
--  Include file information  --

   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   FM$FIT.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   ID_PERR_C.:E05TOU  is referenced.
   ID_DATA_C.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure IDC$COPY.
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:29   

 **** Variables and constants ****

  ****  Section 002 RoData IDC$COPY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/c CHAR(8)     r     1 BLANKS                     2-0-0/w STRC        r     1 IO_ERROR_CODE
     0-0-0/w STRC        r     1 NO_BUFFER_CODE             1-0-0/w STRC        r     1 OPEN_ERROR_CODE
     3-0-0/w STRC        r     1 VERIFY_CODE

  ****  Section 004  Data  IDC$COPY

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

   144-0-0/d STRC(1080)  r     1 FPT_CLOSE                  0-0-0/d STRC(2088)  r     1 FPT_OPEN
   126-0-0/d STRC(504)   r     1 FPT_RDPO                  74-0-0/d STRC(504)   r     1 FPT_READ
   112-0-0/d STRC(432)   r     1 FPT_WRITE                 72-0-0/w STRC(72)    r     1 IOBUF

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCB#                      5-0-0/w PTR         r     1 @FIDBLK
     4-0-0/w PTR         r     1 @FPAR                     *0-0-0/w SBIN        r     1 DCB#
    11-0-0/w UBIN        r     1 EDCB#                     13-0-0/w SBIN        r     1 ERRCODE
    *0-0-0/w STRC(1188)  r     1 FIDBLK                    *0-0-0/w STRC(72)    r     1 FPAR
     6-0-0/w PTR         r     1 FPAR$                     12-0-0/w SBIN        r     1 I
     7-0-0/b BIT         r     1 ICODE                     10-0-0/b BIT         r     1 MCODE
    14-0-0/w SBIN        r     1 ORG                       15-0-0/w SBIN        r     1 RECSIZE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:30   

     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w BIT         r     1 ID_BLOCKFLG
     0-0-0/w STRC(522)   r     1 ID_SNLIST                  0-0-0/w BIT         r     1 ID_VERIFLG
     0-0-0/w STRC(72)    r     1 ID_VERISEG                 0-0-0/w STRC(324)   r     1 REQUIRED

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(324)   r     1 CODE03                     0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/c ACHR        r     1 FILEREC                    0-0-0N  NULL        r     1 M$PO
     0-0-0/c ACHR        r     1 TAPEREC                    0-0-0/w UBIN        r     1 UBINWORD


   Procedure IDC$COPY requires 295 words for executable code.
   Procedure IDC$COPY requires 16 words of local(AUTO) storage.

    No errors detected in file IDC$COPY.:E05TSI    .
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:32   
          MINI XREF LISTING

ALL_DONE
      2619**LABEL    2599--CALLALT
B$ALT.CODE
      2490**DCL      2490--REDEF    2491--REDEF    2491--REDEF
B$ALT.DCB#
      2491**DCL      2644>>ASSIGN
B$ALT.ERR
      2491**DCL      2643>>ASSIGN
B$ALT.ERR.CODE
      2492**DCL      2619>>ASSIGN
B$ALT.ERR.ERR#
      2492**DCL      2492--REDEF
B$ALT.EVID
      2491**DCL      2491--REDEF    2491--REDEF
B$TCB.ALT$
      2486**DCL      2619>>ASSIGN   2643>>ASSIGN   2644>>ASSIGN
B$TCB$
      2496**DCL      2619>>ASSIGN   2643>>ASSIGN   2644>>ASSIGN
BAD_OPEN
      2635**LABEL    2590--CALLALT
BLANKS
      2371**DCL      2329--DCLINIT
CODE03.RCSZ
      1635**DCL      2570>>ASSIGN
DCB#
        11**DCL         9--PROC     2576--ASSIGN   2578--ASSIGN   2592>>ASSIGN   2603--ASSIGN   2608--IF
      2612--ASSIGN   2614--ASSIGN   2620--ASSIGN
EDCB#
      2499**DCL      2644<<ASSIGN   2646<>CALL     2647<>CALL
ERRCODE
      2501**DCL      2619<<ASSIGN   2621>>IF       2622>>IF
ERR_ABORT
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:33   
      2643**LABEL    2636--GOTO     2639--GOTO
F$DCB.ACTPOS
      1388**DCL      1388--REDEF
F$DCB.ARS
      1363**DCL      1363--REDEF    2603>>ASSIGN   2605>>IF       2608>>IF       2612>>ASSIGN
F$DCB.ATTR
      1381**DCL      1382--REDEF
F$DCB.BORROW
      1396**DCL      1396--REDEF    1396--REDEF    1396--REDEF
F$DCB.COMP
      1376**DCL      2576>>ASSIGN
F$DCB.DCBNAME.L
      1410**DCL      1410--IMP-SIZ
F$DCB.DVBYTE
      1366**DCL      2614>>ASSIGN
F$DCB.EOMCHAR
      1367**DCL      1367--REDEF
F$DCB.FLDID
      1391**DCL      1391--REDEF
F$DCB.FORM$
      1385**DCL      1385--REDEF
F$DCB.FSECT
      1401**DCL      1401--REDEF
F$DCB.FSN
      1378**DCL      1378--REDEF    1378--REDEF    1379--REDEF
F$DCB.HEADER$
      1384**DCL      1384--REDEF
F$DCB.IXTNSIZE
      1382**DCL      1382--REDEF
F$DCB.LASTSTA$
      1372**DCL      1372--REDEF
F$DCB.LVL
      1397**DCL      1397--REDEF
F$DCB.NAME
      1372**DCL      2578--ASSIGN
F$DCB.NAME.C
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:34   
      1372**DCL      1372--REDEF    2627>>IF
F$DCB.NOEOF
      1393**DCL      1393--REDEF
F$DCB.NRECS
      1383**DCL      1383--REDEF
F$DCB.NRECX
      1402**DCL      1402--REDEF
F$DCB.OHDR
      1394**DCL      1394--REDEF
F$DCB.ORG
      1377**DCL      1377--REDEF    2620>>ASSIGN
F$DCB.PRECNO
      1400**DCL      1400--REDEF
F$DCB.RCSZ
      1405**DCL      1405--REDEF
F$DCB.RES
      1373**DCL      1373--REDEF
F$DCB.SETX
      1385**DCL      1385--REDEF
F$DCB.TAB$
      1384**DCL      1385--REDEF
F$DCB.TDA
      1399**DCL      1399--REDEF
F$DCB.WSN
      1374**DCL      1374--REDEF
FIDBLK
        91**DCL         9--PROC     2577--IF
FIDBLK.ASFILE
       121**DCL      2580--ASSIGN
FIDBLK.ASFILE.L
       127**DCL      2577>>IF
FILEREC
      2558**DCL      2605>>IF
FPAR
        13**DCL         9--PROC     2575>>ASSIGN   2596>>ASSIGN   2597>>ASSIGN
FPAR.PTR$
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:35   
        16**DCL      2564>>ASSIGN   2601>>ASSIGN
FPAR$
      1309**DCL      2564<<ASSIGN   2565<>CALL     2570>>ASSIGN
FPT_CLOSE
      2534**DCL      2623<>CALL
FPT_CLOSE.SN_
      2534**DCL      2534--REDEF
FPT_CLOSE.UTL_
      2535**DCL      2535--REDEF
FPT_CLOSE.V
      2539**DCL      2534--DCLINIT
FPT_CLOSE.V.EXPIRE#
      2549**DCL      2549--REDEF
FPT_CLOSE.V.TYPE#
      2547**DCL      2547--REDEF
FPT_CLOSE.V.XTNSIZE#
      2544**DCL      2544--REDEF    2546--REDEF
FPT_OPEN
      2327**DCL      2590<>CALL
FPT_OPEN.ACSVEH_
      2329**DCL      2330--REDEF
FPT_OPEN.ALTKEYS_
      2335**DCL      2336--REDEF    2336--REDEF
FPT_OPEN.HDR_
      2334**DCL      2335--REDEF
FPT_OPEN.IFPARAM_
      2332**DCL      2575<<ASSIGN
FPT_OPEN.NAME_
      2328**DCL      2578<<ASSIGN   2580<<ASSIGN
FPT_OPEN.TAB_
      2333**DCL      2334--REDEF
FPT_OPEN.UHL_
      2327**DCL      2328--REDEF    2328--REDEF
FPT_OPEN.V
      2336**DCL      2327--DCLINIT
FPT_OPEN.V.ACS#
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:36   
      2347**DCL      2582<<ASSIGN   2586<<ASSIGN
FPT_OPEN.V.COMP#
      2348**DCL      2576<<ASSIGN
FPT_OPEN.V.FSN#
      2367**DCL      2367--REDEF    2367--REDEF
FPT_OPEN.V.ORG#
      2347**DCL      2583<<ASSIGN   2587<<ASSIGN
FPT_OPEN.WSN_
      2333**DCL      2333--REDEF
FPT_RDPO
      2463**DCL      2604<>CALL
FPT_RDPO.BUF_
      2465**DCL      2595<<ASSIGN
FPT_RDPO.STATION_
      2466**DCL      2467--REDEF
FPT_RDPO.V
      2467**DCL      2463--DCLINIT
FPT_RDPO.V.DVBYTE.REREAD#
      2478**DCL      2478--REDEF
FPT_RDPO.V.INDX#
      2476**DCL      2476--REDEF
FPT_READ
      2393**DCL      2599<>CALL
FPT_READ.BUF_
      2395**DCL      2593<<ASSIGN
FPT_READ.KEY_
      2393**DCL      2596<<ASSIGN
FPT_READ.STATION_
      2396**DCL      2397--REDEF
FPT_READ.V
      2397**DCL      2393--DCLINIT
FPT_READ.V.DCB#
      2397**DCL      2592<<ASSIGN
FPT_READ.V.DVBYTE.REREAD#
      2408**DCL      2408--REDEF
FPT_READ.V.INDX#
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:37   
      2406**DCL      2406--REDEF
FPT_WRITE
      2432**DCL      2615<>CALL
FPT_WRITE.BUF_
      2432**DCL      2594<<ASSIGN   2609<<ASSIGN   2611<<ASSIGN
FPT_WRITE.BUF_.BOUND
      2432**DCL      2612<<ASSIGN
FPT_WRITE.KEY_
      2432**DCL      2597<<ASSIGN
FPT_WRITE.STATION_
      2434**DCL      2434--REDEF
FPT_WRITE.V
      2435**DCL      2432--DCLINIT
FPT_WRITE.V.DVBYTE
      2440**DCL      2614<<ASSIGN
FPT_WRITE.V.DVBYTE.VFC#
      2441**DCL      2441--REDEF
I
      2500**DCL      2568<<ASSIGN   2570<<ASSIGN   2572<>CALL     2574<>CALL     2626<<DOINDEX  2627>>IF
      2628>>ASSIGN
ICODE
      2497**DCL      2635<<ASSIGN   2638<<ASSIGN   2641<<ASSIGN   2646<>CALL
IDD$GETSEG
       133**DCL-ENT  2572--CALL     2574--CALL     2624--CALL     2625--CALL
IDE$FLUSH
       134**DCL-ENT  2645--CALL
IDE$FMSECOFF
       136**DCL-ENT  2591--CALL
IDE$FMSECON
       135**DCL-ENT  2589--CALL
ID_BLOCKFLG
        12**DCL      2567>>IF       2581>>IF       2600>>IF
ID_SNLIST
      2508**DCL      2327--DCLINIT
ID_VERIFLG
      2561**DCL      2573>>IF       2602>>IF
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:38   
ID_VERISEG
      2553**DCL      2571<<ASSIGN   2574<>CALL     2595>>ASSIGN   2625<>CALL
ID_VERISEG.BOUND
      2554**DCL      2571>>IF
ID_VERISEG.P$
      2556**DCL      2559--IMP-PTR  2605>>IF
IOBUF
      2372**DCL      2566<<ASSIGN   2572<>CALL     2593>>ASSIGN   2594>>ASSIGN   2611>>ASSIGN   2624<>CALL
IOBUF.P$
      2375**DCL      2558--IMP-PTR  2601>>ASSIGN   2605>>IF
IOERR
      2641**LABEL    2615--CALLALT  2622--GOTO
IO_ERROR_CODE
      1342**DCL      2641>>ASSIGN
M$CLOSE
      1648**DCL-ENT  2623--CALL
M$OPEN
      1648**DCL-ENT  2590--CALL
M$PO
      1307**DCL      2605--IF       2627--IF
M$READ
      1649**DCL-ENT  2599--CALL     2604--CALL
M$RETRY
      1705**DCL-ENT  2621--CALL
M$WRITE
      1649**DCL-ENT  2615--CALL
M$XXX
      1660**DCL-ENT  2633--CALL     2648--CALL
MCODE
      2498**DCL      2643<<ASSIGN   2647<>CALL
NO_BUFFER
      2632**LABEL    2572--CALLALT  2574--CALLALT
NO_BUFFER_CODE
      1318**DCL      2632<>CALL
OPEN_ERROR_CODE
      1330**DCL      2635>>ASSIGN
PL6.E3A0      #001=IDC$COPY File=IDC$COPY.:E05TSI                                TUE 07/29/97 22:28 Page:39   
ORG
      2502**DCL      2620<<ASSIGN   2621>>IF       2621>>IF
RECSIZE
      2557**DCL      2558--IMP-SIZ  2559--IMP-SIZ  2603<<ASSIGN   2605>>IF       2605>>IF       2605>>IF
REQUIRED.NUMBER
      2504**DCL      2626>>DOINDEX
REQUIRED.PROCESS.FOUND
      2507**DCL      2628<<ASSIGN
REQUIRED.PROCESS.NAME
      2506**DCL      2627>>IF
TAPEREC
      2559**DCL      2605>>IF
UBINWORD
      2560**DCL      2601<<ASSIGN   2601>>ASSIGN
VERIFY_CODE
      1353**DCL      2638>>ASSIGN
VERIFY_ERR
      2632**LABEL    2604--CALLALT  2605--GOTO
XSF$LOCCODP
       131**DCL-ENT  2565--CALL
XUR$ERRMSG
       132**DCL-ENT  2632--CALL     2646--CALL     2647--CALL
