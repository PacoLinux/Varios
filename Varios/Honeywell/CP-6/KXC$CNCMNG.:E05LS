VERSION E05

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:1    
        1        1        /*M*  KXC$CNCMNG - Routines for common handling of protocol managers  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*   PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 7         */
        8        8        /*P* NAME: KXC$CNCMNG                */
        9        9        /*P* PURPOSE: Routines for common handling of calls
       10       10                      from the Packet level and VDH for
       11       11                      the different protocol handlers
       12       12                      associated with X.25.  */
       13       13
       14       14        /*F* NAME: KXC$CNCMNG                */
       15       15        /*F* PURPOSE: Handle all calls from the Packet level  */
       16       16
       17       17        /*D* NAME: KXC$CNCMNG                */
       18       18        /*D* PURPOSE: Handle all calls from the Packet level
       19       19                      to the protocol managers, including
       20       20                      deciding which protocol manager to
       21       21                      assign the new connections to.  */
       22       22        /*D* CALL: CALL KXC$CNCMNG ( FPT_X25 );  */
       23       23        /*D* INPUT: FPT_X25 - details what operation to perform  */
       24       24        /*D* OUTPUT: FPT_X25.RCV$ - Set up if null on entry  */
       25       25
       26       26        KXC$CNCMNG: PROC ( FPT_X25 ) ALTRET;
       27       27        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:2    
       28       28        /*****************************************************************
       29       29        *                                                                *
       30       30        *                           Includes                             *
       31       31        *                                                                *
       32       32        *****************************************************************/
       33       33
       34       34        %INCLUDE CP_6_SUBS;
       35      574        %INCLUDE G_JIT_M;
       36      839        %INCLUDE K_ID_E;
       37      889        %K#ENTID_E;
       38      908        %K#LYRID_E;
       39      915        %INCLUDE KL_MACRO_C;
       40     4267        %INCLUDE KL_AFCN_C;
       41     4368        %INCLUDE KL_SUPER_C;
       42     7270        %INCLUDE LCP_6;
       43    11549        %INCLUDE KH$CHN;
       44    11671        %INCLUDE KX_EQUS_E;
       45    12110        %INCLUDE KX_PERR_C;
       46    12239        %INCLUDE KX_SCODE_C;
       47    12305        %INCLUDE KX_DATA_C;
       48    12373        %INCLUDE KX_MACROS_M;
       49    13144        %INCLUDE KV_GLBCNS_E;
       50    13485        %KV#CQ_HNDID_E;
       51    13490        %INCLUDE K_ADDRESS_M;
       52    13993        %INCLUDE KNH_MACRO_C;
       53    14276        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:3    
       54    14277        /*****************************************************************
       55    14278        *                                                                *
       56    14279        *                           External References                  *
       57    14280        *                                                                *
       58    14281        *****************************************************************/
       59    14282
       60    14283    1   DCL KXP$PACKET ENTRY (1) ALTRET;
       61    14284    1   DCL KXS$Q_SYSLOG ENTRY (1);
       62    14285    1   DCL KXS$SYSLOG ENTRY (7);
       63    14286    1   DCL KXV$VCNTW ENTRY (1) ALTRET;
       64    14287    1   DCL KXX$X29 ENTRY (1);
       65    14288    1   DCL KXV$VCVDH ENTRY (1) ALTRET;
       66    14289    1   DCL KHD$SCREECH ENTRY (1);
       67    14290    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       68    14291        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:4    
       69    14292        /*****************************************************************
       70    14293        *                                                                *
       71    14294        *                           Auto                                 *
       72    14295        *                                                                *
       73    14296        *****************************************************************/
       74    14297
       75    14298        %FPT_X25 ( STCLASS = );
       76    14342
       77    14343        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
       78    14387    1   DCL PRTID UBIN;
       79    14388    1   DCL DVC$ PTR;
       80    14389    1   DCL NODE# UBIN;
       81    14390        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:5    
       82    14391        /*****************************************************************
       83    14392        *                                                                *
       84    14393        *                           Based                                *
       85    14394        *                                                                *
       86    14395        *****************************************************************/
       87    14396
       88    14397    1   DCL BENTADDR EPTR BASED;
       89    14398    1   DCL 1 B$PKT ALIGNED BASED ( FPT_X25.V_.ADR$ ),
       90    14399    1         2 BYTARY(0:399) UBIN BYTE CALIGNED;
       91    14400        %KX$L3 ( STCLASS = "BASED(FPT_X25.CAL$)" );
       92    14803        %KX$L2;
       93    15170        %KX$LINKDEV ( STCLASS = "BASED(DVC$)" );
       94    15197        %KX$CALL_OPTS ( STCLASS = "BASED (FPT_X25.PRM1$)" );
       95    15232        %KH$CHN ( STCLASS = "BASED ( FPT_X25.PRM2$ )" );
       96    15356        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
       97    15770        %VLP_SCODE ( FPTN=B$SCODE,STCLASS=BASED );
       98    15831        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:6    
       99    15832        /*****************************************************************
      100    15833        *                                                                *
      101    15834        *                           Constant                             *
      102    15835        *                                                                *
      103    15836        *****************************************************************/
      104    15837
      105    15838        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='C',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
      106    15839                           FPTN = UNKPRTID,
      107    15840                           ERR# = %E_KXC_UNKPRTID# );
      108    15886        /*E*   ERROR:      KXC-E_KXC_UNKPRTID#-4
      109    15887               MESSAGE:    Unknown protocol-id specified in call packet.
      110    15888        */
      111    15889        %VLP_SCODE (FPTN=Y_NO_PMCTX,STCLASS=CONSTANT,FCG=KX,MID=C,ERR#=%S$KX_NO_PMCTX#);
      112    15950        /*****************************************************************
      113    15951        *                                                                *
      114    15952        *                           Static                               *
      115    15953        *                                                                *
      116    15954        *****************************************************************/
      117    15955
      118    15956    1   DCL G$JIT$ PTR SYMREF;
      119    15957        %KX_DATA;
      120    16647        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:7    
      121    16648        /*****************************************************************
      122    16649        *                                                                *
      123    16650        *                           Procedure                            *
      124    16651        *                                                                *
      125    16652        *****************************************************************/
      126    16653
      127    16654        /*
      128    16655                                             In most cases, this routine is
      129    16656                                             just a transparent pass-thru.
      130    16657                                             As long as FPT_X25.RCV$ is not
      131    16658                                             null, then pass the fpt on to
      132    16659                                             the proper handler.
      133    16660        */
      134    16661    1       IF FPT_X25.RCV$ ~= ADDR(NIL)
      135    16662    1          THEN
      136    16663    2             DO;
      137    16664    2                CALL FPT_X25.RCV$ -> BENTADDR ( FPT_X25 ) WHENALTRETURN
      138    16665    3                      DO;
      139    16666    3   L_ALTRET:             ALTRETURN;
      140    16667    3                      END;
      141    16668    2             END;
      142    16669    1          ELSE
      143    16670    2             DO;
      144    16671    3                DO SELECT ( FPT_X25.EVN );
      145    16672    3                   SELECT ( %KX_CM_EV_DCL# );
      146    16673        /*
      147    16674                                             If the destination node number is <=
      148    16675                                             200, this circuit should be assigned
      149    16676                                             to SL. How to handle the otherwise
      150    16677                                             case is not obvious now.
      151    16678        */
      152    16679    3                   CALL KXV$VCNTW ( FPT_X25 );
      153    16680
      154    16681    3                   SELECT ( %KX_CM_EV_RMTDCL# );
      155    16682        /*
      156    16683                                             This is normal for RMTDCL.  From
      157    16684                                             the caller's network address, the
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:8    
      158    16685                                             VC must be assigned to a handler.
      159    16686        */
      160    16687    3                   CALL_FPT = '0'B;
      161    16688        /*
      162    16689            Check if this call is on a reserved subaddress.
      163    16690        */
      164    16691    3                   IF KH$CHN.TERMID.TERM.SUBDEVICE = 99
      165    16692    3                      THEN
      166    16693    4                         DO;
      167    16694    4                            FPT_X25.V_.BYTSIZ = 0;
      168    16695    4                            CALL KXV$VCNTW ( FPT_X25 );
      169    16696    4                            RETURN;
      170    16697    4                         END;
      171    16698    3                   IF KH$CHN.TERMID.TERM.SUBDEVICE ~= 0
      172    16699    3                      THEN
      173    16700    4                         DO;
      174    16701    4                            DVC$ = KX$L3.L2$->KX$L2.DVC_HEAD$;
      175    16702    5                            DO WHILE ( DVC$ ~= ADDR(NIL) AND
      176    16703    5                               KH$CHN.TERMID.TERM.SUBDEVICE ~= KX$LINKDEV.SUBADR );
      177    16704    5                               DVC$ = KX$LINKDEV.FLNK$;
      178    16705    5                            END;
      179    16706    4                            IF DVC$ ~= ADDR(NIL)   /* found a match */
      180    16707    4                               THEN
      181    16708    4                                  IF KX$LINKDEV.OPNSSN AND KX$LINKDEV.INBOUND
      182    16709    4                                     THEN
      183    16710    5                                        DO;
      184    16711    5                                           GOTO FOUND_PM;
      185    16712    5                                        END;
      186    16713    4                                     ELSE
      187    16714        /* The circuit belongs to a LINKDEV that is not fully up. Clear it. */
      188    16715    5                                        DO;
      189    16716    5                                           CALL_FPT.PRM1 = %KX_DIAG_CALPRB#;
      190    16717    5                                           GOTO CLR_VC;
      191    16718    5                                        END;
      192    16719    4                         END;
      193    16720        /*
      194    16721            See if there is a valid protocol id.
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:9    
      195    16722        */
      196    16723    3                   IF FPT_X25.V_.BYTSIZ < 2
      197    16724    3                      THEN
      198    16725    4                         DO;
      199    16726        /*
      200    16727                                          There is no valid protocol id, best
      201    16728                                          bet is to give it to KXV$VCNTW.
      202    16729        */
      203    16730    4                            CALL KXV$VCNTW ( FPT_X25 );
      204    16731    4                         END;
      205    16732    3                      ELSE
      206    16733    4                         DO;
      207    16734    4                            PRTID = B$PKT.BYTARY ( FPT_X25.V_.BYTX );
      208    16735    5                            DO SELECT (PRTID);
      209    16736    5                               SELECT (%KX_PRTID_SL#);
      210    16737    5                               CALL KXV$VCNTW ( FPT_X25 );
      211    16738    5                               SELECT (%KX_PRTID_OSI#);
      212    16739    5                               FPT_X25.V_.BYTSIZ = 0;
      213    16740    5                               CALL KXV$VCNTW ( FPT_X25 );
      214    16741    5                               SELECT (%KX_PRTID_X29#);
      215    16742    5                               CALL KXX$X29 (FPT_X25);
      216    16743    5                               SELECT ( ELSE );
      217    16744        /*
      218    16745                                          No match for this protocol id.
      219    16746                                          It may belong to one of the LINKDEVs.
      220    16747        */
      221    16748    5                            DVC$ = KX$L3.L2$->KX$L2.DVC_HEAD$;
      222    16749    6                            DO WHILE ( DVC$ ~= ADDR(NIL) );
      223    16750    6                               IF KX$LINKDEV.OPNSSN AND
      224    16751    6                                  KX$LINKDEV.INBOUND AND
      225    16752    6                                  PRTID = KX$LINKDEV.PRTID
      226    16753    6                                  THEN
      227    16754    7                                     DO;
      228    16755    7   FOUND_PM:                            FPT_X25.PRM1$ = DVC$;
      229    16756    7                                        CALL KXV$VCVDH ( FPT_X25 );
      230    16757    7                                        RETURN;
      231    16758    7                                     END;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:10   
      232    16759    6                               DVC$ = KX$LINKDEV.FLNK$;
      233    16760    6                            END;
      234    16761                                 %WRSYSLOG ( ERRCOD = UNKPRTID,
      235    16762                                 TRMID = KH$CHN.TERMID,
      236    16763                                 VAL0 = PRTID );
      237    16781    5                            CALL_FPT.PRM1 = %KX_DIAG_UNKPRTID#;
      238    16782    5   CLR_VC:                  CALL_FPT.EVN = %KX_P_EV_VCDWN#;
      239    16783    5                            CALL_FPT.RCV$ = FPT_X25.CAL$;
      240    16784    5                            CALL_FPT.PRS.PRM1 = '1'B;
      241    16785    5                            CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );
      242    16786    5                            END;
      243    16787    4                         END;
      244    16788
      245    16789    3                   SELECT ( %KX_CM_EV_VCLST#, %KX_CM_EV_VCDWN# );
      246    16790        /*
      247    16791                                             This is Ok, since it assumed to
      248    16792                                             be for a VC that failed a DCL
      249    16793                                             or RMTDCL event previously.
      250    16794        */
      251    16795    3                   SELECT ( ELSE );
      252    16796
      253    16797        /*S* SCREECH_CODE: KXC-S$KX_NO_PMCTX#
      254    16798             MESSAGE: The connection manager received a call from packet
      255    16799                      which did not have the protocol manager's context
      256    16800                      address and was not for events DCL/RMTDCL.
      257    16801        */
      258    16802    3                CALL KHD$SCREECH ( Y_NO_PMCTX );
      259    16803
      260    16804    3                END;
      261    16805    2             END;
      262    16806
      263    16807    1       RETURN;
      264    16808    1   SCREECH_KXP: CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );
      265    16809
      266    16810    1   END KXC$CNCMNG;
      267    16811        %EOD;

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:11   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure KXC$CNCMNG.

   Procedure KXC$CNCMNG requires 353 words for executable code.
   Procedure KXC$CNCMNG requires 34 words of local(AUTO) storage.

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:12   

 Object Unit name= KXC$CNCMNG                                 File name= KXC$CNCMNG.:E05TOU
 UTS= JUL 30 '97 02:18:15.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      5      5  KXC$CNCMNG
    1   Proc  even  none   353    161  KXC$CNCMNG
    2  RoData even  none     2      2  KXC$CNCMNG

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        1  KXC$CNCMNG

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KXV$VCNTW
 yes     yes           Std       1 KXV$VCVDH
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       1 KXP$PACKET
         yes           Std       1 KXX$X29
         yes           Std       1 KHD$SCREECH
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:13   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$JIT$                                KX_PM$                           r    G$ROS$
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:14   


        1        1        /*M*  KXC$CNCMNG - Routines for common handling of protocol managers  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  PLM = 4, IND=3, CTI=3, DCI=6, IAD=0, DTI=6, AND=Y, CSI=3, THI=3, STI=3, DMC=Y
                 7         */
        8        8        /*P* NAME: KXC$CNCMNG                */
        9        9        /*P* PURPOSE: Routines for common handling of calls
       10       10                      from the Packet level and VDH for
       11       11                      the different protocol handlers
       12       12                      associated with X.25.  */
       13       13
       14       14        /*F* NAME: KXC$CNCMNG                */
       15       15        /*F* PURPOSE: Handle all calls from the Packet level  */
       16       16
       17       17        /*D* NAME: KXC$CNCMNG                */
       18       18        /*D* PURPOSE: Handle all calls from the Packet level
       19       19                      to the protocol managers, including
       20       20                      deciding which protocol manager to
       21       21                      assign the new connections to.  */
       22       22        /*D* CALL: CALL KXC$CNCMNG ( FPT_X25 );  */
       23       23        /*D* INPUT: FPT_X25 - details what operation to perform  */
       24       24        /*D* OUTPUT: FPT_X25.RCV$ - Set up if null on entry  */
       25       25
       26       26        KXC$CNCMNG: PROC ( FPT_X25 ) ALTRET;

     26   1 000000  D380 0000 0000  xent KXC$CNCMNG      LNJ,B5   X6A_AUTO_1
          1 000003       0022 0001                       DC       34,1

       27       27        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:15   
       28       28        /*****************************************************************
       29       29        *                                                                *
       30       30        *                           Includes                             *
       31       31        *                                                                *
       32       32        *****************************************************************/
       33       33
       34       34        %INCLUDE CP_6_SUBS;
       35      574        %INCLUDE G_JIT_M;
       36      839        %INCLUDE K_ID_E;
       37      889        %K#ENTID_E;
       38      908        %K#LYRID_E;
       39      915        %INCLUDE KL_MACRO_C;
       40     4267        %INCLUDE KL_AFCN_C;
       41     4368        %INCLUDE KL_SUPER_C;
       42     7270        %INCLUDE LCP_6;
       43    11549        %INCLUDE KH$CHN;
       44    11671        %INCLUDE KX_EQUS_E;
       45    12110        %INCLUDE KX_PERR_C;
       46    12239        %INCLUDE KX_SCODE_C;
       47    12305        %INCLUDE KX_DATA_C;
       48    12373        %INCLUDE KX_MACROS_M;
       49    13144        %INCLUDE KV_GLBCNS_E;
       50    13485        %KV#CQ_HNDID_E;
       51    13490        %INCLUDE K_ADDRESS_M;
       52    13993        %INCLUDE KNH_MACRO_C;
       53    14276        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:16   
       54    14277        /*****************************************************************
       55    14278        *                                                                *
       56    14279        *                           External References                  *
       57    14280        *                                                                *
       58    14281        *****************************************************************/
       59    14282
       60    14283    1   DCL KXP$PACKET ENTRY (1) ALTRET;
       61    14284    1   DCL KXS$Q_SYSLOG ENTRY (1);
       62    14285    1   DCL KXS$SYSLOG ENTRY (7);
       63    14286    1   DCL KXV$VCNTW ENTRY (1) ALTRET;
       64    14287    1   DCL KXX$X29 ENTRY (1);
       65    14288    1   DCL KXV$VCVDH ENTRY (1) ALTRET;
       66    14289    1   DCL KHD$SCREECH ENTRY (1);
       67    14290    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
       68    14291        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:17   
       69    14292        /*****************************************************************
       70    14293        *                                                                *
       71    14294        *                           Auto                                 *
       72    14295        *                                                                *
       73    14296        *****************************************************************/
       74    14297
       75    14298        %FPT_X25 ( STCLASS = );
       76    14342
       77    14343        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
       78    14387    1   DCL PRTID UBIN;
       79    14388    1   DCL DVC$ PTR;
       80    14389    1   DCL NODE# UBIN;
       81    14390        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:18   
       82    14391        /*****************************************************************
       83    14392        *                                                                *
       84    14393        *                           Based                                *
       85    14394        *                                                                *
       86    14395        *****************************************************************/
       87    14396
       88    14397    1   DCL BENTADDR EPTR BASED;
       89    14398    1   DCL 1 B$PKT ALIGNED BASED ( FPT_X25.V_.ADR$ ),
       90    14399    1         2 BYTARY(0:399) UBIN BYTE CALIGNED;
       91    14400        %KX$L3 ( STCLASS = "BASED(FPT_X25.CAL$)" );
       92    14803        %KX$L2;
       93    15170        %KX$LINKDEV ( STCLASS = "BASED(DVC$)" );
       94    15197        %KX$CALL_OPTS ( STCLASS = "BASED (FPT_X25.PRM1$)" );
       95    15232        %KH$CHN ( STCLASS = "BASED ( FPT_X25.PRM2$ )" );
       96    15356        %G$JIT ( STCLASS = "BASED(G$JIT$)" );
       97    15770        %VLP_SCODE ( FPTN=B$SCODE,STCLASS=BASED );
       98    15831        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:19   
       99    15832        /*****************************************************************
      100    15833        *                                                                *
      101    15834        *                           Constant                             *
      102    15835        *                                                                *
      103    15836        *****************************************************************/
      104    15837
      105    15838        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='C',SEV=%G_WRSYSLOG_SEV_FATAL_PROT#,
      106    15839                           FPTN = UNKPRTID,
      107    15840                           ERR# = %E_KXC_UNKPRTID# );
      108    15886        /*E*   ERROR:      KXC-E_KXC_UNKPRTID#-4
      109    15887               MESSAGE:    Unknown protocol-id specified in call packet.
      110    15888        */
      111    15889        %VLP_SCODE (FPTN=Y_NO_PMCTX,STCLASS=CONSTANT,FCG=KX,MID=C,ERR#=%S$KX_NO_PMCTX#);
      112    15950        /*****************************************************************
      113    15951        *                                                                *
      114    15952        *                           Static                               *
      115    15953        *                                                                *
      116    15954        *****************************************************************/
      117    15955
      118    15956    1   DCL G$JIT$ PTR SYMREF;
      119    15957        %KX_DATA;
      120    16647        %EJECT;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:20   
      121    16648        /*****************************************************************
      122    16649        *                                                                *
      123    16650        *                           Procedure                            *
      124    16651        *                                                                *
      125    16652        *****************************************************************/
      126    16653
      127    16654        /*
      128    16655                                             In most cases, this routine is
      129    16656                                             just a transparent pass-thru.
      130    16657                                             As long as FPT_X25.RCV$ is not
      131    16658                                             null, then pass the fpt on to
      132    16659                                             the proper handler.
      133    16660        */
      134    16661    1       IF FPT_X25.RCV$ ~= ADDR(NIL)

  16661   1 000005  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 000007  8DC6 0003                            CMN      3,B6
          1 000009  0901 0011                            BE       s:16671,PREL

      135    16662    1          THEN
      136    16663    2             DO;

      137    16664    2                CALL FPT_X25.RCV$ -> BENTADDR ( FPT_X25 ) WHENALTRETURN

  16664   1 00000B  DCC6 0003                            LDB,B5   3,B6
          1 00000D  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 00000F  9C85                                 LDB,B1   ,B5
          1 000010  CBF0 0100                            LAB,B4   256,IMO
          1 000012  E381                                 LNJ,B6   ,B1
          1 000013       0003                            DC       s:16665,PREL
          1 000014  0F81 0004                            B        s:16668,PREL

      138    16665    3                      DO;

      139    16666    3   L_ALTRET:             ALTRETURN;

  16666   1 000016  C380 0000 0000  xent L_ALTRET        LNJ,B4   X6A_AALT
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:21   

      140    16667    3                      END;
      141    16668    2             END;

  16668   1 000019  0F81 0139                            B        s:16807,PREL

      142    16669    1          ELSE
      143    16670    2             DO;

      144    16671    3                DO SELECT ( FPT_X25.EVN );

  16671   1 00001B  E806                                 LDR,R6   ,B6
          1 00001C  E970 0002                            CMR,R6   2,IMO
          1 00001E  0201 000E                            BL       s:16671+18,PREL
          1 000020  0901 001B                            BE       s:16687,PREL
          1 000022  E970 0004                            CMR,R6   4,IMO
          1 000024  0201 0125                            BL       s:16802,PREL
          1 000026  0901 0121                            BE       s:16789,PREL
          1 000028  6D05                                 CMV,R6   5
          1 000029  0981 0120                            BNE      s:16802,PREL
          1 00002B  0F81 011C                            B        s:16789,PREL
          1 00002D  6D01                                 CMV,R6   1
          1 00002E  0981 011B                            BNE      s:16802,PREL
          1 000030  0F81 0001                            B        s:16679,PREL

      145    16672    3                   SELECT ( %KX_CM_EV_DCL# );

      146    16673        /*
      147    16674                                             If the destination node number is <=
      148    16675                                             200, this circuit should be assigned
      149    16676                                             to SL. How to handle the otherwise
      150    16677                                             case is not obvious now.
      151    16678        */
      152    16679    3                   CALL KXV$VCNTW ( FPT_X25 );

  16679   1 000032  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 000034  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:22   
          1 000036  E380 0000 0000  xent                 LNJ,B6   KXV$VCNTW
          1 000039       0001                            DC       s:16679+8,PREL
          1 00003A  0F81 0118                            B        s:16807,PREL

      153    16680
      154    16681    3                   SELECT ( %KX_CM_EV_RMTDCL# );

      155    16682        /*
      156    16683                                             This is normal for RMTDCL.  From
      157    16684                                             the caller's network address, the
      158    16685                                             VC must be assigned to a handler.
      159    16686        */
      160    16687    3                   CALL_FPT = '0'B;

  16687   1 00003C  5C20                                 LDV,R5   32
          1 00003D  0021                                 ALR      ;
          1 00003E       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          1 000040       4007 0006                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

      161    16688        /*
      162    16689            Check if this call is on a reserved subaddress.
      163    16690        */
      164    16691    3                   IF KH$CHN.TERMID.TERM.SUBDEVICE = 99

  16691   1 000042  437F                                 CSYNC    s:16687+5,SPREL
          1 000043  DCC6 0009                            LDB,B5   9,B6
          1 000045  E845 0014                            LDR,R6   20,B5
          1 000047  6D63                                 CMV,R6   99
          1 000048  0981 000E                            BNE      s:16698,PREL

      165    16692    3                      THEN
      166    16693    4                         DO;

      167    16694    4                            FPT_X25.V_.BYTSIZ = 0;

  16694   1 00004A  8746 000E                            CL       14,B6

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:23   
      168    16695    4                            CALL KXV$VCNTW ( FPT_X25 );

  16695   1 00004C  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 00004E  CBF0 0100                            LAB,B4   256,IMO
          1 000050  E380 0000 0000  xent                 LNJ,B6   KXV$VCNTW
          1 000053       0001                            DC       s:16696,PREL

      169    16696    4                            RETURN;

  16696   1 000054  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      170    16697    4                         END;
      171    16698    3                   IF KH$CHN.TERMID.TERM.SUBDEVICE ~= 0

  16698   1 000057  6901 0039                            BEZ,R6   s:16723,PREL

      172    16699    3                      THEN
      173    16700    4                         DO;

      174    16701    4                            DVC$ = KX$L3.L2$->KX$L2.DVC_HEAD$;

  16701   1 000059  CCC6 0001                            LDB,B4   1,B6
          1 00005B  BCC4 0002                            LDB,B3   2,B4
          1 00005D  ACC3 0068                            LDB,B2   104,B3
          1 00005F  AFC7 0017                            STB,B2   DVC$,AUTO

      175    16702    5                            DO WHILE ( DVC$ ~= ADDR(NIL) AND

  16702   1 000061  0F81 0007                            B        s:16705,PREL

      176    16703    5                               KH$CHN.TERMID.TERM.SUBDEVICE ~= KX$LINKDEV.SUBADR );
      177    16704    5                               DVC$ = KX$LINKDEV.FLNK$;

  16704   1 000063  ECC7 0017                            LDB,B6   DVC$,AUTO
          1 000065  DCC6 0006                            LDB,B5   6,B6
          1 000067  DFC7 0017                            STB,B5   DVC$,AUTO

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:24   
      178    16705    5                            END;

  16705   1 000069  8DC7 0017                            CMN      DVC$,AUTO
          1 00006B  0901 000E                            BE       s:16706,PREL
          1 00006D  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 00006F  DCC6 0009                            LDB,B5   9,B6
          1 000071  CCC7 0017                            LDB,B4   DVC$,AUTO
          1 000073  E844 0012                            LDR,R6   18,B4
          1 000075  E570 00FF                            AND,R6   255,IMO
          1 000077  E945 0014                            CMR,R6   20,B5
          1 000079  09EA                                 BNE      s:16704,SPREL

      179    16706    4                            IF DVC$ ~= ADDR(NIL)   /* found a match */

  16706   1 00007A  8DC7 0017                            CMN      DVC$,AUTO
          1 00007C  0901 0014                            BE       s:16723,PREL

      180    16707    4                               THEN
      181    16708    4                                  IF KX$LINKDEV.OPNSSN AND KX$LINKDEV.INBOUND

  16708   1 00007E  ECC7 0017                            LDB,B6   DVC$,AUTO
          1 000080  82C6 0017                            LB,'0020'X        23,B6
          1 000082       0020
          1 000083  0581 0008                            BBF      s:16716,PREL
          1 000085  82C6 0017                            LB,'0040'X        23,B6
          1 000087       0040
          1 000088  0581 0003                            BBF      s:16716,PREL

      182    16709    4                                     THEN
      183    16710    5                                        DO;

      184    16711    5                                           GOTO FOUND_PM;

  16711   1 00008A  0F81 006B                            B        s:16754,PREL

      185    16712    5                                        END;
      186    16713    4                                     ELSE
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:25   
      187    16714        /* The circuit belongs to a LINKDEV that is not fully up. Clear it. */
      188    16715    5                                        DO;

      189    16716    5                                           CALL_FPT.PRM1 = %KX_DIAG_CALPRB#;

  16716   1 00008C  6C40                                 LDV,R6   64
          1 00008D  EF47 000B                            STR,R6   CALL_FPT+5,AUTO

      190    16717    5                                           GOTO CLR_VC;

  16717   1 00008F  0F81 009E                            B        s:16782,PREL

      191    16718    5                                        END;
      192    16719    4                         END;
      193    16720        /*
      194    16721            See if there is a valid protocol id.
      195    16722        */
      196    16723    3                   IF FPT_X25.V_.BYTSIZ < 2

  16723   1 000091  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 000093  E846 000E                            LDR,R6   14,B6
          1 000095  6D02                                 CMV,R6   2
          1 000096  0281 000B                            BGE      s:16734,PREL

      197    16724    3                      THEN
      198    16725    4                         DO;

      199    16726        /*
      200    16727                                          There is no valid protocol id, best
      201    16728                                          bet is to give it to KXV$VCNTW.
      202    16729        */
      203    16730    4                            CALL KXV$VCNTW ( FPT_X25 );

  16730   1 000098  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 00009A  CBF0 0100                            LAB,B4   256,IMO
          1 00009C  E380 0000 0000  xent                 LNJ,B6   KXV$VCNTW
          1 00009F       0001                            DC       s:16731,PREL
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:26   

      204    16731    4                         END;

  16731   1 0000A0  0F81 00B2                            B        s:16807,PREL

      205    16732    3                      ELSE
      206    16733    4                         DO;

      207    16734    4                            PRTID = B$PKT.BYTARY ( FPT_X25.V_.BYTX );

  16734   1 0000A2  DCC6 000B                            LDB,B5   11,B6
          1 0000A4  B846 000D                            LDR,R3   13,B6
          1 0000A6  D2B5                                 LLH,R5   ,B5,R3
          1 0000A7  DF47 0016                            STR,R5   PRTID,AUTO

      208    16735    5                            DO SELECT (PRTID);

  16735   1 0000A9  D970 0003                            CMR,R5   3,IMO
          1 0000AB  0201 0009                            BL       s:16735+12,PREL
          1 0000AD  0901 0016                            BE       s:16739,PREL
          1 0000AF  D970 00C1                            CMR,R5   193,IMO
          1 0000B1  0981 0028                            BNE      s:16748,PREL
          1 0000B3  0F81 0006                            B        s:16737,PREL
          1 0000B5  5D01                                 CMV,R5   1
          1 0000B6  0981 0023                            BNE      s:16748,PREL
          1 0000B8  0F81 0017                            B        s:16742,PREL

      209    16736    5                               SELECT (%KX_PRTID_SL#);

      210    16737    5                               CALL KXV$VCNTW ( FPT_X25 );

  16737   1 0000BA  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 0000BC  CBF0 0100                            LAB,B4   256,IMO
          1 0000BE  E380 0000 0000  xent                 LNJ,B6   KXV$VCNTW
          1 0000C1       0001                            DC       s:16737+8,PREL
          1 0000C2  0F81 0090                            B        s:16807,PREL

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:27   
      211    16738    5                               SELECT (%KX_PRTID_OSI#);

      212    16739    5                               FPT_X25.V_.BYTSIZ = 0;

  16739   1 0000C4  8746 000E                            CL       14,B6

      213    16740    5                               CALL KXV$VCNTW ( FPT_X25 );

  16740   1 0000C6  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 0000C8  CBF0 0100                            LAB,B4   256,IMO
          1 0000CA  E380 0000 0000  xent                 LNJ,B6   KXV$VCNTW
          1 0000CD       0001                            DC       s:16740+8,PREL
          1 0000CE  0F81 0084                            B        s:16807,PREL

      214    16741    5                               SELECT (%KX_PRTID_X29#);

      215    16742    5                               CALL KXX$X29 (FPT_X25);

  16742   1 0000D0  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 0000D2  CBF0 0100                            LAB,B4   256,IMO
          1 0000D4  E380 0000 0000  xent                 LNJ,B6   KXX$X29
          1 0000D7       0001                            DC       s:16742+8,PREL
          1 0000D8  0F81 007A                            B        s:16807,PREL

      216    16743    5                               SELECT ( ELSE );

      217    16744        /*
      218    16745                                          No match for this protocol id.
      219    16746                                          It may belong to one of the LINKDEVs.
      220    16747        */
      221    16748    5                            DVC$ = KX$L3.L2$->KX$L2.DVC_HEAD$;

  16748   1 0000DA  DCC6 0001                            LDB,B5   1,B6
          1 0000DC  CCC5 0002                            LDB,B4   2,B5
          1 0000DE  BCC4 0068                            LDB,B3   104,B4
          1 0000E0  BFC7 0017                            STB,B3   DVC$,AUTO

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:28   
      222    16749    6                            DO WHILE ( DVC$ ~= ADDR(NIL) );

  16749   1 0000E2  0F81 0026                            B        s:16760,PREL

      223    16750    6                               IF KX$LINKDEV.OPNSSN AND

  16750   1 0000E4  ECC7 0017                            LDB,B6   DVC$,AUTO
          1 0000E6  82C6 0017                            LB,'0020'X        23,B6
          1 0000E8       0020
          1 0000E9  0581 001B                            BBF      s:16759,PREL
          1 0000EB  82C6 0017                            LB,'0040'X        23,B6
          1 0000ED       0040
          1 0000EE  0581 0016                            BBF      s:16759,PREL
          1 0000F0  E2C6 0012                            LLH,R6   18,B6
          1 0000F2  E947 0016                            CMR,R6   PRTID,AUTO
          1 0000F4  0981 0010                            BNE      s:16759,PREL

      224    16751    6                                  KX$LINKDEV.INBOUND AND
      225    16752    6                                  PRTID = KX$LINKDEV.PRTID
      226    16753    6                                  THEN
      227    16754    7                                     DO;

      228    16755    7   FOUND_PM:                            FPT_X25.PRM1$ = DVC$;

  16755   1 0000F6  DCC7 0004            FOUND_PM        LDB,B5   @FPT_X25,AUTO
          1 0000F8  EFC5 0007                            STB,B6   7,B5

      229    16756    7                                        CALL KXV$VCVDH ( FPT_X25 );

  16756   1 0000FA  BBC7 0004                            LAB,B3   @FPT_X25,AUTO
          1 0000FC  CBF0 0100                            LAB,B4   256,IMO
          1 0000FE  E380 0000 0000  xent                 LNJ,B6   KXV$VCVDH
          1 000101       0001                            DC       s:16757,PREL

      230    16757    7                                        RETURN;

  16757   1 000102  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:29   

      231    16758    7                                     END;
      232    16759    6                               DVC$ = KX$LINKDEV.FLNK$;

  16759   1 000105  DCC6 0006                            LDB,B5   6,B6
          1 000107  DFC7 0017                            STB,B5   DVC$,AUTO

      233    16760    6                            END;

  16760   1 000109  8DC7 0017                            CMN      DVC$,AUTO
          1 00010B  09D9                                 BNE      s:16750,SPREL

      234    16761                                 %WRSYSLOG ( ERRCOD = UNKPRTID,
      235    16762                                 TRMID = KH$CHN.TERMID,
      236    16763                                 VAL0 = PRTID );

  16779   1 00010C  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 00010E  DCC6 0009                            LDB,B5   9,B6
          1 000110  CBC7 0016                            LAB,B4   PRTID,AUTO
          1 000112  CFC7 0020                            STB,B4   DVC$+9,AUTO
          1 000114  BB80 0000 0000                       LAB,B3   0
          1 000117  BFC7 001E                            STB,B3   DVC$+7,AUTO
          1 000119  ABC5 0012                            LAB,B2   18,B5
          1 00011B  AFC7 001C                            STB,B2   DVC$+5,AUTO
          1 00011D  DB80 0000 0000  00                   LAB,B5   UNKPRTID
          1 000120  DFC7 001A                            STB,B5   DVC$+3,AUTO
          1 000122  BBC7 001A                            LAB,B3   DVC$+3,AUTO
          1 000124  CBF0 0400                            LAB,B4   1024,IMO
          1 000126  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          1 000129       0001                            DC       s:16781,PREL

      237    16781    5                            CALL_FPT.PRM1 = %KX_DIAG_UNKPRTID#;

  16781   1 00012A  E870 00CA                            LDR,R6   202,IMO
          1 00012C  EF47 000B                            STR,R6   CALL_FPT+5,AUTO

      238    16782    5   CLR_VC:                  CALL_FPT.EVN = %KX_P_EV_VCDWN#;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:30   

  16782   1 00012E  5C05                 CLR_VC          LDV,R5   5
          1 00012F  DF47 0006                            STR,R5   CALL_FPT,AUTO

      239    16783    5                            CALL_FPT.RCV$ = FPT_X25.CAL$;

  16783   1 000131  ECC7 0004                            LDB,B6   @FPT_X25,AUTO
          1 000133  DCC6 0001                            LDB,B5   1,B6
          1 000135  DFC7 0009                            STB,B5   CALL_FPT+3,AUTO

      240    16784    5                            CALL_FPT.PRS.PRM1 = '1'B;

  16784   1 000137  8947 0015                            LBT,'8000'X       CALL_FPT+15,AUTO
  16784   1 000139       8000

      241    16785    5                            CALL KXP$PACKET ( CALL_FPT ) ALTRET ( SCREECH_KXP );

  16785   1 00013A  CBC7 0006                            LAB,B4   CALL_FPT,AUTO
          1 00013C  CFC7 001A                            STB,B4   DVC$+3,AUTO
          1 00013E  BBC7 001A                            LAB,B3   DVC$+3,AUTO
          1 000140  CBF0 0100                            LAB,B4   256,IMO
          1 000142  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          1 000145       0011                            DC       s:16808,PREL

      242    16786    5                            END;

      243    16787    4                         END;

  16787   1 000146  0F81 000C                            B        s:16807,PREL

      244    16788
      245    16789    3                   SELECT ( %KX_CM_EV_VCLST#, %KX_CM_EV_VCDWN# );

  16789   1 000148  0F81 000A                            B        s:16807,PREL

      246    16790        /*
      247    16791                                             This is Ok, since it assumed to
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:31   
      248    16792                                             be for a VC that failed a DCL
      249    16793                                             or RMTDCL event previously.
      250    16794        */
      251    16795    3                   SELECT ( ELSE );

      252    16796
      253    16797        /*S* SCREECH_CODE: KXC-S$KX_NO_PMCTX#
      254    16798             MESSAGE: The connection manager received a call from packet
      255    16799                      which did not have the protocol manager's context
      256    16800                      address and was not for events DCL/RMTDCL.
      257    16801        */
      258    16802    3                CALL KHD$SCREECH ( Y_NO_PMCTX );

  16802   1 00014A  BB80 0000 0000  02                   LAB,B3   0
          1 00014D  CBF0 0100                            LAB,B4   256,IMO
          1 00014F  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 000152       0001                            DC       s:16807,PREL

      259    16803
      260    16804    3                END;

      261    16805    2             END;

      262    16806
      263    16807    1       RETURN;

  16807   1 000153  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      264    16808    1   SCREECH_KXP: CALL KHD$SCREECH ( CALL_FPT.PRM1$->B$SCODE );

  16808   1 000156  BBC7 000D            SCREECH_KXP     LAB,B3   CALL_FPT+7,AUTO
          1 000158  CBF0 0100                            LAB,B4   256,IMO
          1 00015A  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          1 00015D       0001                            DC       s:16810,PREL

      265    16809
      266    16810    1   END KXC$CNCMNG;
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:32   

  16810   1 00015E  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      267    16811        %EOD;

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:33   
--  Include file information  --

   KNH_MACRO_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
      No diagnostics issued in procedure KXC$CNCMNG.
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:34   

 **** Variables and constants ****

  ****  Section 000 RoData KXC$CNCMNG

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 UNKPRTID                   2-0-0/w STRC(48)    r     1 Y_NO_PMCTX

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @FPT_X25                   6-0-0/w STRC(256)   r     1 CALL_FPT
    17-0-0/w PTR         r     1 DVC$                      *0-0-0/w STRC(256)   r     1 FPT_X25
    16-0-0/w UBIN(16)    r     1 PRTID

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/b EPTR        r     1 KX_PM$(0:2)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(3200)  r     1 B$PKT                      0-0-0/w STRC(48)    r     1 B$SCODE
     0-0-0/w EPTR        r     1 BENTADDR                   0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(4992)  r     1 KX$L2                      0-0-0/w STRC(2320)  r     1 KX$L3
     0-0-0/w STRC(384)   r     1 KX$LINKDEV

PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:35   

   Procedure KXC$CNCMNG requires 353 words for executable code.
   Procedure KXC$CNCMNG requires 34 words of local(AUTO) storage.
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:36   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:37   
          MINI XREF LISTING

B$PKT.BYTARY
     14399**DCL     16734>>ASSIGN
B$SCODE
     15797**DCL     16808<>CALL
BENTADDR
     14397**DCL     16664>>CALL
CALL_FPT
     14370**DCL     16687<<ASSIGN  16785<>CALL
CALL_FPT.EVN
     14374**DCL     16782<<ASSIGN
CALL_FPT.PRM1
     14375**DCL     16716<<ASSIGN  16781<<ASSIGN
CALL_FPT.PRM1$
     14375**DCL     14376--REDEF   16808>>CALL
CALL_FPT.PRM2$
     14377**DCL     14377--REDEF
CALL_FPT.PRS.PRM1
     14380**DCL     16784<<ASSIGN
CALL_FPT.RCV$
     14374**DCL     16783<<ASSIGN
CLR_VC
     16782**LABEL   16717--GOTO
DVC$
     14388**DCL     15188--IMP-PTR 16701<<ASSIGN  16702>>DOWHILE 16702>>DOWHILE 16704<<ASSIGN  16704>>ASSIGN
     16706>>IF      16708>>IF      16708>>IF      16748<<ASSIGN  16749>>DOWHILE 16750>>IF      16750>>IF
     16750>>IF      16755>>ASSIGN  16759<<ASSIGN  16759>>ASSIGN
FOUND_PM
     16755**LABEL   16711--GOTO
FPT_X25
     14325**DCL        26--PROC    16664<>CALL    16679<>CALL    16695<>CALL    16730<>CALL    16737<>CALL
     16740<>CALL    16742<>CALL    16756<>CALL
FPT_X25.CAL$
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:38   
     14329**DCL     14420--IMP-PTR 16701>>ASSIGN  16748>>ASSIGN  16783>>ASSIGN
FPT_X25.EVN
     14329**DCL     16671>>DOSELCT
FPT_X25.PRM1$
     14330**DCL     14331--REDEF   15222--IMP-PTR 16755<<ASSIGN
FPT_X25.PRM2$
     14332**DCL     14332--REDEF   15247--IMP-PTR 16691>>IF      16698>>IF      16702>>DOWHILE 16779>>CALL
FPT_X25.RCV$
     14329**DCL     16661>>IF      16664>>CALL
FPT_X25.V_.ADR$
     14333**DCL     14398--IMP-PTR 16734>>ASSIGN
FPT_X25.V_.BYTSIZ
     14334**DCL     16694<<ASSIGN  16723>>IF      16739<<ASSIGN
FPT_X25.V_.BYTX
     14334**DCL     16734>>ASSIGN
G$JIT.ERRLOG
     15700**DCL     15703--REDEF
G$JIT.JSUNIT
     15439**DCL     15440--REDEF
G$JIT.MCLS
     15438**DCL     15438--REDEF
G$JIT.TMRZ
     15707**DCL     15708--REDEF
G$JIT.USER_EXTIME
     15431**DCL     15432--REDEF
G$JIT.USER_MEMTIME
     15434**DCL     15434--REDEF
G$JIT.USER_SVTIME
     15433**DCL     15433--REDEF
G$JIT$
     15956**DCL     15370--IMP-PTR
KH$CHN.TERMID
     15341**DCL     16779<>CALL
KH$CHN.TERMID.TERM
     15343**DCL     15352--REDEF
KH$CHN.TERMID.TERM.SUBDEVICE
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:39   
     15349**DCL     16691>>IF      16698>>IF      16702>>DOWHILE
KHD$SCREECH
     14289**DCL-ENT 16802--CALL    16808--CALL
KX$CALL_OPTS.RCVADR.ADR_STRING
     15229**DCL     15229--REDEF
KX$L2.DFLVCPRF.TRADEL
     14961**DCL     14971--REDEF
KX$L2.DSTSNPA.ADR_STRING
     15152**DCL     15152--REDEF
KX$L2.DVC_HEAD$
     15158**DCL     16701>>ASSIGN  16748>>ASSIGN
KX$L2.FRMR_NSNR
     14938**DCL     14939--REDEF
KX$L2.NTWADR.ADR_STRING
     14872**DCL     14872--REDEF
KX$L2.STATES
     14850**DCL     14850--REDEF
KX$L3.CALL_OPTS.RCVADR.ADR_STRING
     14460**DCL     14460--REDEF
KX$L3.CM_OPTS.RCVADR.ADR_STRING
     14495**DCL     14495--REDEF
KX$L3.CUG
     14538**DCL     14539--REDEF
KX$L3.DFL_OPTS.RCVADR.ADR_STRING
     14530**DCL     14530--REDEF
KX$L3.L2$
     14420**DCL     16701>>ASSIGN  16748>>ASSIGN
KX$L3.LCLADR.ADR_STRING
     14655**DCL     14655--REDEF
KX$L3.LCLNSAP
     14672**DCL     14728--REDEF
KX$L3.LCLNSAP.NSAP.ADDRESS_N
     14723**DCL     14724--REDEF
KX$L3.LCN#
     14537**DCL     14538--REDEF
KX$L3.RMTNSAP
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:40   
     14745**DCL     14801--REDEF
KX$L3.RMTNSAP.NSAP.ADDRESS_N
     14796**DCL     14797--REDEF
KX$L3.STATES
     14543**DCL     14543--REDEF
KX$L3.TRNDLY
     14539**DCL     14540--REDEF
KX$L3.TRNDLYIND
     14540**DCL     14541--REDEF
KX$LINKDEV.FLNK$
     15189**DCL     16704>>ASSIGN  16759>>ASSIGN
KX$LINKDEV.INBOUND
     15193**DCL     16708>>IF      16750>>IF
KX$LINKDEV.OPNSSN
     15194**DCL     16708>>IF      16750>>IF
KX$LINKDEV.PRTID
     15192**DCL     16750>>IF
KX$LINKDEV.SUBADR
     15192**DCL     16702>>DOWHILE
KXP$PACKET
     14283**DCL-ENT 16785--CALL
KXS$SYSLOG
     14285**DCL-ENT 16779--CALL
KXV$VCNTW
     14286**DCL-ENT 16679--CALL    16695--CALL    16730--CALL    16737--CALL    16740--CALL
KXV$VCVDH
     14288**DCL-ENT 16756--CALL
KXX$X29
     14287**DCL-ENT 16742--CALL
KX_STATS_HDLC.REQSTATS.DSPMSK
     16244**DCL     16250--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     16285**DCL     16292--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     16569**DCL     16575--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
PL6.E3A0      #001=KXC$CNCMNG File=KXC$CNCMNG.:E05TSI                            WED 07/30/97 02:18 Page:41   
     16610**DCL     16617--REDEF
PRTID
     14387**DCL     16734<<ASSIGN  16735>>DOSELCT 16750>>IF      16779<>CALL
SCREECH_KXP
     16808**LABEL   16785--CALLALT
UNKPRTID
     15854**DCL     16779<>CALL
Y_NO_PMCTX
     15916**DCL     16802<>CALL

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:42   
      268        1        /*T***********************************************************/
      269        2        /*T*                                                         */
      270        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      271        4        /*T*                                                         */
      272        5        /*T***********************************************************/
      273        6        /*F* NAME: KXC$CQSCN                 */
      274        7        /*F* PURPOSE: Remove stuff from the RCQ.  */
      275        8
      276        9        /*D* NAME: KXC$CQSCN                 */
      277       10        /*D* PURPOSE: Removes messages from the RCQ
      278       11                      and processes them as long as
      279       12                      the RCQ is not empty and the
      280       13                      message is destined for an X.25
      281       14                      protocol manager.      */
      282       15        /*D* CALL: CALL KXC$CQSCN;           */
      283       16        /*D* INPUT: KNH_QHDR - circular queue header  */
      284       17        /*D* OUTPUT: KNH_QHDR.RCQ.RPTR - updated  */
      285       18
      286       19        KXC$CQSCN: PROC ( PARM_RPTR );
      287       20        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:43   
      288       21        /*****************************************************************
      289       22        *                                                                *
      290       23        *                           Includes                             *
      291       24        *                                                                *
      292       25        *****************************************************************/
      293       26
      294       27        %INCLUDE K_ID_E;
      295       77        %K#ENTID_E;
      296       96        %K#LYRID_E;
      297      103        %INCLUDE KL_MACRO_C;
      298     3455        %INCLUDE KL_AFCN_C;
      299     3556        %INCLUDE LCP_6;
      300     7835        %INCLUDE KH_MACRO_C;
      301     8578        %INCLUDE KL_CONTROL_C;
      302     8958        %INCLUDE KNH_MACRO_C;
      303     9241        %INCLUDE KX_EQUS_E;
      304     9680        %INCLUDE KX_PERR_C;
      305     9809        %INCLUDE KX_SCODE_C;
      306     9875        %INCLUDE KX_DATA_C;
      307     9943        %INCLUDE KX_MACROS_M;
      308    10714        %INCLUDE KV_GLBCNS_E;
      309    11055        %INCLUDE CP_6_SUBS;
      310    11595        %INCLUDE KV$BPC;
      311    11624        %INCLUDE K_REASON_C;
      312    11650        %INCLUDE K_ADDRESS_M;
      313    12153        %INCLUDE KL_SUPER_C;
      314    15055        %KV#CQ_HNDID_E;
      315    15060        %INCLUDE G_JIT_M;
      316    15325        %INCLUDE G$BOBCAT_M;
      317    15345        %INCLUDE GH_SCHD_M;
      318    15489        %INCLUDE GH_SCHD_E;
      319    15585        %INCLUDE KH$CHN;
      320    15707        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:44   
      321    15708        /*****************************************************************
      322    15709        *                                                                *
      323    15710        *                           External References                  *
      324    15711        *                                                                *
      325    15712        *****************************************************************/
      326    15713
      327    15714    1   DCL KHI$DISABLE ENTRY (1);
      328    15715    1   DCL KHI$ENABLE ENTRY;
      329    15716    1   DCL KXX$X29 ENTRY (1);
      330    15717    1   DCL KHD$SCREECH ENTRY (1);
      331    15718    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      332    15719    1   DCL KVM$SNDCQ ENTRY (1) ALTRET;
      333    15720    1   DCL KXF$FRAME ENTRY (1) ALTRET;
      334    15721    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      335    15722    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      336    15723    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
      337    15724    1   DCL KXP$PACKET ENTRY (1) ALTRET;
      338    15725    1   DCL KXS$GETL3 ENTRY (3) ALTRET;
      339    15726    1   DCL KXS$RLSL3 ENTRY (1);
      340    15727    1   DCL KXS$SYSLOG ENTRY (7);
      341    15728    1   DCL KXV$VCNTW ENTRY (1) ALTRET;
      342    15729        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:45   
      343    15730        /*****************************************************************
      344    15731        *                                                                *
      345    15732        *                           Auto                                 *
      346    15733        *                                                                *
      347    15734        *****************************************************************/
      348    15735
      349    15736        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
      350    15780    1   DCL MESS$ PTR;
      351    15781        %KNH@UID ( FPTN = UID, STCLASS = );
      352    15808    1   DCL PM$ EPTR;
      353    15809    1   DCL 1 PARM_RPTR,
      354    15810    1         2 STOP_PTR UBIN,    /* I tell VDH where I stopped */
      355    15811    1         2 START_PTR UBIN;   /* VDH tells me where to start */
      356    15812    1   DCL RCQ_RPTR UBIN;        /* local copy of RPTR */
      357    15813    1   DCL RPTR_INCR UBIN;
      358    15814    1   DCL LEVEL UBIN;
      359    15815        /*
      360    15816           flag to indicate whether we should report our exit to the protocol
      361    15817           manager. Set when there were any call to pass data.
      362    15818        */
      363    15819    1   DCL STOP_INCR_RPTR BIT(1);
      364    15820    1   DCL RPR_XIT BIT(1);
      365    15821    1   DCL WAITING BIT(1);       /* any LDCTs waiting for this HMI? */
      366    15822    1   DCL MESSFUNC UBIN;
      367    15823    1   DCL 1 FUNCTION REDEF MESSFUNC,   /* all this to take care of the free bit */
      368    15824    1         2 FNC UBIN(16) UNAL;
      369    15825    1   DCL START_RPTR SBIN;
      370    15826    1   DCL L2$ PTR;
      371    15827    1   DCL L3$ PTR;
      372    15828    1   DCL SL$ PTR;
      373    15829    1   DCL 1 KV@SNDCQ ALIGNED,
      374    15830    1         2 MSG_ (0:5),
      375    15831    1           3 ADR$ PTR,
      376    15832    1           3 BYTX UBIN WORD,
      377    15833    1           3 BYTSIZ UBIN WORD;
      378    15834    1   DCL CQMSG_BFR$ PTR;
      379    15835    1   DCL NXT_CQMSG_BFR$ PTR;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:46   
      380    15836        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:47   
      381    15837        /*****************************************************************
      382    15838        *                                                                *
      383    15839        *                           Based                                *
      384    15840        *                                                                *
      385    15841        *****************************************************************/
      386    15842
      387    15843        %KNH$QHDR ( FPTN = KNH_QHDR, STCLASS = "BASED ( G$HAND_Q$ )" );
      388    15856        %KNH$MESS ( FPTN = KNH_MESS, STCLASS = "BASED ( MESS$ )" );
      389    15905        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = "BASED ( KH_CTLTBL$ )" );
      390    16117    1   DCL BASED_WORD UBIN BASED;
      391    16118        %KV$BPC ( STCLASS = BASED );
      392    16140        %FPT_CONNECT ( FPTN=FPT$CONNECT, ADRTYP=NET, STCLASS="BASED(CALL_FPT.PRM1$)" );
      393    16311        %FPT_CONNECT_ACK ( FPTN = FPT$CONNECT_ACK, STCLASS = "BASED(CALL_FPT.PRM1$)" );
      394    16360        %KX$L2;
      395    16727        %KX$L3 ( STCLASS = "BASED(L3$)" );
      396    17130        %KX$SL;
      397    17169        %KNH$HMI ( STCLASS = BASED );
      398    17176        %G$USER ( FPTN="G$USER(0:0)",STCLASS=BASED );
      399    17187        %G$JIT ( STCLASS="BASED(G$JIT$)" );
      400    17601        %G$BOBCAT ( STCLASS="BASED(G$DS4$)" );
      401    17614
      402    17615    1   DCL 1 KX$CQMSG_BFR BASED(CQMSG_BFR$),
      403    17616    1         2 FLNK$ PTR,
      404    17617    1         2 BLNK$ PTR,
      405    17618    1         2 BFRWRDSIZ UBIN;
      406    17619        %FPT_NSAP ( FPTN=FPT$NSAP, STCLASS="BASED(CALL_FPT.PRM1$)", ADRTYP=X121 );
      407    17691    1   DCL B$EPTR EPTR BASED;
      408    17692        %KH$CHN;
      409    17816        %EQU L3CHN = %CHARTEXT('KX$L3.CHN$->KH$CHN');
      410    17817        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:48   
      411    17818        /*****************************************************************
      412    17819        *                                                                *
      413    17820        *                           Constant                             *
      414    17821        *                                                                *
      415    17822        *****************************************************************/
      416    17823
      417    17824        /*
      418    17825                                             The following tables are indexed
      419    17826                                             by KN_FCN_?, so they must be
      420    17827                                             kept parallel with those SETs.
      421    17828        */
      422    17829        /*
      423    17830                                             INITACK and TERMACK require
      424    17831                                             an FPT.
      425    17832        */
      426    17833    1   DCL FPTRQR (0:%KN_FCN_MAX) BIT(1) CONSTANT UNAL
      427    17834    1             INIT('0'B,'1'B*3,'0'B*6,'1'B,'0'B*5);
      428    17835
      429    17836        %KNH$MESS ( FPTN = KNH_INITNAK_MESS, STCLASS = STATIC,
      430    17837                    FUNCTION = %KN_FCN_INIT_ACK );
      431    17886        %FPT_CONNECT_ACK ( FPTN = FPT_CONNECT_NAK, STCLASS = CONSTANT,
      432    17887                           REASON = %K_REASON_NORTE );
      433    17936        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      434    17937                           FPTN = NO_L3CTX,
      435    17938                           ERR# = %E_KXP_NO_L3CTX# );
      436    17984        %KX$SL ( FPTN = KX_SL, STCLASS = CONSTANT );
      437    18023        %VLP_SCODE (FPTN=Y_ILG_CQMSG,STCLASS=CONSTANT,FCG=KX,MID=C,ERR#=%S$KX_ILG_CQMSG#);
      438    18084        /*S* SCREECH_CODE: KXC-S$KX_ILG_CQMSG#
      439    18085             MESSAGE: Read a illegal message from the circular queue.
      440    18086        */
      441    18087        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:49   
      442    18088        /*****************************************************************
      443    18089        *                                                                *
      444    18090        *                           Static/Symref                        *
      445    18091        *                                                                *
      446    18092        *****************************************************************/
      447    18093
      448    18094    1   DCL 1 KX_CQMSG_LIST STATIC,
      449    18095    1         2 HEAD$ PTR INIT(ADDR(NIL)),
      450    18096    1         2 TAIL$ PTR INIT(ADDR(NIL));
      451    18097    1   DCL G$HAND_Q$ PTR SYMREF;
      452    18098    1   DCL KH_CTLTBL$ PTR SYMREF;
      453    18099    1   DCL KV_RCVCQ$ PTR SYMREF;
      454    18100        %KX_DATA;
      455    18790    1   DCL G$JIT$ PTR SYMREF;
      456    18791    1   DCL G$DS4$ PTR SYMREF;
      457    18792    1   DCL KH_NODE# UBIN SYMREF;
      458    18793        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:50   
      459    18794        /*****************************************************************
      460    18795        *                                                                *
      461    18796        *                           Procedure                            *
      462    18797        *                                                                *
      463    18798        *****************************************************************/
      464    18799
      465    18800    1       CALL_FPT = '0'B;
      466    18801    1       RCQ_RPTR = KNH_QHDR.RCQ.RPTR;
      467    18802    1       START_RPTR = PARM_RPTR.START_PTR;
      468    18803    1       STOP_INCR_RPTR = '0'B;
      469    18804    1       RPR_XIT = '0'B;
      470    18805    1       IF G$BOBCAT.USRT$->G$USER.HMI$(G$JIT.USR#)->KNH$HMI.WAIT_COUNT > 0
      471    18806    1          THEN
      472    18807    1             WAITING = '1'B;
      473    18808    1          ELSE
      474    18809    1             WAITING = '0'B;
      475    18810        /*
      476    18811           Any messages in KX_CQMSG_LIST ?
      477    18812        */
      478    18813    1       CQMSG_BFR$ = KX_CQMSG_LIST.HEAD$;
      479    18814    1       CALL_FPT.EVN = %KX_CM_EV_DATOUT#;
      480    18815    2       DO WHILE ( CQMSG_BFR$ ~= ADDR(NIL) );
      481    18816    2          MESS$ = PINCRW ( CQMSG_BFR$, SIZEW(KX$CQMSG_BFR) );
      482    18817    2          IF KNH_MESS.FPTSZ > 0
      483    18818    2             THEN
      484    18819    2                CALL_FPT.PRM1$ = PINCRW ( MESS$, SIZEW ( KNH_MESS ) );
      485    18820    2             ELSE
      486    18821    2                CALL_FPT.PRM1$ = ADDR(NIL);
      487    18822    2          IF KNH_MESS.MSGSZ > 0
      488    18823    2             THEN
      489    18824    2                CALL_FPT.V_.ADR$ = PINCRW ( MESS$, SIZEW(KNH_MESS)+(KNH_MESS.FPTSZ/2) )
             18824                         ;
      490    18825    2             ELSE
      491    18826    2                CALL_FPT.V_.ADR$ = ADDR(NIL);
      492    18827    2          UID.UID = KNH_MESS.UID;
      493    18828    2          PM$ = KX_PM$ ( UID.UIDX.CQ_HNDID );
      494    18829    2          UID.UIDX.CQ_HNDID = 0;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:51   
      495    18830    2          CALL_FPT.RCV$ = UID.UID$;
      496    18831    2          CALL_FPT.PRM1 = KNH_MESS.LDCTX;
      497    18832    2          CALL_FPT.V_.BYTSIZ = KNH_MESS.MSGSZ;
      498    18833    2          NXT_CQMSG_BFR$ = KX$CQMSG_BFR.FLNK$;
      499    18834               %DISABLE;
      500    18837    2          CALL PM$ ( CALL_FPT ) WHENRETURN
      501    18838    3                DO;
      502    18839    3                   IF KX$CQMSG_BFR.BLNK$ ~= ADDR(NIL)
      503    18840    3                      THEN
      504    18841    3                         KX$CQMSG_BFR.BLNK$->KX$CQMSG_BFR.FLNK$ = KX$CQMSG_BFR.FLNK$;
      505    18842    3                   IF KX$CQMSG_BFR.FLNK$ ~= ADDR(NIL)
      506    18843    3                      THEN
      507    18844    3                         KX$CQMSG_BFR.FLNK$->KX$CQMSG_BFR.BLNK$ = KX$CQMSG_BFR.BLNK$;
      508    18845    3                   IF CQMSG_BFR$ = KX_CQMSG_LIST.HEAD$
      509    18846    3                      THEN
      510    18847    3                         KX_CQMSG_LIST.HEAD$ = KX$CQMSG_BFR.FLNK$;
      511    18848    3                   IF CQMSG_BFR$ = KX_CQMSG_LIST.TAIL$
      512    18849    3                      THEN
      513    18850    3                         KX_CQMSG_LIST.TAIL$ = KX$CQMSG_BFR.BLNK$;
      514    18851    3                   CALL KVB$RLSSYS ( KX$CQMSG_BFR.BFRWRDSIZ, CQMSG_BFR$ );
      515    18852    3                END;
      516    18853    2          CQMSG_BFR$ = NXT_CQMSG_BFR$;
      517    18854               %ENABLE;
      518    18857    2       END;  /* do while ( ... ) */
      519    18858
      520    18859    1       MESS$ = PINCRW ( KV_RCVCQ$, KNH_QHDR.RCQ.RPTR * 2 );
      521    18860        /*
      522    18861                                             Extract messages as long as the
      523    18862                                             RCQ is not empty and the current
      524    18863                                             message is destined for an X.25
      525    18864                                             protocol manager.
      526    18865        */
      527    18866    1   SCNLOP:
      528    18867    2       DO WHILE ( RCQ_RPTR ~= KNH_QHDR.RCQ.IPTR );
      529    18868        /* this prevents me from picking up a garbage function code, and then going
      530    18869           on to process a message put down by an interrupt */
      531    18870    2          MESSFUNC = KNH_MESS.FLAGS.FUNCTION;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:52   
      532    18871    2          IF START_RPTR = RCQ_RPTR
      533    18872    2             THEN
      534    18873    2                START_RPTR = -1; /* Set a flag saying we're past VDH */
      535    18874
      536    18875    2          IF KNH_MESS.FPTSZ > 0
      537    18876    2             THEN
      538    18877    2                CALL_FPT.PRM1$ = PINCRW ( MESS$, SIZEW ( KNH_MESS ));
      539    18878    2             ELSE
      540    18879    2                CALL_FPT.PRM1$ = ADDR(NIL);
      541    18880
      542    18881    2          IF KNH_MESS.MSGSZ > 0
      543    18882    2             THEN
      544    18883    2                CALL_FPT.V_.ADR$ = PINCRW ( MESS$, SIZEW ( KNH_MESS ) +
      545    18884    2                   ( KNH_MESS.FPTSZ / 2 ));
      546    18885    2             ELSE
      547    18886    2                CALL_FPT.V_.ADR$ = ADDR(NIL);
      548    18887
      549    18888    2          RPTR_INCR = ((( SIZEC ( KNH_MESS ) + KNH_MESS.FPTSZ + KNH_MESS.MSGSZ + 1 )
      550    18889    2             / 2 ) + 1 ) / 2;
      551    18890
      552    18891    2          IF KNH_MESS.FLAGS.FREE OR FUNCTION.FNC = %KN_FCN_NOP
      553    18892    2             THEN
      554    18893    2                GOTO UPDATE_RPTR;  /* Already processed message */
      555    18894    2          IF NOT KX_PM_CQHNDID(KNH_MESS.UIDX.CQ_HNDID)
      556    18895    2             THEN
      557    18896    2                IF START_RPTR < 0
      558    18897    2                   THEN
      559    18898    2                      EXIT SCNLOP;
      560    18899    2                   ELSE
      561    18900    2                      GOTO UPDATE_RPTR; /* VDH has already seen this one */
      562    18901    2          IF CALL_FPT.PRM1$ = ADDR(NIL) AND FPTRQR ( FUNCTION.FNC )
      563    18902    2             THEN
      564    18903    2                GOTO ILG_CQMSG;
      565    18904
      566    18905    2          UID.UID = KNH_MESS.UID;
      567    18906    2          PM$ = KX_PM$ ( UID.UIDX.CQ_HNDID );
      568    18907    2          UID.UIDX.CQ_HNDID = 0;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:53   
      569    18908
      570    18909    2          CALL_FPT.RCV$ = UID.UID$;
      571    18910    2          CALL_FPT.PRM1 = KNH_MESS.LDCTX;
      572    18911    2          CALL_FPT.V_.BYTSIZ = KNH_MESS.MSGSZ;
      573    18912
      574    18913    3          DO CASE ( KNH_MESS.FUNCTION );
      575    18914
      576    18915    3             CASE ( %KN_FCN_DATA );
      577    18916
      578    18917    3                IF CALL_FPT.PRM1$ ~= ADDR(NIL) AND CALL_FPT.RCV$->B$EPTR ~= ENTADDR(
             18917                         KXV$VCNTW)
      579    18918    3                   THEN
      580    18919    4                      DO;
      581    18920        /*
      582    18921           The only situation when an FPT precedes a data message when network
      583    18922           calls a link to start a new circuit to the destination in FPT_NSAP.
      584    18923           Verify that.
      585    18924        */
      586    18925    4                         CALL Y$CHK_L2 ( UID.UID$ ) ALTRET ( L_SKIP_IT );
      587    18926    4                         CALL Y$CHK_L3 ALTRET ( L_SKIP_IT );
      588    18927    4                         KNH_MESS.UIDX.CQ_HNDCTXID = UID.UIDX.CQ_HNDCTXID;
      589    18928    4                         CALL_FPT.RCV$ = UID.UID$;
      590    18929    4                      END;
      591    18930    3                CALL_FPT.EVN = %KX_CM_EV_DATOUT#;
      592    18931
      593    18932    3             CASE ( %KN_FCN_INIT );
      594    18933
      595    18934    3                CALL_FPT.EVN = %KX_CM_EV_CNCRQS#;
      596    18935    3                CALL Y$CHK_L2 ( UID.UID$ ) WHENALTRETURN
      597    18936        /*
      598    18937           UID$ is not a L2, which is invalid for a connection request.
      599    18938           Have to return a NO_ROUTE to network layer.
      600    18939        */
      601    18940    4                      DO;
      602    18941    4   L_INITNAK:            KNH_INITNAK_MESS.LDCTX = KNH_MESS.LDCTX;
      603    18942    4                         KNH_INITNAK_MESS.FPTSZ = LENGTHC(FPT_CONNECT_NAK);
      604    18943    4                         KV@SNDCQ = '0'B;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:54   
      605    18944    4                         KV@SNDCQ.MSG_.ADR$ (0) = ADDR(KNH_INITNAK_MESS);
      606    18945    4                         KV@SNDCQ.MSG_.BYTSIZ (0) = (LENGTHC(KNH_INITNAK_MESS)+3)/4*4;
      607    18946    4                         KV@SNDCQ.MSG_.ADR$ (1) = ADDR(FPT_CONNECT_NAK);
      608    18947    4                         KV@SNDCQ.MSG_.BYTSIZ (1) = (LENGTHC(FPT_CONNECT_NAK)+3)/4*4;
      609    18948    4                         CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN
      610    18949    5                               DO;
      611    18950    5                                  KNH_MESS.FLAGS.FREE = '1'B;
      612    18951    5                               END;
      613    18952    4                            WHENALTRETURN
      614    18953    5                               DO;
      615    18954    5   STOP_UPDATE_RPTR:              STOP_INCR_RPTR = '1'B;
      616    18955    5                               END;
      617    18956    4                         GOTO UPDATE_RPTR;
      618    18957    4                      END;
      619    18958
      620    18959    3             CASE ( %KN_FCN_TERM );
      621    18960
      622    18961    3                CALL_FPT.EVN = %KX_CM_EV_DSCRQS#;
      623    18962
      624    18963    3             CASE ( %KN_FCN_RESET );
      625    18964
      626    18965    3                CALL_FPT.EVN = %KX_CM_EV_RSTRQS#;
      627    18966
      628    18967    3             CASE ( %KN_FCN_EXPEDITED_DATA );
      629    18968
      630    18969    3                CALL_FPT.EVN = %KX_CM_EV_INTRQS#;
      631    18970
      632    18971    3             CASE ( %KN_FCN_NOP );
      633    18972
      634    18973    3   L_SKIP_IT:   KNH_MESS.FLAGS.FREE = '1'B;
      635    18974    3                GOTO UPDATE_RPTR;
      636    18975
      637    18976    3             CASE ( %KN_FCN_INIT_ACK );
      638    18977
      639    18978    3                CALL Y$CHK_L2 ( UID.UID$ ) WHENRETURN
      640    18979    4                      DO;
      641    18980        /*
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:55   
      642    18981           INIT_ACK's to links requires no action other than storing the LDCTX.
      643    18982        */
      644    18983    4                         UID.UID$->KX$L2.LDCTX = KNH_MESS.LDCTX;
      645    18984    4                         KNH_MESS.FLAGS.FREE = '1'B;
      646    18985    4                         GOTO UPDATE_RPTR;
      647    18986    4                      END;
      648    18987    3                CALL_FPT.EVN = %KX_CM_EV_INITACK#;
      649    18988    3                IF FPT$CONNECT_ACK.REASON = %K_REASON_REDIRECT
      650    18989    3                   THEN
      651    18990    3                      CALL Y$CHK_L2 ( FPT$CONNECT_ACK.OUTLINK$ ) WHENALTRETURN
      652    18991    4                            DO;
      653    18992        /*
      654    18993           Network returned a bad OUTLINK$ for a redirect attempt. Just change it
      655    18994           to a no route response.
      656    18995        */
      657    18996    4                               FPT$CONNECT_ACK.REASON = %K_REASON_NORTE;
      658    18997    4                            END;
      659    18998
      660    18999    3             CASE ( %KN_FCN_TERM_ACK );
      661    19000
      662    19001    3                CALL Y$CHK_L2 ( UID.UID$ ) WHENRETURN
      663    19002    4                      DO;
      664    19003    4                         CALL_FPT.EVN = %KX_F_EV_TERMACK#;
      665    19004    4                         CALL KXF$FRAME ( CALL_FPT );
      666    19005    4                         KNH_MESS.FLAGS.FREE = '1'B;
      667    19006    4                         GOTO UPDATE_RPTR;
      668    19007    4                      END;
      669    19008    3                CALL_FPT.EVN = %KX_CM_EV_TERMACK#;
      670    19009    3             CASE ( ELSE );
      671    19010
      672    19011    3   ILG_CQMSG:   CALL KHD$SCREECH ( Y_ILG_CQMSG );
      673    19012    3          END;
      674    19013               %DISABLE;
      675    19016    2          CALL PM$ ( CALL_FPT )
      676    19017    2             WHENRETURN
      677    19018    3                DO;
      678    19019    3                   KNH_MESS.FLAGS.FREE = '1'B;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:56   
      679    19020    3                   IF FUNCTION.FNC = %KN_FCN_DATA
      680    19021    3                      THEN
      681    19022    3                         RPR_XIT = RPR_XIT | CALL_FPT.RET_BIT1;
      682    19023    3                END;
      683    19024    2             WHENALTRETURN
      684    19025    3                DO;
      685    19026    3                   IF FUNCTION.FNC = %KN_FCN_DATA AND WAITING AND NOT STOP_INCR_RPTR
      686    19027    3                      THEN
      687    19028    3                         CALL Y$BFR ALTRET (L_STOP);
      688    19029    3                      ELSE
      689    19030    3   L_STOP:               STOP_INCR_RPTR = '1'B;
      690    19031    3                END;
      691    19032               %ENABLE;
      692    19035        /*
      693    19036                                             Update the RPTR and MESS$.
      694    19037        */
      695    19038    2   UPDATE_RPTR: ;
      696    19039    2          RCQ_RPTR = RCQ_RPTR + RPTR_INCR;
      697    19040    2          IF (( KNH_QHDR.RCQ.SZ - RCQ_RPTR ) <=
      698    19041    2             (( SIZEW ( KNH_MESS ) + 1 ) / 2 )) AND
      699    19042    2             ( RCQ_RPTR > KNH_QHDR.RCQ.IPTR )
      700    19043    2             THEN
      701    19044    2                RCQ_RPTR = 0;
      702    19045
      703    19046    2          MESS$ = PINCRW ( KV_RCVCQ$, RCQ_RPTR * 2 );
      704    19047    2          IF NOT STOP_INCR_RPTR
      705    19048    2             THEN
      706    19049    2                KNH_QHDR.RCQ.RPTR = RCQ_RPTR;
      707    19050
      708    19051    2       END SCNLOP;
      709    19052
      710    19053        /*
      711    19054           Some protocol managers (SL is the only one currently)
      712    19055           block several CQ data messages into one protocol data
      713    19056           unit. CQSCN should inform them that he is about to exit, so
      714    19057           that the protocol managers know they will not be getting more
      715    19058           CQ data for a while.
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:57   
      716    19059        */
      717    19060    1       IF RPR_XIT AND KX_SLLIST.HD$ ~= ADDR(NIL)
      718    19061    1          THEN
      719    19062    2             DO;
      720    19063    2                CALL_FPT.EVN = %KX_CM_EV_CQSCN_XIT#;
      721    19064    2                CALL_FPT.RCV$ = KX_SLLIST.HD$;
      722    19065                     %DISABLE;
      723    19068    2                CALL PM$ ( CALL_FPT );
      724    19069                     %ENABLE;
      725    19072    2             END;
      726    19073
      727    19074    1       PARM_RPTR.STOP_PTR = RCQ_RPTR;
      728    19075
      729    19076    1   Y$CHK_L2: PROC ( CTX$ ) ALTRET;
      730    19077
      731    19078    2   DCL CTX$ PTR;  /* the pointer which we want to check against KX_CNTX list */
      732    19079
      733    19080    2       L2$ = KX_CNTX.HD$;
      734    19081    3       DO WHILE ( L2$ ~= ADDR(NIL) );
      735    19082    3          IF CTX$ = L2$
      736    19083    3             THEN
      737    19084    3                RETURN;
      738    19085    3          L2$ = L2$->KX$L2.NEXT$;
      739    19086    3       END;
      740    19087    2       ALTRETURN;
      741    19088
      742    19089    2   END Y$CHK_L2;
      743    19090
      744    19091    1   Y$BFR: PROC ALTRET;
      745    19092        /*
      746    19093           Attempt to buffer rcq messages that could not be absorbed by SL when
      747    19094           HMI.WAIT_COUNT > 0, to avoid blocking entire rcq.
      748    19095        */
      749    19096
      750    19097    2   DCL WRDSIZ UBIN;
      751    19098    2   DCL DSTR CHAR(6000) BASED ( CQMSG_BFR$ );
      752    19099    2   DCL SSTR CHAR(6000) BASED ( MESS$ );
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:58   
      753    19100    2   DCL START_RCQ$ PTR;
      754    19101
      755    19102    2       WRDSIZ = RPTR_INCR * 2 + SIZEW ( KX$CQMSG_BFR );
      756    19103    2       CALL KVB$GET2NSYS ( WRDSIZ, CQMSG_BFR$ ) WHENALTRETURN
      757    19104    3             DO;
      758    19105    3                ALTRETURN;
      759    19106    3             END;
      760    19107    2       KX$CQMSG_BFR.BFRWRDSIZ = WRDSIZ;
      761    19108    2       SUBSTR ( DSTR, SIZEW(KX$CQMSG_BFR)*2, RPTR_INCR*4 ) =
      762    19109    2          SUBSTR ( SSTR, 0, RPTR_INCR*4 );
      763    19110    2       KX$CQMSG_BFR.BLNK$ = KX_CQMSG_LIST.TAIL$;
      764    19111    2       KX$CQMSG_BFR.FLNK$ = ADDR(NIL);
      765    19112    2       IF KX_CQMSG_LIST.HEAD$ = ADDR(NIL)
      766    19113    2          THEN
      767    19114    2             KX_CQMSG_LIST.HEAD$ = CQMSG_BFR$;
      768    19115    2          ELSE
      769    19116    2             KX_CQMSG_LIST.TAIL$->KX$CQMSG_BFR.FLNK$ = CQMSG_BFR$;
      770    19117    2       KX_CQMSG_LIST.TAIL$ = CQMSG_BFR$;
      771    19118        /*
      772    19119            Fix KX$SL.START_RCQ$.
      773    19120        */
      774    19121    2       START_RCQ$ = PINCRW ( CQMSG_BFR$, SIZEW(KX$CQMSG_BFR)+SIZEW(KNH_MESS) );
      775    19122    2       IF UID.UID$->KX$SL.START_RCQ$ = CALL_FPT.V_.ADR$
      776    19123    2          THEN
      777    19124    2             UID.UID$->KX$SL.START_RCQ$ = START_RCQ$;
      778    19125    2          ELSE
      779    19126    2             IF UID.UID$->KX$SL.START_RCQ$ = PINCRW ( CALL_FPT.V_.ADR$, -1 )
      780    19127    2                THEN
      781    19128    2                   UID.UID$->KX$SL.START_RCQ$ = PINCRW ( START_RCQ$, -1 );
      782    19129    2       RETURN;
      783    19130
      784    19131    2   END Y$BFR;
      785    19132
      786    19133    1   Y$CHK_L3: PROC ALTRET;
      787    19134
      788    19135        /* UID.UID$ is a L2$ on input and will be an SL$ on normal return, when
      789    19136           we have found or created the KX$SL that this data message should go out
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:59   
      790    19137           on, according to the address in FPT_NSAP. If we fail to find and create
      791    19138           a KX$SL, UID.UID$ is untouched and we altreturn.
      792    19139        */
      793    19140    2   DCL B$STR CHAR(7) BASED;
      794    19141        %FPT_X25 ( FPTN=CALL_L3, EVN=%KX_P_EV_START#, STCLASS=STATIC );
      795    19185
      796    19186    2       L3$ = UID.UID$->KX$L2.L3_HEAD$;
      797    19187    3       DO WHILE ( L3$ ~= ADDR(NIL) );
      798    19188    3          IF KX$L3.CALL_OPTS.RCVADR.SIZ = FPT$NSAP.NSAP.LEN AND
      799    19189    3             SUBSTR ( KX$L3.CALL_OPTS.RCVADR.ADR_STRING, 0, FPT$NSAP.NSAP.LEN ) =
      800    19190    3             SUBSTR ( ADDR(FPT$NSAP.NSAP.ADDRESS)->B$STR, 0, FPT$NSAP.NSAP.LEN )
      801    19191    3             AND KX$L3.TYP = %KX_VC_TYP_CL4#
      802    19192    3             THEN
      803    19193    3                GOTO L_FND_L3;
      804    19194    3          L3$ = KX$L3.NEXT$;
      805    19195    3       END;
      806    19196        /*
      807    19197           If we come here, there has been no match of the address.
      808    19198        */
      809    19199    2       CALL KXS$GETL3 ( UID.UID$, L3$ ) ALTRET ( L_ALT );
      810    19200    2       CALL KVB$GETSYS ( SIZEW(KH$CHN), KX$L3.CHN$ ) WHENALTRETURN
      811    19201    3             DO;
      812    19202    3                CALL KXS$RLSL3 ( L3$ );
      813    19203    3   L_ALT:       ;
      814    19204                     %WRSYSLOG ( ERRCOD = NO_L3CTX,
      815    19205                     TRMID = "UID.UID$->KX$L2.CHN$->KH$CHN.TERMID" );
      816    19223    3                ALTRETURN;
      817    19224    3             END;
      818    19225    2       KX$L3.TYP = %KX_VC_TYP_CL4#;
      819    19226    2       KX$L3.RLSCHN = '1'B;
      820    19227    2       KX$L3.DFL_OPTS.RCVADR.SIZ = FPT$NSAP.NSAP.LEN;
      821    19228    2       SUBSTR ( KX$L3.DFL_OPTS.RCVADR.ADR_STRING, 0, FPT$NSAP.NSAP.LEN ) =
      822    19229    2          SUBSTR ( ADDR(FPT$NSAP.NSAP.ADDRESS)->B$STR, 0, FPT$NSAP.NSAP.LEN );
      823    19230    2       KX$L3.CALL_OPTS = KX$L3.DFL_OPTS;
      824    19231    2       KX$L3.CM_OPTS = KX$L3.DFL_OPTS;
      825    19232    2       %L3CHN = UID.UID$->KX$L2.CHN$->KH$CHN;
      826    19233    2       %L3CHN.CTX$ = L3$;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:60   
      827    19234    2       %L3CHN.SUB$ = ADDR(NIL);
      828    19235    2       %L3CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#;
      829    19236    2       %L3CHN.TERMID.TTYP = %KLTY_VIRCIR#;
      830    19237        /*
      831    19238           Give this L3 a kick.
      832    19239        */
      833    19240    2       CALL_L3.CAL$ = UID.UID$;
      834    19241    2       CALL_L3.RCV$ = L3$;
      835    19242            %DISABLE;
      836    19245    2       CALL KXP$PACKET ( CALL_L3 ) ALTRET ( L_ALT );
      837    19246            %ENABLE;
      838    19249    2   L_FND_L3: ;
      839    19250    2       UID.UID$ = KX$L3.CM$;
      840    19251    2       RETURN;
      841    19252
      842    19253    2   END Y$CHK_L3;
      843    19254
      844    19255
      845    19256    1       RETURN;
      846    19257
      847    19258    1   END KXC$CQSCN;

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:61   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_REASON_C.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXC$CQSCN.

   Procedure KXC$CQSCN requires 1255 words for executable code.
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:62   
   Procedure KXC$CQSCN requires 82 words of local(AUTO) storage.

    No errors detected in file KXC$CNCMNG.:E05TSI    .

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:63   

 Object Unit name= KXC$CQSCN                                  File name= KXC$CNCMNG.:E05TOU
 UTS= JUL 30 '97 02:19:04.80 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     61     3D  KXC$CQSCN
    1   Data  even  none    28     1C  KXC$CQSCN
    2   Proc  even  none  1255    4E7  KXC$CQSCN
    3  RoData even  none     4      4  KXC$CQSCN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  KXC$CQSCN
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:64   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 KXV$VCNTW
         yes           Std       1 KHI$DISABLE
         yes           Std       0 KHI$ENABLE
 yes     yes           Std       1 KXF$FRAME
 yes     yes           Std       2 KVB$RLSSYS
 yes     yes           Std       1 KVM$SNDCQ
         yes           Std       1 KHD$SCREECH
 yes     yes           Std       2 KVB$GET2NSYS
 yes     yes           Std       3 KXS$GETL3
 yes     yes           Std       2 KVB$GETSYS
         yes           Std       7 KXS$SYSLOG
 yes     yes           Std       1 KXP$PACKET
         yes           Std       1 KXS$RLSL3
                       nStd      0 X6A_AUTO_1
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     G$HAND_Q$                             KH_CTLTBL$                            KV_RCVCQ$
     KX_CNTX                               KX_SLLIST                             KX_PM_CQHNDID
     KX_PM$                                G$JIT$                                G$DS4$
r    G$ROS$
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:65   


      268        1        /*T***********************************************************/
      269        2        /*T*                                                         */
      270        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      271        4        /*T*                                                         */
      272        5        /*T***********************************************************/
      273        6        /*F* NAME: KXC$CQSCN                 */
      274        7        /*F* PURPOSE: Remove stuff from the RCQ.  */
      275        8
      276        9        /*D* NAME: KXC$CQSCN                 */
      277       10        /*D* PURPOSE: Removes messages from the RCQ
      278       11                      and processes them as long as
      279       12                      the RCQ is not empty and the
      280       13                      message is destined for an X.25
      281       14                      protocol manager.      */
      282       15        /*D* CALL: CALL KXC$CQSCN;           */
      283       16        /*D* INPUT: KNH_QHDR - circular queue header  */
      284       17        /*D* OUTPUT: KNH_QHDR.RCQ.RPTR - updated  */
      285       18
      286       19        KXC$CQSCN: PROC ( PARM_RPTR );

     19   2 000000  D380 0000 0000  xent KXC$CQSCN       LNJ,B5   X6A_AUTO_1
          2 000003       0052 0001                       DC       82,1

      287       20        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:66   
      288       21        /*****************************************************************
      289       22        *                                                                *
      290       23        *                           Includes                             *
      291       24        *                                                                *
      292       25        *****************************************************************/
      293       26
      294       27        %INCLUDE K_ID_E;
      295       77        %K#ENTID_E;
      296       96        %K#LYRID_E;
      297      103        %INCLUDE KL_MACRO_C;
      298     3455        %INCLUDE KL_AFCN_C;
      299     3556        %INCLUDE LCP_6;
      300     7835        %INCLUDE KH_MACRO_C;
      301     8578        %INCLUDE KL_CONTROL_C;
      302     8958        %INCLUDE KNH_MACRO_C;
      303     9241        %INCLUDE KX_EQUS_E;
      304     9680        %INCLUDE KX_PERR_C;
      305     9809        %INCLUDE KX_SCODE_C;
      306     9875        %INCLUDE KX_DATA_C;
      307     9943        %INCLUDE KX_MACROS_M;
      308    10714        %INCLUDE KV_GLBCNS_E;
      309    11055        %INCLUDE CP_6_SUBS;
      310    11595        %INCLUDE KV$BPC;
      311    11624        %INCLUDE K_REASON_C;
      312    11650        %INCLUDE K_ADDRESS_M;
      313    12153        %INCLUDE KL_SUPER_C;
      314    15055        %KV#CQ_HNDID_E;
      315    15060        %INCLUDE G_JIT_M;
      316    15325        %INCLUDE G$BOBCAT_M;
      317    15345        %INCLUDE GH_SCHD_M;
      318    15489        %INCLUDE GH_SCHD_E;
      319    15585        %INCLUDE KH$CHN;
      320    15707        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:67   
      321    15708        /*****************************************************************
      322    15709        *                                                                *
      323    15710        *                           External References                  *
      324    15711        *                                                                *
      325    15712        *****************************************************************/
      326    15713
      327    15714    1   DCL KHI$DISABLE ENTRY (1);
      328    15715    1   DCL KHI$ENABLE ENTRY;
      329    15716    1   DCL KXX$X29 ENTRY (1);
      330    15717    1   DCL KHD$SCREECH ENTRY (1);
      331    15718    1   DCL KHA$ERRLOG ENTRY (2) ALTRET;
      332    15719    1   DCL KVM$SNDCQ ENTRY (1) ALTRET;
      333    15720    1   DCL KXF$FRAME ENTRY (1) ALTRET;
      334    15721    1   DCL KVB$GETSYS ENTRY (2) ALTRET;
      335    15722    1   DCL KVB$GET2NSYS ENTRY(2) ALTRET;
      336    15723    1   DCL KVB$RLSSYS ENTRY (2) ALTRET;
      337    15724    1   DCL KXP$PACKET ENTRY (1) ALTRET;
      338    15725    1   DCL KXS$GETL3 ENTRY (3) ALTRET;
      339    15726    1   DCL KXS$RLSL3 ENTRY (1);
      340    15727    1   DCL KXS$SYSLOG ENTRY (7);
      341    15728    1   DCL KXV$VCNTW ENTRY (1) ALTRET;
      342    15729        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:68   
      343    15730        /*****************************************************************
      344    15731        *                                                                *
      345    15732        *                           Auto                                 *
      346    15733        *                                                                *
      347    15734        *****************************************************************/
      348    15735
      349    15736        %FPT_X25 ( FPTN = CALL_FPT, STCLASS = );
      350    15780    1   DCL MESS$ PTR;
      351    15781        %KNH@UID ( FPTN = UID, STCLASS = );
      352    15808    1   DCL PM$ EPTR;
      353    15809    1   DCL 1 PARM_RPTR,
      354    15810    1         2 STOP_PTR UBIN,    /* I tell VDH where I stopped */
      355    15811    1         2 START_PTR UBIN;   /* VDH tells me where to start */
      356    15812    1   DCL RCQ_RPTR UBIN;        /* local copy of RPTR */
      357    15813    1   DCL RPTR_INCR UBIN;
      358    15814    1   DCL LEVEL UBIN;
      359    15815        /*
      360    15816           flag to indicate whether we should report our exit to the protocol
      361    15817           manager. Set when there were any call to pass data.
      362    15818        */
      363    15819    1   DCL STOP_INCR_RPTR BIT(1);
      364    15820    1   DCL RPR_XIT BIT(1);
      365    15821    1   DCL WAITING BIT(1);       /* any LDCTs waiting for this HMI? */
      366    15822    1   DCL MESSFUNC UBIN;
      367    15823    1   DCL 1 FUNCTION REDEF MESSFUNC,   /* all this to take care of the free bit */
      368    15824    1         2 FNC UBIN(16) UNAL;
      369    15825    1   DCL START_RPTR SBIN;
      370    15826    1   DCL L2$ PTR;
      371    15827    1   DCL L3$ PTR;
      372    15828    1   DCL SL$ PTR;
      373    15829    1   DCL 1 KV@SNDCQ ALIGNED,
      374    15830    1         2 MSG_ (0:5),
      375    15831    1           3 ADR$ PTR,
      376    15832    1           3 BYTX UBIN WORD,
      377    15833    1           3 BYTSIZ UBIN WORD;
      378    15834    1   DCL CQMSG_BFR$ PTR;
      379    15835    1   DCL NXT_CQMSG_BFR$ PTR;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:69   
      380    15836        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:70   
      381    15837        /*****************************************************************
      382    15838        *                                                                *
      383    15839        *                           Based                                *
      384    15840        *                                                                *
      385    15841        *****************************************************************/
      386    15842
      387    15843        %KNH$QHDR ( FPTN = KNH_QHDR, STCLASS = "BASED ( G$HAND_Q$ )" );
      388    15856        %KNH$MESS ( FPTN = KNH_MESS, STCLASS = "BASED ( MESS$ )" );
      389    15905        %KH$CTLTBL ( FPTN = KH_CTLTBL, STCLASS = "BASED ( KH_CTLTBL$ )" );
      390    16117    1   DCL BASED_WORD UBIN BASED;
      391    16118        %KV$BPC ( STCLASS = BASED );
      392    16140        %FPT_CONNECT ( FPTN=FPT$CONNECT, ADRTYP=NET, STCLASS="BASED(CALL_FPT.PRM1$)" );
      393    16311        %FPT_CONNECT_ACK ( FPTN = FPT$CONNECT_ACK, STCLASS = "BASED(CALL_FPT.PRM1$)" );
      394    16360        %KX$L2;
      395    16727        %KX$L3 ( STCLASS = "BASED(L3$)" );
      396    17130        %KX$SL;
      397    17169        %KNH$HMI ( STCLASS = BASED );
      398    17176        %G$USER ( FPTN="G$USER(0:0)",STCLASS=BASED );
      399    17187        %G$JIT ( STCLASS="BASED(G$JIT$)" );
      400    17601        %G$BOBCAT ( STCLASS="BASED(G$DS4$)" );
      401    17614
      402    17615    1   DCL 1 KX$CQMSG_BFR BASED(CQMSG_BFR$),
      403    17616    1         2 FLNK$ PTR,
      404    17617    1         2 BLNK$ PTR,
      405    17618    1         2 BFRWRDSIZ UBIN;
      406    17619        %FPT_NSAP ( FPTN=FPT$NSAP, STCLASS="BASED(CALL_FPT.PRM1$)", ADRTYP=X121 );
      407    17691    1   DCL B$EPTR EPTR BASED;
      408    17692        %KH$CHN;
      409    17816        %EQU L3CHN = %CHARTEXT('KX$L3.CHN$->KH$CHN');
      410    17817        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:71   
      411    17818        /*****************************************************************
      412    17819        *                                                                *
      413    17820        *                           Constant                             *
      414    17821        *                                                                *
      415    17822        *****************************************************************/
      416    17823
      417    17824        /*
      418    17825                                             The following tables are indexed
      419    17826                                             by KN_FCN_?, so they must be
      420    17827                                             kept parallel with those SETs.
      421    17828        */
      422    17829        /*
      423    17830                                             INITACK and TERMACK require
      424    17831                                             an FPT.
      425    17832        */
      426    17833    1   DCL FPTRQR (0:%KN_FCN_MAX) BIT(1) CONSTANT UNAL
      427    17834    1             INIT('0'B,'1'B*3,'0'B*6,'1'B,'0'B*5);
      428    17835
      429    17836        %KNH$MESS ( FPTN = KNH_INITNAK_MESS, STCLASS = STATIC,
      430    17837                    FUNCTION = %KN_FCN_INIT_ACK );
      431    17886        %FPT_CONNECT_ACK ( FPTN = FPT_CONNECT_NAK, STCLASS = CONSTANT,
      432    17887                           REASON = %K_REASON_NORTE );
      433    17936        %VLP_ERRCODE (STCLASS=CONSTANT,FCG='KX',MID='P',SEV=%G_WRSYSLOG_SEV_SOFT#,
      434    17937                           FPTN = NO_L3CTX,
      435    17938                           ERR# = %E_KXP_NO_L3CTX# );
      436    17984        %KX$SL ( FPTN = KX_SL, STCLASS = CONSTANT );
      437    18023        %VLP_SCODE (FPTN=Y_ILG_CQMSG,STCLASS=CONSTANT,FCG=KX,MID=C,ERR#=%S$KX_ILG_CQMSG#);
      438    18084        /*S* SCREECH_CODE: KXC-S$KX_ILG_CQMSG#
      439    18085             MESSAGE: Read a illegal message from the circular queue.
      440    18086        */
      441    18087        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:72   
      442    18088        /*****************************************************************
      443    18089        *                                                                *
      444    18090        *                           Static/Symref                        *
      445    18091        *                                                                *
      446    18092        *****************************************************************/
      447    18093
      448    18094    1   DCL 1 KX_CQMSG_LIST STATIC,
      449    18095    1         2 HEAD$ PTR INIT(ADDR(NIL)),
      450    18096    1         2 TAIL$ PTR INIT(ADDR(NIL));
      451    18097    1   DCL G$HAND_Q$ PTR SYMREF;
      452    18098    1   DCL KH_CTLTBL$ PTR SYMREF;
      453    18099    1   DCL KV_RCVCQ$ PTR SYMREF;
      454    18100        %KX_DATA;
      455    18790    1   DCL G$JIT$ PTR SYMREF;
      456    18791    1   DCL G$DS4$ PTR SYMREF;
      457    18792    1   DCL KH_NODE# UBIN SYMREF;
      458    18793        %EJECT;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:73   
      459    18794        /*****************************************************************
      460    18795        *                                                                *
      461    18796        *                           Procedure                            *
      462    18797        *                                                                *
      463    18798        *****************************************************************/
      464    18799
      465    18800    1       CALL_FPT = '0'B;

  18800   2 000005  5C20                                 LDV,R5   32
          2 000006  0021                                 ALR      ;
          2 000007       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 000009       4007 0006                                ALPHANUM(CALL_FPT,AUTO,,R5,FILL)

      466    18801    1       RCQ_RPTR = KNH_QHDR.RCQ.RPTR;

  18801   2 00000B  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 00000E  437F                                 CSYNC    s:18801+2,SPREL
          2 00000F  E846 0001                            LDR,R6   1,B6
          2 000011  EF47 001C                            STR,R6   RCQ_RPTR,AUTO

      467    18802    1       START_RPTR = PARM_RPTR.START_PTR;

  18802   2 000013  DCC7 0004                            LDB,B5   @PARM_RPTR,AUTO
          2 000015  C845 0001                            LDR,R4   1,B5
          2 000017  CF47 0023                            STR,R4   START_RPTR,AUTO

      468    18803    1       STOP_INCR_RPTR = '0'B;

  18803   2 000019  8747 001F                            CL       STOP_INCR_RPTR,AUTO

      469    18804    1       RPR_XIT = '0'B;

  18804   2 00001B  8747 0020                            CL       RPR_XIT,AUTO

      470    18805    1       IF G$BOBCAT.USRT$->G$USER.HMI$(G$JIT.USR#)->KNH$HMI.WAIT_COUNT > 0

  18805   2 00001D  CC80 0000 0000  xsym                 LDB,B4   G$DS4$
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:74   
          2 000020  BCC4 0018                            LDB,B3   24,B4
          2 000022  AC80 0000 0000  xsym                 LDB,B2   G$JIT$
          2 000025  B842 0004                            LDR,R3   4,B2
          2 000027  B570 00FF                            AND,R3   255,IMO
          2 000029  3F0C                                 MLV,R3   12
          2 00002A  3E0A                                 ADV,R3   10
          2 00002B  9CB3                                 LDB,B1   ,B3,R3
          2 00002C  B841 0013                            LDR,R3   19,B1
          2 00002E  3901 0006                            BEZ,R3   s:18809,PREL

      471    18806    1          THEN
      472    18807    1             WAITING = '1'B;

  18807   2 000030  8947 0021                            LBT,'8000'X       WAITING,AUTO
  18807   2 000032       8000
          2 000033  0F81 0003                            B        s:18813,PREL

      473    18808    1          ELSE
      474    18809    1             WAITING = '0'B;

  18809   2 000035  8747 0021                            CL       WAITING,AUTO

      475    18810        /*
      476    18811           Any messages in KX_CQMSG_LIST ?
      477    18812        */
      478    18813    1       CQMSG_BFR$ = KX_CQMSG_LIST.HEAD$;

  18813   2 000037  9C80 0000 0008  01                   LDB,B1   KX_CQMSG_LIST
          2 00003A  9FC7 0042                            STB,B1   CQMSG_BFR$,AUTO

      479    18814    1       CALL_FPT.EVN = %KX_CM_EV_DATOUT#;

  18814   2 00003C  3C12                                 LDV,R3   18
          2 00003D  BF47 0006                            STR,R3   CALL_FPT,AUTO

      480    18815    2       DO WHILE ( CQMSG_BFR$ ~= ADDR(NIL) );

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:75   
  18815   2 00003F  0F81 00B6                            B        s:18857,PREL

      481    18816    2          MESS$ = PINCRW ( CQMSG_BFR$, SIZEW(KX$CQMSG_BFR) );

  18816   2 000041  ECC7 0042                            LDB,B6   CQMSG_BFR$,AUTO
          2 000043  DBC6 0005                            LAB,B5   5,B6
          2 000045  DFC7 0016                            STB,B5   MESS$,AUTO

      482    18817    2          IF KNH_MESS.FPTSZ > 0

  18817   2 000047  E845 0006                            LDR,R6   6,B5
          2 000049  6901 0007                            BEZ,R6   s:18821,PREL

      483    18818    2             THEN
      484    18819    2                CALL_FPT.PRM1$ = PINCRW ( MESS$, SIZEW ( KNH_MESS ) );

  18819   2 00004B  CBC5 0008                            LAB,B4   8,B5
          2 00004D  CFC7 000D                            STB,B4   CALL_FPT+7,AUTO
          2 00004F  0F81 0006                            B        s:18822,PREL

      485    18820    2             ELSE
      486    18821    2                CALL_FPT.PRM1$ = ADDR(NIL);

  18821   2 000051  CB80 0000 0000                       LAB,B4   0
          2 000054  CFC7 000D                            STB,B4   CALL_FPT+7,AUTO

      487    18822    2          IF KNH_MESS.MSGSZ > 0

  18822   2 000056  E845 0007                            LDR,R6   7,B5
          2 000058  6901 000F                            BEZ,R6   s:18826,PREL

      488    18823    2             THEN
      489    18824    2               CALL_FPT.V_.ADR$ = PINCRW ( MESS$, SIZEW(KNH_MESS)+(KNH_MESS.FPTSZ/2) )
             18824                         ;

  18824   2 00005A  D845 0006                            LDR,R5   6,B5
          2 00005C  5041                                 SOR,R5   1
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:76   
          2 00005D  F855                                 LDR,R7   R5
          2 00005E  6C00                                 LDV,R6   0
          2 00005F  8447 0016                            AID      MESS$,AUTO
          2 000061  8470 0000 0008                       AID      8,IMO
          2 000064  8D47 0011                            SDI      CALL_FPT+11,AUTO
          2 000066  0F81 0006                            B        s:18827,PREL

      490    18825    2             ELSE
      491    18826    2                CALL_FPT.V_.ADR$ = ADDR(NIL);

  18826   2 000068  BB80 0000 0000                       LAB,B3   0
          2 00006B  BFC7 0011                            STB,B3   CALL_FPT+11,AUTO

      492    18827    2          UID.UID = KNH_MESS.UID;

  18827   2 00006D  8CC5 0002                            LDI      2,B5
          2 00006F  8D47 0018                            SDI      UID,AUTO

      493    18828    2          PM$ = KX_PM$ ( UID.UIDX.CQ_HNDID );

  18828   2 000071  B2C7 0018                            LLH,R3   UID,AUTO
          2 000073  BCB0 0000 0000  xsym                 LDB,B3   KX_PM$,R3
          2 000076  BFC7 001A                            STB,B3   PM$,AUTO

      494    18829    2          UID.UIDX.CQ_HNDID = 0;

  18829   2 000078  87C7 0018                            CLH      UID,AUTO

      495    18830    2          CALL_FPT.RCV$ = UID.UID$;

  18830   2 00007A  ACC7 0018                            LDB,B2   UID,AUTO
          2 00007C  AFC7 0009                            STB,B2   CALL_FPT+3,AUTO

      496    18831    2          CALL_FPT.PRM1 = KNH_MESS.LDCTX;

  18831   2 00007E  E845 0001                            LDR,R6   1,B5
          2 000080  EF47 000B                            STR,R6   CALL_FPT+5,AUTO
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:77   

      497    18832    2          CALL_FPT.V_.BYTSIZ = KNH_MESS.MSGSZ;

  18832   2 000082  D845 0007                            LDR,R5   7,B5
          2 000084  DF47 0014                            STR,R5   CALL_FPT+14,AUTO

      498    18833    2          NXT_CQMSG_BFR$ = KX$CQMSG_BFR.FLNK$;

  18833   2 000086  9C86                                 LDB,B1   ,B6
          2 000087  9FC7 0044                            STB,B1   NXT_CQMSG_BFR$,AUTO

      499    18834               %DISABLE;

  18835   2 000089  EC80 0000 0000  xsym                 LDB,B6   KH_CTLTBL$
          2 00008C  DCC6 0002                            LDB,B5   2,B6
          2 00008E  C805                                 LDR,R4   ,B5
          2 00008F  CF47 001E                            STR,R4   LEVEL,AUTO

  18835   2 000091  DBC7 001E                            LAB,B5   LEVEL,AUTO
          2 000093  DFC7 004C                            STB,B5   START_RCQ$+3,AUTO
          2 000095  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 000097  CBF0 0100                            LAB,B4   256,IMO
          2 000099  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 00009C       0001                            DC       s:18837,PREL

      500    18837    2          CALL PM$ ( CALL_FPT ) WHENRETURN

  18837   2 00009D  EBC7 0006                            LAB,B6   CALL_FPT,AUTO
          2 00009F  EFC7 004C                            STB,B6   START_RCQ$+3,AUTO
          2 0000A1  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 0000A3  9CC7 001A                            LDB,B1   PM$,AUTO
          2 0000A5  CBF0 0100                            LAB,B4   256,IMO
          2 0000A7  E381                                 LNJ,B6   ,B1
          2 0000A8       003A                            DC       s:18853,PREL

      501    18838    3                DO;

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:78   
      502    18839    3                   IF KX$CQMSG_BFR.BLNK$ ~= ADDR(NIL)

  18839   2 0000A9  ECC7 0042                            LDB,B6   CQMSG_BFR$,AUTO
          2 0000AB  8DC6 0002                            CMN      2,B6
          2 0000AD  0901 0005                            BE       s:18842,PREL

      503    18840    3                      THEN
      504    18841    3                         KX$CQMSG_BFR.BLNK$->KX$CQMSG_BFR.FLNK$ = KX$CQMSG_BFR.FLNK$;

  18841   2 0000AF  DCC6 0002                            LDB,B5   2,B6
          2 0000B1  CC86                                 LDB,B4   ,B6
          2 0000B2  CF85                                 STB,B4   ,B5

      505    18842    3                   IF KX$CQMSG_BFR.FLNK$ ~= ADDR(NIL)

  18842   2 0000B3  ECC7 0042                            LDB,B6   CQMSG_BFR$,AUTO
          2 0000B5  8D86                                 CMN      ,B6
          2 0000B6  0901 0006                            BE       s:18845,PREL

      506    18843    3                      THEN
      507    18844    3                         KX$CQMSG_BFR.FLNK$->KX$CQMSG_BFR.BLNK$ = KX$CQMSG_BFR.BLNK$;

  18844   2 0000B8  DC86                                 LDB,B5   ,B6
          2 0000B9  CCC6 0002                            LDB,B4   2,B6
          2 0000BB  CFC5 0002                            STB,B4   2,B5

      508    18845    3                   IF CQMSG_BFR$ = KX_CQMSG_LIST.HEAD$

  18845   2 0000BD  ECC7 0042                            LDB,B6   CQMSG_BFR$,AUTO
          2 0000BF  ED80 0000 0008  01                   CMB,B6   KX_CQMSG_LIST
          2 0000C2  0981 0005                            BNE      s:18848,PREL

      509    18846    3                      THEN
      510    18847    3                         KX_CQMSG_LIST.HEAD$ = KX$CQMSG_BFR.FLNK$;

  18847   2 0000C4  DC86                                 LDB,B5   ,B6
          2 0000C5  DF80 0000 0008  01                   STB,B5   KX_CQMSG_LIST
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:79   

      511    18848    3                   IF CQMSG_BFR$ = KX_CQMSG_LIST.TAIL$

  18848   2 0000C8  ED80 0000 000A  01                   CMB,B6   KX_CQMSG_LIST+2
          2 0000CB  0981 0006                            BNE      s:18851,PREL

      512    18849    3                      THEN
      513    18850    3                         KX_CQMSG_LIST.TAIL$ = KX$CQMSG_BFR.BLNK$;

  18850   2 0000CD  DCC6 0002                            LDB,B5   2,B6
          2 0000CF  DF80 0000 000A  01                   STB,B5   KX_CQMSG_LIST+2

      514    18851    3                   CALL KVB$RLSSYS ( KX$CQMSG_BFR.BFRWRDSIZ, CQMSG_BFR$ );

  18851   2 0000D2  DBC7 0042                            LAB,B5   CQMSG_BFR$,AUTO
          2 0000D4  DFC7 004E                            STB,B5   START_RCQ$+5,AUTO
          2 0000D6  CBC6 0004                            LAB,B4   4,B6
          2 0000D8  CFC7 004C                            STB,B4   START_RCQ$+3,AUTO
          2 0000DA  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 0000DC  CBF0 0200                            LAB,B4   512,IMO
          2 0000DE  E380 0000 0000  xent                 LNJ,B6   KVB$RLSSYS
          2 0000E1       0001                            DC       s:18853,PREL

      515    18852    3                END;

      516    18853    2          CQMSG_BFR$ = NXT_CQMSG_BFR$;

  18853   2 0000E2  ECC7 0044                            LDB,B6   NXT_CQMSG_BFR$,AUTO
          2 0000E4  EFC7 0042                            STB,B6   CQMSG_BFR$,AUTO

      517    18854               %ENABLE;

  18855   2 0000E6  DC80 0000 0000  xsym                 LDB,B5   KH_CTLTBL$
          2 0000E9  CCC5 0002                            LDB,B4   2,B5
          2 0000EB  E847 001E                            LDR,R6   LEVEL,AUTO
          2 0000ED  E904                                 CMR,R6   ,B4
          2 0000EE  0901 0007                            BE       s:18857,PREL
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:80   

  18855   2 0000F0  CBF0 0000                            LAB,B4   0,IMO
          2 0000F2  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0000F5       0001                            DC       s:18857,PREL

      518    18857    2       END;  /* do while ( ... ) */

  18857   2 0000F6  8DC7 0042                            CMN      CQMSG_BFR$,AUTO
          2 0000F8  0981 FF48                            BNE      s:18816,PREL

      519    18858
      520    18859    1       MESS$ = PINCRW ( KV_RCVCQ$, KNH_QHDR.RCQ.RPTR * 2 );

  18859   2 0000FA  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 0000FD  B846 0001                            LDR,R3   1,B6
          2 0000FF  F853                                 LDR,R7   R3
          2 000100  6C00                                 LDV,R6   0
          2 000101  7081                                 DOL,R7   1
          2 000102  8400 0000 0000  xsym                 AID      KV_RCVCQ$
          2 000105  8D47 0016                            SDI      MESS$,AUTO

      521    18860        /*
      522    18861                                             Extract messages as long as the
      523    18862                                             RCQ is not empty and the current
      524    18863                                             message is destined for an X.25
      525    18864                                             protocol manager.
      526    18865        */
      527    18866    1   SCNLOP:
      528    18867    2       DO WHILE ( RCQ_RPTR ~= KNH_QHDR.RCQ.IPTR );

  18867   2 000107  D847 001C            SCNLOP          LDR,R5   RCQ_RPTR,AUTO
          2 000109  D906                                 CMR,R5   ,B6
          2 00010A  0901 01F7                            BE       s:19060,PREL

      529    18868        /* this prevents me from picking up a garbage function code, and then going
      530    18869           on to process a message put down by an interrupt */
      531    18870    2          MESSFUNC = KNH_MESS.FLAGS.FUNCTION;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:81   

  18870   2 00010C  ECC7 0016                            LDB,B6   MESS$,AUTO
          2 00010E  E806                                 LDR,R6   ,B6
          2 00010F  E570 00FF                            AND,R6   255,IMO
          2 000111  EF47 0022                            STR,R6   MESSFUNC,AUTO

      532    18871    2          IF START_RPTR = RCQ_RPTR

  18871   2 000113  D847 0023                            LDR,R5   START_RPTR,AUTO
          2 000115  5801 0008                            BLZ,R5   s:18875,PREL
          2 000117  D947 001C                            CMR,R5   RCQ_RPTR,AUTO
          2 000119  0981 0004                            BNE      s:18875,PREL

      533    18872    2             THEN
      534    18873    2                START_RPTR = -1; /* Set a flag saying we're past VDH */

  18873   2 00011B  8947 0023                            LBT,'FFFF'X       START_RPTR,AUTO
  18873   2 00011D       FFFF

      535    18874
      536    18875    2          IF KNH_MESS.FPTSZ > 0

  18875   2 00011E  D846 0006                            LDR,R5   6,B6
          2 000120  5901 0007                            BEZ,R5   s:18879,PREL

      537    18876    2             THEN
      538    18877    2                CALL_FPT.PRM1$ = PINCRW ( MESS$, SIZEW ( KNH_MESS ));

  18877   2 000122  DBC6 0008                            LAB,B5   8,B6
          2 000124  DFC7 000D                            STB,B5   CALL_FPT+7,AUTO
          2 000126  0F81 0006                            B        s:18881,PREL

      539    18878    2             ELSE
      540    18879    2                CALL_FPT.PRM1$ = ADDR(NIL);

  18879   2 000128  DB80 0000 0000                       LAB,B5   0
          2 00012B  DFC7 000D                            STB,B5   CALL_FPT+7,AUTO
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:82   

      541    18880
      542    18881    2          IF KNH_MESS.MSGSZ > 0

  18881   2 00012D  D846 0007                            LDR,R5   7,B6
          2 00012F  5901 000F                            BEZ,R5   s:18886,PREL

      543    18882    2             THEN
      544    18883    2                CALL_FPT.V_.ADR$ = PINCRW ( MESS$, SIZEW ( KNH_MESS ) +

  18883   2 000131  C846 0006                            LDR,R4   6,B6
          2 000133  4041                                 SOR,R4   1
          2 000134  F854                                 LDR,R7   R4
          2 000135  6C00                                 LDV,R6   0
          2 000136  8447 0016                            AID      MESS$,AUTO
          2 000138  8470 0000 0008                       AID      8,IMO
          2 00013B  8D47 0011                            SDI      CALL_FPT+11,AUTO
          2 00013D  0F81 0006                            B        s:18888,PREL

      545    18884    2                   ( KNH_MESS.FPTSZ / 2 ));
      546    18885    2             ELSE
      547    18886    2                CALL_FPT.V_.ADR$ = ADDR(NIL);

  18886   2 00013F  CB80 0000 0000                       LAB,B4   0
          2 000142  CFC7 0011                            STB,B4   CALL_FPT+11,AUTO

      548    18887
      549    18888    2          RPTR_INCR = ((( SIZEC ( KNH_MESS ) + KNH_MESS.FPTSZ + KNH_MESS.MSGSZ + 1 )

  18888   2 000144  E846 0006                            LDR,R6   6,B6
          2 000146  EA46 0007                            ADD,R6   7,B6
          2 000148  6E11                                 ADV,R6   17
          2 000149  6041                                 SOR,R6   1
          2 00014A  6E01                                 ADV,R6   1
          2 00014B  6041                                 SOR,R6   1
          2 00014C  EF47 001D                            STR,R6   RPTR_INCR,AUTO

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:83   
      550    18889    2             / 2 ) + 1 ) / 2;
      551    18890
      552    18891    2          IF KNH_MESS.FLAGS.FREE OR FUNCTION.FNC = %KN_FCN_NOP

  18891   2 00014E  8986                                 CMZ      ,B6
          2 00014F  0801 0183                            BAL      s:19033,PREL
          2 000151  D847 0022                            LDR,R5   MESSFUNC,AUTO
          2 000153  5D06                                 CMV,R5   6
          2 000154  0901 017E                            BE       s:19033,PREL

      553    18892    2             THEN
      554    18893    2                GOTO UPDATE_RPTR;  /* Already processed message */
      555    18894    2          IF NOT KX_PM_CQHNDID(KNH_MESS.UIDX.CQ_HNDID)

  18894   2 000156  B2C6 0002                            LLH,R3   2,B6
          2 000158  82B0 0000 0000  xsym                 LB       KX_PM_CQHNDID,R3
          2 00015B  0501 0007                            BBT      s:18901,PREL

      556    18895    2             THEN
      557    18896    2                IF START_RPTR < 0

  18896   2 00015D  C847 0023                            LDR,R4   START_RPTR,AUTO
          2 00015F  4801 01A2                            BLZ,R4   s:19060,PREL

      558    18897    2                   THEN
      559    18898    2                      EXIT SCNLOP;
      560    18899    2                   ELSE
      561    18900    2                      GOTO UPDATE_RPTR; /* VDH has already seen this one */

  18900   2 000161  0F81 0171                            B        s:19033,PREL

      562    18901    2          IF CALL_FPT.PRM1$ = ADDR(NIL) AND FPTRQR ( FUNCTION.FNC )

  18901   2 000163  8DC7 000D                            CMN      CALL_FPT+7,AUTO
          2 000165  0981 0007                            BNE      s:18905,PREL
          2 000167  A855                                 LDR,R2   R5
          2 000168  82A0 0000 0000  00                   LB       FPTRQR,R2
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:84   
          2 00016B  0501 0102                            BBT      s:19009,PREL

      563    18902    2             THEN
      564    18903    2                GOTO ILG_CQMSG;
      565    18904
      566    18905    2          UID.UID = KNH_MESS.UID;

  18905   2 00016D  8CC6 0002                            LDI      2,B6
          2 00016F  8D47 0018                            SDI      UID,AUTO

      567    18906    2          PM$ = KX_PM$ ( UID.UIDX.CQ_HNDID );

  18906   2 000171  B2C7 0018                            LLH,R3   UID,AUTO
          2 000173  CCB0 0000 0000  xsym                 LDB,B4   KX_PM$,R3
          2 000176  CFC7 001A                            STB,B4   PM$,AUTO

      568    18907    2          UID.UIDX.CQ_HNDID = 0;

  18907   2 000178  87C7 0018                            CLH      UID,AUTO

      569    18908
      570    18909    2          CALL_FPT.RCV$ = UID.UID$;

  18909   2 00017A  BCC7 0018                            LDB,B3   UID,AUTO
          2 00017C  BFC7 0009                            STB,B3   CALL_FPT+3,AUTO

      571    18910    2          CALL_FPT.PRM1 = KNH_MESS.LDCTX;

  18910   2 00017E  E846 0001                            LDR,R6   1,B6
          2 000180  EF47 000B                            STR,R6   CALL_FPT+5,AUTO

      572    18911    2          CALL_FPT.V_.BYTSIZ = KNH_MESS.MSGSZ;

  18911   2 000182  C846 0007                            LDR,R4   7,B6
          2 000184  CF47 0014                            STR,R4   CALL_FPT+14,AUTO

      573    18912
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:85   
      574    18913    3          DO CASE ( KNH_MESS.FUNCTION );

  18913   2 000186  B806                                 LDR,R3   ,B6
          2 000187  3D0E                                 CMV,R3   14
          2 000188  0281 00E5                            BGE      s:19009,PREL
          2 00018A  A830 0000 0190  02                   LDR,R2   s:18913+10,R3
          2 00018D  83A0 0000 019E  02                   JMP      s:18917,R2
          2 000190       00D0                            DC       s:19009,PREL
          2 000191       0028                            DC       s:18934,PREL
          2 000192       0084                            DC       s:18978,PREL
          2 000193       006F                            DC       s:18961,PREL
          2 000194       00AF                            DC       s:19001,PREL
          2 000195       0000                            DC       s:18917,PREL
          2 000196       007E                            DC       s:18971,PREL
          2 000197       00D0                            DC       s:19009,PREL
          2 000198       00D0                            DC       s:19009,PREL
          2 000199       00D0                            DC       s:19009,PREL
          2 00019A       0074                            DC       s:18965,PREL
          2 00019B       00D0                            DC       s:19009,PREL
          2 00019C       00D0                            DC       s:19009,PREL
          2 00019D       0079                            DC       s:18969,PREL

      575    18914
      576    18915    3             CASE ( %KN_FCN_DATA );

      577    18916
      578    18917    3                IF CALL_FPT.PRM1$ ~= ADDR(NIL) AND CALL_FPT.RCV$->B$EPTR ~= ENTADDR(
             18917                         KXV$VCNTW)

  18917   2 00019E  8DC7 000D                            CMN      CALL_FPT+7,AUTO
          2 0001A0  0901 0020                            BE       s:18930,PREL
          2 0001A2  AB80 0000 0000  xent                 LAB,B2   KXV$VCNTW
          2 0001A5  9C83                                 LDB,B1   ,B3
          2 0001A6  AFC7 004C                            STB,B2   START_RCQ$+3,AUTO
          2 0001A8  9DC7 004C                            CMB,B1   START_RCQ$+3,AUTO
          2 0001AA  0901 0016                            BE       s:18930,PREL

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:86   
      579    18918    3                   THEN
      580    18919    4                      DO;

      581    18920        /*
      582    18921           The only situation when an FPT precedes a data message when network
      583    18922           calls a link to start a new circuit to the destination in FPT_NSAP.
      584    18923           Verify that.
      585    18924        */
      586    18925    4                         CALL Y$CHK_L2 ( UID.UID$ ) ALTRET ( L_SKIP_IT );

  18925   2 0001AC  9BC7 0018                            LAB,B1   UID,AUTO
          2 0001AE  9FC7 0048                            STB,B1   NXT_CQMSG_BFR$+4,AUTO
          2 0001B0  E3C0 0199                            LNJ,B6   s:0,PREL
          2 0001B2       006A                            DC       s:18971,PREL

      587    18926    4                         CALL Y$CHK_L3 ALTRET ( L_SKIP_IT );

  18926   2 0001B3  E3C0 0227                            LNJ,B6   s:0,PREL
          2 0001B5       0067                            DC       s:18971,PREL

      588    18927    4                         KNH_MESS.UIDX.CQ_HNDCTXID = UID.UIDX.CQ_HNDCTXID;

  18927   2 0001B6  AB87                                 LAB,B2   ,AUTO
          2 0001B7  2C31                                 LDV,R2   49
          2 0001B8  6C03                                 LDV,R6   3
          2 0001B9  BCC7 0016                            LDB,B3   MESS$,AUTO
          2 0001BB  3C05                                 LDV,R3   5
          2 0001BC  0008                                 MMM

      589    18928    4                         CALL_FPT.RCV$ = UID.UID$;

  18928   2 0001BD  ECC7 0018                            LDB,B6   UID,AUTO
          2 0001BF  EFC7 0009                            STB,B6   CALL_FPT+3,AUTO

      590    18929    4                      END;

      591    18930    3                CALL_FPT.EVN = %KX_CM_EV_DATOUT#;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:87   

  18930   2 0001C1  6C12                                 LDV,R6   18
          2 0001C2  EF47 0006                            STR,R6   CALL_FPT,AUTO
          2 0001C4  0F81 00B2                            B        s:19014,PREL

      592    18931
      593    18932    3             CASE ( %KN_FCN_INIT );

      594    18933
      595    18934    3                CALL_FPT.EVN = %KX_CM_EV_CNCRQS#;

  18934   2 0001C6  1C17                                 LDV,R1   23
          2 0001C7  9F47 0006                            STR,R1   CALL_FPT,AUTO

      596    18935    3                CALL Y$CHK_L2 ( UID.UID$ ) WHENALTRETURN

  18935   2 0001C9  ABC7 0018                            LAB,B2   UID,AUTO
          2 0001CB  AFC7 0048                            STB,B2   NXT_CQMSG_BFR$+4,AUTO
          2 0001CD  E3C0 017C                            LNJ,B6   s:0,PREL
          2 0001CF       0003                            DC       s:18940,PREL
          2 0001D0  0F81 003A                            B        s:18956+2,PREL

      597    18936        /*
      598    18937           UID$ is not a L2, which is invalid for a connection request.
      599    18938           Have to return a NO_ROUTE to network layer.
      600    18939        */
      601    18940    4                      DO;

      602    18941    4   L_INITNAK:            KNH_INITNAK_MESS.LDCTX = KNH_MESS.LDCTX;

  18941   2 0001D2  ECC7 0016            L_INITNAK       LDB,B6   MESS$,AUTO
          2 0001D4  E846 0001                            LDR,R6   1,B6
          2 0001D6  EF00 0000 0001  01                   STR,R6   KNH_INITNAK_MESS+1

      603    18942    4                         KNH_INITNAK_MESS.FPTSZ = LENGTHC(FPT_CONNECT_NAK);

  18942   2 0001D9  5C0C                                 LDV,R5   12
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:88   
          2 0001DA  DF00 0000 0006  01                   STR,R5   KNH_INITNAK_MESS+6

      604    18943    4                         KV@SNDCQ = '0'B;

  18943   2 0001DD  5C30                                 LDV,R5   48
          2 0001DE  0021                                 ALR      ;
          2 0001DF       4178 0000                                ALPHANUM('0000'X,IMO,,1),;
          2 0001E1       4007 002A                                ALPHANUM(KV@SNDCQ,AUTO,,R5,FILL)

      605    18944    4                         KV@SNDCQ.MSG_.ADR$ (0) = ADDR(KNH_INITNAK_MESS);

  18944   2 0001E3  DB80 0000 0000  01                   LAB,B5   KNH_INITNAK_MESS
          2 0001E6  437F                                 CSYNC    s:18944+2,SPREL
          2 0001E7  DFC7 002A                            STB,B5   KV@SNDCQ,AUTO

      606    18945    4                         KV@SNDCQ.MSG_.BYTSIZ (0) = (LENGTHC(KNH_INITNAK_MESS)+3)/4*4;

  18945   2 0001E9  4C10                                 LDV,R4   16
          2 0001EA  CF47 002D                            STR,R4   KV@SNDCQ+3,AUTO

      607    18946    4                         KV@SNDCQ.MSG_.ADR$ (1) = ADDR(FPT_CONNECT_NAK);

  18946   2 0001EC  CB80 0000 0001  00                   LAB,B4   FPT_CONNECT_NAK
          2 0001EF  CFC7 002E                            STB,B4   KV@SNDCQ+4,AUTO

      608    18947    4                         KV@SNDCQ.MSG_.BYTSIZ (1) = (LENGTHC(FPT_CONNECT_NAK)+3)/4*4;

  18947   2 0001F1  3C0C                                 LDV,R3   12
          2 0001F2  BF47 0031                            STR,R3   KV@SNDCQ+7,AUTO

      609    18948    4                         CALL KVM$SNDCQ ( KV@SNDCQ ) WHENRETURN

  18948   2 0001F4  BBC7 002A                            LAB,B3   KV@SNDCQ,AUTO
          2 0001F6  BFC7 004C                            STB,B3   START_RCQ$+3,AUTO
          2 0001F8  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 0001FA  CBF0 0100                            LAB,B4   256,IMO
          2 0001FC  E380 0000 0000  xent                 LNJ,B6   KVM$SNDCQ
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:89   
          2 0001FF       0007                            DC       s:18953,PREL

      610    18949    5                               DO;

      611    18950    5                                  KNH_MESS.FLAGS.FREE = '1'B;

  18950   2 000200  ECC7 0016                            LDB,B6   MESS$,AUTO
          2 000202  8906                                 LBT,'8000'X       ,B6
          2 000203       8000

      612    18951    5                               END;

  18951   2 000204  0F81 0004                            B        s:18956,PREL

      613    18952    4                            WHENALTRETURN
      614    18953    5                               DO;

      615    18954    5   STOP_UPDATE_RPTR:              STOP_INCR_RPTR = '1'B;

  18954   2 000206  8947 001F            STOP_UPDATE_RPTRLBT,'8000'X       STOP_INCR_RPTR,AUTO
  18954   2 000208       8000

      616    18955    5                               END;

      617    18956    4                         GOTO UPDATE_RPTR;

  18956   2 000209  0F81 00C9                            B        s:19033,PREL
          2 00020B  0F81 006B                            B        s:19014,PREL

      618    18957    4                      END;
      619    18958
      620    18959    3             CASE ( %KN_FCN_TERM );

      621    18960
      622    18961    3                CALL_FPT.EVN = %KX_CM_EV_DSCRQS#;

  18961   2 00020D  1C18                                 LDV,R1   24
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:90   
          2 00020E  9F47 0006                            STR,R1   CALL_FPT,AUTO
          2 000210  0F81 0066                            B        s:19014,PREL

      623    18962
      624    18963    3             CASE ( %KN_FCN_RESET );

      625    18964
      626    18965    3                CALL_FPT.EVN = %KX_CM_EV_RSTRQS#;

  18965   2 000212  1C0D                                 LDV,R1   13
          2 000213  9F47 0006                            STR,R1   CALL_FPT,AUTO
          2 000215  0F81 0061                            B        s:19014,PREL

      627    18966
      628    18967    3             CASE ( %KN_FCN_EXPEDITED_DATA );

      629    18968
      630    18969    3                CALL_FPT.EVN = %KX_CM_EV_INTRQS#;

  18969   2 000217  1C08                                 LDV,R1   8
          2 000218  9F47 0006                            STR,R1   CALL_FPT,AUTO
          2 00021A  0F81 005C                            B        s:19014,PREL

      631    18970
      632    18971    3             CASE ( %KN_FCN_NOP );

      633    18972
      634    18973    3   L_SKIP_IT:   KNH_MESS.FLAGS.FREE = '1'B;

  18973   2 00021C  ECC7 0016            L_SKIP_IT       LDB,B6   MESS$,AUTO
          2 00021E  8906                                 LBT,'8000'X       ,B6
          2 00021F       8000

      635    18974    3                GOTO UPDATE_RPTR;

  18974   2 000220  0F81 00B2                            B        s:19033,PREL

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:91   
      636    18975
      637    18976    3             CASE ( %KN_FCN_INIT_ACK );

      638    18977
      639    18978    3                CALL Y$CHK_L2 ( UID.UID$ ) WHENRETURN

  18978   2 000222  ABC7 0018                            LAB,B2   UID,AUTO
          2 000224  AFC7 0048                            STB,B2   NXT_CQMSG_BFR$+4,AUTO
          2 000226  E3C0 0123                            LNJ,B6   s:0,PREL
          2 000228       000D                            DC       s:18987,PREL

      640    18979    4                      DO;

      641    18980        /*
      642    18981           INIT_ACK's to links requires no action other than storing the LDCTX.
      643    18982        */
      644    18983    4                         UID.UID$->KX$L2.LDCTX = KNH_MESS.LDCTX;

  18983   2 000229  ECC7 0018                            LDB,B6   UID,AUTO
          2 00022B  DCC7 0016                            LDB,B5   MESS$,AUTO
          2 00022D  E845 0001                            LDR,R6   1,B5
          2 00022F  EF46 0066                            STR,R6   102,B6

      645    18984    4                         KNH_MESS.FLAGS.FREE = '1'B;

  18984   2 000231  8905                                 LBT,'8000'X       ,B5
  18984   2 000232       8000

      646    18985    4                         GOTO UPDATE_RPTR;

  18985   2 000233  0F81 009F                            B        s:19033,PREL

      647    18986    4                      END;
      648    18987    3                CALL_FPT.EVN = %KX_CM_EV_INITACK#;

  18987   2 000235  6C13                                 LDV,R6   19
          2 000236  EF47 0006                            STR,R6   CALL_FPT,AUTO
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:92   

      649    18988    3                IF FPT$CONNECT_ACK.REASON = %K_REASON_REDIRECT

  18988   2 000238  ECC7 000D                            LDB,B6   CALL_FPT+7,AUTO
          2 00023A  D806                                 LDR,R5   ,B6
          2 00023B  5D06                                 CMV,R5   6
          2 00023C  0981 003A                            BNE      s:19014,PREL

      650    18989    3                   THEN
      651    18990    3                      CALL Y$CHK_L2 ( FPT$CONNECT_ACK.OUTLINK$ ) WHENALTRETURN

  18990   2 00023E  DBC6 0001                            LAB,B5   1,B6
          2 000240  DFC7 0048                            STB,B5   NXT_CQMSG_BFR$+4,AUTO
          2 000242  E3C0 0107                            LNJ,B6   s:0,PREL
          2 000244       0003                            DC       s:18996,PREL
          2 000245  0F81 0005                            B        s:18997,PREL

      652    18991    4                            DO;

      653    18992        /*
      654    18993           Network returned a bad OUTLINK$ for a redirect attempt. Just change it
      655    18994           to a no route response.
      656    18995        */
      657    18996    4                               FPT$CONNECT_ACK.REASON = %K_REASON_NORTE;

  18996   2 000247  ECC7 000D                            LDB,B6   CALL_FPT+7,AUTO
          2 000249  6C02                                 LDV,R6   2
          2 00024A  EF06                                 STR,R6   ,B6

      658    18997    4                            END;

  18997   2 00024B  0F81 002B                            B        s:19014,PREL

      659    18998
      660    18999    3             CASE ( %KN_FCN_TERM_ACK );

      661    19000
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:93   
      662    19001    3                CALL Y$CHK_L2 ( UID.UID$ ) WHENRETURN

  19001   2 00024D  ABC7 0018                            LAB,B2   UID,AUTO
          2 00024F  AFC7 0048                            STB,B2   NXT_CQMSG_BFR$+4,AUTO
          2 000251  E3C0 00F8                            LNJ,B6   s:0,PREL
          2 000253       0016                            DC       s:19008,PREL

      663    19002    4                      DO;

      664    19003    4                         CALL_FPT.EVN = %KX_F_EV_TERMACK#;

  19003   2 000254  6C13                                 LDV,R6   19
          2 000255  EF47 0006                            STR,R6   CALL_FPT,AUTO

      665    19004    4                         CALL KXF$FRAME ( CALL_FPT );

  19004   2 000257  EBC7 0006                            LAB,B6   CALL_FPT,AUTO
          2 000259  EFC7 004C                            STB,B6   START_RCQ$+3,AUTO
          2 00025B  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 00025D  CBF0 0100                            LAB,B4   256,IMO
          2 00025F  E380 0000 0000  xent                 LNJ,B6   KXF$FRAME
          2 000262       0001                            DC       s:19005,PREL

      666    19005    4                         KNH_MESS.FLAGS.FREE = '1'B;

  19005   2 000263  ECC7 0016                            LDB,B6   MESS$,AUTO
          2 000265  8906                                 LBT,'8000'X       ,B6
          2 000266       8000

      667    19006    4                         GOTO UPDATE_RPTR;

  19006   2 000267  0F81 006B                            B        s:19033,PREL

      668    19007    4                      END;
      669    19008    3                CALL_FPT.EVN = %KX_CM_EV_TERMACK#;

  19008   2 000269  6C14                                 LDV,R6   20
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:94   
          2 00026A  EF47 0006                            STR,R6   CALL_FPT,AUTO
          2 00026C  0F81 000A                            B        s:19014,PREL

      670    19009    3             CASE ( ELSE );

      671    19010
      672    19011    3   ILG_CQMSG:   CALL KHD$SCREECH ( Y_ILG_CQMSG );

  19011   2 00026E  BB80 0000 0000  03   ILG_CQMSG       LAB,B3   0
          2 000271  CBF0 0100                            LAB,B4   256,IMO
          2 000273  E380 0000 0000  xent                 LNJ,B6   KHD$SCREECH
          2 000276       0001                            DC       s:19014,PREL

      673    19012    3          END;

      674    19013               %DISABLE;

  19014   2 000277  EC80 0000 0000  xsym                 LDB,B6   KH_CTLTBL$
          2 00027A  DCC6 0002                            LDB,B5   2,B6
          2 00027C  E805                                 LDR,R6   ,B5
          2 00027D  EF47 001E                            STR,R6   LEVEL,AUTO

  19014   2 00027F  DBC7 001E                            LAB,B5   LEVEL,AUTO
          2 000281  DFC7 004C                            STB,B5   START_RCQ$+3,AUTO
          2 000283  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 000285  CBF0 0100                            LAB,B4   256,IMO
          2 000287  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 00028A       0001                            DC       s:19016,PREL

      675    19016    2          CALL PM$ ( CALL_FPT )

  19016   2 00028B  EBC7 0006                            LAB,B6   CALL_FPT,AUTO
          2 00028D  EFC7 004C                            STB,B6   START_RCQ$+3,AUTO
          2 00028F  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 000291  9CC7 001A                            LDB,B1   PM$,AUTO
          2 000293  CBF0 0100                            LAB,B4   256,IMO
          2 000295  E381                                 LNJ,B6   ,B1
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:95   
          2 000296       0018                            DC       s:19026,PREL

      676    19017    2             WHENRETURN
      677    19018    3                DO;

      678    19019    3                   KNH_MESS.FLAGS.FREE = '1'B;

  19019   2 000297  ECC7 0016                            LDB,B6   MESS$,AUTO
          2 000299  8906                                 LBT,'8000'X       ,B6
          2 00029A       8000

      679    19020    3                   IF FUNCTION.FNC = %KN_FCN_DATA

  19020   2 00029B  E847 0022                            LDR,R6   MESSFUNC,AUTO
          2 00029D  6D05                                 CMV,R6   5
          2 00029E  0981 000D                            BNE      s:19023,PREL

      680    19021    3                      THEN
      681    19022    3                         RPR_XIT = RPR_XIT | CALL_FPT.RET_BIT1;

  19022   2 0002A0  D847 0020                            LDR,R5   RPR_XIT,AUTO
          2 0002A2  D570 8000                            AND,R5   -32768,IMO
          2 0002A4  C847 0015                            LDR,R4   CALL_FPT+15,AUTO
          2 0002A6  4005                                 SOL,R4   5
          2 0002A7  C570 8000                            AND,R4   -32768,IMO
          2 0002A9  D454                                 OR,R5    R4
          2 0002AA  DF47 0020                            STR,R5   RPR_XIT,AUTO

      682    19023    3                END;

  19023   2 0002AC  0F81 0016                            B        s:19033,PREL

      683    19024    2             WHENALTRETURN
      684    19025    3                DO;

      685    19026    3                   IF FUNCTION.FNC = %KN_FCN_DATA AND WAITING AND NOT STOP_INCR_RPTR

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:96   
  19026   2 0002AE  E847 0022                            LDR,R6   MESSFUNC,AUTO
          2 0002B0  6D05                                 CMV,R6   5
          2 0002B1  0981 000E                            BNE      s:19030,PREL
          2 0002B3  89C7 0021                            CMZ      WAITING,AUTO
          2 0002B5  0881 000A                            BAGE     s:19030,PREL
          2 0002B7  89C7 001F                            CMZ      STOP_INCR_RPTR,AUTO
          2 0002B9  0801 0006                            BAL      s:19030,PREL

      686    19027    3                      THEN
      687    19028    3                         CALL Y$BFR ALTRET (L_STOP);

  19028   2 0002BB  E3C0 00AE                            LNJ,B6   s:0,PREL
          2 0002BD       0003                            DC       s:19030,PREL
          2 0002BE  0F81 0004                            B        s:19033,PREL

      688    19029    3                      ELSE
      689    19030    3   L_STOP:               STOP_INCR_RPTR = '1'B;

  19030   2 0002C0  8947 001F            L_STOP          LBT,'8000'X       STOP_INCR_RPTR,AUTO
  19030   2 0002C2       8000

      690    19031    3                END;

      691    19032               %ENABLE;

  19033   2 0002C3  EC80 0000 0000  xsym                 LDB,B6   KH_CTLTBL$
          2 0002C6  DCC6 0002                            LDB,B5   2,B6
          2 0002C8  E847 001E                            LDR,R6   LEVEL,AUTO
          2 0002CA  E905                                 CMR,R6   ,B5
          2 0002CB  0901 0007                            BE       s:19033,PREL

  19033   2 0002CD  CBF0 0000                            LAB,B4   0,IMO
          2 0002CF  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0002D2       0001                            DC       s:19033,PREL

  19033   2                              UPDATE_RPTR     null
      692    19035        /*
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:97   
      693    19036                                             Update the RPTR and MESS$.
      694    19037        */
      695    19038    2   UPDATE_RPTR: ;
      696    19039    2          RCQ_RPTR = RCQ_RPTR + RPTR_INCR;

  19039   2 0002D3  E847 001C            UPDATE_RPTR     LDR,R6   RCQ_RPTR,AUTO
          2 0002D5  EA47 001D                            ADD,R6   RPTR_INCR,AUTO
          2 0002D7  EF47 001C                            STR,R6   RCQ_RPTR,AUTO

      697    19040    2          IF (( KNH_QHDR.RCQ.SZ - RCQ_RPTR ) <=

  19040   2 0002D9  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 0002DC  E246 0002                            SUB,R6   2,B6
          2 0002DE  8256                                 NEG      R6
          2 0002DF  6D04                                 CMV,R6   4
          2 0002E0  0A01 0008                            BAG      s:19046,PREL
          2 0002E2  E847 001C                            LDR,R6   RCQ_RPTR,AUTO
          2 0002E4  E906                                 CMR,R6   ,B6
          2 0002E5  0381 0003                            BLE      s:19046,PREL

      698    19041    2             (( SIZEW ( KNH_MESS ) + 1 ) / 2 )) AND
      699    19042    2             ( RCQ_RPTR > KNH_QHDR.RCQ.IPTR )
      700    19043    2             THEN
      701    19044    2                RCQ_RPTR = 0;

  19044   2 0002E7  8747 001C                            CL       RCQ_RPTR,AUTO

      702    19045
      703    19046    2          MESS$ = PINCRW ( KV_RCVCQ$, RCQ_RPTR * 2 );

  19046   2 0002E9  F847 001C                            LDR,R7   RCQ_RPTR,AUTO
          2 0002EB  6C00                                 LDV,R6   0
          2 0002EC  7081                                 DOL,R7   1
          2 0002ED  8400 0000 0000  xsym                 AID      KV_RCVCQ$
          2 0002F0  8D47 0016                            SDI      MESS$,AUTO

      704    19047    2          IF NOT STOP_INCR_RPTR
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:98   

  19047   2 0002F2  89C7 001F                            CMZ      STOP_INCR_RPTR,AUTO
          2 0002F4  0801 0005                            BAL      s:19051,PREL

      705    19048    2             THEN
      706    19049    2                KNH_QHDR.RCQ.RPTR = RCQ_RPTR;

  19049   2 0002F6  D847 001C                            LDR,R5   RCQ_RPTR,AUTO
          2 0002F8  DF46 0001                            STR,R5   1,B6

      707    19050
      708    19051    2       END SCNLOP;

  19051   2 0002FA  EC80 0000 0000  xsym                 LDB,B6   G$HAND_Q$
          2 0002FD  D847 001C                            LDR,R5   RCQ_RPTR,AUTO
          2 0002FF  D906                                 CMR,R5   ,B6
          2 000300  0981 FE0B                            BNE      s:18870,PREL

      709    19052
      710    19053        /*
      711    19054           Some protocol managers (SL is the only one currently)
      712    19055           block several CQ data messages into one protocol data
      713    19056           unit. CQSCN should inform them that he is about to exit, so
      714    19057           that the protocol managers know they will not be getting more
      715    19058           CQ data for a while.
      716    19059        */
      717    19060    1       IF RPR_XIT AND KX_SLLIST.HD$ ~= ADDR(NIL)

  19060   2 000302  89C7 0020                            CMZ      RPR_XIT,AUTO
          2 000304  0881 003E                            BAGE     s:19074,PREL
          2 000306  8D80 0000 0000  xsym                 CMN      KX_SLLIST
          2 000309  0901 0039                            BE       s:19074,PREL

      718    19061    1          THEN
      719    19062    2             DO;

      720    19063    2                CALL_FPT.EVN = %KX_CM_EV_CQSCN_XIT#;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:99   

  19063   2 00030B  6C15                                 LDV,R6   21
          2 00030C  EF47 0006                            STR,R6   CALL_FPT,AUTO

      721    19064    2                CALL_FPT.RCV$ = KX_SLLIST.HD$;

  19064   2 00030E  EC80 0000 0000  xsym                 LDB,B6   KX_SLLIST
          2 000311  EFC7 0009                            STB,B6   CALL_FPT+3,AUTO

      722    19065                     %DISABLE;

  19066   2 000313  DC80 0000 0000  xsym                 LDB,B5   KH_CTLTBL$
          2 000316  CCC5 0002                            LDB,B4   2,B5
          2 000318  D804                                 LDR,R5   ,B4
          2 000319  DF47 001E                            STR,R5   LEVEL,AUTO

  19066   2 00031B  CBC7 001E                            LAB,B4   LEVEL,AUTO
          2 00031D  CFC7 004C                            STB,B4   START_RCQ$+3,AUTO
          2 00031F  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 000321  CBF0 0100                            LAB,B4   256,IMO
          2 000323  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 000326       0001                            DC       s:19068,PREL

      723    19068    2                CALL PM$ ( CALL_FPT );

  19068   2 000327  EBC7 0006                            LAB,B6   CALL_FPT,AUTO
          2 000329  EFC7 004C                            STB,B6   START_RCQ$+3,AUTO
          2 00032B  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 00032D  9CC7 001A                            LDB,B1   PM$,AUTO
          2 00032F  CBF0 0100                            LAB,B4   256,IMO
          2 000331  E381                                 LNJ,B6   ,B1
          2 000332       0001                            DC       s:19070,PREL

      724    19069                     %ENABLE;

  19070   2 000333  EC80 0000 0000  xsym                 LDB,B6   KH_CTLTBL$
          2 000336  DCC6 0002                            LDB,B5   2,B6
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:100  
          2 000338  E847 001E                            LDR,R6   LEVEL,AUTO
          2 00033A  E905                                 CMR,R6   ,B5
          2 00033B  0901 0007                            BE       s:19074,PREL

  19070   2 00033D  CBF0 0000                            LAB,B4   0,IMO
          2 00033F  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 000342       0001                            DC       s:19074,PREL

      725    19072    2             END;

      726    19073
      727    19074    1       PARM_RPTR.STOP_PTR = RCQ_RPTR;

  19074   2 000343  ECC7 0004                            LDB,B6   @PARM_RPTR,AUTO
          2 000345  E847 001C                            LDR,R6   RCQ_RPTR,AUTO
          2 000347  EF06                                 STR,R6   ,B6
          2 000348  0F81 019B                            B        s:19256,PREL

      728    19075
      729    19076    1   Y$CHK_L2: PROC ( CTX$ ) ALTRET;

  19076   2 00034A  EFC7 0046            Y$CHK_L2        STB,B6   NXT_CQMSG_BFR$+2,AUTO

      730    19077
      731    19078    2   DCL CTX$ PTR;  /* the pointer which we want to check against KX_CNTX list */
      732    19079
      733    19080    2       L2$ = KX_CNTX.HD$;

  19080   2 00034C  DC80 0000 0000  xsym                 LDB,B5   KX_CNTX
          2 00034F  DFC7 0024                            STB,B5   L2$,AUTO

      734    19081    3       DO WHILE ( L2$ ~= ADDR(NIL) );

  19081   2 000351  0F81 0011                            B        s:19086,PREL

      735    19082    3          IF CTX$ = L2$

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:101  
  19082   2 000353  ECC7 0048                            LDB,B6   @CTX$,AUTO
          2 000355  DC86                                 LDB,B5   ,B6
          2 000356  DDC7 0024                            CMB,B5   L2$,AUTO
          2 000358  0981 0005                            BNE      s:19085,PREL

      736    19083    3             THEN
      737    19084    3                RETURN;

  19084   2 00035A  ECC7 0046                            LDB,B6   NXT_CQMSG_BFR$+2,AUTO
          2 00035C  C3C6 0001                            LNJ,B4   1,B6

      738    19085    3          L2$ = L2$->KX$L2.NEXT$;

  19085   2 00035E  CCC7 0024                            LDB,B4   L2$,AUTO
          2 000360  BC84                                 LDB,B3   ,B4
          2 000361  BFC7 0024                            STB,B3   L2$,AUTO

      739    19086    3       END;

  19086   2 000363  8DC7 0024                            CMN      L2$,AUTO
          2 000365  09EE                                 BNE      s:19082,SPREL

      740    19087    2       ALTRETURN;

  19087   2 000366  ECC7 0046                            LDB,B6   NXT_CQMSG_BFR$+2,AUTO
          2 000368  B806                                 LDR,R3   ,B6
          2 000369  C3B6                                 LNJ,B4   ,B6,R3

      741    19088
      742    19089    2   END Y$CHK_L2;
      743    19090
      744    19091    1   Y$BFR: PROC ALTRET;

  19091   2 00036A  EFC7 0046            Y$BFR           STB,B6   NXT_CQMSG_BFR$+2,AUTO

      745    19092        /*
      746    19093           Attempt to buffer rcq messages that could not be absorbed by SL when
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:102  
      747    19094           HMI.WAIT_COUNT > 0, to avoid blocking entire rcq.
      748    19095        */
      749    19096
      750    19097    2   DCL WRDSIZ UBIN;
      751    19098    2   DCL DSTR CHAR(6000) BASED ( CQMSG_BFR$ );
      752    19099    2   DCL SSTR CHAR(6000) BASED ( MESS$ );
      753    19100    2   DCL START_RCQ$ PTR;
      754    19101
      755    19102    2       WRDSIZ = RPTR_INCR * 2 + SIZEW ( KX$CQMSG_BFR );

  19102   2 00036C  E847 001D                            LDR,R6   RPTR_INCR,AUTO
          2 00036E  6001                                 SOL,R6   1
          2 00036F  6E05                                 ADV,R6   5
          2 000370  EF47 0048                            STR,R6   WRDSIZ,AUTO

      756    19103    2       CALL KVB$GET2NSYS ( WRDSIZ, CQMSG_BFR$ ) WHENALTRETURN

  19103   2 000372  DBC7 0042                            LAB,B5   CQMSG_BFR$,AUTO
          2 000374  DFC7 004E                            STB,B5   START_RCQ$+5,AUTO
          2 000376  CBC7 0048                            LAB,B4   WRDSIZ,AUTO
          2 000378  CFC7 004C                            STB,B4   START_RCQ$+3,AUTO
          2 00037A  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 00037C  CBF0 0200                            LAB,B4   512,IMO
          2 00037E  E380 0000 0000  xent                 LNJ,B6   KVB$GET2NSYS
          2 000381       0003                            DC       s:19105,PREL
          2 000382  0F81 0005                            B        s:19107,PREL

      757    19104    3             DO;

      758    19105    3                ALTRETURN;

  19105   2 000384  ECC7 0046                            LDB,B6   NXT_CQMSG_BFR$+2,AUTO
          2 000386  B806                                 LDR,R3   ,B6
          2 000387  C3B6                                 LNJ,B4   ,B6,R3

      759    19106    3             END;
      760    19107    2       KX$CQMSG_BFR.BFRWRDSIZ = WRDSIZ;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:103  

  19107   2 000388  ECC7 0042                            LDB,B6   CQMSG_BFR$,AUTO
          2 00038A  E847 0048                            LDR,R6   WRDSIZ,AUTO
          2 00038C  EF46 0004                            STR,R6   4,B6

      761    19108    2       SUBSTR ( DSTR, SIZEW(KX$CQMSG_BFR)*2, RPTR_INCR*4 ) =

  19108   2 00038E  ACC7 0016                            LDB,B2   MESS$,AUTO
          2 000390  2C00                                 LDV,R2   0
          2 000391  E847 001D                            LDR,R6   RPTR_INCR,AUTO
          2 000393  6002                                 SOL,R6   2
          2 000394  BCC7 0042                            LDB,B3   CQMSG_BFR$,AUTO
          2 000396  3C0A                                 LDV,R3   10
          2 000397  0008                                 MMM

      762    19109    2          SUBSTR ( SSTR, 0, RPTR_INCR*4 );
      763    19110    2       KX$CQMSG_BFR.BLNK$ = KX_CQMSG_LIST.TAIL$;

  19110   2 000398  EC80 0000 000A  01                   LDB,B6   KX_CQMSG_LIST+2
          2 00039B  DCC7 0042                            LDB,B5   CQMSG_BFR$,AUTO
          2 00039D  EFC5 0002                            STB,B6   2,B5

      764    19111    2       KX$CQMSG_BFR.FLNK$ = ADDR(NIL);

  19111   2 00039F  DB80 0000 0000                       LAB,B5   0
          2 0003A2  CCC7 0042                            LDB,B4   CQMSG_BFR$,AUTO
          2 0003A4  DF84                                 STB,B5   ,B4

      765    19112    2       IF KX_CQMSG_LIST.HEAD$ = ADDR(NIL)

  19112   2 0003A5  8D80 0000 0008  01                   CMN      KX_CQMSG_LIST
          2 0003A8  0981 0008                            BNE      s:19116,PREL

      766    19113    2          THEN
      767    19114    2             KX_CQMSG_LIST.HEAD$ = CQMSG_BFR$;

  19114   2 0003AA  DCC7 0042                            LDB,B5   CQMSG_BFR$,AUTO
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:104  
          2 0003AC  DF80 0000 0008  01                   STB,B5   KX_CQMSG_LIST
          2 0003AF  0F81 0004                            B        s:19117,PREL

      768    19115    2          ELSE
      769    19116    2             KX_CQMSG_LIST.TAIL$->KX$CQMSG_BFR.FLNK$ = CQMSG_BFR$;

  19116   2 0003B1  DCC7 0042                            LDB,B5   CQMSG_BFR$,AUTO
          2 0003B3  DF86                                 STB,B5   ,B6

      770    19117    2       KX_CQMSG_LIST.TAIL$ = CQMSG_BFR$;

  19117   2 0003B4  DCC7 0042                            LDB,B5   CQMSG_BFR$,AUTO
          2 0003B6  DF80 0000 000A  01                   STB,B5   KX_CQMSG_LIST+2

      771    19118        /*
      772    19119            Fix KX$SL.START_RCQ$.
      773    19120        */
      774    19121    2       START_RCQ$ = PINCRW ( CQMSG_BFR$, SIZEW(KX$CQMSG_BFR)+SIZEW(KNH_MESS) );

  19121   2 0003B9  EBC5 000D                            LAB,B6   13,B5
          2 0003BB  EFC7 0049                            STB,B6   START_RCQ$,AUTO

      775    19122    2       IF UID.UID$->KX$SL.START_RCQ$ = CALL_FPT.V_.ADR$

  19122   2 0003BD  CCC7 0018                            LDB,B4   UID,AUTO
          2 0003BF  BCC4 0026                            LDB,B3   38,B4
          2 0003C1  BDC7 0011                            CMB,B3   CALL_FPT+11,AUTO
          2 0003C3  0981 0005                            BNE      s:19126,PREL

      776    19123    2          THEN
      777    19124    2             UID.UID$->KX$SL.START_RCQ$ = START_RCQ$;

  19124   2 0003C5  EFC4 0026                            STB,B6   38,B4
          2 0003C7  0F81 000F                            B        s:19129,PREL

      778    19125    2          ELSE
      779    19126    2             IF UID.UID$->KX$SL.START_RCQ$ = PINCRW ( CALL_FPT.V_.ADR$, -1 )
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:105  

  19126   2 0003C9  ACC7 0011                            LDB,B2   CALL_FPT+11,AUTO
          2 0003CB  9BC2 FFFF                            LAB,B1   -1,B2
          2 0003CD  9FC7 004C                            STB,B1   START_RCQ$+3,AUTO
          2 0003CF  BDC7 004C                            CMB,B3   START_RCQ$+3,AUTO
          2 0003D1  0981 0005                            BNE      s:19129,PREL

      780    19127    2                THEN
      781    19128    2                   UID.UID$->KX$SL.START_RCQ$ = PINCRW ( START_RCQ$, -1 );

  19128   2 0003D3  BBC6 FFFF                            LAB,B3   -1,B6
          2 0003D5  BFC4 0026                            STB,B3   38,B4

      782    19129    2       RETURN;

  19129   2 0003D7  ECC7 0046                            LDB,B6   NXT_CQMSG_BFR$+2,AUTO
          2 0003D9  C3C6 0001                            LNJ,B4   1,B6

      783    19130
      784    19131    2   END Y$BFR;
      785    19132
      786    19133    1   Y$CHK_L3: PROC ALTRET;

  19133   2 0003DB  EFC7 0046            Y$CHK_L3        STB,B6   NXT_CQMSG_BFR$+2,AUTO

      787    19134
      788    19135        /* UID.UID$ is a L2$ on input and will be an SL$ on normal return, when
      789    19136           we have found or created the KX$SL that this data message should go out
      790    19137           on, according to the address in FPT_NSAP. If we fail to find and create
      791    19138           a KX$SL, UID.UID$ is untouched and we altreturn.
      792    19139        */
      793    19140    2   DCL B$STR CHAR(7) BASED;
      794    19141        %FPT_X25 ( FPTN=CALL_L3, EVN=%KX_P_EV_START#, STCLASS=STATIC );
      795    19185
      796    19186    2       L3$ = UID.UID$->KX$L2.L3_HEAD$;

  19186   2 0003DD  DCC7 0018                            LDB,B5   UID,AUTO
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:106  
          2 0003DF  CCC5 0034                            LDB,B4   52,B5
          2 0003E1  CFC7 0026                            STB,B4   L3$,AUTO

      797    19187    3       DO WHILE ( L3$ ~= ADDR(NIL) );

  19187   2 0003E3  0F81 001D                            B        s:19195,PREL

      798    19188    3          IF KX$L3.CALL_OPTS.RCVADR.SIZ = FPT$NSAP.NSAP.LEN AND

  19188   2 0003E5  ECC7 0026                            LDB,B6   L3$,AUTO
          2 0003E7  E2C6 0017                            LLH,R6   23,B6
          2 0003E9  DCC7 000D                            LDB,B5   CALL_FPT+7,AUTO
          2 0003EB  D285                                 LLH,R5   ,B5
          2 0003EC  E955                                 CMR,R6   R5
          2 0003ED  0981 0010                            BNE      s:19194,PREL
          2 0003EF  C855                                 LDR,R4   R5
          2 0003F0  DA70 2000                            ADD,R5   8192,IMO
          2 0003F2  0022                                 ACM      ;
          2 0003F3       C006 0017                                ALPHANUM(23,B6,1,R4,FILL),;
          2 0003F5       4005 0001                                ALPHANUM(1,B5,,R5,FILL)
          2 0003F7  5301 0006                            CBNE     s:19194,PREL
          2 0003F9  D846 0013                            LDR,R5   19,B6
          2 0003FB  5D06                                 CMV,R5   6
          2 0003FC  0901 00DD                            BE       s:19247,PREL

      799    19189    3             SUBSTR ( KX$L3.CALL_OPTS.RCVADR.ADR_STRING, 0, FPT$NSAP.NSAP.LEN ) =
      800    19190    3             SUBSTR ( ADDR(FPT$NSAP.NSAP.ADDRESS)->B$STR, 0, FPT$NSAP.NSAP.LEN )
      801    19191    3             AND KX$L3.TYP = %KX_VC_TYP_CL4#
      802    19192    3             THEN
      803    19193    3                GOTO L_FND_L3;
      804    19194    3          L3$ = KX$L3.NEXT$;

  19194   2 0003FE  CC86                                 LDB,B4   ,B6
          2 0003FF  CFC7 0026                            STB,B4   L3$,AUTO

      805    19195    3       END;

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:107  
  19195   2 000401  8DC7 0026                            CMN      L3$,AUTO
          2 000403  09E2                                 BNE      s:19188,SPREL

      806    19196        /*
      807    19197           If we come here, there has been no match of the address.
      808    19198        */
      809    19199    2       CALL KXS$GETL3 ( UID.UID$, L3$ ) ALTRET ( L_ALT );

  19199   2 000404  EBC7 0026                            LAB,B6   L3$,AUTO
          2 000406  EFC7 004E                            STB,B6   START_RCQ$+5,AUTO
          2 000408  DBC7 0018                            LAB,B5   UID,AUTO
          2 00040A  DFC7 004C                            STB,B5   START_RCQ$+3,AUTO
          2 00040C  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 00040E  CBF0 0200                            LAB,B4   512,IMO
          2 000410  E380 0000 0000  xent                 LNJ,B6   KXS$GETL3
          2 000413       0021                            DC       s:19202,PREL

      810    19200    2       CALL KVB$GETSYS ( SIZEW(KH$CHN), KX$L3.CHN$ ) WHENALTRETURN

  19200   2 000414  EBF0 0020                            LAB,B6   32,IMO
          2 000416  DCC7 0026                            LDB,B5   L3$,AUTO
          2 000418  CBC5 0006                            LAB,B4   6,B5
          2 00041A  CFC7 004E                            STB,B4   START_RCQ$+5,AUTO
          2 00041C  EFC7 004C                            STB,B6   START_RCQ$+3,AUTO
          2 00041E  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 000420  CBF0 0200                            LAB,B4   512,IMO
          2 000422  E380 0000 0000  xent                 LNJ,B6   KVB$GETSYS
          2 000425       0003                            DC       s:19202,PREL
          2 000426  0F81 002B                            B        s:19225,PREL

      811    19201    3             DO;

      812    19202    3                CALL KXS$RLSL3 ( L3$ );

  19202   2 000428  EBC7 0026                            LAB,B6   L3$,AUTO
          2 00042A  EFC7 004C                            STB,B6   START_RCQ$+3,AUTO
          2 00042C  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:108  
          2 00042E  CBF0 0100                            LAB,B4   256,IMO
          2 000430  E380 0000 0000  xent                 LNJ,B6   KXS$RLSL3
          2 000433       0001                            DC       s:19202,PREL

  19202   2                              L_ALT           null
      813    19203    3   L_ALT:       ;
      814    19204                     %WRSYSLOG ( ERRCOD = NO_L3CTX,
      815    19205                     TRMID = "UID.UID$->KX$L2.CHN$->KH$CHN.TERMID" );

  19221   2 000434  ECC7 0018            L_ALT           LDB,B6   UID,AUTO
          2 000436  DCC6 0002                            LDB,B5   2,B6
          2 000438  CB80 0000 0000                       LAB,B4   0
          2 00043B  CFC7 0050                            STB,B4   START_RCQ$+7,AUTO
          2 00043D  BBC5 0012                            LAB,B3   18,B5
          2 00043F  BFC7 004E                            STB,B3   START_RCQ$+5,AUTO
          2 000441  DB80 0000 0007  00                   LAB,B5   NO_L3CTX
          2 000444  DFC7 004C                            STB,B5   START_RCQ$+3,AUTO
          2 000446  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 000448  CBF0 0300                            LAB,B4   768,IMO
          2 00044A  E380 0000 0000  xent                 LNJ,B6   KXS$SYSLOG
          2 00044D       0001                            DC       s:19223,PREL

      816    19223    3                ALTRETURN;

  19223   2 00044E  ECC7 0046                            LDB,B6   NXT_CQMSG_BFR$+2,AUTO
          2 000450  B806                                 LDR,R3   ,B6
          2 000451  C3B6                                 LNJ,B4   ,B6,R3

      817    19224    3             END;
      818    19225    2       KX$L3.TYP = %KX_VC_TYP_CL4#;

  19225   2 000452  ECC7 0026                            LDB,B6   L3$,AUTO
          2 000454  6C06                                 LDV,R6   6
          2 000455  EF46 0013                            STR,R6   19,B6

      819    19226    2       KX$L3.RLSCHN = '1'B;

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:109  
  19226   2 000457  ECC7 0026                            LDB,B6   L3$,AUTO
          2 000459  8946 0029                            LBT,'0400'X       41,B6
          2 00045B       0400

      820    19227    2       KX$L3.DFL_OPTS.RCVADR.SIZ = FPT$NSAP.NSAP.LEN;

  19227   2 00045C  DCC7 000D                            LDB,B5   CALL_FPT+7,AUTO
          2 00045E  D285                                 LLH,R5   ,B5
          2 00045F  D7C6 0025                            STH,R5   37,B6

      821    19228    2       SUBSTR ( KX$L3.DFL_OPTS.RCVADR.ADR_STRING, 0, FPT$NSAP.NSAP.LEN ) =

  19228   2 000461  D285                                 LLH,R5   ,B5
          2 000462  AB85                                 LAB,B2   ,B5
          2 000463  2C02                                 LDV,R2   2
          2 000464  E855                                 LDR,R6   R5
          2 000465  BCC7 0026                            LDB,B3   L3$,AUTO
          2 000467  3C4B                                 LDV,R3   75
          2 000468  0008                                 MMM

      822    19229    2          SUBSTR ( ADDR(FPT$NSAP.NSAP.ADDRESS)->B$STR, 0, FPT$NSAP.NSAP.LEN );
      823    19230    2       KX$L3.CALL_OPTS = KX$L3.DFL_OPTS;

  19230   2 000469  ACC7 0026                            LDB,B2   L3$,AUTO
          2 00046B  2C44                                 LDV,R2   68
          2 00046C  6C0E                                 LDV,R6   14
          2 00046D  BB82                                 LAB,B3   ,B2
          2 00046E  3C28                                 LDV,R3   40
          2 00046F  0008                                 MMM

      824    19231    2       KX$L3.CM_OPTS = KX$L3.DFL_OPTS;

  19231   2 000470  ACC7 0026                            LDB,B2   L3$,AUTO
          2 000472  2C44                                 LDV,R2   68
          2 000473  6C0E                                 LDV,R6   14
          2 000474  BB82                                 LAB,B3   ,B2
          2 000475  3C36                                 LDV,R3   54
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:110  
          2 000476  0008                                 MMM

      825    19232    2       %L3CHN = UID.UID$->KX$L2.CHN$->KH$CHN;

  19232   2 000477  ECC7 0026                            LDB,B6   L3$,AUTO
          2 000479  CCC6 0006                            LDB,B4   6,B6
          2 00047B  9CC7 0018                            LDB,B1   UID,AUTO
          2 00047D  ECC1 0002                            LDB,B6   2,B1
          2 00047F  AB86                                 LAB,B2   ,B6
          2 000480  2C00                                 LDV,R2   0
          2 000481  6C40                                 LDV,R6   64
          2 000482  BB84                                 LAB,B3   ,B4
          2 000483  3C00                                 LDV,R3   0
          2 000484  0008                                 MMM

      826    19233    2       %L3CHN.CTX$ = L3$;

  19233   2 000485  CCC7 0026                            LDB,B4   L3$,AUTO
          2 000487  BCC4 0006                            LDB,B3   6,B4
          2 000489  CFC3 000C                            STB,B4   12,B3

      827    19234    2       %L3CHN.SUB$ = ADDR(NIL);

  19234   2 00048B  CCC7 0026                            LDB,B4   L3$,AUTO
          2 00048D  BCC4 0006                            LDB,B3   6,B4
          2 00048F  9B80 0000 0000                       LAB,B1   0
          2 000492  9FC3 001A                            STB,B1   26,B3

      828    19235    2       %L3CHN.TERMID.LEV = %TERMINAL_ID_LEV_SUBCHAN#;

  19235   2 000494  CCC7 0026                            LDB,B4   L3$,AUTO
          2 000496  BCC4 0006                            LDB,B3   6,B4
          2 000498  6C02                                 LDV,R6   2
          2 000499  EAC3 0012                            SRM,R6,'00FF'X    18,B3
          2 00049B       00FF

      829    19236    2       %L3CHN.TERMID.TTYP = %KLTY_VIRCIR#;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:111  

  19236   2 00049C  CCC7 0026                            LDB,B4   L3$,AUTO
          2 00049E  BCC4 0006                            LDB,B3   6,B4
          2 0004A0  4C08                                 LDV,R4   8
          2 0004A1  C7C3 0012                            STH,R4   18,B3

      830    19237        /*
      831    19238           Give this L3 a kick.
      832    19239        */
      833    19240    2       CALL_L3.CAL$ = UID.UID$;

  19240   2 0004A3  CCC7 0018                            LDB,B4   UID,AUTO
          2 0004A5  CF80 0000 000D  01                   STB,B4   CALL_L3+1

      834    19241    2       CALL_L3.RCV$ = L3$;

  19241   2 0004A8  BCC7 0026                            LDB,B3   L3$,AUTO
          2 0004AA  BF80 0000 000F  01                   STB,B3   CALL_L3+3

      835    19242            %DISABLE;

  19243   2 0004AD  9C80 0000 0000  xsym                 LDB,B1   KH_CTLTBL$
          2 0004B0  ECC1 0002                            LDB,B6   2,B1
          2 0004B2  B806                                 LDR,R3   ,B6
          2 0004B3  BF47 001E                            STR,R3   LEVEL,AUTO

  19243   2 0004B5  EBC7 001E                            LAB,B6   LEVEL,AUTO
          2 0004B7  EFC7 004C                            STB,B6   START_RCQ$+3,AUTO
          2 0004B9  BBC7 004C                            LAB,B3   START_RCQ$+3,AUTO
          2 0004BB  CBF0 0100                            LAB,B4   256,IMO
          2 0004BD  E380 0000 0000  xent                 LNJ,B6   KHI$DISABLE
          2 0004C0       0001                            DC       s:19245,PREL

      836    19245    2       CALL KXP$PACKET ( CALL_L3 ) ALTRET ( L_ALT );

  19245   2 0004C1  BB80 0000 0002  03                   LAB,B3   +2
          2 0004C4  CBF0 0100                            LAB,B4   256,IMO
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:112  
          2 0004C6  E380 0000 0000  xent                 LNJ,B6   KXP$PACKET
          2 0004C9       FF6B                            DC       s:19202,PREL

      837    19246            %ENABLE;

  19247   2 0004CA  EC80 0000 0000  xsym                 LDB,B6   KH_CTLTBL$
          2 0004CD  DCC6 0002                            LDB,B5   2,B6
          2 0004CF  E847 001E                            LDR,R6   LEVEL,AUTO
          2 0004D1  E905                                 CMR,R6   ,B5
          2 0004D2  0901 0007                            BE       s:19247,PREL

  19247   2 0004D4  CBF0 0000                            LAB,B4   0,IMO
          2 0004D6  E380 0000 0000  xent                 LNJ,B6   KHI$ENABLE
          2 0004D9       0001                            DC       s:19247,PREL

  19247   2                              L_FND_L3        null
      838    19249    2   L_FND_L3: ;
      839    19250    2       UID.UID$ = KX$L3.CM$;

  19250   2 0004DA  ECC7 0026            L_FND_L3        LDB,B6   L3$,AUTO
          2 0004DC  DCC6 0004                            LDB,B5   4,B6
          2 0004DE  DFC7 0018                            STB,B5   UID,AUTO

      840    19251    2       RETURN;

  19251   2 0004E0  ECC7 0046                            LDB,B6   NXT_CQMSG_BFR$+2,AUTO
          2 0004E2  C3C6 0001                            LNJ,B4   1,B6

      841    19252
      842    19253    2   END Y$CHK_L3;
      843    19254
      844    19255
      845    19256    1       RETURN;

  19256   2 0004E4  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      846    19257
      847    19258    1   END KXC$CQSCN;
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:113  

PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:114  
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   G$BOBCAT_M.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   K_ADDRESS_M.:E05TOU  is referenced.
   K_REASON_C.:E05TOU  is referenced.
   KV$BPC.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   KV_GLBCNS_E.:E05TOU  is referenced.
   KX_MACROS_M.:E05TOU  is referenced.
   KX_DATA_C.:E05TOU  is referenced.
   KX_SCODE_C.:E05TOU  is referenced.
   KX_PERR_C.:E05TOU  is referenced.
   KX_EQUS_E.:E05TOU  is referenced.
   KNH_MACRO_C.:E05TOU  is referenced.
   KL_CONTROL_C.:E05TOU  is referenced.
   KH_MACRO_C.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  is referenced.
   GT_LCP6_M.:E05TOU  is referenced.
   KI_CP6.:E05TOU  is referenced.
   GF_LCP6_M.:E05TOU  is referenced.
   GM_LCP6_M.:E05TOU  is referenced.
   GU_LCP6_M.:E05TOU  is referenced.
   GJ_LCP6_M.:E05TOU  is referenced.
   GH_LCP6_M.:E05TOU  is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   KL_AFCN_C.:E05TOU  is referenced.
   KL_MACRO_C.:E05TOU  is referenced.
   K_ID_E.:E05TOU  is referenced.
      No diagnostics issued in procedure KXC$CQSCN.
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:115  

 **** Variables and constants ****

  ****  Section 000 RoData KXC$CQSCN

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 FPTRQR(0:15)               1-0-0/w STRC(96)    r     1 FPT_CONNECT_NAK
     7-0-0/w STRC(32)    r     1 NO_L3CTX                  3A-0-0/w STRC(48)    r     1 Y_ILG_CQMSG

  ****  Section 001  Data  KXC$CQSCN

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     C-0-0/w STRC(256)   r     1 CALL_L3                    0-0-0/c STRC(128)   r     1 KNH_INITNAK_MESS
     8-0-0/w STRC(64)    r     1 KX_CQMSG_LIST

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

    48-0-0/w PTR         r     1 @CTX$                      4-0-0/w PTR         r     1 @PARM_RPTR
     6-0-0/w STRC(256)   r     1 CALL_FPT                  42-0-0/w PTR         r     1 CQMSG_BFR$
    *0-0-0/w PTR         r     1 CTX$                      22-0-0/w STRC(16)    r     1 FUNCTION
    2A-0-0/w STRC(384)   r     1 KV@SNDCQ                  24-0-0/w PTR         r     1 L2$
    26-0-0/w PTR         r     1 L3$                       1E-0-0/w UBIN(16)    r     1 LEVEL
    16-0-0/w PTR         r     1 MESS$                     22-0-0/w UBIN(16)    r     1 MESSFUNC
    44-0-0/w PTR         r     1 NXT_CQMSG_BFR$            *0-0-0/w STRC(32)    r     1 PARM_RPTR
    1A-0-0/w EPTR        r     1 PM$                       1C-0-0/w UBIN(16)    r     1 RCQ_RPTR
    20-0-0/b BIT         r     1 RPR_XIT                   1D-0-0/w UBIN(16)    r     1 RPTR_INCR
    49-0-0/w PTR         r     1 START_RCQ$                23-0-0/w SBIN(16)    r     1 START_RPTR
    1F-0-0/b BIT         r     1 STOP_INCR_RPTR            18-0-0/w STRC(32)    r     1 UID
    21-0-0/b BIT         r     1 WAITING                   48-0-0/w UBIN(16)    r     1 WRDSIZ

  ****  SYMREF variables  ****
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:116  

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$DS4$                     0-0-0/w PTR         r     1 G$HAND_Q$
     0-0-0/w PTR         r     1 G$JIT$                     0-0-0/w PTR         r     1 KH_CTLTBL$
     0-0-0/w PTR         r     1 KV_RCVCQ$                  0-0-0/w STRC(64)    r     1 KX_CNTX
     0-0-0/b EPTR        r     1 KX_PM$(0:2)
     0-0-0/b BIT         r     1 KX_PM_CQHNDID(0:2)
     0-0-0/w STRC(64)    r     1 KX_SLLIST

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w EPTR        r     1 B$EPTR                     0-0-0/c CHAR(7)     r     1 B$STR
     0-0-0/w UBIN(16)    r     1 BASED_WORD                 0-0-0/c CHAR(6000)  r     1 DSTR
     0-0-0/w STRC(96)    r     1 FPT$CONNECT_ACK            0-0-0/w STRC(176)   r     1 FPT$NSAP
     0-0-0/w STRC(1696)  r     1 G$BOBCAT                   0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(384)   r     1 G$USER(0:0)                0-0-0/w STRC(512)   r     1 KH$CHN
     0-0-0/w STRC(64)    r     1 KH_CTLTBL                  0-0-0/c STRC(400)   r     1 KNH$HMI
     0-0-0/c STRC(128)   r     1 KNH_MESS                   0-0-0/w STRC(384)   r     1 KNH_QHDR
     0-0-0/w ASTR(1824)  r     1 KV$BPC                     0-0-0/w STRC(80)    r     1 KX$CQMSG_BFR
     0-0-0/w STRC(4992)  r     1 KX$L2                      0-0-0/w STRC(2320)  r     1 KX$L3
     0-0-0/w STRC(784)   r     1 KX$SL                      0-0-0/c CHAR(6000)  r     1 SSTR


   Procedure KXC$CQSCN requires 1255 words for executable code.
   Procedure KXC$CQSCN requires 82 words of local(AUTO) storage.

    No errors detected in file KXC$CNCMNG.:E05TSI    .
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:117  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:118  
          MINI XREF LISTING

B$EPTR
     17691**DCL     18917>>IF
B$STR IN PROCEDURE Y$CHK_L3
     19140**DCL     19188>>IF      19228>>ASSIGN
BASED_WORD
     16117**DCL     18835>>ASSIGN  18855>>IF      19014>>ASSIGN  19033>>IF      19066>>ASSIGN  19070>>IF
     19243>>ASSIGN  19247>>IF
CALL_FPT
     15763**DCL     18800<<ASSIGN  18837<>CALL    19004<>CALL    19016<>CALL    19068<>CALL
CALL_FPT.EVN
     15767**DCL     18814<<ASSIGN  18930<<ASSIGN  18934<<ASSIGN  18961<<ASSIGN  18965<<ASSIGN  18969<<ASSIGN
     18987<<ASSIGN  19003<<ASSIGN  19008<<ASSIGN  19063<<ASSIGN
CALL_FPT.PRM1
     15768**DCL     18831<<ASSIGN  18910<<ASSIGN
CALL_FPT.PRM1$
     15768**DCL     15769--REDEF   16154--IMP-PTR 16325--IMP-PTR 17633--IMP-PTR 18819<<ASSIGN  18821<<ASSIGN
     18877<<ASSIGN  18879<<ASSIGN  18901>>IF      18917>>IF      18988>>IF      18990>>CALL    18996>>ASSIGN
     19188>>IF      19188>>IF      19188>>IF      19188>>IF      19227>>ASSIGN  19228>>ASSIGN  19228>>ASSIGN
     19228>>ASSIGN
CALL_FPT.PRM2$
     15770**DCL     15770--REDEF
CALL_FPT.RCV$
     15767**DCL     18830<<ASSIGN  18909<<ASSIGN  18917>>IF      18928<<ASSIGN  19064<<ASSIGN
CALL_FPT.RET_BIT1
     15775**DCL     19022>>ASSIGN
CALL_FPT.V_.ADR$
     15771**DCL     18824<<ASSIGN  18826<<ASSIGN  18883<<ASSIGN  18886<<ASSIGN  19122>>IF      19126>>IF
CALL_FPT.V_.BYTSIZ
     15772**DCL     18832<<ASSIGN  18911<<ASSIGN
CALL_L3 IN PROCEDURE Y$CHK_L3
     19168**DCL     19245<>CALL
CALL_L3.CAL$ IN PROCEDURE Y$CHK_L3
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:119  
     19172**DCL     19240<<ASSIGN
CALL_L3.PRM1$ IN PROCEDURE Y$CHK_L3
     19173**DCL     19174--REDEF
CALL_L3.PRM2$ IN PROCEDURE Y$CHK_L3
     19175**DCL     19175--REDEF
CALL_L3.RCV$ IN PROCEDURE Y$CHK_L3
     19172**DCL     19241<<ASSIGN
CQMSG_BFR$
     15834**DCL     17615--IMP-PTR 18813<<ASSIGN  18815>>DOWHILE 18816>>ASSIGN  18833>>ASSIGN  18839>>IF
     18841>>ASSIGN  18841>>ASSIGN  18842>>IF      18844>>ASSIGN  18844>>ASSIGN  18845>>IF      18847>>ASSIGN
     18848>>IF      18850>>ASSIGN  18851>>CALL    18851<>CALL    18853<<ASSIGN  19098--IMP-PTR 19103<>CALL
     19107>>ASSIGN  19108>>ASSIGN  19110>>ASSIGN  19111>>ASSIGN  19114>>ASSIGN  19116>>ASSIGN  19117>>ASSIGN
     19121>>ASSIGN
CTX$ IN PROCEDURE Y$CHK_L2
     19078**DCL     19076--PROC    19082>>IF
DSTR IN PROCEDURE Y$BFR
     19098**DCL     19108<<ASSIGN
FPT$CONNECT.DEST.ADDRESS_N
     16251**DCL     16252--REDEF
FPT$CONNECT.DSTSNPA.ADR_STRING
     16307**DCL     16307--REDEF
FPT$CONNECT.LADR.ADDRESS_N
     16303**DCL     16304--REDEF
FPT$CONNECT.RLCID.GENERATION
     16190**DCL     16191--REDEF
FPT$CONNECT.RLCID.LDCTX
     16191**DCL     16191--REDEF
FPT$CONNECT.TERMINAL_ID.TERM
     16179**DCL     16188--REDEF
FPT$CONNECT_ACK.OUTLINK$
     16329**DCL     18990<>CALL
FPT$CONNECT_ACK.REASON
     16329**DCL     18988>>IF      18996<<ASSIGN
FPT$CONNECT_ACK.UID.UID
     16355**DCL     16355--REDEF   16355--REDEF
FPT$NSAP.NSAP.ADDRESS
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:120  
     17665**DCL     17666--REDEF   19188--IF      19228--ASSIGN
FPT$NSAP.NSAP.LEN
     17658**DCL     19188>>IF      19188>>IF      19188>>IF      19227>>ASSIGN  19228>>ASSIGN  19228>>ASSIGN
FPTRQR
     17833**DCL     18901>>IF
FPT_CONNECT_NAK
     17901**DCL     18942--ASSIGN  18946--ASSIGN  18947--ASSIGN
FPT_CONNECT_NAK.UID.UID
     17931**DCL     17931--REDEF   17931--REDEF
FUNCTION.FNC
     15824**DCL     18891>>IF      18901>>IF      19020>>IF      19026>>IF
G$BOBCAT.USRT$
     17605**DCL     18805>>IF
G$DS4$
     18791**DCL     17602--IMP-PTR 18805>>IF
G$HAND_Q$
     18097**DCL     15844--IMP-PTR 18801>>ASSIGN  18859>>ASSIGN  18867>>DOWHILE 19040>>IF      19040>>IF
     19049>>ASSIGN
G$JIT.ERRLOG
     17531**DCL     17534--REDEF
G$JIT.JSUNIT
     17270**DCL     17271--REDEF
G$JIT.MCLS
     17269**DCL     17269--REDEF
G$JIT.TMRZ
     17538**DCL     17539--REDEF
G$JIT.USER_EXTIME
     17262**DCL     17263--REDEF
G$JIT.USER_MEMTIME
     17265**DCL     17265--REDEF
G$JIT.USER_SVTIME
     17264**DCL     17264--REDEF
G$JIT.USR#
     17259**DCL     18805>>IF
G$JIT$
     18790**DCL     17201--IMP-PTR 18805>>IF
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:121  
G$USER.HMI$
     17185**DCL     18805>>IF
G$USER.MISC
     17182**DCL     17182--REDEF
ILG_CQMSG
     19011**LABEL   18903--GOTO
KH$CHN
     17707**DCL     19200--CALL    19232<<ASSIGN  19232>>ASSIGN
KH$CHN.CTX$
     17777**DCL     19233<<ASSIGN
KH$CHN.SUB$
     17814**DCL     19234<<ASSIGN
KH$CHN.TERMID
     17801**DCL     19221<>CALL
KH$CHN.TERMID.LEV
     17803**DCL     19235<<ASSIGN
KH$CHN.TERMID.TERM
     17803**DCL     17812--REDEF
KH$CHN.TERMID.TTYP
     17803**DCL     19236<<ASSIGN
KHD$SCREECH
     15717**DCL-ENT 19011--CALL
KHI$DISABLE
     15714**DCL-ENT 18835--CALL    19014--CALL    19066--CALL    19243--CALL
KHI$ENABLE
     15715**DCL-ENT 18855--CALL    19033--CALL    19070--CALL    19247--CALL
KH_CTLTBL.PARM.PTR$
     16048**DCL     18835>>ASSIGN  18855>>IF      19014>>ASSIGN  19033>>IF      19066>>ASSIGN  19070>>IF
     19243>>ASSIGN  19247>>IF
KH_CTLTBL$
     18098**DCL     15922--IMP-PTR 18835>>ASSIGN  18855>>IF      19014>>ASSIGN  19033>>IF      19066>>ASSIGN
     19070>>IF      19243>>ASSIGN  19247>>IF
KNH$HMI.WAIT_COUNT
     17173**DCL     18805>>IF
KNH_INITNAK_MESS
     17850**DCL     18944--ASSIGN  18945--ASSIGN
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:122  
KNH_INITNAK_MESS.FPTSZ
     17883**DCL     18942<<ASSIGN
KNH_INITNAK_MESS.FUNCTION
     17850**DCL     17850--REDEF
KNH_INITNAK_MESS.LDCTX
     17855**DCL     18941<<ASSIGN
KNH_INITNAK_MESS.UID
     17880**DCL     17880--REDEF   17880--REDEF
KNH_MESS
     15869**DCL     18819--ASSIGN  18824--ASSIGN  18877--ASSIGN  18883--ASSIGN  18888--ASSIGN  19040--IF
     19121--ASSIGN
KNH_MESS.FLAGS.FREE
     15874**DCL     18891>>IF      18950<<ASSIGN  18973<<ASSIGN  18984<<ASSIGN  19005<<ASSIGN  19019<<ASSIGN
KNH_MESS.FLAGS.FUNCTION
     15874**DCL     18870>>ASSIGN
KNH_MESS.FPTSZ
     15902**DCL     18817>>IF      18824>>ASSIGN  18875>>IF      18883>>ASSIGN  18888>>ASSIGN
KNH_MESS.FUNCTION
     15869**DCL     15869--REDEF   18913>>DOCASE
KNH_MESS.LDCTX
     15874**DCL     18831>>ASSIGN  18910>>ASSIGN  18941>>ASSIGN  18983>>ASSIGN
KNH_MESS.MSGSZ
     15903**DCL     18822>>IF      18832>>ASSIGN  18881>>IF      18888>>ASSIGN  18911>>ASSIGN
KNH_MESS.UID
     15899**DCL     15899--REDEF   15899--REDEF   18827>>ASSIGN  18905>>ASSIGN
KNH_MESS.UIDX.CQ_HNDCTXID
     15900**DCL     18927<<ASSIGN
KNH_MESS.UIDX.CQ_HNDID
     15900**DCL     18894>>IF
KNH_QHDR.RCQ
     15844**DCL     15844--REDEF
KNH_QHDR.RCQ.IPTR
     15844**DCL     18867>>DOWHILE 19040>>IF
KNH_QHDR.RCQ.RPTR
     15844**DCL     18801>>ASSIGN  18859>>ASSIGN  19049<<ASSIGN
KNH_QHDR.RCQ.SZ
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:123  
     15844**DCL     19040>>IF
KV$BPC.BITMAPSIZ
     16134**DCL     16137--IMP-SIZ
KV@SNDCQ
     15829**DCL     18943<<ASSIGN  18948<>CALL
KV@SNDCQ.MSG_.ADR$
     15831**DCL     18944<<ASSIGN  18946<<ASSIGN
KV@SNDCQ.MSG_.BYTSIZ
     15833**DCL     18945<<ASSIGN  18947<<ASSIGN
KVB$GET2NSYS
     15722**DCL-ENT 19103--CALL
KVB$GETSYS
     15721**DCL-ENT 19200--CALL
KVB$RLSSYS
     15723**DCL-ENT 18851--CALL
KVM$SNDCQ
     15719**DCL-ENT 18948--CALL
KV_RCVCQ$
     18099**DCL     18859>>ASSIGN  19046>>ASSIGN
KX$CQMSG_BFR
     17615**DCL     18816--ASSIGN  19102--ASSIGN  19108--ASSIGN  19121--ASSIGN
KX$CQMSG_BFR.BFRWRDSIZ
     17618**DCL     18851<>CALL    19107<<ASSIGN
KX$CQMSG_BFR.BLNK$
     17617**DCL     18839>>IF      18841>>ASSIGN  18844<<ASSIGN  18844>>ASSIGN  18850>>ASSIGN  19110<<ASSIGN
KX$CQMSG_BFR.FLNK$
     17616**DCL     18833>>ASSIGN  18841<<ASSIGN  18841>>ASSIGN  18842>>IF      18844>>ASSIGN  18847>>ASSIGN
     19111<<ASSIGN  19116<<ASSIGN
KX$L2.CHN$
     16397**DCL     19221>>CALL    19232>>ASSIGN
KX$L2.DFLVCPRF.TRADEL
     16518**DCL     16528--REDEF
KX$L2.DSTSNPA.ADR_STRING
     16709**DCL     16709--REDEF
KX$L2.FRMR_NSNR
     16495**DCL     16496--REDEF
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:124  
KX$L2.L3_HEAD$
     16427**DCL     19186>>ASSIGN
KX$L2.LDCTX
     16710**DCL     18983<<ASSIGN
KX$L2.NEXT$
     16397**DCL     19085>>ASSIGN
KX$L2.NTWADR.ADR_STRING
     16429**DCL     16429--REDEF
KX$L2.STATES
     16407**DCL     16407--REDEF
KX$L3.CALL_OPTS
     16782**DCL     19230<<ASSIGN
KX$L3.CALL_OPTS.RCVADR.ADR_STRING
     16787**DCL     16787--REDEF   19188>>IF
KX$L3.CALL_OPTS.RCVADR.SIZ
     16787**DCL     19188>>IF
KX$L3.CHN$
     16748**DCL     19200<>CALL    19232>>ASSIGN  19233>>ASSIGN  19234>>ASSIGN  19235>>ASSIGN  19236>>ASSIGN
KX$L3.CM$
     16747**DCL     19250>>ASSIGN
KX$L3.CM_OPTS
     16817**DCL     19231<<ASSIGN
KX$L3.CM_OPTS.RCVADR.ADR_STRING
     16822**DCL     16822--REDEF
KX$L3.CUG
     16865**DCL     16866--REDEF
KX$L3.DFL_OPTS
     16852**DCL     19230>>ASSIGN  19231>>ASSIGN
KX$L3.DFL_OPTS.RCVADR.ADR_STRING
     16857**DCL     16857--REDEF   19228<<ASSIGN
KX$L3.DFL_OPTS.RCVADR.SIZ
     16857**DCL     19227<<ASSIGN
KX$L3.LCLADR.ADR_STRING
     16982**DCL     16982--REDEF
KX$L3.LCLNSAP
     16999**DCL     17055--REDEF
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:125  
KX$L3.LCLNSAP.NSAP.ADDRESS_N
     17050**DCL     17051--REDEF
KX$L3.LCN#
     16864**DCL     16865--REDEF
KX$L3.NEXT$
     16747**DCL     19194>>ASSIGN
KX$L3.RLSCHN
     16861**DCL     19226<<ASSIGN
KX$L3.RMTNSAP
     17072**DCL     17128--REDEF
KX$L3.RMTNSAP.NSAP.ADDRESS_N
     17123**DCL     17124--REDEF
KX$L3.STATES
     16870**DCL     16870--REDEF
KX$L3.TRNDLY
     16866**DCL     16867--REDEF
KX$L3.TRNDLYIND
     16867**DCL     16868--REDEF
KX$L3.TYP
     16753**DCL     19188>>IF      19225<<ASSIGN
KX$SL.CQMSG_
     17159**DCL     17160--REDEF
KX$SL.CQMSG_STAGE
     17163**DCL     17164--REDEF
KX$SL.OTPBFR$
     17149**DCL     17149--REDEF
KX$SL.OTPBFR_STAGE
     17162**DCL     17163--REDEF
KX$SL.SNDINTACK_ALTRET
     17153**DCL     17153--REDEF
KX$SL.SNDINTNAK_ALTRET
     17154**DCL     17154--REDEF
KX$SL.SNDINT_ALTRET
     17152**DCL     17152--REDEF
KX$SL.SNDTRM_ALTRET
     17152**DCL     17153--REDEF
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:126  
KX$SL.START_RCQ$
     17164**DCL     19122>>IF      19124<<ASSIGN  19126>>IF      19128<<ASSIGN
KXF$FRAME
     15720**DCL-ENT 19004--CALL
KXP$PACKET
     15724**DCL-ENT 19245--CALL
KXS$GETL3
     15725**DCL-ENT 19199--CALL
KXS$RLSL3
     15726**DCL-ENT 19202--CALL
KXS$SYSLOG
     15727**DCL-ENT 19221--CALL
KXV$VCNTW
     15728**DCL-ENT 18002--DCLINIT 18917--IF
KX_CNTX.HD$
     18113**DCL     19080>>ASSIGN
KX_CQMSG_LIST.HEAD$
     18095**DCL     18813>>ASSIGN  18845>>IF      18847<<ASSIGN  19112>>IF      19114<<ASSIGN
KX_CQMSG_LIST.TAIL$
     18096**DCL     18848>>IF      18850<<ASSIGN  19110>>ASSIGN  19116>>ASSIGN  19117<<ASSIGN
KX_PM$
     18787**DCL     18828>>ASSIGN  18906>>ASSIGN
KX_PM_CQHNDID
     18786**DCL     18894>>IF
KX_SL.CQMSG_
     18013**DCL     18014--REDEF
KX_SL.CQMSG_STAGE
     18017**DCL     18018--REDEF
KX_SL.OTPBFR$
     18003**DCL     18003--REDEF
KX_SL.OTPBFR_STAGE
     18016**DCL     18017--REDEF
KX_SL.SNDINTACK_ALTRET
     18007**DCL     18007--REDEF
KX_SL.SNDINTNAK_ALTRET
     18008**DCL     18008--REDEF
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:127  
KX_SL.SNDINT_ALTRET
     18006**DCL     18006--REDEF
KX_SL.SNDTRM_ALTRET
     18006**DCL     18007--REDEF
KX_SLLIST.HD$
     18113**DCL     19060>>IF      19064>>ASSIGN
KX_STATS_HDLC.REQSTATS.DSPMSK
     18387**DCL     18393--REDEF
KX_STATS_HDLC.REQSTATS.SLCMSK
     18428**DCL     18435--REDEF
KX_STATS_X25.REQSTATS.DSPMSK
     18712**DCL     18718--REDEF
KX_STATS_X25.REQSTATS.SLCMSK
     18753**DCL     18760--REDEF
L2$
     15826**DCL     19080<<ASSIGN  19081>>DOWHILE 19082>>IF      19085<<ASSIGN  19085>>ASSIGN
L3$
     15827**DCL     16747--IMP-PTR 19186<<ASSIGN  19187>>DOWHILE 19188>>IF      19188>>IF      19188>>IF
     19194<<ASSIGN  19194>>ASSIGN  19199<>CALL    19200>>CALL    19202<>CALL    19225>>ASSIGN  19226>>ASSIGN
     19227>>ASSIGN  19228>>ASSIGN  19230>>ASSIGN  19230>>ASSIGN  19231>>ASSIGN  19231>>ASSIGN  19232>>ASSIGN
     19233>>ASSIGN  19233>>ASSIGN  19234>>ASSIGN  19235>>ASSIGN  19236>>ASSIGN  19241>>ASSIGN  19250>>ASSIGN
LEVEL
     15814**DCL     18835<<ASSIGN  18835<>CALL    18855>>IF      19014<<ASSIGN  19014<>CALL    19033>>IF
     19066<<ASSIGN  19066<>CALL    19070>>IF      19243<<ASSIGN  19243<>CALL    19247>>IF
L_ALT IN PROCEDURE Y$CHK_L3
     19202**LABEL   19199--CALLALT 19245--CALLALT
L_FND_L3 IN PROCEDURE Y$CHK_L3
     19247**LABEL   19193--GOTO
L_SKIP_IT
     18973**LABEL   18925--CALLALT 18926--CALLALT
L_STOP
     19030**LABEL   19028--CALLALT
MESS$
     15780**DCL     15869--IMP-PTR 18816<<ASSIGN  18817>>IF      18819>>ASSIGN  18822>>IF      18824>>ASSIGN
     18824>>ASSIGN  18827>>ASSIGN  18831>>ASSIGN  18832>>ASSIGN  18859<<ASSIGN  18870>>ASSIGN  18875>>IF
     18877>>ASSIGN  18881>>IF      18883>>ASSIGN  18883>>ASSIGN  18888>>ASSIGN  18888>>ASSIGN  18891>>IF
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:128  
     18894>>IF      18905>>ASSIGN  18910>>ASSIGN  18911>>ASSIGN  18913>>DOCASE  18927>>ASSIGN  18941>>ASSIGN
     18950>>ASSIGN  18973>>ASSIGN  18983>>ASSIGN  18984>>ASSIGN  19005>>ASSIGN  19019>>ASSIGN  19046<<ASSIGN
     19099--IMP-PTR 19108>>ASSIGN
MESSFUNC
     15822**DCL     15823--REDEF   18870<<ASSIGN
NO_L3CTX
     17952**DCL     19221<>CALL
NXT_CQMSG_BFR$
     15835**DCL     18833<<ASSIGN  18853>>ASSIGN
PARM_RPTR
     15809**DCL        19--PROC
PARM_RPTR.START_PTR
     15811**DCL     18802>>ASSIGN
PARM_RPTR.STOP_PTR
     15810**DCL     19074<<ASSIGN
PM$
     15808**DCL     18828<<ASSIGN  18837>>CALL    18906<<ASSIGN  19016>>CALL    19068>>CALL
RCQ_RPTR
     15812**DCL     18801<<ASSIGN  18867>>DOWHILE 18871>>IF      19039<<ASSIGN  19039>>ASSIGN  19040>>IF
     19040>>IF      19044<<ASSIGN  19046>>ASSIGN  19049>>ASSIGN  19074>>ASSIGN
RPR_XIT
     15820**DCL     18804<<ASSIGN  19022<<ASSIGN  19022>>ASSIGN  19060>>IF
RPTR_INCR
     15813**DCL     18888<<ASSIGN  19039>>ASSIGN  19102>>ASSIGN  19108>>ASSIGN  19108>>ASSIGN
SCNLOP
     18867**LABEL   18898--EXIT
SSTR IN PROCEDURE Y$BFR
     19099**DCL     19108>>ASSIGN
START_RCQ$ IN PROCEDURE Y$BFR
     19100**DCL     19121<<ASSIGN  19124>>ASSIGN  19128>>ASSIGN
START_RPTR
     15825**DCL     18802<<ASSIGN  18871>>IF      18873<<ASSIGN  18896>>IF
STOP_INCR_RPTR
     15819**DCL     18803<<ASSIGN  18954<<ASSIGN  19026>>IF      19030<<ASSIGN  19047>>IF
UID.UID
     15805**DCL     15805--REDEF   15805--REDEF   18827<<ASSIGN  18905<<ASSIGN
PL6.E3A0      #002=KXC$CQSCN File=KXC$CNCMNG.:E05TSI                             WED 07/30/97 02:19 Page:129  
UID.UID$
     15805**DCL     18830>>ASSIGN  18909>>ASSIGN  18925<>CALL    18928>>ASSIGN  18935<>CALL    18978<>CALL
     18983>>ASSIGN  19001<>CALL    19122>>IF      19124>>ASSIGN  19126>>IF      19128>>ASSIGN  19186>>ASSIGN
     19199<>CALL    19221>>CALL    19232>>ASSIGN  19240>>ASSIGN  19250<<ASSIGN
UID.UIDX.CQ_HNDCTXID
     15806**DCL     18927>>ASSIGN
UID.UIDX.CQ_HNDID
     15806**DCL     18828>>ASSIGN  18829<<ASSIGN  18906>>ASSIGN  18907<<ASSIGN
UPDATE_RPTR
     19033**LABEL   18893--GOTO    18900--GOTO    18956--GOTO    18974--GOTO    18985--GOTO    19006--GOTO
WAITING
     15821**DCL     18807<<ASSIGN  18809<<ASSIGN  19026>>IF
WRDSIZ IN PROCEDURE Y$BFR
     19097**DCL     19102<<ASSIGN  19103<>CALL    19107>>ASSIGN
Y$BFR
     19091**PROC    19028--CALL
Y$CHK_L2
     19076**PROC    18925--CALL    18935--CALL    18978--CALL    18990--CALL    19001--CALL
Y$CHK_L3
     19133**PROC    18926--CALL
Y_ILG_CQMSG
     18050**DCL     19011<>CALL
