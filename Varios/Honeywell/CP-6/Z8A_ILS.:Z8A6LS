

09:11 AUG 09 '97 Z8A_ILS.:Z8A6SI/Z8A_ILS.:Z8A6TUI                          1    
    1      /*T***********************************************************/
    2      /*T*                                                         */
    3      /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
    4      /*T*                                                         */
    5      /*T***********************************************************/
    6      /* INCLUDE FILE "ILS" (ACCOUNT IS C80C80) */
    7
    8      DCL   ILS$ PTR EXT ;
    9
   10      DCL 1 ILS_   EXT,
   11          2 TOP    PTR  INIT (ADDR(NIL)),
   12          2 FIRST  PTR,               /* FIRST ITEM IN PAGE  */
   13          2 BOTTOM UBIN INIT(0),      /* NEXT AVAILABLE      */
   14          2 FLOOR  UBIN INIT(0),      /* LAST WORD IN PAGE   */
   15          2 SIZE   UBIN INIT(0);      /* SIZE IN #PAGES      */
   16
   17      DCL 1 ILS    BASED (ILS$) ALIGNED,
   18          2 ID     UBIN (18) UNAL, /* OPERATION CODE */
   19          2 SEQNO  UBIN HALF UNAL, /* Sequence Numbr */
   20          2 B      UNAL,           /* Bits            */
   21          3 CDEF   BIT (1),        /* Common Redef    */
   22          3 *      BIT (17),
   23          2 RDEF   UBIN HALF UNAL, /* Redefinition    */
   24          2 NEXT   PTR,
   25          2 ILL$   PTR,
   26          2 DNAME  PTR,
   27          2 DEF    REDEF DNAME PTR ;
   28
   29      DCL 1 OPN    BASED (ILS$) ALIGNED,
   30          2 ID     UBIN (18) UNAL, /* OPERATION CODE */
   31          2 SEQNO  UBIN HALF UNAL, /* Sequence Numbr */
   32          2 B      UNAL,           /* Bits            */
   33          3 CDEF   BIT (1),        /* Common Redef    */
   34          3 *      BIT (17),
   35          2 RDEF   UBIN HALF UNAL, /* Redefinition    */
   36          2 NEXT   PTR,
   37          2 ILL$   PTR;
09:11 AUG 09 '97 Z8A_ILS.:Z8A6SI/Z8A_ILS.:Z8A6TUI                          2    
   38
   39      %MACRO RESERVE_ILS (ITEM=, POINTER=ILS$, VARIABLE='0'B) ;
   40
   41             DO ;
   42               %IF VARIABLE ;
   43                  ITERATION = ILS_STEP_TABLE (ITEM-%FIRST_ILS) ;
   44                  IF ILS_.BOTTOM + ITERATION >= ILS_.FLOOR
   45                  THEN CALL Z8AR$RESERVER (ADDR(ILS_)) ;
   46                  POINTER = PINCRW (ILS_.FIRST, ILS_.BOTTOM) ;
   47                  ILS_.BOTTOM = ILS_.BOTTOM + ITERATION ;
   48                  POINTER -> ILS.ID = ITEM ;
   49                  POINTER -> ILS.NEXT = ADDR(NIL) ;
   50               %ELSE ;
   51                 %IF ITEM = %OPN;
   52                    %LSET @ILS_SIZE = CHARTEXT('SIZEW(OPN)');
   53                 %ELSEIF ITEM = %OPV
   54                      OR ITEM = %OPA;
   55                    %LSET @ILS_SIZE = CHARTEXT('SIZEW(ILS)');
   56                 %ELSE;
   57                    %ERROR ('**** ITEM must be set to OPN, OPA or OPV', 4);
   58                    %LSET @ILS_SIZE = CHARTEXT('SIZEW(ILS)');
   59                 %ENDIF;
   60
   61                 IF ILS_.BOTTOM + %@ILS_SIZE >= ILS_.FLOOR
   62                 THEN CALL Z8AR$RESERVER(ADDR(ILS_));
   63                 POINTER = PINCRW (ILS_.FIRST, ILS_.BOTTOM) ;
   64                 ILS_.BOTTOM = ILS_.BOTTOM + %@ILS_SIZE ;
   65                 POINTER->ILS.ID = ITEM ;
   66                 POINTER->ILS.NEXT = ADDR(NIL);
   67               %ENDIF ;
   68             END ;
   69
   70      %MEND ;
   71
   72      %MACRO TOP_ILS (POINTER = ILS$) ;
   73
   74             DO ;
09:11 AUG 09 '97 Z8A_ILS.:Z8A6SI/Z8A_ILS.:Z8A6TUI                          3    
   75               POINTER = ILS_.TOP ;
   76             END ;
   77
   78      %MEND ;
   79
   80      %MACRO STEP_ILS (POINTER = ILS$) ;
   81
   82             DO ;
   83               POINTER = PINCRW (POINTER, ILS_STEP_TABLE(POINTER->ILS.ID-%FIRST_ILS));
   84               IF POINTER = PINCRW (ILS_.FIRST, ILS_.BOTTOM)
   85               THEN POINTER = ADDR(NIL) ;
   86               ELSE
   87               IF POINTER->ILS.ID = %CONTINUE
   88               THEN POINTER = POINTER -> CONT.NEXT;
   89             END ;
   90
   91      %MEND ;
   92
   93
   94      %SET ILS_STEP_BOUNDS = LAST_ILS - FIRST_ILS;
   95      DCL   ILS_STEP_TABLE (0:%ILS_STEP_BOUNDS) UBIN
   96      %IF INITIALIZE;
   97            CONSTANT SYMDEF
   98            INIT (
   99            SIZEW(OPN) /* OPN */
  100            ,SIZEW(ILS) /* OPV */
  101            ,SIZEW(ILS) /* OPA */
  102             )
  103      %ELSE;
  104            SYMREF READONLY
  105      %ENDIF ;
  106           ;
  107
  108      %EJECT;


