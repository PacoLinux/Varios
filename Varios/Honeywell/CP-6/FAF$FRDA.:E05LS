VERSION E05

PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:1    
        1        1        /*M*   FAF$FRDA - Routines to do file-relative disk addr manipulation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8                                                                                  /*
        9        9                                                                                   *
       10       10                                                                                     */
       11       11        /*P*   NAME:   FAF$FRDA
       12       12        *      PURPOSE:  Validate, allocate and convert file-relative
       13       13        *                disk addresses                                              */
       14       14        %EJECT;
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:2    
       15       15        /*F*   NAME:   FAF$CHKDAFR
       16       16               PURPOSE:  Validate a file-relative disk address                       */
       17       17                                                /*                                    */
       18       18                                                /*                                    */
       19       19                                                /*                                    */
       20       20        /*D*   NAME:   FAF$CHKDAFR
       21       21               CALL:   CALL FAF$CHKDAFR(DA) ALTRET(LOC);
       22       22               INPUT:  DA - Disk address to be checked
       23       23                       DCB pointer in B$JIT.DCB$, CFU pointer in
       24       24                         F$DCB.CFU$, and extent table pointer in
       25       25                         FM$CFUEXT.XTX
       26       26               OUTPUT: Normal return if OK, else ALTRET
       27       27               DESCRIPTION:  ALTRET if DA is less than FM_FRZERO or
       28       28             greater than or equal to FM$CFU.UGRANS.                                 */
       29       29                                                /*                                    */
       30       30        FAF$CHKDAFR: PROC(DA) ALTRET;
       31       31        /* PARAMETERS */
       32       32    1   DCL DA SBIN WORD;
       33       33        /* LOCAL AUTOMATIC STORAGE */
       34       34    1   DCL TMPDA UBIN;
       35       35        /* INCLUDE FILES */
       36       36        %INCLUDE B$JIT;
       37      639        %INCLUDE F$DCB;
       38      688        %INCLUDE FM$CFU;
       39      733        /* EXTERNAL DATA */
       40      734    1   DCL B$JIT$ PTR SYMREF;
       41      735    1   DCL FM_FRZERO SBIN SYMREF;
       42      736        /* BASED STRUCTURES */
       43      737        %FM$CFU;
       44      743                                                /*                                    */
       45      744    1           TMPDA=DA-FM_FRZERO;             /* SUBTRACT FILE-RELATIVE ZERO        */
       46      745    1           IF TMPDA>=B$JIT$->B$JIT.DCB$->F$DCB.CFU$->FM$CFU.UGRANS
       47      746    1           THEN ALTRETURN;                 /* TOO LARGE                          */
       48      747    1           RETURN;
       49      748    1   END FAF$CHKDAFR;
       50      749        %EOD;

PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:3    
--  Include file information  --

   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FAF$CHKDAFR.

   Procedure FAF$CHKDAFR requires 16 words for executable code.
   Procedure FAF$CHKDAFR requires 6 words of local(AUTO) storage.

PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:4    

 Object Unit name= FAF$CHKDAFR                                File name= FAF$FRDA.:E05TOU
 UTS= JUL 29 '97 15:23:01.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    16     20  FAF$CHKDAFR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  FAF$CHKDAFR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                FM_FRZERO                             B_VECTNIL
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:5    


        1        1        /*M*   FAF$FRDA - Routines to do file-relative disk addr manipulation */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* */
        8        8                                                                                  /*
        9        9                                                                                   *
       10       10                                                                                     */
       11       11        /*P*   NAME:   FAF$FRDA
       12       12        *      PURPOSE:  Validate, allocate and convert file-relative
       13       13        *                disk addresses                                              */
       14       14        %EJECT;
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:6    
       15       15        /*F*   NAME:   FAF$CHKDAFR
       16       16               PURPOSE:  Validate a file-relative disk address                       */
       17       17                                                /*                                    */
       18       18                                                /*                                    */
       19       19                                                /*                                    */
       20       20        /*D*   NAME:   FAF$CHKDAFR
       21       21               CALL:   CALL FAF$CHKDAFR(DA) ALTRET(LOC);
       22       22               INPUT:  DA - Disk address to be checked
       23       23                       DCB pointer in B$JIT.DCB$, CFU pointer in
       24       24                         F$DCB.CFU$, and extent table pointer in
       25       25                         FM$CFUEXT.XTX
       26       26               OUTPUT: Normal return if OK, else ALTRET
       27       27               DESCRIPTION:  ALTRET if DA is less than FM_FRZERO or
       28       28             greater than or equal to FM$CFU.UGRANS.                                 */
       29       29                                                /*                                    */
       30       30        FAF$CHKDAFR: PROC(DA) ALTRET;

     30  0 000000   000000 700200 xent  FAF$CHKDAFR  TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

       31       31        /* PARAMETERS */
       32       32    1   DCL DA SBIN WORD;
       33       33        /* LOCAL AUTOMATIC STORAGE */
       34       34    1   DCL TMPDA UBIN;
       35       35        /* INCLUDE FILES */
       36       36        %INCLUDE B$JIT;
       37      639        %INCLUDE F$DCB;
       38      688        %INCLUDE FM$CFU;
       39      733        /* EXTERNAL DATA */
       40      734    1   DCL B$JIT$ PTR SYMREF;
       41      735    1   DCL FM_FRZERO SBIN SYMREF;
       42      736        /* BASED STRUCTURES */
       43      737        %FM$CFU;
       44      743                                                /*                                    */
       45      744    1           TMPDA=DA-FM_FRZERO;             /* SUBTRACT FILE-RELATIVE ZERO        */

    744  0 000002   200003 470500                    LDP0    @DA,,AUTO
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:7    
         0 000003   000000 236100                    LDQ     0,,PR0
         0 000004   000000 136000 xsym               SBLQ    FM_FRZERO
         0 000005   200004 756100                    STQ     TMPDA,,AUTO

       46      745    1           IF TMPDA>=B$JIT$->B$JIT.DCB$->F$DCB.CFU$->FM$CFU.UGRANS

    745  0 000006   000000 471400 xsym               LDP1    B$JIT$
         0 000007   100232 473500                    LDP3    154,,PR1
         0 000010   300066 474500                    LDP4    54,,PR3
         0 000011   400004 236100                    LDQ     4,,PR4
         0 000012   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000013   200004 116100                    CMPQ    TMPDA,,AUTO
         0 000014   000016 600000 0                  TZE     s:746
         0 000015   000017 603000 0                  TRC     s:747

       47      746    1           THEN ALTRETURN;                 /* TOO LARGE                          */

    746  0 000016   000000 702200 xent               TSX2  ! X66_AALT

       48      747    1           RETURN;

    747  0 000017   000000 702200 xent               TSX2  ! X66_ARET
       49      748    1   END FAF$CHKDAFR;
       50      749        %EOD;

PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:8    
--  Include file information  --

   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   B$JIT.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FAF$CHKDAFR.
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:9    

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DA                       *0-0-0/w SBIN        r     1 DA
     4-0-0/w UBIN        r     1 TMPDA

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w SBIN        r     1 FM_FRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU


   Procedure FAF$CHKDAFR requires 16 words for executable code.
   Procedure FAF$CHKDAFR requires 6 words of local(AUTO) storage.
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:10   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:11   
          MINI XREF LISTING

B$JIT.CPFLAGS1.SLEAZE
       457**DCL       457--REDEF
B$JIT.DCB$
       531**DCL       745>>IF
B$JIT.ERR.MID
       364**DCL       364--REDEF
B$JIT.JRESPEAK
       525**DCL       526--REDEF
B$JIT.ORIGINATOR_PORT.FROM_CR
       634**DCL       634--REDEF     635--REDEF
B$JIT.PNR
       538**DCL       538--REDEF
B$JIT.TSLINE
       632**DCL       633--REDEF
B$JIT$
       734**DCL       358--IMP-PTR   745>>IF
DA
        32**DCL        30--PROC      744>>ASSIGN
F$DCB.ACTPOS
       665**DCL       665--REDEF
F$DCB.ARS
       640**DCL       640--REDEF
F$DCB.ATTR
       658**DCL       659--REDEF
F$DCB.BORROW
       673**DCL       673--REDEF     673--REDEF     673--REDEF
F$DCB.CFU$
       674**DCL       745>>IF
F$DCB.DCBNAME.L
       687**DCL       687--IMP-SIZ
F$DCB.EOMCHAR
       644**DCL       644--REDEF
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:12   
F$DCB.FLDID
       668**DCL       668--REDEF
F$DCB.FORM$
       662**DCL       662--REDEF
F$DCB.FSECT
       678**DCL       678--REDEF
F$DCB.FSN
       655**DCL       655--REDEF     655--REDEF     656--REDEF
F$DCB.HEADER$
       661**DCL       661--REDEF
F$DCB.IXTNSIZE
       659**DCL       659--REDEF
F$DCB.LASTSTA$
       649**DCL       649--REDEF
F$DCB.LVL
       674**DCL       674--REDEF
F$DCB.NAME.C
       649**DCL       649--REDEF
F$DCB.NOEOF
       670**DCL       670--REDEF
F$DCB.NRECS
       660**DCL       660--REDEF
F$DCB.NRECX
       679**DCL       679--REDEF
F$DCB.OHDR
       671**DCL       671--REDEF
F$DCB.ORG
       654**DCL       654--REDEF
F$DCB.PRECNO
       677**DCL       677--REDEF
F$DCB.RCSZ
       682**DCL       682--REDEF
F$DCB.RES
       650**DCL       650--REDEF
F$DCB.SETX
       662**DCL       662--REDEF
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:13   
F$DCB.TAB$
       661**DCL       662--REDEF
F$DCB.TDA
       676**DCL       676--REDEF
F$DCB.WSN
       651**DCL       651--REDEF
FM$CFU.ACCTX
       739**DCL       739--REDEF
FM$CFU.UGRANS
       740**DCL       745>>IF
FM_FRZERO
       735**DCL       744>>ASSIGN
TMPDA
        34**DCL       744<<ASSIGN    745>>IF
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:14   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #001=FAF$CHKDAFR File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:15   
              MINI UREF LISTING

FAF$CHKDAFR      30**PROC

PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:16   
       51        1        /*T***********************************************************/
       52        2        /*T*                                                         */
       53        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       54        4        /*T*                                                         */
       55        5        /*T***********************************************************/
       56        6        /*F*   NAME:   FAF$FRTOSR
       57        7               PURPOSE:  Convert a file-relative disk address to set-relative        */
       58        8                                                /*                                    */
       59        9                                                /*                                    */
       60       10                                                /*                                    */
       61       11        /*D*   NAME:   FAF$FRTOSR
       62       12               CALL:   CALL FAF$SRTOFR(FRDA,SRDA,GRANS) ALTRET(LOC);
       63       13               INPUT:  FRDA - File-relative disk address to be converted
       64       14               OUTPUT: SRDA - Set-relative disk address
       65       15                       GRANS - # of grans from SRDA to end of current extent
       66       16                       ALTRET if bad file-relative disk address
       67       17               DESCRIPTION:                                                          */
       68       18                                                /*                                    */
       69       19        FAF$FRTOSR: PROC(FRDA,SRDA,GRANS) ALTRET;
       70       20        /* PARAMETERS */
       71       21    1   DCL FRDA UBIN;
       72       22    1   DCL SRDA UBIN;
       73       23    1   DCL GRANS UBIN;
       74       24    1   DCL GRANS$ REDEF GRANS PTR;
       75       25        /* LOCAL AUTOMATIC STORAGE */
       76       26    1   DCL XTX SBIN WORD;
       77       27    1   DCL XTX$ PTR;
       78       28    1   DCL NGRAN UBIN;
       79       29    1   DCL I UBIN;
       80       30    1   DCL CFU$ PTR;
       81       31    1   DCL SIZ SBIN WORD;
       82       32        /* INCLUDE FILES */
       83       33        %PLIST;
       84       34        %INCLUDE F$JIT_C;
       85      464        %INCLUDE F$DCB;
       86      513        %INCLUDE FM$CFU;
       87      558        /* EXTERNAL DATA */
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:17   
       88      559    1   DCL B$JIT$ PTR SYMREF;
       89      560    1   DCL F$CFU$ PTR SYMREF;
       90      561    1   DCL FM_FRZERO SBIN SYMREF;
       91      562        /* BASED STRUCTURES */
       92      563        %FM$CFU (BASED="BASED(CFU$)");
       93      569        %FM$CFUEXT;
       94      573        /**/
       95      574    1           CFU$=B$JIT.DCB$->F$DCB.CFU$;
       96      575        /**/
       97      576    1   FRTOSR10: ;
       98      577    1           SRDA=FRDA-FM_FRZERO;            /* REMOVE FILE-RELATIVE ZERO BIAS     */
       99      578    1           IF SRDA>=FM$CFU.UGRANS THEN
      100      579    1              IF FM$CFU.UGRANS~=0 THEN
      101      580    1                 ALTRETURN;
      102      581    1           XTX=FM$CFU.XTX;
      103      582    1           IF XTX~=1 THEN
      104      583    2           DO WHILE(XTX~=0);
      105      584    2              XTX$=PINCRW(F$CFU$,XTX);     /* PTR TO EXTENT BLOCK                */
      106      585    2              I=0;
      107      586    3              DO WHILE(I<XTX$->FM$CFUEXT.NUM);
      108      587    3                 NGRAN=XTX$->FM$CFUEXT.XTNT.XTNSIZE(I);
      109      588    3                 IF NGRAN~=0
      110      589    3                 THEN                      /* 1-WORD EXTENT                      */
      111      590    3                    SIZ=1;
      112      591    3                 ELSE                      /* 2-WORD EXTENT                      */
      113      592    4                 DO;
      114      593    4                    SIZ=2;
      115      594    4                    NGRAN=XTX$->FM$CFUEXT.EXTNT.XTNSIZE(I);
      116      595    4                    END;
      117      596    3                 IF NGRAN>SRDA
      118      597    3                 THEN                      /* DESIRED FR DA IS IN THIS EXTENT    */
      119      598    4                 DO;
      120      599    4                    GRANS=NGRAN-SRDA;      /* # GRANS TO END OF EXTENT           */
      121      600    4                    SRDA=SRDA+XTX$->FM$CFUEXT.XTNT.XTNSDA(I);
      122      601    4                    RETURN;
      123      602    4                    END;
      124      603    3                 SRDA=SRDA-NGRAN;
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:18   
      125      604    3                 I=I+SIZ;
      126      605    3                 END;
      127      606    2              XTX=XTX$->FM$CFUEXT.LINKX;   /* POINTER TO NEXT TABLE              */
      128      607    2              END;
      129      608    2           ELSE DO;
      130      609    2              GRANS=FM$CFU.UGRANS+FM$CFU.NGAVAL-SRDA;
      131      610    2              SRDA=FM$CFU.FITSDA+SRDA;
      132      611    2              RETURN;
      133      612    2              END;
      134      613    1           ALTRETURN;
      135      614        /**/
      136      615    1   FAF$FRTOSRNJ: ENTRY(FRDA,SRDA,GRANS) ALTRET;
      137      616        /**/
      138      617    1           CFU$=GRANS$;
      139      618    1           GOTO FRTOSR10;
      140      619    1   END FAF$FRTOSR;
      141      620        %EOD;

PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:19   
--  Include file information  --

   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FAF$FRTOSR.

   Procedure FAF$FRTOSR requires 101 words for executable code.
   Procedure FAF$FRTOSR requires 14 words of local(AUTO) storage.

PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:20   

 Object Unit name= FAF$FRTOSR                                 File name= FAF$FRDA.:E05TOU
 UTS= JUL 29 '97 15:23:08.36 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   101    145  FAF$FRTOSR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        3  FAF$FRTOSR
     0    137          yes     yes      Std        3  FAF$FRTOSRNJ

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_AALT
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                F$CFU$                                FM_FRZERO
     B_VECTNIL
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:21   


       51        1        /*T***********************************************************/
       52        2        /*T*                                                         */
       53        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       54        4        /*T*                                                         */
       55        5        /*T***********************************************************/
       56        6        /*F*   NAME:   FAF$FRTOSR
       57        7               PURPOSE:  Convert a file-relative disk address to set-relative        */
       58        8                                                /*                                    */
       59        9                                                /*                                    */
       60       10                                                /*                                    */
       61       11        /*D*   NAME:   FAF$FRTOSR
       62       12               CALL:   CALL FAF$SRTOFR(FRDA,SRDA,GRANS) ALTRET(LOC);
       63       13               INPUT:  FRDA - File-relative disk address to be converted
       64       14               OUTPUT: SRDA - Set-relative disk address
       65       15                       GRANS - # of grans from SRDA to end of current extent
       66       16                       ALTRET if bad file-relative disk address
       67       17               DESCRIPTION:                                                          */
       68       18                                                /*                                    */
       69       19        FAF$FRTOSR: PROC(FRDA,SRDA,GRANS) ALTRET;

     19  0 000000   000000 700200 xent  FAF$FRTOSR   TSX0  ! X66_AUTO_3
         0 000001   000016 000003                    ZERO    14,3

       70       20        /* PARAMETERS */
       71       21    1   DCL FRDA UBIN;
       72       22    1   DCL SRDA UBIN;
       73       23    1   DCL GRANS UBIN;
       74       24    1   DCL GRANS$ REDEF GRANS PTR;
       75       25        /* LOCAL AUTOMATIC STORAGE */
       76       26    1   DCL XTX SBIN WORD;
       77       27    1   DCL XTX$ PTR;
       78       28    1   DCL NGRAN UBIN;
       79       29    1   DCL I UBIN;
       80       30    1   DCL CFU$ PTR;
       81       31    1   DCL SIZ SBIN WORD;
       82       32        /* INCLUDE FILES */
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:22   
       83       33        %PLIST;
       84       34        %INCLUDE F$JIT_C;
       85      464        %INCLUDE F$DCB;
       86      513        %INCLUDE FM$CFU;
       87      558        /* EXTERNAL DATA */
       88      559    1   DCL B$JIT$ PTR SYMREF;
       89      560    1   DCL F$CFU$ PTR SYMREF;
       90      561    1   DCL FM_FRZERO SBIN SYMREF;
       91      562        /* BASED STRUCTURES */
       92      563        %FM$CFU (BASED="BASED(CFU$)");
       93      569        %FM$CFUEXT;
       94      573        /**/
       95      574    1           CFU$=B$JIT.DCB$->F$DCB.CFU$;

    574  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 471500                    LDP1    154,,PR0
         0 000004   100066 236100                    LDQ     54,,PR1
         0 000005   200012 756100                    STQ     CFU$,,AUTO

    574  0 000006                       FRTOSR10     null
       96      575        /**/
       97      576    1   FRTOSR10: ;
       98      577    1           SRDA=FRDA-FM_FRZERO;            /* REMOVE FILE-RELATIVE ZERO BIAS     */

    577  0 000006   200003 470500                    LDP0    @FRDA,,AUTO
         0 000007   000000 236100                    LDQ     0,,PR0
         0 000010   000000 136000 xsym               SBLQ    FM_FRZERO
         0 000011   200004 471500                    LDP1    @SRDA,,AUTO
         0 000012   100000 756100                    STQ     0,,PR1

       99      578    1           IF SRDA>=FM$CFU.UGRANS THEN

    578  0 000013   200012 473500                    LDP3    CFU$,,AUTO
         0 000014   300004 236100                    LDQ     4,,PR3
         0 000015   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000016   100000 116100                    CMPQ    0,,PR1
         0 000017   000021 600000 0                  TZE     s:579
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:23   
         0 000020   000025 603000 0                  TRC     s:581

      100      579    1              IF FM$CFU.UGRANS~=0 THEN

    579  0 000021   300004 236100                    LDQ     4,,PR3
         0 000022   000032 316000 xsym               CANQ    B_VECTNIL+26
         0 000023   000025 600000 0                  TZE     s:581

      101      580    1                 ALTRETURN;

    580  0 000024   000000 702200 xent               TSX2  ! X66_AALT

      102      581    1           XTX=FM$CFU.XTX;

    581  0 000025   300003 236100                    LDQ     3,,PR3
         0 000026   000022 772000                    QRL     18
         0 000027   200006 756100                    STQ     XTX,,AUTO

      103      582    1           IF XTX~=1 THEN

    582  0 000030   000001 116007                    CMPQ    1,DL
         0 000031   000120 600000 0                  TZE     s:609

      104      583    2           DO WHILE(XTX~=0);

    583  0 000032   000000 116003                    CMPQ    0,DU
         0 000033   000136 600000 0                  TZE     s:613

      105      584    2              XTX$=PINCRW(F$CFU$,XTX);     /* PTR TO EXTENT BLOCK                */

    584  0 000034   200006 236100                    LDQ     XTX,,AUTO
         0 000035   000022 736000                    QLS     18
         0 000036   000000 036000 xsym               ADLQ    F$CFU$
         0 000037   200007 756100                    STQ     XTX$,,AUTO

      106      585    2              I=0;

PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:24   
    585  0 000040   200011 450100                    STZ     I,,AUTO

      107      586    3              DO WHILE(I<XTX$->FM$CFUEXT.NUM);

    586  0 000041   200007 470500                    LDP0    XTX$,,AUTO
         0 000042   000000 236100                    LDQ     0,,PR0
         0 000043   000036 772000                    QRL     30
         0 000044   200011 116100                    CMPQ    I,,AUTO
         0 000045   000113 602000 0                  TNC     s:606
         0 000046   000113 600000 0                  TZE     s:606

      108      587    3                 NGRAN=XTX$->FM$CFUEXT.XTNT.XTNSIZE(I);

    587  0 000047   200007 470500                    LDP0    XTX$,,AUTO
         0 000050   200011 720100                    LXL0    I,,AUTO
         0 000051   000001 236110                    LDQ     1,X0,PR0
         0 000052   000033 772000                    QRL     27
         0 000053   200010 756100                    STQ     NGRAN,,AUTO

      109      588    3                 IF NGRAN~=0

    588  0 000054   000060 600000 0                  TZE     s:593

      110      589    3                 THEN                      /* 1-WORD EXTENT                      */
      111      590    3                    SIZ=1;

    590  0 000055   000001 235007                    LDA     1,DL
         0 000056   200013 755100                    STA     SIZ,,AUTO
         0 000057   000064 710000 0                  TRA     s:596

      112      591    3                 ELSE                      /* 2-WORD EXTENT                      */
      113      592    4                 DO;

      114      593    4                    SIZ=2;

    593  0 000060   000002 235007                    LDA     2,DL
         0 000061   200013 755100                    STA     SIZ,,AUTO
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:25   

      115      594    4                    NGRAN=XTX$->FM$CFUEXT.EXTNT.XTNSIZE(I);

    594  0 000062   000002 235110                    LDA     2,X0,PR0
         0 000063   200010 755100                    STA     NGRAN,,AUTO

      116      595    4                    END;

      117      596    3                 IF NGRAN>SRDA

    596  0 000064   200004 471500                    LDP1    @SRDA,,AUTO
         0 000065   100000 236100                    LDQ     0,,PR1
         0 000066   200010 116100                    CMPQ    NGRAN,,AUTO
         0 000067   000101 603000 0                  TRC     s:603

      118      597    3                 THEN                      /* DESIRED FR DA IS IN THIS EXTENT    */
      119      598    4                 DO;

      120      599    4                    GRANS=NGRAN-SRDA;      /* # GRANS TO END OF EXTENT           */

    599  0 000070   200010 236100                    LDQ     NGRAN,,AUTO
         0 000071   100000 136100                    SBLQ    0,,PR1
         0 000072   200005 473500                    LDP3    @GRANS,,AUTO
         0 000073   300000 756100                    STQ     0,,PR3

      121      600    4                    SRDA=SRDA+XTX$->FM$CFUEXT.XTNT.XTNSDA(I);

    600  0 000074   000001 236110                    LDQ     1,X0,PR0
         0 000075   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000076   100000 036100                    ADLQ    0,,PR1
         0 000077   100000 756100                    STQ     0,,PR1

      122      601    4                    RETURN;

    601  0 000100   000000 702200 xent               TSX2  ! X66_ARET

      123      602    4                    END;
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:26   
      124      603    3                 SRDA=SRDA-NGRAN;

    603  0 000101   200010 136100                    SBLQ    NGRAN,,AUTO
         0 000102   100000 756100                    STQ     0,,PR1

      125      604    3                 I=I+SIZ;

    604  0 000103   200011 236100                    LDQ     I,,AUTO
         0 000104   200013 036100                    ADLQ    SIZ,,AUTO
         0 000105   200011 756100                    STQ     I,,AUTO

      126      605    3                 END;

    605  0 000106   000000 236100                    LDQ     0,,PR0
         0 000107   000036 772000                    QRL     30
         0 000110   200011 116100                    CMPQ    I,,AUTO
         0 000111   000113 600000 0                  TZE     s:606
         0 000112   000047 603000 0                  TRC     s:587

      127      606    2              XTX=XTX$->FM$CFUEXT.LINKX;   /* POINTER TO NEXT TABLE              */

    606  0 000113   000000 236100                    LDQ     0,,PR0
         0 000114   777777 376007                    ANQ     -1,DL
         0 000115   200006 756100                    STQ     XTX,,AUTO

      128      607    2              END;

    607  0 000116   000034 601000 0                  TNZ     s:584
         0 000117   000136 710000 0                  TRA     s:613

      129      608    2           ELSE DO;

      130      609    2              GRANS=FM$CFU.UGRANS+FM$CFU.NGAVAL-SRDA;

    609  0 000120   300007 236100                    LDQ     7,,PR3
         0 000121   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000122   200014 756100                    STQ     SIZ+1,,AUTO
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:27   
         0 000123   300004 236100                    LDQ     4,,PR3
         0 000124   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000125   200014 036100                    ADLQ    SIZ+1,,AUTO
         0 000126   100000 136100                    SBLQ    0,,PR1
         0 000127   200005 474500                    LDP4    @GRANS,,AUTO
         0 000130   400000 756100                    STQ     0,,PR4

      131      610    2              SRDA=FM$CFU.FITSDA+SRDA;

    610  0 000131   300000 236100                    LDQ     0,,PR3
         0 000132   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000133   100000 036100                    ADLQ    0,,PR1
         0 000134   100000 756100                    STQ     0,,PR1

      132      611    2              RETURN;

    611  0 000135   000000 702200 xent               TSX2  ! X66_ARET

      133      612    2              END;
      134      613    1           ALTRETURN;

    613  0 000136   000000 702200 xent               TSX2  ! X66_AALT

      135      614        /**/
      136      615    1   FAF$FRTOSRNJ: ENTRY(FRDA,SRDA,GRANS) ALTRET;

    615  0 000137   000000 700200 xent  FAF$FRTOSRNJ TSX0  ! X66_AUTO_3
         0 000140   000016 000003                    ZERO    14,3

      137      616        /**/
      138      617    1           CFU$=GRANS$;

    617  0 000141   200005 470500                    LDP0    @GRANS,,AUTO
         0 000142   000000 236100                    LDQ     0,,PR0
         0 000143   200012 756100                    STQ     CFU$,,AUTO

      139      618    1           GOTO FRTOSR10;
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:28   

    618  0 000144   000006 710000 0                  TRA     FRTOSR10
      140      619    1   END FAF$FRTOSR;
      141      620        %EOD;

PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:29   
--  Include file information  --

   FM$CFU.:E05TOU  is referenced.
   F$DCB.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FAF$FRTOSR.
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:30   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @FRDA                      5-0-0/w PTR         r     1 @GRANS
     4-0-0/w PTR         r     1 @SRDA                     12-0-0/w PTR         r     1 CFU$
    *0-0-0/w UBIN        r     1 FRDA                      *0-0-0/w UBIN        r     1 GRANS
    *0-0-0/w PTR         r     1 GRANS$                    11-0-0/w UBIN        r     1 I
    10-0-0/w UBIN        r     1 NGRAN                     13-0-0/w SBIN        r     1 SIZ
    *0-0-0/w UBIN        r     1 SRDA                       6-0-0/w SBIN        r     1 XTX
     7-0-0/w PTR         r     1 XTX$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w PTR         r     1 F$CFU$
     0-0-0/w SBIN        r     1 FM_FRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU                     0-0-0/w STRC(288)   r     1 FM$CFUEXT


   Procedure FAF$FRTOSR requires 101 words for executable code.
   Procedure FAF$FRTOSR requires 14 words of local(AUTO) storage.
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:31   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:32   
          MINI XREF LISTING

B$JIT.DCB$
       451**DCL       574>>ASSIGN
B$JIT.ERR.MID
       362**DCL       362--REDEF
B$JIT$
       559**DCL       356--IMP-PTR   574>>ASSIGN
CFU$
        30**DCL       564--IMP-PTR   574<<ASSIGN    578>>IF        579>>IF        581>>ASSIGN    609>>ASSIGN
       609>>ASSIGN    610>>ASSIGN    617<<ASSIGN
F$CFU$
       560**DCL       584>>ASSIGN
F$DCB.ACTPOS
       490**DCL       490--REDEF
F$DCB.ARS
       465**DCL       465--REDEF
F$DCB.ATTR
       483**DCL       484--REDEF
F$DCB.BORROW
       498**DCL       498--REDEF     498--REDEF     498--REDEF
F$DCB.CFU$
       499**DCL       574>>ASSIGN
F$DCB.DCBNAME.L
       512**DCL       512--IMP-SIZ
F$DCB.EOMCHAR
       469**DCL       469--REDEF
F$DCB.FLDID
       493**DCL       493--REDEF
F$DCB.FORM$
       487**DCL       487--REDEF
F$DCB.FSECT
       503**DCL       503--REDEF
F$DCB.FSN
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:33   
       480**DCL       480--REDEF     480--REDEF     481--REDEF
F$DCB.HEADER$
       486**DCL       486--REDEF
F$DCB.IXTNSIZE
       484**DCL       484--REDEF
F$DCB.LASTSTA$
       474**DCL       474--REDEF
F$DCB.LVL
       499**DCL       499--REDEF
F$DCB.NAME.C
       474**DCL       474--REDEF
F$DCB.NOEOF
       495**DCL       495--REDEF
F$DCB.NRECS
       485**DCL       485--REDEF
F$DCB.NRECX
       504**DCL       504--REDEF
F$DCB.OHDR
       496**DCL       496--REDEF
F$DCB.ORG
       479**DCL       479--REDEF
F$DCB.PRECNO
       502**DCL       502--REDEF
F$DCB.RCSZ
       507**DCL       507--REDEF
F$DCB.RES
       475**DCL       475--REDEF
F$DCB.SETX
       487**DCL       487--REDEF
F$DCB.TAB$
       486**DCL       487--REDEF
F$DCB.TDA
       501**DCL       501--REDEF
F$DCB.WSN
       476**DCL       476--REDEF
FM$CFU.ACCTX
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:34   
       565**DCL       565--REDEF
FM$CFU.FITSDA
       565**DCL       610>>ASSIGN
FM$CFU.NGAVAL
       567**DCL       609>>ASSIGN
FM$CFU.UGRANS
       566**DCL       578>>IF        579>>IF        609>>ASSIGN
FM$CFU.XTX
       566**DCL       581>>ASSIGN
FM$CFUEXT.EXTNT.XTNSIZE
       571**DCL       594>>ASSIGN
FM$CFUEXT.LINKX
       570**DCL       606>>ASSIGN
FM$CFUEXT.NUM
       570**DCL       586>>DOWHILE
FM$CFUEXT.XTNT
       570**DCL       571--REDEF
FM$CFUEXT.XTNT.XTNSDA
       571**DCL       600>>ASSIGN
FM$CFUEXT.XTNT.XTNSIZE
       570**DCL       587>>ASSIGN
FM_FRZERO
       561**DCL       577>>ASSIGN
FRDA
        21**DCL        19--PROC      577>>ASSIGN    615--ENTRY
FRTOSR10
       574**LABEL     618--GOTO
GRANS
        23**DCL        19--PROC       24--REDEF     599<<ASSIGN    609<<ASSIGN    615--ENTRY
GRANS$
        24**DCL       617>>ASSIGN
I
        29**DCL       585<<ASSIGN    586>>DOWHILE   587>>ASSIGN    594>>ASSIGN    600>>ASSIGN    604<<ASSIGN
       604>>ASSIGN
NGRAN
        28**DCL       587<<ASSIGN    588>>IF        594<<ASSIGN    596>>IF        599>>ASSIGN    603>>ASSIGN
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:35   
SIZ
        31**DCL       590<<ASSIGN    593<<ASSIGN    604>>ASSIGN
SRDA
        22**DCL        19--PROC      577<<ASSIGN    578>>IF        596>>IF        599>>ASSIGN    600<<ASSIGN
       600>>ASSIGN    603<<ASSIGN    603>>ASSIGN    609>>ASSIGN    610<<ASSIGN    610>>ASSIGN    615--ENTRY
XTX
        26**DCL       581<<ASSIGN    582>>IF        583>>DOWHILE   584>>ASSIGN    606<<ASSIGN
XTX$
        27**DCL       584<<ASSIGN    586>>DOWHILE   587>>ASSIGN    594>>ASSIGN    600>>ASSIGN    606>>ASSIGN
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:36   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #002=FAF$FRTOSR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:37   
              MINI UREF LISTING

FAF$FRTOSR      19**PROC
FAF$FRTOSRNJ     615**ENTRY

PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:38   
      142        1        /*T***********************************************************/
      143        2        /*T*                                                         */
      144        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      145        4        /*T*                                                         */
      146        5        /*T***********************************************************/
      147        6        /*F*   NAME:   FAF$GETGRAN
      148        7        *      PURPOSE:  Get the next available file relative granule
      149        8        *                from NGAVAL in the CFU                                      */
      150        9                                                                                  /*
      151       10                                                                                   *
      152       11                                                                                     */
      153       12        /*D*   NAME:   FAF$GETGRAN
      154       13        *      CALL:   CALL FAF$GETGRAN(DA) ALTRET(LOC);
      155       14        *      INPUT:  JIT.DCB$ points to current DCB, which points to
      156       15        *              a CFU which points to an extent table
      157       16        *      OUTPUT: DA - File-relative disk address
      158       17        *      DESCRIPTION:                                                          */
      159       18                                                /*                                    */
      160       19        FAF$GETGRAN: PROC(DA) ALTRET;
      161       20        /* PARAMETERS */
      162       21    1   DCL DA SBIN WORD;
      163       22        /* LOCAL AUTOMATIC STORAGE */
      164       23    1   DCL CFU$ PTR;
      165       24    1   DCL JDCB$ PTR;
      166       25        /* INCLUDE FILES */
      167       26        %INCLUDE F$JIT_C;
      168      456        %INCLUDE FM$MACROS;
      169      831        %MACRO F$DCB(BASED=BASED);
      170      832        %INCLUDE F$DCB;
      171      881        %MEND;
      172      882        /* EXTERNAL DATA */
      173      883    1   DCL B$JIT$ PTR SYMREF;
      174      884    1   DCL FM_FRZERO UBIN SYMREF;
      175      885        /* BASED STRUCTURES */
      176      886        %F$DCB (BASED="BASED(JDCB$)");
      177      936        %FM$CFU (BASED="BASED(CFU$)");
      178      942        /* EXTERNAL ROUTINES */
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:39   
      179      943    1   DCL FAG$GEXT ENTRY ALTRET;
      180      944                                                /*                                    */
      181      945    1           JDCB$=B$JIT.DCB$;               /* DCB POINTER                        */
      182      946    1           CFU$=F$DCB.CFU$;                /* CFU POINTER                        */
      183      947        /*D*
      184      948        *      If CFU.NGAVAL is zero, call FAG$GEXT to allocate another
      185      949        *      extent.
      186      950        */
      187      951    2           IF FM$CFU.NGAVAL=0 THEN DO;     /* NO MORE GRANS IN CFU               */
      188      952    2              CALL FAG$GEXT ALTRET(ERR);
      189      953    2              F$DCB.GTYP=FMGTFILE;
      190      954    2              END;
      191      955        /*D*
      192      956        *      The next disk address to be allocated is CFU.UGRANS+FM_FRZERO.
      193      957        *      Increment UGRANS by 1 and decrement NGAVAL by 1.
      194      958        */
      195      959    1           DA=FM$CFU.UGRANS+FM_FRZERO;
      196      960    1           FM$CFU.UGRANS=FM$CFU.UGRANS+1;
      197      961    1           FM$CFU.NGAVAL=FM$CFU.NGAVAL-1;
      198      962    1           RETURN;
      199      963                                                /*                                    */
      200      964    1   ERR:    F$DCB.GTYP=FMGTFILE;
      201      965    1           ALTRETURN;
      202      966                                                /*                                    */
      203      967    1   END FAF$GETGRAN;
      204      968        %EOD;

PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:40   
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FAF$GETGRAN.

   Procedure FAF$GETGRAN requires 39 words for executable code.
   Procedure FAF$GETGRAN requires 6 words of local(AUTO) storage.

PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:41   

 Object Unit name= FAF$GETGRAN                                File name= FAF$FRDA.:E05TOU
 UTS= JUL 29 '97 15:23:15.44 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    39     47  FAF$GETGRAN
    1  RoData even  none     1      1  FAF$GETGRAN

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        1  FAF$GETGRAN

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       0 FAG$GEXT
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B$JIT$                                FM_FRZERO                             B_VECTNIL
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:42   


      142        1        /*T***********************************************************/
      143        2        /*T*                                                         */
      144        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      145        4        /*T*                                                         */
      146        5        /*T***********************************************************/
      147        6        /*F*   NAME:   FAF$GETGRAN
      148        7        *      PURPOSE:  Get the next available file relative granule
      149        8        *                from NGAVAL in the CFU                                      */
      150        9                                                                                  /*
      151       10                                                                                   *
      152       11                                                                                     */
      153       12        /*D*   NAME:   FAF$GETGRAN
      154       13        *      CALL:   CALL FAF$GETGRAN(DA) ALTRET(LOC);
      155       14        *      INPUT:  JIT.DCB$ points to current DCB, which points to
      156       15        *              a CFU which points to an extent table
      157       16        *      OUTPUT: DA - File-relative disk address
      158       17        *      DESCRIPTION:                                                          */
      159       18                                                /*                                    */
      160       19        FAF$GETGRAN: PROC(DA) ALTRET;

     19  0 000000   000000 700200 xent  FAF$GETGRAN  TSX0  ! X66_AUTO_1
         0 000001   000006 000001                    ZERO    6,1

      161       20        /* PARAMETERS */
      162       21    1   DCL DA SBIN WORD;
      163       22        /* LOCAL AUTOMATIC STORAGE */
      164       23    1   DCL CFU$ PTR;
      165       24    1   DCL JDCB$ PTR;
      166       25        /* INCLUDE FILES */
      167       26        %INCLUDE F$JIT_C;
      168      456        %INCLUDE FM$MACROS;
      169      831        %MACRO F$DCB(BASED=BASED);
      170      832        %INCLUDE F$DCB;
      171      881        %MEND;
      172      882        /* EXTERNAL DATA */
      173      883    1   DCL B$JIT$ PTR SYMREF;
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:43   
      174      884    1   DCL FM_FRZERO UBIN SYMREF;
      175      885        /* BASED STRUCTURES */
      176      886        %F$DCB (BASED="BASED(JDCB$)");
      177      936        %FM$CFU (BASED="BASED(CFU$)");
      178      942        /* EXTERNAL ROUTINES */
      179      943    1   DCL FAG$GEXT ENTRY ALTRET;
      180      944                                                /*                                    */
      181      945    1           JDCB$=B$JIT.DCB$;               /* DCB POINTER                        */

    945  0 000002   000000 470400 xsym               LDP0    B$JIT$
         0 000003   000232 236100                    LDQ     154,,PR0
         0 000004   200005 756100                    STQ     JDCB$,,AUTO

      182      946    1           CFU$=F$DCB.CFU$;                /* CFU POINTER                        */

    946  0 000005   200005 471500                    LDP1    JDCB$,,AUTO
         0 000006   100066 236100                    LDQ     54,,PR1
         0 000007   200004 756100                    STQ     CFU$,,AUTO

      183      947        /*D*
      184      948        *      If CFU.NGAVAL is zero, call FAG$GEXT to allocate another
      185      949        *      extent.
      186      950        */
      187      951    2           IF FM$CFU.NGAVAL=0 THEN DO;     /* NO MORE GRANS IN CFU               */

    951  0 000010   200004 473500                    LDP3    CFU$,,AUTO
         0 000011   300007 236100                    LDQ     7,,PR3
         0 000012   000032 316000 xsym               CANQ    B_VECTNIL+26
         0 000013   000024 601000 0                  TNZ     s:959

      188      952    2              CALL FAG$GEXT ALTRET(ERR);

    952  0 000014   000002 631400 xsym               EPPR1   B_VECTNIL+2
         0 000015   000000 701000 xent               TSX1    FAG$GEXT
         0 000016   000041 702000 0                  TSX2    ERR

      189      953    2              F$DCB.GTYP=FMGTFILE;
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:44   

    953  0 000017   200005 470500                    LDP0    JDCB$,,AUTO
         0 000020   000064 236100                    LDQ     52,,PR0
         0 000021   000000 376000 1                  ANQ     0
         0 000022   030000 276003                    ORQ     12288,DU
         0 000023   000064 756100                    STQ     52,,PR0

      190      954    2              END;

      191      955        /*D*
      192      956        *      The next disk address to be allocated is CFU.UGRANS+FM_FRZERO.
      193      957        *      Increment UGRANS by 1 and decrement NGAVAL by 1.
      194      958        */
      195      959    1           DA=FM$CFU.UGRANS+FM_FRZERO;

    959  0 000024   200004 470500                    LDP0    CFU$,,AUTO
         0 000025   000004 236100                    LDQ     4,,PR0
         0 000026   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000027   000000 036000 xsym               ADLQ    FM_FRZERO
         0 000030   200003 471500                    LDP1    @DA,,AUTO
         0 000031   100000 756100                    STQ     0,,PR1

      196      960    1           FM$CFU.UGRANS=FM$CFU.UGRANS+1;

    960  0 000032   000004 236100                    LDQ     4,,PR0
         0 000033   000001 036007                    ADLQ    1,DL
         0 000034   000004 552134                    STBQ    4,'34'O,PR0

      197      961    1           FM$CFU.NGAVAL=FM$CFU.NGAVAL-1;

    961  0 000035   000007 236100                    LDQ     7,,PR0
         0 000036   000032 036000 xsym               ADLQ    B_VECTNIL+26
         0 000037   000007 552134                    STBQ    7,'34'O,PR0

      198      962    1           RETURN;

    962  0 000040   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:45   

      199      963                                                /*                                    */
      200      964    1   ERR:    F$DCB.GTYP=FMGTFILE;

    964  0 000041   200005 470500       ERR          LDP0    JDCB$,,AUTO
         0 000042   000064 236100                    LDQ     52,,PR0
         0 000043   000000 376000 1                  ANQ     0
         0 000044   030000 276003                    ORQ     12288,DU
         0 000045   000064 756100                    STQ     52,,PR0

      201      965    1           ALTRETURN;

    965  0 000046   000000 702200 xent               TSX2  ! X66_AALT

(unnamed)
 Sect OctLoc
   1     000   743777 777777                                                    ....
      202      966                                                /*                                    */
      203      967    1   END FAF$GETGRAN;
      204      968        %EOD;

PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:46   
--  Include file information  --

   F$DCB.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
   B$JIT_C.:E05TOU  is referenced.
   F$JIT_C.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure FAF$GETGRAN.
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:47   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DA                        4-0-0/w PTR         r     1 CFU$
    *0-0-0/w SBIN        r     1 DA                         5-0-0/w PTR         r     1 JDCB$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 B$JIT$                     0-0-0/w UBIN        r     1 FM_FRZERO

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(8856)  r     1 B$JIT                      0-0-0/d ASTR(3528)  r     1 F$DCB
     0-0-0/w STRC(288)   r     1 FM$CFU


   Procedure FAF$GETGRAN requires 39 words for executable code.
   Procedure FAF$GETGRAN requires 6 words of local(AUTO) storage.
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:48   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:49   
          MINI XREF LISTING

B$JIT.DCB$
       443**DCL       945>>ASSIGN
B$JIT.ERR.MID
       354**DCL       354--REDEF
B$JIT$
       883**DCL       348--IMP-PTR   945>>ASSIGN
CFU$
        23**DCL       937--IMP-PTR   946<<ASSIGN    951>>IF        959>>ASSIGN    960>>ASSIGN    960>>ASSIGN
       961>>ASSIGN    961>>ASSIGN
DA
        21**DCL        19--PROC      959<<ASSIGN
ERR
       964**LABEL     952--CALLALT
F$DCB.ACTPOS
       912**DCL       912--REDEF
F$DCB.ARS
       887**DCL       887--REDEF
F$DCB.ATTR
       905**DCL       906--REDEF
F$DCB.BORROW
       920**DCL       920--REDEF     920--REDEF     920--REDEF
F$DCB.CFU$
       921**DCL       946>>ASSIGN
F$DCB.DCBNAME.L
       934**DCL       934--IMP-SIZ
F$DCB.EOMCHAR
       891**DCL       891--REDEF
F$DCB.FLDID
       915**DCL       915--REDEF
F$DCB.FORM$
       909**DCL       909--REDEF
F$DCB.FSECT
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:50   
       925**DCL       925--REDEF
F$DCB.FSN
       902**DCL       902--REDEF     902--REDEF     903--REDEF
F$DCB.GTYP
       916**DCL       953<<ASSIGN    964<<ASSIGN
F$DCB.HEADER$
       908**DCL       908--REDEF
F$DCB.IXTNSIZE
       906**DCL       906--REDEF
F$DCB.LASTSTA$
       896**DCL       896--REDEF
F$DCB.LVL
       921**DCL       921--REDEF
F$DCB.NAME.C
       896**DCL       896--REDEF
F$DCB.NOEOF
       917**DCL       917--REDEF
F$DCB.NRECS
       907**DCL       907--REDEF
F$DCB.NRECX
       926**DCL       926--REDEF
F$DCB.OHDR
       918**DCL       918--REDEF
F$DCB.ORG
       901**DCL       901--REDEF
F$DCB.PRECNO
       924**DCL       924--REDEF
F$DCB.RCSZ
       929**DCL       929--REDEF
F$DCB.RES
       897**DCL       897--REDEF
F$DCB.SETX
       909**DCL       909--REDEF
F$DCB.TAB$
       908**DCL       909--REDEF
F$DCB.TDA
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:51   
       923**DCL       923--REDEF
F$DCB.WSN
       898**DCL       898--REDEF
FAG$GEXT
       943**DCL-ENT   952--CALL
FM$CFU.ACCTX
       938**DCL       938--REDEF
FM$CFU.NGAVAL
       940**DCL       951>>IF        961<<ASSIGN    961>>ASSIGN
FM$CFU.UGRANS
       939**DCL       959>>ASSIGN    960<<ASSIGN    960>>ASSIGN
FM_FRZERO
       884**DCL       959>>ASSIGN
JDCB$
        24**DCL       887--IMP-PTR   945<<ASSIGN    946>>ASSIGN    953>>ASSIGN    964>>ASSIGN
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:52   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #003=FAF$GETGRAN File=FAF$FRDA.:E05TSI                             TUE 07/29/97 15:23 Page:53   
              MINI UREF LISTING

FAF$GETGRAN      19**PROC

PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:54   
      205        1        /*T***********************************************************/
      206        2        /*T*                                                         */
      207        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      208        4        /*T*                                                         */
      209        5        /*T***********************************************************/
      210        6        FAF$SRTODR: PROC(SDA,PSETX) ALTRET;
      211        7        /* PARAMETERS */
      212        8    1   DCL 1 SDA ALIGNED,
      213        9    1         2 * BIT(9),
      214       10    1         2 SRELADDR UBIN(27)UNAL;
      215       11    1   DCL 1 DDA REDEF SDA ALIGNED,
      216       12    1         2 DCTX UBIN(15)UNAL,
      217       13    1         2 DRELADDR UBIN(21)UNAL;
      218       14    1   DCL DDD REDEF SDA SBIN ALIGNED;
      219       15    1   DCL PSETX UBIN(18) HALIGNED;
      220       16        /**/
      221       17        %INCLUDE FM$MACROS;
      222      392        %FM$SET(BASED="BASED(FM$SET$)");
      223      397    1   DCL F$CFU$ PTR SYMREF READONLY;
      224      398    1   DCL FM$SET$ REDEF F$CFU$ PTR;
      225      399        %FM$VOL(BASED="BASED(FM$SET$)");
      226      405        %FM$DEV(BASED="BASED(FM$SET$)");
      227      411        %FM$CFUX;
      228      416    1   DCL FM_SRZERO UBIN SYMREF READONLY;
      229      417    1   DCL S_CUN SBIN SYMREF;
      230      418
      231      419    1   DCL FMN$AVR ENTRY(2);
      232      420    1   DCL SSR$REG ENTRY(3) ALTRET;
      233      421        %INCLUDE SS_SCHED_C;
      234      654        %INCLUDE JG_GHOSTS_C;
      235      744        /* LOCAL AUTO */
      236      745    1   DCL SETX UBIN;
      237      746    1   DCL DCT$ PTR;
      238      747    1   DCL PACKSIZE UBIN;
      239      748    1   DCL RELADDR UBIN;
      240      749        /**/
      241      750    1           SETX=PSETX;
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:55   
      242      751    1           RELADDR=FM$CFUX.SETH;           /* CHECK SETX                         */
      243      752    2           DO WHILE(RELADDR~=0 AND SETX~=RELADDR);
      244      753    2              RELADDR=FM$SET.SETL(RELADDR);
      245      754    2              END;
      246      755    2           IF RELADDR~=0 THEN DO;
      247      756    2              IF NOT FM$SET.SET(RELADDR) THEN ALTRETURN;
      248      757    2              END;
      249      758    2           ELSE DO;
      250      759    2              RELADDR=FM$CFUX.DSETH;
      251      760    3              DO WHILE(RELADDR~=0 AND SETX~=RELADDR);
      252      761    3                 IF FM$DEV.SECTL(RELADDR)~=0 THEN RELADDR=FM$DEV.SECTL(RELADDR);
      253      762    3                 ELSE RELADDR=FM$DEV.DEVL(FM$VOL.DCTX(RELADDR));
      254      763    3                 END;
      255      764    2              END;
      256      765    1           IF RELADDR=0
      257      766    1             OR SDA.SRELADDR>=FM$SET.NXTSDA(RELADDR)
      258      767    1             OR SDA.SRELADDR<FM_SRZERO
      259      768    1             OR FM$SET.DCTX(RELADDR)=0 THEN ALTRETURN;
      260      769    1           RELADDR=SDA.SRELADDR-FM_SRZERO;
      261      770    1           IF FM$SET.SET(SETX) THEN SETX=FM$SET.DCTX(SETX);
      262      771    2           DO WHILE(SETX~=0);
      263      772    2              PACKSIZE=FM$VOL.NXTSDA(SETX)-FM_SRZERO;
      264      773    2              IF RELADDR<PACKSIZE THEN GOTO PACKFOUND;
      265      774    2              RELADDR=RELADDR-PACKSIZE;
      266      775    2              SETX=FM$VOL.VOLL(SETX);
      267      776    2              END;
      268      777    1           ALTRETURN;                      /* RELADDR TOO LARGE                  */
      269      778        /**/
      270      779    1   PACKFOUND:
      271      780    1           DDD=RELADDR+FM$VOL.DRZERO(SETX)+FM$VOL.DCTX(SETX)*%BITBIN('200000'X);
      272      781    2           DO WHILE NOT FM$VOL.SPIN(SETX);
      273      782    2              CALL FMN$AVR (DDD,DDD);
      274      783    3              IF S_CUN<=JG_PIG# THEN DO;
      275      784    3                 DDD = -1;
      276      785    3                 ALTRETURN;
      277      786    3                 END;
      278      787    2              CALL SSR$REG (%SS_SL,,25);
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:56   
      279      788    2              END;
      280      789    1           RETURN;
      281      790    1   END FAF$SRTODR;

PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:57   
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
      No diagnostics issued in procedure FAF$SRTODR.

   Procedure FAF$SRTODR requires 138 words for executable code.
   Procedure FAF$SRTODR requires 14 words of local(AUTO) storage.

    No errors detected in file FAF$FRDA.:E05TSI    .

PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:58   

 Object Unit name= FAF$SRTODR                                 File name= FAF$FRDA.:E05TOU
 UTS= JUL 29 '97 15:23:22.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   138    212  FAF$SRTODR
    1  RoData even  none     3      3  FAF$SRTODR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        2  FAF$SRTODR

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 FMN$AVR
 yes     yes           Std       3 SSR$REG
                       nStd      0 X66_AUTO_2
                       nStd      0 X66_AALT
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
r    F$CFU$                           r    FM_SRZERO                             S_CUN
     B_VECTNIL
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:59   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:60   


      205        1        /*T***********************************************************/
      206        2        /*T*                                                         */
      207        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      208        4        /*T*                                                         */
      209        5        /*T***********************************************************/
      210        6        FAF$SRTODR: PROC(SDA,PSETX) ALTRET;

      6  0 000000   000000 700200 xent  FAF$SRTODR   TSX0  ! X66_AUTO_2
         0 000001   000016 000002                    ZERO    14,2

      211        7        /* PARAMETERS */
      212        8    1   DCL 1 SDA ALIGNED,
      213        9    1         2 * BIT(9),
      214       10    1         2 SRELADDR UBIN(27)UNAL;
      215       11    1   DCL 1 DDA REDEF SDA ALIGNED,
      216       12    1         2 DCTX UBIN(15)UNAL,
      217       13    1         2 DRELADDR UBIN(21)UNAL;
      218       14    1   DCL DDD REDEF SDA SBIN ALIGNED;
      219       15    1   DCL PSETX UBIN(18) HALIGNED;
      220       16        /**/
      221       17        %INCLUDE FM$MACROS;
      222      392        %FM$SET(BASED="BASED(FM$SET$)");
      223      397    1   DCL F$CFU$ PTR SYMREF READONLY;
      224      398    1   DCL FM$SET$ REDEF F$CFU$ PTR;
      225      399        %FM$VOL(BASED="BASED(FM$SET$)");
      226      405        %FM$DEV(BASED="BASED(FM$SET$)");
      227      411        %FM$CFUX;
      228      416    1   DCL FM_SRZERO UBIN SYMREF READONLY;
      229      417    1   DCL S_CUN SBIN SYMREF;
      230      418
      231      419    1   DCL FMN$AVR ENTRY(2);
      232      420    1   DCL SSR$REG ENTRY(3) ALTRET;
      233      421        %INCLUDE SS_SCHED_C;
      234      654        %INCLUDE JG_GHOSTS_C;
      235      744        /* LOCAL AUTO */
      236      745    1   DCL SETX UBIN;
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:61   
      237      746    1   DCL DCT$ PTR;
      238      747    1   DCL PACKSIZE UBIN;
      239      748    1   DCL RELADDR UBIN;
      240      749        /**/
      241      750    1           SETX=PSETX;

    750  0 000002   200004 470500                    LDP0    @PSETX,,AUTO
         0 000003   000100 101500                    MRL     fill='000'O
         0 000004   000000 000002                    ADSC9   0,,PR0                   cn=0,n=2
         0 000005   200005 000004                    ADSC9   SETX,,AUTO               cn=0,n=4

      242      751    1           RELADDR=FM$CFUX.SETH;           /* CHECK SETX                         */

    751  0 000006   000000 471400 xsym               LDP1    F$CFU$
         0 000007   100005 236100                    LDQ     5,,PR1
         0 000010   000022 772000                    QRL     18
         0 000011   200010 756100                    STQ     RELADDR,,AUTO

      243      752    2           DO WHILE(RELADDR~=0 AND SETX~=RELADDR);

    752  0 000012   000021 710000 0                  TRA     s:754

      244      753    2              RELADDR=FM$SET.SETL(RELADDR);

    753  0 000013   200010 235100                    LDA     RELADDR,,AUTO
         0 000014   000003 735000                    ALS     3
         0 000015   000000 470400 xsym               LDP0    F$CFU$
         0 000016   000005 236105                    LDQ     5,AL,PR0
         0 000017   000022 772000                    QRL     18
         0 000020   200010 756100                    STQ     RELADDR,,AUTO

      245      754    2              END;

    754  0 000021   000024 600000 0                  TZE     s:755
         0 000022   200005 116100                    CMPQ    SETX,,AUTO
         0 000023   000013 601000 0                  TNZ     s:753

PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:62   
      246      755    2           IF RELADDR~=0 THEN DO;

    755  0 000024   000000 116003                    CMPQ    0,DU
         0 000025   000035 600000 0                  TZE     s:759

      247      756    2              IF NOT FM$SET.SET(RELADDR) THEN ALTRETURN;

    756  0 000026   200010 235100                    LDA     RELADDR,,AUTO
         0 000027   000003 735000                    ALS     3
         0 000030   000000 470400 xsym               LDP0    F$CFU$
         0 000031   000002 236105                    LDQ     2,AL,PR0
         0 000032   200000 316003                    CANQ    65536,DU
         0 000033   000064 601000 0                  TNZ     s:765

    756  0 000034   000000 702200 xent               TSX2  ! X66_AALT

      248      757    2              END;
      249      758    2           ELSE DO;

      250      759    2              RELADDR=FM$CFUX.DSETH;

    759  0 000035   000000 470400 xsym               LDP0    F$CFU$
         0 000036   000005 236100                    LDQ     5,,PR0
         0 000037   777777 376007                    ANQ     -1,DL
         0 000040   200010 756100                    STQ     RELADDR,,AUTO

      251      760    3              DO WHILE(RELADDR~=0 AND SETX~=RELADDR);

    760  0 000041   000061 710000 0                  TRA     s:763

      252      761    3                 IF FM$DEV.SECTL(RELADDR)~=0 THEN RELADDR=FM$DEV.SECTL(RELADDR);

    761  0 000042   200010 235100                    LDA     RELADDR,,AUTO
         0 000043   000003 735000                    ALS     3
         0 000044   000000 470400 xsym               LDP0    F$CFU$
         0 000045   000005 720105                    LXL0    5,AL,PR0
         0 000046   000053 600000 0                  TZE     s:762
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:63   

    761  0 000047   000005 236105                    LDQ     5,AL,PR0
         0 000050   777777 376007                    ANQ     -1,DL
         0 000051   200010 756100                    STQ     RELADDR,,AUTO
         0 000052   000061 710000 0                  TRA     s:763

      253      762    3                 ELSE RELADDR=FM$DEV.DEVL(FM$VOL.DCTX(RELADDR));

    762  0 000053   000000 236105                    LDQ     0,AL,PR0
         0 000054   000017 772000                    QRL     15
         0 000055   000000 376000 1                  ANQ     0
         0 000056   000005 236106                    LDQ     5,QL,PR0
         0 000057   000022 772000                    QRL     18
         0 000060   200010 756100                    STQ     RELADDR,,AUTO

      254      763    3                 END;

    763  0 000061   000064 600000 0                  TZE     s:765
         0 000062   200005 116100                    CMPQ    SETX,,AUTO
         0 000063   000042 601000 0                  TNZ     s:761

      255      764    2              END;

      256      765    1           IF RELADDR=0

    765  0 000064   200010 235100                    LDA     RELADDR,,AUTO
         0 000065   000103 600000 0                  TZE     s:768
         0 000066   000003 735000                    ALS     3
         0 000067   000003 236105                    LDQ     3,AL,PR0
         0 000070   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000071   200012 756100                    STQ     RELADDR+2,,AUTO
         0 000072   200003 471500                    LDP1    @SDA,,AUTO
         0 000073   100000 236100                    LDQ     0,,PR1
         0 000074   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000075   200012 116100                    CMPQ    RELADDR+2,,AUTO
         0 000076   000103 605000 0                  TPL     s:768
         0 000077   000000 116000 xsym               CMPQ    FM_SRZERO
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:64   
         0 000100   000103 602000 0                  TNC     s:768
         0 000101   000000 220105                    LDX0    0,AL,PR0
         0 000102   000104 601000 0                  TNZ     s:769

      257      766    1             OR SDA.SRELADDR>=FM$SET.NXTSDA(RELADDR)
      258      767    1             OR SDA.SRELADDR<FM_SRZERO
      259      768    1             OR FM$SET.DCTX(RELADDR)=0 THEN ALTRETURN;

    768  0 000103   000000 702200 xent               TSX2  ! X66_AALT

      260      769    1           RELADDR=SDA.SRELADDR-FM_SRZERO;

    769  0 000104   000000 136000 xsym               SBLQ    FM_SRZERO
         0 000105   200010 756100                    STQ     RELADDR,,AUTO

      261      770    1           IF FM$SET.SET(SETX) THEN SETX=FM$SET.DCTX(SETX);

    770  0 000106   200005 235100                    LDA     SETX,,AUTO
         0 000107   000003 735000                    ALS     3
         0 000110   000002 236105                    LDQ     2,AL,PR0
         0 000111   200000 316003                    CANQ    65536,DU
         0 000112   000116 600000 0                  TZE     s:771

    770  0 000113   000000 236105                    LDQ     0,AL,PR0
         0 000114   000022 772000                    QRL     18
         0 000115   200005 756100                    STQ     SETX,,AUTO

      262      771    2           DO WHILE(SETX~=0);

    771  0 000116   200005 235100                    LDA     SETX,,AUTO
         0 000117   000141 600000 0                  TZE     s:777

      263      772    2              PACKSIZE=FM$VOL.NXTSDA(SETX)-FM_SRZERO;

    772  0 000120   200005 235100                    LDA     SETX,,AUTO
         0 000121   000003 735000                    ALS     3
         0 000122   000000 470400 xsym               LDP0    F$CFU$
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:65   
         0 000123   000003 236105                    LDQ     3,AL,PR0
         0 000124   000032 376000 xsym               ANQ     B_VECTNIL+26
         0 000125   000000 136000 xsym               SBLQ    FM_SRZERO
         0 000126   200007 756100                    STQ     PACKSIZE,,AUTO

      264      773    2              IF RELADDR<PACKSIZE THEN GOTO PACKFOUND;

    773  0 000127   200010 116100                    CMPQ    RELADDR,,AUTO
         0 000130   000132 600000 0                  TZE     s:774
         0 000131   000142 603000 0                  TRC     PACKFOUND

      265      774    2              RELADDR=RELADDR-PACKSIZE;

    774  0 000132   200010 236100                    LDQ     RELADDR,,AUTO
         0 000133   200007 136100                    SBLQ    PACKSIZE,,AUTO
         0 000134   200010 756100                    STQ     RELADDR,,AUTO

      266      775    2              SETX=FM$VOL.VOLL(SETX);

    775  0 000135   000005 236105                    LDQ     5,AL,PR0
         0 000136   000022 772000                    QRL     18
         0 000137   200005 756100                    STQ     SETX,,AUTO

      267      776    2              END;

    776  0 000140   000120 601000 0                  TNZ     s:772

      268      777    1           ALTRETURN;                      /* RELADDR TOO LARGE                  */

    777  0 000141   000000 702200 xent               TSX2  ! X66_AALT

      269      778        /**/
      270      779    1   PACKFOUND:
      271      780    1           DDD=RELADDR+FM$VOL.DRZERO(SETX)+FM$VOL.DCTX(SETX)*%BITBIN('200000'X);

    780  0 000142   200010 236100       PACKFOUND    LDQ     RELADDR,,AUTO
         0 000143   000004 036105                    ADLQ    4,AL,PR0
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:66   
         0 000144   200012 756100                    STQ     RELADDR+2,,AUTO
         0 000145   000000 236105                    LDQ     0,AL,PR0
         0 000146   000003 736000                    QLS     3
         0 000147   777770 376003                    ANQ     -8,DU
         0 000150   200012 036100                    ADLQ    RELADDR+2,,AUTO
         0 000151   200003 471500                    LDP1    @SDA,,AUTO
         0 000152   100000 756100                    STQ     0,,PR1

      272      781    2           DO WHILE NOT FM$VOL.SPIN(SETX);

    781  0 000153   000203 710000 0                  TRA     s:788

      273      782    2              CALL FMN$AVR (DDD,DDD);

    782  0 000154   200003 236100                    LDQ     @SDA,,AUTO
         0 000155   200003 235100                    LDA     @SDA,,AUTO
         0 000156   200012 757100                    STAQ    RELADDR+2,,AUTO
         0 000157   200012 630500                    EPPR0   RELADDR+2,,AUTO
         0 000160   000020 631400 xsym               EPPR1   B_VECTNIL+16
         0 000161   000000 701000 xent               TSX1    FMN$AVR
         0 000162   000000 011000                    NOP     0

      274      783    3              IF S_CUN<=JG_PIG# THEN DO;

    783  0 000163   000000 235000 xsym               LDA     S_CUN
         0 000164   000007 115007                    CMPA    7,DL
         0 000165   000172 605400 0                  TPNZ    s:787

      275      784    3                 DDD = -1;

    784  0 000166   000001 336007                    LCQ     1,DL
         0 000167   200003 470500                    LDP0    @SDA,,AUTO
         0 000170   000000 756100                    STQ     0,,PR0

      276      785    3                 ALTRETURN;

    785  0 000171   000000 702200 xent               TSX2  ! X66_AALT
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:67   

      277      786    3                 END;
      278      787    2              CALL SSR$REG (%SS_SL,,25);

    787  0 000172   000002 236000 1                  LDQ     2
         0 000173   200014 756100                    STQ     RELADDR+4,,AUTO
         0 000174   000001 236000 xsym               LDQ     B_VECTNIL+1
         0 000175   000002 235000 1                  LDA     2
         0 000176   200012 757100                    STAQ    RELADDR+2,,AUTO
         0 000177   200012 630500                    EPPR0   RELADDR+2,,AUTO
         0 000200   000021 631400 xsym               EPPR1   B_VECTNIL+17
         0 000201   000000 701000 xent               TSX1    SSR$REG
         0 000202   000000 011000                    NOP     0

      279      788    2              END;

    788  0 000203   200005 235100                    LDA     SETX,,AUTO
         0 000204   000003 735000                    ALS     3
         0 000205   000000 470400 xsym               LDP0    F$CFU$
         0 000206   000002 236105                    LDQ     2,AL,PR0
         0 000207   004000 316003                    CANQ    2048,DU
         0 000210   000154 600000 0                  TZE     s:782

      280      789    1           RETURN;

    789  0 000211   000000 702200 xent               TSX2  ! X66_ARET

(unnamed)
 Sect OctLoc
   1     000   000007 777770   000000 000031   000001 006000                    ............
      281      790    1   END FAF$SRTODR;

PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:68   
--  Include file information  --

   JG_GHOSTS_C.:E05TOU  is referenced.
   SS_SCHED_C.:E05TOU  is referenced.
   FM$MACROS.:E05TOU  is referenced.
      No diagnostics issued in procedure FAF$SRTODR.
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:69   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @PSETX                     3-0-0/w PTR         r     1 @SDA
    *0-0-0/w SBIN        r     1 DDD                        7-0-0/w UBIN        r     1 PACKSIZE
    *0-0-0/h UBIN(18)    r     1 PSETX                     10-0-0/w UBIN        r     1 RELADDR
    *0-0-0/w STRC        r     1 SDA                        5-0-0/w UBIN        r     1 SETX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 F$CFU$                     0-0-0/w PTR         r     1 FM$SET$
     0-0-0/w UBIN        r     1 FM_SRZERO                  0-0-0/w SBIN        r     1 S_CUN

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(288)   r     1 FM$CFUX                    0-0-0/w STRC(288)   r     1 FM$DEV(0:0)
     0-0-0/w STRC(288)   r     1 FM$SET(0:0)                0-0-0/w STRC(288)   r     1 FM$VOL(0:0)


   Procedure FAF$SRTODR requires 138 words for executable code.
   Procedure FAF$SRTODR requires 14 words of local(AUTO) storage.

    No errors detected in file FAF$FRDA.:E05TSI    .
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:70   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:71   
          MINI XREF LISTING

DDD
        14**DCL       780<<ASSIGN    782<>CALL      782<>CALL      784<<ASSIGN
F$CFU$
       397**DCL       398--REDEF     412--IMP-PTR   751>>ASSIGN    759>>ASSIGN
FM$CFUX.DSETH
       413**DCL       759>>ASSIGN
FM$CFUX.SETH
       413**DCL       751>>ASSIGN
FM$DEV.DEVL
       408**DCL       762>>ASSIGN
FM$DEV.SECTL
       408**DCL       761>>IF        761>>ASSIGN
FM$DEV.USERLIST
       407**DCL       408--REDEF
FM$SET.DCTX
       393**DCL       765>>IF        770>>ASSIGN
FM$SET.NXTSDA
       395**DCL       765>>IF
FM$SET.SET
       393**DCL       756>>IF        770>>IF
FM$SET.SETL
       395**DCL       753>>ASSIGN
FM$SET.USERLIST
       394**DCL       394--REDEF
FM$SET$
       398**DCL       393--IMP-PTR   400--IMP-PTR   406--IMP-PTR   753>>ASSIGN    756>>IF        761>>IF
       761>>ASSIGN    762>>ASSIGN    762>>ASSIGN    765>>IF        765>>IF        770>>IF        770>>ASSIGN
       772>>ASSIGN    775>>ASSIGN    780>>ASSIGN    780>>ASSIGN    781>>DOWHILE
FM$VOL.DCTX
       400**DCL       762>>ASSIGN    780>>ASSIGN
FM$VOL.DRZERO
       402**DCL       780>>ASSIGN
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:72   
FM$VOL.NXTSDA
       402**DCL       772>>ASSIGN
FM$VOL.SPIN
       401**DCL       781>>DOWHILE
FM$VOL.USERLIST
       401**DCL       402--REDEF
FM$VOL.VOLL
       402**DCL       775>>ASSIGN
FMN$AVR
       419**DCL-ENT   782--CALL
FM_SRZERO
       416**DCL       765>>IF        769>>ASSIGN    772>>ASSIGN
PACKFOUND
       780**LABEL     773--GOTO
PACKSIZE
       747**DCL       772<<ASSIGN    773>>IF        774>>ASSIGN
PSETX
        15**DCL         6--PROC      750>>ASSIGN
RELADDR
       748**DCL       751<<ASSIGN    752>>DOWHILE   752>>DOWHILE   753<<ASSIGN    753>>ASSIGN    755>>IF
       756>>IF        759<<ASSIGN    760>>DOWHILE   760>>DOWHILE   761>>IF        761<<ASSIGN    761>>ASSIGN
       762<<ASSIGN    762>>ASSIGN    765>>IF        765>>IF        765>>IF        769<<ASSIGN    773>>IF
       774<<ASSIGN    774>>ASSIGN    780>>ASSIGN
SDA
         8**DCL         6--PROC       11--REDEF      14--REDEF
SDA.SRELADDR
        10**DCL       765>>IF        765>>IF        769>>ASSIGN
SETX
       745**DCL       750<<ASSIGN    752>>DOWHILE   760>>DOWHILE   770>>IF        770<<ASSIGN    770>>ASSIGN
       771>>DOWHILE   772>>ASSIGN    775<<ASSIGN    775>>ASSIGN    780>>ASSIGN    780>>ASSIGN    781>>DOWHILE
SSR$REG
       420**DCL-ENT   787--CALL
S_CUN
       417**DCL       783>>IF
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:73   
              *** CROSS REFERENCE LISTING ***
    **     DENOTES     IDENTIFIER DEFINITION
    <<                 IDENTIFIER'S VALUE SET
    >>                 IDENTIFIER'S VALUE USED
    <>                 IDENTIFIER SET AND/OR USED
    --                 IDENTIFIER REFERENCED
PL6.E3A0      #004=FAF$SRTODR File=FAF$FRDA.:E05TSI                              TUE 07/29/97 15:23 Page:74   
              MINI UREF LISTING

DCT$     746**DCL
DDA      11**DCL
FAF$SRTODR       6**PROC
