VERSION E05

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:1    
        1        1        /*M* ASR$R_TERMINAL - processes the REMOVE TERMINAL command.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9                                                              /**/
       10       10        ASR$R_TERMINAL: PROC ;
       11       11                                                              /**/
       12       12        /********************************************************************/
       13       13        /*   Include files   include files   include files   include files   */
       14       14        /*********************************************************************/
       15       15                                                              /**/
       16       16              %INCLUDE  CP_6 ;
       17       97              %INCLUDE  AS_PERR_C ;
       18      699              %INCLUDE  KL_CONFIG_M;
       19     1461              %INCLUDE  B_ERRORS_C;
       20     2588              %INCLUDE  AS_ENTRIES_M;
       21     3638              %INCLUDE  AS_SUPER_C ;
       22     4073              %INCLUDE  AS_SUBS_C ;
       23     5487              %INCLUDE  AS_MAC_C ;
       24     5567              %INCLUDE  KL_SUPER_C ;
       25     8469              %INCLUDE  XU_MACRO_C ;
       26    11575              %INCLUDE  XU_FORMAT_C ;
       27    11737              %INCLUDE  AS_SUPER_R ;
       28    14753
       29    14754        /*********************************************************************/
       30    14755        /*   Auto data       auto data       auto data       auto data       */
       31    14756        /*********************************************************************/
       32    14757                                                              /**/
       33    14758    1   DCL TREC$ PTR ;
       34    14759    1   DCL TWSNR$ PTR ;
       35    14760    1   DCL BLK$ PTR ;
       36    14761    1   DCL ARS UBIN WORD ;
       37    14762    1   DCL TWSN_ARS UBIN WORD ;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:2    
       38    14763    1   DCL TWSN# UBIN WORD ;
       39    14764    1   DCL TWSNC CHAR(4) ;
       40    14765    1   DCL NUM_DEVS UBIN WORD ;
       41    14766    1   DCL I UBIN WORD ;
       42    14767    1   DCL J UBIN WORD ;
       43    14768    1   DCL START$ PTR ;
       44    14769    1   DCL DEVNUM UBIN;
       45    14770    1   DCL HASPDEV$ PTR;
       46    14771    1   DCL MORE BIT(1) ;
       47    14772    1   DCL FOUND BIT(1) ;
       48    14773    1   DCL WRITE_DEVS BIT (1);
       49    14774    1   DCL DEVS_WRITTEN BIT (1);
       50    14775    1   DCL TYPE CHAR(2) ;
       51    14776    1   DCL NUM CHAR(2) ;
       52    14777    1   DCL CNT UBIN WORD ;
       53    14778    1   DCL SNAME CHAR(8) ;
       54    14779
       55    14780        /*********************************************************************/
       56    14781        /*   Static data     static data     static data     static data     */
       57    14782        /*********************************************************************/
       58    14783                                                              /**/
       59    14784    1   DCL 1 TERM_KEY ALIGNED STATIC ,
       60    14785    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
       61    14786    1          2 TXT UNAL ,
       62    14787    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
       63    14788    1             3 ASTR CHAR(1) UNAL INIT('*') ;
       64    14789        %KL$CONFIG_KEY (NAME=CONFIG_KEY,STCLASS=STATIC);
       65    14836        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
       66    14882
       67    14883        /********************************************************************/
       68    14884        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
       69    14885        /*********************************************************************/
       70    14886                                                              /**/
       71    14887        %ASB$DELREC_HLP ;
       72    14890        %ASB$GETSEG ;
       73    14893        %ASB$ENQ_HLP ;
       74    14896        %ASB$DEQ_HLP ;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:3    
       75    14899        %ASH$ERROR ;
       76    14902        %ASH$WARN ;
       77    14905        %ASH$INFO ;
       78    14908        %ASB$READ_HLP ;
       79    14911        %ASB$WRITE_HLP ;
       80    14914        %ASB$WRITE_LO ;
       81    14917        %ASB$DELREC_NETCON ;
       82    14920        %ASB$CLOSE_NETCON ;
       83    14923        %ASR$R_DEVWSN ;
       84    14926
       85    14927        /*********************************************************************/
       86    14928        /*   Local based     local based     local based     local based     */
       87    14929        /*********************************************************************/
       88    14930                                                              /**/
       89    14931        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
       90    14932                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
       91    14977        %PARSE$SYM( NAME = OUT$SYM ,
       92    14978                    STCLASS="BASED(BLK$)") ;
       93    15016        %KL_DREC ( NAME = KL$TREC ,
       94    15017                   STCLASS="BASED( TREC$ )", LAST="," );
       95    15130        %KL_GJOB( NAME=GJOB, STCLASS=BASED, LVL=2, LAST="," );
       96    15154        %KL_HASP( NAME=HASP, STCLASS=BASED, LVL=2);
       97    15304        %KL_TWSNREC(  NAME = KL$TWSNREC ,
       98    15305                      STCLASS="BASED( TWSNR$ )") ;
       99    15330        %KL_HASPDEV( NAME = KL$HASPDEV,
      100    15331                     STCLASS="BASED( HASPDEV$ )") ;
      101    15565
      102    15566    1   DCL B$TCB$ PTR SYMREF;
      103    15567        %B$TCB;
      104    15570        %B$ALT;
      105    15578        %EJECT;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:4    
      106    15579        /*********************************************************************/
      107    15580        /*   Procedure       procedure       procedure       procedure       */
      108    15581        /*********************************************************************/
      109    15582                                                              /**/
      110    15583        /*
      111    15584            ***            Begin procedure                    ***
      112    15585        */
      113    15586                                                              /* Get data seg. */
      114    15587    1   IF NOT DSEG_FLG THEN
      115    15588    1      CALL ASB$GETSEG
      116    15589    2      WHENALTRETURN DO;
      117    15590              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );
      118    15605    2         RETURN ;
      119    15606    2         END;   /*  Whenaltreturn from ASB$GETSEG  */
      120    15607                                                              /* Get terminal name */
      121    15608    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
      122    15609    1   IF OUT$SYM.COUNT > 8
      123    15610    2   THEN DO ;
      124    15611        /*E*  ERROR:    ASR-E$TNAMETOOBIG-C
      125    15612              MESSAGE:  Terminal name too long.
      126    15613              MESSAGE1: Terminal names can be at most 8 characters.
      127    15614        */
      128    15615           %SCREAM( ERR#=E$TNAMETOOBIG, LEVEL=ERROR, MID='R' );
      129    15630    2      RETURN ;
      130    15631    2      END ; /* Then do */
      131    15632    1   TERM_KEY.CNT = 9 ;
      132    15633    1   TERM_KEY.TXT.ACCT = OUT$SYM.TEXT ;
      133    15634    1   USERS_KEY = TERM_KEY ;
      134    15635                                                              /* Pick up terminal record */
      135    15636    1   TREC$ = DSEG1$ ;
      136    15637    1   ARS = DSEG1SIZE ;
      137    15638    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;
      138    15639    1   IF KL$TREC.ATYP ~= %KLAT_TRM#
      139    15640    2   THEN DO ;
      140    15641        /*E*  ERROR:    ASR-E$NOTTERMINAL-C
      141    15642              MESSAGE0: %%U1 %is not a terminal.
      142    15643        */
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:5    
      143    15644    2      CALL INDEX( I, AS_BLANK, TERM_KEY.TXT.ACCT ) ;
      144    15645    2      AS_FIELD1.COUNT = I ;
      145    15646    2      AS_FIELD1.TEXT = TERM_KEY.TXT.ACCT ;
      146    15647           %SCREAM( ERR#=E$NOTTERMINAL , LEVEL=ERROR, MID='R' );
      147    15662    2      RETURN ;
      148    15663    2      END ; /* Then do */
      149    15664
      150    15665    1   IF P$NODE.SUBNODES > 2
      151    15666    2   THEN DO;
      152    15667    2      BLK$ = P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;
      153    15668    2      IF OUT$SYM.COUNT > 8
      154    15669    3      THEN DO ;
      155    15670              %SCREAM( ERR#=E$SNAMETOOBIG, LEVEL=ERROR, MID='R');
      156    15685    3         RETURN ;
      157    15686    3         END;
      158    15687    2      IF OUT$SYM.TEXT ~= KL$TREC.SNAME
      159    15688    3      THEN DO;
      160    15689    3         CALL INDEX( I, AS_BLANK, KL$TREC.TNAME );
      161    15690    3         AS_FIELD1.COUNT = I ;
      162    15691    3         AS_FIELD1.TEXT = KL$TREC.TNAME ;
      163    15692    3         CALL INDEX( I, AS_BLANK, KL$TREC.SNAME );
      164    15693    3         AS_FIELD2.COUNT = I ;
      165    15694    3         AS_FIELD2.TEXT = KL$TREC.SNAME ;
      166    15695    3         AS_FIELD3.COUNT = OUT$SYM.COUNT ;
      167    15696    3         AS_FIELD3.TEXT = OUT$SYM.TEXT;
      168    15697              %SCREAM( ERR#=E$TERM_NOTBELONG, LEVEL = ERROR, MID='R');
      169    15712    3         END;
      170    15713    2      END;
      171    15714                                                              /* Find 1ST. KL$SS */
      172    15715    1   START$ = PINCRC( TREC$, LENGTHC( KL$TREC ) ) ;
      173    15716                                                              /* Get twsn number */
      174    15717    1   TWSNC = KL$TREC.TWSN# ;
      175    15718    1   CALL CHARBIN( TWSN#, TWSNC ) ;
      176    15719                                                              /* Pick up twsn record */
      177    15720    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;
      178    15721    1   USERS_KEY.COUNT = 8 ;
      179    15722    1   TWSNR$ = DSEG2$ ;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:6    
      180    15723    1   TWSN_ARS = DSEG2SIZE ;
      181    15724    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;
      182    15725    1   CALL ASB$READ_HLP( TWSNR$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;
      183    15726                                                              /* How many devs? */
      184    15727    1   NUM_DEVS = KL$TWSNREC.NDEV ;
      185    15728                                                              /* Get rid of devices
      186    15729                                                                   and consoles. */
      187    15730    1   HASPDEV$ = START$ ;
      188    15731    1   DEVNUM = 1;
      189    15732    1   CONFIG_KEY.TERMID.LEV = 2;
      190    15733    1   CONFIG_KEY.TERMID.TERM.TERM_NAME = TERM_KEY.TXT.ACCT;
      191    15734    1   WRITE_DEVS = '1'B;
      192    15735    1   DEVS_WRITTEN = '0'B; /* 1- wrote devs, 0- no devs to write */
      193    15736    2   DO I = 0 TO NUM_DEVS-1 ;
      194    15737    2      IF ~KL$TWSNREC.DEVS.IOM_CONNECTED(I)
      195    15738    2           AND  KL$TWSNREC.DEVS.TDEV(I)
      196    15739    2           AND  KL$TWSNREC.DEVS.TERM(I) = TERM_KEY.TXT.ACCT
      197    15740    3      THEN DO ;
      198    15741    3         USERS_KEY.TXTC = KL$TWSNREC.DEVS.ACCT(I) ;
      199    15742    3         USERS_KEY.COUNT = 8 ;
      200    15743    3         CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(0) = DEVNUM/256;
      201    15744    3         CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(1) = MOD(DEVNUM,256);
      202    15745    3         DEVNUM = DEVNUM + 1;
      203    15746    3         CALL ASB$DELREC_NETCON(VECTOR(CONFIG_KEY))
      204    15747    4         WHENALTRETURN DO;
      205    15748    4            IF MERR_CODE.CODE ~= %E$NOKEY
      206    15749    5            THEN DO;
      207    15750    5               GOTO NETCON_ERR;
      208    15751    5               END;
      209    15752    4            END;
      210    15753    4         DO J = I TO NUM_DEVS-2 ;
      211    15754    4            KL$TWSNREC.DEVS(J) = KL$TWSNREC.DEVS(J+1) ;
      212    15755    4            END ;
      213    15756    3         KL$TWSNREC.NDEV = KL$TWSNREC.NDEV - 1 ;
      214    15757    3         NUM_DEVS = KL$TWSNREC.NDEV ;
      215    15758    3         TWSN_ARS = TWSN_ARS - LENGTHC(KL$TWSNREC.DEVS(0)) ;
      216    15759    3         I = I - 1 ;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:7    
      217    15760    3         CALL ASB$ENQ_HLP ALTRET(ENQ_ERR2) ;
      218    15761    3         CALL ASB$DELREC_HLP;
      219    15762    3         CALL ASB$DEQ_HLP ;
      220    15763    3         WRITE_DEVS = '1'B; /* Write affected wsns */
      221    15764    3         CALL ASR$R_DEVWSN (WRITE_DEVS);
      222    15765    3         DEVS_WRITTEN = DEVS_WRITTEN | WRITE_DEVS;
      223    15766    3         END;
      224    15767    2      END ; /* Do i */
      225    15768    1   IF ((DEVNUM > 1) AND (DEVS_WRITTEN))
      226    15769    2   THEN DO; /* At least one call to devwsn was made. */
      227    15770        /*E*  ERROR: ASR-E$DEVREMOVED_WARN_WSN-0
      228    15771         MESSAGE:WARNING -To maintain WSN and device consistancy, above WSN's should be rebu
             15771        ilt.
      229    15772              MESSAGE1: There are still references to this device in the stated WSN records.
      230    15773        */
      231    15774           %SCREAM (ERR#=E$DEVREMOVED_WARN_WSN,LEVEL=INFO,MID='R');
      232    15789    2      CALL ASB$WRITE_LO( AS_BLANK, 1 );
      233    15790    2      END;
      234    15791                                                              /* Write TWSN#### */
      235    15792    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;
      236    15793    1   USERS_KEY.COUNT = 8 ;
      237    15794    1   CALL ASB$WRITE_HLP( TWSNR$, TWSN_ARS );
      238    15795                                                              /* Delete terminal */
      239    15796    1   USERS_KEY = TERM_KEY ;
      240    15797    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;
      241    15798    1   CALL INDEX( I, AS_BLANK, USERS_KEY.UKEY.ACCT ) ;
      242    15799    1   AS_FIELD1.COUNT = I ;
      243    15800    1   AS_FIELD1.TEXT = USERS_KEY.UKEY.ACCT ;
      244    15801        /*E*  ERROR:    ASR-00006-C
      245    15802              MESSAGE:  Terminal% %U1% removed.
      246    15803        */
      247    15804        %SCREAM( ERR#=6, LEVEL=INFO, MID='R' ) ;
      248    15819    1   KL_TERM_KEY.TERMID.TERM.TERM_NAME = TERM_KEY.TXT.ACCT ;
      249    15820    1   CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))
      250    15821    2   WHENALTRETURN DO;
      251    15822    2      IF MERR_CODE.CODE ~= %E$NOKEY
      252    15823    3      THEN DO;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:8    
      253    15824    3         GOTO NETCON_ERR;
      254    15825    3         END;
      255    15826    2      END;
      256    15827    1   CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);
      257    15828                                                              /* All done */
      258    15829    1   RETURN ;
      259    15830                                                              /*  Errors  */
      260    15831                                                              /**/
      261    15832    1   READ_TREC_ERR: ;
      262    15833    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;
      263    15834        /*E* ERROR:   ASR-E$TERMNOEXIST-C
      264    15835             MESSAGE: The STATION or TERMINAL %U1 does not exist.
      265    15836        */
      266    15837    1   AS_FIELD1.COUNT = OUT$SYM.COUNT;
      267    15838    1   AS_FIELD1.TEXT  = OUT$SYM.TEXT;
      268    15839        %SCREAM( ERR#=E$TERMNOEXIST, MID='R', LEVEL=WARN );
      269    15854    1   RETURN;
      270    15855
      271    15856    1   READ_TWSN_ERR: ;
      272    15857    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;
      273    15858    1   USERS_KEY = TERM_KEY ;
      274    15859    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR2);
      275    15860    1   CALL ASB$DELREC_HLP ALTRET(DEL_ERR);
      276    15861        %SCREAM( ERR#=5, LEVEL=INFO, MID='R' );
      277    15876    1   CALL ASB$DEQ_HLP ALTRET(DEQ_ERR);
      278    15877    1   RETURN;
      279    15878    1   NETCON_ERR:;
      280    15879    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      281    15880    1   CALL ASH$ERROR(ERR_CODE);
      282    15881    1   RETURN;
      283    15882    1   DEQ_ERR: ;
      284    15883    1   ENQ_ERR2: ;
      285    15884    1   DEL_ERR: ;
      286    15885    1   ERROR: ;
      287    15886    1   CALL ASH$ERROR( ERR_CODE ) ;
      288    15887    1   RETURN ;
      289    15888                                                              /**/
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:9    
      290    15889    1   END   ASR$R_TERMINAL ;
      291    15890        %EOD ;

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:10   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_TERMINAL.

   Procedure ASR$R_TERMINAL requires 404 words for executable code.
   Procedure ASR$R_TERMINAL requires 28 words of local(AUTO) storage.

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:11   

 Object Unit name= ASR$R_TERMINAL                             File name= ASR$R_HLP.:E05TOU
 UTS= JUL 29 '97 10:52:50.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    13     15  ASR$R_TERMINAL
    3  RoData even  UTS     10     12  ASR$R_TERMINAL
    4   Proc  even  none   404    624  ASR$R_TERMINAL
    5  RoData even  none    20     24  ASR$R_TERMINAL

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASR$R_TERMINAL
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:12   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       0 ASB$DELREC_HLP
         yes           Std       2 ASB$WRITE_LO
 yes     yes           Std       2 ASB$WRITE_HLP
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       3 ASB$READ_HLP
         yes           Std       1 ASR$R_DEVWSN
 yes     yes           Std       0 ASB$ENQ_HLP
 yes     yes           Std       1 ASB$DELREC_NETCON
         yes           Std       2 ASH$INFO
 yes     yes           Std       0 ASB$DEQ_HLP
         yes           Std       2 ASH$WARN
 yes     yes           Std       0 ASB$CLOSE_NETCON
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_BLANK                         r    AS_MODE
r    AS_FE_MODE                            M$LO                                  USERS_KEY
     NODE$                                 ERR_CODE                              AS_FIELD1
     AS_FIELD2                             AS_FIELD3                             REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          DSEG_FLG
     DSEG1$                                DSEG1SIZE                             DSEG2$
     DSEG2SIZE                             B$TCB$                                B_VECTNIL
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:13   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:14   


        1        1        /*M* ASR$R_TERMINAL - processes the REMOVE TERMINAL command.  */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
        8        8              ECU=3,CSU=3,SDI=3                                           */
        9        9                                                              /**/
       10       10        ASR$R_TERMINAL: PROC ;

     10  4 000000   000000 700200 xent  ASR$R_TERMI* TSX0  ! X66_AUTO_0
         4 000001   000034 000000                    ZERO    28,0

       11       11                                                              /**/
       12       12        /********************************************************************/
       13       13        /*   Include files   include files   include files   include files   */
       14       14        /*********************************************************************/
       15       15                                                              /**/
       16       16              %INCLUDE  CP_6 ;
       17       97              %INCLUDE  AS_PERR_C ;
       18      699              %INCLUDE  KL_CONFIG_M;
       19     1461              %INCLUDE  B_ERRORS_C;
       20     2588              %INCLUDE  AS_ENTRIES_M;
       21     3638              %INCLUDE  AS_SUPER_C ;
       22     4073              %INCLUDE  AS_SUBS_C ;
       23     5487              %INCLUDE  AS_MAC_C ;
       24     5567              %INCLUDE  KL_SUPER_C ;
       25     8469              %INCLUDE  XU_MACRO_C ;
       26    11575              %INCLUDE  XU_FORMAT_C ;
       27    11737              %INCLUDE  AS_SUPER_R ;
       28    14753
       29    14754        /*********************************************************************/
       30    14755        /*   Auto data       auto data       auto data       auto data       */
       31    14756        /*********************************************************************/
       32    14757                                                              /**/
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:15   
       33    14758    1   DCL TREC$ PTR ;
       34    14759    1   DCL TWSNR$ PTR ;
       35    14760    1   DCL BLK$ PTR ;
       36    14761    1   DCL ARS UBIN WORD ;
       37    14762    1   DCL TWSN_ARS UBIN WORD ;
       38    14763    1   DCL TWSN# UBIN WORD ;
       39    14764    1   DCL TWSNC CHAR(4) ;
       40    14765    1   DCL NUM_DEVS UBIN WORD ;
       41    14766    1   DCL I UBIN WORD ;
       42    14767    1   DCL J UBIN WORD ;
       43    14768    1   DCL START$ PTR ;
       44    14769    1   DCL DEVNUM UBIN;
       45    14770    1   DCL HASPDEV$ PTR;
       46    14771    1   DCL MORE BIT(1) ;
       47    14772    1   DCL FOUND BIT(1) ;
       48    14773    1   DCL WRITE_DEVS BIT (1);
       49    14774    1   DCL DEVS_WRITTEN BIT (1);
       50    14775    1   DCL TYPE CHAR(2) ;
       51    14776    1   DCL NUM CHAR(2) ;
       52    14777    1   DCL CNT UBIN WORD ;
       53    14778    1   DCL SNAME CHAR(8) ;
       54    14779
       55    14780        /*********************************************************************/
       56    14781        /*   Static data     static data     static data     static data     */
       57    14782        /*********************************************************************/
       58    14783                                                              /**/
       59    14784    1   DCL 1 TERM_KEY ALIGNED STATIC ,
       60    14785    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
       61    14786    1          2 TXT UNAL ,
       62    14787    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
       63    14788    1             3 ASTR CHAR(1) UNAL INIT('*') ;
       64    14789        %KL$CONFIG_KEY (NAME=CONFIG_KEY,STCLASS=STATIC);
       65    14836        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
       66    14882
       67    14883        /********************************************************************/
       68    14884        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
       69    14885        /*********************************************************************/
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:16   
       70    14886                                                              /**/
       71    14887        %ASB$DELREC_HLP ;
       72    14890        %ASB$GETSEG ;
       73    14893        %ASB$ENQ_HLP ;
       74    14896        %ASB$DEQ_HLP ;
       75    14899        %ASH$ERROR ;
       76    14902        %ASH$WARN ;
       77    14905        %ASH$INFO ;
       78    14908        %ASB$READ_HLP ;
       79    14911        %ASB$WRITE_HLP ;
       80    14914        %ASB$WRITE_LO ;
       81    14917        %ASB$DELREC_NETCON ;
       82    14920        %ASB$CLOSE_NETCON ;
       83    14923        %ASR$R_DEVWSN ;
       84    14926
       85    14927        /*********************************************************************/
       86    14928        /*   Local based     local based     local based     local based     */
       87    14929        /*********************************************************************/
       88    14930                                                              /**/
       89    14931        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
       90    14932                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
       91    14977        %PARSE$SYM( NAME = OUT$SYM ,
       92    14978                    STCLASS="BASED(BLK$)") ;
       93    15016        %KL_DREC ( NAME = KL$TREC ,
       94    15017                   STCLASS="BASED( TREC$ )", LAST="," );
       95    15130        %KL_GJOB( NAME=GJOB, STCLASS=BASED, LVL=2, LAST="," );
       96    15154        %KL_HASP( NAME=HASP, STCLASS=BASED, LVL=2);
       97    15304        %KL_TWSNREC(  NAME = KL$TWSNREC ,
       98    15305                      STCLASS="BASED( TWSNR$ )") ;
       99    15330        %KL_HASPDEV( NAME = KL$HASPDEV,
      100    15331                     STCLASS="BASED( HASPDEV$ )") ;
      101    15565
      102    15566    1   DCL B$TCB$ PTR SYMREF;
      103    15567        %B$TCB;
      104    15570        %B$ALT;
      105    15578        %EJECT;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:17   
      106    15579        /*********************************************************************/
      107    15580        /*   Procedure       procedure       procedure       procedure       */
      108    15581        /*********************************************************************/
      109    15582                                                              /**/
      110    15583        /*
      111    15584            ***            Begin procedure                    ***
      112    15585        */
      113    15586                                                              /* Get data seg. */
      114    15587    1   IF NOT DSEG_FLG THEN

  15587  4 000002   000000 234000 xsym               SZN     DSEG_FLG
         4 000003   000015 604000 4                  TMI     s:15608

      115    15588    1      CALL ASB$GETSEG

  15588  4 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000005   000000 701000 xent               TSX1    ASB$GETSEG
         4 000006   000010 702000 4                  TSX2    s:15602
         4 000007   000015 710000 4                  TRA     s:15608

      116    15589    2      WHENALTRETURN DO;

      117    15590              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );

  15602  4 000010   000000 630400 5                  EPPR0   0
         4 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000012   000000 701000 xent               TSX1    ASH$ERROR
         4 000013   000000 011000                    NOP     0

      118    15605    2         RETURN ;

  15605  4 000014   000000 702200 xent               TSX2  ! X66_ARET

      119    15606    2         END;   /*  Whenaltreturn from ASB$GETSEG  */
      120    15607                                                              /* Get terminal name */
      121    15608    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:18   
  15608  4 000015   000000 470400 xsym               LDP0    NODE$
         4 000016   000003 471500                    LDP1    3,,PR0
         4 000017   100003 236100                    LDQ     3,,PR1
         4 000020   200005 756100                    STQ     BLK$,,AUTO

      122    15609    1   IF OUT$SYM.COUNT > 8

  15609  4 000021   200005 473500                    LDP3    BLK$,,AUTO
         4 000022   300004 236100                    LDQ     4,,PR3
         4 000023   777000 376003                    ANQ     -512,DU
         4 000024   011000 116003                    CMPQ    4608,DU
         4 000025   000033 602000 4                  TNC     s:15632

      123    15610    2   THEN DO ;

      124    15611        /*E*  ERROR:    ASR-E$TNAMETOOBIG-C
      125    15612              MESSAGE:  Terminal name too long.
      126    15613              MESSAGE1: Terminal names can be at most 8 characters.
      127    15614        */
      128    15615           %SCREAM( ERR#=E$TNAMETOOBIG, LEVEL=ERROR, MID='R' );

  15627  4 000026   000001 630400 5                  EPPR0   1
         4 000027   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000030   000000 701000 xent               TSX1    ASH$ERROR
         4 000031   000000 011000                    NOP     0

      129    15630    2      RETURN ;

  15630  4 000032   000000 702200 xent               TSX2  ! X66_ARET

      130    15631    2      END ; /* Then do */
      131    15632    1   TERM_KEY.CNT = 9 ;

  15632  4 000033   011000 236003                    LDQ     4608,DU
         4 000034   000000 552040 2                  STBQ    TERM_KEY,'40'O

      132    15633    1   TERM_KEY.TXT.ACCT = OUT$SYM.TEXT ;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:19   

  15633  4 000035   300004 236100                    LDQ     4,,PR3
         4 000036   000033 772000                    QRL     27
         4 000037   000000 620006                    EAX0    0,QL
         4 000040   040000 100540                    MLR     fill='040'O
         4 000041   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         4 000042   000000 200010 2                  ADSC9   TERM_KEY                 cn=1,n=8

      133    15634    1   USERS_KEY = TERM_KEY ;

  15634  4 000043   000000 100400                    MLR     fill='000'O
         4 000044   000000 000012 2                  ADSC9   TERM_KEY                 cn=0,n=10
         4 000045   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      134    15635                                                              /* Pick up terminal record */
      135    15636    1   TREC$ = DSEG1$ ;

  15636  4 000046   000000 236000 xsym               LDQ     DSEG1$
         4 000047   200003 756100                    STQ     TREC$,,AUTO

      136    15637    1   ARS = DSEG1SIZE ;

  15637  4 000050   000000 235000 xsym               LDA     DSEG1SIZE
         4 000051   200006 755100                    STA     ARS,,AUTO

      137    15638    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;

  15638  4 000052   200006 631500                    EPPR1   ARS,,AUTO
         4 000053   200033 451500                    STP1    DEVS_WRITTEN+8,,AUTO
         4 000054   200003 634500                    EPPR4   TREC$,,AUTO
         4 000055   200032 454500                    STP4    DEVS_WRITTEN+7,,AUTO
         4 000056   200032 630500                    EPPR0   DEVS_WRITTEN+7,,AUTO
         4 000057   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000060   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000061   000537 702000 4                  TSX2    READ_TREC_ERR

      138    15639    1   IF KL$TREC.ATYP ~= %KLAT_TRM#
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:20   

  15639  4 000062   200003 470500                    LDP0    TREC$,,AUTO
         4 000063   000000 236100                    LDQ     0,,PR0
         4 000064   777000 376003                    ANQ     -512,DU
         4 000065   004000 116003                    CMPQ    2048,DU
         4 000066   000106 600000 4                  TZE     s:15665

      139    15640    2   THEN DO ;

      140    15641        /*E*  ERROR:    ASR-E$NOTTERMINAL-C
      141    15642              MESSAGE0: %%U1 %is not a terminal.
      142    15643        */
      143    15644    2      CALL INDEX( I, AS_BLANK, TERM_KEY.TXT.ACCT ) ;

  15644  4 000067   000000 124400                    SCM     mask='000'O
         4 000070   000000 200010 2                  ADSC9   TERM_KEY                 cn=1,n=8
         4 000071   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000072   200013 000100                    ARG     I,,AUTO

      144    15645    2      AS_FIELD1.COUNT = I ;

  15645  4 000073   200013 236100                    LDQ     I,,AUTO
         4 000074   000033 736000                    QLS     27
         4 000075   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      145    15646    2      AS_FIELD1.TEXT = TERM_KEY.TXT.ACCT ;

  15646  4 000076   040000 100400                    MLR     fill='040'O
         4 000077   000000 200010 2                  ADSC9   TERM_KEY                 cn=1,n=8
         4 000100   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      146    15647           %SCREAM( ERR#=E$NOTTERMINAL , LEVEL=ERROR, MID='R' );

  15659  4 000101   000002 630400 5                  EPPR0   2
         4 000102   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000103   000000 701000 xent               TSX1    ASH$ERROR
         4 000104   000000 011000                    NOP     0
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:21   

      147    15662    2      RETURN ;

  15662  4 000105   000000 702200 xent               TSX2  ! X66_ARET

      148    15663    2      END ; /* Then do */
      149    15664
      150    15665    1   IF P$NODE.SUBNODES > 2

  15665  4 000106   000000 471400 xsym               LDP1    NODE$
         4 000107   100001 220100                    LDX0    1,,PR1
         4 000110   000003 100003                    CMPX0   3,DU
         4 000111   000176 602000 4                  TNC     s:15715

      151    15666    2   THEN DO;

      152    15667    2      BLK$ = P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;

  15667  4 000112   100004 473500                    LDP3    4,,PR1
         4 000113   300003 236100                    LDQ     3,,PR3
         4 000114   200005 756100                    STQ     BLK$,,AUTO

      153    15668    2      IF OUT$SYM.COUNT > 8

  15668  4 000115   200005 474500                    LDP4    BLK$,,AUTO
         4 000116   400004 236100                    LDQ     4,,PR4
         4 000117   777000 376003                    ANQ     -512,DU
         4 000120   011000 116003                    CMPQ    4608,DU
         4 000121   000127 602000 4                  TNC     s:15687

      154    15669    3      THEN DO ;

      155    15670              %SCREAM( ERR#=E$SNAMETOOBIG, LEVEL=ERROR, MID='R');

  15682  4 000122   000003 630400 5                  EPPR0   3
         4 000123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000124   000000 701000 xent               TSX1    ASH$ERROR
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:22   
         4 000125   000000 011000                    NOP     0

      156    15685    3         RETURN ;

  15685  4 000126   000000 702200 xent               TSX2  ! X66_ARET

      157    15686    3         END;
      158    15687    2      IF OUT$SYM.TEXT ~= KL$TREC.SNAME

  15687  4 000127   400004 236100                    LDQ     4,,PR4
         4 000130   000033 772000                    QRL     27
         4 000131   000000 621006                    EAX1    0,QL
         4 000132   040100 106540                    CMPC    fill='040'O
         4 000133   400004 200011                    ADSC9   4,,PR4                   cn=1,n=*X1
         4 000134   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         4 000135   000176 600000 4                  TZE     s:15715

      159    15688    3      THEN DO;

      160    15689    3         CALL INDEX( I, AS_BLANK, KL$TREC.TNAME );

  15689  4 000136   000000 124500                    SCM     mask='000'O
         4 000137   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
         4 000140   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000141   200013 000100                    ARG     I,,AUTO

      161    15690    3         AS_FIELD1.COUNT = I ;

  15690  4 000142   200013 236100                    LDQ     I,,AUTO
         4 000143   000033 736000                    QLS     27
         4 000144   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      162    15691    3         AS_FIELD1.TEXT = KL$TREC.TNAME ;

  15691  4 000145   040000 100500                    MLR     fill='040'O
         4 000146   000013 000010                    ADSC9   11,,PR0                  cn=0,n=8
         4 000147   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:23   

      163    15692    3         CALL INDEX( I, AS_BLANK, KL$TREC.SNAME );

  15692  4 000150   000000 124500                    SCM     mask='000'O
         4 000151   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         4 000152   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000153   200013 000100                    ARG     I,,AUTO

      164    15693    3         AS_FIELD2.COUNT = I ;

  15693  4 000154   200013 236100                    LDQ     I,,AUTO
         4 000155   000033 736000                    QLS     27
         4 000156   000000 552040 xsym               STBQ    AS_FIELD2,'40'O

      165    15694    3         AS_FIELD2.TEXT = KL$TREC.SNAME ;

  15694  4 000157   040000 100500                    MLR     fill='040'O
         4 000160   000015 000010                    ADSC9   13,,PR0                  cn=0,n=8
         4 000161   000000 200050 xsym               ADSC9   AS_FIELD2                cn=1,n=40

      166    15695    3         AS_FIELD3.COUNT = OUT$SYM.COUNT ;

  15695  4 000162   400004 236100                    LDQ     4,,PR4
         4 000163   000000 552040 xsym               STBQ    AS_FIELD3,'40'O

      167    15696    3         AS_FIELD3.TEXT = OUT$SYM.TEXT;

  15696  4 000164   400004 236100                    LDQ     4,,PR4
         4 000165   000033 772000                    QRL     27
         4 000166   000000 620006                    EAX0    0,QL
         4 000167   040000 100540                    MLR     fill='040'O
         4 000170   400004 200010                    ADSC9   4,,PR4                   cn=1,n=*X0
         4 000171   000000 200050 xsym               ADSC9   AS_FIELD3                cn=1,n=40

      168    15697              %SCREAM( ERR#=E$TERM_NOTBELONG, LEVEL = ERROR, MID='R');

  15709  4 000172   000004 630400 5                  EPPR0   4
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:24   
         4 000173   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000174   000000 701000 xent               TSX1    ASH$ERROR
         4 000175   000000 011000                    NOP     0

      169    15712    3         END;

      170    15713    2      END;

      171    15714                                                              /* Find 1ST. KL$SS */
      172    15715    1   START$ = PINCRC( TREC$, LENGTHC( KL$TREC ) ) ;

  15715  4 000176   200003 236100                    LDQ     TREC$,,AUTO
         4 000177   000103 036003                    ADLQ    67,DU
         4 000200   200015 756100                    STQ     START$,,AUTO

      173    15716                                                              /* Get twsn number */
      174    15717    1   TWSNC = KL$TREC.TWSN# ;

  15717  4 000201   200003 470500                    LDP0    TREC$,,AUTO
         4 000202   000001 236100                    LDQ     1,,PR0
         4 000203   200011 756100                    STQ     TWSNC,,AUTO

      175    15718    1   CALL CHARBIN( TWSN#, TWSNC ) ;

  15718  4 000204   000100 305500                    DTB
         4 000205   200011 030004                    NDSC9   TWSNC,,AUTO              cn=0,s=nosgn,sf=0,n=4
         4 000206   200032 000010                    NDSC9   DEVS_WRITTEN+7,,AUTO     cn=0,s=lsgnf,sf=0,n=8
         4 000207   200033 235100                    LDA     DEVS_WRITTEN+8,,AUTO
         4 000210   200010 755100                    STA     TWSN#,,AUTO

      176    15719                                                              /* Pick up twsn record */
      177    15720    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;

  15720  4 000211   040000 100400                    MLR     fill='040'O
         4 000212   000005 000004 3                  ADSC9   5                        cn=0,n=4
         4 000213   000000 200004 xsym               ADSC9   USERS_KEY                cn=1,n=4
         4 000214   040000 100500                    MLR     fill='040'O
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:25   
         4 000215   200011 000004                    ADSC9   TWSNC,,AUTO              cn=0,n=4
         4 000216   000001 200045 xsym               ADSC9   USERS_KEY+1              cn=1,n=37

      178    15721    1   USERS_KEY.COUNT = 8 ;

  15721  4 000217   010000 236003                    LDQ     4096,DU
         4 000220   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      179    15722    1   TWSNR$ = DSEG2$ ;

  15722  4 000221   000000 236000 xsym               LDQ     DSEG2$
         4 000222   200004 756100                    STQ     TWSNR$,,AUTO

      180    15723    1   TWSN_ARS = DSEG2SIZE ;

  15723  4 000223   000000 235000 xsym               LDA     DSEG2SIZE
         4 000224   200007 755100                    STA     TWSN_ARS,,AUTO

      181    15724    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;

  15724  4 000225   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000226   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000227   000617 702000 4                  TSX2    DEQ_ERR

      182    15725    1   CALL ASB$READ_HLP( TWSNR$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;

  15725  4 000230   200007 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000231   200033 450500                    STP0    DEVS_WRITTEN+8,,AUTO
         4 000232   200004 631500                    EPPR1   TWSNR$,,AUTO
         4 000233   200032 451500                    STP1    DEVS_WRITTEN+7,,AUTO
         4 000234   200032 630500                    EPPR0   DEVS_WRITTEN+7,,AUTO
         4 000235   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000236   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000237   000561 702000 4                  TSX2    READ_TWSN_ERR

      183    15726                                                              /* How many devs? */
      184    15727    1   NUM_DEVS = KL$TWSNREC.NDEV ;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:26   

  15727  4 000240   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000241   000004 235100                    LDA     4,,PR0
         4 000242   200012 755100                    STA     NUM_DEVS,,AUTO

      185    15728                                                              /* Get rid of devices
      186    15729                                                                   and consoles. */
      187    15730    1   HASPDEV$ = START$ ;

  15730  4 000243   200015 236100                    LDQ     START$,,AUTO
         4 000244   200017 756100                    STQ     HASPDEV$,,AUTO

      188    15731    1   DEVNUM = 1;

  15731  4 000245   000001 235007                    LDA     1,DL
         4 000246   200016 755100                    STA     DEVNUM,,AUTO

      189    15732    1   CONFIG_KEY.TERMID.LEV = 2;

  15732  4 000247   002000 236003                    LDQ     1024,DU
         4 000250   000004 552040 2                  STBQ    CONFIG_KEY+1,'40'O

      190    15733    1   CONFIG_KEY.TERMID.TERM.TERM_NAME = TERM_KEY.TXT.ACCT;

  15733  4 000251   040000 100400                    MLR     fill='040'O
         4 000252   000000 200010 2                  ADSC9   TERM_KEY                 cn=1,n=8
         4 000253   000005 600010 2                  ADSC9   CONFIG_KEY+2             cn=3,n=8

      191    15734    1   WRITE_DEVS = '1'B;

  15734  4 000254   400000 236003                    LDQ     -131072,DU
         4 000255   200022 756100                    STQ     WRITE_DEVS,,AUTO

      192    15735    1   DEVS_WRITTEN = '0'B; /* 1- wrote devs, 0- no devs to write */

  15735  4 000256   200023 450100                    STZ     DEVS_WRITTEN,,AUTO

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:27   
      193    15736    2   DO I = 0 TO NUM_DEVS-1 ;

  15736  4 000257   200013 450100                    STZ     I,,AUTO
         4 000260   000432 710000 4                  TRA     s:15767+3

      194    15737    2      IF ~KL$TWSNREC.DEVS.IOM_CONNECTED(I)

  15737  4 000261   200013 236100                    LDQ     I,,AUTO
         4 000262   000013 402007                    MPY     11,DL
         4 000263   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000264   000006 236106                    LDQ     6,QL,PR0
         4 000265   000036 736000                    QLS     30
         4 000266   400000 376003                    ANQ     -131072,DU
         4 000267   400000 676003                    ERQ     -131072,DU
         4 000270   000427 600000 4                  TZE     s:15767
         4 000271   200013 236100                    LDQ     I,,AUTO
         4 000272   000013 402007                    MPY     11,DL
         4 000273   000006 236106                    LDQ     6,QL,PR0
         4 000274   000100 316007                    CANQ    64,DL
         4 000275   000427 600000 4                  TZE     s:15767
         4 000276   200013 236100                    LDQ     I,,AUTO
         4 000277   000054 402007                    MPY     44,DL
         4 000300   040000 106506                    CMPC    fill='040'O
         4 000301   000013 000010                    ADSC9   11,Q,PR0                 cn=0,n=8
         4 000302   000000 200010 2                  ADSC9   TERM_KEY                 cn=1,n=8
         4 000303   000427 601000 4                  TNZ     s:15767

      195    15738    2           AND  KL$TWSNREC.DEVS.TDEV(I)
      196    15739    2           AND  KL$TWSNREC.DEVS.TERM(I) = TERM_KEY.TXT.ACCT
      197    15740    3      THEN DO ;

      198    15741    3         USERS_KEY.TXTC = KL$TWSNREC.DEVS.ACCT(I) ;

  15741  4 000304   040000 100506                    MLR     fill='040'O
         4 000305   000011 000010                    ADSC9   9,Q,PR0                  cn=0,n=8
         4 000306   000000 200051 xsym               ADSC9   USERS_KEY                cn=1,n=41

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:28   
      199    15742    3         USERS_KEY.COUNT = 8 ;

  15742  4 000307   010000 236003                    LDQ     4096,DU
         4 000310   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      200    15743    3         CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(0) = DEVNUM/256;

  15743  4 000311   200016 236100                    LDQ     DEVNUM,,AUTO
         4 000312   000010 772000                    QRL     8
         4 000313   000004 676000 2                  ERQ     CONFIG_KEY+1
         4 000314   000377 376007                    ANQ     255,DL
         4 000315   000004 656000 2                  ERSQ    CONFIG_KEY+1

      201    15744    3         CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(1) = MOD(DEVNUM,256);

  15744  4 000316   200016 236100                    LDQ     DEVNUM,,AUTO
         4 000317   000377 376007                    ANQ     255,DL
         4 000320   000033 736000                    QLS     27
         4 000321   000005 676000 2                  ERQ     CONFIG_KEY+2
         4 000322   377000 376003                    ANQ     130560,DU
         4 000323   000005 656000 2                  ERSQ    CONFIG_KEY+2

      202    15745    3         DEVNUM = DEVNUM + 1;

  15745  4 000324   200016 235100                    LDA     DEVNUM,,AUTO
         4 000325   000001 035007                    ADLA    1,DL
         4 000326   200016 755100                    STA     DEVNUM,,AUTO

      203    15746    3         CALL ASB$DELREC_NETCON(VECTOR(CONFIG_KEY))

  15746  4 000327   000010 630400 5                  EPPR0   8
         4 000330   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000331   000000 701000 xent               TSX1    ASB$DELREC_NETCON
         4 000332   000334 702000 4                  TSX2    s:15748
         4 000333   000341 710000 4                  TRA     s:15753

      204    15747    4         WHENALTRETURN DO;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:29   

      205    15748    4            IF MERR_CODE.CODE ~= %E$NOKEY

  15748  4 000334   000000 236000 xsym               LDQ     ERR_CODE
         4 000335   377770 376007                    ANQ     131064,DL
         4 000336   001020 116007                    CMPQ    528,DL
         4 000337   000341 600000 4                  TZE     s:15753

      206    15749    5            THEN DO;

      207    15750    5               GOTO NETCON_ERR;

  15750  4 000340   000606 710000 4                  TRA     NETCON_ERR

      208    15751    5               END;
      209    15752    4            END;
      210    15753    4         DO J = I TO NUM_DEVS-2 ;

  15753  4 000341   200013 235100                    LDA     I,,AUTO
         4 000342   200014 755100                    STA     J,,AUTO
         4 000343   000355 710000 4                  TRA     s:15755+3

      211    15754    4            KL$TWSNREC.DEVS(J) = KL$TWSNREC.DEVS(J+1) ;

  15754  4 000344   200014 236100                    LDQ     J,,AUTO
         4 000345   000054 402007                    MPY     44,DL
         4 000346   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000347   000106 100506                    MLR     fill='000'O
         4 000350   000020 000054                    ADSC9   16,Q,PR0                 cn=0,n=44
         4 000351   000005 000054                    ADSC9   5,Q,PR0                  cn=0,n=44

      212    15755    4            END ;

  15755  4 000352   200014 235100                    LDA     J,,AUTO
         4 000353   000001 035007                    ADLA    1,DL
         4 000354   200014 755100                    STA     J,,AUTO
         4 000355   200012 236100                    LDQ     NUM_DEVS,,AUTO
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:30   
         4 000356   000002 136007                    SBLQ    2,DL
         4 000357   000362 604000 4                  TMI     s:15756
         4 000360   200014 116100                    CMPQ    J,,AUTO
         4 000361   000344 603000 4                  TRC     s:15754

      213    15756    3         KL$TWSNREC.NDEV = KL$TWSNREC.NDEV - 1 ;

  15756  4 000362   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000363   000004 235100                    LDA     4,,PR0
         4 000364   000001 135007                    SBLA    1,DL
         4 000365   000004 755100                    STA     4,,PR0

      214    15757    3         NUM_DEVS = KL$TWSNREC.NDEV ;

  15757  4 000366   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000367   000004 235100                    LDA     4,,PR0
         4 000370   200012 755100                    STA     NUM_DEVS,,AUTO

      215    15758    3         TWSN_ARS = TWSN_ARS - LENGTHC(KL$TWSNREC.DEVS(0)) ;

  15758  4 000371   200007 236100                    LDQ     TWSN_ARS,,AUTO
         4 000372   000054 136007                    SBLQ    44,DL
         4 000373   200007 756100                    STQ     TWSN_ARS,,AUTO

      216    15759    3         I = I - 1 ;

  15759  4 000374   200013 235100                    LDA     I,,AUTO
         4 000375   000001 135007                    SBLA    1,DL
         4 000376   200013 755100                    STA     I,,AUTO

      217    15760    3         CALL ASB$ENQ_HLP ALTRET(ENQ_ERR2) ;

  15760  4 000377   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000400   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000401   000617 702000 4                  TSX2    DEQ_ERR

      218    15761    3         CALL ASB$DELREC_HLP;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:31   

  15761  4 000402   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000403   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000404   000000 011000                    NOP     0

      219    15762    3         CALL ASB$DEQ_HLP ;

  15762  4 000405   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000406   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000407   000000 011000                    NOP     0

      220    15763    3         WRITE_DEVS = '1'B; /* Write affected wsns */

  15763  4 000410   400000 236003                    LDQ     -131072,DU
         4 000411   200022 756100                    STQ     WRITE_DEVS,,AUTO

      221    15764    3         CALL ASR$R_DEVWSN (WRITE_DEVS);

  15764  4 000412   200022 630500                    EPPR0   WRITE_DEVS,,AUTO
         4 000413   200032 450500                    STP0    DEVS_WRITTEN+7,,AUTO
         4 000414   200032 630500                    EPPR0   DEVS_WRITTEN+7,,AUTO
         4 000415   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000416   000000 701000 xent               TSX1    ASR$R_DEVWSN
         4 000417   000000 011000                    NOP     0

      222    15765    3         DEVS_WRITTEN = DEVS_WRITTEN | WRITE_DEVS;

  15765  4 000420   200022 236100                    LDQ     WRITE_DEVS,,AUTO
         4 000421   400000 376003                    ANQ     -131072,DU
         4 000422   200032 756100                    STQ     DEVS_WRITTEN+7,,AUTO
         4 000423   200023 236100                    LDQ     DEVS_WRITTEN,,AUTO
         4 000424   400000 376003                    ANQ     -131072,DU
         4 000425   200032 276100                    ORQ     DEVS_WRITTEN+7,,AUTO
         4 000426   200023 756100                    STQ     DEVS_WRITTEN,,AUTO

      223    15766    3         END;

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:32   
      224    15767    2      END ; /* Do i */

  15767  4 000427   200013 235100                    LDA     I,,AUTO
         4 000430   000001 035007                    ADLA    1,DL
         4 000431   200013 755100                    STA     I,,AUTO
         4 000432   200013 236100                    LDQ     I,,AUTO
         4 000433   200012 116100                    CMPQ    NUM_DEVS,,AUTO
         4 000434   000261 602000 4                  TNC     s:15737

      225    15768    1   IF ((DEVNUM > 1) AND (DEVS_WRITTEN))

  15768  4 000435   200016 235100                    LDA     DEVNUM,,AUTO
         4 000436   000002 115007                    CMPA    2,DL
         4 000437   000452 602000 4                  TNC     s:15792
         4 000440   200023 234100                    SZN     DEVS_WRITTEN,,AUTO
         4 000441   000452 605000 4                  TPL     s:15792

      226    15769    2   THEN DO; /* At least one call to devwsn was made. */

      227    15770        /*E*  ERROR: ASR-E$DEVREMOVED_WARN_WSN-0
      228    15771        MESSAGE:WARNING -To maintain WSN and device consistancy, above WSN's should be rebu
             15771        ilt.
      229    15772             MESSAGE1: There are still references to this device in the stated WSN records.
      230    15773        */
      231    15774           %SCREAM (ERR#=E$DEVREMOVED_WARN_WSN,LEVEL=INFO,MID='R');

  15782  4 000442   000011 630400 5                  EPPR0   9
         4 000443   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000444   000000 701000 xent               TSX1    ASH$INFO
         4 000445   000000 011000                    NOP     0

      232    15789    2      CALL ASB$WRITE_LO( AS_BLANK, 1 );

  15789  4 000446   000012 630400 5                  EPPR0   10
         4 000447   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000450   000000 701000 xent               TSX1    ASB$WRITE_LO
         4 000451   000000 011000                    NOP     0
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:33   

      233    15790    2      END;

      234    15791                                                              /* Write TWSN#### */
      235    15792    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;

  15792  4 000452   040000 100400                    MLR     fill='040'O
         4 000453   000005 000004 3                  ADSC9   5                        cn=0,n=4
         4 000454   000000 200004 xsym               ADSC9   USERS_KEY                cn=1,n=4
         4 000455   040000 100500                    MLR     fill='040'O
         4 000456   200011 000004                    ADSC9   TWSNC,,AUTO              cn=0,n=4
         4 000457   000001 200045 xsym               ADSC9   USERS_KEY+1              cn=1,n=37

      236    15793    1   USERS_KEY.COUNT = 8 ;

  15793  4 000460   010000 236003                    LDQ     4096,DU
         4 000461   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      237    15794    1   CALL ASB$WRITE_HLP( TWSNR$, TWSN_ARS );

  15794  4 000462   200007 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000463   200033 450500                    STP0    DEVS_WRITTEN+8,,AUTO
         4 000464   200004 631500                    EPPR1   TWSNR$,,AUTO
         4 000465   200032 451500                    STP1    DEVS_WRITTEN+7,,AUTO
         4 000466   200032 630500                    EPPR0   DEVS_WRITTEN+7,,AUTO
         4 000467   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000470   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000471   000000 011000                    NOP     0

      238    15795                                                              /* Delete terminal */
      239    15796    1   USERS_KEY = TERM_KEY ;

  15796  4 000472   000000 100400                    MLR     fill='000'O
         4 000473   000000 000012 2                  ADSC9   TERM_KEY                 cn=0,n=10
         4 000474   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      240    15797    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:34   

  15797  4 000475   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000476   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000477   000617 702000 4                  TSX2    DEQ_ERR

      241    15798    1   CALL INDEX( I, AS_BLANK, USERS_KEY.UKEY.ACCT ) ;

  15798  4 000500   000000 124400                    SCM     mask='000'O
         4 000501   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000502   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000503   200013 000100                    ARG     I,,AUTO

      242    15799    1   AS_FIELD1.COUNT = I ;

  15799  4 000504   200013 236100                    LDQ     I,,AUTO
         4 000505   000033 736000                    QLS     27
         4 000506   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      243    15800    1   AS_FIELD1.TEXT = USERS_KEY.UKEY.ACCT ;

  15800  4 000507   040000 100400                    MLR     fill='040'O
         4 000510   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000511   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      244    15801        /*E*  ERROR:    ASR-00006-C
      245    15802              MESSAGE:  Terminal% %U1% removed.
      246    15803        */
      247    15804        %SCREAM( ERR#=6, LEVEL=INFO, MID='R' ) ;

  15812  4 000512   000014 630400 5                  EPPR0   12
         4 000513   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000514   000000 701000 xent               TSX1    ASH$INFO
         4 000515   000000 011000                    NOP     0

      248    15819    1   KL_TERM_KEY.TERMID.TERM.TERM_NAME = TERM_KEY.TXT.ACCT ;

  15819  4 000516   040000 100400                    MLR     fill='040'O
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:35   
         4 000517   000000 200010 2                  ADSC9   TERM_KEY                 cn=1,n=8
         4 000520   000012 400010 2                  ADSC9   KL_TERM_KEY+2            cn=2,n=8

      249    15820    1   CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))

  15820  4 000521   000020 630400 5                  EPPR0   16
         4 000522   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000523   000000 701000 xent               TSX1    ASB$DELREC_NETCON
         4 000524   000526 702000 4                  TSX2    s:15822
         4 000525   000533 710000 4                  TRA     s:15827

      250    15821    2   WHENALTRETURN DO;

      251    15822    2      IF MERR_CODE.CODE ~= %E$NOKEY

  15822  4 000526   000000 236000 xsym               LDQ     ERR_CODE
         4 000527   377770 376007                    ANQ     131064,DL
         4 000530   001020 116007                    CMPQ    528,DL
         4 000531   000533 600000 4                  TZE     s:15827

      252    15823    3      THEN DO;

      253    15824    3         GOTO NETCON_ERR;

  15824  4 000532   000606 710000 4                  TRA     NETCON_ERR

      254    15825    3         END;
      255    15826    2      END;
      256    15827    1   CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);

  15827  4 000533   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000534   000000 701000 xent               TSX1    ASB$CLOSE_NETCON
         4 000535   000606 702000 4                  TSX2    NETCON_ERR

      257    15828                                                              /* All done */
      258    15829    1   RETURN ;

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:36   
  15829  4 000536   000000 702200 xent               TSX2  ! X66_ARET

  15819  4 000537                       READ_TREC_E* null
      259    15830                                                              /*  Errors  */
      260    15831                                                              /**/
      261    15832    1   READ_TREC_ERR: ;
      262    15833    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;

  15833  4 000537   000000 236000 xsym               LDQ     ERR_CODE
         4 000540   377770 376007                    ANQ     131064,DL
         4 000541   001020 116007                    CMPQ    528,DL
         4 000542   000617 601000 4                  TNZ     DEQ_ERR

      263    15834        /*E* ERROR:   ASR-E$TERMNOEXIST-C
      264    15835             MESSAGE: The STATION or TERMINAL %U1 does not exist.
      265    15836        */
      266    15837    1   AS_FIELD1.COUNT = OUT$SYM.COUNT;

  15837  4 000543   200005 470500                    LDP0    BLK$,,AUTO
         4 000544   000004 236100                    LDQ     4,,PR0
         4 000545   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      267    15838    1   AS_FIELD1.TEXT  = OUT$SYM.TEXT;

  15838  4 000546   000004 236100                    LDQ     4,,PR0
         4 000547   000033 772000                    QRL     27
         4 000550   000000 620006                    EAX0    0,QL
         4 000551   040000 100540                    MLR     fill='040'O
         4 000552   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000553   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      268    15839        %SCREAM( ERR#=E$TERMNOEXIST, MID='R', LEVEL=WARN );

  15849  4 000554   000021 630400 5                  EPPR0   17
         4 000555   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000556   000000 701000 xent               TSX1    ASH$WARN
         4 000557   000000 011000                    NOP     0
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:37   

      269    15854    1   RETURN;

  15854  4 000560   000000 702200 xent               TSX2  ! X66_ARET

  15838  4 000561                       READ_TWSN_E* null
      270    15855
      271    15856    1   READ_TWSN_ERR: ;
      272    15857    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;

  15857  4 000561   000000 236000 xsym               LDQ     ERR_CODE
         4 000562   377770 376007                    ANQ     131064,DL
         4 000563   001020 116007                    CMPQ    528,DL
         4 000564   000617 601000 4                  TNZ     DEQ_ERR

      273    15858    1   USERS_KEY = TERM_KEY ;

  15858  4 000565   000000 100400                    MLR     fill='000'O
         4 000566   000000 000012 2                  ADSC9   TERM_KEY                 cn=0,n=10
         4 000567   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      274    15859    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR2);

  15859  4 000570   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000571   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000572   000617 702000 4                  TSX2    DEQ_ERR

      275    15860    1   CALL ASB$DELREC_HLP ALTRET(DEL_ERR);

  15860  4 000573   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000574   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000575   000617 702000 4                  TSX2    DEQ_ERR

      276    15861        %SCREAM( ERR#=5, LEVEL=INFO, MID='R' );

  15869  4 000576   000022 630400 5                  EPPR0   18
         4 000577   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:38   
         4 000600   000000 701000 xent               TSX1    ASH$INFO
         4 000601   000000 011000                    NOP     0

      277    15876    1   CALL ASB$DEQ_HLP ALTRET(DEQ_ERR);

  15876  4 000602   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000603   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000604   000617 702000 4                  TSX2    DEQ_ERR

      278    15877    1   RETURN;

  15877  4 000605   000000 702200 xent               TSX2  ! X66_ARET

  15858  4 000606                       NETCON_ERR   null
      279    15878    1   NETCON_ERR:;
      280    15879    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  15879  4 000606   000000 470400 xsym               LDP0    B$TCB$
         4 000607   000000 471500                    LDP1    0,,PR0
         4 000610   100102 236100                    LDQ     66,,PR1
         4 000611   000000 756000 xsym               STQ     ERR_CODE

      281    15880    1   CALL ASH$ERROR(ERR_CODE);

  15880  4 000612   000023 630400 5                  EPPR0   19
         4 000613   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000614   000000 701000 xent               TSX1    ASH$ERROR
         4 000615   000000 011000                    NOP     0

      282    15881    1   RETURN;

  15881  4 000616   000000 702200 xent               TSX2  ! X66_ARET

  15879  4 000617                       DEQ_ERR      null
  15879  4 000617                       ENQ_ERR2     null
  15879  4 000617                       DEL_ERR      null
  15879  4 000617                       ERROR        null
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:39   
      283    15882    1   DEQ_ERR: ;
      284    15883    1   ENQ_ERR2: ;
      285    15884    1   DEL_ERR: ;
      286    15885    1   ERROR: ;
      287    15886    1   CALL ASH$ERROR( ERR_CODE ) ;

  15886  4 000617   000023 630400 5                  EPPR0   19
         4 000620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000621   000000 701000 xent               TSX1    ASH$ERROR
         4 000622   000000 011000                    NOP     0

      288    15887    1   RETURN ;

  15887  4 000623   000000 702200 xent               TSX2  ! X66_ARET
      289    15888                                                              /**/
      290    15889    1   END   ASR$R_TERMINAL ;
      291    15890        %EOD ;

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:40   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_TERMINAL.
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:41   

 **** Variables and constants ****

  ****  Section 002  Data  ASR$R_TERMINAL

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/c STRC(171)   r     1 CONFIG_KEY                10-0-0/w STRC(162)   r     1 KL_TERM_KEY
     0-0-0/w STRC(90)    r     1 TERM_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN        r     1 ARS                        5-0-0/w PTR         r     1 BLK$
    16-0-0/w UBIN        r     1 DEVNUM                    23-0-0/b BIT         r     1 DEVS_WRITTEN
    17-0-0/w PTR         r     1 HASPDEV$                  13-0-0/w UBIN        r     1 I
    14-0-0/w UBIN        r     1 J                         12-0-0/w UBIN        r     1 NUM_DEVS
    15-0-0/w PTR         r     1 START$                     3-0-0/w PTR         r     1 TREC$
    10-0-0/w UBIN        r     1 TWSN#                     11-0-0/c CHAR(4)     r     1 TWSNC
     4-0-0/w PTR         r     1 TWSNR$                     7-0-0/w UBIN        r     1 TWSN_ARS
    22-0-0/b BIT         r     1 WRITE_DEVS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 AS_BLANK                   0-0-0/w STRC(369)   r     1 AS_FIELD1
     0-0-0/w STRC(369)   r     1 AS_FIELD2                  0-0-0/w STRC(369)   r     1 AS_FIELD3
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DSEG1$
     0-0-0/w UBIN        r     1 DSEG1SIZE                  0-0-0/w PTR         r     1 DSEG2$
     0-0-0/w UBIN        r     1 DSEG2SIZE                  0-0-0/b BIT         r     1 DSEG_FLG
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/b STRC        r     1 MERR_CODE
     0-0-0/w PTR         r     1 NODE$                      0-0-0/c STRC(378)   r     1 USERS_KEY

PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:42   
  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(2412)  r     1 KL$TREC                    0-0-0/w STRC(576)   r     1 KL$TWSNREC
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASR$R_TERMINAL requires 404 words for executable code.
   Procedure ASR$R_TERMINAL requires 28 words of local(AUTO) storage.
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:43   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:44   
          MINI XREF LISTING

ARS
     14761**DCL     15637<<ASSIGN  15638<>CALL
ASA_BRKS_LOC
     11901**DCL     11901--REDEF
ASB$CLOSE_NETCON
     14921**DCL-ENT 15827--CALL
ASB$DELREC_HLP
     14888**DCL-ENT 15761--CALL    15797--CALL    15860--CALL
ASB$DELREC_NETCON
     14918**DCL-ENT 15746--CALL    15820--CALL
ASB$DEQ_HLP
     14897**DCL-ENT 15762--CALL    15876--CALL
ASB$ENQ_HLP
     14894**DCL-ENT 15724--CALL    15760--CALL    15859--CALL
ASB$GETSEG
     14891**DCL-ENT 15588--CALL
ASB$READ_HLP
     14909**DCL-ENT 15638--CALL    15725--CALL
ASB$WRITE_HLP
     14912**DCL-ENT 15794--CALL
ASB$WRITE_LO
     14915**DCL-ENT 15789--CALL
ASH$ERROR
     14900**DCL-ENT 15602--CALL    15627--CALL    15659--CALL    15682--CALL    15709--CALL    15880--CALL
     15886--CALL
ASH$INFO
     14906**DCL-ENT 15782--CALL    15812--CALL    15869--CALL
ASH$WARN
     14903**DCL-ENT 15849--CALL
ASR$R_DEVWSN
     14924**DCL-ENT 15764--CALL
AS_BLANK
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:45   
     11761**DCL     15644>>CALLBLT 15689>>CALLBLT 15692>>CALLBLT 15789<>CALL    15798>>CALLBLT
AS_DEFAULT.BANNER_PERM
     12594**DCL     12595--REDEF
AS_DEFAULT.BUDGET.MACCT
     12499**DCL     12503--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     12512**DCL     12515--REDEF
AS_DEFAULT.BUDGET.PACCUM
     12495**DCL     12497--REDEF
AS_DEFAULT.BUDGET.PMAXC
     12490**DCL     12492--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     12610**DCL     12611--REDEF   12612--REDEF
AS_DEFAULT_DREC.PASSWORD
     13864**DCL     13868--REDEF
AS_DEFAULT_DREC.RENAME
     13887**DCL     13888--REDEF
AS_DFLT.BANNER_PERM
     12416**DCL     12417--REDEF
AS_DFLT.BUDGET.MACCT
     12321**DCL     12325--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     12334**DCL     12337--REDEF
AS_DFLT.BUDGET.PACCUM
     12317**DCL     12319--REDEF
AS_DFLT.BUDGET.PMAXC
     12312**DCL     12314--REDEF
AS_DFLT.SETUP_CHRA.TXT
     12432**DCL     12433--REDEF   12434--REDEF
AS_FE_MODE
     11767**DCL     11768--REDEF
AS_FIELD1.COUNT
     11898**DCL     15645<<ASSIGN  15690<<ASSIGN  15799<<ASSIGN  15837<<ASSIGN
AS_FIELD1.TEXT
     11898**DCL     15646<<ASSIGN  15691<<ASSIGN  15800<<ASSIGN  15838<<ASSIGN
AS_FIELD2.COUNT
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:46   
     11898**DCL     15693<<ASSIGN
AS_FIELD2.TEXT
     11898**DCL     15694<<ASSIGN
AS_FIELD3.COUNT
     11899**DCL     15695<<ASSIGN
AS_FIELD3.TEXT
     11899**DCL     15696<<ASSIGN
AS_MODE
     11764**DCL     11766--REDEF
AS_MOD_USER.ACCESS
     14629**DCL     14630--REDEF
AS_MOD_USER.BANNER
     14616**DCL     14617--REDEF
AS_MOD_USER.BANNER_PERM
     14618**DCL     14619--REDEF
AS_MOD_USER.BILL
     14624**DCL     14625--REDEF
AS_MOD_USER.CPROC
     14620**DCL     14621--REDEF
AS_MOD_USER.FEBILL
     14700**DCL     14701--REDEF
AS_MOD_USER.FECXTMEM
     14717**DCL     14718--REDEF
AS_MOD_USER.FEMINTS
     14702**DCL     14703--REDEF
AS_MOD_USER.FEMMEM
     14713**DCL     14714--REDEF
AS_MOD_USER.FEMTIME
     14711**DCL     14712--REDEF
AS_MOD_USER.FEPPRIV
     14708**DCL     14710--REDEF
AS_MOD_USER.FEPRIV
     14705**DCL     14707--REDEF
AS_MOD_USER.FORCE_BIT
     14614**DCL     14615--REDEF
AS_MOD_USER.KEY
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:47   
     14696**DCL     14698--REDEF
AS_MOD_USER.LASTCPROC
     14622**DCL     14623--REDEF
AS_MOD_USER.LIMITS.DO_
     14670**DCL     14671--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     14686**DCL     14687--REDEF
AS_MOD_USER.LIMITS.LO
     14666**DCL     14667--REDEF
AS_MOD_USER.LIMITS.MEM
     14662**DCL     14663--REDEF
AS_MOD_USER.LIMITS.MPRIO
     14690**DCL     14691--REDEF
AS_MOD_USER.LIMITS.PDIS
     14678**DCL     14679--REDEF
AS_MOD_USER.LIMITS.PO
     14674**DCL     14675--REDEF
AS_MOD_USER.LIMITS.TDIS
     14682**DCL     14683--REDEF
AS_MOD_USER.LIMITS.TIME
     14658**DCL     14659--REDEF
AS_MOD_USER.MAXENQ
     14639**DCL     14640--REDEF
AS_MOD_USER.PERM_BIT
     14612**DCL     14613--REDEF
AS_MOD_USER.PPRIV
     14634**DCL     14636--REDEF
AS_MOD_USER.PRIOB
     14641**DCL     14642--REDEF
AS_MOD_USER.PRIV
     14631**DCL     14633--REDEF
AS_MOD_USER.QUAN
     14637**DCL     14638--REDEF
AS_MOD_USER.SETUP
     14610**DCL     14611--REDEF
AS_PROJECT.BANNER_PERM
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:48   
     12950**DCL     12951--REDEF
AS_PROJECT.BUDGET.MACCT
     12855**DCL     12859--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12868**DCL     12871--REDEF
AS_PROJECT.BUDGET.PACCUM
     12851**DCL     12853--REDEF
AS_PROJECT.BUDGET.PMAXC
     12846**DCL     12848--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12966**DCL     12967--REDEF   12968--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     13128**DCL     13129--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     13033**DCL     13037--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     13046**DCL     13049--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     13029**DCL     13031--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     13024**DCL     13026--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     13144**DCL     13145--REDEF   13146--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     14350**DCL     14354--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     14373**DCL     14374--REDEF
AS_PROJECT_DREC.PASSWORD
     14188**DCL     14192--REDEF
AS_PROJECT_DREC.RENAME
     14211**DCL     14212--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12772**DCL     12773--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     12677**DCL     12681--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:49   
     12690**DCL     12693--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     12673**DCL     12675--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     12668**DCL     12670--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12788**DCL     12789--REDEF   12790--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     14026**DCL     14030--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     14049**DCL     14050--REDEF
AS_USERS.BANNER_PERM
     12238**DCL     12239--REDEF
AS_USERS.BUDGET.MACCT
     12143**DCL     12147--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     12156**DCL     12159--REDEF
AS_USERS.BUDGET.PACCUM
     12139**DCL     12141--REDEF
AS_USERS.BUDGET.PMAXC
     12134**DCL     12136--REDEF
AS_USERS.SETUP_CHRA.TXT
     12254**DCL     12255--REDEF   12256--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     13306**DCL     13307--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     13211**DCL     13215--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     13224**DCL     13227--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     13207**DCL     13209--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     13202**DCL     13204--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     13322**DCL     13323--REDEF   13324--REDEF
B$ALT.CODE
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:50   
     15572**DCL     15572--REDEF   15573--REDEF   15573--REDEF
B$ALT.ERR
     15573**DCL     15879>>ASSIGN
B$ALT.ERR.ERR#
     15574**DCL     15574--REDEF
B$ALT.EVID
     15573**DCL     15573--REDEF   15573--REDEF
B$TCB.ALT$
     15568**DCL     15879>>ASSIGN
B$TCB$
     15566**DCL     15879>>ASSIGN
BLK$
     14760**DCL     14985--IMP-PTR 15608<<ASSIGN  15609>>IF      15633>>ASSIGN  15633>>ASSIGN  15667<<ASSIGN
     15668>>IF      15687>>IF      15687>>IF      15695>>ASSIGN  15696>>ASSIGN  15696>>ASSIGN  15837>>ASSIGN
     15838>>ASSIGN  15838>>ASSIGN
CONFIG_KEY
     14802**DCL     15746--CALL
CONFIG_KEY.TERMID.LEV
     14824**DCL     15732<<ASSIGN
CONFIG_KEY.TERMID.TERM
     14824**DCL     14833--REDEF
CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT
     14827**DCL     15743<<ASSIGN  15744<<ASSIGN
CONFIG_KEY.TERMID.TERM.TERM_NAME
     14833**DCL     15733<<ASSIGN
DEL_ERR
     15879**LABEL   15797--CALLALT 15860--CALLALT
DEQ_ERR
     15879**LABEL   15876--CALLALT
DEVNUM
     14769**DCL     15731<<ASSIGN  15743>>ASSIGN  15744>>ASSIGN  15745<<ASSIGN  15745>>ASSIGN  15768>>IF
DEVS_WRITTEN
     14774**DCL     15735<<ASSIGN  15765<<ASSIGN  15765>>ASSIGN  15768>>IF
DSEG1$
     11902**DCL     15636>>ASSIGN
DSEG1SIZE
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:51   
     11903**DCL     15637>>ASSIGN
DSEG2$
     11903**DCL     15722>>ASSIGN
DSEG2SIZE
     11903**DCL     15723>>ASSIGN
DSEG_FLG
     11902**DCL     15587>>IF
ENQ_ERR2
     15879**LABEL   15724--CALLALT 15760--CALLALT 15859--CALLALT
ERROR
     15879**LABEL   15833--GOTO    15857--GOTO
ERR_CODE
     11896**DCL     11897--REDEF   15879<<ASSIGN  15880<>CALL    15886<>CALL
HASPDEV$
     14770**DCL     15346--IMP-PTR 15730<<ASSIGN
I
     14766**DCL     15644<<CALLBLT 15645>>ASSIGN  15689<<CALLBLT 15690>>ASSIGN  15692<<CALLBLT 15693>>ASSIGN
     15736<<DOINDEX 15737>>IF      15737>>IF      15737>>IF      15741>>ASSIGN  15753>>DOINDEX 15759<<ASSIGN
     15759>>ASSIGN  15798<<CALLBLT 15799>>ASSIGN
J
     14767**DCL     15753<<DOINDEX 15754>>ASSIGN  15754>>ASSIGN
KL$HASPDEV.TERMID.TERM
     15496**DCL     15505--REDEF
KL$TREC
     15030**DCL     15715--ASSIGN
KL$TREC.ATYP
     15035**DCL     15639>>IF
KL$TREC.PASSWORD
     15088**DCL     15092--REDEF
KL$TREC.RENAME
     15111**DCL     15112--REDEF
KL$TREC.SNAME
     15125**DCL     15687>>IF      15692>>CALLBLT 15694>>ASSIGN
KL$TREC.TNAME
     15121**DCL     15689>>CALLBLT 15691>>ASSIGN
KL$TREC.TWSN#
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:52   
     15085**DCL     15717>>ASSIGN
KL$TWSNREC.DEVS
     15310**DCL     15754<<ASSIGN  15754>>ASSIGN  15758--ASSIGN
KL$TWSNREC.DEVS.ACCT
     15324**DCL     15741>>ASSIGN
KL$TWSNREC.DEVS.IOM_CONNECTED
     15319**DCL     15737>>IF
KL$TWSNREC.DEVS.TDEV
     15318**DCL     15737>>IF
KL$TWSNREC.DEVS.TERM
     15325**DCL     15737>>IF
KL$TWSNREC.NDEV
     15309**DCL     15727>>ASSIGN  15756<<ASSIGN  15756>>ASSIGN  15757>>ASSIGN
KL_DEFAULT.PASSWORD
     14512**DCL     14516--REDEF
KL_DEFAULT.RENAME
     14535**DCL     14536--REDEF
KL_DFLT.PASSWORD
     13702**DCL     13706--REDEF
KL_DFLT.RENAME
     13725**DCL     13726--REDEF
KL_DREC.PASSWORD
     13540**DCL     13544--REDEF
KL_DREC.RENAME
     13563**DCL     13564--REDEF
KL_DREC_CNT.PASSWORD
     13427**DCL     13431--REDEF
KL_DREC_CNT.RENAME
     13450**DCL     13451--REDEF
KL_TERM_KEY
     14849**DCL     15820--CALL
KL_TERM_KEY.TERMID.TERM
     14870**DCL     14879--REDEF
KL_TERM_KEY.TERMID.TERM.TERM_NAME
     14879**DCL     15819<<ASSIGN
MERR_CODE.CODE
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:53   
     11897**DCL     15748>>IF      15822>>IF      15833>>IF      15857>>IF
NETCON_ERR
     15858**LABEL   15750--GOTO    15824--GOTO    15827--CALLALT
NODE$
     11894**DCL     14938--IMP-PTR 15608>>ASSIGN  15665>>IF      15667>>ASSIGN
NUM_DEVS
     14765**DCL     15727<<ASSIGN  15736>>DOINDEX 15753>>DOINDEX 15757<<ASSIGN
OUT$SYM.COUNT
     15008**DCL     15011--IMP-SIZ 15609>>IF      15633>>ASSIGN  15668>>IF      15687>>IF      15695>>ASSIGN
     15696>>ASSIGN  15837>>ASSIGN  15838>>ASSIGN
OUT$SYM.TEXT
     15011**DCL     15633>>ASSIGN  15687>>IF      15696>>ASSIGN  15838>>ASSIGN
P$NODE.SUBLK$
     14971**DCL     15608>>ASSIGN  15608>>ASSIGN  15667>>ASSIGN  15667>>ASSIGN
P$NODE.SUBNODES
     14950**DCL     15665>>IF
PROJ_KEY.TEXT
     11774**DCL     11774--REDEF
PROJ_KEY.TXT.PROJECT
     11774**DCL     11774--REDEF
READ_TREC_ERR
     15819**LABEL   15638--CALLALT
READ_TWSN_ERR
     15838**LABEL   15725--CALLALT
REMEM_VAR
     11900**DCL     11900--REDEF
REM_FCMD
     11900**DCL     11901--REDEF
START$
     14768**DCL     15715<<ASSIGN  15730>>ASSIGN
TERM_KEY
     14784**DCL     15634>>ASSIGN  15796>>ASSIGN  15858>>ASSIGN
TERM_KEY.CNT
     14785**DCL     15632<<ASSIGN
TERM_KEY.TXT.ACCT
     14787**DCL     15633<<ASSIGN  15644>>CALLBLT 15646>>ASSIGN  15733>>ASSIGN  15737>>IF      15819>>ASSIGN
PL6.E3A0      #001=ASR$R_TERMINAL File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:52 Page:54   
TREC$
     14758**DCL     15030--IMP-PTR 15636<<ASSIGN  15638<>CALL    15639>>IF      15687>>IF      15689>>CALLBLT
     15691>>ASSIGN  15692>>CALLBLT 15694>>ASSIGN  15715>>ASSIGN  15717>>ASSIGN
TWSN#
     14763**DCL     15718<<CALLBLT
TWSNC
     14764**DCL     15717<<ASSIGN  15718>>CALLBLT 15720>>CALLBLT 15792>>CALLBLT
TWSNR$
     14759**DCL     15306--IMP-PTR 15722<<ASSIGN  15725<>CALL    15727>>ASSIGN  15737>>IF      15737>>IF
     15737>>IF      15741>>ASSIGN  15754>>ASSIGN  15754>>ASSIGN  15756>>ASSIGN  15756>>ASSIGN  15757>>ASSIGN
     15794<>CALL
TWSN_ARS
     14762**DCL     15723<<ASSIGN  15725<>CALL    15758<<ASSIGN  15758>>ASSIGN  15794<>CALL
USERS_KEY
     11771**DCL     15634<<ASSIGN  15796<<ASSIGN  15858<<ASSIGN
USERS_KEY.COUNT
     11771**DCL     15721<<ASSIGN  15742<<ASSIGN  15793<<ASSIGN
USERS_KEY.TEXT
     11771**DCL     11772--REDEF   11772--REDEF   11772--REDEF   11773--REDEF
USERS_KEY.TXTC
     11772**DCL     15720<<CALLBLT 15741<<ASSIGN  15792<<CALLBLT
USERS_KEY.UKEY.ACCT
     11772**DCL     15798>>CALLBLT 15800>>ASSIGN
WRITE_DEVS
     14773**DCL     15734<<ASSIGN  15763<<ASSIGN  15764<>CALL    15765>>ASSIGN

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:55   
      292        1        /*M* ASR$R_STATION - processes the REMOVE STATION command.  */
      293        2        /*T***********************************************************/
      294        3        /*T*                                                         */
      295        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      296        5        /*T*                                                         */
      297        6        /*T***********************************************************/
      298        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
      299        8              ECU=3,CSU=3,SDI=3                                           */
      300        9                                                              /**/
      301       10        ASR$R_STATION: PROC ;
      302       11                                                              /**/
      303       12        /********************************************************************/
      304       13        /*   Include files   include files   include files   include files   */
      305       14        /*********************************************************************/
      306       15                                                              /**/
      307       16              %INCLUDE  CP_6 ;
      308       97              %INCLUDE CP_6_SUBS ;
      309      637              %INCLUDE AS_PERR_C ;
      310     1239              %INCLUDE KL_CONFIG_M;
      311     2001              %INCLUDE B_ERRORS_C;
      312     3128              %INCLUDE  AS_ENTRIES_M;
      313     4178              %INCLUDE  AS_SUPER_C ;
      314     4613              %INCLUDE  AS_SUBS_C ;
      315     6027              %INCLUDE  AS_MAC_C ;
      316     6107              %INCLUDE  KL_SUPER_C ;
      317     9009              %INCLUDE  XU_MACRO_C ;
      318    12115              %INCLUDE  XU_FORMAT_C ;
      319    12277              %INCLUDE  AS_SUPER_R ;
      320    15293
      321    15294        /*********************************************************************/
      322    15295        /*   Auto data       auto data       auto data       auto data       */
      323    15296        /*********************************************************************/
      324    15297                                                              /**/
      325    15298    1   DCL TREC$ PTR ;
      326    15299    1   DCL TWSNR$ PTR ;
      327    15300    1   DCL BLK$ PTR ;
      328    15301    1   DCL ARS UBIN WORD ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:56   
      329    15302    1   DCL TWSN_ARS UBIN WORD ;
      330    15303    1   DCL TWSN# UBIN WORD ;
      331    15304    1   DCL TWSNC CHAR(4) ;
      332    15305    1   DCL NUM_DEVS UBIN WORD ;
      333    15306    1   DCL I SBIN WORD;
      334    15307    1   DCL J UBIN WORD ;
      335    15308    1   DCL DEVNUM UBIN;
      336    15309    1   DCL TWSNCHN$ PTR ;
      337    15310    1   DCL WSNCVT$ PTR ;
      338    15311    1   DCL MORE BIT(1) ;
      339    15312    1   DCL FOUND BIT(1) ;
      340    15313    1   DCL WRITE_DEVS BIT (1);
      341    15314    1   DCL DEVS_WRITTEN BIT (1);
      342    15315    1   DCL REM_TIGR BIT (1) ALIGNED;
      343    15316    1   DCL WSN_INDEX UBIN;
      344    15317    1   DCL TYPE CHAR(2) ;
      345    15318    1   DCL NUM CHAR(2) ;
      346    15319    1   DCL CNT UBIN WORD ;
      347    15320    1   DCL TERM_CNT UBIN BYTE;
      348    15321    1   DCL TERM_LIST(0:49) CHAR(8) ;
      349    15322    1   DCL TERM_EXT BIT(1);
      350    15323
      351    15324        /*********************************************************************/
      352    15325        /*   Static data     static data     static data     static data     */
      353    15326        /*********************************************************************/
      354    15327                                                              /**/
      355    15328    1   DCL 1 STAT_KEY ALIGNED STATIC ,
      356    15329    1          2 CNT UBIN BYTE UNAL INIT( 15),
      357    15330    1          2 TXT UNAL ,
      358    15331    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
      359    15332    1             3 ASTR CHAR(7) UNAL INIT('STATION');
      360    15333        %KL$CONFIG_KEY (NAME=CONFIG_KEY,STCLASS=STATIC);
      361    15380        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
      362    15426
      363    15427        /********************************************************************/
      364    15428        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      365    15429        /*********************************************************************/
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:57   
      366    15430                                                              /**/
      367    15431        %ASB$DELREC_HLP ;
      368    15434        %ASB$GETSEG ;
      369    15437        %ASB$ENQ_HLP ;
      370    15440        %ASB$DEQ_HLP ;
      371    15443        %ASH$ERROR ;
      372    15446        %ASH$WARN ;
      373    15449        %ASH$INFO ;
      374    15452        %ASB$READ_HLP ;
      375    15455        %ASB$WRITE_HLP ;
      376    15458        %ASB$WRITE_LO ;
      377    15461        %ASR$R_DEVWSN ;
      378    15464        %ASA$ERROR ;
      379    15467        %ASB$DELREC_NETCON ;
      380    15470        %ASB$CLOSE_NETCON ;
      381    15473        %ASC$CHECK_TIGR_WSN ;
      382    15476
      383    15477        /*********************************************************************/
      384    15478        /*   Local based     local based     local based     local based     */
      385    15479        /*********************************************************************/
      386    15480                                                              /**/
      387    15481        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      388    15482                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      389    15527        %PARSE$SYM( NAME = OUT$SYM ,
      390    15528                    STCLASS="BASED(BLK$)") ;
      391    15566        %KL_DREC ( NAME = KL$TREC ,
      392    15567                   LAST = ";" ,
      393    15568                   STCLASS="BASED( TREC$ )" );
      394    15681        %KL_TWSNREC(  NAME = KL$TWSNREC ,
      395    15682                      STCLASS="BASED( TWSNR$ )") ;
      396    15707        %KL_WSNCVT( NAME = KL$WSNCVT ,
      397    15708                    STCLASS="BASED( WSNCVT$ )") ;
      398    15715
      399    15716    1   DCL B$TCB$ PTR SYMREF;
      400    15717        %B$TCB;
      401    15720        %B$ALT;
      402    15728        %EJECT;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:58   
      403    15729        /*********************************************************************/
      404    15730        /*   Procedure       procedure       procedure       procedure       */
      405    15731        /*********************************************************************/
      406    15732                                                              /**/
      407    15733        /*
      408    15734            ***            Begin procedure                    ***
      409    15735        */
      410    15736    1   REM_TIGR = %NO#;
      411    15737    1   GOTO COMMON;
      412    15738
      413    15739    1   ASR$R_STAT_TIGR: ENTRY;
      414    15740    1   REM_TIGR = %YES#;
      415    15741
      416    15742    1   COMMON: ;
      417    15743                                                              /* Get data seg. */
      418    15744    1   IF NOT DSEG_FLG THEN
      419    15745    1      CALL ASB$GETSEG WHENALTRETURN
      420    15746    2      DO;
      421    15747              %SCREAM( ERR#=E$GETSEGERR , LEVEL=ERROR, MID='R' );
      422    15762    2         RETURN ;
      423    15763    2         END; /*  Whenaltreturn  */
      424    15764                                                              /* Get station name */
      425    15765    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
      426    15766    1   IF OUT$SYM.COUNT > 8
      427    15767    2   THEN DO ;
      428    15768           %SCREAM( ERR#=E$SNAMETOOBIG,LEVEL=ERROR, MID='R');
      429    15783    2      RETURN ;
      430    15784    2      END ; /* Then do */
      431    15785
      432    15786    1   CALL ASC$CHECK_TIGR_WSN (OUT$SYM.TEXTC$,WSN_INDEX)
      433    15787    1   WHENRETURN
      434    15788    2   DO;
      435    15789    2      IF NOT REM_TIGR THEN
      436    15790    3      DO;
      437    15791        /*E* ERROR:   ASR-E$CANTREMTIGRSTA-C
      438    15792             MESSAGE: You are not allowed to remove a TIGR defined station.
      439    15793             MESSAGE1: I suggest you RECONFIGURE the specified station.
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:59   
      440    15794        */
      441    15795              %SCREAM( ERR#=E$CANTREMTIGRSTA, LEVEL=ERROR , MID ='R' );
      442    15810    3         RETURN;
      443    15811    3         END; /* If found and command not reconfigure  */
      444    15812    2      END; /*  Whenreturn  */
      445    15813    1   WHENALTRETURN
      446    15814    2   DO;
      447    15815
      448    15816        /*
      449    15817          If the command was a reconfigure and the station name was not found
      450    15818          in :CONFIG, then the error was reported in RECONFIG_TIGR_STATION.
      451    15819          So i will not check for that error here.
      452    15820        */
      453    15821
      454    15822    2      END; /*  Whenaltreturn  */
      455    15823    1   STAT_KEY.TXT.ACCT = OUT$SYM.TEXT ;
      456    15824    1   USERS_KEY = STAT_KEY ;
      457    15825                                                              /* Pick up station record */
      458    15826    1   TREC$ = DSEG1$ ;
      459    15827    1   ARS = DSEG1SIZE ;
      460    15828    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;
      461    15829    1   IF KL$TREC.ATYP ~= %KLAT_STA#
      462    15830    2   THEN DO ;
      463    15831        /*E*  ERROR:    ASR-E$NOTSTATION-C
      464    15832              MESSAGE0: %%U1 %is not a station.
      465    15833        */
      466    15834    2      CALL INDEX( I, AS_BLANK, STAT_KEY.TXT.ACCT );
      467    15835    2      AS_FIELD1.COUNT = I ;
      468    15836    2      AS_FIELD1.TEXT = STAT_KEY.TXT.ACCT ;
      469    15837           %SCREAM( ERR#=E$NOTSTATION , LEVEL=ERROR, MID='R' );
      470    15852    2      RETURN ;
      471    15853    2      END ; /* Then do */
      472    15854                                                              /* Get twsn number */
      473    15855    1   TWSNC = KL$TREC.TWSN# ;
      474    15856    1   CALL CHARBIN( TWSN#, TWSNC ) ;
      475    15857                                                              /* Pick up twsn record */
      476    15858    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:60   
      477    15859    1   USERS_KEY.COUNT = 8 ;
      478    15860    1   TWSNR$ = DSEG2$ ;
      479    15861    1   TWSN_ARS = DSEG2SIZE ;
      480    15862    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;
      481    15863    1   CALL ASB$READ_HLP( TWSNR$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;
      482    15864                                                              /* How many devs? */
      483    15865    1   NUM_DEVS = KL$TWSNREC.NDEV ;
      484    15866                                                              /* Get rid of devices
      485    15867                                                                   and consoles. */
      486    15868    1   WRITE_DEVS = '1'B;
      487    15869    1   DEVS_WRITTEN = '0'B; /* 1- wrote devs, 0- no devs to write */
      488    15870    1   DEVNUM = 1;
      489    15871    1   CONFIG_KEY.TERMID.LEV = 2;
      490    15872    1   TERM_CNT = 0 ;
      491    15873    2   DO I = 0 TO NUM_DEVS-1 ;
      492    15874    2      TYPE = KL$TWSNREC.DEVS.TYP( I ) ;
      493    15875    2      NUM = KL$TWSNREC.DEVS.NUM( I ) ;
      494    15876    2      FOUND = AS_FALSE ;
      495    15877    2      IF ~KL$TWSNREC.DEVS.IOM_CONNECTED(I)
      496    15878    3      THEN DO ;
      497    15879    3         USERS_KEY.TXTC = KL$TWSNREC.DEVS.ACCT(I) ;
      498    15880    3         USERS_KEY.COUNT = 8 ;
      499    15881    3         IF KL$TWSNREC.DEVS.TDEV(I)
      500    15882    4         THEN DO ;                   /* In ss list. */
      501    15883    4            CONFIG_KEY.TERMID.TERM.TERM_NAME = KL$TWSNREC.DEVS.TERM(I) ;
      502    15884    4            CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(0) = DEVNUM/256;
      503    15885    4            CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(1) = MOD(DEVNUM,256);
      504    15886    4            DEVNUM = DEVNUM + 1;
      505    15887    4            CALL ASB$DELREC_NETCON(VECTOR(CONFIG_KEY))
      506    15888    5            WHENALTRETURN DO;
      507    15889    5               IF MERR_CODE.CODE ~= %E$NOKEY
      508    15890    6               THEN DO;
      509    15891    6                  GOTO NETCON_ERR;
      510    15892    6                  END;
      511    15893    5               END;
      512    15894    4            FOUND = AS_TRUE ;
      513    15895    4            TERM_EXT = AS_FALSE ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:61   
      514    15896    5            DO J = 0 TO TERM_CNT-1 ;
      515    15897    5               IF TERM_LIST(J) = KL$TWSNREC.DEVS.TERM(I)
      516    15898    6               THEN DO;
      517    15899    6                  J = TERM_CNT;
      518    15900    6                  TERM_EXT = AS_TRUE ;
      519    15901    6                  END ;
      520    15902    5               END;
      521    15903    4            IF NOT TERM_EXT
      522    15904    5            THEN DO;
      523    15905    5               TERM_LIST(TERM_CNT) = KL$TWSNREC.DEVS.TERM(I) ;
      524    15906    5               TERM_CNT = TERM_CNT + 1 ;
      525    15907    5               END;
      526    15908    4            END ; /* Then do */
      527    15909    4         ELSE DO ;
      528    15910    4            USERS_KEY.UKEY.UNAME = '*' ;
      529    15911    4            USERS_KEY.COUNT = 9 ;
      530    15912    4            END ; /* Else do */
      531    15913    3         CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;
      532    15914    3         CALL ASB$DELREC_HLP ;
      533    15915    3         CALL ASB$DEQ_HLP ;
      534    15916    3         WRITE_DEVS = '1'B;  /* Write affected wsns */
      535    15917    3         CALL ASR$R_DEVWSN (WRITE_DEVS);
      536    15918    3         DEVS_WRITTEN = DEVS_WRITTEN | WRITE_DEVS;
      537    15919    3         IF FOUND = AS_FALSE
      538    15920    4         THEN DO ;
      539    15921    4            AS_FIELD1.COUNT = 8;
      540    15922    4            AS_FIELD1.TEXT = USERS_KEY.TXTC;
      541    15923    4            IF TYPE = 'OC'
      542    15924    5            THEN DO ;
      543    15925    5               AS_FIELD1.COUNT = 25;
      544    15926    5               CALL CONCAT (AS_FIELD1.TEXT, 'Console ',
      545    15927    5                    SUBSTR (USERS_KEY.TXTC, 0, 8),
      546    15928    5                    ' removed.        ');
      547    15929    5               CALL ASB$WRITE_LO (AS_FIELD1.TEXT, 25);
      548    15930    5               END ;
      549    15931    5            ELSE DO ;
      550    15932    5               AS_FIELD1.COUNT = 24;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:62   
      551    15933    5               CALL CONCAT (AS_FIELD1.TEXT, 'Device ',
      552    15934    5                    SUBSTR (USERS_KEY.TXTC, 0, 8),
      553    15935    5                    ' removed.      ');
      554    15936    5               CALL ASB$WRITE_LO (AS_FIELD1.TEXT, 24);
      555    15937    5               END ;
      556    15938    4            END ; /* Then do */
      557    15939    3         END;  /*  Then do */
      558    15940    2      END ; /* Do i */
      559    15941    1   IF ((DEVNUM > 1) AND (DEVS_WRITTEN))
      560    15942    2   THEN DO; /* At least one call to devwsn was made. */
      561    15943        /*    ERROR: ASR-E$DEVREMOVED_WARN_WSN-0
      562    15944         MESSAGE:WARNING -to maintain wsn and device consistancy, above wsn's should be rebu
             15944        ilt.
      563    15945              MESSAGE1: There are still references to this device in the stated wsn records.
      564    15946        */
      565    15947           %SCREAM (ERR#=E$DEVREMOVED_WARN_WSN,LEVEL=INFO,MID='R');
      566    15962    2      CALL ASB$WRITE_LO( AS_BLANK, 1 );
      567    15963    2      END;
      568    15964                                                              /* Delete TWSN#### */
      569    15965    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;
      570    15966    1   USERS_KEY.COUNT = 8 ;
      571    15967    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;
      572    15968                                                              /* Delete station */
      573    15969    1   USERS_KEY = STAT_KEY ;
      574    15970    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;
      575    15971    1   CALL INDEX( I, AS_BLANK, USERS_KEY.UKEY.ACCT ) ;
      576    15972    1   AS_FIELD1.COUNT = I ;
      577    15973    1   AS_FIELD1.TEXT = USERS_KEY.UKEY.ACCT ;
      578    15974        /*E*  ERROR:    ASR-00005-C
      579    15975              MESSAGE:  Station% %U1% removed.
      580    15976        */
      581    15977        %SCREAM( ERR#=5 , LEVEL=INFO, MID='R' );
      582    15992    2   DO I = 0 TO TERM_CNT-1 ;
      583    15993    2      USERS_KEY.UKEY.ACCT = TERM_LIST(I);
      584    15994    2      USERS_KEY.UKEY.UNAME = '*';  /* Term keys end with an * */
      585    15995    2      USERS_KEY.COUNT = 9;  /* Thats the length of a term key */
      586    15996    2      CALL ASB$DELREC_HLP   ALTRET(DEL_ERR) ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:63   
      587    15997    2      KL_TERM_KEY.TERMID.TERM.TERM_NAME = STAT_KEY.TXT.ACCT ;
      588    15998    2      CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))
      589    15999    3      WHENALTRETURN DO;
      590    16000    3         IF MERR_CODE.CODE ~= %E$NOKEY
      591    16001    4         THEN DO;
      592    16002    4            GOTO NETCON_ERR;
      593    16003    4            END;
      594    16004    3         END;
      595    16005    2      CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);
      596    16006    2      CALL INDEX( J, AS_BLANK, USERS_KEY.UKEY.ACCT );
      597    16007    2      AS_FIELD1.COUNT = J ;
      598    16008    2      AS_FIELD1.TEXT = USERS_KEY.UKEY.ACCT ;
      599    16009           %SCREAM( ERR#=6, LEVEL=INFO, MID='R' );
      600    16024    2      END ;
      601    16025                                                              /* Update 'TERM' record */
      602    16026    1   WSNCVT$ = DSEG1$ ;
      603    16027    1   ARS = DSEG1SIZE ;
      604    16028    1   USERS_KEY.TXTC = 'TERM' ;
      605    16029    1   USERS_KEY.COUNT = 4 ;
      606    16030    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;
      607    16031    1   CALL ASB$READ_HLP( WSNCVT$, ARS, 1 ) ALTRET( READ_CVT_ERR ) ;
      608    16032                                                              /* Blank out station name */
      609    16033    1   FIND_STAT:
      610    16034    2   DO I = 0 TO KL$WSNCVT.LTWSN;
      611    16035    2      IF (STAT_KEY.TXT.ACCT = KL$WSNCVT.WSN (I) )
      612    16036    3      THEN DO;
      613    16037    3         KL$WSNCVT.WSN (I) = AS_BLANK;
      614    16038    3         EXIT FIND_STAT;
      615    16039    3         END;
      616    16040    2      END FIND_STAT; /* Do i */
      617    16041    1   I = KL$WSNCVT.LTWSN ;
      618    16042    2   DO WHILE KL$WSNCVT.WSN(I) = AS_BLANK;
      619    16043    2      I = I - 1;
      620    16044    2      END;   /*  While wsn(i) is blank  */
      621    16045    2   IF I >= 0 THEN DO;
      622    16046    2      KL$WSNCVT.LTWSN = I;
      623    16047    2      ARS = (LENGTHC(KL$WSNCVT.WSN(0)) * (i + 1)) + 8;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:64   
      624    16048    2      END;
      625    16049    2   ELSE DO;
      626    16050    2      KL$WSNCVT.LTWSN = 0;
      627    16051    2      ARS = 8;
      628    16052    2      END;
      629    16053    1   CALL ASB$WRITE_HLP( WSNCVT$, ARS ) ;
      630    16054    1   CALL ASB$DEQ_HLP ALTRET( DEQ_ERR ) ;
      631    16055                                                              /* All done */
      632    16056    1   RETURN ;
      633    16057                                                              /*  Errors  */
      634    16058                                                              /**/
      635    16059    1   READ_TREC_ERR: ;
      636    16060    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;
      637    16061    1   AS_FIELD1.COUNT = OUT$SYM.COUNT;
      638    16062    1   AS_FIELD1.TEXT  = OUT$SYM.TEXT;
      639    16063        %SCREAM( ERR#=E$TERMNOEXIST, MID='R', LEVEL=WARN );
      640    16078    1   RETURN;
      641    16079
      642    16080    1   READ_TWSN_ERR: ;
      643    16081    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;
      644    16082    1   USERS_KEY = STAT_KEY ;
      645    16083    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR2);
      646    16084    1   CALL ASB$DELREC_HLP ALTRET(DEL_ERR);
      647    16085        %SCREAM( ERR#=5, LEVEL=INFO, MID='R' );
      648    16100    1   CALL ASB$DEQ_HLP ALTRET(DEQ_ERR);
      649    16101    1   RETURN;
      650    16102    1   NETCON_ERR:;
      651    16103    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
      652    16104    1   CALL ASH$ERROR(ERR_CODE);
      653    16105    1   RETURN;
      654    16106    1   READ_CHN_ERR: ;
      655    16107    1   READ_CVT_ERR: ;
      656    16108    1   CALL ASA$ERROR( USERS_KEY, E$UNABLE_TO_READ_HLP );
      657    16109    1   RETURN;
      658    16110    1   DEQ_ERR: ;
      659    16111    1   ENQ_ERR2: ;
      660    16112    1   DEL_ERR: ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:65   
      661    16113    1   ERROR: ;
      662    16114    1   CALL ASH$ERROR( ERR_CODE ) ;
      663    16115    1   RETURN ;
      664    16116                                                              /**/
      665    16117    1   END   ASR$R_STATION ;
      666    16118        %EOD ;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:66   
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_STATION.

   Procedure ASR$R_STATION requires 552 words for executable code.
   Procedure ASR$R_STATION requires 132 words of local(AUTO) storage.

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:67   

 Object Unit name= ASR$R_STATION                              File name= ASR$R_HLP.:E05TOU
 UTS= JUL 29 '97 10:53:23.60 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none    14     16  ASR$R_STATION
    3  RoData even  UTS     20     24  ASR$R_STATION
    4   Proc  even  none   552   1050  ASR$R_STATION
    5  RoData even  none    27     33  ASR$R_STATION

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASR$R_STATION
     4      4                  yes      Std        0  ASR$R_STAT_TIGR
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:68   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       2 ASC$CHECK_TIGR_WSN
 yes     yes           Std       0 ASB$DELREC_HLP
         yes           Std       2 ASB$WRITE_LO
 yes     yes           Std       2 ASB$WRITE_HLP
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       3 ASB$READ_HLP
         yes           Std       1 ASR$R_DEVWSN
 yes     yes           Std       0 ASB$ENQ_HLP
 yes     yes           Std       1 ASB$DELREC_NETCON
         yes           Std       2 ASH$INFO
         yes           Std       3 ASA$ERROR
 yes     yes           Std       0 ASB$DEQ_HLP
         yes           Std       2 ASH$WARN
 yes     yes           Std       0 ASB$CLOSE_NETCON
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_BLANK                         r    AS_TRUE
r    AS_FALSE                         r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  USERS_KEY                             NODE$
     ERR_CODE                              AS_FIELD1                             REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          DSEG_FLG
     DSEG1$                                DSEG1SIZE                             DSEG2$
     DSEG2SIZE                             B$TCB$                                B_VECTNIL
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:69   

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:70   


      292        1        /*M* ASR$R_STATION - processes the REMOVE STATION command.  */
      293        2        /*T***********************************************************/
      294        3        /*T*                                                         */
      295        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      296        5        /*T*                                                         */
      297        6        /*T***********************************************************/
      298        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
      299        8              ECU=3,CSU=3,SDI=3                                           */
      300        9                                                              /**/
      301       10        ASR$R_STATION: PROC ;

     10  4 000000   000000 700200 xent  ASR$R_STATI* TSX0  ! X66_AUTO_0
         4 000001   000204 000000                    ZERO    132,0

      302       11                                                              /**/
      303       12        /********************************************************************/
      304       13        /*   Include files   include files   include files   include files   */
      305       14        /*********************************************************************/
      306       15                                                              /**/
      307       16              %INCLUDE  CP_6 ;
      308       97              %INCLUDE CP_6_SUBS ;
      309      637              %INCLUDE AS_PERR_C ;
      310     1239              %INCLUDE KL_CONFIG_M;
      311     2001              %INCLUDE B_ERRORS_C;
      312     3128              %INCLUDE  AS_ENTRIES_M;
      313     4178              %INCLUDE  AS_SUPER_C ;
      314     4613              %INCLUDE  AS_SUBS_C ;
      315     6027              %INCLUDE  AS_MAC_C ;
      316     6107              %INCLUDE  KL_SUPER_C ;
      317     9009              %INCLUDE  XU_MACRO_C ;
      318    12115              %INCLUDE  XU_FORMAT_C ;
      319    12277              %INCLUDE  AS_SUPER_R ;
      320    15293
      321    15294        /*********************************************************************/
      322    15295        /*   Auto data       auto data       auto data       auto data       */
      323    15296        /*********************************************************************/
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:71   
      324    15297                                                              /**/
      325    15298    1   DCL TREC$ PTR ;
      326    15299    1   DCL TWSNR$ PTR ;
      327    15300    1   DCL BLK$ PTR ;
      328    15301    1   DCL ARS UBIN WORD ;
      329    15302    1   DCL TWSN_ARS UBIN WORD ;
      330    15303    1   DCL TWSN# UBIN WORD ;
      331    15304    1   DCL TWSNC CHAR(4) ;
      332    15305    1   DCL NUM_DEVS UBIN WORD ;
      333    15306    1   DCL I SBIN WORD;
      334    15307    1   DCL J UBIN WORD ;
      335    15308    1   DCL DEVNUM UBIN;
      336    15309    1   DCL TWSNCHN$ PTR ;
      337    15310    1   DCL WSNCVT$ PTR ;
      338    15311    1   DCL MORE BIT(1) ;
      339    15312    1   DCL FOUND BIT(1) ;
      340    15313    1   DCL WRITE_DEVS BIT (1);
      341    15314    1   DCL DEVS_WRITTEN BIT (1);
      342    15315    1   DCL REM_TIGR BIT (1) ALIGNED;
      343    15316    1   DCL WSN_INDEX UBIN;
      344    15317    1   DCL TYPE CHAR(2) ;
      345    15318    1   DCL NUM CHAR(2) ;
      346    15319    1   DCL CNT UBIN WORD ;
      347    15320    1   DCL TERM_CNT UBIN BYTE;
      348    15321    1   DCL TERM_LIST(0:49) CHAR(8) ;
      349    15322    1   DCL TERM_EXT BIT(1);
      350    15323
      351    15324        /*********************************************************************/
      352    15325        /*   Static data     static data     static data     static data     */
      353    15326        /*********************************************************************/
      354    15327                                                              /**/
      355    15328    1   DCL 1 STAT_KEY ALIGNED STATIC ,
      356    15329    1          2 CNT UBIN BYTE UNAL INIT( 15),
      357    15330    1          2 TXT UNAL ,
      358    15331    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
      359    15332    1             3 ASTR CHAR(7) UNAL INIT('STATION');
      360    15333        %KL$CONFIG_KEY (NAME=CONFIG_KEY,STCLASS=STATIC);
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:72   
      361    15380        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
      362    15426
      363    15427        /********************************************************************/
      364    15428        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      365    15429        /*********************************************************************/
      366    15430                                                              /**/
      367    15431        %ASB$DELREC_HLP ;
      368    15434        %ASB$GETSEG ;
      369    15437        %ASB$ENQ_HLP ;
      370    15440        %ASB$DEQ_HLP ;
      371    15443        %ASH$ERROR ;
      372    15446        %ASH$WARN ;
      373    15449        %ASH$INFO ;
      374    15452        %ASB$READ_HLP ;
      375    15455        %ASB$WRITE_HLP ;
      376    15458        %ASB$WRITE_LO ;
      377    15461        %ASR$R_DEVWSN ;
      378    15464        %ASA$ERROR ;
      379    15467        %ASB$DELREC_NETCON ;
      380    15470        %ASB$CLOSE_NETCON ;
      381    15473        %ASC$CHECK_TIGR_WSN ;
      382    15476
      383    15477        /*********************************************************************/
      384    15478        /*   Local based     local based     local based     local based     */
      385    15479        /*********************************************************************/
      386    15480                                                              /**/
      387    15481        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      388    15482                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      389    15527        %PARSE$SYM( NAME = OUT$SYM ,
      390    15528                    STCLASS="BASED(BLK$)") ;
      391    15566        %KL_DREC ( NAME = KL$TREC ,
      392    15567                   LAST = ";" ,
      393    15568                   STCLASS="BASED( TREC$ )" );
      394    15681        %KL_TWSNREC(  NAME = KL$TWSNREC ,
      395    15682                      STCLASS="BASED( TWSNR$ )") ;
      396    15707        %KL_WSNCVT( NAME = KL$WSNCVT ,
      397    15708                    STCLASS="BASED( WSNCVT$ )") ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:73   
      398    15715
      399    15716    1   DCL B$TCB$ PTR SYMREF;
      400    15717        %B$TCB;
      401    15720        %B$ALT;
      402    15728        %EJECT;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:74   
      403    15729        /*********************************************************************/
      404    15730        /*   Procedure       procedure       procedure       procedure       */
      405    15731        /*********************************************************************/
      406    15732                                                              /**/
      407    15733        /*
      408    15734            ***            Begin procedure                    ***
      409    15735        */
      410    15736    1   REM_TIGR = %NO#;

  15736  4 000002   200024 450100                    STZ     REM_TIGR,,AUTO

      411    15737    1   GOTO COMMON;

  15737  4 000003   000010 710000 4                  TRA     COMMON

      412    15738
      413    15739    1   ASR$R_STAT_TIGR: ENTRY;

  15739  4 000004   000000 700200 xent  ASR$R_STAT_* TSX0  ! X66_AUTO_0
         4 000005   000204 000000                    ZERO    132,0

      414    15740    1   REM_TIGR = %YES#;

  15740  4 000006   400000 236003                    LDQ     -131072,DU
         4 000007   200024 756100                    STQ     REM_TIGR,,AUTO

  15740  4 000010                       COMMON       null
      415    15741
      416    15742    1   COMMON: ;
      417    15743                                                              /* Get data seg. */
      418    15744    1   IF NOT DSEG_FLG THEN

  15744  4 000010   000000 234000 xsym               SZN     DSEG_FLG
         4 000011   000023 604000 4                  TMI     s:15765

      419    15745    1      CALL ASB$GETSEG WHENALTRETURN

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:75   
  15745  4 000012   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000013   000000 701000 xent               TSX1    ASB$GETSEG
         4 000014   000016 702000 4                  TSX2    s:15759
         4 000015   000023 710000 4                  TRA     s:15765

      420    15746    2      DO;

      421    15747              %SCREAM( ERR#=E$GETSEGERR , LEVEL=ERROR, MID='R' );

  15759  4 000016   000000 630400 5                  EPPR0   0
         4 000017   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000020   000000 701000 xent               TSX1    ASH$ERROR
         4 000021   000000 011000                    NOP     0

      422    15762    2         RETURN ;

  15762  4 000022   000000 702200 xent               TSX2  ! X66_ARET

      423    15763    2         END; /*  Whenaltreturn  */
      424    15764                                                              /* Get station name */
      425    15765    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  15765  4 000023   000000 470400 xsym               LDP0    NODE$
         4 000024   000003 471500                    LDP1    3,,PR0
         4 000025   100003 236100                    LDQ     3,,PR1
         4 000026   200005 756100                    STQ     BLK$,,AUTO

      426    15766    1   IF OUT$SYM.COUNT > 8

  15766  4 000027   200005 473500                    LDP3    BLK$,,AUTO
         4 000030   300004 236100                    LDQ     4,,PR3
         4 000031   777000 376003                    ANQ     -512,DU
         4 000032   011000 116003                    CMPQ    4608,DU
         4 000033   000041 602000 4                  TNC     s:15786

      427    15767    2   THEN DO ;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:76   
      428    15768           %SCREAM( ERR#=E$SNAMETOOBIG,LEVEL=ERROR, MID='R');

  15780  4 000034   000001 630400 5                  EPPR0   1
         4 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000036   000000 701000 xent               TSX1    ASH$ERROR
         4 000037   000000 011000                    NOP     0

      429    15783    2      RETURN ;

  15783  4 000040   000000 702200 xent               TSX2  ! X66_ARET

      430    15784    2      END ; /* Then do */
      431    15785
      432    15786    1   CALL ASC$CHECK_TIGR_WSN (OUT$SYM.TEXTC$,WSN_INDEX)

  15786  4 000041   200025 634500                    EPPR4   WSN_INDEX,,AUTO
         4 000042   200201 454500                    STP4    TERM_EXT+3,,AUTO
         4 000043   200005 236100                    LDQ     BLK$,,AUTO
         4 000044   000003 036003                    ADLQ    3,DU
         4 000045   200200 756100                    STQ     TERM_EXT+2,,AUTO
         4 000046   200200 630500                    EPPR0   TERM_EXT+2,,AUTO
         4 000047   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000050   000000 701000 xent               TSX1    ASC$CHECK_TIGR_WSN
         4 000051   000062 702000 4                  TSX2    s:15823

      433    15787    1   WHENRETURN
      434    15788    2   DO;

      435    15789    2      IF NOT REM_TIGR THEN

  15789  4 000052   200024 234100                    SZN     REM_TIGR,,AUTO
         4 000053   000061 604000 4                  TMI     s:15810+1

      436    15790    3      DO;

      437    15791        /*E* ERROR:   ASR-E$CANTREMTIGRSTA-C
      438    15792             MESSAGE: You are not allowed to remove a TIGR defined station.
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:77   
      439    15793             MESSAGE1: I suggest you RECONFIGURE the specified station.
      440    15794        */
      441    15795              %SCREAM( ERR#=E$CANTREMTIGRSTA, LEVEL=ERROR , MID ='R' );

  15807  4 000054   000002 630400 5                  EPPR0   2
         4 000055   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000056   000000 701000 xent               TSX1    ASH$ERROR
         4 000057   000000 011000                    NOP     0

      442    15810    3         RETURN;

  15810  4 000060   000000 702200 xent               TSX2  ! X66_ARET
         4 000061   000062 710000 4                  TRA     s:15823

      443    15811    3         END; /* If found and command not reconfigure  */
      444    15812    2      END; /*  Whenreturn  */
      445    15813    1   WHENALTRETURN
      446    15814    2   DO;

      447    15815
      448    15816        /*
      449    15817          If the command was a reconfigure and the station name was not found
      450    15818          in :CONFIG, then the error was reported in RECONFIG_TIGR_STATION.
      451    15819          So i will not check for that error here.
      452    15820        */
      453    15821
      454    15822    2      END; /*  Whenaltreturn  */

      455    15823    1   STAT_KEY.TXT.ACCT = OUT$SYM.TEXT ;

  15823  4 000062   200005 470500                    LDP0    BLK$,,AUTO
         4 000063   000004 236100                    LDQ     4,,PR0
         4 000064   000033 772000                    QRL     27
         4 000065   000000 620006                    EAX0    0,QL
         4 000066   040000 100540                    MLR     fill='040'O
         4 000067   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000070   000000 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:78   

      456    15824    1   USERS_KEY = STAT_KEY ;

  15824  4 000071   000000 100400                    MLR     fill='000'O
         4 000072   000000 000020 2                  ADSC9   STAT_KEY                 cn=0,n=16
         4 000073   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      457    15825                                                              /* Pick up station record */
      458    15826    1   TREC$ = DSEG1$ ;

  15826  4 000074   000000 236000 xsym               LDQ     DSEG1$
         4 000075   200003 756100                    STQ     TREC$,,AUTO

      459    15827    1   ARS = DSEG1SIZE ;

  15827  4 000076   000000 235000 xsym               LDA     DSEG1SIZE
         4 000077   200006 755100                    STA     ARS,,AUTO

      460    15828    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;

  15828  4 000100   200006 631500                    EPPR1   ARS,,AUTO
         4 000101   200201 451500                    STP1    TERM_EXT+3,,AUTO
         4 000102   200003 633500                    EPPR3   TREC$,,AUTO
         4 000103   200200 453500                    STP3    TERM_EXT+2,,AUTO
         4 000104   200200 630500                    EPPR0   TERM_EXT+2,,AUTO
         4 000105   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000106   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000107   000756 702000 4                  TSX2    READ_TREC_ERR

      461    15829    1   IF KL$TREC.ATYP ~= %KLAT_STA#

  15829  4 000110   200003 470500                    LDP0    TREC$,,AUTO
         4 000111   000000 236100                    LDQ     0,,PR0
         4 000112   777000 316003                    CANQ    -512,DU
         4 000113   000133 600000 4                  TZE     s:15855

      462    15830    2   THEN DO ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:79   

      463    15831        /*E*  ERROR:    ASR-E$NOTSTATION-C
      464    15832              MESSAGE0: %%U1 %is not a station.
      465    15833        */
      466    15834    2      CALL INDEX( I, AS_BLANK, STAT_KEY.TXT.ACCT );

  15834  4 000114   000000 124400                    SCM     mask='000'O
         4 000115   000000 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
         4 000116   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000117   200013 000100                    ARG     I,,AUTO

      467    15835    2      AS_FIELD1.COUNT = I ;

  15835  4 000120   200013 236100                    LDQ     I,,AUTO
         4 000121   000033 736000                    QLS     27
         4 000122   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      468    15836    2      AS_FIELD1.TEXT = STAT_KEY.TXT.ACCT ;

  15836  4 000123   040000 100400                    MLR     fill='040'O
         4 000124   000000 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
         4 000125   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      469    15837           %SCREAM( ERR#=E$NOTSTATION , LEVEL=ERROR, MID='R' );

  15849  4 000126   000003 630400 5                  EPPR0   3
         4 000127   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000130   000000 701000 xent               TSX1    ASH$ERROR
         4 000131   000000 011000                    NOP     0

      470    15852    2      RETURN ;

  15852  4 000132   000000 702200 xent               TSX2  ! X66_ARET

      471    15853    2      END ; /* Then do */
      472    15854                                                              /* Get twsn number */
      473    15855    1   TWSNC = KL$TREC.TWSN# ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:80   

  15855  4 000133   000001 236100                    LDQ     1,,PR0
         4 000134   200011 756100                    STQ     TWSNC,,AUTO

      474    15856    1   CALL CHARBIN( TWSN#, TWSNC ) ;

  15856  4 000135   000100 305500                    DTB
         4 000136   200011 030004                    NDSC9   TWSNC,,AUTO              cn=0,s=nosgn,sf=0,n=4
         4 000137   200200 000010                    NDSC9   TERM_EXT+2,,AUTO         cn=0,s=lsgnf,sf=0,n=8
         4 000140   200201 235100                    LDA     TERM_EXT+3,,AUTO
         4 000141   200010 755100                    STA     TWSN#,,AUTO

      475    15857                                                              /* Pick up twsn record */
      476    15858    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;

  15858  4 000142   040000 100400                    MLR     fill='040'O
         4 000143   000004 000004 3                  ADSC9   4                        cn=0,n=4
         4 000144   000000 200004 xsym               ADSC9   USERS_KEY                cn=1,n=4
         4 000145   040000 100500                    MLR     fill='040'O
         4 000146   200011 000004                    ADSC9   TWSNC,,AUTO              cn=0,n=4
         4 000147   000001 200045 xsym               ADSC9   USERS_KEY+1              cn=1,n=37

      477    15859    1   USERS_KEY.COUNT = 8 ;

  15859  4 000150   010000 236003                    LDQ     4096,DU
         4 000151   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      478    15860    1   TWSNR$ = DSEG2$ ;

  15860  4 000152   000000 236000 xsym               LDQ     DSEG2$
         4 000153   200004 756100                    STQ     TWSNR$,,AUTO

      479    15861    1   TWSN_ARS = DSEG2SIZE ;

  15861  4 000154   000000 235000 xsym               LDA     DSEG2SIZE
         4 000155   200007 755100                    STA     TWSN_ARS,,AUTO

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:81   
      480    15862    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;

  15862  4 000156   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000157   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000160   001043 702000 4                  TSX2    DEQ_ERR

      481    15863    1   CALL ASB$READ_HLP( TWSNR$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;

  15863  4 000161   200007 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000162   200201 450500                    STP0    TERM_EXT+3,,AUTO
         4 000163   200004 631500                    EPPR1   TWSNR$,,AUTO
         4 000164   200200 451500                    STP1    TERM_EXT+2,,AUTO
         4 000165   200200 630500                    EPPR0   TERM_EXT+2,,AUTO
         4 000166   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000167   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000170   001000 702000 4                  TSX2    READ_TWSN_ERR

      482    15864                                                              /* How many devs? */
      483    15865    1   NUM_DEVS = KL$TWSNREC.NDEV ;

  15865  4 000171   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000172   000004 235100                    LDA     4,,PR0
         4 000173   200012 755100                    STA     NUM_DEVS,,AUTO

      484    15866                                                              /* Get rid of devices
      485    15867                                                                   and consoles. */
      486    15868    1   WRITE_DEVS = '1'B;

  15868  4 000174   400000 236003                    LDQ     -131072,DU
         4 000175   200022 756100                    STQ     WRITE_DEVS,,AUTO

      487    15869    1   DEVS_WRITTEN = '0'B; /* 1- wrote devs, 0- no devs to write */

  15869  4 000176   200023 450100                    STZ     DEVS_WRITTEN,,AUTO

      488    15870    1   DEVNUM = 1;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:82   
  15870  4 000177   000001 235007                    LDA     1,DL
         4 000200   200015 755100                    STA     DEVNUM,,AUTO

      489    15871    1   CONFIG_KEY.TERMID.LEV = 2;

  15871  4 000201   002000 236003                    LDQ     1024,DU
         4 000202   000005 552040 2                  STBQ    CONFIG_KEY+1,'40'O

      490    15872    1   TERM_CNT = 0 ;

  15872  4 000203   200031 450100                    STZ     TERM_CNT,,AUTO

      491    15873    2   DO I = 0 TO NUM_DEVS-1 ;

  15873  4 000204   200013 450100                    STZ     I,,AUTO
         4 000205   000472 710000 4                  TRA     s:15940+1

      492    15874    2      TYPE = KL$TWSNREC.DEVS.TYP( I ) ;

  15874  4 000206   200013 236100                    LDQ     I,,AUTO
         4 000207   000013 402007                    MPY     11,DL
         4 000210   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000211   000005 220106                    LDX0    5,QL,PR0
         4 000212   200026 740100                    STX0    TYPE,,AUTO

      493    15875    2      NUM = KL$TWSNREC.DEVS.NUM( I ) ;

  15875  4 000213   000005 721106                    LXL1    5,QL,PR0
         4 000214   200027 741100                    STX1    NUM,,AUTO

      494    15876    2      FOUND = AS_FALSE ;

  15876  4 000215   000000 236000 xsym               LDQ     AS_FALSE
         4 000216   400000 376003                    ANQ     -131072,DU
         4 000217   200021 756100                    STQ     FOUND,,AUTO

      495    15877    2      IF ~KL$TWSNREC.DEVS.IOM_CONNECTED(I)
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:83   

  15877  4 000220   200013 236100                    LDQ     I,,AUTO
         4 000221   000013 402007                    MPY     11,DL
         4 000222   000006 236106                    LDQ     6,QL,PR0
         4 000223   000036 736000                    QLS     30
         4 000224   400000 376003                    ANQ     -131072,DU
         4 000225   400000 676003                    ERQ     -131072,DU
         4 000226   000471 600000 4                  TZE     s:15940

      496    15878    3      THEN DO ;

      497    15879    3         USERS_KEY.TXTC = KL$TWSNREC.DEVS.ACCT(I) ;

  15879  4 000227   200013 236100                    LDQ     I,,AUTO
         4 000230   000054 402007                    MPY     44,DL
         4 000231   040000 100506                    MLR     fill='040'O
         4 000232   000011 000010                    ADSC9   9,Q,PR0                  cn=0,n=8
         4 000233   000000 200051 xsym               ADSC9   USERS_KEY                cn=1,n=41

      498    15880    3         USERS_KEY.COUNT = 8 ;

  15880  4 000234   010000 236003                    LDQ     4096,DU
         4 000235   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      499    15881    3         IF KL$TWSNREC.DEVS.TDEV(I)

  15881  4 000236   200013 236100                    LDQ     I,,AUTO
         4 000237   000013 402007                    MPY     11,DL
         4 000240   000006 236106                    LDQ     6,QL,PR0
         4 000241   000100 316007                    CANQ    64,DL
         4 000242   000361 600000 4                  TZE     s:15910

      500    15882    4         THEN DO ;                   /* In ss list. */

      501    15883    4            CONFIG_KEY.TERMID.TERM.TERM_NAME = KL$TWSNREC.DEVS.TERM(I) ;

  15883  4 000243   200013 236100                    LDQ     I,,AUTO
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:84   
         4 000244   000054 402007                    MPY     44,DL
         4 000245   040000 100506                    MLR     fill='040'O
         4 000246   000013 000010                    ADSC9   11,Q,PR0                 cn=0,n=8
         4 000247   000006 600010 2                  ADSC9   CONFIG_KEY+2             cn=3,n=8

      502    15884    4            CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(0) = DEVNUM/256;

  15884  4 000250   200015 236100                    LDQ     DEVNUM,,AUTO
         4 000251   000010 772000                    QRL     8
         4 000252   000005 676000 2                  ERQ     CONFIG_KEY+1
         4 000253   000377 376007                    ANQ     255,DL
         4 000254   000005 656000 2                  ERSQ    CONFIG_KEY+1

      503    15885    4            CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT(1) = MOD(DEVNUM,256);

  15885  4 000255   200015 236100                    LDQ     DEVNUM,,AUTO
         4 000256   000377 376007                    ANQ     255,DL
         4 000257   000033 736000                    QLS     27
         4 000260   000006 676000 2                  ERQ     CONFIG_KEY+2
         4 000261   377000 376003                    ANQ     130560,DU
         4 000262   000006 656000 2                  ERSQ    CONFIG_KEY+2

      504    15886    4            DEVNUM = DEVNUM + 1;

  15886  4 000263   200015 235100                    LDA     DEVNUM,,AUTO
         4 000264   000001 035007                    ADLA    1,DL
         4 000265   200015 755100                    STA     DEVNUM,,AUTO

      505    15887    4            CALL ASB$DELREC_NETCON(VECTOR(CONFIG_KEY))

  15887  4 000266   000006 630400 5                  EPPR0   6
         4 000267   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000270   000000 701000 xent               TSX1    ASB$DELREC_NETCON
         4 000271   000273 702000 4                  TSX2    s:15889
         4 000272   000300 710000 4                  TRA     s:15894

      506    15888    5            WHENALTRETURN DO;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:85   

      507    15889    5               IF MERR_CODE.CODE ~= %E$NOKEY

  15889  4 000273   000000 236000 xsym               LDQ     ERR_CODE
         4 000274   377770 376007                    ANQ     131064,DL
         4 000275   001020 116007                    CMPQ    528,DL
         4 000276   000300 600000 4                  TZE     s:15894

      508    15890    6               THEN DO;

      509    15891    6                  GOTO NETCON_ERR;

  15891  4 000277   001025 710000 4                  TRA     NETCON_ERR

      510    15892    6                  END;
      511    15893    5               END;
      512    15894    4            FOUND = AS_TRUE ;

  15894  4 000300   000000 236000 xsym               LDQ     AS_TRUE
         4 000301   400000 376003                    ANQ     -131072,DU
         4 000302   200021 756100                    STQ     FOUND,,AUTO

      513    15895    4            TERM_EXT = AS_FALSE ;

  15895  4 000303   000000 236000 xsym               LDQ     AS_FALSE
         4 000304   400000 376003                    ANQ     -131072,DU
         4 000305   200176 756100                    STQ     TERM_EXT,,AUTO

      514    15896    5            DO J = 0 TO TERM_CNT-1 ;

  15896  4 000306   200014 450100                    STZ     J,,AUTO
         4 000307   000334 710000 4                  TRA     s:15902+3

      515    15897    5               IF TERM_LIST(J) = KL$TWSNREC.DEVS.TERM(I)

  15897  4 000310   200014 235100                    LDA     J,,AUTO
         4 000311   000003 735000                    ALS     3
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:86   
         4 000312   200013 236100                    LDQ     I,,AUTO
         4 000313   200200 755100                    STA     TERM_EXT+2,,AUTO
         4 000314   000054 402007                    MPY     44,DL
         4 000315   200200 235100                    LDA     TERM_EXT+2,,AUTO
         4 000316   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000317   040106 106505                    CMPC    fill='040'O
         4 000320   200032 000010                    ADSC9   TERM_LIST,A,AUTO         cn=0,n=8
         4 000321   000013 000010                    ADSC9   11,Q,PR0                 cn=0,n=8
         4 000322   000331 601000 4                  TNZ     s:15902

      516    15898    6               THEN DO;

      517    15899    6                  J = TERM_CNT;

  15899  4 000323   200031 236100                    LDQ     TERM_CNT,,AUTO
         4 000324   000033 772000                    QRL     27
         4 000325   200014 756100                    STQ     J,,AUTO

      518    15900    6                  TERM_EXT = AS_TRUE ;

  15900  4 000326   000000 236000 xsym               LDQ     AS_TRUE
         4 000327   400000 376003                    ANQ     -131072,DU
         4 000330   200176 756100                    STQ     TERM_EXT,,AUTO

      519    15901    6                  END ;

      520    15902    5               END;

  15902  4 000331   200014 235100                    LDA     J,,AUTO
         4 000332   000001 035007                    ADLA    1,DL
         4 000333   200014 755100                    STA     J,,AUTO
         4 000334   200031 236100                    LDQ     TERM_CNT,,AUTO
         4 000335   000033 772000                    QRL     27
         4 000336   200014 116100                    CMPQ    J,,AUTO
         4 000337   000341 600000 4                  TZE     s:15903
         4 000340   000310 603000 4                  TRC     s:15897

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:87   
      521    15903    4            IF NOT TERM_EXT

  15903  4 000341   200176 234100                    SZN     TERM_EXT,,AUTO
         4 000342   000366 604000 4                  TMI     s:15913

      522    15904    5            THEN DO;

      523    15905    5               TERM_LIST(TERM_CNT) = KL$TWSNREC.DEVS.TERM(I) ;

  15905  4 000343   000001 736000                    QLS     1
         4 000344   000000 620006                    EAX0    0,QL
         4 000345   200013 236100                    LDQ     I,,AUTO
         4 000346   000054 402007                    MPY     44,DL
         4 000347   000000 635010                    EAA     0,X0
         4 000350   000020 771000                    ARL     16
         4 000351   200004 470500                    LDP0    TWSNR$,,AUTO
         4 000352   040105 100506                    MLR     fill='040'O
         4 000353   000013 000010                    ADSC9   11,Q,PR0                 cn=0,n=8
         4 000354   200032 000010                    ADSC9   TERM_LIST,A,AUTO         cn=0,n=8

      524    15906    5               TERM_CNT = TERM_CNT + 1 ;

  15906  4 000355   200031 236100                    LDQ     TERM_CNT,,AUTO
         4 000356   001000 036003                    ADLQ    512,DU
         4 000357   200031 552140                    STBQ    TERM_CNT,'40'O,AUTO

      525    15907    5               END;

      526    15908    4            END ; /* Then do */

  15908  4 000360   000366 710000 4                  TRA     s:15913

      527    15909    4         ELSE DO ;

      528    15910    4            USERS_KEY.UKEY.UNAME = '*' ;

  15910  4 000361   040000 100400                    MLR     fill='040'O
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:88   
         4 000362   000007 000001 5                  ADSC9   7                        cn=0,n=1
         4 000363   000002 200014 xsym               ADSC9   USERS_KEY+2              cn=1,n=12

      529    15911    4            USERS_KEY.COUNT = 9 ;

  15911  4 000364   011000 236003                    LDQ     4608,DU
         4 000365   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      530    15912    4            END ; /* Else do */

      531    15913    3         CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;

  15913  4 000366   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000367   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000370   001043 702000 4                  TSX2    DEQ_ERR

      532    15914    3         CALL ASB$DELREC_HLP ;

  15914  4 000371   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000372   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000373   000000 011000                    NOP     0

      533    15915    3         CALL ASB$DEQ_HLP ;

  15915  4 000374   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000375   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000376   000000 011000                    NOP     0

      534    15916    3         WRITE_DEVS = '1'B;  /* Write affected wsns */

  15916  4 000377   400000 236003                    LDQ     -131072,DU
         4 000400   200022 756100                    STQ     WRITE_DEVS,,AUTO

      535    15917    3         CALL ASR$R_DEVWSN (WRITE_DEVS);

  15917  4 000401   200022 630500                    EPPR0   WRITE_DEVS,,AUTO
         4 000402   200200 450500                    STP0    TERM_EXT+2,,AUTO
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:89   
         4 000403   200200 630500                    EPPR0   TERM_EXT+2,,AUTO
         4 000404   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000405   000000 701000 xent               TSX1    ASR$R_DEVWSN
         4 000406   000000 011000                    NOP     0

      536    15918    3         DEVS_WRITTEN = DEVS_WRITTEN | WRITE_DEVS;

  15918  4 000407   200022 236100                    LDQ     WRITE_DEVS,,AUTO
         4 000410   400000 376003                    ANQ     -131072,DU
         4 000411   200200 756100                    STQ     TERM_EXT+2,,AUTO
         4 000412   200023 236100                    LDQ     DEVS_WRITTEN,,AUTO
         4 000413   400000 376003                    ANQ     -131072,DU
         4 000414   200200 276100                    ORQ     TERM_EXT+2,,AUTO
         4 000415   200023 756100                    STQ     DEVS_WRITTEN,,AUTO

      537    15919    3         IF FOUND = AS_FALSE

  15919  4 000416   200021 236100                    LDQ     FOUND,,AUTO
         4 000417   000000 676000 xsym               ERQ     AS_FALSE
         4 000420   400000 376003                    ANQ     -131072,DU
         4 000421   000471 601000 4                  TNZ     s:15940

      538    15920    4         THEN DO ;

      539    15921    4            AS_FIELD1.COUNT = 8;

  15921  4 000422   010000 236003                    LDQ     4096,DU
         4 000423   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      540    15922    4            AS_FIELD1.TEXT = USERS_KEY.TXTC;

  15922  4 000424   040000 100400                    MLR     fill='040'O
         4 000425   000000 200050 xsym               ADSC9   USERS_KEY                cn=1,n=40
         4 000426   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      541    15923    4            IF TYPE = 'OC'

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:90   
  15923  4 000427   200026 220100                    LDX0    TYPE,,AUTO
         4 000430   000005 100000 3                  CMPX0   5
         4 000431   000452 601000 4                  TNZ     s:15932

      542    15924    5            THEN DO ;

      543    15925    5               AS_FIELD1.COUNT = 25;

  15925  4 000432   031000 236003                    LDQ     12800,DU
         4 000433   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      544    15926    5               CALL CONCAT (AS_FIELD1.TEXT, 'Console ',

  15926  4 000434   040000 100400                    MLR     fill='040'O
         4 000435   000006 000010 3                  ADSC9   6                        cn=0,n=8
         4 000436   000000 200010 xsym               ADSC9   AS_FIELD1                cn=1,n=8
         4 000437   040000 100400                    MLR     fill='040'O
         4 000440   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000441   000002 200010 xsym               ADSC9   AS_FIELD1+2              cn=1,n=8
         4 000442   040000 100400                    MLR     fill='040'O
         4 000443   000010 000021 3                  ADSC9   8                        cn=0,n=17
         4 000444   000004 200030 xsym               ADSC9   AS_FIELD1+4              cn=1,n=24

      545    15927    5                    SUBSTR (USERS_KEY.TXTC, 0, 8),
      546    15928    5                    ' removed.        ');
      547    15929    5               CALL ASB$WRITE_LO (AS_FIELD1.TEXT, 25);

  15929  4 000445   000011 630400 5                  EPPR0   9
         4 000446   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000447   000000 701000 xent               TSX1    ASB$WRITE_LO
         4 000450   000000 011000                    NOP     0

      548    15930    5               END ;

  15930  4 000451   000471 710000 4                  TRA     s:15940

      549    15931    5            ELSE DO ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:91   

      550    15932    5               AS_FIELD1.COUNT = 24;

  15932  4 000452   030000 236003                    LDQ     12288,DU
         4 000453   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      551    15933    5               CALL CONCAT (AS_FIELD1.TEXT, 'Device ',

  15933  4 000454   040000 100400                    MLR     fill='040'O
         4 000455   000015 000007 3                  ADSC9   13                       cn=0,n=7
         4 000456   000000 200007 xsym               ADSC9   AS_FIELD1                cn=1,n=7
         4 000457   040000 100400                    MLR     fill='040'O
         4 000460   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000461   000002 000010 xsym               ADSC9   AS_FIELD1+2              cn=0,n=8
         4 000462   040000 100400                    MLR     fill='040'O
         4 000463   000010 000017 3                  ADSC9   8                        cn=0,n=15
         4 000464   000004 000031 xsym               ADSC9   AS_FIELD1+4              cn=0,n=25

      552    15934    5                    SUBSTR (USERS_KEY.TXTC, 0, 8),
      553    15935    5                    ' removed.      ');
      554    15936    5               CALL ASB$WRITE_LO (AS_FIELD1.TEXT, 24);

  15936  4 000465   000014 630400 5                  EPPR0   12
         4 000466   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000467   000000 701000 xent               TSX1    ASB$WRITE_LO
         4 000470   000000 011000                    NOP     0

      555    15937    5               END ;

      556    15938    4            END ; /* Then do */

      557    15939    3         END;  /*  Then do */

      558    15940    2      END ; /* Do i */

  15940  4 000471   200013 054100                    AOS     I,,AUTO
         4 000472   200013 236100                    LDQ     I,,AUTO
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:92   
         4 000473   000206 604000 4                  TMI     s:15874
         4 000474   200012 116100                    CMPQ    NUM_DEVS,,AUTO
         4 000475   000206 602000 4                  TNC     s:15874

      559    15941    1   IF ((DEVNUM > 1) AND (DEVS_WRITTEN))

  15941  4 000476   200015 235100                    LDA     DEVNUM,,AUTO
         4 000477   000002 115007                    CMPA    2,DL
         4 000500   000513 602000 4                  TNC     s:15965
         4 000501   200023 234100                    SZN     DEVS_WRITTEN,,AUTO
         4 000502   000513 605000 4                  TPL     s:15965

      560    15942    2   THEN DO; /* At least one call to devwsn was made. */

      561    15943        /*    ERROR: ASR-E$DEVREMOVED_WARN_WSN-0
      562    15944        MESSAGE:WARNING -to maintain wsn and device consistancy, above wsn's should be rebu
             15944        ilt.
      563    15945             MESSAGE1: There are still references to this device in the stated wsn records.
      564    15946        */
      565    15947           %SCREAM (ERR#=E$DEVREMOVED_WARN_WSN,LEVEL=INFO,MID='R');

  15955  4 000503   000016 630400 5                  EPPR0   14
         4 000504   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000505   000000 701000 xent               TSX1    ASH$INFO
         4 000506   000000 011000                    NOP     0

      566    15962    2      CALL ASB$WRITE_LO( AS_BLANK, 1 );

  15962  4 000507   000017 630400 5                  EPPR0   15
         4 000510   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000511   000000 701000 xent               TSX1    ASB$WRITE_LO
         4 000512   000000 011000                    NOP     0

      567    15963    2      END;

      568    15964                                                              /* Delete TWSN#### */
      569    15965    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:93   

  15965  4 000513   040000 100400                    MLR     fill='040'O
         4 000514   000004 000004 3                  ADSC9   4                        cn=0,n=4
         4 000515   000000 200004 xsym               ADSC9   USERS_KEY                cn=1,n=4
         4 000516   040000 100500                    MLR     fill='040'O
         4 000517   200011 000004                    ADSC9   TWSNC,,AUTO              cn=0,n=4
         4 000520   000001 200045 xsym               ADSC9   USERS_KEY+1              cn=1,n=37

      570    15966    1   USERS_KEY.COUNT = 8 ;

  15966  4 000521   010000 236003                    LDQ     4096,DU
         4 000522   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      571    15967    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;

  15967  4 000523   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000524   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000525   001043 702000 4                  TSX2    DEQ_ERR

      572    15968                                                              /* Delete station */
      573    15969    1   USERS_KEY = STAT_KEY ;

  15969  4 000526   000000 100400                    MLR     fill='000'O
         4 000527   000000 000020 2                  ADSC9   STAT_KEY                 cn=0,n=16
         4 000530   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      574    15970    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;

  15970  4 000531   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000532   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000533   001043 702000 4                  TSX2    DEQ_ERR

      575    15971    1   CALL INDEX( I, AS_BLANK, USERS_KEY.UKEY.ACCT ) ;

  15971  4 000534   000000 124400                    SCM     mask='000'O
         4 000535   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000536   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:94   
         4 000537   200013 000100                    ARG     I,,AUTO

      576    15972    1   AS_FIELD1.COUNT = I ;

  15972  4 000540   200013 236100                    LDQ     I,,AUTO
         4 000541   000033 736000                    QLS     27
         4 000542   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      577    15973    1   AS_FIELD1.TEXT = USERS_KEY.UKEY.ACCT ;

  15973  4 000543   040000 100400                    MLR     fill='040'O
         4 000544   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000545   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      578    15974        /*E*  ERROR:    ASR-00005-C
      579    15975              MESSAGE:  Station% %U1% removed.
      580    15976        */
      581    15977        %SCREAM( ERR#=5 , LEVEL=INFO, MID='R' );

  15985  4 000546   000021 630400 5                  EPPR0   17
         4 000547   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000550   000000 701000 xent               TSX1    ASH$INFO
         4 000551   000000 011000                    NOP     0

      582    15992    2   DO I = 0 TO TERM_CNT-1 ;

  15992  4 000552   200013 450100                    STZ     I,,AUTO
         4 000553   000630 710000 4                  TRA     s:16024+1

      583    15993    2      USERS_KEY.UKEY.ACCT = TERM_LIST(I);

  15993  4 000554   200013 235100                    LDA     I,,AUTO
         4 000555   000003 735000                    ALS     3
         4 000556   040000 100505                    MLR     fill='040'O
         4 000557   200032 000010                    ADSC9   TERM_LIST,A,AUTO         cn=0,n=8
         4 000560   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:95   
      584    15994    2      USERS_KEY.UKEY.UNAME = '*';  /* Term keys end with an * */

  15994  4 000561   040000 100400                    MLR     fill='040'O
         4 000562   000007 000001 5                  ADSC9   7                        cn=0,n=1
         4 000563   000002 200014 xsym               ADSC9   USERS_KEY+2              cn=1,n=12

      585    15995    2      USERS_KEY.COUNT = 9;  /* Thats the length of a term key */

  15995  4 000564   011000 236003                    LDQ     4608,DU
         4 000565   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      586    15996    2      CALL ASB$DELREC_HLP   ALTRET(DEL_ERR) ;

  15996  4 000566   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000567   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000570   001043 702000 4                  TSX2    DEQ_ERR

      587    15997    2      KL_TERM_KEY.TERMID.TERM.TERM_NAME = STAT_KEY.TXT.ACCT ;

  15997  4 000571   040000 100400                    MLR     fill='040'O
         4 000572   000000 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
         4 000573   000013 400010 2                  ADSC9   KL_TERM_KEY+2            cn=2,n=8

      588    15998    2      CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))

  15998  4 000574   000024 630400 5                  EPPR0   20
         4 000575   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000576   000000 701000 xent               TSX1    ASB$DELREC_NETCON
         4 000577   000601 702000 4                  TSX2    s:16000
         4 000600   000606 710000 4                  TRA     s:16005

      589    15999    3      WHENALTRETURN DO;

      590    16000    3         IF MERR_CODE.CODE ~= %E$NOKEY

  16000  4 000601   000000 236000 xsym               LDQ     ERR_CODE
         4 000602   377770 376007                    ANQ     131064,DL
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:96   
         4 000603   001020 116007                    CMPQ    528,DL
         4 000604   000606 600000 4                  TZE     s:16005

      591    16001    4         THEN DO;

      592    16002    4            GOTO NETCON_ERR;

  16002  4 000605   001025 710000 4                  TRA     NETCON_ERR

      593    16003    4            END;
      594    16004    3         END;
      595    16005    2      CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);

  16005  4 000606   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000607   000000 701000 xent               TSX1    ASB$CLOSE_NETCON
         4 000610   001025 702000 4                  TSX2    NETCON_ERR

      596    16006    2      CALL INDEX( J, AS_BLANK, USERS_KEY.UKEY.ACCT );

  16006  4 000611   000000 124400                    SCM     mask='000'O
         4 000612   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000613   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000614   200014 000100                    ARG     J,,AUTO

      597    16007    2      AS_FIELD1.COUNT = J ;

  16007  4 000615   200014 236100                    LDQ     J,,AUTO
         4 000616   000033 736000                    QLS     27
         4 000617   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      598    16008    2      AS_FIELD1.TEXT = USERS_KEY.UKEY.ACCT ;

  16008  4 000620   040000 100400                    MLR     fill='040'O
         4 000621   000000 200010 xsym               ADSC9   USERS_KEY                cn=1,n=8
         4 000622   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      599    16009           %SCREAM( ERR#=6, LEVEL=INFO, MID='R' );
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:97   

  16017  4 000623   000025 630400 5                  EPPR0   21
         4 000624   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000625   000000 701000 xent               TSX1    ASH$INFO
         4 000626   000000 011000                    NOP     0

      600    16024    2      END ;

  16024  4 000627   200013 054100                    AOS     I,,AUTO
         4 000630   200031 236100                    LDQ     TERM_CNT,,AUTO
         4 000631   000033 772000                    QRL     27
         4 000632   200013 116100                    CMPQ    I,,AUTO
         4 000633   000554 605400 4                  TPNZ    s:15993

      601    16025                                                              /* Update 'TERM' record */
      602    16026    1   WSNCVT$ = DSEG1$ ;

  16026  4 000634   000000 236000 xsym               LDQ     DSEG1$
         4 000635   200017 756100                    STQ     WSNCVT$,,AUTO

      603    16027    1   ARS = DSEG1SIZE ;

  16027  4 000636   000000 235000 xsym               LDA     DSEG1SIZE
         4 000637   200006 755100                    STA     ARS,,AUTO

      604    16028    1   USERS_KEY.TXTC = 'TERM' ;

  16028  4 000640   040000 100400                    MLR     fill='040'O
         4 000641   000022 000004 3                  ADSC9   18                       cn=0,n=4
         4 000642   000000 200051 xsym               ADSC9   USERS_KEY                cn=1,n=41

      605    16029    1   USERS_KEY.COUNT = 4 ;

  16029  4 000643   004000 236003                    LDQ     2048,DU
         4 000644   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      606    16030    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR2 ) ;
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:98   

  16030  4 000645   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000646   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000647   001043 702000 4                  TSX2    DEQ_ERR

      607    16031    1   CALL ASB$READ_HLP( WSNCVT$, ARS, 1 ) ALTRET( READ_CVT_ERR ) ;

  16031  4 000650   000020 236000 5                  LDQ     16
         4 000651   200202 756100                    STQ     TERM_EXT+4,,AUTO
         4 000652   200006 630500                    EPPR0   ARS,,AUTO
         4 000653   200201 450500                    STP0    TERM_EXT+3,,AUTO
         4 000654   200017 631500                    EPPR1   WSNCVT$,,AUTO
         4 000655   200200 451500                    STP1    TERM_EXT+2,,AUTO
         4 000656   200200 630500                    EPPR0   TERM_EXT+2,,AUTO
         4 000657   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000660   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000661   001036 702000 4                  TSX2    READ_CHN_ERR

      608    16032                                                              /* Blank out station name */
      609    16033    1   FIND_STAT:
      610    16034    2   DO I = 0 TO KL$WSNCVT.LTWSN;

  16034  4 000662   200013 450100       FIND_STAT    STZ     I,,AUTO
         4 000663   000703 710000 4                  TRA     s:16040+1

      611    16035    2      IF (STAT_KEY.TXT.ACCT = KL$WSNCVT.WSN (I) )

  16035  4 000664   200013 235100                    LDA     I,,AUTO
         4 000665   000003 735000                    ALS     3
         4 000666   200017 470500                    LDP0    WSNCVT$,,AUTO
         4 000667   040105 106400                    CMPC    fill='040'O
         4 000670   000000 200010 2                  ADSC9   STAT_KEY                 cn=1,n=8
         4 000671   000002 000010                    ADSC9   2,A,PR0                  cn=0,n=8
         4 000672   000702 601000 4                  TNZ     s:16040

      612    16036    3      THEN DO;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:99   
      613    16037    3         KL$WSNCVT.WSN (I) = AS_BLANK;

  16037  4 000673   200013 236100                    LDQ     I,,AUTO
         4 000674   000001 736000                    QLS     1
         4 000675   000002 736000                    QLS     2
         4 000676   040106 100400                    MLR     fill='040'O
         4 000677   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000700   000002 000010                    ADSC9   2,Q,PR0                  cn=0,n=8

      614    16038    3         EXIT FIND_STAT;

  16038  4 000701   000710 710000 4                  TRA     s:16041

      615    16039    3         END;
      616    16040    2      END FIND_STAT; /* Do i */

  16040  4 000702   200013 054100                    AOS     I,,AUTO
         4 000703   200017 470500                    LDP0    WSNCVT$,,AUTO
         4 000704   000001 236100                    LDQ     1,,PR0
         4 000705   000664 604000 4                  TMI     s:16035
         4 000706   200013 116100                    CMPQ    I,,AUTO
         4 000707   000664 605000 4                  TPL     s:16035

      617    16041    1   I = KL$WSNCVT.LTWSN ;

  16041  4 000710   200017 470500                    LDP0    WSNCVT$,,AUTO
         4 000711   000001 235100                    LDA     1,,PR0
         4 000712   200013 755100                    STA     I,,AUTO

      618    16042    2   DO WHILE KL$WSNCVT.WSN(I) = AS_BLANK;

  16042  4 000713   000003 735000                    ALS     3
         4 000714   040000 106505                    CMPC    fill='040'O
         4 000715   000002 000010                    ADSC9   2,A,PR0                  cn=0,n=8
         4 000716   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000717   000731 601000 4                  TNZ     s:16045

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:100  
      619    16043    2      I = I - 1;

  16043  4 000720   000001 336007                    LCQ     1,DL
         4 000721   200013 056100                    ASQ     I,,AUTO

      620    16044    2      END;   /*  While wsn(i) is blank  */

  16044  4 000722   200013 235100                    LDA     I,,AUTO
         4 000723   000003 735000                    ALS     3
         4 000724   200017 470500                    LDP0    WSNCVT$,,AUTO
         4 000725   040000 106505                    CMPC    fill='040'O
         4 000726   000002 000010                    ADSC9   2,A,PR0                  cn=0,n=8
         4 000727   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000730   000720 600000 4                  TZE     s:16043

      621    16045    2   IF I >= 0 THEN DO;

  16045  4 000731   200013 236100                    LDQ     I,,AUTO
         4 000732   000737 604000 4                  TMI     s:16050

      622    16046    2      KL$WSNCVT.LTWSN = I;

  16046  4 000733   000001 756100                    STQ     1,,PR0

      623    16047    2      ARS = (LENGTHC(KL$WSNCVT.WSN(0)) * (i + 1)) + 8;

  16047  4 000734   000020 035007                    ADLA    16,DL
         4 000735   200006 755100                    STA     ARS,,AUTO

      624    16048    2      END;

  16048  4 000736   000742 710000 4                  TRA     s:16053

      625    16049    2   ELSE DO;

      626    16050    2      KL$WSNCVT.LTWSN = 0;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:101  
  16050  4 000737   000001 450100                    STZ     1,,PR0

      627    16051    2      ARS = 8;

  16051  4 000740   000010 235007                    LDA     8,DL
         4 000741   200006 755100                    STA     ARS,,AUTO

      628    16052    2      END;

      629    16053    1   CALL ASB$WRITE_HLP( WSNCVT$, ARS ) ;

  16053  4 000742   200006 630500                    EPPR0   ARS,,AUTO
         4 000743   200201 450500                    STP0    TERM_EXT+3,,AUTO
         4 000744   200017 631500                    EPPR1   WSNCVT$,,AUTO
         4 000745   200200 451500                    STP1    TERM_EXT+2,,AUTO
         4 000746   200200 630500                    EPPR0   TERM_EXT+2,,AUTO
         4 000747   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000750   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000751   000000 011000                    NOP     0

      630    16054    1   CALL ASB$DEQ_HLP ALTRET( DEQ_ERR ) ;

  16054  4 000752   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000753   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000754   001043 702000 4                  TSX2    DEQ_ERR

      631    16055                                                              /* All done */
      632    16056    1   RETURN ;

  16056  4 000755   000000 702200 xent               TSX2  ! X66_ARET

  16053  4 000756                       READ_TREC_E* null
      633    16057                                                              /*  Errors  */
      634    16058                                                              /**/
      635    16059    1   READ_TREC_ERR: ;
      636    16060    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:102  
  16060  4 000756   000000 236000 xsym               LDQ     ERR_CODE
         4 000757   377770 376007                    ANQ     131064,DL
         4 000760   001020 116007                    CMPQ    528,DL
         4 000761   001043 601000 4                  TNZ     DEQ_ERR

      637    16061    1   AS_FIELD1.COUNT = OUT$SYM.COUNT;

  16061  4 000762   200005 470500                    LDP0    BLK$,,AUTO
         4 000763   000004 236100                    LDQ     4,,PR0
         4 000764   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      638    16062    1   AS_FIELD1.TEXT  = OUT$SYM.TEXT;

  16062  4 000765   000004 236100                    LDQ     4,,PR0
         4 000766   000033 772000                    QRL     27
         4 000767   000000 620006                    EAX0    0,QL
         4 000770   040000 100540                    MLR     fill='040'O
         4 000771   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000772   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      639    16063        %SCREAM( ERR#=E$TERMNOEXIST, MID='R', LEVEL=WARN );

  16073  4 000773   000026 630400 5                  EPPR0   22
         4 000774   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000775   000000 701000 xent               TSX1    ASH$WARN
         4 000776   000000 011000                    NOP     0

      640    16078    1   RETURN;

  16078  4 000777   000000 702200 xent               TSX2  ! X66_ARET

  16062  4 001000                       READ_TWSN_E* null
      641    16079
      642    16080    1   READ_TWSN_ERR: ;
      643    16081    1   IF MERR_CODE.CODE ~= %E$NOKEY THEN GOTO ERROR;

  16081  4 001000   000000 236000 xsym               LDQ     ERR_CODE
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:103  
         4 001001   377770 376007                    ANQ     131064,DL
         4 001002   001020 116007                    CMPQ    528,DL
         4 001003   001043 601000 4                  TNZ     DEQ_ERR

      644    16082    1   USERS_KEY = STAT_KEY ;

  16082  4 001004   000000 100400                    MLR     fill='000'O
         4 001005   000000 000020 2                  ADSC9   STAT_KEY                 cn=0,n=16
         4 001006   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      645    16083    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR2);

  16083  4 001007   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001010   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 001011   001043 702000 4                  TSX2    DEQ_ERR

      646    16084    1   CALL ASB$DELREC_HLP ALTRET(DEL_ERR);

  16084  4 001012   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001013   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 001014   001043 702000 4                  TSX2    DEQ_ERR

      647    16085        %SCREAM( ERR#=5, LEVEL=INFO, MID='R' );

  16093  4 001015   000021 630400 5                  EPPR0   17
         4 001016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001017   000000 701000 xent               TSX1    ASH$INFO
         4 001020   000000 011000                    NOP     0

      648    16100    1   CALL ASB$DEQ_HLP ALTRET(DEQ_ERR);

  16100  4 001021   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 001022   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 001023   001043 702000 4                  TSX2    DEQ_ERR

      649    16101    1   RETURN;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:104  
  16101  4 001024   000000 702200 xent               TSX2  ! X66_ARET

  16082  4 001025                       NETCON_ERR   null
      650    16102    1   NETCON_ERR:;
      651    16103    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  16103  4 001025   000000 470400 xsym               LDP0    B$TCB$
         4 001026   000000 471500                    LDP1    0,,PR0
         4 001027   100102 236100                    LDQ     66,,PR1
         4 001030   000000 756000 xsym               STQ     ERR_CODE

      652    16104    1   CALL ASH$ERROR(ERR_CODE);

  16104  4 001031   000027 630400 5                  EPPR0   23
         4 001032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001033   000000 701000 xent               TSX1    ASH$ERROR
         4 001034   000000 011000                    NOP     0

      653    16105    1   RETURN;

  16105  4 001035   000000 702200 xent               TSX2  ! X66_ARET

  16103  4 001036                       READ_CHN_ERR null
  16103  4 001036                       READ_CVT_ERR null
      654    16106    1   READ_CHN_ERR: ;
      655    16107    1   READ_CVT_ERR: ;
      656    16108    1   CALL ASA$ERROR( USERS_KEY, E$UNABLE_TO_READ_HLP );

  16108  4 001036   000031 630400 5                  EPPR0   25
         4 001037   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 001040   000000 701000 xent               TSX1    ASA$ERROR
         4 001041   000000 011000                    NOP     0

      657    16109    1   RETURN;

  16109  4 001042   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:105  
  16103  4 001043                       DEQ_ERR      null
  16103  4 001043                       ENQ_ERR2     null
  16103  4 001043                       DEL_ERR      null
  16103  4 001043                       ERROR        null
      658    16110    1   DEQ_ERR: ;
      659    16111    1   ENQ_ERR2: ;
      660    16112    1   DEL_ERR: ;
      661    16113    1   ERROR: ;
      662    16114    1   CALL ASH$ERROR( ERR_CODE ) ;

  16114  4 001043   000027 630400 5                  EPPR0   23
         4 001044   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001045   000000 701000 xent               TSX1    ASH$ERROR
         4 001046   000000 011000                    NOP     0

      663    16115    1   RETURN ;

  16115  4 001047   000000 702200 xent               TSX2  ! X66_ARET
      664    16116                                                              /**/
      665    16117    1   END   ASR$R_STATION ;
      666    16118        %EOD ;

PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:106  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6_SUBS.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_STATION.
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:107  

 **** Variables and constants ****

  ****  Section 002  Data  ASR$R_STATION

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/c STRC(171)   r     1 CONFIG_KEY                11-0-0/w STRC(162)   r     1 KL_TERM_KEY
     0-0-0/w STRC(144)   r     1 STAT_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN        r     1 ARS                        5-0-0/w PTR         r     1 BLK$
    15-0-0/w UBIN        r     1 DEVNUM                    23-0-0/b BIT         r     1 DEVS_WRITTEN
    21-0-0/b BIT         r     1 FOUND                     13-0-0/w SBIN        r     1 I
    14-0-0/w UBIN        r     1 J                         27-0-0/c CHAR(2)     r     1 NUM
    12-0-0/w UBIN        r     1 NUM_DEVS                  24-0-0/w BIT         r     1 REM_TIGR
    31-0-0/w UBIN(9)     r     1 TERM_CNT                 176-0-0/b BIT         r     1 TERM_EXT
    32-0-0/c CHAR(8)     r     1 TERM_LIST(0:49)
     3-0-0/w PTR         r     1 TREC$                     10-0-0/w UBIN        r     1 TWSN#
    11-0-0/c CHAR(4)     r     1 TWSNC                      4-0-0/w PTR         r     1 TWSNR$
     7-0-0/w UBIN        r     1 TWSN_ARS                  26-0-0/c CHAR(2)     r     1 TYPE
    22-0-0/b BIT         r     1 WRITE_DEVS                17-0-0/w PTR         r     1 WSNCVT$
    25-0-0/w UBIN        r     1 WSN_INDEX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 AS_BLANK                   0-0-0/b BIT         r     1 AS_FALSE
     0-0-0/w STRC(369)   r     1 AS_FIELD1                  0-0-0/b BIT         r     1 AS_TRUE
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DSEG1$
     0-0-0/w UBIN        r     1 DSEG1SIZE                  0-0-0/w PTR         r     1 DSEG2$
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:108  
     0-0-0/w UBIN        r     1 DSEG2SIZE                  0-0-0/b BIT         r     1 DSEG_FLG
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/b STRC        r     1 MERR_CODE
     0-0-0/w PTR         r     1 NODE$                      0-0-0/c STRC(378)   r     1 USERS_KEY

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(576)   r     1 KL$TREC                    0-0-0/w STRC(576)   r     1 KL$TWSNREC
     0-0-0/w STRC(144)   r     1 KL$WSNCVT                  0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASR$R_STATION requires 552 words for executable code.
   Procedure ASR$R_STATION requires 132 words of local(AUTO) storage.
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:109  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:110  
          MINI XREF LISTING

ARS
     15301**DCL     15827<<ASSIGN  15828<>CALL    16027<<ASSIGN  16031<>CALL    16047<<ASSIGN  16051<<ASSIGN
     16053<>CALL
ASA$ERROR
     15465**DCL-ENT 16108--CALL
ASA_BRKS_LOC
     12441**DCL     12441--REDEF
ASB$CLOSE_NETCON
     15471**DCL-ENT 16005--CALL
ASB$DELREC_HLP
     15432**DCL-ENT 15914--CALL    15967--CALL    15970--CALL    15996--CALL    16084--CALL
ASB$DELREC_NETCON
     15468**DCL-ENT 15887--CALL    15998--CALL
ASB$DEQ_HLP
     15441**DCL-ENT 15915--CALL    16054--CALL    16100--CALL
ASB$ENQ_HLP
     15438**DCL-ENT 15862--CALL    15913--CALL    16030--CALL    16083--CALL
ASB$GETSEG
     15435**DCL-ENT 15745--CALL
ASB$READ_HLP
     15453**DCL-ENT 15828--CALL    15863--CALL    16031--CALL
ASB$WRITE_HLP
     15456**DCL-ENT 16053--CALL
ASB$WRITE_LO
     15459**DCL-ENT 15929--CALL    15936--CALL    15962--CALL
ASC$CHECK_TIGR_WSN
     15474**DCL-ENT 15786--CALL
ASH$ERROR
     15444**DCL-ENT 15759--CALL    15780--CALL    15807--CALL    15849--CALL    16104--CALL    16114--CALL
ASH$INFO
     15450**DCL-ENT 15955--CALL    15985--CALL    16017--CALL    16093--CALL
ASH$WARN
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:111  
     15447**DCL-ENT 16073--CALL
ASR$R_DEVWSN
     15462**DCL-ENT 15917--CALL
AS_BLANK
     12301**DCL     15834>>CALLBLT 15962<>CALL    15971>>CALLBLT 16006>>CALLBLT 16037>>ASSIGN  16042>>DOWHILE
AS_DEFAULT.BANNER_PERM
     13134**DCL     13135--REDEF
AS_DEFAULT.BUDGET.MACCT
     13039**DCL     13043--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     13052**DCL     13055--REDEF
AS_DEFAULT.BUDGET.PACCUM
     13035**DCL     13037--REDEF
AS_DEFAULT.BUDGET.PMAXC
     13030**DCL     13032--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     13150**DCL     13151--REDEF   13152--REDEF
AS_DEFAULT_DREC.PASSWORD
     14404**DCL     14408--REDEF
AS_DEFAULT_DREC.RENAME
     14427**DCL     14428--REDEF
AS_DFLT.BANNER_PERM
     12956**DCL     12957--REDEF
AS_DFLT.BUDGET.MACCT
     12861**DCL     12865--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     12874**DCL     12877--REDEF
AS_DFLT.BUDGET.PACCUM
     12857**DCL     12859--REDEF
AS_DFLT.BUDGET.PMAXC
     12852**DCL     12854--REDEF
AS_DFLT.SETUP_CHRA.TXT
     12972**DCL     12973--REDEF   12974--REDEF
AS_FALSE
     12301**DCL     15876>>ASSIGN  15895>>ASSIGN  15919>>IF
AS_FE_MODE
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:112  
     12307**DCL     12308--REDEF
AS_FIELD1.COUNT
     12438**DCL     15835<<ASSIGN  15921<<ASSIGN  15925<<ASSIGN  15932<<ASSIGN  15972<<ASSIGN  16007<<ASSIGN
     16061<<ASSIGN
AS_FIELD1.TEXT
     12438**DCL     15836<<ASSIGN  15922<<ASSIGN  15926<<CALLBLT 15929<>CALL    15933<<CALLBLT 15936<>CALL
     15973<<ASSIGN  16008<<ASSIGN  16062<<ASSIGN
AS_MODE
     12304**DCL     12306--REDEF
AS_MOD_USER.ACCESS
     15169**DCL     15170--REDEF
AS_MOD_USER.BANNER
     15156**DCL     15157--REDEF
AS_MOD_USER.BANNER_PERM
     15158**DCL     15159--REDEF
AS_MOD_USER.BILL
     15164**DCL     15165--REDEF
AS_MOD_USER.CPROC
     15160**DCL     15161--REDEF
AS_MOD_USER.FEBILL
     15240**DCL     15241--REDEF
AS_MOD_USER.FECXTMEM
     15257**DCL     15258--REDEF
AS_MOD_USER.FEMINTS
     15242**DCL     15243--REDEF
AS_MOD_USER.FEMMEM
     15253**DCL     15254--REDEF
AS_MOD_USER.FEMTIME
     15251**DCL     15252--REDEF
AS_MOD_USER.FEPPRIV
     15248**DCL     15250--REDEF
AS_MOD_USER.FEPRIV
     15245**DCL     15247--REDEF
AS_MOD_USER.FORCE_BIT
     15154**DCL     15155--REDEF
AS_MOD_USER.KEY
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:113  
     15236**DCL     15238--REDEF
AS_MOD_USER.LASTCPROC
     15162**DCL     15163--REDEF
AS_MOD_USER.LIMITS.DO_
     15210**DCL     15211--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     15226**DCL     15227--REDEF
AS_MOD_USER.LIMITS.LO
     15206**DCL     15207--REDEF
AS_MOD_USER.LIMITS.MEM
     15202**DCL     15203--REDEF
AS_MOD_USER.LIMITS.MPRIO
     15230**DCL     15231--REDEF
AS_MOD_USER.LIMITS.PDIS
     15218**DCL     15219--REDEF
AS_MOD_USER.LIMITS.PO
     15214**DCL     15215--REDEF
AS_MOD_USER.LIMITS.TDIS
     15222**DCL     15223--REDEF
AS_MOD_USER.LIMITS.TIME
     15198**DCL     15199--REDEF
AS_MOD_USER.MAXENQ
     15179**DCL     15180--REDEF
AS_MOD_USER.PERM_BIT
     15152**DCL     15153--REDEF
AS_MOD_USER.PPRIV
     15174**DCL     15176--REDEF
AS_MOD_USER.PRIOB
     15181**DCL     15182--REDEF
AS_MOD_USER.PRIV
     15171**DCL     15173--REDEF
AS_MOD_USER.QUAN
     15177**DCL     15178--REDEF
AS_MOD_USER.SETUP
     15150**DCL     15151--REDEF
AS_PROJECT.BANNER_PERM
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:114  
     13490**DCL     13491--REDEF
AS_PROJECT.BUDGET.MACCT
     13395**DCL     13399--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     13408**DCL     13411--REDEF
AS_PROJECT.BUDGET.PACCUM
     13391**DCL     13393--REDEF
AS_PROJECT.BUDGET.PMAXC
     13386**DCL     13388--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     13506**DCL     13507--REDEF   13508--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     13668**DCL     13669--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     13573**DCL     13577--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     13586**DCL     13589--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     13569**DCL     13571--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     13564**DCL     13566--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     13684**DCL     13685--REDEF   13686--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     14890**DCL     14894--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     14913**DCL     14914--REDEF
AS_PROJECT_DREC.PASSWORD
     14728**DCL     14732--REDEF
AS_PROJECT_DREC.RENAME
     14751**DCL     14752--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     13312**DCL     13313--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     13217**DCL     13221--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:115  
     13230**DCL     13233--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     13213**DCL     13215--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     13208**DCL     13210--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     13328**DCL     13329--REDEF   13330--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     14566**DCL     14570--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     14589**DCL     14590--REDEF
AS_TRUE
     12301**DCL     15894>>ASSIGN  15900>>ASSIGN
AS_USERS.BANNER_PERM
     12778**DCL     12779--REDEF
AS_USERS.BUDGET.MACCT
     12683**DCL     12687--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     12696**DCL     12699--REDEF
AS_USERS.BUDGET.PACCUM
     12679**DCL     12681--REDEF
AS_USERS.BUDGET.PMAXC
     12674**DCL     12676--REDEF
AS_USERS.SETUP_CHRA.TXT
     12794**DCL     12795--REDEF   12796--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     13846**DCL     13847--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     13751**DCL     13755--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     13764**DCL     13767--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     13747**DCL     13749--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     13742**DCL     13744--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:116  
     13862**DCL     13863--REDEF   13864--REDEF
B$ALT.CODE
     15722**DCL     15722--REDEF   15723--REDEF   15723--REDEF
B$ALT.ERR
     15723**DCL     16103>>ASSIGN
B$ALT.ERR.ERR#
     15724**DCL     15724--REDEF
B$ALT.EVID
     15723**DCL     15723--REDEF   15723--REDEF
B$TCB.ALT$
     15718**DCL     16103>>ASSIGN
B$TCB$
     15716**DCL     16103>>ASSIGN
BLK$
     15300**DCL     15535--IMP-PTR 15765<<ASSIGN  15766>>IF      15786>>CALL    15823>>ASSIGN  15823>>ASSIGN
     16061>>ASSIGN  16062>>ASSIGN  16062>>ASSIGN
COMMON
     15740**LABEL   15737--GOTO
CONFIG_KEY
     15346**DCL     15887--CALL
CONFIG_KEY.TERMID.LEV
     15368**DCL     15871<<ASSIGN
CONFIG_KEY.TERMID.TERM
     15368**DCL     15377--REDEF
CONFIG_KEY.TERMID.TERM.SUBDEVICE.BYT
     15371**DCL     15884<<ASSIGN  15885<<ASSIGN
CONFIG_KEY.TERMID.TERM.TERM_NAME
     15377**DCL     15883<<ASSIGN
DEL_ERR
     16103**LABEL   15967--CALLALT 15970--CALLALT 15996--CALLALT 16084--CALLALT
DEQ_ERR
     16103**LABEL   16054--CALLALT 16100--CALLALT
DEVNUM
     15308**DCL     15870<<ASSIGN  15884>>ASSIGN  15885>>ASSIGN  15886<<ASSIGN  15886>>ASSIGN  15941>>IF
DEVS_WRITTEN
     15314**DCL     15869<<ASSIGN  15918<<ASSIGN  15918>>ASSIGN  15941>>IF
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:117  
DSEG1$
     12442**DCL     15826>>ASSIGN  16026>>ASSIGN
DSEG1SIZE
     12443**DCL     15827>>ASSIGN  16027>>ASSIGN
DSEG2$
     12443**DCL     15860>>ASSIGN
DSEG2SIZE
     12443**DCL     15861>>ASSIGN
DSEG_FLG
     12442**DCL     15744>>IF
ENQ_ERR2
     16103**LABEL   15862--CALLALT 15913--CALLALT 16030--CALLALT 16083--CALLALT
ERROR
     16103**LABEL   16060--GOTO    16081--GOTO
ERR_CODE
     12436**DCL     12437--REDEF   16103<<ASSIGN  16104<>CALL    16114<>CALL
FIND_STAT
     16034**LABEL   16038--EXIT
FOUND
     15312**DCL     15876<<ASSIGN  15894<<ASSIGN  15919>>IF
I
     15306**DCL     15834<<CALLBLT 15835>>ASSIGN  15873<<DOINDEX 15874>>ASSIGN  15875>>ASSIGN  15877>>IF
     15879>>ASSIGN  15881>>IF      15883>>ASSIGN  15897>>IF      15905>>ASSIGN  15971<<CALLBLT 15972>>ASSIGN
     15992<<DOINDEX 15993>>ASSIGN  16034<<DOINDEX 16035>>IF      16037>>ASSIGN  16041<<ASSIGN  16042>>DOWHILE
     16043<<ASSIGN  16043>>ASSIGN  16045>>IF      16046>>ASSIGN  16047>>ASSIGN
J
     15307**DCL     15896<<DOINDEX 15897>>IF      15899<<ASSIGN  16006<<CALLBLT 16007>>ASSIGN
KL$TREC.ATYP
     15586**DCL     15829>>IF
KL$TREC.PASSWORD
     15639**DCL     15643--REDEF
KL$TREC.RENAME
     15662**DCL     15663--REDEF
KL$TREC.TWSN#
     15636**DCL     15855>>ASSIGN
KL$TWSNREC.DEVS.ACCT
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:118  
     15701**DCL     15879>>ASSIGN
KL$TWSNREC.DEVS.IOM_CONNECTED
     15696**DCL     15877>>IF
KL$TWSNREC.DEVS.NUM
     15689**DCL     15875>>ASSIGN
KL$TWSNREC.DEVS.TDEV
     15695**DCL     15881>>IF
KL$TWSNREC.DEVS.TERM
     15702**DCL     15883>>ASSIGN  15897>>IF      15905>>ASSIGN
KL$TWSNREC.DEVS.TYP
     15688**DCL     15874>>ASSIGN
KL$TWSNREC.NDEV
     15686**DCL     15865>>ASSIGN
KL$WSNCVT.LTWSN
     15712**DCL     16034>>DOINDEX 16041>>ASSIGN  16046<<ASSIGN  16050<<ASSIGN
KL$WSNCVT.WSN
     15713**DCL     16035>>IF      16037<<ASSIGN  16042>>DOWHILE 16047--ASSIGN
KL_DEFAULT.PASSWORD
     15052**DCL     15056--REDEF
KL_DEFAULT.RENAME
     15075**DCL     15076--REDEF
KL_DFLT.PASSWORD
     14242**DCL     14246--REDEF
KL_DFLT.RENAME
     14265**DCL     14266--REDEF
KL_DREC.PASSWORD
     14080**DCL     14084--REDEF
KL_DREC.RENAME
     14103**DCL     14104--REDEF
KL_DREC_CNT.PASSWORD
     13967**DCL     13971--REDEF
KL_DREC_CNT.RENAME
     13990**DCL     13991--REDEF
KL_TERM_KEY
     15393**DCL     15998--CALL
KL_TERM_KEY.TERMID.TERM
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:119  
     15414**DCL     15423--REDEF
KL_TERM_KEY.TERMID.TERM.TERM_NAME
     15423**DCL     15997<<ASSIGN
MERR_CODE.CODE
     12437**DCL     15889>>IF      16000>>IF      16060>>IF      16081>>IF
NETCON_ERR
     16082**LABEL   15891--GOTO    16002--GOTO    16005--CALLALT
NODE$
     12434**DCL     15488--IMP-PTR 15765>>ASSIGN
NUM
     15318**DCL     15875<<ASSIGN
NUM_DEVS
     15305**DCL     15865<<ASSIGN  15873>>DOINDEX
OUT$SYM.COUNT
     15558**DCL     15561--IMP-SIZ 15766>>IF      15823>>ASSIGN  16061>>ASSIGN  16062>>ASSIGN
OUT$SYM.TEXT
     15561**DCL     15823>>ASSIGN  16062>>ASSIGN
OUT$SYM.TEXTC$
     15553**DCL     15786<>CALL
P$NODE.SUBLK$
     15521**DCL     15765>>ASSIGN  15765>>ASSIGN
PROJ_KEY.TEXT
     12314**DCL     12314--REDEF
PROJ_KEY.TXT.PROJECT
     12314**DCL     12314--REDEF
READ_CVT_ERR
     16103**LABEL   16031--CALLALT
READ_TREC_ERR
     16053**LABEL   15828--CALLALT
READ_TWSN_ERR
     16062**LABEL   15863--CALLALT
REMEM_VAR
     12440**DCL     12440--REDEF
REM_FCMD
     12440**DCL     12441--REDEF
REM_TIGR
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:120  
     15315**DCL     15736<<ASSIGN  15740<<ASSIGN  15789>>IF
STAT_KEY
     15328**DCL     15824>>ASSIGN  15969>>ASSIGN  16082>>ASSIGN
STAT_KEY.TXT.ACCT
     15331**DCL     15823<<ASSIGN  15834>>CALLBLT 15836>>ASSIGN  15997>>ASSIGN  16035>>IF
TERM_CNT
     15320**DCL     15872<<ASSIGN  15896>>DOINDEX 15899>>ASSIGN  15905>>ASSIGN  15906<<ASSIGN  15906>>ASSIGN
     15992>>DOINDEX
TERM_EXT
     15322**DCL     15895<<ASSIGN  15900<<ASSIGN  15903>>IF
TERM_LIST
     15321**DCL     15897>>IF      15905<<ASSIGN  15993>>ASSIGN
TREC$
     15298**DCL     15581--IMP-PTR 15826<<ASSIGN  15828<>CALL    15829>>IF      15855>>ASSIGN
TWSN#
     15303**DCL     15856<<CALLBLT
TWSNC
     15304**DCL     15855<<ASSIGN  15856>>CALLBLT 15858>>CALLBLT 15965>>CALLBLT
TWSNR$
     15299**DCL     15683--IMP-PTR 15860<<ASSIGN  15863<>CALL    15865>>ASSIGN  15874>>ASSIGN  15875>>ASSIGN
     15877>>IF      15879>>ASSIGN  15881>>IF      15883>>ASSIGN  15897>>IF      15905>>ASSIGN
TWSN_ARS
     15302**DCL     15861<<ASSIGN  15863<>CALL
TYPE
     15317**DCL     15874<<ASSIGN  15923>>IF
USERS_KEY
     12311**DCL     15824<<ASSIGN  15969<<ASSIGN  16082<<ASSIGN  16108<>CALL
USERS_KEY.COUNT
     12311**DCL     15859<<ASSIGN  15880<<ASSIGN  15911<<ASSIGN  15966<<ASSIGN  15995<<ASSIGN  16029<<ASSIGN
USERS_KEY.TEXT
     12311**DCL     12312--REDEF   12312--REDEF   12312--REDEF   12313--REDEF
USERS_KEY.TXTC
     12312**DCL     15858<<CALLBLT 15879<<ASSIGN  15922>>ASSIGN  15926>>CALLBLT 15933>>CALLBLT 15965<<CALLBLT
     16028<<ASSIGN
USERS_KEY.UKEY.ACCT
     12312**DCL     15971>>CALLBLT 15973>>ASSIGN  15993<<ASSIGN  16006>>CALLBLT 16008>>ASSIGN
PL6.E3A0      #002=ASR$R_STATION File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:53 Page:121  
USERS_KEY.UKEY.UNAME
     12313**DCL     15910<<ASSIGN  15994<<ASSIGN
WRITE_DEVS
     15313**DCL     15868<<ASSIGN  15916<<ASSIGN  15917<>CALL    15918>>ASSIGN
WSNCVT$
     15310**DCL     15709--IMP-PTR 16026<<ASSIGN  16031<>CALL    16034>>DOINDEX 16035>>IF      16037>>ASSIGN
     16041>>ASSIGN  16042>>DOWHILE 16046>>ASSIGN  16050>>ASSIGN  16053<>CALL
WSN_INDEX
     15316**DCL     15786<>CALL

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:122  
      667        1        /*M* ASR$R_CONSOLE - processes REMOVE CONSOLE command.   */
      668        2        /*T***********************************************************/
      669        3        /*T*                                                         */
      670        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      671        5        /*T*                                                         */
      672        6        /*T***********************************************************/
      673        7        ASR$R_CONSOLE: PROC ;
      674        8                                                              /**/
      675        9        %SET LISTSUB = '1'B ;
      676       10
      677       11        /*********************************************************************/
      678       12        /*   Include files   include files   include files   include files   */
      679       13        /*********************************************************************/
      680       14                                                              /**/
      681       15              %INCLUDE  CP_6 ;
      682       96              %INCLUDE  AS_PERR_C ;
      683      698              %INCLUDE B_ERRORS_C ;
      684     1825              %INCLUDE KC$CGBLK ;
      685     1873              %INCLUDE  AS_ENTRIES_M;
      686     2923              %INCLUDE  AS_SUPER_C ;
      687     3358              %INCLUDE  AS_SUBS_C ;
      688     4772              %INCLUDE  AS_MAC_C ;
      689     4852              %INCLUDE  KL_SUPER_C ;
      690     7754              %INCLUDE  XU_MACRO_C ;
      691    10860              %INCLUDE  XU_FORMAT_C ;
      692    11022              %INCLUDE  AS_SUPER_R ;
      693    14038
      694    14039        /*********************************************************************/
      695    14040        /*   Auto data       auto data       auto data       auto data       */
      696    14041        /*********************************************************************/
      697    14042                                                              /**/
      698    14043    1   DCL TREC$ PTR ;
      699    14044    1   DCL TWSNREC$ PTR ;
      700    14045    1   DCL BLK$ PTR ;
      701    14046    1   DCL ARS UBIN WORD ;
      702    14047    1   DCL TWSN_ARS UBIN WORD ;
      703    14048    1   DCL TWSN# UBIN WORD ;
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:123  
      704    14049    1   DCL TWSNC CHAR(4) ;
      705    14050    1   DCL I UBIN WORD ;
      706    14051    1   DCL J UBIN WORD ;
      707    14052    1   DCL DEVS UBIN WORD ;
      708    14053    1   DCL TYPE CHAR(2) ;
      709    14054
      710    14055        /*********************************************************************/
      711    14056        /*   Static data     static data     static data     static data     */
      712    14057        /*********************************************************************/
      713    14058                                                              /**/
      714    14059    1   DCL 1 CON_KEY ALIGNED STATIC ,
      715    14060    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
      716    14061    1          2 TXT UNAL ,
      717    14062    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
      718    14063    1             3 ASTR CHAR(1) UNAL INIT('*') ;
      719    14064
      720    14065        /*********************************************************************/
      721    14066        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      722    14067        /*********************************************************************/
      723    14068                                                              /**/
      724    14069        %ASB$DELREC_HLP ;
      725    14072        %ASB$GETSEG ;
      726    14075        %ASB$ENQ_HLP ;
      727    14078        %ASB$DEQ_HLP ;
      728    14081        %ASH$ERROR ;
      729    14084        %ASH$WARN ;
      730    14087        %ASH$INFO ;
      731    14090        %ASB$READ_HLP ;
      732    14093        %ASB$WRITE_HLP ;
      733    14096
      734    14097        /*********************************************************************/
      735    14098        /*   Local based     local based     local based     local based     */
      736    14099        /*********************************************************************/
      737    14100                                                              /**/
      738    14101            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      739    14102                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      740    14147              %PARSE$SYM( NAME = OUT$SYM ,
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:124  
      741    14148                          STCLASS="BASED(BLK$)") ;
      742    14186              %KL_DREC ( NAME = KL$TREC  ,
      743    14187                    STCLASS = "BASED(TREC$)",
      744    14188                    LAST = "," ) ;
      745    14301              %KC$CGID(FPTN=KC$CGID,
      746    14302                      STCLASS=STCLASS,
      747    14303                      LVL = 2 ,
      748    14304                      LAST = ";" );
      749    14330              %KL_TWSNREC(  NAME = KL$TWSNREC ,
      750    14331                            STCLASS="BASED( TWSNREC$ )") ;
      751    14356
      752    14357        /*********************************************************************/
      753    14358        /*   Procedure       procedure       procedure       procedure       */
      754    14359        /*********************************************************************/
      755    14360                                                              /**/
      756    14361        /*
      757    14362            ***            Begin procedure                    ***
      758    14363        */
      759    14364                                                              /* Did we get data SEG.? */
      760    14365    1   IF NOT DSEG_FLG
      761    14366    1   THEN                                        /* No, get them. */
      762    14367    1      CALL ASB$GETSEG
      763    14368    2      WHENALTRETURN DO;
      764    14369              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );
      765    14384    2         RETURN ;
      766    14385    2         END ;  /*  Whenaltreturn from ASB$GETSEG  */
      767    14386                                                              /* Get console name */
      768    14387    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
      769    14388    1   IF OUT$SYM.COUNT > 8
      770    14389    2   THEN DO ;
      771    14390        /*E*  ERROR:    ASR-E$CNAMETOOBIG-C
      772    14391              MESSAGE:  Console name too long.
      773    14392              MESSAGE1: Console names can be at most 8 characters.
      774    14393        */
      775    14394           %SCREAM( ERR#=E$CNAMETOOBIG , LEVEL=ERROR, MID='R' );
      776    14409    2      RETURN ;
      777    14410    2      END ; /* Then do */
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:125  
      778    14411    1   CON_KEY.TXT.ACCT = OUT$SYM.TEXT ;
      779    14412    1   USERS_KEY = CON_KEY ;
      780    14413                                                              /* Pick up terminal record */
      781    14414    1   TREC$ = DSEG1$ ;
      782    14415    1   ARS = DSEG1SIZE ;
      783    14416    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;
      784    14417    2   IF '0'B THEN DO ;
      785    14418    2   READ_TREC_ERR: ;
      786    14419    2      IF MERR_CODE.CODE = %E$NOKEY
      787    14420    3      THEN DO ;
      788    14421        /*E*  ERROR:    ASR-E$CONSOLENOEXIST-C
      789    14422              MESSAGE0: Console %%U1 %does not exist.
      790    14423        */
      791    14424    3         AS_FIELD1.COUNT = OUT$SYM.COUNT ;
      792    14425    3         AS_FIELD1.TEXT  = OUT$SYM.TEXT ;
      793    14426              %SCREAM( ERR#=E$CONSOLENOEXIST, LEVEL=WARN, MID='R' );
      794    14441    3         END ; /* Then do */
      795    14442    2      ELSE
      796    14443    2         CALL ASH$ERROR( ERR_CODE ) ;
      797    14444    2      RETURN ;
      798    14445    2      END ;
      799    14446    1   IF KL$TREC.ATYP ~= %KLAT_CG# OR KL$TREC.KC$CGID.NAME#.TXT~='OCCG'
      800    14447    2   THEN DO ;
      801    14448        /*E*  ERROR:    ASR-E$NOTCONSOLE-C
      802    14449              MESSAGE0: %"%U1" %is not a console.
      803    14450        */
      804    14451    2      CALL INDEX( I, AS_BLANK, CON_KEY.TXT.ACCT ) ;
      805    14452    2      AS_FIELD1.COUNT = I ;
      806    14453    2      AS_FIELD1.TEXT = CON_KEY.TXT.ACCT ;
      807    14454           %SCREAM( ERR#=E$NOTCONSOLE , LEVEL=ERROR, MID='R' );
      808    14469    2      RETURN ;
      809    14470    2      END ; /* Then do */
      810    14471                                                              /* Get twsn number */
      811    14472    1   TWSNC = KL$TREC.TWSN# ;
      812    14473                                                              /* Pick up twsn record */
      813    14474    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;
      814    14475    1   USERS_KEY.COUNT = 8 ;
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:126  
      815    14476    1   TWSNREC$ = DSEG2$ ;
      816    14477    1   TWSN_ARS = DSEG2SIZE ;
      817    14478    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;
      818    14479    2   IF '0'B THEN DO ;
      819    14480    2   ENQ_ERR: ;
      820    14481    2      RETURN ;
      821    14482    2      END ;
      822    14483    1   CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;
      823    14484    2   IF '0'B THEN DO ;
      824    14485    2   READ_TWSN_ERR: ;
      825    14486    2      CALL ASH$ERROR( ERR_CODE ) ;
      826    14487    2      RETURN ;
      827    14488    2      END ;
      828    14489    1   TYPE = 'OC' ;
      829    14490    1   DEVS = KL$TWSNREC.NDEV ;
      830    14491    2   DO I = 0 TO DEVS-1 ;
      831    14492    2      IF KL$TWSNREC.DEVS.TYP(I) = TYPE AND KL$TWSNREC.DEVS.ACCT(I) =
      832    14493    2           CON_KEY.TXT.ACCT
      833    14494    3      THEN DO ;
      834    14495    4         DO J = I TO DEVS-2 ;
      835    14496    4            KL$TWSNREC.DEVS(J) = KL$TWSNREC.DEVS(J+1) ;
      836    14497    4            END ;  /* Do j */
      837    14498    3         KL$TWSNREC.NDEV = KL$TWSNREC.NDEV - 1 ;
      838    14499    3         TWSN_ARS = TWSN_ARS - LENGTHC( KL$TWSNREC.DEVS(0) ) ;
      839    14500    3         I = DEVS ;
      840    14501    3         END ;  /* End then do */
      841    14502    2      END ; /* Do i */
      842    14503                                                              /* Write twsn record */
      843    14504    1   CALL ASB$WRITE_HLP( TWSNREC$, TWSN_ARS ) ;
      844    14505                                                              /* Delete console record */
      845    14506    1   USERS_KEY = CON_KEY ;
      846    14507    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;
      847    14508    1   CALL ASB$DEQ_HLP ALTRET (ENQ_ERR);
      848    14509    2   IF '0'B THEN DO ;
      849    14510    2   DEL_ERR: ;
      850    14511    2      CALL ASH$ERROR( ERR_CODE ) ;
      851    14512    2      RETURN ;
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:127  
      852    14513    2      END ;
      853    14514                                                              /**/
      854    14515        /*E*  ERROR: ASR-E$CONREMOVED-C
      855    14516              MESSAGE0: Console% %U1% removed.
      856    14517              MESSAGE1: Yes it's really gone!!!!!!
      857    14518        */
      858    14519    1   CALL INDEX( I, ' ', CON_KEY.TXT.ACCT );
      859    14520    1   AS_FIELD1.COUNT = I;
      860    14521    1   AS_FIELD1.TEXT = CON_KEY.TXT.ACCT;
      861    14522        %SCREAM( ERR#=E$CONREMOVED, LEVEL=INFO, MID='R' );
      862    14537                                                              /**/
      863    14538    1   RETURN ;
      864    14539                                                              /**/
      865    14540    1   END   ASR$R_CONSOLE ;
      866    14541        %EOD ;

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:128  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_CONSOLE.

   Procedure ASR$R_CONSOLE requires 218 words for executable code.
   Procedure ASR$R_CONSOLE requires 16 words of local(AUTO) storage.

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:129  

 Object Unit name= ASR$R_CONSOLE                              File name= ASR$R_HLP.:E05TOU
 UTS= JUL 29 '97 10:54:01.16 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none     3      3  ASR$R_CONSOLE
    3  RoData even  UTS      7      7  ASR$R_CONSOLE
    4   Proc  even  none   218    332  ASR$R_CONSOLE
    5  RoData even  none     6      6  ASR$R_CONSOLE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASR$R_CONSOLE
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:130  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       2 ASB$WRITE_HLP
 yes     yes           Std       0 ASB$DELREC_HLP
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       3 ASB$READ_HLP
 yes     yes           Std       0 ASB$ENQ_HLP
         yes           Std       2 ASH$INFO
         yes           Std       2 ASH$WARN
 yes     yes           Std       0 ASB$DEQ_HLP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_BLANK                         r    AS_MODE
r    AS_FE_MODE                            M$LO                                  USERS_KEY
     NODE$                                 ERR_CODE                              AS_FIELD1
     REMEM_VAR                             REM_FCMD                              ASA_BRKS_LOC
     DSEG_FLG                              DSEG1$                                DSEG1SIZE
     DSEG2$                                DSEG2SIZE                             B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:131  


      667        1        /*M* ASR$R_CONSOLE - processes REMOVE CONSOLE command.   */
      668        2        /*T***********************************************************/
      669        3        /*T*                                                         */
      670        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      671        5        /*T*                                                         */
      672        6        /*T***********************************************************/
      673        7        ASR$R_CONSOLE: PROC ;

      7  4 000000   000000 700200 xent  ASR$R_CONSO* TSX0  ! X66_AUTO_0
         4 000001   000020 000000                    ZERO    16,0

      674        8                                                              /**/
      675        9        %SET LISTSUB = '1'B ;
      676       10
      677       11        /*********************************************************************/
      678       12        /*   Include files   include files   include files   include files   */
      679       13        /*********************************************************************/
      680       14                                                              /**/
      681       15              %INCLUDE  CP_6 ;
      682       96              %INCLUDE  AS_PERR_C ;
      683      698              %INCLUDE B_ERRORS_C ;
      684     1825              %INCLUDE KC$CGBLK ;
      685     1873              %INCLUDE  AS_ENTRIES_M;
      686     2923              %INCLUDE  AS_SUPER_C ;
      687     3358              %INCLUDE  AS_SUBS_C ;
      688     4772              %INCLUDE  AS_MAC_C ;
      689     4852              %INCLUDE  KL_SUPER_C ;
      690     7754              %INCLUDE  XU_MACRO_C ;
      691    10860              %INCLUDE  XU_FORMAT_C ;
      692    11022              %INCLUDE  AS_SUPER_R ;
      693    14038
      694    14039        /*********************************************************************/
      695    14040        /*   Auto data       auto data       auto data       auto data       */
      696    14041        /*********************************************************************/
      697    14042                                                              /**/
      698    14043    1   DCL TREC$ PTR ;
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:132  
      699    14044    1   DCL TWSNREC$ PTR ;
      700    14045    1   DCL BLK$ PTR ;
      701    14046    1   DCL ARS UBIN WORD ;
      702    14047    1   DCL TWSN_ARS UBIN WORD ;
      703    14048    1   DCL TWSN# UBIN WORD ;
      704    14049    1   DCL TWSNC CHAR(4) ;
      705    14050    1   DCL I UBIN WORD ;
      706    14051    1   DCL J UBIN WORD ;
      707    14052    1   DCL DEVS UBIN WORD ;
      708    14053    1   DCL TYPE CHAR(2) ;
      709    14054
      710    14055        /*********************************************************************/
      711    14056        /*   Static data     static data     static data     static data     */
      712    14057        /*********************************************************************/
      713    14058                                                              /**/
      714    14059    1   DCL 1 CON_KEY ALIGNED STATIC ,
      715    14060    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
      716    14061    1          2 TXT UNAL ,
      717    14062    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
      718    14063    1             3 ASTR CHAR(1) UNAL INIT('*') ;
      719    14064
      720    14065        /*********************************************************************/
      721    14066        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      722    14067        /*********************************************************************/
      723    14068                                                              /**/
      724    14069        %ASB$DELREC_HLP ;
      725    14072        %ASB$GETSEG ;
      726    14075        %ASB$ENQ_HLP ;
      727    14078        %ASB$DEQ_HLP ;
      728    14081        %ASH$ERROR ;
      729    14084        %ASH$WARN ;
      730    14087        %ASH$INFO ;
      731    14090        %ASB$READ_HLP ;
      732    14093        %ASB$WRITE_HLP ;
      733    14096
      734    14097        /*********************************************************************/
      735    14098        /*   Local based     local based     local based     local based     */
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:133  
      736    14099        /*********************************************************************/
      737    14100                                                              /**/
      738    14101            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      739    14102                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      740    14147              %PARSE$SYM( NAME = OUT$SYM ,
      741    14148                          STCLASS="BASED(BLK$)") ;
      742    14186              %KL_DREC ( NAME = KL$TREC  ,
      743    14187                    STCLASS = "BASED(TREC$)",
      744    14188                    LAST = "," ) ;
      745    14301              %KC$CGID(FPTN=KC$CGID,
      746    14302                      STCLASS=STCLASS,
      747    14303                      LVL = 2 ,
      748    14304                      LAST = ";" );
      749    14330              %KL_TWSNREC(  NAME = KL$TWSNREC ,
      750    14331                            STCLASS="BASED( TWSNREC$ )") ;
      751    14356
      752    14357        /*********************************************************************/
      753    14358        /*   Procedure       procedure       procedure       procedure       */
      754    14359        /*********************************************************************/
      755    14360                                                              /**/
      756    14361        /*
      757    14362            ***            Begin procedure                    ***
      758    14363        */
      759    14364                                                              /* Did we get data SEG.? */
      760    14365    1   IF NOT DSEG_FLG

  14365  4 000002   000000 234000 xsym               SZN     DSEG_FLG
         4 000003   000015 604000 4                  TMI     s:14387

      761    14366    1   THEN                                        /* No, get them. */
      762    14367    1      CALL ASB$GETSEG

  14367  4 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000005   000000 701000 xent               TSX1    ASB$GETSEG
         4 000006   000010 702000 4                  TSX2    s:14381
         4 000007   000015 710000 4                  TRA     s:14387

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:134  
      763    14368    2      WHENALTRETURN DO;

      764    14369              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );

  14381  4 000010   000000 630400 5                  EPPR0   0
         4 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000012   000000 701000 xent               TSX1    ASH$ERROR
         4 000013   000000 011000                    NOP     0

      765    14384    2         RETURN ;

  14384  4 000014   000000 702200 xent               TSX2  ! X66_ARET

      766    14385    2         END ;  /*  Whenaltreturn from ASB$GETSEG  */
      767    14386                                                              /* Get console name */
      768    14387    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  14387  4 000015   000000 470400 xsym               LDP0    NODE$
         4 000016   000003 471500                    LDP1    3,,PR0
         4 000017   100003 236100                    LDQ     3,,PR1
         4 000020   200005 756100                    STQ     BLK$,,AUTO

      769    14388    1   IF OUT$SYM.COUNT > 8

  14388  4 000021   200005 473500                    LDP3    BLK$,,AUTO
         4 000022   300004 236100                    LDQ     4,,PR3
         4 000023   777000 376003                    ANQ     -512,DU
         4 000024   011000 116003                    CMPQ    4608,DU
         4 000025   000033 602000 4                  TNC     s:14411

      770    14389    2   THEN DO ;

      771    14390        /*E*  ERROR:    ASR-E$CNAMETOOBIG-C
      772    14391              MESSAGE:  Console name too long.
      773    14392              MESSAGE1: Console names can be at most 8 characters.
      774    14393        */
      775    14394           %SCREAM( ERR#=E$CNAMETOOBIG , LEVEL=ERROR, MID='R' );
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:135  

  14406  4 000026   000001 630400 5                  EPPR0   1
         4 000027   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000030   000000 701000 xent               TSX1    ASH$ERROR
         4 000031   000000 011000                    NOP     0

      776    14409    2      RETURN ;

  14409  4 000032   000000 702200 xent               TSX2  ! X66_ARET

      777    14410    2      END ; /* Then do */
      778    14411    1   CON_KEY.TXT.ACCT = OUT$SYM.TEXT ;

  14411  4 000033   300004 236100                    LDQ     4,,PR3
         4 000034   000033 772000                    QRL     27
         4 000035   000000 620006                    EAX0    0,QL
         4 000036   040000 100540                    MLR     fill='040'O
         4 000037   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         4 000040   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8

      779    14412    1   USERS_KEY = CON_KEY ;

  14412  4 000041   000000 100400                    MLR     fill='000'O
         4 000042   000000 000012 2                  ADSC9   CON_KEY                  cn=0,n=10
         4 000043   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      780    14413                                                              /* Pick up terminal record */
      781    14414    1   TREC$ = DSEG1$ ;

  14414  4 000044   000000 236000 xsym               LDQ     DSEG1$
         4 000045   200003 756100                    STQ     TREC$,,AUTO

      782    14415    1   ARS = DSEG1SIZE ;

  14415  4 000046   000000 235000 xsym               LDA     DSEG1SIZE
         4 000047   200006 755100                    STA     ARS,,AUTO

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:136  
      783    14416    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;

  14416  4 000050   200006 631500                    EPPR1   ARS,,AUTO
         4 000051   200017 451500                    STP1    TYPE+2,,AUTO
         4 000052   200003 634500                    EPPR4   TREC$,,AUTO
         4 000053   200016 454500                    STP4    TYPE+1,,AUTO
         4 000054   200016 630500                    EPPR0   TYPE+1,,AUTO
         4 000055   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000056   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000057   000061 702000 4                  TSX2    READ_TREC_ERR

      784    14417    2   IF '0'B THEN DO ;

  14417  4 000060   000110 710000 4                  TRA     s:14446

  14409  4 000061                       READ_TREC_E* null
      785    14418    2   READ_TREC_ERR: ;
      786    14419    2      IF MERR_CODE.CODE = %E$NOKEY

  14419  4 000061   000000 236000 xsym               LDQ     ERR_CODE
         4 000062   377770 376007                    ANQ     131064,DL
         4 000063   001020 116007                    CMPQ    528,DL
         4 000064   000103 601000 4                  TNZ     s:14443

      787    14420    3      THEN DO ;

      788    14421        /*E*  ERROR:    ASR-E$CONSOLENOEXIST-C
      789    14422              MESSAGE0: Console %%U1 %does not exist.
      790    14423        */
      791    14424    3         AS_FIELD1.COUNT = OUT$SYM.COUNT ;

  14424  4 000065   200005 470500                    LDP0    BLK$,,AUTO
         4 000066   000004 236100                    LDQ     4,,PR0
         4 000067   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      792    14425    3         AS_FIELD1.TEXT  = OUT$SYM.TEXT ;

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:137  
  14425  4 000070   000004 236100                    LDQ     4,,PR0
         4 000071   000033 772000                    QRL     27
         4 000072   000000 620006                    EAX0    0,QL
         4 000073   040000 100540                    MLR     fill='040'O
         4 000074   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000075   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      793    14426              %SCREAM( ERR#=E$CONSOLENOEXIST, LEVEL=WARN, MID='R' );

  14436  4 000076   000002 630400 5                  EPPR0   2
         4 000077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000100   000000 701000 xent               TSX1    ASH$WARN
         4 000101   000000 011000                    NOP     0

      794    14441    3         END ; /* Then do */

  14441  4 000102   000107 710000 4                  TRA     s:14444

      795    14442    2      ELSE
      796    14443    2         CALL ASH$ERROR( ERR_CODE ) ;

  14443  4 000103   000003 630400 5                  EPPR0   3
         4 000104   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000105   000000 701000 xent               TSX1    ASH$ERROR
         4 000106   000000 011000                    NOP     0

      797    14444    2      RETURN ;

  14444  4 000107   000000 702200 xent               TSX2  ! X66_ARET

      798    14445    2      END ;
      799    14446    1   IF KL$TREC.ATYP ~= %KLAT_CG# OR KL$TREC.KC$CGID.NAME#.TXT~='OCCG'

  14446  4 000110   200003 470500                    LDP0    TREC$,,AUTO
         4 000111   000000 236100                    LDQ     0,,PR0
         4 000112   777000 376003                    ANQ     -512,DU
         4 000113   002000 116003                    CMPQ    1024,DU
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:138  
         4 000114   000121 601000 4                  TNZ     s:14451
         4 000115   040000 106500                    CMPC    fill='040'O
         4 000116   000024 200037                    ADSC9   20,,PR0                  cn=1,n=31
         4 000117   000003 000004 3                  ADSC9   3                        cn=0,n=4
         4 000120   000140 600000 4                  TZE     s:14472

      800    14447    2   THEN DO ;

      801    14448        /*E*  ERROR:    ASR-E$NOTCONSOLE-C
      802    14449              MESSAGE0: %"%U1" %is not a console.
      803    14450        */
      804    14451    2      CALL INDEX( I, AS_BLANK, CON_KEY.TXT.ACCT ) ;

  14451  4 000121   000000 124400                    SCM     mask='000'O
         4 000122   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8
         4 000123   000000 000001 xsym               ADSC9   AS_BLANK                 cn=0,n=1
         4 000124   200012 000100                    ARG     I,,AUTO

      805    14452    2      AS_FIELD1.COUNT = I ;

  14452  4 000125   200012 236100                    LDQ     I,,AUTO
         4 000126   000033 736000                    QLS     27
         4 000127   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      806    14453    2      AS_FIELD1.TEXT = CON_KEY.TXT.ACCT ;

  14453  4 000130   040000 100400                    MLR     fill='040'O
         4 000131   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8
         4 000132   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      807    14454           %SCREAM( ERR#=E$NOTCONSOLE , LEVEL=ERROR, MID='R' );

  14466  4 000133   000004 630400 5                  EPPR0   4
         4 000134   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000135   000000 701000 xent               TSX1    ASH$ERROR
         4 000136   000000 011000                    NOP     0

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:139  
      808    14469    2      RETURN ;

  14469  4 000137   000000 702200 xent               TSX2  ! X66_ARET

      809    14470    2      END ; /* Then do */
      810    14471                                                              /* Get twsn number */
      811    14472    1   TWSNC = KL$TREC.TWSN# ;

  14472  4 000140   000001 236100                    LDQ     1,,PR0
         4 000141   200011 756100                    STQ     TWSNC,,AUTO

      812    14473                                                              /* Pick up twsn record */
      813    14474    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;

  14474  4 000142   040000 100400                    MLR     fill='040'O
         4 000143   000005 000004 3                  ADSC9   5                        cn=0,n=4
         4 000144   000000 200004 xsym               ADSC9   USERS_KEY                cn=1,n=4
         4 000145   040000 100500                    MLR     fill='040'O
         4 000146   200011 000004                    ADSC9   TWSNC,,AUTO              cn=0,n=4
         4 000147   000001 200045 xsym               ADSC9   USERS_KEY+1              cn=1,n=37

      814    14475    1   USERS_KEY.COUNT = 8 ;

  14475  4 000150   010000 236003                    LDQ     4096,DU
         4 000151   000000 552040 xsym               STBQ    USERS_KEY,'40'O

      815    14476    1   TWSNREC$ = DSEG2$ ;

  14476  4 000152   000000 236000 xsym               LDQ     DSEG2$
         4 000153   200004 756100                    STQ     TWSNREC$,,AUTO

      816    14477    1   TWSN_ARS = DSEG2SIZE ;

  14477  4 000154   000000 235000 xsym               LDA     DSEG2SIZE
         4 000155   200007 755100                    STA     TWSN_ARS,,AUTO

      817    14478    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:140  

  14478  4 000156   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000157   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000160   000162 702000 4                  TSX2    ENQ_ERR

      818    14479    2   IF '0'B THEN DO ;

  14479  4 000161   000163 710000 4                  TRA     s:14483

  14469  4 000162                       ENQ_ERR      null
      819    14480    2   ENQ_ERR: ;
      820    14481    2      RETURN ;

  14481  4 000162   000000 702200 xent               TSX2  ! X66_ARET

      821    14482    2      END ;
      822    14483    1   CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;

  14483  4 000163   200007 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000164   200017 450500                    STP0    TYPE+2,,AUTO
         4 000165   200004 631500                    EPPR1   TWSNREC$,,AUTO
         4 000166   200016 451500                    STP1    TYPE+1,,AUTO
         4 000167   200016 630500                    EPPR0   TYPE+1,,AUTO
         4 000170   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000171   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000172   000174 702000 4                  TSX2    READ_TWSN_ERR

      823    14484    2   IF '0'B THEN DO ;

  14484  4 000173   000201 710000 4                  TRA     s:14489

  14481  4 000174                       READ_TWSN_E* null
      824    14485    2   READ_TWSN_ERR: ;
      825    14486    2      CALL ASH$ERROR( ERR_CODE ) ;

  14486  4 000174   000003 630400 5                  EPPR0   3
         4 000175   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:141  
         4 000176   000000 701000 xent               TSX1    ASH$ERROR
         4 000177   000000 011000                    NOP     0

      826    14487    2      RETURN ;

  14487  4 000200   000000 702200 xent               TSX2  ! X66_ARET

      827    14488    2      END ;
      828    14489    1   TYPE = 'OC' ;

  14489  4 000201   000003 220000 3                  LDX0    3
         4 000202   200015 740100                    STX0    TYPE,,AUTO

      829    14490    1   DEVS = KL$TWSNREC.NDEV ;

  14490  4 000203   200004 470500                    LDP0    TWSNREC$,,AUTO
         4 000204   000004 235100                    LDA     4,,PR0
         4 000205   200014 755100                    STA     DEVS,,AUTO

      830    14491    2   DO I = 0 TO DEVS-1 ;

  14491  4 000206   200012 450100                    STZ     I,,AUTO
         4 000207   000261 710000 4                  TRA     s:14502+3

      831    14492    2      IF KL$TWSNREC.DEVS.TYP(I) = TYPE AND KL$TWSNREC.DEVS.ACCT(I) =

  14492  4 000210   200012 236100                    LDQ     I,,AUTO
         4 000211   000013 402007                    MPY     11,DL
         4 000212   200004 470500                    LDP0    TWSNREC$,,AUTO
         4 000213   000005 220106                    LDX0    5,QL,PR0
         4 000214   200015 100100                    CMPX0   TYPE,,AUTO
         4 000215   000256 601000 4                  TNZ     s:14502
         4 000216   200012 236100                    LDQ     I,,AUTO
         4 000217   000054 402007                    MPY     44,DL
         4 000220   040000 106506                    CMPC    fill='040'O
         4 000221   000011 000010                    ADSC9   9,Q,PR0                  cn=0,n=8
         4 000222   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:142  
         4 000223   000256 601000 4                  TNZ     s:14502

      832    14493    2           CON_KEY.TXT.ACCT
      833    14494    3      THEN DO ;

      834    14495    4         DO J = I TO DEVS-2 ;

  14495  4 000224   200012 235100                    LDA     I,,AUTO
         4 000225   200013 755100                    STA     J,,AUTO
         4 000226   000240 710000 4                  TRA     s:14497+3

      835    14496    4            KL$TWSNREC.DEVS(J) = KL$TWSNREC.DEVS(J+1) ;

  14496  4 000227   200013 236100                    LDQ     J,,AUTO
         4 000230   000054 402007                    MPY     44,DL
         4 000231   200004 470500                    LDP0    TWSNREC$,,AUTO
         4 000232   000106 100506                    MLR     fill='000'O
         4 000233   000020 000054                    ADSC9   16,Q,PR0                 cn=0,n=44
         4 000234   000005 000054                    ADSC9   5,Q,PR0                  cn=0,n=44

      836    14497    4            END ;  /* Do j */

  14497  4 000235   200013 235100                    LDA     J,,AUTO
         4 000236   000001 035007                    ADLA    1,DL
         4 000237   200013 755100                    STA     J,,AUTO
         4 000240   200014 236100                    LDQ     DEVS,,AUTO
         4 000241   000002 136007                    SBLQ    2,DL
         4 000242   000245 604000 4                  TMI     s:14498
         4 000243   200013 116100                    CMPQ    J,,AUTO
         4 000244   000227 603000 4                  TRC     s:14496

      837    14498    3         KL$TWSNREC.NDEV = KL$TWSNREC.NDEV - 1 ;

  14498  4 000245   200004 470500                    LDP0    TWSNREC$,,AUTO
         4 000246   000004 235100                    LDA     4,,PR0
         4 000247   000001 135007                    SBLA    1,DL
         4 000250   000004 755100                    STA     4,,PR0
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:143  

      838    14499    3         TWSN_ARS = TWSN_ARS - LENGTHC( KL$TWSNREC.DEVS(0) ) ;

  14499  4 000251   200007 235100                    LDA     TWSN_ARS,,AUTO
         4 000252   000054 135007                    SBLA    44,DL
         4 000253   200007 755100                    STA     TWSN_ARS,,AUTO

      839    14500    3         I = DEVS ;

  14500  4 000254   200014 235100                    LDA     DEVS,,AUTO
         4 000255   200012 755100                    STA     I,,AUTO

      840    14501    3         END ;  /* End then do */

      841    14502    2      END ; /* Do i */

  14502  4 000256   200012 235100                    LDA     I,,AUTO
         4 000257   000001 035007                    ADLA    1,DL
         4 000260   200012 755100                    STA     I,,AUTO
         4 000261   200012 236100                    LDQ     I,,AUTO
         4 000262   200014 116100                    CMPQ    DEVS,,AUTO
         4 000263   000210 602000 4                  TNC     s:14492

      842    14503                                                              /* Write twsn record */
      843    14504    1   CALL ASB$WRITE_HLP( TWSNREC$, TWSN_ARS ) ;

  14504  4 000264   200007 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000265   200017 450500                    STP0    TYPE+2,,AUTO
         4 000266   200004 631500                    EPPR1   TWSNREC$,,AUTO
         4 000267   200016 451500                    STP1    TYPE+1,,AUTO
         4 000270   200016 630500                    EPPR0   TYPE+1,,AUTO
         4 000271   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000272   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000273   000000 011000                    NOP     0

      844    14505                                                              /* Delete console record */
      845    14506    1   USERS_KEY = CON_KEY ;
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:144  

  14506  4 000274   000000 100400                    MLR     fill='000'O
         4 000275   000000 000012 2                  ADSC9   CON_KEY                  cn=0,n=10
         4 000276   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      846    14507    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;

  14507  4 000277   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000300   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000301   000306 702000 4                  TSX2    DEL_ERR

      847    14508    1   CALL ASB$DEQ_HLP ALTRET (ENQ_ERR);

  14508  4 000302   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000303   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000304   000162 702000 4                  TSX2    ENQ_ERR

      848    14509    2   IF '0'B THEN DO ;

  14509  4 000305   000313 710000 4                  TRA     s:14519

  14500  4 000306                       DEL_ERR      null
      849    14510    2   DEL_ERR: ;
      850    14511    2      CALL ASH$ERROR( ERR_CODE ) ;

  14511  4 000306   000003 630400 5                  EPPR0   3
         4 000307   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000310   000000 701000 xent               TSX1    ASH$ERROR
         4 000311   000000 011000                    NOP     0

      851    14512    2      RETURN ;

  14512  4 000312   000000 702200 xent               TSX2  ! X66_ARET

      852    14513    2      END ;
      853    14514                                                              /**/
      854    14515        /*E*  ERROR: ASR-E$CONREMOVED-C
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:145  
      855    14516              MESSAGE0: Console% %U1% removed.
      856    14517              MESSAGE1: Yes it's really gone!!!!!!
      857    14518        */
      858    14519    1   CALL INDEX( I, ' ', CON_KEY.TXT.ACCT );

  14519  4 000313   000000 124400                    SCM     mask='000'O
         4 000314   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8
         4 000315   000035 000001 xsym               ADSC9   B_VECTNIL+29             cn=0,n=1
         4 000316   200012 000100                    ARG     I,,AUTO

      859    14520    1   AS_FIELD1.COUNT = I;

  14520  4 000317   200012 236100                    LDQ     I,,AUTO
         4 000320   000033 736000                    QLS     27
         4 000321   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

      860    14521    1   AS_FIELD1.TEXT = CON_KEY.TXT.ACCT;

  14521  4 000322   040000 100400                    MLR     fill='040'O
         4 000323   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8
         4 000324   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      861    14522        %SCREAM( ERR#=E$CONREMOVED, LEVEL=INFO, MID='R' );

  14530  4 000325   000005 630400 5                  EPPR0   5
         4 000326   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000327   000000 701000 xent               TSX1    ASH$INFO
         4 000330   000000 011000                    NOP     0

      862    14537                                                              /**/
      863    14538    1   RETURN ;

  14538  4 000331   000000 702200 xent               TSX2  ! X66_ARET
      864    14539                                                              /**/
      865    14540    1   END   ASR$R_CONSOLE ;
      866    14541        %EOD ;

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:146  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_CONSOLE.
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:147  

 **** Variables and constants ****

  ****  Section 002  Data  ASR$R_CONSOLE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(90)    r     1 CON_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN        r     1 ARS                        5-0-0/w PTR         r     1 BLK$
    14-0-0/w UBIN        r     1 DEVS                      12-0-0/w UBIN        r     1 I
    13-0-0/w UBIN        r     1 J                          3-0-0/w PTR         r     1 TREC$
    11-0-0/c CHAR(4)     r     1 TWSNC                      4-0-0/w PTR         r     1 TWSNREC$
     7-0-0/w UBIN        r     1 TWSN_ARS                  15-0-0/c CHAR(2)     r     1 TYPE

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 AS_BLANK                   0-0-0/w STRC(369)   r     1 AS_FIELD1
     0-0-0/w PTR         r     1 DSEG1$                     0-0-0/w UBIN        r     1 DSEG1SIZE
     0-0-0/w PTR         r     1 DSEG2$                     0-0-0/w UBIN        r     1 DSEG2SIZE
     0-0-0/b BIT         r     1 DSEG_FLG                   0-0-0/b STRC        r     1 ERR_CODE
     0-0-0/b STRC        r     1 MERR_CODE                  0-0-0/w PTR         r     1 NODE$
     0-0-0/c STRC(378)   r     1 USERS_KEY

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:148  
     0-0-0/w STRC(1008)  r     1 KL$TREC                    0-0-0/w STRC(576)   r     1 KL$TWSNREC
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASR$R_CONSOLE requires 218 words for executable code.
   Procedure ASR$R_CONSOLE requires 16 words of local(AUTO) storage.
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:149  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:150  
          MINI XREF LISTING

ARS
     14046**DCL     14415<<ASSIGN  14416<>CALL
ASA_BRKS_LOC
     11186**DCL     11186--REDEF
ASB$DELREC_HLP
     14070**DCL-ENT 14507--CALL
ASB$DEQ_HLP
     14079**DCL-ENT 14508--CALL
ASB$ENQ_HLP
     14076**DCL-ENT 14478--CALL
ASB$GETSEG
     14073**DCL-ENT 14367--CALL
ASB$READ_HLP
     14091**DCL-ENT 14416--CALL    14483--CALL
ASB$WRITE_HLP
     14094**DCL-ENT 14504--CALL
ASH$ERROR
     14082**DCL-ENT 14381--CALL    14406--CALL    14443--CALL    14466--CALL    14486--CALL    14511--CALL
ASH$INFO
     14088**DCL-ENT 14530--CALL
ASH$WARN
     14085**DCL-ENT 14436--CALL
AS_BLANK
     11046**DCL     14451>>CALLBLT
AS_DEFAULT.BANNER_PERM
     11879**DCL     11880--REDEF
AS_DEFAULT.BUDGET.MACCT
     11784**DCL     11788--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     11797**DCL     11800--REDEF
AS_DEFAULT.BUDGET.PACCUM
     11780**DCL     11782--REDEF
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:151  
AS_DEFAULT.BUDGET.PMAXC
     11775**DCL     11777--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     11895**DCL     11896--REDEF   11897--REDEF
AS_DEFAULT_DREC.PASSWORD
     13149**DCL     13153--REDEF
AS_DEFAULT_DREC.RENAME
     13172**DCL     13173--REDEF
AS_DFLT.BANNER_PERM
     11701**DCL     11702--REDEF
AS_DFLT.BUDGET.MACCT
     11606**DCL     11610--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     11619**DCL     11622--REDEF
AS_DFLT.BUDGET.PACCUM
     11602**DCL     11604--REDEF
AS_DFLT.BUDGET.PMAXC
     11597**DCL     11599--REDEF
AS_DFLT.SETUP_CHRA.TXT
     11717**DCL     11718--REDEF   11719--REDEF
AS_FE_MODE
     11052**DCL     11053--REDEF
AS_FIELD1.COUNT
     11183**DCL     14424<<ASSIGN  14452<<ASSIGN  14520<<ASSIGN
AS_FIELD1.TEXT
     11183**DCL     14425<<ASSIGN  14453<<ASSIGN  14521<<ASSIGN
AS_MODE
     11049**DCL     11051--REDEF
AS_MOD_USER.ACCESS
     13914**DCL     13915--REDEF
AS_MOD_USER.BANNER
     13901**DCL     13902--REDEF
AS_MOD_USER.BANNER_PERM
     13903**DCL     13904--REDEF
AS_MOD_USER.BILL
     13909**DCL     13910--REDEF
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:152  
AS_MOD_USER.CPROC
     13905**DCL     13906--REDEF
AS_MOD_USER.FEBILL
     13985**DCL     13986--REDEF
AS_MOD_USER.FECXTMEM
     14002**DCL     14003--REDEF
AS_MOD_USER.FEMINTS
     13987**DCL     13988--REDEF
AS_MOD_USER.FEMMEM
     13998**DCL     13999--REDEF
AS_MOD_USER.FEMTIME
     13996**DCL     13997--REDEF
AS_MOD_USER.FEPPRIV
     13993**DCL     13995--REDEF
AS_MOD_USER.FEPRIV
     13990**DCL     13992--REDEF
AS_MOD_USER.FORCE_BIT
     13899**DCL     13900--REDEF
AS_MOD_USER.KEY
     13981**DCL     13983--REDEF
AS_MOD_USER.LASTCPROC
     13907**DCL     13908--REDEF
AS_MOD_USER.LIMITS.DO_
     13955**DCL     13956--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     13971**DCL     13972--REDEF
AS_MOD_USER.LIMITS.LO
     13951**DCL     13952--REDEF
AS_MOD_USER.LIMITS.MEM
     13947**DCL     13948--REDEF
AS_MOD_USER.LIMITS.MPRIO
     13975**DCL     13976--REDEF
AS_MOD_USER.LIMITS.PDIS
     13963**DCL     13964--REDEF
AS_MOD_USER.LIMITS.PO
     13959**DCL     13960--REDEF
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:153  
AS_MOD_USER.LIMITS.TDIS
     13967**DCL     13968--REDEF
AS_MOD_USER.LIMITS.TIME
     13943**DCL     13944--REDEF
AS_MOD_USER.MAXENQ
     13924**DCL     13925--REDEF
AS_MOD_USER.PERM_BIT
     13897**DCL     13898--REDEF
AS_MOD_USER.PPRIV
     13919**DCL     13921--REDEF
AS_MOD_USER.PRIOB
     13926**DCL     13927--REDEF
AS_MOD_USER.PRIV
     13916**DCL     13918--REDEF
AS_MOD_USER.QUAN
     13922**DCL     13923--REDEF
AS_MOD_USER.SETUP
     13895**DCL     13896--REDEF
AS_PROJECT.BANNER_PERM
     12235**DCL     12236--REDEF
AS_PROJECT.BUDGET.MACCT
     12140**DCL     12144--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12153**DCL     12156--REDEF
AS_PROJECT.BUDGET.PACCUM
     12136**DCL     12138--REDEF
AS_PROJECT.BUDGET.PMAXC
     12131**DCL     12133--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12251**DCL     12252--REDEF   12253--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     12413**DCL     12414--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     12318**DCL     12322--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     12331**DCL     12334--REDEF
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:154  
AS_PROJECT_DFLT.BUDGET.PACCUM
     12314**DCL     12316--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     12309**DCL     12311--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     12429**DCL     12430--REDEF   12431--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     13635**DCL     13639--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     13658**DCL     13659--REDEF
AS_PROJECT_DREC.PASSWORD
     13473**DCL     13477--REDEF
AS_PROJECT_DREC.RENAME
     13496**DCL     13497--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12057**DCL     12058--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     11962**DCL     11966--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     11975**DCL     11978--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     11958**DCL     11960--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     11953**DCL     11955--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12073**DCL     12074--REDEF   12075--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     13311**DCL     13315--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     13334**DCL     13335--REDEF
AS_USERS.BANNER_PERM
     11523**DCL     11524--REDEF
AS_USERS.BUDGET.MACCT
     11428**DCL     11432--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     11441**DCL     11444--REDEF
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:155  
AS_USERS.BUDGET.PACCUM
     11424**DCL     11426--REDEF
AS_USERS.BUDGET.PMAXC
     11419**DCL     11421--REDEF
AS_USERS.SETUP_CHRA.TXT
     11539**DCL     11540--REDEF   11541--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     12591**DCL     12592--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     12496**DCL     12500--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     12509**DCL     12512--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     12492**DCL     12494--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     12487**DCL     12489--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     12607**DCL     12608--REDEF   12609--REDEF
BLK$
     14045**DCL     14155--IMP-PTR 14387<<ASSIGN  14388>>IF      14411>>ASSIGN  14411>>ASSIGN  14424>>ASSIGN
     14425>>ASSIGN  14425>>ASSIGN
CON_KEY
     14059**DCL     14412>>ASSIGN  14506>>ASSIGN
CON_KEY.TXT.ACCT
     14062**DCL     14411<<ASSIGN  14451>>CALLBLT 14453>>ASSIGN  14492>>IF      14519>>CALLBLT 14521>>ASSIGN
DEL_ERR
     14500**LABEL   14507--CALLALT
DEVS
     14052**DCL     14490<<ASSIGN  14491>>DOINDEX 14495>>DOINDEX 14500>>ASSIGN
DSEG1$
     11187**DCL     14414>>ASSIGN
DSEG1SIZE
     11188**DCL     14415>>ASSIGN
DSEG2$
     11188**DCL     14476>>ASSIGN
DSEG2SIZE
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:156  
     11188**DCL     14477>>ASSIGN
DSEG_FLG
     11187**DCL     14365>>IF
ENQ_ERR
     14469**LABEL   14478--CALLALT 14508--CALLALT
ERR_CODE
     11181**DCL     11182--REDEF   14443<>CALL    14486<>CALL    14511<>CALL
I
     14050**DCL     14451<<CALLBLT 14452>>ASSIGN  14491<<DOINDEX 14492>>IF      14492>>IF      14495>>DOINDEX
     14500<<ASSIGN  14519<<CALLBLT 14520>>ASSIGN
J
     14051**DCL     14495<<DOINDEX 14496>>ASSIGN  14496>>ASSIGN
KL$TREC.ATYP
     14206**DCL     14446>>IF
KL$TREC.KC$CGID.NAME#.TXT
     14328**DCL     14446>>IF
KL$TREC.PASSWORD
     14259**DCL     14263--REDEF
KL$TREC.RENAME
     14282**DCL     14283--REDEF
KL$TREC.TWSN#
     14256**DCL     14472>>ASSIGN
KL$TWSNREC.DEVS
     14336**DCL     14496<<ASSIGN  14496>>ASSIGN  14499--ASSIGN
KL$TWSNREC.DEVS.ACCT
     14350**DCL     14492>>IF
KL$TWSNREC.DEVS.TYP
     14337**DCL     14492>>IF
KL$TWSNREC.NDEV
     14335**DCL     14490>>ASSIGN  14498<<ASSIGN  14498>>ASSIGN
KL_DEFAULT.PASSWORD
     13797**DCL     13801--REDEF
KL_DEFAULT.RENAME
     13820**DCL     13821--REDEF
KL_DFLT.PASSWORD
     12987**DCL     12991--REDEF
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:157  
KL_DFLT.RENAME
     13010**DCL     13011--REDEF
KL_DREC.PASSWORD
     12825**DCL     12829--REDEF
KL_DREC.RENAME
     12848**DCL     12849--REDEF
KL_DREC_CNT.PASSWORD
     12712**DCL     12716--REDEF
KL_DREC_CNT.RENAME
     12735**DCL     12736--REDEF
MERR_CODE.CODE
     11182**DCL     14419>>IF
NODE$
     11179**DCL     14108--IMP-PTR 14387>>ASSIGN
OUT$SYM.COUNT
     14178**DCL     14181--IMP-SIZ 14388>>IF      14411>>ASSIGN  14424>>ASSIGN  14425>>ASSIGN
OUT$SYM.TEXT
     14181**DCL     14411>>ASSIGN  14425>>ASSIGN
P$NODE.SUBLK$
     14141**DCL     14387>>ASSIGN  14387>>ASSIGN
PROJ_KEY.TEXT
     11059**DCL     11059--REDEF
PROJ_KEY.TXT.PROJECT
     11059**DCL     11059--REDEF
READ_TREC_ERR
     14409**LABEL   14416--CALLALT
READ_TWSN_ERR
     14481**LABEL   14483--CALLALT
REMEM_VAR
     11185**DCL     11185--REDEF
REM_FCMD
     11185**DCL     11186--REDEF
TREC$
     14043**DCL     14201--IMP-PTR 14414<<ASSIGN  14416<>CALL    14446>>IF      14446>>IF      14472>>ASSIGN
TWSNC
     14049**DCL     14472<<ASSIGN  14474>>CALLBLT
PL6.E3A0      #003=ASR$R_CONSOLE File=ASR$R_HLP.:E05TSI                          TUE 07/29/97 10:54 Page:158  
TWSNREC$
     14044**DCL     14332--IMP-PTR 14476<<ASSIGN  14483<>CALL    14490>>ASSIGN  14492>>IF      14492>>IF
     14496>>ASSIGN  14496>>ASSIGN  14498>>ASSIGN  14498>>ASSIGN  14504<>CALL
TWSN_ARS
     14047**DCL     14477<<ASSIGN  14483<>CALL    14499<<ASSIGN  14499>>ASSIGN  14504<>CALL
TYPE
     14053**DCL     14489<<ASSIGN  14492>>IF
USERS_KEY
     11056**DCL     14412<<ASSIGN  14506<<ASSIGN
USERS_KEY.COUNT
     11056**DCL     14475<<ASSIGN
USERS_KEY.TEXT
     11056**DCL     11057--REDEF   11057--REDEF   11057--REDEF   11058--REDEF
USERS_KEY.TXTC
     11057**DCL     14474<<CALLBLT

PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:159  
      867        1        /*M* ASR$R_DEVICE - processes the REMOVE DEVICE command.   */
      868        2        /*T***********************************************************/
      869        3        /*T*                                                         */
      870        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      871        5        /*T*                                                         */
      872        6        /*T***********************************************************/
      873        7        ASR$R_DEVICE: PROC ;
      874        8                                                              /**/
      875        9        %SET LISTSUB = '1'B ;
      876       10        /*********************************************************************/
      877       11        /*   Include files   include files   include files   include files   */
      878       12        /*********************************************************************/
      879       13                                                              /**/
      880       14              %INCLUDE  CP_6 ;
      881       95              %INCLUDE  AS_PERR_C ;
      882      697              %INCLUDE B_ERRORS_C ;
      883     1824              %INCLUDE KC$CGBLK ;
      884     1872              %INCLUDE  AS_ENTRIES_M;
      885     2922              %INCLUDE  AS_SUPER_C ;
      886     3357              %INCLUDE  AS_SUBS_C ;
      887     4771              %INCLUDE  AS_MAC_C ;
      888     4851              %INCLUDE  KL_SUPER_C ;
      889     7753              %INCLUDE  XU_MACRO_C ;
      890    10859              %INCLUDE  XU_FORMAT_C ;
      891    11021              %INCLUDE  AS_SUPER_R ;
      892    14037
      893    14038        /*********************************************************************/
      894    14039        /*   Auto data       auto data       auto data       auto data       */
      895    14040        /*********************************************************************/
      896    14041                                                              /**/
      897    14042    1   DCL TREC$ PTR ;
      898    14043    1   DCL TWSNREC$ PTR ;
      899    14044    1   DCL BLK$ PTR ;
      900    14045    1   DCL ARS UBIN WORD ;
      901    14046    1   DCL TWSN_ARS UBIN WORD ;
      902    14047    1   DCL TWSN# UBIN WORD ;
      903    14048    1   DCL TWSNC CHAR(4) ;
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:160  
      904    14049    1   DCL I UBIN WORD ;
      905    14050    1   DCL J UBIN WORD ;
      906    14051    1   DCL SIZE SBIN;
      907    14052    1   DCL DEVS UBIN WORD ;
      908    14053    1   DCL TYPE CHAR(2) ;
      909    14054    1   DCL WRITE_DEVS BIT (1);
      910    14055
      911    14056        /*********************************************************************/
      912    14057        /*   Static data     static data     static data     static data     */
      913    14058        /*********************************************************************/
      914    14059                                                              /**/
      915    14060    1   DCL 1 CON_KEY ALIGNED STATIC ,
      916    14061    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
      917    14062    1          2 TXT UNAL ,
      918    14063    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
      919    14064    1             3 ASTR CHAR(1) UNAL INIT('*') ;
      920    14065
      921    14066        /*********************************************************************/
      922    14067        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      923    14068        /*********************************************************************/
      924    14069        %ASB$DELREC_HLP ;
      925    14072        %ASB$GETSEG ;
      926    14075        %ASB$ENQ_HLP ;
      927    14078        %ASB$DEQ_HLP ;
      928    14081        %ASH$ERROR ;
      929    14084        %ASH$WARN ;
      930    14087        %ASH$INFO ;
      931    14090        %ASB$READ_HLP ;
      932    14093        %ASB$WRITE_HLP ;
      933    14096        %ASB$WRITE_LO ;
      934    14099        %ASR$R_DEVWSN ;
      935    14102
      936    14103        /*********************************************************************/
      937    14104        /*   Local based     local based     local based     local based     */
      938    14105        /*********************************************************************/
      939    14106                                                              /**/
      940    14107            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:161  
      941    14108                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      942    14153              %PARSE$SYM( NAME = OUT$SYM ,
      943    14154                          STCLASS="BASED(BLK$)") ;
      944    14192              %KL_DREC ( NAME = KL$TREC  ,
      945    14193                    STCLASS = "BASED(TREC$)",
      946    14194                    LAST = "," ) ;
      947    14307              %KC$CGID(FPTN=KC$CGID,
      948    14308                      STCLASS=STCLASS,
      949    14309                      LVL = 2 ,
      950    14310                      LAST = ";" );
      951    14336              %KL_TWSNREC(  NAME = KL$TWSNREC ,
      952    14337                            STCLASS="BASED( TWSNREC$ )") ;
      953    14362
      954    14363        /*********************************************************************/
      955    14364        /*   Procedure       procedure       procedure       procedure       */
      956    14365        /*********************************************************************/
      957    14366                                                              /**/
      958    14367        /*
      959    14368            ***            Begin procedure                    ***
      960    14369        */
      961    14370                                                              /* Did we get data SEG.? */
      962    14371    1   IF NOT DSEG_FLG
      963    14372    1   THEN                                        /* No, get them. */
      964    14373    1      CALL ASB$GETSEG
      965    14374    2      WHENALTRETURN DO;
      966    14375              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );
      967    14390    2         RETURN ;
      968    14391    2         END ;   /*  Whenaltreturn from ASB$GETSEG  */
      969    14392                                                              /* Get device name */
      970    14393    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
      971    14394    1   IF OUT$SYM.COUNT > 8
      972    14395    2   THEN DO ;
      973    14396        /*E*  ERROR:    ASR-E$DNAMETOOBIG-C
      974    14397              MESSAGE:  Device name too long.
      975    14398              MESSAGE1: Device names can be at most 8 characters.
      976    14399        */
      977    14400           %SCREAM( ERR#=E$DNAMETOOBIG , LEVEL=ERROR, MID='R' );
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:162  
      978    14415    2      RETURN ;
      979    14416    2      END ; /* Then do */
      980    14417    1   CON_KEY.TXT.ACCT = OUT$SYM.TEXT ;
      981    14418    1   USERS_KEY = CON_KEY ;
      982    14419                                                              /* Pick up terminal record */
      983    14420    1   TREC$ = DSEG1$ ;
      984    14421    1   ARS = DSEG1SIZE ;
      985    14422    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;
      986    14423    2   IF '0'B THEN DO ;
      987    14424    2   READ_TREC_ERR: ;
      988    14425    2      IF MERR_CODE.CODE = %E$NOKEY
      989    14426    3      THEN DO ;
      990    14427        /*E*  ERROR:    ASR-E$DEVICENOEXIST-C
      991    14428              MESSAGE0: Device %%U1 %does not exist.
      992    14429        */
      993    14430    3         AS_FIELD1.COUNT = OUT$SYM.COUNT ;
      994    14431    3         AS_FIELD1.TEXT = OUT$SYM.TEXT ;
      995    14432              %SCREAM( ERR#=E$DEVICENOEXIST, LEVEL=WARN, MID='R' );
      996    14447    3         END ; /* Then do */
      997    14448    2      ELSE
      998    14449    2         CALL ASH$ERROR( ERR_CODE ) ;
      999    14450    2      RETURN ;
     1000    14451    2      END ;
     1001    14452    1   IF ( KL$TREC.ATYP ~= %KLAT_CG# OR KL$TREC.KC$CGID.NAME#.TXT='OCCG')
     1002    14453    2        AND KL$TREC.ATYP ~= %KLAT_RES# THEN DO ;
     1003    14454        /*E*  ERROR:    ASR-E$NOTDEVICE-C
     1004    14455              MESSAGE0: %"%U1" %is not a device.
     1005    14456        */
     1006    14457    2      AS_FIELD1.COUNT = OUT$SYM.COUNT ;
     1007    14458    2      AS_FIELD1.TEXT  = OUT$SYM.TEXT ;
     1008    14459           %SCREAM( ERR#=E$NOTDEVICE , LEVEL=ERROR, MID='R' );
     1009    14474    2      RETURN ;
     1010    14475    2      END ; /* Then do */
     1011    14476                                                              /* Get twsn number */
     1012    14477    1   TWSNC = KL$TREC.TWSN# ;
     1013    14478                                                              /* Pick up twsn record */
     1014    14479    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:163  
     1015    14480    1   USERS_KEY.COUNT = 8 ;
     1016    14481    1   TWSNREC$ = DSEG2$ ;
     1017    14482    1   TWSN_ARS = DSEG2SIZE ;
     1018    14483    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;
     1019    14484    2   IF '0'B THEN DO;
     1020    14485    2   ENQ_ERR: ;
     1021    14486    2      RETURN ;
     1022    14487    2      END ;
     1023    14488    1   CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;
     1024    14489    2   IF '0'B THEN DO ;
     1025    14490    2   READ_TWSN_ERR: ;
     1026    14491    2      CALL ASH$ERROR( ERR_CODE ) ;
     1027    14492    2      RETURN ;
     1028    14493    2      END ;
     1029    14494    1   TYPE = SUBSTR(KL$TREC.RENAME,0,2);
     1030    14495    1   DEVS = KL$TWSNREC.NDEV ;
     1031    14496    2   DO I = 0 TO DEVS-1 ;
     1032    14497    2      IF KL$TWSNREC.DEVS.TYP(I) = TYPE AND KL$TWSNREC.DEVS.ACCT(I) =
     1033    14498    2           CON_KEY.TXT.ACCT
     1034    14499    3      THEN DO ;
     1035    14500    4         DO J = I TO DEVS-2 ;
     1036    14501    4            KL$TWSNREC.DEVS(J) = KL$TWSNREC.DEVS(J+1) ;
     1037    14502    4            END ;  /* Do j */
     1038    14503    3         KL$TWSNREC.NDEV = KL$TWSNREC.NDEV - 1 ;
     1039    14504    3         TWSN_ARS = TWSN_ARS - LENGTHC( KL$TWSNREC.DEVS(0) ) ;
     1040    14505    3         I = DEVS ;
     1041    14506    3         END ;  /* End then do */
     1042    14507    2      END ; /* Do i */
     1043    14508                                                              /* Write twsn record */
     1044    14509    1   CALL ASB$WRITE_HLP( TWSNREC$, TWSN_ARS ) ;
     1045    14510                                                              /* Delete device record */
     1046    14511    1   USERS_KEY = CON_KEY ;
     1047    14512    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;
     1048    14513    1   WRITE_DEVS = '1'B; /* Write affected wsns */
     1049    14514    1   CALL ASR$R_DEVWSN (WRITE_DEVS);
     1050    14515    1   CALL ASB$DEQ_HLP ALTRET (ENQ_ERR);
     1051    14516        /*   ERROR: ASR-E$DEVREMOVED_WARN_WSN-0
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:164  
     1052    14517         MESSAGE:WARNING -to maintain wsn and device consistancy, above wsn's should be rebu
             14517        ilt.
     1053    14518             MESSAGE1: There are still references to this device in the stated wsn records.
     1054    14519        */
     1055    14520    1   IF WRITE_DEVS
     1056    14521    2   THEN DO;
     1057    14522           %SCREAM (ERR#=E$DEVREMOVED_WARN_WSN,LEVEL=INFO,MID='R');
     1058    14537    2      END;
     1059    14538    1   CALL ASB$WRITE_LO( AS_BLANK, 1 );
     1060    14539    2   IF '0'B THEN DO ;
     1061    14540    2   DEL_ERR: ;
     1062    14541    2      CALL ASH$ERROR( ERR_CODE ) ;
     1063    14542    2      RETURN ;
     1064    14543    2      END ;
     1065    14544                                                              /**/
     1066    14545    1   SIZE = 16 + OUT$SYM.COUNT;
     1067    14546    1   CALL CONCAT (AS_FIELD1.TEXT, 'Device ', SUBSTR (OUT$SYM.TEXT, 0,
     1068    14547    1        OUT$SYM.COUNT), ' removed.');
     1069    14548    1   CALL ASB$WRITE_LO (SUBSTR (AS_FIELD1.TEXT, 0, SIZE), SIZE);
     1070    14549                                                              /**/
     1071    14550    1   RETURN ;
     1072    14551                                                              /**/
     1073    14552    1   END   ASR$R_DEVICE ;
     1074    14553        %EOD ;

PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:165  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_DEVICE.

   Procedure ASR$R_DEVICE requires 253 words for executable code.
   Procedure ASR$R_DEVICE requires 18 words of local(AUTO) storage.

PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:166  

 Object Unit name= ASR$R_DEVICE                               File name= ASR$R_HLP.:E05TOU
 UTS= JUL 29 '97 10:54:38.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none     3      3  ASR$R_DEVICE
    3  RoData even  UTS     12     14  ASR$R_DEVICE
    4   Proc  even  none   253    375  ASR$R_DEVICE
    5  RoData even  none     9     11  ASR$R_DEVICE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASR$R_DEVICE
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:167  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       2 ASB$WRITE_HLP
 yes     yes           Std       0 ASB$DELREC_HLP
         yes           Std       2 ASB$WRITE_LO
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       3 ASB$READ_HLP
         yes           Std       1 ASR$R_DEVWSN
 yes     yes           Std       0 ASB$ENQ_HLP
         yes           Std       2 ASH$INFO
         yes           Std       2 ASH$WARN
 yes     yes           Std       0 ASB$DEQ_HLP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_BLANK                         r    AS_MODE
r    AS_FE_MODE                            M$LO                                  USERS_KEY
     NODE$                                 ERR_CODE                              AS_FIELD1
     REMEM_VAR                             REM_FCMD                              ASA_BRKS_LOC
     DSEG_FLG                              DSEG1$                                DSEG1SIZE
     DSEG2$                                DSEG2SIZE                             B_VECTNIL
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:168  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:169  


      867        1        /*M* ASR$R_DEVICE - processes the REMOVE DEVICE command.   */
      868        2        /*T***********************************************************/
      869        3        /*T*                                                         */
      870        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      871        5        /*T*                                                         */
      872        6        /*T***********************************************************/
      873        7        ASR$R_DEVICE: PROC ;

      7  4 000000   000000 700200 xent  ASR$R_DEVICE TSX0  ! X66_AUTO_0
         4 000001   000022 000000                    ZERO    18,0

      874        8                                                              /**/
      875        9        %SET LISTSUB = '1'B ;
      876       10        /*********************************************************************/
      877       11        /*   Include files   include files   include files   include files   */
      878       12        /*********************************************************************/
      879       13                                                              /**/
      880       14              %INCLUDE  CP_6 ;
      881       95              %INCLUDE  AS_PERR_C ;
      882      697              %INCLUDE B_ERRORS_C ;
      883     1824              %INCLUDE KC$CGBLK ;
      884     1872              %INCLUDE  AS_ENTRIES_M;
      885     2922              %INCLUDE  AS_SUPER_C ;
      886     3357              %INCLUDE  AS_SUBS_C ;
      887     4771              %INCLUDE  AS_MAC_C ;
      888     4851              %INCLUDE  KL_SUPER_C ;
      889     7753              %INCLUDE  XU_MACRO_C ;
      890    10859              %INCLUDE  XU_FORMAT_C ;
      891    11021              %INCLUDE  AS_SUPER_R ;
      892    14037
      893    14038        /*********************************************************************/
      894    14039        /*   Auto data       auto data       auto data       auto data       */
      895    14040        /*********************************************************************/
      896    14041                                                              /**/
      897    14042    1   DCL TREC$ PTR ;
      898    14043    1   DCL TWSNREC$ PTR ;
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:170  
      899    14044    1   DCL BLK$ PTR ;
      900    14045    1   DCL ARS UBIN WORD ;
      901    14046    1   DCL TWSN_ARS UBIN WORD ;
      902    14047    1   DCL TWSN# UBIN WORD ;
      903    14048    1   DCL TWSNC CHAR(4) ;
      904    14049    1   DCL I UBIN WORD ;
      905    14050    1   DCL J UBIN WORD ;
      906    14051    1   DCL SIZE SBIN;
      907    14052    1   DCL DEVS UBIN WORD ;
      908    14053    1   DCL TYPE CHAR(2) ;
      909    14054    1   DCL WRITE_DEVS BIT (1);
      910    14055
      911    14056        /*********************************************************************/
      912    14057        /*   Static data     static data     static data     static data     */
      913    14058        /*********************************************************************/
      914    14059                                                              /**/
      915    14060    1   DCL 1 CON_KEY ALIGNED STATIC ,
      916    14061    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
      917    14062    1          2 TXT UNAL ,
      918    14063    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
      919    14064    1             3 ASTR CHAR(1) UNAL INIT('*') ;
      920    14065
      921    14066        /*********************************************************************/
      922    14067        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
      923    14068        /*********************************************************************/
      924    14069        %ASB$DELREC_HLP ;
      925    14072        %ASB$GETSEG ;
      926    14075        %ASB$ENQ_HLP ;
      927    14078        %ASB$DEQ_HLP ;
      928    14081        %ASH$ERROR ;
      929    14084        %ASH$WARN ;
      930    14087        %ASH$INFO ;
      931    14090        %ASB$READ_HLP ;
      932    14093        %ASB$WRITE_HLP ;
      933    14096        %ASB$WRITE_LO ;
      934    14099        %ASR$R_DEVWSN ;
      935    14102
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:171  
      936    14103        /*********************************************************************/
      937    14104        /*   Local based     local based     local based     local based     */
      938    14105        /*********************************************************************/
      939    14106                                                              /**/
      940    14107            %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
      941    14108                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
      942    14153              %PARSE$SYM( NAME = OUT$SYM ,
      943    14154                          STCLASS="BASED(BLK$)") ;
      944    14192              %KL_DREC ( NAME = KL$TREC  ,
      945    14193                    STCLASS = "BASED(TREC$)",
      946    14194                    LAST = "," ) ;
      947    14307              %KC$CGID(FPTN=KC$CGID,
      948    14308                      STCLASS=STCLASS,
      949    14309                      LVL = 2 ,
      950    14310                      LAST = ";" );
      951    14336              %KL_TWSNREC(  NAME = KL$TWSNREC ,
      952    14337                            STCLASS="BASED( TWSNREC$ )") ;
      953    14362
      954    14363        /*********************************************************************/
      955    14364        /*   Procedure       procedure       procedure       procedure       */
      956    14365        /*********************************************************************/
      957    14366                                                              /**/
      958    14367        /*
      959    14368            ***            Begin procedure                    ***
      960    14369        */
      961    14370                                                              /* Did we get data SEG.? */
      962    14371    1   IF NOT DSEG_FLG

  14371  4 000002   000000 234000 xsym               SZN     DSEG_FLG
         4 000003   000015 604000 4                  TMI     s:14393

      963    14372    1   THEN                                        /* No, get them. */
      964    14373    1      CALL ASB$GETSEG

  14373  4 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000005   000000 701000 xent               TSX1    ASB$GETSEG
         4 000006   000010 702000 4                  TSX2    s:14387
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:172  
         4 000007   000015 710000 4                  TRA     s:14393

      965    14374    2      WHENALTRETURN DO;

      966    14375              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );

  14387  4 000010   000000 630400 5                  EPPR0   0
         4 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000012   000000 701000 xent               TSX1    ASH$ERROR
         4 000013   000000 011000                    NOP     0

      967    14390    2         RETURN ;

  14390  4 000014   000000 702200 xent               TSX2  ! X66_ARET

      968    14391    2         END ;   /*  Whenaltreturn from ASB$GETSEG  */
      969    14392                                                              /* Get device name */
      970    14393    1   BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  14393  4 000015   000000 470400 xsym               LDP0    NODE$
         4 000016   000003 471500                    LDP1    3,,PR0
         4 000017   100003 236100                    LDQ     3,,PR1
         4 000020   200005 756100                    STQ     BLK$,,AUTO

      971    14394    1   IF OUT$SYM.COUNT > 8

  14394  4 000021   200005 473500                    LDP3    BLK$,,AUTO
         4 000022   300004 236100                    LDQ     4,,PR3
         4 000023   777000 376003                    ANQ     -512,DU
         4 000024   011000 116003                    CMPQ    4608,DU
         4 000025   000033 602000 4                  TNC     s:14417

      972    14395    2   THEN DO ;

      973    14396        /*E*  ERROR:    ASR-E$DNAMETOOBIG-C
      974    14397              MESSAGE:  Device name too long.
      975    14398              MESSAGE1: Device names can be at most 8 characters.
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:173  
      976    14399        */
      977    14400           %SCREAM( ERR#=E$DNAMETOOBIG , LEVEL=ERROR, MID='R' );

  14412  4 000026   000001 630400 5                  EPPR0   1
         4 000027   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000030   000000 701000 xent               TSX1    ASH$ERROR
         4 000031   000000 011000                    NOP     0

      978    14415    2      RETURN ;

  14415  4 000032   000000 702200 xent               TSX2  ! X66_ARET

      979    14416    2      END ; /* Then do */
      980    14417    1   CON_KEY.TXT.ACCT = OUT$SYM.TEXT ;

  14417  4 000033   300004 236100                    LDQ     4,,PR3
         4 000034   000033 772000                    QRL     27
         4 000035   000000 620006                    EAX0    0,QL
         4 000036   040000 100540                    MLR     fill='040'O
         4 000037   300004 200010                    ADSC9   4,,PR3                   cn=1,n=*X0
         4 000040   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8

      981    14418    1   USERS_KEY = CON_KEY ;

  14418  4 000041   000000 100400                    MLR     fill='000'O
         4 000042   000000 000012 2                  ADSC9   CON_KEY                  cn=0,n=10
         4 000043   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

      982    14419                                                              /* Pick up terminal record */
      983    14420    1   TREC$ = DSEG1$ ;

  14420  4 000044   000000 236000 xsym               LDQ     DSEG1$
         4 000045   200003 756100                    STQ     TREC$,,AUTO

      984    14421    1   ARS = DSEG1SIZE ;

  14421  4 000046   000000 235000 xsym               LDA     DSEG1SIZE
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:174  
         4 000047   200006 755100                    STA     ARS,,AUTO

      985    14422    1   CALL ASB$READ_HLP( TREC$, ARS ) ALTRET( READ_TREC_ERR ) ;

  14422  4 000050   200006 631500                    EPPR1   ARS,,AUTO
         4 000051   200021 451500                    STP1    WRITE_DEVS+2,,AUTO
         4 000052   200003 634500                    EPPR4   TREC$,,AUTO
         4 000053   200020 454500                    STP4    WRITE_DEVS+1,,AUTO
         4 000054   200020 630500                    EPPR0   WRITE_DEVS+1,,AUTO
         4 000055   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000056   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000057   000061 702000 4                  TSX2    READ_TREC_ERR

      986    14423    2   IF '0'B THEN DO ;

  14423  4 000060   000110 710000 4                  TRA     s:14452

  14415  4 000061                       READ_TREC_E* null
      987    14424    2   READ_TREC_ERR: ;
      988    14425    2      IF MERR_CODE.CODE = %E$NOKEY

  14425  4 000061   000000 236000 xsym               LDQ     ERR_CODE
         4 000062   377770 376007                    ANQ     131064,DL
         4 000063   001020 116007                    CMPQ    528,DL
         4 000064   000103 601000 4                  TNZ     s:14449

      989    14426    3      THEN DO ;

      990    14427        /*E*  ERROR:    ASR-E$DEVICENOEXIST-C
      991    14428              MESSAGE0: Device %%U1 %does not exist.
      992    14429        */
      993    14430    3         AS_FIELD1.COUNT = OUT$SYM.COUNT ;

  14430  4 000065   200005 470500                    LDP0    BLK$,,AUTO
         4 000066   000004 236100                    LDQ     4,,PR0
         4 000067   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:175  
      994    14431    3         AS_FIELD1.TEXT = OUT$SYM.TEXT ;

  14431  4 000070   000004 236100                    LDQ     4,,PR0
         4 000071   000033 772000                    QRL     27
         4 000072   000000 620006                    EAX0    0,QL
         4 000073   040000 100540                    MLR     fill='040'O
         4 000074   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000075   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

      995    14432              %SCREAM( ERR#=E$DEVICENOEXIST, LEVEL=WARN, MID='R' );

  14442  4 000076   000002 630400 5                  EPPR0   2
         4 000077   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000100   000000 701000 xent               TSX1    ASH$WARN
         4 000101   000000 011000                    NOP     0

      996    14447    3         END ; /* Then do */

  14447  4 000102   000107 710000 4                  TRA     s:14450

      997    14448    2      ELSE
      998    14449    2         CALL ASH$ERROR( ERR_CODE ) ;

  14449  4 000103   000003 630400 5                  EPPR0   3
         4 000104   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000105   000000 701000 xent               TSX1    ASH$ERROR
         4 000106   000000 011000                    NOP     0

      999    14450    2      RETURN ;

  14450  4 000107   000000 702200 xent               TSX2  ! X66_ARET

     1000    14451    2      END ;
     1001    14452    1   IF ( KL$TREC.ATYP ~= %KLAT_CG# OR KL$TREC.KC$CGID.NAME#.TXT='OCCG')

  14452  4 000110   200003 470500                    LDP0    TREC$,,AUTO
         4 000111   000000 236100                    LDQ     0,,PR0
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:176  
         4 000112   777000 376003                    ANQ     -512,DU
         4 000113   002000 116003                    CMPQ    1024,DU
         4 000114   000121 601000 4                  TNZ     s:14452+9
         4 000115   040000 106500                    CMPC    fill='040'O
         4 000116   000024 200037                    ADSC9   20,,PR0                  cn=1,n=31
         4 000117   000003 000004 3                  ADSC9   3                        cn=0,n=4
         4 000120   000141 601000 4                  TNZ     s:14477
         4 000121   003000 116003                    CMPQ    1536,DU
         4 000122   000141 600000 4                  TZE     s:14477

     1002    14453    2        AND KL$TREC.ATYP ~= %KLAT_RES# THEN DO ;

     1003    14454        /*E*  ERROR:    ASR-E$NOTDEVICE-C
     1004    14455              MESSAGE0: %"%U1" %is not a device.
     1005    14456        */
     1006    14457    2      AS_FIELD1.COUNT = OUT$SYM.COUNT ;

  14457  4 000123   200005 471500                    LDP1    BLK$,,AUTO
         4 000124   100004 236100                    LDQ     4,,PR1
         4 000125   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1007    14458    2      AS_FIELD1.TEXT  = OUT$SYM.TEXT ;

  14458  4 000126   100004 236100                    LDQ     4,,PR1
         4 000127   000033 772000                    QRL     27
         4 000130   000000 620006                    EAX0    0,QL
         4 000131   040000 100540                    MLR     fill='040'O
         4 000132   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000133   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1008    14459           %SCREAM( ERR#=E$NOTDEVICE , LEVEL=ERROR, MID='R' );

  14471  4 000134   000004 630400 5                  EPPR0   4
         4 000135   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000136   000000 701000 xent               TSX1    ASH$ERROR
         4 000137   000000 011000                    NOP     0

PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:177  
     1009    14474    2      RETURN ;

  14474  4 000140   000000 702200 xent               TSX2  ! X66_ARET

     1010    14475    2      END ; /* Then do */
     1011    14476                                                              /* Get twsn number */
     1012    14477    1   TWSNC = KL$TREC.TWSN# ;

  14477  4 000141   000001 236100                    LDQ     1,,PR0
         4 000142   200011 756100                    STQ     TWSNC,,AUTO

     1013    14478                                                              /* Pick up twsn record */
     1014    14479    1   CALL CONCAT( USERS_KEY.TXTC, 'TWSN', TWSNC ) ;

  14479  4 000143   040000 100400                    MLR     fill='040'O
         4 000144   000005 000004 3                  ADSC9   5                        cn=0,n=4
         4 000145   000000 200004 xsym               ADSC9   USERS_KEY                cn=1,n=4
         4 000146   040000 100500                    MLR     fill='040'O
         4 000147   200011 000004                    ADSC9   TWSNC,,AUTO              cn=0,n=4
         4 000150   000001 200045 xsym               ADSC9   USERS_KEY+1              cn=1,n=37

     1015    14480    1   USERS_KEY.COUNT = 8 ;

  14480  4 000151   010000 236003                    LDQ     4096,DU
         4 000152   000000 552040 xsym               STBQ    USERS_KEY,'40'O

     1016    14481    1   TWSNREC$ = DSEG2$ ;

  14481  4 000153   000000 236000 xsym               LDQ     DSEG2$
         4 000154   200004 756100                    STQ     TWSNREC$,,AUTO

     1017    14482    1   TWSN_ARS = DSEG2SIZE ;

  14482  4 000155   000000 235000 xsym               LDA     DSEG2SIZE
         4 000156   200007 755100                    STA     TWSN_ARS,,AUTO

     1018    14483    1   CALL ASB$ENQ_HLP ALTRET( ENQ_ERR ) ;
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:178  

  14483  4 000157   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000160   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000161   000163 702000 4                  TSX2    ENQ_ERR

     1019    14484    2   IF '0'B THEN DO;

  14484  4 000162   000164 710000 4                  TRA     s:14488

  14474  4 000163                       ENQ_ERR      null
     1020    14485    2   ENQ_ERR: ;
     1021    14486    2      RETURN ;

  14486  4 000163   000000 702200 xent               TSX2  ! X66_ARET

     1022    14487    2      END ;
     1023    14488    1   CALL ASB$READ_HLP( TWSNREC$, TWSN_ARS ) ALTRET( READ_TWSN_ERR ) ;

  14488  4 000164   200007 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000165   200021 450500                    STP0    WRITE_DEVS+2,,AUTO
         4 000166   200004 631500                    EPPR1   TWSNREC$,,AUTO
         4 000167   200020 451500                    STP1    WRITE_DEVS+1,,AUTO
         4 000170   200020 630500                    EPPR0   WRITE_DEVS+1,,AUTO
         4 000171   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000172   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000173   000175 702000 4                  TSX2    READ_TWSN_ERR

     1024    14489    2   IF '0'B THEN DO ;

  14489  4 000174   000202 710000 4                  TRA     s:14494

  14486  4 000175                       READ_TWSN_E* null
     1025    14490    2   READ_TWSN_ERR: ;
     1026    14491    2      CALL ASH$ERROR( ERR_CODE ) ;

  14491  4 000175   000003 630400 5                  EPPR0   3
         4 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:179  
         4 000177   000000 701000 xent               TSX1    ASH$ERROR
         4 000200   000000 011000                    NOP     0

     1027    14492    2      RETURN ;

  14492  4 000201   000000 702200 xent               TSX2  ! X66_ARET

     1028    14493    2      END ;
     1029    14494    1   TYPE = SUBSTR(KL$TREC.RENAME,0,2);

  14494  4 000202   200003 470500                    LDP0    TREC$,,AUTO
         4 000203   000011 220100                    LDX0    9,,PR0
         4 000204   200016 740100                    STX0    TYPE,,AUTO

     1030    14495    1   DEVS = KL$TWSNREC.NDEV ;

  14495  4 000205   200004 471500                    LDP1    TWSNREC$,,AUTO
         4 000206   100004 235100                    LDA     4,,PR1
         4 000207   200015 755100                    STA     DEVS,,AUTO

     1031    14496    2   DO I = 0 TO DEVS-1 ;

  14496  4 000210   200012 450100                    STZ     I,,AUTO
         4 000211   000263 710000 4                  TRA     s:14507+3

     1032    14497    2      IF KL$TWSNREC.DEVS.TYP(I) = TYPE AND KL$TWSNREC.DEVS.ACCT(I) =

  14497  4 000212   200012 236100                    LDQ     I,,AUTO
         4 000213   000013 402007                    MPY     11,DL
         4 000214   200004 470500                    LDP0    TWSNREC$,,AUTO
         4 000215   000005 220106                    LDX0    5,QL,PR0
         4 000216   200016 100100                    CMPX0   TYPE,,AUTO
         4 000217   000260 601000 4                  TNZ     s:14507
         4 000220   200012 236100                    LDQ     I,,AUTO
         4 000221   000054 402007                    MPY     44,DL
         4 000222   040000 106506                    CMPC    fill='040'O
         4 000223   000011 000010                    ADSC9   9,Q,PR0                  cn=0,n=8
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:180  
         4 000224   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8
         4 000225   000260 601000 4                  TNZ     s:14507

     1033    14498    2           CON_KEY.TXT.ACCT
     1034    14499    3      THEN DO ;

     1035    14500    4         DO J = I TO DEVS-2 ;

  14500  4 000226   200012 235100                    LDA     I,,AUTO
         4 000227   200013 755100                    STA     J,,AUTO
         4 000230   000242 710000 4                  TRA     s:14502+3

     1036    14501    4            KL$TWSNREC.DEVS(J) = KL$TWSNREC.DEVS(J+1) ;

  14501  4 000231   200013 236100                    LDQ     J,,AUTO
         4 000232   000054 402007                    MPY     44,DL
         4 000233   200004 470500                    LDP0    TWSNREC$,,AUTO
         4 000234   000106 100506                    MLR     fill='000'O
         4 000235   000020 000054                    ADSC9   16,Q,PR0                 cn=0,n=44
         4 000236   000005 000054                    ADSC9   5,Q,PR0                  cn=0,n=44

     1037    14502    4            END ;  /* Do j */

  14502  4 000237   200013 235100                    LDA     J,,AUTO
         4 000240   000001 035007                    ADLA    1,DL
         4 000241   200013 755100                    STA     J,,AUTO
         4 000242   200015 236100                    LDQ     DEVS,,AUTO
         4 000243   000002 136007                    SBLQ    2,DL
         4 000244   000247 604000 4                  TMI     s:14503
         4 000245   200013 116100                    CMPQ    J,,AUTO
         4 000246   000231 603000 4                  TRC     s:14501

     1038    14503    3         KL$TWSNREC.NDEV = KL$TWSNREC.NDEV - 1 ;

  14503  4 000247   200004 470500                    LDP0    TWSNREC$,,AUTO
         4 000250   000004 235100                    LDA     4,,PR0
         4 000251   000001 135007                    SBLA    1,DL
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:181  
         4 000252   000004 755100                    STA     4,,PR0

     1039    14504    3         TWSN_ARS = TWSN_ARS - LENGTHC( KL$TWSNREC.DEVS(0) ) ;

  14504  4 000253   200007 235100                    LDA     TWSN_ARS,,AUTO
         4 000254   000054 135007                    SBLA    44,DL
         4 000255   200007 755100                    STA     TWSN_ARS,,AUTO

     1040    14505    3         I = DEVS ;

  14505  4 000256   200015 235100                    LDA     DEVS,,AUTO
         4 000257   200012 755100                    STA     I,,AUTO

     1041    14506    3         END ;  /* End then do */

     1042    14507    2      END ; /* Do i */

  14507  4 000260   200012 235100                    LDA     I,,AUTO
         4 000261   000001 035007                    ADLA    1,DL
         4 000262   200012 755100                    STA     I,,AUTO
         4 000263   200012 236100                    LDQ     I,,AUTO
         4 000264   200015 116100                    CMPQ    DEVS,,AUTO
         4 000265   000212 602000 4                  TNC     s:14497

     1043    14508                                                              /* Write twsn record */
     1044    14509    1   CALL ASB$WRITE_HLP( TWSNREC$, TWSN_ARS ) ;

  14509  4 000266   200007 630500                    EPPR0   TWSN_ARS,,AUTO
         4 000267   200021 450500                    STP0    WRITE_DEVS+2,,AUTO
         4 000270   200004 631500                    EPPR1   TWSNREC$,,AUTO
         4 000271   200020 451500                    STP1    WRITE_DEVS+1,,AUTO
         4 000272   200020 630500                    EPPR0   WRITE_DEVS+1,,AUTO
         4 000273   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000274   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000275   000000 011000                    NOP     0

     1045    14510                                                              /* Delete device record */
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:182  
     1046    14511    1   USERS_KEY = CON_KEY ;

  14511  4 000276   000000 100400                    MLR     fill='000'O
         4 000277   000000 000012 2                  ADSC9   CON_KEY                  cn=0,n=10
         4 000300   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1047    14512    1   CALL ASB$DELREC_HLP ALTRET( DEL_ERR ) ;

  14512  4 000301   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000302   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000303   000332 702000 4                  TSX2    DEL_ERR

     1048    14513    1   WRITE_DEVS = '1'B; /* Write affected wsns */

  14513  4 000304   400000 236003                    LDQ     -131072,DU
         4 000305   200017 756100                    STQ     WRITE_DEVS,,AUTO

     1049    14514    1   CALL ASR$R_DEVWSN (WRITE_DEVS);

  14514  4 000306   200017 630500                    EPPR0   WRITE_DEVS,,AUTO
         4 000307   200020 450500                    STP0    WRITE_DEVS+1,,AUTO
         4 000310   200020 630500                    EPPR0   WRITE_DEVS+1,,AUTO
         4 000311   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000312   000000 701000 xent               TSX1    ASR$R_DEVWSN
         4 000313   000000 011000                    NOP     0

     1050    14515    1   CALL ASB$DEQ_HLP ALTRET (ENQ_ERR);

  14515  4 000314   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000315   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000316   000163 702000 4                  TSX2    ENQ_ERR

     1051    14516        /*   ERROR: ASR-E$DEVREMOVED_WARN_WSN-0
     1052    14517        MESSAGE:WARNING -to maintain wsn and device consistancy, above wsn's should be rebu
             14517        ilt.
     1053    14518             MESSAGE1: There are still references to this device in the stated wsn records.
     1054    14519        */
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:183  
     1055    14520    1   IF WRITE_DEVS

  14520  4 000317   200017 234100                    SZN     WRITE_DEVS,,AUTO
         4 000320   000325 605000 4                  TPL     s:14538

     1056    14521    2   THEN DO;

     1057    14522           %SCREAM (ERR#=E$DEVREMOVED_WARN_WSN,LEVEL=INFO,MID='R');

  14530  4 000321   000005 630400 5                  EPPR0   5
         4 000322   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000323   000000 701000 xent               TSX1    ASH$INFO
         4 000324   000000 011000                    NOP     0

     1058    14537    2      END;

     1059    14538    1   CALL ASB$WRITE_LO( AS_BLANK, 1 );

  14538  4 000325   000006 630400 5                  EPPR0   6
         4 000326   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000327   000000 701000 xent               TSX1    ASB$WRITE_LO
         4 000330   000000 011000                    NOP     0

     1060    14539    2   IF '0'B THEN DO ;

  14539  4 000331   000337 710000 4                  TRA     s:14545

  14530  4 000332                       DEL_ERR      null
     1061    14540    2   DEL_ERR: ;
     1062    14541    2      CALL ASH$ERROR( ERR_CODE ) ;

  14541  4 000332   000003 630400 5                  EPPR0   3
         4 000333   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000334   000000 701000 xent               TSX1    ASH$ERROR
         4 000335   000000 011000                    NOP     0

     1063    14542    2      RETURN ;
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:184  

  14542  4 000336   000000 702200 xent               TSX2  ! X66_ARET

     1064    14543    2      END ;
     1065    14544                                                              /**/
     1066    14545    1   SIZE = 16 + OUT$SYM.COUNT;

  14545  4 000337   200005 470500                    LDP0    BLK$,,AUTO
         4 000340   000004 236100                    LDQ     4,,PR0
         4 000341   000033 772000                    QRL     27
         4 000342   000020 036007                    ADLQ    16,DL
         4 000343   200014 756100                    STQ     SIZE,,AUTO

     1067    14546    1   CALL CONCAT (AS_FIELD1.TEXT, 'Device ', SUBSTR (OUT$SYM.TEXT, 0,

  14546  4 000344   000004 236100                    LDQ     4,,PR0
         4 000345   000033 772000                    QRL     27
         4 000346   040000 100400                    MLR     fill='040'O
         4 000347   000007 000007 3                  ADSC9   7                        cn=0,n=7
         4 000350   000000 200007 xsym               ADSC9   AS_FIELD1                cn=1,n=7
         4 000351   000000 620006                    EAX0    0,QL
         4 000352   040000 100540                    MLR     fill='040'O
         4 000353   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000354   000002 000041 xsym               ADSC9   AS_FIELD1+2              cn=0,n=33
         4 000355   000041 116007                    CMPQ    33,DL
         4 000356   000364 603000 4                  TRC     s:14548
         4 000357   777736 620006                    EAX0    -34,QL
         4 000360   777777 660003                    ERX0    -1,DU
         4 000361   040046 100400                    MLR     fill='040'O
         4 000362   000011 000011 3                  ADSC9   9                        cn=0,n=9
         4 000363   000002 000010 xsym               ADSC9   AS_FIELD1+2,Q            cn=0,n=*X0

     1068    14547    1        OUT$SYM.COUNT), ' removed.');
     1069    14548    1   CALL ASB$WRITE_LO (SUBSTR (AS_FIELD1.TEXT, 0, SIZE), SIZE);

  14548  4 000364   200014 631500                    EPPR1   SIZE,,AUTO
         4 000365   200021 451500                    STP1    WRITE_DEVS+2,,AUTO
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:185  
         4 000366   000010 236000 5                  LDQ     8
         4 000367   200020 756100                    STQ     WRITE_DEVS+1,,AUTO
         4 000370   200020 630500                    EPPR0   WRITE_DEVS+1,,AUTO
         4 000371   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000372   000000 701000 xent               TSX1    ASB$WRITE_LO
         4 000373   000000 011000                    NOP     0

     1070    14549                                                              /**/
     1071    14550    1   RETURN ;

  14550  4 000374   000000 702200 xent               TSX2  ! X66_ARET
     1072    14551                                                              /**/
     1073    14552    1   END   ASR$R_DEVICE ;
     1074    14553        %EOD ;

PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:186  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_DEVICE.
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:187  

 **** Variables and constants ****

  ****  Section 002  Data  ASR$R_DEVICE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(90)    r     1 CON_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN        r     1 ARS                        5-0-0/w PTR         r     1 BLK$
    15-0-0/w UBIN        r     1 DEVS                      12-0-0/w UBIN        r     1 I
    13-0-0/w UBIN        r     1 J                         14-0-0/w SBIN        r     1 SIZE
     3-0-0/w PTR         r     1 TREC$                     11-0-0/c CHAR(4)     r     1 TWSNC
     4-0-0/w PTR         r     1 TWSNREC$                   7-0-0/w UBIN        r     1 TWSN_ARS
    16-0-0/c CHAR(2)     r     1 TYPE                      17-0-0/b BIT         r     1 WRITE_DEVS

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/c CHAR        r     1 AS_BLANK                   0-0-0/w STRC(369)   r     1 AS_FIELD1
     0-0-0/w PTR         r     1 DSEG1$                     0-0-0/w UBIN        r     1 DSEG1SIZE
     0-0-0/w PTR         r     1 DSEG2$                     0-0-0/w UBIN        r     1 DSEG2SIZE
     0-0-0/b BIT         r     1 DSEG_FLG                   0-0-0/b STRC        r     1 ERR_CODE
     0-0-0/b STRC        r     1 MERR_CODE                  0-0-0/w PTR         r     1 NODE$
     0-0-0/c STRC(378)   r     1 USERS_KEY

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:188  

     0-0-0/w STRC(1008)  r     1 KL$TREC                    0-0-0/w STRC(576)   r     1 KL$TWSNREC
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASR$R_DEVICE requires 253 words for executable code.
   Procedure ASR$R_DEVICE requires 18 words of local(AUTO) storage.
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:189  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:190  
          MINI XREF LISTING

ARS
     14045**DCL     14421<<ASSIGN  14422<>CALL
ASA_BRKS_LOC
     11185**DCL     11185--REDEF
ASB$DELREC_HLP
     14070**DCL-ENT 14512--CALL
ASB$DEQ_HLP
     14079**DCL-ENT 14515--CALL
ASB$ENQ_HLP
     14076**DCL-ENT 14483--CALL
ASB$GETSEG
     14073**DCL-ENT 14373--CALL
ASB$READ_HLP
     14091**DCL-ENT 14422--CALL    14488--CALL
ASB$WRITE_HLP
     14094**DCL-ENT 14509--CALL
ASB$WRITE_LO
     14097**DCL-ENT 14538--CALL    14548--CALL
ASH$ERROR
     14082**DCL-ENT 14387--CALL    14412--CALL    14449--CALL    14471--CALL    14491--CALL    14541--CALL
ASH$INFO
     14088**DCL-ENT 14530--CALL
ASH$WARN
     14085**DCL-ENT 14442--CALL
ASR$R_DEVWSN
     14100**DCL-ENT 14514--CALL
AS_BLANK
     11045**DCL     14538<>CALL
AS_DEFAULT.BANNER_PERM
     11878**DCL     11879--REDEF
AS_DEFAULT.BUDGET.MACCT
     11783**DCL     11787--REDEF
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:191  
AS_DEFAULT.BUDGET.MAX_PROJECTS
     11796**DCL     11799--REDEF
AS_DEFAULT.BUDGET.PACCUM
     11779**DCL     11781--REDEF
AS_DEFAULT.BUDGET.PMAXC
     11774**DCL     11776--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     11894**DCL     11895--REDEF   11896--REDEF
AS_DEFAULT_DREC.PASSWORD
     13148**DCL     13152--REDEF
AS_DEFAULT_DREC.RENAME
     13171**DCL     13172--REDEF
AS_DFLT.BANNER_PERM
     11700**DCL     11701--REDEF
AS_DFLT.BUDGET.MACCT
     11605**DCL     11609--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     11618**DCL     11621--REDEF
AS_DFLT.BUDGET.PACCUM
     11601**DCL     11603--REDEF
AS_DFLT.BUDGET.PMAXC
     11596**DCL     11598--REDEF
AS_DFLT.SETUP_CHRA.TXT
     11716**DCL     11717--REDEF   11718--REDEF
AS_FE_MODE
     11051**DCL     11052--REDEF
AS_FIELD1.COUNT
     11182**DCL     14430<<ASSIGN  14457<<ASSIGN
AS_FIELD1.TEXT
     11182**DCL     14431<<ASSIGN  14458<<ASSIGN  14546<<CALLBLT 14548<>CALL
AS_MODE
     11048**DCL     11050--REDEF
AS_MOD_USER.ACCESS
     13913**DCL     13914--REDEF
AS_MOD_USER.BANNER
     13900**DCL     13901--REDEF
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:192  
AS_MOD_USER.BANNER_PERM
     13902**DCL     13903--REDEF
AS_MOD_USER.BILL
     13908**DCL     13909--REDEF
AS_MOD_USER.CPROC
     13904**DCL     13905--REDEF
AS_MOD_USER.FEBILL
     13984**DCL     13985--REDEF
AS_MOD_USER.FECXTMEM
     14001**DCL     14002--REDEF
AS_MOD_USER.FEMINTS
     13986**DCL     13987--REDEF
AS_MOD_USER.FEMMEM
     13997**DCL     13998--REDEF
AS_MOD_USER.FEMTIME
     13995**DCL     13996--REDEF
AS_MOD_USER.FEPPRIV
     13992**DCL     13994--REDEF
AS_MOD_USER.FEPRIV
     13989**DCL     13991--REDEF
AS_MOD_USER.FORCE_BIT
     13898**DCL     13899--REDEF
AS_MOD_USER.KEY
     13980**DCL     13982--REDEF
AS_MOD_USER.LASTCPROC
     13906**DCL     13907--REDEF
AS_MOD_USER.LIMITS.DO_
     13954**DCL     13955--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     13970**DCL     13971--REDEF
AS_MOD_USER.LIMITS.LO
     13950**DCL     13951--REDEF
AS_MOD_USER.LIMITS.MEM
     13946**DCL     13947--REDEF
AS_MOD_USER.LIMITS.MPRIO
     13974**DCL     13975--REDEF
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:193  
AS_MOD_USER.LIMITS.PDIS
     13962**DCL     13963--REDEF
AS_MOD_USER.LIMITS.PO
     13958**DCL     13959--REDEF
AS_MOD_USER.LIMITS.TDIS
     13966**DCL     13967--REDEF
AS_MOD_USER.LIMITS.TIME
     13942**DCL     13943--REDEF
AS_MOD_USER.MAXENQ
     13923**DCL     13924--REDEF
AS_MOD_USER.PERM_BIT
     13896**DCL     13897--REDEF
AS_MOD_USER.PPRIV
     13918**DCL     13920--REDEF
AS_MOD_USER.PRIOB
     13925**DCL     13926--REDEF
AS_MOD_USER.PRIV
     13915**DCL     13917--REDEF
AS_MOD_USER.QUAN
     13921**DCL     13922--REDEF
AS_MOD_USER.SETUP
     13894**DCL     13895--REDEF
AS_PROJECT.BANNER_PERM
     12234**DCL     12235--REDEF
AS_PROJECT.BUDGET.MACCT
     12139**DCL     12143--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12152**DCL     12155--REDEF
AS_PROJECT.BUDGET.PACCUM
     12135**DCL     12137--REDEF
AS_PROJECT.BUDGET.PMAXC
     12130**DCL     12132--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12250**DCL     12251--REDEF   12252--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     12412**DCL     12413--REDEF
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:194  
AS_PROJECT_DFLT.BUDGET.MACCT
     12317**DCL     12321--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     12330**DCL     12333--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     12313**DCL     12315--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     12308**DCL     12310--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     12428**DCL     12429--REDEF   12430--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     13634**DCL     13638--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     13657**DCL     13658--REDEF
AS_PROJECT_DREC.PASSWORD
     13472**DCL     13476--REDEF
AS_PROJECT_DREC.RENAME
     13495**DCL     13496--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12056**DCL     12057--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     11961**DCL     11965--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     11974**DCL     11977--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     11957**DCL     11959--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     11952**DCL     11954--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12072**DCL     12073--REDEF   12074--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     13310**DCL     13314--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     13333**DCL     13334--REDEF
AS_USERS.BANNER_PERM
     11522**DCL     11523--REDEF
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:195  
AS_USERS.BUDGET.MACCT
     11427**DCL     11431--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     11440**DCL     11443--REDEF
AS_USERS.BUDGET.PACCUM
     11423**DCL     11425--REDEF
AS_USERS.BUDGET.PMAXC
     11418**DCL     11420--REDEF
AS_USERS.SETUP_CHRA.TXT
     11538**DCL     11539--REDEF   11540--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     12590**DCL     12591--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     12495**DCL     12499--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     12508**DCL     12511--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     12491**DCL     12493--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     12486**DCL     12488--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     12606**DCL     12607--REDEF   12608--REDEF
BLK$
     14044**DCL     14161--IMP-PTR 14393<<ASSIGN  14394>>IF      14417>>ASSIGN  14417>>ASSIGN  14430>>ASSIGN
     14431>>ASSIGN  14431>>ASSIGN  14457>>ASSIGN  14458>>ASSIGN  14458>>ASSIGN  14545>>ASSIGN  14546>>CALLBLT
     14546>>CALLBLT 14546>>CALLBLT
CON_KEY
     14060**DCL     14418>>ASSIGN  14511>>ASSIGN
CON_KEY.TXT.ACCT
     14063**DCL     14417<<ASSIGN  14497>>IF
DEL_ERR
     14530**LABEL   14512--CALLALT
DEVS
     14052**DCL     14495<<ASSIGN  14496>>DOINDEX 14500>>DOINDEX 14505>>ASSIGN
DSEG1$
     11186**DCL     14420>>ASSIGN
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:196  
DSEG1SIZE
     11187**DCL     14421>>ASSIGN
DSEG2$
     11187**DCL     14481>>ASSIGN
DSEG2SIZE
     11187**DCL     14482>>ASSIGN
DSEG_FLG
     11186**DCL     14371>>IF
ENQ_ERR
     14474**LABEL   14483--CALLALT 14515--CALLALT
ERR_CODE
     11180**DCL     11181--REDEF   14449<>CALL    14491<>CALL    14541<>CALL
I
     14049**DCL     14496<<DOINDEX 14497>>IF      14497>>IF      14500>>DOINDEX 14505<<ASSIGN
J
     14050**DCL     14500<<DOINDEX 14501>>ASSIGN  14501>>ASSIGN
KL$TREC.ATYP
     14212**DCL     14452>>IF      14452>>IF
KL$TREC.KC$CGID.NAME#.TXT
     14334**DCL     14452>>IF
KL$TREC.PASSWORD
     14265**DCL     14269--REDEF
KL$TREC.RENAME
     14288**DCL     14289--REDEF   14494>>ASSIGN
KL$TREC.TWSN#
     14262**DCL     14477>>ASSIGN
KL$TWSNREC.DEVS
     14342**DCL     14501<<ASSIGN  14501>>ASSIGN  14504--ASSIGN
KL$TWSNREC.DEVS.ACCT
     14356**DCL     14497>>IF
KL$TWSNREC.DEVS.TYP
     14343**DCL     14497>>IF
KL$TWSNREC.NDEV
     14341**DCL     14495>>ASSIGN  14503<<ASSIGN  14503>>ASSIGN
KL_DEFAULT.PASSWORD
     13796**DCL     13800--REDEF
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:197  
KL_DEFAULT.RENAME
     13819**DCL     13820--REDEF
KL_DFLT.PASSWORD
     12986**DCL     12990--REDEF
KL_DFLT.RENAME
     13009**DCL     13010--REDEF
KL_DREC.PASSWORD
     12824**DCL     12828--REDEF
KL_DREC.RENAME
     12847**DCL     12848--REDEF
KL_DREC_CNT.PASSWORD
     12711**DCL     12715--REDEF
KL_DREC_CNT.RENAME
     12734**DCL     12735--REDEF
MERR_CODE.CODE
     11181**DCL     14425>>IF
NODE$
     11178**DCL     14114--IMP-PTR 14393>>ASSIGN
OUT$SYM.COUNT
     14184**DCL     14187--IMP-SIZ 14394>>IF      14417>>ASSIGN  14430>>ASSIGN  14431>>ASSIGN  14457>>ASSIGN
     14458>>ASSIGN  14545>>ASSIGN  14546>>CALLBLT 14546>>CALLBLT
OUT$SYM.TEXT
     14187**DCL     14417>>ASSIGN  14431>>ASSIGN  14458>>ASSIGN  14546>>CALLBLT
P$NODE.SUBLK$
     14147**DCL     14393>>ASSIGN  14393>>ASSIGN
PROJ_KEY.TEXT
     11058**DCL     11058--REDEF
PROJ_KEY.TXT.PROJECT
     11058**DCL     11058--REDEF
READ_TREC_ERR
     14415**LABEL   14422--CALLALT
READ_TWSN_ERR
     14486**LABEL   14488--CALLALT
REMEM_VAR
     11184**DCL     11184--REDEF
REM_FCMD
PL6.E3A0      #004=ASR$R_DEVICE File=ASR$R_HLP.:E05TSI                           TUE 07/29/97 10:54 Page:198  
     11184**DCL     11185--REDEF
SIZE
     14051**DCL     14545<<ASSIGN  14548>>CALL    14548<>CALL
TREC$
     14042**DCL     14207--IMP-PTR 14420<<ASSIGN  14422<>CALL    14452>>IF      14452>>IF      14452>>IF
     14477>>ASSIGN  14494>>ASSIGN
TWSNC
     14048**DCL     14477<<ASSIGN  14479>>CALLBLT
TWSNREC$
     14043**DCL     14338--IMP-PTR 14481<<ASSIGN  14488<>CALL    14495>>ASSIGN  14497>>IF      14497>>IF
     14501>>ASSIGN  14501>>ASSIGN  14503>>ASSIGN  14503>>ASSIGN  14509<>CALL
TWSN_ARS
     14046**DCL     14482<<ASSIGN  14488<>CALL    14504<<ASSIGN  14504>>ASSIGN  14509<>CALL
TYPE
     14053**DCL     14494<<ASSIGN  14497>>IF
USERS_KEY
     11055**DCL     14418<<ASSIGN  14511<<ASSIGN
USERS_KEY.COUNT
     11055**DCL     14480<<ASSIGN
USERS_KEY.TEXT
     11055**DCL     11056--REDEF   11056--REDEF   11056--REDEF   11057--REDEF
USERS_KEY.TXTC
     11056**DCL     14479<<CALLBLT
WRITE_DEVS
     14054**DCL     14513<<ASSIGN  14514<>CALL    14520>>IF

PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:199  
     1075        1        /*M* ASR$R_TPDEVICE - processes the REMOVE TPDEVICE command.   */
     1076        2        /*T***********************************************************/
     1077        3        /*T*                                                         */
     1078        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1079        5        /*T*                                                         */
     1080        6        /*T***********************************************************/
     1081        7        ASR$R_TPDEVICE: PROC ;
     1082        8                                                              /**/
     1083        9        %SET LISTSUB = '1'B ;
     1084       10        /*********************************************************************/
     1085       11        /*   Include files   include files   include files   include files   */
     1086       12        /*********************************************************************/
     1087       13                                                              /**/
     1088       14              %INCLUDE  CP_6 ;
     1089       95              %INCLUDE  AS_PERR_C ;
     1090      697              %INCLUDE B_ERRORS_C ;
     1091     1824              %INCLUDE KC$CGBLK ;
     1092     1872              %INCLUDE  AS_ENTRIES_M;
     1093     2922              %INCLUDE  AS_SUPER_C ;
     1094     3357              %INCLUDE  AS_SUBS_C ;
     1095     4771              %INCLUDE  AS_MAC_C ;
     1096     4851              %INCLUDE  KL_SUPER_C ;
     1097     7753              %INCLUDE  XU_MACRO_C ;
     1098    10859              %INCLUDE  XU_FORMAT_C ;
     1099    11021              %INCLUDE  AS_SUPER_R ;
     1100    14037
     1101    14038        /*********************************************************************/
     1102    14039        /*   Auto data       auto data       auto data       auto data       */
     1103    14040        /*********************************************************************/
     1104    14041                                                              /**/
     1105    14042    1   DCL TREC$ PTR ;
     1106    14043    1   DCL ARS UBIN WORD ;
     1107    14044    1   DCL I UBIN WORD ;
     1108    14045    1   DCL J UBIN WORD ;
     1109    14046    1   DCL ACCT CHAR (8);
     1110    14047    1   DCL UNAME CHAR(21);
     1111    14048    1   DCL ACCT_LEN UBIN;
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:200  
     1112    14049    1   DCL UNAME_LEN UBIN;
     1113    14050    1   DCL SIZE SBIN;
     1114    14051
     1115    14052        /*********************************************************************/
     1116    14053        /*   Static data     static data     static data     static data     */
     1117    14054        /*********************************************************************/
     1118    14055                                                              /**/
     1119    14056    1   DCL 1 CON_KEY ALIGNED STATIC ,
     1120    14057    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
     1121    14058    1          2 TXT UNAL ,
     1122    14059    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
     1123    14060    1             3 UNAME CHAR(12) UNAL INIT(' ') ;
     1124    14061
     1125    14062        /*********************************************************************/
     1126    14063        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     1127    14064        /*********************************************************************/
     1128    14065        %ASB$DELREC_HLP ;
     1129    14068        %ASB$GETSEG ;
     1130    14071        %ASB$ENQ_HLP ;
     1131    14074        %ASB$DEQ_HLP ;
     1132    14077        %ASH$ERROR ;
     1133    14080        %ASH$WARN ;
     1134    14083        %ASH$INFO ;
     1135    14086        %ASB$READ_HLP ;
     1136    14089        %ASB$WRITE_LO ;
     1137    14092
     1138    14093        /*********************************************************************/
     1139    14094        /*   Local based     local based     local based     local based     */
     1140    14095        /*********************************************************************/
     1141    14096                                                              /**/
     1142    14097            %PARSE$OUT( NAME=P$NODE, STCLASS=BASED,
     1143    14098                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
     1144    14143              %PARSE$SYM( NAME = OUT$SYM ,
     1145    14144                          STCLASS=BASED);
     1146    14182              %KL_DREC ( NAME = KL$TREC  ,
     1147    14183                    STCLASS = "BASED(TREC$)",
     1148    14184                    LAST = "," ) ;
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:201  
     1149    14297              %KC$CGID (FPTN=KC$CGID,
     1150    14298                        STCLASS = STCLASS,
     1151    14299                        LVL = 2,
     1152    14300                        LAST = ";" );
     1153    14326
     1154    14327        /*********************************************************************/
     1155    14328        /*   Procedure       procedure       procedure       procedure       */
     1156    14329        /*********************************************************************/
     1157    14330                                                              /**/
     1158    14331        /*
     1159    14332            ***            Begin procedure                    ***
     1160    14333        */
     1161    14334                                                              /* Did we get data SEG.? */
     1162    14335    1   IF NOT DSEG_FLG
     1163    14336    2   THEN DO;
     1164    14337    2      CALL ASB$GETSEG
     1165    14338    3      WHENALTRETURN DO;
     1166    14339              %SCREAM( ERR#=E$GETSEGERR , LEVEL=ERROR, MID='R' );
     1167    14354    3         RETURN ;
     1168    14355    3         END ;
     1169    14356    2      END;
     1170    14357        /* Set up the default uname if the option to not specify one is used*/
     1171    14358    1   CON_KEY.TXT.UNAME = '*';
     1172    14359    1   UNAME_LEN = 1;
     1173    14360                                                    /* Get device name */
     1174    14361    2   DO I = 0 TO P_PCB.OUT$->P$NODE.SUBNODES - 1;
     1175    14362    3      DO SELECT (P_PCB.OUT$->P$NODE.SUBLK$(I)->P$NODE.CODE);
     1176    14363    3         SELECT ( %TPDEV_ACCT_WILD_VAL );
     1177    14364
     1178    14365    3         CON_KEY.TXT.ACCT = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.TEXT;
     1179    14366    3         ACCT_LEN = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.COUNT;
     1180    14367
     1181    14368    3         SELECT ( %TPDEV_NAME_WILD_VAL);
     1182    14369
     1183    14370    3         CON_KEY.TXT.UNAME = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.TEXT;
     1184    14371    3         UNAME_LEN = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.COUNT;
     1185    14372
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:202  
     1186    14373    3         SELECT (ELSE);
     1187    14374    3         END; /* Of this case */
     1188    14375    2      END; /* Of the do i going thru all subnodes */
     1189    14376    1   USERS_KEY = CON_KEY ;
     1190    14377    1   USERS_KEY.COUNT = 8 + UNAME_LEN;
     1191    14378                                             /* Pick up terminal record */
     1192    14379    1   TREC$ = DSEG1$ ;
     1193    14380    1   ARS = DSEG1SIZE ;
     1194    14381    1   IF (CON_KEY.TXT.UNAME ~= '*')
     1195    14382    2   THEN DO;
     1196    14383    2      AS_FIELD1.COUNT = ACCT_LEN + UNAME_LEN + 1;
     1197    14384    2      CALL CONCAT (AS_FIELD1.TEXT, SUBSTR(CON_KEY.TXT.ACCT,0,ACCT_LEN), ',', SUBSTR(
             14384               CON_KEY.TXT.UNAME,0,UNAME_LEN) );
     1198    14385    2      END;
     1199    14386    2   ELSE DO;
     1200    14387    2      AS_FIELD1.COUNT = ACCT_LEN + 1;
     1201    14388    2      AS_FIELD1.TEXT = SUBSTR (CON_KEY.TXT.ACCT, 0, ACCT_LEN);
     1202    14389    2      END;
     1203    14390    1   CALL ASB$READ_HLP( TREC$, ARS )
     1204    14391    2   WHENALTRETURN DO;
     1205    14392    2      IF MERR_CODE.CODE = %E$NOKEY
     1206    14393    3      THEN DO ;
     1207    14394        /*    ERROR:    ASR-E$DEVICENOEXIST-C
     1208    14395              MESSAGE0: Device %%U1 %does not exist.
     1209    14396        */
     1210    14397              %SCREAM( ERR#=E$DEVICENOEXIST, LEVEL=WARN, MID='R' );
     1211    14412    3         END ; /* Then do */
     1212    14413    2      ELSE
     1213    14414    2         CALL ASH$ERROR( ERR_CODE ) ;
     1214    14415    2      RETURN ;
     1215    14416    2      END ; /* Whenaltreturn */
     1216    14417    1   IF ( KL$TREC.ATYP ~= %KLAT_CG# OR KL$TREC.KC$CGID.NAME#.TXT='OCCG')
     1217    14418    2        AND KL$TREC.ATYP ~= %KLAT_RES# THEN DO ;
     1218    14419        /*    ERROR:    ASR-E$NOTDEVICE-C
     1219    14420              MESSAGE0: %"%U1" %is not a device.
     1220    14421        */
     1221    14422           %SCREAM( ERR#=E$NOTDEVICE , LEVEL=ERROR, MID='R' );
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:203  
     1222    14437    2      RETURN ;
     1223    14438    2      END ; /* Then do */
     1224    14439    1   CALL ASB$ENQ_HLP
     1225    14440    2   WHENALTRETURN DO;
     1226    14441    2      RETURN;
     1227    14442    2      END;
     1228    14443                                             /* Delete device record */
     1229    14444    1   CALL ASB$DELREC_HLP
     1230    14445    2   WHENALTRETURN DO;
     1231    14446    2      CALL ASH$ERROR (ERR_CODE);
     1232    14447    2      RETURN;
     1233    14448    2      END;
     1234    14449    1   UNAME = SUBSTR (AS_FIELD1.TEXT, 0, AS_FIELD1.COUNT);
     1235    14450    1   UNAME_LEN = AS_FIELD1.COUNT;
     1236    14451    1   SIZE = 16 + UNAME_LEN;
     1237    14452    1   CALL CONCAT (AS_FIELD1.TEXT, 'Device ', SUBSTR (UNAME, 0, UNAME_LEN),
     1238    14453    1        ' removed.        ');
     1239    14454    1   CALL ASB$WRITE_LO (AS_FIELD1.TEXT, SIZE);
     1240    14455    1   CALL ASB$DEQ_HLP
     1241    14456    2   WHENALTRETURN DO;
     1242    14457    2      RETURN;
     1243    14458    2      END;
     1244    14459
     1245    14460    1   RETURN ;
     1246    14461
     1247    14462    1   END ASR$R_TPDEVICE ;
     1248    14463        %EOD ;

PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:204  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_TPDEVICE.

   Procedure ASR$R_TPDEVICE requires 200 words for executable code.
   Procedure ASR$R_TPDEVICE requires 20 words of local(AUTO) storage.

PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:205  

 Object Unit name= ASR$R_TPDEVICE                             File name= ASR$R_HLP.:E05TOU
 UTS= JUL 29 '97 10:55:12.64 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none     6      6  ASR$R_TPDEVICE
    3  RoData even  UTS     11     13  ASR$R_TPDEVICE
    4   Proc  even  none   200    310  ASR$R_TPDEVICE
    5  RoData even  none     7      7  ASR$R_TPDEVICE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASR$R_TPDEVICE
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:206  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       0 ASB$DELREC_HLP
         yes           Std       2 ASB$WRITE_LO
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       3 ASB$READ_HLP
 yes     yes           Std       0 ASB$ENQ_HLP
         yes           Std       2 ASH$WARN
 yes     yes           Std       0 ASB$DEQ_HLP
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_MODE                          r    AS_FE_MODE
     M$LO                                  USERS_KEY                             ERR_CODE
     AS_FIELD1                             REMEM_VAR                             REM_FCMD
     ASA_BRKS_LOC                          DSEG_FLG                              DSEG1$
     DSEG1SIZE                             P_PCB                                 B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:207  


     1075        1        /*M* ASR$R_TPDEVICE - processes the REMOVE TPDEVICE command.   */
     1076        2        /*T***********************************************************/
     1077        3        /*T*                                                         */
     1078        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1079        5        /*T*                                                         */
     1080        6        /*T***********************************************************/
     1081        7        ASR$R_TPDEVICE: PROC ;

      7  4 000000   000000 700200 xent  ASR$R_TPDEV* TSX0  ! X66_AUTO_0
         4 000001   000024 000000                    ZERO    20,0

     1082        8                                                              /**/
     1083        9        %SET LISTSUB = '1'B ;
     1084       10        /*********************************************************************/
     1085       11        /*   Include files   include files   include files   include files   */
     1086       12        /*********************************************************************/
     1087       13                                                              /**/
     1088       14              %INCLUDE  CP_6 ;
     1089       95              %INCLUDE  AS_PERR_C ;
     1090      697              %INCLUDE B_ERRORS_C ;
     1091     1824              %INCLUDE KC$CGBLK ;
     1092     1872              %INCLUDE  AS_ENTRIES_M;
     1093     2922              %INCLUDE  AS_SUPER_C ;
     1094     3357              %INCLUDE  AS_SUBS_C ;
     1095     4771              %INCLUDE  AS_MAC_C ;
     1096     4851              %INCLUDE  KL_SUPER_C ;
     1097     7753              %INCLUDE  XU_MACRO_C ;
     1098    10859              %INCLUDE  XU_FORMAT_C ;
     1099    11021              %INCLUDE  AS_SUPER_R ;
     1100    14037
     1101    14038        /*********************************************************************/
     1102    14039        /*   Auto data       auto data       auto data       auto data       */
     1103    14040        /*********************************************************************/
     1104    14041                                                              /**/
     1105    14042    1   DCL TREC$ PTR ;
     1106    14043    1   DCL ARS UBIN WORD ;
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:208  
     1107    14044    1   DCL I UBIN WORD ;
     1108    14045    1   DCL J UBIN WORD ;
     1109    14046    1   DCL ACCT CHAR (8);
     1110    14047    1   DCL UNAME CHAR(21);
     1111    14048    1   DCL ACCT_LEN UBIN;
     1112    14049    1   DCL UNAME_LEN UBIN;
     1113    14050    1   DCL SIZE SBIN;
     1114    14051
     1115    14052        /*********************************************************************/
     1116    14053        /*   Static data     static data     static data     static data     */
     1117    14054        /*********************************************************************/
     1118    14055                                                              /**/
     1119    14056    1   DCL 1 CON_KEY ALIGNED STATIC ,
     1120    14057    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
     1121    14058    1          2 TXT UNAL ,
     1122    14059    1             3 ACCT CHAR(8) UNAL INIT(' ') ,
     1123    14060    1             3 UNAME CHAR(12) UNAL INIT(' ') ;
     1124    14061
     1125    14062        /*********************************************************************/
     1126    14063        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     1127    14064        /*********************************************************************/
     1128    14065        %ASB$DELREC_HLP ;
     1129    14068        %ASB$GETSEG ;
     1130    14071        %ASB$ENQ_HLP ;
     1131    14074        %ASB$DEQ_HLP ;
     1132    14077        %ASH$ERROR ;
     1133    14080        %ASH$WARN ;
     1134    14083        %ASH$INFO ;
     1135    14086        %ASB$READ_HLP ;
     1136    14089        %ASB$WRITE_LO ;
     1137    14092
     1138    14093        /*********************************************************************/
     1139    14094        /*   Local based     local based     local based     local based     */
     1140    14095        /*********************************************************************/
     1141    14096                                                              /**/
     1142    14097            %PARSE$OUT( NAME=P$NODE, STCLASS=BASED,
     1143    14098                        NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:209  
     1144    14143              %PARSE$SYM( NAME = OUT$SYM ,
     1145    14144                          STCLASS=BASED);
     1146    14182              %KL_DREC ( NAME = KL$TREC  ,
     1147    14183                    STCLASS = "BASED(TREC$)",
     1148    14184                    LAST = "," ) ;
     1149    14297              %KC$CGID (FPTN=KC$CGID,
     1150    14298                        STCLASS = STCLASS,
     1151    14299                        LVL = 2,
     1152    14300                        LAST = ";" );
     1153    14326
     1154    14327        /*********************************************************************/
     1155    14328        /*   Procedure       procedure       procedure       procedure       */
     1156    14329        /*********************************************************************/
     1157    14330                                                              /**/
     1158    14331        /*
     1159    14332            ***            Begin procedure                    ***
     1160    14333        */
     1161    14334                                                              /* Did we get data SEG.? */
     1162    14335    1   IF NOT DSEG_FLG

  14335  4 000002   000000 234000 xsym               SZN     DSEG_FLG
         4 000003   000015 604000 4                  TMI     s:14358

     1163    14336    2   THEN DO;

     1164    14337    2      CALL ASB$GETSEG

  14337  4 000004   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000005   000000 701000 xent               TSX1    ASB$GETSEG
         4 000006   000010 702000 4                  TSX2    s:14351
         4 000007   000015 710000 4                  TRA     s:14358

     1165    14338    3      WHENALTRETURN DO;

     1166    14339              %SCREAM( ERR#=E$GETSEGERR , LEVEL=ERROR, MID='R' );

  14351  4 000010   000000 630400 5                  EPPR0   0
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:210  
         4 000011   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000012   000000 701000 xent               TSX1    ASH$ERROR
         4 000013   000000 011000                    NOP     0

     1167    14354    3         RETURN ;

  14354  4 000014   000000 702200 xent               TSX2  ! X66_ARET

     1168    14355    3         END ;
     1169    14356    2      END;

     1170    14357        /* Set up the default uname if the option to not specify one is used*/
     1171    14358    1   CON_KEY.TXT.UNAME = '*';

  14358  4 000015   040000 100400                    MLR     fill='040'O
         4 000016   000001 000001 5                  ADSC9   1                        cn=0,n=1
         4 000017   000002 200014 2                  ADSC9   CON_KEY+2                cn=1,n=12

     1172    14359    1   UNAME_LEN = 1;

  14359  4 000020   000001 235007                    LDA     1,DL
         4 000021   200020 755100                    STA     UNAME_LEN,,AUTO

     1173    14360                                                    /* Get device name */
     1174    14361    2   DO I = 0 TO P_PCB.OUT$->P$NODE.SUBNODES - 1;

  14361  4 000022   200005 450100                    STZ     I,,AUTO
         4 000023   000064 710000 4                  TRA     s:14375+3

     1175    14362    3      DO SELECT (P_PCB.OUT$->P$NODE.SUBLK$(I)->P$NODE.CODE);

  14362  4 000024   000003 470400 xsym               LDP0    P_PCB+3
         4 000025   200005 720100                    LXL0    I,,AUTO
         4 000026   000003 471510                    LDP1    3,X0,PR0
         4 000027   100000 236100                    LDQ     0,,PR1
         4 000030   777777 376007                    ANQ     -1,DL
         4 000031   000343 116007                    CMPQ    227,DL
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:211  
         4 000032   000035 602000 4                  TNC     s:14362+9
         4 000033   000041 600000 4                  TZE     s:14365
         4 000034   000061 710000 4                  TRA     s:14375
         4 000035   100000 721100                    LXL1    0,,PR1
         4 000036   000341 101003                    CMPX1   225,DU
         4 000037   000061 601000 4                  TNZ     s:14375
         4 000040   000051 710000 4                  TRA     s:14370

     1176    14363    3         SELECT ( %TPDEV_ACCT_WILD_VAL );

     1177    14364
     1178    14365    3         CON_KEY.TXT.ACCT = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.TEXT;

  14365  4 000041   100004 236100                    LDQ     4,,PR1
         4 000042   000033 772000                    QRL     27
         4 000043   000000 621006                    EAX1    0,QL
         4 000044   040000 100540                    MLR     fill='040'O
         4 000045   100004 200011                    ADSC9   4,,PR1                   cn=1,n=*X1
         4 000046   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=8

     1179    14366    3         ACCT_LEN = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.COUNT;

  14366  4 000047   200017 756100                    STQ     ACCT_LEN,,AUTO
         4 000050   000061 710000 4                  TRA     s:14375

     1180    14367
     1181    14368    3         SELECT ( %TPDEV_NAME_WILD_VAL);

     1182    14369
     1183    14370    3         CON_KEY.TXT.UNAME = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.TEXT;

  14370  4 000051   100004 236100                    LDQ     4,,PR1
         4 000052   000033 772000                    QRL     27
         4 000053   000000 622006                    EAX2    0,QL
         4 000054   040000 100540                    MLR     fill='040'O
         4 000055   100004 200012                    ADSC9   4,,PR1                   cn=1,n=*X2
         4 000056   000002 200014 2                  ADSC9   CON_KEY+2                cn=1,n=12
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:212  

     1184    14371    3         UNAME_LEN = P_PCB.OUT$->P$NODE.SUBLK$(I)->OUT$SYM.COUNT;

  14371  4 000057   200020 756100                    STQ     UNAME_LEN,,AUTO
         4 000060   000061 710000 4                  TRA     s:14375

     1185    14372
     1186    14373    3         SELECT (ELSE);

     1187    14374    3         END; /* Of this case */

     1188    14375    2      END; /* Of the do i going thru all subnodes */

  14375  4 000061   200005 235100                    LDA     I,,AUTO
         4 000062   000001 035007                    ADLA    1,DL
         4 000063   200005 755100                    STA     I,,AUTO
         4 000064   000003 470400 xsym               LDP0    P_PCB+3
         4 000065   000001 236100                    LDQ     1,,PR0
         4 000066   000022 772000                    QRL     18
         4 000067   200005 116100                    CMPQ    I,,AUTO
         4 000070   000072 600000 4                  TZE     s:14376
         4 000071   000024 603000 4                  TRC     s:14362

     1189    14376    1   USERS_KEY = CON_KEY ;

  14376  4 000072   000000 100400                    MLR     fill='000'O
         4 000073   000000 000025 2                  ADSC9   CON_KEY                  cn=0,n=21
         4 000074   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1190    14377    1   USERS_KEY.COUNT = 8 + UNAME_LEN;

  14377  4 000075   200020 236100                    LDQ     UNAME_LEN,,AUTO
         4 000076   000010 036007                    ADLQ    8,DL
         4 000077   000033 736000                    QLS     27
         4 000100   000000 552040 xsym               STBQ    USERS_KEY,'40'O

     1191    14378                                             /* Pick up terminal record */
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:213  
     1192    14379    1   TREC$ = DSEG1$ ;

  14379  4 000101   000000 236000 xsym               LDQ     DSEG1$
         4 000102   200003 756100                    STQ     TREC$,,AUTO

     1193    14380    1   ARS = DSEG1SIZE ;

  14380  4 000103   000000 235000 xsym               LDA     DSEG1SIZE
         4 000104   200004 755100                    STA     ARS,,AUTO

     1194    14381    1   IF (CON_KEY.TXT.UNAME ~= '*')

  14381  4 000105   040000 106400                    CMPC    fill='040'O
         4 000106   000002 200014 2                  ADSC9   CON_KEY+2                cn=1,n=12
         4 000107   000001 000001 5                  ADSC9   1                        cn=0,n=1
         4 000110   000143 600000 4                  TZE     s:14387

     1195    14382    2   THEN DO;

     1196    14383    2      AS_FIELD1.COUNT = ACCT_LEN + UNAME_LEN + 1;

  14383  4 000111   200017 236100                    LDQ     ACCT_LEN,,AUTO
         4 000112   200020 036100                    ADLQ    UNAME_LEN,,AUTO
         4 000113   000001 036007                    ADLQ    1,DL
         4 000114   000033 736000                    QLS     27
         4 000115   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1197    14384    2      CALL CONCAT (AS_FIELD1.TEXT, SUBSTR(CON_KEY.TXT.ACCT,0,ACCT_LEN), ',', SUBSTR(
             14384               CON_KEY.TXT.UNAME,0,UNAME_LEN) );

  14384  4 000116   200017 720100                    LXL0    ACCT_LEN,,AUTO
         4 000117   040000 100440                    MLR     fill='040'O
         4 000120   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=*X0
         4 000121   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40
         4 000122   200017 236100                    LDQ     ACCT_LEN,,AUTO
         4 000123   000050 116007                    CMPQ    40,DL
         4 000124   000142 603000 4                  TRC     s:14385
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:214  
         4 000125   777727 621006                    EAX1    -41,QL
         4 000126   777777 661003                    ERX1    -1,DU
         4 000127   040046 100400                    MLR     fill='040'O
         4 000130   000002 000001 5                  ADSC9   2                        cn=0,n=1
         4 000131   000000 200011 xsym               ADSC9   AS_FIELD1,Q              cn=1,n=*X1
         4 000132   000047 116007                    CMPQ    39,DL
         4 000133   000142 603000 4                  TRC     s:14385
         4 000134   777730 622006                    EAX2    -40,QL
         4 000135   777777 662003                    ERX2    -1,DU
         4 000136   200020 723100                    LXL3    UNAME_LEN,,AUTO
         4 000137   040046 100440                    MLR     fill='040'O
         4 000140   000002 200013 2                  ADSC9   CON_KEY+2                cn=1,n=*X3
         4 000141   000000 400012 xsym               ADSC9   AS_FIELD1,Q              cn=2,n=*X2

     1198    14385    2      END;

  14385  4 000142   000153 710000 4                  TRA     s:14390

     1199    14386    2   ELSE DO;

     1200    14387    2      AS_FIELD1.COUNT = ACCT_LEN + 1;

  14387  4 000143   200017 236100                    LDQ     ACCT_LEN,,AUTO
         4 000144   000001 036007                    ADLQ    1,DL
         4 000145   000033 736000                    QLS     27
         4 000146   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1201    14388    2      AS_FIELD1.TEXT = SUBSTR (CON_KEY.TXT.ACCT, 0, ACCT_LEN);

  14388  4 000147   200017 720100                    LXL0    ACCT_LEN,,AUTO
         4 000150   040000 100440                    MLR     fill='040'O
         4 000151   000000 200010 2                  ADSC9   CON_KEY                  cn=1,n=*X0
         4 000152   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1202    14389    2      END;

     1203    14390    1   CALL ASB$READ_HLP( TREC$, ARS )
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:215  

  14390  4 000153   200004 631500                    EPPR1   ARS,,AUTO
         4 000154   200023 451500                    STP1    SIZE+2,,AUTO
         4 000155   200003 633500                    EPPR3   TREC$,,AUTO
         4 000156   200022 453500                    STP3    SIZE+1,,AUTO
         4 000157   200022 630500                    EPPR0   SIZE+1,,AUTO
         4 000160   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000161   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000162   000164 702000 4                  TSX2    s:14392
         4 000163   000202 710000 4                  TRA     s:14417

     1204    14391    2   WHENALTRETURN DO;

     1205    14392    2      IF MERR_CODE.CODE = %E$NOKEY

  14392  4 000164   000000 236000 xsym               LDQ     ERR_CODE
         4 000165   377770 376007                    ANQ     131064,DL
         4 000166   001020 116007                    CMPQ    528,DL
         4 000167   000175 601000 4                  TNZ     s:14414

     1206    14393    3      THEN DO ;

     1207    14394        /*    ERROR:    ASR-E$DEVICENOEXIST-C
     1208    14395              MESSAGE0: Device %%U1 %does not exist.
     1209    14396        */
     1210    14397              %SCREAM( ERR#=E$DEVICENOEXIST, LEVEL=WARN, MID='R' );

  14407  4 000170   000003 630400 5                  EPPR0   3
         4 000171   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000172   000000 701000 xent               TSX1    ASH$WARN
         4 000173   000000 011000                    NOP     0

     1211    14412    3         END ; /* Then do */

  14412  4 000174   000201 710000 4                  TRA     s:14415

     1212    14413    2      ELSE
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:216  
     1213    14414    2         CALL ASH$ERROR( ERR_CODE ) ;

  14414  4 000175   000004 630400 5                  EPPR0   4
         4 000176   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000177   000000 701000 xent               TSX1    ASH$ERROR
         4 000200   000000 011000                    NOP     0

     1214    14415    2      RETURN ;

  14415  4 000201   000000 702200 xent               TSX2  ! X66_ARET

     1215    14416    2      END ; /* Whenaltreturn */
     1216    14417    1   IF ( KL$TREC.ATYP ~= %KLAT_CG# OR KL$TREC.KC$CGID.NAME#.TXT='OCCG')

  14417  4 000202   200003 470500                    LDP0    TREC$,,AUTO
         4 000203   000000 236100                    LDQ     0,,PR0
         4 000204   777000 376003                    ANQ     -512,DU
         4 000205   002000 116003                    CMPQ    1024,DU
         4 000206   000213 601000 4                  TNZ     s:14417+9
         4 000207   040000 106500                    CMPC    fill='040'O
         4 000210   000024 200037                    ADSC9   20,,PR0                  cn=1,n=31
         4 000211   000002 000004 3                  ADSC9   2                        cn=0,n=4
         4 000212   000222 601000 4                  TNZ     s:14439
         4 000213   003000 116003                    CMPQ    1536,DU
         4 000214   000222 600000 4                  TZE     s:14439

     1217    14418    2        AND KL$TREC.ATYP ~= %KLAT_RES# THEN DO ;

     1218    14419        /*    ERROR:    ASR-E$NOTDEVICE-C
     1219    14420              MESSAGE0: %"%U1" %is not a device.
     1220    14421        */
     1221    14422           %SCREAM( ERR#=E$NOTDEVICE , LEVEL=ERROR, MID='R' );

  14434  4 000215   000005 630400 5                  EPPR0   5
         4 000216   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000217   000000 701000 xent               TSX1    ASH$ERROR
         4 000220   000000 011000                    NOP     0
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:217  

     1222    14437    2      RETURN ;

  14437  4 000221   000000 702200 xent               TSX2  ! X66_ARET

     1223    14438    2      END ; /* Then do */
     1224    14439    1   CALL ASB$ENQ_HLP

  14439  4 000222   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000223   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000224   000226 702000 4                  TSX2    s:14441
         4 000225   000227 710000 4                  TRA     s:14444

     1225    14440    2   WHENALTRETURN DO;

     1226    14441    2      RETURN;

  14441  4 000226   000000 702200 xent               TSX2  ! X66_ARET

     1227    14442    2      END;
     1228    14443                                             /* Delete device record */
     1229    14444    1   CALL ASB$DELREC_HLP

  14444  4 000227   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000230   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000231   000233 702000 4                  TSX2    s:14446
         4 000232   000240 710000 4                  TRA     s:14449

     1230    14445    2   WHENALTRETURN DO;

     1231    14446    2      CALL ASH$ERROR (ERR_CODE);

  14446  4 000233   000004 630400 5                  EPPR0   4
         4 000234   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000235   000000 701000 xent               TSX1    ASH$ERROR
         4 000236   000000 011000                    NOP     0

PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:218  
     1232    14447    2      RETURN;

  14447  4 000237   000000 702200 xent               TSX2  ! X66_ARET

     1233    14448    2      END;
     1234    14449    1   UNAME = SUBSTR (AS_FIELD1.TEXT, 0, AS_FIELD1.COUNT);

  14449  4 000240   000000 236000 xsym               LDQ     AS_FIELD1
         4 000241   000033 772000                    QRL     27
         4 000242   000000 620006                    EAX0    0,QL
         4 000243   040100 100440                    MLR     fill='040'O
         4 000244   000000 200010 xsym               ADSC9   AS_FIELD1                cn=1,n=*X0
         4 000245   200011 000025                    ADSC9   UNAME,,AUTO              cn=0,n=21

     1235    14450    1   UNAME_LEN = AS_FIELD1.COUNT;

  14450  4 000246   000000 236000 xsym               LDQ     AS_FIELD1
         4 000247   000033 772000                    QRL     27
         4 000250   200020 756100                    STQ     UNAME_LEN,,AUTO

     1236    14451    1   SIZE = 16 + UNAME_LEN;

  14451  4 000251   000020 036007                    ADLQ    16,DL
         4 000252   200021 756100                    STQ     SIZE,,AUTO

     1237    14452    1   CALL CONCAT (AS_FIELD1.TEXT, 'Device ', SUBSTR (UNAME, 0, UNAME_LEN),

  14452  4 000253   040000 100400                    MLR     fill='040'O
         4 000254   000004 000007 3                  ADSC9   4                        cn=0,n=7
         4 000255   000000 200007 xsym               ADSC9   AS_FIELD1                cn=1,n=7
         4 000256   200020 720100                    LXL0    UNAME_LEN,,AUTO
         4 000257   040000 100540                    MLR     fill='040'O
         4 000260   200011 000010                    ADSC9   UNAME,,AUTO              cn=0,n=*X0
         4 000261   000002 000041 xsym               ADSC9   AS_FIELD1+2              cn=0,n=33
         4 000262   200020 236100                    LDQ     UNAME_LEN,,AUTO
         4 000263   000041 116007                    CMPQ    33,DL
         4 000264   000272 603000 4                  TRC     s:14454
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:219  
         4 000265   777736 621006                    EAX1    -34,QL
         4 000266   777777 661003                    ERX1    -1,DU
         4 000267   040046 100400                    MLR     fill='040'O
         4 000270   000006 000021 3                  ADSC9   6                        cn=0,n=17
         4 000271   000002 000011 xsym               ADSC9   AS_FIELD1+2,Q            cn=0,n=*X1

     1238    14453    1        ' removed.        ');
     1239    14454    1   CALL ASB$WRITE_LO (AS_FIELD1.TEXT, SIZE);

  14454  4 000272   200021 630500                    EPPR0   SIZE,,AUTO
         4 000273   200023 450500                    STP0    SIZE+2,,AUTO
         4 000274   000006 236000 5                  LDQ     6
         4 000275   200022 756100                    STQ     SIZE+1,,AUTO
         4 000276   200022 630500                    EPPR0   SIZE+1,,AUTO
         4 000277   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000300   000000 701000 xent               TSX1    ASB$WRITE_LO
         4 000301   000000 011000                    NOP     0

     1240    14455    1   CALL ASB$DEQ_HLP

  14455  4 000302   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000303   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000304   000306 702000 4                  TSX2    s:14457
         4 000305   000307 710000 4                  TRA     s:14460

     1241    14456    2   WHENALTRETURN DO;

     1242    14457    2      RETURN;

  14457  4 000306   000000 702200 xent               TSX2  ! X66_ARET

     1243    14458    2      END;
     1244    14459
     1245    14460    1   RETURN ;

  14460  4 000307   000000 702200 xent               TSX2  ! X66_ARET
     1246    14461
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:220  
     1247    14462    1   END ASR$R_TPDEVICE ;
     1248    14463        %EOD ;

PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:221  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   KC$CGBLK.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_TPDEVICE.
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:222  

 **** Variables and constants ****

  ****  Section 002  Data  ASR$R_TPDEVICE

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(189)   r     1 CON_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    17-0-0/w UBIN        r     1 ACCT_LEN                   4-0-0/w UBIN        r     1 ARS
     5-0-0/w UBIN        r     1 I                         21-0-0/w SBIN        r     1 SIZE
     3-0-0/w PTR         r     1 TREC$                     11-0-0/c CHAR(21)    r     1 UNAME
    20-0-0/w UBIN        r     1 UNAME_LEN

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(369)   r     1 AS_FIELD1                  0-0-0/w PTR         r     1 DSEG1$
     0-0-0/w UBIN        r     1 DSEG1SIZE                  0-0-0/b BIT         r     1 DSEG_FLG
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/b STRC        r     1 MERR_CODE
     0-0-0/w STRC(504)   r     1 P_PCB                      0-0-0/c STRC(378)   r     1 USERS_KEY

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(1008)  r     1 KL$TREC                    0-0-0/w ASTR(153)   r     1 OUT$SYM
     0-0-0/w STRC(144)   r     1 P$NODE

PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:223  

   Procedure ASR$R_TPDEVICE requires 200 words for executable code.
   Procedure ASR$R_TPDEVICE requires 20 words of local(AUTO) storage.
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:224  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:225  
          MINI XREF LISTING

ACCT_LEN
     14048**DCL     14366<<ASSIGN  14383>>ASSIGN  14384>>CALLBLT 14387>>ASSIGN  14388>>ASSIGN
ARS
     14043**DCL     14380<<ASSIGN  14390<>CALL
ASA_BRKS_LOC
     11185**DCL     11185--REDEF
ASB$DELREC_HLP
     14066**DCL-ENT 14444--CALL
ASB$DEQ_HLP
     14075**DCL-ENT 14455--CALL
ASB$ENQ_HLP
     14072**DCL-ENT 14439--CALL
ASB$GETSEG
     14069**DCL-ENT 14337--CALL
ASB$READ_HLP
     14087**DCL-ENT 14390--CALL
ASB$WRITE_LO
     14090**DCL-ENT 14454--CALL
ASH$ERROR
     14078**DCL-ENT 14351--CALL    14414--CALL    14434--CALL    14446--CALL
ASH$WARN
     14081**DCL-ENT 14407--CALL
AS_DEFAULT.BANNER_PERM
     11878**DCL     11879--REDEF
AS_DEFAULT.BUDGET.MACCT
     11783**DCL     11787--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     11796**DCL     11799--REDEF
AS_DEFAULT.BUDGET.PACCUM
     11779**DCL     11781--REDEF
AS_DEFAULT.BUDGET.PMAXC
     11774**DCL     11776--REDEF
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:226  
AS_DEFAULT.SETUP_CHRA.TXT
     11894**DCL     11895--REDEF   11896--REDEF
AS_DEFAULT_DREC.PASSWORD
     13148**DCL     13152--REDEF
AS_DEFAULT_DREC.RENAME
     13171**DCL     13172--REDEF
AS_DFLT.BANNER_PERM
     11700**DCL     11701--REDEF
AS_DFLT.BUDGET.MACCT
     11605**DCL     11609--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     11618**DCL     11621--REDEF
AS_DFLT.BUDGET.PACCUM
     11601**DCL     11603--REDEF
AS_DFLT.BUDGET.PMAXC
     11596**DCL     11598--REDEF
AS_DFLT.SETUP_CHRA.TXT
     11716**DCL     11717--REDEF   11718--REDEF
AS_FE_MODE
     11051**DCL     11052--REDEF
AS_FIELD1.COUNT
     11182**DCL     14383<<ASSIGN  14387<<ASSIGN  14449>>ASSIGN  14450>>ASSIGN
AS_FIELD1.TEXT
     11182**DCL     14384<<CALLBLT 14388<<ASSIGN  14449>>ASSIGN  14452<<CALLBLT 14454<>CALL
AS_MODE
     11048**DCL     11050--REDEF
AS_MOD_USER.ACCESS
     13913**DCL     13914--REDEF
AS_MOD_USER.BANNER
     13900**DCL     13901--REDEF
AS_MOD_USER.BANNER_PERM
     13902**DCL     13903--REDEF
AS_MOD_USER.BILL
     13908**DCL     13909--REDEF
AS_MOD_USER.CPROC
     13904**DCL     13905--REDEF
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:227  
AS_MOD_USER.FEBILL
     13984**DCL     13985--REDEF
AS_MOD_USER.FECXTMEM
     14001**DCL     14002--REDEF
AS_MOD_USER.FEMINTS
     13986**DCL     13987--REDEF
AS_MOD_USER.FEMMEM
     13997**DCL     13998--REDEF
AS_MOD_USER.FEMTIME
     13995**DCL     13996--REDEF
AS_MOD_USER.FEPPRIV
     13992**DCL     13994--REDEF
AS_MOD_USER.FEPRIV
     13989**DCL     13991--REDEF
AS_MOD_USER.FORCE_BIT
     13898**DCL     13899--REDEF
AS_MOD_USER.KEY
     13980**DCL     13982--REDEF
AS_MOD_USER.LASTCPROC
     13906**DCL     13907--REDEF
AS_MOD_USER.LIMITS.DO_
     13954**DCL     13955--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     13970**DCL     13971--REDEF
AS_MOD_USER.LIMITS.LO
     13950**DCL     13951--REDEF
AS_MOD_USER.LIMITS.MEM
     13946**DCL     13947--REDEF
AS_MOD_USER.LIMITS.MPRIO
     13974**DCL     13975--REDEF
AS_MOD_USER.LIMITS.PDIS
     13962**DCL     13963--REDEF
AS_MOD_USER.LIMITS.PO
     13958**DCL     13959--REDEF
AS_MOD_USER.LIMITS.TDIS
     13966**DCL     13967--REDEF
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:228  
AS_MOD_USER.LIMITS.TIME
     13942**DCL     13943--REDEF
AS_MOD_USER.MAXENQ
     13923**DCL     13924--REDEF
AS_MOD_USER.PERM_BIT
     13896**DCL     13897--REDEF
AS_MOD_USER.PPRIV
     13918**DCL     13920--REDEF
AS_MOD_USER.PRIOB
     13925**DCL     13926--REDEF
AS_MOD_USER.PRIV
     13915**DCL     13917--REDEF
AS_MOD_USER.QUAN
     13921**DCL     13922--REDEF
AS_MOD_USER.SETUP
     13894**DCL     13895--REDEF
AS_PROJECT.BANNER_PERM
     12234**DCL     12235--REDEF
AS_PROJECT.BUDGET.MACCT
     12139**DCL     12143--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12152**DCL     12155--REDEF
AS_PROJECT.BUDGET.PACCUM
     12135**DCL     12137--REDEF
AS_PROJECT.BUDGET.PMAXC
     12130**DCL     12132--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12250**DCL     12251--REDEF   12252--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     12412**DCL     12413--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     12317**DCL     12321--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     12330**DCL     12333--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     12313**DCL     12315--REDEF
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:229  
AS_PROJECT_DFLT.BUDGET.PMAXC
     12308**DCL     12310--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     12428**DCL     12429--REDEF   12430--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     13634**DCL     13638--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     13657**DCL     13658--REDEF
AS_PROJECT_DREC.PASSWORD
     13472**DCL     13476--REDEF
AS_PROJECT_DREC.RENAME
     13495**DCL     13496--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12056**DCL     12057--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     11961**DCL     11965--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     11974**DCL     11977--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     11957**DCL     11959--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     11952**DCL     11954--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12072**DCL     12073--REDEF   12074--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     13310**DCL     13314--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     13333**DCL     13334--REDEF
AS_USERS.BANNER_PERM
     11522**DCL     11523--REDEF
AS_USERS.BUDGET.MACCT
     11427**DCL     11431--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     11440**DCL     11443--REDEF
AS_USERS.BUDGET.PACCUM
     11423**DCL     11425--REDEF
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:230  
AS_USERS.BUDGET.PMAXC
     11418**DCL     11420--REDEF
AS_USERS.SETUP_CHRA.TXT
     11538**DCL     11539--REDEF   11540--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     12590**DCL     12591--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     12495**DCL     12499--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     12508**DCL     12511--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     12491**DCL     12493--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     12486**DCL     12488--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     12606**DCL     12607--REDEF   12608--REDEF
CON_KEY
     14056**DCL     14376>>ASSIGN
CON_KEY.TXT.ACCT
     14059**DCL     14365<<ASSIGN  14384>>CALLBLT 14388>>ASSIGN
CON_KEY.TXT.UNAME
     14060**DCL     14358<<ASSIGN  14370<<ASSIGN  14381>>IF      14384>>CALLBLT
DSEG1$
     11186**DCL     14379>>ASSIGN
DSEG1SIZE
     11187**DCL     14380>>ASSIGN
DSEG_FLG
     11186**DCL     14335>>IF
ERR_CODE
     11180**DCL     11181--REDEF   14414<>CALL    14446<>CALL
I
     14044**DCL     14361<<DOINDEX 14362>>DOSELCT 14365>>ASSIGN  14365>>ASSIGN  14366>>ASSIGN  14370>>ASSIGN
     14370>>ASSIGN  14371>>ASSIGN
KL$TREC.ATYP
     14202**DCL     14417>>IF      14417>>IF
KL$TREC.KC$CGID.NAME#.TXT
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:231  
     14324**DCL     14417>>IF
KL$TREC.PASSWORD
     14255**DCL     14259--REDEF
KL$TREC.RENAME
     14278**DCL     14279--REDEF
KL_DEFAULT.PASSWORD
     13796**DCL     13800--REDEF
KL_DEFAULT.RENAME
     13819**DCL     13820--REDEF
KL_DFLT.PASSWORD
     12986**DCL     12990--REDEF
KL_DFLT.RENAME
     13009**DCL     13010--REDEF
KL_DREC.PASSWORD
     12824**DCL     12828--REDEF
KL_DREC.RENAME
     12847**DCL     12848--REDEF
KL_DREC_CNT.PASSWORD
     12711**DCL     12715--REDEF
KL_DREC_CNT.RENAME
     12734**DCL     12735--REDEF
MERR_CODE.CODE
     11181**DCL     14392>>IF
OUT$SYM.COUNT
     14174**DCL     14177--IMP-SIZ 14365>>ASSIGN  14366>>ASSIGN  14370>>ASSIGN  14371>>ASSIGN
OUT$SYM.TEXT
     14177**DCL     14365>>ASSIGN  14370>>ASSIGN
P$NODE.CODE
     14112**DCL     14362>>DOSELCT
P$NODE.SUBLK$
     14137**DCL     14362>>DOSELCT 14365>>ASSIGN  14365>>ASSIGN  14366>>ASSIGN  14370>>ASSIGN  14370>>ASSIGN
     14371>>ASSIGN
P$NODE.SUBNODES
     14116**DCL     14361>>DOINDEX
PROJ_KEY.TEXT
     11058**DCL     11058--REDEF
PL6.E3A0      #005=ASR$R_TPDEVICE File=ASR$R_HLP.:E05TSI                         TUE 07/29/97 10:55 Page:232  
PROJ_KEY.TXT.PROJECT
     11058**DCL     11058--REDEF
P_PCB.OUT$
     11226**DCL     14361>>DOINDEX 14362>>DOSELCT 14365>>ASSIGN  14365>>ASSIGN  14366>>ASSIGN  14370>>ASSIGN
     14370>>ASSIGN  14371>>ASSIGN
REMEM_VAR
     11184**DCL     11184--REDEF
REM_FCMD
     11184**DCL     11185--REDEF
SIZE
     14050**DCL     14451<<ASSIGN  14454<>CALL
TREC$
     14042**DCL     14197--IMP-PTR 14379<<ASSIGN  14390<>CALL    14417>>IF      14417>>IF      14417>>IF
UNAME
     14047**DCL     14449<<ASSIGN  14452>>CALLBLT
UNAME_LEN
     14049**DCL     14359<<ASSIGN  14371<<ASSIGN  14377>>ASSIGN  14383>>ASSIGN  14384>>CALLBLT 14450<<ASSIGN
     14451>>ASSIGN  14452>>CALLBLT
USERS_KEY
     11055**DCL     14376<<ASSIGN
USERS_KEY.COUNT
     11055**DCL     14377<<ASSIGN
USERS_KEY.TEXT
     11055**DCL     11056--REDEF   11056--REDEF   11056--REDEF   11057--REDEF

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:233  
     1249        1        /*M* ASR$R_LINK_VIRCIR - processes the REMOVE LINK/VIRTUAL CIRCUIT command.  */
     1250        2        /*T***********************************************************/
     1251        3        /*T*                                                         */
     1252        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1253        5        /*T*                                                         */
     1254        6        /*T***********************************************************/
     1255        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
     1256        8              ECU=3,CSU=3,SDI=3                                           */
     1257        9                                                              /**/
     1258       10        ASR$R_LINK_VIRCIR: PROC;
     1259       11                                                              /**/
     1260       12        /********************************************************************/
     1261       13        /*   Include files   include files   include files   include files   */
     1262       14        /*********************************************************************/
     1263       15                                                              /**/
     1264       16              %INCLUDE  CP_6 ;
     1265       97              %INCLUDE  AS_PERR_C ;
     1266      699              %INCLUDE  KL_CONFIG_M;
     1267     1461              %INCLUDE  B_ERRORS_C;
     1268     2588              %INCLUDE  AS_ENTRIES_M;
     1269     3638              %INCLUDE  AS_SUPER_C ;
     1270     4073              %INCLUDE  AS_SUBS_C ;
     1271     5487              %INCLUDE  AS_MAC_C ;
     1272     5567              %INCLUDE  KL_SUPER_C ;
     1273     8469              %INCLUDE  XU_MACRO_C ;
     1274    11575              %INCLUDE  XU_FORMAT_C ;
     1275    11737              %INCLUDE  AS_SUPER_R ;
     1276    14753
     1277    14754
     1278    14755        /*********************************************************************/
     1279    14756        /*   Auto data       auto data       auto data       auto data       */
     1280    14757        /*********************************************************************/
     1281    14758                                                              /**/
     1282    14759    1   DCL PTR$ PTR ;
     1283    14760    1   DCL DEV$ PTR ;
     1284    14761    1   DCL BLK$ PTR ;
     1285    14762    1   DCL ARS UBIN WORD ;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:234  
     1286    14763    1   DCL I UBIN WORD ;
     1287    14764    1   DCL J UBIN WORD ;
     1288    14765    1   DCL MOVE_SIZE UBIN WORD ;
     1289    14766    1   DCL VIRCIR# UBIN WORD ;
     1290    14767    1   DCL DEV_SIZEW UBIN WORD ;
     1291    14768    1   DCL VIRCIR_INDEX UBIN WORD ;
     1292    14769    1   DCL DEV_START$ PTR ;
     1293    14770    1   DCL DEV_STOP$ PTR ;
     1294    14771    1   DCL LINK        BIT(1) ;
     1295    14772    1   DCL VIRCIR  BIT(1) ;
     1296    14773    1   DCL LINKDEV  BIT(1) ;
     1297    14774    1   DCL LINKDEV_EXISTS  BIT(1) ;
     1298    14775    1   DCL VIRCIR_EXISTS BIT(1) ;
     1299    14776    1   DCL FOUND       BIT(1) ;
     1300    14777    1   DCL DONE        BIT(1) ;
     1301    14778    1   DCL 1 LINK_NAME,
     1302    14779    1          2 COUNT UBIN BYTE UNAL,
     1303    14780    1          2 TEXT CHAR(8) UNAL;
     1304    14781
     1305    14782        /*********************************************************************/
     1306    14783        /*   Static data     static data     static data     static data     */
     1307    14784        /*********************************************************************/
     1308    14785                                                              /**/
     1309    14786    1   DCL 1 LINK_KEY ALIGNED STATIC ,
     1310    14787    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
     1311    14788    1          2 TXT UNAL ,
     1312    14789    1             3 LINK CHAR(8) UNAL INIT(' ') ,
     1313    14790    1             3 ASTR CHAR(1) UNAL INIT('*') ;
     1314    14791        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
     1315    14837
     1316    14838        /********************************************************************/
     1317    14839        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     1318    14840        /*********************************************************************/
     1319    14841                                                              /**/
     1320    14842        %ASB$DELREC_HLP ;
     1321    14845        %ASB$GETSEG ;
     1322    14848        %ASB$GET_MORE_SEG ;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:235  
     1323    14851        %ASB$ENQ_HLP ;
     1324    14854        %ASB$DEQ_HLP ;
     1325    14857        %ASH$ERROR ;
     1326    14860        %ASH$WARN ;
     1327    14863        %ASH$INFO ;
     1328    14866        %ASB$READ_HLP ;
     1329    14869        %ASB$WRITE_HLP ;
     1330    14872        %ASA$ERROR ;
     1331    14875        %ASB$DELREC_NETCON ;
     1332    14878        %ASB$CLOSE_NETCON ;
     1333    14881
     1334    14882        /*********************************************************************/
     1335    14883        /*   Local based     local based     local based     local based     */
     1336    14884        /*********************************************************************/
     1337    14885                                                              /**/
     1338    14886        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
     1339    14887                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
     1340    14932        %PARSE$SYM( NAME = OUT$SYM ,
     1341    14933                    STCLASS="BASED(BLK$)") ;
     1342    14971        %KL_DREC ( NAME = KL$DREC ,
     1343    14972                   LAST=",",
     1344    14973                   STCLASS="BASED( DSEG1$ )");
     1345    15086        %KL_LNK( NAME = LNK,
     1346    15087                 LVL = 2,
     1347    15088                 STCLASS = BASED,
     1348    15089                 LAST = ";" );
     1349    15313        %KL_LNKVC (   NAME    = KL$LNKVC,
     1350    15314                      LVL     = 1,
     1351    15315                      STCLASS = "BASED(DEV$)" );
     1352    15539        %KL_LINKDEV ( NAME    = KL$LINKDEV,
     1353    15540                      LVL     = 1,
     1354    15541                      STCLASS = "BASED(DEV$)" );
     1355    15712    1   DCL MOVE$TEMP CHAR(MOVE_SIZE) BASED;
     1356    15713
     1357    15714    1   DCL B$TCB$ PTR SYMREF;
     1358    15715        %B$TCB;
     1359    15718        %B$ALT;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:236  
     1360    15726        /*********************************************************************/
     1361    15727        /*   Procedure       procedure       procedure       procedure       */
     1362    15728        /*********************************************************************/
     1363    15729                                                              /**/
     1364    15730        /*
     1365    15731            ***            Begin procedure                    ***
     1366    15732        */
     1367    15733    1   LINK = (P$NODE.CODE = R_LINK_VAL);
     1368    15734    1   VIRCIR = (P$NODE.CODE = R_VIR_CIR_VAL);
     1369    15735    1   LINKDEV = (P$NODE.CODE = R_LINK_DEV_VAL);
     1370    15736                                                              /* Get data seg. */
     1371    15737    1   IF NOT DSEG_FLG THEN
     1372    15738    1      CALL ASB$GETSEG
     1373    15739    2      WHENALTRETURN DO;
     1374    15740              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );
     1375    15755    2         RETURN ;
     1376    15756    2         END; /*  Whenaltreturn  */
     1377    15757                                                              /* Get link name */
     1378    15758    1   IF LINK THEN
     1379    15759    1      BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
     1380    15760    1   ELSE
     1381    15761    1      BLK$ = P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;
     1382    15762    1   LINK_NAME.COUNT = OUT$SYM.COUNT;
     1383    15763    1   LINK_NAME.TEXT = OUT$SYM.TEXT ;
     1384    15764    1   LINK_KEY.TXT.LINK = OUT$SYM.TEXT ;
     1385    15765    1   USERS_KEY = LINK_KEY ;
     1386    15766    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR);
     1387    15767                                                              /* Pick up link record */
     1388    15768    1   READ_LINK_REC:
     1389    15769    1   ARS = DSEG1SIZE ;
     1390    15770    1   CALL ASB$READ_HLP( DSEG1$, ARS, 1)
     1391    15771    2   WHENALTRETURN DO;
     1392    15772    3      IF MERR_CODE.CODE = %E$NOKEY THEN DO;
     1393    15773        /*E* ERROR:   ASR-E$LINK_NO_EXIST2-C
     1394    15774             MESSAGE: Link %U1 does not exist.
     1395    15775        */
     1396    15776    3         AS_FIELD1 = LINK_NAME;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:237  
     1397    15777              %SCREAM( ERR#=E$LINK_NO_EXIST2, MID='R', LEVEL=WARN );
     1398    15792    3         END;
     1399    15793    3      ELSE DO;
     1400    15794    3         CALL ASA$ERROR( USERS_KEY, E$UNABLE_TO_READ_HLP );
     1401    15795    3         END;
     1402    15796    2      RETURN;
     1403    15797    2      END;  /*  Whenaltreturn  */
     1404    15798    2   IF KL$DREC.ATYP ~= %KLAT_LNKLINE# THEN DO;
     1405    15799        /*E*  ERROR:    ASR-E$NOTLINK-C
     1406    15800              MESSAGE0: %%U1 %is not a link.
     1407    15801        */
     1408    15802    2      AS_FIELD1 = LINK_NAME;
     1409    15803           %SCREAM( ERR#=E$NOTLINK , LEVEL=ERROR, MID='R' );
     1410    15818    2      RETURN ;
     1411    15819    2      END ; /* Then do */
     1412    15820    1   DEV_START$ = PINCRW(ADDR(KL$DREC.LNK), SIZEW(KL$DREC.LNK) );
     1413    15821    1   DEV_SIZEW = KL$DREC.NWINFO - POFFW(DEV_START$,ADDR(KL$DREC.LNK));
     1414    15822    1   DEV_STOP$ = PINCRW( DEV_START$, DEV_SIZEW);
     1415    15823    1   DEV$ = DEV_START$;
     1416    15824    2   IF LINK THEN DO;
     1417    15825    2      VIRCIR_INDEX = 0;
     1418    15826    3      DO WHILE( VIRCIR_INDEX < KL$DREC.LNK.BLKHDR.NSUBS ) ;
     1419    15827    4         IF KL$LNKVC.BLKHDR.BLKTYP = %KLTY_VIRCIR# THEN DO;
     1420    15828    4            CALL REMOVE_VIRCIR;
     1421    15829    4            DEV$ = PINCRW( DEV$, SIZEW(KL$LNKVC));
     1422    15830    4            END;  /*  Vircir  */
     1423    15831    4         ELSE DO;
     1424    15832    4            CALL REMOVE_LINKDEV;
     1425    15833    4            DEV$ = PINCRW( DEV$, SIZEW(KL$LINKDEV));
     1426    15834    4            END; /*  Linkdev  */
     1427    15835    3         VIRCIR_INDEX = VIRCIR_INDEX + 1;
     1428    15836    3         END;  /*  Do while VIRCIR_INDEX < KL$DREC.LNK.BLKHDR.NSUBS  */
     1429    15837    2      CALL ASB$DELREC_HLP ALTRET(DEL_ERR);
     1430    15838        /*E*  ERROR:  ASR-E$LINK_REMOVED-C
     1431    15839              MESSAGE:.. Link %U1 removed.
     1432    15840        */
     1433    15841    2      AS_FIELD1 = LINK_NAME;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:238  
     1434    15842           %SCREAM( ERR#=E$LINK_REMOVED, LEVEL=INFO, MID='R' );
     1435    15857    2      KL_TERM_KEY.TERMID.TERM.TERM_NAME = LINK_NAME.TEXT;
     1436    15858    2      CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))
     1437    15859    3      WHENALTRETURN DO;
     1438    15860    3         IF MERR_CODE.CODE ~= %E$NOKEY
     1439    15861    4         THEN DO;
     1440    15862    4            GOTO NETCON_ERR;
     1441    15863    4            END;
     1442    15864    3         END;
     1443    15865    2      CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);
     1444    15866    2      END;
     1445    15867    2   ELSE IF VIRCIR THEN DO;
     1446    15868                                                      /* Get virtual circuit number */
     1447    15869    2         BLK$ = P$NODE.SUBLK$(0);
     1448    15870    2         CALL CHARBIN( VIRCIR#, OUT$SYM.TEXT );
     1449    15871    3         IF VIRCIR# > 4095 THEN DO;
     1450    15872        /*E*  ERROR:  ASR-E$NOT_VIR_CIR-C
     1451    15873              MESSAGE: Illegal VIRTUAL CIRCUIT number.
     1452    15874              MESSAGE1: A VIRTUAL CIRCUIT number must be between 0 and 4095.
     1453    15875        */
     1454    15876                 %SCREAM( ERR#=E$NOT_VIR_CIR, LEVEL=ERROR, MID='R' );
     1455    15891    3            RETURN;
     1456    15892    3            END;
     1457    15893                                                     /* See if the virtual circuit exists.*/
     1458    15894    2         VIRCIR_EXISTS = AS_FALSE;
     1459    15895    3         DO WHILE( DEV$ < DEV_STOP$ AND NOT VIRCIR_EXISTS );
     1460    15896    3            IF KL$LNKVC.BLKHDR.BLKTYP = %KLTY_VIRCIR# THEN
     1461    15897    3               IF KL$LNKVC.VIRCIR# = VIRCIR# THEN
     1462    15898    3                  VIRCIR_EXISTS = AS_TRUE;
     1463    15899    3               ELSE
     1464    15900    3                  DEV$ = PINCRW( DEV$, SIZEW(KL$LNKVC));
     1465    15901    3            ELSE
     1466    15902    3               DEV$ = PINCRW( DEV$, SIZEW(KL$LINKDEV));
     1467    15903    3            END;
     1468    15904    3         IF NOT VIRCIR_EXISTS THEN DO;
     1469    15905        /*E*  ERROR:  ASR-E$VIR_CIRNOEXIST-C
     1470    15906              MESSAGE: Virtual circuit %U1 does not exist.
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:239  
     1471    15907        */
     1472    15908    3            AS_FIELD1.COUNT = OUT$SYM.COUNT;
     1473    15909    3            AS_FIELD1.TEXT = OUT$SYM.TEXT;
     1474    15910                 %SCREAM( ERR#=E$VIR_CIRNOEXIST, LEVEL=WARN, MID='R' );
     1475    15925    3            RETURN;
     1476    15926    3            END;
     1477    15927    2         CALL REMOVE_VIRCIR;
     1478    15928    2         CALL ASB$WRITE_HLP( DSEG1$, ARS ) ALTRET( WRITE_LINK_ERR );
     1479    15929    2         END;
     1480    15930    2      ELSE IF LINKDEV THEN DO;
     1481    15931                                                      /* Get link device name */
     1482    15932    2            BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
     1483    15933                                                      /* See if the link device exists.*/
     1484    15934    2            LINKDEV_EXISTS = AS_FALSE;
     1485    15935    3            DO WHILE( DEV$ < DEV_STOP$ AND NOT LINKDEV_EXISTS );
     1486    15936    3               IF KL$LINKDEV.BLKHDR.BLKTYP = %KLTY_LINKDEV# THEN
     1487    15937    3                  IF KL$LINKDEV.LOGON# = OUT$SYM.TEXT THEN
     1488    15938    3                     LINKDEV_EXISTS = AS_TRUE;
     1489    15939    3                  ELSE
     1490    15940    3                     DEV$ = PINCRW( DEV$, SIZEW(KL$LINKDEV));
     1491    15941    3               ELSE
     1492    15942    3                  DEV$ = PINCRW( DEV$, SIZEW(KL$LNKVC));
     1493    15943    3               END;
     1494    15944    3            IF NOT LINKDEV_EXISTS THEN DO;
     1495    15945        /*E*  ERROR:  ASR-E$LINKDEV_NOEXIST-C
     1496    15946              MESSAGE: Link device %U1 does not exist.
     1497    15947        */
     1498    15948    3               AS_FIELD1.COUNT = OUT$SYM.COUNT;
     1499    15949    3               AS_FIELD1.TEXT = OUT$SYM.TEXT;
     1500    15950                    %SCREAM( ERR#=E$LINKDEV_NOEXIST, LEVEL=WARN, MID='R' );
     1501    15965    3               RETURN;
     1502    15966    3               END;
     1503    15967    2            CALL REMOVE_LINKDEV;
     1504    15968    2            CALL ASB$WRITE_HLP( DSEG1$, ARS ) ALTRET( WRITE_LINK_ERR );
     1505    15969    2            END;
     1506    15970    1   EXIT#:
     1507    15971    1   CALL ASB$DEQ_HLP ALTRET( DEQ_ERR ) ;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:240  
     1508    15972                                                              /* All done */
     1509    15973    1   RETURN ;
     1510    15974                                                              /*  Errors  */
     1511    15975    1   NETCON_ERR:;
     1512    15976    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1513    15977    1   CALL ASH$ERROR(ERR_CODE);
     1514    15978    1   RETURN;
     1515    15979
     1516    15980    1   DEL_ERR: ;
     1517    15981    1   WRITE_LINK_ERR: ;
     1518    15982    1   CALL ASH$ERROR( ERR_CODE );
     1519    15983    1   ENQ_ERR: ;
     1520    15984    1   DEQ_ERR: ;
     1521    15985    1   RETURN;
     1522    15986
     1523    15987        %EJECT;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:241  
     1524    15988    1   REMOVE_VIRCIR: PROC;
     1525    15989
     1526    15990
     1527    15991        /*E*  ERROR:  ASR-E$VIR_CIR_REMOVED-C
     1528    15992              MESSAGE:.... Virtual circuit %U1 for link %U2 removed.
     1529    15993        */
     1530    15994    2   VIRCIR# = KL$LNKVC.VIRCIR#;
     1531    15995        %NUMBER( NUM1=VIRCIR# );
             16003    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, VIRCIR# );
     1532    16025    2   AS_FIELD2 = LINK_NAME;
     1533    16026
     1534    16027
     1535    16028    3   IF NOT LINK THEN DO;
     1536    16029    3      PTR$ = PINCRW(DEV$, SIZEW(KL$LNKVC));
     1537    16030    3      MOVE_SIZE = POFFW(DEV_STOP$, PTR$)*4;
     1538    16031    3      KL$DREC.NWINFO = KL$DREC.NWINFO - SIZEW(KL$LNKVC);
     1539    16032    3      KL$DREC.LNK.BLKHDR.NSUBS = KL$DREC.LNK.BLKHDR.NSUBS - 1;
     1540    16033    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO*4;
     1541    16034    3      IF MOVE_SIZE > 0 THEN
     1542    16035    3         DEV$->MOVE$TEMP = PTR$->MOVE$TEMP;
     1543    16036    3      END;
     1544    16037        %SCREAM( ERR#=E$VIR_CIR_REMOVED, LEVEL=INFO, MID='R' );
     1545    16052    2   END REMOVE_VIRCIR;
     1546    16053
     1547    16054        %EJECT;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:242  
     1548    16055    1   REMOVE_LINKDEV: PROC;
     1549    16056
     1550    16057
     1551    16058        /*E*  ERROR:  ASR-E$LINKDEV_REMOVED-C
     1552    16059              MESSAGE:.... Link device %U1 for link %U2 removed.
     1553    16060        */
     1554    16061    2   AS_FIELD1.COUNT = SIZEC(KL$LINKDEV.LOGON#);
     1555    16062    2   AS_FIELD1.TEXT = KL$LINKDEV.LOGON#;
     1556    16063    2   AS_FIELD2 = LINK_NAME;
     1557    16064
     1558    16065
     1559    16066    3   IF NOT LINK THEN DO;
     1560    16067    3      PTR$ = PINCRW(DEV$, SIZEW(KL$LINKDEV));
     1561    16068    3      MOVE_SIZE = POFFW(DEV_STOP$, PTR$)*4;
     1562    16069    3      KL$DREC.NWINFO = KL$DREC.NWINFO - SIZEW(KL$LINKDEV);
     1563    16070    3      KL$DREC.LNK.BLKHDR.NSUBS = KL$DREC.LNK.BLKHDR.NSUBS - 1;
     1564    16071    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO*4;
     1565    16072    3      IF MOVE_SIZE > 0 THEN
     1566    16073    3         DEV$->MOVE$TEMP = PTR$->MOVE$TEMP;
     1567    16074    3      END;
     1568    16075        %SCREAM( ERR#=E$LINKDEV_REMOVED, LEVEL=INFO, MID='R' );
     1569    16090    2   END REMOVE_LINKDEV;
     1570    16091
     1571    16092    1   END ASR$R_LINK_VIRCIR;
     1572    16093        %EOD ;

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:243  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_LINK_VIRCIR.

   Procedure ASR$R_LINK_VIRCIR requires 453 words for executable code.
   Procedure ASR$R_LINK_VIRCIR requires 32 words of local(AUTO) storage.

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:244  

 Object Unit name= ASR$R_LINK_VIRCIR                          File name= ASR$R_HLP.:E05TOU
 UTS= JUL 29 '97 10:55:40.76 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none     8     10  ASR$R_LINK_VIRCIR
    3  RoData even  UTS      9     11  ASR$R_LINK_VIRCIR
    4   Proc  even  none   453    705  ASR$R_LINK_VIRCIR
    5  RoData even  none    22     26  ASR$R_LINK_VIRCIR

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASR$R_LINK_VIRCIR
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:245  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       0 ASB$DELREC_HLP
 yes     yes           Std       2 ASB$WRITE_HLP
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       0 ASB$ENQ_HLP
 yes     yes           Std       3 ASB$READ_HLP
         yes           Std       3 ASA$ERROR
         yes           Std       2 ASH$INFO
 yes     yes           Std       1 ASB$DELREC_NETCON
         yes           Std       2 ASH$WARN
 yes     yes           Std       0 ASB$DEQ_HLP
 yes     yes           Std       0 ASB$CLOSE_NETCON
         yes           Std       4 ASB$BINCHAR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_TRUE                          r    AS_FALSE
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     USERS_KEY                             NODE$                                 ERR_CODE
     AS_FIELD1                             AS_FIELD2                             REMEM_VAR
     REM_FCMD                              ASA_BRKS_LOC                          DSEG_FLG
     DSEG1$                                DSEG1SIZE                             KL_DREC_CNT
     B$TCB$                                B_VECTNIL
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:246  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:247  


     1249        1        /*M* ASR$R_LINK_VIRCIR - processes the REMOVE LINK/VIRTUAL CIRCUIT command.  */
     1250        2        /*T***********************************************************/
     1251        3        /*T*                                                         */
     1252        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1253        5        /*T*                                                         */
     1254        6        /*T***********************************************************/
     1255        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
     1256        8              ECU=3,CSU=3,SDI=3                                           */
     1257        9                                                              /**/
     1258       10        ASR$R_LINK_VIRCIR: PROC;

     10  4 000000   000000 700200 xent  ASR$R_LINK_* TSX0  ! X66_AUTO_0
         4 000001   000040 000000                    ZERO    32,0

     1259       11                                                              /**/
     1260       12        /********************************************************************/
     1261       13        /*   Include files   include files   include files   include files   */
     1262       14        /*********************************************************************/
     1263       15                                                              /**/
     1264       16              %INCLUDE  CP_6 ;
     1265       97              %INCLUDE  AS_PERR_C ;
     1266      699              %INCLUDE  KL_CONFIG_M;
     1267     1461              %INCLUDE  B_ERRORS_C;
     1268     2588              %INCLUDE  AS_ENTRIES_M;
     1269     3638              %INCLUDE  AS_SUPER_C ;
     1270     4073              %INCLUDE  AS_SUBS_C ;
     1271     5487              %INCLUDE  AS_MAC_C ;
     1272     5567              %INCLUDE  KL_SUPER_C ;
     1273     8469              %INCLUDE  XU_MACRO_C ;
     1274    11575              %INCLUDE  XU_FORMAT_C ;
     1275    11737              %INCLUDE  AS_SUPER_R ;
     1276    14753
     1277    14754
     1278    14755        /*********************************************************************/
     1279    14756        /*   Auto data       auto data       auto data       auto data       */
     1280    14757        /*********************************************************************/
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:248  
     1281    14758                                                              /**/
     1282    14759    1   DCL PTR$ PTR ;
     1283    14760    1   DCL DEV$ PTR ;
     1284    14761    1   DCL BLK$ PTR ;
     1285    14762    1   DCL ARS UBIN WORD ;
     1286    14763    1   DCL I UBIN WORD ;
     1287    14764    1   DCL J UBIN WORD ;
     1288    14765    1   DCL MOVE_SIZE UBIN WORD ;
     1289    14766    1   DCL VIRCIR# UBIN WORD ;
     1290    14767    1   DCL DEV_SIZEW UBIN WORD ;
     1291    14768    1   DCL VIRCIR_INDEX UBIN WORD ;
     1292    14769    1   DCL DEV_START$ PTR ;
     1293    14770    1   DCL DEV_STOP$ PTR ;
     1294    14771    1   DCL LINK        BIT(1) ;
     1295    14772    1   DCL VIRCIR  BIT(1) ;
     1296    14773    1   DCL LINKDEV  BIT(1) ;
     1297    14774    1   DCL LINKDEV_EXISTS  BIT(1) ;
     1298    14775    1   DCL VIRCIR_EXISTS BIT(1) ;
     1299    14776    1   DCL FOUND       BIT(1) ;
     1300    14777    1   DCL DONE        BIT(1) ;
     1301    14778    1   DCL 1 LINK_NAME,
     1302    14779    1          2 COUNT UBIN BYTE UNAL,
     1303    14780    1          2 TEXT CHAR(8) UNAL;
     1304    14781
     1305    14782        /*********************************************************************/
     1306    14783        /*   Static data     static data     static data     static data     */
     1307    14784        /*********************************************************************/
     1308    14785                                                              /**/
     1309    14786    1   DCL 1 LINK_KEY ALIGNED STATIC ,
     1310    14787    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
     1311    14788    1          2 TXT UNAL ,
     1312    14789    1             3 LINK CHAR(8) UNAL INIT(' ') ,
     1313    14790    1             3 ASTR CHAR(1) UNAL INIT('*') ;
     1314    14791        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
     1315    14837
     1316    14838        /********************************************************************/
     1317    14839        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:249  
     1318    14840        /*********************************************************************/
     1319    14841                                                              /**/
     1320    14842        %ASB$DELREC_HLP ;
     1321    14845        %ASB$GETSEG ;
     1322    14848        %ASB$GET_MORE_SEG ;
     1323    14851        %ASB$ENQ_HLP ;
     1324    14854        %ASB$DEQ_HLP ;
     1325    14857        %ASH$ERROR ;
     1326    14860        %ASH$WARN ;
     1327    14863        %ASH$INFO ;
     1328    14866        %ASB$READ_HLP ;
     1329    14869        %ASB$WRITE_HLP ;
     1330    14872        %ASA$ERROR ;
     1331    14875        %ASB$DELREC_NETCON ;
     1332    14878        %ASB$CLOSE_NETCON ;
     1333    14881
     1334    14882        /*********************************************************************/
     1335    14883        /*   Local based     local based     local based     local based     */
     1336    14884        /*********************************************************************/
     1337    14885                                                              /**/
     1338    14886        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
     1339    14887                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
     1340    14932        %PARSE$SYM( NAME = OUT$SYM ,
     1341    14933                    STCLASS="BASED(BLK$)") ;
     1342    14971        %KL_DREC ( NAME = KL$DREC ,
     1343    14972                   LAST=",",
     1344    14973                   STCLASS="BASED( DSEG1$ )");
     1345    15086        %KL_LNK( NAME = LNK,
     1346    15087                 LVL = 2,
     1347    15088                 STCLASS = BASED,
     1348    15089                 LAST = ";" );
     1349    15313        %KL_LNKVC (   NAME    = KL$LNKVC,
     1350    15314                      LVL     = 1,
     1351    15315                      STCLASS = "BASED(DEV$)" );
     1352    15539        %KL_LINKDEV ( NAME    = KL$LINKDEV,
     1353    15540                      LVL     = 1,
     1354    15541                      STCLASS = "BASED(DEV$)" );
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:250  
     1355    15712    1   DCL MOVE$TEMP CHAR(MOVE_SIZE) BASED;
     1356    15713
     1357    15714    1   DCL B$TCB$ PTR SYMREF;
     1358    15715        %B$TCB;
     1359    15718        %B$ALT;
     1360    15726        /*********************************************************************/
     1361    15727        /*   Procedure       procedure       procedure       procedure       */
     1362    15728        /*********************************************************************/
     1363    15729                                                              /**/
     1364    15730        /*
     1365    15731            ***            Begin procedure                    ***
     1366    15732        */
     1367    15733    1   LINK = (P$NODE.CODE = R_LINK_VAL);

  15733  4 000002   400000 220003                    LDX0    -131072,DU
         4 000003   000000 470400 xsym               LDP0    NODE$
         4 000004   000000 721100                    LXL1    0,,PR0
         4 000005   000100 101003                    CMPX1   64,DU
         4 000006   000010 600000 4                  TZE     s:15733+6
         4 000007   000000 220003                    LDX0    0,DU
         4 000010   000000 636010                    EAQ     0,X0
         4 000011   200017 756100                    STQ     LINK,,AUTO

     1368    15734    1   VIRCIR = (P$NODE.CODE = R_VIR_CIR_VAL);

  15734  4 000012   400000 220003                    LDX0    -131072,DU
         4 000013   000070 101003                    CMPX1   56,DU
         4 000014   000016 600000 4                  TZE     s:15734+4
         4 000015   000000 220003                    LDX0    0,DU
         4 000016   000000 636010                    EAQ     0,X0
         4 000017   200020 756100                    STQ     VIRCIR,,AUTO

     1369    15735    1   LINKDEV = (P$NODE.CODE = R_LINK_DEV_VAL);

  15735  4 000020   400000 220003                    LDX0    -131072,DU
         4 000021   000113 101003                    CMPX1   75,DU
         4 000022   000024 600000 4                  TZE     s:15735+4
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:251  
         4 000023   000000 220003                    LDX0    0,DU
         4 000024   000000 636010                    EAQ     0,X0
         4 000025   200021 756100                    STQ     LINKDEV,,AUTO

     1370    15736                                                              /* Get data seg. */
     1371    15737    1   IF NOT DSEG_FLG THEN

  15737  4 000026   000000 234000 xsym               SZN     DSEG_FLG
         4 000027   000041 604000 4                  TMI     s:15758

     1372    15738    1      CALL ASB$GETSEG

  15738  4 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000031   000000 701000 xent               TSX1    ASB$GETSEG
         4 000032   000034 702000 4                  TSX2    s:15752
         4 000033   000041 710000 4                  TRA     s:15758

     1373    15739    2      WHENALTRETURN DO;

     1374    15740              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );

  15752  4 000034   000000 630400 5                  EPPR0   0
         4 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000036   000000 701000 xent               TSX1    ASH$ERROR
         4 000037   000000 011000                    NOP     0

     1375    15755    2         RETURN ;

  15755  4 000040   000000 702200 xent               TSX2  ! X66_ARET

     1376    15756    2         END; /*  Whenaltreturn  */
     1377    15757                                                              /* Get link name */
     1378    15758    1   IF LINK THEN

  15758  4 000041   200017 234100                    SZN     LINK,,AUTO
         4 000042   000050 605000 4                  TPL     s:15761

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:252  
     1379    15759    1      BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  15759  4 000043   000000 470400 xsym               LDP0    NODE$
         4 000044   000003 471500                    LDP1    3,,PR0
         4 000045   100003 236100                    LDQ     3,,PR1
         4 000046   200005 756100                    STQ     BLK$,,AUTO
         4 000047   000054 710000 4                  TRA     s:15762

     1380    15760    1   ELSE
     1381    15761    1      BLK$ = P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;

  15761  4 000050   000000 470400 xsym               LDP0    NODE$
         4 000051   000004 471500                    LDP1    4,,PR0
         4 000052   100003 236100                    LDQ     3,,PR1
         4 000053   200005 756100                    STQ     BLK$,,AUTO

     1382    15762    1   LINK_NAME.COUNT = OUT$SYM.COUNT;

  15762  4 000054   200005 471500                    LDP1    BLK$,,AUTO
         4 000055   100004 236100                    LDQ     4,,PR1
         4 000056   200026 552140                    STBQ    LINK_NAME,'40'O,AUTO

     1383    15763    1   LINK_NAME.TEXT = OUT$SYM.TEXT ;

  15763  4 000057   100004 236100                    LDQ     4,,PR1
         4 000060   000033 772000                    QRL     27
         4 000061   000000 620006                    EAX0    0,QL
         4 000062   040100 100540                    MLR     fill='040'O
         4 000063   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000064   200026 200010                    ADSC9   LINK_NAME,,AUTO          cn=1,n=8

     1384    15764    1   LINK_KEY.TXT.LINK = OUT$SYM.TEXT ;

  15764  4 000065   040000 100540                    MLR     fill='040'O
         4 000066   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000067   000000 200010 2                  ADSC9   LINK_KEY                 cn=1,n=8

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:253  
     1385    15765    1   USERS_KEY = LINK_KEY ;

  15765  4 000070   000000 100400                    MLR     fill='000'O
         4 000071   000000 000012 2                  ADSC9   LINK_KEY                 cn=0,n=10
         4 000072   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1386    15766    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR);

  15766  4 000073   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000074   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000075   000533 702000 4                  TSX2    ENQ_ERR

     1387    15767                                                              /* Pick up link record */
     1388    15768    1   READ_LINK_REC:
     1389    15769    1   ARS = DSEG1SIZE ;

  15769  4 000076   000000 235000 xsym  READ_LINK_R* LDA     DSEG1SIZE
         4 000077   200006 755100                    STA     ARS,,AUTO

     1390    15770    1   CALL ASB$READ_HLP( DSEG1$, ARS, 1)

  15770  4 000100   000001 236000 5                  LDQ     1
         4 000101   200036 756100                    STQ     LINK_NAME+8,,AUTO
         4 000102   200006 630500                    EPPR0   ARS,,AUTO
         4 000103   200035 450500                    STP0    LINK_NAME+7,,AUTO
         4 000104   000002 236000 5                  LDQ     2
         4 000105   200034 756100                    STQ     LINK_NAME+6,,AUTO
         4 000106   200034 630500                    EPPR0   LINK_NAME+6,,AUTO
         4 000107   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000110   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000111   000113 702000 4                  TSX2    s:15772
         4 000112   000134 710000 4                  TRA     s:15798

     1391    15771    2   WHENALTRETURN DO;

     1392    15772    3      IF MERR_CODE.CODE = %E$NOKEY THEN DO;

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:254  
  15772  4 000113   000000 236000 xsym               LDQ     ERR_CODE
         4 000114   377770 376007                    ANQ     131064,DL
         4 000115   001020 116007                    CMPQ    528,DL
         4 000116   000127 601000 4                  TNZ     s:15794

     1393    15773        /*E* ERROR:   ASR-E$LINK_NO_EXIST2-C
     1394    15774             MESSAGE: Link %U1 does not exist.
     1395    15775        */
     1396    15776    3         AS_FIELD1 = LINK_NAME;

  15776  4 000117   000000 100500                    MLR     fill='000'O
         4 000120   200026 000011                    ADSC9   LINK_NAME,,AUTO          cn=0,n=9
         4 000121   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1397    15777              %SCREAM( ERR#=E$LINK_NO_EXIST2, MID='R', LEVEL=WARN );

  15787  4 000122   000003 630400 5                  EPPR0   3
         4 000123   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000124   000000 701000 xent               TSX1    ASH$WARN
         4 000125   000000 011000                    NOP     0

     1398    15792    3         END;

  15792  4 000126   000133 710000 4                  TRA     s:15796

     1399    15793    3      ELSE DO;

     1400    15794    3         CALL ASA$ERROR( USERS_KEY, E$UNABLE_TO_READ_HLP );

  15794  4 000127   000005 630400 5                  EPPR0   5
         4 000130   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000131   000000 701000 xent               TSX1    ASA$ERROR
         4 000132   000000 011000                    NOP     0

     1401    15795    3         END;

     1402    15796    2      RETURN;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:255  

  15796  4 000133   000000 702200 xent               TSX2  ! X66_ARET

     1403    15797    2      END;  /*  Whenaltreturn  */
     1404    15798    2   IF KL$DREC.ATYP ~= %KLAT_LNKLINE# THEN DO;

  15798  4 000134   000000 470400 xsym               LDP0    DSEG1$
         4 000135   000000 236100                    LDQ     0,,PR0
         4 000136   777000 376003                    ANQ     -512,DU
         4 000137   006000 116003                    CMPQ    3072,DU
         4 000140   000151 600000 4                  TZE     s:15820

     1405    15799        /*E*  ERROR:    ASR-E$NOTLINK-C
     1406    15800              MESSAGE0: %%U1 %is not a link.
     1407    15801        */
     1408    15802    2      AS_FIELD1 = LINK_NAME;

  15802  4 000141   000000 100500                    MLR     fill='000'O
         4 000142   200026 000011                    ADSC9   LINK_NAME,,AUTO          cn=0,n=9
         4 000143   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1409    15803           %SCREAM( ERR#=E$NOTLINK , LEVEL=ERROR, MID='R' );

  15815  4 000144   000007 630400 5                  EPPR0   7
         4 000145   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000146   000000 701000 xent               TSX1    ASH$ERROR
         4 000147   000000 011000                    NOP     0

     1410    15818    2      RETURN ;

  15818  4 000150   000000 702200 xent               TSX2  ! X66_ARET

     1411    15819    2      END ; /* Then do */
     1412    15820    1   DEV_START$ = PINCRW(ADDR(KL$DREC.LNK), SIZEW(KL$DREC.LNK) );

  15820  4 000151   000000 236000 xsym               LDQ     DSEG1$
         4 000152   000034 036003                    ADLQ    28,DU
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:256  
         4 000153   200015 756100                    STQ     DEV_START$,,AUTO

     1413    15821    1   DEV_SIZEW = KL$DREC.NWINFO - POFFW(DEV_START$,ADDR(KL$DREC.LNK));

  15821  4 000154   000000 236000 xsym               LDQ     DSEG1$
         4 000155   000020 036003                    ADLQ    16,DU
         4 000156   000022 772000                    QRL     18
         4 000157   200034 756100                    STQ     LINK_NAME+6,,AUTO
         4 000160   200015 236100                    LDQ     DEV_START$,,AUTO
         4 000161   000022 772000                    QRL     18
         4 000162   200034 136100                    SBLQ    LINK_NAME+6,,AUTO
         4 000163   200035 756100                    STQ     LINK_NAME+7,,AUTO
         4 000164   000017 236100                    LDQ     15,,PR0
         4 000165   200035 136100                    SBLQ    LINK_NAME+7,,AUTO
         4 000166   200013 756100                    STQ     DEV_SIZEW,,AUTO

     1414    15822    1   DEV_STOP$ = PINCRW( DEV_START$, DEV_SIZEW);

  15822  4 000167   000022 736000                    QLS     18
         4 000170   200015 036100                    ADLQ    DEV_START$,,AUTO
         4 000171   200016 756100                    STQ     DEV_STOP$,,AUTO

     1415    15823    1   DEV$ = DEV_START$;

  15823  4 000172   200015 236100                    LDQ     DEV_START$,,AUTO
         4 000173   200004 756100                    STQ     DEV$,,AUTO

     1416    15824    2   IF LINK THEN DO;

  15824  4 000174   200017 234100                    SZN     LINK,,AUTO
         4 000175   000272 605000 4                  TPL     s:15867

     1417    15825    2      VIRCIR_INDEX = 0;

  15825  4 000176   200014 450100                    STZ     VIRCIR_INDEX,,AUTO

     1418    15826    3      DO WHILE( VIRCIR_INDEX < KL$DREC.LNK.BLKHDR.NSUBS ) ;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:257  

  15826  4 000177   000020 236100                    LDQ     16,,PR0
         4 000200   000022 772000                    QRL     18
         4 000201   000777 376007                    ANQ     511,DL
         4 000202   200014 116100                    CMPQ    VIRCIR_INDEX,,AUTO
         4 000203   000237 602000 4                  TNC     s:15837
         4 000204   000237 600000 4                  TZE     s:15837

     1419    15827    4         IF KL$LNKVC.BLKHDR.BLKTYP = %KLTY_VIRCIR# THEN DO;

  15827  4 000205   200004 470500                    LDP0    DEV$,,AUTO
         4 000206   000001 236100                    LDQ     1,,PR0
         4 000207   777000 376003                    ANQ     -512,DU
         4 000210   010000 116003                    CMPQ    4096,DU
         4 000211   000220 601000 4                  TNZ     s:15832

     1420    15828    4            CALL REMOVE_VIRCIR;

  15828  4 000212   000534 701000 4                  TSX1    REMOVE_VIRCIR
         4 000213   000000 011000                    NOP     0

     1421    15829    4            DEV$ = PINCRW( DEV$, SIZEW(KL$LNKVC));

  15829  4 000214   200004 236100                    LDQ     DEV$,,AUTO
         4 000215   000014 036003                    ADLQ    12,DU
         4 000216   200004 756100                    STQ     DEV$,,AUTO

     1422    15830    4            END;  /*  Vircir  */

  15830  4 000217   000225 710000 4                  TRA     s:15835

     1423    15831    4         ELSE DO;

     1424    15832    4            CALL REMOVE_LINKDEV;

  15832  4 000220   000625 701000 4                  TSX1    REMOVE_LINKDEV
         4 000221   000000 011000                    NOP     0
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:258  

     1425    15833    4            DEV$ = PINCRW( DEV$, SIZEW(KL$LINKDEV));

  15833  4 000222   200004 236100                    LDQ     DEV$,,AUTO
         4 000223   000006 036003                    ADLQ    6,DU
         4 000224   200004 756100                    STQ     DEV$,,AUTO

     1426    15834    4            END; /*  Linkdev  */

     1427    15835    3         VIRCIR_INDEX = VIRCIR_INDEX + 1;

  15835  4 000225   200014 235100                    LDA     VIRCIR_INDEX,,AUTO
         4 000226   000001 035007                    ADLA    1,DL
         4 000227   200014 755100                    STA     VIRCIR_INDEX,,AUTO

     1428    15836    3         END;  /*  Do while VIRCIR_INDEX < KL$DREC.LNK.BLKHDR.NSUBS  */

  15836  4 000230   000000 470400 xsym               LDP0    DSEG1$
         4 000231   000020 236100                    LDQ     16,,PR0
         4 000232   000022 772000                    QRL     18
         4 000233   000777 376007                    ANQ     511,DL
         4 000234   200014 116100                    CMPQ    VIRCIR_INDEX,,AUTO
         4 000235   000237 600000 4                  TZE     s:15837
         4 000236   000205 603000 4                  TRC     s:15827

     1429    15837    2      CALL ASB$DELREC_HLP ALTRET(DEL_ERR);

  15837  4 000237   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000240   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000241   000527 702000 4                  TSX2    DEL_ERR

     1430    15838        /*E*  ERROR:  ASR-E$LINK_REMOVED-C
     1431    15839              MESSAGE:.. Link %U1 removed.
     1432    15840        */
     1433    15841    2      AS_FIELD1 = LINK_NAME;

  15841  4 000242   000000 100500                    MLR     fill='000'O
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:259  
         4 000243   200026 000011                    ADSC9   LINK_NAME,,AUTO          cn=0,n=9
         4 000244   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1434    15842           %SCREAM( ERR#=E$LINK_REMOVED, LEVEL=INFO, MID='R' );

  15850  4 000245   000010 630400 5                  EPPR0   8
         4 000246   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000247   000000 701000 xent               TSX1    ASH$INFO
         4 000250   000000 011000                    NOP     0

     1435    15857    2      KL_TERM_KEY.TERMID.TERM.TERM_NAME = LINK_NAME.TEXT;

  15857  4 000251   040000 100500                    MLR     fill='040'O
         4 000252   200026 200010                    ADSC9   LINK_NAME,,AUTO          cn=1,n=8
         4 000253   000005 400010 2                  ADSC9   KL_TERM_KEY+2            cn=2,n=8

     1436    15858    2      CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))

  15858  4 000254   000014 630400 5                  EPPR0   12
         4 000255   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000256   000000 701000 xent               TSX1    ASB$DELREC_NETCON
         4 000257   000261 702000 4                  TSX2    s:15860
         4 000260   000266 710000 4                  TRA     s:15865

     1437    15859    3      WHENALTRETURN DO;

     1438    15860    3         IF MERR_CODE.CODE ~= %E$NOKEY

  15860  4 000261   000000 236000 xsym               LDQ     ERR_CODE
         4 000262   377770 376007                    ANQ     131064,DL
         4 000263   001020 116007                    CMPQ    528,DL
         4 000264   000266 600000 4                  TZE     s:15865

     1439    15861    4         THEN DO;

     1440    15862    4            GOTO NETCON_ERR;

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:260  
  15862  4 000265   000516 710000 4                  TRA     NETCON_ERR

     1441    15863    4            END;
     1442    15864    3         END;
     1443    15865    2      CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);

  15865  4 000266   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000267   000000 701000 xent               TSX1    ASB$CLOSE_NETCON
         4 000270   000516 702000 4                  TSX2    NETCON_ERR

     1444    15866    2      END;

  15866  4 000271   000512 710000 4                  TRA     EXIT#

     1445    15867    2   ELSE IF VIRCIR THEN DO;

  15867  4 000272   200020 234100                    SZN     VIRCIR,,AUTO
         4 000273   000407 605000 4                  TPL     s:15930

     1446    15868                                                      /* Get virtual circuit number */
     1447    15869    2         BLK$ = P$NODE.SUBLK$(0);

  15869  4 000274   000000 471400 xsym               LDP1    NODE$
         4 000275   100003 236100                    LDQ     3,,PR1
         4 000276   200005 756100                    STQ     BLK$,,AUTO

     1448    15870    2         CALL CHARBIN( VIRCIR#, OUT$SYM.TEXT );

  15870  4 000277   200005 473500                    LDP3    BLK$,,AUTO
         4 000300   300004 236100                    LDQ     4,,PR3
         4 000301   000033 772000                    QRL     27
         4 000302   000000 620006                    EAX0    0,QL
         4 000303   000100 305540                    DTB
         4 000304   300004 230010                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X0
         4 000305   200034 000010                    NDSC9   LINK_NAME+6,,AUTO        cn=0,s=lsgnf,sf=0,n=8
         4 000306   200035 235100                    LDA     LINK_NAME+7,,AUTO
         4 000307   200012 755100                    STA     VIRCIR#,,AUTO
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:261  

     1449    15871    3         IF VIRCIR# > 4095 THEN DO;

  15871  4 000310   010000 115007                    CMPA    4096,DL
         4 000311   000317 602000 4                  TNC     s:15894

     1450    15872        /*E*  ERROR:  ASR-E$NOT_VIR_CIR-C
     1451    15873              MESSAGE: Illegal VIRTUAL CIRCUIT number.
     1452    15874              MESSAGE1: A VIRTUAL CIRCUIT number must be between 0 and 4095.
     1453    15875        */
     1454    15876                 %SCREAM( ERR#=E$NOT_VIR_CIR, LEVEL=ERROR, MID='R' );

  15888  4 000312   000015 630400 5                  EPPR0   13
         4 000313   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000314   000000 701000 xent               TSX1    ASH$ERROR
         4 000315   000000 011000                    NOP     0

     1455    15891    3            RETURN;

  15891  4 000316   000000 702200 xent               TSX2  ! X66_ARET

     1456    15892    3            END;
     1457    15893                                                    /* See if the virtual circuit exists.*/
     1458    15894    2         VIRCIR_EXISTS = AS_FALSE;

  15894  4 000317   000000 236000 xsym               LDQ     AS_FALSE
         4 000320   400000 376003                    ANQ     -131072,DU
         4 000321   200023 756100                    STQ     VIRCIR_EXISTS,,AUTO

     1459    15895    3         DO WHILE( DEV$ < DEV_STOP$ AND NOT VIRCIR_EXISTS );

  15895  4 000322   000347 710000 4                  TRA     s:15903

     1460    15896    3            IF KL$LNKVC.BLKHDR.BLKTYP = %KLTY_VIRCIR# THEN

  15896  4 000323   200004 470500                    LDP0    DEV$,,AUTO
         4 000324   000001 236100                    LDQ     1,,PR0
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:262  
         4 000325   777000 376003                    ANQ     -512,DU
         4 000326   010000 116003                    CMPQ    4096,DU
         4 000327   000344 601000 4                  TNZ     s:15902

     1461    15897    3               IF KL$LNKVC.VIRCIR# = VIRCIR# THEN

  15897  4 000330   000012 236100                    LDQ     10,,PR0
         4 000331   777777 376007                    ANQ     -1,DL
         4 000332   200012 116100                    CMPQ    VIRCIR#,,AUTO
         4 000333   000340 601000 4                  TNZ     s:15900

     1462    15898    3                  VIRCIR_EXISTS = AS_TRUE;

  15898  4 000334   000000 236000 xsym               LDQ     AS_TRUE
         4 000335   400000 376003                    ANQ     -131072,DU
         4 000336   200023 756100                    STQ     VIRCIR_EXISTS,,AUTO
         4 000337   000347 710000 4                  TRA     s:15903

     1463    15899    3               ELSE
     1464    15900    3                  DEV$ = PINCRW( DEV$, SIZEW(KL$LNKVC));

  15900  4 000340   200004 236100                    LDQ     DEV$,,AUTO
         4 000341   000014 036003                    ADLQ    12,DU
         4 000342   200004 756100                    STQ     DEV$,,AUTO
         4 000343   000347 710000 4                  TRA     s:15903

     1465    15901    3            ELSE
     1466    15902    3               DEV$ = PINCRW( DEV$, SIZEW(KL$LINKDEV));

  15902  4 000344   200004 236100                    LDQ     DEV$,,AUTO
         4 000345   000006 036003                    ADLQ    6,DU
         4 000346   200004 756100                    STQ     DEV$,,AUTO

     1467    15903    3            END;

  15903  4 000347   200004 236100                    LDQ     DEV$,,AUTO
         4 000350   200016 116100                    CMPQ    DEV_STOP$,,AUTO
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:263  
         4 000351   000354 603000 4                  TRC     s:15904
         4 000352   200023 234100                    SZN     VIRCIR_EXISTS,,AUTO
         4 000353   000323 605000 4                  TPL     s:15896

     1468    15904    3         IF NOT VIRCIR_EXISTS THEN DO;

  15904  4 000354   200023 234100                    SZN     VIRCIR_EXISTS,,AUTO
         4 000355   000374 604000 4                  TMI     s:15927

     1469    15905        /*E*  ERROR:  ASR-E$VIR_CIRNOEXIST-C
     1470    15906              MESSAGE: Virtual circuit %U1 does not exist.
     1471    15907        */
     1472    15908    3            AS_FIELD1.COUNT = OUT$SYM.COUNT;

  15908  4 000356   200005 470500                    LDP0    BLK$,,AUTO
         4 000357   000004 236100                    LDQ     4,,PR0
         4 000360   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1473    15909    3            AS_FIELD1.TEXT = OUT$SYM.TEXT;

  15909  4 000361   000004 236100                    LDQ     4,,PR0
         4 000362   000033 772000                    QRL     27
         4 000363   000000 620006                    EAX0    0,QL
         4 000364   040000 100540                    MLR     fill='040'O
         4 000365   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000366   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1474    15910                 %SCREAM( ERR#=E$VIR_CIRNOEXIST, LEVEL=WARN, MID='R' );

  15920  4 000367   000016 630400 5                  EPPR0   14
         4 000370   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000371   000000 701000 xent               TSX1    ASH$WARN
         4 000372   000000 011000                    NOP     0

     1475    15925    3            RETURN;

  15925  4 000373   000000 702200 xent               TSX2  ! X66_ARET
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:264  

     1476    15926    3            END;
     1477    15927    2         CALL REMOVE_VIRCIR;

  15927  4 000374   000534 701000 4                  TSX1    REMOVE_VIRCIR
         4 000375   000000 011000                    NOP     0

     1478    15928    2         CALL ASB$WRITE_HLP( DSEG1$, ARS ) ALTRET( WRITE_LINK_ERR );

  15928  4 000376   200006 630500                    EPPR0   ARS,,AUTO
         4 000377   200035 450500                    STP0    LINK_NAME+7,,AUTO
         4 000400   000002 236000 5                  LDQ     2
         4 000401   200034 756100                    STQ     LINK_NAME+6,,AUTO
         4 000402   200034 630500                    EPPR0   LINK_NAME+6,,AUTO
         4 000403   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000404   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000405   000527 702000 4                  TSX2    DEL_ERR

     1479    15929    2         END;

  15929  4 000406   000512 710000 4                  TRA     EXIT#

     1480    15930    2      ELSE IF LINKDEV THEN DO;

  15930  4 000407   200021 234100                    SZN     LINKDEV,,AUTO
         4 000410   000512 605000 4                  TPL     EXIT#

     1481    15931                                                      /* Get link device name */
     1482    15932    2            BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  15932  4 000411   000000 471400 xsym               LDP1    NODE$
         4 000412   100003 473500                    LDP3    3,,PR1
         4 000413   300003 236100                    LDQ     3,,PR3
         4 000414   200005 756100                    STQ     BLK$,,AUTO

     1483    15933                                                      /* See if the link device exists.*/
     1484    15934    2            LINKDEV_EXISTS = AS_FALSE;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:265  

  15934  4 000415   000000 236000 xsym               LDQ     AS_FALSE
         4 000416   400000 376003                    ANQ     -131072,DU
         4 000417   200022 756100                    STQ     LINKDEV_EXISTS,,AUTO

     1485    15935    3            DO WHILE( DEV$ < DEV_STOP$ AND NOT LINKDEV_EXISTS );

  15935  4 000420   000453 710000 4                  TRA     s:15943

     1486    15936    3               IF KL$LINKDEV.BLKHDR.BLKTYP = %KLTY_LINKDEV# THEN

  15936  4 000421   200004 470500                    LDP0    DEV$,,AUTO
         4 000422   000100 101500                    MRL     fill='000'O
         4 000423   000001 000001                    ADSC9   1,,PR0                   cn=0,n=1
         4 000424   200034 000004                    ADSC9   LINK_NAME+6,,AUTO        cn=0,n=4
         4 000425   200034 236100                    LDQ     LINK_NAME+6,,AUTO
         4 000426   000013 116007                    CMPQ    11,DL
         4 000427   000450 601000 4                  TNZ     s:15942

     1487    15937    3                  IF KL$LINKDEV.LOGON# = OUT$SYM.TEXT THEN

  15937  4 000430   200005 471500                    LDP1    BLK$,,AUTO
         4 000431   100004 236100                    LDQ     4,,PR1
         4 000432   000033 772000                    QRL     27
         4 000433   000000 620006                    EAX0    0,QL
         4 000434   040140 106500                    CMPC    fill='040'O
         4 000435   000004 000010                    ADSC9   4,,PR0                   cn=0,n=8
         4 000436   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000437   000444 601000 4                  TNZ     s:15940

     1488    15938    3                     LINKDEV_EXISTS = AS_TRUE;

  15938  4 000440   000000 236000 xsym               LDQ     AS_TRUE
         4 000441   400000 376003                    ANQ     -131072,DU
         4 000442   200022 756100                    STQ     LINKDEV_EXISTS,,AUTO
         4 000443   000453 710000 4                  TRA     s:15943

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:266  
     1489    15939    3                  ELSE
     1490    15940    3                     DEV$ = PINCRW( DEV$, SIZEW(KL$LINKDEV));

  15940  4 000444   200004 236100                    LDQ     DEV$,,AUTO
         4 000445   000006 036003                    ADLQ    6,DU
         4 000446   200004 756100                    STQ     DEV$,,AUTO
         4 000447   000453 710000 4                  TRA     s:15943

     1491    15941    3               ELSE
     1492    15942    3                  DEV$ = PINCRW( DEV$, SIZEW(KL$LNKVC));

  15942  4 000450   200004 236100                    LDQ     DEV$,,AUTO
         4 000451   000014 036003                    ADLQ    12,DU
         4 000452   200004 756100                    STQ     DEV$,,AUTO

     1493    15943    3               END;

  15943  4 000453   200004 236100                    LDQ     DEV$,,AUTO
         4 000454   200016 116100                    CMPQ    DEV_STOP$,,AUTO
         4 000455   000460 603000 4                  TRC     s:15944
         4 000456   200022 234100                    SZN     LINKDEV_EXISTS,,AUTO
         4 000457   000421 605000 4                  TPL     s:15936

     1494    15944    3            IF NOT LINKDEV_EXISTS THEN DO;

  15944  4 000460   200022 234100                    SZN     LINKDEV_EXISTS,,AUTO
         4 000461   000500 604000 4                  TMI     s:15967

     1495    15945        /*E*  ERROR:  ASR-E$LINKDEV_NOEXIST-C
     1496    15946              MESSAGE: Link device %U1 does not exist.
     1497    15947        */
     1498    15948    3               AS_FIELD1.COUNT = OUT$SYM.COUNT;

  15948  4 000462   200005 470500                    LDP0    BLK$,,AUTO
         4 000463   000004 236100                    LDQ     4,,PR0
         4 000464   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:267  
     1499    15949    3               AS_FIELD1.TEXT = OUT$SYM.TEXT;

  15949  4 000465   000004 236100                    LDQ     4,,PR0
         4 000466   000033 772000                    QRL     27
         4 000467   000000 620006                    EAX0    0,QL
         4 000470   040000 100540                    MLR     fill='040'O
         4 000471   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000472   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1500    15950                    %SCREAM( ERR#=E$LINKDEV_NOEXIST, LEVEL=WARN, MID='R' );

  15960  4 000473   000017 630400 5                  EPPR0   15
         4 000474   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000475   000000 701000 xent               TSX1    ASH$WARN
         4 000476   000000 011000                    NOP     0

     1501    15965    3               RETURN;

  15965  4 000477   000000 702200 xent               TSX2  ! X66_ARET

     1502    15966    3               END;
     1503    15967    2            CALL REMOVE_LINKDEV;

  15967  4 000500   000625 701000 4                  TSX1    REMOVE_LINKDEV
         4 000501   000000 011000                    NOP     0

     1504    15968    2            CALL ASB$WRITE_HLP( DSEG1$, ARS ) ALTRET( WRITE_LINK_ERR );

  15968  4 000502   200006 630500                    EPPR0   ARS,,AUTO
         4 000503   200035 450500                    STP0    LINK_NAME+7,,AUTO
         4 000504   000002 236000 5                  LDQ     2
         4 000505   200034 756100                    STQ     LINK_NAME+6,,AUTO
         4 000506   200034 630500                    EPPR0   LINK_NAME+6,,AUTO
         4 000507   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000510   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000511   000527 702000 4                  TSX2    DEL_ERR

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:268  
     1505    15969    2            END;

     1506    15970    1   EXIT#:
     1507    15971    1   CALL ASB$DEQ_HLP ALTRET( DEQ_ERR ) ;

  15971  4 000512   000002 631400 xsym  EXIT#        EPPR1   B_VECTNIL+2
         4 000513   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000514   000533 702000 4                  TSX2    ENQ_ERR

     1508    15972                                                              /* All done */
     1509    15973    1   RETURN ;

  15973  4 000515   000000 702200 xent               TSX2  ! X66_ARET

  15960  4 000516                       NETCON_ERR   null
     1510    15974                                                              /*  Errors  */
     1511    15975    1   NETCON_ERR:;
     1512    15976    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

  15976  4 000516   000000 470400 xsym               LDP0    B$TCB$
         4 000517   000000 471500                    LDP1    0,,PR0
         4 000520   100102 236100                    LDQ     66,,PR1
         4 000521   000000 756000 xsym               STQ     ERR_CODE

     1513    15977    1   CALL ASH$ERROR(ERR_CODE);

  15977  4 000522   000020 630400 5                  EPPR0   16
         4 000523   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000524   000000 701000 xent               TSX1    ASH$ERROR
         4 000525   000000 011000                    NOP     0

     1514    15978    1   RETURN;

  15978  4 000526   000000 702200 xent               TSX2  ! X66_ARET

  15976  4 000527                       DEL_ERR      null
  15976  4 000527                       WRITE_LINK_* null
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:269  
     1515    15979
     1516    15980    1   DEL_ERR: ;
     1517    15981    1   WRITE_LINK_ERR: ;
     1518    15982    1   CALL ASH$ERROR( ERR_CODE );

  15982  4 000527   000020 630400 5                  EPPR0   16
         4 000530   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000531   000000 701000 xent               TSX1    ASH$ERROR
         4 000532   000000 011000                    NOP     0

  15976  4 000533                       ENQ_ERR      null
  15976  4 000533                       DEQ_ERR      null
     1519    15983    1   ENQ_ERR: ;
     1520    15984    1   DEQ_ERR: ;
     1521    15985    1   RETURN;

  15985  4 000533   000000 702200 xent               TSX2  ! X66_ARET

     1522    15986
     1523    15987        %EJECT;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:270  
     1524    15988    1   REMOVE_VIRCIR: PROC;

  15988  4 000534   200032 741300       REMOVE_VIRC* STX1  ! LINK_NAME+4,,AUTO

     1525    15989
     1526    15990
     1527    15991        /*E*  ERROR:  ASR-E$VIR_CIR_REMOVED-C
     1528    15992              MESSAGE:.... Virtual circuit %U1 for link %U2 removed.
     1529    15993        */
     1530    15994    2   VIRCIR# = KL$LNKVC.VIRCIR#;

  15994  4 000535   200004 470500                    LDP0    DEV$,,AUTO
         4 000536   000012 236100                    LDQ     10,,PR0
         4 000537   777777 376007                    ANQ     -1,DL
         4 000540   200012 756100                    STQ     VIRCIR#,,AUTO

     1531    15995        %NUMBER( NUM1=VIRCIR# );
             16003    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, VIRCIR# );

  16003  4 000541   200012 631500                    EPPR1   VIRCIR#,,AUTO
         4 000542   200037 451500                    STP1    LINK_NAME+9,,AUTO
         4 000543   000021 236000 5                  LDQ     17
         4 000544   200036 756100                    STQ     LINK_NAME+8,,AUTO
         4 000545   000022 237000 5                  LDAQ    18
         4 000546   200034 757100                    STAQ    LINK_NAME+6,,AUTO
         4 000547   200034 630500                    EPPR0   LINK_NAME+6,,AUTO
         4 000550   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000551   000000 701000 xent               TSX1    ASB$BINCHAR
         4 000552   000000 011000                    NOP     0

     1532    16025    2   AS_FIELD2 = LINK_NAME;

  16025  4 000553   000000 100500                    MLR     fill='000'O
         4 000554   200026 000011                    ADSC9   LINK_NAME,,AUTO          cn=0,n=9
         4 000555   000000 000051 xsym               ADSC9   AS_FIELD2                cn=0,n=41

     1533    16026
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:271  
     1534    16027
     1535    16028    3   IF NOT LINK THEN DO;

  16028  4 000556   200017 234100                    SZN     LINK,,AUTO
         4 000557   000617 604000 4                  TMI     s:16045

     1536    16029    3      PTR$ = PINCRW(DEV$, SIZEW(KL$LNKVC));

  16029  4 000560   200004 236100                    LDQ     DEV$,,AUTO
         4 000561   000014 036003                    ADLQ    12,DU
         4 000562   200003 756100                    STQ     PTR$,,AUTO

     1537    16030    3      MOVE_SIZE = POFFW(DEV_STOP$, PTR$)*4;

  16030  4 000563   200003 235100                    LDA     PTR$,,AUTO
         4 000564   000022 771000                    ARL     18
         4 000565   200034 755100                    STA     LINK_NAME+6,,AUTO
         4 000566   200016 236100                    LDQ     DEV_STOP$,,AUTO
         4 000567   000022 772000                    QRL     18
         4 000570   200034 136100                    SBLQ    LINK_NAME+6,,AUTO
         4 000571   000002 736000                    QLS     2
         4 000572   200011 756100                    STQ     MOVE_SIZE,,AUTO

     1538    16031    3      KL$DREC.NWINFO = KL$DREC.NWINFO - SIZEW(KL$LNKVC);

  16031  4 000573   000000 470400 xsym               LDP0    DSEG1$
         4 000574   000017 235100                    LDA     15,,PR0
         4 000575   000014 135007                    SBLA    12,DL
         4 000576   000017 755100                    STA     15,,PR0

     1539    16032    3      KL$DREC.LNK.BLKHDR.NSUBS = KL$DREC.LNK.BLKHDR.NSUBS - 1;

  16032  4 000577   000020 236100                    LDQ     16,,PR0
         4 000600   000777 036003                    ADLQ    511,DU
         4 000601   000020 552120                    STBQ    16,'20'O,PR0

     1540    16033    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO*4;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:272  

  16033  4 000602   000017 235100                    LDA     15,,PR0
         4 000603   000002 735000                    ALS     2
         4 000604   000100 035007                    ADLA    64,DL
         4 000605   200006 755100                    STA     ARS,,AUTO

     1541    16034    3      IF MOVE_SIZE > 0 THEN

  16034  4 000606   200011 236100                    LDQ     MOVE_SIZE,,AUTO
         4 000607   000617 600000 4                  TZE     s:16045

     1542    16035    3         DEV$->MOVE$TEMP = PTR$->MOVE$TEMP;

  16035  4 000610   200003 471500                    LDP1    PTR$,,AUTO
         4 000611   000000 620006                    EAX0    0,QL
         4 000612   200004 473500                    LDP3    DEV$,,AUTO
         4 000613   200011 721100                    LXL1    MOVE_SIZE,,AUTO
         4 000614   040140 100540                    MLR     fill='040'O
         4 000615   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 000616   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     1543    16036    3      END;

     1544    16037        %SCREAM( ERR#=E$VIR_CIR_REMOVED, LEVEL=INFO, MID='R' );

  16045  4 000617   000024 630400 5                  EPPR0   20
         4 000620   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000621   000000 701000 xent               TSX1    ASH$INFO
         4 000622   000000 011000                    NOP     0

     1545    16052    2   END REMOVE_VIRCIR;

  16052  4 000623   200032 221300                    LDX1  ! LINK_NAME+4,,AUTO
         4 000624   000001 702211                    TSX2  ! 1,X1

     1546    16053
     1547    16054        %EJECT;
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:273  
     1548    16055    1   REMOVE_LINKDEV: PROC;

  16055  4 000625   200032 741300       REMOVE_LINK* STX1  ! LINK_NAME+4,,AUTO

     1549    16056
     1550    16057
     1551    16058        /*E*  ERROR:  ASR-E$LINKDEV_REMOVED-C
     1552    16059              MESSAGE:.... Link device %U1 for link %U2 removed.
     1553    16060        */
     1554    16061    2   AS_FIELD1.COUNT = SIZEC(KL$LINKDEV.LOGON#);

  16061  4 000626   010000 236003                    LDQ     4096,DU
         4 000627   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1555    16062    2   AS_FIELD1.TEXT = KL$LINKDEV.LOGON#;

  16062  4 000630   200004 470500                    LDP0    DEV$,,AUTO
         4 000631   040000 100500                    MLR     fill='040'O
         4 000632   000004 000010                    ADSC9   4,,PR0                   cn=0,n=8
         4 000633   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1556    16063    2   AS_FIELD2 = LINK_NAME;

  16063  4 000634   000000 100500                    MLR     fill='000'O
         4 000635   200026 000011                    ADSC9   LINK_NAME,,AUTO          cn=0,n=9
         4 000636   000000 000051 xsym               ADSC9   AS_FIELD2                cn=0,n=41

     1557    16064
     1558    16065
     1559    16066    3   IF NOT LINK THEN DO;

  16066  4 000637   200017 234100                    SZN     LINK,,AUTO
         4 000640   000677 604000 4                  TMI     s:16083

     1560    16067    3      PTR$ = PINCRW(DEV$, SIZEW(KL$LINKDEV));

  16067  4 000641   200004 236100                    LDQ     DEV$,,AUTO
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:274  
         4 000642   000006 036003                    ADLQ    6,DU
         4 000643   200003 756100                    STQ     PTR$,,AUTO

     1561    16068    3      MOVE_SIZE = POFFW(DEV_STOP$, PTR$)*4;

  16068  4 000644   200003 235100                    LDA     PTR$,,AUTO
         4 000645   000022 771000                    ARL     18
         4 000646   200034 755100                    STA     LINK_NAME+6,,AUTO
         4 000647   200016 236100                    LDQ     DEV_STOP$,,AUTO
         4 000650   000022 772000                    QRL     18
         4 000651   200034 136100                    SBLQ    LINK_NAME+6,,AUTO
         4 000652   000002 736000                    QLS     2
         4 000653   200011 756100                    STQ     MOVE_SIZE,,AUTO

     1562    16069    3      KL$DREC.NWINFO = KL$DREC.NWINFO - SIZEW(KL$LINKDEV);

  16069  4 000654   000000 471400 xsym               LDP1    DSEG1$
         4 000655   100017 235100                    LDA     15,,PR1
         4 000656   000006 135007                    SBLA    6,DL
         4 000657   100017 755100                    STA     15,,PR1

     1563    16070    3      KL$DREC.LNK.BLKHDR.NSUBS = KL$DREC.LNK.BLKHDR.NSUBS - 1;

  16070  4 000660   100020 236100                    LDQ     16,,PR1
         4 000661   000777 036003                    ADLQ    511,DU
         4 000662   100020 552120                    STBQ    16,'20'O,PR1

     1564    16071    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO*4;

  16071  4 000663   100017 235100                    LDA     15,,PR1
         4 000664   000002 735000                    ALS     2
         4 000665   000100 035007                    ADLA    64,DL
         4 000666   200006 755100                    STA     ARS,,AUTO

     1565    16072    3      IF MOVE_SIZE > 0 THEN

  16072  4 000667   200011 236100                    LDQ     MOVE_SIZE,,AUTO
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:275  
         4 000670   000677 600000 4                  TZE     s:16083

     1566    16073    3         DEV$->MOVE$TEMP = PTR$->MOVE$TEMP;

  16073  4 000671   200003 473500                    LDP3    PTR$,,AUTO
         4 000672   000000 620006                    EAX0    0,QL
         4 000673   200011 721100                    LXL1    MOVE_SIZE,,AUTO
         4 000674   040140 100540                    MLR     fill='040'O
         4 000675   300000 000010                    ADSC9   0,,PR3                   cn=0,n=*X0
         4 000676   000000 000011                    ADSC9   0,,PR0                   cn=0,n=*X1

     1567    16074    3      END;

     1568    16075        %SCREAM( ERR#=E$LINKDEV_REMOVED, LEVEL=INFO, MID='R' );

  16083  4 000677   000025 630400 5                  EPPR0   21
         4 000700   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000701   000000 701000 xent               TSX1    ASH$INFO
         4 000702   000000 011000                    NOP     0

     1569    16090    2   END REMOVE_LINKDEV;

  16090  4 000703   200032 221300                    LDX1  ! LINK_NAME+4,,AUTO
         4 000704   000001 702211                    TSX2  ! 1,X1
     1570    16091
     1571    16092    1   END ASR$R_LINK_VIRCIR;
     1572    16093        %EOD ;

PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:276  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_LINK_VIRCIR.
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:277  

 **** Variables and constants ****

  ****  Section 002  Data  ASR$R_LINK_VIRCIR

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(162)   r     1 KL_TERM_KEY                0-0-0/w STRC(90)    r     1 LINK_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w UBIN        r     1 ARS                        5-0-0/w PTR         r     1 BLK$
     4-0-0/w PTR         r     1 DEV$                      13-0-0/w UBIN        r     1 DEV_SIZEW
    15-0-0/w PTR         r     1 DEV_START$                16-0-0/w PTR         r     1 DEV_STOP$
    17-0-0/b BIT         r     1 LINK                      21-0-0/b BIT         r     1 LINKDEV
    22-0-0/b BIT         r     1 LINKDEV_EXISTS            26-0-0/c STRC(81)    r     1 LINK_NAME
    11-0-0/w UBIN        r     1 MOVE_SIZE                  3-0-0/w PTR         r     1 PTR$
    20-0-0/b BIT         r     1 VIRCIR                    12-0-0/w UBIN        r     1 VIRCIR#
    23-0-0/b BIT         r     1 VIRCIR_EXISTS             14-0-0/w UBIN        r     1 VIRCIR_INDEX

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 AS_FALSE                   0-0-0/w STRC(369)   r     1 AS_FIELD1
     0-0-0/w STRC(369)   r     1 AS_FIELD2                  0-0-0/b BIT         r     1 AS_TRUE
     0-0-0/w PTR         r     1 B$TCB$                     0-0-0/w PTR         r     1 DSEG1$
     0-0-0/w UBIN        r     1 DSEG1SIZE                  0-0-0/b BIT         r     1 DSEG_FLG
     0-0-0/b STRC        r     1 ERR_CODE                   0-0-0/w STRC(576)   r     1 KL_DREC_CNT
     0-0-0/b STRC        r     1 MERR_CODE                  0-0-0/w PTR         r     1 NODE$
     0-0-0/c STRC(378)   r     1 USERS_KEY

  ****  BASED and DCB variables  ****
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:278  

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/w STRC(1008)  r     1 KL$DREC                    0-0-0/c STRC(216)   r     1 KL$LINKDEV
     0-0-0/w STRC(432)   r     1 KL$LNKVC                   0-0-0/c ACHR        r     1 MOVE$TEMP
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASR$R_LINK_VIRCIR requires 453 words for executable code.
   Procedure ASR$R_LINK_VIRCIR requires 32 words of local(AUTO) storage.
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:279  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:280  
          MINI XREF LISTING

ARS
     14762**DCL     15769<<ASSIGN  15770<>CALL    15928<>CALL    15968<>CALL    16033<<ASSIGN  16071<<ASSIGN
ASA$ERROR
     14873**DCL-ENT 15794--CALL
ASA_BRKS_LOC
     11901**DCL     11901--REDEF
ASB$BINCHAR
      5565**DCL-ENT 16003--CALL
ASB$CLOSE_NETCON
     14879**DCL-ENT 15865--CALL
ASB$DELREC_HLP
     14843**DCL-ENT 15837--CALL
ASB$DELREC_NETCON
     14876**DCL-ENT 15858--CALL
ASB$DEQ_HLP
     14855**DCL-ENT 15971--CALL
ASB$ENQ_HLP
     14852**DCL-ENT 15766--CALL
ASB$GETSEG
     14846**DCL-ENT 15738--CALL
ASB$READ_HLP
     14867**DCL-ENT 15770--CALL
ASB$WRITE_HLP
     14870**DCL-ENT 15928--CALL    15968--CALL
ASH$ERROR
     14858**DCL-ENT 15752--CALL    15815--CALL    15888--CALL    15977--CALL    15982--CALL
ASH$INFO
     14864**DCL-ENT 15850--CALL    16045--CALL    16083--CALL
ASH$WARN
     14861**DCL-ENT 15787--CALL    15920--CALL    15960--CALL
AS_DEFAULT.BANNER_PERM
     12594**DCL     12595--REDEF
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:281  
AS_DEFAULT.BUDGET.MACCT
     12499**DCL     12503--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     12512**DCL     12515--REDEF
AS_DEFAULT.BUDGET.PACCUM
     12495**DCL     12497--REDEF
AS_DEFAULT.BUDGET.PMAXC
     12490**DCL     12492--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     12610**DCL     12611--REDEF   12612--REDEF
AS_DEFAULT_DREC.PASSWORD
     13864**DCL     13868--REDEF
AS_DEFAULT_DREC.RENAME
     13887**DCL     13888--REDEF
AS_DFLT.BANNER_PERM
     12416**DCL     12417--REDEF
AS_DFLT.BUDGET.MACCT
     12321**DCL     12325--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     12334**DCL     12337--REDEF
AS_DFLT.BUDGET.PACCUM
     12317**DCL     12319--REDEF
AS_DFLT.BUDGET.PMAXC
     12312**DCL     12314--REDEF
AS_DFLT.SETUP_CHRA.TXT
     12432**DCL     12433--REDEF   12434--REDEF
AS_FALSE
     11761**DCL     15894>>ASSIGN  15934>>ASSIGN
AS_FE_MODE
     11767**DCL     11768--REDEF
AS_FIELD1
     11897**DCL     15776<<ASSIGN  15802<<ASSIGN  15841<<ASSIGN
AS_FIELD1.COUNT
     11898**DCL     15908<<ASSIGN  15948<<ASSIGN  16061<<ASSIGN
AS_FIELD1.TEXT
     11898**DCL     15909<<ASSIGN  15949<<ASSIGN  16003<>CALL    16062<<ASSIGN
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:282  
AS_FIELD2
     11898**DCL     16025<<ASSIGN  16063<<ASSIGN
AS_MODE
     11764**DCL     11766--REDEF
AS_MOD_USER.ACCESS
     14629**DCL     14630--REDEF
AS_MOD_USER.BANNER
     14616**DCL     14617--REDEF
AS_MOD_USER.BANNER_PERM
     14618**DCL     14619--REDEF
AS_MOD_USER.BILL
     14624**DCL     14625--REDEF
AS_MOD_USER.CPROC
     14620**DCL     14621--REDEF
AS_MOD_USER.FEBILL
     14700**DCL     14701--REDEF
AS_MOD_USER.FECXTMEM
     14717**DCL     14718--REDEF
AS_MOD_USER.FEMINTS
     14702**DCL     14703--REDEF
AS_MOD_USER.FEMMEM
     14713**DCL     14714--REDEF
AS_MOD_USER.FEMTIME
     14711**DCL     14712--REDEF
AS_MOD_USER.FEPPRIV
     14708**DCL     14710--REDEF
AS_MOD_USER.FEPRIV
     14705**DCL     14707--REDEF
AS_MOD_USER.FORCE_BIT
     14614**DCL     14615--REDEF
AS_MOD_USER.KEY
     14696**DCL     14698--REDEF
AS_MOD_USER.LASTCPROC
     14622**DCL     14623--REDEF
AS_MOD_USER.LIMITS.DO_
     14670**DCL     14671--REDEF
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:283  
AS_MOD_USER.LIMITS.FPOOLS
     14686**DCL     14687--REDEF
AS_MOD_USER.LIMITS.LO
     14666**DCL     14667--REDEF
AS_MOD_USER.LIMITS.MEM
     14662**DCL     14663--REDEF
AS_MOD_USER.LIMITS.MPRIO
     14690**DCL     14691--REDEF
AS_MOD_USER.LIMITS.PDIS
     14678**DCL     14679--REDEF
AS_MOD_USER.LIMITS.PO
     14674**DCL     14675--REDEF
AS_MOD_USER.LIMITS.TDIS
     14682**DCL     14683--REDEF
AS_MOD_USER.LIMITS.TIME
     14658**DCL     14659--REDEF
AS_MOD_USER.MAXENQ
     14639**DCL     14640--REDEF
AS_MOD_USER.PERM_BIT
     14612**DCL     14613--REDEF
AS_MOD_USER.PPRIV
     14634**DCL     14636--REDEF
AS_MOD_USER.PRIOB
     14641**DCL     14642--REDEF
AS_MOD_USER.PRIV
     14631**DCL     14633--REDEF
AS_MOD_USER.QUAN
     14637**DCL     14638--REDEF
AS_MOD_USER.SETUP
     14610**DCL     14611--REDEF
AS_PROJECT.BANNER_PERM
     12950**DCL     12951--REDEF
AS_PROJECT.BUDGET.MACCT
     12855**DCL     12859--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12868**DCL     12871--REDEF
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:284  
AS_PROJECT.BUDGET.PACCUM
     12851**DCL     12853--REDEF
AS_PROJECT.BUDGET.PMAXC
     12846**DCL     12848--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12966**DCL     12967--REDEF   12968--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     13128**DCL     13129--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     13033**DCL     13037--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     13046**DCL     13049--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     13029**DCL     13031--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     13024**DCL     13026--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     13144**DCL     13145--REDEF   13146--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     14350**DCL     14354--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     14373**DCL     14374--REDEF
AS_PROJECT_DREC.PASSWORD
     14188**DCL     14192--REDEF
AS_PROJECT_DREC.RENAME
     14211**DCL     14212--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12772**DCL     12773--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
     12677**DCL     12681--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     12690**DCL     12693--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     12673**DCL     12675--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     12668**DCL     12670--REDEF
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:285  
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12788**DCL     12789--REDEF   12790--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     14026**DCL     14030--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     14049**DCL     14050--REDEF
AS_TRUE
     11761**DCL     15898>>ASSIGN  15938>>ASSIGN
AS_USERS.BANNER_PERM
     12238**DCL     12239--REDEF
AS_USERS.BUDGET.MACCT
     12143**DCL     12147--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     12156**DCL     12159--REDEF
AS_USERS.BUDGET.PACCUM
     12139**DCL     12141--REDEF
AS_USERS.BUDGET.PMAXC
     12134**DCL     12136--REDEF
AS_USERS.SETUP_CHRA.TXT
     12254**DCL     12255--REDEF   12256--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     13306**DCL     13307--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     13211**DCL     13215--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     13224**DCL     13227--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     13207**DCL     13209--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
     13202**DCL     13204--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     13322**DCL     13323--REDEF   13324--REDEF
B$ALT.CODE
     15720**DCL     15720--REDEF   15721--REDEF   15721--REDEF
B$ALT.ERR
     15721**DCL     15976>>ASSIGN
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:286  
B$ALT.ERR.ERR#
     15722**DCL     15722--REDEF
B$ALT.EVID
     15721**DCL     15721--REDEF   15721--REDEF
B$TCB.ALT$
     15716**DCL     15976>>ASSIGN
B$TCB$
     15714**DCL     15976>>ASSIGN
BLK$
     14761**DCL     14940--IMP-PTR 15759<<ASSIGN  15761<<ASSIGN  15762>>ASSIGN  15763>>ASSIGN  15763>>ASSIGN
     15764>>ASSIGN  15764>>ASSIGN  15869<<ASSIGN  15870>>CALLBLT 15870>>CALLBLT 15908>>ASSIGN  15909>>ASSIGN
     15909>>ASSIGN  15932<<ASSIGN  15937>>IF      15937>>IF      15948>>ASSIGN  15949>>ASSIGN  15949>>ASSIGN
DEL_ERR
     15976**LABEL   15837--CALLALT
DEQ_ERR
     15976**LABEL   15971--CALLALT
DEV$
     14760**DCL     15330--IMP-PTR 15558--IMP-PTR 15823<<ASSIGN  15827>>IF      15829<<ASSIGN  15829>>ASSIGN
     15833<<ASSIGN  15833>>ASSIGN  15895>>DOWHILE 15896>>IF      15897>>IF      15900<<ASSIGN  15900>>ASSIGN
     15902<<ASSIGN  15902>>ASSIGN  15935>>DOWHILE 15936>>IF      15937>>IF      15940<<ASSIGN  15940>>ASSIGN
     15942<<ASSIGN  15942>>ASSIGN  15994>>ASSIGN  16029>>ASSIGN  16035>>ASSIGN  16062>>ASSIGN  16067>>ASSIGN
     16073>>ASSIGN
DEV_SIZEW
     14767**DCL     15821<<ASSIGN  15822>>ASSIGN
DEV_START$
     14769**DCL     15820<<ASSIGN  15821>>ASSIGN  15822>>ASSIGN  15823>>ASSIGN
DEV_STOP$
     14770**DCL     15822<<ASSIGN  15895>>DOWHILE 15935>>DOWHILE 16030>>ASSIGN  16068>>ASSIGN
DSEG1$
     11902**DCL     14986--IMP-PTR 15770<>CALL    15798>>IF      15820>>ASSIGN  15821>>ASSIGN  15821>>ASSIGN
     15826>>DOWHILE 15928<>CALL    15968<>CALL    16031>>ASSIGN  16031>>ASSIGN  16032>>ASSIGN  16032>>ASSIGN
     16033>>ASSIGN  16069>>ASSIGN  16069>>ASSIGN  16070>>ASSIGN  16070>>ASSIGN  16071>>ASSIGN
DSEG1SIZE
     11903**DCL     15769>>ASSIGN
DSEG_FLG
     11902**DCL     15737>>IF
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:287  
ENQ_ERR
     15976**LABEL   15766--CALLALT
ERR_CODE
     11896**DCL     11897--REDEF   15976<<ASSIGN  15977<>CALL    15982<>CALL
KL$DREC.ATYP
     14991**DCL     15798>>IF
KL$DREC.LNK
     15108**DCL     15820--ASSIGN  15820--ASSIGN  15821--ASSIGN
KL$DREC.LNK.BLKHDR.NSUBS
     15139**DCL     15826>>DOWHILE 16032<<ASSIGN  16032>>ASSIGN  16070<<ASSIGN  16070>>ASSIGN
KL$DREC.NWINFO
     15084**DCL     15821>>ASSIGN  16031<<ASSIGN  16031>>ASSIGN  16033>>ASSIGN  16069<<ASSIGN  16069>>ASSIGN
     16071>>ASSIGN
KL$DREC.PASSWORD
     15044**DCL     15048--REDEF
KL$DREC.RENAME
     15067**DCL     15068--REDEF
KL$LINKDEV
     15558**DCL     15833--ASSIGN  15902--ASSIGN  15940--ASSIGN  16067--ASSIGN  16069--ASSIGN
KL$LINKDEV.BLKHDR.BLKTYP
     15620**DCL     15936>>IF
KL$LINKDEV.LOGON#
     15710**DCL     15937>>IF      16061--ASSIGN  16062>>ASSIGN
KL$LNKVC
     15330**DCL     15829--ASSIGN  15900--ASSIGN  15942--ASSIGN  16029--ASSIGN  16031--ASSIGN
KL$LNKVC.BLKHDR.BLKTYP
     15376**DCL     15827>>IF      15896>>IF
KL$LNKVC.CUG
     15429**DCL     15473--REDEF
KL$LNKVC.VIRCIR#
     15521**DCL     15897>>IF      15994>>ASSIGN
KL_DEFAULT.PASSWORD
     14512**DCL     14516--REDEF
KL_DEFAULT.RENAME
     14535**DCL     14536--REDEF
KL_DFLT.PASSWORD
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:288  
     13702**DCL     13706--REDEF
KL_DFLT.RENAME
     13725**DCL     13726--REDEF
KL_DREC.PASSWORD
     13540**DCL     13544--REDEF
KL_DREC.RENAME
     13563**DCL     13564--REDEF
KL_DREC_CNT
     13369**DCL     16033--ASSIGN  16071--ASSIGN
KL_DREC_CNT.PASSWORD
     13427**DCL     13431--REDEF
KL_DREC_CNT.RENAME
     13450**DCL     13451--REDEF
KL_TERM_KEY
     14804**DCL     15858--CALL
KL_TERM_KEY.TERMID.TERM
     14825**DCL     14834--REDEF
KL_TERM_KEY.TERMID.TERM.TERM_NAME
     14834**DCL     15857<<ASSIGN
LINK
     14771**DCL     15733<<ASSIGN  15758>>IF      15824>>IF      16028>>IF      16066>>IF
LINKDEV
     14773**DCL     15735<<ASSIGN  15930>>IF
LINKDEV_EXISTS
     14774**DCL     15934<<ASSIGN  15935>>DOWHILE 15938<<ASSIGN  15944>>IF
LINK_KEY
     14786**DCL     15765>>ASSIGN
LINK_KEY.TXT.LINK
     14789**DCL     15764<<ASSIGN
LINK_NAME
     14778**DCL     15776>>ASSIGN  15802>>ASSIGN  15841>>ASSIGN  16025>>ASSIGN  16063>>ASSIGN
LINK_NAME.COUNT
     14779**DCL     15762<<ASSIGN
LINK_NAME.TEXT
     14780**DCL     15763<<ASSIGN  15857>>ASSIGN
MERR_CODE.CODE
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:289  
     11897**DCL     15772>>IF      15860>>IF
MOVE$TEMP
     15712**DCL     16035<<ASSIGN  16035>>ASSIGN  16073<<ASSIGN  16073>>ASSIGN
MOVE_SIZE
     14765**DCL     15712--IMP-SIZ 16030<<ASSIGN  16034>>IF      16035>>ASSIGN  16035>>ASSIGN  16068<<ASSIGN
     16072>>IF      16073>>ASSIGN  16073>>ASSIGN
NETCON_ERR
     15960**LABEL   15862--GOTO    15865--CALLALT
NODE$
     11894**DCL     14893--IMP-PTR 15733>>ASSIGN  15734>>ASSIGN  15735>>ASSIGN  15759>>ASSIGN  15761>>ASSIGN
     15869>>ASSIGN  15932>>ASSIGN
OUT$SYM.COUNT
     14963**DCL     14966--IMP-SIZ 15762>>ASSIGN  15763>>ASSIGN  15764>>ASSIGN  15870>>CALLBLT 15908>>ASSIGN
     15909>>ASSIGN  15937>>IF      15948>>ASSIGN  15949>>ASSIGN
OUT$SYM.TEXT
     14966**DCL     15763>>ASSIGN  15764>>ASSIGN  15870>>CALLBLT 15909>>ASSIGN  15937>>IF      15949>>ASSIGN
P$NODE.CODE
     14901**DCL     15733>>ASSIGN  15734>>ASSIGN  15735>>ASSIGN
P$NODE.SUBLK$
     14926**DCL     15759>>ASSIGN  15759>>ASSIGN  15761>>ASSIGN  15761>>ASSIGN  15869>>ASSIGN  15932>>ASSIGN
     15932>>ASSIGN
PROJ_KEY.TEXT
     11774**DCL     11774--REDEF
PROJ_KEY.TXT.PROJECT
     11774**DCL     11774--REDEF
PTR$
     14759**DCL     16029<<ASSIGN  16030>>ASSIGN  16035>>ASSIGN  16067<<ASSIGN  16068>>ASSIGN  16073>>ASSIGN
REMEM_VAR
     11900**DCL     11900--REDEF
REMOVE_LINKDEV
     16055**PROC    15832--CALL    15967--CALL
REMOVE_VIRCIR
     15988**PROC    15828--CALL    15927--CALL
REM_FCMD
     11900**DCL     11901--REDEF
USERS_KEY
PL6.E3A0      #006=ASR$R_LINK_VIRCIR File=ASR$R_HLP.:E05TSI                      TUE 07/29/97 10:55 Page:290  
     11771**DCL     15765<<ASSIGN  15794<>CALL
USERS_KEY.TEXT
     11771**DCL     11772--REDEF   11772--REDEF   11772--REDEF   11773--REDEF
VIRCIR
     14772**DCL     15734<<ASSIGN  15867>>IF
VIRCIR#
     14766**DCL     15870<<CALLBLT 15871>>IF      15897>>IF      15994<<ASSIGN  16003<>CALL
VIRCIR_EXISTS
     14775**DCL     15894<<ASSIGN  15895>>DOWHILE 15898<<ASSIGN  15904>>IF
VIRCIR_INDEX
     14768**DCL     15825<<ASSIGN  15826>>DOWHILE 15835<<ASSIGN  15835>>ASSIGN
WRITE_LINK_ERR
     15976**LABEL   15928--CALLALT 15968--CALLALT

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:291  
     1573        1        /*M* ASR$R_LINE_CONT - processes the REMOVE LINE/CONTROLLER command.  */
     1574        2        /*T***********************************************************/
     1575        3        /*T*                                                         */
     1576        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1577        5        /*T*                                                         */
     1578        6        /*T***********************************************************/
     1579        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
     1580        8              ECU=3,CSU=3,SDI=3                                           */
     1581        9                                                              /**/
     1582       10        ASR$R_LINE_CONT: PROC;
     1583       11                                                              /**/
     1584       12        /********************************************************************/
     1585       13        /*   Include files   include files   include files   include files   */
     1586       14        /*********************************************************************/
     1587       15                                                              /**/
     1588       16              %INCLUDE  CP_6 ;
     1589       97              %INCLUDE AS_PERR_C ;
     1590      699              %INCLUDE KL_CONFIG_M;
     1591     1461              %INCLUDE B_ERRORS_C;
     1592     2588              %INCLUDE  AS_ENTRIES_M;
     1593     3638              %INCLUDE  AS_SUPER_C ;
     1594     4073              %INCLUDE  AS_SUBS_C ;
     1595     5487              %INCLUDE  AS_MAC_C ;
     1596     5567              %INCLUDE  KL_SUPER_C ;
     1597     8469              %INCLUDE  XU_MACRO_C ;
     1598    11575              %INCLUDE  XU_FORMAT_C ;
     1599    11737              %INCLUDE  AS_SUPER_R ;
     1600    14753
     1601    14754
     1602    14755        /*********************************************************************/
     1603    14756        /*   Auto data       auto data       auto data       auto data       */
     1604    14757        /*********************************************************************/
     1605    14758                                                              /**/
     1606    14759    1   DCL PTR$ PTR ;
     1607    14760    1   DCL DEV$ PTR ;
     1608    14761    1   DCL CONT$ PTR;
     1609    14762    1   DCL TEMP$ PTR;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:292  
     1610    14763    1   DCL BLK$ PTR ;
     1611    14764    1   DCL ARS UBIN WORD ;
     1612    14765    1   DCL I UBIN WORD ;
     1613    14766    1   DCL J UBIN WORD ;
     1614    14767    1   DCL MOVE_SIZE UBIN WORD ;
     1615    14768    1   DCL CONT# UBIN WORD ;
     1616    14769    1   DCL DEV# UBIN WORD ;
     1617    14770    1   DCL DEV_SIZEW UBIN WORD ;
     1618    14771    1   DCL CONT_INDEX UBIN WORD ;
     1619    14772    1   DCL DEV_START$ PTR ;
     1620    14773    1   DCL DEV_STOP$ PTR ;
     1621    14774    1   DCL LINE        BIT(1) ;
     1622    14775    1   DCL CONTROLLER  BIT(1) ;
     1623    14776    1   DCL DEVICE      BIT(1) ;
     1624    14777    1   DCL CONT_EXISTS BIT(1) ;
     1625    14778    1   DCL FOUND       BIT(1) ;
     1626    14779    1   DCL DONE        BIT(1) ;
     1627    14780    1   DCL 1 LINE_NAME,
     1628    14781    1          2 COUNT UBIN BYTE UNAL,
     1629    14782    1          2 TEXT CHAR(8) UNAL;
     1630    14783
     1631    14784        /*********************************************************************/
     1632    14785        /*   Static data     static data     static data     static data     */
     1633    14786        /*********************************************************************/
     1634    14787                                                              /**/
     1635    14788    1   DCL 1 LINE_KEY ALIGNED STATIC ,
     1636    14789    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
     1637    14790    1          2 TXT UNAL ,
     1638    14791    1             3 LINE CHAR(8) UNAL INIT(' ') ,
     1639    14792    1             3 ASTR CHAR(1) UNAL INIT('*') ;
     1640    14793        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
     1641    14839
     1642    14840        /********************************************************************/
     1643    14841        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     1644    14842        /*********************************************************************/
     1645    14843                                                              /**/
     1646    14844        %ASB$DELREC_HLP ;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:293  
     1647    14847        %ASB$GETSEG ;
     1648    14850        %ASB$GET_MORE_SEG ;
     1649    14853        %ASB$ENQ_HLP ;
     1650    14856        %ASB$DEQ_HLP ;
     1651    14859        %ASH$ERROR ;
     1652    14862        %ASH$WARN ;
     1653    14865        %ASH$INFO ;
     1654    14868        %ASB$READ_HLP ;
     1655    14871        %ASB$WRITE_HLP ;
     1656    14874        %ASB$DELREC_NETCON ;
     1657    14877        %ASB$CLOSE_NETCON ;
     1658    14880        %ASA$ERROR ;
     1659    14883
     1660    14884        /*********************************************************************/
     1661    14885        /*   Local based     local based     local based     local based     */
     1662    14886        /*********************************************************************/
     1663    14887                                                              /**/
     1664    14888        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
     1665    14889                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
     1666    14934        %PARSE$SYM( NAME = OUT$SYM ,
     1667    14935                    STCLASS="BASED(BLK$)") ;
     1668    14973        %KL_DREC ( NAME = KL$DREC ,
     1669    14974                   LAST=",",
     1670    14975                   STCLASS="BASED( DSEG1$ )");
     1671    15088        %KL_LN3270( NAME = LN,
     1672    15089                    LVL = 2,
     1673    15090                    STCLASS = BASED);
     1674    15232        %KL_CONTROLLER( NAME=KL$CONTROLLER,
     1675    15233                        LVL=1,
     1676    15234                        STCLASS="BASED(CONT$)" );
     1677    15383        %KL_LINEDEV( NAME = KL$LINEDEV,
     1678    15384                     STCLASS="BASED( DEV$ )") ;
     1679    15533    1   DCL MOVE$TEMP CHAR(MOVE_SIZE) BASED;
     1680    15534
     1681    15535    1   DCL B$TCB$ PTR SYMREF;
     1682    15536        %B$TCB;
     1683    15539        %B$ALT;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:294  
     1684    15547        /*********************************************************************/
     1685    15548        /*   Procedure       procedure       procedure       procedure       */
     1686    15549        /*********************************************************************/
     1687    15550                                                              /**/
     1688    15551        /*
     1689    15552            ***            Begin procedure                    ***
     1690    15553        */
     1691    15554    1   LINE = (P$NODE.CODE = R_LINE_VAL);
     1692    15555    1   CONTROLLER = (P$NODE.CODE = R_CONT_VAL);
     1693    15556    1   DEVICE = (P$NODE.CODE = R_LINE_DEV_VAL);
     1694    15557                                                              /* Get data seg. */
     1695    15558    1   IF NOT DSEG_FLG THEN
     1696    15559    1      CALL ASB$GETSEG
     1697    15560    2      WHENALTRETURN DO;
     1698    15561    2   GETSEG_ERR:
     1699    15562              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );
     1700    15577    2         RETURN ;
     1701    15578    2         END;  /*  Whenaltreturn from ASB$GETSEG  */
     1702    15579                                                              /* Get line name */
     1703    15580    1   IF LINE THEN
     1704    15581    1      BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;
     1705    15582    1   ELSE
     1706    15583    1      BLK$ = P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;
     1707    15584    2   IF OUT$SYM.COUNT > 8 THEN DO;
     1708    15585        /*E*  ERROR:    ASR-E$LNAMETOOBIG-C
     1709    15586              MESSAGE: Line name too long.
     1710    15587              MESSAGE1: Line names can be at most 8 characters.
     1711    15588        */
     1712    15589           %SCREAM( ERR#=E$LNAMETOOBIG, LEVEL=ERROR, MID='R' );
     1713    15604    2      RETURN ;
     1714    15605    2      END ; /* Then do */
     1715    15606    1   LINE_NAME.COUNT = OUT$SYM.COUNT;
     1716    15607    1   LINE_NAME.TEXT = OUT$SYM.TEXT ;
     1717    15608    1   LINE_KEY.TXT.LINE = OUT$SYM.TEXT ;
     1718    15609    1   USERS_KEY = LINE_KEY ;
     1719    15610    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR);
     1720    15611                                                              /* Pick up line record */
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:295  
     1721    15612    1   READ_LINE_REC:
     1722    15613    1   ARS = DSEG1SIZE ;
     1723    15614    1   CALL ASB$READ_HLP( DSEG1$, ARS, 1 ) ALTRET( READ_LINE_ERR ) ;
     1724    15615    2   IF KL$DREC.ATYP ~= %KLAT_LINE# THEN DO;
     1725    15616        /*E*  ERROR:    ASR-E$NOTLINE-C
     1726    15617              MESSAGE0: %%U1 %is not a line.
     1727    15618        */
     1728    15619    2      AS_FIELD1 = LINE_NAME;
     1729    15620           %SCREAM( ERR#=E$NOTLINE , LEVEL=ERROR, MID='R' );
     1730    15635    2      RETURN ;
     1731    15636    2      END ; /* Then do */
     1732    15637    1   DEV_START$ = PINCRW(ADDR(KL$DREC.LN), SIZEW(KL$DREC.LN) );
     1733    15638    1   DEV_SIZEW = KL$DREC.NWINFO - POFFW(DEV_START$,ADDR(KL$DREC.LN));
     1734    15639    1   DEV_STOP$ = PINCRW(DEV_START$, DEV_SIZEW);
     1735    15640    1   CONT$ = DEV_START$;
     1736    15641    2   IF LINE THEN DO;
     1737    15642        /*E*  ERROR:  ASR-E$LINE_REMOVED-C
     1738    15643              MESSAGE:.. Line %U1 removed.
     1739    15644        */
     1740    15645    2      AS_FIELD1 = LINE_NAME;
     1741    15646           %SCREAM( ERR#=E$LINE_REMOVED, LEVEL=INFO, MID='R' );
     1742    15661    3      DO WHILE( CONT$ < DEV_STOP$ ) ;
     1743    15662    3         CALL REMOVE_CONTROLLER;
     1744    15663    3         CONT_INDEX = KL$CONTROLLER.BLKHDR.NSUBS;
     1745    15664    3         CONT$ = PINCRW( CONT$, SIZEW(KL$CONTROLLER)+(CONT_INDEX*SIZEW(KL$LINEDEV)));
     1746    15665    3         END;  /*  Do while CONT$ < DEV_STOP$  */
     1747    15666    2      CALL ASB$DELREC_HLP ALTRET(DEL_ERR);
     1748    15667    2      KL_TERM_KEY.TERMID.TERM.TERM_NAME = LINE_NAME.TEXT;
     1749    15668    2      CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))
     1750    15669    3      WHENALTRETURN DO;
     1751    15670    3         IF MERR_CODE.CODE ~= %E$NOKEY
     1752    15671    4         THEN DO;
     1753    15672    4            GOTO NETCON_ERR;
     1754    15673    4            END;
     1755    15674    3         END;
     1756    15675    2      CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);
     1757    15676    2      END;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:296  
     1758    15677    2   ELSE DO;
     1759    15678                                                      /* Get controller number */
     1760    15679    2      IF CONTROLLER THEN
     1761    15680    2         BLK$ = P$NODE.SUBLK$(0);
     1762    15681    2      ELSE
     1763    15682    2         BLK$ = P$NODE.SUBLK$(2);
     1764    15683    2      CALL CHARBIN( CONT#, OUT$SYM.TEXT );
     1765    15684    3      IF CONT# > 31 THEN DO;
     1766    15685        /*E*  ERROR:  ASR-E$BAD_CONT_NUM-C
     1767    15686              MESSAGE: Illegal CONTROLLER number.
     1768    15687              MESSAGE1: A CONTROLLER number must be between 0 and 31.
     1769    15688        */
     1770    15689              %SCREAM( ERR#=E$BAD_CONT_NUM, LEVEL=ERROR, MID='R' );
     1771    15704    3         RETURN;
     1772    15705    3         END;
     1773    15706                                                      /* See if the controller exists.*/
     1774    15707    2      CONT_EXISTS = AS_FALSE;
     1775    15708    3      DO WHILE( CONT$ < DEV_STOP$  AND NOT CONT_EXISTS );
     1776    15709    3         IF KL$CONTROLLER.CONT# = CONT# THEN
     1777    15710    3            CONT_EXISTS = AS_TRUE;
     1778    15711    4         ELSE DO;
     1779    15712    4            CONT_INDEX = KL$CONTROLLER.BLKHDR.NSUBS;
     1780    15713    4            CONT$ = PINCRW( CONT$, SIZEW(KL$CONTROLLER)+(CONT_INDEX*SIZEW(KL$LINEDEV)))
             15713                     ;
     1781    15714    4            END;
     1782    15715    3         END;
     1783    15716    3      IF NOT CONT_EXISTS THEN DO;
     1784    15717        /*E*  ERROR:  ASR-E$CONT_NO_EXIST2-C
     1785    15718              MESSAGE: Controller %U1 does not exist.
     1786    15719        */
     1787    15720    3         AS_FIELD1.COUNT = OUT$SYM.COUNT;
     1788    15721    3         AS_FIELD1.TEXT  = OUT$SYM.TEXT;
     1789    15722              %SCREAM( ERR#=E$CONT_NO_EXIST2, LEVEL=WARN, MID='R' );
     1790    15737    3         RETURN;
     1791    15738    3         END;
     1792    15739    2      IF CONTROLLER THEN
     1793    15740    2         CALL REMOVE_CONTROLLER;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:297  
     1794    15741    2      ELSE
     1795    15742    2         CALL REMOVE_DEVICE ALTRET(EXIT#);
     1796    15743    2      CALL ASB$WRITE_HLP( DSEG1$, ARS ) ALTRET( WRITE_LINE_ERR );
     1797    15744    2      END;
     1798    15745    1   EXIT#:
     1799    15746    1   CALL ASB$DEQ_HLP ALTRET( DEQ_ERR ) ;
     1800    15747                                                              /* All done */
     1801    15748    1   RETURN ;
     1802    15749                                                              /*  Errors  */
     1803    15750    1   NETCON_ERR:;
     1804    15751    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;
     1805    15752    1   CALL ASH$ERROR(ERR_CODE);
     1806    15753    1   RETURN;
     1807    15754                                                              /**/
     1808    15755    1   READ_LINE_ERR: ;
     1809    15756    2   IF MERR_CODE.CODE = %E$LD THEN DO;
     1810    15757    2      CALL ASB$GET_MORE_SEG( 1, 4096 ) ALTRET( GETSEG_ERR );
     1811    15758    2      GOTO READ_LINE_REC;
     1812    15759    2      END;
     1813    15760    1   ELSE
     1814    15761    2      IF MERR_CODE.CODE = %E$NOKEY THEN DO;
     1815    15762        /*E* ERROR:   ASR-E$LINE_NO_EXIST2-C
     1816    15763             MESSAGE: Line %U1 does not exist.
     1817    15764        */
     1818    15765    2         AS_FIELD1 = LINE_NAME;
     1819    15766              %SCREAM( ERR#=E$LINE_NO_EXIST2, MID='R', LEVEL=WARN );
     1820    15781    2         END;
     1821    15782    2      ELSE DO;
     1822    15783    2         CALL ASA$ERROR( USERS_KEY, E$UNABLE_TO_READ_HLP );
     1823    15784    2         END;
     1824    15785    1   RETURN;
     1825    15786
     1826    15787    1   DEL_ERR: ;
     1827    15788    1   WRITE_LINE_ERR: ;
     1828    15789    1   CALL ASH$ERROR( ERR_CODE );
     1829    15790    1   ENQ_ERR: ;
     1830    15791    1   DEQ_ERR: ;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:298  
     1831    15792    1   RETURN;
     1832    15793
     1833    15794        %EJECT;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:299  
     1834    15795    1   REMOVE_CONTROLLER: PROC;
     1835    15796
     1836    15797
     1837    15798        /*E*  ERROR:  ASR-E$CONT_REMOVED-C
     1838    15799              MESSAGE:.... Controller %U1 for line %U2 removed.
     1839    15800        */
     1840    15801    2   CONT# = KL$CONTROLLER.CONT#;
     1841    15802        %NUMBER( NUM1=CONT# );
             15810    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, CONT# );
     1842    15832    2   AS_FIELD2 = LINE_NAME;
     1843    15833        %SCREAM( ERR#=E$CONT_REMOVED, LEVEL=INFO, MID='R' );
     1844    15848
     1845    15849    2   DEV$ = PINCRW( CONT$, SIZEW(KL$CONTROLLER));
     1846    15850    2   PTR$ = PINCRW(DEV$, KL$CONTROLLER.BLKHDR.NSUBS*SIZEW(KL$LINEDEV));
     1847    15851    2   DONE = '0'B;
     1848    15852    3   IF KL$CONTROLLER.BLKHDR.NSUBS > 0 THEN DO;
     1849    15853    4      DO WHILE( DEV$ < PTR$  AND  NOT DONE );
     1850    15854    5         IF KL$LINEDEV.CONTROLLER# = CONT# THEN DO;
     1851    15855        /*E*  ERROR:  ASR-E$CONT_DEV_REMOVED-C
     1852    15856              MESSAGE:...... Device %U1 removed.
     1853    15857        */
     1854    15858    5            DEV# = KL$LINEDEV.DEVICE#;
     1855    15859                 %NUMBER( NUM1=DEV# );
             15867    5         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, DEV# );
     1856    15889                 %SCREAM( ERR#=E$CONT_DEV_REMOVED, LEVEL=INFO, MID='R' );
     1857    15904    5            DEV$ = PINCRW(DEV$, SIZEW(KL$LINEDEV));
     1858    15905    5            END;
     1859    15906    4         ELSE
     1860    15907    4            DONE = '1'B;
     1861    15908    4         END;
     1862    15909    3      END;
     1863    15910
     1864    15911    3   IF NOT LINE THEN DO;
     1865    15912    3      MOVE_SIZE = POFFW(DEV_STOP$,PTR$) * 4;
     1866    15913    3      KL$DREC.NWINFO = KL$DREC.NWINFO - POFFW(PTR$, CONT$);
     1867    15914    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO * 4;
     1868    15915    4      IF MOVE_SIZE > 0 THEN DO;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:300  
     1869    15916    4         KL$DREC.LN.BLKHDR.NSUBS = KL$DREC.LN.BLKHDR.NSUBS  - 1;
     1870    15917    4         IF MOVE_SIZE > 0 THEN
     1871    15918    4            CONT$->MOVE$TEMP = PTR$->MOVE$TEMP;
     1872    15919    4         END; /*   Size > 0  */
     1873    15920    3      END;
     1874    15921
     1875    15922
     1876    15923    2   END REMOVE_CONTROLLER;
     1877    15924        %EJECT;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:301  
     1878    15925    1   REMOVE_DEVICE: PROC ALTRET;
     1879    15926
     1880    15927
     1881    15928    2   BLK$ = P$NODE.SUBLK$(0);
     1882    15929    2   CALL CHARBIN(DEV#, OUT$SYM.TEXT);
     1883    15930    3   IF DEV# > 31 THEN DO;
     1884    15931        /*E*  ERROR:  ASR-E$BAD_CONT_DEV_NUM-C
     1885    15932              MESSAGE: Invalid DEVICE number.
     1886    15933              MESSAGE1: A DEVICE number must be between 0 and 31.
     1887    15934        */
     1888    15935           %SCREAM( ERR#=E$BAD_CONT_DEV_NUM, LEVEL=ERROR, MID='R' );
     1889    15950    3      ALTRETURN;
     1890    15951    3      END;
     1891    15952
     1892    15953    2   DEV$ = PINCRW( CONT$, SIZEW( KL$CONTROLLER));
     1893    15954    2   DONE = '0'B;
     1894    15955    2   FOUND = '0'B;
     1895    15956    2   TEMP$ = PINCRW( DEV$, KL$CONTROLLER.BLKHDR.NSUBS*SIZEW(KL$LINEDEV));
     1896    15957    3   DO WHILE( DEV$ < TEMP$  AND  NOT FOUND  AND  NOT DONE );
     1897    15958    3      IF KL$LINEDEV.CONTROLLER# = CONT# AND KL$LINEDEV.DEVICE# = DEV# THEN
     1898    15959    3         FOUND = '1'B;
     1899    15960    3      ELSE
     1900    15961    3         IF KL$LINEDEV.DEVICE# > DEV# THEN
     1901    15962    3            DONE = '1'B;
     1902    15963    3         ELSE
     1903    15964    3            DEV$ = PINCRW(DEV$, SIZEW(KL$LINEDEV));
     1904    15965    3      END;
     1905    15966
     1906    15967        %NUMBER( NUM1=DEV#, NUM2=CONT# );
             15975    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, DEV# );
             15983    2         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, CONT# );
     1907    15997    2   AS_FIELD3 = LINE_NAME;
     1908    15998    3   IF FOUND THEN DO;
     1909    15999    3      PTR$ = PINCRW(DEV$, SIZEW(KL$LINEDEV));
     1910    16000    3      MOVE_SIZE = POFFW(DEV_STOP$, PTR$) * 4;
     1911    16001    3      KL$DREC.NWINFO = KL$DREC.NWINFO - SIZEW(KL$LINEDEV);
     1912    16002    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO * 4;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:302  
     1913    16003    3      IF MOVE_SIZE > 0 THEN
     1914    16004    3         DEV$->MOVE$TEMP = PTR$->MOVE$TEMP;
     1915    16005        /*E*  ERROR:  ASR-E$LINEDEV_REMOVED-C
     1916    16006              MESSAGE: Device %U1 for line %U3 controller %U2 removed.
     1917    16007        */
     1918    16008           %SCREAM( ERR#=E$LINEDEV_REMOVED, LEVEL=INFO, MID='R' );
     1919    16023    3      KL$CONTROLLER.BLKHDR.NSUBS = KL$CONTROLLER.BLKHDR.NSUBS - 1;
     1920    16024    3      END;
     1921    16025    3   ELSE DO;
     1922    16026        /*E*  ERROR:  ASR-E$LINEDEV_NO_EXIST1-C
     1923    16027              MESSAGE: Device %U1 does not exist.
     1924    16028              MESSAGE1: Device %U1 for line %U3 controller %U2, does not exist.
     1925    16029        */
     1926    16030           %SCREAM( ERR#=E$LINEDEV_NO_EXIST1, LEVEL=WARN, MID='R' );
     1927    16045    3      END;
     1928    16046                                                              /**/
     1929    16047    2   END REMOVE_DEVICE;
     1930    16048
     1931    16049
     1932    16050
     1933    16051
     1934    16052    1   END ASR$R_LINE_CONT;

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:303  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_LINE_CONT.

   Procedure ASR$R_LINE_CONT requires 550 words for executable code.
   Procedure ASR$R_LINE_CONT requires 34 words of local(AUTO) storage.

    No errors detected in file ASR$R_HLP.:E05TSI    .

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:304  

 Object Unit name= ASR$R_LINE_CONT                            File name= ASR$R_HLP.:E05TOU
 UTS= JUL 29 '97 10:56:14.68 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   DCB   even  none     0      0  M$UC
    1   DCB   even  none     0      0  M$LO
    2   Data  even  none     8     10  ASR$R_LINE_CONT
    3  RoData even  UTS     12     14  ASR$R_LINE_CONT
    4   Proc  even  none   550   1046  ASR$R_LINE_CONT
    5  RoData even  none    32     40  ASR$R_LINE_CONT

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     4      0   yes            yes      Std        0  ASR$R_LINE_CONT
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:305  

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes          ~proc      0 XU_OUTPUT_OPTIONS
 yes     yes           Std       0 ASB$DELREC_HLP
 yes     yes           Std       2 ASB$WRITE_HLP
 yes     yes           Std       0 ASB$GETSEG
         yes           Std       2 ASH$ERROR
 yes     yes           Std       0 ASB$ENQ_HLP
 yes     yes           Std       3 ASB$READ_HLP
         yes           Std       2 ASH$INFO
 yes     yes           Std       1 ASB$DELREC_NETCON
 yes     yes           Std       2 ASB$GET_MORE_SEG
         yes           Std       3 ASA$ERROR
         yes           Std       2 ASH$WARN
 yes     yes           Std       0 ASB$DEQ_HLP
 yes     yes           Std       0 ASB$CLOSE_NETCON
         yes           Std       4 ASB$BINCHAR
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     M$UC                             r    AS_TRUE                          r    AS_FALSE
r    AS_MODE                          r    AS_FE_MODE                            M$LO
     USERS_KEY                             NODE$                                 ERR_CODE
     AS_FIELD1                             AS_FIELD2                             AS_FIELD3
     REMEM_VAR                             REM_FCMD                              ASA_BRKS_LOC
     DSEG_FLG                              DSEG1$                                DSEG1SIZE
     KL_DREC_CNT                           B$TCB$                                B_VECTNIL
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:306  

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:307  


     1573        1        /*M* ASR$R_LINE_CONT - processes the REMOVE LINE/CONTROLLER command.  */
     1574        2        /*T***********************************************************/
     1575        3        /*T*                                                         */
     1576        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
     1577        5        /*T*                                                         */
     1578        6        /*T***********************************************************/
     1579        7        /*X*  DMC,DMR,CCC,PLM=0,IND=3,CTI=5,DCI=6,IAD=0,DTI=0,IDT=0,ENI=3,
     1580        8              ECU=3,CSU=3,SDI=3                                           */
     1581        9                                                              /**/
     1582       10        ASR$R_LINE_CONT: PROC;

     10  4 000000   000000 700200 xent  ASR$R_LINE_* TSX0  ! X66_AUTO_0
         4 000001   000042 000000                    ZERO    34,0

     1583       11                                                              /**/
     1584       12        /********************************************************************/
     1585       13        /*   Include files   include files   include files   include files   */
     1586       14        /*********************************************************************/
     1587       15                                                              /**/
     1588       16              %INCLUDE  CP_6 ;
     1589       97              %INCLUDE AS_PERR_C ;
     1590      699              %INCLUDE KL_CONFIG_M;
     1591     1461              %INCLUDE B_ERRORS_C;
     1592     2588              %INCLUDE  AS_ENTRIES_M;
     1593     3638              %INCLUDE  AS_SUPER_C ;
     1594     4073              %INCLUDE  AS_SUBS_C ;
     1595     5487              %INCLUDE  AS_MAC_C ;
     1596     5567              %INCLUDE  KL_SUPER_C ;
     1597     8469              %INCLUDE  XU_MACRO_C ;
     1598    11575              %INCLUDE  XU_FORMAT_C ;
     1599    11737              %INCLUDE  AS_SUPER_R ;
     1600    14753
     1601    14754
     1602    14755        /*********************************************************************/
     1603    14756        /*   Auto data       auto data       auto data       auto data       */
     1604    14757        /*********************************************************************/
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:308  
     1605    14758                                                              /**/
     1606    14759    1   DCL PTR$ PTR ;
     1607    14760    1   DCL DEV$ PTR ;
     1608    14761    1   DCL CONT$ PTR;
     1609    14762    1   DCL TEMP$ PTR;
     1610    14763    1   DCL BLK$ PTR ;
     1611    14764    1   DCL ARS UBIN WORD ;
     1612    14765    1   DCL I UBIN WORD ;
     1613    14766    1   DCL J UBIN WORD ;
     1614    14767    1   DCL MOVE_SIZE UBIN WORD ;
     1615    14768    1   DCL CONT# UBIN WORD ;
     1616    14769    1   DCL DEV# UBIN WORD ;
     1617    14770    1   DCL DEV_SIZEW UBIN WORD ;
     1618    14771    1   DCL CONT_INDEX UBIN WORD ;
     1619    14772    1   DCL DEV_START$ PTR ;
     1620    14773    1   DCL DEV_STOP$ PTR ;
     1621    14774    1   DCL LINE        BIT(1) ;
     1622    14775    1   DCL CONTROLLER  BIT(1) ;
     1623    14776    1   DCL DEVICE      BIT(1) ;
     1624    14777    1   DCL CONT_EXISTS BIT(1) ;
     1625    14778    1   DCL FOUND       BIT(1) ;
     1626    14779    1   DCL DONE        BIT(1) ;
     1627    14780    1   DCL 1 LINE_NAME,
     1628    14781    1          2 COUNT UBIN BYTE UNAL,
     1629    14782    1          2 TEXT CHAR(8) UNAL;
     1630    14783
     1631    14784        /*********************************************************************/
     1632    14785        /*   Static data     static data     static data     static data     */
     1633    14786        /*********************************************************************/
     1634    14787                                                              /**/
     1635    14788    1   DCL 1 LINE_KEY ALIGNED STATIC ,
     1636    14789    1          2 CNT UBIN BYTE UNAL INIT( 9 ),
     1637    14790    1          2 TXT UNAL ,
     1638    14791    1             3 LINE CHAR(8) UNAL INIT(' ') ,
     1639    14792    1             3 ASTR CHAR(1) UNAL INIT('*') ;
     1640    14793        %KL$TERM_KEY (NAME=KL_TERM_KEY,STCLASS=STATIC);
     1641    14839
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:309  
     1642    14840        /********************************************************************/
     1643    14841        /*   Entry dcls      entry dcls      entry dcls      entry dcls      */
     1644    14842        /*********************************************************************/
     1645    14843                                                              /**/
     1646    14844        %ASB$DELREC_HLP ;
     1647    14847        %ASB$GETSEG ;
     1648    14850        %ASB$GET_MORE_SEG ;
     1649    14853        %ASB$ENQ_HLP ;
     1650    14856        %ASB$DEQ_HLP ;
     1651    14859        %ASH$ERROR ;
     1652    14862        %ASH$WARN ;
     1653    14865        %ASH$INFO ;
     1654    14868        %ASB$READ_HLP ;
     1655    14871        %ASB$WRITE_HLP ;
     1656    14874        %ASB$DELREC_NETCON ;
     1657    14877        %ASB$CLOSE_NETCON ;
     1658    14880        %ASA$ERROR ;
     1659    14883
     1660    14884        /*********************************************************************/
     1661    14885        /*   Local based     local based     local based     local based     */
     1662    14886        /*********************************************************************/
     1663    14887                                                              /**/
     1664    14888        %PARSE$OUT( NAME=P$NODE, STCLASS="BASED(NODE$)",
     1665    14889                    NDTYPE=TYPE, NSUBLKS=SUBNODES) ;
     1666    14934        %PARSE$SYM( NAME = OUT$SYM ,
     1667    14935                    STCLASS="BASED(BLK$)") ;
     1668    14973        %KL_DREC ( NAME = KL$DREC ,
     1669    14974                   LAST=",",
     1670    14975                   STCLASS="BASED( DSEG1$ )");
     1671    15088        %KL_LN3270( NAME = LN,
     1672    15089                    LVL = 2,
     1673    15090                    STCLASS = BASED);
     1674    15232        %KL_CONTROLLER( NAME=KL$CONTROLLER,
     1675    15233                        LVL=1,
     1676    15234                        STCLASS="BASED(CONT$)" );
     1677    15383        %KL_LINEDEV( NAME = KL$LINEDEV,
     1678    15384                     STCLASS="BASED( DEV$ )") ;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:310  
     1679    15533    1   DCL MOVE$TEMP CHAR(MOVE_SIZE) BASED;
     1680    15534
     1681    15535    1   DCL B$TCB$ PTR SYMREF;
     1682    15536        %B$TCB;
     1683    15539        %B$ALT;
     1684    15547        /*********************************************************************/
     1685    15548        /*   Procedure       procedure       procedure       procedure       */
     1686    15549        /*********************************************************************/
     1687    15550                                                              /**/
     1688    15551        /*
     1689    15552            ***            Begin procedure                    ***
     1690    15553        */
     1691    15554    1   LINE = (P$NODE.CODE = R_LINE_VAL);

  15554  4 000002   400000 220003                    LDX0    -131072,DU
         4 000003   000000 470400 xsym               LDP0    NODE$
         4 000004   000000 721100                    LXL1    0,,PR0
         4 000005   000073 101003                    CMPX1   59,DU
         4 000006   000010 600000 4                  TZE     s:15554+6
         4 000007   000000 220003                    LDX0    0,DU
         4 000010   000000 636010                    EAQ     0,X0
         4 000011   200022 756100                    STQ     LINE,,AUTO

     1692    15555    1   CONTROLLER = (P$NODE.CODE = R_CONT_VAL);

  15555  4 000012   400000 220003                    LDX0    -131072,DU
         4 000013   000074 101003                    CMPX1   60,DU
         4 000014   000016 600000 4                  TZE     s:15555+4
         4 000015   000000 220003                    LDX0    0,DU
         4 000016   000000 636010                    EAQ     0,X0
         4 000017   200023 756100                    STQ     CONTROLLER,,AUTO

     1693    15556    1   DEVICE = (P$NODE.CODE = R_LINE_DEV_VAL);

  15556  4 000020   400000 220003                    LDX0    -131072,DU
         4 000021   000076 101003                    CMPX1   62,DU
         4 000022   000024 600000 4                  TZE     s:15556+4
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:311  
         4 000023   000000 220003                    LDX0    0,DU
         4 000024   000000 636010                    EAQ     0,X0
         4 000025   200024 756100                    STQ     DEVICE,,AUTO

     1694    15557                                                              /* Get data seg. */
     1695    15558    1   IF NOT DSEG_FLG THEN

  15558  4 000026   000000 234000 xsym               SZN     DSEG_FLG
         4 000027   000041 604000 4                  TMI     s:15580

     1696    15559    1      CALL ASB$GETSEG

  15559  4 000030   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000031   000000 701000 xent               TSX1    ASB$GETSEG
         4 000032   000034 702000 4                  TSX2    GETSEG_ERR
         4 000033   000041 710000 4                  TRA     s:15580

     1697    15560    2      WHENALTRETURN DO;

     1698    15561    2   GETSEG_ERR:
     1699    15562              %SCREAM( ERR#=%E$GETSEGERR , LEVEL=ERROR, MID='R' );

  15574  4 000034   000000 630400 5     GETSEG_ERR   EPPR0   0
         4 000035   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000036   000000 701000 xent               TSX1    ASH$ERROR
         4 000037   000000 011000                    NOP     0

     1700    15577    2         RETURN ;

  15577  4 000040   000000 702200 xent               TSX2  ! X66_ARET

     1701    15578    2         END;  /*  Whenaltreturn from ASB$GETSEG  */
     1702    15579                                                              /* Get line name */
     1703    15580    1   IF LINE THEN

  15580  4 000041   200022 234100                    SZN     LINE,,AUTO
         4 000042   000050 605000 4                  TPL     s:15583
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:312  

     1704    15581    1      BLK$ = P$NODE.SUBLK$(0) -> P$NODE.SUBLK$(0) ;

  15581  4 000043   000000 470400 xsym               LDP0    NODE$
         4 000044   000003 471500                    LDP1    3,,PR0
         4 000045   100003 236100                    LDQ     3,,PR1
         4 000046   200007 756100                    STQ     BLK$,,AUTO
         4 000047   000054 710000 4                  TRA     s:15584

     1705    15582    1   ELSE
     1706    15583    1      BLK$ = P$NODE.SUBLK$(1) -> P$NODE.SUBLK$(0) ;

  15583  4 000050   000000 470400 xsym               LDP0    NODE$
         4 000051   000004 471500                    LDP1    4,,PR0
         4 000052   100003 236100                    LDQ     3,,PR1
         4 000053   200007 756100                    STQ     BLK$,,AUTO

     1707    15584    2   IF OUT$SYM.COUNT > 8 THEN DO;

  15584  4 000054   200007 471500                    LDP1    BLK$,,AUTO
         4 000055   100004 236100                    LDQ     4,,PR1
         4 000056   777000 376003                    ANQ     -512,DU
         4 000057   011000 116003                    CMPQ    4608,DU
         4 000060   000066 602000 4                  TNC     s:15606

     1708    15585        /*E*  ERROR:    ASR-E$LNAMETOOBIG-C
     1709    15586              MESSAGE: Line name too long.
     1710    15587              MESSAGE1: Line names can be at most 8 characters.
     1711    15588        */
     1712    15589           %SCREAM( ERR#=E$LNAMETOOBIG, LEVEL=ERROR, MID='R' );

  15601  4 000061   000001 630400 5                  EPPR0   1
         4 000062   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000063   000000 701000 xent               TSX1    ASH$ERROR
         4 000064   000000 011000                    NOP     0

     1713    15604    2      RETURN ;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:313  

  15604  4 000065   000000 702200 xent               TSX2  ! X66_ARET

     1714    15605    2      END ; /* Then do */
     1715    15606    1   LINE_NAME.COUNT = OUT$SYM.COUNT;

  15606  4 000066   100004 236100                    LDQ     4,,PR1
         4 000067   200030 552140                    STBQ    LINE_NAME,'40'O,AUTO

     1716    15607    1   LINE_NAME.TEXT = OUT$SYM.TEXT ;

  15607  4 000070   100004 236100                    LDQ     4,,PR1
         4 000071   000033 772000                    QRL     27
         4 000072   000000 620006                    EAX0    0,QL
         4 000073   040100 100540                    MLR     fill='040'O
         4 000074   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000075   200030 200010                    ADSC9   LINE_NAME,,AUTO          cn=1,n=8

     1717    15608    1   LINE_KEY.TXT.LINE = OUT$SYM.TEXT ;

  15608  4 000076   040000 100540                    MLR     fill='040'O
         4 000077   100004 200010                    ADSC9   4,,PR1                   cn=1,n=*X0
         4 000100   000000 200010 2                  ADSC9   LINE_KEY                 cn=1,n=8

     1718    15609    1   USERS_KEY = LINE_KEY ;

  15609  4 000101   000000 100400                    MLR     fill='000'O
         4 000102   000000 000012 2                  ADSC9   LINE_KEY                 cn=0,n=10
         4 000103   000000 000052 xsym               ADSC9   USERS_KEY                cn=0,n=42

     1719    15610    1   CALL ASB$ENQ_HLP ALTRET(ENQ_ERR);

  15610  4 000104   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000105   000000 701000 xent               TSX1    ASB$ENQ_HLP
         4 000106   000435 702000 4                  TSX2    ENQ_ERR

     1720    15611                                                              /* Pick up line record */
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:314  
     1721    15612    1   READ_LINE_REC:
     1722    15613    1   ARS = DSEG1SIZE ;

  15613  4 000107   000000 235000 xsym  READ_LINE_R* LDA     DSEG1SIZE
         4 000110   200010 755100                    STA     ARS,,AUTO

     1723    15614    1   CALL ASB$READ_HLP( DSEG1$, ARS, 1 ) ALTRET( READ_LINE_ERR ) ;

  15614  4 000111   000002 236000 5                  LDQ     2
         4 000112   200040 756100                    STQ     LINE_NAME+8,,AUTO
         4 000113   200010 630500                    EPPR0   ARS,,AUTO
         4 000114   200037 450500                    STP0    LINE_NAME+7,,AUTO
         4 000115   000003 236000 5                  LDQ     3
         4 000116   200036 756100                    STQ     LINE_NAME+6,,AUTO
         4 000117   200036 630500                    EPPR0   LINE_NAME+6,,AUTO
         4 000120   000021 631400 xsym               EPPR1   B_VECTNIL+17
         4 000121   000000 701000 xent               TSX1    ASB$READ_HLP
         4 000122   000401 702000 4                  TSX2    READ_LINE_ERR

     1724    15615    2   IF KL$DREC.ATYP ~= %KLAT_LINE# THEN DO;

  15615  4 000123   000000 470400 xsym               LDP0    DSEG1$
         4 000124   000000 236100                    LDQ     0,,PR0
         4 000125   777000 376003                    ANQ     -512,DU
         4 000126   005000 116003                    CMPQ    2560,DU
         4 000127   000140 600000 4                  TZE     s:15637

     1725    15616        /*E*  ERROR:    ASR-E$NOTLINE-C
     1726    15617              MESSAGE0: %%U1 %is not a line.
     1727    15618        */
     1728    15619    2      AS_FIELD1 = LINE_NAME;

  15619  4 000130   000000 100500                    MLR     fill='000'O
         4 000131   200030 000011                    ADSC9   LINE_NAME,,AUTO          cn=0,n=9
         4 000132   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1729    15620           %SCREAM( ERR#=E$NOTLINE , LEVEL=ERROR, MID='R' );
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:315  

  15632  4 000133   000004 630400 5                  EPPR0   4
         4 000134   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000135   000000 701000 xent               TSX1    ASH$ERROR
         4 000136   000000 011000                    NOP     0

     1730    15635    2      RETURN ;

  15635  4 000137   000000 702200 xent               TSX2  ! X66_ARET

     1731    15636    2      END ; /* Then do */
     1732    15637    1   DEV_START$ = PINCRW(ADDR(KL$DREC.LN), SIZEW(KL$DREC.LN) );

  15637  4 000140   000000 236000 xsym               LDQ     DSEG1$
         4 000141   000023 036003                    ADLQ    19,DU
         4 000142   200020 756100                    STQ     DEV_START$,,AUTO

     1733    15638    1   DEV_SIZEW = KL$DREC.NWINFO - POFFW(DEV_START$,ADDR(KL$DREC.LN));

  15638  4 000143   000000 236000 xsym               LDQ     DSEG1$
         4 000144   000020 036003                    ADLQ    16,DU
         4 000145   000022 772000                    QRL     18
         4 000146   200036 756100                    STQ     LINE_NAME+6,,AUTO
         4 000147   200020 236100                    LDQ     DEV_START$,,AUTO
         4 000150   000022 772000                    QRL     18
         4 000151   200036 136100                    SBLQ    LINE_NAME+6,,AUTO
         4 000152   200037 756100                    STQ     LINE_NAME+7,,AUTO
         4 000153   000017 236100                    LDQ     15,,PR0
         4 000154   200037 136100                    SBLQ    LINE_NAME+7,,AUTO
         4 000155   200016 756100                    STQ     DEV_SIZEW,,AUTO

     1734    15639    1   DEV_STOP$ = PINCRW(DEV_START$, DEV_SIZEW);

  15639  4 000156   000022 736000                    QLS     18
         4 000157   200020 036100                    ADLQ    DEV_START$,,AUTO
         4 000160   200021 756100                    STQ     DEV_STOP$,,AUTO

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:316  
     1735    15640    1   CONT$ = DEV_START$;

  15640  4 000161   200020 236100                    LDQ     DEV_START$,,AUTO
         4 000162   200005 756100                    STQ     CONT$,,AUTO

     1736    15641    2   IF LINE THEN DO;

  15641  4 000163   200022 234100                    SZN     LINE,,AUTO
         4 000164   000240 605000 4                  TPL     s:15679

     1737    15642        /*E*  ERROR:  ASR-E$LINE_REMOVED-C
     1738    15643              MESSAGE:.. Line %U1 removed.
     1739    15644        */
     1740    15645    2      AS_FIELD1 = LINE_NAME;

  15645  4 000165   000000 100500                    MLR     fill='000'O
         4 000166   200030 000011                    ADSC9   LINE_NAME,,AUTO          cn=0,n=9
         4 000167   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1741    15646           %SCREAM( ERR#=E$LINE_REMOVED, LEVEL=INFO, MID='R' );

  15654  4 000170   000005 630400 5                  EPPR0   5
         4 000171   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000172   000000 701000 xent               TSX1    ASH$INFO
         4 000173   000000 011000                    NOP     0

     1742    15661    3      DO WHILE( CONT$ < DEV_STOP$ ) ;

  15661  4 000174   200005 236100                    LDQ     CONT$,,AUTO
         4 000175   200021 116100                    CMPQ    DEV_STOP$,,AUTO
         4 000176   000214 603000 4                  TRC     s:15666

     1743    15662    3         CALL REMOVE_CONTROLLER;

  15662  4 000177   000436 701000 4                  TSX1    REMOVE_CONTROLLER
         4 000200   000000 011000                    NOP     0

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:317  
     1744    15663    3         CONT_INDEX = KL$CONTROLLER.BLKHDR.NSUBS;

  15663  4 000201   200005 470500                    LDP0    CONT$,,AUTO
         4 000202   000100 101500                    MRL     fill='000'O
         4 000203   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         4 000204   200017 000004                    ADSC9   CONT_INDEX,,AUTO         cn=0,n=4

     1745    15664    3         CONT$ = PINCRW( CONT$, SIZEW(KL$CONTROLLER)+(CONT_INDEX*SIZEW(KL$LINEDEV)));

  15664  4 000205   200017 236100                    LDQ     CONT_INDEX,,AUTO
         4 000206   000024 736000                    QLS     20
         4 000207   000004 036003                    ADLQ    4,DU
         4 000210   200005 036100                    ADLQ    CONT$,,AUTO
         4 000211   200005 756100                    STQ     CONT$,,AUTO

     1746    15665    3         END;  /*  Do while CONT$ < DEV_STOP$  */

  15665  4 000212   200021 116100                    CMPQ    DEV_STOP$,,AUTO
         4 000213   000177 602000 4                  TNC     s:15662

     1747    15666    2      CALL ASB$DELREC_HLP ALTRET(DEL_ERR);

  15666  4 000214   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000215   000000 701000 xent               TSX1    ASB$DELREC_HLP
         4 000216   000431 702000 4                  TSX2    DEL_ERR

     1748    15667    2      KL_TERM_KEY.TERMID.TERM.TERM_NAME = LINE_NAME.TEXT;

  15667  4 000217   040000 100500                    MLR     fill='040'O
         4 000220   200030 200010                    ADSC9   LINE_NAME,,AUTO          cn=1,n=8
         4 000221   000005 400010 2                  ADSC9   KL_TERM_KEY+2            cn=2,n=8

     1749    15668    2      CALL ASB$DELREC_NETCON(VECTOR(KL_TERM_KEY))

  15668  4 000222   000010 630400 5                  EPPR0   8
         4 000223   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000224   000000 701000 xent               TSX1    ASB$DELREC_NETCON
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:318  
         4 000225   000227 702000 4                  TSX2    s:15670
         4 000226   000234 710000 4                  TRA     s:15675

     1750    15669    3      WHENALTRETURN DO;

     1751    15670    3         IF MERR_CODE.CODE ~= %E$NOKEY

  15670  4 000227   000000 236000 xsym               LDQ     ERR_CODE
         4 000230   377770 376007                    ANQ     131064,DL
         4 000231   001020 116007                    CMPQ    528,DL
         4 000232   000234 600000 4                  TZE     s:15675

     1752    15671    4         THEN DO;

     1753    15672    4            GOTO NETCON_ERR;

  15672  4 000233   000370 710000 4                  TRA     NETCON_ERR

     1754    15673    4            END;
     1755    15674    3         END;
     1756    15675    2      CALL ASB$CLOSE_NETCON ALTRET(NETCON_ERR);

  15675  4 000234   000002 631400 xsym               EPPR1   B_VECTNIL+2
         4 000235   000000 701000 xent               TSX1    ASB$CLOSE_NETCON
         4 000236   000370 702000 4                  TSX2    NETCON_ERR

     1757    15676    2      END;

  15676  4 000237   000364 710000 4                  TRA     EXIT#

     1758    15677    2   ELSE DO;

     1759    15678                                                      /* Get controller number */
     1760    15679    2      IF CONTROLLER THEN

  15679  4 000240   200023 234100                    SZN     CONTROLLER,,AUTO
         4 000241   000246 605000 4                  TPL     s:15682
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:319  

     1761    15680    2         BLK$ = P$NODE.SUBLK$(0);

  15680  4 000242   000000 471400 xsym               LDP1    NODE$
         4 000243   100003 236100                    LDQ     3,,PR1
         4 000244   200007 756100                    STQ     BLK$,,AUTO
         4 000245   000251 710000 4                  TRA     s:15683

     1762    15681    2      ELSE
     1763    15682    2         BLK$ = P$NODE.SUBLK$(2);

  15682  4 000246   000000 471400 xsym               LDP1    NODE$
         4 000247   100005 236100                    LDQ     5,,PR1
         4 000250   200007 756100                    STQ     BLK$,,AUTO

     1764    15683    2      CALL CHARBIN( CONT#, OUT$SYM.TEXT );

  15683  4 000251   200007 473500                    LDP3    BLK$,,AUTO
         4 000252   300004 236100                    LDQ     4,,PR3
         4 000253   000033 772000                    QRL     27
         4 000254   000000 620006                    EAX0    0,QL
         4 000255   000100 305540                    DTB
         4 000256   300004 230010                    NDSC9   4,,PR3                   cn=1,s=nosgn,sf=0,n=*X0
         4 000257   200036 000010                    NDSC9   LINE_NAME+6,,AUTO        cn=0,s=lsgnf,sf=0,n=8
         4 000260   200037 235100                    LDA     LINE_NAME+7,,AUTO
         4 000261   200014 755100                    STA     CONT#,,AUTO

     1765    15684    3      IF CONT# > 31 THEN DO;

  15684  4 000262   000040 115007                    CMPA    32,DL
         4 000263   000271 602000 4                  TNC     s:15707

     1766    15685        /*E*  ERROR:  ASR-E$BAD_CONT_NUM-C
     1767    15686              MESSAGE: Illegal CONTROLLER number.
     1768    15687              MESSAGE1: A CONTROLLER number must be between 0 and 31.
     1769    15688        */
     1770    15689              %SCREAM( ERR#=E$BAD_CONT_NUM, LEVEL=ERROR, MID='R' );
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:320  

  15701  4 000264   000011 630400 5                  EPPR0   9
         4 000265   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000266   000000 701000 xent               TSX1    ASH$ERROR
         4 000267   000000 011000                    NOP     0

     1771    15704    3         RETURN;

  15704  4 000270   000000 702200 xent               TSX2  ! X66_ARET

     1772    15705    3         END;
     1773    15706                                                      /* See if the controller exists.*/
     1774    15707    2      CONT_EXISTS = AS_FALSE;

  15707  4 000271   000000 236000 xsym               LDQ     AS_FALSE
         4 000272   400000 376003                    ANQ     -131072,DU
         4 000273   200025 756100                    STQ     CONT_EXISTS,,AUTO

     1775    15708    3      DO WHILE( CONT$ < DEV_STOP$  AND NOT CONT_EXISTS );

  15708  4 000274   000320 710000 4                  TRA     s:15715

     1776    15709    3         IF KL$CONTROLLER.CONT# = CONT# THEN

  15709  4 000275   200005 470500                    LDP0    CONT$,,AUTO
         4 000276   000100 101500                    MRL     fill='000'O
         4 000277   000002 000001                    ADSC9   2,,PR0                   cn=0,n=1
         4 000300   200036 000004                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=4
         4 000301   200036 236100                    LDQ     LINE_NAME+6,,AUTO
         4 000302   200014 116100                    CMPQ    CONT#,,AUTO
         4 000303   000310 601000 4                  TNZ     s:15712

     1777    15710    3            CONT_EXISTS = AS_TRUE;

  15710  4 000304   000000 236000 xsym               LDQ     AS_TRUE
         4 000305   400000 376003                    ANQ     -131072,DU
         4 000306   200025 756100                    STQ     CONT_EXISTS,,AUTO
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:321  
         4 000307   000320 710000 4                  TRA     s:15715

     1778    15711    4         ELSE DO;

     1779    15712    4            CONT_INDEX = KL$CONTROLLER.BLKHDR.NSUBS;

  15712  4 000310   000100 101500                    MRL     fill='000'O
         4 000311   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         4 000312   200017 000004                    ADSC9   CONT_INDEX,,AUTO         cn=0,n=4

     1780    15713    4           CONT$ = PINCRW( CONT$, SIZEW(KL$CONTROLLER)+(CONT_INDEX*SIZEW(KL$LINEDEV)))
             15713                     ;

  15713  4 000313   200017 236100                    LDQ     CONT_INDEX,,AUTO
         4 000314   000024 736000                    QLS     20
         4 000315   000004 036003                    ADLQ    4,DU
         4 000316   200005 036100                    ADLQ    CONT$,,AUTO
         4 000317   200005 756100                    STQ     CONT$,,AUTO

     1781    15714    4            END;

     1782    15715    3         END;

  15715  4 000320   200005 236100                    LDQ     CONT$,,AUTO
         4 000321   200021 116100                    CMPQ    DEV_STOP$,,AUTO
         4 000322   000325 603000 4                  TRC     s:15716
         4 000323   200025 234100                    SZN     CONT_EXISTS,,AUTO
         4 000324   000275 605000 4                  TPL     s:15709

     1783    15716    3      IF NOT CONT_EXISTS THEN DO;

  15716  4 000325   200025 234100                    SZN     CONT_EXISTS,,AUTO
         4 000326   000345 604000 4                  TMI     s:15739

     1784    15717        /*E*  ERROR:  ASR-E$CONT_NO_EXIST2-C
     1785    15718              MESSAGE: Controller %U1 does not exist.
     1786    15719        */
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:322  
     1787    15720    3         AS_FIELD1.COUNT = OUT$SYM.COUNT;

  15720  4 000327   200007 470500                    LDP0    BLK$,,AUTO
         4 000330   000004 236100                    LDQ     4,,PR0
         4 000331   000000 552040 xsym               STBQ    AS_FIELD1,'40'O

     1788    15721    3         AS_FIELD1.TEXT  = OUT$SYM.TEXT;

  15721  4 000332   000004 236100                    LDQ     4,,PR0
         4 000333   000033 772000                    QRL     27
         4 000334   000000 620006                    EAX0    0,QL
         4 000335   040000 100540                    MLR     fill='040'O
         4 000336   000004 200010                    ADSC9   4,,PR0                   cn=1,n=*X0
         4 000337   000000 200050 xsym               ADSC9   AS_FIELD1                cn=1,n=40

     1789    15722              %SCREAM( ERR#=E$CONT_NO_EXIST2, LEVEL=WARN, MID='R' );

  15732  4 000340   000012 630400 5                  EPPR0   10
         4 000341   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000342   000000 701000 xent               TSX1    ASH$WARN
         4 000343   000000 011000                    NOP     0

     1790    15737    3         RETURN;

  15737  4 000344   000000 702200 xent               TSX2  ! X66_ARET

     1791    15738    3         END;
     1792    15739    2      IF CONTROLLER THEN

  15739  4 000345   200023 234100                    SZN     CONTROLLER,,AUTO
         4 000346   000352 605000 4                  TPL     s:15742

     1793    15740    2         CALL REMOVE_CONTROLLER;

  15740  4 000347   000436 701000 4                  TSX1    REMOVE_CONTROLLER
         4 000350   000000 011000                    NOP     0
         4 000351   000354 710000 4                  TRA     s:15743
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:323  

     1794    15741    2      ELSE
     1795    15742    2         CALL REMOVE_DEVICE ALTRET(EXIT#);

  15742  4 000352   000624 701000 4                  TSX1    REMOVE_DEVICE
         4 000353   000364 702000 4                  TSX2    EXIT#

     1796    15743    2      CALL ASB$WRITE_HLP( DSEG1$, ARS ) ALTRET( WRITE_LINE_ERR );

  15743  4 000354   200010 630500                    EPPR0   ARS,,AUTO
         4 000355   200037 450500                    STP0    LINE_NAME+7,,AUTO
         4 000356   000003 236000 5                  LDQ     3
         4 000357   200036 756100                    STQ     LINE_NAME+6,,AUTO
         4 000360   200036 630500                    EPPR0   LINE_NAME+6,,AUTO
         4 000361   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000362   000000 701000 xent               TSX1    ASB$WRITE_HLP
         4 000363   000431 702000 4                  TSX2    DEL_ERR

     1797    15744    2      END;

     1798    15745    1   EXIT#:
     1799    15746    1   CALL ASB$DEQ_HLP ALTRET( DEQ_ERR ) ;

  15746  4 000364   000002 631400 xsym  EXIT#        EPPR1   B_VECTNIL+2
         4 000365   000000 701000 xent               TSX1    ASB$DEQ_HLP
         4 000366   000435 702000 4                  TSX2    ENQ_ERR

     1800    15747                                                              /* All done */
     1801    15748    1   RETURN ;

  15748  4 000367   000000 702200 xent               TSX2  ! X66_ARET

  15738  4 000370                       NETCON_ERR   null
     1802    15749                                                              /*  Errors  */
     1803    15750    1   NETCON_ERR:;
     1804    15751    1   ERR_CODE = B$TCB$->B$TCB.ALT$->B$ALT.ERR;

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:324  
  15751  4 000370   000000 470400 xsym               LDP0    B$TCB$
         4 000371   000000 471500                    LDP1    0,,PR0
         4 000372   100102 236100                    LDQ     66,,PR1
         4 000373   000000 756000 xsym               STQ     ERR_CODE

     1805    15752    1   CALL ASH$ERROR(ERR_CODE);

  15752  4 000374   000013 630400 5                  EPPR0   11
         4 000375   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000376   000000 701000 xent               TSX1    ASH$ERROR
         4 000377   000000 011000                    NOP     0

     1806    15753    1   RETURN;

  15753  4 000400   000000 702200 xent               TSX2  ! X66_ARET

  15751  4 000401                       READ_LINE_E* null
     1807    15754                                                              /**/
     1808    15755    1   READ_LINE_ERR: ;
     1809    15756    2   IF MERR_CODE.CODE = %E$LD THEN DO;

  15756  4 000401   000000 236000 xsym               LDQ     ERR_CODE
         4 000402   377770 376007                    ANQ     131064,DL
         4 000403   000070 116007                    CMPQ    56,DL
         4 000404   000412 601000 4                  TNZ     s:15761

     1810    15757    2      CALL ASB$GET_MORE_SEG( 1, 4096 ) ALTRET( GETSEG_ERR );

  15757  4 000405   000015 630400 5                  EPPR0   13
         4 000406   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000407   000000 701000 xent               TSX1    ASB$GET_MORE_SEG
         4 000410   000034 702000 4                  TSX2    GETSEG_ERR

     1811    15758    2      GOTO READ_LINE_REC;

  15758  4 000411   000107 710000 4                  TRA     READ_LINE_REC

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:325  
     1812    15759    2      END;
     1813    15760    1   ELSE
     1814    15761    2      IF MERR_CODE.CODE = %E$NOKEY THEN DO;

  15761  4 000412   001020 116007                    CMPQ    528,DL
         4 000413   000424 601000 4                  TNZ     s:15783

     1815    15762        /*E* ERROR:   ASR-E$LINE_NO_EXIST2-C
     1816    15763             MESSAGE: Line %U1 does not exist.
     1817    15764        */
     1818    15765    2         AS_FIELD1 = LINE_NAME;

  15765  4 000414   000000 100500                    MLR     fill='000'O
         4 000415   200030 000011                    ADSC9   LINE_NAME,,AUTO          cn=0,n=9
         4 000416   000000 000051 xsym               ADSC9   AS_FIELD1                cn=0,n=41

     1819    15766              %SCREAM( ERR#=E$LINE_NO_EXIST2, MID='R', LEVEL=WARN );

  15776  4 000417   000017 630400 5                  EPPR0   15
         4 000420   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000421   000000 701000 xent               TSX1    ASH$WARN
         4 000422   000000 011000                    NOP     0

     1820    15781    2         END;

  15781  4 000423   000430 710000 4                  TRA     s:15785

     1821    15782    2      ELSE DO;

     1822    15783    2         CALL ASA$ERROR( USERS_KEY, E$UNABLE_TO_READ_HLP );

  15783  4 000424   000021 630400 5                  EPPR0   17
         4 000425   000020 631400 xsym               EPPR1   B_VECTNIL+16
         4 000426   000000 701000 xent               TSX1    ASA$ERROR
         4 000427   000000 011000                    NOP     0

     1823    15784    2         END;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:326  

     1824    15785    1   RETURN;

  15785  4 000430   000000 702200 xent               TSX2  ! X66_ARET

  15783  4 000431                       DEL_ERR      null
  15783  4 000431                       WRITE_LINE_* null
     1825    15786
     1826    15787    1   DEL_ERR: ;
     1827    15788    1   WRITE_LINE_ERR: ;
     1828    15789    1   CALL ASH$ERROR( ERR_CODE );

  15789  4 000431   000013 630400 5                  EPPR0   11
         4 000432   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000433   000000 701000 xent               TSX1    ASH$ERROR
         4 000434   000000 011000                    NOP     0

  15783  4 000435                       ENQ_ERR      null
  15783  4 000435                       DEQ_ERR      null
     1829    15790    1   ENQ_ERR: ;
     1830    15791    1   DEQ_ERR: ;
     1831    15792    1   RETURN;

  15792  4 000435   000000 702200 xent               TSX2  ! X66_ARET

     1832    15793
     1833    15794        %EJECT;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:327  
     1834    15795    1   REMOVE_CONTROLLER: PROC;

  15795  4 000436   200034 741300       REMOVE_CONT* STX1  ! LINE_NAME+4,,AUTO

     1835    15796
     1836    15797
     1837    15798        /*E*  ERROR:  ASR-E$CONT_REMOVED-C
     1838    15799              MESSAGE:.... Controller %U1 for line %U2 removed.
     1839    15800        */
     1840    15801    2   CONT# = KL$CONTROLLER.CONT#;

  15801  4 000437   200005 470500                    LDP0    CONT$,,AUTO
         4 000440   000100 101500                    MRL     fill='000'O
         4 000441   000002 000001                    ADSC9   2,,PR0                   cn=0,n=1
         4 000442   200014 000004                    ADSC9   CONT#,,AUTO              cn=0,n=4

     1841    15802        %NUMBER( NUM1=CONT# );
             15810    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, CONT# );

  15810  4 000443   200014 631500                    EPPR1   CONT#,,AUTO
         4 000444   200041 451500                    STP1    LINE_NAME+9,,AUTO
         4 000445   000023 236000 5                  LDQ     19
         4 000446   200040 756100                    STQ     LINE_NAME+8,,AUTO
         4 000447   000024 237000 5                  LDAQ    20
         4 000450   200036 757100                    STAQ    LINE_NAME+6,,AUTO
         4 000451   200036 630500                    EPPR0   LINE_NAME+6,,AUTO
         4 000452   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000453   000000 701000 xent               TSX1    ASB$BINCHAR
         4 000454   000000 011000                    NOP     0

     1842    15832    2   AS_FIELD2 = LINE_NAME;

  15832  4 000455   000000 100500                    MLR     fill='000'O
         4 000456   200030 000011                    ADSC9   LINE_NAME,,AUTO          cn=0,n=9
         4 000457   000000 000051 xsym               ADSC9   AS_FIELD2                cn=0,n=41

     1843    15833        %SCREAM( ERR#=E$CONT_REMOVED, LEVEL=INFO, MID='R' );
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:328  

  15841  4 000460   000026 630400 5                  EPPR0   22
         4 000461   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000462   000000 701000 xent               TSX1    ASH$INFO
         4 000463   000000 011000                    NOP     0

     1844    15848
     1845    15849    2   DEV$ = PINCRW( CONT$, SIZEW(KL$CONTROLLER));

  15849  4 000464   200005 236100                    LDQ     CONT$,,AUTO
         4 000465   000004 036003                    ADLQ    4,DU
         4 000466   200004 756100                    STQ     DEV$,,AUTO

     1846    15850    2   PTR$ = PINCRW(DEV$, KL$CONTROLLER.BLKHDR.NSUBS*SIZEW(KL$LINEDEV));

  15850  4 000467   200005 470500                    LDP0    CONT$,,AUTO
         4 000470   000100 101500                    MRL     fill='000'O
         4 000471   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         4 000472   200036 000002                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=2
         4 000473   200036 220100                    LDX0    LINE_NAME+6,,AUTO
         4 000474   000000 636010                    EAQ     0,X0
         4 000475   000002 736000                    QLS     2
         4 000476   200004 036100                    ADLQ    DEV$,,AUTO
         4 000477   200003 756100                    STQ     PTR$,,AUTO

     1847    15851    2   DONE = '0'B;

  15851  4 000500   200027 450100                    STZ     DONE,,AUTO

     1848    15852    3   IF KL$CONTROLLER.BLKHDR.NSUBS > 0 THEN DO;

  15852  4 000501   000100 101500                    MRL     fill='000'O
         4 000502   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         4 000503   200036 000004                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=4
         4 000504   200036 236100                    LDQ     LINE_NAME+6,,AUTO
         4 000505   000000 116003                    CMPQ    0,DU
         4 000506   000553 600000 4                  TZE     s:15911
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:329  

     1849    15853    4      DO WHILE( DEV$ < PTR$  AND  NOT DONE );

  15853  4 000507   000546 710000 4                  TRA     s:15908

     1850    15854    5         IF KL$LINEDEV.CONTROLLER# = CONT# THEN DO;

  15854  4 000510   200004 470500                    LDP0    DEV$,,AUTO
         4 000511   000100 101500                    MRL     fill='000'O
         4 000512   000002 000001                    ADSC9   2,,PR0                   cn=0,n=1
         4 000513   200036 000004                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=4
         4 000514   200036 236100                    LDQ     LINE_NAME+6,,AUTO
         4 000515   200014 116100                    CMPQ    CONT#,,AUTO
         4 000516   000544 601000 4                  TNZ     s:15907

     1851    15855        /*E*  ERROR:  ASR-E$CONT_DEV_REMOVED-C
     1852    15856              MESSAGE:...... Device %U1 removed.
     1853    15857        */
     1854    15858    5            DEV# = KL$LINEDEV.DEVICE#;

  15858  4 000517   000100 101500                    MRL     fill='000'O
         4 000520   000002 200001                    ADSC9   2,,PR0                   cn=1,n=1
         4 000521   200015 000004                    ADSC9   DEV#,,AUTO               cn=0,n=4

     1855    15859                 %NUMBER( NUM1=DEV# );
             15867    5         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, DEV# );

  15867  4 000522   200015 631500                    EPPR1   DEV#,,AUTO
         4 000523   200041 451500                    STP1    LINE_NAME+9,,AUTO
         4 000524   000023 236000 5                  LDQ     19
         4 000525   200040 756100                    STQ     LINE_NAME+8,,AUTO
         4 000526   000024 237000 5                  LDAQ    20
         4 000527   200036 757100                    STAQ    LINE_NAME+6,,AUTO
         4 000530   200036 630500                    EPPR0   LINE_NAME+6,,AUTO
         4 000531   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000532   000000 701000 xent               TSX1    ASB$BINCHAR
         4 000533   000000 011000                    NOP     0
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:330  

     1856    15889                 %SCREAM( ERR#=E$CONT_DEV_REMOVED, LEVEL=INFO, MID='R' );

  15897  4 000534   000027 630400 5                  EPPR0   23
         4 000535   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 000536   000000 701000 xent               TSX1    ASH$INFO
         4 000537   000000 011000                    NOP     0

     1857    15904    5            DEV$ = PINCRW(DEV$, SIZEW(KL$LINEDEV));

  15904  4 000540   200004 236100                    LDQ     DEV$,,AUTO
         4 000541   000004 036003                    ADLQ    4,DU
         4 000542   200004 756100                    STQ     DEV$,,AUTO

     1858    15905    5            END;

  15905  4 000543   000546 710000 4                  TRA     s:15908

     1859    15906    4         ELSE
     1860    15907    4            DONE = '1'B;

  15907  4 000544   400000 236003                    LDQ     -131072,DU
         4 000545   200027 756100                    STQ     DONE,,AUTO

     1861    15908    4         END;

  15908  4 000546   200004 236100                    LDQ     DEV$,,AUTO
         4 000547   200003 116100                    CMPQ    PTR$,,AUTO
         4 000550   000553 603000 4                  TRC     s:15911
         4 000551   200027 234100                    SZN     DONE,,AUTO
         4 000552   000510 605000 4                  TPL     s:15854

     1862    15909    3      END;

     1863    15910
     1864    15911    3   IF NOT LINE THEN DO;

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:331  
  15911  4 000553   200022 234100                    SZN     LINE,,AUTO
         4 000554   000622 604000 4                  TMI     s:15923

     1865    15912    3      MOVE_SIZE = POFFW(DEV_STOP$,PTR$) * 4;

  15912  4 000555   200003 235100                    LDA     PTR$,,AUTO
         4 000556   000022 771000                    ARL     18
         4 000557   200036 755100                    STA     LINE_NAME+6,,AUTO
         4 000560   200021 236100                    LDQ     DEV_STOP$,,AUTO
         4 000561   000022 772000                    QRL     18
         4 000562   200036 136100                    SBLQ    LINE_NAME+6,,AUTO
         4 000563   000002 736000                    QLS     2
         4 000564   200013 756100                    STQ     MOVE_SIZE,,AUTO

     1866    15913    3      KL$DREC.NWINFO = KL$DREC.NWINFO - POFFW(PTR$, CONT$);

  15913  4 000565   200005 235100                    LDA     CONT$,,AUTO
         4 000566   000022 771000                    ARL     18
         4 000567   200036 755100                    STA     LINE_NAME+6,,AUTO
         4 000570   200003 236100                    LDQ     PTR$,,AUTO
         4 000571   000022 772000                    QRL     18
         4 000572   200036 136100                    SBLQ    LINE_NAME+6,,AUTO
         4 000573   200037 756100                    STQ     LINE_NAME+7,,AUTO
         4 000574   000000 470400 xsym               LDP0    DSEG1$
         4 000575   000017 236100                    LDQ     15,,PR0
         4 000576   200037 136100                    SBLQ    LINE_NAME+7,,AUTO
         4 000577   000017 756100                    STQ     15,,PR0

     1867    15914    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO * 4;

  15914  4 000600   000017 235100                    LDA     15,,PR0
         4 000601   000002 735000                    ALS     2
         4 000602   000100 035007                    ADLA    64,DL
         4 000603   200010 755100                    STA     ARS,,AUTO

     1868    15915    4      IF MOVE_SIZE > 0 THEN DO;

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:332  
  15915  4 000604   200013 235100                    LDA     MOVE_SIZE,,AUTO
         4 000605   000622 600000 4                  TZE     s:15923

     1869    15916    4         KL$DREC.LN.BLKHDR.NSUBS = KL$DREC.LN.BLKHDR.NSUBS  - 1;

  15916  4 000606   000020 236100                    LDQ     16,,PR0
         4 000607   000777 036003                    ADLQ    511,DU
         4 000610   000020 552120                    STBQ    16,'20'O,PR0

     1870    15917    4         IF MOVE_SIZE > 0 THEN

  15917  4 000611   000000 115003                    CMPA    0,DU
         4 000612   000622 600000 4                  TZE     s:15923

     1871    15918    4            CONT$->MOVE$TEMP = PTR$->MOVE$TEMP;

  15918  4 000613   200003 471500                    LDP1    PTR$,,AUTO
         4 000614   000000 620005                    EAX0    0,AL
         4 000615   200005 473500                    LDP3    CONT$,,AUTO
         4 000616   200013 721100                    LXL1    MOVE_SIZE,,AUTO
         4 000617   040140 100540                    MLR     fill='040'O
         4 000620   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 000621   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     1872    15919    4         END; /*   Size > 0  */

     1873    15920    3      END;

     1874    15921
     1875    15922
     1876    15923    2   END REMOVE_CONTROLLER;

  15923  4 000622   200034 221300                    LDX1  ! LINE_NAME+4,,AUTO
         4 000623   000001 702211                    TSX2  ! 1,X1

     1877    15924        %EJECT;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:333  
     1878    15925    1   REMOVE_DEVICE: PROC ALTRET;

  15925  4 000624   200034 741300       REMOVE_DEVI* STX1  ! LINE_NAME+4,,AUTO

     1879    15926
     1880    15927
     1881    15928    2   BLK$ = P$NODE.SUBLK$(0);

  15928  4 000625   000000 470400 xsym               LDP0    NODE$
         4 000626   000003 236100                    LDQ     3,,PR0
         4 000627   200007 756100                    STQ     BLK$,,AUTO

     1882    15929    2   CALL CHARBIN(DEV#, OUT$SYM.TEXT);

  15929  4 000630   200007 471500                    LDP1    BLK$,,AUTO
         4 000631   100004 236100                    LDQ     4,,PR1
         4 000632   000033 772000                    QRL     27
         4 000633   000000 620006                    EAX0    0,QL
         4 000634   000100 305540                    DTB
         4 000635   100004 230010                    NDSC9   4,,PR1                   cn=1,s=nosgn,sf=0,n=*X0
         4 000636   200036 000010                    NDSC9   LINE_NAME+6,,AUTO        cn=0,s=lsgnf,sf=0,n=8
         4 000637   200037 235100                    LDA     LINE_NAME+7,,AUTO
         4 000640   200015 755100                    STA     DEV#,,AUTO

     1883    15930    3   IF DEV# > 31 THEN DO;

  15930  4 000641   000040 115007                    CMPA    32,DL
         4 000642   000651 602000 4                  TNC     s:15953

     1884    15931        /*E*  ERROR:  ASR-E$BAD_CONT_DEV_NUM-C
     1885    15932              MESSAGE: Invalid DEVICE number.
     1886    15933              MESSAGE1: A DEVICE number must be between 0 and 31.
     1887    15934        */
     1888    15935           %SCREAM( ERR#=E$BAD_CONT_DEV_NUM, LEVEL=ERROR, MID='R' );

  15947  4 000643   000030 630400 5                  EPPR0   24
         4 000644   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:334  
         4 000645   000000 701000 xent               TSX1    ASH$ERROR
         4 000646   000000 011000                    NOP     0

     1889    15950    3      ALTRETURN;

  15950  4 000647   200034 221300                    LDX1  ! LINE_NAME+4,,AUTO
         4 000650   000000 702211                    TSX2  ! 0,X1

     1890    15951    3      END;
     1891    15952
     1892    15953    2   DEV$ = PINCRW( CONT$, SIZEW( KL$CONTROLLER));

  15953  4 000651   200005 236100                    LDQ     CONT$,,AUTO
         4 000652   000004 036003                    ADLQ    4,DU
         4 000653   200004 756100                    STQ     DEV$,,AUTO

     1893    15954    2   DONE = '0'B;

  15954  4 000654   200027 450100                    STZ     DONE,,AUTO

     1894    15955    2   FOUND = '0'B;

  15955  4 000655   200026 450100                    STZ     FOUND,,AUTO

     1895    15956    2   TEMP$ = PINCRW( DEV$, KL$CONTROLLER.BLKHDR.NSUBS*SIZEW(KL$LINEDEV));

  15956  4 000656   200005 473500                    LDP3    CONT$,,AUTO
         4 000657   000100 101500                    MRL     fill='000'O
         4 000660   300000 200001                    ADSC9   0,,PR3                   cn=1,n=1
         4 000661   200036 000002                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=2
         4 000662   200036 220100                    LDX0    LINE_NAME+6,,AUTO
         4 000663   000000 636010                    EAQ     0,X0
         4 000664   000002 736000                    QLS     2
         4 000665   200004 036100                    ADLQ    DEV$,,AUTO
         4 000666   200006 756100                    STQ     TEMP$,,AUTO

     1896    15957    3   DO WHILE( DEV$ < TEMP$  AND  NOT FOUND  AND  NOT DONE );
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:335  

  15957  4 000667   000725 710000 4                  TRA     s:15965

     1897    15958    3      IF KL$LINEDEV.CONTROLLER# = CONT# AND KL$LINEDEV.DEVICE# = DEV# THEN

  15958  4 000670   200004 470500                    LDP0    DEV$,,AUTO
         4 000671   000100 101500                    MRL     fill='000'O
         4 000672   000002 000001                    ADSC9   2,,PR0                   cn=0,n=1
         4 000673   200036 000004                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=4
         4 000674   200036 236100                    LDQ     LINE_NAME+6,,AUTO
         4 000675   200014 116100                    CMPQ    CONT#,,AUTO
         4 000676   000710 601000 4                  TNZ     s:15961
         4 000677   000100 101500                    MRL     fill='000'O
         4 000700   000002 200001                    ADSC9   2,,PR0                   cn=1,n=1
         4 000701   200037 000004                    ADSC9   LINE_NAME+7,,AUTO        cn=0,n=4
         4 000702   200037 236100                    LDQ     LINE_NAME+7,,AUTO
         4 000703   200015 116100                    CMPQ    DEV#,,AUTO
         4 000704   000710 601000 4                  TNZ     s:15961

     1898    15959    3         FOUND = '1'B;

  15959  4 000705   400000 236003                    LDQ     -131072,DU
         4 000706   200026 756100                    STQ     FOUND,,AUTO
         4 000707   000725 710000 4                  TRA     s:15965

     1899    15960    3      ELSE
     1900    15961    3         IF KL$LINEDEV.DEVICE# > DEV# THEN

  15961  4 000710   000100 101500                    MRL     fill='000'O
         4 000711   000002 200001                    ADSC9   2,,PR0                   cn=1,n=1
         4 000712   200036 000004                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=4
         4 000713   200036 236100                    LDQ     LINE_NAME+6,,AUTO
         4 000714   200015 116100                    CMPQ    DEV#,,AUTO
         4 000715   000722 602000 4                  TNC     s:15964
         4 000716   000722 600000 4                  TZE     s:15964

     1901    15962    3            DONE = '1'B;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:336  

  15962  4 000717   400000 236003                    LDQ     -131072,DU
         4 000720   200027 756100                    STQ     DONE,,AUTO
         4 000721   000725 710000 4                  TRA     s:15965

     1902    15963    3         ELSE
     1903    15964    3            DEV$ = PINCRW(DEV$, SIZEW(KL$LINEDEV));

  15964  4 000722   200004 236100                    LDQ     DEV$,,AUTO
         4 000723   000004 036003                    ADLQ    4,DU
         4 000724   200004 756100                    STQ     DEV$,,AUTO

     1904    15965    3      END;

  15965  4 000725   200004 236100                    LDQ     DEV$,,AUTO
         4 000726   200006 116100                    CMPQ    TEMP$,,AUTO
         4 000727   000734 603000 4                  TRC     s:15975
         4 000730   200026 234100                    SZN     FOUND,,AUTO
         4 000731   000734 604000 4                  TMI     s:15975
         4 000732   200027 234100                    SZN     DONE,,AUTO
         4 000733   000670 605000 4                  TPL     s:15958

     1905    15966
     1906    15967        %NUMBER( NUM1=DEV#, NUM2=CONT# );
             15975    2         CALL ASB$BINCHAR( AS_FIELD1.TEXT, 0, -1, DEV# );

  15975  4 000734   200015 630500                    EPPR0   DEV#,,AUTO
         4 000735   200041 450500                    STP0    LINE_NAME+9,,AUTO
         4 000736   000023 236000 5                  LDQ     19
         4 000737   200040 756100                    STQ     LINE_NAME+8,,AUTO
         4 000740   000024 237000 5                  LDAQ    20
         4 000741   200036 757100                    STAQ    LINE_NAME+6,,AUTO
         4 000742   200036 630500                    EPPR0   LINE_NAME+6,,AUTO
         4 000743   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000744   000000 701000 xent               TSX1    ASB$BINCHAR
         4 000745   000000 011000                    NOP     0

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:337  
             15983    2         CALL ASB$BINCHAR( AS_FIELD2.TEXT, 0, -2, CONT# );

  15983  4 000746   200014 630500                    EPPR0   CONT#,,AUTO
         4 000747   200041 450500                    STP0    LINE_NAME+9,,AUTO
         4 000750   000032 236000 5                  LDQ     26
         4 000751   200040 756100                    STQ     LINE_NAME+8,,AUTO
         4 000752   000034 237000 5                  LDAQ    28
         4 000753   200036 757100                    STAQ    LINE_NAME+6,,AUTO
         4 000754   200036 630500                    EPPR0   LINE_NAME+6,,AUTO
         4 000755   000022 631400 xsym               EPPR1   B_VECTNIL+18
         4 000756   000000 701000 xent               TSX1    ASB$BINCHAR
         4 000757   000000 011000                    NOP     0

     1907    15997    2   AS_FIELD3 = LINE_NAME;

  15997  4 000760   000000 100500                    MLR     fill='000'O
         4 000761   200030 000011                    ADSC9   LINE_NAME,,AUTO          cn=0,n=9
         4 000762   000000 000051 xsym               ADSC9   AS_FIELD3                cn=0,n=41

     1908    15998    3   IF FOUND THEN DO;

  15998  4 000763   200026 234100                    SZN     FOUND,,AUTO
         4 000764   001040 605000 4                  TPL     s:16040

     1909    15999    3      PTR$ = PINCRW(DEV$, SIZEW(KL$LINEDEV));

  15999  4 000765   200004 236100                    LDQ     DEV$,,AUTO
         4 000766   000004 036003                    ADLQ    4,DU
         4 000767   200003 756100                    STQ     PTR$,,AUTO

     1910    16000    3      MOVE_SIZE = POFFW(DEV_STOP$, PTR$) * 4;

  16000  4 000770   200003 235100                    LDA     PTR$,,AUTO
         4 000771   000022 771000                    ARL     18
         4 000772   200036 755100                    STA     LINE_NAME+6,,AUTO
         4 000773   200021 236100                    LDQ     DEV_STOP$,,AUTO
         4 000774   000022 772000                    QRL     18
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:338  
         4 000775   200036 136100                    SBLQ    LINE_NAME+6,,AUTO
         4 000776   000002 736000                    QLS     2
         4 000777   200013 756100                    STQ     MOVE_SIZE,,AUTO

     1911    16001    3      KL$DREC.NWINFO = KL$DREC.NWINFO - SIZEW(KL$LINEDEV);

  16001  4 001000   000000 470400 xsym               LDP0    DSEG1$
         4 001001   000017 235100                    LDA     15,,PR0
         4 001002   000004 135007                    SBLA    4,DL
         4 001003   000017 755100                    STA     15,,PR0

     1912    16002    3      ARS = LENGTHC(KL_DREC_CNT) + KL$DREC.NWINFO * 4;

  16002  4 001004   000017 235100                    LDA     15,,PR0
         4 001005   000002 735000                    ALS     2
         4 001006   000100 035007                    ADLA    64,DL
         4 001007   200010 755100                    STA     ARS,,AUTO

     1913    16003    3      IF MOVE_SIZE > 0 THEN

  16003  4 001010   000000 116003                    CMPQ    0,DU
         4 001011   001021 600000 4                  TZE     s:16016

     1914    16004    3         DEV$->MOVE$TEMP = PTR$->MOVE$TEMP;

  16004  4 001012   200003 471500                    LDP1    PTR$,,AUTO
         4 001013   000000 620006                    EAX0    0,QL
         4 001014   200004 473500                    LDP3    DEV$,,AUTO
         4 001015   200013 721100                    LXL1    MOVE_SIZE,,AUTO
         4 001016   040140 100540                    MLR     fill='040'O
         4 001017   100000 000010                    ADSC9   0,,PR1                   cn=0,n=*X0
         4 001020   300000 000011                    ADSC9   0,,PR3                   cn=0,n=*X1

     1915    16005        /*E*  ERROR:  ASR-E$LINEDEV_REMOVED-C
     1916    16006              MESSAGE: Device %U1 for line %U3 controller %U2 removed.
     1917    16007        */
     1918    16008           %SCREAM( ERR#=E$LINEDEV_REMOVED, LEVEL=INFO, MID='R' );
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:339  

  16016  4 001021   000036 630400 5                  EPPR0   30
         4 001022   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001023   000000 701000 xent               TSX1    ASH$INFO
         4 001024   000000 011000                    NOP     0

     1919    16023    3      KL$CONTROLLER.BLKHDR.NSUBS = KL$CONTROLLER.BLKHDR.NSUBS - 1;

  16023  4 001025   200005 470500                    LDP0    CONT$,,AUTO
         4 001026   000100 101500                    MRL     fill='000'O
         4 001027   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1
         4 001030   200037 000004                    ADSC9   LINE_NAME+7,,AUTO        cn=0,n=4
         4 001031   200037 236100                    LDQ     LINE_NAME+7,,AUTO
         4 001032   000001 136007                    SBLQ    1,DL
         4 001033   200036 756100                    STQ     LINE_NAME+6,,AUTO
         4 001034   000100 101500                    MRL     fill='000'O
         4 001035   200036 000004                    ADSC9   LINE_NAME+6,,AUTO        cn=0,n=4
         4 001036   000000 200001                    ADSC9   0,,PR0                   cn=1,n=1

     1920    16024    3      END;

  16024  4 001037   001044 710000 4                  TRA     s:16047

     1921    16025    3   ELSE DO;

     1922    16026        /*E*  ERROR:  ASR-E$LINEDEV_NO_EXIST1-C
     1923    16027              MESSAGE: Device %U1 does not exist.
     1924    16028              MESSAGE1: Device %U1 for line %U3 controller %U2, does not exist.
     1925    16029        */
     1926    16030           %SCREAM( ERR#=E$LINEDEV_NO_EXIST1, LEVEL=WARN, MID='R' );

  16040  4 001040   000037 630400 5                  EPPR0   31
         4 001041   000017 631400 xsym               EPPR1   B_VECTNIL+15
         4 001042   000000 701000 xent               TSX1    ASH$WARN
         4 001043   000000 011000                    NOP     0

     1927    16045    3      END;
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:340  

     1928    16046                                                              /**/
     1929    16047    2   END REMOVE_DEVICE;

  16047  4 001044   200034 221300                    LDX1  ! LINE_NAME+4,,AUTO
         4 001045   000001 702211                    TSX2  ! 1,X1
     1930    16048
     1931    16049
     1932    16050
     1933    16051
     1934    16052    1   END ASR$R_LINE_CONT;

PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:341  
--  Include file information  --

   AS_SUPER_R.:E05TOU  cannot be made into a system file and is referenced.
   XU_FORMAT_C.:E05TOU  is referenced.
   XU_MACRO_C.:E05TOU  is referenced.
   KL_SUPER_C.:E05TOU  is referenced.
   AS_MAC_C.:E05TOU  cannot be made into a system file and is referenced.
   AS_SUBS_C.:E05TOU  is referenced.
   AS_SUPER_C.:E05TOU  is referenced.
   AS_ENTRIES_M.:E05TOU  is referenced.
   B_ERRORS_C.:E05TOU  is referenced.
   KL_CONFIG_M.:E05TOU  is referenced.
   AS_PERR_C.:E05TOU  is referenced.
   CP_6.:E05TOU  cannot be made into a system file and is referenced.
   B$JIT_C.:E05TOU  was found in the system file and is never referenced.
   CP_6_C.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure ASR$R_LINE_CONT.
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:342  

 **** Variables and constants ****

  ****  Section 002  Data  ASR$R_LINE_CONT

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w STRC(162)   r     1 KL_TERM_KEY                0-0-0/w STRC(90)    r     1 LINE_KEY

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    10-0-0/w UBIN        r     1 ARS                        7-0-0/w PTR         r     1 BLK$
    14-0-0/w UBIN        r     1 CONT#                      5-0-0/w PTR         r     1 CONT$
    23-0-0/b BIT         r     1 CONTROLLER                25-0-0/b BIT         r     1 CONT_EXISTS
    17-0-0/w UBIN        r     1 CONT_INDEX                15-0-0/w UBIN        r     1 DEV#
     4-0-0/w PTR         r     1 DEV$                      24-0-0/b BIT         r     1 DEVICE
    16-0-0/w UBIN        r     1 DEV_SIZEW                 20-0-0/w PTR         r     1 DEV_START$
    21-0-0/w PTR         r     1 DEV_STOP$                 27-0-0/b BIT         r     1 DONE
    26-0-0/b BIT         r     1 FOUND                     22-0-0/b BIT         r     1 LINE
    30-0-0/c STRC(81)    r     1 LINE_NAME                 13-0-0/w UBIN        r     1 MOVE_SIZE
     3-0-0/w PTR         r     1 PTR$                       6-0-0/w PTR         r     1 TEMP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/b BIT         r     1 AS_FALSE                   0-0-0/w STRC(369)   r     1 AS_FIELD1
     0-0-0/w STRC(369)   r     1 AS_FIELD2                  0-0-0/w STRC(369)   r     1 AS_FIELD3
     0-0-0/b BIT         r     1 AS_TRUE                    0-0-0/w PTR         r     1 B$TCB$
     0-0-0/w PTR         r     1 DSEG1$                     0-0-0/w UBIN        r     1 DSEG1SIZE
     0-0-0/b BIT         r     1 DSEG_FLG                   0-0-0/b STRC        r     1 ERR_CODE
     0-0-0/w STRC(576)   r     1 KL_DREC_CNT                0-0-0/b STRC        r     1 MERR_CODE
     0-0-0/w PTR         r     1 NODE$                      0-0-0/c STRC(378)   r     1 USERS_KEY
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:343  

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(2448)  r     1 B$ALT                      0-0-0/w STRC(144)   r     1 B$TCB
     0-0-0/c STRC(144)   r     1 KL$CONTROLLER              0-0-0/w STRC(684)   r     1 KL$DREC
     0-0-0/c STRC(144)   r     1 KL$LINEDEV                 0-0-0/c ACHR        r     1 MOVE$TEMP
     0-0-0/w ASTR(153)   r     1 OUT$SYM                    0-0-0/w STRC(144)   r     1 P$NODE


   Procedure ASR$R_LINE_CONT requires 550 words for executable code.
   Procedure ASR$R_LINE_CONT requires 34 words of local(AUTO) storage.

    No errors detected in file ASR$R_HLP.:E05TSI    .
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:344  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:345  
          MINI XREF LISTING

ARS
     14764**DCL     15613<<ASSIGN  15614<>CALL    15743<>CALL    15914<<ASSIGN  16002<<ASSIGN
ASA$ERROR
     14881**DCL-ENT 15783--CALL
ASA_BRKS_LOC
     11901**DCL     11901--REDEF
ASB$BINCHAR
      5565**DCL-ENT 15810--CALL    15867--CALL    15975--CALL    15983--CALL
ASB$CLOSE_NETCON
     14878**DCL-ENT 15675--CALL
ASB$DELREC_HLP
     14845**DCL-ENT 15666--CALL
ASB$DELREC_NETCON
     14875**DCL-ENT 15668--CALL
ASB$DEQ_HLP
     14857**DCL-ENT 15746--CALL
ASB$ENQ_HLP
     14854**DCL-ENT 15610--CALL
ASB$GETSEG
     14848**DCL-ENT 15559--CALL
ASB$GET_MORE_SEG
     14851**DCL-ENT 15757--CALL
ASB$READ_HLP
     14869**DCL-ENT 15614--CALL
ASB$WRITE_HLP
     14872**DCL-ENT 15743--CALL
ASH$ERROR
     14860**DCL-ENT 15574--CALL    15601--CALL    15632--CALL    15701--CALL    15752--CALL    15789--CALL
     15947--CALL
ASH$INFO
     14866**DCL-ENT 15654--CALL    15841--CALL    15897--CALL    16016--CALL
ASH$WARN
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:346  
     14863**DCL-ENT 15732--CALL    15776--CALL    16040--CALL
AS_DEFAULT.BANNER_PERM
     12594**DCL     12595--REDEF
AS_DEFAULT.BUDGET.MACCT
     12499**DCL     12503--REDEF
AS_DEFAULT.BUDGET.MAX_PROJECTS
     12512**DCL     12515--REDEF
AS_DEFAULT.BUDGET.PACCUM
     12495**DCL     12497--REDEF
AS_DEFAULT.BUDGET.PMAXC
     12490**DCL     12492--REDEF
AS_DEFAULT.SETUP_CHRA.TXT
     12610**DCL     12611--REDEF   12612--REDEF
AS_DEFAULT_DREC.PASSWORD
     13864**DCL     13868--REDEF
AS_DEFAULT_DREC.RENAME
     13887**DCL     13888--REDEF
AS_DFLT.BANNER_PERM
     12416**DCL     12417--REDEF
AS_DFLT.BUDGET.MACCT
     12321**DCL     12325--REDEF
AS_DFLT.BUDGET.MAX_PROJECTS
     12334**DCL     12337--REDEF
AS_DFLT.BUDGET.PACCUM
     12317**DCL     12319--REDEF
AS_DFLT.BUDGET.PMAXC
     12312**DCL     12314--REDEF
AS_DFLT.SETUP_CHRA.TXT
     12432**DCL     12433--REDEF   12434--REDEF
AS_FALSE
     11761**DCL     15707>>ASSIGN
AS_FE_MODE
     11767**DCL     11768--REDEF
AS_FIELD1
     11897**DCL     15619<<ASSIGN  15645<<ASSIGN  15765<<ASSIGN
AS_FIELD1.COUNT
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:347  
     11898**DCL     15720<<ASSIGN
AS_FIELD1.TEXT
     11898**DCL     15721<<ASSIGN  15810<>CALL    15867<>CALL    15975<>CALL
AS_FIELD2
     11898**DCL     15832<<ASSIGN
AS_FIELD2.TEXT
     11898**DCL     15983<>CALL
AS_FIELD3
     11898**DCL     15997<<ASSIGN
AS_MODE
     11764**DCL     11766--REDEF
AS_MOD_USER.ACCESS
     14629**DCL     14630--REDEF
AS_MOD_USER.BANNER
     14616**DCL     14617--REDEF
AS_MOD_USER.BANNER_PERM
     14618**DCL     14619--REDEF
AS_MOD_USER.BILL
     14624**DCL     14625--REDEF
AS_MOD_USER.CPROC
     14620**DCL     14621--REDEF
AS_MOD_USER.FEBILL
     14700**DCL     14701--REDEF
AS_MOD_USER.FECXTMEM
     14717**DCL     14718--REDEF
AS_MOD_USER.FEMINTS
     14702**DCL     14703--REDEF
AS_MOD_USER.FEMMEM
     14713**DCL     14714--REDEF
AS_MOD_USER.FEMTIME
     14711**DCL     14712--REDEF
AS_MOD_USER.FEPPRIV
     14708**DCL     14710--REDEF
AS_MOD_USER.FEPRIV
     14705**DCL     14707--REDEF
AS_MOD_USER.FORCE_BIT
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:348  
     14614**DCL     14615--REDEF
AS_MOD_USER.KEY
     14696**DCL     14698--REDEF
AS_MOD_USER.LASTCPROC
     14622**DCL     14623--REDEF
AS_MOD_USER.LIMITS.DO_
     14670**DCL     14671--REDEF
AS_MOD_USER.LIMITS.FPOOLS
     14686**DCL     14687--REDEF
AS_MOD_USER.LIMITS.LO
     14666**DCL     14667--REDEF
AS_MOD_USER.LIMITS.MEM
     14662**DCL     14663--REDEF
AS_MOD_USER.LIMITS.MPRIO
     14690**DCL     14691--REDEF
AS_MOD_USER.LIMITS.PDIS
     14678**DCL     14679--REDEF
AS_MOD_USER.LIMITS.PO
     14674**DCL     14675--REDEF
AS_MOD_USER.LIMITS.TDIS
     14682**DCL     14683--REDEF
AS_MOD_USER.LIMITS.TIME
     14658**DCL     14659--REDEF
AS_MOD_USER.MAXENQ
     14639**DCL     14640--REDEF
AS_MOD_USER.PERM_BIT
     14612**DCL     14613--REDEF
AS_MOD_USER.PPRIV
     14634**DCL     14636--REDEF
AS_MOD_USER.PRIOB
     14641**DCL     14642--REDEF
AS_MOD_USER.PRIV
     14631**DCL     14633--REDEF
AS_MOD_USER.QUAN
     14637**DCL     14638--REDEF
AS_MOD_USER.SETUP
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:349  
     14610**DCL     14611--REDEF
AS_PROJECT.BANNER_PERM
     12950**DCL     12951--REDEF
AS_PROJECT.BUDGET.MACCT
     12855**DCL     12859--REDEF
AS_PROJECT.BUDGET.MAX_PROJECTS
     12868**DCL     12871--REDEF
AS_PROJECT.BUDGET.PACCUM
     12851**DCL     12853--REDEF
AS_PROJECT.BUDGET.PMAXC
     12846**DCL     12848--REDEF
AS_PROJECT.SETUP_CHRA.TXT
     12966**DCL     12967--REDEF   12968--REDEF
AS_PROJECT_DFLT.BANNER_PERM
     13128**DCL     13129--REDEF
AS_PROJECT_DFLT.BUDGET.MACCT
     13033**DCL     13037--REDEF
AS_PROJECT_DFLT.BUDGET.MAX_PROJECTS
     13046**DCL     13049--REDEF
AS_PROJECT_DFLT.BUDGET.PACCUM
     13029**DCL     13031--REDEF
AS_PROJECT_DFLT.BUDGET.PMAXC
     13024**DCL     13026--REDEF
AS_PROJECT_DFLT.SETUP_CHRA.TXT
     13144**DCL     13145--REDEF   13146--REDEF
AS_PROJECT_DFLT_DREC.PASSWORD
     14350**DCL     14354--REDEF
AS_PROJECT_DFLT_DREC.RENAME
     14373**DCL     14374--REDEF
AS_PROJECT_DREC.PASSWORD
     14188**DCL     14192--REDEF
AS_PROJECT_DREC.RENAME
     14211**DCL     14212--REDEF
AS_PROJ_ADMIN.BANNER_PERM
     12772**DCL     12773--REDEF
AS_PROJ_ADMIN.BUDGET.MACCT
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:350  
     12677**DCL     12681--REDEF
AS_PROJ_ADMIN.BUDGET.MAX_PROJECTS
     12690**DCL     12693--REDEF
AS_PROJ_ADMIN.BUDGET.PACCUM
     12673**DCL     12675--REDEF
AS_PROJ_ADMIN.BUDGET.PMAXC
     12668**DCL     12670--REDEF
AS_PROJ_ADMIN.SETUP_CHRA.TXT
     12788**DCL     12789--REDEF   12790--REDEF
AS_PROJ_ADMIN_DREC.PASSWORD
     14026**DCL     14030--REDEF
AS_PROJ_ADMIN_DREC.RENAME
     14049**DCL     14050--REDEF
AS_TRUE
     11761**DCL     15710>>ASSIGN
AS_USERS.BANNER_PERM
     12238**DCL     12239--REDEF
AS_USERS.BUDGET.MACCT
     12143**DCL     12147--REDEF
AS_USERS.BUDGET.MAX_PROJECTS
     12156**DCL     12159--REDEF
AS_USERS.BUDGET.PACCUM
     12139**DCL     12141--REDEF
AS_USERS.BUDGET.PMAXC
     12134**DCL     12136--REDEF
AS_USERS.SETUP_CHRA.TXT
     12254**DCL     12255--REDEF   12256--REDEF
AS_USERS_CONSTANT.BANNER_PERM
     13306**DCL     13307--REDEF
AS_USERS_CONSTANT.BUDGET.MACCT
     13211**DCL     13215--REDEF
AS_USERS_CONSTANT.BUDGET.MAX_PROJECTS
     13224**DCL     13227--REDEF
AS_USERS_CONSTANT.BUDGET.PACCUM
     13207**DCL     13209--REDEF
AS_USERS_CONSTANT.BUDGET.PMAXC
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:351  
     13202**DCL     13204--REDEF
AS_USERS_CONSTANT.SETUP_CHRA.TXT
     13322**DCL     13323--REDEF   13324--REDEF
B$ALT.CODE
     15541**DCL     15541--REDEF   15542--REDEF   15542--REDEF
B$ALT.ERR
     15542**DCL     15751>>ASSIGN
B$ALT.ERR.ERR#
     15543**DCL     15543--REDEF
B$ALT.EVID
     15542**DCL     15542--REDEF   15542--REDEF
B$TCB.ALT$
     15537**DCL     15751>>ASSIGN
B$TCB$
     15535**DCL     15751>>ASSIGN
BLK$
     14763**DCL     14942--IMP-PTR 15581<<ASSIGN  15583<<ASSIGN  15584>>IF      15606>>ASSIGN  15607>>ASSIGN
     15607>>ASSIGN  15608>>ASSIGN  15608>>ASSIGN  15680<<ASSIGN  15682<<ASSIGN  15683>>CALLBLT 15683>>CALLBLT
     15720>>ASSIGN  15721>>ASSIGN  15721>>ASSIGN  15928<<ASSIGN  15929>>CALLBLT 15929>>CALLBLT
CONT#
     14768**DCL     15683<<CALLBLT 15684>>IF      15709>>IF      15801<<ASSIGN  15810<>CALL    15854>>IF
     15958>>IF      15983<>CALL
CONT$
     14761**DCL     15249--IMP-PTR 15640<<ASSIGN  15661>>DOWHILE 15663>>ASSIGN  15664<<ASSIGN  15664>>ASSIGN
     15708>>DOWHILE 15709>>IF      15712>>ASSIGN  15713<<ASSIGN  15713>>ASSIGN  15801>>ASSIGN  15849>>ASSIGN
     15850>>ASSIGN  15852>>IF      15913>>ASSIGN  15918>>ASSIGN  15953>>ASSIGN  15956>>ASSIGN  16023>>ASSIGN
     16023>>ASSIGN
CONTROLLER
     14775**DCL     15555<<ASSIGN  15679>>IF      15739>>IF
CONT_EXISTS
     14777**DCL     15707<<ASSIGN  15708>>DOWHILE 15710<<ASSIGN  15716>>IF
CONT_INDEX
     14771**DCL     15663<<ASSIGN  15664>>ASSIGN  15712<<ASSIGN  15713>>ASSIGN
DEL_ERR
     15783**LABEL   15666--CALLALT
DEQ_ERR
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:352  
     15783**LABEL   15746--CALLALT
DEV#
     14769**DCL     15858<<ASSIGN  15867<>CALL    15929<<CALLBLT 15930>>IF      15958>>IF      15961>>IF
     15975<>CALL
DEV$
     14760**DCL     15399--IMP-PTR 15849<<ASSIGN  15850>>ASSIGN  15853>>DOWHILE 15854>>IF      15858>>ASSIGN
     15904<<ASSIGN  15904>>ASSIGN  15953<<ASSIGN  15956>>ASSIGN  15957>>DOWHILE 15958>>IF      15958>>IF
     15961>>IF      15964<<ASSIGN  15964>>ASSIGN  15999>>ASSIGN  16004>>ASSIGN
DEVICE
     14776**DCL     15556<<ASSIGN
DEV_SIZEW
     14770**DCL     15638<<ASSIGN  15639>>ASSIGN
DEV_START$
     14772**DCL     15637<<ASSIGN  15638>>ASSIGN  15639>>ASSIGN  15640>>ASSIGN
DEV_STOP$
     14773**DCL     15639<<ASSIGN  15661>>DOWHILE 15708>>DOWHILE 15912>>ASSIGN  16000>>ASSIGN
DONE
     14779**DCL     15851<<ASSIGN  15853>>DOWHILE 15907<<ASSIGN  15954<<ASSIGN  15957>>DOWHILE 15962<<ASSIGN
DSEG1$
     11902**DCL     14988--IMP-PTR 15614<>CALL    15615>>IF      15637>>ASSIGN  15638>>ASSIGN  15638>>ASSIGN
     15743<>CALL    15913>>ASSIGN  15913>>ASSIGN  15914>>ASSIGN  15916>>ASSIGN  15916>>ASSIGN  16001>>ASSIGN
     16001>>ASSIGN  16002>>ASSIGN
DSEG1SIZE
     11903**DCL     15613>>ASSIGN
DSEG_FLG
     11902**DCL     15558>>IF
ENQ_ERR
     15783**LABEL   15610--CALLALT
ERR_CODE
     11896**DCL     11897--REDEF   15751<<ASSIGN  15752<>CALL    15789<>CALL
EXIT#
     15746**LABEL   15742--CALLALT
FOUND
     14778**DCL     15955<<ASSIGN  15957>>DOWHILE 15959<<ASSIGN  15998>>IF
GETSEG_ERR
     15574**LABEL   15757--CALLALT
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:353  
KL$CONTROLLER
     15249**DCL     15664--ASSIGN  15713--ASSIGN  15849--ASSIGN  15953--ASSIGN
KL$CONTROLLER.BLKHDR.NSUBS
     15297**DCL     15663>>ASSIGN  15712>>ASSIGN  15850>>ASSIGN  15852>>IF      15956>>ASSIGN  16023<<ASSIGN
     16023>>ASSIGN
KL$CONTROLLER.CONT#
     15366**DCL     15709>>IF      15801>>ASSIGN
KL$DREC.ATYP
     14993**DCL     15615>>IF
KL$DREC.LN
     15107**DCL     15637--ASSIGN  15637--ASSIGN  15638--ASSIGN
KL$DREC.LN.BLKHDR.NSUBS
     15138**DCL     15916<<ASSIGN  15916>>ASSIGN
KL$DREC.NWINFO
     15086**DCL     15638>>ASSIGN  15913<<ASSIGN  15913>>ASSIGN  15914>>ASSIGN  16001<<ASSIGN  16001>>ASSIGN
     16002>>ASSIGN
KL$DREC.PASSWORD
     15046**DCL     15050--REDEF
KL$DREC.RENAME
     15069**DCL     15070--REDEF
KL$LINEDEV
     15399**DCL     15664--ASSIGN  15713--ASSIGN  15850--ASSIGN  15904--ASSIGN  15956--ASSIGN  15964--ASSIGN
     15999--ASSIGN  16001--ASSIGN
KL$LINEDEV.CONTROLLER#
     15514**DCL     15854>>IF      15958>>IF
KL$LINEDEV.DEVICE#
     15517**DCL     15858>>ASSIGN  15958>>IF      15961>>IF
KL_DEFAULT.PASSWORD
     14512**DCL     14516--REDEF
KL_DEFAULT.RENAME
     14535**DCL     14536--REDEF
KL_DFLT.PASSWORD
     13702**DCL     13706--REDEF
KL_DFLT.RENAME
     13725**DCL     13726--REDEF
KL_DREC.PASSWORD
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:354  
     13540**DCL     13544--REDEF
KL_DREC.RENAME
     13563**DCL     13564--REDEF
KL_DREC_CNT
     13369**DCL     15914--ASSIGN  16002--ASSIGN
KL_DREC_CNT.PASSWORD
     13427**DCL     13431--REDEF
KL_DREC_CNT.RENAME
     13450**DCL     13451--REDEF
KL_TERM_KEY
     14806**DCL     15668--CALL
KL_TERM_KEY.TERMID.TERM
     14827**DCL     14836--REDEF
KL_TERM_KEY.TERMID.TERM.TERM_NAME
     14836**DCL     15667<<ASSIGN
LINE
     14774**DCL     15554<<ASSIGN  15580>>IF      15641>>IF      15911>>IF
LINE_KEY
     14788**DCL     15609>>ASSIGN
LINE_KEY.TXT.LINE
     14791**DCL     15608<<ASSIGN
LINE_NAME
     14780**DCL     15619>>ASSIGN  15645>>ASSIGN  15765>>ASSIGN  15832>>ASSIGN  15997>>ASSIGN
LINE_NAME.COUNT
     14781**DCL     15606<<ASSIGN
LINE_NAME.TEXT
     14782**DCL     15607<<ASSIGN  15667>>ASSIGN
MERR_CODE.CODE
     11897**DCL     15670>>IF      15756>>IF      15761>>IF
MOVE$TEMP
     15533**DCL     15918<<ASSIGN  15918>>ASSIGN  16004<<ASSIGN  16004>>ASSIGN
MOVE_SIZE
     14767**DCL     15533--IMP-SIZ 15912<<ASSIGN  15915>>IF      15917>>IF      15918>>ASSIGN  15918>>ASSIGN
     16000<<ASSIGN  16003>>IF      16004>>ASSIGN  16004>>ASSIGN
NETCON_ERR
     15738**LABEL   15672--GOTO    15675--CALLALT
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:355  
NODE$
     11894**DCL     14895--IMP-PTR 15554>>ASSIGN  15555>>ASSIGN  15556>>ASSIGN  15581>>ASSIGN  15583>>ASSIGN
     15680>>ASSIGN  15682>>ASSIGN  15928>>ASSIGN
OUT$SYM.COUNT
     14965**DCL     14968--IMP-SIZ 15584>>IF      15606>>ASSIGN  15607>>ASSIGN  15608>>ASSIGN  15683>>CALLBLT
     15720>>ASSIGN  15721>>ASSIGN  15929>>CALLBLT
OUT$SYM.TEXT
     14968**DCL     15607>>ASSIGN  15608>>ASSIGN  15683>>CALLBLT 15721>>ASSIGN  15929>>CALLBLT
P$NODE.CODE
     14903**DCL     15554>>ASSIGN  15555>>ASSIGN  15556>>ASSIGN
P$NODE.SUBLK$
     14928**DCL     15581>>ASSIGN  15581>>ASSIGN  15583>>ASSIGN  15583>>ASSIGN  15680>>ASSIGN  15682>>ASSIGN
     15928>>ASSIGN
PROJ_KEY.TEXT
     11774**DCL     11774--REDEF
PROJ_KEY.TXT.PROJECT
     11774**DCL     11774--REDEF
PTR$
     14759**DCL     15850<<ASSIGN  15853>>DOWHILE 15912>>ASSIGN  15913>>ASSIGN  15918>>ASSIGN  15999<<ASSIGN
     16000>>ASSIGN  16004>>ASSIGN
READ_LINE_ERR
     15751**LABEL   15614--CALLALT
READ_LINE_REC
     15613**LABEL   15758--GOTO
REMEM_VAR
     11900**DCL     11900--REDEF
REMOVE_CONTROLLER
     15795**PROC    15662--CALL    15740--CALL
REMOVE_DEVICE
     15925**PROC    15742--CALL
REM_FCMD
     11900**DCL     11901--REDEF
TEMP$
     14762**DCL     15956<<ASSIGN  15957>>DOWHILE
USERS_KEY
     11771**DCL     15609<<ASSIGN  15783<>CALL
PL6.E3A0      #007=ASR$R_LINE_CONT File=ASR$R_HLP.:E05TSI                        TUE 07/29/97 10:56 Page:356  
USERS_KEY.TEXT
     11771**DCL     11772--REDEF   11772--REDEF   11772--REDEF   11773--REDEF
WRITE_LINE_ERR
     15783**LABEL   15743--CALLALT
