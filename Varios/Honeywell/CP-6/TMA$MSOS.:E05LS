VERSION E05

PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:1    
        1        1        /*M* TMA$MSOS - Monitor interface to MSOS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        TMA$UP: PROC ALTRET;
        9        9        /*D*  NAME:  TMA$UP
       10       10              CALL:  CALL TMA$UP ALTRET(ERR);
       11       11              ENVIRONMENT: Monitor Linkage Segment - Used only on DPS 90
       12       12              INPUT: None
       13       13              DESCRIPTION:
       14       14                 This routine is called by TIGR to imform MSOS that the
       15       15              operating system is up and able to communicate with it.
       16       16              The routine loops through each IOP configured on the system and
       17       17              initiates an I/O to the MSOS on that IOP.
       18       18        */
       19       19        %EJECT;
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:2    
       20       20        /**/
       21       21        /* INCLUDE FILES */
       22       22        /**/
       23       23        %INCLUDE NI_DATA_R;
       24      460        %INCLUDE N_FC_C;
       25      497
       26      498        /**/
       27      499        /* EXTERNAL PROCEDURES */
       28      500        /**/
       29      501    1   DCL NIQ$GET ENTRY(1) ALTRET;
       30      502    1   DCL NIO$QUE ENTRY(1) ALTRET;
       31      503    1   DCL NIQ$REL ENTRY(1) ALTRET;
       32      504
       33      505        /**/
       34      506        /* AUTO */
       35      507        /**/
       36      508    1   DCL REQ$ PTR;
       37      509    1   DCL IOM UBIN;
       38      510
       39      511        /**/
       40      512        /* BASED */
       41      513        /**/
       42      514        %N$REQ(NAME=N$REQ);
       43      572        %NI$IOM(NAME=NI$IOM);
       44      577        %EJECT;
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:3    
       45      578
       46      579
       47      580    2      DO IOM=0 TO NI_IOMS-1;
       48      581    3         IF NOT NI$IOM$(IOM)->NI$IOM.STATUS.DOWN THEN DO;
       49      582             /* Send a message to MSOS for each non-partitioned IOP saying CP-6 is up */
       50      583    3            CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);
       51      584    3            REQ$->N$REQ.DLA.DCTX=NI_MAINT_DCTX(IOM);
       52      585    3            REQ$->N$REQ.FC=%N_REWIND;      /* CP6 is up                          */
       53      586    3            CALL NIO$QUE(REQ$->N$REQ) ALTRET(FREE_IT);
       54      587    3            END;
       55      588    2         END;
       56      589    1      RETURN;
       57      590
       58      591    1   FREE_IT:
       59      592    1      CALL NIQ$REL(REQ$);
       60      593    1   HANG_IT_UP:
       61      594    1      ALTRETURN;
       62      595    1   END TMA$UP;
       63      596        %EOD;

PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:4    
--  Include file information  --

   N_FC_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TMA$UP.

   Procedure TMA$UP requires 44 words for executable code.
   Procedure TMA$UP requires 8 words of local(AUTO) storage.

PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:5    

 Object Unit name= TMA$UP                                     File name= TMA$MSOS.:E05TOU
 UTS= JUL 30 '97 06:18:59.68 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    44     54  TMA$UP

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes    yes     yes      Std        0  TMA$UP

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 NIQ$GET
 yes     yes           Std       1 NIO$QUE
 yes     yes           Std       1 NIQ$REL
                       nStd      0 X66_AUTO_0
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
                       nStd      0 X66_AALT
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:6    

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               N$FQ$                                 NI$FQ$
     NI$IBUF$                              NI$IOM$                               NI$RP$
     NI_IOMS                               NI_MAINT_DCTX                         B_VECTNIL
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:7    


        1        1        /*M* TMA$MSOS - Monitor interface to MSOS */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X* THI=1,PLM=3 */
        8        8        TMA$UP: PROC ALTRET;

      8  0 000000   000000 700200 xent  TMA$UP       TSX0  ! X66_AUTO_0
         0 000001   000010 000000                    ZERO    8,0

        9        9        /*D*  NAME:  TMA$UP
       10       10              CALL:  CALL TMA$UP ALTRET(ERR);
       11       11              ENVIRONMENT: Monitor Linkage Segment - Used only on DPS 90
       12       12              INPUT: None
       13       13              DESCRIPTION:
       14       14                 This routine is called by TIGR to imform MSOS that the
       15       15              operating system is up and able to communicate with it.
       16       16              The routine loops through each IOP configured on the system and
       17       17              initiates an I/O to the MSOS on that IOP.
       18       18        */
       19       19        %EJECT;
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:8    
       20       20        /**/
       21       21        /* INCLUDE FILES */
       22       22        /**/
       23       23        %INCLUDE NI_DATA_R;
       24      460        %INCLUDE N_FC_C;
       25      497
       26      498        /**/
       27      499        /* EXTERNAL PROCEDURES */
       28      500        /**/
       29      501    1   DCL NIQ$GET ENTRY(1) ALTRET;
       30      502    1   DCL NIO$QUE ENTRY(1) ALTRET;
       31      503    1   DCL NIQ$REL ENTRY(1) ALTRET;
       32      504
       33      505        /**/
       34      506        /* AUTO */
       35      507        /**/
       36      508    1   DCL REQ$ PTR;
       37      509    1   DCL IOM UBIN;
       38      510
       39      511        /**/
       40      512        /* BASED */
       41      513        /**/
       42      514        %N$REQ(NAME=N$REQ);
       43      572        %NI$IOM(NAME=NI$IOM);
       44      577        %EJECT;
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:9    
       45      578
       46      579
       47      580    2      DO IOM=0 TO NI_IOMS-1;

    580  0 000002   200004 450100                    STZ     IOM,,AUTO
         0 000003   000040 710000 0                  TRA     s:588+3

       48      581    3         IF NOT NI$IOM$(IOM)->NI$IOM.STATUS.DOWN THEN DO;

    581  0 000004   200004 720100                    LXL0    IOM,,AUTO
         0 000005   000000 470410 xsym               LDP0    NI$IOM$,X0
         0 000006   000003 236100                    LDQ     3,,PR0
         0 000007   000040 316007                    CANQ    32,DL
         0 000010   000035 601000 0                  TNZ     s:588

       49      582             /* Send a message to MSOS for each non-partitioned IOP saying CP-6 is up */
       50      583    3            CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);

    583  0 000011   200003 631500                    EPPR1   REQ$,,AUTO
         0 000012   200006 451500                    STP1    IOM+2,,AUTO
         0 000013   200006 630500                    EPPR0   IOM+2,,AUTO
         0 000014   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000015   000000 701000 xent               TSX1    NIQ$GET
         0 000016   000053 702000 0                  TSX2    HANG_IT_UP

       51      584    3            REQ$->N$REQ.DLA.DCTX=NI_MAINT_DCTX(IOM);

    584  0 000017   200004 720100                    LXL0    IOM,,AUTO
         0 000020   200003 470500                    LDP0    REQ$,,AUTO
         0 000021   000000 236010 xsym               LDQ     NI_MAINT_DCTX,X0
         0 000022   000025 736000                    QLS     21
         0 000023   000001 676100                    ERQ     1,,PR0
         0 000024   777770 376003                    ANQ     -8,DU
         0 000025   000001 656100                    ERSQ    1,,PR0

       52      585    3            REQ$->N$REQ.FC=%N_REWIND;      /* CP6 is up                          */

PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:10   
    585  0 000026   200003 470500                    LDP0    REQ$,,AUTO
         0 000027   000006 236007                    LDQ     6,DL
         0 000030   000003 552104                    STBQ    3,'04'O,PR0

       53      586    3            CALL NIO$QUE(REQ$->N$REQ) ALTRET(FREE_IT);

    586  0 000031   200003 630500                    EPPR0   REQ$,,AUTO
         0 000032   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000033   000000 701000 xent               TSX1    NIO$QUE
         0 000034   000045 702000 0                  TSX2    FREE_IT

       54      587    3            END;

       55      588    2         END;

    588  0 000035   200004 235100                    LDA     IOM,,AUTO
         0 000036   000001 035007                    ADLA    1,DL
         0 000037   200004 755100                    STA     IOM,,AUTO
         0 000040   200004 236100                    LDQ     IOM,,AUTO
         0 000041   000044 604000 0                  TMI     s:589
         0 000042   000000 116000 xsym               CMPQ    NI_IOMS
         0 000043   000004 604000 0                  TMI     s:581

       56      589    1      RETURN;

    589  0 000044   000000 702200 xent               TSX2  ! X66_ARET

       57      590
       58      591    1   FREE_IT:
       59      592    1      CALL NIQ$REL(REQ$);

    592  0 000045   200003 630500       FREE_IT      EPPR0   REQ$,,AUTO
         0 000046   200006 450500                    STP0    IOM+2,,AUTO
         0 000047   200006 630500                    EPPR0   IOM+2,,AUTO
         0 000050   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000051   000000 701000 xent               TSX1    NIQ$REL
         0 000052   000000 011000                    NOP     0
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:11   

       60      593    1   HANG_IT_UP:
       61      594    1      ALTRETURN;

    594  0 000053   000000 702200 xent  HANG_IT_UP   TSX2  ! X66_AALT
       62      595    1   END TMA$UP;
       63      596        %EOD;

PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:12   
--  Include file information  --

   N_FC_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   NI_DATA_R.:E05TOU  cannot be made into a system file and is referenced.
      No diagnostics issued in procedure TMA$UP.
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:13   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w UBIN        r     1 IOM                        3-0-0/w PTR         r     1 REQ$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 N$DCT$$                    0-0-0/w PTR         r     1 N$FQ$
     0-0-0/w PTR         r     1 NI$FQ$                     0-0-0/w PTR         r     1 NI$IBUF$
     0-0-0/w PTR         r     1 NI$IOM$(0:3)
     0-0-0/w PTR         r     1 NI$RP$                     0-0-0/w SBIN        r     1 NI_IOMS
     0-0-0/w UBIN        r     1 NI_MAINT_DCTX(0:3)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 N$REQ                      0-0-0/w STRC(252)   r     1 NI$IOM


   Procedure TMA$UP requires 44 words for executable code.
   Procedure TMA$UP requires 8 words of local(AUTO) storage.
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:14   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:15   
          MINI XREF LISTING

FREE_IT
       592**LABEL     586--CALLALT
HANG_IT_UP
       594**LABEL     583--CALLALT
IOM
       509**DCL       580<<DOINDEX   581>>IF        584>>ASSIGN
N$DCT$$
       321**DCL       455--IMP-PTR
N$FQ$
       321**DCL       456--IMP-PTR
N$REQ
       523**DCL       586<>CALL
N$REQ.BUFADDR
       532**DCL       533--REDEF     533--REDEF
N$REQ.DLA.DCTX
       523**DCL       584<<ASSIGN
N$REQ.DLA.DRELADDR
       524**DCL       524--REDEF
N$REQ.DVE.EOMCHAR
       561**DCL       562--REDEF
N$REQ.EAINFO
       555**DCL       555--REDEF
N$REQ.EAINFOX
       555**DCL       556--REDEF
N$REQ.EVNTINFO
       556**DCL       556--REDEF
N$REQ.FC
       526**DCL       585<<ASSIGN
N$REQ.STATUS
       537**DCL       543--REDEF
N$REQ_INIT.BUFADDR
       340**DCL       341--REDEF     341--REDEF
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:16   
N$REQ_INIT.DLA.DRELADDR
       332**DCL       332--REDEF
N$REQ_INIT.DVE.EOMCHAR
       369**DCL       370--REDEF
N$REQ_INIT.EAINFO
       363**DCL       363--REDEF
N$REQ_INIT.EAINFOX
       363**DCL       364--REDEF
N$REQ_INIT.EVNTINFO
       364**DCL       364--REDEF
N$REQ_INIT.STATUS
       345**DCL       351--REDEF
NI$FQ$
       381**DCL       457--IMP-PTR
NI$IBUF$
       381**DCL       457--IMP-PTR
NI$IMXMBX_INIT.PAGED_BASE
       391**DCL       392--REDEF     392--REDEF
NI$IMXMBX_INIT.SIZE
       393**DCL       393--REDEF
NI$IOM.STATUS.DOWN
       574**DCL       581>>IF
NI$IOM$
       403**DCL       581>>IF
NI$REQ_INIT.DCW
       415**DCL       418--REDEF
NI$REQ_INIT.DCW.TALLY
       416**DCL       416--REDEF
NI$REQ_INIT.IDCW.EXTA
       418**DCL       418--REDEF
NI$REQ_INIT.PCW
       420**DCL       424--REDEF
NI$REQ_INIT.SEEK
       425**DCL       426--REDEF     427--REDEF
NI$RP$
       429**DCL       459--IMP-PTR
PL6.E3A0      #001=TMA$UP File=TMA$MSOS.:E05TSI                                  WED 07/30/97 06:18 Page:17   
NIO$QUE
       502**DCL-ENT   586--CALL
NIQ$GET
       501**DCL-ENT   583--CALL
NIQ$REL
       503**DCL-ENT   592--CALL
NI_IOMS
       433**DCL       580>>DOINDEX
NI_MAINT_DCTX
       433**DCL       584>>ASSIGN
NI_MBX_INIT.DCW.CONTROL.AE
       451**DCL       451--REDEF
NI_MBX_INIT.LPW.CONTROL.AE
       447**DCL       447--REDEF
REQ$
       508**DCL       583<>CALL      584>>ASSIGN    585>>ASSIGN    586>>CALL      592<>CALL

PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:18   
       64        1        /*T***********************************************************/
       65        2        /*T*                                                         */
       66        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       67        4        /*T*                                                         */
       68        5        /*T***********************************************************/
       69        6        TMA$MSOS_SPEC: PROC(DCTX,STATUS,JUNK);
       70        7        /*D*   NAME:  TMA$MSOS_SPEC
       71        8               CALL:  CALL TMA$MSOS_SPEC(DCTX,STATUS,SPECINFO);
       72        9               ENVIRONMENT: Monitor Linkage Segment - Interrupt Level - DPS90 only
       73       10               INPUT: DCTX   - DCTX of the channel cited in the special status
       74       11                               word for channel 6.  This value is passed from
       75       12                               the DCT - i.e UBIN(15) UNAL.
       76       13                      STATUS - STATUS word from channel 6. Fields within it
       77       14                               indicate what MSOS is telling us.
       78       15                      SPECINFO - NOT USED.
       79       16               DESCRIPTION:
       80       17                  This routine issues an I/O to MSOS based on the value of
       81       18               STATUS.MSOS_REQ.  Most requests by MSOS will be for System
       82       19               Resource Assign/Release.  When setting up the I/O, this routine
       83       20               also sets the EA routine that will carry on the dialog with MSOS.
       84       21        */
       85       22        %EJECT;
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:19   
       86       23        /**/
       87       24        /* Parameters */
       88       25        /**/
       89       26    1   DCL DCTX UBIN(15) UNAL;  /* DCTX of the interrupting device(hopefully MSOS)   */
       90       27    1   DCL 1 STATUS ALIGNED,                   /* Special status from channel 6      */
       91       28    1         2 PRESENT BIT(1) UNAL,            /* Interrupt is present               */
       92       29    1         2 CHAN UBIN(8) UNAL,         /* Channel requiring service - hopefully 4 */
       93       30    1         2 * BIT(1) UNAL,
       94       31    1         2 DEVNUM UBIN(8) UNAL,            /* Device number - 0 for MSOS         */
       95       32    1         2 * BIT(1) UNAL,
       96       33    1         2 CHAN_STAT UBIN(8) UNAL,         /* New status of channel CHAN         */
       97       34    1         2 * BIT(1) UNAL,
       98       35    1         2 MSOS_REQ UBIN(8) UNAL;          /* What MSOS wants us to do           */
       99       36    1   DCL JUNK UBIN;                     /* This is meaningless to this routine     */
      100       37
      101       38        /**/
      102       39        /* Include files */
      103       40        /**/
      104       41        %INCLUDE N$REQ;
      105      115        %INCLUDE N_FC_C;
      106      152        %INCLUDE TM_DATA_M;
      107      254
      108      255        /**/
      109      256        /* Entries */
      110      257        /**/
      111      258    1   DCL NIQ$GET ENTRY(1) ALTRET;
      112      259    1   DCL NIQ$GETS ENTRY(1) ALTRET;
      113      260    1   DCL NIQ$REL ENTRY(1) ALTRET;
      114      261    1   DCL NIQ$RELS ENTRY(1) ALTRET;
      115      262    1   DCL NIO$QUE ENTRY(1) ALTRET;
      116      263    1   DCL TMA$MSOS_REQ_EA ENTRY(1);
      117      264    1   DCL TMA$IOP_ASGN_EA ENTRY(1);
      118      265
      119      266        /**/
      120      267        /* Symrefs */
      121      268        /**/
      122      269        /**/
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:20   
      123      270        /* Auto and Based */
      124      271        /**/
      125      272    1   DCL REQ$ PTR;
      126      273    1   DCL PTR$ PTR;
      127      274    1   DCL 1 PNTR REDEF PTR$,
      128      275    1         2 WA UBIN(18) UNAL,
      129      276    1         2 *  UBIN(18) UNAL;
      130      277        %N$REQ(NAME=N$REQ,STCLASS="BASED(REQ$)");
      131      335        %TM_CMDBLK(NAME=COMMAND_BLK,STCLASS=BASED);
      132      359
      133      360    2      DO CASE(STATUS.MSOS_REQ);
      134      361    2       CASE(0);                            /* System resource Assign/Release     */
      135      362                                                /* We have to ask MSOS what it wants  */
      136      363    2         CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);
      137      364    2         CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);
      138      365    2         N$REQ.FC=%N_READ;                 /* This function is a dual write/read */
      139      366    2         N$REQ.OPFLG.EA='1'B;
      140      367    2         N$REQ.DLA.DCTX=DCTX;              /* Use DCTX as passed in              */
      141      368    2         N$REQ.EAENTRY=ENTADDR(TMA$MSOS_REQ_EA);
      142      369    2         CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);
      143      370    2         RETURN;
      144      371    2       CASE(1);                            /* IOP Auto reboot                    */
      145      372    2         CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);
      146      373    2         CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);
      147      374    2         N$REQ.FC=%N_READ;                 /* This function is a dual write/read */
      148      375    2         N$REQ.OPFLG.EA='1'B;
      149      376    2         N$REQ.DLA.DCTX=DCTX;              /* Answer the correct IOP             */
      150      377    2         N$REQ.EAENTRY=ENTADDR(TMA$IOP_ASGN_EA);
      151      378    2         PTR$=N$REQ.BUF$;
      152      379    2         N$REQ.BUFADDR=(PNTR.WA+2)*4;      /* This has to be a byte address      */
      153      380                                      /* and we skip the first 2 words of the buffer  */
      154      381    2         N$REQ.PTP=0;
      155      382    2         PINCRW(N$REQ.BUF$,2)->COMMAND_BLK='0'B; /* Zero out the buffer first    */
      156      383    2         PINCRW(N$REQ.BUF$,2)->COMMAND_BLK.IDCW.CODE=%RSP_IOP_RECOV;
               383                  /*Tell MSOS that we know he's sick */
      157      384    2         CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);
      158      385    2         RETURN;
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:21   
      159      386    2       CASE(2);                            /* IOP assign                         */
      160      387                            /* Tell this IOP to unmask interrupts and listen to the OS*/
      161      388    2         CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);
      162      389    2         CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);
      163      390    2         N$REQ.BUF$->COMMAND_BLK.IDCW.CODE=%RSP_UNMSK_IOP;
               390                  /* This is the command to assign this IOP to us */
      164      391    2         PTR$=N$REQ.BUF$;
      165      392    2         N$REQ.BUFADDR=PNTR.WA*4;          /* This has to be a byte address*/
      166      393    2         N$REQ.PTP=0;
      167      394    2         N$REQ.FC=%N_READ;                 /* Do a dual write/read               */
      168      395    2         N$REQ.OPFLG.EA='1'B;
      169      396    2         N$REQ.DLA.DCTX = DCTX;
      170      397    2         N$REQ.EAENTRY=ENTADDR(TMA$IOP_ASGN_EA);/* This ea re-starts the IO system */
      171      398    2         CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);
      172      399    2         RETURN;
      173      400    2   FREE_THEM:
      174      401    2         CALL NIQ$RELS(N$REQ.BUF$);
      175      402    2   FREE_IT:
      176      403    2         CALL NIQ$REL(REQ$);
      177      404    2   HANG_IT_UP:
      178      405    2         RETURN; /*N* We should probably SCREECH here */
      179      406    2       CASE(ELSE);                         /* BEATS ME                           */
      180      407                                                /* SCREECH OR SOMETHING               */
      181      408    2       END;                                /* CASE                               */
      182      409    1   END TMA$MSOS_SPEC;
      183      410        %EOD;

PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:22   
--  Include file information  --

   TM_DATA_M.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$MSOS_SPEC.

   Procedure TMA$MSOS_SPEC requires 151 words for executable code.
   Procedure TMA$MSOS_SPEC requires 10 words of local(AUTO) storage.

PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:23   

 Object Unit name= TMA$MSOS_SPEC                              File name= TMA$MSOS.:E05TOU
 UTS= JUL 30 '97 06:19:12.76 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none   151    227  TMA$MSOS_SPEC

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        3  TMA$MSOS_SPEC

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 NIQ$GET
 yes     yes           Std       1 NIO$QUE
 yes     yes           Std       1 NIQ$RELS
 yes     yes           Std       1 NIQ$REL
 yes     yes           Std       1 NIQ$GETS
         yes           Std       1 TMA$MSOS_REQ_EA
         yes           Std       1 TMA$IOP_ASGN_EA
                       nStd      0 X66_AUTO_3
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:24   

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:25   


       64        1        /*T***********************************************************/
       65        2        /*T*                                                         */
       66        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
       67        4        /*T*                                                         */
       68        5        /*T***********************************************************/
       69        6        TMA$MSOS_SPEC: PROC(DCTX,STATUS,JUNK);

      6  0 000000   000000 700200 xent  TMA$MSOS_SP* TSX0  ! X66_AUTO_3
         0 000001   000012 000003                    ZERO    10,3

       70        7        /*D*   NAME:  TMA$MSOS_SPEC
       71        8               CALL:  CALL TMA$MSOS_SPEC(DCTX,STATUS,SPECINFO);
       72        9               ENVIRONMENT: Monitor Linkage Segment - Interrupt Level - DPS90 only
       73       10               INPUT: DCTX   - DCTX of the channel cited in the special status
       74       11                               word for channel 6.  This value is passed from
       75       12                               the DCT - i.e UBIN(15) UNAL.
       76       13                      STATUS - STATUS word from channel 6. Fields within it
       77       14                               indicate what MSOS is telling us.
       78       15                      SPECINFO - NOT USED.
       79       16               DESCRIPTION:
       80       17                  This routine issues an I/O to MSOS based on the value of
       81       18               STATUS.MSOS_REQ.  Most requests by MSOS will be for System
       82       19               Resource Assign/Release.  When setting up the I/O, this routine
       83       20               also sets the EA routine that will carry on the dialog with MSOS.
       84       21        */
       85       22        %EJECT;
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:26   
       86       23        /**/
       87       24        /* Parameters */
       88       25        /**/
       89       26    1   DCL DCTX UBIN(15) UNAL;  /* DCTX of the interrupting device(hopefully MSOS)   */
       90       27    1   DCL 1 STATUS ALIGNED,                   /* Special status from channel 6      */
       91       28    1         2 PRESENT BIT(1) UNAL,            /* Interrupt is present               */
       92       29    1         2 CHAN UBIN(8) UNAL,         /* Channel requiring service - hopefully 4 */
       93       30    1         2 * BIT(1) UNAL,
       94       31    1         2 DEVNUM UBIN(8) UNAL,            /* Device number - 0 for MSOS         */
       95       32    1         2 * BIT(1) UNAL,
       96       33    1         2 CHAN_STAT UBIN(8) UNAL,         /* New status of channel CHAN         */
       97       34    1         2 * BIT(1) UNAL,
       98       35    1         2 MSOS_REQ UBIN(8) UNAL;          /* What MSOS wants us to do           */
       99       36    1   DCL JUNK UBIN;                     /* This is meaningless to this routine     */
      100       37
      101       38        /**/
      102       39        /* Include files */
      103       40        /**/
      104       41        %INCLUDE N$REQ;
      105      115        %INCLUDE N_FC_C;
      106      152        %INCLUDE TM_DATA_M;
      107      254
      108      255        /**/
      109      256        /* Entries */
      110      257        /**/
      111      258    1   DCL NIQ$GET ENTRY(1) ALTRET;
      112      259    1   DCL NIQ$GETS ENTRY(1) ALTRET;
      113      260    1   DCL NIQ$REL ENTRY(1) ALTRET;
      114      261    1   DCL NIQ$RELS ENTRY(1) ALTRET;
      115      262    1   DCL NIO$QUE ENTRY(1) ALTRET;
      116      263    1   DCL TMA$MSOS_REQ_EA ENTRY(1);
      117      264    1   DCL TMA$IOP_ASGN_EA ENTRY(1);
      118      265
      119      266        /**/
      120      267        /* Symrefs */
      121      268        /**/
      122      269        /**/
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:27   
      123      270        /* Auto and Based */
      124      271        /**/
      125      272    1   DCL REQ$ PTR;
      126      273    1   DCL PTR$ PTR;
      127      274    1   DCL 1 PNTR REDEF PTR$,
      128      275    1         2 WA UBIN(18) UNAL,
      129      276    1         2 *  UBIN(18) UNAL;
      130      277        %N$REQ(NAME=N$REQ,STCLASS="BASED(REQ$)");
      131      335        %TM_CMDBLK(NAME=COMMAND_BLK,STCLASS=BASED);
      132      359
      133      360    2      DO CASE(STATUS.MSOS_REQ);

    360  0 000002   200004 470500                    LDP0    @STATUS,,AUTO
         0 000003   000000 720100                    LXL0    0,,PR0
         0 000004   000377 360003                    ANX0    255,DU
         0 000005   000003 100003                    CMPX0   3,DU
         0 000006   000010 602010 0                  TNC     s:360+6,X0
         0 000007   000226 710000 0                  TRA     s:409
         0 000010   000013 710000 0                  TRA     s:363
         0 000011   000053 710000 0                  TRA     s:372
         0 000012   000134 710000 0                  TRA     s:388

      134      361    2       CASE(0);                            /* System resource Assign/Release     */

      135      362                                                /* We have to ask MSOS what it wants  */
      136      363    2         CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);

    363  0 000013   200006 631500                    EPPR1   REQ$,,AUTO
         0 000014   200010 451500                    STP1    PTR$+1,,AUTO
         0 000015   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000016   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000017   000000 701000 xent               TSX1    NIQ$GET
         0 000020   000225 702000 0                  TSX2    HANG_IT_UP

      137      364    2         CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);

    364  0 000021   200006 236100                    LDQ     REQ$,,AUTO
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:28   
         0 000022   000005 036003                    ADLQ    5,DU
         0 000023   200010 756100                    STQ     PTR$+1,,AUTO
         0 000024   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000025   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000026   000000 701000 xent               TSX1    NIQ$GETS
         0 000027   000217 702000 0                  TSX2    FREE_IT

      138      365    2         N$REQ.FC=%N_READ;                 /* This function is a dual write/read */

    365  0 000030   200006 470500                    LDP0    REQ$,,AUTO
         0 000031   000014 236007                    LDQ     12,DL
         0 000032   000003 552104                    STBQ    3,'04'O,PR0

      139      366    2         N$REQ.OPFLG.EA='1'B;

    366  0 000033   200006 470500                    LDP0    REQ$,,AUTO
         0 000034   000040 236007                    LDQ     32,DL
         0 000035   000004 256100                    ORSQ    4,,PR0

      140      367    2         N$REQ.DLA.DCTX=DCTX;              /* Use DCTX as passed in              */

    367  0 000036   200003 470500                    LDP0    @DCTX,,AUTO
         0 000037   200006 471500                    LDP1    REQ$,,AUTO
         0 000040   003100 060500                    CSL     bolr='003'O
         0 000041   000000 000017                    BDSC    0,,PR0                   by=0,bit=0,n=15
         0 000042   100001 000017                    BDSC    1,,PR1                   by=0,bit=0,n=15

      141      368    2         N$REQ.EAENTRY=ENTADDR(TMA$MSOS_REQ_EA);

    368  0 000043   000000 636000 xent               EAQ     TMA$MSOS_REQ_EA
         0 000044   200006 471500                    LDP1    REQ$,,AUTO
         0 000045   100023 756100                    STQ     19,,PR1

      142      369    2         CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);

    369  0 000046   200006 630500                    EPPR0   REQ$,,AUTO
         0 000047   000017 631400 xsym               EPPR1   B_VECTNIL+15
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:29   
         0 000050   000000 701000 xent               TSX1    NIO$QUE
         0 000051   000210 702000 0                  TSX2    FREE_THEM

      143      370    2         RETURN;

    370  0 000052   000000 702200 xent               TSX2  ! X66_ARET

      144      371    2       CASE(1);                            /* IOP Auto reboot                    */

      145      372    2         CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);

    372  0 000053   200006 631500                    EPPR1   REQ$,,AUTO
         0 000054   200010 451500                    STP1    PTR$+1,,AUTO
         0 000055   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000056   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000057   000000 701000 xent               TSX1    NIQ$GET
         0 000060   000225 702000 0                  TSX2    HANG_IT_UP

      146      373    2         CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);

    373  0 000061   200006 236100                    LDQ     REQ$,,AUTO
         0 000062   000005 036003                    ADLQ    5,DU
         0 000063   200010 756100                    STQ     PTR$+1,,AUTO
         0 000064   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000065   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000066   000000 701000 xent               TSX1    NIQ$GETS
         0 000067   000217 702000 0                  TSX2    FREE_IT

      147      374    2         N$REQ.FC=%N_READ;                 /* This function is a dual write/read */

    374  0 000070   200006 470500                    LDP0    REQ$,,AUTO
         0 000071   000014 236007                    LDQ     12,DL
         0 000072   000003 552104                    STBQ    3,'04'O,PR0

      148      375    2         N$REQ.OPFLG.EA='1'B;

    375  0 000073   200006 470500                    LDP0    REQ$,,AUTO
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:30   
         0 000074   000040 236007                    LDQ     32,DL
         0 000075   000004 256100                    ORSQ    4,,PR0

      149      376    2         N$REQ.DLA.DCTX=DCTX;              /* Answer the correct IOP             */

    376  0 000076   200003 470500                    LDP0    @DCTX,,AUTO
         0 000077   200006 471500                    LDP1    REQ$,,AUTO
         0 000100   003100 060500                    CSL     bolr='003'O
         0 000101   000000 000017                    BDSC    0,,PR0                   by=0,bit=0,n=15
         0 000102   100001 000017                    BDSC    1,,PR1                   by=0,bit=0,n=15

      150      377    2         N$REQ.EAENTRY=ENTADDR(TMA$IOP_ASGN_EA);

    377  0 000103   000000 636000 xent               EAQ     TMA$IOP_ASGN_EA
         0 000104   200006 471500                    LDP1    REQ$,,AUTO
         0 000105   100023 756100                    STQ     19,,PR1

      151      378    2         PTR$=N$REQ.BUF$;

    378  0 000106   100005 236100                    LDQ     5,,PR1
         0 000107   200007 756100                    STQ     PTR$,,AUTO

      152      379    2         N$REQ.BUFADDR=(PNTR.WA+2)*4;      /* This has to be a byte address      */

    379  0 000110   200007 235100                    LDA     PTR$,,AUTO
         0 000111   777777 375003                    ANA     -1,DU
         0 000112   000020 771000                    ARL     16
         0 000113   000010 035007                    ADLA    8,DL
         0 000114   100006 755100                    STA     6,,PR1

      153      380                                      /* and we skip the first 2 words of the buffer  */
      154      381    2         N$REQ.PTP=0;

    381  0 000115   200006 471500                    LDP1    REQ$,,AUTO
         0 000116   100007 450100                    STZ     7,,PR1

      155      382    2         PINCRW(N$REQ.BUF$,2)->COMMAND_BLK='0'B; /* Zero out the buffer first    */
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:31   

    382  0 000117   100005 473500                    LDP3    5,,PR1
         0 000120   000100 100400                    MLR     fill='000'O
         0 000121   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         0 000122   300002 000020                    ADSC9   2,,PR3                   cn=0,n=16

      156      383    2         PINCRW(N$REQ.BUF$,2)->COMMAND_BLK.IDCW.CODE=%RSP_IOP_RECOV;
               383                  /*Tell MSOS that we know he's sick */

    383  0 000123   200006 471500                    LDP1    REQ$,,AUTO
         0 000124   100005 473500                    LDP3    5,,PR1
         0 000125   040000 236003                    LDQ     16384,DU
         0 000126   300005 752140                    STCQ    5,'40'O,PR3

      157      384    2         CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);

    384  0 000127   200006 630500                    EPPR0   REQ$,,AUTO
         0 000130   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000131   000000 701000 xent               TSX1    NIO$QUE
         0 000132   000210 702000 0                  TSX2    FREE_THEM

      158      385    2         RETURN;

    385  0 000133   000000 702200 xent               TSX2  ! X66_ARET

      159      386    2       CASE(2);                            /* IOP assign                         */

      160      387                            /* Tell this IOP to unmask interrupts and listen to the OS*/
      161      388    2         CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);

    388  0 000134   200006 631500                    EPPR1   REQ$,,AUTO
         0 000135   200010 451500                    STP1    PTR$+1,,AUTO
         0 000136   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000137   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000140   000000 701000 xent               TSX1    NIQ$GET
         0 000141   000225 702000 0                  TSX2    HANG_IT_UP

PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:32   
      162      389    2         CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);

    389  0 000142   200006 236100                    LDQ     REQ$,,AUTO
         0 000143   000005 036003                    ADLQ    5,DU
         0 000144   200010 756100                    STQ     PTR$+1,,AUTO
         0 000145   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000146   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000147   000000 701000 xent               TSX1    NIQ$GETS
         0 000150   000217 702000 0                  TSX2    FREE_IT

      163      390    2         N$REQ.BUF$->COMMAND_BLK.IDCW.CODE=%RSP_UNMSK_IOP;
               390                  /* This is the command to assign this IOP to us */

    390  0 000151   200006 470500                    LDP0    REQ$,,AUTO
         0 000152   000005 471500                    LDP1    5,,PR0
         0 000153   150000 236003                    LDQ     53248,DU
         0 000154   100003 752140                    STCQ    3,'40'O,PR1

      164      391    2         PTR$=N$REQ.BUF$;

    391  0 000155   200006 470500                    LDP0    REQ$,,AUTO
         0 000156   000005 236100                    LDQ     5,,PR0
         0 000157   200007 756100                    STQ     PTR$,,AUTO

      165      392    2         N$REQ.BUFADDR=PNTR.WA*4;          /* This has to be a byte address*/

    392  0 000160   200007 235100                    LDA     PTR$,,AUTO
         0 000161   777777 375003                    ANA     -1,DU
         0 000162   000020 771000                    ARL     16
         0 000163   000006 755100                    STA     6,,PR0

      166      393    2         N$REQ.PTP=0;

    393  0 000164   200006 470500                    LDP0    REQ$,,AUTO
         0 000165   000007 450100                    STZ     7,,PR0

      167      394    2         N$REQ.FC=%N_READ;                 /* Do a dual write/read               */
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:33   

    394  0 000166   000014 236007                    LDQ     12,DL
         0 000167   000003 552104                    STBQ    3,'04'O,PR0

      168      395    2         N$REQ.OPFLG.EA='1'B;

    395  0 000170   200006 470500                    LDP0    REQ$,,AUTO
         0 000171   000040 236007                    LDQ     32,DL
         0 000172   000004 256100                    ORSQ    4,,PR0

      169      396    2         N$REQ.DLA.DCTX = DCTX;

    396  0 000173   200003 470500                    LDP0    @DCTX,,AUTO
         0 000174   200006 471500                    LDP1    REQ$,,AUTO
         0 000175   003100 060500                    CSL     bolr='003'O
         0 000176   000000 000017                    BDSC    0,,PR0                   by=0,bit=0,n=15
         0 000177   100001 000017                    BDSC    1,,PR1                   by=0,bit=0,n=15

      170      397    2         N$REQ.EAENTRY=ENTADDR(TMA$IOP_ASGN_EA);/* This ea re-starts the IO system */

    397  0 000200   000000 636000 xent               EAQ     TMA$IOP_ASGN_EA
         0 000201   200006 471500                    LDP1    REQ$,,AUTO
         0 000202   100023 756100                    STQ     19,,PR1

      171      398    2         CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);

    398  0 000203   200006 630500                    EPPR0   REQ$,,AUTO
         0 000204   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000205   000000 701000 xent               TSX1    NIO$QUE
         0 000206   000210 702000 0                  TSX2    FREE_THEM

      172      399    2         RETURN;

    399  0 000207   000000 702200 xent               TSX2  ! X66_ARET

      173      400    2   FREE_THEM:
      174      401    2         CALL NIQ$RELS(N$REQ.BUF$);
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:34   

    401  0 000210   200006 236100       FREE_THEM    LDQ     REQ$,,AUTO
         0 000211   000005 036003                    ADLQ    5,DU
         0 000212   200010 756100                    STQ     PTR$+1,,AUTO
         0 000213   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000214   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000215   000000 701000 xent               TSX1    NIQ$RELS
         0 000216   000000 011000                    NOP     0

      175      402    2   FREE_IT:
      176      403    2         CALL NIQ$REL(REQ$);

    403  0 000217   200006 630500       FREE_IT      EPPR0   REQ$,,AUTO
         0 000220   200010 450500                    STP0    PTR$+1,,AUTO
         0 000221   200010 630500                    EPPR0   PTR$+1,,AUTO
         0 000222   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000223   000000 701000 xent               TSX1    NIQ$REL
         0 000224   000000 011000                    NOP     0

      177      404    2   HANG_IT_UP:
      178      405    2         RETURN; /*N* We should probably SCREECH here */

    405  0 000225   000000 702200 xent  HANG_IT_UP   TSX2  ! X66_ARET

      179      406    2       CASE(ELSE);                         /* BEATS ME                           */

      180      407                                                /* SCREECH OR SOMETHING               */
      181      408    2       END;                                /* CASE                               */

      182      409    1   END TMA$MSOS_SPEC;

    409  0 000226   000000 702200 xent               TSX2  ! X66_ARET
      183      410        %EOD;

PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:35   
--  Include file information  --

   TM_DATA_M.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$MSOS_SPEC.
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:36   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @DCTX                      5-0-0/w PTR         r     1 @JUNK
     4-0-0/w PTR         r     1 @STATUS                   *0-0-0/b UBIN(15)    r     1 DCTX
    *0-0-0/w UBIN        r     1 JUNK                       7-0-0/w STRC        r     1 PNTR
     7-0-0/w PTR         r     1 PTR$                       6-0-0/w PTR         r     1 REQ$
    *0-0-0/w STRC        r     1 STATUS

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 COMMAND_BLK                0-0-0/d STRC(1080)  r     1 N$REQ


   Procedure TMA$MSOS_SPEC requires 151 words for executable code.
   Procedure TMA$MSOS_SPEC requires 10 words of local(AUTO) storage.
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:37   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:38   
          MINI XREF LISTING

COMMAND_BLK
       337**DCL       382<<ASSIGN
COMMAND_BLK.IDCW.CODE
       351**DCL       383<<ASSIGN    390<<ASSIGN
COMMAND_BLK.MLW.FINISH
       341**DCL       342--REDEF
COMMAND_BLK.MLW.START
       339**DCL       340--REDEF
DCTX
        26**DCL         6--PROC      367>>ASSIGN    376>>ASSIGN    396>>ASSIGN
FREE_IT
       403**LABEL     364--CALLALT   373--CALLALT   389--CALLALT
FREE_THEM
       401**LABEL     369--CALLALT   384--CALLALT   398--CALLALT
HANG_IT_UP
       405**LABEL     363--CALLALT   372--CALLALT   388--CALLALT
JUNK
        36**DCL         6--PROC
N$REQ
       286**DCL       369<>CALL      384<>CALL      398<>CALL
N$REQ.BUF$
       295**DCL       364<>CALL      373<>CALL      378>>ASSIGN    382>>ASSIGN    383>>ASSIGN    389<>CALL
       390>>ASSIGN    391>>ASSIGN    401<>CALL
N$REQ.BUFADDR
       295**DCL       296--REDEF     296--REDEF     379<<ASSIGN    392<<ASSIGN
N$REQ.DLA.DCTX
       286**DCL       367<<ASSIGN    376<<ASSIGN    396<<ASSIGN
N$REQ.DLA.DRELADDR
       287**DCL       287--REDEF
N$REQ.DVE.EOMCHAR
       324**DCL       325--REDEF
N$REQ.EAENTRY
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:39   
       317**DCL       368<<ASSIGN    377<<ASSIGN    397<<ASSIGN
N$REQ.EAINFO
       318**DCL       318--REDEF
N$REQ.EAINFOX
       318**DCL       319--REDEF
N$REQ.EVNTINFO
       319**DCL       319--REDEF
N$REQ.FC
       289**DCL       365<<ASSIGN    374<<ASSIGN    394<<ASSIGN
N$REQ.OPFLG.EA
       293**DCL       366<<ASSIGN    375<<ASSIGN    395<<ASSIGN
N$REQ.PTP
       297**DCL       381<<ASSIGN    393<<ASSIGN
N$REQ.STATUS
       300**DCL       306--REDEF
NIO$QUE
       262**DCL-ENT   369--CALL      384--CALL      398--CALL
NIQ$GET
       258**DCL-ENT   363--CALL      372--CALL      388--CALL
NIQ$GETS
       259**DCL-ENT   364--CALL      373--CALL      389--CALL
NIQ$REL
       260**DCL-ENT   403--CALL
NIQ$RELS
       261**DCL-ENT   401--CALL
PNTR.WA
       275**DCL       379>>ASSIGN    392>>ASSIGN
PTR$
       273**DCL       274--REDEF     378<<ASSIGN    391<<ASSIGN
REQ$
       272**DCL       286--IMP-PTR   363<>CALL      364>>CALL      365>>ASSIGN    366>>ASSIGN    367>>ASSIGN
       368>>ASSIGN    369>>CALL      372<>CALL      373>>CALL      374>>ASSIGN    375>>ASSIGN    376>>ASSIGN
       377>>ASSIGN    378>>ASSIGN    379>>ASSIGN    381>>ASSIGN    382>>ASSIGN    383>>ASSIGN    384>>CALL
       388<>CALL      389>>CALL      390>>ASSIGN    391>>ASSIGN    392>>ASSIGN    393>>ASSIGN    394>>ASSIGN
       395>>ASSIGN    396>>ASSIGN    397>>ASSIGN    398>>CALL      401>>CALL      403<>CALL
STATUS
PL6.E3A0      #002=TMA$MSOS_SPEC File=TMA$MSOS.:E05TSI                           WED 07/30/97 06:19 Page:40   
        27**DCL         6--PROC
STATUS.MSOS_REQ
        35**DCL       360>>DOCASE
TMA$IOP_ASGN_EA
       264**DCL-ENT   377--ASSIGN    397--ASSIGN
TMA$MSOS_REQ_EA
       263**DCL-ENT   368--ASSIGN

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:41   
      184        1        /*T***********************************************************/
      185        2        /*T*                                                         */
      186        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      187        4        /*T*                                                         */
      188        5        /*T***********************************************************/
      189        6        TMA$MSOS_REQ_EA: PROC(PAR);
      190        7        /*D*  NAME:  TMA$MSOS_REQ_EA
      191        8              CALL:  CALL TMA$MSOS_REQ_EA(PAR,EAINFO);
      192        9              ENVIRONMENT: Monitor Linkage Segment, Interrupt Level - DPS90 only
      193       10              INPUT: PAR - REQ Packet
      194       11                     EAINFO - Not even picked up.
      195       12              DESCRIPTION:
      196       13                 This routine is the end action for a System Resource Assign/Release
      197       14              operation initiated by MSOS.  It analyzes the 4 word command block
      198       15              passed by MSOS to determine what action should be taken.  After
      199       16              attempting to service MSOS's request, it issues an I/O to MSOS
      200       17              stating whether the operation was performed or not and why not.
      201       18              In addition, it logs the dialog with MSOS via ELA$SYSLOG.
      202       19        */
      203       20        %EJECT;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:42   
      204       21        /*
      205       22                Includes
      206       23        */
      207       24        %INCLUDE                        EL$TABLES ;
      208      347        %INCLUDE                        EL_SUBS_C ;
      209      431        %INCLUDE                        N$REQ ;
      210      505        %INCLUDE                        NI$TABLES ;
      211      721        %INCLUDE                        NI_DATA_C ;
      212      834        %INCLUDE                        N_FC_C ;
      213      871        %INCLUDE                        TM_DATA_M ;
      214      973        /*
      215      974                Parameters
      216      975        */
      217      976    1   DCL 1 PAR                  SBIN PARAM ; /* This is the REQ packet             */
      218      977        /*
      219      978                Entries
      220      979        */
      221      980    1   DCL 1 ELA$SYSLOG                ENTRY(6) ALTRET ;
      222      981    1   DCL 1 HFB$DISPORT               ENTRY(1) ;
      223      982    1   DCL 1 HFC$RTIME                 ENTRY(1) ;
      224      983    1   DCL 1 HFC$STCPU                 ENTRY(1) ;
      225      984    1   DCL 1 HFC$UPDTIME               ENTRY(1) ;
      226      985    1   DCL 1 NIO$QUE                   ENTRY(1) ALTRET ;
      227      986    1   DCL 1 NIQ$GET                   ENTRY(1) ALTRET ;
      228      987    1   DCL 1 NIQ$GETS                  ENTRY(1) ALTRET ;
      229      988    1   DCL 1 NIQ$REL                   ENTRY(1) ALTRET ;
      230      989    1   DCL 1 NIQ$RELS                  ENTRY(1) ALTRET ;
      231      990    1   DCL OCA$KMISC                   ENTRY(1) ALTRET;
      232      991    1   DCL 1 TDU$FINDPATH              ENTRY(6) ALTRET ;
      233      992    1   DCL 1 TMA$RESP_EA               ENTRY(1) ;
      234      993    1   DCL 1 UMT$LCLDATE               ENTRY(3) ALTRET ;
      235      994        /*
      236      995                Symrefs
      237      996        */
      238      997    1   DCL 1 N$DCT$$                   PTR SYMREF ;
      239      998    1   DCL 1 S_MPSTATE(0:7)            UBIN SYMREF ;
      240      999    1   DCL 1 S_PNO                     UBIN SYMREF ;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:43   
      241     1000    1   DCL 1 S_PORTNR(0:7)             UBIN SYMREF ;
      242     1001        /*
      243     1002                Auto
      244     1003        */
      245     1004    1   DCL 1 CMD$                      PTR ALIGNED AUTO ;
      246     1005    1   DCL 1 CPU#                      SBIN ALIGNED AUTO ;
      247     1006    1   DCL 1 DCT$                      PTR ALIGNED AUTO ;
      248     1007    1   DCL 1 DCTX                      UBIN ALIGNED AUTO ;
      249     1008    1   DCL 1 DQH$                      PTR ALIGNED AUTO ;
      250     1009        %EL$MSOSSAYS                    ( NAME=EL$MSOSSAYS, STCLASS=AUTO ) ;
      251     1015        %EL$CP6SAYS                     ( NAME=EL$CP6SAYS,  STCLASS=AUTO ) ;
      252     1021    1   DCL 1 JUNK     UBIN ALIGNED AUTO ; /* Error code if ELA$SYSLOG altreturns     */
      253     1022    1   DCL 1 MPC$                      PTR ALIGNED AUTO ;
      254     1023    1   DCL 1 MSOS_REQUEST              BIT(6) ALIGNED AUTO ;
      255     1024    1   DCL 1 PATH                      ALIGNED AUTO,
      256     1025    1         2 DEV                     UBIN(6) UNAL,
      257     1026    1         2 IOM                     UBIN(3) UNAL,
      258     1027    1         2 CHAN                    UBIN(9) UNAL ;
      259     1028    1   DCL 1 PTR$                      PTR ALIGNED AUTO ;
      260     1029    1   DCL 1 PNTR                      REDEF PTR$ ALIGNED,
      261     1030    1         2 WA                      UBIN(18) UNAL,
      262     1031    1         2 *                       UBIN(18) UNAL ;
      263     1032    1   DCL 1 REQ$                      PTR ALIGNED AUTO ;
      264     1033    1   DCL 1 SQH$                      PTR ALIGNED AUTO ;
      265     1034    1   DCL 1 UPD_TIME           DALIGNED AUTO, /* Used for MSOS DATE/TIME command    */
      266     1035    1         2 MSOS_DATE,                      /* new DATE                           */
      267     1036    1           3 M,
      268     1037    1             4 BYTE1         UBIN(6) UNAL, /* value of 0-1                       */
      269     1038    1             4 BYTE2         UBIN(6) UNAL, /* value of 0-9                       */
      270     1039    1           3 D,
      271     1040    1             4 BYTE1         UBIN(6) UNAL, /* value of 0-3                       */
      272     1041    1             4 BYTE2         UBIN(6) UNAL, /* value of 0-9                       */
      273     1042    1           3 Y,
      274     1043    1             4 BYTE1         UBIN(6) UNAL, /* value of 0-9                       */
      275     1044    1             4 BYTE2         UBIN(6) UNAL, /* value of 0-9                       */
      276     1045    1         2 UTS_DATE        REDEF MSOS_DATE /* UTS for 00:00 of new date          */
      277     1046    1                                   UBIN,
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:44   
      278     1047    1         2 T UBIN  WORD ALIGNED, /* number of 10-microseconds since midnight     */
      279     1048    1         2 CCL      BIT(72) DALIGNED, /* current value of MSOS's calendar clock  */
      280     1049    1         2 NEW_CCL               DALIGNED, /* value to stuff into calendar clock */
      281     1050    1           3 DATE,
      282     1051    1             4 Y                   UBIN(12) UNAL,
      283     1052    1             4 M                   UBIN(6) UNAL,
      284     1053    1             4 D                   UBIN(6) UNAL,
      285     1054    1           3 TIME           BIT(48) UNAL ; /* microseconds since 00:00           */
      286     1055        /*
      287     1056                Based
      288     1057        */
      289     1058        %TM_CMDBLK                      ( NAME=COMMAND_BLK, STCLASS=BASED   ) ;
      290     1082    1   DCL 1 N$DCT$(0:0)               PTR BASED ;
      291     1083        %N$REQ                          ( NAME=N$REQ, STCLASS="BASED(REQ$)" ) ;
      292     1141        %NI$DCT                         ( NAME=NI$DCT,      STCLASS=BASED   ) ;
      293     1189        %NI$DQH                         ( NAME=NI$DQH,      STCLASS=BASED   ) ;
      294     1212        /*
      295     1213                Static
      296     1214        */
      297     1215    1   DCL 1 UPD_DATE         DALIGNED STATIC, /* Used to call UMT$LCLDATE           */
      298     1216    1         2 M(0:1)                  CHAR(1),
      299     1217    1         2 MM                      REDEF M CHAR(2),
      300     1218    1         2 S1                      CHAR(1) INIT('/'),
      301     1219    1         2 D(0:1)                  CHAR(1),
      302     1220    1         2 DD                      REDEF D CHAR(2),
      303     1221    1         2 S2                      CHAR(1) INIT('/'),
      304     1222    1         2 Y(0:1)                  CHAR(1),
      305     1223    1         2 YY                      REDEF Y CHAR(2);
      306     1224
      307     1225    1   DCL UPD_DATE_R REDEF UPD_DATE CHAR(8);
      308     1226    1   DCL 1 DATE STATIC,
      309     1227    1         2 KIN# UBIN(18) UNAL INIT(13),
      310     1228    1         2 CADDR UBIN(18) UNAL INIT(0),
      311     1229    1         2 SYSID UBIN(18) UNAL INIT(0),
      312     1230    1         2 MODE UBIN(18) UNAL INIT(0),
      313     1231    1         2 WSN CHAR(8)  INIT('        ');
      314     1232        %EJECT ;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:45   
      315     1233    1      REQ$=ADDR(PAR);                      /* Set up pointer to packet           */
      316     1234    1      IF N$REQ.STATUS.MAJOR = %LOST_INTERRUPT THEN RETURN; /* It didn't answer us */
      317     1235    1      CMD$=PINCRW(N$REQ.BUF$,6);
      318     1236    1      EL$MSOSSAYS = '0'B;                  /* init the errorlog record           */
      319     1237    1      EL$MSOSSAYS.IOP# = N$REQ.DCT$->NI$DCT.DQH$->NI$DQH.IOCHAN.IOM;
      320     1238    1      EL$MSOSSAYS.MLW = CMD$->COMMAND_BLK.MLW;
      321     1239    1      EL$MSOSSAYS.MLWE = CMD$->COMMAND_BLK.MLWE;
      322     1240    1      EL$MSOSSAYS.IDCWE = CMD$->COMMAND_BLK.IDCWE;
      323     1241    1      EL$MSOSSAYS.IDCW = CMD$->COMMAND_BLK.IDCW;
      324     1242    1      CALL ELA$SYSLOG(EL_MSOSSAYS,EL$MSOSSAYS,SIZEW(EL$MSOSSAYS),'0'B,EL_ERR,JUNK);
      325     1243    1      MSOS_REQUEST=CMD$->COMMAND_BLK.IDCW.CODE; /* Pick up what IT wants         */
      326     1244    1      DCTX=N$REQ.DLA.DCTX;
      327     1245    2      DO SELECT(MSOS_REQUEST);
      328     1246    2         SELECT(%REQ_TIME);
      329     1247                                 /* Somebody changed the time - look in RMS1130-1133  */
      330     1248    2         CALL HFC$RTIME(UPD_TIME);         /* Read reserved .1130-.1133          */
      331     1249    2         CALL BINCHAR(UPD_DATE.M(0),UPD_TIME.MSOS_DATE.M.BYTE1);
      332     1250    2         CALL BINCHAR(UPD_DATE.M(1),UPD_TIME.MSOS_DATE.M.BYTE2);
      333     1251    2         CALL BINCHAR(UPD_DATE.D(0),UPD_TIME.MSOS_DATE.D.BYTE1);
      334     1252    2         CALL BINCHAR(UPD_DATE.D(1),UPD_TIME.MSOS_DATE.D.BYTE2);
      335     1253    2         CALL BINCHAR(UPD_DATE.Y(0),UPD_TIME.MSOS_DATE.Y.BYTE1);
      336     1254    2         CALL BINCHAR(UPD_DATE.Y(1),UPD_TIME.MSOS_DATE.Y.BYTE2);
      337     1255    2         CALL CHARBIN(JUNK,UPD_DATE.YY);
      338     1256    2         IF JUNK < 78 THEN
      339     1257    2            UPD_TIME.NEW_CCL.DATE.Y = JUNK + 2000;
      340     1258    2          ELSE
      341     1259    2            UPD_TIME.NEW_CCL.DATE.Y = JUNK + 1900;
      342     1260    2         CALL CHARBIN(JUNK,UPD_DATE.MM);
      343     1261    2         UPD_TIME.NEW_CCL.DATE.M = JUNK;
      344     1262    2         CALL CHARBIN(JUNK,UPD_DATE.DD);
      345     1263    2         UPD_TIME.NEW_CCL.DATE.D = JUNK;
      346     1264    2         UPD_TIME.NEW_CCL.TIME = '0'B;
      347     1265    2         CALL UMT$LCLDATE(UPD_TIME.UTS_DATE,UPD_DATE,'00:00:00.00');
      348     1266    2         CALL HFC$UPDTIME(UPD_TIME);
      349     1267    2         DATE.WSN= UPD_DATE_R;
      350     1268    2         CALL OCA$KMISC(DATE);
      351     1269    2         CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:46   
      352     1270    2         SELECT(%REQ_MEM_EXPANSION);
      353     1271                                 /* Somebody assigned a MU that was released at boot  */
      354     1272    2         CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);
      355     1273    2         SELECT(%REQ_ASSIGN_EPU);
      356     1274                                 /* We now have another EPU for operator to start     */
      357     1275    2         CPU# = -1;
      358     1276    3         DO JUNK = 0 TO 3;
      359     1277    3            IF CMD$->COMMAND_BLK.IDCW.PROCESSOR = S_PORTNR(JUNK) THEN
      360     1278    3               CPU# = JUNK;
      361     1279    3            END;
      362     1280    3         IF CPU# = -1 THEN DO;
      363     1281    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);
      364     1282    3            END;
      365     1283    3          ELSE DO;
      366     1284    3            S_MPSTATE(CPU#) = 0;
      367     1285    3            CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);
      368     1286    3            END;
      369     1287    2         SELECT(%REQ_ASSIGN_MEM);
      370     1288                            /* We now have another MU that was previously released    */
      371     1289    2         CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);
      372     1290    2         SELECT(%REQ_ASSIGN_DEVICE);
      373     1291    2         PATH.IOM=CMD$->COMMAND_BLK.IDCW.IOP#;
      374     1292    2         PATH.CHAN=CMD$->COMMAND_BLK.IDCW.CHAN;
      375     1293    2         PATH.DEV=CMD$->COMMAND_BLK.IDCW.DEVNUM;
      376     1294    2         CALL TDU$FINDPATH(PATH,'0'B,DCT$,DQH$,SQH$,MPC$)
      377     1295    3          WHENRETURN DO;
      378     1296    3            IF DCT$->NI$DCT.STATUS.DOWN THEN
      379     1297    3               CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);
      380     1298    3             ELSE
      381     1299    3               CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_ASSGND,DCTX,%REAS_USE_RC);
      382     1300    3            END;
      383     1301    3          WHENALTRETURN DO;
      384     1302    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_PER_NCONF,DCTX,%REAS_USE_RC);
      385     1303    3            END;
      386     1304    2         SELECT(%REQ_RELEASE_EPU);
      387     1305                            /* MSOS wants an EPU - give it to him if it is stopped    */
      388     1306    2         CPU# = -1;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:47   
      389     1307    3         DO JUNK = 0 TO 3;
      390     1308    3            IF CMD$->COMMAND_BLK.IDCW.PROCESSOR = S_PORTNR(JUNK) THEN
      391     1309    3               CPU# = JUNK;
      392     1310    3            END;
      393     1311    3         IF CPU# = -1 THEN DO;
      394     1312    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);
      395     1313    3            END;
      396     1314    3          ELSE IF S_MPSTATE(CPU#)~=0 THEN DO; /* Can't release running CPU       */
      397     1315    3               CALL SEND_RESPONSE(%RSP_BUSY,0,DCTX,%REAS_RES_IN_USE);
      398     1316    3               END;
      399     1317    3             ELSE DO;
      400     1318    3               CALL HFB$DISPORT(S_PORTNR(CPU#));
      401     1319    3               CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);
      402     1320    3               END;
      403     1321    2         SELECT(%REQ_RELEASE_MEM1,%REQ_RELEASE_MEM2);
      404     1322                                           /* MSOS wants memory, but we'll refuse it  */
      405     1323    2         CALL SEND_RESPONSE(%RSP_REJECT,%RC_REL_MON,DCTX,%REAS_USE_RC);
      406     1324    2         SELECT(%REQ_RELEASE_DEVICE);
      407     1325    2         PATH.IOM=CMD$->COMMAND_BLK.IDCW.IOP#;
      408     1326    2         PATH.CHAN=CMD$->COMMAND_BLK.IDCW.CHAN;
      409     1327    2         PATH.DEV=CMD$->COMMAND_BLK.IDCW.DEVNUM;
      410     1328    2         CALL TDU$FINDPATH(PATH,'0'B,DCT$,DQH$,SQH$,MPC$)
      411     1329    3          WHENRETURN DO;
      412     1330    3            IF DCT$->NI$DCT.STATUS.DOWN THEN
      413     1331    3               CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);
      414     1332    3             ELSE
      415     1333    3               CALL SEND_RESPONSE(%RSP_BUSY,0,DCTX,%REAS_PER_NOT_PART);
      416     1334    3            END;
      417     1335    3          WHENALTRETURN DO;
      418     1336    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_PER_NCONF,DCTX,%REAS_USE_RC);
      419     1337    3            END;
      420     1338    2         SELECT(ELSE);
      421     1339                                                /*SCREECH*/
      422     1340    2         END;                              /* SELECT                             */
      423     1341    1      CALL NIQ$RELS(N$REQ.BUF$);
      424     1342    1      RETURN;
      425     1343        %EJECT;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:48   
      426     1344    1   SEND_RESPONSE: PROC(CODE,REASON,DCTX,CP6_REASON);
      427     1345    2   DCL CODE BIT(6) ALIGNED;
      428     1346    2   DCL REASON BIT(6) ALIGNED;
      429     1347    2   DCL DCTX UBIN;
      430     1348    2   DCL CP6_REASON UBIN;
      431     1349
      432     1350    2   DCL REQ$ PTR;
      433     1351        %N$REQ(STCLASS="BASED(REQ$)");
      434     1409
      435     1410    2      CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);
      436     1411    2      CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);
      437     1412    2      N$REQ.DLA.DCTX=DCTX;
      438     1413    2      N$REQ.OPFLG.EA='1'B;
      439     1414    2      N$REQ.EAENTRY=ENTADDR(TMA$RESP_EA);
      440     1415    2      N$REQ.FC=%N_READ;     /* Have to do a dual or MSOS dies a horrible death   */
      441     1416    2      PTR$=N$REQ.BUF$;
      442     1417    2      N$REQ.BUFADDR=(PNTR.WA+2)*4;         /* This has to be a byte address      */
      443     1418                                      /* and we skip the first 2 words of the buffer  */
      444     1419    2      N$REQ.PTP=0;
      445     1420    2      PTR$ = PINCRW(PTR$,2);
      446     1421    2      PTR$->COMMAND_BLK='0'B;              /* Zero out the buffer first          */
      447     1422    2      PTR$->COMMAND_BLK.IDCW.INX = CMD$->COMMAND_BLK.IDCW.INX;
              1422               /* Link the answer with the request */
      448     1423    2      PTR$->COMMAND_BLK.IDCW.CODE=CODE; /* This is where MSOS looks for an answer */
      449     1424    2      PTR$->COMMAND_BLK.IDCWE.RC=REASON; /* This is where MSOS looks for a reason */
      450     1425    2      EL$CP6SAYS = '0'B;
      451     1426    2      EL$CP6SAYS.IOP# = N$DCT$$->N$DCT$(DCTX)->NI$DCT.DQH$->NI$DQH.IOCHAN.IOM;
      452     1427    2      EL$CP6SAYS.REASON = CP6_REASON;
      453     1428    2      EL$CP6SAYS.MLW = PTR$->COMMAND_BLK.MLW;
      454     1429    2      EL$CP6SAYS.MLWE = PTR$->COMMAND_BLK.MLWE;
      455     1430    2      EL$CP6SAYS.IDCWE = PTR$->COMMAND_BLK.IDCWE;
      456     1431    2      EL$CP6SAYS.IDCW = PTR$->COMMAND_BLK.IDCW;
      457     1432    2      CALL ELA$SYSLOG(EL_CP6SAYS,EL$CP6SAYS,SIZEW(EL$CP6SAYS),'0'B,EL_ERR,JUNK);
      458     1433    2      CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);
      459     1434    2      RETURN;
      460     1435
      461     1436    2   FREE_THEM:
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:49   
      462     1437    2      CALL NIQ$RELS(N$REQ.BUF$);
      463     1438    2   FREE_IT:
      464     1439    2      CALL NIQ$REL(REQ$);
      465     1440    2   HANG_IT_UP:
      466     1441    2      RETURN; /*N* Should probably try to recover or screech */
      467     1442    2   END SEND_RESPONSE;
      468     1443    1   END TMA$MSOS_REQ_EA;
      469     1444        %EOD;

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:50   
--  Include file information  --

   TM_DATA_M.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$MSOS_REQ_EA.

   Procedure TMA$MSOS_REQ_EA requires 613 words for executable code.
   Procedure TMA$MSOS_REQ_EA requires 44 words of local(AUTO) storage.

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:51   

 Object Unit name= TMA$MSOS_REQ_EA                            File name= TMA$MSOS.:E05TOU
 UTS= JUL 30 '97 06:19:23.52 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Data  even  none     6      6  TMA$MSOS_REQ_EA
    1  RoData even  UTS      3      3  TMA$MSOS_REQ_EA
    2   Proc  even  none   613   1145  TMA$MSOS_REQ_EA
    3  RoData even  none    26     32  TMA$MSOS_REQ_EA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     2      0   yes            yes      Std        1  TMA$MSOS_REQ_EA
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:52   

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       6 ELA$SYSLOG
         yes           Std       1 HFC$RTIME
 yes     yes           Std       3 UMT$LCLDATE
 yes     yes           Std       6 TDU$FINDPATH
 yes     yes           Std       1 NIQ$RELS
         yes           Std       1 HFC$UPDTIME
 yes     yes           Std       1 OCA$KMISC
         yes           Std       1 HFB$DISPORT
 yes     yes           Std       1 NIQ$GET
 yes     yes           Std       1 NIO$QUE
 yes     yes           Std       1 NIQ$REL
 yes     yes           Std       1 NIQ$GETS
         yes           Std       1 TMA$RESP_EA
                       nStd      0 X66_AUTO_1
                       nStd      0 X66_ARET
                       Std       0 B_CONSPOOL_D

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     N$DCT$$                               S_MPSTATE                             S_PORTNR
     B_VECTNIL

  ****  Segment refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     ISSID
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:53   


      184        1        /*T***********************************************************/
      185        2        /*T*                                                         */
      186        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      187        4        /*T*                                                         */
      188        5        /*T***********************************************************/
      189        6        TMA$MSOS_REQ_EA: PROC(PAR);

      6  2 000000   000000 700200 xent  TMA$MSOS_RE* TSX0  ! X66_AUTO_1
         2 000001   000054 000001                    ZERO    44,1

      190        7        /*D*  NAME:  TMA$MSOS_REQ_EA
      191        8              CALL:  CALL TMA$MSOS_REQ_EA(PAR,EAINFO);
      192        9              ENVIRONMENT: Monitor Linkage Segment, Interrupt Level - DPS90 only
      193       10              INPUT: PAR - REQ Packet
      194       11                     EAINFO - Not even picked up.
      195       12              DESCRIPTION:
      196       13                 This routine is the end action for a System Resource Assign/Release
      197       14              operation initiated by MSOS.  It analyzes the 4 word command block
      198       15              passed by MSOS to determine what action should be taken.  After
      199       16              attempting to service MSOS's request, it issues an I/O to MSOS
      200       17              stating whether the operation was performed or not and why not.
      201       18              In addition, it logs the dialog with MSOS via ELA$SYSLOG.
      202       19        */
      203       20        %EJECT;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:54   
      204       21        /*
      205       22                Includes
      206       23        */
      207       24        %INCLUDE                        EL$TABLES ;
      208      347        %INCLUDE                        EL_SUBS_C ;
      209      431        %INCLUDE                        N$REQ ;
      210      505        %INCLUDE                        NI$TABLES ;
      211      721        %INCLUDE                        NI_DATA_C ;
      212      834        %INCLUDE                        N_FC_C ;
      213      871        %INCLUDE                        TM_DATA_M ;
      214      973        /*
      215      974                Parameters
      216      975        */
      217      976    1   DCL 1 PAR                  SBIN PARAM ; /* This is the REQ packet             */
      218      977        /*
      219      978                Entries
      220      979        */
      221      980    1   DCL 1 ELA$SYSLOG                ENTRY(6) ALTRET ;
      222      981    1   DCL 1 HFB$DISPORT               ENTRY(1) ;
      223      982    1   DCL 1 HFC$RTIME                 ENTRY(1) ;
      224      983    1   DCL 1 HFC$STCPU                 ENTRY(1) ;
      225      984    1   DCL 1 HFC$UPDTIME               ENTRY(1) ;
      226      985    1   DCL 1 NIO$QUE                   ENTRY(1) ALTRET ;
      227      986    1   DCL 1 NIQ$GET                   ENTRY(1) ALTRET ;
      228      987    1   DCL 1 NIQ$GETS                  ENTRY(1) ALTRET ;
      229      988    1   DCL 1 NIQ$REL                   ENTRY(1) ALTRET ;
      230      989    1   DCL 1 NIQ$RELS                  ENTRY(1) ALTRET ;
      231      990    1   DCL OCA$KMISC                   ENTRY(1) ALTRET;
      232      991    1   DCL 1 TDU$FINDPATH              ENTRY(6) ALTRET ;
      233      992    1   DCL 1 TMA$RESP_EA               ENTRY(1) ;
      234      993    1   DCL 1 UMT$LCLDATE               ENTRY(3) ALTRET ;
      235      994        /*
      236      995                Symrefs
      237      996        */
      238      997    1   DCL 1 N$DCT$$                   PTR SYMREF ;
      239      998    1   DCL 1 S_MPSTATE(0:7)            UBIN SYMREF ;
      240      999    1   DCL 1 S_PNO                     UBIN SYMREF ;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:55   
      241     1000    1   DCL 1 S_PORTNR(0:7)             UBIN SYMREF ;
      242     1001        /*
      243     1002                Auto
      244     1003        */
      245     1004    1   DCL 1 CMD$                      PTR ALIGNED AUTO ;
      246     1005    1   DCL 1 CPU#                      SBIN ALIGNED AUTO ;
      247     1006    1   DCL 1 DCT$                      PTR ALIGNED AUTO ;
      248     1007    1   DCL 1 DCTX                      UBIN ALIGNED AUTO ;
      249     1008    1   DCL 1 DQH$                      PTR ALIGNED AUTO ;
      250     1009        %EL$MSOSSAYS                    ( NAME=EL$MSOSSAYS, STCLASS=AUTO ) ;
      251     1015        %EL$CP6SAYS                     ( NAME=EL$CP6SAYS,  STCLASS=AUTO ) ;
      252     1021    1   DCL 1 JUNK     UBIN ALIGNED AUTO ; /* Error code if ELA$SYSLOG altreturns     */
      253     1022    1   DCL 1 MPC$                      PTR ALIGNED AUTO ;
      254     1023    1   DCL 1 MSOS_REQUEST              BIT(6) ALIGNED AUTO ;
      255     1024    1   DCL 1 PATH                      ALIGNED AUTO,
      256     1025    1         2 DEV                     UBIN(6) UNAL,
      257     1026    1         2 IOM                     UBIN(3) UNAL,
      258     1027    1         2 CHAN                    UBIN(9) UNAL ;
      259     1028    1   DCL 1 PTR$                      PTR ALIGNED AUTO ;
      260     1029    1   DCL 1 PNTR                      REDEF PTR$ ALIGNED,
      261     1030    1         2 WA                      UBIN(18) UNAL,
      262     1031    1         2 *                       UBIN(18) UNAL ;
      263     1032    1   DCL 1 REQ$                      PTR ALIGNED AUTO ;
      264     1033    1   DCL 1 SQH$                      PTR ALIGNED AUTO ;
      265     1034    1   DCL 1 UPD_TIME           DALIGNED AUTO, /* Used for MSOS DATE/TIME command    */
      266     1035    1         2 MSOS_DATE,                      /* new DATE                           */
      267     1036    1           3 M,
      268     1037    1             4 BYTE1         UBIN(6) UNAL, /* value of 0-1                       */
      269     1038    1             4 BYTE2         UBIN(6) UNAL, /* value of 0-9                       */
      270     1039    1           3 D,
      271     1040    1             4 BYTE1         UBIN(6) UNAL, /* value of 0-3                       */
      272     1041    1             4 BYTE2         UBIN(6) UNAL, /* value of 0-9                       */
      273     1042    1           3 Y,
      274     1043    1             4 BYTE1         UBIN(6) UNAL, /* value of 0-9                       */
      275     1044    1             4 BYTE2         UBIN(6) UNAL, /* value of 0-9                       */
      276     1045    1         2 UTS_DATE        REDEF MSOS_DATE /* UTS for 00:00 of new date          */
      277     1046    1                                   UBIN,
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:56   
      278     1047    1         2 T UBIN  WORD ALIGNED, /* number of 10-microseconds since midnight     */
      279     1048    1         2 CCL      BIT(72) DALIGNED, /* current value of MSOS's calendar clock  */
      280     1049    1         2 NEW_CCL               DALIGNED, /* value to stuff into calendar clock */
      281     1050    1           3 DATE,
      282     1051    1             4 Y                   UBIN(12) UNAL,
      283     1052    1             4 M                   UBIN(6) UNAL,
      284     1053    1             4 D                   UBIN(6) UNAL,
      285     1054    1           3 TIME           BIT(48) UNAL ; /* microseconds since 00:00           */
      286     1055        /*
      287     1056                Based
      288     1057        */
      289     1058        %TM_CMDBLK                      ( NAME=COMMAND_BLK, STCLASS=BASED   ) ;
      290     1082    1   DCL 1 N$DCT$(0:0)               PTR BASED ;
      291     1083        %N$REQ                          ( NAME=N$REQ, STCLASS="BASED(REQ$)" ) ;
      292     1141        %NI$DCT                         ( NAME=NI$DCT,      STCLASS=BASED   ) ;
      293     1189        %NI$DQH                         ( NAME=NI$DQH,      STCLASS=BASED   ) ;
      294     1212        /*
      295     1213                Static
      296     1214        */
      297     1215    1   DCL 1 UPD_DATE         DALIGNED STATIC, /* Used to call UMT$LCLDATE           */
      298     1216    1         2 M(0:1)                  CHAR(1),
      299     1217    1         2 MM                      REDEF M CHAR(2),
      300     1218    1         2 S1                      CHAR(1) INIT('/'),
      301     1219    1         2 D(0:1)                  CHAR(1),
      302     1220    1         2 DD                      REDEF D CHAR(2),
      303     1221    1         2 S2                      CHAR(1) INIT('/'),
      304     1222    1         2 Y(0:1)                  CHAR(1),
      305     1223    1         2 YY                      REDEF Y CHAR(2);
      306     1224
      307     1225    1   DCL UPD_DATE_R REDEF UPD_DATE CHAR(8);
      308     1226    1   DCL 1 DATE STATIC,
      309     1227    1         2 KIN# UBIN(18) UNAL INIT(13),
      310     1228    1         2 CADDR UBIN(18) UNAL INIT(0),
      311     1229    1         2 SYSID UBIN(18) UNAL INIT(0),
      312     1230    1         2 MODE UBIN(18) UNAL INIT(0),
      313     1231    1         2 WSN CHAR(8)  INIT('        ');
      314     1232        %EJECT ;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:57   
      315     1233    1      REQ$=ADDR(PAR);                      /* Set up pointer to packet           */

   1233  2 000002   200003 236100                    LDQ     @PAR,,AUTO
         2 000003   200030 756100                    STQ     REQ$,,AUTO

      316     1234    1      IF N$REQ.STATUS.MAJOR = %LOST_INTERRUPT THEN RETURN; /* It didn't answer us */

   1234  2 000004   200030 470500                    LDP0    REQ$,,AUTO
         2 000005   000014 236100                    LDQ     12,,PR0
         2 000006   170000 376003                    ANQ     61440,DU
         2 000007   100000 116003                    CMPQ    32768,DU
         2 000010   000012 601000 2                  TNZ     s:1235

   1234  2 000011   000000 702200 xent               TSX2  ! X66_ARET

      317     1235    1      CMD$=PINCRW(N$REQ.BUF$,6);

   1235  2 000012   000005 236100                    LDQ     5,,PR0
         2 000013   000006 036003                    ADLQ    6,DU
         2 000014   200004 756100                    STQ     CMD$,,AUTO

      318     1236    1      EL$MSOSSAYS = '0'B;                  /* init the errorlog record           */

   1236  2 000015   000100 100400                    MLR     fill='000'O
         2 000016   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 000017   200011 000024                    ADSC9   EL$MSOSSAYS,,AUTO        cn=0,n=20

      319     1237    1      EL$MSOSSAYS.IOP# = N$REQ.DCT$->NI$DCT.DQH$->NI$DQH.IOCHAN.IOM;

   1237  2 000020   000002 471500                    LDP1    2,,PR0
         2 000021   100023 473500                    LDP3    19,,PR1
         2 000022   300001 236100                    LDQ     1,,PR3
         2 000023   000600 376003                    ANQ     384,DU
         2 000024   000002 736000                    QLS     2
         2 000025   200011 552140                    STBQ    EL$MSOSSAYS,'40'O,AUTO

      320     1238    1      EL$MSOSSAYS.MLW = CMD$->COMMAND_BLK.MLW;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:58   

   1238  2 000026   200004 471500                    LDP1    CMD$,,AUTO
         2 000027   100000 236100                    LDQ     0,,PR1
         2 000030   200012 756100                    STQ     EL$MSOSSAYS+1,,AUTO

      321     1239    1      EL$MSOSSAYS.MLWE = CMD$->COMMAND_BLK.MLWE;

   1239  2 000031   100001 236100                    LDQ     1,,PR1
         2 000032   200013 756100                    STQ     EL$MSOSSAYS+2,,AUTO

      322     1240    1      EL$MSOSSAYS.IDCWE = CMD$->COMMAND_BLK.IDCWE;

   1240  2 000033   100002 236100                    LDQ     2,,PR1
         2 000034   200014 756100                    STQ     EL$MSOSSAYS+3,,AUTO

      323     1241    1      EL$MSOSSAYS.IDCW = CMD$->COMMAND_BLK.IDCW;

   1241  2 000035   100003 236100                    LDQ     3,,PR1
         2 000036   200015 756100                    STQ     EL$MSOSSAYS+4,,AUTO

      324     1242    1      CALL ELA$SYSLOG(EL_MSOSSAYS,EL$MSOSSAYS,SIZEW(EL$MSOSSAYS),'0'B,EL_ERR,JUNK);

   1242  2 000037   200023 633500                    EPPR3   JUNK,,AUTO
         2 000040   200053 453500                    STP3    REQ$+6,,AUTO
         2 000041   000001 236000 3                  LDQ     1
         2 000042   200052 756100                    STQ     REQ$+5,,AUTO
         2 000043   000002 237000 3                  LDAQ    2
         2 000044   200050 757100                    STAQ    REQ$+3,,AUTO
         2 000045   200011 634500                    EPPR4   EL$MSOSSAYS,,AUTO
         2 000046   200047 454500                    STP4    REQ$+2,,AUTO
         2 000047   000004 236000 3                  LDQ     4
         2 000050   200046 756100                    STQ     REQ$+1,,AUTO
         2 000051   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000052   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000053   000000 701000 xent               TSX1    ELA$SYSLOG
         2 000054   000000 011000                    NOP     0

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:59   
      325     1243    1      MSOS_REQUEST=CMD$->COMMAND_BLK.IDCW.CODE; /* Pick up what IT wants         */

   1243  2 000055   200004 470500                    LDP0    CMD$,,AUTO
         2 000056   000003 236100                    LDQ     3,,PR0
         2 000057   770000 376003                    ANQ     -4096,DU
         2 000060   200025 756100                    STQ     MSOS_REQUEST,,AUTO

      326     1244    1      DCTX=N$REQ.DLA.DCTX;

   1244  2 000061   200030 471500                    LDP1    REQ$,,AUTO
         2 000062   100001 236100                    LDQ     1,,PR1
         2 000063   000025 772000                    QRL     21
         2 000064   200007 756100                    STQ     DCTX,,AUTO

      327     1245    2      DO SELECT(MSOS_REQUEST);

   1245  2 000065   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000066   770000 376003                    ANQ     -4096,DU
         2 000067   410000 116003                    CMPQ    -126976,DU
         2 000070   000134 602000 2                  TNC     s:1245+39
         2 000071   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000072   770000 376003                    ANQ     -4096,DU
         2 000073   410000 116003                    CMPQ    -126976,DU
         2 000074   000430 600000 2                  TZE     s:1289
         2 000075   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000076   770000 376003                    ANQ     -4096,DU
         2 000077   600000 116003                    CMPQ    -65536,DU
         2 000100   000127 602000 2                  TNC     s:1245+34
         2 000101   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000102   770000 376003                    ANQ     -4096,DU
         2 000103   600000 116003                    CMPQ    -65536,DU
         2 000104   000543 600000 2                  TZE     s:1306
         2 000105   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000106   770000 376003                    ANQ     -4096,DU
         2 000107   620000 116003                    CMPQ    -57344,DU
         2 000110   000122 602000 2                  TNC     s:1245+29
         2 000111   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:60   
         2 000112   770000 376003                    ANQ     -4096,DU
         2 000113   620000 116003                    CMPQ    -57344,DU
         2 000114   000654 600000 2                  TZE     s:1325
         2 000115   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000116   770000 376003                    ANQ     -4096,DU
         2 000117   640000 116003                    CMPQ    -49152,DU
         2 000120   000754 601000 2                  TNZ     s:1341
         2 000121   000641 710000 2                  TRA     s:1323
         2 000122   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000123   770000 376003                    ANQ     -4096,DU
         2 000124   610000 116003                    CMPQ    -61440,DU
         2 000125   000754 601000 2                  TNZ     s:1341
         2 000126   000641 710000 2                  TRA     s:1323
         2 000127   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000130   770000 376003                    ANQ     -4096,DU
         2 000131   420000 116003                    CMPQ    -122880,DU
         2 000132   000754 601000 2                  TNZ     s:1341
         2 000133   000443 710000 2                  TRA     s:1291
         2 000134   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000135   770000 376003                    ANQ     -4096,DU
         2 000136   070000 116003                    CMPQ    28672,DU
         2 000137   000151 602000 2                  TNC     s:1245+52
         2 000140   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000141   770000 376003                    ANQ     -4096,DU
         2 000142   070000 116003                    CMPQ    28672,DU
         2 000143   000342 600000 2                  TZE     s:1272
         2 000144   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000145   770000 376003                    ANQ     -4096,DU
         2 000146   400000 116003                    CMPQ    -131072,DU
         2 000147   000754 601000 2                  TNZ     s:1341
         2 000150   000355 710000 2                  TRA     s:1275
         2 000151   200025 236100                    LDQ     MSOS_REQUEST,,AUTO
         2 000152   770000 376003                    ANQ     -4096,DU
         2 000153   030000 116003                    CMPQ    12288,DU
         2 000154   000754 601000 2                  TNZ     s:1341
         2 000155   000156 710000 2                  TRA     s:1248

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:61   
      328     1246    2         SELECT(%REQ_TIME);

      329     1247                                 /* Somebody changed the time - look in RMS1130-1133  */
      330     1248    2         CALL HFC$RTIME(UPD_TIME);         /* Read reserved .1130-.1133          */

   1248  2 000156   200032 633500                    EPPR3   UPD_TIME,,AUTO
         2 000157   200046 453500                    STP3    REQ$+1,,AUTO
         2 000160   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000161   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000162   000000 701000 xent               TSX1    HFC$RTIME
         2 000163   000000 011000                    NOP     0

      331     1249    2         CALL BINCHAR(UPD_DATE.M(0),UPD_TIME.MSOS_DATE.M.BYTE1);

   1249  2 000164   200032 236100                    LDQ     UPD_TIME,,AUTO
         2 000165   000036 772000                    QRL     30
         2 000166   000000 235003                    LDA     0,DU
         2 000167   200046 757100                    STAQ    REQ$+1,,AUTO
         2 000170   000000 301500                    BTD
         2 000171   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000172   000000 030001 0                  NDSC9   UPD_DATE                 cn=0,s=nosgn,sf=0,n=1

      332     1250    2         CALL BINCHAR(UPD_DATE.M(1),UPD_TIME.MSOS_DATE.M.BYTE2);

   1250  2 000173   200032 236100                    LDQ     UPD_TIME,,AUTO
         2 000174   000030 772000                    QRL     24
         2 000175   000077 376007                    ANQ     63,DL
         2 000176   000000 235003                    LDA     0,DU
         2 000177   200046 757100                    STAQ    REQ$+1,,AUTO
         2 000200   000000 301500                    BTD
         2 000201   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000202   000000 230001 0                  NDSC9   UPD_DATE                 cn=1,s=nosgn,sf=0,n=1

      333     1251    2         CALL BINCHAR(UPD_DATE.D(0),UPD_TIME.MSOS_DATE.D.BYTE1);

   1251  2 000203   200032 236100                    LDQ     UPD_TIME,,AUTO
         2 000204   000022 772000                    QRL     18
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:62   
         2 000205   000077 376007                    ANQ     63,DL
         2 000206   000000 235003                    LDA     0,DU
         2 000207   200046 757100                    STAQ    REQ$+1,,AUTO
         2 000210   000000 301500                    BTD
         2 000211   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000212   000000 630001 0                  NDSC9   UPD_DATE                 cn=3,s=nosgn,sf=0,n=1

      334     1252    2         CALL BINCHAR(UPD_DATE.D(1),UPD_TIME.MSOS_DATE.D.BYTE2);

   1252  2 000213   200032 236100                    LDQ     UPD_TIME,,AUTO
         2 000214   000014 772000                    QRL     12
         2 000215   000077 376007                    ANQ     63,DL
         2 000216   000000 235003                    LDA     0,DU
         2 000217   200046 757100                    STAQ    REQ$+1,,AUTO
         2 000220   000000 301500                    BTD
         2 000221   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000222   000001 030001 0                  NDSC9   UPD_DATE+1               cn=0,s=nosgn,sf=0,n=1

      335     1253    2         CALL BINCHAR(UPD_DATE.Y(0),UPD_TIME.MSOS_DATE.Y.BYTE1);

   1253  2 000223   200032 236100                    LDQ     UPD_TIME,,AUTO
         2 000224   000006 772000                    QRL     6
         2 000225   000077 376007                    ANQ     63,DL
         2 000226   000000 235003                    LDA     0,DU
         2 000227   200046 757100                    STAQ    REQ$+1,,AUTO
         2 000230   000000 301500                    BTD
         2 000231   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000232   000001 430001 0                  NDSC9   UPD_DATE+1               cn=2,s=nosgn,sf=0,n=1

      336     1254    2         CALL BINCHAR(UPD_DATE.Y(1),UPD_TIME.MSOS_DATE.Y.BYTE2);

   1254  2 000233   200032 236100                    LDQ     UPD_TIME,,AUTO
         2 000234   000077 376007                    ANQ     63,DL
         2 000235   000000 235003                    LDA     0,DU
         2 000236   200046 757100                    STAQ    REQ$+1,,AUTO
         2 000237   000000 301500                    BTD
         2 000240   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:63   
         2 000241   000001 630001 0                  NDSC9   UPD_DATE+1               cn=3,s=nosgn,sf=0,n=1

      337     1255    2         CALL CHARBIN(JUNK,UPD_DATE.YY);

   1255  2 000242   000100 305400                    DTB
         2 000243   000001 430002 0                  NDSC9   UPD_DATE+1               cn=2,s=nosgn,sf=0,n=2
         2 000244   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000245   200047 236100                    LDQ     REQ$+2,,AUTO
         2 000246   200023 756100                    STQ     JUNK,,AUTO

      338     1256    2         IF JUNK < 78 THEN

   1256  2 000247   000116 116007                    CMPQ    78,DL
         2 000250   000255 603000 2                  TRC     s:1259

      339     1257    2            UPD_TIME.NEW_CCL.DATE.Y = JUNK + 2000;

   1257  2 000251   003720 036007                    ADLQ    2000,DL
         2 000252   000030 736000                    QLS     24
         2 000253   200036 752160                    STCQ    UPD_TIME+4,'60'O,AUTO
         2 000254   000260 710000 2                  TRA     s:1260

      340     1258    2          ELSE
      341     1259    2            UPD_TIME.NEW_CCL.DATE.Y = JUNK + 1900;

   1259  2 000255   003554 036007                    ADLQ    1900,DL
         2 000256   000030 736000                    QLS     24
         2 000257   200036 752160                    STCQ    UPD_TIME+4,'60'O,AUTO

      342     1260    2         CALL CHARBIN(JUNK,UPD_DATE.MM);

   1260  2 000260   000100 305400                    DTB
         2 000261   000000 030002 0                  NDSC9   UPD_DATE                 cn=0,s=nosgn,sf=0,n=2
         2 000262   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000263   200047 236100                    LDQ     REQ$+2,,AUTO
         2 000264   200023 756100                    STQ     JUNK,,AUTO

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:64   
      343     1261    2         UPD_TIME.NEW_CCL.DATE.M = JUNK;

   1261  2 000265   000022 736000                    QLS     18
         2 000266   200036 752110                    STCQ    UPD_TIME+4,'10'O,AUTO

      344     1262    2         CALL CHARBIN(JUNK,UPD_DATE.DD);

   1262  2 000267   000100 305400                    DTB
         2 000270   000000 630002 0                  NDSC9   UPD_DATE                 cn=3,s=nosgn,sf=0,n=2
         2 000271   200046 000010                    NDSC9   REQ$+1,,AUTO             cn=0,s=lsgnf,sf=0,n=8
         2 000272   200047 236100                    LDQ     REQ$+2,,AUTO
         2 000273   200023 756100                    STQ     JUNK,,AUTO

      345     1263    2         UPD_TIME.NEW_CCL.DATE.D = JUNK;

   1263  2 000274   000014 736000                    QLS     12
         2 000275   200036 752104                    STCQ    UPD_TIME+4,'04'O,AUTO

      346     1264    2         UPD_TIME.NEW_CCL.TIME = '0'B;

   1264  2 000276   000100 100400                    MLR     fill='000'O
         2 000277   000002 020001 xsym               ADSC6   B_VECTNIL+2              cn=0,n=1
         2 000300   200036 420010                    ADSC6   UPD_TIME+4,,AUTO         cn=4,n=8

      347     1265    2         CALL UMT$LCLDATE(UPD_TIME.UTS_DATE,UPD_DATE,'00:00:00.00');

   1265  2 000301   000005 236000 3                  LDQ     5
         2 000302   200050 756100                    STQ     REQ$+3,,AUTO
         2 000303   000006 236000 3                  LDQ     6
         2 000304   200047 756100                    STQ     REQ$+2,,AUTO
         2 000305   200032 630500                    EPPR0   UPD_TIME,,AUTO
         2 000306   200046 450500                    STP0    REQ$+1,,AUTO
         2 000307   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000310   000021 631400 xsym               EPPR1   B_VECTNIL+17
         2 000311   000000 701000 xent               TSX1    UMT$LCLDATE
         2 000312   000000 011000                    NOP     0

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:65   
      348     1266    2         CALL HFC$UPDTIME(UPD_TIME);

   1266  2 000313   200032 630500                    EPPR0   UPD_TIME,,AUTO
         2 000314   200046 450500                    STP0    REQ$+1,,AUTO
         2 000315   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000316   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000317   000000 701000 xent               TSX1    HFC$UPDTIME
         2 000320   000000 011000                    NOP     0

      349     1267    2         DATE.WSN= UPD_DATE_R;

   1267  2 000321   000000 237000 0                  LDAQ    UPD_DATE
         2 000322   000004 757000 0                  STAQ    DATE+2

      350     1268    2         CALL OCA$KMISC(DATE);

   1268  2 000323   000007 630400 3                  EPPR0   7
         2 000324   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000325   000000 701000 xent               TSX1    OCA$KMISC
         2 000326   000000 011000                    NOP     0

      351     1269    2         CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);

   1269  2 000327   000001 236000 3                  LDQ     1
         2 000330   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000331   200007 630500                    EPPR0   DCTX,,AUTO
         2 000332   200043 450500                    STP0    @REASON+1,,AUTO
         2 000333   000003 236000 3                  LDQ     3
         2 000334   200042 756100                    STQ     @CODE+1,,AUTO
         2 000335   000011 236000 3                  LDQ     9
         2 000336   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000337   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000340   000000 011000                    NOP     0
         2 000341   000754 710000 2                  TRA     s:1341

      352     1270    2         SELECT(%REQ_MEM_EXPANSION);

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:66   
      353     1271                                 /* Somebody assigned a MU that was released at boot  */
      354     1272    2         CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);

   1272  2 000342   000003 236000 3                  LDQ     3
         2 000343   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000344   200007 633500                    EPPR3   DCTX,,AUTO
         2 000345   200043 453500                    STP3    @REASON+1,,AUTO
         2 000346   000014 236000 3                  LDQ     12
         2 000347   200042 756100                    STQ     @CODE+1,,AUTO
         2 000350   000015 236000 3                  LDQ     13
         2 000351   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000352   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000353   000000 011000                    NOP     0
         2 000354   000754 710000 2                  TRA     s:1341

      355     1273    2         SELECT(%REQ_ASSIGN_EPU);

      356     1274                                 /* We now have another EPU for operator to start     */
      357     1275    2         CPU# = -1;

   1275  2 000355   000001 335007                    LCA     1,DL
         2 000356   200005 755100                    STA     CPU#,,AUTO

      358     1276    3         DO JUNK = 0 TO 3;

   1276  2 000357   200023 450100                    STZ     JUNK,,AUTO

      359     1277    3            IF CMD$->COMMAND_BLK.IDCW.PROCESSOR = S_PORTNR(JUNK) THEN

   1277  2 000360   200023 720100                    LXL0    JUNK,,AUTO
         2 000361   200004 470500                    LDP0    CMD$,,AUTO
         2 000362   000003 236100                    LDQ     3,,PR0
         2 000363   000017 772000                    QRL     15
         2 000364   000007 376007                    ANQ     7,DL
         2 000365   000000 116010 xsym               CMPQ    S_PORTNR,X0
         2 000366   000371 601000 2                  TNZ     s:1279

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:67   
      360     1278    3               CPU# = JUNK;

   1278  2 000367   200023 235100                    LDA     JUNK,,AUTO
         2 000370   200005 755100                    STA     CPU#,,AUTO

      361     1279    3            END;

   1279  2 000371   200023 235100                    LDA     JUNK,,AUTO
         2 000372   000001 035007                    ADLA    1,DL
         2 000373   200023 755100                    STA     JUNK,,AUTO
         2 000374   000004 115007                    CMPA    4,DL
         2 000375   000360 602000 2                  TNC     s:1277

      362     1280    3         IF CPU# = -1 THEN DO;

   1280  2 000376   200005 236100                    LDQ     CPU#,,AUTO
         2 000377   000027 116000 xsym               CMPQ    B_VECTNIL+23
         2 000400   000414 601000 2                  TNZ     s:1284

      363     1281    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);

   1281  2 000401   000003 236000 3                  LDQ     3
         2 000402   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000403   200007 631500                    EPPR1   DCTX,,AUTO
         2 000404   200043 451500                    STP1    @REASON+1,,AUTO
         2 000405   000014 236000 3                  LDQ     12
         2 000406   200042 756100                    STQ     @CODE+1,,AUTO
         2 000407   000015 236000 3                  LDQ     13
         2 000410   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000411   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000412   000000 011000                    NOP     0

      364     1282    3            END;

   1282  2 000413   000754 710000 2                  TRA     s:1341

      365     1283    3          ELSE DO;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:68   

      366     1284    3            S_MPSTATE(CPU#) = 0;

   1284  2 000414   000000 450006 xsym               STZ     S_MPSTATE,QL

      367     1285    3            CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);

   1285  2 000415   000001 236000 3                  LDQ     1
         2 000416   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000417   200007 631500                    EPPR1   DCTX,,AUTO
         2 000420   200043 451500                    STP1    @REASON+1,,AUTO
         2 000421   000003 236000 3                  LDQ     3
         2 000422   200042 756100                    STQ     @CODE+1,,AUTO
         2 000423   000011 236000 3                  LDQ     9
         2 000424   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000425   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000426   000000 011000                    NOP     0

      368     1286    3            END;

   1286  2 000427   000754 710000 2                  TRA     s:1341

      369     1287    2         SELECT(%REQ_ASSIGN_MEM);

      370     1288                            /* We now have another MU that was previously released    */
      371     1289    2         CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);

   1289  2 000430   000003 236000 3                  LDQ     3
         2 000431   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000432   200007 633500                    EPPR3   DCTX,,AUTO
         2 000433   200043 453500                    STP3    @REASON+1,,AUTO
         2 000434   000014 236000 3                  LDQ     12
         2 000435   200042 756100                    STQ     @CODE+1,,AUTO
         2 000436   000015 236000 3                  LDQ     13
         2 000437   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000440   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000441   000000 011000                    NOP     0
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:69   
         2 000442   000754 710000 2                  TRA     s:1341

      372     1290    2         SELECT(%REQ_ASSIGN_DEVICE);

      373     1291    2         PATH.IOM=CMD$->COMMAND_BLK.IDCW.IOP#;

   1291  2 000443   000003 236100                    LDQ     3,,PR0
         2 000444   000017 736000                    QLS     15
         2 000445   200026 676100                    ERQ     PATH,,AUTO
         2 000446   007000 376003                    ANQ     3584,DU
         2 000447   200026 656100                    ERSQ    PATH,,AUTO

      374     1292    2         PATH.CHAN=CMD$->COMMAND_BLK.IDCW.CHAN;

   1292  2 000450   000003 236100                    LDQ     3,,PR0
         2 000451   007700 376003                    ANQ     4032,DU
         2 000452   000006 772000                    QRL     6
         2 000453   200026 552120                    STBQ    PATH,'20'O,AUTO

      375     1293    2         PATH.DEV=CMD$->COMMAND_BLK.IDCW.DEVNUM;

   1293  2 000454   000003 236100                    LDQ     3,,PR0
         2 000455   000014 736000                    QLS     12
         2 000456   200026 752140                    STCQ    PATH,'40'O,AUTO

      376     1294    2         CALL TDU$FINDPATH(PATH,'0'B,DCT$,DQH$,SQH$,MPC$)

   1294  2 000457   200024 633500                    EPPR3   MPC$,,AUTO
         2 000460   200053 453500                    STP3    REQ$+6,,AUTO
         2 000461   200031 634500                    EPPR4   SQH$,,AUTO
         2 000462   200052 454500                    STP4    REQ$+5,,AUTO
         2 000463   200010 635500                    EPPR5   DQH$,,AUTO
         2 000464   200051 455500                    STP5    REQ$+4,,AUTO
         2 000465   200006 636500                    EPPR6   DCT$,,AUTO
         2 000466   200050 456500                    STP6    REQ$+3,,AUTO
         2 000467   000003 236000 3                  LDQ     3
         2 000470   200047 756100                    STQ     REQ$+2,,AUTO
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:70   
         2 000471   200026 637500                    EPPR7   PATH,,AUTO
         2 000472   200046 457500                    STP7    REQ$+1,,AUTO
         2 000473   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000474   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000475   000000 701000 xent               TSX1    TDU$FINDPATH
         2 000476   000530 702000 2                  TSX2    s:1302

      377     1295    3          WHENRETURN DO;

      378     1296    3            IF DCT$->NI$DCT.STATUS.DOWN THEN

   1296  2 000477   200006 470500                    LDP0    DCT$,,AUTO
         2 000500   000027 234100                    SZN     23,,PR0
         2 000501   000515 605000 2                  TPL     s:1299

      379     1297    3               CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);

   1297  2 000502   000001 236000 3                  LDQ     1
         2 000503   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000504   200007 631500                    EPPR1   DCTX,,AUTO
         2 000505   200043 451500                    STP1    @REASON+1,,AUTO
         2 000506   000003 236000 3                  LDQ     3
         2 000507   200042 756100                    STQ     @CODE+1,,AUTO
         2 000510   000011 236000 3                  LDQ     9
         2 000511   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000512   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000513   000000 011000                    NOP     0
         2 000514   000527 710000 2                  TRA     s:1300

      380     1298    3             ELSE
      381     1299    3               CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_ASSGND,DCTX,%REAS_USE_RC);

   1299  2 000515   000003 236000 3                  LDQ     3
         2 000516   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000517   200007 631500                    EPPR1   DCTX,,AUTO
         2 000520   200043 451500                    STP1    @REASON+1,,AUTO
         2 000521   000017 236000 3                  LDQ     15
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:71   
         2 000522   200042 756100                    STQ     @CODE+1,,AUTO
         2 000523   000015 236000 3                  LDQ     13
         2 000524   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000525   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000526   000000 011000                    NOP     0

      382     1300    3            END;

   1300  2 000527   000542 710000 2                  TRA     s:1303

      383     1301    3          WHENALTRETURN DO;

      384     1302    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_PER_NCONF,DCTX,%REAS_USE_RC);

   1302  2 000530   000003 236000 3                  LDQ     3
         2 000531   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000532   200007 630500                    EPPR0   DCTX,,AUTO
         2 000533   200043 450500                    STP0    @REASON+1,,AUTO
         2 000534   000021 236000 3                  LDQ     17
         2 000535   200042 756100                    STQ     @CODE+1,,AUTO
         2 000536   000015 236000 3                  LDQ     13
         2 000537   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000540   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000541   000000 011000                    NOP     0

      385     1303    3            END;

   1303  2 000542   000754 710000 2                  TRA     s:1341

      386     1304    2         SELECT(%REQ_RELEASE_EPU);

      387     1305                            /* MSOS wants an EPU - give it to him if it is stopped    */
      388     1306    2         CPU# = -1;

   1306  2 000543   000001 335007                    LCA     1,DL
         2 000544   200005 755100                    STA     CPU#,,AUTO

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:72   
      389     1307    3         DO JUNK = 0 TO 3;

   1307  2 000545   200023 450100                    STZ     JUNK,,AUTO

      390     1308    3            IF CMD$->COMMAND_BLK.IDCW.PROCESSOR = S_PORTNR(JUNK) THEN

   1308  2 000546   200023 720100                    LXL0    JUNK,,AUTO
         2 000547   200004 470500                    LDP0    CMD$,,AUTO
         2 000550   000003 236100                    LDQ     3,,PR0
         2 000551   000017 772000                    QRL     15
         2 000552   000007 376007                    ANQ     7,DL
         2 000553   000000 116010 xsym               CMPQ    S_PORTNR,X0
         2 000554   000557 601000 2                  TNZ     s:1310

      391     1309    3               CPU# = JUNK;

   1309  2 000555   200023 235100                    LDA     JUNK,,AUTO
         2 000556   200005 755100                    STA     CPU#,,AUTO

      392     1310    3            END;

   1310  2 000557   200023 235100                    LDA     JUNK,,AUTO
         2 000560   000001 035007                    ADLA    1,DL
         2 000561   200023 755100                    STA     JUNK,,AUTO
         2 000562   000004 115007                    CMPA    4,DL
         2 000563   000546 602000 2                  TNC     s:1308

      393     1311    3         IF CPU# = -1 THEN DO;

   1311  2 000564   200005 236100                    LDQ     CPU#,,AUTO
         2 000565   000027 116000 xsym               CMPQ    B_VECTNIL+23
         2 000566   000602 601000 2                  TNZ     s:1314

      394     1312    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_RES_NCONF,DCTX,%REAS_USE_RC);

   1312  2 000567   000003 236000 3                  LDQ     3
         2 000570   200044 756100                    STQ     @DCTX+1,,AUTO
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:73   
         2 000571   200007 631500                    EPPR1   DCTX,,AUTO
         2 000572   200043 451500                    STP1    @REASON+1,,AUTO
         2 000573   000014 236000 3                  LDQ     12
         2 000574   200042 756100                    STQ     @CODE+1,,AUTO
         2 000575   000015 236000 3                  LDQ     13
         2 000576   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000577   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000600   000000 011000                    NOP     0

      395     1313    3            END;

   1313  2 000601   000754 710000 2                  TRA     s:1341

      396     1314    3          ELSE IF S_MPSTATE(CPU#)~=0 THEN DO; /* Can't release running CPU       */

   1314  2 000602   000000 235006 xsym               LDA     S_MPSTATE,QL
         2 000603   000617 600000 2                  TZE     s:1318

      397     1315    3               CALL SEND_RESPONSE(%RSP_BUSY,0,DCTX,%REAS_RES_IN_USE);

   1315  2 000604   000023 236000 3                  LDQ     19
         2 000605   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000606   200007 631500                    EPPR1   DCTX,,AUTO
         2 000607   200043 451500                    STP1    @REASON+1,,AUTO
         2 000610   000003 236000 3                  LDQ     3
         2 000611   200042 756100                    STQ     @CODE+1,,AUTO
         2 000612   000024 236000 3                  LDQ     20
         2 000613   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000614   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000615   000000 011000                    NOP     0

      398     1316    3               END;

   1316  2 000616   000754 710000 2                  TRA     s:1341

      399     1317    3             ELSE DO;

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:74   
      400     1318    3               CALL HFB$DISPORT(S_PORTNR(CPU#));

   1318  2 000617   200005 720100                    LXL0    CPU#,,AUTO
         2 000620   000000 631410 xsym               EPPR1   S_PORTNR,X0
         2 000621   200046 451500                    STP1    REQ$+1,,AUTO
         2 000622   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000623   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000624   000000 701000 xent               TSX1    HFB$DISPORT
         2 000625   000000 011000                    NOP     0

      401     1319    3               CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);

   1319  2 000626   000001 236000 3                  LDQ     1
         2 000627   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000630   200007 630500                    EPPR0   DCTX,,AUTO
         2 000631   200043 450500                    STP0    @REASON+1,,AUTO
         2 000632   000003 236000 3                  LDQ     3
         2 000633   200042 756100                    STQ     @CODE+1,,AUTO
         2 000634   000011 236000 3                  LDQ     9
         2 000635   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000636   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000637   000000 011000                    NOP     0

      402     1320    3               END;

   1320  2 000640   000754 710000 2                  TRA     s:1341

      403     1321    2         SELECT(%REQ_RELEASE_MEM1,%REQ_RELEASE_MEM2);

      404     1322                                           /* MSOS wants memory, but we'll refuse it  */
      405     1323    2         CALL SEND_RESPONSE(%RSP_REJECT,%RC_REL_MON,DCTX,%REAS_USE_RC);

   1323  2 000641   000003 236000 3                  LDQ     3
         2 000642   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000643   200007 633500                    EPPR3   DCTX,,AUTO
         2 000644   200043 453500                    STP3    @REASON+1,,AUTO
         2 000645   000026 236000 3                  LDQ     22
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:75   
         2 000646   200042 756100                    STQ     @CODE+1,,AUTO
         2 000647   000015 236000 3                  LDQ     13
         2 000650   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000651   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000652   000000 011000                    NOP     0
         2 000653   000754 710000 2                  TRA     s:1341

      406     1324    2         SELECT(%REQ_RELEASE_DEVICE);

      407     1325    2         PATH.IOM=CMD$->COMMAND_BLK.IDCW.IOP#;

   1325  2 000654   000003 236100                    LDQ     3,,PR0
         2 000655   000017 736000                    QLS     15
         2 000656   200026 676100                    ERQ     PATH,,AUTO
         2 000657   007000 376003                    ANQ     3584,DU
         2 000660   200026 656100                    ERSQ    PATH,,AUTO

      408     1326    2         PATH.CHAN=CMD$->COMMAND_BLK.IDCW.CHAN;

   1326  2 000661   000003 236100                    LDQ     3,,PR0
         2 000662   007700 376003                    ANQ     4032,DU
         2 000663   000006 772000                    QRL     6
         2 000664   200026 552120                    STBQ    PATH,'20'O,AUTO

      409     1327    2         PATH.DEV=CMD$->COMMAND_BLK.IDCW.DEVNUM;

   1327  2 000665   000003 236100                    LDQ     3,,PR0
         2 000666   000014 736000                    QLS     12
         2 000667   200026 752140                    STCQ    PATH,'40'O,AUTO

      410     1328    2         CALL TDU$FINDPATH(PATH,'0'B,DCT$,DQH$,SQH$,MPC$)

   1328  2 000670   200024 633500                    EPPR3   MPC$,,AUTO
         2 000671   200053 453500                    STP3    REQ$+6,,AUTO
         2 000672   200031 634500                    EPPR4   SQH$,,AUTO
         2 000673   200052 454500                    STP4    REQ$+5,,AUTO
         2 000674   200010 635500                    EPPR5   DQH$,,AUTO
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:76   
         2 000675   200051 455500                    STP5    REQ$+4,,AUTO
         2 000676   200006 636500                    EPPR6   DCT$,,AUTO
         2 000677   200050 456500                    STP6    REQ$+3,,AUTO
         2 000700   000003 236000 3                  LDQ     3
         2 000701   200047 756100                    STQ     REQ$+2,,AUTO
         2 000702   200026 637500                    EPPR7   PATH,,AUTO
         2 000703   200046 457500                    STP7    REQ$+1,,AUTO
         2 000704   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000705   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 000706   000000 701000 xent               TSX1    TDU$FINDPATH
         2 000707   000741 702000 2                  TSX2    s:1336

      411     1329    3          WHENRETURN DO;

      412     1330    3            IF DCT$->NI$DCT.STATUS.DOWN THEN

   1330  2 000710   200006 470500                    LDP0    DCT$,,AUTO
         2 000711   000027 234100                    SZN     23,,PR0
         2 000712   000726 605000 2                  TPL     s:1333

      413     1331    3               CALL SEND_RESPONSE(%RSP_COMPLETE,0,DCTX,%REAS_MSOS_CMD_OK);

   1331  2 000713   000001 236000 3                  LDQ     1
         2 000714   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000715   200007 631500                    EPPR1   DCTX,,AUTO
         2 000716   200043 451500                    STP1    @REASON+1,,AUTO
         2 000717   000003 236000 3                  LDQ     3
         2 000720   200042 756100                    STQ     @CODE+1,,AUTO
         2 000721   000011 236000 3                  LDQ     9
         2 000722   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000723   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000724   000000 011000                    NOP     0
         2 000725   000740 710000 2                  TRA     s:1334

      414     1332    3             ELSE
      415     1333    3               CALL SEND_RESPONSE(%RSP_BUSY,0,DCTX,%REAS_PER_NOT_PART);

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:77   
   1333  2 000726   000027 236000 3                  LDQ     23
         2 000727   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000730   200007 631500                    EPPR1   DCTX,,AUTO
         2 000731   200043 451500                    STP1    @REASON+1,,AUTO
         2 000732   000003 236000 3                  LDQ     3
         2 000733   200042 756100                    STQ     @CODE+1,,AUTO
         2 000734   000024 236000 3                  LDQ     20
         2 000735   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000736   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000737   000000 011000                    NOP     0

      416     1334    3            END;

   1334  2 000740   000753 710000 2                  TRA     s:1337

      417     1335    3          WHENALTRETURN DO;

      418     1336    3            CALL SEND_RESPONSE(%RSP_REJECT,%RC_PER_NCONF,DCTX,%REAS_USE_RC);

   1336  2 000741   000003 236000 3                  LDQ     3
         2 000742   200044 756100                    STQ     @DCTX+1,,AUTO
         2 000743   200007 630500                    EPPR0   DCTX,,AUTO
         2 000744   200043 450500                    STP0    @REASON+1,,AUTO
         2 000745   000021 236000 3                  LDQ     17
         2 000746   200042 756100                    STQ     @CODE+1,,AUTO
         2 000747   000015 236000 3                  LDQ     13
         2 000750   200041 756100                    STQ     UPD_TIME+7,,AUTO
         2 000751   000764 701000 2                  TSX1    SEND_RESPONSE
         2 000752   000000 011000                    NOP     0

      419     1337    3            END;

   1337  2 000753   000754 710000 2                  TRA     s:1341

      420     1338    2         SELECT(ELSE);

      421     1339                                                /*SCREECH*/
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:78   
      422     1340    2         END;                              /* SELECT                             */

      423     1341    1      CALL NIQ$RELS(N$REQ.BUF$);

   1341  2 000754   200030 236100                    LDQ     REQ$,,AUTO
         2 000755   000005 036003                    ADLQ    5,DU
         2 000756   200046 756100                    STQ     REQ$+1,,AUTO
         2 000757   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000760   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000761   000000 701000 xent               TSX1    NIQ$RELS
         2 000762   000000 011000                    NOP     0

      424     1342    1      RETURN;

   1342  2 000763   000000 702200 xent               TSX2  ! X66_ARET

      425     1343        %EJECT;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:79   
      426     1344    1   SEND_RESPONSE: PROC(CODE,REASON,DCTX,CP6_REASON);

   1344  2 000764   200040 741300       SEND_RESPON* STX1  ! UPD_TIME+6,,AUTO

      427     1345    2   DCL CODE BIT(6) ALIGNED;
      428     1346    2   DCL REASON BIT(6) ALIGNED;
      429     1347    2   DCL DCTX UBIN;
      430     1348    2   DCL CP6_REASON UBIN;
      431     1349
      432     1350    2   DCL REQ$ PTR;
      433     1351        %N$REQ(STCLASS="BASED(REQ$)");
      434     1409
      435     1410    2      CALL NIQ$GET(REQ$) ALTRET(HANG_IT_UP);

   1410  2 000765   200045 630500                    EPPR0   REQ$,,AUTO
         2 000766   200046 450500                    STP0    REQ$+1,,AUTO
         2 000767   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000770   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 000771   000000 701000 xent               TSX1    NIQ$GET
         2 000772   001143 702000 2                  TSX2    HANG_IT_UP

      436     1411    2      CALL NIQ$GETS(N$REQ.BUF$) ALTRET(FREE_IT);

   1411  2 000773   200045 236100                    LDQ     REQ$,,AUTO
         2 000774   000005 036003                    ADLQ    5,DU
         2 000775   200046 756100                    STQ     REQ$+1,,AUTO
         2 000776   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 000777   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001000   000000 701000 xent               TSX1    NIQ$GETS
         2 001001   001135 702000 2                  TSX2    FREE_IT

      437     1412    2      N$REQ.DLA.DCTX=DCTX;

   1412  2 001002   200043 470500                    LDP0    @DCTX,,AUTO
         2 001003   200045 471500                    LDP1    REQ$,,AUTO
         2 001004   000000 236100                    LDQ     0,,PR0
         2 001005   000025 736000                    QLS     21
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:80   
         2 001006   100001 676100                    ERQ     1,,PR1
         2 001007   777770 376003                    ANQ     -8,DU
         2 001010   100001 656100                    ERSQ    1,,PR1

      438     1413    2      N$REQ.OPFLG.EA='1'B;

   1413  2 001011   200045 471500                    LDP1    REQ$,,AUTO
         2 001012   000040 236007                    LDQ     32,DL
         2 001013   100004 256100                    ORSQ    4,,PR1

      439     1414    2      N$REQ.EAENTRY=ENTADDR(TMA$RESP_EA);

   1414  2 001014   000000 636000 xent               EAQ     TMA$RESP_EA
         2 001015   200045 471500                    LDP1    REQ$,,AUTO
         2 001016   100023 756100                    STQ     19,,PR1

      440     1415    2      N$REQ.FC=%N_READ;     /* Have to do a dual or MSOS dies a horrible death   */

   1415  2 001017   200045 471500                    LDP1    REQ$,,AUTO
         2 001020   000014 236007                    LDQ     12,DL
         2 001021   100003 552104                    STBQ    3,'04'O,PR1

      441     1416    2      PTR$=N$REQ.BUF$;

   1416  2 001022   200045 471500                    LDP1    REQ$,,AUTO
         2 001023   100005 236100                    LDQ     5,,PR1
         2 001024   200027 756100                    STQ     PTR$,,AUTO

      442     1417    2      N$REQ.BUFADDR=(PNTR.WA+2)*4;         /* This has to be a byte address      */

   1417  2 001025   200027 235100                    LDA     PTR$,,AUTO
         2 001026   777777 375003                    ANA     -1,DU
         2 001027   000020 771000                    ARL     16
         2 001030   000010 035007                    ADLA    8,DL
         2 001031   100006 755100                    STA     6,,PR1

      443     1418                                      /* and we skip the first 2 words of the buffer  */
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:81   
      444     1419    2      N$REQ.PTP=0;

   1419  2 001032   200045 471500                    LDP1    REQ$,,AUTO
         2 001033   100007 450100                    STZ     7,,PR1

      445     1420    2      PTR$ = PINCRW(PTR$,2);

   1420  2 001034   000002 036003                    ADLQ    2,DU
         2 001035   200027 756100                    STQ     PTR$,,AUTO

      446     1421    2      PTR$->COMMAND_BLK='0'B;              /* Zero out the buffer first          */

   1421  2 001036   200027 471500                    LDP1    PTR$,,AUTO
         2 001037   000100 100400                    MLR     fill='000'O
         2 001040   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 001041   100000 000020                    ADSC9   0,,PR1                   cn=0,n=16

      447     1422    2      PTR$->COMMAND_BLK.IDCW.INX = CMD$->COMMAND_BLK.IDCW.INX;
              1422               /* Link the answer with the request */

   1422  2 001042   200004 473500                    LDP3    CMD$,,AUTO
         2 001043   300003 236100                    LDQ     3,,PR3
         2 001044   100003 752101                    STCQ    3,'01'O,PR1

      448     1423    2      PTR$->COMMAND_BLK.IDCW.CODE=CODE; /* This is where MSOS looks for an answer */

   1423  2 001045   200041 474500                    LDP4    @CODE,,AUTO
         2 001046   400000 236100                    LDQ     0,,PR4
         2 001047   100003 752140                    STCQ    3,'40'O,PR1

      449     1424    2      PTR$->COMMAND_BLK.IDCWE.RC=REASON; /* This is where MSOS looks for a reason */

   1424  2 001050   200042 475500                    LDP5    @REASON,,AUTO
         2 001051   500000 236100                    LDQ     0,,PR5
         2 001052   100002 752140                    STCQ    2,'40'O,PR1

      450     1425    2      EL$CP6SAYS = '0'B;
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:82   

   1425  2 001053   000100 100400                    MLR     fill='000'O
         2 001054   000002 000001 xsym               ADSC9   B_VECTNIL+2              cn=0,n=1
         2 001055   200016 000024                    ADSC9   EL$CP6SAYS,,AUTO         cn=0,n=20

      451     1426    2      EL$CP6SAYS.IOP# = N$DCT$$->N$DCT$(DCTX)->NI$DCT.DQH$->NI$DQH.IOCHAN.IOM;

   1426  2 001056   000000 720100                    LXL0    0,,PR0
         2 001057   000000 476400 xsym               LDP6    N$DCT$$
         2 001060   600000 477510                    LDP7    0,X0,PR6
         2 001061   700023 470500                    LDP0    19,,PR7
         2 001062   000001 236100                    LDQ     1,,PR0
         2 001063   000600 376003                    ANQ     384,DU
         2 001064   000002 736000                    QLS     2
         2 001065   200016 552140                    STBQ    EL$CP6SAYS,'40'O,AUTO

      452     1427    2      EL$CP6SAYS.REASON = CP6_REASON;

   1427  2 001066   200044 470500                    LDP0    @CP6_REASON,,AUTO
         2 001067   000000 236100                    LDQ     0,,PR0
         2 001070   000022 736000                    QLS     18
         2 001071   200016 552120                    STBQ    EL$CP6SAYS,'20'O,AUTO

      453     1428    2      EL$CP6SAYS.MLW = PTR$->COMMAND_BLK.MLW;

   1428  2 001072   100000 236100                    LDQ     0,,PR1
         2 001073   200017 756100                    STQ     EL$CP6SAYS+1,,AUTO

      454     1429    2      EL$CP6SAYS.MLWE = PTR$->COMMAND_BLK.MLWE;

   1429  2 001074   100001 236100                    LDQ     1,,PR1
         2 001075   200020 756100                    STQ     EL$CP6SAYS+2,,AUTO

      455     1430    2      EL$CP6SAYS.IDCWE = PTR$->COMMAND_BLK.IDCWE;

   1430  2 001076   100002 236100                    LDQ     2,,PR1
         2 001077   200021 756100                    STQ     EL$CP6SAYS+3,,AUTO
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:83   

      456     1431    2      EL$CP6SAYS.IDCW = PTR$->COMMAND_BLK.IDCW;

   1431  2 001100   100003 236100                    LDQ     3,,PR1
         2 001101   200022 756100                    STQ     EL$CP6SAYS+4,,AUTO

      457     1432    2      CALL ELA$SYSLOG(EL_CP6SAYS,EL$CP6SAYS,SIZEW(EL$CP6SAYS),'0'B,EL_ERR,JUNK);

   1432  2 001102   200023 637500                    EPPR7   JUNK,,AUTO
         2 001103   200053 457500                    STP7    REQ$+6,,AUTO
         2 001104   000001 236000 3                  LDQ     1
         2 001105   200052 756100                    STQ     REQ$+5,,AUTO
         2 001106   000002 237000 3                  LDAQ    2
         2 001107   200050 757100                    STAQ    REQ$+3,,AUTO
         2 001110   200016 630500                    EPPR0   EL$CP6SAYS,,AUTO
         2 001111   200047 450500                    STP0    REQ$+2,,AUTO
         2 001112   000031 236000 3                  LDQ     25
         2 001113   200046 756100                    STQ     REQ$+1,,AUTO
         2 001114   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 001115   000024 631400 xsym               EPPR1   B_VECTNIL+20
         2 001116   000000 701000 xent               TSX1    ELA$SYSLOG
         2 001117   000000 011000                    NOP     0

      458     1433    2      CALL NIO$QUE(N$REQ) ALTRET(FREE_THEM);

   1433  2 001120   200045 630500                    EPPR0   REQ$,,AUTO
         2 001121   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001122   000000 701000 xent               TSX1    NIO$QUE
         2 001123   001126 702000 2                  TSX2    FREE_THEM

      459     1434    2      RETURN;

   1434  2 001124   200040 221300                    LDX1  ! UPD_TIME+6,,AUTO
         2 001125   000001 702211                    TSX2  ! 1,X1

      460     1435
      461     1436    2   FREE_THEM:
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:84   
      462     1437    2      CALL NIQ$RELS(N$REQ.BUF$);

   1437  2 001126   200045 236100       FREE_THEM    LDQ     REQ$,,AUTO
         2 001127   000005 036003                    ADLQ    5,DU
         2 001130   200046 756100                    STQ     REQ$+1,,AUTO
         2 001131   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 001132   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001133   000000 701000 xent               TSX1    NIQ$RELS
         2 001134   000000 011000                    NOP     0

      463     1438    2   FREE_IT:
      464     1439    2      CALL NIQ$REL(REQ$);

   1439  2 001135   200045 630500       FREE_IT      EPPR0   REQ$,,AUTO
         2 001136   200046 450500                    STP0    REQ$+1,,AUTO
         2 001137   200046 630500                    EPPR0   REQ$+1,,AUTO
         2 001140   000017 631400 xsym               EPPR1   B_VECTNIL+15
         2 001141   000000 701000 xent               TSX1    NIQ$REL
         2 001142   000000 011000                    NOP     0

      465     1440    2   HANG_IT_UP:
      466     1441    2      RETURN; /*N* Should probably try to recover or screech */

   1441  2 001143   200040 221300       HANG_IT_UP   LDX1  ! UPD_TIME+6,,AUTO
         2 001144   000001 702211                    TSX2  ! 1,X1

UPD_DATE
 Sect OctLoc
   0     000   ****** 057***   ***057 ******                                    ../../..

DATE
 Sect OctLoc
   0     002   000015 000000   000000 000000   040040 040040   040040 040040    ........

(unnamed)
 Sect OctLoc
   1     000   060060 072060   060072 060060   056060 060040                    00:00:00.00
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:85   

(unnamed)
 Sect OctLoc
   3     000   000000 000166   000003 006000   000007 006000   000002 006000    ...v............
   3     004   000000 006000   000000 006000   000000 006000   000002 006000    ................
   3     010   030000 000000   000010 006000   020000 000000   060000 000000    ............0...
   3     014   000013 006000   000012 006000   100000 000000   000016 006000    ........@.......
   3     020   110000 000000   000020 006000   010000 000000   000004 006000    H...............
   3     024   000022 006000   140000 000000   000025 006000   000005 006000    ....`...........
   3     030   000000 000167   000030 006000                                    ...w....
      467     1442    2   END SEND_RESPONSE;
      468     1443    1   END TMA$MSOS_REQ_EA;
      469     1444        %EOD;

PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:86   
--  Include file information  --

   TM_DATA_M.:E05TOU  is referenced.
   N_FC_C.:E05TOU  is referenced.
   NI_DATA_C.:E05TOU  is referenced.
   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
   EL_SUBS_C.:E05TOU  is referenced.
   EL$TABLES.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$MSOS_REQ_EA.
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:87   

 **** Variables and constants ****

  ****  Section 000  Data  TMA$MSOS_REQ_EA

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     2-0-0/c STRC(144)   r     1 DATE                       0-0-0/d STRC(72)    r     1 UPD_DATE
     0-0-0/d CHAR(8)     r     1 UPD_DATE_R

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

    41-0-0/w PTR         r     1 @CODE                     44-0-0/w PTR         r     1 @CP6_REASON
    43-0-0/w PTR         r     1 @DCTX                      3-0-0/w PTR         r     1 @PAR
    42-0-0/w PTR         r     1 @REASON                    4-0-0/w PTR         r     1 CMD$
    *0-0-0/w BIT (6)     r     1 CODE                      *0-0-0/w UBIN        r     1 CP6_REASON
     5-0-0/w SBIN        r     1 CPU#                       6-0-0/w PTR         r     1 DCT$
     7-0-0/w UBIN        r     1 DCTX                      *0-0-0/w UBIN        r     1 DCTX
    10-0-0/w PTR         r     1 DQH$                      16-0-0/w STRC(180)   r     1 EL$CP6SAYS
    11-0-0/w STRC(180)   r     1 EL$MSOSSAYS               23-0-0/w UBIN        r     1 JUNK
    24-0-0/w PTR         r     1 MPC$                      25-0-0/w BIT (6)     r     1 MSOS_REQUEST
    *0-0-0/w SBIN        r     1 PAR                       26-0-0/w STRC(18)    r     1 PATH
    27-0-0/w STRC        r     1 PNTR                      27-0-0/w PTR         r     1 PTR$
    *0-0-0/w BIT (6)     r     1 REASON                    30-0-0/w PTR         r     1 REQ$
    45-0-0/w PTR         r     1 REQ$                      31-0-0/w PTR         r     1 SQH$
    32-0-0/d STRC(216)   r     1 UPD_TIME

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 N$DCT$$
     0-0-0/w UBIN        r     1 S_MPSTATE(0:7)
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:88   
     0-0-0/w UBIN        r     1 S_PORTNR(0:7)

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(144)   r     1 COMMAND_BLK                0-0-0/w PTR         r     1 N$DCT$(0:0)
     0-0-0/d STRC(1080)  r     1 N$REQ                      0-0-0/d STRC(1080)  r     1 N$REQ
     0-0-0/w STRC(1332)  r     1 NI$DCT                     0-0-0/w STRC(648)   r     1 NI$DQH


   Procedure TMA$MSOS_REQ_EA requires 613 words for executable code.
   Procedure TMA$MSOS_REQ_EA requires 44 words of local(AUTO) storage.
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:89   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:90   
          MINI XREF LISTING

CMD$
      1004**DCL      1235<<ASSIGN   1238>>ASSIGN   1239>>ASSIGN   1240>>ASSIGN   1241>>ASSIGN   1243>>ASSIGN
      1277>>IF       1291>>ASSIGN   1292>>ASSIGN   1293>>ASSIGN   1308>>IF       1325>>ASSIGN   1326>>ASSIGN
      1327>>ASSIGN   1422>>ASSIGN
CODE IN PROCEDURE SEND_RESPONSE
      1345**DCL      1344--PROC     1423>>ASSIGN
COMMAND_BLK
      1060**DCL      1421<<ASSIGN
COMMAND_BLK.IDCW
      1073**DCL      1241>>ASSIGN   1431>>ASSIGN
COMMAND_BLK.IDCW.CHAN
      1075**DCL      1292>>ASSIGN   1326>>ASSIGN
COMMAND_BLK.IDCW.CODE
      1074**DCL      1243>>ASSIGN   1423<<ASSIGN
COMMAND_BLK.IDCW.DEVNUM
      1076**DCL      1293>>ASSIGN   1327>>ASSIGN
COMMAND_BLK.IDCW.INX
      1080**DCL      1422<<ASSIGN   1422>>ASSIGN
COMMAND_BLK.IDCW.IOP#
      1078**DCL      1291>>ASSIGN   1325>>ASSIGN
COMMAND_BLK.IDCW.PROCESSOR
      1077**DCL      1277>>IF       1308>>IF
COMMAND_BLK.IDCWE
      1069**DCL      1240>>ASSIGN   1430>>ASSIGN
COMMAND_BLK.IDCWE.RC
      1070**DCL      1424<<ASSIGN
COMMAND_BLK.MLW
      1061**DCL      1238>>ASSIGN   1428>>ASSIGN
COMMAND_BLK.MLW.FINISH
      1064**DCL      1065--REDEF
COMMAND_BLK.MLW.START
      1062**DCL      1063--REDEF
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:91   
COMMAND_BLK.MLWE
      1066**DCL      1239>>ASSIGN   1429>>ASSIGN
CP6_REASON IN PROCEDURE SEND_RESPONSE
      1348**DCL      1344--PROC     1427>>ASSIGN
CPU#
      1005**DCL      1275<<ASSIGN   1278<<ASSIGN   1280>>IF       1284>>ASSIGN   1306<<ASSIGN   1309<<ASSIGN
      1311>>IF       1314>>IF       1318>>CALL
DATE
      1226**DCL      1268<>CALL
DATE.WSN
      1231**DCL      1267<<ASSIGN
DCT$
      1006**DCL      1294<>CALL     1296>>IF       1328<>CALL     1330>>IF
DCTX
      1007**DCL      1244<<ASSIGN   1269<>CALL     1272<>CALL     1281<>CALL     1285<>CALL     1289<>CALL
      1297<>CALL     1299<>CALL     1302<>CALL     1312<>CALL     1315<>CALL     1319<>CALL     1323<>CALL
      1331<>CALL     1333<>CALL     1336<>CALL
DCTX IN PROCEDURE SEND_RESPONSE
      1347**DCL      1344--PROC     1412>>ASSIGN   1426>>ASSIGN
DQH$
      1008**DCL      1294<>CALL     1328<>CALL
EL$CP6SAYS
      1016**DCL      1425<<ASSIGN   1432<>CALL     1432--CALL
EL$CP6SAYS.IDCW
      1018**DCL      1431<<ASSIGN
EL$CP6SAYS.IDCWE
      1018**DCL      1430<<ASSIGN
EL$CP6SAYS.IOP#
      1016**DCL      1426<<ASSIGN
EL$CP6SAYS.MLW
      1016**DCL      1428<<ASSIGN
EL$CP6SAYS.MLW.FINISH
      1017**DCL      1017--REDEF
EL$CP6SAYS.MLW.START
      1016**DCL      1017--REDEF
EL$CP6SAYS.MLWE
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:92   
      1017**DCL      1429<<ASSIGN
EL$CP6SAYS.REASON
      1016**DCL      1427<<ASSIGN
EL$MSOSSAYS
      1010**DCL      1236<<ASSIGN   1242<>CALL     1242--CALL
EL$MSOSSAYS.IDCW
      1012**DCL      1241<<ASSIGN
EL$MSOSSAYS.IDCWE
      1012**DCL      1240<<ASSIGN
EL$MSOSSAYS.IOP#
      1010**DCL      1237<<ASSIGN
EL$MSOSSAYS.MLW
      1010**DCL      1238<<ASSIGN
EL$MSOSSAYS.MLW.FINISH
      1011**DCL      1011--REDEF
EL$MSOSSAYS.MLW.START
      1010**DCL      1010--REDEF
EL$MSOSSAYS.MLWE
      1011**DCL      1239<<ASSIGN
ELA$SYSLOG
       980**DCL-ENT  1242--CALL     1432--CALL
FREE_IT IN PROCEDURE SEND_RESPONSE
      1439**LABEL    1411--CALLALT
FREE_THEM IN PROCEDURE SEND_RESPONSE
      1437**LABEL    1433--CALLALT
HANG_IT_UP IN PROCEDURE SEND_RESPONSE
      1441**LABEL    1410--CALLALT
HFB$DISPORT
       981**DCL-ENT  1318--CALL
HFC$RTIME
       982**DCL-ENT  1248--CALL
HFC$UPDTIME
       984**DCL-ENT  1266--CALL
JUNK
      1021**DCL      1242<>CALL     1255<<CALLBLT  1256>>IF       1257>>ASSIGN   1259>>ASSIGN   1260<<CALLBLT
      1261>>ASSIGN   1262<<CALLBLT  1263>>ASSIGN   1276<<DOINDEX  1277>>IF       1278>>ASSIGN   1307<<DOINDEX
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:93   
      1308>>IF       1309>>ASSIGN   1432<>CALL
MPC$
      1022**DCL      1294<>CALL     1328<>CALL
MSOS_REQUEST
      1023**DCL      1243<<ASSIGN   1245>>DOSELCT
N$DCT$
      1082**DCL      1426>>ASSIGN
N$DCT$$
       997**DCL      1426>>ASSIGN
N$REQ.BUF$
      1101**DCL      1235>>ASSIGN   1341<>CALL
N$REQ.BUFADDR
      1101**DCL      1102--REDEF    1102--REDEF
N$REQ.DCT$
      1093**DCL      1237>>ASSIGN
N$REQ.DLA.DCTX
      1092**DCL      1244>>ASSIGN
N$REQ.DLA.DRELADDR
      1093**DCL      1093--REDEF
N$REQ.DVE.EOMCHAR
      1130**DCL      1131--REDEF
N$REQ.EAINFO
      1124**DCL      1124--REDEF
N$REQ.EAINFOX
      1124**DCL      1125--REDEF
N$REQ.EVNTINFO
      1125**DCL      1125--REDEF
N$REQ.STATUS
      1106**DCL      1112--REDEF
N$REQ.STATUS.MAJOR
      1106**DCL      1234>>IF
N$REQ IN PROCEDURE SEND_RESPONSE
      1360**DCL      1433<>CALL
N$REQ.BUF$ IN PROCEDURE SEND_RESPONSE
      1369**DCL      1411<>CALL     1416>>ASSIGN   1437<>CALL
N$REQ.BUFADDR IN PROCEDURE SEND_RESPONSE
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:94   
      1369**DCL      1370--REDEF    1370--REDEF    1417<<ASSIGN
N$REQ.DLA.DCTX IN PROCEDURE SEND_RESPONSE
      1360**DCL      1412<<ASSIGN
N$REQ.DLA.DRELADDR IN PROCEDURE SEND_RESPONSE
      1361**DCL      1361--REDEF
N$REQ.DVE.EOMCHAR IN PROCEDURE SEND_RESPONSE
      1398**DCL      1399--REDEF
N$REQ.EAENTRY IN PROCEDURE SEND_RESPONSE
      1391**DCL      1414<<ASSIGN
N$REQ.EAINFO IN PROCEDURE SEND_RESPONSE
      1392**DCL      1392--REDEF
N$REQ.EAINFOX IN PROCEDURE SEND_RESPONSE
      1392**DCL      1393--REDEF
N$REQ.EVNTINFO IN PROCEDURE SEND_RESPONSE
      1393**DCL      1393--REDEF
N$REQ.FC IN PROCEDURE SEND_RESPONSE
      1363**DCL      1415<<ASSIGN
N$REQ.OPFLG.EA IN PROCEDURE SEND_RESPONSE
      1367**DCL      1413<<ASSIGN
N$REQ.PTP IN PROCEDURE SEND_RESPONSE
      1371**DCL      1419<<ASSIGN
N$REQ.STATUS IN PROCEDURE SEND_RESPONSE
      1374**DCL      1380--REDEF
NI$DCT.DP
      1170**DCL      1177--REDEF    1180--REDEF    1181--REDEF    1183--REDEF    1183--REDEF    1184--REDEF
      1185--REDEF    1185--REDEF
NI$DCT.DQH$
      1166**DCL      1237>>ASSIGN   1426>>ASSIGN
NI$DCT.MPC.IOCHANX
      1178**DCL      1178--REDEF
NI$DCT.STATUS.DOWN
      1167**DCL      1296>>IF       1330>>IF
NI$DQH.IOCHAN.IOM
      1201**DCL      1237>>ASSIGN   1426>>ASSIGN
NI$DQH.IOCHANX
      1200**DCL      1201--REDEF
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:95   
NI$DQH.MBX$
      1209**DCL      1210--REDEF
NIO$QUE
       985**DCL-ENT  1433--CALL
NIQ$GET
       986**DCL-ENT  1410--CALL
NIQ$GETS
       987**DCL-ENT  1411--CALL
NIQ$REL
       988**DCL-ENT  1439--CALL
NIQ$RELS
       989**DCL-ENT  1341--CALL     1437--CALL
OCA$KMISC
       990**DCL-ENT  1268--CALL
PAR
       976**DCL         6--PROC     1233--ASSIGN
PATH
      1024**DCL      1294<>CALL     1328<>CALL
PATH.CHAN
      1027**DCL      1292<<ASSIGN   1326<<ASSIGN
PATH.DEV
      1025**DCL      1293<<ASSIGN   1327<<ASSIGN
PATH.IOM
      1026**DCL      1291<<ASSIGN   1325<<ASSIGN
PNTR.WA
      1030**DCL      1417>>ASSIGN
PTR$
      1028**DCL      1029--REDEF    1416<<ASSIGN   1420<<ASSIGN   1420>>ASSIGN   1421>>ASSIGN   1422>>ASSIGN
      1423>>ASSIGN   1424>>ASSIGN   1428>>ASSIGN   1429>>ASSIGN   1430>>ASSIGN   1431>>ASSIGN
REASON IN PROCEDURE SEND_RESPONSE
      1346**DCL      1344--PROC     1424>>ASSIGN
REQ$
      1032**DCL      1092--IMP-PTR  1233<<ASSIGN   1234>>IF       1235>>ASSIGN   1237>>ASSIGN   1244>>ASSIGN
      1341>>CALL
REQ$ IN PROCEDURE SEND_RESPONSE
      1350**DCL      1360--IMP-PTR  1410<>CALL     1411>>CALL     1412>>ASSIGN   1413>>ASSIGN   1414>>ASSIGN
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:96   
      1415>>ASSIGN   1416>>ASSIGN   1417>>ASSIGN   1419>>ASSIGN   1433>>CALL     1437>>CALL     1439<>CALL
SEND_RESPONSE
      1344**PROC     1269--CALL     1272--CALL     1281--CALL     1285--CALL     1289--CALL     1297--CALL
      1299--CALL     1302--CALL     1312--CALL     1315--CALL     1319--CALL     1323--CALL     1331--CALL
      1333--CALL     1336--CALL
SQH$
      1033**DCL      1294<>CALL     1328<>CALL
S_MPSTATE
       998**DCL      1284<<ASSIGN   1314>>IF
S_PORTNR
      1000**DCL      1277>>IF       1308>>IF       1318<>CALL
TDU$FINDPATH
       991**DCL-ENT  1294--CALL     1328--CALL
TMA$RESP_EA
       992**DCL-ENT  1414--ASSIGN
UMT$LCLDATE
       993**DCL-ENT  1265--CALL
UPD_DATE
      1215**DCL      1225--REDEF    1265<>CALL
UPD_DATE.D
      1219**DCL      1220--REDEF    1251<<CALLBLT  1252<<CALLBLT
UPD_DATE.DD
      1220**DCL      1262>>CALLBLT
UPD_DATE.M
      1216**DCL      1217--REDEF    1249<<CALLBLT  1250<<CALLBLT
UPD_DATE.MM
      1217**DCL      1260>>CALLBLT
UPD_DATE.Y
      1222**DCL      1223--REDEF    1253<<CALLBLT  1254<<CALLBLT
UPD_DATE.YY
      1223**DCL      1255>>CALLBLT
UPD_DATE_R
      1225**DCL      1267>>ASSIGN
UPD_TIME
      1034**DCL      1248<>CALL     1266<>CALL
UPD_TIME.MSOS_DATE
PL6.E3A0      #003=TMA$MSOS_REQ_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:19 Page:97   
      1035**DCL      1045--REDEF
UPD_TIME.MSOS_DATE.D.BYTE1
      1040**DCL      1251>>CALLBLT
UPD_TIME.MSOS_DATE.D.BYTE2
      1041**DCL      1252>>CALLBLT
UPD_TIME.MSOS_DATE.M.BYTE1
      1037**DCL      1249>>CALLBLT
UPD_TIME.MSOS_DATE.M.BYTE2
      1038**DCL      1250>>CALLBLT
UPD_TIME.MSOS_DATE.Y.BYTE1
      1043**DCL      1253>>CALLBLT
UPD_TIME.MSOS_DATE.Y.BYTE2
      1044**DCL      1254>>CALLBLT
UPD_TIME.NEW_CCL.DATE.D
      1053**DCL      1263<<ASSIGN
UPD_TIME.NEW_CCL.DATE.M
      1052**DCL      1261<<ASSIGN
UPD_TIME.NEW_CCL.DATE.Y
      1051**DCL      1257<<ASSIGN   1259<<ASSIGN
UPD_TIME.NEW_CCL.TIME
      1054**DCL      1264<<ASSIGN
UPD_TIME.UTS_DATE
      1045**DCL      1265<>CALL

PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:98   
      470        1        /*T***********************************************************/
      471        2        /*T*                                                         */
      472        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      473        4        /*T*                                                         */
      474        5        /*T***********************************************************/
      475        6        /*D*  NAME: TMA$IOP_ASGN_EA
      476        7              CALL: CALL TMA$IOP_ASGN_EA(PAR,EAINFO);
      477        8              ENVIRONMENT: Monitor Linkage Segment, Interrupt Level - DPS90 only
      478        9              INPUT:  PAR - REQ packet.
      479       10                      EAINFO - Not even picked up.
      480       11              DESCRIPTION:
      481       12                 This routine is the EA for an IOP Assign action from MSOS.
      482       13              Currently it only cleans up the IOS packet used as a buffer.
      483       14        */
      484       15        %EJECT;
PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:99   
      485       16        TMA$IOP_ASGN_EA: PROC(PAR);
      486       17    1   DCL PAR UBIN;
      487       18        %INCLUDE N$REQ;
      488       92        %INCLUDE NI$TABLES;
      489      308    1   DCL REQ$ PTR;
      490      309        %N$REQ(STCLASS="BASED(REQ$)");
      491      367    1   DCL P$ PTR;
      492      368    1   DCL NIQ$RELS ENTRY(1) ALTRET;
      493      369
      494      370    1      REQ$=ADDR(PAR);
      495      371    1      P$=N$REQ.BUF$;
      496      372    1      CALL NIQ$RELS(P$);
      497      373    1      RETURN;
      498      374    1   END TMA$IOP_ASGN_EA;
      499      375        %EOD;

PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:100  
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$IOP_ASGN_EA.

   Procedure TMA$IOP_ASGN_EA requires 14 words for executable code.
   Procedure TMA$IOP_ASGN_EA requires 8 words of local(AUTO) storage.

PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:101  

 Object Unit name= TMA$IOP_ASGN_EA                            File name= TMA$MSOS.:E05TOU
 UTS= JUL 30 '97 06:20:01.44 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    14     16  TMA$IOP_ASGN_EA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  TMA$IOP_ASGN_EA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 NIQ$RELS
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:102  


      470        1        /*T***********************************************************/
      471        2        /*T*                                                         */
      472        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      473        4        /*T*                                                         */
      474        5        /*T***********************************************************/
      475        6        /*D*  NAME: TMA$IOP_ASGN_EA
      476        7              CALL: CALL TMA$IOP_ASGN_EA(PAR,EAINFO);
      477        8              ENVIRONMENT: Monitor Linkage Segment, Interrupt Level - DPS90 only
      478        9              INPUT:  PAR - REQ packet.
      479       10                      EAINFO - Not even picked up.
      480       11              DESCRIPTION:
      481       12                 This routine is the EA for an IOP Assign action from MSOS.
      482       13              Currently it only cleans up the IOS packet used as a buffer.
      483       14        */
      484       15        %EJECT;
PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:103  
      485       16        TMA$IOP_ASGN_EA: PROC(PAR);

     16  0 000000   000000 700200 xent  TMA$IOP_ASG* TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      486       17    1   DCL PAR UBIN;
      487       18        %INCLUDE N$REQ;
      488       92        %INCLUDE NI$TABLES;
      489      308    1   DCL REQ$ PTR;
      490      309        %N$REQ(STCLASS="BASED(REQ$)");
      491      367    1   DCL P$ PTR;
      492      368    1   DCL NIQ$RELS ENTRY(1) ALTRET;
      493      369
      494      370    1      REQ$=ADDR(PAR);

    370  0 000002   200003 236100                    LDQ     @PAR,,AUTO
         0 000003   200004 756100                    STQ     REQ$,,AUTO

      495      371    1      P$=N$REQ.BUF$;

    371  0 000004   200004 470500                    LDP0    REQ$,,AUTO
         0 000005   000005 236100                    LDQ     5,,PR0
         0 000006   200005 756100                    STQ     P$,,AUTO

      496      372    1      CALL NIQ$RELS(P$);

    372  0 000007   200005 631500                    EPPR1   P$,,AUTO
         0 000010   200006 451500                    STP1    P$+1,,AUTO
         0 000011   200006 630500                    EPPR0   P$+1,,AUTO
         0 000012   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000013   000000 701000 xent               TSX1    NIQ$RELS
         0 000014   000000 011000                    NOP     0

      497      373    1      RETURN;

    373  0 000015   000000 702200 xent               TSX2  ! X66_ARET
      498      374    1   END TMA$IOP_ASGN_EA;
PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:104  
      499      375        %EOD;

PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:105  
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$IOP_ASGN_EA.
PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:106  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PAR                       5-0-0/w PTR         r     1 P$
    *0-0-0/w UBIN        r     1 PAR                        4-0-0/w PTR         r     1 REQ$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 N$REQ


   Procedure TMA$IOP_ASGN_EA requires 14 words for executable code.
   Procedure TMA$IOP_ASGN_EA requires 8 words of local(AUTO) storage.
PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:107  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #004=TMA$IOP_ASGN_EA File=TMA$MSOS.:E05TSI                         WED 07/30/97 06:20 Page:108  
          MINI XREF LISTING

N$REQ.BUF$
       327**DCL       371>>ASSIGN
N$REQ.BUFADDR
       327**DCL       328--REDEF     328--REDEF
N$REQ.DLA.DRELADDR
       319**DCL       319--REDEF
N$REQ.DVE.EOMCHAR
       356**DCL       357--REDEF
N$REQ.EAINFO
       350**DCL       350--REDEF
N$REQ.EAINFOX
       350**DCL       351--REDEF
N$REQ.EVNTINFO
       351**DCL       351--REDEF
N$REQ.STATUS
       332**DCL       338--REDEF
NIQ$RELS
       368**DCL-ENT   372--CALL
P$
       367**DCL       371<<ASSIGN    372<>CALL
PAR
        17**DCL        16--PROC      370--ASSIGN
REQ$
       308**DCL       318--IMP-PTR   370<<ASSIGN    371>>ASSIGN

PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:109  
      500        1        /*T***********************************************************/
      501        2        /*T*                                                         */
      502        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      503        4        /*T*                                                         */
      504        5        /*T***********************************************************/
      505        6        TMA$RESP_EA: PROC(PAR);
      506        7        /*D*  NAME: TMA$RESP_EA
      507        8              CALL: CALL TMA$RESP_EA(PAR,EAINFO);
      508        9              ENVIRONMENT: Monitor Linkage Segment, Interrupt Level - DPS90 only
      509       10              INPUT: PAR - REQ packet.
      510       11                     EAINFO - Not even picked up.
      511       12              DESCRIPTION:
      512       13                 This routine is the EA for CP6's response to MSOS for a System
      513       14              Resource Assign/Release operation.  Its only function is to return
      514       15              the IOS packet (used as a buffer) to the pool of free IOS packets.
      515       16        */
      516       17        %EJECT;
PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:110  
      517       18    1   DCL PAR UBIN;
      518       19        %INCLUDE N$REQ;
      519       93        %INCLUDE NI$TABLES;
      520      309    1   DCL REQ$ PTR;
      521      310        %N$REQ(STCLASS="BASED(REQ$)");
      522      368    1   DCL P$ PTR;
      523      369    1   DCL NIQ$RELS ENTRY(1) ALTRET;
      524      370
      525      371    1      REQ$=ADDR(PAR);
      526      372    1      P$=N$REQ.BUF$;
      527      373    1      CALL NIQ$RELS(P$);
      528      374    1   END TMA$RESP_EA;

PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:111  
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$RESP_EA.

   Procedure TMA$RESP_EA requires 14 words for executable code.
   Procedure TMA$RESP_EA requires 8 words of local(AUTO) storage.

    No errors detected in file TMA$MSOS.:E05TSI    .

PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:112  

 Object Unit name= TMA$RESP_EA                                File name= TMA$MSOS.:E05TOU
 UTS= JUL 30 '97 06:20:09.24 WED                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_SYSTEM                                    Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size OctSiz  Section name(segment info)
    0   Proc  even  none    14     16  TMA$RESP_EA

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect OctLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        1  TMA$RESP_EA

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       1 NIQ$RELS
                       nStd      0 X66_AUTO_1
                       Std       0 B_CONSPOOL_D
                       nStd      0 X66_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     B_VECTNIL
PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:113  


      500        1        /*T***********************************************************/
      501        2        /*T*                                                         */
      502        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      503        4        /*T*                                                         */
      504        5        /*T***********************************************************/
      505        6        TMA$RESP_EA: PROC(PAR);

      6  0 000000   000000 700200 xent  TMA$RESP_EA  TSX0  ! X66_AUTO_1
         0 000001   000010 000001                    ZERO    8,1

      506        7        /*D*  NAME: TMA$RESP_EA
      507        8              CALL: CALL TMA$RESP_EA(PAR,EAINFO);
      508        9              ENVIRONMENT: Monitor Linkage Segment, Interrupt Level - DPS90 only
      509       10              INPUT: PAR - REQ packet.
      510       11                     EAINFO - Not even picked up.
      511       12              DESCRIPTION:
      512       13                 This routine is the EA for CP6's response to MSOS for a System
      513       14              Resource Assign/Release operation.  Its only function is to return
      514       15              the IOS packet (used as a buffer) to the pool of free IOS packets.
      515       16        */
      516       17        %EJECT;
PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:114  
      517       18    1   DCL PAR UBIN;
      518       19        %INCLUDE N$REQ;
      519       93        %INCLUDE NI$TABLES;
      520      309    1   DCL REQ$ PTR;
      521      310        %N$REQ(STCLASS="BASED(REQ$)");
      522      368    1   DCL P$ PTR;
      523      369    1   DCL NIQ$RELS ENTRY(1) ALTRET;
      524      370
      525      371    1      REQ$=ADDR(PAR);

    371  0 000002   200003 236100                    LDQ     @PAR,,AUTO
         0 000003   200004 756100                    STQ     REQ$,,AUTO

      526      372    1      P$=N$REQ.BUF$;

    372  0 000004   200004 470500                    LDP0    REQ$,,AUTO
         0 000005   000005 236100                    LDQ     5,,PR0
         0 000006   200005 756100                    STQ     P$,,AUTO

      527      373    1      CALL NIQ$RELS(P$);

    373  0 000007   200005 631500                    EPPR1   P$,,AUTO
         0 000010   200006 451500                    STP1    P$+1,,AUTO
         0 000011   200006 630500                    EPPR0   P$+1,,AUTO
         0 000012   000017 631400 xsym               EPPR1   B_VECTNIL+15
         0 000013   000000 701000 xent               TSX1    NIQ$RELS
         0 000014   000000 011000                    NOP     0

      528      374    1   END TMA$RESP_EA;

    374  0 000015   000000 702200 xent               TSX2  ! X66_ARET

PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:115  
--  Include file information  --

   NI$TABLES.:E05TOU  is referenced.
   N$REQ.:E05TOU  is referenced.
      No diagnostics issued in procedure TMA$RESP_EA.
PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:116  

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     3-0-0/w PTR         r     1 @PAR                       5-0-0/w PTR         r     1 P$
    *0-0-0/w UBIN        r     1 PAR                        4-0-0/w PTR         r     1 REQ$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
OctLoc.c.b A Datatyp(siz) R M Lvl/name                 OctLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/d STRC(1080)  r     1 N$REQ


   Procedure TMA$RESP_EA requires 14 words for executable code.
   Procedure TMA$RESP_EA requires 8 words of local(AUTO) storage.

    No errors detected in file TMA$MSOS.:E05TSI    .
PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:117  
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #005=TMA$RESP_EA File=TMA$MSOS.:E05TSI                             WED 07/30/97 06:20 Page:118  
          MINI XREF LISTING

N$REQ.BUF$
       328**DCL       372>>ASSIGN
N$REQ.BUFADDR
       328**DCL       329--REDEF     329--REDEF
N$REQ.DLA.DRELADDR
       320**DCL       320--REDEF
N$REQ.DVE.EOMCHAR
       357**DCL       358--REDEF
N$REQ.EAINFO
       351**DCL       351--REDEF
N$REQ.EAINFOX
       351**DCL       352--REDEF
N$REQ.EVNTINFO
       352**DCL       352--REDEF
N$REQ.STATUS
       333**DCL       339--REDEF
NIQ$RELS
       369**DCL-ENT   373--CALL
P$
       368**DCL       372<<ASSIGN    373<>CALL
PAR
        18**DCL         6--PROC      371--ASSIGN
REQ$
       309**DCL       319--IMP-PTR   371<<ASSIGN    372>>ASSIGN
