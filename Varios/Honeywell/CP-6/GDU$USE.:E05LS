VERSION E05

PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:1    
        1        1        /*M* GDU$USE - Routines to decode USE command and do mappings                 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*             */
        8        8        /*P*  NAME:    GDU$USE
        9        9              PURPOSE: The module contains the routines that handle both
       10       10                       the USE command decoding and the utility routines
       11       11                       used by the rest of the debugger to do the necessary
       12       12                       pointer calculations and mapping tricks.
       13       13                                                                                      */
       14       14              %EJECT;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:2    
       15       15        /*F*  NAME:    GDU$DECODE_USE
       16       16              PURPOSE: This routine determines which of the forms of the USE
       17       17                       command has been used, and sets up global pointers to
       18       18                       point to the propper ASDT.
       19       19              CALL:    CALL GDU$DECODE_USE(SIZE,BUFFER)
       20       20              DESCRIPTION: This routine looks at the type field in the USE FPT
       21       21                           and determines which of the seven varietys of USE
       22       22                           this command is:
       23       23                           0 - The command was USE.  The monitors ASDT is to
       24       24                               be used.  The ASDT pointers are setup to point to the
       25       25                               MHJIT.
       26       26                           1 - The command was USE REAL.  The ASDT pointers are set
       27       27                               null and GD_USE_REAL is set true.
       28       28                           2 - The command was USE USER#.  The LCP6 user tables
       29       29                               are searched and the ASDT pointers are setup to point to
       30       30                               this users ASDT.  GD_USE_REAL is set false.
       31       31                           3 - The command was USE USER#,MON.  The LCP6 user
       32       32                               tables are searched and the ASDT pointers are setup to
       33       33                               point to the ASDT used for MCL processing in
       34       34                               the UHJIT.  GD_USE_REAL is set false.
       35       35                           4 - The command is USE MON.  The ASDT pointers are setup to
       36       36                               point to MHJIT.  GD_USE_REAL is set
       37       37                               false.
       38       38                           5 - The command is USE ASDT addr.  The ASDT pointers are setup
       39       39                               to point to the passed address (relative to the current
       40       40                               map).
       41       41                           6 - The command is USE LVL#.  The ASDT pointers are setup
       42       42                               to point to the ASDT contained in the ISA for the
       43       43                               indicated level.  GD_USE_REAL is set false.
       44       44                                                                                      */
       45       45        GDU$DECODE_USE: PROC(SIZE,BUFFER);
       46       46        /* */
       47       47        %INCLUDE G_HJIT_M;                      /* HJIT macros                        */
       48      192        %INCLUDE LCP_6;
       49      383        %INCLUDE GD_STATIC_DATA;
       50      856        %INCLUDE GD$MACS_M;
       51      894        %INCLUDE GH_HARDWARE_M;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:3    
       52      992        %INCLUDE G_JIT_M;
       53     1257        %INCLUDE KH$CHN;
       54     1379                                                /* ARGS                               */
       55     1380    1   DCL BUFFER CHAR(SIZE) ALIGNED;
       56     1381        %GD$MSG(FPTN=GD$MSG,STCLASS=REDEF BUFFER);
       57     1537    1   DCL SIZE UBIN;
       58     1538                                                /* TEMPS                              */
       59     1539    1   DCL NEW$ PTR;
       60     1540    1   DCL NEW REDEF NEW$ UBIN(32);
       61     1541    1   DCL USER# UBIN;
       62     1542                                                /* SYMREFS                            */
       63     1543    1   DCL G$LOW_MEM$ PTR SYMREF;
       64     1544    1   DCL G$MHJIT$ PTR SYMREF;
       65     1545    1   DCL G$ASDT_MCL$ PTR SYMREF;
       66     1546    1   DCL G$UHJIT$ PTR SYMREF;
       67     1547    1   DCL G$JIT$ PTR SYMREF;
       68     1548                                                /* BASED                              */
       69     1549        %G$ISA(STCLASS=BASED);
       70     1852        %G$LOW_MEM(STCLASS="BASED(G$LOW_MEM$)");
       71     1901        %G$JIT (STCLASS="BASED(NEW$)");
       72     2315        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
       73     9189        %G$SEGDESC (FPTN=G$SEGDESC,STCLASS=BASED);
       74     9211                                                /* ENTRYS                             */
       75     9212    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
       76     9213    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
       77     9214    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
       78     9215              %EJECT;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:4    
       79     9216        /*
       80     9217          Branch out, depending on what type of USE this is
       81     9218                                                                                      */
       82     9219    2           DO CASE (GD$MSG.SUBFNC);
       83     9220        /* USE                                                                        */
       84     9221    2            CASE(%GD#USE_TYPE_USE);
       85     9222    2              GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;
       86     9223    2              GD_DATA.GD.USE_REAL=%G_NO#;
       87     9224    2              GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;
       88     9225    2              GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;
       89     9226        /* USE REAL addr                                                              */
       90     9227    2            CASE(%GD#USE_TYPE_REAL);
       91     9228    2              GD_DATA.GD.USE_REAL=%G_YES#;
       92     9229        /* USE USER# - USE USER#,MON                                                  */
       93     9230    2            CASE(%GD#USE_TYPE_USER#, %GD#USE_TYPE_USER#_MON);
       94     9231    2              NEW$=G$ASDT_MCL$;
       95     9232    2              USER#=GD$MSG.USERQS.USERNUM.USER#;
       96     9233    2              IF USER#=0 THEN USER#=G$MHJIT.CUN;
       97     9234    2              CALL GDU$SETUP_WINDOW_USER (NEW$, USER#) ALTRET(ERR_RSP);
       98     9235    2              IF GD$MSG.SUBFNC=%GD#USE_TYPE_USER#_MON THEN
       99     9236    2                 GD_DATA.GD.ASDT_OFFSET=POFFW(NEW$, %WINDOW$#);
      100     9237        /* USE MON                                                                    */
      101     9238    2            CASE(%GD#USE_TYPE_MON);
      102     9239    2              NEW$=G$LOW_MEM$;
      103     9240    2              CALL GDU$SETUP_WINDOW_USER (NEW$,0); /* Won't altret               */
      104     9241        /* USE ASDT addr - USE IL #                                                   */
      105     9242    2            CASE(%GD#USE_TYPE_ASDT, %GD#USE_TYPE_LVL);
      106     9243    2              IF GD$MSG.SUBFNC=%GD#USE_TYPE_ASDT THEN
      107     9244    2                 NEW=GD$MSG.USERQS.ASDT$;
      108     9245    3              ELSE DO;
      109     9246    3                 IF GD$MSG.USERQS.IL.IL#>63 THEN GOTO ERR_RSP;
      110     9247    3                 NEW$=G$LOW_MEM.IV.IL$(GD$MSG.USERQS.IL.IL#);
      111     9248    3                 IF NEW$<G$UHJIT$ OR NEW$>ADDR(G$MHJIT.INTCON) THEN
      112     9249    3                    GOTO ERR_RSP;
      113     9250    3                 NEW$=PINCRW(NEW$,-5)->G$ISA.ASV$;
      114     9251    3                 END;
      115     9252    2              CALL GDU$SETUP_WINDOW (NEW$) ALTRET (ERR_RSP);
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:5    
      116     9253    2              IF POFFW(NEW$,%WINDOW$#)-194>%ASDT_WINDOW#.SIZE*256 THEN
      117     9254    3              DO;
      118     9255    3   ERR_RSP:      ;
      119     9256    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);
      120     9257    3                 RETURN;
      121     9258    3                 END;
      122     9259    2              GD_DATA.GD.ASDT_OFFSET=POFFW(NEW$,%WINDOW$#);
      123     9260    2              GD_DATA.GD.ASDT_PPNO=%ASDT_WINDOW#.BASE;
      124     9261    2              GD_DATA.GD.USE_REAL=%G_NO#;
      125     9262    2              GD_DATA.GD.USERNO=0;
      126     9263    2              NEW$=G$JIT$;
      127     9264    3              CALL GDU$SETUP_WINDOW (NEW$) WHENRETURN DO;
      128     9265    3                 GD_DATA.GD.USERNO=G$JIT.USR#;
      129     9266    3                 END;
      130     9267    2            END;                           /* CASE                               */
      131     9268        /* */
      132     9269    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);
      133     9270        /* */
      134     9271    1           RETURN;
      135     9272    1   END GDU$DECODE_USE;
      136     9273              %EJECT;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:6    
      137     9274              %EOD;

PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:7    
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDU$DECODE_USE.

   Procedure GDU$DECODE_USE requires 308 words for executable code.
   Procedure GDU$DECODE_USE requires 18 words of local(AUTO) storage.

PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:8    

 Object Unit name= GDU$DECODE_USE                             File name= GDU$USE.:E05TOU
 UTS= JUL 29 '97 21:28:19.48 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0   Proc  even  none   308    134  GDU$DECODE_USE

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     0      0   yes            yes      Std        2  GDU$DECODE_USE

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
 yes     yes           Std       2 GDU$SETUP_WINDOW_USER
 yes     yes           Std       1 GDU$SETUP_WINDOW
         yes           Std       3 GDI$SEND_ERROR_RESPONSE
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                        G$LOW_MEM$                            G$MHJIT$
     G$ASDT_MCL$                           G$UHJIT$                              G$JIT$
r    G$ROS$
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:9    


        1        1        /*M* GDU$USE - Routines to decode USE command and do mappings                 */
        2        2        /*T***********************************************************/
        3        3        /*T*                                                         */
        4        4        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
        5        5        /*T*                                                         */
        6        6        /*T***********************************************************/
        7        7        /*X*             */
        8        8        /*P*  NAME:    GDU$USE
        9        9              PURPOSE: The module contains the routines that handle both
       10       10                       the USE command decoding and the utility routines
       11       11                       used by the rest of the debugger to do the necessary
       12       12                       pointer calculations and mapping tricks.
       13       13                                                                                      */
       14       14              %EJECT;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:10   
       15       15        /*F*  NAME:    GDU$DECODE_USE
       16       16              PURPOSE: This routine determines which of the forms of the USE
       17       17                       command has been used, and sets up global pointers to
       18       18                       point to the propper ASDT.
       19       19              CALL:    CALL GDU$DECODE_USE(SIZE,BUFFER)
       20       20              DESCRIPTION: This routine looks at the type field in the USE FPT
       21       21                           and determines which of the seven varietys of USE
       22       22                           this command is:
       23       23                           0 - The command was USE.  The monitors ASDT is to
       24       24                               be used.  The ASDT pointers are setup to point to the
       25       25                               MHJIT.
       26       26                           1 - The command was USE REAL.  The ASDT pointers are set
       27       27                               null and GD_USE_REAL is set true.
       28       28                           2 - The command was USE USER#.  The LCP6 user tables
       29       29                               are searched and the ASDT pointers are setup to point to
       30       30                               this users ASDT.  GD_USE_REAL is set false.
       31       31                           3 - The command was USE USER#,MON.  The LCP6 user
       32       32                               tables are searched and the ASDT pointers are setup to
       33       33                               point to the ASDT used for MCL processing in
       34       34                               the UHJIT.  GD_USE_REAL is set false.
       35       35                           4 - The command is USE MON.  The ASDT pointers are setup to
       36       36                               point to MHJIT.  GD_USE_REAL is set
       37       37                               false.
       38       38                           5 - The command is USE ASDT addr.  The ASDT pointers are setup
       39       39                               to point to the passed address (relative to the current
       40       40                               map).
       41       41                           6 - The command is USE LVL#.  The ASDT pointers are setup
       42       42                               to point to the ASDT contained in the ISA for the
       43       43                               indicated level.  GD_USE_REAL is set false.
       44       44                                                                                      */
       45       45        GDU$DECODE_USE: PROC(SIZE,BUFFER);

     45   0 000000  D380 0000 0000  xent GDU$DECODE_USE  LNJ,B5   X6A_AUTO_2
          0 000003       0012 0002                       DC       18,2

       46       46        /* */
       47       47        %INCLUDE G_HJIT_M;                      /* HJIT macros                        */
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:11   
       48      192        %INCLUDE LCP_6;
       49      383        %INCLUDE GD_STATIC_DATA;
       50      856        %INCLUDE GD$MACS_M;
       51      894        %INCLUDE GH_HARDWARE_M;
       52      992        %INCLUDE G_JIT_M;
       53     1257        %INCLUDE KH$CHN;
       54     1379                                                /* ARGS                               */
       55     1380    1   DCL BUFFER CHAR(SIZE) ALIGNED;
       56     1381        %GD$MSG(FPTN=GD$MSG,STCLASS=REDEF BUFFER);
       57     1537    1   DCL SIZE UBIN;
       58     1538                                                /* TEMPS                              */
       59     1539    1   DCL NEW$ PTR;
       60     1540    1   DCL NEW REDEF NEW$ UBIN(32);
       61     1541    1   DCL USER# UBIN;
       62     1542                                                /* SYMREFS                            */
       63     1543    1   DCL G$LOW_MEM$ PTR SYMREF;
       64     1544    1   DCL G$MHJIT$ PTR SYMREF;
       65     1545    1   DCL G$ASDT_MCL$ PTR SYMREF;
       66     1546    1   DCL G$UHJIT$ PTR SYMREF;
       67     1547    1   DCL G$JIT$ PTR SYMREF;
       68     1548                                                /* BASED                              */
       69     1549        %G$ISA(STCLASS=BASED);
       70     1852        %G$LOW_MEM(STCLASS="BASED(G$LOW_MEM$)");
       71     1901        %G$JIT (STCLASS="BASED(NEW$)");
       72     2315        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
       73     9189        %G$SEGDESC (FPTN=G$SEGDESC,STCLASS=BASED);
       74     9211                                                /* ENTRYS                             */
       75     9212    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
       76     9213    1   DCL GDU$SETUP_WINDOW ENTRY(1) ALTRET;
       77     9214    1   DCL GDU$SETUP_WINDOW_USER ENTRY(2) ALTRET;
       78     9215              %EJECT;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:12   
       79     9216        /*
       80     9217          Branch out, depending on what type of USE this is
       81     9218                                                                                      */
       82     9219    2           DO CASE (GD$MSG.SUBFNC);

   9219   0 000005  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 000007  B806                                 LDR,R3   ,B6
          0 000008  B570 00FF                            AND,R3   255,IMO
          0 00000A  3D07                                 CMV,R3   7
          0 00000B  0281 0111                            BGE      s:9269,PREL
          0 00000D  A830 0000 0013  00                   LDR,R2   s:9219+14,R3
          0 000010  83A0 0000 001A  00                   JMP      s:9222,R2
          0 000013       0000                            DC       s:9222,PREL
          0 000014       0014                            DC       s:9228,PREL
          0 000015       001C                            DC       s:9231,PREL
          0 000016       001C                            DC       s:9231,PREL
          0 000017       0052                            DC       s:9239,PREL
          0 000018       0069                            DC       s:9243,PREL
          0 000019       0069                            DC       s:9243,PREL

       83     9220        /* USE                                                                        */
       84     9221    2            CASE(%GD#USE_TYPE_USE);

       85     9222    2              GD_DATA.GD.ASDT_PPNO=GD_DATA.GD.ASDT_USE_PPNO;

   9222   0 00001A  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 00001D  E845 0149                            LDR,R6   329,B5
          0 00001F  EF45 0147                            STR,R6   327,B5

       86     9223    2              GD_DATA.GD.USE_REAL=%G_NO#;

   9223   0 000021  8845 014C                            LBF,'0008'X       332,B5
   9223   0 000023       0008

       87     9224    2              GD_DATA.GD.ASDT_OFFSET=GD_DATA.GD.ASDT_USE_OFFSET;

   9224   0 000024  D845 014A                            LDR,R5   330,B5
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:13   
          0 000026  DF45 0148                            STR,R5   328,B5

       88     9225    2              GD_DATA.GD.USERNO=GD_DATA.GD.USE_USERNO;

   9225   0 000028  C845 014B                            LDR,R4   331,B5
          0 00002A  CF45 016B                            STR,R4   363,B5
          0 00002C  0F81 00F0                            B        s:9269,PREL

       89     9226        /* USE REAL addr                                                              */
       90     9227    2            CASE(%GD#USE_TYPE_REAL);

       91     9228    2              GD_DATA.GD.USE_REAL=%G_YES#;

   9228   0 00002E  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000031  8945 014C                            LBT,'0008'X       332,B5
          0 000033       0008
          0 000034  0F81 00E8                            B        s:9269,PREL

       92     9229        /* USE USER# - USE USER#,MON                                                  */
       93     9230    2            CASE(%GD#USE_TYPE_USER#, %GD#USE_TYPE_USER#_MON);

       94     9231    2              NEW$=G$ASDT_MCL$;

   9231   0 000036  DC80 0000 0000  xsym                 LDB,B5   G$ASDT_MCL$
          0 000039  DFC7 0008                            STB,B5   NEW$,AUTO

       95     9232    2              USER#=GD$MSG.USERQS.USERNUM.USER#;

   9232   0 00003B  E846 0002                            LDR,R6   2,B6
          0 00003D  EF47 000A                            STR,R6   USER#,AUTO

       96     9233    2              IF USER#=0 THEN USER#=G$MHJIT.CUN;

   9233   0 00003F  6981 0008                            BNEZ,R6  s:9234,PREL

   9233   0 000041  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          0 000044  E844 0351                            LDR,R6   849,B4
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:14   
          0 000046  EF47 000A                            STR,R6   USER#,AUTO

       97     9234    2              CALL GDU$SETUP_WINDOW_USER (NEW$, USER#) ALTRET(ERR_RSP);

   9234   0 000048  CBC7 000A                            LAB,B4   USER#,AUTO
          0 00004A  CFC7 000E                            STB,B4   USER#+4,AUTO
          0 00004C  BBC7 0008                            LAB,B3   NEW$,AUTO
          0 00004E  BFC7 000C                            STB,B3   USER#+2,AUTO
          0 000050  BBC7 000C                            LAB,B3   USER#+2,AUTO
          0 000052  CBF0 0200                            LAB,B4   512,IMO
          0 000054  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 000057       0082                            DC       s:9254,PREL

       98     9235    2              IF GD$MSG.SUBFNC=%GD#USE_TYPE_USER#_MON THEN

   9235   0 000058  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          0 00005A  E806                                 LDR,R6   ,B6
          0 00005B  E570 00FF                            AND,R6   255,IMO
          0 00005D  6D03                                 CMV,R6   3
          0 00005E  0981 00BE                            BNE      s:9269,PREL

       99     9236    2                 GD_DATA.GD.ASDT_OFFSET=POFFW(NEW$, %WINDOW$#);

   9236   0 000060  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          0 000063  8CC7 0008                            LDI      NEW$,AUTO
          0 000065  84C5 017C                            SID      380,B5
          0 000067  E857                                 LDR,R6   R7
          0 000068  EF45 0148                            STR,R6   328,B5
          0 00006A  0F81 00B2                            B        s:9269,PREL

      100     9237        /* USE MON                                                                    */
      101     9238    2            CASE(%GD#USE_TYPE_MON);

      102     9239    2              NEW$=G$LOW_MEM$;

   9239   0 00006C  DC80 0000 0000  xsym                 LDB,B5   G$LOW_MEM$
          0 00006F  DFC7 0008                            STB,B5   NEW$,AUTO
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:15   

      103     9240    2              CALL GDU$SETUP_WINDOW_USER (NEW$,0); /* Won't altret               */

   9240   0 000071  CBF0 0000                            LAB,B4   0,IMO
          0 000073  CFC7 000E                            STB,B4   USER#+4,AUTO
          0 000075  BBC7 0008                            LAB,B3   NEW$,AUTO
          0 000077  BFC7 000C                            STB,B3   USER#+2,AUTO
          0 000079  BBC7 000C                            LAB,B3   USER#+2,AUTO
          0 00007B  CBF0 0200                            LAB,B4   512,IMO
          0 00007D  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW_USER
          0 000080       0001                            DC       s:9240+16,PREL
          0 000081  0F81 009B                            B        s:9269,PREL

      104     9241        /* USE ASDT addr - USE IL #                                                   */
      105     9242    2            CASE(%GD#USE_TYPE_ASDT, %GD#USE_TYPE_LVL);

      106     9243    2              IF GD$MSG.SUBFNC=%GD#USE_TYPE_ASDT THEN

   9243   0 000083  3D05                                 CMV,R3   5
          0 000084  0981 0007                            BNE      s:9246,PREL

      107     9244    2                 NEW=GD$MSG.USERQS.ASDT$;

   9244   0 000086  8CC6 0001                            LDI      1,B6
          0 000088  8D47 0008                            SDI      NEW$,AUTO
          0 00008A  0F81 0022                            B        s:9252,PREL

      108     9245    3              ELSE DO;

      109     9246    3                 IF GD$MSG.USERQS.IL.IL#>63 THEN GOTO ERR_RSP;

   9246   0 00008C  E846 0002                            LDR,R6   2,B6
          0 00008E  6D3F                                 CMV,R6   63
          0 00008F  0301 0049                            BG       s:9254,PREL

      110     9247    3                 NEW$=G$LOW_MEM.IV.IL$(GD$MSG.USERQS.IL.IL#);

PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:16   
   9247   0 000091  9856                                 LDR,R1   R6
          0 000092  DC80 0000 0000  xsym                 LDB,B5   G$LOW_MEM$
          0 000095  1E40                                 ADV,R1   64
          0 000096  CC95                                 LDB,B4   ,B5,R1
          0 000097  CFC7 0008                            STB,B4   NEW$,AUTO

      111     9248    3                 IF NEW$<G$UHJIT$ OR NEW$>ADDR(G$MHJIT.INTCON) THEN

   9248   0 000099  CD80 0000 0000  xsym                 CMB,B4   G$UHJIT$
          0 00009C  0201 003C                            BL       s:9254,PREL
          0 00009E  BC80 0000 0000  xsym                 LDB,B3   G$MHJIT$
          0 0000A1  ABC3 035C                            LAB,B2   860,B3
          0 0000A3  AFC7 000C                            STB,B2   USER#+2,AUTO
          0 0000A5  CDC7 000C                            CMB,B4   USER#+2,AUTO
          0 0000A7  0301 0031                            BG       s:9254,PREL

      112     9249    3                    GOTO ERR_RSP;
      113     9250    3                 NEW$=PINCRW(NEW$,-5)->G$ISA.ASV$;

   9250   0 0000A9  9CC4 FFFB                            LDB,B1   -5,B4
          0 0000AB  9FC7 0008                            STB,B1   NEW$,AUTO

      114     9251    3                 END;

      115     9252    2              CALL GDU$SETUP_WINDOW (NEW$) ALTRET (ERR_RSP);

   9252   0 0000AD  DBC7 0008                            LAB,B5   NEW$,AUTO
          0 0000AF  DFC7 000C                            STB,B5   USER#+2,AUTO
          0 0000B1  BBC7 000C                            LAB,B3   USER#+2,AUTO
          0 0000B3  CBF0 0100                            LAB,B4   256,IMO
          0 0000B5  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 0000B8       0021                            DC       s:9254,PREL

      116     9253    2              IF POFFW(NEW$,%WINDOW$#)-194>%ASDT_WINDOW#.SIZE*256 THEN

   9253   0 0000B9  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 0000BC  8CC7 0008                            LDI      NEW$,AUTO
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:17   
          0 0000BE  84C6 017C                            SID      380,B6
          0 0000C0  DCC6 017A                            LDB,B5   378,B6
          0 0000C2  8D47 000C                            SDI      USER#+2,AUTO
          0 0000C4  F845 0001                            LDR,R7   1,B5
          0 0000C6  F570 01FF                            AND,R7   511,IMO
          0 0000C8  6C00                                 LDV,R6   0
          0 0000C9  7088                                 DOL,R7   8
          0 0000CA  8D47 000E                            SDI      USER#+4,AUTO
          0 0000CC  8CC7 000C                            LDI      USER#+2,AUTO
          0 0000CE  8470 FFFF FF3E                       AID      -194,IMO
          0 0000D1  84C7 000E                            SID      USER#+4,AUTO
          0 0000D3  6801 001C                            BLZ,R6   s:9259,PREL
          0 0000D5  6A01 0003                            BGZ,R6   s:9254,PREL
          0 0000D7  7901 0018                            BEZ,R7   s:9259,PREL

      117     9254    3              DO;

   9253   0                              ERR_RSP         null
      118     9255    3   ERR_RSP:      ;
      119     9256    3                 CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPBADADR);

   9256   0 0000D9  EBF0 0037            ERR_RSP         LAB,B6   55,IMO
          0 0000DB  EFC7 0010                            STB,B6   USER#+6,AUTO
          0 0000DD  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 0000DF  DFC7 000E                            STB,B5   USER#+4,AUTO
          0 0000E1  CCC7 0004                            LDB,B4   @SIZE,AUTO
          0 0000E3  CFC7 000C                            STB,B4   USER#+2,AUTO
          0 0000E5  BBC7 000C                            LAB,B3   USER#+2,AUTO
          0 0000E7  CBF0 0300                            LAB,B4   768,IMO
          0 0000E9  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 0000EC       0001                            DC       s:9257,PREL

      120     9257    3                 RETURN;

   9257   0 0000ED  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      121     9258    3                 END;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:18   
      122     9259    2              GD_DATA.GD.ASDT_OFFSET=POFFW(NEW$,%WINDOW$#);

   9259   0 0000F0  8CC7 0008                            LDI      NEW$,AUTO
          0 0000F2  84C6 017C                            SID      380,B6
          0 0000F4  E857                                 LDR,R6   R7
          0 0000F5  EF46 0148                            STR,R6   328,B6

      123     9260    2              GD_DATA.GD.ASDT_PPNO=%ASDT_WINDOW#.BASE;

   9260   0 0000F7  D805                                 LDR,R5   ,B5
          0 0000F8  D570 7FFF                            AND,R5   32767,IMO
          0 0000FA  DF46 0147                            STR,R5   327,B6

      124     9261    2              GD_DATA.GD.USE_REAL=%G_NO#;

   9261   0 0000FC  8846 014C                            LBF,'0008'X       332,B6
   9261   0 0000FE       0008

      125     9262    2              GD_DATA.GD.USERNO=0;

   9262   0 0000FF  8746 016B                            CL       363,B6

      126     9263    2              NEW$=G$JIT$;

   9263   0 000101  CC80 0000 0000  xsym                 LDB,B4   G$JIT$
          0 000104  CFC7 0008                            STB,B4   NEW$,AUTO

      127     9264    3              CALL GDU$SETUP_WINDOW (NEW$) WHENRETURN DO;

   9264   0 000106  BBC7 0008                            LAB,B3   NEW$,AUTO
          0 000108  BFC7 000C                            STB,B3   USER#+2,AUTO
          0 00010A  BBC7 000C                            LAB,B3   USER#+2,AUTO
          0 00010C  CBF0 0100                            LAB,B4   256,IMO
          0 00010E  E380 0000 0000  xent                 LNJ,B6   GDU$SETUP_WINDOW
          0 000111       000C                            DC       s:9269,PREL

      128     9265    3                 GD_DATA.GD.USERNO=G$JIT.USR#;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:19   

   9265   0 000112  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          0 000115  DCC7 0008                            LDB,B5   NEW$,AUTO
          0 000117  E845 0004                            LDR,R6   4,B5
          0 000119  E570 00FF                            AND,R6   255,IMO
          0 00011B  EF46 016B                            STR,R6   363,B6

      129     9266    3                 END;

      130     9267    2            END;                           /* CASE                               */

      131     9268        /* */
      132     9269    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);

   9269   0 00011D  EBF0 0023                            LAB,B6   35,IMO
          0 00011F  EFC7 0010                            STB,B6   USER#+6,AUTO
          0 000121  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          0 000123  DFC7 000E                            STB,B5   USER#+4,AUTO
          0 000125  CCC7 0004                            LDB,B4   @SIZE,AUTO
          0 000127  CFC7 000C                            STB,B4   USER#+2,AUTO
          0 000129  BBC7 000C                            LAB,B3   USER#+2,AUTO
          0 00012B  CBF0 0300                            LAB,B4   768,IMO
          0 00012D  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          0 000130       0001                            DC       s:9271,PREL

      133     9270        /* */
      134     9271    1           RETURN;

   9271   0 000131  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      135     9272    1   END GDU$DECODE_USE;
      136     9273              %EJECT;
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:20   
      137     9274              %EOD;

PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:21   
--  Include file information  --

   KH$CHN.:E05TOU  is referenced.
   G_JIT_M.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   GD$MACS_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDU$DECODE_USE.
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:22   

 **** Variables and constants ****

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @SIZE
    *0-0-0/w ACHR        r     1 BUFFER                    *0-0-0/w STRC(3344)  r     1 GD$MSG
     8-0-0/w UBIN(32)    r     1 NEW                        8-0-0/w PTR         r     1 NEW$
    *0-0-0/w UBIN(16)    r     1 SIZE                       A-0-0/w UBIN(16)    r     1 USER#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$ASDT_MCL$                0-0-0/w PTR         r     1 G$JIT$
     0-0-0/w PTR         r     1 G$LOW_MEM$                 0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 G$UHJIT$                   0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(720)   r     1 G$ISA                      0-0-0/w STRC(5616)  r     1 G$JIT
     0-0-0/w STRC(4096)  r     1 G$LOW_MEM                  0-0-0/w STRC(27232) r     1 G$MHJIT
     0-0-0/w STRC(32)    r     1 G$SEGDESC                  0-0-0/w STRC(16704) r     1 GD_DATA


   Procedure GDU$DECODE_USE requires 308 words for executable code.
   Procedure GDU$DECODE_USE requires 18 words of local(AUTO) storage.
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:23   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:24   
          MINI XREF LISTING

BUFFER
      1380**DCL        45--PROC     1398--REDEF    9256<>CALL     9269<>CALL
ERR_RSP
      9253**LABEL    9234--CALLALT  9246--GOTO     9249--GOTO     9252--CALLALT
G$ASDT_MCL$
      1545**DCL      9231>>ASSIGN
G$ISA.ASV$
      1580**DCL      9250>>ASSIGN
G$ISA.P$$
      1653**DCL      1653--REDEF
G$JIT.ERRLOG
      2245**DCL      2248--REDEF
G$JIT.JSUNIT
      1984**DCL      1985--REDEF
G$JIT.MCLS
      1983**DCL      1983--REDEF
G$JIT.TMRZ
      2252**DCL      2253--REDEF
G$JIT.USER_EXTIME
      1976**DCL      1977--REDEF
G$JIT.USER_MEMTIME
      1979**DCL      1979--REDEF
G$JIT.USER_SVTIME
      1978**DCL      1978--REDEF
G$JIT.USR#
      1973**DCL      9265>>ASSIGN
G$JIT$
      1547**DCL      9263>>ASSIGN
G$LOW_MEM.IV.IL$
      1894**DCL      1894--REDEF    9247>>ASSIGN
G$LOW_MEM.IV.INT.I#00$
      1894**DCL      1894--REDEF
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:25   
G$LOW_MEM.IV.INT.I#01$
      1894**DCL      1894--REDEF
G$LOW_MEM.IV.INT.I#02$
      1895**DCL      1895--REDEF
G$LOW_MEM.IV.INT.I#03$
      1895**DCL      1895--REDEF
G$LOW_MEM.IV.INT.I#04$
      1895**DCL      1896--REDEF
G$LOW_MEM.IV.INT.I#05$
      1896**DCL      1896--REDEF
G$LOW_MEM.IV.INT.I#61$
      1897**DCL      1897--REDEF
G$LOW_MEM.IV.INT.I#62$
      1897**DCL      1897--REDEF
G$LOW_MEM.IV.INT.I#63$
      1897**DCL      1897--REDEF
G$LOW_MEM.TV.T#01$
      1882**DCL      1882--REDEF
G$LOW_MEM.TV.T#02$
      1882**DCL      1882--REDEF
G$LOW_MEM.TV.T#03$
      1881**DCL      1881--REDEF
G$LOW_MEM.TV.T#05$
      1881**DCL      1881--REDEF
G$LOW_MEM.TV.T#06$
      1880**DCL      1880--REDEF
G$LOW_MEM.TV.T#07$
      1880**DCL      1880--REDEF
G$LOW_MEM.TV.T#08$
      1879**DCL      1880--REDEF
G$LOW_MEM.TV.T#09$
      1879**DCL      1879--REDEF
G$LOW_MEM.TV.T#10$
      1879**DCL      1879--REDEF
G$LOW_MEM.TV.T#12$
      1878**DCL      1878--REDEF
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:26   
G$LOW_MEM.TV.T#13$
      1878**DCL      1878--REDEF
G$LOW_MEM.TV.T#14$
      1877**DCL      1877--REDEF
G$LOW_MEM.TV.T#15$
      1877**DCL      1877--REDEF
G$LOW_MEM.TV.T#16$
      1876**DCL      1877--REDEF
G$LOW_MEM.TV.T#17$
      1876**DCL      1876--REDEF
G$LOW_MEM.TV.T#19$
      1875**DCL      1876--REDEF
G$LOW_MEM.TV.T#20$
      1875**DCL      1875--REDEF
G$LOW_MEM.TV.T#21$
      1875**DCL      1875--REDEF
G$LOW_MEM.TV.T#22$
      1874**DCL      1874--REDEF
G$LOW_MEM.TV.T#23$
      1874**DCL      1874--REDEF
G$LOW_MEM.TV.T#24$
      1873**DCL      1874--REDEF
G$LOW_MEM.TV.T#25$
      1873**DCL      1873--REDEF
G$LOW_MEM.TV.T#26$
      1873**DCL      1873--REDEF
G$LOW_MEM.TV.T#27$
      1872**DCL      1872--REDEF
G$LOW_MEM.TV.T#28$
      1872**DCL      1872--REDEF
G$LOW_MEM.TV.T#29$
      1871**DCL      1872--REDEF
G$LOW_MEM.TV.T#30$
      1871**DCL      1871--REDEF
G$LOW_MEM.TV.T#31$
      1871**DCL      1871--REDEF
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:27   
G$LOW_MEM.TV.T#32$
      1870**DCL      1870--REDEF
G$LOW_MEM.TV.T#33$
      1870**DCL      1870--REDEF
G$LOW_MEM$
      1543**DCL      1857--IMP-PTR  9239>>ASSIGN   9247>>ASSIGN
G$MHJIT.CUN
      8660**DCL      9233>>ASSIGN
G$MHJIT.INTCON
      8715**DCL      9248--IF
G$MHJIT.INTCON.HHJIT
      8794**DCL      8794--REDEF
G$MHJIT.INTCON.P$$
      8767**DCL      8767--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      5712**DCL      5712--REDEF
G$MHJIT.ISA_DBINH.P$$
      6926**DCL      6926--REDEF
G$MHJIT.ISA_IDLE.P$$
      3807**DCL      3807--REDEF
G$MHJIT.ISA_LVL10.P$$
      7229**DCL      7229--REDEF
G$MHJIT.ISA_LVL11.P$$
      7532**DCL      7532--REDEF
G$MHJIT.ISA_LVL12.P$$
      7835**DCL      7835--REDEF
G$MHJIT.ISA_LVL5.P$$
      6015**DCL      6015--REDEF
G$MHJIT.ISA_OV.P$$
      5409**DCL      5409--REDEF
G$MHJIT.ISA_PFS.P$$
      5080**DCL      5080--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      8442**DCL      8442--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      6319**DCL      6319--REDEF
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:28   
G$MHJIT.ISA_SATYR_TRN.P$$
      6623**DCL      6623--REDEF
G$MHJIT.ISA_SCHD.P$$
      8138**DCL      8138--REDEF
G$MHJIT.ISA_WDOG.P$$
      5188**DCL      5188--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      4410**DCL      4410--REDEF
G$MHJIT.TSA_DB.P$$
      4281**DCL      4281--REDEF    4282--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      8988**DCL      8988--REDEF
G$MHJIT.TSA_HND.P$$
      8859**DCL      8859--REDEF    8860--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      4022**DCL      4022--REDEF
G$MHJIT.TSA_MON.P$$
      3893**DCL      3893--REDEF    3894--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      4798**DCL      4798--REDEF
G$MHJIT.TSA_OV.P$$
      4669**DCL      4669--REDEF    4670--REDEF
G$MHJIT$
      1544**DCL      2332--IMP-PTR  9233>>ASSIGN   9248>>IF
G$SEGDESC.BASE
      9207**DCL      9260>>ASSIGN
G$SEGDESC.SIZE
      9209**DCL      9253>>IF
G$UHJIT$
      1546**DCL      9248>>IF
GD$DELTA_DATA$
       809**DCL       823--IMP-PTR  9222>>ASSIGN   9222>>ASSIGN   9223>>ASSIGN   9224>>ASSIGN   9224>>ASSIGN
      9225>>ASSIGN   9225>>ASSIGN   9228>>ASSIGN   9236>>ASSIGN   9236>>ASSIGN   9253>>IF       9253>>IF
      9259>>ASSIGN   9259>>ASSIGN   9260>>ASSIGN   9260>>ASSIGN   9261>>ASSIGN   9262>>ASSIGN   9265>>ASSIGN
GD$MSG.BRKRQS.IF$CONST.SIZE
      1449**DCL      1449--REDEF
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:29   
GD$MSG.BRKRQS.IF$CONST.TEXT
      1449**DCL      1450--REDEF    1450--REDEF    1451--REDEF    1452--REDEF
GD$MSG.BRKRSP.BRK#
      1463**DCL      1463--REDEF
GD$MSG.BRKRSP.USER#
      1463**DCL      1463--REDEF
GD$MSG.LETMEM_D.VALUE.SIZE
      1421**DCL      1421--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
      1422**DCL      1422--REDEF    1422--REDEF    1423--REDEF    1424--REDEF
GD$MSG.MESSAGE
      1403**DCL      1403--REDEF    1404--REDEF    1404--REDEF    1405--REDEF    1416--REDEF    1429--REDEF
      1434--REDEF    1441--REDEF    1457--REDEF    1462--REDEF    1468--REDEF    1469--REDEF    1498--REDEF
      1500--REDEF    1511--REDEF    1518--REDEF    1530--REDEF
GD$MSG.SUBFNC
      1398**DCL      1398--REDEF    1402--REDEF    9219>>DOCASE   9235>>IF       9243>>IF
GD$MSG.TSA.I
      1470**DCL      1470--REDEF
GD$MSG.TSA.S
      1472**DCL      1472--REDEF
GD$MSG.USERQS.ASDT$
      1498**DCL      1498--REDEF    1499--REDEF    9244>>ASSIGN
GD$MSG.USERQS.IL.IL#
      1499**DCL      9246>>IF       9247>>ASSIGN
GD$MSG.USERQS.USERNUM.USER#
      1499**DCL      9232>>ASSIGN
GDI$SEND_ERROR_RESPONSE
      9212**DCL-ENT  9256--CALL     9269--CALL
GDU$SETUP_WINDOW
      9213**DCL-ENT  9252--CALL     9264--CALL
GDU$SETUP_WINDOW_USER
      9214**DCL-ENT  9234--CALL     9240--CALL
GD_DATA.GD.ASDT_OFFSET
       829**DCL      9224<<ASSIGN   9236<<ASSIGN   9259<<ASSIGN
GD_DATA.GD.ASDT_PPNO
       828**DCL      9222<<ASSIGN   9260<<ASSIGN
PL6.E3A0      #001=GDU$DECODE_USE File=GDU$USE.:E05TSI                           TUE 07/29/97 21:28 Page:30   
GD_DATA.GD.ASDT_USE_OFFSET
       829**DCL      9224>>ASSIGN
GD_DATA.GD.ASDT_USE_PPNO
       829**DCL      9222>>ASSIGN
GD_DATA.GD.ASDT_WINDOW$
       845**DCL      9253>>IF       9260>>ASSIGN
GD_DATA.GD.DYNSP$
       836**DCL       836--REDEF
GD_DATA.GD.STEP_BRKPNT.ADR$
       837**DCL       838--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       838**DCL       838--REDEF
GD_DATA.GD.USERNO
       843**DCL      9225<<ASSIGN   9262<<ASSIGN   9265<<ASSIGN
GD_DATA.GD.USE_REAL
       833**DCL      9223<<ASSIGN   9228<<ASSIGN   9261<<ASSIGN
GD_DATA.GD.USE_USERNO
       829**DCL      9225>>ASSIGN
GD_DATA.GD.WINDOW$
       845**DCL      9236>>ASSIGN   9253>>IF       9259>>ASSIGN
NEW
      1540**DCL      9244<<ASSIGN
NEW$
      1539**DCL      1540--REDEF    1915--IMP-PTR  9231<<ASSIGN   9234<>CALL     9236>>ASSIGN   9239<<ASSIGN
      9240<>CALL     9247<<ASSIGN   9248>>IF       9248>>IF       9250<<ASSIGN   9250>>ASSIGN   9252<>CALL
      9253>>IF       9259>>ASSIGN   9263<<ASSIGN   9264<>CALL     9265>>ASSIGN
SIZE
      1537**DCL        45--PROC     1380--IMP-SIZ  9256<>CALL     9256>>CALL     9269<>CALL     9269>>CALL
USER#
      1541**DCL      9232<<ASSIGN   9233>>IF       9233<<ASSIGN   9234<>CALL

PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:31   
      138        1        /*T***********************************************************/
      139        2        /*T*                                                         */
      140        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      141        4        /*T*                                                         */
      142        5        /*T***********************************************************/
      143        6        /*F*     NAME:     GDU$SETUP_WINDOW
      144        7                 PURPOSE:  This routine is called to update the window
      145        8                           segment to point to the virtual memory indicated
      146        9                           by both the ASDT that is to be used and the input pointer.
      147       10                           Upon exit, the address pointer is setup to point to
      148       11                           the indicated memory in the new window.
      149       12                 CALL:     CALL GDU$SETUP_WINDOW (ADR$) ALTRET_IF_IT_WOULD_TRAP;
      150       13                           CALL GDU$SETUP_WINDOW_USER (ADR$,USER#)
      151       14                              ALTRET_IF_BAD_USER_OR_IT_WOULD_TRAP;
      152       15                 DESCRIPTION:  This routine first looks at the GD_USE_REAL
      153       16                               flag to determine if the user has said USE REAL.
      154       17                               If he has, We figure out what physical page is
      155       18                               indicated by the input pointer, and then setup
      156       19                               the window segment to point to that virtual
      157       20                               page.  We then return after building an output
      158       21                               pointer to point to the appropriate place in
      159       22                               that page.
      160       23                               If the GD_USE_REAL flag is not set, we use the
      161       24                               information in GD_ASDT_PPNO and GD_ASDT_OFFSET
      162       25                               to get the ASDT we need to use into the window
      163       26                               segment.  The input pointer is then broken down
      164       27                               to determine what descritor we need to access.
      165       28                               This descriptor is then loaded into the window
      166       29                               segment, and an output pointer is built which
      167       30                               points to the indicated memory in the window.
      168       31                               If entry is made to this routine via the
      169       32                               GDU$SETUP_WINDOW_USER entry point, the user
      170       33                               number passed is used to setup the ASDT info
      171       34                               needed by the rest of the routine.
      172       35                               *NOTE*  ENTRY INTO THIS ROUTINE AT THE GDU$SETUP_WINDOW_USER
      173       36                               ENTRY POINT CAUSES THE VALUES OF GD_USERNO,
      174       37                               GD_ASDT_PPNO AND GD_ASDT_OFFSET TO BE CHANGED TO
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:32   
      175       38                               REFLECT THE ASDT OF THE USER NUMBER PASSED.
      176       39                               THESE VALUES NEED TO BE PRESERVED BY THE CALLER
      177       40                               IF HE NEEDS TO KNOW THEIR ORIGINAL VALUES.
      178       41                                                                                      */
      179       42        GDU$SETUP_WINDOW_USER: PROC(OLD$,USER#) ALTRET;
      180       43                                                /* INCLUDES                           */
      181       44        %INCLUDE LCP_6;
      182      235        %INCLUDE GD_STATIC_DATA;
      183      708        %INCLUDE G_HJIT_M;
      184      853        %INCLUDE GH_HARDWARE_M;
      185      951        %INCLUDE GH_SCHD_E;
      186     1047        %INCLUDE GH_SCHD_M;
      187     1191        %INCLUDE KH$CHN;
      188     1313        %INCLUDE GM_VIRTUAL_E;
      189     1523                                                /* SYMREFS                            */
      190     1524    1   DCL G$BOBCAT$ PTR SYMREF;
      191     1525    1   DCL G$MHJIT$ PTR SYMREF;
      192     1526    1   DCL G$USRT$ PTR SYMREF;
      193     1527                                                /* BASED                              */
      194     1528        %G$USER(FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
      195     1539        %G$TSA;
      196     1927        %GH_VLD (STCLASS=CONSTANT, FPTN=CANNED_GH_VLD, RANGE=2, RING="%BITBIN(G_R_DB#)");
      197     1941        %GH_VLD (STCLASS=BASED);
      198     1955        %EQU G$TSA=CHARTEXT('GD_DATA.DELTAINFO.TSA$->G$TSA');
      199     1956        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
      200     8830        %G$UHJIT(STCLASS=BASED);
      201    11804        %G$ASDT(STCLASS=BASED);
      202    11833        %G$SEGDESC(STCLASS=BASED);
      203    11855                                                /* ARGS                               */
      204    11856    1   DCL OFFSET UBIN;
      205    11857    1   DCL OLD$ UBIN(32);
      206    11858    1   DCL NEW$ REDEF OLD$ PTR;
      207    11859    1   DCL USER# UBIN;
      208    11860                                                /* TEMPS                              */
      209    11861    1   DCL PAGNO UBIN;
      210    11862    1   DCL SEGNO UBIN;
      211    11863                                                /* ENTRYS                             */
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:33   
      212    11864    1   DCL GHH$ASD ENTRY(2);
      213    11865    1   DCL GHH$VLD ENTRY(1) ALTRET;
      214    11866              %EJECT;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:34   
      215    11867        /*
      216    11868          If this is user delta, Just validate.
      217    11869                                                                                      */
      218    11870    1           IF GD_DATA.GD.MODE~=%GD#MODE_USER_DELTA THEN
      219    11871    2           DO;
      220    11872        /*
      221    11873        Setup the GD_DATA.GD.ASDT_PPNO and GD_DATA.GD.ASDT_OFFSET cells from the passed user
      222    11874          number
      223    11875                                                                                      */
      224    11876    2              IF USER#= 0 THEN
      225    11877    3              DO;
      226    11878    3                 GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.MHJIT.BASE;
      227    11879    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(ADDR(G$MHJIT.ASDT_MON),ADDR(G$MHJIT));
      228    11880    3                 END;
      229    11881    2              ELSE
      230    11882    3              DO;
      231    11883        /*
      232    11884          First check the user# for legality.
      233    11885         */
      234    11886    3                 CALL GHH$ASD (G$BOBCAT$, G$MHJIT.ASDT_MON.BOBCAT);
      235    11887    3                 IF USER# > GD_DATA.GD.MUIS OR
      236    11888    3                   G$USER.US(USER#) = %GH_NULL THEN ALTRETURN;
      237    11889    3                 GD_DATA.GD.ASDT_PPNO=G$USER.UHJITPP(USER#);
      238    11890    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(ADDR(%WINDOW$#->G$UHJIT.ASDT_USR),
      239    11891    3                   %WINDOW$#);
      240    11892    3                 END;
      241    11893    2              GD_DATA.GD.USERNO=USER#;
      242    11894    2              GD_DATA.GD.USE_REAL='0'B;
      243    11895    2              END;
      244    11896        %EJECT;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:35   
      245    11897        /*
      246    11898          Enter here if GD_DATA.GD.ASDT_PPNO and GD_DATA.GD.ASDT_OFFSET are allready setup
      247    11899                                                                                      */
      248    11900    1   GDU$SETUP_WINDOW: ENTRY(OLD$) ALTRET;
      249    11901        /*
      250    11902          If this is user delta, we dont need to do anything
      251    11903                                                                                      */
      252    11904    1           IF GD_DATA.GD.MODE=%GD#MODE_USER_DELTA THEN
      253    11905    2           DO;
      254    11906    2              %GH@VLD=CANNED_GH_VLD;
      255    11907    2              %GH@VLD.ADR$=NEW$;
      256    11908    3              CALL GHH$VLD (%GH@VLD) WHENALTRETURN DO;
      257    11909    3                 IF (%GH@VLD.ADR$>=ADDR(%G$TSA.I)
      258    11910    3                   AND %GH@VLD.ADR$<ADDR(%G$TSA.S))
      259    11911    3                   OR (%GH@VLD.ADR$>ADDR(%G$TSA.ISA.S)
      260    11912    3                   AND (%GH@VLD.ADR$<ADDR(%G$TSA.ISA.REGS.B3$)
      261    11913    3                   OR %GH@VLD.ADR$>=ADDR(%G$TSA.ISA.REGS.B4$))
      262    11914    3                   AND %GH@VLD.ADR$<PINCRW(ADDR(%G$TSA),SIZEW(G$TSA)))
      263    11915    3                 THEN %GH@VLD.STATUS=2;
      264    11916    3                 ELSE ALTRETURN;
      265    11917    3                 END;
      266    11918    2              RETURN;
      267    11919    2              END;
      268    11920        /*
      269    11921          Make sure that the valid bit is on in the window descriptor.
      270    11922          It may have been previously turned off.
      271    11923                                                                                      */
      272    11924    1           %ASDT_WINDOW#.V=%G_YES#;
      273    11925        /*
      274    11926          Check to see if the USE REAL command is in force
      275    11927                                                                                      */
      276    11928    1           IF GD_DATA.GD.USE_REAL THEN
      277    11929    2           DO;
      278    11930        /*
      279    11931          Figure out what physical page the real address is in and window it
      280    11932                                                                                      */
      281    11933    2              %ASDT_WINDOW#.BASE=OLD$/256;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:36   
      282    11934    2              OFFSET=MOD(OLD$,256);
      283    11935    2              %ASDT_WINDOW#.SIZE=0;
      284    11936    2              CALL GHH$ASD(%WINDOW$#,%ASDT_WINDOW#);
      285    11937    2              NEW$=PINCRW(%WINDOW$#,OFFSET);
      286    11938    2              END;
      287    11939    1           ELSE IF OLD$<256 THEN
      288    11940        /*
      289    11941          Special case for page zero. (a lot like real).
      290    11942         */
      291    11943    2              DO;
      292    11944    2                 %ASDT_WINDOW#.BASE=0;     /* ANYTHING SMALL ENOUGH              */
      293    11945    2                 OFFSET=0;                 /* Dito                               */
      294    11946    2                 END;
      295    11947        /*
      296    11948          Otherwise, we are using somebodys ASDT
      297    11949                                                                                      */
      298    11950    1              ELSE
      299    11951    2              DO;
      300    11952        /*
      301    11953          Calculate what SEG number we need
      302    11954                                                                                      */
      303    11955    2                 IF OLD$/65536=0 THEN
      304    11956    3                 DO;
      305    11957    3                    SEGNO=OLD$/4096;
      306    11958    3                    OFFSET=MOD(OLD$,4096);
      307    11959    3                    END;
      308    11960    2                 ELSE
      309    11961    3                 DO;
      310    11962    3                    SEGNO=(OLD$/65536)+15;
      311    11963    3                    OFFSET=BITBIN(BINBIT(OLD$,16));
      312    11964    3                    END;
      313    11965        /*
      314    11966          If we are trying to look at something that would have fallen in the
      315    11967          original window segment, lets use the window descriptor we entered
      316    11968          with, not the one thats there now.
      317    11969                                                                                      */
      318    11970    2                 IF (GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.MHJIT.BASE) AND
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:37   
      319    11971    2                   (GD_DATA.GD.ASDT_OFFSET = POFFW(ADDR(G$MHJIT.ASDT_MON),
      320    11972    2                   ADDR(G$MHJIT))) AND
      321    11973    2                   (SEGNO=%GM_WINDOW1#) THEN
      322    11974    2                    %ASDT_WINDOW#=GD_DATA.GD.WINDOWSEG;
      323    11975    2                 ELSE
      324    11976    3                 DO;
      325    11977        /*
      326    11978          Setup a window over the ASDT we are going to use
      327    11979                                                                                      */
      328    11980    3                    %ASDT_WINDOW#.BASE=GD_DATA.GD.ASDT_PPNO;
      329    11981    3                    %ASDT_WINDOW#.SIZE=(GD_DATA.GD.ASDT_OFFSET/256)+1;
      330    11982    3                    CALL GHH$ASD(%WINDOW$#,%ASDT_WINDOW#);
      331    11983        /*
      332    11984          Now, map the segment we need into the window
      333    11985                                                                                      */
      334    11986    4                    IF SEGNO <=31 THEN DO;
      335    11987    4                       %ASDT_WINDOW#.BASE=PINCRW(%WINDOW$#,GD_DATA.GD.ASDT_OFFSET)
      336    11988    4                         -> G$ASDT.DESC.BASE(SEGNO);
      337    11989    4                       %ASDT_WINDOW#.SIZE=PINCRW(%WINDOW$#,GD_DATA.GD.ASDT_OFFSET)
      338    11990    4                         -> G$ASDT.DESC.SIZE(SEGNO);
      339    11991    4                       END;
      340    11992    3                    ELSE
      341    11993    3                       %ASDT_WINDOW#.V=%G_NO#;
      342    11994    3                    END;
      343    11995    2                 CALL GHH$ASD(%WINDOW$#,%ASDT_WINDOW#);
      344    11996        /*
      345    11997          Build the new pointer
      346    11998                                                                                      */
      347    11999    2                 NEW$=PINCRW(%WINDOW$#,OFFSET);
      348    12000    2                 END;
      349    12001    1           %GH@VLD.STATUS=-1;
      350    12002    1           OFFSET=OFFSET/256;              /* In pages                           */
      351    12003    1           IF NOT %ASDT_WINDOW#.V
      352    12004    1             OR OFFSET>%ASDT_WINDOW#.SIZE
      353    12005    1             OR %ASDT_WINDOW#.BASE+OFFSET>GD_DATA.GD.HIMEM THEN
      354    12006    1              ALTRETURN;
      355    12007    1           %GH@VLD.STATUS=2;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:38   
      356    12008        /* */
      357    12009    1           RETURN;
      358    12010    1   END;
      359    12011        %EOD;

PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:39   
--  Include file information  --

   GM_VIRTUAL_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDU$SETUP_WINDOW_USER.

   Procedure GDU$SETUP_WINDOW_USER requires 574 words for executable code.
   Procedure GDU$SETUP_WINDOW_USER requires 24 words of local(AUTO) storage.

PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:40   

 Object Unit name= GDU$SETUP_WINDOW_USER                      File name= GDU$USE.:E05TOU
 UTS= JUL 29 '97 21:29:41.40 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS      5      5  GDU$SETUP_WINDOW_USER
    1   Proc  even  none   574    23E  GDU$SETUP_WINDOW_USER

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes    yes     yes      Std        2  GDU$SETUP_WINDOW_USER
     1     6F          yes     yes      Std        1  GDU$SETUP_WINDOW

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       2 GHH$ASD
 yes     yes           Std       1 GHH$VLD
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_AALT
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                        G$BOBCAT$                             G$MHJIT$
     G$USRT$                          r    G$ROS$
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:41   


      138        1        /*T***********************************************************/
      139        2        /*T*                                                         */
      140        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      141        4        /*T*                                                         */
      142        5        /*T***********************************************************/
      143        6        /*F*     NAME:     GDU$SETUP_WINDOW
      144        7                 PURPOSE:  This routine is called to update the window
      145        8                           segment to point to the virtual memory indicated
      146        9                           by both the ASDT that is to be used and the input pointer.
      147       10                           Upon exit, the address pointer is setup to point to
      148       11                           the indicated memory in the new window.
      149       12                 CALL:     CALL GDU$SETUP_WINDOW (ADR$) ALTRET_IF_IT_WOULD_TRAP;
      150       13                           CALL GDU$SETUP_WINDOW_USER (ADR$,USER#)
      151       14                              ALTRET_IF_BAD_USER_OR_IT_WOULD_TRAP;
      152       15                 DESCRIPTION:  This routine first looks at the GD_USE_REAL
      153       16                               flag to determine if the user has said USE REAL.
      154       17                               If he has, We figure out what physical page is
      155       18                               indicated by the input pointer, and then setup
      156       19                               the window segment to point to that virtual
      157       20                               page.  We then return after building an output
      158       21                               pointer to point to the appropriate place in
      159       22                               that page.
      160       23                               If the GD_USE_REAL flag is not set, we use the
      161       24                               information in GD_ASDT_PPNO and GD_ASDT_OFFSET
      162       25                               to get the ASDT we need to use into the window
      163       26                               segment.  The input pointer is then broken down
      164       27                               to determine what descritor we need to access.
      165       28                               This descriptor is then loaded into the window
      166       29                               segment, and an output pointer is built which
      167       30                               points to the indicated memory in the window.
      168       31                               If entry is made to this routine via the
      169       32                               GDU$SETUP_WINDOW_USER entry point, the user
      170       33                               number passed is used to setup the ASDT info
      171       34                               needed by the rest of the routine.
      172       35                               *NOTE*  ENTRY INTO THIS ROUTINE AT THE GDU$SETUP_WINDOW_USER
      173       36                               ENTRY POINT CAUSES THE VALUES OF GD_USERNO,
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:42   
      174       37                               GD_ASDT_PPNO AND GD_ASDT_OFFSET TO BE CHANGED TO
      175       38                               REFLECT THE ASDT OF THE USER NUMBER PASSED.
      176       39                               THESE VALUES NEED TO BE PRESERVED BY THE CALLER
      177       40                               IF HE NEEDS TO KNOW THEIR ORIGINAL VALUES.
      178       41                                                                                      */
      179       42        GDU$SETUP_WINDOW_USER: PROC(OLD$,USER#) ALTRET;

     42   1 000000  D380 0000 0000  xent GDU$SETUP_WINDO*LNJ,B5   X6A_AUTO_2
          1 000003       0018 0002                       DC       24,2

      180       43                                                /* INCLUDES                           */
      181       44        %INCLUDE LCP_6;
      182      235        %INCLUDE GD_STATIC_DATA;
      183      708        %INCLUDE G_HJIT_M;
      184      853        %INCLUDE GH_HARDWARE_M;
      185      951        %INCLUDE GH_SCHD_E;
      186     1047        %INCLUDE GH_SCHD_M;
      187     1191        %INCLUDE KH$CHN;
      188     1313        %INCLUDE GM_VIRTUAL_E;
      189     1523                                                /* SYMREFS                            */
      190     1524    1   DCL G$BOBCAT$ PTR SYMREF;
      191     1525    1   DCL G$MHJIT$ PTR SYMREF;
      192     1526    1   DCL G$USRT$ PTR SYMREF;
      193     1527                                                /* BASED                              */
      194     1528        %G$USER(FPTN="G$USER(0:0)",STCLASS="BASED(G$USRT$)");
      195     1539        %G$TSA;
      196     1927        %GH_VLD (STCLASS=CONSTANT, FPTN=CANNED_GH_VLD, RANGE=2, RING="%BITBIN(G_R_DB#)");
      197     1941        %GH_VLD (STCLASS=BASED);
      198     1955        %EQU G$TSA=CHARTEXT('GD_DATA.DELTAINFO.TSA$->G$TSA');
      199     1956        %G$MHJIT(STCLASS="BASED(G$MHJIT$)");
      200     8830        %G$UHJIT(STCLASS=BASED);
      201    11804        %G$ASDT(STCLASS=BASED);
      202    11833        %G$SEGDESC(STCLASS=BASED);
      203    11855                                                /* ARGS                               */
      204    11856    1   DCL OFFSET UBIN;
      205    11857    1   DCL OLD$ UBIN(32);
      206    11858    1   DCL NEW$ REDEF OLD$ PTR;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:43   
      207    11859    1   DCL USER# UBIN;
      208    11860                                                /* TEMPS                              */
      209    11861    1   DCL PAGNO UBIN;
      210    11862    1   DCL SEGNO UBIN;
      211    11863                                                /* ENTRYS                             */
      212    11864    1   DCL GHH$ASD ENTRY(2);
      213    11865    1   DCL GHH$VLD ENTRY(1) ALTRET;
      214    11866              %EJECT;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:44   
      215    11867        /*
      216    11868          If this is user delta, Just validate.
      217    11869                                                                                      */
      218    11870    1           IF GD_DATA.GD.MODE~=%GD#MODE_USER_DELTA THEN

  11870   1 000005  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000008  E846 0130                            LDR,R6   304,B6
          1 00000A  6D01                                 CMV,R6   1
          1 00000B  0901 0061                            BE       s:11895,PREL

      219    11871    2           DO;

      220    11872        /*
      221    11873       Setup the GD_DATA.GD.ASDT_PPNO and GD_DATA.GD.ASDT_OFFSET cells from the passed user
      222    11874          number
      223    11875                                                                                      */
      224    11876    2              IF USER#= 0 THEN

  11876   1 00000D  DCC7 0006                            LDB,B5   @USER#,AUTO
          1 00000F  D805                                 LDR,R5   ,B5
          1 000010  5981 0015                            BNEZ,R5  s:11886,PREL

      225    11877    3              DO;

      226    11878    3                 GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.MHJIT.BASE;

  11878   1 000012  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          1 000015  C844 000C                            LDR,R4   12,B4
          1 000017  C570 7FFF                            AND,R4   32767,IMO
          1 000019  CF46 0147                            STR,R4   327,B6

      227    11879    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(ADDR(G$MHJIT.ASDT_MON),ADDR(G$MHJIT));

  11879   1 00001B  8C80 0000 0000  xsym                 LDI      G$MHJIT$
          1 00001E  8480 0000 0000  xsym                 SID      G$MHJIT$
          1 000021  E857                                 LDR,R6   R7
          1 000022  EF46 0148                            STR,R6   328,B6
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:45   

      228    11880    3                 END;

  11880   1 000024  0F81 003D                            B        s:11893,PREL

      229    11881    2              ELSE
      230    11882    3              DO;

      231    11883        /*
      232    11884          First check the user# for legality.
      233    11885         */
      234    11886    3                 CALL GHH$ASD (G$BOBCAT$, G$MHJIT.ASDT_MON.BOBCAT);

  11886   1 000026  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          1 000029  BBC4 0036                            LAB,B3   54,B4
          1 00002B  BFC7 000E                            STB,B3   SEGNO+4,AUTO
          1 00002D  AB80 0000 0000  xsym                 LAB,B2   G$BOBCAT$
          1 000030  AFC7 000C                            STB,B2   SEGNO+2,AUTO
          1 000032  BBC7 000C                            LAB,B3   SEGNO+2,AUTO
          1 000034  CBF0 0200                            LAB,B4   512,IMO
          1 000036  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          1 000039       0001                            DC       s:11887,PREL

      235    11887    3                 IF USER# > GD_DATA.GD.MUIS OR

  11887   1 00003A  ECC7 0006                            LDB,B6   @USER#,AUTO
          1 00003C  DC80 0000 0000  xsym                 LDB,B5   GD$DELTA_DATA$
          1 00003F  E806                                 LDR,R6   ,B6
          1 000040  E945 016C                            CMR,R6   364,B5
          1 000042  0301 000B                            BG       s:11888,PREL
          1 000044  B856                                 LDR,R3   R6
          1 000045  CC80 0000 0000  xsym                 LDB,B4   G$USRT$
          1 000048  3F18                                 MLV,R3   24
          1 000049  3E02                                 ADV,R3   2
          1 00004A  D834                                 LDR,R5   ,B4,R3
          1 00004B  5D1F                                 CMV,R5   31
          1 00004C  0981 0004                            BNE      s:11889,PREL
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:46   

      236    11888    3                   G$USER.US(USER#) = %GH_NULL THEN ALTRETURN;

  11888   1 00004E  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      237    11889    3                 GD_DATA.GD.ASDT_PPNO=G$USER.UHJITPP(USER#);

  11889   1 000051  B856                                 LDR,R3   R6
          1 000052  3F18                                 MLV,R3   24
          1 000053  3E12                                 ADV,R3   18
          1 000054  D834                                 LDR,R5   ,B4,R3
          1 000055  DF45 0147                            STR,R5   327,B5

      238    11890    3                 GD_DATA.GD.ASDT_OFFSET=POFFW(ADDR(%WINDOW$#->G$UHJIT.ASDT_USR),

  11890   1 000057  BCC5 017C                            LDB,B3   380,B5
          1 000059  BFC7 000C                            STB,B3   SEGNO+2,AUTO
          1 00005B  8CC7 000C                            LDI      SEGNO+2,AUTO
          1 00005D  84C5 017C                            SID      380,B5
          1 00005F  E857                                 LDR,R6   R7
          1 000060  EF45 0148                            STR,R6   328,B5

      239    11891    3                   %WINDOW$#);
      240    11892    3                 END;

      241    11893    2              GD_DATA.GD.USERNO=USER#;

  11893   1 000062  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000065  DCC7 0006                            LDB,B5   @USER#,AUTO
          1 000067  E805                                 LDR,R6   ,B5
          1 000068  EF46 016B                            STR,R6   363,B6

      242    11894    2              GD_DATA.GD.USE_REAL='0'B;

  11894   1 00006A  8846 014C                            LBF,'0008'X       332,B6
  11894   1 00006C       0008

PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:47   
      243    11895    2              END;

  11895   1 00006D  0F81 0006                            B        s:11904,PREL

      244    11896        %EJECT;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:48   
      245    11897        /*
      246    11898          Enter here if GD_DATA.GD.ASDT_PPNO and GD_DATA.GD.ASDT_OFFSET are allready setup
      247    11899                                                                                      */
      248    11900    1   GDU$SETUP_WINDOW: ENTRY(OLD$) ALTRET;

  11900   1 00006F  D380 0000 0000  xent GDU$SETUP_WINDOWLNJ,B5   X6A_AUTO_2
          1 000072       0018 0002                       DC       24,2

      249    11901        /*
      250    11902          If this is user delta, we dont need to do anything
      251    11903                                                                                      */
      252    11904    1           IF GD_DATA.GD.MODE=%GD#MODE_USER_DELTA THEN

  11904   1 000074  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000077  E846 0130                            LDR,R6   304,B6
          1 000079  6D01                                 CMV,R6   1
          1 00007A  0981 0074                            BNE      s:11924,PREL

      253    11905    2           DO;

      254    11906    2              %GH@VLD=CANNED_GH_VLD;

  11906   1 00007C  AB80 0000 0000  00                   LAB,B2   CANNED_GH_VLD
          1 00007F  2C00                                 LDV,R2   0
          1 000080  6C0A                                 LDV,R6   10
          1 000081  BBC6 016F                            LAB,B3   367,B6
          1 000083  3C00                                 LDV,R3   0
          1 000084  0008                                 MMM

      255    11907    2              %GH@VLD.ADR$=NEW$;

  11907   1 000085  ECC7 0004                            LDB,B6   @OLD$,AUTO
          1 000087  DC86                                 LDB,B5   ,B6
          1 000088  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 00008B  DFC4 016F                            STB,B5   367,B4

      256    11908    3              CALL GHH$VLD (%GH@VLD) WHENALTRETURN DO;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:49   

  11908   1 00008D  BBC4 016F                            LAB,B3   367,B4
          1 00008F  BFC7 000C                            STB,B3   SEGNO+2,AUTO
          1 000091  BBC7 000C                            LAB,B3   SEGNO+2,AUTO
          1 000093  CBF0 0100                            LAB,B4   256,IMO
          1 000095  E380 0000 0000  xent                 LNJ,B6   GHH$VLD
          1 000098       0003                            DC       s:11909,PREL
          1 000099  0F81 0052                            B        s:11918,PREL

      257    11909    3                 IF (%GH@VLD.ADR$>=ADDR(%G$TSA.I)

  11909   1 00009B  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00009E  DCC6 0006                            LDB,B5   6,B6
          1 0000A0  CCC6 016F                            LDB,B4   367,B6
          1 0000A2  BBC5 0002                            LAB,B3   2,B5
          1 0000A4  BFC7 000C                            STB,B3   SEGNO+2,AUTO
          1 0000A6  CDC7 000C                            CMB,B4   SEGNO+2,AUTO
          1 0000A8  0201 000B                            BL       s:11909+25,PREL
          1 0000AA  DCC6 0006                            LDB,B5   6,B6
          1 0000AC  ABC5 000C                            LAB,B2   12,B5
          1 0000AE  AFC7 000E                            STB,B2   SEGNO+4,AUTO
          1 0000B0  CDC7 000E                            CMB,B4   SEGNO+4,AUTO
          1 0000B2  0201 002E                            BL       s:11915,PREL
          1 0000B4  DCC6 0006                            LDB,B5   6,B6
          1 0000B6  ABC5 0017                            LAB,B2   23,B5
          1 0000B8  AFC7 0010                            STB,B2   SEGNO+6,AUTO
          1 0000BA  CDC7 0010                            CMB,B4   SEGNO+6,AUTO
          1 0000BC  0381 002C                            BLE      s:11916,PREL
          1 0000BE  DCC6 0006                            LDB,B5   6,B6
          1 0000C0  9BC5 0020                            LAB,B1   32,B5
          1 0000C2  9FC7 0012                            STB,B1   SEGNO+8,AUTO
          1 0000C4  CDC7 0012                            CMB,B4   SEGNO+8,AUTO
          1 0000C6  0201 000B                            BL       s:11909+55,PREL
          1 0000C8  DCC6 0006                            LDB,B5   6,B6
          1 0000CA  EBC5 001E                            LAB,B6   30,B5
          1 0000CC  EFC7 0014                            STB,B6   SEGNO+10,AUTO
          1 0000CE  CDC7 0014                            CMB,B4   SEGNO+10,AUTO
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:50   
          1 0000D0  0201 0018                            BL       s:11916,PREL
          1 0000D2  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0000D5  DCC6 0006                            LDB,B5   6,B6
          1 0000D7  CCC6 016F                            LDB,B4   367,B6
          1 0000D9  EBC5 003A                            LAB,B6   58,B5
          1 0000DB  EFC7 0016                            STB,B6   SEGNO+12,AUTO
          1 0000DD  CDC7 0016                            CMB,B4   SEGNO+12,AUTO
          1 0000DF  0281 0009                            BGE      s:11916,PREL

      258    11910    3                   AND %GH@VLD.ADR$<ADDR(%G$TSA.S))
      259    11911    3                   OR (%GH@VLD.ADR$>ADDR(%G$TSA.ISA.S)
      260    11912    3                   AND (%GH@VLD.ADR$<ADDR(%G$TSA.ISA.REGS.B3$)
      261    11913    3                   OR %GH@VLD.ADR$>=ADDR(%G$TSA.ISA.REGS.B4$))
      262    11914    3                   AND %GH@VLD.ADR$<PINCRW(ADDR(%G$TSA),SIZEW(G$TSA)))
      263    11915    3                 THEN %GH@VLD.STATUS=2;

  11915   1 0000E1  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0000E4  6C02                                 LDV,R6   2
          1 0000E5  EF46 0173                            STR,R6   371,B6
          1 0000E7  0F81 0004                            B        s:11918,PREL

      264    11916    3                 ELSE ALTRETURN;

  11916   1 0000E9  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      265    11917    3                 END;
      266    11918    2              RETURN;

  11918   1 0000EC  C380 0000 0000  xent                 LNJ,B4   X6A_ARET

      267    11919    2              END;
      268    11920        /*
      269    11921          Make sure that the valid bit is on in the window descriptor.
      270    11922          It may have been previously turned off.
      271    11923                                                                                      */
      272    11924    1           %ASDT_WINDOW#.V=%G_YES#;

PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:51   
  11924   1 0000EF  DCC6 017A                            LDB,B5   378,B6
          1 0000F1  8905                                 LBT,'8000'X       ,B5
          1 0000F2       8000

      273    11925        /*
      274    11926          Check to see if the USE REAL command is in force
      275    11927                                                                                      */
      276    11928    1           IF GD_DATA.GD.USE_REAL THEN

  11928   1 0000F3  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0000F6  82C6 014C                            LB,'0008'X        332,B6
          1 0000F8       0008
          1 0000F9  0581 003C                            BBF      s:11939,PREL

      277    11929    2           DO;

      278    11930        /*
      279    11931          Figure out what physical page the real address is in and window it
      280    11932                                                                                      */
      281    11933    2              %ASDT_WINDOW#.BASE=OLD$/256;

  11933   1 0000FB  DCC6 017A                            LDB,B5   378,B6
          1 0000FD  CCC7 0004                            LDB,B4   @OLD$,AUTO
          1 0000FF  8C84                                 LDI      ,B4
          1 000100  70C8                                 DOR,R7   8
          1 000101  E857                                 LDR,R6   R7
          1 000102  EA85                                 SRM,R6,'7FFF'X    ,B5
          1 000103       7FFF

      282    11934    2              OFFSET=MOD(OLD$,256);

  11934   1 000104  8C84                                 LDI      ,B4
          1 000105  E857                                 LDR,R6   R7
          1 000106  E570 00FF                            AND,R6   255,IMO
          1 000108  EF47 0008                            STR,R6   OFFSET,AUTO

      283    11935    2              %ASDT_WINDOW#.SIZE=0;
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:52   

  11935   1 00010A  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00010D  DCC6 017A                            LDB,B5   378,B6
          1 00010F  8845 0001                            LBF,'01FF'X       1,B5
          1 000111       01FF

      284    11936    2              CALL GHH$ASD(%WINDOW$#,%ASDT_WINDOW#);

  11936   1 000112  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000115  DCC6 017A                            LDB,B5   378,B6
          1 000117  DFC7 000E                            STB,B5   SEGNO+4,AUTO
          1 000119  BBC6 017C                            LAB,B3   380,B6
          1 00011B  BFC7 000C                            STB,B3   SEGNO+2,AUTO
          1 00011D  BBC7 000C                            LAB,B3   SEGNO+2,AUTO
          1 00011F  CBF0 0200                            LAB,B4   512,IMO
          1 000121  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          1 000124       0001                            DC       s:11937,PREL

      285    11937    2              NEW$=PINCRW(%WINDOW$#,OFFSET);

  11937   1 000125  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000128  DCC6 017C                            LDB,B5   380,B6
          1 00012A  DFC7 000C                            STB,B5   SEGNO+2,AUTO
          1 00012C  F847 0008                            LDR,R7   OFFSET,AUTO
          1 00012E  6C00                                 LDV,R6   0
          1 00012F  8447 000C                            AID      SEGNO+2,AUTO
          1 000131  CCC7 0004                            LDB,B4   @OLD$,AUTO
          1 000133  8D04                                 SDI      ,B4

      286    11938    2              END;

  11938   1 000134  0F81 00E1                            B        s:12001,PREL

      287    11939    1           ELSE IF OLD$<256 THEN

  11939   1 000136  DCC7 0004                            LDB,B5   @OLD$,AUTO
          1 000138  8C85                                 LDI      ,B5
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:53   
          1 000139  84F0 0000 0100                       SID      256,IMO
          1 00013C  0601 0009                            BCT      s:11955,PREL

      288    11940        /*
      289    11941          Special case for page zero. (a lot like real).
      290    11942         */
      291    11943    2              DO;

      292    11944    2                 %ASDT_WINDOW#.BASE=0;     /* ANYTHING SMALL ENOUGH              */

  11944   1 00013E  CCC6 017A                            LDB,B4   378,B6
          1 000140  8804                                 LBF,'7FFF'X       ,B4
          1 000141       7FFF

      293    11945    2                 OFFSET=0;                 /* Dito                               */

  11945   1 000142  8747 0008                            CL       OFFSET,AUTO

      294    11946    2                 END;

  11946   1 000144  0F81 00D1                            B        s:12001,PREL

      295    11947        /*
      296    11948          Otherwise, we are using somebodys ASDT
      297    11949                                                                                      */
      298    11950    1              ELSE
      299    11951    2              DO;

      300    11952        /*
      301    11953          Calculate what SEG number we need
      302    11954                                                                                      */
      303    11955    2                 IF OLD$/65536=0 THEN

  11955   1 000146  8C85                                 LDI      ,B5
          1 000147  70D0                                 DOR,R7   16
          1 000148  84F0 0000 0000                       SID      0,IMO
          1 00014B  6981 0010                            BNEZ,R6  s:11962,PREL
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:54   
          1 00014D  7981 000E                            BNEZ,R7  s:11962,PREL

      304    11956    3                 DO;

      305    11957    3                    SEGNO=OLD$/4096;

  11957   1 00014F  8C85                                 LDI      ,B5
          1 000150  70CC                                 DOR,R7   12
          1 000151  E857                                 LDR,R6   R7
          1 000152  EF47 000A                            STR,R6   SEGNO,AUTO

      306    11958    3                    OFFSET=MOD(OLD$,4096);

  11958   1 000154  8C85                                 LDI      ,B5
          1 000155  E857                                 LDR,R6   R7
          1 000156  E570 0FFF                            AND,R6   4095,IMO
          1 000158  EF47 0008                            STR,R6   OFFSET,AUTO

      307    11959    3                    END;

  11959   1 00015A  0F81 000D                            B        s:11970,PREL

      308    11960    2                 ELSE
      309    11961    3                 DO;

      310    11962    3                    SEGNO=(OLD$/65536)+15;

  11962   1 00015C  8C85                                 LDI      ,B5
          1 00015D  70D0                                 DOR,R7   16
          1 00015E  8470 0000 000F                       AID      15,IMO
          1 000161  E857                                 LDR,R6   R7
          1 000162  EF47 000A                            STR,R6   SEGNO,AUTO

      311    11963    3                    OFFSET=BITBIN(BINBIT(OLD$,16));

  11963   1 000164  8C85                                 LDI      ,B5
          1 000165  E857                                 LDR,R6   R7
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:55   
          1 000166  EF47 0008                            STR,R6   OFFSET,AUTO

      312    11964    3                    END;

      313    11965        /*
      314    11966          If we are trying to look at something that would have fallen in the
      315    11967          original window segment, lets use the window descriptor we entered
      316    11968          with, not the one thats there now.
      317    11969                                                                                      */
      318    11970    2                 IF (GD_DATA.GD.ASDT_PPNO=G$MHJIT.ASDT_MON.MHJIT.BASE) AND

  11970   1 000168  CC80 0000 0000  xsym                 LDB,B4   G$MHJIT$
          1 00016B  D844 000C                            LDR,R5   12,B4
          1 00016D  D570 7FFF                            AND,R5   32767,IMO
          1 00016F  D946 0147                            CMR,R5   327,B6
          1 000171  0981 001E                            BNE      s:11980,PREL
          1 000173  8C80 0000 0000  xsym                 LDI      G$MHJIT$
          1 000176  8480 0000 0000  xsym                 SID      G$MHJIT$
          1 000179  8D47 000C                            SDI      SEGNO+2,AUTO
          1 00017B  F846 0148                            LDR,R7   328,B6
          1 00017D  6C00                                 LDV,R6   0
          1 00017E  84C7 000C                            SID      SEGNO+2,AUTO
          1 000180  6981 000F                            BNEZ,R6  s:11980,PREL
          1 000182  7981 000D                            BNEZ,R7  s:11980,PREL
          1 000184  E847 000A                            LDR,R6   SEGNO,AUTO
          1 000186  6D18                                 CMV,R6   24
          1 000187  0981 0008                            BNE      s:11980,PREL

      319    11971    2                   (GD_DATA.GD.ASDT_OFFSET = POFFW(ADDR(G$MHJIT.ASDT_MON),
      320    11972    2                   ADDR(G$MHJIT))) AND
      321    11973    2                   (SEGNO=%GM_WINDOW1#) THEN
      322    11974    2                    %ASDT_WINDOW#=GD_DATA.GD.WINDOWSEG;

  11974   1 000189  BCC6 017A                            LDB,B3   378,B6
          1 00018B  8CC6 0168                            LDI      360,B6
          1 00018D  8D03                                 SDI      ,B3
          1 00018E  0F81 0065                            B        s:11995,PREL
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:56   

      323    11975    2                 ELSE
      324    11976    3                 DO;

      325    11977        /*
      326    11978          Setup a window over the ASDT we are going to use
      327    11979                                                                                      */
      328    11980    3                    %ASDT_WINDOW#.BASE=GD_DATA.GD.ASDT_PPNO;

  11980   1 000190  BCC6 017A                            LDB,B3   378,B6
          1 000192  E846 0147                            LDR,R6   327,B6
          1 000194  EA83                                 SRM,R6,'7FFF'X    ,B3
          1 000195       7FFF

      329    11981    3                    %ASDT_WINDOW#.SIZE=(GD_DATA.GD.ASDT_OFFSET/256)+1;

  11981   1 000196  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000199  CCC6 017A                            LDB,B4   378,B6
          1 00019B  E846 0148                            LDR,R6   328,B6
          1 00019D  6048                                 SOR,R6   8
          1 00019E  6E01                                 ADV,R6   1
          1 00019F  EAC4 0001                            SRM,R6,'01FF'X    1,B4
          1 0001A1       01FF

      330    11982    3                    CALL GHH$ASD(%WINDOW$#,%ASDT_WINDOW#);

  11982   1 0001A2  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0001A5  CCC6 017A                            LDB,B4   378,B6
          1 0001A7  CFC7 000E                            STB,B4   SEGNO+4,AUTO
          1 0001A9  BBC6 017C                            LAB,B3   380,B6
          1 0001AB  BFC7 000C                            STB,B3   SEGNO+2,AUTO
          1 0001AD  BBC7 000C                            LAB,B3   SEGNO+2,AUTO
          1 0001AF  CBF0 0200                            LAB,B4   512,IMO
          1 0001B1  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          1 0001B4       0001                            DC       s:11986,PREL

      331    11983        /*
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:57   
      332    11984          Now, map the segment we need into the window
      333    11985                                                                                      */
      334    11986    4                    IF SEGNO <=31 THEN DO;

  11986   1 0001B5  E847 000A                            LDR,R6   SEGNO,AUTO
          1 0001B7  6D1F                                 CMV,R6   31
          1 0001B8  0301 0034                            BG       s:11993,PREL

      335    11987    4                       %ASDT_WINDOW#.BASE=PINCRW(%WINDOW$#,GD_DATA.GD.ASDT_OFFSET)

  11987   1 0001BA  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0001BD  DCC6 017A                            LDB,B5   378,B6
          1 0001BF  B846 0148                            LDR,R3   328,B6
          1 0001C1  CCC6 017C                            LDB,B4   380,B6
          1 0001C3  CFC7 000C                            STB,B4   SEGNO+2,AUTO
          1 0001C5  F853                                 LDR,R7   R3
          1 0001C6  6C00                                 LDV,R6   0
          1 0001C7  8447 000C                            AID      SEGNO+2,AUTO
          1 0001C9  8D47 000E                            SDI      SEGNO+4,AUTO
          1 0001CB  BCC7 000E                            LDB,B3   SEGNO+4,AUTO
          1 0001CD  A847 000A                            LDR,R2   SEGNO,AUTO
          1 0001CF  2001                                 SOL,R2   1
          1 0001D0  D823                                 LDR,R5   ,B3,R2
          1 0001D1  DA85                                 SRM,R5,'7FFF'X    ,B5
          1 0001D2       7FFF

      336    11988    4                         -> G$ASDT.DESC.BASE(SEGNO);
      337    11989    4                       %ASDT_WINDOW#.SIZE=PINCRW(%WINDOW$#,GD_DATA.GD.ASDT_OFFSET)

  11989   1 0001D3  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0001D6  DCC6 017A                            LDB,B5   378,B6
          1 0001D8  9846 0148                            LDR,R1   328,B6
          1 0001DA  CCC6 017C                            LDB,B4   380,B6
          1 0001DC  CFC7 000C                            STB,B4   SEGNO+2,AUTO
          1 0001DE  F851                                 LDR,R7   R1
          1 0001DF  6C00                                 LDV,R6   0
          1 0001E0  8447 000C                            AID      SEGNO+2,AUTO
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:58   
          1 0001E2  8D47 000E                            SDI      SEGNO+4,AUTO
          1 0001E4  BCC7 000E                            LDB,B3   SEGNO+4,AUTO
          1 0001E6  2E01                                 ADV,R2   1
          1 0001E7  D823                                 LDR,R5   ,B3,R2
          1 0001E8  DAC5 0001                            SRM,R5,'01FF'X    1,B5
          1 0001EA       01FF

      338    11990    4                         -> G$ASDT.DESC.SIZE(SEGNO);
      339    11991    4                       END;

  11991   1 0001EB  0F81 0008                            B        s:11995,PREL

      340    11992    3                    ELSE
      341    11993    3                       %ASDT_WINDOW#.V=%G_NO#;

  11993   1 0001ED  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0001F0  DCC6 017A                            LDB,B5   378,B6
          1 0001F2  8805                                 LBF,'8000'X       ,B5
          1 0001F3       8000

      342    11994    3                    END;

      343    11995    2                 CALL GHH$ASD(%WINDOW$#,%ASDT_WINDOW#);

  11995   1 0001F4  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0001F7  DCC6 017A                            LDB,B5   378,B6
          1 0001F9  DFC7 000E                            STB,B5   SEGNO+4,AUTO
          1 0001FB  CBC6 017C                            LAB,B4   380,B6
          1 0001FD  CFC7 000C                            STB,B4   SEGNO+2,AUTO
          1 0001FF  BBC7 000C                            LAB,B3   SEGNO+2,AUTO
          1 000201  CBF0 0200                            LAB,B4   512,IMO
          1 000203  E380 0000 0000  xent                 LNJ,B6   GHH$ASD
          1 000206       0001                            DC       s:11999,PREL

      344    11996        /*
      345    11997          Build the new pointer
      346    11998                                                                                      */
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:59   
      347    11999    2                 NEW$=PINCRW(%WINDOW$#,OFFSET);

  11999   1 000207  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00020A  DCC6 017C                            LDB,B5   380,B6
          1 00020C  DFC7 000C                            STB,B5   SEGNO+2,AUTO
          1 00020E  F847 0008                            LDR,R7   OFFSET,AUTO
          1 000210  6C00                                 LDV,R6   0
          1 000211  8447 000C                            AID      SEGNO+2,AUTO
          1 000213  CCC7 0004                            LDB,B4   @OLD$,AUTO
          1 000215  8D04                                 SDI      ,B4

      348    12000    2                 END;

      349    12001    1           %GH@VLD.STATUS=-1;

  12001   1 000216  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000219  8946 0173                            LBT,'FFFF'X       371,B6
          1 00021B       FFFF

      350    12002    1           OFFSET=OFFSET/256;              /* In pages                           */

  12002   1 00021C  E847 0008                            LDR,R6   OFFSET,AUTO
          1 00021E  6048                                 SOR,R6   8
          1 00021F  EF47 0008                            STR,R6   OFFSET,AUTO

      351    12003    1           IF NOT %ASDT_WINDOW#.V

  12003   1 000221  DCC6 017A                            LDB,B5   378,B6
          1 000223  8985                                 CMZ      ,B5
          1 000224  0881 0010                            BAGE     s:12006,PREL
          1 000226  D845 0001                            LDR,R5   1,B5
          1 000228  D570 01FF                            AND,R5   511,IMO
          1 00022A  D956                                 CMR,R5   R6
          1 00022B  0201 0009                            BL       s:12006,PREL
          1 00022D  C805                                 LDR,R4   ,B5
          1 00022E  C570 7FFF                            AND,R4   32767,IMO
          1 000230  CA56                                 ADD,R4   R6
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:60   
          1 000231  C946 016D                            CMR,R4   365,B6
          1 000233  0381 0004                            BLE      s:12007,PREL

      352    12004    1             OR OFFSET>%ASDT_WINDOW#.SIZE
      353    12005    1             OR %ASDT_WINDOW#.BASE+OFFSET>GD_DATA.GD.HIMEM THEN
      354    12006    1              ALTRETURN;

  12006   1 000235  C380 0000 0000  xent                 LNJ,B4   X6A_AALT

      355    12007    1           %GH@VLD.STATUS=2;

  12007   1 000238  4C02                                 LDV,R4   2
          1 000239  CF46 0173                            STR,R4   371,B6

      356    12008        /* */
      357    12009    1           RETURN;

  12009   1 00023B  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      358    12010    1   END;
      359    12011        %EOD;

PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:61   
--  Include file information  --

   GM_VIRTUAL_E.:E05TOU  is referenced.
   KH$CHN.:E05TOU  is referenced.
   GH_SCHD_M.:E05TOU  is referenced.
   GH_SCHD_E.:E05TOU  is referenced.
   GH_HARDWARE_M.:E05TOU  is referenced.
   G_HJIT_M.:E05TOU  is referenced.
   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDU$SETUP_WINDOW_USER.
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:62   

 **** Variables and constants ****

  ****  Section 000 RoData GDU$SETUP_WINDOW_USER

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(80)    r     1 CANNED_GH_VLD

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     4-0-0/w PTR         r     1 @OLD$                      6-0-0/w PTR         r     1 @USER#
    *0-0-0/w PTR         r     1 NEW$                       8-0-0/w UBIN(16)    r     1 OFFSET
    *0-0-0/w UBIN(32)    r     1 OLD$                       A-0-0/w UBIN(16)    r     1 SEGNO
    *0-0-0/w UBIN(16)    r     1 USER#

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 G$BOBCAT$                  0-0-0/w PTR         r     1 G$MHJIT$
     0-0-0/w PTR         r     1 G$USRT$                    0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(32)    r     1 G$ASDT(0:30)               0-0-0/w STRC(27232) r     1 G$MHJIT
     0-0-0/w STRC(32)    r     1 G$SEGDESC                  0-0-0/w STRC(928)   r     1 G$TSA
     0-0-0/w STRC(6480)  r     1 G$UHJIT                    0-0-0/w STRC(384)   r     1 G$USER(0:0)
     0-0-0/w STRC(16704) r     1 GD_DATA                    0-0-0/w STRC(80)    r     1 GH_VLD

PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:63   

   Procedure GDU$SETUP_WINDOW_USER requires 574 words for executable code.
   Procedure GDU$SETUP_WINDOW_USER requires 24 words of local(AUTO) storage.
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:64   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:65   
          MINI XREF LISTING

CANNED_GH_VLD
      1938**DCL     11906>>ASSIGN
G$ASDT.DESC.BASE
     11828**DCL     11987>>ASSIGN
G$ASDT.DESC.SIZE
     11830**DCL     11989>>ASSIGN
G$BOBCAT$
      1524**DCL     11886<>CALL
G$MHJIT
      1973**DCL     11879--ASSIGN  11970--IF
G$MHJIT.ASDT_MON
      1986**DCL     11879--ASSIGN  11970--IF
G$MHJIT.ASDT_MON.BOBCAT
      2599**DCL     11886<>CALL
G$MHJIT.ASDT_MON.MHJIT.BASE
      2139**DCL     11878>>ASSIGN  11970>>IF
G$MHJIT.INTCON.HHJIT
      8435**DCL      8435--REDEF
G$MHJIT.INTCON.P$$
      8408**DCL      8408--REDEF
G$MHJIT.ISA_BIGFOOT.P$$
      5353**DCL      5353--REDEF
G$MHJIT.ISA_DBINH.P$$
      6567**DCL      6567--REDEF
G$MHJIT.ISA_IDLE.P$$
      3448**DCL      3448--REDEF
G$MHJIT.ISA_LVL10.P$$
      6870**DCL      6870--REDEF
G$MHJIT.ISA_LVL11.P$$
      7173**DCL      7173--REDEF
G$MHJIT.ISA_LVL12.P$$
      7476**DCL      7476--REDEF
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:66   
G$MHJIT.ISA_LVL5.P$$
      5656**DCL      5656--REDEF
G$MHJIT.ISA_OV.P$$
      5050**DCL      5050--REDEF
G$MHJIT.ISA_PFS.P$$
      4721**DCL      4721--REDEF
G$MHJIT.ISA_RT_CLOCK.P$$
      8083**DCL      8083--REDEF
G$MHJIT.ISA_SATYR_RCV.P$$
      5960**DCL      5960--REDEF
G$MHJIT.ISA_SATYR_TRN.P$$
      6264**DCL      6264--REDEF
G$MHJIT.ISA_SCHD.P$$
      7779**DCL      7779--REDEF
G$MHJIT.ISA_WDOG.P$$
      4829**DCL      4829--REDEF
G$MHJIT.TSA_DB.ISA.P$$
      4051**DCL      4051--REDEF
G$MHJIT.TSA_DB.P$$
      3922**DCL      3922--REDEF    3923--REDEF
G$MHJIT.TSA_HND.ISA.P$$
      8629**DCL      8629--REDEF
G$MHJIT.TSA_HND.P$$
      8500**DCL      8500--REDEF    8501--REDEF
G$MHJIT.TSA_MON.ISA.P$$
      3663**DCL      3663--REDEF
G$MHJIT.TSA_MON.P$$
      3534**DCL      3534--REDEF    3535--REDEF
G$MHJIT.TSA_OV.ISA.P$$
      4439**DCL      4439--REDEF
G$MHJIT.TSA_OV.P$$
      4310**DCL      4310--REDEF    4311--REDEF
G$MHJIT$
      1525**DCL      1973--IMP-PTR 11878>>ASSIGN  11879>>ASSIGN  11879>>ASSIGN  11886>>CALL    11970>>IF
     11970>>IF      11970>>IF
G$SEGDESC
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:67   
     11847**DCL     11936<>CALL    11974<<ASSIGN  11982<>CALL    11995<>CALL
G$SEGDESC.BASE
     11851**DCL     11933<<ASSIGN  11944<<ASSIGN  11980<<ASSIGN  11987<<ASSIGN  12003>>IF
G$SEGDESC.SIZE
     11853**DCL     11935<<ASSIGN  11981<<ASSIGN  11989<<ASSIGN  12003>>IF
G$SEGDESC.V
     11851**DCL     11924<<ASSIGN  11993<<ASSIGN  12003>>IF
G$TSA
      1566**DCL     11909--IF      11909--IF
G$TSA.I
      1588**DCL     11909--IF
G$TSA.ISA.P$$
      1727**DCL      1727--REDEF
G$TSA.ISA.REGS.B3$
      1773**DCL     11909--IF
G$TSA.ISA.REGS.B4$
      1773**DCL     11909--IF
G$TSA.ISA.S
      1748**DCL     11909--IF
G$TSA.P$$
      1598**DCL      1598--REDEF    1599--REDEF
G$TSA.S
      1618**DCL     11909--IF
G$UHJIT.ASDT_USR
      8860**DCL     11890--ASSIGN
G$UHJIT.ISA_USR
     10270**DCL     10565--REDEF
G$UHJIT.ISA_USR.P$$
     10345**DCL     10345--REDEF
G$UHJIT.TSA_CP.ISA.P$$
     11552**DCL     11552--REDEF
G$UHJIT.TSA_CP.P$$
     11423**DCL     11423--REDEF   11424--REDEF
G$UHJIT.TSA_DB.ISA.P$$
     11164**DCL     11164--REDEF
G$UHJIT.TSA_DB.P$$
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:68   
     11035**DCL     11035--REDEF   11036--REDEF
G$UHJIT.TSA_RTT.P$$
     11798**DCL     11798--REDEF   11799--REDEF
G$UHJIT.TSA_USR.ISA.P$$
     10754**DCL     10754--REDEF
G$UHJIT.TSA_USR.P$$
     10625**DCL     10625--REDEF   10626--REDEF
G$USER.MISC
      1534**DCL      1534--REDEF
G$USER.UHJITPP
      1536**DCL     11889>>ASSIGN
G$USER.US
      1534**DCL     11887>>IF
G$USRT$
      1526**DCL      1533--IMP-PTR 11887>>IF      11889>>ASSIGN
GD$DELTA_DATA$
       661**DCL       675--IMP-PTR 11870>>IF      11878>>ASSIGN  11879>>ASSIGN  11887>>IF      11889>>ASSIGN
     11890>>ASSIGN  11890>>ASSIGN  11890>>ASSIGN  11893>>ASSIGN  11894>>ASSIGN  11904>>IF      11906>>ASSIGN
     11907>>ASSIGN  11908>>CALL    11909>>IF      11909>>IF      11909>>IF      11909>>IF      11909>>IF
     11909>>IF      11909>>IF      11909>>IF      11909>>IF      11909>>IF      11909>>IF      11909>>IF
     11915>>ASSIGN  11924>>ASSIGN  11928>>IF      11933>>ASSIGN  11935>>ASSIGN  11936>>CALL    11936>>CALL
     11937>>ASSIGN  11944>>ASSIGN  11970>>IF      11970>>IF      11974>>ASSIGN  11974>>ASSIGN  11980>>ASSIGN
     11980>>ASSIGN  11981>>ASSIGN  11981>>ASSIGN  11982>>CALL    11982>>CALL    11987>>ASSIGN  11987>>ASSIGN
     11987>>ASSIGN  11989>>ASSIGN  11989>>ASSIGN  11989>>ASSIGN  11993>>ASSIGN  11995>>CALL    11995>>CALL
     11999>>ASSIGN  12001>>ASSIGN  12003>>IF      12003>>IF      12003>>IF      12003>>IF      12007>>ASSIGN
GD_DATA.DELTAINFO.TSA$
       675**DCL     11909>>IF      11909>>IF      11909>>IF      11909>>IF      11909>>IF      11909>>IF
GD_DATA.GD.ASDT_OFFSET
       681**DCL     11879<<ASSIGN  11890<<ASSIGN  11970>>IF      11981>>ASSIGN  11987>>ASSIGN  11989>>ASSIGN
GD_DATA.GD.ASDT_PPNO
       680**DCL     11878<<ASSIGN  11889<<ASSIGN  11970>>IF      11980>>ASSIGN
GD_DATA.GD.ASDT_WINDOW$
       697**DCL     11924>>ASSIGN  11933>>ASSIGN  11935>>ASSIGN  11936>>CALL    11944>>ASSIGN  11974>>ASSIGN
     11980>>ASSIGN  11981>>ASSIGN  11982>>CALL    11987>>ASSIGN  11989>>ASSIGN  11993>>ASSIGN  11995>>CALL
     12003>>IF      12003>>IF      12003>>IF
GD_DATA.GD.DYNSP$
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:69   
       688**DCL       688--REDEF
GD_DATA.GD.HIMEM
       695**DCL     12003>>IF
GD_DATA.GD.MODE
       678**DCL     11870>>IF      11904>>IF
GD_DATA.GD.MUIS
       695**DCL     11887>>IF
GD_DATA.GD.STEP_BRKPNT.ADR$
       689**DCL       690--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
       690**DCL       690--REDEF
GD_DATA.GD.USERNO
       695**DCL     11893<<ASSIGN
GD_DATA.GD.USE_REAL
       685**DCL     11894<<ASSIGN  11928>>IF
GD_DATA.GD.VLD
       696**DCL     11906--ASSIGN  11907--ASSIGN  11908--CALL    11909--IF      11909--IF      11909--IF
     11909--IF      11909--IF      11909--IF      11915--ASSIGN  12001--ASSIGN  12007--ASSIGN
GD_DATA.GD.WINDOW$
       697**DCL     11890>>ASSIGN  11890>>ASSIGN  11936<>CALL    11937>>ASSIGN  11982<>CALL    11987>>ASSIGN
     11989>>ASSIGN  11995<>CALL    11999>>ASSIGN
GD_DATA.GD.WINDOWSEG
       694**DCL     11974>>ASSIGN
GHH$ASD
     11864**DCL-ENT 11886--CALL    11936--CALL    11982--CALL    11995--CALL
GHH$VLD
     11865**DCL-ENT 11908--CALL
GH_VLD
      1952**DCL     11906<<ASSIGN  11908<>CALL
GH_VLD.ADR$
      1952**DCL     11907<<ASSIGN  11909>>IF      11909>>IF      11909>>IF      11909>>IF      11909>>IF
     11909>>IF
GH_VLD.STATUS
      1953**DCL     11915<<ASSIGN  12001<<ASSIGN  12007<<ASSIGN
NEW$
     11858**DCL     11907>>ASSIGN  11937<<ASSIGN  11999<<ASSIGN
PL6.E3A0      #002=GDU$SETUP_WINDOW_USER File=GDU$USE.:E05TSI                    TUE 07/29/97 21:29 Page:70   
OFFSET
     11856**DCL     11934<<ASSIGN  11937>>ASSIGN  11945<<ASSIGN  11958<<ASSIGN  11963<<ASSIGN  11999>>ASSIGN
     12002<<ASSIGN  12002>>ASSIGN  12003>>IF      12003>>IF
OLD$
     11857**DCL        42--PROC    11858--REDEF   11900--ENTRY   11933>>ASSIGN  11934>>ASSIGN  11939>>IF
     11955>>IF      11957>>ASSIGN  11958>>ASSIGN  11962>>ASSIGN  11963>>ASSIGN
SEGNO
     11862**DCL     11957<<ASSIGN  11962<<ASSIGN  11970>>IF      11986>>IF      11987>>ASSIGN  11989>>ASSIGN
USER#
     11859**DCL        42--PROC    11876>>IF      11887>>IF      11887>>IF      11889>>ASSIGN  11893>>ASSIGN

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:71   
      360        1        /*T***********************************************************/
      361        2        /*T*                                                         */
      362        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      363        4        /*T*                                                         */
      364        5        /*T***********************************************************/
      365        6        GDU$KTI: PROC(SIZE,BUFFER);
      366        7        /**/
      367        8        %INCLUDE LCP_6;
      368      199        %G$TSA;
      369      587        %INCLUDE GD_STATIC_DATA;
      370     1060        /**/
      371     1061    1   DCL SIZE UBIN;
      372     1062    1   DCL BUFFER CHAR(SIZE) ALIGNED;
      373     1063        %GD$MSG(FPTN=GD$MSG,STCLASS="REDEF BUFFER");
      374     1219    1   DCL I UBIN;
      375     1220    1   DCL J UBIN;
      376     1221    1   DCL FCN UBIN;
      377     1222    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
      378     1223        /**/
      379     1224    1   DCL TRAPTYP$ PTR;
      380     1225    1   DCL TRAPFLGS(0:3)BIT(16) BASED ALIGNED;
      381     1226    1   DCL 1 USER_KEEP CONSTANT ALIGNED,
      382     1227    1         2 MCL(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0010'X),
      383     1228    1         2 EVN(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0080'X),
      384     1229    1         2 XCN(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0001'X,'E020'X),
      385     1230    1         2 BRK(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0040'X),
      386     1231    1         2 TRP(0:3)BIT(16) ALIGNED INIT('5FFF'X,'FFFF'X,'0000'X,'0000'X),
      387     1232    1         2 ARI(0:3)BIT(16) ALIGNED INIT('0200'X,'0004'X,'0000'X,'0000'X);
      388     1233    1   DCL 1 USER_TRAP CONSTANT ALIGNED,
      389     1234    1         2 MCL(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFEF'X),
      390     1235    1         2 EVN(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FF7F'X),
      391     1236    1         2 XCN(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFE'X,'1FDF'X),
      392     1237    1         2 BRK(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFBF'X),
      393     1238    1         2 TRP(0:3)BIT(16) ALIGNED INIT('A000'X,'0000'X,'FFFF'X,'FFFF'X),
      394     1239    1         2 ARI(0:3)BIT(16) ALIGNED INIT('FDFF'X,'FFFB'X,'FFFF'X,'FFFF'X);
      395     1240    1   DCL 1 XDEL_KEEP CONSTANT ALIGNED,
      396     1241    1         2 ALL(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFFF'X),
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:72   
      397     1242    1         2 NON(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0000'X),
      398     1243    1         2 MON(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFFF'X),
      399     1244    1         2 SCR(0:3)BIT(16) ALIGNED INIT('D000'X,'0000'X,'0000'X,'0808'X);
      400     1245        /**/
      401     1246    2           IF GD_DATA.GD.MODE = %GD#MODE_XDELTA THEN DO;
      402     1247    3              DO I = 0 TO 3;
      403     1248    4                 IF GD$MSG.KTI.KEEP(I) THEN DO;
      404     1249    5                    DO CASE(I);
      405     1250    5                     CASE(%KTI_ALL);
      406     1251    5                       TRAPTYP$ = ADDR(XDEL_KEEP.ALL);
      407     1252    5                       GD_DATA.GD.KEEPMON = '0'B;
      408     1253    5                     CASE(%KTI_NONE);
      409     1254    5                       TRAPTYP$ = ADDR(XDEL_KEEP.NON);
      410     1255    5                       GD_DATA.GD.KEEPMON = '0'B;
      411     1256    5                     CASE(%KTI_MON);
      412     1257    5                       TRAPTYP$ = ADDR(XDEL_KEEP.MON);
      413     1258    5                       GD_DATA.GD.KEEPMON = '1'B;
      414     1259    5                     CASE(%KTI_SCREECH);
      415     1260    5                       TRAPTYP$ = ADDR(XDEL_KEEP.SCR);
      416     1261    5                       GD_DATA.GD.KEEPMON = '0'B;
      417     1262    5                     END;
      418     1263    5                    DO J = 0 TO 3;
      419     1264    5                       GD_DATA.DELTAINFO.TRAP_FLAGS(J) = TRAPTYP$->TRAPFLGS(J);
      420     1265    5                       END;
      421     1266    4                    END;
      422     1267    3                 END;
      423     1268    2              END;
      424     1269    1           ELSE
      425     1270    2           DO CASE(GD$MSG.KTI.CMD_TYPE);
      426     1271    2            CASE(%GD#KEEP_CMD);
      427     1272    3              DO I = 0 TO 5;
      428     1273    4                 IF GD$MSG.KTI.KEEP(I) THEN DO;
      429     1274    5                    DO CASE(I);
      430     1275    5                     CASE(%KTI_MCL);
      431     1276    5                       TRAPTYP$ = ADDR(USER_KEEP.MCL);
      432     1277    5                     CASE(%KTI_EVENT);
      433     1278    5                       TRAPTYP$ = ADDR(USER_KEEP.EVN);
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:73   
      434     1279    5                     CASE(%KTI_BREAK);
      435     1280    5                       TRAPTYP$ = ADDR(USER_KEEP.BRK);
      436     1281    5                     CASE(%KTI_XCON);
      437     1282    5                       TRAPTYP$ = ADDR(USER_KEEP.XCN);
      438     1283    5                     CASE(%KTI_TRAP);
      439     1284    5                       TRAPTYP$ = ADDR(USER_KEEP.TRP);
      440     1285    5                       GD_DATA.GD.IGNARITH = '0'B;
      441     1286    5                     CASE(%KTI_ARITHMETIC);
      442     1287    5                       TRAPTYP$ = ADDR(USER_KEEP.ARI);
      443     1288    5                       GD_DATA.GD.IGNARITH = '0'B;
      444     1289    5                     END;
      445     1290    5                    DO J = 0 TO 3;
      446     1291    5                       GD_DATA.DELTAINFO.TRAP_FLAGS(J) = GD_DATA.DELTAINFO.TRAP_FLAGS(J
              1291                                ) |
      447     1292    5                         TRAPTYP$->TRAPFLGS(J);
      448     1293    5                       END;
      449     1294    4                    END;
      450     1295    3                 END;
      451     1296    2            CASE(%GD#TRAP_CMD);
      452     1297    3              DO I = 0 TO 5;
      453     1298    4                 IF GD$MSG.KTI.TRAP(I) THEN DO;
      454     1299    5                    DO CASE(I);
      455     1300    5                     CASE(%KTI_MCL);
      456     1301    5                       TRAPTYP$ = ADDR(USER_TRAP.MCL);
      457     1302    5                     CASE(%KTI_EVENT);
      458     1303    5                       TRAPTYP$ = ADDR(USER_TRAP.EVN);
      459     1304    5                     CASE(%KTI_BREAK);
      460     1305    5                       TRAPTYP$ = ADDR(USER_TRAP.BRK);
      461     1306    5                     CASE(%KTI_XCON);
      462     1307    5                       TRAPTYP$ = ADDR(USER_TRAP.XCN);
      463     1308    5                     CASE(%KTI_TRAP);
      464     1309    5                       TRAPTYP$ = ADDR(USER_TRAP.TRP);
      465     1310    5                       GD_DATA.GD.IGNARITH = '0'B;
      466     1311    5                     CASE(%KTI_ARITHMETIC);
      467     1312    5                       TRAPTYP$ = ADDR(USER_TRAP.ARI);
      468     1313    5                       GD_DATA.GD.IGNARITH = '0'B;
      469     1314    5                     END;
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:74   
      470     1315    5                    DO J = 0 TO 3;
      471     1316    5                       GD_DATA.DELTAINFO.TRAP_FLAGS(J) = GD_DATA.DELTAINFO.TRAP_FLAGS(J
              1316                                ) &
      472     1317    5                         TRAPTYP$->TRAPFLGS(J);
      473     1318    5                       END;
      474     1319    4                    END;
      475     1320    3                 END;
      476     1321    2            CASE(%GD#IGNORE_CMD);
      477     1322    2              GD_DATA.GD.IGNARITH = '1'B;
      478     1323    2            END;
      479     1324        /**/
      480     1325    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);
      481     1326    1           RETURN;
      482     1327        /**/
      483     1328    1   END GDU$KTI;

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:75   
--  Include file information  --

   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDU$KTI.

   Procedure GDU$KTI requires 380 words for executable code.
   Procedure GDU$KTI requires 20 words of local(AUTO) storage.

    No errors detected in file GDU$USE.:E05TSI    .

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:76   

 Object Unit name= GDU$KTI                                    File name= GDU$USE.:E05TOU
 UTS= JUL 29 '97 21:31:48.24 TUE                              Compiler= PL-6/E31         Sev=      00
 SharedLib= :SHARED_LCP6_SYSTEM                               Alt SharedLib=


    ****  Control sections  ****

 Sect   Type Bound  Init  Size HexSiz  Section name
    0  RoData even  UTS     64     40  GDU$KTI
    1   Proc  even  none   380    17C  GDU$KTI

    ****  Entry defs  ****

                              Check   Calling
                             calling  sequence
  Sect HexLoc Primary Altret sequence   type   Parms  Name
     1      0   yes            yes      Std        2  GDU$KTI

  ****  Entry refs  ****

         Check        Calling
        calling       sequence
Altret sequence SRef   type   Args  Name
         yes           Std       3 GDI$SEND_ERROR_RESPONSE
                       nStd      0 X6A_AUTO_2
                       nStd      0 X6A_ARET

  ****  Data refs  ****

  Flags:  r = read only, s = secondary
Flgs Name                             Flgs Name                             Flgs Name
     GD$DELTA_DATA$                   r    G$ROS$
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:77   


      360        1        /*T***********************************************************/
      361        2        /*T*                                                         */
      362        3        /*T* Copyright (c) Bull HN Information Systems Inc., 1997    */
      363        4        /*T*                                                         */
      364        5        /*T***********************************************************/
      365        6        GDU$KTI: PROC(SIZE,BUFFER);

      6   1 000000  D380 0000 0000  xent GDU$KTI         LNJ,B5   X6A_AUTO_2
          1 000003       0014 0002                       DC       20,2

      366        7        /**/
      367        8        %INCLUDE LCP_6;
      368      199        %G$TSA;
      369      587        %INCLUDE GD_STATIC_DATA;
      370     1060        /**/
      371     1061    1   DCL SIZE UBIN;
      372     1062    1   DCL BUFFER CHAR(SIZE) ALIGNED;
      373     1063        %GD$MSG(FPTN=GD$MSG,STCLASS="REDEF BUFFER");
      374     1219    1   DCL I UBIN;
      375     1220    1   DCL J UBIN;
      376     1221    1   DCL FCN UBIN;
      377     1222    1   DCL GDI$SEND_ERROR_RESPONSE ENTRY(3);
      378     1223        /**/
      379     1224    1   DCL TRAPTYP$ PTR;
      380     1225    1   DCL TRAPFLGS(0:3)BIT(16) BASED ALIGNED;
      381     1226    1   DCL 1 USER_KEEP CONSTANT ALIGNED,
      382     1227    1         2 MCL(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0010'X),
      383     1228    1         2 EVN(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0080'X),
      384     1229    1         2 XCN(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0001'X,'E020'X),
      385     1230    1         2 BRK(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0040'X),
      386     1231    1         2 TRP(0:3)BIT(16) ALIGNED INIT('5FFF'X,'FFFF'X,'0000'X,'0000'X),
      387     1232    1         2 ARI(0:3)BIT(16) ALIGNED INIT('0200'X,'0004'X,'0000'X,'0000'X);
      388     1233    1   DCL 1 USER_TRAP CONSTANT ALIGNED,
      389     1234    1         2 MCL(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFEF'X),
      390     1235    1         2 EVN(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FF7F'X),
      391     1236    1         2 XCN(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFE'X,'1FDF'X),
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:78   
      392     1237    1         2 BRK(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFBF'X),
      393     1238    1         2 TRP(0:3)BIT(16) ALIGNED INIT('A000'X,'0000'X,'FFFF'X,'FFFF'X),
      394     1239    1         2 ARI(0:3)BIT(16) ALIGNED INIT('FDFF'X,'FFFB'X,'FFFF'X,'FFFF'X);
      395     1240    1   DCL 1 XDEL_KEEP CONSTANT ALIGNED,
      396     1241    1         2 ALL(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFFF'X),
      397     1242    1         2 NON(0:3)BIT(16) ALIGNED INIT('0000'X,'0000'X,'0000'X,'0000'X),
      398     1243    1         2 MON(0:3)BIT(16) ALIGNED INIT('FFFF'X,'FFFF'X,'FFFF'X,'FFFF'X),
      399     1244    1         2 SCR(0:3)BIT(16) ALIGNED INIT('D000'X,'0000'X,'0000'X,'0808'X);
      400     1245        /**/
      401     1246    2           IF GD_DATA.GD.MODE = %GD#MODE_XDELTA THEN DO;

   1246   1 000005  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000008  E846 0130                            LDR,R6   304,B6
          1 00000A  6D02                                 CMV,R6   2
          1 00000B  0981 0069                            BNE      s:1270,PREL

      402     1247    3              DO I = 0 TO 3;

   1247   1 00000D  8747 0008                            CL       I,AUTO

      403     1248    4                 IF GD$MSG.KTI.KEEP(I) THEN DO;

   1248   1 00000F  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 000011  B847 0008                            LDR,R3   I,AUTO
          1 000013  3E10                                 ADV,R3   16
          1 000014  82B6                                 LB       ,B6,R3
          1 000015  0581 0056                            BBF      s:1267,PREL

      404     1249    5                    DO CASE(I);

   1249   1 000017  A847 0008                            LDR,R2   I,AUTO
          1 000019  2D04                                 CMV,R2   4
          1 00001A  0281 003D                            BGE      s:1263,PREL
          1 00001C  9820 0000 0022  01                   LDR,R1   s:1249+11,R2
          1 00001F  8390 0000 0026  01                   JMP      s:1251,R1
          1 000022       0000                            DC       s:1251,PREL
          1 000023       000D                            DC       s:1254,PREL
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:79   
          1 000024       001A                            DC       s:1257,PREL
          1 000025       0027                            DC       s:1260,PREL

      405     1250    5                     CASE(%KTI_ALL);

      406     1251    5                       TRAPTYP$ = ADDR(XDEL_KEEP.ALL);

   1251   1 000026  DB80 0000 0030  00                   LAB,B5   XDEL_KEEP
          1 000029  DFC7 000B                            STB,B5   TRAPTYP$,AUTO

      407     1252    5                       GD_DATA.GD.KEEPMON = '0'B;

   1252   1 00002B  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 00002E  8844 014C                            LBF,'0010'X       332,B4
          1 000030       0010
          1 000031  0F81 0026                            B        s:1263,PREL

      408     1253    5                     CASE(%KTI_NONE);

      409     1254    5                       TRAPTYP$ = ADDR(XDEL_KEEP.NON);

   1254   1 000033  DB80 0000 0034  00                   LAB,B5   XDEL_KEEP+4
          1 000036  DFC7 000B                            STB,B5   TRAPTYP$,AUTO

      410     1255    5                       GD_DATA.GD.KEEPMON = '0'B;

   1255   1 000038  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 00003B  8844 014C                            LBF,'0010'X       332,B4
          1 00003D       0010
          1 00003E  0F81 0019                            B        s:1263,PREL

      411     1256    5                     CASE(%KTI_MON);

      412     1257    5                       TRAPTYP$ = ADDR(XDEL_KEEP.MON);

   1257   1 000040  DB80 0000 0038  00                   LAB,B5   XDEL_KEEP+8
          1 000043  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:80   

      413     1258    5                       GD_DATA.GD.KEEPMON = '1'B;

   1258   1 000045  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000048  8944 014C                            LBT,'0010'X       332,B4
          1 00004A       0010
          1 00004B  0F81 000C                            B        s:1263,PREL

      414     1259    5                     CASE(%KTI_SCREECH);

      415     1260    5                       TRAPTYP$ = ADDR(XDEL_KEEP.SCR);

   1260   1 00004D  DB80 0000 003C  00                   LAB,B5   XDEL_KEEP+12
          1 000050  DFC7 000B                            STB,B5   TRAPTYP$,AUTO

      416     1261    5                       GD_DATA.GD.KEEPMON = '0'B;

   1261   1 000052  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000055  8844 014C                            LBF,'0010'X       332,B4
          1 000057       0010

      417     1262    5                     END;

      418     1263    5                    DO J = 0 TO 3;

   1263   1 000058  8747 0009                            CL       J,AUTO

      419     1264    5                       GD_DATA.DELTAINFO.TRAP_FLAGS(J) = TRAPTYP$->TRAPFLGS(J);

   1264   1 00005A  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 00005D  B847 0009                            LDR,R3   J,AUTO
          1 00005F  3E02                                 ADV,R3   2
          1 000060  DCC7 000B                            LDB,B5   TRAPTYP$,AUTO
          1 000062  A847 0009                            LDR,R2   J,AUTO
          1 000064  E825                                 LDR,R6   ,B5,R2
          1 000065  EF36                                 STR,R6   ,B6,R3

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:81   
      420     1265    5                       END;

   1265   1 000066  8AC7 0009                            INC      J,AUTO
          1 000068  E847 0009                            LDR,R6   J,AUTO
          1 00006A  6D03                                 CMV,R6   3
          1 00006B  03EF                                 BLE      s:1264,SPREL

      421     1266    4                    END;

      422     1267    3                 END;

   1267   1 00006C  8AC7 0008                            INC      I,AUTO
          1 00006E  E847 0008                            LDR,R6   I,AUTO
          1 000070  6D03                                 CMV,R6   3
          1 000071  0381 FF9D                            BLE      s:1248,PREL

      423     1268    2              END;

   1268   1 000073  0F81 00F1                            B        s:1325,PREL

      424     1269    1           ELSE
      425     1270    2           DO CASE(GD$MSG.KTI.CMD_TYPE);

   1270   1 000075  DCC7 0006                            LDB,B5   @BUFFER,AUTO
          1 000077  B845 0002                            LDR,R3   2,B5
          1 000079  B570 00FF                            AND,R3   255,IMO
          1 00007B  3D04                                 CMV,R3   4
          1 00007C  0281 00E8                            BGE      s:1325,PREL
          1 00007E  A830 0000 0084  01                   LDR,R2   s:1270+15,R3
          1 000081  83A0 0000 0088  01                   JMP      s:1272,R2
          1 000084       00DD                            DC       s:1325,PREL
          1 000085       0000                            DC       s:1272,PREL
          1 000086       006D                            DC       s:1297,PREL
          1 000087       00DA                            DC       s:1322,PREL

      426     1271    2            CASE(%GD#KEEP_CMD);

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:82   
      427     1272    3              DO I = 0 TO 5;

   1272   1 000088  8747 0008                            CL       I,AUTO

      428     1273    4                 IF GD$MSG.KTI.KEEP(I) THEN DO;

   1273   1 00008A  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 00008C  B847 0008                            LDR,R3   I,AUTO
          1 00008E  3E10                                 ADV,R3   16
          1 00008F  82B6                                 LB       ,B6,R3
          1 000090  0581 005B                            BBF      s:1295,PREL

      429     1274    5                    DO CASE(I);

   1274   1 000092  A847 0008                            LDR,R2   I,AUTO
          1 000094  2D06                                 CMV,R2   6
          1 000095  0281 0041                            BGE      s:1290,PREL
          1 000097  9820 0000 009D  01                   LDR,R1   s:1274+11,R2
          1 00009A  8390 0000 00A3  01                   JMP      s:1276,R1
          1 00009D       0000                            DC       s:1276,PREL
          1 00009E       0007                            DC       s:1278,PREL
          1 00009F       000E                            DC       s:1280,PREL
          1 0000A0       0015                            DC       s:1282,PREL
          1 0000A1       001C                            DC       s:1284,PREL
          1 0000A2       0029                            DC       s:1287,PREL

      430     1275    5                     CASE(%KTI_MCL);

      431     1276    5                       TRAPTYP$ = ADDR(USER_KEEP.MCL);

   1276   1 0000A3  DB80 0000 0000  00                   LAB,B5   USER_KEEP
          1 0000A6  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 0000A8  0F81 002E                            B        s:1290,PREL

      432     1277    5                     CASE(%KTI_EVENT);

      433     1278    5                       TRAPTYP$ = ADDR(USER_KEEP.EVN);
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:83   

   1278   1 0000AA  DB80 0000 0004  00                   LAB,B5   USER_KEEP+4
          1 0000AD  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 0000AF  0F81 0027                            B        s:1290,PREL

      434     1279    5                     CASE(%KTI_BREAK);

      435     1280    5                       TRAPTYP$ = ADDR(USER_KEEP.BRK);

   1280   1 0000B1  DB80 0000 000C  00                   LAB,B5   USER_KEEP+12
          1 0000B4  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 0000B6  0F81 0020                            B        s:1290,PREL

      436     1281    5                     CASE(%KTI_XCON);

      437     1282    5                       TRAPTYP$ = ADDR(USER_KEEP.XCN);

   1282   1 0000B8  DB80 0000 0008  00                   LAB,B5   USER_KEEP+8
          1 0000BB  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 0000BD  0F81 0019                            B        s:1290,PREL

      438     1283    5                     CASE(%KTI_TRAP);

      439     1284    5                       TRAPTYP$ = ADDR(USER_KEEP.TRP);

   1284   1 0000BF  DB80 0000 0010  00                   LAB,B5   USER_KEEP+16
          1 0000C2  DFC7 000B                            STB,B5   TRAPTYP$,AUTO

      440     1285    5                       GD_DATA.GD.IGNARITH = '0'B;

   1285   1 0000C4  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 0000C7  8844 014C                            LBF,'8000'X       332,B4
          1 0000C9       8000
          1 0000CA  0F81 000C                            B        s:1290,PREL

      441     1286    5                     CASE(%KTI_ARITHMETIC);

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:84   
      442     1287    5                       TRAPTYP$ = ADDR(USER_KEEP.ARI);

   1287   1 0000CC  DB80 0000 0014  00                   LAB,B5   USER_KEEP+20
          1 0000CF  DFC7 000B                            STB,B5   TRAPTYP$,AUTO

      443     1288    5                       GD_DATA.GD.IGNARITH = '0'B;

   1288   1 0000D1  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 0000D4  8844 014C                            LBF,'8000'X       332,B4
          1 0000D6       8000

      444     1289    5                     END;

      445     1290    5                    DO J = 0 TO 3;

   1290   1 0000D7  8747 0009                            CL       J,AUTO

      446     1291    5                      GD_DATA.DELTAINFO.TRAP_FLAGS(J) = GD_DATA.DELTAINFO.TRAP_FLAGS(J
              1291                                ) |

   1291   1 0000D9  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 0000DC  B847 0009                            LDR,R3   J,AUTO
          1 0000DE  3E02                                 ADV,R3   2
          1 0000DF  DCC7 000B                            LDB,B5   TRAPTYP$,AUTO
          1 0000E1  A847 0009                            LDR,R2   J,AUTO
          1 0000E3  E836                                 LDR,R6   ,B6,R3
          1 0000E4  E425                                 OR,R6    ,B5,R2
          1 0000E5  EF36                                 STR,R6   ,B6,R3

      447     1292    5                         TRAPTYP$->TRAPFLGS(J);
      448     1293    5                       END;

   1293   1 0000E6  8AC7 0009                            INC      J,AUTO
          1 0000E8  E847 0009                            LDR,R6   J,AUTO
          1 0000EA  6D03                                 CMV,R6   3
          1 0000EB  03EE                                 BLE      s:1291,SPREL

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:85   
      449     1294    4                    END;

      450     1295    3                 END;

   1295   1 0000EC  8AC7 0008                            INC      I,AUTO
          1 0000EE  E847 0008                            LDR,R6   I,AUTO
          1 0000F0  6D05                                 CMV,R6   5
          1 0000F1  0381 FF98                            BLE      s:1273,PREL
          1 0000F3  0F81 0071                            B        s:1325,PREL

      451     1296    2            CASE(%GD#TRAP_CMD);

      452     1297    3              DO I = 0 TO 5;

   1297   1 0000F5  8747 0008                            CL       I,AUTO

      453     1298    4                 IF GD$MSG.KTI.TRAP(I) THEN DO;

   1298   1 0000F7  ECC7 0006                            LDB,B6   @BUFFER,AUTO
          1 0000F9  B847 0008                            LDR,R3   I,AUTO
          1 0000FB  3E18                                 ADV,R3   24
          1 0000FC  82B6                                 LB       ,B6,R3
          1 0000FD  0581 005B                            BBF      s:1320,PREL

      454     1299    5                    DO CASE(I);

   1299   1 0000FF  A847 0008                            LDR,R2   I,AUTO
          1 000101  2D06                                 CMV,R2   6
          1 000102  0281 0041                            BGE      s:1315,PREL
          1 000104  9820 0000 010A  01                   LDR,R1   s:1299+11,R2
          1 000107  8390 0000 0110  01                   JMP      s:1301,R1
          1 00010A       0000                            DC       s:1301,PREL
          1 00010B       0007                            DC       s:1303,PREL
          1 00010C       000E                            DC       s:1305,PREL
          1 00010D       0015                            DC       s:1307,PREL
          1 00010E       001C                            DC       s:1309,PREL
          1 00010F       0029                            DC       s:1312,PREL
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:86   

      455     1300    5                     CASE(%KTI_MCL);

      456     1301    5                       TRAPTYP$ = ADDR(USER_TRAP.MCL);

   1301   1 000110  DB80 0000 0018  00                   LAB,B5   USER_TRAP
          1 000113  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 000115  0F81 002E                            B        s:1315,PREL

      457     1302    5                     CASE(%KTI_EVENT);

      458     1303    5                       TRAPTYP$ = ADDR(USER_TRAP.EVN);

   1303   1 000117  DB80 0000 001C  00                   LAB,B5   USER_TRAP+4
          1 00011A  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 00011C  0F81 0027                            B        s:1315,PREL

      459     1304    5                     CASE(%KTI_BREAK);

      460     1305    5                       TRAPTYP$ = ADDR(USER_TRAP.BRK);

   1305   1 00011E  DB80 0000 0024  00                   LAB,B5   USER_TRAP+12
          1 000121  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 000123  0F81 0020                            B        s:1315,PREL

      461     1306    5                     CASE(%KTI_XCON);

      462     1307    5                       TRAPTYP$ = ADDR(USER_TRAP.XCN);

   1307   1 000125  DB80 0000 0020  00                   LAB,B5   USER_TRAP+8
          1 000128  DFC7 000B                            STB,B5   TRAPTYP$,AUTO
          1 00012A  0F81 0019                            B        s:1315,PREL

      463     1308    5                     CASE(%KTI_TRAP);

      464     1309    5                       TRAPTYP$ = ADDR(USER_TRAP.TRP);

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:87   
   1309   1 00012C  DB80 0000 0028  00                   LAB,B5   USER_TRAP+16
          1 00012F  DFC7 000B                            STB,B5   TRAPTYP$,AUTO

      465     1310    5                       GD_DATA.GD.IGNARITH = '0'B;

   1310   1 000131  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000134  8844 014C                            LBF,'8000'X       332,B4
          1 000136       8000
          1 000137  0F81 000C                            B        s:1315,PREL

      466     1311    5                     CASE(%KTI_ARITHMETIC);

      467     1312    5                       TRAPTYP$ = ADDR(USER_TRAP.ARI);

   1312   1 000139  DB80 0000 002C  00                   LAB,B5   USER_TRAP+20
          1 00013C  DFC7 000B                            STB,B5   TRAPTYP$,AUTO

      468     1313    5                       GD_DATA.GD.IGNARITH = '0'B;

   1313   1 00013E  CC80 0000 0000  xsym                 LDB,B4   GD$DELTA_DATA$
          1 000141  8844 014C                            LBF,'8000'X       332,B4
          1 000143       8000

      469     1314    5                     END;

      470     1315    5                    DO J = 0 TO 3;

   1315   1 000144  8747 0009                            CL       J,AUTO

      471     1316    5                      GD_DATA.DELTAINFO.TRAP_FLAGS(J) = GD_DATA.DELTAINFO.TRAP_FLAGS(J
              1316                                ) &

   1316   1 000146  EC80 0000 0000  xsym                 LDB,B6   GD$DELTA_DATA$
          1 000149  B847 0009                            LDR,R3   J,AUTO
          1 00014B  3E02                                 ADV,R3   2
          1 00014C  DCC7 000B                            LDB,B5   TRAPTYP$,AUTO
          1 00014E  A847 0009                            LDR,R2   J,AUTO
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:88   
          1 000150  E836                                 LDR,R6   ,B6,R3
          1 000151  E525                                 AND,R6   ,B5,R2
          1 000152  EF36                                 STR,R6   ,B6,R3

      472     1317    5                         TRAPTYP$->TRAPFLGS(J);
      473     1318    5                       END;

   1318   1 000153  8AC7 0009                            INC      J,AUTO
          1 000155  E847 0009                            LDR,R6   J,AUTO
          1 000157  6D03                                 CMV,R6   3
          1 000158  03EE                                 BLE      s:1316,SPREL

      474     1319    4                    END;

      475     1320    3                 END;

   1320   1 000159  8AC7 0008                            INC      I,AUTO
          1 00015B  E847 0008                            LDR,R6   I,AUTO
          1 00015D  6D05                                 CMV,R6   5
          1 00015E  0381 FF98                            BLE      s:1298,PREL
          1 000160  0F81 0004                            B        s:1325,PREL

      476     1321    2            CASE(%GD#IGNORE_CMD);

      477     1322    2              GD_DATA.GD.IGNARITH = '1'B;

   1322   1 000162  8946 014C                            LBT,'8000'X       332,B6
   1322   1 000164       8000

      478     1323    2            END;

      479     1324        /**/
      480     1325    1           CALL GDI$SEND_ERROR_RESPONSE(SIZE,BUFFER,%GD#RSPACK);

   1325   1 000165  EBF0 0023                            LAB,B6   35,IMO
          1 000167  EFC7 0012                            STB,B6   TRAPTYP$+7,AUTO
          1 000169  DCC7 0006                            LDB,B5   @BUFFER,AUTO
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:89   
          1 00016B  DFC7 0010                            STB,B5   TRAPTYP$+5,AUTO
          1 00016D  CCC7 0004                            LDB,B4   @SIZE,AUTO
          1 00016F  CFC7 000E                            STB,B4   TRAPTYP$+3,AUTO
          1 000171  BBC7 000E                            LAB,B3   TRAPTYP$+3,AUTO
          1 000173  CBF0 0300                            LAB,B4   768,IMO
          1 000175  E380 0000 0000  xent                 LNJ,B6   GDI$SEND_ERROR_RESPONSE
          1 000178       0001                            DC       s:1326,PREL

      481     1326    1           RETURN;

   1326   1 000179  C380 0000 0000  xent                 LNJ,B4   X6A_ARET
      482     1327        /**/
      483     1328    1   END GDU$KTI;

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:90   
--  Include file information  --

   GD$MSG_M.:E05TOU  is referenced.
   GDA_EQUS_E.:E05TOU  is referenced.
   GD_EQUS_E.:E05TOU  is referenced.
   GD_DATA_M.:E05TOU  is referenced.
   GD_STATIC_DATA.:E05TOU  cannot be made into a system file and is referenced.
   LCP_6.:E05TOU  cannot be made into a system file and is referenced.
   G_LCP6_E.:E05TOU  was found in the system file and is referenced.
   GT_LCP6_M.:E05TOU  was found in the system file and is referenced.
   KI_CP6.:E05TOU  was found in the system file and is referenced.
   GF_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GM_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GU_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GJ_LCP6_M.:E05TOU  was found in the system file and is referenced.
   GH_LCP6_M.:E05TOU  was found in the system file and is referenced.
      No diagnostics issued in procedure GDU$KTI.
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:91   

 **** Variables and constants ****

  ****  Section 000 RoData GDU$KTI

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(384)   r     1 USER_KEEP                 18-0-0/w STRC(384)   r     1 USER_TRAP
    30-0-0/w STRC(256)   r     1 XDEL_KEEP

  ****  Auto variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     6-0-0/w PTR         r     1 @BUFFER                    4-0-0/w PTR         r     1 @SIZE
    *0-0-0/w ACHR        r     1 BUFFER                    *0-0-0/w STRC(3344)  r     1 GD$MSG
     8-0-0/w UBIN(16)    r     1 I                          9-0-0/w UBIN(16)    r     1 J
    *0-0-0/w UBIN(16)    r     1 SIZE                       B-0-0/w PTR         r     1 TRAPTYP$

  ****  SYMREF variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w PTR         r     1 GD$DELTA_DATA$

  ****  BASED and DCB variables  ****

  ****  Scalars and arrays  ****
HexLoc.c.b A Datatyp(siz) R M Lvl/name                 HexLoc.c.b A Datatyp(siz) R M Lvl/name

     0-0-0/w STRC(16704) r     1 GD_DATA
     0-0-0/w BIT (16)    r     1 TRAPFLGS(0:3)

PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:92   

   Procedure GDU$KTI requires 380 words for executable code.
   Procedure GDU$KTI requires 20 words of local(AUTO) storage.

    No errors detected in file GDU$USE.:E05TSI    .
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:93   
          *** CROSS REFERENCE LISTING ***
**     DENOTES     IDENTIFIER DEFINITION
<<                 IDENTIFIER'S VALUE SET
>>                 IDENTIFIER'S VALUE USED
<>                 IDENTIFIER SET AND/OR USED
--                 IDENTIFIER REFERENCED
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:94   
          MINI XREF LISTING

BUFFER
      1062**DCL         6--PROC     1080--REDEF    1325<>CALL
G$TSA.ISA.P$$
       387**DCL       387--REDEF
G$TSA.P$$
       258**DCL       258--REDEF     259--REDEF
GD$DELTA_DATA$
      1013**DCL      1027--IMP-PTR  1246>>IF       1252>>ASSIGN   1255>>ASSIGN   1258>>ASSIGN   1261>>ASSIGN
      1264>>ASSIGN   1285>>ASSIGN   1288>>ASSIGN   1291>>ASSIGN   1291>>ASSIGN   1310>>ASSIGN   1313>>ASSIGN
      1316>>ASSIGN   1316>>ASSIGN   1322>>ASSIGN
GD$MSG.BRKRQS.IF$CONST.SIZE
      1131**DCL      1131--REDEF
GD$MSG.BRKRQS.IF$CONST.TEXT
      1131**DCL      1132--REDEF    1132--REDEF    1133--REDEF    1134--REDEF
GD$MSG.BRKRSP.BRK#
      1145**DCL      1145--REDEF
GD$MSG.BRKRSP.USER#
      1145**DCL      1145--REDEF
GD$MSG.KTI.CMD_TYPE
      1212**DCL      1270>>DOCASE
GD$MSG.KTI.KEEP
      1204**DCL      1248>>IF       1273>>IF
GD$MSG.KTI.TRAP
      1208**DCL      1298>>IF
GD$MSG.LETMEM_D.VALUE.SIZE
      1103**DCL      1103--REDEF
GD$MSG.LETMEM_D.VALUE.TEXT
      1104**DCL      1104--REDEF    1104--REDEF    1105--REDEF    1106--REDEF
GD$MSG.MESSAGE
      1085**DCL      1085--REDEF    1086--REDEF    1086--REDEF    1087--REDEF    1098--REDEF    1111--REDEF
      1116--REDEF    1123--REDEF    1139--REDEF    1144--REDEF    1150--REDEF    1151--REDEF    1180--REDEF
      1182--REDEF    1193--REDEF    1200--REDEF    1212--REDEF
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:95   
GD$MSG.SUBFNC
      1080**DCL      1080--REDEF    1084--REDEF
GD$MSG.TSA.I
      1152**DCL      1152--REDEF
GD$MSG.TSA.S
      1154**DCL      1154--REDEF
GD$MSG.USERQS.ASDT$
      1180**DCL      1180--REDEF    1181--REDEF
GDI$SEND_ERROR_RESPONSE
      1222**DCL-ENT  1325--CALL
GD_DATA.DELTAINFO.TRAP_FLAGS
      1027**DCL      1264<<ASSIGN   1291<<ASSIGN   1291>>ASSIGN   1316<<ASSIGN   1316>>ASSIGN
GD_DATA.GD.DYNSP$
      1040**DCL      1040--REDEF
GD_DATA.GD.IGNARITH
      1034**DCL      1285<<ASSIGN   1288<<ASSIGN   1310<<ASSIGN   1313<<ASSIGN   1322<<ASSIGN
GD_DATA.GD.KEEPMON
      1037**DCL      1252<<ASSIGN   1255<<ASSIGN   1258<<ASSIGN   1261<<ASSIGN
GD_DATA.GD.MODE
      1030**DCL      1246>>IF
GD_DATA.GD.STEP_BRKPNT.ADR$
      1041**DCL      1042--REDEF
GD_DATA.GD.STEP_BRKPNT.START$
      1042**DCL      1042--REDEF
I
      1219**DCL      1247<<DOINDEX  1248>>IF       1249>>DOCASE   1272<<DOINDEX  1273>>IF       1274>>DOCASE
      1297<<DOINDEX  1298>>IF       1299>>DOCASE
J
      1220**DCL      1263<<DOINDEX  1264>>ASSIGN   1264>>ASSIGN   1290<<DOINDEX  1291>>ASSIGN   1291>>ASSIGN
      1291>>ASSIGN   1315<<DOINDEX  1316>>ASSIGN   1316>>ASSIGN   1316>>ASSIGN
SIZE
      1061**DCL         6--PROC     1062--IMP-SIZ  1325<>CALL     1325>>CALL
TRAPFLGS
      1225**DCL      1264>>ASSIGN   1291>>ASSIGN   1316>>ASSIGN
TRAPTYP$
      1224**DCL      1251<<ASSIGN   1254<<ASSIGN   1257<<ASSIGN   1260<<ASSIGN   1264>>ASSIGN   1276<<ASSIGN
PL6.E3A0      #003=GDU$KTI File=GDU$USE.:E05TSI                                  TUE 07/29/97 21:31 Page:96   
      1278<<ASSIGN   1280<<ASSIGN   1282<<ASSIGN   1284<<ASSIGN   1287<<ASSIGN   1291>>ASSIGN   1301<<ASSIGN
      1303<<ASSIGN   1305<<ASSIGN   1307<<ASSIGN   1309<<ASSIGN   1312<<ASSIGN   1316>>ASSIGN
USER_KEEP.ARI
      1232**DCL      1287--ASSIGN
USER_KEEP.BRK
      1230**DCL      1280--ASSIGN
USER_KEEP.EVN
      1228**DCL      1278--ASSIGN
USER_KEEP.MCL
      1227**DCL      1276--ASSIGN
USER_KEEP.TRP
      1231**DCL      1284--ASSIGN
USER_KEEP.XCN
      1229**DCL      1282--ASSIGN
USER_TRAP.ARI
      1239**DCL      1312--ASSIGN
USER_TRAP.BRK
      1237**DCL      1305--ASSIGN
USER_TRAP.EVN
      1235**DCL      1303--ASSIGN
USER_TRAP.MCL
      1234**DCL      1301--ASSIGN
USER_TRAP.TRP
      1238**DCL      1309--ASSIGN
USER_TRAP.XCN
      1236**DCL      1307--ASSIGN
XDEL_KEEP.ALL
      1241**DCL      1251--ASSIGN
XDEL_KEEP.MON
      1243**DCL      1257--ASSIGN
XDEL_KEEP.NON
      1242**DCL      1254--ASSIGN
XDEL_KEEP.SCR
      1244**DCL      1260--ASSIGN
